================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande deux entrées à l'utilisateur, séparées par un espace, et les convertit en entiers :
# La première valeur représente le nombre total d'éléments (N)
# La deuxième valeur représente le nombre d'éléments à exclure (K)
N, K = map(int, input().split())

# Demande une deuxième entrée de l'utilisateur représentant les hauteurs.
# Divise la chaîne entrée en une liste de chaînes, puis convertit chaque élément de cette liste en entier.
# Place le résultat dans une liste nommée 'H'
H = list(map(int, input().split()))

# Vérifie si le nombre total d'éléments (N) est inférieur ou égal au nombre d'éléments à exclure (K)
if N <= K:
    # Si c'est le cas, cela signifie qu'il n'y a aucun élément à considérer ou qu'ils sont tous exclus
    # Affiche "0" à l'écran
    print("0")
    # Quitte le programme immédiatement sans exécuter les instructions suivantes
    exit()

# Initialise une variable pour stocker la réponse finale. Elle est mise à zéro car on va additionner dessus.
ans = 0

# Définition d'une fonction 'quicksort' permettant de trier une liste d'entiers 'a' par ordre croissant.
def quicksort(a):
    # Convertit la liste en un ensemble (set) pour éliminer les doublons, puis vérifie sa taille.
    # Si la taille de l'ensemble est inférieure à 2, cela signifie que tous les éléments sont identiques,
    # ou que la liste est vide ou a un seul élément. La liste triée est donc identique à la liste d'origine.
    if len(set(a)) < 2:
        return a
    # Crée une liste vide qui contiendra les éléments inférieurs ou égaux au pivot. Elle s'appelle 'left'
    left = []
    # Le pivot (élément de référence) est choisi comme étant le premier élément de la liste ; on l'enlève de la liste originale.
    center = a.pop(0)
    # Crée une autre liste vide pour stocker les éléments strictement supérieurs au pivot. Celle-ci s'appelle 'right'
    right = []
    # Parcourt chaque élément restant dans la liste
    for i in a:
        # Si l'élément courant est strictement supérieur au pivot,
        if i > center:
            # Ajoute l'élément à la liste 'right'
            right.append(i)
        else:
            # Sinon (c'est-à-dire inférieur ou égal), ajoute l'élément à la liste 'left'
            left.append(i)
    # Trie récursivement la liste 'left'
    left = quicksort(left)
    # Trie récursivement la liste 'right'
    right = quicksort(right)
    # Ajoute le pivot à la fin de la liste triée 'left'
    left.append(center)
    # Ajoute (concatène) toute la liste triée 'right' à la suite de 'left'
    left.extend(right)
    # Retourne la liste triée (qui combine left, center, et right)
    return left

# Trie la liste H grâce à notre fonction de tri personnalisé 'quicksort'
# Après cette étape, H contient les mêmes éléments que précédemment mais rangés par ordre croissant
H = quicksort(H)

# Parcourt les N-K premiers éléments de la liste H triée (c'est-à-dire les plus petits éléments)
for i in range(N-K):
    # Ajoute la valeur de chaque élément à la variable de réponse 'ans'
    ans += H[i]

# Affiche le résultat final, qui est la somme des N-K plus petits éléments de la liste H
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' deux' (ID: 10301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7775688171386719
    2. ' ' → logprob: -1.4025688171386719
    3. 's' → logprob: -1.7775688171386719
    4. ':' → logprob: -2.902568817138672
    5. ' de' → logprob: -3.402568817138672
    6. ''' → logprob: -4.902568817138672
    7. '```' → logprob: -5.402568817138672
    8. ' :' → logprob: -5.527568817138672
    9. '.' → logprob: -5.652568817138672
    10. ' d' → logprob: -5.652568817138672

Token 4: ' entr' (ID: 7072)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3552688956260681
    2. 's' → logprob: -2.855268955230713
    3. ' ' → logprob: -3.105268955230713
    4. '_' → logprob: -3.105268955230713
    5. ' :' → logprob: -3.355268955230713
    6. '#' → logprob: -3.605268955230713
    7. '```' → logprob: -4.105268955230713
    8. 'es' → logprob: -4.855268955230713
    9. ' ' → logprob: -4.980268955230713
    10. '=' → logprob: -4.980268955230713

Token 5: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.03887327015399933
    2. 'és' → logprob: -3.7888731956481934
    3. 'es' → logprob: -4.538873195648193
    4. 'tes' → logprob: -6.038873195648193
    5. 'ée' → logprob: -6.913873195648193
    6. 'êtes' → logprob: -6.913873195648193
    7. 'ies' → logprob: -8.913873672485352
    8. 'etes' → logprob: -9.413873672485352
    9. 'é' → logprob: -9.538873672485352
    10. 'ès' → logprob: -10.663873672485352

Token 6: ' à' (ID: 1221)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2595835328102112
    2. '```' → logprob: -1.8845834732055664
    3. 'i' → logprob: -3.6345834732055664
    4. '`' → logprob: -4.884583473205566
    5. '``' → logprob: -4.884583473205566
    6. 'e' → logprob: -5.134583473205566
    7. 'a' → logprob: -5.259583473205566
    8. '_' → logprob: -5.259583473205566
    9. 'n' → logprob: -5.509583473205566
    10. 'input' → logprob: -5.759583473205566

Token 7: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0083233080804348
    2. ' l' → logprob: -4.8833231925964355
    3. ' ' → logprob: -8.133323669433594
    4. 'la' → logprob: -9.508323669433594
    5. 'util' → logprob: -9.633323669433594
    6. '	l' → logprob: -9.758323669433594
    7. 'user' → logprob: -10.383323669433594
    8. ' ' → logprob: -10.633323669433594
    9. ''utilisateur' → logprob: -10.883323669433594
    10. '  ' → logprob: -11.008323669433594

Token 8: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.09849634021520615
    2. ''' → logprob: -2.598496437072754
    3. 'u' → logprob: -4.223496437072754
    4. '’utilisateur' → logprob: -6.223496437072754
    5. '')' → logprob: -7.598496437072754
    6. ''util' → logprob: -7.723496437072754
    7. ''us' → logprob: -7.848496437072754
    8. '\'' → logprob: -8.598496437072754
    9. ''user' → logprob: -8.598496437072754
    10. ''espace' → logprob: -8.723496437072754

Token 9: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.541824221611023
    2. '`' → logprob: -1.666824221611023
    3. 'input' → logprob: -2.0418243408203125
    4. '```' → logprob: -2.2918243408203125
    5. '\n' → logprob: -2.6668243408203125
    6. 'x' → logprob: -2.9168243408203125
    7. 'i' → logprob: -3.1668243408203125
    8. 'user' → logprob: -3.2918243408203125
    9. 'e' → logprob: -3.2918243408203125
    10. 'u' → logprob: -3.7918243408203125

Token 10: ' sépar' (ID: 97160)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2367584705352783
    2. 's' → logprob: -1.9867584705352783
    3. '#' → logprob: -2.1117584705352783
    4. 'n' → logprob: -2.1117584705352783
    5. 'print' → logprob: -2.9867584705352783
    6. '```' → logprob: -2.9867584705352783
    7. ' ' → logprob: -3.6117584705352783
    8. ' x' → logprob: -3.7367584705352783
    9. '\n' → logprob: -3.8617584705352783
    10. '`' → logprob: -3.8617584705352783

Token 11: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.026032382622361183
    2. 'é' → logprob: -4.026032447814941
    3. 'ée' → logprob: -5.401032447814941
    4. 'és' → logprob: -5.901032447814941
    5. ' par' → logprob: -8.276032447814941
    6. 'er' → logprob: -8.276032447814941
    7. '```' → logprob: -10.401032447814941
    8. 'ément' → logprob: -11.026032447814941
    9. '#' → logprob: -11.026032447814941
    10. 'par' → logprob: -11.276032447814941

Token 12: ' par' (ID: 686)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.8467164039611816
    2. ' par' → logprob: -1.2217164039611816
    3. 'par' → logprob: -1.4717164039611816
    4. ',' → logprob: -3.3467164039611816
    5. ' ' → logprob: -5.846716403961182
    6. '_par' → logprob: -5.846716403961182
    7. 'e' → logprob: -6.471716403961182
    8. 's' → logprob: -7.096716403961182
    9. ' ' → logprob: -7.221716403961182
    10. ')' → logprob: -7.471716403961182

Token 13: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.6349911093711853
    2. 'une' → logprob: -0.8849911093711853
    3. ' un' → logprob: -3.63499116897583
    4. ''un' → logprob: -4.50999116897583
    5. ' une' → logprob: -5.00999116897583
    6. '```' → logprob: -5.63499116897583
    7. 'es' → logprob: -6.63499116897583
    8. ''une' → logprob: -6.75999116897583
    9. 'space' → logprob: -7.38499116897583
    10. ''' → logprob: -7.50999116897583

Token 14: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.05655176565051079
    2. 'esp' → logprob: -4.681551933288574
    3. ' espace' → logprob: -4.931551933288574
    4. ''espace' → logprob: -4.931551933288574
    5. 'space' → logprob: -5.181551933288574
    6. ',' → logprob: -5.431551933288574
    7. 's' → logprob: -5.431551933288574
    8. '_' → logprob: -5.556551933288574
    9. 'e' → logprob: -5.931551933288574
    10. '```' → logprob: -6.181551933288574

Token 15: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6721184253692627
    2. 'n' → logprob: -2.1721184253692627
    3. 'input' → logprob: -2.6721184253692627
    4. 'e' → logprob: -2.6721184253692627
    5. 'user' → logprob: -2.9221184253692627
    6. 'u' → logprob: -2.9221184253692627
    7. 'x' → logprob: -3.0471184253692627
    8. '`' → logprob: -3.1721184253692627
    9. '```' → logprob: -4.047118186950684
    10. 'a' → logprob: -5.547118186950684

Token 16: ' et' (ID: 859)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3372671604156494
    2. 'input' → logprob: -1.3372671604156494
    3. 'n' → logprob: -2.2122671604156494
    4. 'e' → logprob: -2.8372671604156494
    5. 'x' → logprob: -2.8372671604156494
    6. ',' → logprob: -3.3372671604156494
    7. '`' → logprob: -3.3372671604156494
    8. 'a' → logprob: -3.4622671604156494
    9. 's' → logprob: -3.7122671604156494
    10. 'user' → logprob: -3.8372671604156494

Token 17: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2146390676498413
    2. 'les' → logprob: -1.7146390676498413
    3. 'aff' → logprob: -1.8396390676498413
    4. '#' → logprob: -2.589639186859131
    5. 's' → logprob: -3.089639186859131
    6. 'input' → logprob: -3.214639186859131
    7. 'val' → logprob: -3.839639186859131
    8. 'stock' → logprob: -4.089639186859131
    9. ' les' → logprob: -4.214639186859131
    10. 'l' → logprob: -4.214639186859131

Token 18: ' convert' (ID: 8452)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.18171431124210358
    2. 'print' → logprob: -2.1817142963409424
    3. 'split' → logprob: -4.1817145347595215
    4. 's' → logprob: -5.0567145347595215
    5. 'convert' → logprob: -5.3067145347595215
    6. 'return' → logprob: -5.8067145347595215
    7. 'concat' → logprob: -5.9317145347595215
    8. 'sé' → logprob: -6.0567145347595215
    9. ' affiche' → logprob: -6.3067145347595215
    10. 'é' → logprob: -6.4317145347595215

Token 19: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.005601903423666954
    2. 'i' → logprob: -6.25560188293457
    3. 'issent' → logprob: -6.50560188293457
    4. 'e' → logprob: -7.25560188293457
    5. 'ir' → logprob: -8.25560188293457
    6. 'issez' → logprob: -8.25560188293457
    7. 'is' → logprob: -8.38060188293457
    8. 'ies' → logprob: -8.63060188293457
    9. 'issant' → logprob: -8.88060188293457
    10. 'es' → logprob: -9.63060188293457

Token 20: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5946484804153442
    2. '_' → logprob: -1.8446484804153442
    3. 'x' → logprob: -1.9696484804153442
    4. 'i' → logprob: -2.5946483612060547
    5. '`' → logprob: -2.7196483612060547
    6. ''' → logprob: -2.8446483612060547
    7. 'e' → logprob: -2.9696483612060547
    8. 'n' → logprob: -3.0946483612060547
    9. '```' → logprob: -3.2196483612060547
    10. 'input' → logprob: -3.3446483612060547

Token 21: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.1810680627822876
    2. 'int' → logprob: -1.3060680627822876
    3. ' des' → logprob: -2.181067943572998
    4. ' int' → logprob: -2.431067943572998
    5. ' ent' → logprob: -2.556067943572998
    6. 'de' → logprob: -2.806067943572998
    7. ' deux' → logprob: -3.056067943572998
    8. ' ' → logprob: -4.681067943572998
    9. 'des' → logprob: -4.931067943572998
    10. ' integers' → logprob: -5.181067943572998

Token 22: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0041059465147554874
    2. 'ier' → logprob: -6.129106044769287
    3. 't' → logprob: -7.129106044769287
    4. 'r' → logprob: -7.754106044769287
    5. 'i' → logprob: -8.504105567932129
    6. '```' → logprob: -8.879105567932129
    7. 'e' → logprob: -9.004105567932129
    8. 'ers' → logprob: -10.504105567932129
    9. 're' → logprob: -10.629105567932129
    10. 'g' → logprob: -10.879105567932129

Token 23: ' :
' (ID: 10039)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.86137455701828
    2. 'n' → logprob: -1.3613746166229248
    3. 'e' → logprob: -1.9863746166229248
    4. 'a' → logprob: -2.361374616622925
    5. 'i' → logprob: -3.111374616622925
    6. '```' → logprob: -4.111374378204346
    7. 'u' → logprob: -4.611374378204346
    8. '`' → logprob: -5.736374378204346
    9. 'v' → logprob: -5.736374378204346
    10. 'user' → logprob: -5.736374378204346

Token 24: '#' (ID: 2)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.216949224472046
    2. 'x' → logprob: -1.216949224472046
    3. 'n' → logprob: -1.466949224472046
    4. 'a' → logprob: -2.591949224472046
    5. 'e' → logprob: -3.091949224472046
    6. '`' → logprob: -4.091949462890625
    7. '```' → logprob: -4.216949462890625
    8. 'v' → logprob: -4.591949462890625
    9. 'u' → logprob: -5.341949462890625
    10. '#' → logprob: -6.216949462890625

Token 25: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23126226663589478
    2. 'x' → logprob: -1.73126220703125
    3. 'n' → logprob: -4.48126220703125
    4. 'ent' → logprob: -4.98126220703125
    5. 'entr' → logprob: -5.73126220703125
    6. 'nombre' → logprob: -5.98126220703125
    7. 'val' → logprob: -6.73126220703125
    8. ' a' → logprob: -7.10626220703125
    9. 'entrée' → logprob: -7.10626220703125
    10. 'num' → logprob: -7.35626220703125

Token 26: ' première' (ID: 23423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4168124198913574
    2. 'a' → logprob: -1.9168124198913574
    3. ' a' → logprob: -2.1668124198913574
    4. ' valeur' → logprob: -4.416812419891357
    5. ' s' → logprob: -4.541812419891357
    6. 'val' → logprob: -5.166812419891357
    7. ' somme' → logprob: -5.166812419891357
    8. ' ' → logprob: -5.291812419891357
    9. ' val' → logprob: -5.791812419891357
    10. ' liste' → logprob: -5.791812419891357

Token 27: ' valeur' (ID: 41664)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21501153707504272
    2. ' ' → logprob: -2.4650115966796875
    3. 'val' → logprob: -3.2150115966796875
    4. 'l' → logprob: -4.5900115966796875
    5. 'entr' → logprob: -4.7150115966796875
    6. 'n' → logprob: -5.0900115966796875
    7. 's' → logprob: -5.2150115966796875
    8. 'entrée' → logprob: -5.2150115966796875
    9. 'i' → logprob: -5.5900115966796875
    10. 'ent' → logprob: -5.8400115966796875

Token 28: ' représente' (ID: 88912)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3374588191509247
    2. ' est' → logprob: -2.712458848953247
    3. ' ' → logprob: -2.962458848953247
    4. '_' → logprob: -3.212458848953247
    5. 'a' → logprob: -3.462458848953247
    6. ' a' → logprob: -4.462458610534668
    7. ' à' → logprob: -4.837458610534668
    8. 'ent' → logprob: -4.837458610534668
    9. 'est' → logprob: -5.087458610534668
    10. ',' → logprob: -5.337458610534668

Token 29: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.796830952167511
    2. ' la' → logprob: -1.5468308925628662
    3. 'l' → logprob: -2.046830892562866
    4. ' l' → logprob: -2.296830892562866
    5. 'le' → logprob: -2.796830892562866
    6. ' un' → logprob: -3.546830892562866
    7. ' ' → logprob: -5.546831130981445
    8. ' nombre' → logprob: -5.546831130981445
    9. 'la' → logprob: -5.921831130981445
    10. 'un' → logprob: -6.296831130981445

Token 30: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.030836718156933784
    2. ' nombre' → logprob: -3.655836820602417
    3. 'n' → logprob: -6.280836582183838
    4. 'nom' → logprob: -7.655836582183838
    5. 'niveau' → logprob: -8.530837059020996
    6. 'nb' → logprob: -8.655837059020996
    7. 's' → logprob: -8.780837059020996
    8. 'prem' → logprob: -8.905837059020996
    9. 'temps' → logprob: -9.030837059020996
    10. 'dé' → logprob: -9.030837059020996

Token 31: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24272353947162628
    2. '_d' → logprob: -1.9927235841751099
    3. ' ' → logprob: -2.8677234649658203
    4. 'd' → logprob: -5.11772346496582
    5. 's' → logprob: -5.49272346496582
    6. '_de' → logprob: -5.49272346496582
    7. ' d' → logprob: -5.86772346496582
    8. '_space' → logprob: -6.36772346496582
    9. '_total' → logprob: -6.61772346496582
    10. '_s' → logprob: -7.86772346496582

Token 32: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10161063075065613
    2. ' ' → logprob: -2.9766106605529785
    3. '_d' → logprob: -3.8516106605529785
    4. ' d' → logprob: -4.9766106605529785
    5. 'd' → logprob: -5.1016106605529785
    6. '_total' → logprob: -5.3516106605529785
    7. 's' → logprob: -6.2266106605529785
    8. '_de' → logprob: -6.2266106605529785
    9. ' de' → logprob: -7.6016106605529785
    10. 'total' → logprob: -7.9766106605529785

Token 33: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7053961753845215
    2. 'e' → logprob: -1.5803961753845215
    3. ''é' → logprob: -2.2053961753845215
    4. '_' → logprob: -3.2053961753845215
    5. 'é' → logprob: -3.3303961753845215
    6. 'a' → logprob: -3.8303961753845215
    7. ''a' → logprob: -4.5803961753845215
    8. 'élé' → logprob: -4.5803961753845215
    9. ''util' → logprob: -4.8303961753845215
    10. ''esp' → logprob: -4.8303961753845215

Token 34: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1653866171836853
    2. 'é' → logprob: -2.91538667678833
    3. 'él' → logprob: -3.41538667678833
    4. ''' → logprob: -4.66538667678833
    5. 'ét' → logprob: -4.66538667678833
    6. 'en' → logprob: -4.79038667678833
    7. 'util' → logprob: -5.16538667678833
    8. 'unit' → logprob: -5.54038667678833
    9. 'ex' → logprob: -6.29038667678833
    10. 'ele' → logprob: -6.29038667678833

Token 35: 'ments' (ID: 1626)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.684529185295105
    2. 'ments' → logprob: -0.934529185295105
    3. 'v' → logprob: -2.5595293045043945
    4. 'mé' → logprob: -5.6845293045043945
    5. '#' → logprob: -5.9345293045043945
    6. 'è' → logprob: -6.0595293045043945
    7. 'r' → logprob: -6.3095293045043945
    8. 'èves' → logprob: -6.3095293045043945
    9. 'èv' → logprob: -6.3095293045043945
    10. 'ts' → logprob: -6.6845293045043945

Token 36: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07485989481210709
    2. ',' → logprob: -3.324859857559204
    3. 'x' → logprob: -4.449860095977783
    4. 'e' → logprob: -4.824860095977783
    5. 's' → logprob: -5.199860095977783
    6. 'i' → logprob: -5.949860095977783
    7. 'nombre' → logprob: -6.324860095977783
    8. 'a' → logprob: -6.574860095977783
    9. ' n' → logprob: -7.199860095977783
    10. ' ,' → logprob: -7.574860095977783

Token 37: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16990211606025696
    2. ' )' → logprob: -2.2949020862579346
    3. 'n' → logprob: -3.0449020862579346
    4. ' n' → logprob: -6.169902324676514
    5. ',' → logprob: -7.044902324676514
    6. ')n' → logprob: -7.169902324676514
    7. 'd' → logprob: -7.294902324676514
    8. '_' → logprob: -7.544902324676514
    9. 's' → logprob: -7.544902324676514
    10. 'a' → logprob: -7.794902324676514

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002121353754773736
    2. ' )' → logprob: -6.502121448516846
    3. 's' → logprob: -8.252120971679688
    4. ',' → logprob: -8.752120971679688
    5. '),' → logprob: -9.252120971679688
    6. '):' → logprob: -11.002120971679688
    7. 'n' → logprob: -11.627120971679688
    8. '=' → logprob: -11.752120971679688
    9. '#' → logprob: -11.877120971679688
    10. ')
' → logprob: -12.002120971679688

Token 39: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0101027488708496
    2. '#' → logprob: -1.2601027488708496
    3. ',' → logprob: -1.5101027488708496
    4. 'x' → logprob: -2.7601027488708496
    5. '```' → logprob: -3.8851027488708496
    6. ' ,' → logprob: -4.88510274887085
    7. 'N' → logprob: -5.01010274887085
    8. ' n' → logprob: -5.26010274887085
    9. ' #' → logprob: -5.38510274887085
    10. ',
' → logprob: -5.51010274887085

Token 40: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1749502420425415
    2. 'n' → logprob: -1.1749502420425415
    3. 'val' → logprob: -1.9249502420425415
    4. 'values' → logprob: -2.299950122833252
    5. ' values' → logprob: -3.799950122833252
    6. ' #' → logprob: -3.924950122833252
    7. 'x' → logprob: -4.174950122833252
    8. ' valeurs' → logprob: -4.174950122833252
    9. ' n' → logprob: -4.549950122833252
    10. 'ent' → logprob: -4.924950122833252

Token 41: ' deuxième' (ID: 51664)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8215780854225159
    2. 'se' → logprob: -1.696578025817871
    3. ' seconde' → logprob: -1.696578025817871
    4. ' deuxième' → logprob: -1.821578025817871
    5. ' second' → logprob: -4.071578025817871
    6. 'second' → logprob: -5.571578025817871
    7. '#' → logprob: -6.446578025817871
    8. 's' → logprob: -6.446578025817871
    9. ' suivante' → logprob: -6.571578025817871
    10. ' secondes' → logprob: -6.821578025817871

Token 42: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.8031399846076965
    2. ' représente' → logprob: -1.0531399250030518
    3. ' ' → logprob: -2.1781399250030518
    4. 'val' → logprob: -3.1781399250030518
    5. '_val' → logprob: -4.553140163421631
    6. '_' → logprob: -4.803140163421631
    7. ' represents' → logprob: -5.803140163421631
    8. '_value' → logprob: -5.928140163421631
    9. ' val' → logprob: -5.928140163421631
    10. 'token' → logprob: -6.428140163421631

Token 43: ' représente' (ID: 88912)
  Prédit: ' représente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.017012260854244232
    2. 're' → logprob: -4.517012119293213
    3. ' correspond' → logprob: -6.892012119293213
    4. 'rep' → logprob: -7.142012119293213
    5. 'represent' → logprob: -7.517012119293213
    6. '#' → logprob: -7.642012119293213
    7. ' represents' → logprob: -7.767012119293213
    8. ' représ' → logprob: -7.767012119293213
    9. ' indique' → logprob: -7.892012119293213
    10. ' #' → logprob: -8.392012596130371

Token 44: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.24022740125656128
    2. ' la' → logprob: -2.615227460861206
    3. 'l' → logprob: -3.115227460861206
    4. 'le' → logprob: -3.115227460861206
    5. ' l' → logprob: -3.365227460861206
    6. ' ' → logprob: -4.490227222442627
    7. 'la' → logprob: -6.240227222442627
    8. ' the' → logprob: -6.490227222442627
    9. ' ' → logprob: -7.490227222442627
    10. 't' → logprob: -7.990227222442627

Token 45: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.22928759455680847
    2. ' nombre' → logprob: -1.8542876243591309
    3. 'se' → logprob: -4.354287624359131
    4. 's' → logprob: -4.979287624359131
    5. 'val' → logprob: -4.979287624359131
    6. 'élé' → logprob: -5.104287624359131
    7. 't' → logprob: -5.729287624359131
    8. 'k' → logprob: -6.104287624359131
    9. ' seuil' → logprob: -6.604287624359131
    10. 'tail' → logprob: -6.979287624359131

Token 46: ' d' (ID: 272)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6672937273979187
    2. ' d' → logprob: -1.0422937870025635
    3. ' maximal' → logprob: -3.1672937870025635
    4. ' de' → logprob: -4.042293548583984
    5. 'total' → logprob: -4.292293548583984
    6. '_' → logprob: -4.292293548583984
    7. ' ' → logprob: -4.292293548583984
    8. '_total' → logprob: -4.417293548583984
    9. ' maximum' → logprob: -4.542293548583984
    10. 'd' → logprob: -5.167293548583984

Token 47: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4867602288722992
    2. '_' → logprob: -1.9867602586746216
    3. 'élé' → logprob: -2.486760139465332
    4. ' éléments' → logprob: -2.986760139465332
    5. ''é' → logprob: -2.986760139465332
    6. ''esp' → logprob: -4.361760139465332
    7. 'é' → logprob: -4.611760139465332
    8. ' espaces' → logprob: -4.611760139465332
    9. ' ' → logprob: -4.736760139465332
    10. ''espace' → logprob: -5.236760139465332

Token 48: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.15252307057380676
    2. ''' → logprob: -2.4025230407714844
    3. 'é' → logprob: -3.7775230407714844
    4. ''é' → logprob: -4.402523040771484
    5. 'éc' → logprob: -6.027523040771484
    6. 'occ' → logprob: -6.277523040771484
    7. ''esp' → logprob: -6.527523040771484
    8. ''él' → logprob: -6.777523040771484
    9. ''occ' → logprob: -6.777523040771484
    10. ' éléments' → logprob: -7.277523040771484

Token 49: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.22612324357032776
    2. 'm' → logprob: -1.6011232137680054
    3. 'ment' → logprob: -7.851123332977295
    4. 'v' → logprob: -9.226122856140137
    5. 'men' → logprob: -9.851122856140137
    6. 'me' → logprob: -9.851122856140137
    7. 's' → logprob: -9.851122856140137
    8. '```' → logprob: -10.851122856140137
    9. 'nts' → logprob: -10.976122856140137
    10. 'mé' → logprob: -12.476122856140137

Token 50: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1255791038274765
    2. 's' → logprob: -2.6255791187286377
    3. ' _' → logprob: -4.875578880310059
    4. ' ' → logprob: -5.000578880310059
    5. '_s' → logprob: -5.125578880310059
    6. ')' → logprob: -5.750578880310059
    7. '[' → logprob: -5.750578880310059
    8. '_max' → logprob: -6.000578880310059
    9. ' )' → logprob: -6.375578880310059
    10. '_total' → logprob: -6.500578880310059

Token 51: ' excl' (ID: 57282)
  Prédit: ' supprimer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supprimer' → logprob: -0.7620086669921875
    2. ' retirer' → logprob: -1.6370086669921875
    3. ' afficher' → logprob: -2.6370086669921875
    4. 'sup' → logprob: -2.7620086669921875
    5. ' sélectionner' → logprob: -3.3870086669921875
    6. ' enlever' → logprob: -3.7620086669921875
    7. 'tr' → logprob: -3.8870086669921875
    8. ' prendre' → logprob: -4.1370086669921875
    9. ' excl' → logprob: -4.1370086669921875
    10. ' tr' → logprob: -4.2620086669921875

Token 52: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.13068929314613342
    2. 'u' → logprob: -2.2556893825531006
    3. 'uire' → logprob: -4.5056891441345215
    4. 'ur' → logprob: -5.6306891441345215
    5. 'us' → logprob: -6.2556891441345215
    6. 'uir' → logprob: -8.63068962097168
    7. '```' → logprob: -9.00568962097168
    8. 'user' → logprob: -9.13068962097168
    9. 'uer' → logprob: -9.25568962097168
    10. '#' → logprob: -9.50568962097168

Token 53: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22652117908000946
    2. 'N' → logprob: -1.6015211343765259
    3. '#' → logprob: -7.476521015167236
    4. '```' → logprob: -8.101521492004395
    5. 'x' → logprob: -8.851521492004395
    6. 'i' → logprob: -9.976521492004395
    7. '`' → logprob: -11.101521492004395
    8. 'v' → logprob: -12.101521492004395
    9. 'a' → logprob: -12.226521492004395
    10. 'e' → logprob: -12.476521492004395

Token 54: 'K' (ID: 42)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3091964721679688
    2. 'E' → logprob: -1.5591964721679688
    3. 'e' → logprob: -2.0591964721679688
    4. 'K' → logprob: -2.3091964721679688
    5. ' )' → logprob: -2.3091964721679688
    6. 'k' → logprob: -3.0591964721679688
    7. 'N' → logprob: -3.0591964721679688
    8. 'M' → logprob: -3.3091964721679688
    9. 'n' → logprob: -3.6841964721679688
    10. 's' → logprob: -5.309196472167969

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023226479243021458
    2. ')
' → logprob: -9.250232696533203
    3. '#' → logprob: -9.750232696533203
    4. ')

' → logprob: -10.375232696533203
    5. '):' → logprob: -10.750232696533203
    6. '```' → logprob: -12.125232696533203
    7. ')
' → logprob: -12.375232696533203
    8. 'e' → logprob: -13.125232696533203
    9. ')#' → logprob: -13.125232696533203
    10. ' )' → logprob: -13.125232696533203

Token 56: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.388408899307251
    2. 'n' → logprob: -1.138408899307251
    3. '```' → logprob: -6.888408660888672
    4. 'x' → logprob: -8.013408660888672
    5. '`' → logprob: -10.138408660888672
    6. 'a' → logprob: -10.388408660888672
    7. 'user' → logprob: -11.138408660888672
    8. 'i' → logprob: -11.138408660888672
    9. '#' → logprob: -11.388408660888672
    10. ' N' → logprob: -11.513408660888672

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.069664333248511e-05
    2. ' ,' → logprob: -11.125020980834961
    3. ',K' → logprob: -12.375020980834961
    4. '=' → logprob: -14.750020980834961
    5. ',N' → logprob: -14.750020980834961
    6. 's' → logprob: -15.125020980834961
    7. ',k' → logprob: -15.250020980834961
    8. 'space' → logprob: -16.75002098083496
    9. ',n' → logprob: -17.12502098083496
    10. ' =' → logprob: -17.25002098083496

Token 58: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5760200619697571
    2. ' K' → logprob: -0.8260200619697571
    3. ' ' → logprob: -9.576020240783691
    4. '<|end|>' → logprob: -12.076020240783691
    5. ' ' → logprob: -13.076020240783691
    6. '  ' → logprob: -13.076020240783691
    7. 'space' → logprob: -15.326020240783691
    8. ' ' → logprob: -15.326020240783691
    9. ' ,' → logprob: -16.326019287109375
    10. 'k' → logprob: -16.326019287109375

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020548662170767784
    2. '=' → logprob: -3.8955485820770264
    3. ',' → logprob: -12.770548820495605
    4. '=input' → logprob: -12.895548820495605
    5. ' ' → logprob: -14.395548820495605
    6. ')' → logprob: -15.020548820495605
    7. ' =
' → logprob: -15.895548820495605
    8. ' ' → logprob: -15.895548820495605
    9. '=int' → logprob: -16.14554786682129
    10. '.' → logprob: -16.64554786682129

Token 60: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.38688185811042786
    2. 'map' → logprob: -1.1368818283081055
    3. 'int' → logprob: -12.511881828308105
    4. 'input' → logprob: -12.511881828308105
    5. ' input' → logprob: -13.886881828308105
    6. 'list' → logprob: -14.261881828308105
    7. ' list' → logprob: -14.511881828308105
    8. '	map' → logprob: -15.011881828308105
    9. '[' → logprob: -15.386881828308105
    10. ' ' → logprob: -15.386881828308105

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04902298375964165
    2. '(' → logprob: -3.049022912979126
    3. '(input' → logprob: -7.924023151397705
    4. 'int' → logprob: -10.299022674560547
    5. '(str' → logprob: -11.174022674560547
    6. '(
' → logprob: -11.549022674560547
    7. '<int' → logprob: -11.799022674560547
    8. '[int' → logprob: -12.799022674560547
    9. ' (' → logprob: -13.424022674560547
    10. 'input' → logprob: -13.674022674560547

Token 62: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2552984356880188
    2. 'input' → logprob: -1.505298376083374
    3. ')' → logprob: -6.380298614501953
    4. '(' → logprob: -6.505298614501953
    5. ' input' → logprob: -9.005298614501953
    6. ',input' → logprob: -10.380298614501953
    7. ' (' → logprob: -12.255298614501953
    8. '=input' → logprob: -12.505298614501953
    9. ' )' → logprob: -13.005298614501953
    10. '<input' → logprob: -13.255298614501953

Token 63: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011708177626132965
    2. ' input' → logprob: -6.751170635223389
    3. '(input' → logprob: -15.001171112060547
    4. '<input' → logprob: -16.501171112060547
    5. ')' → logprob: -17.001171112060547
    6. '=input' → logprob: -17.626171112060547
    7. '	input' → logprob: -18.376171112060547
    8. ',input' → logprob: -18.626171112060547
    9. '[input' → logprob: -18.626171112060547
    10. ' ' → logprob: -18.751171112060547

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7280333638191223
    2. '()' → logprob: -0.8530333638191223
    3. '())' → logprob: -2.4780333042144775
    4. '(' → logprob: -5.478033542633057
    5. '(input' → logprob: -6.853033542633057
    6. '()(' → logprob: -7.853033542633057
    7. ' ()' → logprob: -8.103033065795898
    8. '('' → logprob: -8.603033065795898
    9. '()`' → logprob: -8.603033065795898
    10. '("' → logprob: -8.978033065795898

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002036595979006961
    2. 'strip' → logprob: -8.500204086303711
    3. ' split' → logprob: -16.75020408630371
    4. 'rstrip' → logprob: -16.87520408630371
    5. '(split' → logprob: -17.87520408630371
    6. 'spl' → logprob: -18.50020408630371
    7. '.split' → logprob: -20.25020408630371
    8. '_split' → logprob: -21.00020408630371
    9. 'read' → logprob: -21.75020408630371
    10. 'replace' → logprob: -22.12520408630371

Token 66: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019911162555217743
    2. '()' → logprob: -5.019911289215088
    3. '()))' → logprob: -5.144911289215088
    4. ')' → logprob: -5.144911289215088
    5. '('' → logprob: -6.894911289215088
    6. '(' → logprob: -8.51991081237793
    7. '))' → logprob: -8.51991081237793
    8. ' ())' → logprob: -11.01991081237793
    9. '(','' → logprob: -12.51991081237793
    10. '("' → logprob: -13.26991081237793

Token 67: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' Dem' (ID: 9458)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.3605057001113892
    2. 'elements' → logprob: -1.8605057001113892
    3. ' elements' → logprob: -2.1105055809020996
    4. '#' → logprob: -2.4855055809020996
    5. 'numbers' → logprob: -2.7355055809020996
    6. 'result' → logprob: -2.7355055809020996
    7. ' result' → logprob: -2.8605055809020996
    8. 'arr' → logprob: -3.4855055809020996
    9. 'lst' → logprob: -3.4855055809020996
    10. ' data' → logprob: -3.6105055809020996

Token 69: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.07537376880645752
    2. 'and' → logprob: -3.450373649597168
    3. 'e' → logprob: -4.075373649597168
    4. 'arr' → logprob: -5.325373649597168
    5. 'ar' → logprob: -5.450373649597168
    6. 'andez' → logprob: -5.450373649597168
    7. '#' → logprob: -5.825373649597168
    8. 'arre' → logprob: -5.950373649597168
    9. 'ander' → logprob: -6.200373649597168
    10. 'a' → logprob: -7.325373649597168

Token 70: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6143840551376343
    2. ' une' → logprob: -2.489384174346924
    3. 'les' → logprob: -2.864384174346924
    4. '#' → logprob: -2.989384174346924
    5. '(' → logprob: -2.989384174346924
    6. ' la' → logprob: -3.364384174346924
    7. 's' → logprob: -3.489384174346924
    8. ' les' → logprob: -3.739384174346924
    9. 'une' → logprob: -3.739384174346924
    10. 'le' → logprob: -4.489384174346924

Token 71: ' deuxième' (ID: 51664)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.2193857580423355
    2. ' liste' → logprob: -1.8443857431411743
    3. 'aut' → logprob: -3.844385862350464
    4. ' autre' → logprob: -5.594385623931885
    5. 'entrée' → logprob: -5.844385623931885
    6. 'ligne' → logprob: -6.094385623931885
    7. ' deuxième' → logprob: -6.469385623931885
    8. 'de' → logprob: -6.594385623931885
    9. 's' → logprob: -6.594385623931885
    10. '#' → logprob: -6.719385623931885

Token 72: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.19851082563400269
    2. ' ligne' → logprob: -2.3235108852386475
    3. 'ligne' → logprob: -3.0735108852386475
    4. ' entrée' → logprob: -3.8235108852386475
    5. 'input' → logprob: -5.448510646820068
    6. ' ' → logprob: -6.573510646820068
    7. 'line' → logprob: -6.823510646820068
    8. 'l' → logprob: -6.823510646820068
    9. ' input' → logprob: -7.073510646820068
    10. '_' → logprob: -7.448510646820068

Token 73: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.13780677318573
    2. '()' → logprob: -1.51280677318573
    3. 's' → logprob: -1.63780677318573
    4. ')' → logprob: -3.0128068923950195
    5. ' ' → logprob: -3.0128068923950195
    6. ' ,' → logprob: -3.7628068923950195
    7. 'N' → logprob: -3.8878068923950195
    8. 'input' → logprob: -3.8878068923950195
    9. ' N' → logprob: -4.2628068923950195
    10. '[' → logprob: -4.6378068923950195

Token 74: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9315277338027954
    2. 's' → logprob: -1.6815277338027954
    3. ' liste' → logprob: -1.9315277338027954
    4. 'liste' → logprob: -1.9315277338027954
    5. 'la' → logprob: -3.681527614593506
    6. ' valeurs' → logprob: -3.931527614593506
    7. 'list' → logprob: -4.181527614593506
    8. 'a' → logprob: -4.681527614593506
    9. 't' → logprob: -4.806527614593506
    10. 'val' → logprob: -5.056527614593506

Token 75: ''utilisateur' (ID: 140803)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21037878096103668
    2. 'iste' → logprob: -1.7103787660598755
    3. '#' → logprob: -6.335378646850586
    4. 'es' → logprob: -6.460378646850586
    5. 'ist' → logprob: -6.585378646850586
    6. 'e' → logprob: -6.585378646850586
    7. ''utilisateur' → logprob: -7.460378646850586
    8. 'liste' → logprob: -7.835378646850586
    9. '```' → logprob: -7.835378646850586
    10. 'istes' → logprob: -8.085378646850586

Token 76: ' représentant' (ID: 136122)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4380740523338318
    2. 'elements' → logprob: -2.0630741119384766
    3. 's' → logprob: -2.6880741119384766
    4. ' elements' → logprob: -4.063074111938477
    5. ':' → logprob: -4.188074111938477
    6. 'values' → logprob: -4.313074111938477
    7. ')' → logprob: -4.313074111938477
    8. 'data' → logprob: -4.563074111938477
    9. ' ,' → logprob: -4.563074111938477
    10. 'n' → logprob: -4.813074111938477

Token 77: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.03611946478486061
    2. ' les' → logprob: -4.66111946105957
    3. 's' → logprob: -5.28611946105957
    4. ' ' → logprob: -5.66111946105957
    5. 'les' → logprob: -5.91111946105957
    6. ' le' → logprob: -6.03611946105957
    7. 'le' → logprob: -6.16111946105957
    8. 'la' → logprob: -6.28611946105957
    9. 'a' → logprob: -6.66111946105957
    10. ' une' → logprob: -6.78611946105957

Token 78: ' haute' (ID: 49646)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.007421099115163088
    2. 'val' → logprob: -5.882421016693115
    3. ' éléments' → logprob: -6.132421016693115
    4. 'scores' → logprob: -6.507421016693115
    5. 'é' → logprob: -8.632421493530273
    6. 'elements' → logprob: -8.632421493530273
    7. 'n' → logprob: -9.257421493530273
    8. ' valeurs' → logprob: -9.257421493530273
    9. 'él' → logprob: -9.507421493530273
    10. ' scores' → logprob: -9.632421493530273

Token 79: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.0007880675257183611
    2. 's' → logprob: -7.25078821182251
    3. '#' → logprob: -10.500787734985352
    4. 'rs' → logprob: -10.750787734985352
    5. '```' → logprob: -12.000787734985352
    6. 'u' → logprob: -12.125787734985352
    7. 'ur' → logprob: -12.125787734985352
    8. '_' → logprob: -13.125787734985352
    9. ' urs' → logprob: -13.250787734985352
    10. 'eurs' → logprob: -13.625787734985352

Token 80: '.
' (ID: 558)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.32980644702911377
    2. 'des' → logprob: -1.9548064470291138
    3. ' heights' → logprob: -2.829806327819824
    4. 's' → logprob: -3.454806327819824
    5. ',' → logprob: -4.204806327819824
    6. 'h' → logprob: -5.204806327819824
    7. ' d' → logprob: -5.454806327819824
    8. ' ' → logprob: -5.579806327819824
    9. 'he' → logprob: -5.954806327819824
    10. '_' → logprob: -6.079806327819824

Token 81: '#' (ID: 2)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.44914743304252625
    2. 'ha' → logprob: -1.1991474628448486
    3. ' heights' → logprob: -3.5741474628448486
    4. 'h' → logprob: -4.1991472244262695
    5. 'height' → logprob: -4.9491472244262695
    6. 'H' → logprob: -5.1991472244262695
    7. 't' → logprob: -6.6991472244262695
    8. 'a' → logprob: -7.3241472244262695
    9. 'A' → logprob: -7.9491472244262695
    10. 'T' → logprob: -7.9491472244262695

Token 82: ' Div' (ID: 12302)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.2175179123878479
    2. 'ha' → logprob: -1.8425178527832031
    3. ' heights' → logprob: -3.467517852783203
    4. 'height' → logprob: -5.842517852783203
    5. 'h' → logprob: -6.717517852783203
    6. 'H' → logprob: -7.592517852783203
    7. 'arr' → logprob: -8.092517852783203
    8. 'a' → logprob: -8.842517852783203
    9. ' ha' → logprob: -9.217517852783203
    10. 't' → logprob: -9.342517852783203

Token 83: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.33140072226524353
    2. 'es' → logprob: -2.9564006328582764
    3. 'iser' → logprob: -3.3314006328582764
    4. 'isez' → logprob: -3.3314006328582764
    5. ' heights' → logprob: -3.3314006328582764
    6. 'e' → logprob: -3.4564006328582764
    7. 'ide' → logprob: -3.8314006328582764
    8. 's' → logprob: -4.5814008712768555
    9. 'ides' → logprob: -4.5814008712768555
    10. 'isé' → logprob: -4.5814008712768555

Token 84: ' la' (ID: 557)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.41627973318099976
    2. ' la' → logprob: -1.9162797927856445
    3. 's' → logprob: -3.1662797927856445
    4. ' les' → logprob: -3.5412797927856445
    5. 'input' → logprob: -3.5412797927856445
    6. ' heights' → logprob: -3.5412797927856445
    7. 'les' → logprob: -3.7912797927856445
    8. 'la' → logprob: -5.0412797927856445
    9. '#' → logprob: -5.2912797927856445
    10. ' input' → logprob: -5.4162797927856445

Token 85: ' chaîne' (ID: 89288)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.14414547383785248
    2. 'input' → logprob: -2.6441454887390137
    3. ' haute' → logprob: -4.894145488739014
    4. 's' → logprob: -5.144145488739014
    5. ' input' → logprob: -5.269145488739014
    6. 'chaine' → logprob: -5.269145488739014
    7. '#' → logprob: -5.394145488739014
    8. 'entrée' → logprob: -5.519145488739014
    9. ' hauteur' → logprob: -5.519145488739014
    10. 'val' → logprob: -5.519145488739014

Token 86: ' entrée' (ID: 95590)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4332990348339081
    2. 'input' → logprob: -1.6832990646362305
    3. ' des' → logprob: -2.1832990646362305
    4. ' en' → logprob: -3.8082990646362305
    5. ' heights' → logprob: -4.4332990646362305
    6. ' de' → logprob: -5.5582990646362305
    7. '```' → logprob: -5.5582990646362305
    8. 's' → logprob: -5.6832990646362305
    9. 'des' → logprob: -6.6832990646362305
    10. ' ' → logprob: -6.8082990646362305

Token 87: ' en' (ID: 469)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4796454906463623
    2. '()' → logprob: -1.8546454906463623
    3. 'es' → logprob: -1.8546454906463623
    4. 'input' → logprob: -2.2296454906463623
    5. '().' → logprob: -2.2296454906463623
    6. ' par' → logprob: -2.8546454906463623
    7. ' input' → logprob: -3.2296454906463623
    8. 's' → logprob: -3.6046454906463623
    9. ' en' → logprob: -3.7296454906463623
    10. '.' → logprob: -4.104645729064941

Token 88: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.13324280083179474
    2. ' des' → logprob: -2.8832428455352783
    3. 'une' → logprob: -2.8832428455352783
    4. 'des' → logprob: -6.133242607116699
    5. ' liste' → logprob: -6.258242607116699
    6. ' chaînes' → logprob: -6.758242607116699
    7. ' espaces' → logprob: -6.883242607116699
    8. 'liste' → logprob: -7.008242607116699
    9. 'la' → logprob: -7.133242607116699
    10. ' un' → logprob: -7.258242607116699

Token 89: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.47559022903442383
    2. 'liste' → logprob: -0.9755902290344238
    3. 'list' → logprob: -7.100590229034424
    4. 's' → logprob: -8.350589752197266
    5. ' list' → logprob: -8.475589752197266
    6. 'Liste' → logprob: -8.975589752197266
    7. 'lst' → logprob: -10.350589752197266
    8. ' Liste' → logprob: -10.600589752197266
    9. ' listes' → logprob: -10.975589752197266
    10. 'lista' → logprob: -11.350589752197266

Token 90: ' de' (ID: 334)
  Prédit: ' heights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -1.1281912326812744
    2. 'ha' → logprob: -1.5031912326812744
    3. ' de' → logprob: -2.2531912326812744
    4. ' des' → logprob: -2.5031912326812744
    5. 'des' → logprob: -2.7531912326812744
    6. 'h' → logprob: -3.2531912326812744
    7. 'de' → logprob: -3.5031912326812744
    8. ' h' → logprob: -3.6281912326812744
    9. 's' → logprob: -3.6281912326812744
    10. 'he' → logprob: -3.7531912326812744

Token 91: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.138510063290596
    2. 'strings' → logprob: -2.51350998878479
    3. 'str' → logprob: -4.013510227203369
    4. ' strings' → logprob: -4.513510227203369
    5. 'chain' → logprob: -5.138510227203369
    6. 'cha' → logprob: -5.263510227203369
    7. ' chain' → logprob: -5.513510227203369
    8. ' chaîne' → logprob: -6.763510227203369
    9. 'ha' → logprob: -7.263510227203369
    10. 'string' → logprob: -7.388510227203369

Token 92: ',' (ID: 11)
  Prédit: ' heights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -1.155993938446045
    2. ' hauteur' → logprob: -1.530993938446045
    3. 'ha' → logprob: -2.155993938446045
    4. 'height' → logprob: -2.405993938446045
    5. 'he' → logprob: -2.780993938446045
    6. ',' → logprob: -3.155993938446045
    7. 's' → logprob: -3.655993938446045
    8. ' de' → logprob: -3.780993938446045
    9. ' height' → logprob: -4.280993938446045
    10. 'input' → logprob: -4.530993938446045

Token 93: ' puis' (ID: 18766)
  Prédit: ' heights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.310045063495636
    2. 'he' → logprob: -2.060045003890991
    3. ' puis' → logprob: -2.685045003890991
    4. ' then' → logprob: -4.68504524230957
    5. 'ha' → logprob: -5.06004524230957
    6. ' h' → logprob: -5.18504524230957
    7. ' height' → logprob: -5.18504524230957
    8. 's' → logprob: -5.43504524230957
    9. ' ha' → logprob: -5.43504524230957
    10. ' hauteur' → logprob: -5.43504524230957

Token 94: ' convert' (ID: 8452)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7992597818374634
    2. ' convert' → logprob: -1.1742597818374634
    3. 'convert' → logprob: -2.174259662628174
    4. ' map' → logprob: -3.049259662628174
    5. 'les' → logprob: -3.299259662628174
    6. ' utilise' → logprob: -3.924259662628174
    7. 'con' → logprob: -5.174259662628174
    8. 'map' → logprob: -5.174259662628174
    9. ' la' → logprob: -6.049259662628174
    10. ' converts' → logprob: -6.299259662628174

Token 95: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0002238013403257355
    2. 'ies' → logprob: -9.500224113464355
    3. ' it' → logprob: -9.750224113464355
    4. 't' → logprob: -9.750224113464355
    5. '[it' → logprob: -11.875224113464355
    6. 'et' → logprob: -12.000224113464355
    7. '_it' → logprob: -12.625224113464355
    8. '```' → logprob: -12.750224113464355
    9. '(it' → logprob: -13.500224113464355
    10. 'itles' → logprob: -13.625224113464355

Token 96: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.06822792440652847
    2. ' chacune' → logprob: -3.318228006362915
    3. ' la' → logprob: -4.568227767944336
    4. ' les' → logprob: -5.318227767944336
    5. 'la' → logprob: -5.568227767944336
    6. 'cha' → logprob: -6.068227767944336
    7. 'les' → logprob: -6.443227767944336
    8. ' en' → logprob: -6.568227767944336
    9. 'Chaque' → logprob: -6.818227767944336
    10. 'each' → logprob: -6.818227767944336

Token 97: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.04580622538924217
    2. ' élément' → logprob: -3.4208061695098877
    3. ' chaîne' → logprob: -4.920806407928467
    4. 'chaine' → logprob: -6.170806407928467
    5. ' hauteur' → logprob: -6.920806407928467
    6. 'ha' → logprob: -7.795806407928467
    7. 'int' → logprob: -8.045805931091309
    8. ' valeur' → logprob: -8.295805931091309
    9. ' chaine' → logprob: -8.670805931091309
    10. 'val' → logprob: -9.045805931091309

Token 98: ' de' (ID: 334)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.31362009048461914
    2. ' en' → logprob: -1.3136200904846191
    3. '```' → logprob: -8.313619613647461
    4. ',' → logprob: -11.063619613647461
    5. ' à' → logprob: -11.563619613647461
    6. ' ' → logprob: -11.688619613647461
    7. 's' → logprob: -12.063619613647461
    8. ' de' → logprob: -12.063619613647461
    9. 'à' → logprob: -12.188619613647461
    10. 'int' → logprob: -12.188619613647461

Token 99: ' cette' (ID: 7696)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14852602779865265
    2. 'ent' → logprob: -2.2735259532928467
    3. ' int' → logprob: -3.8985259532928467
    4. 'liste' → logprob: -5.523526191711426
    5. ' liste' → logprob: -5.773526191711426
    6. 'list' → logprob: -6.523526191711426
    7. ' ent' → logprob: -6.523526191711426
    8. 'ints' → logprob: -6.898526191711426
    9. 'la' → logprob: -6.898526191711426
    10. ' la' → logprob: -7.273526191711426

Token 100: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5515881776809692
    2. ' liste' → logprob: -1.4265881776809692
    3. 'list' → logprob: -2.8015880584716797
    4. 'int' → logprob: -2.9265880584716797
    5. 'élé' → logprob: -3.9265880584716797
    6. '```' → logprob: -4.30158805847168
    7. '#' → logprob: -5.30158805847168
    8. 'ligne' → logprob: -5.55158805847168
    9. 'map' → logprob: -5.67658805847168
    10. 'entrée' → logprob: -6.05158805847168

Token 101: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6338574886322021
    2. 'en' → logprob: -0.7588574886322021
    3. 'he' → logprob: -7.883857727050781
    4. ',' → logprob: -8.383857727050781
    5. 's' → logprob: -9.008857727050781
    6. '#' → logprob: -9.383857727050781
    7. 'ha' → logprob: -9.508857727050781
    8. 'height' → logprob: -10.008857727050781
    9. ' heights' → logprob: -10.133857727050781
    10. '```' → logprob: -10.258857727050781

Token 102: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16391156613826752
    2. 'ent' → logprob: -1.9139115810394287
    3. 'ints' → logprob: -6.16391134262085
    4. ' int' → logprob: -7.28891134262085
    5. ' ent' → logprob: -8.038911819458008
    6. 'une' → logprob: -8.538911819458008
    7. 'inte' → logprob: -8.538911819458008
    8. 'un' → logprob: -10.163911819458008
    9. '```' → logprob: -10.538911819458008
    10. '[int' → logprob: -10.788911819458008

Token 103: '.
' (ID: 558)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.19188207387924194
    2. 'ha' → logprob: -1.8168821334838867
    3. 'height' → logprob: -5.441882133483887
    4. 'h' → logprob: -5.441882133483887
    5. 'H' → logprob: -6.191882133483887
    6. 'a' → logprob: -7.941882133483887
    7. ' heights' → logprob: -7.941882133483887
    8. 'A' → logprob: -8.441882133483887
    9. '```' → logprob: -9.441882133483887
    10. 'arr' → logprob: -10.191882133483887

Token 104: '#' (ID: 2)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.037229228764772415
    2. 'ha' → logprob: -3.412229299545288
    3. 'H' → logprob: -6.287229061126709
    4. 'height' → logprob: -6.912229061126709
    5. 'h' → logprob: -8.162229537963867
    6. 'A' → logprob: -8.912229537963867
    7. 'arr' → logprob: -9.412229537963867
    8. ' heights' → logprob: -9.787229537963867
    9. 'a' → logprob: -10.162229537963867
    10. '```' → logprob: -10.787229537963867

Token 105: ' Place' (ID: 16303)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.031482744961977005
    2. 'ha' → logprob: -3.656482696533203
    3. ' heights' → logprob: -6.031482696533203
    4. 'height' → logprob: -6.656482696533203
    5. 'h' → logprob: -7.906482696533203
    6. 'H' → logprob: -8.031482696533203
    7. 'arr' → logprob: -8.031482696533203
    8. 'A' → logprob: -8.906482696533203
    9. 'a' → logprob: -10.031482696533203
    10. 'alt' → logprob: -10.156482696533203

Token 106: ' le' (ID: 505)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.12325045466423035
    2. 's' → logprob: -3.1232504844665527
    3. ' heights' → logprob: -3.3732504844665527
    4. ' la' → logprob: -4.123250484466553
    5. ' les' → logprob: -4.498250484466553
    6. 'les' → logprob: -6.373250484466553
    7. 'ha' → logprob: -6.623250484466553
    8. 'la' → logprob: -7.123250484466553
    9. 'e' → logprob: -7.748250484466553
    10. ' h' → logprob: -7.998250484466553

Token 107: ' résultat' (ID: 62556)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.8348720669746399
    2. 'he' → logprob: -1.5848720073699951
    3. 's' → logprob: -1.9598720073699951
    4. 'result' → logprob: -3.209872007369995
    5. ' result' → logprob: -4.334872245788574
    6. 'rest' → logprob: -4.334872245788574
    7. 'N' → logprob: -4.334872245788574
    8. ' in' → logprob: -4.459872245788574
    9. 'liste' → logprob: -4.584872245788574
    10. '#' → logprob: -4.709872245788574

Token 108: ' dans' (ID: 2671)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.06945723295211792
    2. 'ha' → logprob: -4.069457054138184
    3. 's' → logprob: -4.444457054138184
    4. ' =' → logprob: -4.694457054138184
    5. 'dans' → logprob: -4.694457054138184
    6. ' dans' → logprob: -4.944457054138184
    7. '=' → logprob: -5.069457054138184
    8. 'H' → logprob: -7.444457054138184
    9. 'liste' → logprob: -7.444457054138184
    10. ',' → logprob: -7.444457054138184

Token 109: ' une' (ID: 2463)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5078153610229492
    2. ' la' → logprob: -1.8828153610229492
    3. 'la' → logprob: -2.007815361022949
    4. 'une' → logprob: -3.007815361022949
    5. 'ha' → logprob: -3.757815361022949
    6. ' une' → logprob: -3.757815361022949
    7. ' heights' → logprob: -4.882815361022949
    8. 'liste' → logprob: -6.007815361022949
    9. 'a' → logprob: -6.507815361022949
    10. 'h' → logprob: -6.757815361022949

Token 110: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.09503821283578873
    2. 'list' → logprob: -2.4700381755828857
    3. 'ha' → logprob: -5.345038414001465
    4. 'variable' → logprob: -7.720038414001465
    5. 'lst' → logprob: -8.470038414001465
    6. 'la' → logprob: -8.970038414001465
    7. '```' → logprob: -9.095038414001465
    8. 'he' → logprob: -9.220038414001465
    9. 'lista' → logprob: -9.345038414001465
    10. 'height' → logprob: -10.220038414001465

Token 111: ' nom' (ID: 8080)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.06314905732870102
    2. 'H' → logprob: -3.3131489753723145
    3. 'ha' → logprob: -3.9381489753723145
    4. 'height' → logprob: -6.1881489753723145
    5. 'h' → logprob: -6.4381489753723145
    6. 'A' → logprob: -6.9381489753723145
    7. ' heights' → logprob: -9.063149452209473
    8. 'a' → logprob: -9.438149452209473
    9. ' H' → logprob: -9.563149452209473
    10. 'T' → logprob: -9.563149452209473

Token 112: 'm' (ID: 76)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.142329141497612
    2. 'he' → logprob: -2.392329216003418
    3. 'e' → logprob: -3.767329216003418
    4. 'ele' → logprob: -5.892329216003418
    5. 'ée' → logprob: -6.267329216003418
    6. 'me' → logprob: -6.767329216003418
    7. 'al' → logprob: -7.017329216003418
    8. 'height' → logprob: -7.142329216003418
    9. 's' → logprob: -7.392329216003418
    10. 'es' → logprob: -7.517329216003418

Token 113: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.015214258804917336
    2. 'a' → logprob: -4.890214443206787
    3. 'ée' → logprob: -6.140214443206787
    4. 'es' → logprob: -6.640214443206787
    5. 'bre' → logprob: -6.890214443206787
    6. 're' → logprob: -7.140214443206787
    7. 'er' → logprob: -7.140214443206787
    8. 'é' → logprob: -7.890214443206787
    9. 'le' → logprob: -8.390213966369629
    10. 'liste' → logprob: -8.890213966369629

Token 114: ' '' (ID: 461)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.27183547616004944
    2. ' heights' → logprob: -2.5218355655670166
    3. 'ha' → logprob: -2.6468355655670166
    4. 'H' → logprob: -2.8968355655670166
    5. ' H' → logprob: -4.3968353271484375
    6. '`' → logprob: -5.5218353271484375
    7. 'h' → logprob: -5.7718353271484375
    8. 'height' → logprob: -5.8968353271484375
    9. '```' → logprob: -6.0218353271484375
    10. 'A' → logprob: -6.6468353271484375

Token 115: 'H' (ID: 39)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.26593896746635437
    2. 'ha' → logprob: -1.5159389972686768
    3. 'height' → logprob: -5.265938758850098
    4. 'a' → logprob: -6.390938758850098
    5. 'H' → logprob: -6.515938758850098
    6. 'h' → logprob: -6.890938758850098
    7. 'A' → logprob: -7.015938758850098
    8. 'alt' → logprob: -7.015938758850098
    9. 'arr' → logprob: -7.515938758850098
    10. 'lst' → logprob: -7.890938758850098

Token 116: ''
' (ID: 2207)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7211043238639832
    2. '')' → logprob: -1.346104383468628
    3. ')' → logprob: -1.721104383468628
    4. 'H' → logprob: -4.096104145050049
    5. ')'' → logprob: -4.221104145050049
    6. 's' → logprob: -4.471104145050049
    7. ')'
' → logprob: -5.096104145050049
    8. '')
' → logprob: -5.096104145050049
    9. 'eight' → logprob: -5.346104145050049
    10. 'T' → logprob: -6.096104145050049

Token 117: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.676981345459353e-06
    2. ' H' → logprob: -12.125005722045898
    3. '```' → logprob: -16.2500057220459
    4. '#' → logprob: -16.7500057220459
    5. '
' → logprob: -17.1250057220459
    6. '`' → logprob: -18.0000057220459
    7. 'h' → logprob: -18.3750057220459
    8. 's' → logprob: -18.3750057220459
    9. '[' → logprob: -19.5000057220459
    10. 'height' → logprob: -19.7500057220459

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '[' → logprob: -16.663042068481445
    4. '=[]' → logprob: -16.913042068481445
    5. '=

' → logprob: -17.038042068481445
    6. '＝' → logprob: -17.413042068481445
    7. ',' → logprob: -17.538042068481445
    8. 's' → logprob: -17.538042068481445
    9. '=[' → logprob: -17.913042068481445
    10. ' ' → logprob: -18.413042068481445

Token 119: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.029763219878077507
    2. ' list' → logprob: -3.5297632217407227
    3. '[list' → logprob: -11.279763221740723
    4. '[' → logprob: -16.279762268066406
    5. 'map' → logprob: -17.529762268066406
    6. ' [' → logprob: -18.279762268066406
    7. '=list' → logprob: -19.154762268066406
    8. 'List' → logprob: -19.154762268066406
    9. '(list' → logprob: -19.529762268066406
    10. '	list' → logprob: -19.904762268066406

Token 120: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04872452840209007
    2. '(' → logprob: -3.048724412918091
    3. '(int' → logprob: -8.923724174499512
    4. '(
' → logprob: -13.173724174499512
    5. '(

' → logprob: -14.423724174499512
    6. ' (' → logprob: -14.673724174499512
    7. '(input' → logprob: -14.923724174499512
    8. 'map' → logprob: -15.673724174499512
    9. '()' → logprob: -15.923724174499512
    10. '(m' → logprob: -16.423725128173828

Token 121: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009826739551499486
    2. '(' → logprob: -7.250982761383057
    3. 'int' → logprob: -8.250982284545898
    4. '<int' → logprob: -11.875982284545898
    5. '[int' → logprob: -13.500982284545898
    6. '(
' → logprob: -13.625982284545898
    7. ' int' → logprob: -14.000982284545898
    8. '=int' → logprob: -14.750982284545898
    9. ',int' → logprob: -14.875982284545898
    10. '```' → logprob: -15.250982284545898

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26055237650871277
    2. ',input' → logprob: -1.5105524063110352
    3. '(input' → logprob: -5.010552406311035
    4. 'input' → logprob: -6.385552406311035
    5. '(' → logprob: -8.510552406311035
    6. ' ,' → logprob: -10.760552406311035
    7. '(),' → logprob: -12.385552406311035
    8. ' input' → logprob: -13.260552406311035
    9. 's' → logprob: -14.260552406311035
    10. '),' → logprob: -14.385552406311035

Token 123: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020548075437545776
    2. ' input' → logprob: -3.895548105239868
    3. '(input' → logprob: -12.145547866821289
    4. ',input' → logprob: -15.395547866821289
    5. ' ' → logprob: -15.645547866821289
    6. '	input' → logprob: -15.770547866821289
    7. '<input' → logprob: -16.14554786682129
    8. '=input' → logprob: -16.27054786682129
    9. '_input' → logprob: -17.02054786682129
    10. ')' → logprob: -17.14554786682129

Token 124: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.5577775128767826e-06
    2. '()' → logprob: -12.250005722045898
    3. ' ().' → logprob: -14.125005722045898
    4. '.' → logprob: -18.3750057220459
    5. '(' → logprob: -18.6250057220459
    6. '>().' → logprob: -19.3750057220459
    7. ' .' → logprob: -19.6250057220459
    8. '()
' → logprob: -19.8750057220459
    9. '	' → logprob: -20.5000057220459
    10. '   ' → logprob: -21.3750057220459

Token 125: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1008713702030946e-06
    2. 'strip' → logprob: -13.250001907348633
    3. ' split' → logprob: -15.625001907348633
    4. '.split' → logprob: -16.875001907348633
    5. '(split' → logprob: -17.250001907348633
    6. 'rstrip' → logprob: -18.625001907348633
    7. ')' → logprob: -18.875001907348633
    8. '().' → logprob: -19.250001907348633
    9. 'spl' → logprob: -19.500001907348633
    10. ').' → logprob: -20.125001907348633

Token 126: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004580007400363684
    2. '))' → logprob: -5.879580020904541
    3. '()' → logprob: -6.629580020904541
    4. '())' → logprob: -7.754580020904541
    5. '(' → logprob: -11.629579544067383
    6. '()));' → logprob: -12.129579544067383
    7. '()))
' → logprob: -12.504579544067383
    8. '())))' → logprob: -13.129579544067383
    9. '())).' → logprob: -13.879579544067383
    10. '()))

' → logprob: -13.879579544067383

Token 127: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2893338203430176
    2. 'H' → logprob: -2.5393338203430176
    3. 'if' → logprob: -3.2893338203430176
    4. 'for' → logprob: -3.2893338203430176
    5. 'max' → logprob: -3.9143338203430176
    6. 'count' → logprob: -3.9143338203430176
    7. 'result' → logprob: -4.039333820343018
    8. 'print' → logprob: -4.539333820343018
    9. 'M' → logprob: -5.789333820343018
    10. 'sorted' → logprob: -5.914333820343018

Token 128: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.24038827419281
    2. 'for' → logprob: -1.49038827419281
    3. 'if' → logprob: -1.61538827419281
    4. 'result' → logprob: -1.74038827419281
    5. 'H' → logprob: -3.8653883934020996
    6. 'max' → logprob: -3.9903883934020996
    7. 'count' → logprob: -4.1153883934021
    8. 'filtered' → logprob: -4.7403883934021
    9. 'remaining' → logprob: -5.1153883934021
    10. 'valid' → logprob: -5.2403883934021

Token 129: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.010485160164535046
    2. 'ifier' → logprob: -5.1354851722717285
    3. 'ifiez' → logprob: -6.0104851722717285
    4. 'if' → logprob: -6.6354851722717285
    5. '#' → logprob: -7.2604851722717285
    6. 'ifié' → logprob: -10.51048469543457
    7. 'ify' → logprob: -11.01048469543457
    8. 'i' → logprob: -12.13548469543457
    9. 'ification' → logprob: -12.13548469543457
    10. '```' → logprob: -12.26048469543457

Token 130: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.6893354654312134
    2. 'if' → logprob: -1.1893354654312134
    3. ' if' → logprob: -2.314335346221924
    4. ' que' → logprob: -2.814335346221924
    5. 'si' → logprob: -3.689335346221924
    6. 's' → logprob: -5.064335346221924
    7. '#' → logprob: -7.189335346221924
    8. 'len' → logprob: -7.189335346221924
    9. 'que' → logprob: -7.814335346221924
    10. ' la' → logprob: -7.814335346221924

Token 131: ' le' (ID: 505)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4625999331474304
    2. ' len' → logprob: -1.5875999927520752
    3. 'K' → logprob: -2.087599992752075
    4. 'len' → logprob: -3.337599992752075
    5. ' N' → logprob: -5.337599754333496
    6. 'N' → logprob: -6.587599754333496
    7. ' ' → logprob: -9.337599754333496
    8. '(len' → logprob: -9.837599754333496
    9. ' ' → logprob: -10.587599754333496
    10. ' abs' → logprob: -11.212599754333496

Token 132: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2762534022331238
    2. 'K' → logprob: -1.6512534618377686
    3. ' len' → logprob: -4.0262532234191895
    4. 'N' → logprob: -4.1512532234191895
    5. ' K' → logprob: -4.9012532234191895
    6. 'length' → logprob: -5.6512532234191895
    7. 'nombre' → logprob: -5.9012532234191895
    8. ' nombre' → logprob: -7.6512532234191895
    9. ' N' → logprob: -7.6512532234191895
    10. 'sum' → logprob: -8.776253700256348

Token 133: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.047853946685791
    2. 'd' → logprob: -1.547853946685791
    3. 'de' → logprob: -1.547853946685791
    4. ' d' → logprob: -2.047853946685791
    5. '#' → logprob: -2.797853946685791
    6. '(H' → logprob: -4.297853946685791
    7. 'H' → logprob: -4.672853946685791
    8. ' des' → logprob: -5.797853946685791
    9. ' H' → logprob: -6.672853946685791
    10. 'total' → logprob: -6.922853946685791

Token 134: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0539458990097046
    2. '(H' → logprob: -1.1789458990097046
    3. 'des' → logprob: -2.553946018218994
    4. '(N' → logprob: -2.678946018218994
    5. '(' → logprob: -2.803946018218994
    6. ' de' → logprob: -2.928946018218994
    7. ' des' → logprob: -3.428946018218994
    8. 'd' → logprob: -4.053946018218994
    9. '#' → logprob: -4.178946018218994
    10. 'H' → logprob: -5.303946018218994

Token 135: ''' (ID: 6)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.084376335144043
    2. '(H' → logprob: -1.709376335144043
    3. 'élé' → logprob: -1.709376335144043
    4. 'd' → logprob: -2.459376335144043
    5. ' d' → logprob: -2.709376335144043
    6. '#' → logprob: -3.459376335144043
    7. ' éléments' → logprob: -3.584376335144043
    8. ' H' → logprob: -3.709376335144043
    9. ''' → logprob: -3.834376335144043
    10. ''H' → logprob: -4.084376335144043

Token 136: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5365493297576904
    2. 'H' → logprob: -0.9115493297576904
    3. ''' → logprob: -5.0365495681762695
    4. 'elements' → logprob: -6.4115495681762695
    5. ' éléments' → logprob: -6.4115495681762695
    6. ''H' → logprob: -6.7865495681762695
    7. ' H' → logprob: -6.9115495681762695
    8. '#' → logprob: -7.1615495681762695
    9. '(H' → logprob: -8.16154956817627
    10. 'é' → logprob: -10.03654956817627

Token 137: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00029852005536668
    2. '#' → logprob: -9.125298500061035
    3. 'ment' → logprob: -9.250298500061035
    4. 'éments' → logprob: -9.750298500061035
    5. 'm' → logprob: -11.500298500061035
    6. 'ements' → logprob: -12.250298500061035
    7. 'phants' → logprob: -12.500298500061035
    8. 'MENTS' → logprob: -13.000298500061035
    9. '```' → logprob: -13.125298500061035
    10. 'me' → logprob: -13.125298500061035

Token 138: ' (' (ID: 350)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.18815070390701294
    2. 'est' → logprob: -2.313150644302368
    3. 'N' → logprob: -4.188150882720947
    4. '>' → logprob: -4.813150882720947
    5. 's' → logprob: -4.813150882720947
    6. 'H' → logprob: -4.938150882720947
    7. 'de' → logprob: -5.188150882720947
    8. ' N' → logprob: -5.188150882720947
    9. '#' → logprob: -5.688150882720947
    10. ' H' → logprob: -5.938150882720947

Token 139: 'N' (ID: 45)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.13966357707977295
    2. 'N' → logprob: -2.5146636962890625
    3. ' H' → logprob: -3.3896636962890625
    4. ')' → logprob: -4.7646636962890625
    5. ' N' → logprob: -5.3896636962890625
    6. 'K' → logprob: -6.2646636962890625
    7. '(H' → logprob: -8.639663696289062
    8. ' K' → logprob: -9.014663696289062
    9. '#' → logprob: -9.264663696289062
    10. 'len' → logprob: -9.389663696289062

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003047343110665679
    2. '==' → logprob: -6.628047466278076
    3. ' )' → logprob: -7.253047466278076
    4. ' ==' → logprob: -8.128046989440918
    5. '>' → logprob: -8.128046989440918
    6. '>=' → logprob: -8.253046989440918
    7. ')==' → logprob: -10.253046989440918
    8. ' >=' → logprob: -10.253046989440918
    9. ' >' → logprob: -11.253046989440918
    10. '<=' → logprob: -11.253046989440918

Token 141: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8394683003425598
    2. ' est' → logprob: -0.8394683003425598
    3. ' ==' → logprob: -2.964468240737915
    4. 'est' → logprob: -3.464468240737915
    5. '>' → logprob: -3.589468240737915
    6. '>=' → logprob: -4.464468479156494
    7. '<=' → logprob: -5.714468479156494
    8. '=' → logprob: -5.964468479156494
    9. ' is' → logprob: -6.464468479156494
    10. ' >=' → logprob: -6.839468479156494

Token 142: ' inférieur' (ID: 191498)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.0894414559006691
    2. 'sup' → logprob: -2.9644415378570557
    3. 'strict' → logprob: -3.9644415378570557
    4. '>' → logprob: -4.714441299438477
    5. ' inférieur' → logprob: -5.589441299438477
    6. ' égal' → logprob: -7.964441299438477
    7. '>=' → logprob: -8.089441299438477
    8. 'super' → logprob: -8.089441299438477
    9. ' différent' → logprob: -8.464441299438477
    10. '<=' → logprob: -8.589441299438477

Token 143: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.4055380821228027
    2. '=' → logprob: -1.7805380821228027
    3. ' or' → logprob: -2.0305380821228027
    4. 'à' → logprob: -2.1555380821228027
    5. ' ou' → logprob: -2.4055380821228027
    6. 'or' → logprob: -2.7805380821228027
    7. 'to' → logprob: -2.9055380821228027
    8. '#' → logprob: -3.2805380821228027
    9. ' to' → logprob: -3.6555380821228027
    10. 'au' → logprob: -4.030538082122803

Token 144: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -1.2158271074295044
    2. 'égal' → logprob: -1.8408271074295044
    3. '#' → logprob: -1.9658271074295044
    4. ' à' → logprob: -2.465826988220215
    5. 'strict' → logprob: -2.465826988220215
    6. 'à' → logprob: -2.590826988220215
    7. '=' → logprob: -2.840826988220215
    8. 'au' → logprob: -3.465826988220215
    9. '>' → logprob: -4.590826988220215
    10. ' ég' → logprob: -4.715826988220215

Token 145: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.30959975719451904
    2. 'to' → logprob: -1.809599757194519
    3. 'à' → logprob: -2.4345998764038086
    4. ' to' → logprob: -4.434599876403809
    5. ' ' → logprob: -7.059599876403809
    6. 'N' → logprob: -7.809599876403809
    7. 'a' → logprob: -8.309599876403809
    8. ' a' → logprob: -8.684599876403809
    9. ',' → logprob: -8.809599876403809
    10. '0' → logprob: -8.934599876403809

Token 146: ' nombre' (ID: 9733)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.34044113755226135
    2. 'len' → logprob: -1.340441107749939
    3. '0' → logprob: -3.8404412269592285
    4. ' K' → logprob: -5.5904412269592285
    5. ' len' → logprob: -6.7154412269592285
    6. 'k' → logprob: -8.71544075012207
    7. ' ' → logprob: -9.46544075012207
    8. 'nombre' → logprob: -10.34044075012207
    9. 'length' → logprob: -10.71544075012207
    10. '1' → logprob: -10.71544075012207

Token 147: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6687224507331848
    2. ' de' → logprob: -2.16872239112854
    3. '#' → logprob: -2.29372239112854
    4. 'd' → logprob: -2.41872239112854
    5. 'if' → logprob: -3.04372239112854
    6. 'K' → logprob: -3.04372239112854
    7. 'des' → logprob: -3.29372239112854
    8. ' d' → logprob: -3.79372239112854
    9. ' K' → logprob: -4.793722629547119
    10. ' des' → logprob: -5.168722629547119

Token 148: ''' (ID: 6)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1725207567214966
    2. 'ex' → logprob: -1.5475207567214966
    3. 'd' → logprob: -1.6725207567214966
    4. 'à' → logprob: -2.922520637512207
    5. 'K' → logprob: -3.297520637512207
    6. ' à' → logprob: -3.422520637512207
    7. ''ex' → logprob: -3.547520637512207
    8. ''à' → logprob: -3.922520637512207
    9. '_' → logprob: -4.047520637512207
    10. '_ex' → logprob: -4.297520637512207

Token 149: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.04910879209637642
    2. 'K' → logprob: -4.049108982086182
    3. 'ex' → logprob: -4.049108982086182
    4. ' éléments' → logprob: -4.924108982086182
    5. '#' → logprob: -6.049108982086182
    6. ' K' → logprob: -6.299108982086182
    7. 'elements' → logprob: -7.549108982086182
    8. 'é' → logprob: -8.049108505249023
    9. 'él' → logprob: -8.549108505249023
    10. ''ex' → logprob: -9.299108505249023

Token 150: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00044795009307563305
    2. 'm' → logprob: -8.625448226928711
    3. 'ment' → logprob: -9.000448226928711
    4. 'éments' → logprob: -9.250448226928711
    5. 'ements' → logprob: -10.375448226928711
    6. 'v' → logprob: -12.375448226928711
    7. 'mé' → logprob: -13.125448226928711
    8. '#' → logprob: -13.250448226928711
    9. 'MENTS' → logprob: -13.625448226928711
    10. '```' → logprob: -13.750448226928711

Token 151: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.29184263944625854
    2. ' à' → logprob: -1.4168426990509033
    3. '```' → logprob: -5.916842460632324
    4. '#' → logprob: -6.416842460632324
    5. 'ex' → logprob: -6.416842460632324
    6. 'K' → logprob: -6.416842460632324
    7. 'À' → logprob: -7.166842460632324
    8. 'to' → logprob: -7.791842460632324
    9. 'a' → logprob: -8.041842460632324
    10. ''à' → logprob: -8.166842460632324

Token 152: ' excl' (ID: 57282)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00046606172691099346
    2. ' excl' → logprob: -8.250466346740723
    3. '```' → logprob: -9.500466346740723
    4. 'exclude' → logprob: -9.750466346740723
    5. 'sup' → logprob: -11.000466346740723
    6. 'K' → logprob: -11.250466346740723
    7. 'excluding' → logprob: -12.000466346740723
    8. 'exc' → logprob: -12.250466346740723
    9. '#' → logprob: -12.375466346740723
    10. '(ex' → logprob: -13.125466346740723

Token 153: 'ure' (ID: 627)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3431521952152252
    2. 'ure' → logprob: -1.3431521654129028
    3. 'ur' → logprob: -3.9681522846221924
    4. 'uire' → logprob: -5.593152046203613
    5. 'uer' → logprob: -6.093152046203613
    6. 'us' → logprob: -6.093152046203613
    7. 'ue' → logprob: -7.218152046203613
    8. 'ut' → logprob: -7.968152046203613
    9. 'urer' → logprob: -8.468152046203613
    10. 'l' → logprob: -8.843152046203613

Token 154: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6506020426750183
    2. 'if' → logprob: -0.7756020426750183
    3. ' if' → logprob: -4.400601863861084
    4. ',' → logprob: -5.775601863861084
    5. ' :' → logprob: -6.900601863861084
    6. ' or' → logprob: -7.025601863861084
    7. ':
' → logprob: -8.775602340698242
    8. 'i' → logprob: -8.900602340698242
    9. '.' → logprob: -9.400602340698242
    10. 'or' → logprob: -10.400602340698242

Token 155: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.022484736517071724
    2. ' K' → logprob: -3.89748477935791
    3. ')' → logprob: -6.27248477935791
    4. ' )' → logprob: -10.27248477935791
    5. ' ' → logprob: -11.89748477935791
    6. '0' → logprob: -12.52248477935791
    7. ' ' → logprob: -13.39748477935791
    8. ',' → logprob: -13.39748477935791
    9. 'k' → logprob: -13.64748477935791
    10. '):' → logprob: -14.77248477935791

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5072160959243774
    2. '):' → logprob: -1.0072160959243774
    3. ' )' → logprob: -4.132215976715088
    4. ' ):' → logprob: -4.132215976715088
    5. ':' → logprob: -8.382216453552246
    6. ' or' → logprob: -8.632216453552246
    7. 'if' → logprob: -10.757216453552246
    8. ',' → logprob: -10.757216453552246
    9. '):
' → logprob: -11.382216453552246
    10. 'or' → logprob: -11.632216453552246

Token 157: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.043078898685053e-05
    2. ' if' → logprob: -9.500090599060059
    3. ':
' → logprob: -11.625090599060059
    4. ':' → logprob: -12.125090599060059
    5. '```' → logprob: -15.125090599060059
    6. 'i' → logprob: -15.250090599060059
    7. '
' → logprob: -15.250090599060059
    8. 'If' → logprob: -16.375089645385742
    9. '#' → logprob: -16.500089645385742
    10. ',' → logprob: -16.500089645385742

Token 158: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.16030049324035645
    2. 'N' → logprob: -1.9103004932403564
    3. ' ' → logprob: -9.535300254821777
    4. ' ' → logprob: -12.660300254821777
    5. '	N' → logprob: -14.660300254821777
    6. '  ' → logprob: -15.410300254821777
    7. '   ' → logprob: -16.285301208496094
    8. ' K' → logprob: -16.410301208496094
    9. 'K' → logprob: -18.035301208496094
    10. 'n' → logprob: -18.160301208496094

Token 159: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3869163691997528
    2. ' <=' → logprob: -1.1369163990020752
    3. '>' → logprob: -10.136916160583496
    4. '<' → logprob: -13.386916160583496
    5. ' >' → logprob: -13.511916160583496
    6. '>=' → logprob: -14.261916160583496
    7. ')<=' → logprob: -14.636916160583496
    8. '=' → logprob: -14.761916160583496
    9. '==' → logprob: -15.261916160583496
    10. ')' → logprob: -15.511916160583496

Token 160: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6931530237197876
    2. ' K' → logprob: -0.6931530237197876
    3. ' ' → logprob: -12.193153381347656
    4. ' ' → logprob: -14.693153381347656
    5. '0' → logprob: -16.443153381347656
    6. '	K' → logprob: -16.693153381347656
    7. 'k' → logprob: -17.068153381347656
    8. ',' → logprob: -17.568153381347656
    9. ')' → logprob: -18.068153381347656
    10. '  ' → logprob: -18.193153381347656

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4498052223643754e-05
    2. ':
' → logprob: -11.375014305114746
    3. ' :' → logprob: -12.875014305114746
    4. ':return' → logprob: -14.875014305114746
    5. ':**' → logprob: -17.250015258789062
    6. ':

' → logprob: -18.500015258789062
    7. ' or' → logprob: -18.750015258789062
    8. '):' → logprob: -19.000015258789062
    9. '.' → logprob: -19.250015258789062
    10. ':
' → logprob: -19.375015258789062

Token 162: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5855404734611511
    2. ':' → logprob: -1.085540533065796
    3. 'print' → logprob: -2.835540533065796
    4. '   ' → logprob: -3.085540533065796
    5. ' print' → logprob: -7.335540294647217
    6. ' :
' → logprob: -8.960540771484375
    7. '
' → logprob: -9.085540771484375
    8. ':return' → logprob: -9.835540771484375
    9. ' :' → logprob: -10.085540771484375
    10. ':
' → logprob: -10.710540771484375

Token 163: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05573490262031555
    2. ' print' → logprob: -2.930734872817993
    3. '   ' → logprob: -7.680735111236572
    4. '#' (adapté à ' #') → logprob: -9.430734634399414
    5. 'pass' → logprob: -9.805734634399414
    6. 'result' → logprob: -9.930734634399414
    7. 'raise' → logprob: -9.930734634399414
    8. 'exit' → logprob: -10.180734634399414
    9. 'for' → logprob: -10.680734634399414
    10. '
' → logprob: -10.805734634399414

Token 164: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04056829959154129
    2. ' print' → logprob: -3.2905683517456055
    3. '#' → logprob: -6.4155683517456055
    4. 'pass' → logprob: -8.540568351745605
    5. 'raise' → logprob: -8.665568351745605
    6. 'for' → logprob: -9.040568351745605
    7. 'exit' → logprob: -9.415568351745605
    8. '   ' → logprob: -9.415568351745605
    9. ' #' → logprob: -9.915568351745605
    10. 'result' → logprob: -10.540568351745605

Token 165: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018780607730150223
    2. ' print' → logprob: -4.643780708312988
    3. '0' → logprob: -5.018780708312988
    4. '   ' → logprob: -6.268780708312988
    5. 'pass' → logprob: -8.893780708312988
    6. ' ' → logprob: -9.143780708312988
    7. 'return' → logprob: -10.268780708312988
    8. ':' → logprob: -10.893780708312988
    9. 'exit' → logprob: -10.893780708312988
    10. '    ' → logprob: -11.018780708312988

Token 166: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5971421599388123
    2. 'e' → logprob: -1.847142219543457
    3. '#' → logprob: -2.597142219543457
    4. 'on' → logprob: -2.847142219543457
    5. 'ont' → logprob: -2.847142219543457
    6. 'es' → logprob: -2.972142219543457
    7. 'ela' → logprob: -4.347142219543457
    8. ''est' → logprob: -4.847142219543457
    9. 'ode' → logprob: -4.972142219543457
    10. 'i' → logprob: -5.597142219543457

Token 167: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4193282425403595
    2. '   ' → logprob: -1.419328212738037
    3. ' print' → logprob: -3.169328212738037
    4. '0' → logprob: -3.294328212738037
    5. ' ' → logprob: -4.544328212738037
    6. ':' → logprob: -5.794328212738037
    7. '  ' → logprob: -6.544328212738037
    8. '    ' → logprob: -6.794328212738037
    9. '
' → logprob: -7.294328212738037
    10. 'return' → logprob: -7.544328212738037

Token 168: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.3164355158805847
    2. ' cas' → logprob: -1.3164355754852295
    3. 'case' → logprob: -6.81643533706665
    4. 'print' → logprob: -7.06643533706665
    5. '#' → logprob: -7.69143533706665
    6. 'nombre' → logprob: -8.191435813903809
    7. '```' → logprob: -8.816435813903809
    8. 'plus' → logprob: -9.191435813903809
    9. ' case' → logprob: -11.066435813903809
    10. 'code' → logprob: -11.191435813903809

Token 169: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09003764390945435
    2. ':
' → logprob: -3.0900375843048096
    3. '   ' → logprob: -3.4650375843048096
    4. 'print' → logprob: -4.965037822723389
    5. ',' → logprob: -6.590037822723389
    6. '
' → logprob: -8.09003734588623
    7. ' :' → logprob: -8.21503734588623
    8. ' print' → logprob: -8.84003734588623
    9. ':return' → logprob: -9.96503734588623
    10. ' :
' → logprob: -10.09003734588623

Token 170: ' cela' (ID: 17542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04376738891005516
    2. ' print' → logprob: -3.1687674522399902
    3. '   ' → logprob: -7.66876745223999
    4. '#' → logprob: -8.793766975402832
    5. 'result' → logprob: -9.668766975402832
    6. 'exit' → logprob: -11.543766975402832
    7. '
' → logprob: -11.668766975402832
    8. 'raise' → logprob: -11.918766975402832
    9. 'prin' → logprob: -11.918766975402832
    10. ' #' → logprob: -12.043766975402832

Token 171: ' signifie' (ID: 81149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10815431922674179
    2. 'sign' → logprob: -3.108154296875
    3. ' signifie' → logprob: -3.483154296875
    4. 'im' → logprob: -4.733154296875
    5. ' print' → logprob: -5.233154296875
    6. '   ' → logprob: -5.608154296875
    7. 'n' → logprob: -5.608154296875
    8. 'return' → logprob: -6.483154296875
    9. '#' → logprob: -7.358154296875
    10. 'impl' → logprob: -8.358154296875

Token 172: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.9358680844306946
    2. '   ' → logprob: -1.0608680248260498
    3. ' qu' → logprob: -1.6858680248260498
    4. 'qu' → logprob: -3.56086802482605
    5. 'que' → logprob: -3.93586802482605
    6. 'print' → logprob: -4.435868263244629
    7. '#' → logprob: -4.560868263244629
    8. 'auc' → logprob: -6.685868263244629
    9. ' ' → logprob: -6.810868263244629
    10. ' #' → logprob: -6.935868263244629

Token 173: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.7670905590057373
    2. '#' → logprob: -1.7670905590057373
    3. '   ' → logprob: -2.2670905590057373
    4. ''on' → logprob: -2.3920905590057373
    5. 'on' → logprob: -3.2670905590057373
    6. 'print' → logprob: -3.2670905590057373
    7. 'il' → logprob: -3.7670905590057373
    8. ' il' → logprob: -4.267090797424316
    9. ''' → logprob: -4.267090797424316
    10. ' on' → logprob: -4.517090797424316

Token 174: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39039647579193115
    2. ' n' → logprob: -1.1403964757919312
    3. 'est' → logprob: -6.890396595001221
    4. 'f' → logprob: -7.015396595001221
    5. 'ne' → logprob: -7.890396595001221
    6. 'n't' → logprob: -8.015396118164062
    7. '#' → logprob: -8.390396118164062
    8. ' est' → logprob: -8.390396118164062
    9. ' faut' → logprob: -9.640396118164062
    10. 'y' → logprob: -9.640396118164062

Token 175: ''y' (ID: 27913)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6332347989082336
    2. 'y' → logprob: -1.0082347393035889
    3. ''y' → logprob: -3.133234739303589
    4. ' n' → logprob: -3.633234739303589
    5. ' y' → logprob: -3.633234739303589
    6. '   ' → logprob: -5.383234977722168
    7. '#' → logprob: -6.383234977722168
    8. 'a' → logprob: -7.133234977722168
    9. ''' → logprob: -9.258234977722168
    10. '```' → logprob: -9.258234977722168

Token 176: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0034377998672425747
    2. ' a' → logprob: -5.7534379959106445
    3. 'reste' → logprob: -9.378437995910645
    4. '#' → logprob: -9.628437995910645
    5. '#a' → logprob: -10.128437995910645
    6. ''a' → logprob: -10.753437995910645
    7. 'aur' → logprob: -11.003437995910645
    8. 'y' → logprob: -12.003437995910645
    9. 'rest' → logprob: -12.128437995910645
    10. 'à' → logprob: -12.503437995910645

Token 177: ' aucun' (ID: 41678)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3026120364665985
    2. 'auc' → logprob: -1.927612066268921
    3. ' aucun' → logprob: -3.052612066268921
    4. 'plus' → logprob: -3.302612066268921
    5. ' pas' → logprob: -3.677612066268921
    6. ' aucune' → logprob: -5.677611827850342
    7. ' plus' → logprob: -6.927611827850342
    8. 'r' → logprob: -7.552611827850342
    9. ' rien' → logprob: -7.802611827850342
    10. '#' → logprob: -8.1776123046875

Token 178: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.010476900264620781
    2. ' élément' → logprob: -4.635477066040039
    3. 'element' → logprob: -8.260477066040039
    4. 'é' → logprob: -8.260477066040039
    5. ' éléments' → logprob: -10.260477066040039
    6. ' él' → logprob: -10.510477066040039
    7. 'él' → logprob: -10.760477066040039
    8. 'éc' → logprob: -11.510477066040039
    9. 'height' → logprob: -11.635477066040039
    10. 'ha' → logprob: -11.635477066040039

Token 179: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5335059762001038
    2. 'rest' → logprob: -1.533505916595459
    3. 'val' → logprob: -2.408505916595459
    4. ' à' → logprob: -4.033505916595459
    5. 'd' → logprob: -4.158505916595459
    6. 'de' → logprob: -4.283505916595459
    7. ' valide' → logprob: -4.783505916595459
    8. 'non' → logprob: -4.908505916595459
    9. 'valid' → logprob: -5.033505916595459
    10. ' restant' → logprob: -5.408505916595459

Token 180: ' considérer' (ID: 172894)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.46665525436401367
    2. 'cons' → logprob: -1.8416552543640137
    3. 'consider' → logprob: -2.5916552543640137
    4. 'g' → logprob: -2.8416552543640137
    5. 'incl' → logprob: -3.7166552543640137
    6. 'reten' → logprob: -4.341655254364014
    7. 'con' → logprob: -4.341655254364014
    8. 'prendre' → logprob: -4.591655254364014
    9. 'ret' → logprob: -5.216655254364014
    10. 'comp' → logprob: -6.091655254364014

Token 181: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4906674921512604
    2. 'print' → logprob: -1.740667462348938
    3. ',' → logprob: -1.865667462348938
    4. ':' → logprob: -3.4906675815582275
    5. 'for' → logprob: -4.990667343139648
    6. ',
' → logprob: -5.365667343139648
    7. '.' → logprob: -5.490667343139648
    8. ':
' → logprob: -5.615667343139648
    9. '
' → logprob: -6.115667343139648
    10. '#' → logprob: -6.490667343139648

Token 182: ' qu' (ID: 474)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.6520216464996338
    2. ' que' → logprob: -1.4020216464996338
    3. 'qu' → logprob: -2.902021646499634
    4. '#' → logprob: -3.027021646499634
    5. 'une' → logprob: -4.027021408081055
    6. 'auc' → logprob: -4.277021408081055
    7. 'à' → logprob: -4.402021408081055
    8. ' qu' → logprob: -4.652021408081055
    9. 'possible' → logprob: -4.652021408081055
    10. 'cela' → logprob: -4.902021408081055

Token 183: ''ils' (ID: 41108)
  Prédit: ''il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.308011919260025
    2. ''' → logprob: -2.183012008666992
    3. 'e' → logprob: -2.558012008666992
    4. 'u' → logprob: -3.183012008666992
    5. 'il' → logprob: -4.558012008666992
    6. ''un' → logprob: -4.808012008666992
    7. ''on' → logprob: -5.308012008666992
    8. ''ils' → logprob: -5.933012008666992
    9. 'on' → logprob: -6.683012008666992
    10. ''une' → logprob: -6.808012008666992

Token 184: ' sont' (ID: 5242)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4123918116092682
    2. 'ne' → logprob: -2.1623919010162354
    3. ' n' → logprob: -2.4123919010162354
    4. 's' → logprob: -3.0373919010162354
    5. ' ne' → logprob: -3.4123919010162354
    6. '#' → logprob: -3.5373919010162354
    7. 'ont' → logprob: -5.412391662597656
    8. 'rest' → logprob: -5.412391662597656
    9. ' sont' → logprob: -6.162391662597656
    10. '   ' → logprob: -6.162391662597656

Token 185: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11763258278369904
    2. ' tous' → logprob: -2.7426326274871826
    3. 'ég' → logprob: -3.9926326274871826
    4. 'ex' → logprob: -4.1176323890686035
    5. ' ég' → logprob: -5.2426323890686035
    6. 'à' → logprob: -5.9926323890686035
    7. 'égal' → logprob: -7.1176323890686035
    8. 'exact' → logprob: -7.2426323890686035
    9. '#' → logprob: -7.3676323890686035
    10. 'to' → logprob: -8.117632865905762

Token 186: ' exclus' (ID: 9398)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.003605297766625881
    2. ' exclus' → logprob: -6.003605365753174
    3. 'à' → logprob: -7.128605365753174
    4. ' excl' → logprob: -9.253604888916016
    5. 'excluded' → logprob: -9.378604888916016
    6. ' à' → logprob: -10.128604888916016
    7. 'ég' → logprob: -10.253604888916016
    8. 'sup' → logprob: -11.253604888916016
    9. ' ex' → logprob: -11.253604888916016
    10. 'égal' → logprob: -11.628604888916016

Token 187: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.507826030254364
    2. '   ' → logprob: -1.0078260898590088
    3. 'print' → logprob: -4.25782585144043
    4. ':
' → logprob: -4.38282585144043
    5. ',' → logprob: -5.38282585144043
    6. '.' → logprob: -6.75782585144043
    7. ' :' → logprob: -8.38282585144043
    8. '#' → logprob: -8.63282585144043
    9. ' print' → logprob: -9.50782585144043
    10. ')' → logprob: -10.13282585144043

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35648179054260254
    2. 'print' → logprob: -1.8564817905426025
    3. ':' → logprob: -1.9814817905426025
    4. ':
' → logprob: -5.481481552124023
    5. ' print' → logprob: -7.231481552124023
    6. ' :' → logprob: -8.231481552124023
    7. '
' → logprob: -8.856481552124023
    8. '#' → logprob: -9.356481552124023
    9. 'result' → logprob: -9.481481552124023
    10. '    
' → logprob: -9.606481552124023

Token 189: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003022037213668227
    2. ' print' → logprob: -6.628022193908691
    3. 'result' → logprob: -6.753022193908691
    4. '   ' → logprob: -8.253022193908691
    5. 'max' → logprob: -9.878022193908691
    6. '#' (adapté à ' #') → logprob: -9.878022193908691
    7. 'pass' → logprob: -10.253022193908691
    8. 'return' → logprob: -10.378022193908691
    9. 'res' → logprob: -10.628022193908691
    10. 'exit' → logprob: -11.128022193908691

Token 190: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007490088231861591
    2. ' print' → logprob: -5.132490158081055
    3. '#' → logprob: -7.257490158081055
    4. 'result' → logprob: -7.632490158081055
    5. '   ' → logprob: -8.507490158081055
    6. 'pass' → logprob: -10.382490158081055
    7. '
' → logprob: -10.382490158081055
    8. 'return' → logprob: -10.757490158081055
    9. 'exit' → logprob: -11.132490158081055
    10. 'raise' → logprob: -11.132490158081055

Token 191: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.49771586060523987
    2. 'icher' → logprob: -0.9977158308029175
    3. 'ich' → logprob: -4.497715950012207
    4. 'ichage' → logprob: -5.122715950012207
    5. '#' → logprob: -5.622715950012207
    6. '   ' → logprob: -6.622715950012207
    7. 'ic' → logprob: -7.747715950012207
    8. 'f' → logprob: -7.747715950012207
    9. '```' → logprob: -8.872715950012207
    10. 'print' → logprob: -9.247715950012207

Token 192: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03143573924899101
    2. '(' → logprob: -3.53143572807312
    3. 'print' → logprob: -6.906435966491699
    4. '("' → logprob: -8.5314359664917
    5. ' ' → logprob: -8.9064359664917
    6. 'max' → logprob: -9.1564359664917
    7. '-' → logprob: -9.9064359664917
    8. '"' → logprob: -10.1564359664917
    9. '(N' → logprob: -10.6564359664917
    10. '(-' → logprob: -10.7814359664917

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004329710267484188
    2. 'Impossible' → logprob: -6.004329681396484
    3. ' ' → logprob: -7.379329681396484
    4. '-' → logprob: -8.129329681396484
    5. 'auc' → logprob: -8.504329681396484
    6. '"' → logprob: -8.504329681396484
    7. 'None' → logprob: -8.754329681396484
    8. 'All' → logprob: -9.754329681396484
    9. 'No' → logprob: -10.379329681396484
    10. 'IMP' → logprob: -10.379329681396484

Token 194: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08646780252456665
    2. ')' → logprob: -2.836467742919922
    3. '")
' → logprob: -4.211467742919922
    4. ')
' → logprob: -5.461467742919922
    5. '"' → logprob: -5.461467742919922
    6. 'print' → logprob: -7.586467742919922
    7. '"
' → logprob: -9.211467742919922
    8. '")
' → logprob: -9.336467742919922
    9. ')
' → logprob: -10.336467742919922
    10. ' )' → logprob: -10.336467742919922

Token 195: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023764846846461296
    2. '   ' → logprob: -6.877376556396484
    3. '
' → logprob: -7.127376556396484
    4. ')' → logprob: -8.252376556396484
    5. ' print' → logprob: -8.627376556396484
    6. 'else' → logprob: -10.502376556396484
    7. ')
' → logprob: -10.627376556396484
    8. '```' → logprob: -11.002376556396484
    9. '0' → logprob: -11.627376556396484
    10. ',' → logprob: -11.627376556396484

Token 196: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4086751341819763
    2. ' la' → logprob: -1.783675193786621
    3. 'l' → logprob: -2.783675193786621
    4. 'print' → logprob: -2.783675193786621
    5. ' l' → logprob: -4.533675193786621
    6. 'a' → logprob: -5.158675193786621
    7. 'ucune' → logprob: -5.408675193786621
    8. 'u' → logprob: -5.658675193786621
    9. 'au' → logprob: -5.908675193786621
    10. 'stdout' → logprob: -6.283675193786621

Token 197: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023825690150260925
    2. 'print' → logprob: -3.8988256454467773
    3. 'e' → logprob: -6.023825645446777
    4. ''écran' → logprob: -8.023825645446777
    5. 'output' → logprob: -8.648825645446777
    6. ''utilisateur' → logprob: -9.273825645446777
    7. 'es' → logprob: -10.023825645446777
    8. ''' → logprob: -10.273825645446777
    9. ''impression' → logprob: -10.398825645446777
    10. '   ' → logprob: -11.273825645446777

Token 198: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10002688318490982
    2. '
' → logprob: -2.725026845932007
    3. '   ' → logprob: -3.600026845932007
    4. ' print' → logprob: -7.225027084350586
    5. ')
' → logprob: -7.350027084350586
    6. ')' → logprob: -7.475027084350586
    7. '    
' → logprob: -8.850027084350586
    8. '```' → logprob: -9.600027084350586
    9. '\n' → logprob: -10.100027084350586
    10. '0' → logprob: -10.850027084350586

Token 199: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023183975368738174
    2. '   ' → logprob: -3.898184061050415
    3. ' print' → logprob: -6.648183822631836
    4. '
' → logprob: -7.023183822631836
    5. '```' → logprob: -8.398183822631836
    6. ')' → logprob: -8.773183822631836
    7. ':' → logprob: -10.898183822631836
    8. '0' → logprob: -11.523183822631836
    9. ')
' → logprob: -11.648183822631836
    10. '    
' → logprob: -12.023183822631836

Token 200: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00351204932667315
    2. ' print' → logprob: -5.753511905670166
    3. '   ' → logprob: -8.003512382507324
    4. '```' → logprob: -18.253511428833008
    5. ' ' → logprob: -19.128511428833008
    6. '	print' → logprob: -19.253511428833008
    7. '    ' → logprob: -20.753511428833008
    8. '  ' → logprob: -21.378511428833008
    9. 'Print' → logprob: -21.503511428833008
    10. '0' → logprob: -21.628511428833008

Token 201: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010199354437645525
    2. '("' → logprob: -9.750102043151855
    3. ' (' → logprob: -10.125102043151855
    4. '0' → logprob: -13.250102043151855
    5. '('' → logprob: -13.875102043151855
    6. '()' → logprob: -14.375102043151855
    7. '(
' → logprob: -15.125102043151855
    8. '(

' → logprob: -17.75010108947754
    9. ' ' → logprob: -18.12510108947754
    10. '("")' → logprob: -18.50010108947754

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '")' → logprob: -18.375001907348633
    4. '"' → logprob: -19.125001907348633
    5. '   ' → logprob: -20.250001907348633
    6. ')' → logprob: -22.250001907348633
    7. '```' → logprob: -22.500001907348633
    8. '  ' → logprob: -22.875001907348633
    9. ' ' → logprob: -22.875001907348633
    10. '""' → logprob: -23.250001907348633

Token 203: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004178479313850403
    2. ')' → logprob: -5.629178524017334
    3. ')")' → logprob: -8.004178047180176
    4. '")
' → logprob: -8.379178047180176
    5. '")
' → logprob: -11.504178047180176
    6. ')
' → logprob: -13.254178047180176
    7. ')")
' → logprob: -14.129178047180176
    8. ')"' → logprob: -14.254178047180176
    9. '"' → logprob: -15.254178047180176
    10. '”)' → logprob: -15.379178047180176

Token 204: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.0339031834737398e-05
    2. ' else' → logprob: -11.250020027160645
    3. 'elif' → logprob: -11.875020027160645
    4. '```' → logprob: -16.12502098083496
    5. 'el' → logprob: -16.87502098083496
    6. '    
' → logprob: -16.87502098083496
    7. '
' → logprob: -17.00002098083496
    8. '#else' → logprob: -17.50002098083496
    9. 'els' → logprob: -17.87502098083496
    10. ')' → logprob: -17.87502098083496

Token 205: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.751746746478602e-05
    2. 'elif' → logprob: -10.12504768371582
    3. ' else' → logprob: -12.12504768371582
    4. '    
' → logprob: -14.87504768371582
    5. 'el' → logprob: -15.00004768371582
    6. '
' → logprob: -15.12504768371582
    7. 'exit' → logprob: -15.50004768371582
    8. ')' → logprob: -15.62504768371582
    9. 'e' → logprob: -15.87504768371582
    10. 'els' → logprob: -16.00004768371582

Token 206: ' Quit' (ID: 102950)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.09818592667579651
    2. 'else' → logprob: -2.5981860160827637
    3. ' exit' → logprob: -3.9731860160827637
    4. ' else' → logprob: -8.848185539245605
    5. 'elif' → logprob: -9.098185539245605
    6. 'quit' → logprob: -10.723185539245605
    7. '	exit' → logprob: -12.223185539245605
    8. '```' → logprob: -12.848185539245605
    9. 'return' → logprob: -12.973185539245605
    10. '_exit' → logprob: -13.223185539245605

Token 207: 'te' (ID: 411)
  Prédit: 'uit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uit' → logprob: -0.7759519219398499
    2. 'uer' → logprob: -1.150951862335205
    3. 'er' → logprob: -2.650951862335205
    4. 'u' → logprob: -3.025951862335205
    5. '()' → logprob: -3.275951862335205
    6. 'uire' → logprob: -3.775951862335205
    7. 'exit' → logprob: -4.275951862335205
    8. 'it' → logprob: -4.775951862335205
    9. 'uir' → logprob: -5.275951862335205
    10. '```' → logprob: -5.650951862335205

Token 208: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.875015258789062
    3. '())' → logprob: -12.250015258789062
    4. '()
' → logprob: -14.000015258789062
    5. ' ()' → logprob: -14.875015258789062
    6. 'the' → logprob: -15.000015258789062
    7. ')' → logprob: -15.000015258789062
    8. '<|end|>' → logprob: -15.375015258789062
    9. '()

' → logprob: -15.500015258789062
    10. '()<' → logprob: -15.875015258789062

Token 209: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.10683341324329376
    2. 'program' → logprob: -2.6068334579467773
    3. ' programme' → logprob: -3.6068334579467773
    4. ' program' → logprob: -8.106833457946777
    5. 'script' → logprob: -9.731833457946777
    6. 'code' → logprob: -10.606833457946777
    7. 'prog' → logprob: -11.606833457946777
    8. 'programma' → logprob: -11.731833457946777
    9. 'Programme' → logprob: -12.231833457946777
    10. ' script' → logprob: -12.481833457946777

Token 210: ' immédiatement' (ID: 100743)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.3182101845741272
    2. 'import' → logprob: -1.5682101249694824
    3. '   ' → logprob: -3.1932101249694824
    4. '	exit' → logprob: -4.318210124969482
    5. ' exit' → logprob: -4.818210124969482
    6. 'quit' → logprob: -7.818210124969482
    7. '```' → logprob: -7.818210124969482
    8. '    
' → logprob: -8.44321060180664
    9. 'else' → logprob: -8.81821060180664
    10. '(exit' → logprob: -8.94321060180664

Token 211: ' sans' (ID: 9828)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7849339246749878
    2. 'exit' → logprob: -0.7849339246749878
    3. ' exit' → logprob: -3.2849340438842773
    4. '	exit' → logprob: -3.5349340438842773
    5. '   ' → logprob: -4.159934043884277
    6. 'quit' → logprob: -6.409934043884277
    7. '```' → logprob: -7.284934043884277
    8. '(exit' → logprob: -7.534934043884277
    9. '<|end|>' → logprob: -7.659934043884277
    10. '    
' → logprob: -7.784934043884277

Token 212: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.17264175415039062
    2. ' continuer' → logprob: -2.1726417541503906
    3. ' ex' → logprob: -4.172641754150391
    4. 'contin' → logprob: -4.797641754150391
    5. 'import' → logprob: -5.297641754150391
    6. ' poursuivre' → logprob: -5.547641754150391
    7. 'execut' → logprob: -5.547641754150391
    8. 'exec' → logprob: -5.672641754150391
    9. ' execut' → logprob: -6.672641754150391
    10. 'exit' → logprob: -6.797641754150391

Token 213: 'éc' (ID: 5675)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -6.897412822581828e-05
    2. 'iter' → logprob: -9.750068664550781
    3. 'import' → logprob: -12.000068664550781
    4. '
' → logprob: -13.625068664550781
    5. ' it' → logprob: -14.250068664550781
    6. 'iting' → logprob: -14.750068664550781
    7. 'itter' → logprob: -15.250068664550781
    8. 'ite' → logprob: -15.500068664550781
    9. 'i' → logprob: -15.500068664550781
    10. 'exit' → logprob: -15.500068664550781

Token 214: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -2.2200749754119897e-06
    2. 'ution' → logprob: -13.750001907348633
    3. 'ute' → logprob: -14.500001907348633
    4. 'ut' → logprob: -15.250001907348633
    5. 'utter' → logprob: -15.625001907348633
    6. 'user' → logprob: -17.625001907348633
    7. 'uteur' → logprob: -18.500001907348633
    8. 'urer' → logprob: -18.625001907348633
    9. 'utor' → logprob: -18.750001907348633
    10. 'ter' → logprob: -18.875001907348633

Token 215: ' les' (ID: 1341)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8137444853782654
    2. 'exit' → logprob: -1.4387445449829102
    3. 'auc' → logprob: -3.06374454498291
    4. '<|end|>' → logprob: -3.06374454498291
    5. 'ent' → logprob: -3.31374454498291
    6. '()' → logprob: -3.81374454498291
    7. '_' → logprob: -3.93874454498291
    8. 'else' → logprob: -4.06374454498291
    9. ' aucune' → logprob: -4.06374454498291
    10. 'es' → logprob: -4.43874454498291

Token 216: ' instructions' (ID: 15543)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -1.1387608051300049
    2. ' code' → logprob: -1.6387608051300049
    3. 'rest' → logprob: -1.8887608051300049
    4. ' reste' → logprob: -1.8887608051300049
    5. 'reste' → logprob: -2.013760805130005
    6. ' rest' → logprob: -4.388760566711426
    7. '#' → logprob: -4.513760566711426
    8. 'codes' → logprob: -5.138760566711426
    9. 'instructions' → logprob: -5.263760566711426
    10. 'else' → logprob: -5.638760566711426

Token 217: ' suivantes' (ID: 106173)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20373961329460144
    2. '```' → logprob: -2.578739643096924
    3. '   ' → logprob: -3.203739643096924
    4. ' suivantes' → logprob: -3.828739643096924
    5. 's' → logprob: -4.203739643096924
    6. 'exit' → logprob: -4.703739643096924
    7. 'su' → logprob: -5.328739643096924
    8. 'else' → logprob: -5.578739643096924
    9. 'suite' → logprob: -6.453739643096924
    10. '.' → logprob: -6.453739643096924

Token 218: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.31046751141548157
    2. '
' → logprob: -2.185467481613159
    3. 'exit' → logprob: -2.310467481613159
    4. '   ' → logprob: -3.810467481613159
    5. '	exit' → logprob: -4.435467720031738
    6. ' exit' → logprob: -5.060467720031738
    7. '<|end|>' → logprob: -5.435467720031738
    8. ')' → logprob: -5.685467720031738
    9. '    
' → logprob: -6.060467720031738
    10. '```' → logprob: -6.810467720031738

Token 219: '   ' (ID: 271)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.21086812019348145
    2. 'import' → logprob: -1.7108681201934814
    3. '   ' → logprob: -4.960867881774902
    4. ' exit' → logprob: -6.585867881774902
    5. '	exit' → logprob: -7.460867881774902
    6. 'quit' → logprob: -8.335867881774902
    7. 'else' → logprob: -9.460867881774902
    8. '```' → logprob: -9.710867881774902
    9. '.exit' → logprob: -11.085867881774902
    10. '(exit' → logprob: -11.210867881774902

Token 220: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.0055955140851438046
    2. 'import' → logprob: -5.255595684051514
    3. 'quit' → logprob: -8.005595207214355
    4. ' exit' → logprob: -10.505595207214355
    5. '   ' → logprob: -15.005595207214355
    6. '	exit' → logprob: -15.505595207214355
    7. ' quit' → logprob: -16.380596160888672
    8. 'return' → logprob: -16.505596160888672
    9. '```' → logprob: -17.380596160888672
    10. '.exit' → logprob: -18.005596160888672

Token 221: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.8087270038668066e-05
    2. '(' → logprob: -10.625027656555176
    3. '())' → logprob: -13.125027656555176
    4. '()
' → logprob: -14.375027656555176
    5. ' ()' → logprob: -14.625027656555176
    6. '()>' → logprob: -15.500027656555176
    7. '()`' → logprob: -15.875027656555176
    8. '()

' → logprob: -16.375028610229492
    9. '();' → logprob: -16.750028610229492
    10. '()<' → logprob: -17.000028610229492

Token 222: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07329048961400986
    2. 'H' → logprob: -3.4482905864715576
    3. 'max' → logprob: -4.0732903480529785
    4. 'remaining' → logprob: -4.8232903480529785
    5. 'else' → logprob: -5.0732903480529785
    6. 'rest' → logprob: -6.3232903480529785
    7. 'min' → logprob: -7.0732903480529785
    8. 'filtered' → logprob: -7.4482903480529785
    9. 'sorted' → logprob: -7.5732903480529785
    10. 'result' → logprob: -7.5732903480529785

Token 223: ' Initialise' (ID: 179601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32136228680610657
    2. 'H' → logprob: -1.4463622570037842
    3. 'sorted' → logprob: -4.321362495422363
    4. 'remaining' → logprob: -4.696362495422363
    5. 'filtered' → logprob: -4.696362495422363
    6. 'rest' → logprob: -6.446362495422363
    7. 'max' → logprob: -6.946362495422363
    8. 'tri' → logprob: -7.446362495422363
    9. 'tr' → logprob: -7.696362495422363
    10. 'K' → logprob: -7.946362495422363

Token 224: ' une' (ID: 2463)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3029012680053711
    2. ' max' → logprob: -1.677901268005371
    3. ' result' → logprob: -4.302901268005371
    4. 'result' → logprob: -4.302901268005371
    5. ' une' → logprob: -4.302901268005371
    6. 'min' → logprob: -5.052901268005371
    7. '#' → logprob: -5.552901268005371
    8. 'une' → logprob: -5.927901268005371
    9. 'res' → logprob: -6.177901268005371
    10. ' min' → logprob: -6.302901268005371

Token 225: ' variable' (ID: 11076)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8600469827651978
    2. 'variable' → logprob: -2.235046863555908
    3. 'result' → logprob: -2.610046863555908
    4. '#' → logprob: -2.735046863555908
    5. 's' → logprob: -3.110046863555908
    6. 'fen' → logprob: -3.110046863555908
    7. 'liste' → logprob: -3.235046863555908
    8. 'min' → logprob: -3.360046863555908
    9. 'subset' → logprob: -3.485046863555908
    10. 'sorted' → logprob: -3.735046863555908

Token 226: ' pour' (ID: 1930)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.44316062331199646
    2. 'result' → logprob: -1.8181606531143188
    3. ' max' → logprob: -2.4431605339050293
    4. ' result' → logprob: -3.4431605339050293
    5. 'answer' → logprob: -3.8181605339050293
    6. 'res' → logprob: -4.068160533905029
    7. 'count' → logprob: -4.693160533905029
    8. 'ans' → logprob: -5.068160533905029
    9. 'min' → logprob: -5.193160533905029
    10. ' answer' → logprob: -5.568160533905029

Token 227: ' stock' (ID: 6546)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20480039715766907
    2. 'tr' → logprob: -3.0798003673553467
    3. 's' → logprob: -3.7048003673553467
    4. 'la' → logprob: -3.8298003673553467
    5. 'min' → logprob: -4.329800605773926
    6. '#' → logprob: -4.329800605773926
    7. 'stock' → logprob: -4.454800605773926
    8. 'comp' → logprob: -4.704800605773926
    9. 'result' → logprob: -4.829800605773926
    10. 'som' → logprob: -4.954800605773926

Token 228: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -7.896309739408025e-07
    2. 'e' → logprob: -15.375000953674316
    3. '#' → logprob: -15.625000953674316
    4. '­er' → logprob: -15.625000953674316
    5. 'r' → logprob: -15.750000953674316
    6. 'érer' → logprob: -17.375
    7. '_' → logprob: -17.625
    8. '=' → logprob: -18.125
    9. 'ner' → logprob: -18.125
    10. 'ar' → logprob: -18.25

Token 229: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18753401935100555
    2. 'la' → logprob: -2.4375340938568115
    3. 'le' → logprob: -3.0625340938568115
    4. 'result' → logprob: -3.6875340938568115
    5. 'maximum' → logprob: -5.812533855438232
    6. 'res' → logprob: -5.937533855438232
    7. 'answer' → logprob: -6.937533855438232
    8. 'ma' → logprob: -7.187533855438232
    9. 'une' → logprob: -7.687533855438232
    10. 'count' → logprob: -7.812533855438232

Token 230: ' réponse' (ID: 50332)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21389618515968323
    2. 'max' → logprob: -2.2138962745666504
    3. 'val' → logprob: -3.3388962745666504
    4. 'ha' → logprob: -3.8388962745666504
    5. 'maximum' → logprob: -5.08889627456665
    6. 'result' → logprob: -5.21389627456665
    7. 'som' → logprob: -5.21389627456665
    8. 'sum' → logprob: -6.33889627456665
    9. 'ma' → logprob: -6.71389627456665
    10. '#' → logprob: -6.83889627456665

Token 231: ' finale' (ID: 37759)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.051809549331665
    2. ' answer' → logprob: -1.426809549331665
    3. ' max' → logprob: -1.676809549331665
    4. 'max' → logprob: -2.051809549331665
    5. ' ans' → logprob: -2.926809549331665
    6. 'ans' → logprob: -3.801809549331665
    7. 'result' → logprob: -5.051809310913086
    8. ' result' → logprob: -5.051809310913086
    9. 'res' → logprob: -6.051809310913086
    10. ' maximum' → logprob: -7.301809310913086

Token 232: '.' (ID: 13)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.738601565361023
    2. ' answer' → logprob: -1.488601565361023
    3. 'max' → logprob: -1.613601565361023
    4. ' max' → logprob: -3.1136016845703125
    5. 'ans' → logprob: -3.7386016845703125
    6. ' ans' → logprob: -3.8636016845703125
    7. 'result' → logprob: -5.2386016845703125
    8. ' result' → logprob: -6.4886016845703125
    9. 'res' → logprob: -7.3636016845703125
    10. ' maximum' → logprob: -8.988601684570312

Token 233: ' Elle' (ID: 21300)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.09990584850311279
    2. 'ans' → logprob: -2.9749059677124023
    3. 'max' → logprob: -3.3499059677124023
    4. 'result' → logprob: -5.224905967712402
    5. 'res' → logprob: -5.974905967712402
    6. ' answer' → logprob: -8.099905967712402
    7. 'min' → logprob: -8.724905967712402
    8. 'maximum' → logprob: -9.599905967712402
    9. 'best' → logprob: -9.724905967712402
    10. 'total' → logprob: -9.724905967712402

Token 234: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0486162044107914
    2. ' =' → logprob: -3.0486161708831787
    3. 'max' → logprob: -12.173616409301758
    4. 's' → logprob: -12.173616409301758
    5. '_' → logprob: -12.798616409301758
    6. ',' → logprob: -13.173616409301758
    7. '.' → logprob: -13.298616409301758
    8. '=None' → logprob: -13.298616409301758
    9. '=[]' → logprob: -13.673616409301758
    10. '=
' → logprob: -13.798616409301758

Token 235: ' mise' (ID: 25868)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4430386424064636
    2. '0' → logprob: -1.5680387020111084
    3. 'float' → logprob: -2.4430387020111084
    4. '-' → logprob: -3.0680387020111084
    5. 'H' → logprob: -5.068038463592529
    6. 'min' → logprob: -5.193038463592529
    7. '=' → logprob: -6.693038463592529
    8. ' max' → logprob: -7.818038463592529
    9. 'None' → logprob: -7.818038463592529
    10. ' float' → logprob: -8.068038940429688

Token 236: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8397577404975891
    2. ' à' → logprob: -1.7147576808929443
    3. '=' → logprob: -1.8397576808929443
    4. 'au' → logprob: -1.9647576808929443
    5. 'max' → logprob: -2.7147576808929443
    6. ' =' → logprob: -4.339757919311523
    7. 'a' → logprob: -5.714757919311523
    8. 'equal' → logprob: -6.839757919311523
    9. 'initial' → logprob: -7.214757919311523
    10. ' au' → logprob: -7.464757919311523

Token 237: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14147721230983734
    2. 'float' → logprob: -2.391477108001709
    3. '-' → logprob: -3.891477108001709
    4. 'max' → logprob: -4.266477108001709
    5. 'len' → logprob: -6.266477108001709
    6. 'H' → logprob: -6.516477108001709
    7. 'N' → logprob: -6.766477108001709
    8. 'None' → logprob: -7.016477108001709
    9. '100' → logprob: -9.266477584838867
    10. 'l' → logprob: -9.516477584838867

Token 238: ' car' (ID: 1669)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.1001594290137291
    2. 'max' → logprob: -2.9751594066619873
    3. 'ans' → logprob: -3.7251594066619873
    4. 'result' → logprob: -4.100159645080566
    5. ' answer' → logprob: -6.350159645080566
    6. 'res' → logprob: -6.850159645080566
    7. ' max' → logprob: -8.350159645080566
    8. 'total' → logprob: -8.975159645080566
    9. ' ans' → logprob: -9.225159645080566
    10. 'count' → logprob: -9.600159645080566

Token 239: ' on' (ID: 402)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7888127565383911
    2. 'max' → logprob: -0.7888127565383911
    3. 'H' → logprob: -3.9138126373291016
    4. 'la' → logprob: -4.288812637329102
    5. 'le' → logprob: -4.413812637329102
    6. 'len' → logprob: -4.788812637329102
    7. 'on' → logprob: -4.788812637329102
    8. ' max' → logprob: -5.038812637329102
    9. ' on' → logprob: -5.788812637329102
    10. 'auc' → logprob: -5.788812637329102

Token 240: ' va' (ID: 3423)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.780964195728302
    2. ' cherche' → logprob: -1.6559641361236572
    3. 'va' → logprob: -2.4059641361236572
    4. ' veut' → logprob: -3.1559641361236572
    5. 'do' → logprob: -3.2809641361236572
    6. '#' → logprob: -3.4059641361236572
    7. ' doit' → logprob: -3.5309641361236572
    8. ' va' → logprob: -4.030964374542236
    9. 's' → logprob: -4.280964374542236
    10. 'n' → logprob: -4.530964374542236

Token 241: ' addition' (ID: 5856)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.787425696849823
    2. '0' → logprob: -0.912425696849823
    3. 'tr' → logprob: -2.7874257564544678
    4. '-' → logprob: -3.6624257564544678
    5. '-tr' → logprob: -3.7874257564544678
    6. 'chercher' → logprob: -4.412425518035889
    7. 'min' → logprob: -5.037425518035889
    8. 'calcul' → logprob: -5.912425518035889
    9. 's' → logprob: -6.537425518035889
    10. 'som' → logprob: -6.912425518035889

Token 242: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.2382536679506302
    2. '   ' → logprob: -2.613253593444824
    3. 'er' → logprob: -2.738253593444824
    4. '+' → logprob: -3.363253593444824
    5. ' ' → logprob: -4.738253593444824
    6. '(' → logprob: -4.988253593444824
    7. '=' → logprob: -5.113253593444824
    8. ' +=' → logprob: -5.488253593444824
    9. 'r' → logprob: -5.738253593444824
    10. 'e' → logprob: -6.113253593444824

Token 243: ' dessus' (ID: 67454)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13622063398361206
    2. 'H' → logprob: -2.761220693588257
    3. 'max' → logprob: -3.261220693588257
    4. 'sum' → logprob: -4.386220455169678
    5. 'total' → logprob: -5.511220455169678
    6. 'les' → logprob: -6.011220455169678
    7. 's' → logprob: -6.386220455169678
    8. 'result' → logprob: -6.386220455169678
    9. 'res' → logprob: -7.761220455169678
    10. ' H' → logprob: -7.886220455169678

Token 244: '.
' (ID: 558)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.07002924382686615
    2. 'ans' → logprob: -3.0700292587280273
    3. 'max' → logprob: -4.820029258728027
    4. 'result' → logprob: -5.195029258728027
    5. 'total' → logprob: -5.320029258728027
    6. ' answer' → logprob: -6.695029258728027
    7. 'res' → logprob: -7.320029258728027
    8. 'sum' → logprob: -7.945029258728027
    9. 'H' → logprob: -8.945029258728027
    10. ' ans' → logprob: -9.445029258728027

Token 245: 'ans' (ID: 616)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.06740105152130127
    2. 'result' → logprob: -3.5674009323120117
    3. 'ans' → logprob: -3.8174009323120117
    4. 'total' → logprob: -4.692400932312012
    5. 'res' → logprob: -6.317400932312012
    6. 'max' → logprob: -6.442400932312012
    7. 'sum' → logprob: -6.567400932312012
    8. 's' → logprob: -7.317400932312012
    9. 'score' → logprob: -9.692400932312012
    10. 'S' → logprob: -9.942400932312012

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020763427019119
    2. '=' → logprob: -2.350207567214966
    3. ' +=' → logprob: -14.975207328796387
    4. ' ' → logprob: -15.100207328796387
    5. ' ' → logprob: -15.725207328796387
    6. ',' → logprob: -16.100208282470703
    7. '.' → logprob: -17.225208282470703
    8. '_' → logprob: -17.350208282470703
    9. '＝' → logprob: -17.725208282470703
    10. ')' → logprob: -18.100208282470703

Token 247: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008946668240241706
    2. 'sum' → logprob: -7.375894546508789
    3. 'max' → logprob: -8.625894546508789
    4. 'H' → logprob: -10.625894546508789
    5. ' ' → logprob: -10.625894546508789
    6. 'float' → logprob: -10.750894546508789
    7. '1' → logprob: -12.250894546508789
    8. '100' → logprob: -12.750894546508789
    9. '-' → logprob: -13.125894546508789
    10. '10' → logprob: -13.250894546508789

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25303900241851807
    2. 'sum' → logprob: -1.503039002418518
    3. 'float' → logprob: -7.5030388832092285
    4. 'max' → logprob: -8.128039360046387
    5. 'min' → logprob: -9.253039360046387
    6. '100' → logprob: -9.753039360046387
    7. '10' → logprob: -10.753039360046387
    8. 'H' → logprob: -11.628039360046387
    9. '1' → logprob: -11.628039360046387
    10. '999' → logprob: -11.753039360046387

Token 249: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5907991528511047
    2. 'H' → logprob: -0.8407991528511047
    3. '#' → logprob: -4.465799331665039
    4. 'sorted' → logprob: -6.715799331665039
    5. ' for' → logprob: -7.215799331665039
    6. 'min' → logprob: -7.840799331665039
    7. 'max' → logprob: -7.965799331665039
    8. 'sum' → logprob: -8.465799331665039
    9. 's' → logprob: -9.340799331665039
    10. 'ans' → logprob: -9.965799331665039

Token 250: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.11596692353487015
    2. 'for' → logprob: -2.740967035293579
    3. '#' → logprob: -3.115967035293579
    4. 'sorted' → logprob: -8.240966796875
    5. ' for' → logprob: -8.740966796875
    6. ')' → logprob: -10.240966796875
    7. 's' → logprob: -10.240966796875
    8. '   ' → logprob: -11.240966796875
    9. ',' → logprob: -11.365966796875
    10. 'sort' → logprob: -11.490966796875

Token 251: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4597528874874115
    2. '#' → logprob: -1.7097529172897339
    3. 'H' → logprob: -1.7097529172897339
    4. 'sorted' → logprob: -5.084753036499023
    5. 'while' → logprob: -9.834753036499023
    6. 'i' → logprob: -9.834753036499023
    7. 'h' → logprob: -9.834753036499023
    8. 'max' → logprob: -10.459753036499023
    9. 'sort' → logprob: -10.584753036499023
    10. 'A' → logprob: -10.959753036499023

Token 252: 'fin' (ID: 6994)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2986876666545868
    2. 'but' → logprob: -2.048687696456909
    3. '#' → logprob: -2.298687696456909
    4. 'i' → logprob: -4.17368745803833
    5. 'f' → logprob: -4.79868745803833
    6. 'part' → logprob: -6.67368745803833
    7. 'b' → logprob: -7.29868745803833
    8. 'fin' → logprob: -7.54868745803833
    9. 'sort' → logprob: -7.92368745803833
    10. 'x' → logprob: -8.048687934875488

Token 253: 'ition' (ID: 868)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0022135972976685
    2. 'ir' → logprob: -1.0022135972976685
    3. 'is' → logprob: -1.5022135972976685
    4. 'for' → logprob: -3.877213478088379
    5. 'i' → logprob: -4.252213478088379
    6. 'it' → logprob: -6.502213478088379
    7. 'er' → logprob: -6.752213478088379
    8. 'inir' → logprob: -6.752213478088379
    9. '```' → logprob: -7.877213478088379
    10. 'é' → logprob: -8.002213478088379

Token 254: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04737864062190056
    2. ' for' → logprob: -3.4223785400390625
    3. '#' → logprob: -4.5473785400390625
    4. ':' → logprob: -6.5473785400390625
    5. 'range' → logprob: -7.0473785400390625
    6. 'pour' → logprob: -8.672378540039062
    7. ')' → logprob: -9.922378540039062
    8. ' range' → logprob: -9.922378540039062
    9. ' de' → logprob: -10.047378540039062
    10. 'def' → logprob: -10.172378540039062

Token 255: ''une' (ID: 13337)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6140605211257935
    2. 'e' → logprob: -1.7390605211257935
    3. 'ef' → logprob: -2.114060401916504
    4. ''une' → logprob: -3.364060401916504
    5. 'une' → logprob: -3.739060401916504
    6. 'u' → logprob: -3.864060401916504
    7. 'el' → logprob: -4.364060401916504
    8. 'la' → logprob: -4.489060401916504
    9. 'ex' → logprob: -4.489060401916504
    10. '#' → logprob: -4.739060401916504

Token 256: ' fonction' (ID: 17610)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2037777304649353
    2. 'bou' → logprob: -1.95377779006958
    3. 'range' → logprob: -3.45377779006958
    4. '#' → logprob: -5.70377779006958
    5. 'fen' → logprob: -6.32877779006958
    6. 'fonction' → logprob: -6.82877779006958
    7. 'variable' → logprob: -7.32877779006958
    8. ' boucle' → logprob: -7.70377779006958
    9. 'window' → logprob: -8.078777313232422
    10. 'liste' → logprob: -8.078777313232422

Token 257: ' '' (ID: 461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015159345930442214
    2. ' def' → logprob: -6.626515865325928
    3. '(
' → logprob: -9.626516342163086
    4. '
' → logprob: -10.001516342163086
    5. 'de' → logprob: -10.376516342163086
    6. '(' → logprob: -11.626516342163086
    7. ' de' → logprob: -12.126516342163086
    8. 'sum' → logprob: -12.251516342163086
    9. '_def' → logprob: -12.376516342163086
    10. 'max' → logprob: -12.751516342163086

Token 258: 'qu' (ID: 351)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5659695863723755
    2. 'max' → logprob: -1.5659695863723755
    3. 'solve' → logprob: -2.065969467163086
    4. 'sum' → logprob: -2.315969467163086
    5. 'main' → logprob: -2.940969467163086
    6. 'min' → logprob: -2.940969467163086
    7. 'ex' → logprob: -3.190969467163086
    8. 'calc' → logprob: -3.315969467163086
    9. 'exclude' → logprob: -3.815969467163086
    10. 'calculate' → logprob: -4.190969467163086

Token 259: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.2486678659915924
    2. 'e' → logprob: -2.1236679553985596
    3. 'ick' → logprob: -3.7486679553985596
    4. 'ad' → logprob: -3.7486679553985596
    5. 'estion' → logprob: -3.9986679553985596
    6. 'al' → logprob: -5.2486677169799805
    7. 'adr' → logprob: -5.3736677169799805
    8. 'estions' → logprob: -5.3736677169799805
    9. '_' → logprob: -5.7486677169799805
    10. 'int' → logprob: -5.9986677169799805

Token 260: 'ort' (ID: 390)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.5015365481376648
    2. 'ort' → logprob: -1.0015366077423096
    3. '_sort' → logprob: -3.6265366077423096
    4. 'orts' → logprob: -8.75153636932373
    5. '_' → logprob: -8.87653636932373
    6. ' sort' → logprob: -9.62653636932373
    7. '(sort' → logprob: -11.87653636932373
    8. '.sort' → logprob: -12.12653636932373
    9. '_s' → logprob: -12.12653636932373
    10. '	sort' → logprob: -12.12653636932373

Token 261: ''' (ID: 6)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.07642974704504013
    2. '('' → logprob: -3.076429843902588
    3. ''' → logprob: -4.576429843902588
    4. '(array' → logprob: -4.826429843902588
    5. '(lst' → logprob: -5.326429843902588
    6. 'arr' → logprob: -6.451429843902588
    7. '(H' → logprob: -6.451429843902588
    8. 'def' → logprob: -8.32642936706543
    9. '(' → logprob: -8.57642936706543
    10. '(l' → logprob: -9.57642936706543

Token 262: ' permettant' (ID: 61092)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018329739570617676
    2. 'def' → logprob: -4.143329620361328
    3. '(def' → logprob: -6.393329620361328
    4. '(
' → logprob: -8.518329620361328
    5. '(n' → logprob: -8.643329620361328
    6. '(H' → logprob: -9.768329620361328
    7. '(lst' → logprob: -10.143329620361328
    8. ' def' → logprob: -10.143329620361328
    9. '(de' → logprob: -11.268329620361328
    10. ':' → logprob: -11.518329620361328

Token 263: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10859405994415283
    2. '(arr' → logprob: -2.3585939407348633
    3. 'arr' → logprob: -6.233593940734863
    4. '(array' → logprob: -6.358593940734863
    5. '(lst' → logprob: -6.358593940734863
    6. 'de' → logprob: -6.608593940734863
    7. 'd' → logprob: -7.858593940734863
    8. ' de' → logprob: -7.983593940734863
    9. '(l' → logprob: -8.483593940734863
    10. '(d' → logprob: -8.483593940734863

Token 264: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.09448195993900299
    2. 'def' → logprob: -3.344481945037842
    3. 'qu' → logprob: -3.719481945037842
    4. 'arr' → logprob: -4.094481945037842
    5. ' tr' → logprob: -4.719481945037842
    6. 'tri' → logprob: -5.844481945037842
    7. 'sort' → logprob: -7.094481945037842
    8. 'partition' → logprob: -7.219481945037842
    9. 'quick' → logprob: -8.719482421875
    10. 'lst' → logprob: -8.969482421875

Token 265: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.30057191848754883
    2. 'i' → logprob: -1.4255719184875488
    3. 'ié' → logprob: -5.050571918487549
    4. 'ie' → logprob: -5.175571918487549
    5. 'e' → logprob: -6.175571918487549
    6. 'def' → logprob: -6.300571918487549
    7. 'iangle' → logprob: -7.050571918487549
    8. 'er' → logprob: -8.05057144165039
    9. 'ee' → logprob: -8.30057144165039
    10. 'iable' → logprob: -8.30057144165039

Token 266: ' une' (ID: 2463)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.16443133354187012
    2. '(lst' → logprob: -2.66443133354187
    3. 'arr' → logprob: -3.03943133354187
    4. '(array' → logprob: -4.789431571960449
    5. '(H' → logprob: -5.039431571960449
    6. 'la' → logprob: -5.289431571960449
    7. 'def' → logprob: -5.289431571960449
    8. '(l' → logprob: -6.289431571960449
    9. '(' → logprob: -6.414431571960449
    10. 'array' → logprob: -6.789431571960449

Token 267: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.10442427545785904
    2. 'def' → logprob: -3.104424238204956
    3. 'list' → logprob: -3.229424238204956
    4. 'arr' → logprob: -5.104424476623535
    5. ' liste' → logprob: -5.854424476623535
    6. 'lst' → logprob: -6.104424476623535
    7. 'array' → logprob: -6.729424476623535
    8. 'table' → logprob: -7.104424476623535
    9. '```' → logprob: -7.979424476623535
    10. 'Liste' → logprob: -8.854424476623535

Token 268: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23460324108600616
    2. 'def' → logprob: -1.6096032857894897
    3. '(lst' → logprob: -5.859603404998779
    4. '(
' → logprob: -6.359603404998779
    5. '(def' → logprob: -6.359603404998779
    6. '(l' → logprob: -6.484603404998779
    7. '(H' → logprob: -7.859603404998779
    8. '(arr' → logprob: -8.359602928161621
    9. '(ls' → logprob: -8.859602928161621
    10. '(L' → logprob: -9.109602928161621

Token 269: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.9777042865753174
    2. 'élé' → logprob: -1.1027042865753174
    3. 'e' → logprob: -2.3527042865753174
    4. 'ent' → logprob: -3.2277042865753174
    5. 'int' → logprob: -3.9777042865753174
    6. 'inte' → logprob: -4.227704048156738
    7. ''' → logprob: -4.352704048156738
    8. 'au' → logprob: -4.727704048156738
    9. 'elements' → logprob: -4.852704048156738
    10. 'ints' → logprob: -4.852704048156738

Token 270: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0339379720389843
    2. 'ts' → logprob: -4.033937931060791
    3. 'tes' → logprob: -5.408937931060791
    4. 'ents' → logprob: -6.158937931060791
    5. 'ités' → logprob: -6.908937931060791
    6. 'te' → logprob: -7.283937931060791
    7. 'éments' → logprob: -7.283937931060791
    8. 'ière' → logprob: -7.533937931060791
    9. 'té' → logprob: -7.533937931060791
    10. 'ments' → logprob: -7.783937931060791

Token 271: ' '' (ID: 461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002255999017506838
    2. '(' → logprob: -6.377255916595459
    3. '(arr' → logprob: -8.627256393432617
    4. '(lst' → logprob: -8.752256393432617
    5. '(def' → logprob: -9.252256393432617
    6. '(
' → logprob: -9.877256393432617
    7. 'de' → logprob: -10.502256393432617
    8. ' def' → logprob: -11.502256393432617
    9. '(H' → logprob: -11.877256393432617
    10. ':' → logprob: -12.002256393432617

Token 272: 'a' (ID: 64)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.04080934822559357
    2. 'lst' → logprob: -3.290809392929077
    3. 'array' → logprob: -6.040809154510498
    4. 'H' → logprob: -8.790809631347656
    5. 'nums' → logprob: -9.915809631347656
    6. 'l' → logprob: -9.915809631347656
    7. 'L' → logprob: -10.665809631347656
    8. 'liste' → logprob: -10.790809631347656
    9. 'A' → logprob: -11.040809631347656
    10. '```' → logprob: -11.040809631347656

Token 273: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6391769051551819
    2. ')'' → logprob: -1.639176845550537
    3. '):' → logprob: -2.139176845550537
    4. ')' → logprob: -2.389176845550537
    5. ''' → logprob: -3.264176845550537
    6. ''):' → logprob: -4.889176845550537
    7. '')' → logprob: -5.389176845550537
    8. 'a' → logprob: -5.639176845550537
    9. ')':' → logprob: -5.764176845550537
    10. ','' → logprob: -6.639176845550537

Token 274: ' par' (ID: 686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08949258178472519
    2. '(a' → logprob: -2.4644925594329834
    3. ' def' → logprob: -8.589492797851562
    4. '(def' → logprob: -9.339492797851562
    5. '(' → logprob: -9.464492797851562
    6. '(
' → logprob: -9.589492797851562
    7. ':' → logprob: -9.839492797851562
    8. 'a' → logprob: -10.339492797851562
    9. ':def' → logprob: -11.214492797851562
    10. ':
' → logprob: -11.339492797851562

Token 275: ' ordre' (ID: 103061)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0691060721874237
    2. 'pivot' → logprob: -3.194106101989746
    3. ' def' → logprob: -4.444106101989746
    4. 'div' → logprob: -5.569106101989746
    5. 'dé' → logprob: -6.444106101989746
    6. 'qu' → logprob: -6.694106101989746
    7. 'ré' → logprob: -7.069106101989746
    8. 'partition' → logprob: -7.069106101989746
    9. 'a' → logprob: -7.194106101989746
    10. 'len' → logprob: -7.319106101989746

Token 276: ' cro' (ID: 11270)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005075189401395619
    2. 'cro' → logprob: -8.375507354736328
    3. 'dé' → logprob: -8.750507354736328
    4. ' def' → logprob: -10.000507354736328
    5. 'asc' → logprob: -10.000507354736328
    6. 'd' → logprob: -11.000507354736328
    7. 'de' → logprob: -12.875507354736328
    8. 'desc' → logprob: -13.250507354736328
    9. '   ' → logprob: -13.375507354736328
    10. ' déf' → logprob: -13.375507354736328

Token 277: 'issant' (ID: 31359)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.40973323583602905
    2. 'def' → logprob: -1.9097332954406738
    3. 'ément' → logprob: -3.034733295440674
    4. 'issement' → logprob: -3.034733295440674
    5. 'ment' → logprob: -3.284733295440674
    6. 'lement' → logprob: -5.034733295440674
    7. 'ces' → logprob: -5.659733295440674
    8. 'sc' → logprob: -5.659733295440674
    9. 'issance' → logprob: -5.659733295440674
    10. 'cement' → logprob: -6.159733295440674

Token 278: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09033795446157455
    2. '(a' → logprob: -2.4653379917144775
    3. ':' → logprob: -6.840337753295898
    4. '(' → logprob: -9.465337753295898
    5. 'a' → logprob: -9.465337753295898
    6. '(def' → logprob: -9.465337753295898
    7. ' def' → logprob: -10.715337753295898
    8. ':def' → logprob: -10.840337753295898
    9. ':
' → logprob: -11.090337753295898
    10. '(
' → logprob: -11.590337753295898

Token 279: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8312570318812504e-05
    2. ' def' → logprob: -11.250018119812012
    3. 'de' → logprob: -13.375018119812012
    4. ':' → logprob: -13.625018119812012
    5. ':def' → logprob: -14.000018119812012
    6. '(def' → logprob: -14.375018119812012
    7. '(
' → logprob: -14.500018119812012
    8. 'd' → logprob: -15.125018119812012
    9. '(' → logprob: -15.750018119812012
    10. '
' → logprob: -16.500019073486328

Token 280: ' quick' (ID: 4853)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.004110696725547314
    2. ' quick' → logprob: -6.129110813140869
    3. 'quick' → logprob: -6.254110813140869
    4. ' qu' → logprob: -14.004110336303711
    5. 'q' → logprob: -14.879110336303711
    6. 'def' → logprob: -17.00411033630371
    7. '_qu' → logprob: -18.12911033630371
    8. 'Quick' → logprob: -19.25411033630371
    9. 'Qu' → logprob: -19.25411033630371
    10. '
' → logprob: -19.50411033630371

Token 281: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -2.045823566731997e-05
    2. '_sort' → logprob: -11.125020027160645
    3. ' sort' → logprob: -12.500020027160645
    4. 'def' → logprob: -14.125020027160645
    5. 'sorted' → logprob: -15.250020027160645
    6. '   ' → logprob: -15.750020027160645
    7. '	sort' → logprob: -15.750020027160645
    8. '```' → logprob: -16.12502098083496
    9. ' ' → logprob: -16.87502098083496
    10. 's' → logprob: -16.87502098083496

Token 282: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000730185944121331
    2. '(arr' → logprob: -7.250730037689209
    3. '(' → logprob: -11.125730514526367
    4. '(array' → logprob: -12.250730514526367
    5. '(lst' → logprob: -14.375730514526367
    6. ' (' → logprob: -16.000730514526367
    7. '(A' → logprob: -17.750730514526367
    8. '(lista' → logprob: -18.750730514526367
    9. 'a' → logprob: -18.875730514526367
    10. '(
' → logprob: -19.000730514526367

Token 283: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014215094968676567
    2. '):' → logprob: -4.264214992523193
    3. ' ,' → logprob: -10.389215469360352
    4. ')' → logprob: -11.889215469360352
    5. ',l' → logprob: -12.514215469360352
    6. '):
' → logprob: -12.639215469360352
    7. ' ):' → logprob: -13.639215469360352
    8. ':' → logprob: -14.014215469360352
    9. ',a' → logprob: -14.264215469360352
    10. ',n' → logprob: -14.764215469360352

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1292802393436432
    2. ' if' → logprob: -2.1292803287506104
    3. 'if' → logprob: -6.504280090332031
    4. '	if' → logprob: -7.129280090332031
    5. '   ' → logprob: -10.129280090332031
    6. '    
' → logprob: -12.129280090332031
    7. '    ' → logprob: -13.254280090332031
    8. '<|end|>' → logprob: -14.129280090332031
    9. ' ' → logprob: -14.254280090332031
    10. '
' → logprob: -14.629280090332031

Token 285: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.024604277219623e-05
    2. ' if' → logprob: -10.250040054321289
    3. '   ' → logprob: -12.250040054321289
    4. '	if' → logprob: -16.62504005432129
    5. '```' → logprob: -19.62504005432129
    6. ' ' → logprob: -19.87504005432129
    7. '    
' → logprob: -20.50004005432129
    8. '#' (adapté à ' #') → logprob: -20.50004005432129
    9. '
' → logprob: -20.75004005432129
    10. '  ' → logprob: -20.75004005432129

Token 286: ' Convert' (ID: 15629)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.909333023941144e-05
    2. ' if' → logprob: -9.625068664550781
    3. '   ' → logprob: -12.875068664550781
    4. '	if' → logprob: -14.875068664550781
    5. 'n' → logprob: -16.75006866455078
    6. 'def' → logprob: -17.25006866455078
    7. ' ' → logprob: -17.37506866455078
    8. '#' → logprob: -17.62506866455078
    9. '  ' → logprob: -18.62506866455078
    10. '1' → logprob: -19.37506866455078

Token 287: 'it' (ID: 278)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44419118762016296
    2. '   ' → logprob: -1.1941912174224854
    3. ' if' → logprob: -3.5691912174224854
    4. ' ' → logprob: -4.319190979003906
    5. 'e' → logprob: -5.444190979003906
    6. 'f' → logprob: -5.694190979003906
    7. 'a' → logprob: -5.819190979003906
    8. '  ' → logprob: -6.069190979003906
    9. 'ed' → logprob: -7.944190979003906
    10. '	if' → logprob: -8.194190979003906

Token 288: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5710083246231079
    2. 'a' → logprob: -1.321008324623108
    3. 'if' → logprob: -2.5710082054138184
    4. '[]' → logprob: -2.6960082054138184
    5. ' ' → logprob: -5.071008205413818
    6. '0' → logprob: -5.071008205413818
    7. ' a' → logprob: -5.571008205413818
    8. ' len' → logprob: -6.196008205413818
    9. ' []' → logprob: -6.571008205413818
    10. ' if' → logprob: -6.946008205413818

Token 289: ' liste' (ID: 31719)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03426770865917206
    2. 'if' → logprob: -3.4092676639556885
    3. '[]' → logprob: -7.909267902374268
    4. 'a' → logprob: -8.90926742553711
    5. '0' → logprob: -10.28426742553711
    6. ' len' → logprob: -10.90926742553711
    7. 'list' → logprob: -11.15926742553711
    8. '```' → logprob: -11.40926742553711
    9. 'length' → logprob: -11.53426742553711
    10. '[len' → logprob: -11.65926742553711

Token 290: ' en' (ID: 469)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6954799890518188
    2. '[:]' → logprob: -1.4454799890518188
    3. 'if' → logprob: -2.5704798698425293
    4. 'a' → logprob: -2.8204798698425293
    5. '[]' → logprob: -2.8204798698425293
    6. ' a' → logprob: -2.9454798698425293
    7. ' ' → logprob: -5.195479869842529
    8. 'len' → logprob: -5.695479869842529
    9. '=[]' → logprob: -6.695479869842529
    10. '[a' → logprob: -6.945479869842529

Token 291: ' un' (ID: 537)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6361680626869202
    2. 'a' → logprob: -0.8861680626869202
    3. 'list' → logprob: -3.2611680030822754
    4. 'sorted' → logprob: -4.761168003082275
    5. 'len' → logprob: -5.886168003082275
    6. ' []' → logprob: -6.011168003082275
    7. '[:]' → logprob: -6.386168003082275
    8. ' a' → logprob: -7.011168003082275
    9. 'tuple' → logprob: -7.636168003082275
    10. '[]
' → logprob: -7.636168003082275

Token 292: ' ensemble' (ID: 33081)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26646918058395386
    2. 'a' → logprob: -3.0164692401885986
    3. ' if' → logprob: -3.1414692401885986
    4. 'ensemble' → logprob: -3.3914692401885986
    5. 'set' → logprob: -3.8914692401885986
    6. 'array' → logprob: -4.0164690017700195
    7. '[]' → logprob: -4.5164690017700195
    8. 'copy' → logprob: -4.5164690017700195
    9. 'deque' → logprob: -4.5164690017700195
    10. 'tuple' → logprob: -5.1414690017700195

Token 293: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.539570152759552
    2. 'a' → logprob: -1.2895700931549072
    3. '(set' → logprob: -2.4145700931549072
    4. 'set' → logprob: -3.5395700931549072
    5. 's' → logprob: -4.914570331573486
    6. '   ' → logprob: -5.914570331573486
    7. ' a' → logprob: -6.164570331573486
    8. '()' → logprob: -6.539570331573486
    9. ',' → logprob: -6.664570331573486
    10. 'et' → logprob: -6.664570331573486

Token 294: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.017493465915322304
    2. 'a' → logprob: -4.26749324798584
    3. ' set' → logprob: -5.76749324798584
    4. ')' → logprob: -9.64249324798584
    5. ')set' → logprob: -9.89249324798584
    6. ' a' → logprob: -10.01749324798584
    7. '(set' → logprob: -11.01749324798584
    8. 's' → logprob: -11.89249324798584
    9. 'unique' → logprob: -12.76749324798584
    10. ')a' → logprob: -12.89249324798584

Token 295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2440336048603058
    2. '(a' → logprob: -1.6190335750579834
    3. 'a' → logprob: -4.3690338134765625
    4. ')a' → logprob: -5.3690338134765625
    5. '),' → logprob: -7.4940338134765625
    6. ' )' → logprob: -8.619033813476562
    7. '   ' → logprob: -9.369033813476562
    8. ')
' → logprob: -9.494033813476562
    9. '(' → logprob: -9.994033813476562
    10. '())' → logprob: -10.869033813476562

Token 296: ' pour' (ID: 1930)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8272338509559631
    2. '   ' → logprob: -0.9522338509559631
    3. ' =' → logprob: -2.3272337913513184
    4. '(a' → logprob: -4.202233791351318
    5. 's' → logprob: -4.327233791351318
    6. '=set' → logprob: -4.827233791351318
    7. ' a' → logprob: -4.952233791351318
    8. '(set' → logprob: -5.202233791351318
    9. ')' → logprob: -5.202233791351318
    10. ',' → logprob: -5.327233791351318

Token 297: ' élim' (ID: 108134)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.8860489130020142
    2. 'el' → logprob: -1.3860489130020142
    3. 'é' → logprob: -2.0110487937927246
    4. ' élim' → logprob: -3.3860487937927246
    5. 'ret' → logprob: -3.3860487937927246
    6. ' supprimer' → logprob: -3.3860487937927246
    7. 'remove' → logprob: -3.5110487937927246
    8. 'en' → logprob: -3.8860487937927246
    9. ' enlever' → logprob: -4.011048793792725
    10. 'elim' → logprob: -5.136048793792725

Token 298: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.010849024169147015
    2. 'iter' → logprob: -6.0108489990234375
    3. 'orer' → logprob: -6.0108489990234375
    4. 'urer' → logprob: -6.0108489990234375
    5. 'érer' → logprob: -7.0108489990234375
    6. 'imiter' → logprob: -7.5108489990234375
    7. '   ' → logprob: -7.8858489990234375
    8. 'a' → logprob: -8.510848999023438
    9. 'îner' → logprob: -8.635848999023438
    10. 'uer' → logprob: -8.760848999023438

Token 299: ' les' (ID: 1341)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.8159176111221313
    2. 'a' → logprob: -1.0659176111221313
    3. 'duplicates' → logprob: -1.6909176111221313
    4. ' a' → logprob: -3.940917491912842
    5. 'set' → logprob: -5.940917491912842
    6. ' set' → logprob: -6.190917491912842
    7. ' la' → logprob: -6.815917491912842
    8. '_duplicates' → logprob: -7.065917491912842
    9. ' ' → logprob: -7.190917491912842
    10. 'la' → logprob: -7.565917491912842

Token 300: ' doubl' (ID: 127992)
  Prédit: ' doubl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doubl' → logprob: -0.6793559193611145
    2. 'duplicates' → logprob: -1.1793558597564697
    3. ' duplicates' → logprob: -2.3043558597564697
    4. 'dou' → logprob: -3.0543558597564697
    5. 'élé' → logprob: -3.4293558597564697
    6. 'd' → logprob: -6.179356098175049
    7. 'duplic' → logprob: -6.554356098175049
    8. 'duplicate' → logprob: -7.179356098175049
    9. 'dup' → logprob: -7.429356098175049
    10. '_duplicates' → logprob: -7.929356098175049

Token 301: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.018292522057890892
    2. 'és' → logprob: -4.018292427062988
    3. 'ic' → logprob: -10.393292427062988
    4. 'es' → logprob: -10.768292427062988
    5. 'onn' → logprob: -10.893292427062988
    6. 's' → logprob: -11.518292427062988
    7. 'is' → logprob: -11.768292427062988
    8. 'iers' → logprob: -11.893292427062988
    9. 'ions' → logprob: -12.268292427062988
    10. '#' → logprob: -12.393292427062988

Token 302: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13311569392681122
    2. 'a' → logprob: -2.258115768432617
    3. '(a' → logprob: -4.883115768432617
    4. ',' → logprob: -5.758115768432617
    5. '(' → logprob: -6.133115768432617
    6. '
' → logprob: -6.133115768432617
    7. 'def' → logprob: -6.883115768432617
    8. '    
' → logprob: -7.008115768432617
    9. 's' → logprob: -7.133115768432617
    10. '(
' → logprob: -7.883115768432617

Token 303: ' puis' (ID: 18766)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8351852893829346
    2. 'a' → logprob: -0.9601852893829346
    3. '   ' → logprob: -1.7101852893829346
    4. ' unique' → logprob: -7.2101850509643555
    5. ' sorted' → logprob: -7.5851850509643555
    6. '	a' → logprob: -8.585185050964355
    7. ' then' → logprob: -8.710185050964355
    8. ' return' → logprob: -8.835185050964355
    9. 'sorted' → logprob: -9.085185050964355
    10. 's' → logprob: -9.210185050964355

Token 304: ' vér' (ID: 42524)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.057666633278131485
    2. ' a' → logprob: -3.057666540145874
    3. 'sorted' → logprob: -5.557666778564453
    4. 'list' → logprob: -6.182666778564453
    5. '   ' → logprob: -6.307666778564453
    6. ' sorted' → logprob: -7.307666778564453
    7. 's' → logprob: -9.057666778564453
    8. 'return' → logprob: -9.182666778564453
    9. ' list' → logprob: -9.307666778564453
    10. 'l' → logprob: -9.682666778564453

Token 305: 'ifie' (ID: 46409)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.31081703305244446
    2. 'et' → logprob: -1.810817003250122
    3. 'er' → logprob: -3.060817003250122
    4. 'ort' → logprob: -3.435817003250122
    5. 'orts' → logprob: -4.810817241668701
    6. 'ite' → logprob: -6.185817241668701
    7. 'ent' → logprob: -6.560817241668701
    8. 'erse' → logprob: -6.685817241668701
    9. 'ir' → logprob: -6.810817241668701
    10. 'iert' → logprob: -7.060817241668701

Token 306: ' sa' (ID: 880)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4965849220752716
    2. ' if' → logprob: -0.9965848922729492
    3. 'len' → logprob: -4.246584892272949
    4. ' len' → logprob: -5.121584892272949
    5. 'not' → logprob: -6.996584892272949
    6. ' not' → logprob: -7.121584892272949
    7. '   ' → logprob: -8.87158489227295
    8. '(len' → logprob: -10.62158489227295
    9. ' ' → logprob: -10.99658489227295
    10. ' la' → logprob: -11.24658489227295

Token 307: ' taille' (ID: 41644)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.6297473311424255
    2. 'len' → logprob: -1.5047473907470703
    3. 'tail' → logprob: -2.1297473907470703
    4. ' longueur' → logprob: -2.6297473907470703
    5. 'length' → logprob: -3.0047473907470703
    6. ' length' → logprob: -6.75474739074707
    7. ' len' → logprob: -6.87974739074707
    8. ' taille' → logprob: -7.00474739074707
    9. ' long' → logprob: -7.12974739074707
    10. ' longitud' → logprob: -8.37974739074707

Token 308: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8323853015899658
    2. ' if' → logprob: -1.7073853015899658
    3. ' <=' → logprob: -2.207385301589966
    4. ' >' → logprob: -2.457385301589966
    5. 'if' → logprob: -2.957385301589966
    6. ' ==' → logprob: -3.207385301589966
    7. '>' → logprob: -3.582385301589966
    8. ' <' → logprob: -4.332385063171387
    9. ')' → logprob: -4.457385063171387
    10. '()' → logprob: -4.832385063171387

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04653606191277504
    2. ' if' → logprob: -3.1715359687805176
    3. 'if' → logprob: -5.671535968780518
    4. 'n' → logprob: -10.796536445617676
    5. ' size' → logprob: -10.796536445617676
    6. ' n' → logprob: -11.171536445617676
    7. ' length' → logprob: -11.671536445617676
    8. 'length' → logprob: -11.796536445617676
    9. 'size' → logprob: -11.921536445617676
    10. '   ' → logprob: -12.796536445617676

Token 310: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23023098707199097
    2. ' if' → logprob: -1.7302310466766357
    3. '   ' → logprob: -3.6052310466766357
    4. 'unique' → logprob: -8.105231285095215
    5. 's' → logprob: -8.480231285095215
    6. 'n' → logprob: -8.480231285095215
    7. 'size' → logprob: -8.605231285095215
    8. 'length' → logprob: -8.980231285095215
    9. 'return' → logprob: -9.980231285095215
    10. ' unique' → logprob: -10.105231285095215

Token 311: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1662980616092682
    2. ' if' → logprob: -1.9162980318069458
    3. '   ' → logprob: -5.541297912597656
    4. 'n' → logprob: -7.041297912597656
    5. 'size' → logprob: -7.541297912597656
    6. 'return' → logprob: -8.291297912597656
    7. 'length' → logprob: -8.416297912597656
    8. 's' → logprob: -10.166297912597656
    9. ' size' → logprob: -10.416297912597656
    10. ' n' → logprob: -10.541297912597656

Token 312: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005234832875430584
    2. ' len' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.505234718322754
    4. '(len' → logprob: -15.005234718322754
    5. '	len' → logprob: -15.630234718322754
    6. '1' → logprob: -17.13023567199707
    7. '   ' → logprob: -18.13023567199707
    8. 'not' → logprob: -18.25523567199707
    9. 'a' → logprob: -18.38023567199707
    10. '  ' → logprob: -18.50523567199707

Token 313: ' taille' (ID: 41644)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0003809833142440766
    2. ' len' → logprob: -7.875380992889404
    3. 'length' → logprob: -14.875380516052246
    4. 'a' → logprob: -15.625380516052246
    5. ' ' → logprob: -16.000381469726562
    6. '(len' → logprob: -16.875381469726562
    7. '=len' → logprob: -16.875381469726562
    8. '	len' → logprob: -17.250381469726562
    9. '<len' → logprob: -17.875381469726562
    10. 'l' → logprob: -18.125381469726562

Token 314: ' de' (ID: 334)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.43853315711021423
    2. '(len' → logprob: -1.1885331869125366
    3. '(set' → logprob: -4.313533306121826
    4. 'a' → logprob: -4.438533306121826
    5. '(a' → logprob: -4.938533306121826
    6. 'set' → logprob: -5.188533306121826
    7. '<=' → logprob: -5.188533306121826
    8. '=len' → logprob: -6.438533306121826
    9. '   ' → logprob: -6.688533306121826
    10. ' <=' → logprob: -7.063533306121826

Token 315: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39158546924591064
    2. 'set' → logprob: -1.1415854692459106
    3. ' set' → logprob: -5.891585350036621
    4. ' a' → logprob: -6.391585350036621
    5. '(set' → logprob: -8.641585350036621
    6. '(a' → logprob: -10.016585350036621
    7. 'list' → logprob: -11.641585350036621
    8. '{' → logprob: -12.141585350036621
    9. 'la' → logprob: -12.391585350036621
    10. 'len' → logprob: -12.641585350036621

Token 316: ''ensemble' (ID: 79341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5396889448165894
    2. ''ensemble' → logprob: -1.0396889448165894
    3. 'set' → logprob: -3.414689064025879
    4. 'ensemble' → logprob: -3.914689064025879
    5. 'e' → logprob: -5.289689064025879
    6. ' set' → logprob: -6.039689064025879
    7. ''a' → logprob: -6.914689064025879
    8. 's' → logprob: -7.289689064025879
    9. '’ensemble' → logprob: -7.414689064025879
    10. 'aset' → logprob: -8.539689064025879

Token 317: ' est' (ID: 893)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3097757399082184
    2. '(set' → logprob: -1.934775710105896
    3. 'a' → logprob: -2.9347758293151855
    4. 'set' → logprob: -3.4347758293151855
    5. '(len' → logprob: -4.3097758293151855
    6. 'len' → logprob: -4.4347758293151855
    7. '<=' → logprob: -4.9347758293151855
    8. '==' → logprob: -6.5597758293151855
    9. ' <=' → logprob: -7.3097758293151855
    10. ')' → logprob: -8.434775352478027

Token 318: ' inf' (ID: 5603)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13146929442882538
    2. '0' → logprob: -2.256469249725342
    3. 'less' → logprob: -4.506469249725342
    4. 'len' → logprob: -5.631469249725342
    5. '<=' → logprob: -5.756469249725342
    6. ' ' → logprob: -8.2564697265625
    7. 'moins' → logprob: -8.5064697265625
    8. '   ' → logprob: -9.1314697265625
    9. 'inf' → logprob: -9.8814697265625
    10. ' <=' → logprob: -11.2564697265625

Token 319: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.003233440453186631
    2. 'érieur' → logprob: -5.878233432769775
    3. 'len' → logprob: -8.753233909606934
    4. 'er' → logprob: -9.003233909606934
    5. '1' → logprob: -10.378233909606934
    6. 'ér' → logprob: -11.003233909606934
    7. '   ' → logprob: -11.128233909606934
    8. 'é' → logprob: -11.253233909606934
    9. '{' → logprob: -11.628233909606934
    10. 'érée' → logprob: -11.753233909606934

Token 320: ' à' (ID: 1221)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.10698369145393372
    2. 'à' → logprob: -2.4819836616516113
    3. ' ou' → logprob: -4.731983661651611
    4. 'au' → logprob: -6.106983661651611
    5. '   ' → logprob: -6.106983661651611
    6. ' à' → logprob: -6.481983661651611
    7. 'or' → logprob: -6.731983661651611
    8. 'a' → logprob: -7.731983661651611
    9. '2' → logprob: -8.35698413848877
    10. 'e' → logprob: -8.48198413848877

Token 321: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012554745189845562
    2. '=' → logprob: -4.51255464553833
    3. ' ' → logprob: -6.51255464553833
    4. '3' → logprob: -11.762555122375488
    5. '1' → logprob: -11.887555122375488
    6. ' =' → logprob: -12.637555122375488
    7. '="' → logprob: -15.262555122375488
    8. 'len' → logprob: -15.325055122375488
    9. '

' → logprob: -15.450055122375488
    10. '   ' → logprob: -15.575055122375488

Token 322: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0162078607827425
    2. '=' → logprob: -4.141207695007324
    3. '3' → logprob: -9.516207695007324
    4. ' ' → logprob: -10.141207695007324
    5. '1' → logprob: -10.391207695007324
    6. ' =' → logprob: -12.391207695007324
    7. '10' → logprob: -12.891207695007324
    8. 'a' → logprob: -13.016207695007324
    9. '100' → logprob: -13.016207695007324
    10. '5' → logprob: -13.141207695007324

Token 323: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002330813091248274
    2. ':
' → logprob: -7.127330780029297
    3. ' :' → logprob: -7.377330780029297
    4. ':return' → logprob: -7.377330780029297
    5. ' or' → logprob: -9.252330780029297
    6. '   ' → logprob: -9.377330780029297
    7. ',' → logprob: -9.627330780029297
    8. '):' → logprob: -11.377330780029297
    9. ':a' → logprob: -12.627330780029297
    10. '():' → logprob: -12.877330780029297

Token 324: ' cela' (ID: 17542)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012143922969698906
    2. ' return' → logprob: -4.512144088745117
    3. '       ' → logprob: -6.887144088745117
    4. 'return' → logprob: -9.762144088745117
    5. '   ' → logprob: -11.762144088745117
    6. '	return' → logprob: -12.012144088745117
    7. '    ' → logprob: -13.262144088745117
    8. ' ' → logprob: -14.387144088745117
    9. ':return' → logprob: -15.137144088745117
    10. '  ' → logprob: -15.512144088745117

Token 325: ' signifie' (ID: 81149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5850228667259216
    2. 'return' → logprob: -1.8350229263305664
    3. ':return' → logprob: -2.2100229263305664
    4. ' return' → logprob: -2.4600229263305664
    5. ':' → logprob: -2.4600229263305664
    6. '       ' → logprob: -6.710022926330566
    7. '	return' → logprob: -7.585022926330566
    8. '  ' → logprob: -8.585022926330566
    9. ' retourne' → logprob: -8.585022926330566
    10. ' ' → logprob: -8.960022926330566

Token 326: ' que' (ID: 661)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.15762338042259216
    2. '   ' → logprob: -2.782623291015625
    3. ' que' → logprob: -2.907623291015625
    4. 'len' → logprob: -3.782623291015625
    5. ' ' → logprob: -5.282623291015625
    6. ' that' → logprob: -7.282623291015625
    7. ' qu' → logprob: -7.782623291015625
    8. '	len' → logprob: -9.282623291015625
    9. '  ' → logprob: -9.407623291015625
    10. ' ' → logprob: -10.032623291015625

Token 327: ' tous' (ID: 10688)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.31356343626976013
    2. 'len' → logprob: -1.3135634660720825
    3. ' return' → logprob: -9.063563346862793
    4. ' a' → logprob: -9.188563346862793
    5. 'a' → logprob: -9.938563346862793
    6. 'return' → logprob: -10.563563346862793
    7. ' ' → logprob: -12.188563346862793
    8. ' la' → logprob: -13.563563346862793
    9. ' not' → logprob: -14.313563346862793
    10. '	len' → logprob: -14.438563346862793

Token 328: ' les' (ID: 1341)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5320399403572083
    2. 'a' → logprob: -0.9070399403572083
    3. ' elements' → logprob: -5.532040119171143
    4. ' les' → logprob: -5.907040119171143
    5. 'elements' → logprob: -7.782040119171143
    6. ' ' → logprob: -7.907040119171143
    7. ' éléments' → logprob: -8.032039642333984
    8. '(a' → logprob: -8.282039642333984
    9. 'les' → logprob: -8.407039642333984
    10. '   ' → logprob: -8.657039642333984

Token 329: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.13361728191375732
    2. ' éléments' → logprob: -2.133617401123047
    3. 'a' → logprob: -5.758617401123047
    4. 'elements' → logprob: -6.633617401123047
    5. ' elements' → logprob: -6.758617401123047
    6. ' a' → logprob: -7.508617401123047
    7. 'él' → logprob: -8.133617401123047
    8. 'é' → logprob: -9.383617401123047
    9. ' ' → logprob: -10.758617401123047
    10. ' élément' → logprob: -11.008617401123047

Token 330: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45272359251976013
    2. ' sont' → logprob: -1.2027236223220825
    3. 'a' → logprob: -2.952723503112793
    4. ' de' → logprob: -5.452723503112793
    5. ' a' → logprob: -5.952723503112793
    6. 'de' → logprob: -6.577723503112793
    7. 'd' → logprob: -6.952723503112793
    8. ' ' → logprob: -7.202723503112793
    9. 'ont' → logprob: -7.327723503112793
    10. '   ' → logprob: -8.452723503112793

Token 331: ' ident' (ID: 3951)
  Prédit: ' ident'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ident' → logprob: -0.2569793164730072
    2. 'ident' → logprob: -1.5069793462753296
    3. ' ég' → logprob: -6.131979465484619
    4. 'ég' → logprob: -7.256979465484619
    5. 'dé' → logprob: -7.756979465484619
    6. ' similaires' → logprob: -8.256978988647461
    7. 'les' → logprob: -8.756978988647461
    8. '   ' → logprob: -8.881978988647461
    9. ' déjà' → logprob: -9.006978988647461
    10. 'a' → logprob: -9.381978988647461

Token 332: 'iques' (ID: 11654)
  Prédit: 'ques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.6332225799560547
    2. 'iques' → logprob: -0.7582225799560547
    3. 'que' → logprob: -7.633222579956055
    4. 'aux' → logprob: -10.758222579956055
    5. '#' → logprob: -11.008222579956055
    6. 'tiques' → logprob: -11.133222579956055
    7. 'ique' → logprob: -11.258222579956055
    8. 'cal' → logprob: -11.383222579956055
    9. 'a' → logprob: -11.633222579956055
    10. 'q' → logprob: -11.883222579956055

Token 333: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46056652069091797
    2. ':' → logprob: -1.585566520690918
    3. ' or' → logprob: -1.835566520690918
    4. ',' → logprob: -5.960566520690918
    5. ':
' → logprob: -6.835566520690918
    6. 'or' → logprob: -8.210566520690918
    7. ' and' → logprob: -8.335566520690918
    8. ':return' → logprob: -8.460566520690918
    9. ' :' → logprob: -9.085566520690918
    10. '):' → logprob: -9.960566520690918

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012248923303559422
    2. '       ' → logprob: -10.0001220703125
    3. '    ' → logprob: -10.1251220703125
    4. ' if' → logprob: -10.8751220703125
    5. ')' → logprob: -12.5001220703125
    6. 'def' → logprob: -12.5001220703125
    7. ' or' → logprob: -13.1251220703125
    8. '  ' → logprob: -13.1251220703125
    9. ' )' → logprob: -13.5001220703125
    10. '   ' → logprob: -14.0001220703125

Token 335: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017189696663990617
    2. '       ' → logprob: -7.126718997955322
    3. ' if' → logprob: -8.876718521118164
    4. 'if' → logprob: -9.001718521118164
    5. 'return' → logprob: -9.001718521118164
    6. '    ' → logprob: -9.251718521118164
    7. ' or' → logprob: -9.251718521118164
    8. ' return' → logprob: -9.376718521118164
    9. '#' (adapté à ' #') → logprob: -9.501718521118164
    10. 'def' → logprob: -9.876718521118164

Token 336: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4793057143688202
    2. '       ' → logprob: -0.9793057441711426
    3. ' return' → logprob: -5.354305744171143
    4. 'return' → logprob: -8.104305267333984
    5. '    ' → logprob: -9.479305267333984
    6. '   ' → logprob: -9.479305267333984
    7. '    ' → logprob: -12.354305267333984
    8. '	return' → logprob: -12.479305267333984
    9. '        ' → logprob: -13.104305267333984
    10. '      ' → logprob: -13.166805267333984

Token 337: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0601242296397686
    2. 'len' → logprob: -3.060124158859253
    3. ' len' → logprob: -5.435124397277832
    4. 'qu' → logprob: -6.435124397277832
    5. '  ' → logprob: -6.685124397277832
    6. ' qu' → logprob: -6.685124397277832
    7. ' que' → logprob: -7.060124397277832
    8. 'que' → logprob: -7.560124397277832
    9. '#' → logprob: -8.185124397277832
    10. ' ' → logprob: -8.435124397277832

Token 338: ' la' (ID: 557)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03808405622839928
    2. 'len' → logprob: -3.288084030151367
    3. ' not' → logprob: -10.288084030151367
    4. ' ' → logprob: -12.163084030151367
    5. '   ' → logprob: -13.413084030151367
    6. ' a' → logprob: -14.288084030151367
    7. ' ' → logprob: -15.038084030151367
    8. '	len' → logprob: -15.163084030151367
    9. 'a' → logprob: -15.413084030151367
    10. 'not' → logprob: -15.663084030151367

Token 339: ' liste' (ID: 31719)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.022010227665305138
    2. ' len' → logprob: -3.897010326385498
    3. 'a' → logprob: -6.897010326385498
    4. '   ' → logprob: -9.39700984954834
    5. 'not' → logprob: -9.39700984954834
    6. ' not' → logprob: -9.64700984954834
    7. 'long' → logprob: -10.02200984954834
    8. ' ' → logprob: -10.02200984954834
    9. 'liste' → logprob: -10.39700984954834
    10. ' longueur' → logprob: -10.64700984954834

Token 340: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8256950974464417
    2. 'a' → logprob: -0.9506950974464417
    3. 'len' → logprob: -2.200695037841797
    4. '[:]' → logprob: -3.950695037841797
    5. ' a' → logprob: -4.325695037841797
    6. ':' → logprob: -4.700695037841797
    7. ' ' → logprob: -5.325695037841797
    8. ' has' → logprob: -6.075695037841797
    9. '.' → logprob: -6.200695037841797
    10. 'n' → logprob: -6.825695037841797

Token 341: ' vide' (ID: 21835)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5175878405570984
    2. '[]' → logprob: -1.5175879001617432
    3. '   ' → logprob: -2.517587900161743
    4. 'None' → logprob: -3.517587900161743
    5. ' len' → logprob: -3.642587900161743
    6. 'vide' → logprob: -3.892587900161743
    7. ' vide' → logprob: -4.767587661743164
    8. ' None' → logprob: -5.392587661743164
    9. ' []' → logprob: -5.517587661743164
    10. ' ' → logprob: -6.142587661743164

Token 342: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3225756585597992
    2. '   ' → logprob: -1.3225756883621216
    3. ' or' → logprob: -4.947575569152832
    4. ',' → logprob: -7.072575569152832
    5. ':return' → logprob: -7.572575569152832
    6. ':
' → logprob: -8.072575569152832
    7. '.' → logprob: -8.947575569152832
    8. '       ' → logprob: -9.197575569152832
    9. '):' → logprob: -9.322575569152832
    10. ' and' → logprob: -9.572575569152832

Token 343: ' a' (ID: 261)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.8748534917831421
    2. 'de' → logprob: -1.749853491783142
    3. 'a' → logprob: -2.1248536109924316
    4. 'qu' → logprob: -2.9998536109924316
    5. 'vide' → logprob: -2.9998536109924316
    6. 'cont' → logprob: -3.3748536109924316
    7. ' contient' → logprob: -3.4998536109924316
    8. 'd' → logprob: -3.6248536109924316
    9. ' d' → logprob: -3.6248536109924316
    10. 'n' → logprob: -4.499853610992432

Token 344: ' un' (ID: 537)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9397284984588623
    2. 'None' → logprob: -1.4397284984588623
    3. ' une' → logprob: -2.1897284984588623
    4. '   ' → logprob: -2.3147284984588623
    5. ' len' → logprob: -3.6897284984588623
    6. 'u' → logprob: -4.189728736877441
    7. ' None' → logprob: -4.189728736877441
    8. '1' → logprob: -4.564728736877441
    9. 'une' → logprob: -4.564728736877441
    10. ' ' → logprob: -4.689728736877441

Token 345: ' seul' (ID: 33041)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.2395119071006775
    2. ' seul' → logprob: -1.8645119667053223
    3. 'élé' → logprob: -4.114511966705322
    4. 'long' → logprob: -4.489511966705322
    5. 'len' → logprob: -4.864511966705322
    6. 'unique' → logprob: -5.739511966705322
    7. 'length' → logprob: -5.989511966705322
    8. '```' → logprob: -6.114511966705322
    9. ' seule' → logprob: -6.114511966705322
    10. ' unique' → logprob: -6.614511966705322

Token 346: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.12800292670726776
    2. ' élément' → logprob: -2.128002882003784
    3. 'element' → logprob: -7.003003120422363
    4. ' element' → logprob: -9.128003120422363
    5. 'él' → logprob: -11.378003120422363
    6. ' ' → logprob: -11.378003120422363
    7. 'é' → logprob: -11.753003120422363
    8. ' éléments' → logprob: -12.003003120422363
    9. ' él' → logprob: -12.128003120422363
    10. ' é' → logprob: -12.628003120422363

Token 347: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6632969379425049
    2. ':' → logprob: -0.7882969379425049
    3. ',' → logprob: -3.788296937942505
    4. ' or' → logprob: -5.788296699523926
    5. ':
' → logprob: -6.038296699523926
    6. ' :' → logprob: -7.038296699523926
    7. ':return' → logprob: -7.663296699523926
    8. '.' → logprob: -8.038296699523926
    9. '):' → logprob: -9.038296699523926
    10. '       ' → logprob: -9.038296699523926

Token 348: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015744947595521808
    2. ' if' → logprob: -6.501574516296387
    3. '       ' → logprob: -10.751574516296387
    4. 'if' → logprob: -11.001574516296387
    5. ':' → logprob: -11.251574516296387
    6. ' return' → logprob: -12.501574516296387
    7. ')' → logprob: -12.501574516296387
    8. '	if' → logprob: -12.876574516296387
    9. '    
' → logprob: -13.126574516296387
    10. '   ' → logprob: -13.376574516296387

Token 349: ' liste' (ID: 31719)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30208781361579895
    2. ' return' → logprob: -1.9270877838134766
    3. 'return' → logprob: -2.1770877838134766
    4. '
' → logprob: -7.302087783813477
    5. ' ' → logprob: -8.052087783813477
    6. '    
' → logprob: -8.427087783813477
    7. '  ' → logprob: -9.177087783813477
    8. '	return' → logprob: -9.302087783813477
    9. '    ' → logprob: -9.427087783813477
    10. '       ' → logprob: -10.052087783813477

Token 350: ' tri' (ID: 12665)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3923236131668091
    2. ' return' → logprob: -1.767323613166809
    3. '   ' → logprob: -2.1423234939575195
    4. ':return' → logprob: -4.3923234939575195
    5. '[:]' → logprob: -5.3923234939575195
    6. 'a' → logprob: -5.6423234939575195
    7. '.sort' → logprob: -6.0173234939575195
    8. ' a' → logprob: -6.0173234939575195
    9. 'eturn' → logprob: -6.7673234939575195
    10. '	return' → logprob: -6.7673234939575195

Token 351: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.167368546128273
    2. 'née' → logprob: -3.6673686504364014
    3. 'e' → logprob: -3.7923686504364014
    4. 'ed' → logprob: -3.9173686504364014
    5. 'er' → logprob: -4.042368412017822
    6. '   ' → logprob: -4.417368412017822
    7. 'f' → logprob: -4.417368412017822
    8. 'rée' → logprob: -5.542368412017822
    9. 'eturn' → logprob: -5.542368412017822
    10. 'é' → logprob: -5.542368412017822

Token 352: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38607144355773926
    2. 'return' → logprob: -1.8860714435577393
    3. ' return' → logprob: -1.8860714435577393
    4. ':return' → logprob: -4.88607120513916
    5. '	return' → logprob: -5.63607120513916
    6. ':' → logprob: -6.51107120513916
    7. '       ' → logprob: -6.51107120513916
    8. '    ' → logprob: -7.88607120513916
    9. ',' → logprob: -8.01107120513916
    10. '    
' → logprob: -8.26107120513916

Token 353: ' donc' (ID: 14206)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3711850643157959
    2. '   ' → logprob: -1.746185064315796
    3. 'a' → logprob: -2.121185064315796
    4. ' return' → logprob: -4.621185302734375
    5. '    ' → logprob: -5.871185302734375
    6. 'return' → logprob: -6.746185302734375
    7. '	a' → logprob: -8.371185302734375
    8. ' retourn' → logprob: -8.371185302734375
    9. ' retour' → logprob: -8.496185302734375
    10. ' ' → logprob: -8.621185302734375

Token 354: ' ident' (ID: 3951)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48304516077041626
    2. ' a' → logprob: -0.9830451607704163
    3. ' return' → logprob: -5.7330451011657715
    4. '   ' → logprob: -6.1080451011657715
    5. ' ' → logprob: -6.4830451011657715
    6. 'return' → logprob: -6.6080451011657715
    7. ' retour' → logprob: -8.73304557800293
    8. ' retourn' → logprob: -9.10804557800293
    9. '	a' → logprob: -9.60804557800293
    10. 'ret' → logprob: -10.23304557800293

Token 355: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.005992908496409655
    2. 'a' → logprob: -5.505992889404297
    3. 'icale' → logprob: -6.880992889404297
    4. 'ale' → logprob: -7.380992889404297
    5. 'e' → logprob: -9.880992889404297
    6. 'iques' → logprob: -10.630992889404297
    7. 'que' → logprob: -10.880992889404297
    8. '[' → logprob: -10.880992889404297
    9. 'iq' → logprob: -10.880992889404297
    10. 'iqu' → logprob: -11.005992889404297

Token 356: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008875491097569466
    2. 'a' → logprob: -5.758875370025635
    3. ' à' → logprob: -5.758875370025635
    4. 'return' → logprob: -6.883875370025635
    5. ' a' → logprob: -7.633875370025635
    6. 'à' → logprob: -7.883875370025635
    7. '(a' → logprob: -8.008875846862793
    8. ' return' → logprob: -9.133875846862793
    9. ':' → logprob: -10.133875846862793
    10. ' ' → logprob: -10.883875846862793

Token 357: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0730089470744133
    2. ' a' → logprob: -2.6980090141296387
    3. ' la' → logprob: -6.198009014129639
    4. 'la' → logprob: -7.323009014129639
    5. 'l' → logprob: -8.32300853729248
    6. ' l' → logprob: -9.94800853729248
    7. ' ' → logprob: -10.19800853729248
    8. '   ' → logprob: -10.82300853729248
    9. ' ' → logprob: -11.94800853729248
    10. '	a' → logprob: -12.57300853729248

Token 358: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.033924490213394165
    2. ' a' → logprob: -3.5339245796203613
    3. 'return' → logprob: -5.908924579620361
    4. ' return' → logprob: -7.408924579620361
    5. '   ' → logprob: -7.533924579620361
    6. ' ' → logprob: -9.033924102783203
    7. 'len' → logprob: -9.533924102783203
    8. 'list' → logprob: -11.033924102783203
    9. '```' → logprob: -11.033924102783203
    10. '	a' → logprob: -11.783924102783203

Token 359: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09511982649564743
    2. 'a' → logprob: -2.9701197147369385
    3. ' a' → logprob: -3.4701197147369385
    4. ' return' → logprob: -5.845119953155518
    5. 'return' → logprob: -6.470119953155518
    6. ' if' → logprob: -6.470119953155518
    7. '    
' → logprob: -7.220119953155518
    8. '[a' → logprob: -7.845119953155518
    9. '```' → logprob: -8.84511947631836
    10. '
' → logprob: -8.97011947631836

Token 360: ''origine' (ID: 89355)
  Prédit: ''origine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''origine' → logprob: -0.5577815175056458
    2. 'origine' → logprob: -1.307781457901001
    3. ''entrée' → logprob: -2.307781457901001
    4. 'a' → logprob: -3.182781457901001
    5. 'entrée' → logprob: -4.30778169631958
    6. ''a' → logprob: -6.55778169631958
    7. ''arrivée' → logprob: -8.057781219482422
    8. '’origine' → logprob: -8.432781219482422
    9. '`' → logprob: -9.432781219482422
    10. '’entrée' → logprob: -9.557781219482422

Token 361: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010585333220660686
    2. ':' → logprob: -7.376058578491211
    3. '       ' → logprob: -8.001058578491211
    4. '.' → logprob: -10.751058578491211
    5. ',' → logprob: -11.251058578491211
    6. 'a' → logprob: -11.501058578491211
    7. ' or' → logprob: -11.501058578491211
    8. ' a' → logprob: -12.126058578491211
    9. ':
' → logprob: -12.251058578491211
    10. 'return' → logprob: -12.501058578491211

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016955342143774033
    2. ' if' → logprob: -6.50169563293457
    3. 'if' → logprob: -9.00169563293457
    4. ':' → logprob: -10.25169563293457
    5. 'def' → logprob: -11.87669563293457
    6. '    
' → logprob: -12.25169563293457
    7. '   ' → logprob: -12.75169563293457
    8. '	if' → logprob: -12.87669563293457
    9. '    ' → logprob: -13.00169563293457
    10. ')' → logprob: -13.12669563293457

Token 363: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5647458434104919
    2. ' if' → logprob: -1.3147459030151367
    3. '   ' → logprob: -1.8147459030151367
    4. 'return' → logprob: -10.814745903015137
    5. '	if' → logprob: -10.939745903015137
    6. ' ' → logprob: -11.189745903015137
    7. '   ' → logprob: -11.939745903015137
    8. ' return' → logprob: -12.439745903015137
    9. '```' → logprob: -12.689745903015137
    10. ' ' → logprob: -13.314745903015137

Token 364: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014166207052767277
    2. ' len' → logprob: -4.264166355133057
    3. ' ' → logprob: -13.139165878295898
    4. '(len' → logprob: -15.014165878295898
    5. '   ' → logprob: -15.514165878295898
    6. 'a' → logprob: -16.7641658782959
    7. '	len' → logprob: -16.8891658782959
    8. '  ' → logprob: -17.6391658782959
    9. ' a' → logprob: -18.6391658782959
    10. ' not' → logprob: -19.7641658782959

Token 365: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.05492347106337547
    2. '(a' → logprob: -2.9299235343933105
    3. '(list' → logprob: -11.054923057556152
    4. '(' → logprob: -11.554923057556152
    5. 'set' → logprob: -12.179923057556152
    6. 'a' → logprob: -12.804923057556152
    7. '((' → logprob: -12.929923057556152
    8. '(s' → logprob: -13.179923057556152
    9. '({' → logprob: -13.804923057556152
    10. ' set' → logprob: -13.929923057556152

Token 366: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.246537173457909e-06
    2. 'a' → logprob: -12.875003814697266
    3. '(' → logprob: -13.750003814697266
    4. ' (' → logprob: -14.875003814697266
    5. '(
' → logprob: -15.750003814697266
    6. ' a' → logprob: -18.250003814697266
    7. ')' → logprob: -18.375003814697266
    8. ')a' → logprob: -19.375003814697266
    9. '[a' → logprob: -19.750003814697266
    10. '(ai' → logprob: -20.000003814697266

Token 367: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.4021237802808173e-05
    2. ' ))' → logprob: -11.625014305114746
    3. '()))' → logprob: -13.125014305114746
    4. ')' → logprob: -13.500014305114746
    5. '   ' → logprob: -14.625014305114746
    6. ')))' → logprob: -14.750014305114746
    7. 'a' → logprob: -15.125014305114746
    8. ' ' → logprob: -15.750014305114746
    9. ''))' → logprob: -16.37501335144043
    10. '))+' → logprob: -16.87501335144043

Token 368: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5089569687843323
    2. '<=' → logprob: -1.0089569091796875
    3. ' <=' → logprob: -4.0089569091796875
    4. ' <' → logprob: -4.1339569091796875
    5. ')' → logprob: -9.758956909179688
    6. ')<=' → logprob: -10.883956909179688
    7. '<len' → logprob: -11.758956909179688
    8. '==' → logprob: -11.883956909179688
    9. ')<' → logprob: -13.258956909179688
    10. '()<' → logprob: -13.258956909179688

Token 369: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014174322597682476
    2. ' ' → logprob: -4.264174461364746
    3. '   ' → logprob: -11.514174461364746
    4. '  ' → logprob: -15.451674461364746
    5. '```' → logprob: -16.26417350769043
    6. '=' → logprob: -16.32667350769043
    7. '	' → logprob: -16.45167350769043
    8. ' ' → logprob: -16.51417350769043
    9. '
' → logprob: -17.01417350769043
    10. '1' → logprob: -17.32667350769043

Token 370: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.500024795532227
    4. '=' → logprob: -16.500024795532227
    5. '```' → logprob: -16.687524795532227
    6. '２' → logprob: -16.875024795532227
    7. '۲' → logprob: -17.000024795532227
    8. '
' → logprob: -17.812524795532227
    9. '1' → logprob: -17.812524795532227
    10. '(' → logprob: -17.937524795532227

Token 371: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2550038695335388
    2. ':
' → logprob: -1.5050039291381836
    3. '   ' → logprob: -6.505003929138184
    4. ':return' → logprob: -6.505003929138184
    5. ':
' → logprob: -10.630003929138184
    6. '       ' → logprob: -11.005003929138184
    7. '):
' → logprob: -11.130003929138184
    8. ' :' → logprob: -11.880003929138184
    9. '):' → logprob: -12.380003929138184
    10. ' :
' → logprob: -12.505003929138184

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009431512095034122
    2. '   ' → logprob: -5.1344313621521
    3. ':' → logprob: -5.7594313621521
    4. ':
' → logprob: -8.509431838989258
    5. ':return' → logprob: -10.134431838989258
    6. '	' → logprob: -10.384431838989258
    7. ' return' → logprob: -10.634431838989258
    8. 'return' → logprob: -10.759431838989258
    9. '	   ' → logprob: -12.134431838989258
    10. ',' → logprob: -12.384431838989258

Token 373: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.536164402961731
    2. '   ' → logprob: -1.036164402961731
    3. '       ' → logprob: -3.2861642837524414
    4. ' return' → logprob: -3.7861642837524414
    5. '	return' → logprob: -9.161164283752441
    6. '
' → logprob: -12.661164283752441
    7. '    ' → logprob: -12.786164283752441
    8. ' ' → logprob: -13.286164283752441
    9. '  ' → logprob: -13.286164283752441
    10. '   ' → logprob: -13.411164283752441

Token 374: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1269284337759018
    2. ' a' → logprob: -2.1269283294677734
    3. '	a' → logprob: -15.126928329467773
    4. '[a' → logprob: -17.751928329467773
    5. ' ' → logprob: -19.751928329467773
    6. '(a' → logprob: -20.001928329467773
    7. ' ' → logprob: -20.126928329467773
    8. 'а' → logprob: -20.251928329467773
    9. '   ' → logprob: -20.626928329467773
    10. '#a' → logprob: -21.126928329467773

Token 375: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21966955065727234
    2. '
' → logprob: -1.8446695804595947
    3. '    
' → logprob: -3.3446695804595947
    4. '<|end|>' → logprob: -6.094669342041016
    5. '  
' → logprob: -7.344669342041016
    6. '<|end|>' → logprob: -8.219669342041016
    7. '[' → logprob: -8.719669342041016
    8. '   
' → logprob: -9.219669342041016
    9. '	
' → logprob: -9.844669342041016
    10. ' 
' → logprob: -9.844669342041016

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09734095633029938
    2. '    
' → logprob: -2.8473410606384277
    3. '
' → logprob: -3.4723410606384277
    4. '<|end|>' → logprob: -6.097341060638428
    5. '  
' → logprob: -7.347341060638428
    6. '<|end|>' → logprob: -8.59734058380127
    7. ' 
' → logprob: -8.84734058380127
    8. '	
' → logprob: -9.09734058380127
    9. '[' → logprob: -9.09734058380127
    10. '   
' → logprob: -9.47234058380127

Token 377: ' #' (ID: 1069)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.04929615929722786
    2. '   ' → logprob: -3.1742961406707764
    3. ' pivot' → logprob: -5.7992963790893555
    4. 'else' → logprob: -6.0492963790893555
    5. 'p' → logprob: -7.5492963790893555
    6. ' else' → logprob: -9.674296379089355
    7. '#' (adapté à ' #') → logprob: -9.674296379089355
    8. '    
' → logprob: -9.924296379089355
    9. '    ' → logprob: -10.049296379089355
    10. 'mid' → logprob: -10.549296379089355

Token 378: ' Cr' (ID: 5790)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.0009780287509784102
    2. 'else' → logprob: -7.375977993011475
    3. '   ' → logprob: -8.500978469848633
    4. ' pivot' → logprob: -9.375978469848633
    5. 'p' → logprob: -10.125978469848633
    6. 'left' → logprob: -11.750978469848633
    7. ' ' → logprob: -12.375978469848633
    8. 'less' → logprob: -12.750978469848633
    9. '#' → logprob: -12.875978469848633
    10. 'mid' → logprob: -13.250978469848633

Token 379: 'ée' (ID: 2894)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0720168948173523
    2. 'ite' → logprob: -4.322016716003418
    3. '#' → logprob: -4.572016716003418
    4. 'oit' → logprob: -5.947016716003418
    5. 'o' → logprob: -6.072016716003418
    6. 'aise' → logprob: -6.072016716003418
    7. 'ont' → logprob: -6.197016716003418
    8. 'ait' → logprob: -6.197016716003418
    9. 'éer' → logprob: -6.197016716003418
    10. 'ement' → logprob: -6.322016716003418

Token 380: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.107076644897461
    2. 'pivot' → logprob: -1.107076644897461
    3. '[' → logprob: -1.732076644897461
    4. '[left' → logprob: -3.357076644897461
    5. 'less' → logprob: -3.482076644897461
    6. '[a' → logprob: -3.732076644897461
    7. 'a' → logprob: -4.607076644897461
    8. 'left' → logprob: -4.732076644897461
    9. ' ' → logprob: -4.982076644897461
    10. 'le' → logprob: -5.232076644897461

Token 381: ' liste' (ID: 31719)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.00010878815373871475
    2. ' pivot' → logprob: -9.87510871887207
    3. 'less' → logprob: -10.50010871887207
    4. '[]' → logprob: -11.12510871887207
    5. '[' → logprob: -12.12510871887207
    6. 'p' → logprob: -12.25010871887207
    7. 'sm' → logprob: -14.00010871887207
    8. 'left' → logprob: -14.12510871887207
    9. 'moins' → logprob: -14.62510871887207
    10. '[p' → logprob: -15.00010871887207

Token 382: ' vide' (ID: 21835)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -1.01954185962677
    2. 'pivot' → logprob: -1.89454185962677
    3. '[]' → logprob: -2.2695417404174805
    4. '[' → logprob: -2.2695417404174805
    5. '[p' → logprob: -2.8945417404174805
    6. '[left' → logprob: -3.0195417404174805
    7. '([' → logprob: -3.2695417404174805
    8. '[g' → logprob: -3.5195417404174805
    9. 'less' → logprob: -3.5195417404174805
    10. '=[' → logprob: -4.5195417404174805

Token 383: ' qui' (ID: 2780)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.2340024709701538
    2. 'sm' → logprob: -1.6090024709701538
    3. 'sorted' → logprob: -1.8590024709701538
    4. 'less' → logprob: -2.2340025901794434
    5. '[]' → logprob: -2.7340025901794434
    6. 'pivot' → logprob: -2.9840025901794434
    7. ' smaller' → logprob: -3.9840025901794434
    8. ' left' → logprob: -4.234002590179443
    9. '[left' → logprob: -4.359002590179443
    10. '   ' → logprob: -4.484002590179443

Token 384: ' cont' (ID: 836)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.8130655884742737
    2. 'sera' → logprob: -1.688065528869629
    3. 'serv' → logprob: -2.438065528869629
    4. ' cont' → logprob: -2.563065528869629
    5. 'acc' → logprob: -3.313065528869629
    6. 's' → logprob: -3.563065528869629
    7. ' va' → logprob: -3.563065528869629
    8. ' sera' → logprob: -3.813065528869629
    9. 'va' → logprob: -4.063065528869629
    10. 'will' → logprob: -4.188065528869629

Token 385: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.1726398468017578
    2. 'i' → logprob: -2.672639846801758
    3. 'iend' → logprob: -2.922639846801758
    4. 'a' → logprob: -4.047639846801758
    5. 'inue' → logprob: -5.047639846801758
    6. 'in' → logprob: -5.672639846801758
    7. 'endra' → logprob: -5.797639846801758
    8. 'ent' → logprob: -6.547639846801758
    9. 'endrá' → logprob: -7.422639846801758
    10. 'inu' → logprob: -8.047639846801758

Token 386: 'endra' (ID: 32364)
  Prédit: 'endra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endra' → logprob: -0.013203646056354046
    2. 'end' → logprob: -5.0132036209106445
    3. 'ent' → logprob: -5.8882036209106445
    4. 'nd' → logprob: -6.0132036209106445
    5. 'n' → logprob: -8.763203620910645
    6. 'en' → logprob: -8.888203620910645
    7. 'nera' → logprob: -8.888203620910645
    8. 'endr' → logprob: -8.888203620910645
    9. 't' → logprob: -9.263203620910645
    10. 'nt' → logprob: -9.388203620910645

Token 387: ' les' (ID: 1341)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5148684978485107
    2. '[a' → logprob: -2.1398684978485107
    3. '[' → logprob: -2.2648684978485107
    4. '[x' → logprob: -3.3898684978485107
    5. '[q' → logprob: -3.5148684978485107
    6. '[g' → logprob: -3.6398684978485107
    7. '[left' → logprob: -4.01486873626709
    8. '[p' → logprob: -4.26486873626709
    9. '[e' → logprob: -4.26486873626709
    10. '[element' → logprob: -4.76486873626709

Token 388: ' éléments' (ID: 57375)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9616736769676208
    2. 'moins' → logprob: -1.7116737365722656
    3. ' elements' → logprob: -1.8366737365722656
    4. 'élé' → logprob: -2.3366737365722656
    5. 'elements' → logprob: -2.4616737365722656
    6. '[]' → logprob: -3.3366737365722656
    7. ' éléments' → logprob: -4.836673736572266
    8. '[m' → logprob: -5.086673736572266
    9. '[p' → logprob: -5.086673736572266
    10. 'sm' → logprob: -5.086673736572266

Token 389: ' inf' (ID: 5603)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9289652109146118
    2. '[' → logprob: -1.5539652109146118
    3. 'less' → logprob: -2.0539650917053223
    4. 'moins' → logprob: -2.3039650917053223
    5. 'pivot' → logprob: -3.0539650917053223
    6. 'g' → logprob: -3.9289650917053223
    7. '[left' → logprob: -4.303965091705322
    8. 'inf' → logprob: -4.428965091705322
    9. '[]=' → logprob: -4.553965091705322
    10. '=[]' → logprob: -4.678965091705322

Token 390: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.0279579795897007
    2. 'érieur' → logprob: -4.527957916259766
    3. '[' → logprob: -4.652957916259766
    4. 'érieure' → logprob: -5.527957916259766
    5. 'érieures' → logprob: -6.027957916259766
    6. '[a' → logprob: -7.902957916259766
    7. 'érents' → logprob: -9.402957916259766
    8. '[i' → logprob: -9.527957916259766
    9. 'é' → logprob: -9.777957916259766
    10. 'a' → logprob: -10.152957916259766

Token 391: ' ou' (ID: 2031)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18832054734230042
    2. '   ' → logprob: -2.5633206367492676
    3. '[]' → logprob: -4.063320636749268
    4. 'et' → logprob: -4.438320636749268
    5. ',' → logprob: -4.688320636749268
    6. ' [' → logprob: -4.688320636749268
    7. 'pivot' → logprob: -5.188320636749268
    8. ' et' → logprob: -5.313320636749268
    9. ' au' → logprob: -5.313320636749268
    10. 'au' → logprob: -5.438320636749268

Token 392: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.450859397649765
    2. 'ég' → logprob: -1.3258594274520874
    3. 'égal' → logprob: -3.075859308242798
    4. '=' → logprob: -3.700859308242798
    5. 'eg' → logprob: -4.450859546661377
    6. 'à' → logprob: -5.075859546661377
    7. ' eg' → logprob: -5.200859546661377
    8. 'ug' → logprob: -6.700859546661377
    9. '=[]' → logprob: -7.575859546661377
    10. ' égal' → logprob: -8.075859069824219

Token 393: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.09067671000957489
    2. 'al' → logprob: -2.465676784515381
    3. 'ale' → logprob: -7.090676784515381
    4. 'als' → logprob: -7.340676784515381
    5. 'ales' → logprob: -8.465676307678223
    6. '```' → logprob: -10.965676307678223
    7. 'a' → logprob: -11.215676307678223
    8. 'Aux' → logprob: -12.465676307678223
    9. '``' → logprob: -13.840676307678223
    10. 'aul' → logprob: -14.090676307678223

Token 394: ' au' (ID: 2791)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.21280784904956818
    2. '[p' → logprob: -2.9628078937530518
    3. '[' → logprob: -3.0878078937530518
    4. ' pivot' → logprob: -3.3378078937530518
    5. 'au' → logprob: -3.7128078937530518
    6. ' au' → logprob: -3.8378078937530518
    7. '(p' → logprob: -6.212807655334473
    8. 'to' → logprob: -6.212807655334473
    9. ' à' → logprob: -6.587807655334473
    10. '[]' → logprob: -6.837807655334473

Token 395: ' pivot' (ID: 44506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14559036493301392
    2. ' a' → logprob: -2.020590305328369
    3. '[a' → logprob: -6.270590305328369
    4. '[' → logprob: -7.770590305328369
    5. 'pivot' → logprob: -7.895590305328369
    6. ' pivot' → logprob: -9.645590782165527
    7. ' [' → logprob: -9.645590782165527
    8. '[]' → logprob: -9.895590782165527
    9. ' ' → logprob: -12.583090782165527
    10. ' []' → logprob: -12.583090782165527

Token 396: '.' (ID: 13)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.5530610084533691
    2. '   ' → logprob: -1.5530610084533691
    3. '[' → logprob: -2.553061008453369
    4. ',' → logprob: -2.553061008453369
    5. ' pivot' → logprob: -4.303061008453369
    6. '[]' → logprob: -4.678061008453369
    7. '[left' → logprob: -4.803061008453369
    8. ':' → logprob: -4.803061008453369
    9. '=' → logprob: -5.678061008453369
    10. ' =' → logprob: -5.803061008453369

Token 397: ' Elle' (ID: 21300)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.6594017744064331
    2. '   ' → logprob: -1.409401774406433
    3. 'left' → logprob: -2.9094018936157227
    4. ' pivot' → logprob: -3.2844018936157227
    5. '[left' → logprob: -3.6594018936157227
    6. '[]' → logprob: -3.9094018936157227
    7. '[' → logprob: -4.534401893615723
    8. 'sm' → logprob: -4.534401893615723
    9. 'less' → logprob: -4.659401893615723
    10. ' smaller' → logprob: -5.034401893615723

Token 398: ' s' (ID: 265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3600698411464691
    2. '=' → logprob: -1.3600698709487915
    3. '=[]' → logprob: -3.735069751739502
    4. 'pivot' → logprob: -4.235069751739502
    5. '.append' → logprob: -5.610069751739502
    6. '=[]
' → logprob: -6.735069751739502
    7. 's' → logprob: -7.610069751739502
    8. ' pivot' → logprob: -7.860069751739502
    9. ',' → logprob: -8.23507022857666
    10. '=[' → logprob: -8.61007022857666

Token 399: ''appelle' (ID: 178903)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1870712041854858
    2. '=[]' → logprob: -1.3120712041854858
    3. 'e' → logprob: -1.5620712041854858
    4. ' =' → logprob: -3.0620713233947754
    5. 'a' → logprob: -3.6870713233947754
    6. 'elect' → logprob: -4.062071323394775
    7. '=[]
' → logprob: -4.562071323394775
    8. 'era' → logprob: -4.562071323394775
    9. 'elon' → logprob: -4.687071323394775
    10. 'ele' → logprob: -4.937071323394775

Token 400: ' '' (ID: 461)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.6048796772956848
    2. 'left' → logprob: -0.8548796772956848
    3. '"' → logprob: -4.229879856109619
    4. 'sm' → logprob: -5.729879856109619
    5. 'low' → logprob: -6.229879856109619
    6. 'pivot' → logprob: -6.229879856109619
    7. 'lt' → logprob: -6.979879856109619
    8. 'l' → logprob: -7.104879856109619
    9. '"L' → logprob: -7.229879856109619
    10. 'lower' → logprob: -7.354879856109619

Token 401: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.44014132022857666
    2. 'less' → logprob: -1.0651413202285767
    3. 'low' → logprob: -5.190141201019287
    4. 'sm' → logprob: -6.190141201019287
    5. 'l' → logprob: -6.815141201019287
    6. 'lt' → logprob: -6.940141201019287
    7. 'pivot' → logprob: -7.440141201019287
    8. 'lower' → logprob: -7.940141201019287
    9. 'L' → logprob: -8.190141677856445
    10. 'le' → logprob: -9.690141677856445

Token 402: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07596879452466965
    2. ' =' → logprob: -2.7009687423706055
    3. '=' → logprob: -5.5759687423706055
    4. '=[]' → logprob: -6.5759687423706055
    5. ',' → logprob: -9.075968742370605
    6. '[]' → logprob: -9.450968742370605
    7. '='' → logprob: -9.450968742370605
    8. ''.' → logprob: -9.575968742370605
    9. '']' → logprob: -9.700968742370605
    10. ' ='' → logprob: -9.950968742370605

Token 403: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04143183305859566
    2. '   ' → logprob: -3.9164319038391113
    3. '=' → logprob: -4.166431903839111
    4. 'left' → logprob: -6.166431903839111
    5. '=[]' → logprob: -7.166431903839111
    6. ',' → logprob: -7.291431903839111
    7. '[left' → logprob: -7.541431903839111
    8. ':' → logprob: -8.416431427001953
    9. '[]' → logprob: -9.041431427001953
    10. '=[]
' → logprob: -9.041431427001953

Token 404: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.20120640099048615
    2. ' left' → logprob: -1.8262064456939697
    3. '   ' → logprob: -3.9512064456939697
    4. '	left' → logprob: -7.076206207275391
    5. '[left' → logprob: -7.576206207275391
    6. ' =' → logprob: -8.95120620727539
    7. ':left' → logprob: -9.82620620727539
    8. ',' → logprob: -9.95120620727539
    9. '[' → logprob: -10.20120620727539
    10. ':' → logprob: -10.20120620727539

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23031289875507355
    2. '=' → logprob: -1.6053129434585571
    3. ',' → logprob: -5.855312824249268
    4. '=[]' → logprob: -6.230312824249268
    5. '=[' → logprob: -10.980313301086426
    6. '=[]
' → logprob: -11.980313301086426
    7. ' ' → logprob: -12.230313301086426
    8. '   ' → logprob: -12.480313301086426
    9. ' =[' → logprob: -12.480313301086426
    10. '[]' → logprob: -12.605313301086426

Token 406: ' []
' (ID: 8911)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.6040759086608887
    2. '[]' → logprob: -0.8540759086608887
    3. '[' → logprob: -3.7290759086608887
    4. '[list' → logprob: -6.604075908660889
    5. ' [' → logprob: -6.979075908660889
    6. '[x' → logprob: -7.979075908660889
    7. ' []' → logprob: -8.354076385498047
    8. '[]
' → logprob: -8.729076385498047
    9. '[i' → logprob: -8.979076385498047
    10. '[array' → logprob: -9.229076385498047

Token 407: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.463192880153656
    2. 'pivot' → logprob: -1.0881929397583008
    3. ' right' → logprob: -4.088192939758301
    4. ' pivot' → logprob: -4.338192939758301
    5. '<|end|>' → logprob: -6.713192939758301
    6. '[right' → logprob: -7.463192939758301
    7. 'mid' → logprob: -7.838192939758301
    8. '	right' → logprob: -8.0881929397583
    9. 'middle' → logprob: -8.0881929397583
    10. '[' → logprob: -8.2131929397583

Token 409: ' Le' (ID: 2018)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.29311850666999817
    2. 'pivot' → logprob: -1.4181184768676758
    3. 'for' → logprob: -4.543118476867676
    4. ' right' → logprob: -7.168118476867676
    5. ' pivot' → logprob: -8.543118476867676
    6. 'p' → logprob: -9.043118476867676
    7. ' for' → logprob: -9.168118476867676
    8. '   ' → logprob: -10.793118476867676
    9. 'i' → logprob: -11.668118476867676
    10. '	right' → logprob: -12.418118476867676

Token 410: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.07164089381694794
    2. ' pivot' → logprob: -2.696640968322754
    3. 'right' → logprob: -6.571640968322754
    4. ' right' → logprob: -8.196640968322754
    5. 'p' → logprob: -11.696640968322754
    6. 'ivot' → logprob: -12.196640968322754
    7. ' piv' → logprob: -12.196640968322754
    8. '[' → logprob: -13.446640968322754
    9. ' ' → logprob: -13.446640968322754
    10. '   ' → logprob: -14.071640968322754

Token 411: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326141357421875
    2. ' =' → logprob: -0.7576141357421875
    3. ',' → logprob: -11.632614135742188
    4. ' ' → logprob: -13.007614135742188
    5. '=a' → logprob: -14.257614135742188
    6. 'pivot' → logprob: -14.257614135742188
    7. '＝' → logprob: -14.882614135742188
    8. 'a' → logprob: -15.132614135742188
    9. '=[]' → logprob: -15.507614135742188
    10. '=[' → logprob: -15.757614135742188

Token 412: 'élé' (ID: 15228)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.047077879309654236
    2. ' pivot' → logprob: -3.1720778942108154
    3. 'a' → logprob: -5.672077655792236
    4. 'p' → logprob: -8.422078132629395
    5. ')' → logprob: -8.797078132629395
    6. ' a' → logprob: -9.172078132629395
    7. '=' → logprob: -10.297078132629395
    8. ' =' → logprob: -10.422078132629395
    9. ')p' → logprob: -10.922078132629395
    10. ')a' → logprob: -11.047078132629395

Token 413: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.005703973118215799
    2. '=' → logprob: -6.005703926086426
    3. 'v' → logprob: -6.630703926086426
    4. 'ement' → logprob: -8.130703926086426
    5. 'm' → logprob: -8.255703926086426
    6. 'ément' → logprob: -8.755703926086426
    7. 'a' → logprob: -8.880703926086426
    8. ')' → logprob: -8.880703926086426
    9. 'ments' → logprob: -8.880703926086426
    10. 'pivot' → logprob: -9.130703926086426

Token 414: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34871238470077515
    2. '=' → logprob: -1.22371244430542
    3. 'pivot' → logprob: -8.348711967468262
    4. '=a' → logprob: -12.098711967468262
    5. '=p' → logprob: -12.598711967468262
    6. 'a' → logprob: -12.973711967468262
    7. ' pivot' → logprob: -13.098711967468262
    8. ',' → logprob: -13.223711967468262
    9. '=[]' → logprob: -13.348711967468262
    10. 's' → logprob: -13.473711967468262

Token 415: ' référence' (ID: 76252)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006629639305174351
    2. 'pivot' → logprob: -5.381629467010498
    3. ' a' → logprob: -6.631629467010498
    4. 'la' → logprob: -8.756629943847656
    5. ' pivot' → logprob: -8.756629943847656
    6. ' la' → logprob: -9.256629943847656
    7. 'dro' → logprob: -10.006629943847656
    8. 'base' → logprob: -10.381629943847656
    9. 'p' → logprob: -10.631629943847656
    10. ' droite' → logprob: -10.631629943847656

Token 416: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5288727879524231
    2. ')' → logprob: -1.2788727283477783
    3. '=' → logprob: -2.0288727283477783
    4. ' )' → logprob: -7.153872966766357
    5. ']' → logprob: -9.7788724899292
    6. ',' → logprob: -10.9038724899292
    7. '`)' → logprob: -11.5288724899292
    8. ')=' → logprob: -12.0288724899292
    9. '[' → logprob: -12.2788724899292
    10. ' ' → logprob: -12.5288724899292

Token 417: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484596610069275
    2. '=' → logprob: -1.2234597206115723
    3. ',' → logprob: -11.848459243774414
    4. '=a' → logprob: -12.348459243774414
    5. ' ' → logprob: -13.598459243774414
    6. 'a' → logprob: -13.973459243774414
    7. ')' → logprob: -15.098459243774414
    8. ']' → logprob: -15.223459243774414
    9. '[' → logprob: -16.098459243774414
    10. ' ,' → logprob: -16.223459243774414

Token 418: ' choisi' (ID: 77245)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3484528362751007
    2. 'a' → logprob: -1.2234528064727783
    3. '	a' → logprob: -12.4734525680542
    4. ' ' → logprob: -13.8484525680542
    5. '[' → logprob: -14.3484525680542
    6. '[a' → logprob: -14.4734525680542
    7. ' =' → logprob: -15.0984525680542
    8. '=a' → logprob: -15.2234525680542
    9. ' ' → logprob: -15.4734525680542
    10. ',' → logprob: -15.6609525680542

Token 419: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3878234326839447
    2. '=' → logprob: -1.137823462486267
    3. 'a' → logprob: -7.137823581695557
    4. 'pivot' → logprob: -9.637823104858398
    5. ' a' → logprob: -10.137823104858398
    6. '=a' → logprob: -11.012823104858398
    7. ',' → logprob: -11.137823104858398
    8. '[' → logprob: -12.512823104858398
    9. ' ' → logprob: -12.887823104858398
    10. ' pivot' → logprob: -13.262823104858398

Token 420: ' étant' (ID: 47869)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12695477902889252
    2. ' a' → logprob: -2.1269547939300537
    3. ' le' → logprob: -11.001955032348633
    4. 'le' → logprob: -13.001955032348633
    5. '	a' → logprob: -13.126955032348633
    6. ' ' → logprob: -13.501955032348633
    7. ' la' → logprob: -13.876955032348633
    8. ' the' → logprob: -14.376955032348633
    9. '(a' → logprob: -14.501955032348633
    10. 'l' → logprob: -15.001955032348633

Token 421: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11284679919481277
    2. ' a' → logprob: -2.237846851348877
    3. ' the' → logprob: -11.987846374511719
    4. ' le' → logprob: -11.987846374511719
    5. 'le' → logprob: -12.237846374511719
    6. 'l' → logprob: -13.362846374511719
    7. ' ' → logprob: -13.487846374511719
    8. ' la' → logprob: -14.112846374511719
    9. '	a' → logprob: -14.112846374511719
    10. 'la' → logprob: -14.862846374511719

Token 422: ' premier' (ID: 15506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06138196960091591
    2. ' a' → logprob: -3.1863820552825928
    3. ' premier' → logprob: -4.186381816864014
    4. 'prem' → logprob: -6.061381816864014
    5. ' first' → logprob: -8.186382293701172
    6. 'first' → logprob: -8.936382293701172
    7. '[' → logprob: -9.311382293701172
    8. 'pivot' → logprob: -9.811382293701172
    9. 'élé' → logprob: -10.061382293701172
    10. '[a' → logprob: -11.311382293701172

Token 423: ' élément' (ID: 99627)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2676627039909363
    2. 'a' → logprob: -2.267662763595581
    3. ' élément' → logprob: -2.392662763595581
    4. ' element' → logprob: -3.517662763595581
    5. 'element' → logprob: -5.892662525177002
    6. 'élé' → logprob: -5.892662525177002
    7. ' ' → logprob: -6.017662525177002
    8. ' de' → logprob: -6.892662525177002
    9. ' token' → logprob: -8.64266300201416
    10. ' à' → logprob: -9.14266300201416

Token 424: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7502539157867432
    2. ' a' → logprob: -1.2502539157867432
    3. ' de' → logprob: -1.7502539157867432
    4. '   ' → logprob: -4.000253677368164
    5. ' =' → logprob: -4.125253677368164
    6. 'pivot' → logprob: -4.875253677368164
    7. ' of' → logprob: -5.125253677368164
    8. ',' → logprob: -5.375253677368164
    9. ' pivot' → logprob: -5.375253677368164
    10. '(a' → logprob: -5.500253677368164

Token 425: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0619712732732296
    2. ' a' → logprob: -2.8119711875915527
    3. ' the' → logprob: -13.311971664428711
    4. ' la' → logprob: -13.311971664428711
    5. ' ' → logprob: -16.18697166442871
    6. '	a' → logprob: -16.31197166442871
    7. 'l' → logprob: -17.68697166442871
    8. 'the' → logprob: -17.68697166442871
    9. ' l' → logprob: -17.93697166442871
    10. ''a' → logprob: -18.06197166442871

Token 426: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00360019039362669
    2. ' a' → logprob: -5.628600120544434
    3. '_a' → logprob: -17.62860107421875
    4. '	a' → logprob: -17.62860107421875
    5. 'liste' → logprob: -17.62860107421875
    6. ' liste' → logprob: -17.87860107421875
    7. ' list' → logprob: -18.00360107421875
    8. ''a' → logprob: -18.37860107421875
    9. '(a' → logprob: -18.62860107421875
    10. '.a' → logprob: -18.62860107421875

Token 427: ' ;' (ID: 4605)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6451044082641602
    2. 'a' → logprob: -1.2701044082641602
    3. ' a' → logprob: -2.39510440826416
    4. '   ' → logprob: -2.64510440826416
    5. '(a' → logprob: -4.52010440826416
    6. 'pivot' → logprob: -4.89510440826416
    7. ' pivot' → logprob: -5.52010440826416
    8. '=' → logprob: -5.77010440826416
    9. '=a' → logprob: -5.77010440826416
    10. ' (' → logprob: -7.27010440826416

Token 428: ' on' (ID: 402)
  Prédit: ' pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pivot' → logprob: -0.2817688286304474
    2. 'pivot' → logprob: -1.406768798828125
    3. ' right' → logprob: -8.281768798828125
    4. 'right' → logprob: -8.906768798828125
    5. ' piv' → logprob: -9.281768798828125
    6. '   ' → logprob: -10.031768798828125
    7. 'p' → logprob: -10.531768798828125
    8. ' p' → logprob: -10.906768798828125
    9. ' ' → logprob: -12.156768798828125
    10. ' a' → logprob: -12.281768798828125

Token 429: ' l' (ID: 305)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.5285131335258484
    2. ' pivot' → logprob: -0.9035131335258484
    3. ' piv' → logprob: -7.153512954711914
    4. ' right' → logprob: -7.278512954711914
    5. 'right' → logprob: -7.278512954711914
    6. 'p' → logprob: -7.528512954711914
    7. ' continue' → logprob: -7.903512954711914
    8. 'ivot' → logprob: -8.153512954711914
    9. 'a' → logprob: -8.653512954711914
    10. ' a' → logprob: -8.653512954711914

Token 430: ''en' (ID: 16740)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.3855057954788208
    2. '=' → logprob: -1.3855057954788208
    3. ' =' → logprob: -3.0105056762695312
    4. ' pivot' → logprob: -4.010505676269531
    5. 'ivot' → logprob: -7.510505676269531
    6. 'p' → logprob: -7.760505676269531
    7. '=p' → logprob: -8.135505676269531
    8. 'a' → logprob: -8.385505676269531
    9. '.append' → logprob: -9.010505676269531
    10. '.' → logprob: -9.135505676269531

Token 431: 'l' (ID: 75)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.883783221244812
    2. 'p' → logprob: -1.758783221244812
    3. 'append' → logprob: -2.0087833404541016
    4. 't' → logprob: -3.0087833404541016
    5. '```' → logprob: -3.0087833404541016
    6. 'liste' → logprob: -3.7587833404541016
    7. 'u' → logprob: -4.008783340454102
    8. 'cho' → logprob: -4.008783340454102
    9. 'place' → logprob: -4.258783340454102
    10. 'range' → logprob: -4.508783340454102

Token 432: 'ève' (ID: 41151)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.629315972328186
    2. 't' → logprob: -1.004315972328186
    3. 'ève' → logprob: -3.5043158531188965
    4. 'for' → logprob: -3.7543158531188965
    5. 'lev' → logprob: -4.7543158531188965
    6. '```' → logprob: -5.2543158531188965
    7. 'ém' → logprob: -5.6293158531188965
    8. 'semble' → logprob: -6.0043158531188965
    9. ' a' → logprob: -6.1293158531188965
    10. '[a' → logprob: -6.2543158531188965

Token 433: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5915364027023315
    2. 'a' → logprob: -1.7165364027023315
    3. '=' → logprob: -2.091536521911621
    4. '   ' → logprob: -2.841536521911621
    5. 'pivot' → logprob: -3.341536521911621
    6. ' a' → logprob: -3.716536521911621
    7. ' pivot' → logprob: -4.591536521911621
    8. '=a' → logprob: -4.841536521911621
    9. '=p' → logprob: -6.716536521911621
    10. 'p' → logprob: -6.841536521911621

Token 434: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029787981882691383
    2. ' a' → logprob: -3.529788017272949
    3. ' la' → logprob: -10.65478801727295
    4. ' the' → logprob: -12.40478801727295
    5. 'la' → logprob: -12.65478801727295
    6. ' ' → logprob: -12.77978801727295
    7. '	a' → logprob: -13.77978801727295
    8. 'the' → logprob: -14.52978801727295
    9. 'l' → logprob: -15.27978801727295
    10. '```' → logprob: -15.40478801727295

Token 435: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011115494184195995
    2. ' a' → logprob: -4.511115550994873
    3. '1' → logprob: -11.136115074157715
    4. ' ' → logprob: -11.386115074157715
    5. ' list' → logprob: -11.386115074157715
    6. '[' → logprob: -12.261115074157715
    7. '   ' → logprob: -12.761115074157715
    8. ')' → logprob: -13.136115074157715
    9. ' range' → logprob: -13.386115074157715
    10. '```' → logprob: -13.386115074157715

Token 436: ' originale' (ID: 90997)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1015547439455986
    2. '[' → logprob: -2.6015546321868896
    3. '=' → logprob: -4.351554870605469
    4. 'a' → logprob: -5.351554870605469
    5. ' a' → logprob: -6.351554870605469
    6. '=a' → logprob: -6.851554870605469
    7. '(a' → logprob: -7.226554870605469
    8. '1' → logprob: -8.101554870605469
    9. '   ' → logprob: -8.476554870605469
    10. ',' → logprob: -8.476554870605469

Token 437: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45646312832832336
    2. 'a' → logprob: -1.331463098526001
    3. '[' → logprob: -2.831463098526001
    4. '
' → logprob: -3.706463098526001
    5. '   ' → logprob: -5.33146333694458
    6. '=' → logprob: -5.33146333694458
    7. '=a' → logprob: -5.95646333694458
    8. '    
' → logprob: -6.83146333694458
    9. ' a' → logprob: -7.08146333694458
    10. 'pivot' → logprob: -7.20646333694458

Token 438: '   ' (ID: 271)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.4749947488307953
    2. 'a' → logprob: -1.3499947786331177
    3. ' pivot' → logprob: -2.349994659423828
    4. ' a' → logprob: -4.349994659423828
    5. '[' → logprob: -5.224994659423828
    6. '   ' → logprob: -7.099994659423828
    7. ' =' → logprob: -7.224994659423828
    8. '
' → logprob: -7.224994659423828
    9. 'p' → logprob: -7.974994659423828
    10. '[a' → logprob: -7.974994659423828

Token 439: ' center' (ID: 6170)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37527692317962646
    2. ' a' → logprob: -1.3752769231796265
    3. 'pivot' → logprob: -3.750277042388916
    4. ' pivot' → logprob: -3.875277042388916
    5. ' =' → logprob: -4.625277042388916
    6. '[' → logprob: -6.250277042388916
    7. ' [' → logprob: -6.625277042388916
    8. '[a' → logprob: -7.500277042388916
    9. ' 
' → logprob: -8.125276565551758
    10. ' piv' → logprob: -8.125276565551758

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07004747539758682
    2. '=' → logprob: -2.695047378540039
    3. '=[]' → logprob: -9.820047378540039
    4. '=a' → logprob: -10.570047378540039
    5. ',' → logprob: -11.195047378540039
    6. '=[' → logprob: -12.070047378540039
    7. ' =[' → logprob: -12.820047378540039
    8. '=[]
' → logprob: -12.945047378540039
    9. 'a' → logprob: -12.945047378540039
    10. ' ' → logprob: -14.320047378540039

Token 441: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06432425230741501
    2. ' a' → logprob: -3.564324140548706
    3. '[a' → logprob: -3.564324140548706
    4. ' [' → logprob: -5.564324378967285
    5. '[' → logprob: -6.314324378967285
    6. '[p' → logprob: -11.814324378967285
    7. ' ' → logprob: -12.814324378967285
    8. '	a' → logprob: -12.814324378967285
    9. '   ' → logprob: -13.064324378967285
    10. '[]' → logprob: -13.439324378967285

Token 442: '.pop' (ID: 15746)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001936485292389989
    2. '.pop' → logprob: -6.251936435699463
    3. 'pop' → logprob: -12.501936912536621
    4. '[:' → logprob: -12.501936912536621
    5. '1' → logprob: -15.751936912536621
    6. '[
' → logprob: -16.376935958862305
    7. '0' → logprob: -16.501935958862305
    8. '=' → logprob: -16.876935958862305
    9. '#' → logprob: -17.251935958862305
    10. '[len' → logprob: -17.751935958862305

Token 443: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5094070477061905e-05
    2. '0' → logprob: -11.125015258789062
    3. '()' → logprob: -15.625015258789062
    4. 'a' → logprob: -16.125015258789062
    5. '(
' → logprob: -16.750015258789062
    6. '[' → logprob: -16.875015258789062
    7. 's' → logprob: -19.500015258789062
    8. ' (' → logprob: -20.125015258789062
    9. '1' → logprob: -21.375015258789062
    10. 'b' → logprob: -21.500015258789062

Token 444: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001848254178185016
    2. '(' → logprob: -8.625185012817383
    3. ' ' → logprob: -12.375185012817383
    4. '[' → logprob: -15.000185012817383
    5. ')' → logprob: -15.125185012817383
    6. 'a' → logprob: -16.250185012817383
    7. '۰' → logprob: -16.687685012817383
    8. 'O' → logprob: -17.500185012817383
    9. 's' → logprob: -17.500185012817383
    10. '   ' → logprob: -17.750185012817383

Token 445: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012310652527958155
    2. ')
' → logprob: -6.7512311935424805
    3. '())' → logprob: -10.12623119354248
    4. '()' → logprob: -11.25123119354248
    5. ' )' → logprob: -12.50123119354248
    6. '))' → logprob: -13.87623119354248
    7. ')
' → logprob: -14.00123119354248
    8. ')

' → logprob: -14.12623119354248
    9. ')`' → logprob: -15.25123119354248
    10. '())
' → logprob: -15.37623119354248

Token 446: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.002223649062216282
    2. ' right' → logprob: -6.502223491668701
    3. '<|end|>' → logprob: -8.25222396850586
    4. '	right' → logprob: -9.25222396850586
    5. '   ' → logprob: -9.37722396850586
    6. 'left' → logprob: -9.62722396850586
    7. '>' → logprob: -9.87722396850586
    8. '[right' → logprob: -10.37722396850586
    9. '#' → logprob: -10.75222396850586
    10. 'greater' → logprob: -11.00222396850586

Token 447: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0015165306394919753
    2. 'for' → logprob: -6.876516342163086
    3. 'center' → logprob: -8.001516342163086
    4. ' right' → logprob: -10.001516342163086
    5. 'pivot' → logprob: -10.376516342163086
    6. 'left' → logprob: -11.001516342163086
    7. 'greater' → logprob: -11.126516342163086
    8. 'while' → logprob: -11.376516342163086
    9. 'equal' → logprob: -11.501516342163086
    10. '#' (adapté à ' #') → logprob: -11.876516342163086

Token 448: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014778832904994488
    2. 'right' → logprob: -4.2647786140441895
    3. 'while' → logprob: -8.514779090881348
    4. 'center' → logprob: -8.639779090881348
    5. 'left' → logprob: -9.014779090881348
    6. ' for' → logprob: -9.389779090881348
    7. 'equal' → logprob: -11.764779090881348
    8. 'pivot' → logprob: -12.014779090881348
    9. 'For' → logprob: -12.514779090881348
    10. 'greater' → logprob: -12.639779090881348

Token 449: 'ée' (ID: 2894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013945935294032097
    2. 'ont' → logprob: -4.513946056365967
    3. ' for' → logprob: -6.388946056365967
    4. 'ent' → logprob: -7.638946056365967
    5. 'enter' → logprob: -8.763945579528809
    6. 'of' → logprob: -9.263945579528809
    7. '#' → logprob: -9.763945579528809
    8. 'ter' → logprob: -9.763945579528809
    9. 'a' → logprob: -10.138945579528809
    10. 'éer' → logprob: -10.263945579528809

Token 450: ' une' (ID: 2463)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4126317799091339
    2. 'une' → logprob: -2.0376317501068115
    3. 'a' → logprob: -2.2876317501068115
    4. ' une' → logprob: -3.1626317501068115
    5. '[]' → logprob: -3.6626317501068115
    6. ' right' → logprob: -4.912631988525391
    7. '=[]' → logprob: -4.912631988525391
    8. '[right' → logprob: -4.912631988525391
    9. 'un' → logprob: -6.037631988525391
    10. 'de' → logprob: -6.412631988525391

Token 451: ' autre' (ID: 20278)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.18382878601551056
    2. 'for' → logprob: -1.8088288307189941
    3. 'list' → logprob: -5.808828830718994
    4. '[right' → logprob: -7.558828830718994
    5. ' for' → logprob: -8.558828353881836
    6. 'center' → logprob: -9.058828353881836
    7. ' right' → logprob: -9.558828353881836
    8. 'liste' → logprob: -9.683828353881836
    9. '...' → logprob: -10.558828353881836
    10. '[' → logprob: -10.683828353881836

Token 452: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4799514412879944
    2. 'right' → logprob: -1.4799513816833496
    3. '=[]' → logprob: -2.7299513816833496
    4. 'liste' → logprob: -2.7299513816833496
    5. '[]' → logprob: -3.9799513816833496
    6. ' liste' → logprob: -7.10495138168335
    7. '=' → logprob: -7.72995138168335
    8. '=[]
' → logprob: -7.72995138168335
    9. '[' → logprob: -7.85495138168335
    10. ' list' → logprob: -8.354951858520508

Token 453: ' vide' (ID: 21835)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9564831852912903
    2. '=[]' → logprob: -1.0814831256866455
    3. 'right' → logprob: -1.8314831256866455
    4. ' =' → logprob: -2.5814831256866455
    5. '[]' → logprob: -4.081483364105225
    6. '[right' → logprob: -4.331483364105225
    7. ' right' → logprob: -5.706483364105225
    8. '[' → logprob: -6.331483364105225
    9. '=[]
' → logprob: -6.956483364105225
    10. ',' → logprob: -7.206483364105225

Token 454: ' pour' (ID: 1930)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.29538777470588684
    2. '[right' → logprob: -2.6703877449035645
    3. ' right' → logprob: -3.4203877449035645
    4. '   ' → logprob: -3.4203877449035645
    5. ',' → logprob: -4.0453877449035645
    6. '=' → logprob: -4.1703877449035645
    7. '[]' → logprob: -4.5453877449035645
    8. '(right' → logprob: -4.5453877449035645
    9. ' called' → logprob: -4.7953877449035645
    10. '()' → logprob: -4.7953877449035645

Token 455: ' stock' (ID: 6546)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.018726324662566185
    2. 'les' → logprob: -4.518726348876953
    3. ' right' → logprob: -5.018726348876953
    4. ' les' → logprob: -7.393726348876953
    5. ' ceux' → logprob: -9.393726348876953
    6. '	right' → logprob: -9.768726348876953
    7. 'element' → logprob: -10.268726348876953
    8. 'élé' → logprob: -10.393726348876953
    9. 'le' → logprob: -10.518726348876953
    10. 'l' → logprob: -10.768726348876953

Token 456: 'er' (ID: 259)
  Prédit: 'urer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urer' → logprob: -0.5277948975563049
    2. 'érer' → logprob: -1.2777948379516602
    3. 'er' → logprob: -2.27779483795166
    4. 'uler' → logprob: -3.90279483795166
    5. 'erer' → logprob: -6.27779483795166
    6. 'arer' → logprob: -6.27779483795166
    7. 'rer' → logprob: -6.52779483795166
    8. '[]' → logprob: -7.15279483795166
    9. 'orer' → logprob: -7.40279483795166
    10. 'uer' → logprob: -7.90279483795166

Token 457: ' les' (ID: 1341)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4861941933631897
    2. '[right' → logprob: -1.611194133758545
    3. 'les' → logprob: -2.111194133758545
    4. '[' → logprob: -3.736194133758545
    5. '[i' → logprob: -3.986194133758545
    6. '[x' → logprob: -4.986194133758545
    7. 'elements' → logprob: -5.861194133758545
    8. '[element' → logprob: -6.361194133758545
    9. ' les' → logprob: -6.736194133758545
    10. '[item' → logprob: -6.736194133758545

Token 458: ' éléments' (ID: 57375)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02655351161956787
    2. ' right' → logprob: -4.151553630828857
    3. '[' → logprob: -5.401553630828857
    4. '[right' → logprob: -5.526553630828857
    5. ' elements' → logprob: -6.776553630828857
    6. 'elements' → logprob: -7.526553630828857
    7. 'greater' → logprob: -9.1515531539917
    8. '	right' → logprob: -9.9015531539917
    9. '[i' → logprob: -10.1515531539917
    10. ' [' → logprob: -11.1515531539917

Token 459: ' strict' (ID: 12035)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3407129943370819
    2. '[' → logprob: -1.7157130241394043
    3. '[right' → logprob: -3.0907130241394043
    4. ' right' → logprob: -3.2157130241394043
    5. 'greater' → logprob: -4.340713024139404
    6. ' [' → logprob: -5.840713024139404
    7. '	right' → logprob: -6.090713024139404
    8. ' greater' → logprob: -6.715713024139404
    9. ' ' → logprob: -7.090713024139404
    10. '   ' → logprob: -7.840713024139404

Token 460: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.041513726115226746
    2. 'ly' → logprob: -3.291513681411743
    3. 'ment' → logprob: -6.666513919830322
    4. 'ément' → logprob: -7.041513919830322
    5. '[' → logprob: -8.166513442993164
    6. 'ements' → logprob: -8.416513442993164
    7. 's' → logprob: -8.916513442993164
    8. 'urement' → logprob: -9.166513442993164
    9. 'uments' → logprob: -9.291513442993164
    10. 'emment' → logprob: -9.416513442993164

Token 461: ' sup' (ID: 1982)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.07651367783546448
    2. 'sup' → logprob: -3.2015137672424316
    3. 'plus' → logprob: -4.576513767242432
    4. 'moins' → logprob: -4.826513767242432
    5. 'inf' → logprob: -5.201513767242432
    6. 'less' → logprob: -5.201513767242432
    7. ' greater' → logprob: -6.576513767242432
    8. 'larg' → logprob: -6.951513767242432
    9. 'super' → logprob: -7.951513767242432
    10. 'left' → logprob: -8.576513290405273

Token 462: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.0002067588793579489
    2. 'érieur' → logprob: -9.25020694732666
    3. 'é' → logprob: -9.62520694732666
    4. '[' → logprob: -11.25020694732666
    5. 'er' → logprob: -11.50020694732666
    6. 'ieurs' → logprob: -11.50020694732666
    7. 'r' → logprob: -12.87520694732666
    8. 'érieures' → logprob: -13.50020694732666
    9. 'eurs' → logprob: -13.75020694732666
    10. 'éri' → logprob: -13.75020694732666

Token 463: ' au' (ID: 2791)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3638858199119568
    2. '=' → logprob: -1.8638858795166016
    3. '   ' → logprob: -2.6138858795166016
    4. 'a' → logprob: -4.113885879516602
    5. ' =' → logprob: -4.238885879516602
    6. 'à' → logprob: -4.488885879516602
    7. '=[]' → logprob: -4.738885879516602
    8. ' right' → logprob: -5.238885879516602
    9. '[]' → logprob: -5.488885879516602
    10. '[right' → logprob: -5.738885879516602

Token 464: ' pivot' (ID: 44506)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.6808464527130127
    2. 'pivot' → logprob: -1.3058464527130127
    3. 'a' → logprob: -1.8058464527130127
    4. 'left' → logprob: -3.6808464527130127
    5. ' center' → logprob: -3.9308464527130127
    6. ' pivot' → logprob: -5.180846214294434
    7. ' a' → logprob: -5.805846214294434
    8. '[' → logprob: -6.555846214294434
    9. 'right' → logprob: -7.305846214294434
    10. '[]' → logprob: -7.805846214294434

Token 465: '.' (ID: 13)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.005039490759372711
    2. ' right' → logprob: -5.880039691925049
    3. '   ' → logprob: -6.630039691925049
    4. '>' → logprob: -7.630039691925049
    5. '	right' → logprob: -8.88003921508789
    6. ']' → logprob: -10.00503921508789
    7. '
' → logprob: -10.00503921508789
    8. '=' → logprob: -10.13003921508789
    9. ',' → logprob: -10.38003921508789
    10. ')' → logprob: -10.50503921508789

Token 466: ' Celle' (ID: 156172)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0002619318547658622
    2. ' right' → logprob: -8.250262260437012
    3. '>' → logprob: -14.875262260437012
    4. '	right' → logprob: -15.750262260437012
    5. '[right' → logprob: -16.750261306762695
    6. 'greater' → logprob: -17.000261306762695
    7. '
' → logprob: -18.000261306762695
    8. 'Right' → logprob: -18.875261306762695
    9. '```' → logprob: -19.125261306762695
    10. 'strict' → logprob: -19.250261306762695

Token 467: '-ci' (ID: 27301)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3449403643608093
    2. ' =' → logprob: -2.344940423965454
    3. 'right' → logprob: -2.469940423965454
    4. '=[]' → logprob: -2.719940423965454
    5. '   ' → logprob: -3.844940423965454
    6. '>' → logprob: -4.969940185546875
    7. '[right' → logprob: -6.094940185546875
    8. 's' → logprob: -6.469940185546875
    9. 'a' → logprob: -6.719940185546875
    10. 'strict' → logprob: -6.844940185546875

Token 468: ' s' (ID: 265)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07909511029720306
    2. ' =' → logprob: -2.5790951251983643
    3. '=[]' → logprob: -9.329094886779785
    4. 'right' → logprob: -9.704094886779785
    5. 's' → logprob: -10.079094886779785
    6. '>' → logprob: -13.704094886779785
    7. '=s' → logprob: -13.829094886779785
    8. 'a' → logprob: -13.954094886779785
    9. ' right' → logprob: -14.079094886779785
    10. '...' → logprob: -14.079094886779785

Token 469: ''appelle' (ID: 178903)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.3998814523220062
    2. ''appelle' → logprob: -1.7748814821243286
    3. ''app' → logprob: -1.8998814821243286
    4. '=' → logprob: -5.024881362915039
    5. ''appel' → logprob: -6.649881362915039
    6. '’app' → logprob: -6.899881362915039
    7. 'appe' → logprob: -7.899881362915039
    8. '='' → logprob: -8.524881362915039
    9. 'appel' → logprob: -8.649881362915039
    10. '```' → logprob: -8.774881362915039

Token 470: ' '' (ID: 461)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.005952856503427029
    2. ' right' → logprob: -5.130952835083008
    3. '"' → logprob: -11.755952835083008
    4. '	right' → logprob: -12.380952835083008
    5. '[right' → logprob: -12.630952835083008
    6. ' ' → logprob: -13.130952835083008
    7. ''' → logprob: -13.505952835083008
    8. '   ' → logprob: -13.880952835083008
    9. '[]' → logprob: -13.880952835083008
    10. '>' → logprob: -13.880952835083008

Token 471: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -4.961759259458631e-06
    2. ' right' → logprob: -12.250004768371582
    3. '	right' → logprob: -16.7500057220459
    4. '`' → logprob: -17.0000057220459
    5. '```' → logprob: -17.2500057220459
    6. 'rig' → logprob: -17.7500057220459
    7. ''' → logprob: -17.8750057220459
    8. '[right' → logprob: -18.1250057220459
    9. 'left' → logprob: -18.2500057220459
    10. '
' → logprob: -18.6250057220459

Token 472: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004366032779216766
    2. ' =' → logprob: -5.879365921020508
    3. '')' → logprob: -7.754365921020508
    4. '']' → logprob: -8.004365921020508
    5. '=' → logprob: -8.379365921020508
    6. '=[]' → logprob: -8.629365921020508
    7. '[]' → logprob: -9.129365921020508
    8. '   ' → logprob: -9.754365921020508
    9. 'right' → logprob: -9.754365921020508
    10. ''
' → logprob: -10.129365921020508

Token 473: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0008615575497969985
    2. ' right' → logprob: -7.500861644744873
    3. '[]' → logprob: -8.250861167907715
    4. '   ' → logprob: -11.125861167907715
    5. '	right' → logprob: -11.500861167907715
    6. '[right' → logprob: -11.625861167907715
    7. '[' → logprob: -12.000861167907715
    8. '[]
' → logprob: -12.375861167907715
    9. '=[]' → logprob: -13.875861167907715
    10. ' []' → logprob: -14.875861167907715

Token 474: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -5.061676347395405e-05
    2. ' right' → logprob: -10.00005054473877
    3. '[]' → logprob: -13.12505054473877
    4. '[right' → logprob: -13.12505054473877
    5. '	right' → logprob: -14.62505054473877
    6. '[' → logprob: -14.75005054473877
    7. '[]
' → logprob: -16.500051498413086
    8. 'left' → logprob: -17.125051498413086
    9. '   ' → logprob: -17.500051498413086
    10. '.right' → logprob: -17.625051498413086

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10029464960098267
    2. ' =' → logprob: -2.350294589996338
    3. '=[]' → logprob: -9.350295066833496
    4. '[]' → logprob: -14.475295066833496
    5. '=[]
' → logprob: -15.100295066833496
    6. ' ' → logprob: -15.975295066833496
    7. '   ' → logprob: -15.975295066833496
    8. ']' → logprob: -17.60029411315918
    9. '  ' → logprob: -17.85029411315918
    10. '=
' → logprob: -18.10029411315918

Token 476: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.811348480870947e-05
    2. '[]
' → logprob: -10.12504768371582
    3. ' []' → logprob: -12.37504768371582
    4. '[' → logprob: -12.62504768371582
    5. '[]}' → logprob: -15.62504768371582
    6. '[]

' → logprob: -15.75004768371582
    7. '[]>' → logprob: -16.00004768371582
    8. '=[]' → logprob: -16.75004768371582
    9. '[])' → logprob: -18.25004768371582
    10. '[a' → logprob: -18.37504768371582

Token 477: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5266281962394714
    2. '   ' → logprob: -1.5266282558441162
    3. ' for' → logprob: -1.6516282558441162
    4. '	for' → logprob: -7.901628017425537
    5. '<|end|>' → logprob: -11.276628494262695
    6. '  ' → logprob: -12.401628494262695
    7. '    
' → logprob: -12.901628494262695
    8. ' ' → logprob: -12.901628494262695
    9. '```' → logprob: -13.401628494262695
    10. 'while' → logprob: -13.526628494262695

Token 478: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019601555541157722
    2. ' for' → logprob: -6.251960277557373
    3. '   ' → logprob: -11.001959800720215
    4. '	for' → logprob: -11.501959800720215
    5. '<|end|>' → logprob: -12.501959800720215
    6. ')' → logprob: -15.501959800720215
    7. 'while' → logprob: -15.501959800720215
    8. '#' (adapté à ' #') → logprob: -16.25196075439453
    9. ' ' → logprob: -16.37696075439453
    10. '[' → logprob: -16.62696075439453

Token 479: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3856492842023727e-06
    2. ' for' → logprob: -13.875000953674316
    3. 'while' → logprob: -14.750000953674316
    4. '	for' → logprob: -17.375001907348633
    5. '#' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.500001907348633
    7. 'For' → logprob: -20.500001907348633
    8. 'pour' → logprob: -20.750001907348633
    9. '```' → logprob: -22.000001907348633
    10. 'i' → logprob: -22.500001907348633

Token 480: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.5940715670585632
    2. 'our' → logprob: -0.9690715670585632
    3. 'ourt' → logprob: -2.719071626663208
    4. 'ourse' → logprob: -6.719071388244629
    5. 'oure' → logprob: -7.094071388244629
    6. 'or' → logprob: -8.594071388244629
    7. 'ou' → logprob: -9.719071388244629
    8. 'urse' → logprob: -9.844071388244629
    9. '#' → logprob: -9.969071388244629
    10. 'ourses' → logprob: -9.969071388244629

Token 481: ' chaque' (ID: 21194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10889174044132233
    2. 'x' → logprob: -2.733891725540161
    3. 'element' → logprob: -4.48389196395874
    4. 'i' → logprob: -5.23389196395874
    5. 'elem' → logprob: -5.35889196395874
    6. ' a' → logprob: -5.35889196395874
    7. 'e' → logprob: -5.60889196395874
    8. 'el' → logprob: -5.85889196395874
    9. 'for' → logprob: -6.73389196395874
    10. 'ele' → logprob: -6.85889196395874

Token 482: ' élément' (ID: 99627)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03119947947561741
    2. 'i' → logprob: -4.5311994552612305
    3. 'element' → logprob: -4.9061994552612305
    4. ' x' → logprob: -5.1561994552612305
    5. 'item' → logprob: -6.0311994552612305
    6. 'e' → logprob: -6.5311994552612305
    7. 'elem' → logprob: -6.7811994552612305
    8. 'el' → logprob: -7.5311994552612305
    9. 'v' → logprob: -7.9061994552612305
    10. ' i' → logprob: -8.28119945526123

Token 483: ' restant' (ID: 172358)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.41076600551605225
    2. 'in' → logprob: -1.6607660055160522
    3. ' for' → logprob: -2.410766124725342
    4. 'for' → logprob: -4.035766124725342
    5. ' de' → logprob: -4.285766124725342
    6. ' i' → logprob: -4.660766124725342
    7. 'i' → logprob: -5.660766124725342
    8. 'x' → logprob: -5.660766124725342
    9. ' x' → logprob: -6.035766124725342
    10. ' element' → logprob: -6.285766124725342

Token 484: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20695628225803375
    2. 'in' → logprob: -1.8319562673568726
    3. ' for' → logprob: -4.206956386566162
    4. ' de' → logprob: -5.331956386566162
    5. 'for' → logprob: -5.706956386566162
    6. 'de' → logprob: -6.706956386566162
    7. ' i' → logprob: -6.956956386566162
    8. 'i' → logprob: -7.456956386566162
    9. ' of' → logprob: -8.331955909729004
    10. 'x' → logprob: -8.706955909729004

Token 485: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002613358374219388
    2. ' a' → logprob: -8.250261306762695
    3. '	a' → logprob: -17.375261306762695
    4. ' ' → logprob: -17.625261306762695
    5. '   ' → logprob: -18.750261306762695
    6. 'а' → logprob: -19.500261306762695
    7. '[a' → logprob: -20.000261306762695
    8. '(a' → logprob: -20.125261306762695
    9. 'A' → logprob: -20.250261306762695
    10. '  ' → logprob: -20.375261306762695

Token 486: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.941850526549388e-06
    2. ' a' → logprob: -11.750007629394531
    3. 'for' → logprob: -19.75000762939453
    4. '	a' → logprob: -19.87500762939453
    5. 'list' → logprob: -20.00000762939453
    6. 'а' → logprob: -20.12500762939453
    7. '[a' → logprob: -21.62500762939453
    8. ' ' → logprob: -21.75000762939453
    9. '`' → logprob: -21.87500762939453
    10. 'A' → logprob: -22.00000762939453

Token 487: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0026143016293644905
    2. 'for' → logprob: -6.627614498138428
    3. ' a' → logprob: -6.752614498138428
    4. ' for' → logprob: -9.12761402130127
    5. 'in' → logprob: -12.25261402130127
    6. ' in' → logprob: -12.37761402130127
    7. '   ' → logprob: -13.50261402130127
    8. ' of' → logprob: -15.75261402130127
    9. '(a' → logprob: -15.87761402130127
    10. ':' → logprob: -16.627614974975586

Token 488: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0017328945687040687
    2. ' a' → logprob: -6.75173282623291
    3. 'for' → logprob: -7.62673282623291
    4. ' for' → logprob: -9.62673282623291
    5. ' in' → logprob: -11.87673282623291
    6. 'in' → logprob: -13.00173282623291
    7. '   ' → logprob: -16.376733779907227
    8. '(a' → logprob: -17.126733779907227
    9. ' ' → logprob: -17.376733779907227
    10. ' of' → logprob: -17.626733779907227

Token 489: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16023072600364685
    2. ' for' → logprob: -1.9102307558059692
    3. '   ' → logprob: -12.53523063659668
    4. '	for' → logprob: -12.91023063659668
    5. 'i' → logprob: -15.66023063659668
    6. 'a' → logprob: -16.66023063659668
    7. ' ' → logprob: -16.78523063659668
    8. '```' → logprob: -17.16023063659668
    9. ' i' → logprob: -17.28523063659668
    10. 'x' → logprob: -17.41023063659668

Token 490: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6400603652000427
    2. 'a' → logprob: -1.0150604248046875
    3. 'i' → logprob: -2.7650604248046875
    4. 'item' → logprob: -4.3900604248046875
    5. 'element' → logprob: -4.8900604248046875
    6. 'elem' → logprob: -4.8900604248046875
    7. 'el' → logprob: -5.1400604248046875
    8. 'value' → logprob: -5.7650604248046875
    9. 'e' → logprob: -5.8900604248046875
    10. ' x' → logprob: -5.8900604248046875

Token 491: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033661141991615295
    2. 'in' → logprob: -3.408661127090454
    3. ' ' → logprob: -11.408660888671875
    4. '	in' → logprob: -14.033660888671875
    5. '   ' → logprob: -14.158660888671875
    6. '  ' → logprob: -14.283660888671875
    7. 'n' → logprob: -14.283660888671875
    8. 'a' → logprob: -14.908660888671875
    9. ',' → logprob: -15.533660888671875
    10. ' i' → logprob: -15.658660888671875

Token 492: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002613358374219388
    2. ' a' → logprob: -8.250261306762695
    3. 'range' → logprob: -17.250261306762695
    4. '	a' → logprob: -17.500261306762695
    5. ' ' → logprob: -18.125261306762695
    6. '   ' → logprob: -18.250261306762695
    7. '(a' → logprob: -18.375261306762695
    8. '[a' → logprob: -18.625261306762695
    9. 'list' → logprob: -19.750261306762695
    10. '  ' → logprob: -20.000261306762695

Token 493: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14270459115505219
    2. ':
' → logprob: -2.017704486846924
    3. ' :' → logprob: -11.642704963684082
    4. '   ' → logprob: -11.892704963684082
    5. ' :
' → logprob: -12.017704963684082
    6. '):
' → logprob: -12.642704963684082
    7. ':
' → logprob: -13.392704963684082
    8. ',' → logprob: -13.767704963684082
    9. ':

' → logprob: -14.642704963684082
    10. ' if' → logprob: -14.892704963684082

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25416529178619385
    2. ' if' → logprob: -1.6291652917861938
    3. 'if' → logprob: -3.6291651725769043
    4. '   ' → logprob: -6.754165172576904
    5. '<|end|>' → logprob: -8.879165649414062
    6. '    ' → logprob: -9.004165649414062
    7. ' ' → logprob: -10.004165649414062
    8. ',' → logprob: -10.004165649414062
    9. '    ' → logprob: -10.129165649414062
    10. '        
' → logprob: -10.129165649414062

Token 495: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10046998411417007
    2. 'if' → logprob: -2.3504700660705566
    3. '   ' → logprob: -9.100469589233398
    4. ' left' → logprob: -9.225469589233398
    5. 'left' → logprob: -9.975469589233398
    6. '       ' → logprob: -12.850469589233398
    7. '    ' → logprob: -13.225469589233398
    8. '	if' → logprob: -13.725469589233398
    9. ' right' → logprob: -14.850469589233398
    10. 'right' → logprob: -14.850469589233398

Token 496: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006725788116455078
    2. ' if' → logprob: -5.006725788116455
    3. '   ' → logprob: -11.506725311279297
    4. '       ' → logprob: -15.756725311279297
    5. '	if' → logprob: -15.881725311279297
    6. '    ' → logprob: -16.506725311279297
    7. 'left' → logprob: -19.381725311279297
    8. '           ' → logprob: -19.631725311279297
    9. ' ' → logprob: -19.756725311279297
    10. '  ' → logprob: -19.881725311279297

Token 497: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868717551231384
    2. ' i' → logprob: -1.1368718147277832
    3. '	i' → logprob: -14.636871337890625
    4. ' ' → logprob: -15.761871337890625
    5. ' ' → logprob: -16.261871337890625
    6. '   ' → logprob: -17.011871337890625
    7. '(i' → logprob: -17.261871337890625
    8. '_i' → logprob: -18.636871337890625
    9. '[i' → logprob: -18.636871337890625
    10. ',i' → logprob: -19.011871337890625

Token 498: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4741884469985962
    2. ' i' → logprob: -0.9741884469985962
    3. 'e' → logprob: -9.724188804626465
    4. ' ' → logprob: -10.849188804626465
    5. '[i' → logprob: -11.974188804626465
    6. '	i' → logprob: -12.224188804626465
    7. 't' → logprob: -12.849188804626465
    8. '_i' → logprob: -12.849188804626465
    9. '(i' → logprob: -13.099188804626465
    10. 'a' → logprob: -13.099188804626465

Token 499: 'élé' (ID: 15228)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002613358374219388
    2. ' i' → logprob: -8.250261306762695
    3. ' ' → logprob: -17.125261306762695
    4. '	i' → logprob: -19.375261306762695
    5. '   ' → logprob: -19.625261306762695
    6. '<|end|>' → logprob: -19.750261306762695
    7. '  ' → logprob: -20.250261306762695
    8. 'ié' → logprob: -20.875261306762695
    9. '<|end|>' → logprob: -21.000261306762695
    10. 'iñ' → logprob: -21.625261306762695

Token 500: 'ment' (ID: 508)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9009535312652588
    2. 'i' → logprob: -1.4009535312652588
    3. 'ement' → logprob: -1.5259535312652588
    4. 'ment' → logprob: -2.400953531265259
    5. '   ' → logprob: -4.15095329284668
    6. 'ément' → logprob: -4.40095329284668
    7. 'emento' → logprob: -5.90095329284668
    8. 'e' → logprob: -6.27595329284668
    9. 'ève' → logprob: -7.02595329284668
    10. 'if' → logprob: -7.40095329284668

Token 501: ' courant' (ID: 74694)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4741138517856598
    2. '<=' → logprob: -0.9741138219833374
    3. ' i' → logprob: -10.974113464355469
    4. 'i' → logprob: -11.474113464355469
    5. ' ' → logprob: -12.474113464355469
    6. '[i' → logprob: -12.849113464355469
    7. ')<=' → logprob: -14.474113464355469
    8. ' ' → logprob: -14.849113464355469
    9. '   ' → logprob: -15.224113464355469
    10. '>' → logprob: -15.224113464355469

Token 502: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03804275393486023
    2. '<=' → logprob: -3.2880427837371826
    3. ' ' → logprob: -14.288043022155762
    4. ')<=' → logprob: -15.288043022155762
    5. ' ' → logprob: -16.038042068481445
    6. '[i' → logprob: -16.663042068481445
    7. ']<=' → logprob: -16.788042068481445
    8. '   ' → logprob: -16.788042068481445
    9. ' i' → logprob: -17.163042068481445
    10. ' <' → logprob: -17.288042068481445

Token 503: ' strict' (ID: 12035)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20150350034236908
    2. '<=' → logprob: -1.7015035152435303
    3. ' i' → logprob: -10.45150375366211
    4. ' ' → logprob: -10.95150375366211
    5. '>' → logprob: -11.70150375366211
    6. ' >' → logprob: -11.70150375366211
    7. 'i' → logprob: -12.20150375366211
    8. '<' → logprob: -12.32650375366211
    9. '   ' → logprob: -12.57650375366211
    10. ' less' → logprob: -12.82650375366211

Token 504: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0019379158038645983
    2. 'ément' → logprob: -7.0019378662109375
    3. 'ly' → logprob: -8.376937866210938
    4. 'lement' → logprob: -8.626937866210938
    5. '<' → logprob: -8.751937866210938
    6. 'ment' → logprob: -8.876937866210938
    7. 'rement' → logprob: -9.751937866210938
    8. 'iquement' → logprob: -9.751937866210938
    9. 'ument' → logprob: -10.251937866210938
    10. 'urement' → logprob: -10.251937866210938

Token 505: ' supérieur' (ID: 98491)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.013045044615864754
    2. ' <=' → logprob: -4.888044834136963
    3. '>' → logprob: -5.513044834136963
    4. '<' → logprob: -6.638044834136963
    5. ' >' → logprob: -10.763045310974121
    6. ' inférieur' → logprob: -11.013045310974121
    7. '≤' → logprob: -11.513045310974121
    8. 'less' → logprob: -12.013045310974121
    9. 'inf' → logprob: -12.138045310974121
    10. 'le' → logprob: -12.138045310974121

Token 506: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.339074969291687
    2. ' to' → logprob: -2.5890750885009766
    3. '(center' → logprob: -2.5890750885009766
    4. ' center' → logprob: -3.4640750885009766
    5. '(i' → logprob: -3.5890750885009766
    6. 'à' → logprob: -3.5890750885009766
    7. ' i' → logprob: -3.9640750885009766
    8. 'right' → logprob: -5.214075088500977
    9. 'center' → logprob: -5.339075088500977
    10. ' right' → logprob: -5.464075088500977

Token 507: ' pivot' (ID: 44506)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.006729110609740019
    2. ' center' → logprob: -5.0067291259765625
    3. 'pivot' → logprob: -11.256729125976562
    4. 'centre' → logprob: -14.506729125976562
    5. 'cent' → logprob: -16.131729125976562
    6. ' pivot' → logprob: -16.131729125976562
    7. '	center' → logprob: -17.006729125976562
    8. 'central' → logprob: -17.131729125976562
    9. '<center' → logprob: -17.756729125976562
    10. ' ' → logprob: -17.756729125976562

Token 508: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13372386991977692
    2. '>' → logprob: -3.1337239742279053
    3. ':
' → logprob: -3.6337239742279053
    4. '   ' → logprob: -4.133723735809326
    5. '       ' → logprob: -4.133723735809326
    6. ' >' → logprob: -4.258723735809326
    7. ',' → logprob: -6.008723735809326
    8. ' :' → logprob: -6.508723735809326
    9. ' and' → logprob: -6.633723735809326
    10. 'right' → logprob: -7.008723735809326

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3310140073299408
    2. ' right' → logprob: -1.3310140371322632
    3. 'right' → logprob: -4.581014156341553
    4. '           ' → logprob: -5.706014156341553
    5. ' if' → logprob: -5.706014156341553
    6. '[right' → logprob: -8.206013679504395
    7. '	right' → logprob: -9.956013679504395
    8. ' ' → logprob: -10.081013679504395
    9. '   ' → logprob: -10.456013679504395
    10. '(right' → logprob: -10.456013679504395

Token 510: ' if' (ID: 538)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.020848875865340233
    2. 'right' → logprob: -4.020848751068115
    3. '       ' → logprob: -6.270848751068115
    4. '           ' → logprob: -7.645848751068115
    5. '   ' → logprob: -8.520849227905273
    6. '	right' → logprob: -9.520849227905273
    7. ' if' → logprob: -11.145849227905273
    8. ' ' → logprob: -11.895849227905273
    9. '[right' → logprob: -11.895849227905273
    10. ' ' → logprob: -12.270849227905273

Token 511: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38687190413475037
    2. ' i' → logprob: -1.1368719339370728
    3. '	i' → logprob: -15.011872291564941
    4. '   ' → logprob: -15.136872291564941
    5. ' ' → logprob: -16.386871337890625
    6. '    ' → logprob: -16.636871337890625
    7. ' ' → logprob: -16.761871337890625
    8. '  ' → logprob: -17.511871337890625
    9. '     ' → logprob: -17.636871337890625
    10. '(i' → logprob: -18.011871337890625

Token 512: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0889512449502945
    2. '>' → logprob: -2.463951349258423
    3. ' ' → logprob: -11.463951110839844
    4. ' ' → logprob: -15.088951110839844
    5. '   ' → logprob: -15.463951110839844
    6. '  ' → logprob: -15.588951110839844
    7. ' <' → logprob: -15.588951110839844
    8. '[' → logprob: -16.838951110839844
    9. ' >
' → logprob: -16.963951110839844
    10. '&gt' → logprob: -17.088951110839844

Token 513: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.10020752996206284
    2. ' center' → logprob: -2.350207567214966
    3. 'centre' → logprob: -14.975207328796387
    4. 'cent' → logprob: -15.350207328796387
    5. '	center' → logprob: -15.725207328796387
    6. 'central' → logprob: -16.350208282470703
    7. ' ' → logprob: -16.975208282470703
    8. '中心' → logprob: -17.225208282470703
    9. 'pivot' → logprob: -17.225208282470703
    10. '_center' → logprob: -17.600208282470703

Token 514: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2543887197971344
    2. ':' → logprob: -1.754388689994812
    3. '):
' → logprob: -3.0043888092041016
    4. '):' → logprob: -6.504388809204102
    5. ':right' → logprob: -9.004388809204102
    6. '   ' → logprob: -9.254388809204102
    7. 'right' → logprob: -9.254388809204102
    8. '       ' → logprob: -9.629388809204102
    9. ',' → logprob: -10.129388809204102
    10. ' :
' → logprob: -10.254388809204102

Token 515: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3446548581123352
    2. 'right' → logprob: -1.7196547985076904
    3. ' right' → logprob: -2.7196547985076904
    4. '           ' → logprob: -3.0946547985076904
    5. ':
' → logprob: -7.8446550369262695
    6. ':' → logprob: -8.71965503692627
    7. ',' → logprob: -9.09465503692627
    8. '[right' → logprob: -9.21965503692627
    9. '```' → logprob: -9.46965503692627
    10. ':right' → logprob: -9.46965503692627

Token 516: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.08349000662565231
    2. ' right' → logprob: -2.5834898948669434
    3. '       ' → logprob: -5.458489894866943
    4. '           ' → logprob: -8.208490371704102
    5. '               ' → logprob: -10.083490371704102
    6. '	right' → logprob: -11.708490371704102
    7. '[right' → logprob: -13.083490371704102
    8. '.right' → logprob: -13.208490371704102
    9. '   ' → logprob: -13.833490371704102
    10. '
' → logprob: -14.208490371704102

Token 517: ' Aj' (ID: 28294)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.001513312105089426
    2. ' right' → logprob: -6.501513481140137
    3. '           ' → logprob: -11.501513481140137
    4. '               ' → logprob: -14.751513481140137
    5. '   ' → logprob: -15.001513481140137
    6. '	right' → logprob: -16.12651252746582
    7. '       ' → logprob: -16.50151252746582
    8. '
' → logprob: -19.12651252746582
    9. '[right' → logprob: -19.62651252746582
    10. '#' → logprob: -19.62651252746582

Token 518: 'oute' (ID: 3509)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.3878779709339142
    2. 'oute' → logprob: -1.1378779411315918
    3. 'outez' → logprob: -7.137877941131592
    4. 'out' → logprob: -8.88787841796875
    5. 'uste' → logprob: -10.63787841796875
    6. 'right' → logprob: -10.76287841796875
    7. 'ust' → logprob: -11.26287841796875
    8. 'uster' → logprob: -11.38787841796875
    9. 'outes' → logprob: -12.88787841796875
    10. '#' → logprob: -13.88787841796875

Token 519: ' l' (ID: 305)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006813408341258764
    2. ' right' → logprob: -5.0068135261535645
    3. 'i' → logprob: -9.256813049316406
    4. ' i' → logprob: -13.256813049316406
    5. '	right' → logprob: -15.381813049316406
    6. '   ' → logprob: -15.756813049316406
    7. '(right' → logprob: -15.881813049316406
    8. '[right' → logprob: -16.131813049316406
    9. 'Right' → logprob: -16.631813049316406
    10. ' ' → logprob: -16.631813049316406

Token 520: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016119997948408127
    2. ''i' → logprob: -4.266119956970215
    3. ' i' → logprob: -7.016119956970215
    4. '(i' → logprob: -7.641119956970215
    5. 'e' → logprob: -8.516119956970215
    6. '[i' → logprob: -8.766119956970215
    7. ''' → logprob: -9.141119956970215
    8. 'right' → logprob: -10.391119956970215
    9. 'ui' → logprob: -11.391119956970215
    10. ''espace' → logprob: -11.891119956970215

Token 521: 'élé' (ID: 15228)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4293935000896454
    2. 'i' → logprob: -1.0543935298919678
    3. ' right' → logprob: -7.679393291473389
    4. '`' → logprob: -8.804393768310547
    5. ' i' → logprob: -10.304393768310547
    6. 'élé' → logprob: -11.304393768310547
    7. '```' → logprob: -11.804393768310547
    8. 'ight' → logprob: -12.554393768310547
    9. ''i' → logprob: -12.929393768310547
    10. 'element' → logprob: -12.929393768310547

Token 522: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -2.3557529857498594e-05
    2. 'ement' → logprob: -11.25002384185791
    3. 'ent' → logprob: -12.87502384185791
    4. 'me' → logprob: -13.25002384185791
    5. 'ments' → logprob: -13.62502384185791
    6. 'mente' → logprob: -13.75002384185791
    7. 'men' → logprob: -13.87502384185791
    8. 'ément' → logprob: -14.75002384185791
    9. 'mentation' → logprob: -14.75002384185791
    10. 'm' → logprob: -14.87502384185791

Token 523: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26069962978363037
    2. ' i' → logprob: -2.26069974899292
    3. 'à' → logprob: -2.51069974899292
    4. ' à' → logprob: -3.26069974899292
    5. ' ' → logprob: -6.13569974899292
    6. 'to' → logprob: -6.26069974899292
    7. ' to' → logprob: -7.38569974899292
    8. 'a' → logprob: -8.260699272155762
    9. 'au' → logprob: -8.510699272155762
    10. 'dans' → logprob: -9.010699272155762

Token 524: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0009118211455643177
    2. ' right' → logprob: -7.000911712646484
    3. '	right' → logprob: -15.750911712646484
    4. '[right' → logprob: -16.625911712646484
    5. '`' → logprob: -17.000911712646484
    6. 'rig' → logprob: -17.250911712646484
    7. ' ' → logprob: -18.000911712646484
    8. 'the' → logprob: -18.625911712646484
    9. 'Right' → logprob: -19.375911712646484
    10. 'left' → logprob: -19.375911712646484

Token 525: ' liste' (ID: 31719)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.001502598519437015
    2. ' right' → logprob: -6.501502513885498
    3. '[right' → logprob: -15.751502990722656
    4. ' ' → logprob: -16.376502990722656
    5. '	right' → logprob: -17.251502990722656
    6. '   ' → logprob: -18.251502990722656
    7. 'left' → logprob: -18.626502990722656
    8. 'r' → logprob: -18.751502990722656
    9. 'rightness' → logprob: -19.376502990722656
    10. '  ' → logprob: -19.501502990722656

Token 526: ' '' (ID: 461)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0003623985394369811
    2. ' right' → logprob: -8.250362396240234
    3. '(right' → logprob: -9.250362396240234
    4. '[right' → logprob: -12.875362396240234
    5. '   ' → logprob: -14.375362396240234
    6. '`' → logprob: -14.625362396240234
    7. '	right' → logprob: -14.625362396240234
    8. '(' → logprob: -15.000362396240234
    9. 'left' → logprob: -15.750362396240234
    10. '```' → logprob: -16.250362396240234

Token 527: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: 0.0
    2. ' right' → logprob: -16.75
    3. '[right' → logprob: -19.75
    4. 'left' → logprob: -20.375
    5. '`' → logprob: -21.25
    6. '	right' → logprob: -22.5
    7. ' ' → logprob: -22.875
    8. ')' → logprob: -23.0
    9. '   ' → logprob: -23.375
    10. '
' → logprob: -23.625

Token 528: ''
' (ID: 2207)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005451689939945936
    2. '.' → logprob: -8.250545501708984
    3. '           ' → logprob: -8.875545501708984
    4. '       ' → logprob: -10.000545501708984
    5. '   ' → logprob: -10.500545501708984
    6. ')' → logprob: -10.500545501708984
    7. 'append' → logprob: -10.625545501708984
    8. '               ' → logprob: -12.750545501708984
    9. 'right' → logprob: -12.750545501708984
    10. ' .' → logprob: -13.125545501708984

Token 529: '           ' (ID: 352)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08722638338804245
    2. '           ' → logprob: -3.212226390838623
    3. ' right' → logprob: -4.212226390838623
    4. 'right' → logprob: -4.462226390838623
    5. '       ' → logprob: -4.837226390838623
    6. '.right' → logprob: -5.337226390838623
    7. '[right' → logprob: -6.212226390838623
    8. '.' → logprob: -6.587226390838623
    9. '               ' → logprob: -8.212225914001465
    10. '(right' → logprob: -8.587225914001465

Token 530: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6974977254867554
    2. 'right' (adapté à ' right') → logprob: -0.6974977254867554
    3. '           ' → logprob: -5.447497844696045
    4. '               ' → logprob: -10.572497367858887
    5. '       ' → logprob: -12.697497367858887
    6. '	right' → logprob: -13.447497367858887
    7. '[right' → logprob: -13.572497367858887
    8. '.right' → logprob: -13.697497367858887
    9. ',right' → logprob: -14.697497367858887
    10. '(right' → logprob: -15.447497367858887

Token 531: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001589618914294988
    2. '.' → logprob: -8.75015926361084
    3. 'append' → logprob: -15.00015926361084
    4. ' .' → logprob: -15.62515926361084
    5. '.app' → logprob: -17.875158309936523
    6. '.add' → logprob: -18.625158309936523
    7. '           ' → logprob: -18.875158309936523
    8. ' append' → logprob: -19.000158309936523
    9. '.extend' → logprob: -19.125158309936523
    10. '   ' → logprob: -19.375158309936523

Token 532: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. 'i' → logprob: -19.75
    4. '(I' → logprob: -21.125
    5. '(ii' → logprob: -21.75
    6. ' (' → logprob: -22.75
    7. '(in' → logprob: -23.875
    8. '()' → logprob: -24.25
    9. '(
' → logprob: -24.25
    10. '[i' → logprob: -24.375

Token 533: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7744549512863159
    2. ')
' → logprob: -0.8994549512863159
    3. '       ' → logprob: -2.0244550704956055
    4. 'else' → logprob: -8.899455070495605
    5. '   ' → logprob: -11.274455070495605
    6. ' else' → logprob: -11.649455070495605
    7. ' )' → logprob: -12.024455070495605
    8. ')
' → logprob: -12.149455070495605
    9. ' )
' → logprob: -12.149455070495605
    10. '):
' → logprob: -12.524455070495605

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04537639021873474
    2. 'else' → logprob: -3.2953763008117676
    3. ' else' → logprob: -4.920376300811768
    4. ')' → logprob: -12.170376777648926
    5. '```' → logprob: -12.545376777648926
    6. '	else' → logprob: -14.170376777648926
    7. 'elif' → logprob: -14.170376777648926
    8. '   ' → logprob: -14.295376777648926
    9. '	' → logprob: -14.920376777648926
    10. '​' → logprob: -16.92037582397461

Token 535: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4197697341442108
    2. '       ' → logprob: -1.5447697639465332
    3. ' else' → logprob: -2.044769763946533
    4. '   ' → logprob: -11.294769287109375
    5. '	else' → logprob: -11.294769287109375
    6. 'elif' → logprob: -13.419769287109375
    7. ':
' → logprob: -13.794769287109375
    8. ')' → logprob: -14.044769287109375
    9. '	' → logprob: -14.419769287109375
    10. ':' → logprob: -15.044769287109375

Token 536: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30245721340179443
    2. ' left' → logprob: -2.302457332611084
    3. 'left' → logprob: -2.427457332611084
    4. '       ' → logprob: -2.927457332611084
    5. ':
' → logprob: -4.302457332611084
    6. ':' → logprob: -5.802457332611084
    7. '[left' → logprob: -6.302457332611084
    8. '(left' → logprob: -8.802456855773926
    9. ':left' → logprob: -8.802456855773926
    10. ' :
' → logprob: -9.052456855773926

Token 537: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5714882016181946
    2. 'left' → logprob: -1.0714881420135498
    3. ' left' → logprob: -2.69648814201355
    4. '           ' → logprob: -3.69648814201355
    5. '
' → logprob: -8.446488380432129
    6. '   ' → logprob: -8.821488380432129
    7. '	left' → logprob: -9.196488380432129
    8. '[left' → logprob: -10.446488380432129
    9. '	' → logprob: -11.196488380432129
    10. '#' → logprob: -11.571488380432129

Token 538: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00033796546631492674
    2. ' left' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.625337600708008
    4. '           ' → logprob: -14.250337600708008
    5. '	left' → logprob: -15.000337600708008
    6. '       ' → logprob: -15.250337600708008
    7. '
' → logprob: -16.750337600708008
    8. '[left' → logprob: -17.500337600708008
    9. '(left' → logprob: -20.375337600708008
    10. '.left' → logprob: -20.500337600708008

Token 539: ' Sinon' (ID: 154924)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0015629465924575925
    2. ' left' → logprob: -6.50156307220459
    3. '       ' → logprob: -10.12656307220459
    4. '   ' → logprob: -11.50156307220459
    5. '           ' → logprob: -11.75156307220459
    6. '	left' → logprob: -13.12656307220459
    7. '#' → logprob: -15.37656307220459
    8. '[left' → logprob: -16.001562118530273
    9. '
' → logprob: -17.376562118530273
    10. ' ' → logprob: -17.501562118530273

Token 540: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1762087196111679
    2. ' left' → logprob: -2.176208734512329
    3. 'left' → logprob: -3.051208734512329
    4. '       ' → logprob: -7.80120849609375
    5. '   ' → logprob: -9.17620849609375
    6. '	left' → logprob: -9.42620849609375
    7. '[left' → logprob: -9.80120849609375
    8. ':left' → logprob: -10.42620849609375
    9. '		' → logprob: -10.80120849609375
    10. '(left' → logprob: -10.80120849609375

Token 541: 'c' (ID: 66)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1438026875257492
    2. '           ' → logprob: -2.6438026428222656
    3. ' left' → logprob: -2.7688026428222656
    4. '	left' → logprob: -9.893802642822266
    5. '   ' → logprob: -10.268802642822266
    6. ':left' → logprob: -11.893802642822266
    7. '[left' → logprob: -11.893802642822266
    8. '       ' → logprob: -12.518802642822266
    9. '#' → logprob: -13.143802642822266
    10. '(left' → logprob: -13.268802642822266

Token 542: ''est' (ID: 6616)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17001155018806458
    2. ':' → logprob: -1.9200115203857422
    3. '       ' → logprob: -5.795011520385742
    4. '   ' → logprob: -5.920011520385742
    5. ' :' → logprob: -6.920011520385742
    6. ':
' → logprob: -7.170011520385742
    7. ')' → logprob: -7.795011520385742
    8. '          ' → logprob: -8.045011520385742
    9. ',' → logprob: -8.295011520385742
    10. ' #' → logprob: -8.920011520385742

Token 543: '-à' (ID: 56297)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6255513429641724
    2. '           ' → logprob: -1.2505513429641724
    3. 'à' → logprob: -2.625551223754883
    4. '   ' → logprob: -3.250551223754883
    5. '-à' → logprob: -3.375551223754883
    6. '#' → logprob: -5.250551223754883
    7. 'i' → logprob: -5.250551223754883
    8. '       ' → logprob: -5.625551223754883
    9. ' left' → logprob: -5.625551223754883
    10. 'que' → logprob: -5.625551223754883

Token 544: '-dire' (ID: 76064)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.36929506063461304
    2. '-à' → logprob: -1.9942951202392578
    3. 'dire' → logprob: -2.619295120239258
    4. '   ' → logprob: -3.494295120239258
    5. 'to' → logprob: -4.494295120239258
    6. 'left' → logprob: -4.744295120239258
    7. 'tout' → logprob: -4.869295120239258
    8. 'else' → logprob: -4.994295120239258
    9. '#' → logprob: -5.494295120239258
    10. 'for' → logprob: -5.619295120239258

Token 545: ' inférieur' (ID: 191498)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05644609034061432
    2. ' left' → logprob: -3.556446075439453
    3. 'left' → logprob: -3.681446075439453
    4. '   ' → logprob: -7.306446075439453
    5. '#' → logprob: -9.181446075439453
    6. ':' → logprob: -9.931446075439453
    7. ',' → logprob: -10.306446075439453
    8. '            ' → logprob: -10.306446075439453
    9. ' #' → logprob: -10.306446075439453
    10. '       ' → logprob: -10.431446075439453

Token 546: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.3245972990989685
    2. ' ou' → logprob: -1.3245973587036133
    3. '           ' → logprob: -4.699597358703613
    4. '          ' → logprob: -7.699597358703613
    5. '       ' → logprob: -7.949597358703613
    6. '         ' → logprob: -8.074597358703613
    7. 'au' → logprob: -8.324597358703613
    8. ')' → logprob: -8.699597358703613
    9. ',' → logprob: -8.949597358703613
    10. 'or' → logprob: -9.574597358703613

Token 547: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.0009687491692602634
    2. 'ég' → logprob: -7.250968933105469
    3. ' égal' → logprob: -9.000968933105469
    4. '=' → logprob: -9.875968933105469
    5. 'é' → logprob: -10.500968933105469
    6. 'égalité' → logprob: -10.750968933105469
    7. 'egal' → logprob: -11.250968933105469
    8. 'equal' → logprob: -12.125968933105469
    9. 'à' → logprob: -12.250968933105469
    10. 'équ' → logprob: -12.625968933105469

Token 548: '),' (ID: 936)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.23603565990924835
    2. ' à' → logprob: -2.1110355854034424
    3. 'au' → logprob: -2.6110355854034424
    4. ' au' → logprob: -4.8610358238220215
    5. '           ' → logprob: -5.1110358238220215
    6. 'ou' → logprob: -6.6110358238220215
    7. '),' → logprob: -9.236035346984863
    8. ' ou' → logprob: -9.361035346984863
    9. '   ' → logprob: -9.486035346984863
    10. 'a' → logprob: -9.611035346984863

Token 549: ' ajoute' (ID: 91611)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.2289714366197586
    2. 'left' → logprob: -1.9789714813232422
    3. '           ' → logprob: -2.728971481323242
    4. '       ' → logprob: -7.103971481323242
    5. '   ' → logprob: -8.853971481323242
    6. '	left' → logprob: -8.978971481323242
    7. '[left' → logprob: -10.728971481323242
    8. '		' → logprob: -11.603971481323242
    9. ',left' → logprob: -12.478971481323242
    10. '(left' → logprob: -12.478971481323242

Token 550: ' l' (ID: 305)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002218415029346943
    2. '(' → logprob: -6.127218246459961
    3. 'left' → logprob: -11.252218246459961
    4. ' (' → logprob: -11.627218246459961
    5. ' i' → logprob: -12.502218246459961
    6. 'i' → logprob: -12.877218246459961
    7. '   ' → logprob: -13.252218246459961
    8. '(left' → logprob: -13.502218246459961
    9. '           ' → logprob: -13.877218246459961
    10. ' left' → logprob: -15.002218246459961

Token 551: ''' (ID: 6)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01589018851518631
    2. '(' → logprob: -4.640890121459961
    3. 'i' → logprob: -5.265890121459961
    4. 'élé' → logprob: -7.765890121459961
    5. ' i' → logprob: -8.390890121459961
    6. ' (' → logprob: -9.140890121459961
    7. 'e' → logprob: -9.265890121459961
    8. 'à' → logprob: -10.515890121459961
    9. 'a' → logprob: -11.640890121459961
    10. 'es' → logprob: -12.015890121459961

Token 552: 'élé' (ID: 15228)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.015588495880365372
    2. 'i' → logprob: -5.015588283538818
    3. 'élé' → logprob: -5.515588283538818
    4. 'element' → logprob: -5.640588283538818
    5. ' left' → logprob: -6.890588283538818
    6. 'item' → logprob: -9.140588760375977
    7. 'elem' → logprob: -10.515588760375977
    8. ' i' → logprob: -10.890588760375977
    9. 'a' → logprob: -11.265588760375977
    10. 'token' → logprob: -11.515588760375977

Token 553: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.03790054842829704
    2. 'ément' → logprob: -3.662900447845459
    3. 'ement' → logprob: -4.662900447845459
    4. 'ent' → logprob: -6.662900447845459
    5. 'ments' → logprob: -7.412900447845459
    6. '(' → logprob: -10.287900924682617
    7. '   ' → logprob: -10.537900924682617
    8. 'éments' → logprob: -10.912900924682617
    9. 'element' → logprob: -11.162900924682617
    10. '           ' → logprob: -11.162900924682617

Token 554: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3357875943183899
    2. 'à' → logprob: -1.4607875347137451
    3. '           ' → logprob: -3.835787534713745
    4. 'to' → logprob: -4.585787773132324
    5. '(left' → logprob: -4.835787773132324
    6. '   ' → logprob: -5.460787773132324
    7. 'left' → logprob: -5.585787773132324
    8. ' to' → logprob: -5.835787773132324
    9. '(' → logprob: -7.710787773132324
    10. ')' → logprob: -8.210787773132324

Token 555: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.004097635392099619
    2. ' left' → logprob: -5.5040974617004395
    3. 'la' → logprob: -11.004097938537598
    4. ' la' → logprob: -13.754097938537598
    5. 'the' → logprob: -14.504097938537598
    6. '	left' → logprob: -14.879097938537598
    7. '[left' → logprob: -15.504097938537598
    8. 'l' → logprob: -15.879097938537598
    9. 'right' → logprob: -16.00409698486328
    10. ' the' → logprob: -16.50409698486328

Token 556: ' liste' (ID: 31719)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.5597102396423e-05
    2. ' left' → logprob: -10.250035285949707
    3. '[left' → logprob: -16.625036239624023
    4. '	left' → logprob: -18.625036239624023
    5. 'list' → logprob: -18.875036239624023
    6. 'right' → logprob: -20.375036239624023
    7. '```' → logprob: -20.375036239624023
    8. '.left' → logprob: -20.875036239624023
    9. '[' → logprob: -21.000036239624023
    10. '(left' → logprob: -21.625036239624023

Token 557: ' '' (ID: 461)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.20308206975460052
    2. ' left' → logprob: -1.7030820846557617
    3. ''' → logprob: -7.453082084655762
    4. '[left' → logprob: -7.828082084655762
    5. '   ' → logprob: -8.578082084655762
    6. '(left' → logprob: -8.828082084655762
    7. '`' → logprob: -9.578082084655762
    8. ':left' → logprob: -9.953082084655762
    9. '	left' → logprob: -10.078082084655762
    10. ' '' → logprob: -10.078082084655762

Token 558: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -7.584239938296378e-06
    2. ' left' → logprob: -12.000007629394531
    3. '[left' → logprob: -13.875007629394531
    4. ''' → logprob: -15.500007629394531
    5. '	left' → logprob: -16.50000762939453
    6. '`' → logprob: -17.00000762939453
    7. '.left' → logprob: -18.00000762939453
    8. '(left' → logprob: -18.50000762939453
    9. '```' → logprob: -18.87500762939453
    10. '   ' → logprob: -18.87500762939453

Token 559: ''
' (ID: 2207)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3496820628643036
    2. '.append' → logprob: -1.224682092666626
    3. '.' → logprob: -6.974681854248047
    4. '       ' → logprob: -8.599681854248047
    5. 'append' → logprob: -10.599681854248047
    6. '.add' → logprob: -10.724681854248047
    7. '   ' → logprob: -10.974681854248047
    8. ')' → logprob: -11.474681854248047
    9. '```' → logprob: -11.599681854248047
    10. ' .' → logprob: -12.099681854248047

Token 560: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019708968698978424
    2. 'left' → logprob: -4.01970911026001
    3. ' left' → logprob: -6.89470911026001
    4. '       ' → logprob: -7.76970911026001
    5. '[left' → logprob: -9.519708633422852
    6. '```' → logprob: -11.519708633422852
    7. '(left' → logprob: -11.769708633422852
    8. '.left' → logprob: -11.769708633422852
    9. '   ' → logprob: -11.894708633422852
    10. ',left' → logprob: -11.894708633422852

Token 561: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.00012761499965563416
    2. ' left' → logprob: -9.000127792358398
    3. '           ' → logprob: -13.125127792358398
    4. '   ' → logprob: -14.125127792358398
    5. '	left' → logprob: -14.125127792358398
    6. '       ' → logprob: -14.375127792358398
    7. '[left' → logprob: -17.3751277923584
    8. '.left' → logprob: -18.6251277923584
    9. ',left' → logprob: -18.8751277923584
    10. '
' → logprob: -19.5001277923584

Token 562: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03811872377991676
    2. '.' → logprob: -3.288118839263916
    3. '.extend' → logprob: -9.538118362426758
    4. ' .' → logprob: -13.288118362426758
    5. '+=' → logprob: -13.788118362426758
    6. 'append' → logprob: -14.163118362426758
    7. '.add' → logprob: -14.413118362426758
    8. '.push' → logprob: -14.913118362426758
    9. '.setdefault' → logprob: -14.913118362426758
    10. '.=' → logprob: -15.538118362426758

Token 563: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. '(ii' → logprob: -20.2500057220459
    4. '(I' → logprob: -20.3750057220459
    5. ' (' → logprob: -20.5000057220459
    6. '(x' → logprob: -21.7500057220459
    7. '(a' → logprob: -22.0000057220459
    8. '(in' → logprob: -22.1250057220459
    9. '(iv' → logprob: -22.2500057220459
    10. '(e' → logprob: -23.5000057220459

Token 564: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06391392648220062
    2. '   ' → logprob: -2.8139138221740723
    3. ')
' → logprob: -6.313913822174072
    4. ')return' → logprob: -9.31391429901123
    5. ' )' → logprob: -10.31391429901123
    6. ' ' → logprob: -13.18891429901123
    7. 'return' → logprob: -13.43891429901123
    8. '())' → logprob: -13.93891429901123
    9. ')
' → logprob: -14.06391429901123
    10. 'def' → logprob: -14.06391429901123

Token 565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006790443789213896
    2. 'return' → logprob: -5.006790637969971
    3. ' return' → logprob: -10.006790161132812
    4. '```' → logprob: -11.006790161132812
    5. 'left' → logprob: -12.756790161132812
    6. ')' → logprob: -12.756790161132812
    7. '#' → logprob: -12.756790161132812
    8. '[left' → logprob: -13.756790161132812
    9. 'sorted' → logprob: -14.131790161132812
    10. '	return' → logprob: -14.131790161132812

Token 566: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0019814528059214354
    2. '   ' → logprob: -6.251981258392334
    3. ' return' → logprob: -9.876981735229492
    4. '	return' → logprob: -14.126981735229492
    5. 'left' → logprob: -14.501981735229492
    6. '#' (adapté à ' #') → logprob: -16.876981735229492
    7. ' ' → logprob: -18.126981735229492
    8. ')return' → logprob: -18.251981735229492
    9. '    
' → logprob: -18.626981735229492
    10. '
' → logprob: -18.876981735229492

Token 567: ' Trie' (ID: 131955)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.318681188422488e-05
    2. ' return' → logprob: -11.37501335144043
    3. '   ' → logprob: -13.50001335144043
    4. 'left' → logprob: -15.37501335144043
    5. '	return' → logprob: -16.62501335144043
    6. '#' → logprob: -17.50001335144043
    7. '```' → logprob: -19.62501335144043
    8. ' ' → logprob: -19.75001335144043
    9. '    
' → logprob: -19.87501335144043
    10. '
' → logprob: -19.87501335144043

Token 568: ' réc' (ID: 36254)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4446571469306946
    2. 'qu' → logprob: -1.6946570873260498
    3. 'left' → logprob: -2.19465708732605
    4. '(qu' → logprob: -2.94465708732605
    5. ' return' → logprob: -4.819657325744629
    6. '(left' → logprob: -6.319657325744629
    7. ' left' → logprob: -7.569657325744629
    8. '   ' → logprob: -8.194657325744629
    9. '(return' → logprob: -8.194657325744629
    10. ' qu' → logprob: -8.569657325744629

Token 569: 'urs' (ID: 1628)
  Prédit: 'ursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.20529904961585999
    2. 'urs' → logprob: -1.7052990198135376
    3. 'ursively' → logprob: -6.705298900604248
    4. '   ' → logprob: -7.330298900604248
    5. '[' → logprob: -7.705298900604248
    6. 'ursion' → logprob: -7.830298900604248
    7. 'left' → logprob: -8.080299377441406
    8. 'usr' → logprob: -8.955299377441406
    9. 'ur' → logprob: -8.955299377441406
    10. '(' → logprob: -8.955299377441406

Token 570: 'ivement' (ID: 37978)
  Prédit: 'urs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.2853010594844818
    2. '(left' → logprob: -2.1603009700775146
    3. 'ursive' → logprob: -2.7853009700775146
    4. 'left' → logprob: -3.2853009700775146
    5. 'ur' → logprob: -4.035301208496094
    6. 'ursively' → logprob: -5.160301208496094
    7. ' left' → logprob: -6.160301208496094
    8. 'urse' → logprob: -6.285301208496094
    9. 'us' → logprob: -6.910301208496094
    10. 'up' → logprob: -7.285301208496094

Token 571: ' la' (ID: 557)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.703423798084259
    2. 'return' → logprob: -0.703423798084259
    3. 'left' → logprob: -5.078423976898193
    4. '(qu' → logprob: -5.578423976898193
    5. ' return' → logprob: -8.578423500061035
    6. '(left' → logprob: -10.953423500061035
    7. '(return' → logprob: -12.453423500061035
    8. ' qu' → logprob: -13.453423500061035
    9. '(' → logprob: -13.703423500061035
    10. ' left' → logprob: -14.578423500061035

Token 572: ' liste' (ID: 31719)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.01816609688103199
    2. 'left' → logprob: -4.0181660652160645
    3. ' left' → logprob: -11.268166542053223
    4. ' qu' → logprob: -13.893166542053223
    5. 'right' → logprob: -13.893166542053223
    6. 'return' → logprob: -14.768166542053223
    7. '(qu' → logprob: -14.893166542053223
    8. '[left' → logprob: -15.393166542053223
    9. 'le' → logprob: -15.643166542053223
    10. '(left' → logprob: -16.393165588378906

Token 573: ' '' (ID: 461)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.19864784181118011
    2. 'return' → logprob: -1.8236478567123413
    3. '(left' → logprob: -4.573647975921631
    4. 'qu' → logprob: -4.948647975921631
    5. '(qu' → logprob: -7.198647975921631
    6. 'g' → logprob: -8.448647499084473
    7. '   ' → logprob: -8.948647499084473
    8. '(return' → logprob: -10.073647499084473
    9. '[left' → logprob: -10.073647499084473
    10. ' left' → logprob: -10.448647499084473

Token 574: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0011802274966612458
    2. 'qu' → logprob: -6.751180171966553
    3. '(left' → logprob: -12.251180648803711
    4. 'right' → logprob: -13.376180648803711
    5. ' left' → logprob: -13.376180648803711
    6. '[left' → logprob: -13.626180648803711
    7. '(qu' → logprob: -14.876180648803711
    8. 'lef' → logprob: -16.25118064880371
    9. '```' → logprob: -16.37618064880371
    10. 'le' → logprob: -16.50118064880371

Token 575: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030216006562113762
    2. ')+' → logprob: -3.9052159786224365
    3. '+' → logprob: -5.280216217041016
    4. 'return' → logprob: -6.030216217041016
    5. '   ' → logprob: -7.155216217041016
    6. ' +' → logprob: -7.530216217041016
    7. '')' → logprob: -8.655216217041016
    8. '(left' → logprob: -9.030216217041016
    9. ' )' → logprob: -9.280216217041016
    10. ',' → logprob: -9.655216217041016

Token 576: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8951472043991089
    2. '+' → logprob: -1.2701472043991089
    3. ' +' → logprob: -1.5201472043991089
    4. '   ' → logprob: -2.7701473236083984
    5. ' return' → logprob: -3.6451473236083984
    6. 'left' → logprob: -7.020147323608398
    7. ')' → logprob: -7.395147323608398
    8. '[left' → logprob: -7.395147323608398
    9. ')+' → logprob: -8.270147323608398
    10. 'sorted' → logprob: -9.020147323608398

Token 577: ' left' (ID: 3561)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34936901926994324
    2. 'left' (adapté à ' left') → logprob: -1.2243690490722656
    3. ' return' → logprob: -7.599369049072266
    4. 'sorted' → logprob: -8.474369049072266
    5. ' left' → logprob: -9.224369049072266
    6. '   ' → logprob: -9.349369049072266
    7. '[left' → logprob: -11.349369049072266
    8. 'ls' → logprob: -12.849369049072266
    9. 'lef' → logprob: -13.099369049072266
    10. '(left' → logprob: -13.724369049072266

Token 578: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07351280003786087
    2. ' =' → logprob: -2.6985127925872803
    3. 'return' → logprob: -5.823513031005859
    4. '+' → logprob: -8.07351303100586
    5. ')' → logprob: -9.32351303100586
    6. 'sorted' → logprob: -9.94851303100586
    7. ' +' → logprob: -10.32351303100586
    8. 'qu' → logprob: -10.44851303100586
    9. '+=' → logprob: -10.57351303100586
    10. ',' → logprob: -10.69851303100586

Token 579: ' quick' (ID: 4853)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.0002217748697148636
    2. ' quick' → logprob: -8.875222206115723
    3. 'quick' → logprob: -9.500222206115723
    4. ' qu' → logprob: -12.250222206115723
    5. 'q' → logprob: -14.125222206115723
    6. '(qu' → logprob: -14.625222206115723
    7. 'sorted' → logprob: -15.250222206115723
    8. 'Qu' → logprob: -15.625222206115723
    9. '   ' → logprob: -15.750222206115723
    10. '_qu' → logprob: -16.250221252441406

Token 580: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.1472419600977446e-06
    2. 'sorted' → logprob: -13.875000953674316
    3. 'left' → logprob: -16.125001907348633
    4. 'sorting' → logprob: -18.250001907348633
    5. 's' → logprob: -18.375001907348633
    6. '_sort' → logprob: -18.750001907348633
    7. ' sort' → logprob: -19.000001907348633
    8. '(sort' → logprob: -19.125001907348633
    9. '.sort' → logprob: -20.125001907348633
    10. 'ort' → logprob: -20.125001907348633

Token 581: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -1.9361264946837764e-07
    2. 'left' → logprob: -16.125
    3. '(' → logprob: -18.25
    4. '[left' → logprob: -18.75
    5. ',left' → logprob: -20.125
    6. '(right' → logprob: -20.625
    7. '(le' → logprob: -21.375
    8. ':left' → logprob: -21.5
    9. '(a' → logprob: -22.375
    10. ' left' → logprob: -22.375

Token 582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47412553429603577
    2. ')
' → logprob: -0.9741255044937134
    3. ')+' → logprob: -10.724125862121582
    4. ')

' → logprob: -11.349125862121582
    5. ')
' → logprob: -12.099125862121582
    6. 'right' → logprob: -12.349125862121582
    7. '   ' → logprob: -12.724125862121582
    8. '+' → logprob: -14.099125862121582
    9. ')#' → logprob: -14.849125862121582
    10. ' )
' → logprob: -15.474125862121582

Token 583: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006636978592723608
    2. '   ' → logprob: -5.506637096405029
    3. 'return' → logprob: -6.506637096405029
    4. ' right' → logprob: -7.256637096405029
    5. '#' → logprob: -8.381636619567871
    6. '+' → logprob: -10.256636619567871
    7. '[right' → logprob: -10.256636619567871
    8. '
' → logprob: -10.756636619567871
    9. '    
' → logprob: -11.506636619567871
    10. '	right' → logprob: -11.506636619567871

Token 584: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.000205566844670102
    2. ' right' → logprob: -8.500205993652344
    3. '
' → logprob: -13.375205993652344
    4. '   ' → logprob: -15.375205993652344
    5. 'return' → logprob: -16.000205993652344
    6. '[right' → logprob: -16.875205993652344
    7. '	right' → logprob: -17.125205993652344
    8. '#' (adapté à ' #') → logprob: -17.875205993652344
    9. '    
' → logprob: -18.250205993652344
    10. 'center' → logprob: -18.500205993652344

Token 585: ' Trie' (ID: 131955)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.5597102396423e-05
    2. ' right' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.250036239624023
    4. '#' → logprob: -17.875036239624023
    5. 'return' → logprob: -18.750036239624023
    6. '
' → logprob: -19.875036239624023
    7. 'center' → logprob: -19.875036239624023
    8. '	right' → logprob: -19.875036239624023
    9. '    
' → logprob: -20.000036239624023
    10. '[right' → logprob: -20.750036239624023

Token 586: ' réc' (ID: 36254)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.015230225399136543
    2. ' right' → logprob: -4.265230178833008
    3. '(right' → logprob: -7.015230178833008
    4. 'qu' → logprob: -9.640230178833008
    5. '[right' → logprob: -9.640230178833008
    6. '	right' → logprob: -11.390230178833008
    7. 'rec' → logprob: -11.390230178833008
    8. 'center' → logprob: -12.015230178833008
    9. 'left' → logprob: -13.140230178833008
    10. 'return' → logprob: -13.515230178833008

Token 587: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.16864626109600067
    2. 'ursive' → logprob: -2.6686463356018066
    3. 'right' → logprob: -2.9186463356018066
    4. 'ursively' → logprob: -3.9186463356018066
    5. 'ight' → logprob: -5.543646335601807
    6. 'c' → logprob: -6.168646335601807
    7. '   ' → logprob: -6.293646335601807
    8. '(right' → logprob: -7.543646335601807
    9. 'sort' → logprob: -7.668646335601807
    10. '```' → logprob: -7.793646335601807

Token 588: 'ivement' (ID: 37978)
  Prédit: 'urs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.3294830322265625
    2. 's' → logprob: -2.0794830322265625
    3. 'ivement' → logprob: -2.7044830322265625
    4. 'rs' → logprob: -3.8294830322265625
    5. 'ursive' → logprob: -4.3294830322265625
    6. 'us' → logprob: -4.4544830322265625
    7. 'ursively' → logprob: -4.4544830322265625
    8. 'is' → logprob: -4.7044830322265625
    9. 'qu' → logprob: -5.4544830322265625
    10. 'ativement' → logprob: -5.8294830322265625

Token 589: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0005072805215604603
    2. ' right' → logprob: -7.625507354736328
    3. '(right' → logprob: -10.875507354736328
    4. '	right' → logprob: -15.625507354736328
    5. '   ' → logprob: -16.500507354736328
    6. '[right' → logprob: -16.750507354736328
    7. 'left' → logprob: -17.750507354736328
    8. '右' → logprob: -18.250507354736328
    9. 'Right' → logprob: -18.750507354736328
    10. 'rig' → logprob: -19.000507354736328

Token 590: ' liste' (ID: 31719)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -2.816093228830141e-06
    2. ' right' → logprob: -12.87500286102295
    3. '[right' → logprob: -16.750001907348633
    4. 'left' → logprob: -18.000001907348633
    5. 'center' → logprob: -18.125001907348633
    6. 'return' → logprob: -18.875001907348633
    7. '(right' → logprob: -19.500001907348633
    8. '	right' → logprob: -20.000001907348633
    9. '#' → logprob: -21.250001907348633
    10. '
' → logprob: -21.250001907348633

Token 591: ' '' (ID: 461)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00263915304094553
    2. ' right' → logprob: -6.252639293670654
    3. '(right' → logprob: -7.502639293670654
    4. '[right' → logprob: -8.877638816833496
    5. '   ' → logprob: -12.002638816833496
    6. '	right' → logprob: -12.127638816833496
    7. '_right' → logprob: -12.877638816833496
    8. ':right' → logprob: -13.252638816833496
    9. ',right' → logprob: -13.627638816833496
    10. 'Right' → logprob: -14.877638816833496

Token 592: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.6166903151315637e-05
    2. '(right' → logprob: -11.500016212463379
    3. '[right' → logprob: -12.250016212463379
    4. ' right' → logprob: -13.750016212463379
    5. '	right' → logprob: -17.875015258789062
    6. 'left' → logprob: -18.500015258789062
    7. ':right' → logprob: -18.625015258789062
    8. ',right' → logprob: -19.000015258789062
    9. 'rig' → logprob: -19.375015258789062
    10. '.right' → logprob: -19.500015258789062

Token 593: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.629620373249054
    2. 'right' → logprob: -0.879620373249054
    3. ' right' → logprob: -3.129620313644409
    4. '(right' → logprob: -5.504620552062988
    5. ' =' → logprob: -5.754620552062988
    6. ')' → logprob: -7.754620552062988
    7. '	right' → logprob: -7.879620552062988
    8. '=' → logprob: -8.754620552062988
    9. ',right' → logprob: -8.879620552062988
    10. '[right' → logprob: -9.254620552062988

Token 594: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10780492424964905
    2. '   ' → logprob: -2.857805013656616
    3. ' right' → logprob: -3.107805013656616
    4. '	right' → logprob: -9.982805252075195
    5. '[right' → logprob: -10.482805252075195
    6. ',right' → logprob: -11.607805252075195
    7. '(right' → logprob: -11.857805252075195
    8. ' =' → logprob: -12.107805252075195
    9. ':right' → logprob: -13.732805252075195
    10. '=' → logprob: -13.732805252075195

Token 595: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0001234428636962548
    2. ' right' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.750123977661133
    4. 'return' → logprob: -18.250123977661133
    5. '	right' → logprob: -19.875123977661133
    6. '[right' → logprob: -20.250123977661133
    7. '(right' → logprob: -20.500123977661133
    8. 'left' → logprob: -21.875123977661133
    9. 'Right' → logprob: -22.000123977661133
    10. '#' → logprob: -22.375123977661133

Token 596: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. '=
' → logprob: -17.078889846801758
    4. ')' → logprob: -19.453889846801758
    5. ' ' → logprob: -19.828889846801758
    6. 'qu' → logprob: -20.078889846801758
    7. '＝' → logprob: -20.078889846801758
    8. '.' → logprob: -20.453889846801758
    9. '=}' → logprob: -20.453889846801758
    10. '(qu' → logprob: -20.578889846801758

Token 597: ' quick' (ID: 4853)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.03630974143743515
    2. ' quick' → logprob: -3.5363097190856934
    3. 'quick' → logprob: -5.036309719085693
    4. ' qu' → logprob: -10.286310195922852
    5. 'q' → logprob: -13.661310195922852
    6. '_qu' → logprob: -14.036310195922852
    7. '(qu' → logprob: -14.223810195922852
    8. 'Qu' → logprob: -14.723810195922852
    9. ' ' → logprob: -14.911310195922852
    10. ' ' → logprob: -15.098810195922852

Token 598: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.0280383548888494e-06
    2. 'ort' → logprob: -14.000000953674316
    3. 'sorted' → logprob: -16.125001907348633
    4. 's' → logprob: -17.250001907348633
    5. ' sort' → logprob: -18.125001907348633
    6. '_sort' → logprob: -18.125001907348633
    7. '(sort' → logprob: -18.125001907348633
    8. 'right' → logprob: -18.250001907348633
    9. 'Sort' → logprob: -18.375001907348633
    10. '.sort' → logprob: -20.125001907348633

Token 599: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -1.9361264946837764e-07
    2. '[right' → logprob: -16.75
    3. '(' → logprob: -17.5
    4. 'right' → logprob: -18.25
    5. '(left' → logprob: -18.75
    6. '(rhs' → logprob: -19.5
    7. ' (' → logprob: -19.875
    8. '(r' → logprob: -20.125
    9. ',right' → logprob: -20.375
    10. '(
' → logprob: -21.875

Token 600: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03810620680451393
    2. ')
' → logprob: -3.2881062030792236
    3. '(right' → logprob: -11.038105964660645
    4. ')

' → logprob: -11.288105964660645
    5. '   ' → logprob: -11.413105964660645
    6. 'right' → logprob: -11.538105964660645
    7. '(left' → logprob: -11.913105964660645
    8. 'left' → logprob: -12.913105964660645
    9. ')
' → logprob: -13.038105964660645
    10. ')return' → logprob: -13.788105964660645

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7002868056297302
    2. 'return' → logprob: -0.7002868056297302
    3. ' return' → logprob: -4.950286865234375
    4. '	return' → logprob: -10.825286865234375
    5. '
' → logprob: -11.950286865234375
    6. '    
' → logprob: -12.325286865234375
    7. '  ' → logprob: -14.450286865234375
    8. ' ' → logprob: -15.075286865234375
    9. ':return' → logprob: -15.075286865234375
    10. '    ' → logprob: -15.200286865234375

Token 602: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0036479379050433636
    2. '   ' → logprob: -6.003647804260254
    3. ' return' → logprob: -6.753647804260254
    4. '
' → logprob: -12.878647804260254
    5. '	return' → logprob: -13.378647804260254
    6. '    
' → logprob: -14.503647804260254
    7. 'eturn' → logprob: -16.12864875793457
    8. ':return' → logprob: -16.75364875793457
    9. '[' → logprob: -17.37864875793457
    10. ' ' → logprob: -17.37864875793457

Token 603: ' Aj' (ID: 28294)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.8325677703833207e-05
    2. ' return' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.125028610229492
    4. '	return' → logprob: -17.500028610229492
    5. '#' → logprob: -18.000028610229492
    6. '
' → logprob: -18.375028610229492
    7. 'eturn' → logprob: -19.625028610229492
    8. '    
' → logprob: -19.750028610229492
    9. 'Return' → logprob: -20.625028610229492
    10. ':return' → logprob: -21.250028610229492

Token 604: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0004953675088472664
    2. 'ointe' → logprob: -7.750495433807373
    3. 'uste' → logprob: -11.250494956970215
    4. 'oin' → logprob: -11.625494956970215
    5. 'outez' → logprob: -11.625494956970215
    6. 'o' → logprob: -12.000494956970215
    7. 'our' → logprob: -12.000494956970215
    8. 'out' → logprob: -12.250494956970215
    9. 'unte' → logprob: -12.375494956970215
    10. 'onte' → logprob: -12.625494956970215

Token 605: ' le' (ID: 505)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16319045424461365
    2. ' left' → logprob: -1.913190484046936
    3. '(left' → logprob: -6.6631903648376465
    4. 'return' → logprob: -6.7881903648376465
    5. '(' → logprob: -8.538190841674805
    6. ' return' → logprob: -8.538190841674805
    7. '[left' → logprob: -9.288190841674805
    8. ' ' → logprob: -11.288190841674805
    9. '	left' → logprob: -11.288190841674805
    10. '[' → logprob: -11.538190841674805

Token 606: ' pivot' (ID: 44506)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0004240011621732265
    2. '[left' → logprob: -8.3754243850708
    3. ' left' → logprob: -8.6254243850708
    4. '[' → logprob: -11.2504243850708
    5. 'center' → logprob: -14.3754243850708
    6. 'return' → logprob: -16.250423431396484
    7. '	left' → logprob: -16.750423431396484
    8. '(left' → logprob: -17.125423431396484
    9. '+' → logprob: -17.375423431396484
    10. 'right' → logprob: -17.625423431396484

Token 607: ' à' (ID: 1221)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1990024447441101
    2. '+' → logprob: -1.8240025043487549
    3. '[left' → logprob: -4.949002265930176
    4. 'return' → logprob: -5.449002265930176
    5. '[' → logprob: -6.324002265930176
    6. 'left' → logprob: -6.449002265930176
    7. ',' → logprob: -7.324002265930176
    8. ')' → logprob: -7.574002265930176
    9. '   ' → logprob: -7.699002265930176
    10. ' return' → logprob: -8.074002265930176

Token 608: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.07124267518520355
    2. ' left' → logprob: -3.196242570877075
    3. '[left' → logprob: -3.696242570877075
    4. '[' → logprob: -5.821242809295654
    5. ' [' → logprob: -11.071242332458496
    6. '(left' → logprob: -11.571242332458496
    7. 'return' → logprob: -11.696242332458496
    8. '	left' → logprob: -12.571242332458496
    9. '[
' → logprob: -12.696242332458496
    10. ' la' → logprob: -12.821242332458496

Token 609: ' fin' (ID: 2131)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0073291524313390255
    2. '[left' → logprob: -5.132328987121582
    3. ' left' → logprob: -7.007328987121582
    4. 'return' → logprob: -8.007328987121582
    5. 'list' → logprob: -10.007328987121582
    6. 'center' → logprob: -10.507328987121582
    7. 'middle' → logprob: -10.757328987121582
    8. 'g' → logprob: -11.007328987121582
    9. '[' → logprob: -11.382328987121582
    10. 'result' → logprob: -11.382328987121582

Token 610: ' de' (ID: 334)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.21475188434123993
    2. '[left' → logprob: -1.7147518396377563
    3. ' left' → logprob: -5.214751720428467
    4. '[' → logprob: -5.464751720428467
    5. '(left' → logprob: -5.964751720428467
    6. '([' → logprob: -7.589751720428467
    7. '   ' → logprob: -8.589752197265625
    8. ' [' → logprob: -9.089752197265625
    9. 'return' → logprob: -9.214752197265625
    10. 'center' → logprob: -10.089752197265625

Token 611: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00043400691356509924
    2. ' left' → logprob: -8.125433921813965
    3. 'la' → logprob: -9.000433921813965
    4. 'g' → logprob: -12.125433921813965
    5. ' la' → logprob: -12.375433921813965
    6. '[left' → logprob: -13.250433921813965
    7. ' gauche' → logprob: -14.125433921813965
    8. 'the' → logprob: -14.750433921813965
    9. '(left' → logprob: -14.750433921813965
    10. 'le' → logprob: -14.875433921813965

Token 612: ' liste' (ID: 31719)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0025303566362708807
    2. ' left' → logprob: -6.627530574798584
    3. 'list' → logprob: -7.002530574798584
    4. 'liste' → logprob: -8.252530097961426
    5. '[left' → logprob: -11.752530097961426
    6. ' liste' → logprob: -12.002530097961426
    7. 'right' → logprob: -12.502530097961426
    8. 'sorted' → logprob: -12.627530097961426
    9. ' gauche' → logprob: -12.877530097961426
    10. ' list' → logprob: -12.877530097961426

Token 613: ' tri' (ID: 12665)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0853872075676918
    2. '[left' → logprob: -2.7103872299194336
    3. 'return' → logprob: -4.335387229919434
    4. ' left' → logprob: -6.710387229919434
    5. '   ' → logprob: -7.710387229919434
    6. '+' → logprob: -8.335387229919434
    7. ' +' → logprob: -8.835387229919434
    8. '(left' → logprob: -9.335387229919434
    9. '[' → logprob: -9.835387229919434
    10. ' return' → logprob: -10.585387229919434

Token 614: 'ée' (ID: 2894)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.461788535118103
    2. '[left' → logprob: -1.086788535118103
    3. '[' → logprob: -3.9617886543273926
    4. '   ' → logprob: -4.961788654327393
    5. 'ght' → logprob: -6.336788654327393
    6. 'right' → logprob: -7.211788654327393
    7. '[right' → logprob: -7.211788654327393
    8. 'sorted' → logprob: -7.336788654327393
    9. '(left' → logprob: -7.336788654327393
    10. 'née' → logprob: -7.961788654327393

Token 615: ' '' (ID: 461)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.01233987882733345
    2. 'return' → logprob: -5.262340068817139
    3. ' left' → logprob: -5.387340068817139
    4. '   ' → logprob: -6.387340068817139
    5. '(left' → logprob: -7.762340068817139
    6. '[left' → logprob: -8.01233959197998
    7. ' return' → logprob: -10.51233959197998
    8. '+' → logprob: -11.01233959197998
    9. ' +' → logprob: -12.26233959197998
    10. '	left' → logprob: -13.13733959197998

Token 616: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -4.008129963040119e-06
    2. ' left' → logprob: -12.500003814697266
    3. '[left' → logprob: -15.750003814697266
    4. '(left' → logprob: -17.250003814697266
    5. 'right' → logprob: -19.375003814697266
    6. '	left' → logprob: -20.000003814697266
    7. '_left' → logprob: -20.125003814697266
    8. '左' → logprob: -20.125003814697266
    9. '   ' → logprob: -20.750003814697266
    10. 'Left' → logprob: -21.250003814697266

Token 617: ''
' (ID: 2207)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25214672088623047
    2. '+' → logprob: -1.5021467208862305
    3. '   ' → logprob: -9.00214672088623
    4. '[left' → logprob: -10.00214672088623
    5. 'left' → logprob: -11.50214672088623
    6. '+
' → logprob: -11.62714672088623
    7. 'return' → logprob: -11.62714672088623
    8. '+[' → logprob: -11.87714672088623
    9. '
' → logprob: -12.12714672088623
    10. '.append' → logprob: -12.62714672088623

Token 618: '   ' (ID: 271)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.09608083218336105
    2. ' left' → logprob: -2.846080780029297
    3. '+' → logprob: -3.971080780029297
    4. '[left' → logprob: -4.471080780029297
    5. ' +' → logprob: -5.846080780029297
    6. 'return' → logprob: -8.721080780029297
    7. '   ' → logprob: -9.846080780029297
    8. '+
' → logprob: -9.971080780029297
    9. '(left' → logprob: -10.221080780029297
    10. ',left' → logprob: -11.346080780029297

Token 619: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0005141906440258026
    2. ' left' → logprob: -7.625514030456543
    3. '   ' → logprob: -10.875514030456543
    4. 'return' → logprob: -12.250514030456543
    5. '[left' → logprob: -13.000514030456543
    6. '	left' → logprob: -15.625514030456543
    7. '(left' → logprob: -17.62551498413086
    8. '.left' → logprob: -18.12551498413086
    9. ',left' → logprob: -18.50051498413086
    10. '[' → logprob: -18.87551498413086

Token 620: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.200166469876422e-06
    2. 'append' → logprob: -12.875004768371582
    3. '.' → logprob: -13.250004768371582
    4. '.extend' → logprob: -14.500004768371582
    5. '+' → logprob: -15.000004768371582
    6. ' .' → logprob: -17.1250057220459
    7. '+=' → logprob: -17.7500057220459
    8. ' +=' → logprob: -18.5000057220459
    9. ' append' → logprob: -19.1250057220459
    10. 'Append' → logprob: -19.1250057220459

Token 621: '(center' (ID: 89864)
  Prédit: '(center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(center' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'center' → logprob: -16.25
    4. '=center' → logprob: -18.625
    5. ' center' → logprob: -19.75
    6. '<center' → logprob: -20.875
    7. '	center' → logprob: -21.5
    8. ':center' → logprob: -21.75
    9. '_center' → logprob: -23.25
    10. '(c' → logprob: -23.5

Token 622: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014839126961305737
    2. ')
' → logprob: -6.626483917236328
    3. '   ' → logprob: -9.501483917236328
    4. ')return' → logprob: -9.626483917236328
    5. '<|end|>' → logprob: -11.376483917236328
    6. ' )' → logprob: -13.251483917236328
    7. ')

' → logprob: -14.376483917236328
    8. '#' → logprob: -14.751483917236328
    9. '<|end|>' → logprob: -14.876483917236328
    10. '[right' → logprob: -15.126483917236328

Token 623: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7183424234390259
    2. 'return' → logprob: -0.7183424234390259
    3. '   ' → logprob: -4.218342304229736
    4. ' +' → logprob: -5.468342304229736
    5. ' return' → logprob: -5.718342304229736
    6. '+
' → logprob: -6.218342304229736
    7. '[' → logprob: -8.968342781066895
    8. '#' → logprob: -8.968342781066895
    9. 'right' → logprob: -9.093342781066895
    10. ')' → logprob: -9.718342781066895

Token 624: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2273852527141571
    2. '+' → logprob: -2.2273852825164795
    3. '   ' → logprob: -2.4773852825164795
    4. 'left' → logprob: -5.2273850440979
    5. ' return' → logprob: -6.2273850440979
    6. '#' (adapté à ' #') → logprob: -6.4773850440979
    7. 'right' → logprob: -6.8523850440979
    8. ' +' → logprob: -7.3523850440979
    9. '    
' → logprob: -8.102385520935059
    10. '+
' → logprob: -8.602385520935059

Token 625: ' Aj' (ID: 28294)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024144122377038002
    2. 'left' → logprob: -3.899144172668457
    3. ' return' → logprob: -5.774144172668457
    4. '   ' → logprob: -7.899144172668457
    5. ' left' → logprob: -9.274144172668457
    6. '#' → logprob: -11.024144172668457
    7. '	return' → logprob: -12.649144172668457
    8. 'right' → logprob: -12.899144172668457
    9. '	left' → logprob: -14.774144172668457
    10. 'eturn' → logprob: -14.899144172668457

Token 626: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.6712655425071716
    2. 'out' → logprob: -1.5462656021118164
    3. 'left' → logprob: -1.5462656021118164
    4. 'oin' → logprob: -3.6712656021118164
    5. 'outez' → logprob: -4.171265602111816
    6. 'outer' → logprob: -5.046265602111816
    7. 'oint' → logprob: -5.171265602111816
    8. 'return' → logprob: -6.296265602111816
    9. '(left' → logprob: -6.671265602111816
    10. '#' → logprob: -6.671265602111816

Token 627: ' (' (ID: 350)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.4763406217098236
    2. 'right' → logprob: -0.976340651512146
    3. '(right' → logprob: -6.1013407707214355
    4. ' the' → logprob: -12.226340293884277
    5. '	right' → logprob: -12.351340293884277
    6. '(' → logprob: -12.976340293884277
    7. '[right' → logprob: -13.101340293884277
    8. 'left' → logprob: -13.101340293884277
    9. '+' → logprob: -13.226340293884277
    10. 'r' → logprob: -13.601340293884277

Token 628: 'concat' (ID: 41859)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.023283565416932106
    2. ' right' → logprob: -3.7732834815979004
    3. 'left' → logprob: -10.898283958435059
    4. '+' → logprob: -11.648283958435059
    5. '[right' → logprob: -12.273283958435059
    6. '	right' → logprob: -13.273283958435059
    7. ' +' → logprob: -13.523283958435059
    8. ')' → logprob: -14.398283958435059
    9. '(right' → logprob: -14.523283958435059
    10. 'le' → logprob: -14.898283958435059

Token 629: 'ène' (ID: 22902)
  Prédit: 'én'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.5427445769309998
    2. 'en' → logprob: -2.2927446365356445
    3. 'right' → logprob: -2.6677446365356445
    4. 'left' → logprob: -2.7927446365356445
    5. 'éné' → logprob: -3.4177446365356445
    6. '(right' → logprob: -3.9177446365356445
    7. '```' → logprob: -4.0427446365356445
    8. 'ent' → logprob: -4.1677446365356445
    9. 'ene' → logprob: -4.1677446365356445
    10. '(left' → logprob: -4.2927446365356445

Token 630: ')' (ID: 8)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.5931861400604248
    2. 'right' → logprob: -0.8431861400604248
    3. 'left' → logprob: -4.843186378479004
    4. '(right' → logprob: -4.843186378479004
    5. ' left' → logprob: -6.968186378479004
    6. '(left' → logprob: -9.093186378479004
    7. ' la' → logprob: -9.718186378479004
    8. '(' → logprob: -9.968186378479004
    9. '[right' → logprob: -10.093186378479004
    10. ')' → logprob: -10.343186378479004

Token 631: ' toute' (ID: 16825)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006840760353952646
    2. ' right' → logprob: -5.006840705871582
    3. '(right' → logprob: -9.006840705871582
    4. 'left' → logprob: -13.006840705871582
    5. '[right' → logprob: -15.256840705871582
    6. '(' → logprob: -15.756840705871582
    7. '	right' → logprob: -16.1318416595459
    8. 'rig' → logprob: -16.1318416595459
    9. 'r' → logprob: -17.7568416595459
    10. 'qu' → logprob: -18.0068416595459

Token 632: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.47265732288360596
    2. 'la' → logprob: -1.722657322883606
    3. ' la' → logprob: -1.847657322883606
    4. ' right' → logprob: -3.3476572036743164
    5. 'left' → logprob: -6.097657203674316
    6. ' droite' → logprob: -6.722657203674316
    7. '(right' → logprob: -6.972657203674316
    8. 'dro' → logprob: -8.472657203674316
    9. '[right' → logprob: -8.722657203674316
    10. 'les' → logprob: -8.722657203674316

Token 633: ' liste' (ID: 31719)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01250411942601204
    2. 'liste' → logprob: -4.6375041007995605
    3. 'dro' → logprob: -6.8875041007995605
    4. ' right' → logprob: -7.3875041007995605
    5. ' liste' → logprob: -7.7625041007995605
    6. ' droite' → logprob: -8.262504577636719
    7. 'list' → logprob: -8.387504577636719
    8. 'left' → logprob: -8.637504577636719
    9. 'lista' → logprob: -12.762504577636719
    10. 'sorted' → logprob: -13.137504577636719

Token 634: ' tri' (ID: 12665)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06924301385879517
    2. '(right' → logprob: -2.8192429542541504
    3. ' right' → logprob: -4.94424295425415
    4. 'left' → logprob: -9.569243431091309
    5. '[right' → logprob: -10.319243431091309
    6. '(left' → logprob: -11.694243431091309
    7. '(' → logprob: -12.069243431091309
    8. '	right' → logprob: -13.069243431091309
    9. '右' → logprob: -13.319243431091309
    10. ',right' → logprob: -13.819243431091309

Token 635: 'ée' (ID: 2894)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02756122313439846
    2. 'left' → logprob: -3.6525611877441406
    3. 'sorted' → logprob: -7.152561187744141
    4. ' right' → logprob: -8.65256118774414
    5. 'ght' → logprob: -8.77756118774414
    6. 'st' → logprob: -9.52756118774414
    7. '(right' → logprob: -11.40256118774414
    8. '   ' → logprob: -11.52756118774414
    9. '+' → logprob: -12.02756118774414
    10. 'list' → logprob: -12.15256118774414

Token 636: ' '' (ID: 461)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0630924254655838
    2. '(right' → logprob: -2.9380924701690674
    3. ' right' → logprob: -5.438092231750488
    4. 'left' → logprob: -5.688092231750488
    5. '(left' → logprob: -7.938092231750488
    6. '[right' → logprob: -9.938092231750488
    7. '	right' → logprob: -11.438092231750488
    8. '右' → logprob: -11.813092231750488
    9. ' droite' → logprob: -12.563092231750488
    10. ' left' → logprob: -12.688092231750488

Token 637: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -7.465036105713807e-06
    2. ' right' → logprob: -12.000007629394531
    3. 'left' → logprob: -13.875007629394531
    4. '(right' → logprob: -15.750007629394531
    5. '[right' → logprob: -16.12500762939453
    6. '	right' → logprob: -19.50000762939453
    7. '`' → logprob: -20.37500762939453
    8. '_right' → logprob: -20.62500762939453
    9. 'rig' → logprob: -20.87500762939453
    10. 'Right' → logprob: -20.87500762939453

Token 638: ''' (ID: 6)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5782356858253479
    2. ' +' → logprob: -0.8282356858253479
    3. ')' → logprob: -6.953235626220703
    4. ' +=' → logprob: -7.828235626220703
    5. '   ' → logprob: -8.453235626220703
    6. '+=' → logprob: -8.828235626220703
    7. '.extend' → logprob: -8.828235626220703
    8. ' to' → logprob: -9.078235626220703
    9. ',' → logprob: -9.953235626220703
    10. ' +
' → logprob: -9.953235626220703

Token 639: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7006224393844604
    2. ' +' → logprob: -0.7006224393844604
    3. '.extend' → logprob: -5.57562255859375
    4. ' +=' → logprob: -6.20062255859375
    5. '+=' → logprob: -6.95062255859375
    6. '   ' → logprob: -7.57562255859375
    7. '+
' → logprob: -9.82562255859375
    8. ' +
' → logprob: -9.95062255859375
    9. 'extend' → logprob: -10.45062255859375
    10. 'return' → logprob: -11.57562255859375

Token 640: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.020939819514751434
    2. ' left' → logprob: -3.895939826965332
    3. 'la' → logprob: -8.395939826965332
    4. ' la' → logprob: -9.145939826965332
    5. ' gauche' → logprob: -9.895939826965332
    6. '	left' → logprob: -12.145939826965332
    7. ' ' → logprob: -12.770939826965332
    8. '[left' → logprob: -13.395939826965332
    9. 'l' → logprob: -13.520939826965332
    10. 'g' → logprob: -13.895939826965332

Token 641: ' suite' (ID: 13800)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0011709370883181691
    2. ' left' → logprob: -6.751171112060547
    3. '[left' → logprob: -15.626171112060547
    4. '	left' → logprob: -16.126171112060547
    5. ' gauche' → logprob: -16.376171112060547
    6. ' ' → logprob: -16.751171112060547
    7. 'list' → logprob: -17.001171112060547
    8. 'g' → logprob: -17.001171112060547
    9. 'lef' → logprob: -17.126171112060547
    10. 'le' → logprob: -17.126171112060547

Token 642: ' de' (ID: 334)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.010221468284726143
    2. ' left' → logprob: -4.760221481323242
    3. '   ' → logprob: -6.635221481323242
    4. 'return' → logprob: -8.885221481323242
    5. '(left' → logprob: -9.760221481323242
    6. '+' → logprob: -10.010221481323242
    7. '[left' → logprob: -10.635221481323242
    8. ' +' → logprob: -11.135221481323242
    9. ' of' → logprob: -12.510221481323242
    10. ' return' → logprob: -13.010221481323242

Token 643: ' '' (ID: 461)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0024758970830589533
    2. ' left' → logprob: -6.002475738525391
    3. '	left' → logprob: -16.75247573852539
    4. ' ' → logprob: -17.12747573852539
    5. 'la' → logprob: -17.75247573852539
    6. ' ' → logprob: -17.75247573852539
    7. '(left' → logprob: -18.00247573852539
    8. 'l' → logprob: -18.25247573852539
    9. 'le' → logprob: -18.62747573852539
    10. '_left' → logprob: -18.87747573852539

Token 644: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.547789674485102e-05
    2. ' left' → logprob: -10.250035285949707
    3. '	left' → logprob: -19.125036239624023
    4. 'lef' → logprob: -19.500036239624023
    5. 'le' → logprob: -20.000036239624023
    6. '(left' → logprob: -20.625036239624023
    7. ' ' → logprob: -20.750036239624023
    8. '左' → logprob: -21.250036239624023
    9. '[left' → logprob: -21.250036239624023
    10. 'right' → logprob: -21.750036239624023

Token 645: ''
' (ID: 2207)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3276609480381012
    2. ' +' → logprob: -1.3276609182357788
    3. '[left' → logprob: -4.702661037445068
    4. '   ' → logprob: -6.327661037445068
    5. ')' → logprob: -7.202661037445068
    6. '<|end|>' → logprob: -7.452661037445068
    7. 'left' → logprob: -7.577661037445068
    8. '[right' → logprob: -7.827661037445068
    9. '[:]' → logprob: -8.32766056060791
    10. ' +=' → logprob: -8.45266056060791

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13322359323501587
    2. 'return' → logprob: -2.133223533630371
    3. ' return' → logprob: -5.133223533630371
    4. 'left' → logprob: -8.008223533630371
    5. ' left' → logprob: -10.508223533630371
    6. '[left' → logprob: -11.758223533630371
    7. '	return' → logprob: -12.383223533630371
    8. '
' → logprob: -13.133223533630371
    9. '    
' → logprob: -13.508223533630371
    10. '+' → logprob: -14.258223533630371

Token 647: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.027913933619856834
    2. ' left' → logprob: -3.777914047241211
    3. 'return' → logprob: -5.402914047241211
    4. ' return' → logprob: -8.902914047241211
    5. '   ' → logprob: -11.277914047241211
    6. 'right' → logprob: -13.527914047241211
    7. '[left' → logprob: -13.777914047241211
    8. '	left' → logprob: -14.027914047241211
    9. '
' → logprob: -14.902914047241211
    10. '(left' → logprob: -14.902914047241211

Token 648: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.2422904521226883
    2. '+' → logprob: -1.7422904968261719
    3. '+=' → logprob: -3.242290496826172
    4. ' +=' → logprob: -7.492290496826172
    5. 'extend' → logprob: -8.242290496826172
    6. ' +' → logprob: -9.117290496826172
    7. '=' → logprob: -10.367290496826172
    8. 'extends' → logprob: -11.617290496826172
    9. 'return' → logprob: -13.867290496826172
    10. 'ext' → logprob: -13.867290496826172

Token 649: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: 0.0
    2. 'right' → logprob: -17.25
    3. '(' → logprob: -18.625
    4. '(r' → logprob: -22.0
    5. '[right' → logprob: -22.125
    6. ',right' → logprob: -22.125
    7. '(rhs' → logprob: -22.25
    8. '(red' → logprob: -22.75
    9. '/right' → logprob: -23.625
    10. '(
' → logprob: -23.625

Token 650: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06237824633717537
    2. ')
' → logprob: -2.812378168106079
    3. '   ' → logprob: -8.8123779296875
    4. ')return' → logprob: -8.9373779296875
    5. 'return' → logprob: -9.0623779296875
    6. ')
' → logprob: -11.4373779296875
    7. ' return' → logprob: -13.8123779296875
    8. '<|end|>' → logprob: -14.3123779296875
    9. ' )' → logprob: -14.9373779296875
    10. '[' → logprob: -15.1873779296875

Token 651: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04190785065293312
    2. 'return' → logprob: -3.291907787322998
    3. ' return' → logprob: -5.666907787322998
    4. '
' → logprob: -8.166908264160156
    5. '	return' → logprob: -9.541908264160156
    6. '    
' → logprob: -11.291908264160156
    7. '<|end|>' → logprob: -11.666908264160156
    8. '  ' → logprob: -11.791908264160156
    9. ':return' → logprob: -11.916908264160156
    10. ' ' → logprob: -12.791908264160156

Token 652: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.025682250037789345
    2. '   ' → logprob: -3.775682210922241
    3. ' return' → logprob: -6.02568244934082
    4. '	return' → logprob: -11.02568244934082
    5. ':return' → logprob: -14.40068244934082
    6. '
' → logprob: -14.90068244934082
    7. '  ' → logprob: -15.65068244934082
    8. '    
' → logprob: -15.77568244934082
    9. ' ' → logprob: -16.02568244934082
    10. '_return' → logprob: -16.27568244934082

Token 653: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -4.596781946020201e-05
    2. ' return' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.500045776367188
    4. '	return' → logprob: -18.875045776367188
    5. '
' → logprob: -20.375045776367188
    6. 'eturn' → logprob: -20.875045776367188
    7. ':return' → logprob: -20.875045776367188
    8. '#' → logprob: -22.125045776367188
    9. ' ' → logprob: -22.250045776367188
    10. 'Return' → logprob: -22.375045776367188

Token 654: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.32282835245132446
    2. 'ner' → logprob: -1.3228282928466797
    3. ' left' → logprob: -5.32282829284668
    4. 'n' → logprob: -5.57282829284668
    5. '   ' → logprob: -7.69782829284668
    6. 'er' → logprob: -8.69782829284668
    7. 'left' → logprob: -8.82282829284668
    8. 'return' → logprob: -10.94782829284668
    9. 'nez' → logprob: -11.07282829284668
    10. 'neur' → logprob: -11.19782829284668

Token 655: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.003177952254191041
    2. ' left' → logprob: -5.753178119659424
    3. 'le' → logprob: -15.878177642822266
    4. '(left' → logprob: -16.503177642822266
    5. '[left' → logprob: -16.503177642822266
    6. '	left' → logprob: -18.128177642822266
    7. 'lef' → logprob: -18.503177642822266
    8. ' lef' → logprob: -18.878177642822266
    9. 'la' → logprob: -19.378177642822266
    10. ' le' → logprob: -19.378177642822266

Token 656: ' liste' (ID: 31719)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00010521204239921644
    2. ' left' → logprob: -9.250104904174805
    3. 'sorted' → logprob: -12.625104904174805
    4. 'list' → logprob: -12.750104904174805
    5. 'liste' → logprob: -13.125104904174805
    6. '[left' → logprob: -14.875104904174805
    7. 'g' → logprob: -15.625104904174805
    8. 'lef' → logprob: -16.250104904174805
    9. 'result' → logprob: -16.625104904174805
    10. '	left' → logprob: -16.875104904174805

Token 657: ' tri' (ID: 12665)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0029525011777877808
    2. ' left' → logprob: -5.877952575683594
    3. 'sorted' → logprob: -9.002952575683594
    4. '[left' → logprob: -10.752952575683594
    5. '(left' → logprob: -13.502952575683594
    6. ' sorted' → logprob: -13.877952575683594
    7. 'return' → logprob: -14.752952575683594
    8. '	left' → logprob: -15.877952575683594
    9. 'tr' → logprob: -16.377952575683594
    10. ' gauche' → logprob: -16.502952575683594

Token 658: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00354067818261683
    2. 't' → logprob: -6.753540515899658
    3. 'st' → logprob: -6.878540515899658
    4. 'é' → logprob: -8.003540992736816
    5. 'née' → logprob: -8.003540992736816
    6. 's' → logprob: -9.128540992736816
    7. 'd' → logprob: -9.253540992736816
    8. 'ét' → logprob: -9.753540992736816
    9. 'érée' → logprob: -9.753540992736816
    10. 'sorted' → logprob: -10.003540992736816

Token 659: ' (' (ID: 350)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12719856202602386
    2. ' left' → logprob: -2.1271984577178955
    3. '[left' → logprob: -9.127198219299316
    4. '(left' → logprob: -9.502198219299316
    5. 'return' → logprob: -9.502198219299316
    6. ' return' → logprob: -11.627198219299316
    7. 'sorted' → logprob: -13.377198219299316
    8. '.left' → logprob: -14.752198219299316
    9. '   ' → logprob: -14.752198219299316
    10. ',left' → logprob: -15.252198219299316

Token 660: 'qui' (ID: 22771)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -5.080963092041202e-06
    2. ' left' → logprob: -12.250004768371582
    3. '[left' → logprob: -15.625004768371582
    4. ')' → logprob: -16.1250057220459
    5. '   ' → logprob: -17.1250057220459
    6. 'return' → logprob: -18.8750057220459
    7. '	left' → logprob: -19.2500057220459
    8. '(left' → logprob: -19.6250057220459
    9. '.left' → logprob: -19.7500057220459
    10. 'a' → logprob: -19.8750057220459

Token 661: ' combine' (ID: 21700)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.918427586555481
    2. ' est' → logprob: -1.043427586555481
    3. 'a' → logprob: -1.918427586555481
    4. ' a' → logprob: -3.4184274673461914
    5. ')' → logprob: -3.4184274673461914
    6. ' is' → logprob: -5.418427467346191
    7. 'return' → logprob: -5.418427467346191
    8. 'n' → logprob: -5.918427467346191
    9. '```' → logprob: -6.293427467346191
    10. 's' → logprob: -6.418427467346191

Token 662: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.006092322990298271
    2. ' left' → logprob: -5.131092548370361
    3. 'g' → logprob: -9.506092071533203
    4. 'les' → logprob: -10.006092071533203
    5. ' gauche' → logprob: -11.131092071533203
    6. 'la' → logprob: -11.506092071533203
    7. '[left' → logprob: -12.256092071533203
    8. '(left' → logprob: -12.506092071533203
    9. 't' → logprob: -13.506092071533203
    10. ' les' → logprob: -13.506092071533203

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3388075828552246
    2. '+' → logprob: -1.5888075828552246
    3. ' +' → logprob: -2.5888075828552246
    4. ')' → logprob: -5.838807582855225
    5. 'et' → logprob: -5.963807582855225
    6. ' et' → logprob: -6.213807582855225
    7. ' and' → logprob: -8.338808059692383
    8. ' ,' → logprob: -8.463808059692383
    9. '+,' → logprob: -9.713808059692383
    10. '<|end|>' → logprob: -10.463808059692383

Token 664: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.043660588562488556
    2. ' center' → logprob: -3.1686606407165527
    3. 'left' → logprob: -7.668660640716553
    4. '[' → logprob: -9.543660163879395
    5. '[left' → logprob: -10.168660163879395
    6. 'right' → logprob: -10.418660163879395
    7. 'pivot' → logprob: -10.668660163879395
    8. ' left' → logprob: -11.918660163879395
    9. 'centre' → logprob: -12.168660163879395
    10. ' [' → logprob: -12.668660163879395

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07220467180013657
    2. 'et' → logprob: -2.94720458984375
    3. ' et' → logprob: -4.07220458984375
    4. ')' → logprob: -9.07220458984375
    5. ' and' → logprob: -12.07220458984375
    6. '+' → logprob: -12.57220458984375
    7. ' ,' → logprob: -12.94720458984375
    8. 'and' → logprob: -13.07220458984375
    9. ' и' → logprob: -13.94720458984375
    10. '_et' → logprob: -14.19720458984375

Token 666: ' et' (ID: 859)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.41040995717048645
    2. ' right' → logprob: -1.285409927368164
    3. 'et' → logprob: -3.785409927368164
    4. ' and' → logprob: -3.785409927368164
    5. ' et' → logprob: -4.660409927368164
    6. 'and' → logprob: -5.285409927368164
    7. ',right' → logprob: -10.285409927368164
    8. ' puis' → logprob: -10.410409927368164
    9. '[right' → logprob: -10.660409927368164
    10. ' ' → logprob: -11.035409927368164

Token 667: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014163747429847717
    2. ' right' → logprob: -4.264163970947266
    3. '	right' → logprob: -16.014163970947266
    4. '[right' → logprob: -17.264163970947266
    5. '右' → logprob: -17.764163970947266
    6. '(right' → logprob: -18.139163970947266
    7. 'Right' → logprob: -18.139163970947266
    8. ',right' → logprob: -18.639163970947266
    9. ' ' → logprob: -19.389163970947266
    10. '.right' → logprob: -19.514163970947266

Token 668: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016587569552939385
    2. ' )' → logprob: -9.500165939331055
    3. ')return' → logprob: -9.625165939331055
    4. ')
' → logprob: -12.000165939331055
    5. '<|end|>' → logprob: -12.000165939331055
    6. 'return' → logprob: -12.625165939331055
    7. ').' → logprob: -13.250165939331055
    8. '')' → logprob: -13.500165939331055
    9. '[' → logprob: -13.625165939331055
    10. ')a' → logprob: -14.250165939331055

Token 669: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0018802082631736994
    2. '   ' → logprob: -6.751880168914795
    3. ' return' → logprob: -7.251880168914795
    4. '	return' → logprob: -14.126880645751953
    5. ':return' → logprob: -16.126880645751953
    6. '```' → logprob: -16.626880645751953
    7. '
' → logprob: -18.001880645751953
    8. 'eturn' → logprob: -18.251880645751953
    9. '{return' → logprob: -18.251880645751953
    10. '(return' → logprob: -18.376880645751953

Token 670: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.6047699318733066e-05
    2. ' return' → logprob: -11.250016212463379
    3. 'left' → logprob: -12.750016212463379
    4. '   ' → logprob: -17.250015258789062
    5. '	return' → logprob: -19.750015258789062
    6. 'eturn' → logprob: -21.625015258789062
    7. ':return' → logprob: -21.875015258789062
    8. '
' → logprob: -22.250015258789062
    9. '[left' → logprob: -22.375015258789062
    10. '```' → logprob: -22.375015258789062

Token 671: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1517960956552997e-05
    2. ' left' → logprob: -11.375011444091797
    3. '[left' → logprob: -17.625011444091797
    4. '(left' → logprob: -18.625011444091797
    5. '	left' → logprob: -18.625011444091797
    6. 'lef' → logprob: -19.250011444091797
    7. '   ' → logprob: -19.500011444091797
    8. '左' → logprob: -20.250011444091797
    9. 'Left' → logprob: -20.500011444091797
    10. 'right' → logprob: -20.625011444091797

Token 672: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14585630595684052
    2. '#' → logprob: -2.0208563804626465
    3. 'sorted' → logprob: -6.3958563804626465
    4. 'remaining' → logprob: -8.270855903625488
    5. 'excluded' → logprob: -8.645855903625488
    6. 'filtered' → logprob: -8.895855903625488
    7. ' for' → logprob: -9.145855903625488
    8. 'H' → logprob: -9.145855903625488
    9. 'if' → logprob: -9.270855903625488
    10. 'ans' → logprob: -9.395855903625488

Token 673: '#' (ID: 2)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.8856496810913086
    2. 'H' → logprob: -1.1356496810913086
    3. '#' → logprob: -1.3856496810913086
    4. 'for' → logprob: -4.760649681091309
    5. 'a' → logprob: -5.635649681091309
    6. 'ans' → logprob: -7.385649681091309
    7. 'b' → logprob: -7.510649681091309
    8. 'A' → logprob: -8.010649681091309
    9. 's' → logprob: -8.260649681091309
    10. 'B' → logprob: -8.385649681091309

Token 674: ' Trie' (ID: 131955)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1483556479215622
    2. 'sorted' → logprob: -2.273355722427368
    3. '#' → logprob: -3.648355722427368
    4. 'for' → logprob: -5.648355484008789
    5. 'ans' → logprob: -6.273355484008789
    6. 'a' → logprob: -7.398355484008789
    7. 'B' → logprob: -7.773355484008789
    8. 'h' → logprob: -8.398355484008789
    9. 'sort' → logprob: -8.523355484008789
    10. 'A' → logprob: -8.648355484008789

Token 675: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.000462366413557902
    2. ' H' → logprob: -8.250462532043457
    3. 'sorted' → logprob: -9.000462532043457
    4. 'ans' → logprob: -9.875462532043457
    5. '(H' → logprob: -11.375462532043457
    6. '_H' → logprob: -12.500462532043457
    7. 'result' → logprob: -13.125462532043457
    8. '=' → logprob: -13.625462532043457
    9. 'qu' → logprob: -14.000462532043457
    10. '(sorted' → logprob: -14.125462532043457

Token 676: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.141186450899113e-05
    2. 'sorted' → logprob: -11.875020980834961
    3. 'liste' → logprob: -12.375020980834961
    4. ' H' → logprob: -12.875020980834961
    5. 'h' → logprob: -13.125020980834961
    6. 'ans' → logprob: -13.125020980834961
    7. 'list' → logprob: -14.000020980834961
    8. 'qu' → logprob: -14.000020980834961
    9. 'result' → logprob: -15.375020980834961
    10. '```' → logprob: -15.500020980834961

Token 677: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.6656825866666622e-05
    2. 'sorted' → logprob: -11.75002670288086
    3. '(H' → logprob: -11.87502670288086
    4. '=' → logprob: -12.12502670288086
    5. ' =' → logprob: -12.50002670288086
    6. ' H' → logprob: -13.12502670288086
    7. 's' → logprob: -15.87502670288086
    8. '_H' → logprob: -15.87502670288086
    9. '(sorted' → logprob: -15.87502670288086
    10. 'result' → logprob: -16.37502670288086

Token 678: ' grâce' (ID: 31589)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49978190660476685
    2. 'H' → logprob: -1.124781847000122
    3. ' =' → logprob: -2.749781847000122
    4. 'sorted' → logprob: -5.374782085418701
    5. ' H' → logprob: -11.374781608581543
    6. '(sorted' → logprob: -11.749781608581543
    7. ' sorted' → logprob: -11.874781608581543
    8. '_sorted' → logprob: -12.249781608581543
    9. 's' → logprob: -13.249781608581543
    10. 'h' → logprob: -13.624781608581543

Token 679: ' à' (ID: 1221)
  Prédit: '(qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(qu' → logprob: -0.003455264260992408
    2. '(' → logprob: -5.75345516204834
    3. 'à' → logprob: -8.87845516204834
    4. 'au' → logprob: -9.75345516204834
    5. 'qu' → logprob: -10.75345516204834
    6. ' à' → logprob: -10.87845516204834
    7. '(H' → logprob: -12.00345516204834
    8. '(q' → logprob: -12.37845516204834
    9. ' au' → logprob: -12.50345516204834
    10. '=' → logprob: -12.50345516204834

Token 680: ' notre' (ID: 12092)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.0020279695745557547
    2. 'H' → logprob: -6.502027988433838
    3. ' qu' → logprob: -7.752027988433838
    4. ' H' → logprob: -10.37702751159668
    5. '(qu' → logprob: -10.62702751159668
    6. 'sorted' → logprob: -11.25202751159668
    7. 'quick' → logprob: -11.50202751159668
    8. ' quick' → logprob: -11.62702751159668
    9. '=' → logprob: -12.87702751159668
    10. 'h' → logprob: -13.87702751159668

Token 681: ' fonction' (ID: 17610)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.059290654957294464
    2. 'H' → logprob: -2.934290647506714
    3. ' qu' → logprob: -6.434290885925293
    4. ' H' → logprob: -6.559290885925293
    5. '=' → logprob: -7.684290885925293
    6. 'sorted' → logprob: -7.684290885925293
    7. ' =' → logprob: -7.934290885925293
    8. 'ans' → logprob: -11.059290885925293
    9. ' sorted' → logprob: -11.059290885925293
    10. 'h' → logprob: -11.684290885925293

Token 682: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.017814969643950462
    2. 'sorted' → logprob: -4.142815113067627
    3. 'qu' → logprob: -7.017815113067627
    4. ' H' → logprob: -7.892815113067627
    5. 'tr' → logprob: -9.017814636230469
    6. 'tri' → logprob: -9.142814636230469
    7. '(H' → logprob: -9.392814636230469
    8. ' =' → logprob: -9.517814636230469
    9. '(sorted' → logprob: -10.142814636230469
    10. '=' → logprob: -10.392814636230469

Token 683: ' tri' (ID: 12665)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.0006764543941244483
    2. ' qu' → logprob: -7.87567663192749
    3. 'tr' → logprob: -9.125676155090332
    4. 'tri' → logprob: -9.250676155090332
    5. ' quick' → logprob: -10.500676155090332
    6. ' tri' → logprob: -10.750676155090332
    7. ' sorting' → logprob: -11.125676155090332
    8. 'sorting' → logprob: -11.250676155090332
    9. 'quick' → logprob: -12.000676155090332
    10. '```' → logprob: -12.875676155090332

Token 684: ' personnalisé' (ID: 159784)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.010376979596912861
    2. '=' → logprob: -5.385376930236816
    3. 'sorted' → logprob: -5.760376930236816
    4. ' =' → logprob: -6.010376930236816
    5. ' H' → logprob: -9.385376930236816
    6. '(sorted' → logprob: -11.260376930236816
    7. '_sorted' → logprob: -11.635376930236816
    8. '(H' → logprob: -11.635376930236816
    9. ' sorted' → logprob: -12.385376930236816
    10. 'tr' → logprob: -12.760376930236816

Token 685: ' '' (ID: 461)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0003428528143558651
    2. 'sorted' → logprob: -8.000343322753906
    3. ' H' → logprob: -12.375343322753906
    4. '=' → logprob: -13.750343322753906
    5. ' =' → logprob: -14.125343322753906
    6. 'ans' → logprob: -15.375343322753906
    7. 'h' → logprob: -15.500343322753906
    8. 'Hs' → logprob: -15.750343322753906
    9. '```' → logprob: -16.125343322753906
    10. 'sort' → logprob: -16.250343322753906

Token 686: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -1.9361264946837764e-07
    2. 'quick' → logprob: -16.75
    3. 'H' → logprob: -17.5
    4. '(qu' → logprob: -17.625
    5. 'Qu' → logprob: -20.0
    6. '`' → logprob: -20.0
    7. 'he' → logprob: -20.625
    8. ' qu' → logprob: -20.625
    9. '_qu' → logprob: -20.875
    10. ')' → logprob: -21.125

Token 687: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -7.624555291840807e-05
    2. 'ick' → logprob: -9.500076293945312
    3. 'ck' → logprob: -14.250076293945312
    4. 'ics' → logprob: -14.875076293945312
    5. 'ik' → logprob: -15.750076293945312
    6. 'ICKS' → logprob: -16.125076293945312
    7. 'acks' → logprob: -17.375076293945312
    8. 'ic' → logprob: -18.250076293945312
    9. 'ticks' → logprob: -18.375076293945312
    10. 'iks' → logprob: -18.500076293945312

Token 688: 'ort' (ID: 390)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0011708177626132965
    2. 'ort' → logprob: -6.751170635223389
    3. 'sorted' → logprob: -15.251171112060547
    4. 'Sort' → logprob: -15.626171112060547
    5. '_sort' → logprob: -15.751171112060547
    6. ' sort' → logprob: -16.751171112060547
    7. 'orts' → logprob: -17.126171112060547
    8. 's' → logprob: -18.126171112060547
    9. '.sort' → logprob: -18.751171112060547
    10. '(sort' → logprob: -19.001171112060547

Token 689: ''
' (ID: 2207)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.18122932314872742
    2. '(H' → logprob: -2.43122935295105
    3. 'sorted' → logprob: -3.43122935295105
    4. ' =' → logprob: -4.056229114532471
    5. ')' → logprob: -4.556229114532471
    6. '=' → logprob: -4.806229114532471
    7. ',' → logprob: -6.556229114532471
    8. '(' → logprob: -6.556229114532471
    9. 's' → logprob: -6.681229114532471
    10. '_sorted' → logprob: -6.806229114532471

Token 690: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.000712670327629894
    2. 'sorted' → logprob: -7.250712871551514
    3. ' H' → logprob: -13.375712394714355
    4. 'Hs' → logprob: -14.750712394714355
    5. 'h' → logprob: -15.500712394714355
    6. 'Sorted' → logprob: -15.875712394714355
    7. 'ans' → logprob: -16.375713348388672
    8. '```' → logprob: -16.500713348388672
    9. 'HS' → logprob: -16.750713348388672
    10. 'sort' → logprob: -17.375713348388672

Token 691: ' Après' (ID: 47562)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0036257237661629915
    2. 'sorted' → logprob: -5.628625869750977
    3. ' H' → logprob: -11.378625869750977
    4. 'ans' → logprob: -11.878625869750977
    5. 'h' → logprob: -13.253625869750977
    6. 'Hs' → logprob: -13.503625869750977
    7. 'Sorted' → logprob: -14.128625869750977
    8. 'result' → logprob: -14.628625869750977
    9. 'sort' → logprob: -14.878625869750977
    10. 'HS' → logprob: -15.128625869750977

Token 692: ' cette' (ID: 7696)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005200081970542669
    2. 'tri' → logprob: -6.130199909210205
    3. ' =' → logprob: -6.880199909210205
    4. '=' → logprob: -7.630199909210205
    5. 'sorted' → logprob: -7.630199909210205
    6. ' H' → logprob: -7.880199909210205
    7. 'tr' → logprob: -8.380200386047363
    8. 'sorting' → logprob: -8.880200386047363
    9. ' tri' → logprob: -9.755200386047363
    10. 'la' → logprob: -9.755200386047363

Token 693: ' étape' (ID: 83661)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3744618594646454
    2. 'ligne' → logprob: -1.6244618892669678
    3. ' ligne' → logprob: -3.2494618892669678
    4. '=' → logprob: -3.2494618892669678
    5. 'tri' → logprob: -4.374461650848389
    6. ' =' → logprob: -5.124461650848389
    7. '#' → logprob: -5.249461650848389
    8. 'line' → logprob: -5.499461650848389
    9. ' H' → logprob: -5.749461650848389
    10. ':' → logprob: -6.499461650848389

Token 694: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18129892647266388
    2. 'H' → logprob: -1.8062989711761475
    3. ':' → logprob: -7.431298732757568
    4. ',
' → logprob: -8.056299209594727
    5. '=' → logprob: -8.306299209594727
    6. ' =' → logprob: -9.056299209594727
    7. 'sorted' → logprob: -9.181299209594727
    8. ',H' → logprob: -9.806299209594727
    9. ':
' → logprob: -10.306299209594727
    10. ' H' → logprob: -10.806299209594727

Token 695: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00013679367839358747
    2. ' H' → logprob: -9.500136375427246
    3. 'sorted' → logprob: -9.750136375427246
    4. '#' → logprob: -13.625136375427246
    5. '   ' → logprob: -14.125136375427246
    6. '```' → logprob: -15.250136375427246
    7. ' ' → logprob: -15.375136375427246
    8. 'h' → logprob: -15.625136375427246
    9. '
' → logprob: -15.750136375427246
    10. 'Hs' → logprob: -16.250137329101562

Token 696: ' contient' (ID: 89067)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788901224732399
    2. ' =' → logprob: -2.578890085220337
    3. '＝' → logprob: -14.953889846801758
    4. '=

' → logprob: -16.828889846801758
    5. ' ' → logprob: -17.203889846801758
    6. 'H' → logprob: -17.703889846801758
    7. '[:]' → logprob: -17.953889846801758
    8. ',' → logprob: -17.953889846801758
    9. '.=' → logprob: -18.578889846801758
    10. ')' → logprob: -19.203889846801758

Token 697: ' les' (ID: 1341)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.004513550084084272
    2. ' qu' → logprob: -6.254513740539551
    3. '(qu' → logprob: -7.004513740539551
    4. 'sorted' → logprob: -7.629513740539551
    5. 'le' → logprob: -8.25451374053955
    6. ' la' → logprob: -8.50451374053955
    7. '=' → logprob: -8.62951374053955
    8. 'the' → logprob: -8.87951374053955
    9. 'la' → logprob: -9.00451374053955
    10. ' =' → logprob: -9.25451374053955

Token 698: ' mêmes' (ID: 71634)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.8027585744857788
    2. 'élé' → logprob: -1.6777585744857788
    3. ' elements' → logprob: -2.6777586936950684
    4. 'sorted' → logprob: -2.8027586936950684
    5. ' éléments' → logprob: -3.0527586936950684
    6. 'val' → logprob: -3.0527586936950684
    7. ' valeurs' → logprob: -3.1777586936950684
    8. 'elements' → logprob: -3.6777586936950684
    9. ' sorted' → logprob: -3.9277586936950684
    10. 'ha' → logprob: -4.052758693695068

Token 699: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.47792476415634155
    2. ' elements' → logprob: -1.9779248237609863
    3. 'élé' → logprob: -2.1029248237609863
    4. 'elements' → logprob: -2.9779248237609863
    5. ' H' → logprob: -3.4779248237609863
    6. ' valeurs' → logprob: -3.9779248237609863
    7. 'H' → logprob: -4.102924823760986
    8. 'val' → logprob: -7.102924823760986
    9. 'values' → logprob: -7.852924823760986
    10. 'element' → logprob: -8.477924346923828

Token 700: ' que' (ID: 661)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760082006454468
    2. ' =' → logprob: -0.8260082006454468
    3. 'H' → logprob: -9.826007843017578
    4. ' H' → logprob: -12.326007843017578
    5. 'sorted' → logprob: -12.326007843017578
    6. ',' → logprob: -12.826007843017578
    7. ' ' → logprob: -13.701007843017578
    8. ' sorted' → logprob: -14.201007843017578
    9. '＝' → logprob: -15.076007843017578
    10. 's' → logprob: -15.701007843017578

Token 701: ' précéd' (ID: 55435)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.026954980567097664
    2. 'H' → logprob: -4.5269551277160645
    3. ' qu' → logprob: -4.9019551277160645
    4. 'sorted' → logprob: -5.6519551277160645
    5. ' H' → logprob: -6.6519551277160645
    6. ' la' → logprob: -6.7769551277160645
    7. 'la' → logprob: -7.6519551277160645
    8. ' sorted' → logprob: -7.7769551277160645
    9. 'before' → logprob: -8.026954650878906
    10. 'tr' → logprob: -8.526954650878906

Token 702: 'emment' (ID: 58019)
  Prédit: 'emment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emment' → logprob: -0.3272072970867157
    2. 'ente' → logprob: -1.577207326889038
    3. 'é' → logprob: -4.077207088470459
    4. 'que' → logprob: -4.452207088470459
    5. '#' → logprob: -4.577207088470459
    6. 'ent' → logprob: -4.827207088470459
    7. 'ée' → logprob: -5.077207088470459
    8. 'entes' → logprob: -6.077207088470459
    9. 'ents' → logprob: -6.077207088470459
    10. '`' → logprob: -6.077207088470459

Token 703: ' mais' (ID: 2899)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2575443387031555
    2. ' =' → logprob: -1.5075442790985107
    3. 'H' → logprob: -5.25754451751709
    4. ',' → logprob: -7.88254451751709
    5. ' H' → logprob: -12.00754451751709
    6. ' ' → logprob: -13.25754451751709
    7. ' but' → logprob: -13.63254451751709
    8. '#' → logprob: -14.25754451751709
    9. '   ' → logprob: -14.50754451751709
    10. 'sorted' → logprob: -14.50754451751709

Token 704: ' rang' (ID: 32287)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.28223180770874023
    2. 'tri' → logprob: -2.1572318077087402
    3. 'H' → logprob: -2.7822318077087402
    4. ' est' → logprob: -3.9072318077087402
    5. ' H' → logprob: -4.28223180770874
    6. 'est' → logprob: -4.53223180770874
    7. 'tr' → logprob: -5.15723180770874
    8. 'sorted' → logprob: -5.53223180770874
    9. 's' → logprob: -5.78223180770874
    10. ' =' → logprob: -6.53223180770874

Token 705: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.007864381186664104
    2. 'ée' → logprob: -4.882864475250244
    3. 'é' → logprob: -8.632863998413086
    4. 'es' → logprob: -10.257863998413086
    5. 'e' → logprob: -11.132863998413086
    6. '#' → logprob: -11.507863998413086
    7. 'ed' → logprob: -12.257863998413086
    8. 'ès' → logprob: -12.632863998413086
    9. '[' → logprob: -12.882863998413086
    10. 'ées' → logprob: -13.257863998413086

Token 706: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1805392950773239
    2. '=' → logprob: -1.8055392503738403
    3. ' H' → logprob: -8.18053913116455
    4. 'H' → logprob: -8.30553913116455
    5. '(H' → logprob: -9.30553913116455
    6. '   ' → logprob: -9.55553913116455
    7. 'sorted' → logprob: -10.43053913116455
    8. '[:]' → logprob: -11.05553913116455
    9. '(sorted' → logprob: -11.43053913116455
    10. ' en' → logprob: -12.05553913116455

Token 707: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.696532666683197
    2. ' ordre' → logprob: -0.696532666683197
    3. 'cro' → logprob: -5.946532726287842
    4. 'val' → logprob: -7.446532726287842
    5. ''ordre' → logprob: -9.321532249450684
    6. ' valeur' → logprob: -10.446532249450684
    7. 'order' → logprob: -11.321532249450684
    8. 'H' → logprob: -11.571532249450684
    9. ' H' → logprob: -11.696532249450684
    10. ' order' → logprob: -11.946532249450684

Token 708: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.08101792633533478
    2. ' cro' → logprob: -2.5810179710388184
    3. 'cres' → logprob: -7.581017971038818
    4. ' ascending' → logprob: -7.831017971038818
    5. ' asc' → logprob: -8.20601749420166
    6. 'asc' → logprob: -8.33101749420166
    7. 'sorted' → logprob: -8.95601749420166
    8. ' sorted' → logprob: -9.08101749420166
    9. 'ascending' → logprob: -9.20601749420166
    10. ' =' → logprob: -9.20601749420166

Token 709: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.3206351697444916
    2. 'issante' → logprob: -1.320635199546814
    3. 'issance' → logprob: -4.9456353187561035
    4. 'iss' → logprob: -9.570634841918945
    5. 'issants' → logprob: -9.570634841918945
    6. 'ss' → logprob: -10.445634841918945
    7. 'issa' → logprob: -11.320634841918945
    8. 'nt' → logprob: -11.820634841918945
    9. 'is' → logprob: -11.945634841918945
    10. 'ass' → logprob: -11.945634841918945

Token 710: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04875961318612099
    2. '=' → logprob: -3.298759698867798
    3. ' =' → logprob: -4.548759460449219
    4. ' H' → logprob: -9.673759460449219
    5. ',' → logprob: -11.423759460449219
    6. '[' → logprob: -12.673759460449219
    7. '(H' → logprob: -14.048759460449219
    8. '=
' → logprob: -14.298759460449219
    9. ':' → logprob: -14.673759460449219
    10. '.' → logprob: -14.673759460449219

Token 711: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -3.5597102396423e-05
    2. ' H' → logprob: -10.250035285949707
    3. '
' → logprob: -16.625036239624023
    4. ' =' → logprob: -16.875036239624023
    5. '=' → logprob: -17.500036239624023
    6. '#' → logprob: -18.625036239624023
    7. 'sorted' → logprob: -18.625036239624023
    8. '```' → logprob: -19.125036239624023
    9. '`' → logprob: -20.250036239624023
    10. ',' → logprob: -20.750036239624023

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '＝' → logprob: -17.423587799072266
    4. '=

' → logprob: -17.923587799072266
    5. '[:]' → logprob: -19.298587799072266
    6. 'H' → logprob: -19.548587799072266
    7. 'sorted' → logprob: -19.548587799072266
    8. '.=' → logprob: -19.673587799072266
    9. ' ' → logprob: -20.798587799072266
    10. '=
' → logprob: -21.048587799072266

Token 713: ' quick' (ID: 4853)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.0016134120523929596
    2. 'quick' → logprob: -6.751613616943359
    3. ' quick' → logprob: -7.751613616943359
    4. ' qu' → logprob: -11.37661361694336
    5. '(qu' → logprob: -14.62661361694336
    6. '_qu' → logprob: -15.00161361694336
    7. 'q' → logprob: -15.37661361694336
    8. 'Qu' → logprob: -15.37661361694336
    9. 'que' → logprob: -16.37661361694336
    10. 'sorted' → logprob: -16.50161361694336

Token 714: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.3856492842023727e-06
    2. 'sorted' → logprob: -13.750000953674316
    3. 's' → logprob: -16.250001907348633
    4. 'qu' → logprob: -16.875001907348633
    5. ' sort' → logprob: -16.875001907348633
    6. 'H' → logprob: -18.125001907348633
    7. '(sort' → logprob: -18.375001907348633
    8. '_sort' → logprob: -18.375001907348633
    9. '.sort' → logprob: -19.125001907348633
    10. '	sort' → logprob: -19.375001907348633

Token 715: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. ' (' → logprob: -17.500001907348633
    4. '(h' → logprob: -18.375001907348633
    5. 'H' → logprob: -18.625001907348633
    6. '([' → logprob: -19.000001907348633
    7. '((' → logprob: -20.375001907348633
    8. '(A' → logprob: -20.875001907348633
    9. '(
' → logprob: -21.250001907348633
    10. '(N' → logprob: -22.125001907348633

Token 716: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2842308680992573e-05
    2. '())' → logprob: -11.625022888183594
    3. '()' → logprob: -11.750022888183594
    4. ' )' → logprob: -13.000022888183594
    5. ')
' → logprob: -13.125022888183594
    6. '(' → logprob: -14.250022888183594
    7. ')#' → logprob: -14.875022888183594
    8. '))' → logprob: -15.125022888183594
    9. '(H' → logprob: -15.500022888183594
    10. ')

' → logprob: -15.875022888183594

Token 717: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014324389398097992
    2. 'ans' → logprob: -4.264324188232422
    3. '#' → logprob: -8.889324188232422
    4. ' for' → logprob: -11.639324188232422
    5. 'print' → logprob: -12.514324188232422
    6. 'answer' → logprob: -12.889324188232422
    7. 'while' → logprob: -13.014324188232422
    8. '```' → logprob: -13.639324188232422
    9. '(ans' → logprob: -13.764324188232422
    10. 'K' → logprob: -14.264324188232422

Token 718: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02136630192399025
    2. 'ans' → logprob: -3.8963663578033447
    3. '#' → logprob: -7.146366119384766
    4. 'K' → logprob: -11.271366119384766
    5. 'print' → logprob: -12.146366119384766
    6. 'answer' → logprob: -12.396366119384766
    7. 'while' → logprob: -13.271366119384766
    8. 'sum' → logprob: -13.271366119384766
    9. 'if' → logprob: -13.396366119384766
    10. ' for' → logprob: -13.646366119384766

Token 719: 'ourt' (ID: 38600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03302768990397453
    2. 'our' → logprob: -3.6580276489257812
    3. ' for' → logprob: -5.533027648925781
    4. 'ort' → logprob: -6.658027648925781
    5. 'or' → logprob: -7.158027648925781
    6. 'orter' → logprob: -8.283027648925781
    7. 'ours' → logprob: -8.408027648925781
    8. 'ourt' → logprob: -9.283027648925781
    9. '#' → logprob: -10.783027648925781
    10. 'orer' → logprob: -10.783027648925781

Token 720: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5797603130340576
    2. '(H' → logprob: -1.9547603130340576
    3. '(range' → logprob: -2.0797603130340576
    4. 'H' → logprob: -2.3297603130340576
    5. ' range' → logprob: -2.5797603130340576
    6. ' H' → logprob: -8.579760551452637
    7. '(' → logprob: -9.579760551452637
    8. 'Range' → logprob: -10.954760551452637
    9. '	range' → logprob: -12.329760551452637
    10. '_range' → logprob: -12.704760551452637

Token 721: ' N' (ID: 478)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018530098721385002
    2. ' range' → logprob: -5.018529891967773
    3. 'H' → logprob: -5.143529891967773
    4. 'K' → logprob: -5.143529891967773
    5. 'i' → logprob: -9.893529891967773
    6. '(range' → logprob: -11.893529891967773
    7. 'for' → logprob: -12.393529891967773
    8. ' H' → logprob: -12.518529891967773
    9. ' K' → logprob: -13.143529891967773
    10. '[K' → logprob: -14.018529891967773

Token 722: '-K' (ID: 12249)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25125575065612793
    2. ' -' → logprob: -2.751255750656128
    3. '-K' → logprob: -3.251255750656128
    4. 'range' → logprob: -3.501255750656128
    5. ':' → logprob: -3.751255750656128
    6. '-range' → logprob: -3.876255750656128
    7. ' range' → logprob: -4.501255989074707
    8. '-k' → logprob: -4.501255989074707
    9. 'for' → logprob: -4.751255989074707
    10. '-H' → logprob: -5.376255989074707

Token 723: ' premiers' (ID: 59140)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5604526996612549
    2. 'range' → logprob: -1.9354526996612549
    3. 'elements' → logprob: -2.560452699661255
    4. ' elements' → logprob: -2.685452699661255
    5. ' range' → logprob: -2.810452699661255
    6. 'for' → logprob: -2.935452699661255
    7. '-H' → logprob: -3.060452699661255
    8. ')' → logprob: -3.185452699661255
    9. ' -' → logprob: -3.435452699661255
    10. ':' → logprob: -3.435452699661255

Token 724: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.2543030381202698
    2. 'H' → logprob: -2.629302978515625
    3. ' éléments' → logprob: -2.629302978515625
    4. 'elements' → logprob: -3.379302978515625
    5. '(H' → logprob: -3.879302978515625
    6. 'for' → logprob: -5.129302978515625
    7. 'range' → logprob: -5.129302978515625
    8. ' elements' → logprob: -5.254302978515625
    9. ' H' → logprob: -6.129302978515625
    10. 'elem' → logprob: -7.129302978515625

Token 725: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027048148214817047
    2. 'range' → logprob: -3.777048110961914
    3. ' for' → logprob: -6.652048110961914
    4. 'H' → logprob: -6.652048110961914
    5. '[:' → logprob: -7.027048110961914
    6. '(range' → logprob: -9.402048110961914
    7. '(H' → logprob: -9.527048110961914
    8. ' range' → logprob: -9.652048110961914
    9. ':' → logprob: -10.402048110961914
    10. '[:-' → logprob: -10.527048110961914

Token 726: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0010143491672351956
    2. 'range' → logprob: -7.126014232635498
    3. ' H' → logprob: -8.751014709472656
    4. ' range' → logprob: -9.876014709472656
    5. 'for' → logprob: -16.626014709472656
    6. '(range' → logprob: -16.751014709472656
    7. 'la' → logprob: -17.126014709472656
    8. '(H' → logprob: -17.251014709472656
    9. '```' → logprob: -17.376014709472656
    10. 'enumer' → logprob: -17.751014709472656

Token 727: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.001347138429991901
    2. 'range' → logprob: -6.626347064971924
    3. ' range' → logprob: -11.501347541809082
    4. ' H' → logprob: -12.126347541809082
    5. 'for' → logprob: -12.126347541809082
    6. '(range' → logprob: -16.376346588134766
    7. 'h' → logprob: -17.001346588134766
    8. '```' → logprob: -17.501346588134766
    9. 'Range' → logprob: -17.626346588134766
    10. 'list' → logprob: -17.626346588134766

Token 728: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1214415580034256
    2. 'for' → logprob: -2.746441602706909
    3. 'range' → logprob: -3.246441602706909
    4. '(H' → logprob: -4.74644136428833
    5. '(range' → logprob: -6.49644136428833
    6. ' range' → logprob: -7.37144136428833
    7. ' for' → logprob: -8.496441841125488
    8. ' H' → logprob: -9.246441841125488
    9. '(' → logprob: -9.246441841125488
    10. '[:' → logprob: -9.996441841125488

Token 729: ' tri' (ID: 12665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007048417814075947
    2. '[:' → logprob: -5.007048606872559
    3. ' for' → logprob: -8.882048606872559
    4. '[:-' → logprob: -9.132048606872559
    5. ':' → logprob: -10.257048606872559
    6. 'range' → logprob: -10.382048606872559
    7. '[' → logprob: -11.007048606872559
    8. ':
' → logprob: -13.382048606872559
    9. 'H' → logprob: -14.382048606872559
    10. '[::-' → logprob: -15.132048606872559

Token 730: 'ée' (ID: 2894)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.7603411674499512
    2. '[:-' → logprob: -1.0103411674499512
    3. 'H' → logprob: -2.385341167449951
    4. 'range' → logprob: -4.135341167449951
    5. '(H' → logprob: -4.385341167449951
    6. '   ' → logprob: -4.635341167449951
    7. 'ange' → logprob: -4.760341167449951
    8. ' H' → logprob: -4.760341167449951
    9. ':H' → logprob: -4.885341167449951
    10. '[' → logprob: -5.135341167449951

Token 731: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08622745424509048
    2. '[:' → logprob: -2.5862274169921875
    3. 'range' → logprob: -6.0862274169921875
    4. ':' → logprob: -6.2112274169921875
    5. '[:-' → logprob: -6.3362274169921875
    6. ':
' → logprob: -7.2112274169921875
    7. ' for' → logprob: -8.086227416992188
    8. 'H' → logprob: -9.461227416992188
    9. '[' → logprob: -9.461227416992188
    10. '(range' → logprob: -10.211227416992188

Token 732: 'c' (ID: 66)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3234004080295563
    2. 'H' → logprob: -1.6984003782272339
    3. 'for' → logprob: -2.5734004974365234
    4. ' range' → logprob: -4.823400497436523
    5. '[:' → logprob: -4.948400497436523
    6. ' for' → logprob: -7.573400497436523
    7. '[:-' → logprob: -7.573400497436523
    8. ')' → logprob: -8.323400497436523
    9. '(range' → logprob: -8.698400497436523
    10. ' H' → logprob: -8.948400497436523

Token 733: ''est' (ID: 6616)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.263515591621399
    2. 'H' → logprob: -1.263515591621399
    3. '[:' → logprob: -1.638515591621399
    4. '[:-' → logprob: -2.5135154724121094
    5. 'range' → logprob: -2.7635154724121094
    6. ':H' → logprob: -3.8885154724121094
    7. ' range' → logprob: -4.138515472412109
    8. '=' → logprob: -4.388515472412109
    9. ':
' → logprob: -4.388515472412109
    10. ' H' → logprob: -5.013515472412109

Token 734: '-à' (ID: 56297)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3391528129577637
    2. ':' → logprob: -1.7141528129577637
    3. 'for' → logprob: -1.7141528129577637
    4. 'N' → logprob: -2.0891528129577637
    5. 'H' → logprob: -2.5891528129577637
    6. ' range' → logprob: -2.7141528129577637
    7. '   ' → logprob: -3.5891528129577637
    8. ' N' → logprob: -3.8391528129577637
    9. ' H' → logprob: -4.589152812957764
    10. ' for' → logprob: -4.714152812957764

Token 735: '-dire' (ID: 76064)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16878008842468262
    2. 'H' → logprob: -2.0437800884246826
    3. 'for' → logprob: -5.043780326843262
    4. 'N' → logprob: -5.168780326843262
    5. ' range' → logprob: -5.418780326843262
    6. '#' → logprob: -6.168780326843262
    7. 'part' → logprob: -7.168780326843262
    8. 's' → logprob: -7.293780326843262
    9. ':' → logprob: -7.418780326843262
    10. 'la' → logprob: -7.543780326843262

Token 736: ' les' (ID: 1341)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3217815160751343
    2. ' range' → logprob: -2.071781635284424
    3. 'range' → logprob: -2.196781635284424
    4. ' H' → logprob: -3.321781635284424
    5. 'for' → logprob: -7.196781635284424
    6. '   ' → logprob: -7.571781635284424
    7. ' for' → logprob: -7.696781635284424
    8. ' ' → logprob: -8.946781158447266
    9. '(range' → logprob: -10.196781158447266
    10. '  ' → logprob: -11.821781158447266

Token 737: ' plus' (ID: 2932)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2490522712469101
    2. 'N' → logprob: -2.4990522861480713
    3. '0' → logprob: -2.7490522861480713
    4. 'K' → logprob: -3.4990522861480713
    5. '[:' → logprob: -4.249052047729492
    6. ':' → logprob: -4.499052047729492
    7. 'range' → logprob: -5.249052047729492
    8. 'for' → logprob: -5.624052047729492
    9. '[:-' → logprob: -5.749052047729492
    10. ':H' → logprob: -6.249052047729492

Token 738: ' petits' (ID: 38141)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.01300551276654005
    2. ' petits' → logprob: -4.51300573348999
    3. 'bas' → logprob: -7.13800573348999
    4. 'gr' → logprob: -8.263005256652832
    5. ' petites' → logprob: -8.388005256652832
    6. 'b' → logprob: -8.513005256652832
    7. ' petit' → logprob: -9.263005256652832
    8. '_pet' → logprob: -9.388005256652832
    9. 'Pet' → logprob: -10.138005256652832
    10. 'import' → logprob: -10.388005256652832

Token 739: ' éléments' (ID: 57375)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.06950594484806061
    2. 'H' → logprob: -3.3195059299468994
    3. '):' → logprob: -4.9445061683654785
    4. ':' → logprob: -5.4445061683654785
    5. '(' → logprob: -5.4445061683654785
    6. ')' → logprob: -5.5695061683654785
    7. '():' → logprob: -5.8195061683654785
    8. '(N' → logprob: -6.0695061683654785
    9. '):
' → logprob: -6.4445061683654785
    10. '()' → logprob: -6.9445061683654785

Token 740: ')
' (ID: 446)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.004310480318963528
    2. '[:-' → logprob: -5.754310607910156
    3. '[' → logprob: -7.129310607910156
    4. 'H' → logprob: -9.254310607910156
    5. ')' → logprob: -9.379310607910156
    6. ':' → logprob: -10.254310607910156
    7. ' [:' → logprob: -10.879310607910156
    8. '   ' → logprob: -10.879310607910156
    9. '][:' → logprob: -10.879310607910156
    10. ',' → logprob: -11.129310607910156

Token 741: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.1782583391759545e-05
    2. ' for' → logprob: -10.500031471252441
    3. 'range' → logprob: -12.375031471252441
    4. '[:' → logprob: -17.125032424926758
    5. ' range' → logprob: -19.125032424926758
    6. '```' → logprob: -20.125032424926758
    7. '
' → logprob: -20.250032424926758
    8. '[' → logprob: -20.250032424926758
    9. '(range' → logprob: -20.625032424926758
    10. '	for' → logprob: -20.875032424926758

Token 742: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22577697038650513
    2. ' i' → logprob: -1.6007769107818604
    3. 'h' → logprob: -8.100776672363281
    4. ' h' → logprob: -10.350776672363281
    5. 'height' → logprob: -11.600776672363281
    6. ' height' → logprob: -12.100776672363281
    7. ' ' → logprob: -12.350776672363281
    8. 'x' → logprob: -12.725776672363281
    9. '   ' → logprob: -13.475776672363281
    10. ' _' → logprob: -13.850776672363281

Token 743: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6326854825019836
    2. ' in' → logprob: -0.7576854825019836
    3. ' ' → logprob: -9.882685661315918
    4. 'n' → logprob: -11.882685661315918
    5. ' ' → logprob: -12.257685661315918
    6. 's' → logprob: -12.507685661315918
    7. '_in' → logprob: -12.882685661315918
    8. '  ' → logprob: -13.007685661315918
    9. 'i' → logprob: -13.132685661315918
    10. '	in' → logprob: -13.257685661315918

Token 744: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0827087014913559
    2. ' range' → logprob: -2.5827085971832275
    3. 'H' → logprob: -5.582708835601807
    4. ' H' → logprob: -9.957708358764648
    5. '(range' → logprob: -13.457708358764648
    6. 'Range' → logprob: -15.832708358764648
    7. '	range' → logprob: -15.832708358764648
    8. ' ' → logprob: -16.95770835876465
    9. 'rang' → logprob: -17.64520835876465
    10. 'ran' → logprob: -18.14520835876465

Token 745: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0004390134708955884
    2. '(' → logprob: -7.750439167022705
    3. ' (' → logprob: -11.875438690185547
    4. '(n' → logprob: -14.125438690185547
    5. '(
' → logprob: -15.250438690185547
    6. '((' → logprob: -15.750438690185547
    7. 'N' → logprob: -16.125438690185547
    8. '(int' → logprob: -18.625438690185547
    9. '(M' → logprob: -18.875438690185547
    10. ' N' → logprob: -18.875438690185547

Token 746: '-K' (ID: 12249)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.49070391058921814
    2. '-' → logprob: -0.9907039403915405
    3. '-K' → logprob: -4.11570405960083
    4. ' ' → logprob: -8.740703582763672
    5. '-k' → logprob: -12.490703582763672
    6. ' ' → logprob: -12.740703582763672
    7. ')' → logprob: -12.865703582763672
    8. '   ' → logprob: -13.240703582763672
    9. ' K' → logprob: -13.865703582763672
    10. '  ' → logprob: -14.615703582763672

Token 747: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000400521676056087
    2. '):
' → logprob: -7.875400543212891
    3. ')' → logprob: -11.37540054321289
    4. ' ):' → logprob: -11.87540054321289
    5. '):
' → logprob: -13.62540054321289
    6. ':' → logprob: -14.75040054321289
    7. '):

' → logprob: -15.25040054321289
    8. ']:' → logprob: -17.75040054321289
    9. ')):' → logprob: -17.75040054321289
    10. ']):' → logprob: -17.87540054321289

Token 748: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10357217490673065
    2. '   ' → logprob: -2.353572130203247
    3. ' ans' → logprob: -6.228572368621826
    4. '	ans' → logprob: -6.603572368621826
    5. '```' → logprob: -11.353571891784668
    6. '(ans' → logprob: -11.728571891784668
    7. '_ans' → logprob: -12.353571891784668
    8. '
' → logprob: -13.103571891784668
    9. '  ' → logprob: -13.603571891784668
    10. '``' → logprob: -13.728571891784668

Token 749: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9146995327901095e-05
    2. ' ans' → logprob: -11.500019073486328
    3. '   ' → logprob: -11.750019073486328
    4. '	ans' → logprob: -13.750019073486328
    5. '_ans' → logprob: -18.000019073486328
    6. '(ans' → logprob: -18.625019073486328
    7. '    
' → logprob: -18.750019073486328
    8. '
' → logprob: -19.750019073486328
    9. 'Ans' → logprob: -19.875019073486328
    10. 'answer' → logprob: -20.375019073486328

Token 750: ' Aj' (ID: 28294)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -13.875001907348633
    3. ' ans' → logprob: -13.875001907348633
    4. '	ans' → logprob: -15.875001907348633
    5. '(ans' → logprob: -20.000001907348633
    6. 'Ans' → logprob: -21.125001907348633
    7. '_ans' → logprob: -21.125001907348633
    8. '#' → logprob: -21.250001907348633
    9. '  ' → logprob: -21.375001907348633
    10. 'ann' → logprob: -21.875001907348633

Token 751: 'oute' (ID: 3509)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8253945112228394
    2. 'ans' → logprob: -1.4503945112228394
    3. '+=' → logprob: -2.200394630432129
    4. 'out' → logprob: -2.450394630432129
    5. 'outez' → logprob: -3.575394630432129
    6. '=' → logprob: -3.825394630432129
    7. '   ' → logprob: -4.075394630432129
    8. 'outer' → logprob: -4.825394630432129
    9. '#' → logprob: -4.825394630432129
    10. ' ans' → logprob: -4.950394630432129

Token 752: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.001102587440982461
    2. ' H' → logprob: -6.876102447509766
    3. '(H' → logprob: -9.626102447509766
    4. 'ans' → logprob: -12.751102447509766
    5. '   ' → logprob: -14.126102447509766
    6. ' ans' → logprob: -16.626102447509766
    7. '	H' → logprob: -16.751102447509766
    8. '(ans' → logprob: -16.876102447509766
    9. 'int' → logprob: -17.126102447509766
    10. 'i' → logprob: -17.626102447509766

Token 753: ' valeur' (ID: 41664)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.584239938296378e-06
    2. ' H' → logprob: -12.000007629394531
    3. 'ans' → logprob: -14.125007629394531
    4. 'i' → logprob: -14.375007629394531
    5. 'int' → logprob: -17.50000762939453
    6. '(H' → logprob: -17.87500762939453
    7. '   ' → logprob: -18.75000762939453
    8. '	H' → logprob: -19.75000762939453
    9. 'h' → logprob: -20.37500762939453
    10. 'a' → logprob: -20.50000762939453

Token 754: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1604502648115158
    2. '(H' → logprob: -1.9104502201080322
    3. ' H' → logprob: -8.910449981689453
    4. '(
' → logprob: -10.410449981689453
    5. 'i' → logprob: -10.910449981689453
    6. '(' → logprob: -11.410449981689453
    7. ' (' → logprob: -11.535449981689453
    8. '(i' → logprob: -11.785449981689453
    9. '   ' → logprob: -12.285449981689453
    10. 'ans' → logprob: -13.035449981689453

Token 755: ' chaque' (ID: 21194)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00020354038861114532
    2. ' H' → logprob: -8.500203132629395
    3. '(H' → logprob: -18.37520408630371
    4. '	H' → logprob: -19.00020408630371
    5. '   ' → logprob: -20.12520408630371
    6. ' ' → logprob: -20.50020408630371
    7. 'i' → logprob: -20.50020408630371
    8. '_H' → logprob: -21.00020408630371
    9. '```' → logprob: -21.00020408630371
    10. 'h' → logprob: -21.75020408630371

Token 756: ' élément' (ID: 99627)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03825021907687187
    2. ' H' → logprob: -3.288250207901001
    3. 'i' → logprob: -8.913249969482422
    4. ' i' → logprob: -9.913249969482422
    5. '[i' → logprob: -11.538249969482422
    6. ' ' → logprob: -11.663249969482422
    7. ' ' → logprob: -12.288249969482422
    8. '[' → logprob: -14.538249969482422
    9. ' 
' → logprob: -15.538249969482422
    10. '	H' → logprob: -15.663249969482422

Token 757: ' à' (ID: 1221)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03971972316503525
    2. '(H' → logprob: -4.039719581604004
    3. ' H' → logprob: -4.414719581604004
    4. '[i' → logprob: -4.789719581604004
    5. '   ' → logprob: -8.664719581604004
    6. 'i' → logprob: -8.914719581604004
    7. '+' → logprob: -9.164719581604004
    8. '(i' → logprob: -9.289719581604004
    9. '[' → logprob: -9.539719581604004
    10. ' (' → logprob: -9.664719581604004

Token 758: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00013131031300872564
    2. ' ans' → logprob: -9.000131607055664
    3. 'i' → logprob: -12.375131607055664
    4. 'H' → logprob: -13.000131607055664
    5. '	ans' → logprob: -14.125131607055664
    6. '(ans' → logprob: -15.125131607055664
    7. 'a' → logprob: -16.375131607055664
    8. ' H' → logprob: -16.375131607055664
    9. 'answer' → logprob: -16.750131607055664
    10. '
' → logprob: -16.875131607055664

Token 759: ' variable' (ID: 11076)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.511406809295295e-06
    2. ' ans' → logprob: -12.125006675720215
    3. 'i' → logprob: -14.000006675720215
    4. 'answer' → logprob: -15.625006675720215
    5. '	ans' → logprob: -16.8750057220459
    6. '(ans' → logprob: -17.0000057220459
    7. 'H' → logprob: -18.1250057220459
    8. '
' → logprob: -18.5000057220459
    9. '_ans' → logprob: -19.1250057220459
    10. 'a' → logprob: -19.2500057220459

Token 760: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0019438649760559201
    2. ' ans' → logprob: -6.251944065093994
    3. 'i' → logprob: -11.376943588256836
    4. '(ans' → logprob: -13.001943588256836
    5. '	ans' → logprob: -14.376943588256836
    6. ' i' → logprob: -15.126943588256836
    7. '   ' → logprob: -15.626943588256836
    8. '`' → logprob: -15.876943588256836
    9. 'answer' → logprob: -16.376943588256836
    10. ' ' → logprob: -16.626943588256836

Token 761: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.273621405242011e-05
    2. ' ans' → logprob: -10.375032424926758
    3. 'answer' → logprob: -13.875032424926758
    4. '	ans' → logprob: -15.500032424926758
    5. 'i' → logprob: -16.375032424926758
    6. '(ans' → logprob: -16.500032424926758
    7. '_ans' → logprob: -16.500032424926758
    8. 'a' → logprob: -18.750032424926758
    9. 'ann' → logprob: -19.625032424926758
    10. 's' → logprob: -19.750032424926758

Token 762: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.28923141956329346
    2. ' ans' → logprob: -1.6642314195632935
    3. '   ' → logprob: -3.789231300354004
    4. '(ans' → logprob: -3.789231300354004
    5. ' +=' → logprob: -5.164231300354004
    6. 'H' → logprob: -5.539231300354004
    7. ' H' → logprob: -5.914231300354004
    8. '+=' → logprob: -6.164231300354004
    9. '	ans' → logprob: -7.289231300354004
    10. '+' → logprob: -7.664231300354004

Token 763: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.128163257315464e-07
    2. ' ans' → logprob: -15.125
    3. '	ans' → logprob: -19.5
    4. '(ans' → logprob: -20.375
    5. 'answer' → logprob: -20.75
    6. '_ans' → logprob: -21.875
    7. 'ann' → logprob: -22.625
    8. 'a' → logprob: -22.75
    9. 'ANS' → logprob: -23.875
    10. '```' → logprob: -23.875

Token 764: ''
' (ID: 2207)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1688765585422516
    2. '+=' → logprob: -2.0438766479492188
    3. '   ' → logprob: -3.9188766479492188
    4. '+' → logprob: -5.668876647949219
    5. ' +' → logprob: -6.418876647949219
    6. ')' → logprob: -7.793876647949219
    7. ']+=' → logprob: -8.543876647949219
    8. ' ans' → logprob: -8.668876647949219
    9. ')+' → logprob: -9.668876647949219
    10. '+i' → logprob: -10.543876647949219

Token 765: '   ' (ID: 271)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6052453517913818
    2. '   ' → logprob: -0.8552453517913818
    3. 'ans' → logprob: -3.605245351791382
    4. '	ans' → logprob: -6.480245590209961
    5. '(ans' → logprob: -8.980245590209961
    6. ' +=' → logprob: -11.105245590209961
    7. '_ans' → logprob: -11.480245590209961
    8. '+' → logprob: -12.480245590209961
    9. '  ' → logprob: -12.980245590209961
    10. ' +' → logprob: -13.855245590209961

Token 766: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -6.790129555156454e-05
    2. ' ans' → logprob: -10.000067710876465
    3. '   ' → logprob: -10.750067710876465
    4. '	ans' → logprob: -13.875067710876465
    5. '(ans' → logprob: -18.12506866455078
    6. 'answer' → logprob: -20.12506866455078
    7. '_ans' → logprob: -20.25006866455078
    8. '  ' → logprob: -20.37506866455078
    9. 'Ans' → logprob: -20.87506866455078
    10. ' ' → logprob: -21.00006866455078

Token 767: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519610524177551
    2. '+=' → logprob: -1.5019609928131104
    3. '+' → logprob: -10.501960754394531
    4. '   ' → logprob: -13.126960754394531
    5. '=' → logprob: -13.501960754394531
    6. ']+=' → logprob: -14.751960754394531
    7. '+="' → logprob: -15.501960754394531
    8. ' +' → logprob: -15.626960754394531
    9. ' =' → logprob: -16.00196075439453
    10. '+=(' → logprob: -16.25196075439453

Token 768: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0019286326132714748
    2. ' H' → logprob: -6.251928806304932
    3. '	H' → logprob: -18.001928329467773
    4. '   ' → logprob: -19.126928329467773
    5. '(H' → logprob: -19.876928329467773
    6. ' ' → logprob: -20.001928329467773
    7. ' ' → logprob: -20.501928329467773
    8. 'i' → logprob: -20.626928329467773
    9. '_H' → logprob: -21.501928329467773
    10. 'int' → logprob: -22.626928329467773

Token 769: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. 'i' → logprob: -20.25
    4. ' [' → logprob: -20.5
    5. '[
' → logprob: -21.5
    6. '[I' → logprob: -21.625
    7. '```' → logprob: -22.625
    8. '[int' → logprob: -22.625
    9. ' i' → logprob: -22.875
    10. ' ' → logprob: -23.375

Token 770: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02691911906003952
    2. ')' → logprob: -3.65191912651062
    3. ' ]' → logprob: -7.526918888092041
    4. '])' → logprob: -9.7769193649292
    5. ' )' → logprob: -11.4019193649292
    6. ']
' → logprob: -12.9019193649292
    7. ')]' → logprob: -12.9019193649292
    8. '+' → logprob: -13.2769193649292
    9. '[i' → logprob: -13.6519193649292
    10. '   ' → logprob: -13.7769193649292

Token 771: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7954958821064793e-05
    2. '
' → logprob: -11.000018119812012
    3. ' print' → logprob: -14.125018119812012
    4. '```' → logprob: -15.000018119812012
    5. '#' → logprob: -16.625017166137695
    6. ')' → logprob: -17.125017166137695
    7. '#print' → logprob: -17.375017166137695
    8. ')
' → logprob: -18.000017166137695
    9. '  
' → logprob: -18.750017166137695
    10. '(print' → logprob: -18.875017166137695

Token 772: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '#' → logprob: -18.0
    3. ' print' → logprob: -19.0
    4. '#print' → logprob: -22.0
    5. 'Print' → logprob: -26.5
    6. '```' → logprob: -26.625
    7. 'printf' → logprob: -26.875
    8. '	print' → logprob: -27.25
    9. 'prints' → logprob: -27.5
    10. 'pr' → logprob: -28.0

Token 773: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0002072357019642368
    2. 'icher' → logprob: -8.50020694732666
    3. 'ich' → logprob: -13.62520694732666
    4. 'print' → logprob: -14.12520694732666
    5. 'ichage' → logprob: -14.12520694732666
    6. '#' → logprob: -14.50020694732666
    7. 'ic' → logprob: -14.75020694732666
    8. 'ice' → logprob: -16.500207901000977
    9. 'che' → logprob: -17.250207901000977
    10. 'r' → logprob: -17.750207901000977

Token 774: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0015024791937321424
    2. 'ans' → logprob: -6.501502513885498
    3. '(' → logprob: -16.126502990722656
    4. ' ans' → logprob: -17.251502990722656
    5. '	ans' → logprob: -19.501502990722656
    6. 'ANS' → logprob: -21.251502990722656
    7. '_ans' → logprob: -21.501502990722656
    8. '(answer' → logprob: -22.376502990722656
    9. ' (' → logprob: -22.626502990722656
    10. 'Ans' → logprob: -22.626502990722656

Token 775: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04858953505754471
    2. '(ans' → logprob: -3.0485894680023193
    3. ' ans' → logprob: -13.298589706420898
    4. 'answer' → logprob: -15.673589706420898
    5. 'str' → logprob: -15.923589706420898
    6. '	ans' → logprob: -16.1735897064209
    7. 'print' → logprob: -17.4235897064209
    8. '(' → logprob: -17.4235897064209
    9. 'ANS' → logprob: -17.5485897064209
    10. '(str' → logprob: -17.5485897064209

Token 776: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. 'ans' → logprob: -17.25
    4. '(print' → logprob: -18.5
    5. '(ans' → logprob: -19.375
    6. '```' → logprob: -22.375
    7. '(' → logprob: -23.375
    8. 'pr' → logprob: -23.5
    9. 'prin' → logprob: -25.0
    10. 'Print' → logprob: -25.625

Token 777: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. '(print' → logprob: -22.0
    4. '```' → logprob: -22.875
    5. 'ans' → logprob: -23.5
    6. '
' → logprob: -25.75
    7. '.print' → logprob: -26.375
    8. 'Print' → logprob: -26.75
    9. '(ans' → logprob: -27.0
    10. '``' → logprob: -27.375

Token 778: ' qui' (ID: 2780)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.3915141355246305e-05
    2. ' ans' → logprob: -11.25002384185791
    3. 'print' → logprob: -11.75002384185791
    4. '(ans' → logprob: -12.75002384185791
    5. '	ans' → logprob: -19.000024795532227
    6. 'answer' → logprob: -20.750024795532227
    7. 'Ans' → logprob: -21.000024795532227
    8. 'ANS' → logprob: -21.500024795532227
    9. 'ann' → logprob: -21.500024795532227
    10. '_ans' → logprob: -21.500024795532227

Token 779: ' est' (ID: 893)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.21180203557014465
    2. ' ans' → logprob: -2.3368020057678223
    3. '(ans' → logprob: -3.2118020057678223
    4. ')' → logprob: -3.3368020057678223
    5. 'print' → logprob: -4.086802005767822
    6. ' )' → logprob: -7.836802005767822
    7. ' print' → logprob: -7.961802005767822
    8. '_ans' → logprob: -8.96180248260498
    9. '"' → logprob: -9.08680248260498
    10. ' ' → logprob: -9.21180248260498

Token 780: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002326224057469517
    2. '(ans' → logprob: -9.000232696533203
    3. ' ans' → logprob: -9.125232696533203
    4. '	ans' → logprob: -15.250232696533203
    5. '```' → logprob: -17.875232696533203
    6. 'print' → logprob: -18.000232696533203
    7. 'ann' → logprob: -18.125232696533203
    8. 'answer' → logprob: -18.375232696533203
    9. 'Ans' → logprob: -18.375232696533203
    10. 'ANS' → logprob: -18.625232696533203

Token 781: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.008129963040119e-06
    2. '(ans' → logprob: -13.250003814697266
    3. 'print' → logprob: -13.500003814697266
    4. ' ans' → logprob: -15.000003814697266
    5. 'str' → logprob: -15.625003814697266
    6. 'answer' → logprob: -16.625003814697266
    7. 'sum' → logprob: -16.625003814697266
    8. '	ans' → logprob: -17.875003814697266
    9. 'a' → logprob: -19.750003814697266
    10. '```' → logprob: -20.250003814697266

Token 782: ' des' (ID: 731)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -8.65707261255011e-06
    2. 'ans' → logprob: -11.750008583068848
    3. '(' → logprob: -14.250008583068848
    4. '(answer' → logprob: -17.000009536743164
    5. '	ans' → logprob: -17.375009536743164
    6. ' (' → logprob: -17.750009536743164
    7. 'print' → logprob: -18.625009536743164
    8. '(acc' → logprob: -19.125009536743164
    9. ')' → logprob: -19.375009536743164
    10. '```' → logprob: -19.625009536743164

Token 783: ' N' (ID: 478)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33905577659606934
    2. 'N' → logprob: -1.3390557765960693
    3. 'H' → logprob: -4.089056015014648
    4. ' N' → logprob: -5.714056015014648
    5. 'plus' → logprob: -6.214056015014648
    6. 'val' → logprob: -6.964056015014648
    7. ' ans' → logprob: -6.964056015014648
    8. '(ans' → logprob: -7.589056015014648
    9. '(N' → logprob: -7.714056015014648
    10. ' plus' → logprob: -9.214056015014648

Token 784: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.14294663071632385
    2. ' -' → logprob: -2.142946720123291
    3. '-' → logprob: -4.142946720123291
    4. '-k' → logprob: -12.017946243286133
    5. ' ' → logprob: -12.892946243286133
    6. 'K' → logprob: -13.267946243286133
    7. '−' → logprob: -13.267946243286133
    8. ' K' → logprob: -14.392946243286133
    9. '-К' → logprob: -14.642946243286133
    10. ' minus' → logprob: -14.892946243286133

Token 785: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.7752547264099121
    2. 'plus' → logprob: -0.9002547264099121
    3. ' premiers' → logprob: -2.775254726409912
    4. 'prem' → logprob: -2.900254726409912
    5. ' petits' → logprob: -5.275254726409912
    6. 'élé' → logprob: -5.400254726409912
    7. ' éléments' → logprob: -5.775254726409912
    8. ' ' → logprob: -7.525254726409912
    9. '+' → logprob: -7.525254726409912
    10. ' smallest' → logprob: -8.02525520324707

Token 786: ' petits' (ID: 38141)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.014593453146517277
    2. ' petits' → logprob: -4.264593601226807
    3. '_pet' → logprob: -8.639593124389648
    4. ' petites' → logprob: -9.764593124389648
    5. '```' → logprob: -9.764593124389648
    6. 'pets' → logprob: -10.389593124389648
    7. ' petit' → logprob: -10.764593124389648
    8. '   ' → logprob: -11.389593124389648
    9. 'prem' → logprob: -11.514593124389648
    10. 'import' → logprob: -12.139593124389648

Token 787: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.15779443085193634
    2. ' éléments' → logprob: -2.65779447555542
    3. 'H' → logprob: -3.53279447555542
    4. ' H' → logprob: -3.78279447555542
    5. 'elements' → logprob: -4.40779447555542
    6. ' elements' → logprob: -4.53279447555542
    7. '(H' → logprob: -8.282793998718262
    8. 'element' → logprob: -8.407793998718262
    9. 'é' → logprob: -9.157793998718262
    10. ' élément' → logprob: -9.532793998718262

Token 788: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.13388703338569e-06
    2. '(print' → logprob: -11.750009536743164
    3. '(ans' → logprob: -14.375009536743164
    4. '(' → logprob: -15.000009536743164
    5. ' print' → logprob: -15.000009536743164
    6. 'ans' → logprob: -16.750009536743164
    7. '```' → logprob: -17.125009536743164
    8. '
' → logprob: -20.250009536743164
    9. '.print' → logprob: -20.375009536743164
    10. 'pr' → logprob: -20.500009536743164

Token 789: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04207358509302139
    2. ' H' → logprob: -3.2920734882354736
    3. 'la' → logprob: -6.042073726654053
    4. ' la' → logprob: -6.417073726654053
    5. ' ' → logprob: -11.917073249816895
    6. 'l' → logprob: -12.792073249816895
    7. ' ' → logprob: -13.917073249816895
    8. '`' → logprob: -14.417073249816895
    9. ''H' → logprob: -14.417073249816895
    10. '```' → logprob: -14.917073249816895

Token 790: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0920066088438034
    2. 'liste' → logprob: -2.4670066833496094
    3. ' H' → logprob: -6.342006683349609
    4. 'list' → logprob: -7.092006683349609
    5. ' liste' → logprob: -7.842006683349609
    6. 'lista' → logprob: -10.84200668334961
    7. '```' → logprob: -11.96700668334961
    8. 'lis' → logprob: -12.09200668334961
    9. '"H' → logprob: -12.21700668334961
    10. 'val' → logprob: -12.46700668334961

Token 791: ' H' (ID: 487)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.011914950795471668
    2. 'ans' → logprob: -5.0119147300720215
    3. 'print' → logprob: -5.2619147300720215
    4. '(print' → logprob: -14.26191520690918
    5. ' ans' → logprob: -18.13691520690918
    6. '(' → logprob: -18.13691520690918
    7. 'ANS' → logprob: -19.88691520690918
    8. '(answer' → logprob: -20.63691520690918
    9. '_ans' → logprob: -20.63691520690918
    10. '	ans' → logprob: -20.76191520690918

Token 792: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.25
    3. '```' → logprob: -20.5
    4. '(print' → logprob: -23.625
    5. '
' → logprob: -24.125
    6. '.print' → logprob: -24.625
    7. '``' → logprob: -25.5
    8. 'Print' → logprob: -26.5
    9. '	print' → logprob: -26.5
    10. '#print' → logprob: -26.625

Token 793: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '```' → logprob: -20.0
    4. '``' → logprob: -26.375
    5. '(print' → logprob: -26.875
    6. '.print' → logprob: -27.875
    7. '	print' → logprob: -27.875
    8. '#print' → logprob: -28.0
    9. 'Print' → logprob: -28.875
    10. 'prints' → logprob: -29.125

Token 794: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.048651404678821564
    2. '(' → logprob: -3.0486514568328857
    3. ' (' → logprob: -9.673651695251465
    4. '(
' → logprob: -14.673651695251465
    5. '(sum' → logprob: -15.923651695251465
    6. '()' → logprob: -16.54865074157715
    7. '(answer' → logprob: -16.67365074157715
    8. '(

' → logprob: -16.67365074157715
    9. '((' → logprob: -16.79865074157715
    10. '('' → logprob: -16.92365074157715

Token 795: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ' )' → logprob: -11.500015258789062
    3. '())' → logprob: -12.625015258789062
    4. '()' → logprob: -13.875015258789062
    5. ')`' → logprob: -14.625015258789062
    6. '))' → logprob: -15.125015258789062
    7. '(' → logprob: -15.750015258789062
    8. '`)' → logprob: -18.500015258789062
    9. ')#' → logprob: -18.625015258789062
    10. ')
' → logprob: -18.875015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 793
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 177
Tokens correctement prédits (top 10): 433
Précision stricte (1ère position): 20.55%
Précision adaptée (1ère position): 22.32%
Précision (top 10): 54.60%
================================================================================
