================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter

N, M = map(int, input().split())
intervals = list(map(lambda _: list(map(int, input().split())), range(M)))
res = (
    0 if not intervals else
    reduce(
        lambda acc, x: (acc[0] + 1, x[1]) if x[0] >= acc[1] else acc,
        sorted(intervals, key=itemgetter(1))[1:],
        (1, sorted(intervals, key=itemgetter(1))[0][1])
    )[0]
)
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020333049818873405
    2. '\' → logprob: -4.6453328132629395
    3. 'def' → logprob: -5.6453328132629395
    4. '(lambda' → logprob: -6.2703328132629395
    5. ' ' → logprob: -6.3953328132629395
    6. '```' → logprob: -7.3953328132629395
    7. '(
' → logprob: -7.6453328132629395
    8. ' (' → logprob: -8.145333290100098
    9. ',' → logprob: -8.270333290100098
    10. 'r' → logprob: -8.395333290100098

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.40235817432403564
    2. ' operator' → logprob: -2.027358055114746
    3. ' itertools' → logprob: -2.277358055114746
    4. ' collections' → logprob: -2.527358055114746
    5. ' os' → logprob: -4.152358055114746
    6. 'operator' → logprob: -7.277358055114746
    7. 'math' → logprob: -8.027358055114746
    8. ' sys' → logprob: -8.902358055114746
    9. 'collections' → logprob: -9.027358055114746
    10. ' ' → logprob: -9.527358055114746

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04439019411802292
    2. 'import' → logprob: -3.6693902015686035
    3. '.' → logprob: -4.1693902015686035
    4. ' ' → logprob: -6.1693902015686035
    5. ' .' → logprob: -8.419389724731445
    6. '.import' → logprob: -9.169389724731445
    7. '	import' → logprob: -11.419389724731445
    8. '_import' → logprob: -11.544389724731445
    9. '<|end|>' → logprob: -11.794389724731445
    10. ' Import' → logprob: -13.169389724731445

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.22591231763362885
    2. ' import' → logprob: -1.97591233253479
    3. ' mul' → logprob: -3.60091233253479
    4. 'add' → logprob: -3.97591233253479
    5. ' ' → logprob: -4.350912094116211
    6. 'import' → logprob: -5.975912094116211
    7. 'mul' → logprob: -6.600912094116211
    8. ' item' → logprob: -8.100912094116211
    9. ' icon' → logprob: -9.475912094116211
    10. ' ad' → logprob: -10.100912094116211

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.008991529233753681
    2. 'get' → logprob: -4.758991718292236
    3. 'getitem' → logprob: -8.008991241455078
    4. 'gett' → logprob: -10.258991241455078
    5. 'item' → logprob: -12.258991241455078
    6. 'g' → logprob: -12.883991241455078
    7. 'ge' → logprob: -14.133991241455078
    8. 'gt' → logprob: -15.758991241455078
    9. 'attr' → logprob: -15.758991241455078
    10. 'got' → logprob: -15.758991241455078

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5537190437316895
    2. ',' → logprob: -1.8037190437316895
    3. '\n' → logprob: -2.0537190437316895
    4. '\' → logprob: -2.9287190437316895
    5. '(
' → logprob: -3.0537190437316895
    6. ',
' → logprob: -5.1787190437316895
    7. '.' → logprob: -5.3037190437316895
    8. '
' → logprob: -5.8037190437316895
    9. '()' → logprob: -5.8037190437316895
    10. 'newline' → logprob: -6.1787190437316895

Token 11: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11299502849578857
    2. '\' → logprob: -3.862995147705078
    3. '.' → logprob: -3.987995147705078
    4. ',' → logprob: -4.112995147705078
    5. '(
' → logprob: -4.112995147705078
    6. 'def' → logprob: -4.362995147705078
    7. '\n' → logprob: -5.487995147705078
    8. '=' → logprob: -5.862995147705078
    9. '[' → logprob: -6.112995147705078
    10. '`' → logprob: -6.237995147705078

Token 12: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.690717875957489
    2. '_' → logprob: -1.5657179355621338
    3. ' =' → logprob: -1.5657179355621338
    4. ',' → logprob: -3.065717935562134
    5. ' ' → logprob: -4.065717697143555
    6. 'umber' → logprob: -4.940717697143555
    7. ')' → logprob: -5.690717697143555
    8. '.' → logprob: -6.315717697143555
    9. 'um' → logprob: -6.315717697143555
    10. ' )' → logprob: -7.815717697143555

Token 13: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.0055241584777832
    2. ' K' → logprob: -1.2555241584777832
    3. 'M' → logprob: -2.380524158477783
    4. ''' → logprob: -2.380524158477783
    5. ' M' → logprob: -3.255524158477783
    6. ' ' → logprob: -3.380524158477783
    7. 'data' → logprob: -3.505524158477783
    8. 'input' → logprob: -4.505524158477783
    9. '"' → logprob: -4.880524158477783
    10. 'items' → logprob: -5.005524158477783

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16153691709041595
    2. '=' → logprob: -1.9115369319915771
    3. ',' → logprob: -6.661536693572998
    4. '<|end|>' → logprob: -11.411537170410156
    5. ' ,' → logprob: -11.661537170410156
    6. ')' → logprob: -11.911537170410156
    7. ' ' → logprob: -13.286537170410156
    8. ' =
' → logprob: -13.786537170410156
    9. ' =)' → logprob: -14.411537170410156
    10. '```' → logprob: -14.911537170410156

Token 15: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03037826344370842
    2. 'map' → logprob: -3.5303783416748047
    3. ' ' → logprob: -7.655378341674805
    4. ' input' → logprob: -9.405378341674805
    5. '0' → logprob: -10.655378341674805
    6. 'input' → logprob: -11.405378341674805
    7. ' int' → logprob: -11.405378341674805
    8. '10' → logprob: -11.655378341674805
    9. 'int' → logprob: -11.905378341674805
    10. ' list' → logprob: -12.280378341674805

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3181619644165039
    2. '(' → logprob: -1.318161964416504
    3. '(str' → logprob: -5.818161964416504
    4. '(input' → logprob: -6.818161964416504
    5. '(lambda' → logprob: -7.318161964416504
    6. 'int' → logprob: -9.443161964416504
    7. 'input' → logprob: -10.943161964416504
    8. '(list' → logprob: -11.693161964416504
    9. '(eval' → logprob: -11.818161964416504
    10. '()' → logprob: -12.068161964416504

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047387734055519104
    2. ',input' → logprob: -3.7973878383636475
    3. '(' → logprob: -4.172387599945068
    4. '(input' → logprob: -5.672387599945068
    5. ',int' → logprob: -6.297387599945068
    6. 'input' → logprob: -6.797387599945068
    7. '(int' → logprob: -7.047387599945068
    8. ')' → logprob: -7.672387599945068
    9. ' ,' → logprob: -8.797388076782227
    10. ' (' → logprob: -9.547388076782227

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20144714415073395
    2. ' input' → logprob: -1.7014471292495728
    3. '(input' → logprob: -10.451447486877441
    4. ' ' → logprob: -13.826447486877441
    5. ',input' → logprob: -13.826447486877441
    6. 'int' → logprob: -14.076447486877441
    7. ')' → logprob: -14.201447486877441
    8. '=input' → logprob: -14.701447486877441
    9. 'str' → logprob: -15.326447486877441
    10. 'open' → logprob: -15.326447486877441

Token 19: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14999507367610931
    2. '())' → logprob: -2.3999950885772705
    3. '().' → logprob: -3.5249950885772705
    4. '()' → logprob: -4.149994850158691
    5. '(' → logprob: -6.274994850158691
    6. '(),' → logprob: -8.024994850158691
    7. '());' → logprob: -8.399994850158691
    8. '))' → logprob: -8.524994850158691
    9. ',' → logprob: -9.149994850158691
    10. '();)' → logprob: -10.024994850158691

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004982246900908649
    2. 'strip' → logprob: -7.625498294830322
    3. ')' → logprob: -12.625497817993164
    4. 'rstrip' → logprob: -12.625497817993164
    5. ' split' → logprob: -13.250497817993164
    6. 'read' → logprob: -13.750497817993164
    7. '(split' → logprob: -14.500497817993164
    8. 'spl' → logprob: -15.750497817993164
    9. '())' → logprob: -17.750497817993164
    10. '_split' → logprob: -18.125497817993164

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003648176556453109
    2. '))' → logprob: -5.628648281097412
    3. '()' → logprob: -11.003647804260254
    4. '())' → logprob: -11.128647804260254
    5. '),' → logprob: -12.003647804260254
    6. '`)' → logprob: -12.378647804260254
    7. '')' → logprob: -13.503647804260254
    8. ')`' → logprob: -13.628647804260254
    9. ')))' → logprob: -14.128647804260254
    10. ')")' → logprob: -14.378647804260254

Token 22: 'interval' (ID: 37558)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5342189073562622
    2. 'matrix' → logprob: -1.2842189073562622
    3. 'arr' → logprob: -3.6592187881469727
    4. 'a' → logprob: -4.034218788146973
    5. 'array' → logprob: -4.034218788146973
    6. ' matrix' → logprob: -4.159218788146973
    7. 'items' → logprob: -4.409218788146973
    8. ' data' → logprob: -5.159218788146973
    9. 'lst' → logprob: -5.159218788146973
    10. 'numbers' → logprob: -5.159218788146973

Token 23: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002158146962756291
    2. '_s' → logprob: -8.625215530395508
    3. ' =' → logprob: -11.000215530395508
    4. '_' → logprob: -11.625215530395508
    5. '_list' → logprob: -11.875215530395508
    6. ' s' → logprob: -14.125215530395508
    7. '=' → logprob: -14.375215530395508
    8. '	s' → logprob: -15.250215530395508
    9. '```' → logprob: -15.500215530395508
    10. ' ' → logprob: -15.750215530395508

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017021631821990013
    2. '=' → logprob: -4.142021656036377
    3. '[' → logprob: -7.767021656036377
    4. '.' → logprob: -8.142021179199219
    5. '[:]' → logprob: -9.642021179199219
    6. ' ' → logprob: -10.017021179199219
    7. 's' → logprob: -10.392021179199219
    8. '[]' → logprob: -10.767021179199219
    9. '=[]' → logprob: -10.767021179199219
    10. ')' → logprob: -11.142021179199219

Token 25: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7720415592193604
    2. ' [' → logprob: -1.0220415592193604
    3. '[list' → logprob: -1.7720415592193604
    4. ' []' → logprob: -5.647041320800781
    5. '[]' → logprob: -6.272041320800781
    6. '[int' → logprob: -6.772041320800781
    7. '[input' → logprob: -7.647041320800781
    8. '[List' → logprob: -8.147041320800781
    9. '[array' → logprob: -8.522041320800781
    10. 'list' → logprob: -9.022041320800781

Token 26: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009244315326213837
    2. '(map' → logprob: -5.384244441986084
    3. '(range' → logprob: -6.009244441986084
    4. '(input' → logprob: -7.134244441986084
    5. '(filter' → logprob: -8.009243965148926
    6. '(int' → logprob: -8.509243965148926
    7. '<|end|>' → logprob: -8.634243965148926
    8. '()' → logprob: -8.759243965148926
    9. '(eval' → logprob: -9.634243965148926
    10. '(read' → logprob: -10.134243965148926

Token 27: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0021528806537389755
    2. '(' → logprob: -6.627152919769287
    3. 'int' → logprob: -7.627152919769287
    4. '<int' → logprob: -8.627152442932129
    5. '(lambda' → logprob: -9.752152442932129
    6. '=int' → logprob: -10.377152442932129
    7. '(input' → logprob: -10.877152442932129
    8. '[int' → logprob: -11.377152442932129
    9. ')' → logprob: -11.627152442932129
    10. '(str' → logprob: -12.252152442932129

Token 28: ' _:' (ID: 133568)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09172886610031128
    2. ' x' → logprob: -2.466728925704956
    3. 'int' → logprob: -6.591728687286377
    4. 'lambda' → logprob: -7.341728687286377
    5. ' int' → logprob: -8.466729164123535
    6. ' lambda' → logprob: -9.216729164123535
    7. 'item' → logprob: -9.341729164123535
    8. ':' → logprob: -9.591729164123535
    9. 's' → logprob: -9.966729164123535
    10. 'interval' → logprob: -9.966729164123535

Token 29: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06757142394781113
    2. 'tuple' → logprob: -3.3175714015960693
    3. ' int' → logprob: -4.317571640014648
    4. 'list' → logprob: -4.567571640014648
    5. ' tuple' → logprob: -5.817571640014648
    6. 'input' → logprob: -6.567571640014648
    7. 'lambda' → logprob: -8.067571640014648
    8. ' list' → logprob: -8.317571640014648
    9. 'map' → logprob: -8.567571640014648
    10. '(int' → logprob: -9.692571640014648

Token 30: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0027757512871176004
    2. '(int' → logprob: -6.2527756690979
    3. '(' → logprob: -7.1277756690979
    4. '(lambda' → logprob: -10.877776145935059
    5. '(input' → logprob: -11.627776145935059
    6. '(range' → logprob: -11.877776145935059
    7. '()' → logprob: -12.752776145935059
    8. 'map' → logprob: -12.877776145935059
    9. '(tuple' → logprob: -13.752776145935059
    10. '(filter' → logprob: -13.877776145935059

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002382249804213643
    2. 'int' → logprob: -8.375238418579102
    3. '(' → logprob: -12.375238418579102
    4. '<int' → logprob: -13.000238418579102
    5. ',int' → logprob: -14.750238418579102
    6. ' int' → logprob: -15.125238418579102
    7. '=int' → logprob: -16.0002384185791
    8. '[int' → logprob: -16.1252384185791
    9. '(str' → logprob: -16.5002384185791
    10. '(
' → logprob: -16.5002384185791

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38746407628059387
    2. ',input' → logprob: -1.3874640464782715
    3. '(input' → logprob: -2.7624640464782715
    4. 'input' → logprob: -4.8874640464782715
    5. '(' → logprob: -7.3874640464782715
    6. ' input' → logprob: -9.88746452331543
    7. ' ,' → logprob: -9.88746452331543
    8. '(),' → logprob: -10.13746452331543
    9. '),' → logprob: -10.51246452331543
    10. '<input' → logprob: -12.26246452331543

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007101670489646494
    2. ' input' → logprob: -7.2507100105285645
    3. '	input' → logprob: -16.500709533691406
    4. '(input' → logprob: -17.500709533691406
    5. '<input' → logprob: -18.000709533691406
    6. '=input' → logprob: -18.625709533691406
    7. ' ' → logprob: -18.750709533691406
    8. ',input' → logprob: -18.750709533691406
    9. 'stdin' → logprob: -18.875709533691406
    10. 'lambda' → logprob: -19.375709533691406

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006215345347300172
    2. '()' → logprob: -7.500621318817139
    3. '()),' → logprob: -10.625621795654297
    4. '()))' → logprob: -11.000621795654297
    5. '())))' → logprob: -11.125621795654297
    6. '())' → logprob: -12.000621795654297
    7. '()));' → logprob: -12.875621795654297
    8. ')' → logprob: -14.000621795654297
    9. ')),' → logprob: -14.625621795654297
    10. ')))' → logprob: -14.750621795654297

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.8325677703833207e-05
    2. 'strip' → logprob: -10.500028610229492
    3. 'rstrip' → logprob: -15.000028610229492
    4. ' split' → logprob: -15.500028610229492
    5. '(split' → logprob: -15.750028610229492
    6. 's' → logprob: -19.500028610229492
    7. 'read' → logprob: -19.625028610229492
    8. 'spl' → logprob: -19.875028610229492
    9. '.split' → logprob: -20.125028610229492
    10. ' ' → logprob: -21.375028610229492

Token 36: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4237498342990875
    2. ')),' → logprob: -1.1737498044967651
    3. '()),' → logprob: -4.423749923706055
    4. '),' → logprob: -4.548749923706055
    5. '))' → logprob: -5.673749923706055
    6. '()))' → logprob: -5.673749923706055
    7. ')' → logprob: -6.048749923706055
    8. '))),' → logprob: -6.298749923706055
    9. ')))' → logprob: -6.548749923706055
    10. '())' → logprob: -7.423749923706055

Token 37: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3888934552669525
    2. ')),' → logprob: -1.138893485069275
    3. '))' → logprob: -7.2638936042785645
    4. ')' → logprob: -7.6388936042785645
    5. '))),' → logprob: -7.7638936042785645
    6. '()),' → logprob: -8.513893127441406
    7. ')))' → logprob: -9.138893127441406
    8. ' ' → logprob: -10.513893127441406
    9. '()' → logprob: -10.888893127441406
    10. ' ),' → logprob: -11.638893127441406

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012701898231171072
    2. ' range' → logprob: -9.000126838684082
    3. '   ' → logprob: -13.125126838684082
    4. '[' → logprob: -14.125126838684082
    5. '(range' → logprob: -15.250126838684082
    6. ' ' → logprob: -15.375126838684082
    7. '    ' → logprob: -15.750126838684082
    8. '  ' → logprob: -16.0001277923584
    9. '	range' → logprob: -16.1251277923584
    10. '_' → logprob: -17.2501277923584

Token 39: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.04888926446437836
    2. '(N' → logprob: -3.04888916015625
    3. '(' → logprob: -8.17388916015625
    4. 'M' → logprob: -11.04888916015625
    5. 'N' → logprob: -12.79888916015625
    6. '(
' → logprob: -14.54888916015625
    7. '(n' → logprob: -14.92388916015625
    8. '(int' → logprob: -15.79888916015625
    9. '((' → logprob: -16.79888916015625
    10. ' (' → logprob: -17.04888916015625

Token 40: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.006083084270358086
    2. ')' → logprob: -5.631083011627197
    3. '))' → logprob: -6.006083011627197
    4. '))))' → logprob: -11.256083488464355
    5. ')));' → logprob: -13.756083488464355
    6. '),' → logprob: -14.506083488464355
    7. ' ' → logprob: -14.506083488464355
    8. ')))
' → logprob: -14.506083488464355
    9. '')))' → logprob: -15.881083488464355
    10. ')))

' → logprob: -16.25608253479004

Token 41: 'res' (ID: 430)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6592148542404175
    2. '
' → logprob: -1.4092148542404175
    3. ')' → logprob: -2.784214973449707
    4. 'sorted' → logprob: -2.784214973449707
    5. '\n' → logprob: -3.784214973449707
    6. '
' → logprob: -4.034214973449707
    7. 'result' → logprob: -4.159214973449707
    8. ')
' → logprob: -4.284214973449707
    9. '```' → logprob: -4.284214973449707
    10. 's' → logprob: -5.784214973449707

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6144537329673767
    2. 'ult' → logprob: -1.6144537925720215
    3. '=' → logprob: -2.3644537925720215
    4. 'u' → logprob: -2.3644537925720215
    5. 'ults' → logprob: -2.8644537925720215
    6. 'ul' → logprob: -4.3644537925720215
    7. 'ultat' → logprob: -7.3644537925720215
    8. 'uls' → logprob: -7.9894537925720215
    9. 'ulta' → logprob: -8.364453315734863
    10. 'ual' → logprob: -8.739453315734863

Token 43: ' (
' (ID: 4112)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.2366573810577393
    2. '[' → logprob: -1.4866573810577393
    3. '[]' → logprob: -2.1116573810577393
    4. ' [' → logprob: -2.3616573810577393
    5. 'interval' → logprob: -2.8616573810577393
    6. ' reduce' → logprob: -2.9866573810577393
    7. ' []' → logprob: -3.1116573810577393
    8. ' intervals' → logprob: -3.1116573810577393
    9. '0' → logprob: -3.4866573810577393
    10. '[min' → logprob: -5.36165714263916

Token 44: '   ' (ID: 271)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0447903536260128
    2. ' reduce' → logprob: -3.794790267944336
    3. 'min' → logprob: -5.669790267944336
    4. 'max' → logprob: -5.919790267944336
    5. 'sorted' → logprob: -6.044790267944336
    6. '0' → logprob: -6.044790267944336
    7. '   ' → logprob: -6.419790267944336
    8. ')' → logprob: -6.419790267944336
    9. 'range' → logprob: -6.544790267944336
    10. 'list' → logprob: -7.044790267944336

Token 45: ' ' (ID: 220)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.02487836964428425
    2. 'sorted' → logprob: -4.39987850189209
    3. ' reduce' → logprob: -5.14987850189209
    4. ')' → logprob: -6.39987850189209
    5. 'list' → logprob: -6.64987850189209
    6. '[' → logprob: -7.64987850189209
    7. '[]' → logprob: -7.64987850189209
    8. 'interval' → logprob: -7.77487850189209
    9. 'lambda' → logprob: -7.89987850189209
    10. 'min' → logprob: -8.39987850189209

Token 46: '0' (ID: 15)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.021375872194767
    2. ' reduce' → logprob: -5.02137565612793
    3. 'sorted' → logprob: -5.52137565612793
    4. ')' → logprob: -6.02137565612793
    5. 'range' → logprob: -6.39637565612793
    6. 'list' → logprob: -6.64637565612793
    7. 'min' → logprob: -6.77137565612793
    8. 'max' → logprob: -7.27137565612793
    9. 'lambda' → logprob: -7.27137565612793
    10. 'interval' → logprob: -7.27137565612793

Token 47: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10284107178449631
    2. ')' → logprob: -2.4778411388397217
    3. ',
' → logprob: -4.852840900421143
    4. '
' → logprob: -5.727840900421143
    5. ',)' → logprob: -6.227840900421143
    6. ' )' → logprob: -8.1028413772583
    7. '<|end|>' → logprob: -8.8528413772583
    8. ' ' → logprob: -9.4778413772583
    9. ' ,' → logprob: -9.8528413772583
    10. ')
' → logprob: -10.4778413772583

Token 48: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6706635355949402
    2. ' M' → logprob: -1.295663595199585
    3. 'M' → logprob: -2.295663595199585
    4. 'not' → logprob: -2.795663595199585
    5. ' N' → logprob: -4.045663356781006
    6. 'N' → logprob: -4.295663356781006
    7. ' intervals' → logprob: -4.795663356781006
    8. ' len' → logprob: -5.170663356781006
    9. 'len' → logprob: -5.795663356781006
    10. ')' → logprob: -6.295663356781006

Token 49: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.31347066164016724
    2. 'interval' → logprob: -1.3134706020355225
    3. ' interval' → logprob: -9.313470840454102
    4. ' M' → logprob: -9.688470840454102
    5. '(interval' → logprob: -10.563470840454102
    6. 'M' → logprob: -10.688470840454102
    7. 'N' → logprob: -13.688470840454102
    8. 'Intervals' → logprob: -13.813470840454102
    9. 'res' → logprob: -13.938470840454102
    10. ')' → logprob: -14.063470840454102

Token 50: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10022662580013275
    2. 'else' → logprob: -2.350226640701294
    3. ' ' → logprob: -11.100226402282715
    4. ' or' → logprob: -12.850226402282715
    5. '
' → logprob: -14.225226402282715
    6. ' els' → logprob: -14.975226402282715
    7. '   ' → logprob: -14.975226402282715
    8. ' 
' → logprob: -15.600226402282715
    9. 'or' → logprob: -15.850226402282715
    10. '    ' → logprob: -15.975226402282715

Token 51: '
' (ID: 198)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.33491167426109314
    2. ' max' → logprob: -2.334911584854126
    3. ' sorted' → logprob: -2.709911584854126
    4. 'reduce' → logprob: -2.834911584854126
    5. ' min' → logprob: -3.584911584854126
    6. ' intervals' → logprob: -4.334911823272705
    7. 'sorted' → logprob: -5.209911823272705
    8. 'max' → logprob: -5.209911823272705
    9. 'min' → logprob: -5.959911823272705
    10. ' sum' → logprob: -6.209911823272705

Token 52: '   ' (ID: 271)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.704272449016571
    2. 'reduce' → logprob: -1.3292725086212158
    3. ' max' → logprob: -2.579272508621216
    4. ' intervals' → logprob: -2.829272508621216
    5. ' min' → logprob: -3.454272508621216
    6. 'max' → logprob: -3.829272508621216
    7. 'min' → logprob: -4.204272270202637
    8. '   ' → logprob: -4.454272270202637
    9. 'interval' → logprob: -4.954272270202637
    10. ' sorted' → logprob: -5.329272270202637

Token 53: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' (adapté à ' reduce') → logprob: -0.2024436742067337
    2. ' reduce' → logprob: -2.4524435997009277
    3. 'max' → logprob: -3.4524435997009277
    4. 'min' → logprob: -3.5774435997009277
    5. 'interval' → logprob: -4.827443599700928
    6. 'sorted' → logprob: -5.077443599700928
    7. ' intervals' → logprob: -5.077443599700928
    8. ' max' → logprob: -5.202443599700928
    9. ' min' → logprob: -5.827443599700928
    10. '   ' → logprob: -5.952443599700928

Token 54: '(
' (ID: 1607)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4772275984287262
    2. '(' → logprob: -0.9772275686264038
    3. '(
' → logprob: -5.852227687835693
    4. '(item' → logprob: -8.727227210998535
    5. '(operator' → logprob: -9.352227210998535
    6. 'lambda' → logprob: -11.602227210998535
    7. '```' → logprob: -12.602227210998535
    8. '(
' → logprob: -12.852227210998535
    9. '((' → logprob: -12.852227210998535
    10. ' (' → logprob: -13.102227210998535

Token 55: '       ' (ID: 309)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.16259698569774628
    2. 'lambda' → logprob: -2.0375969409942627
    3. '(lambda' → logprob: -4.287597179412842
    4. '   ' → logprob: -5.162597179412842
    5. ')' → logprob: -9.412596702575684
    6. '       ' → logprob: -9.912596702575684
    7. ' item' → logprob: -10.162596702575684
    8. 'item' → logprob: -10.537596702575684
    9. '=lambda' → logprob: -10.662596702575684
    10. ',' → logprob: -11.412596702575684

Token 56: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.2588076889514923
    2. ' lambda' → logprob: -1.50880765914917
    3. '(lambda' → logprob: -5.00880765914917
    4. '   ' → logprob: -9.258808135986328
    5. 'item' → logprob: -10.258808135986328
    6. '       ' → logprob: -10.883808135986328
    7. '=lambda' → logprob: -12.133808135986328
    8. ')' → logprob: -12.258808135986328
    9. '           ' → logprob: -12.633808135986328
    10. ',' → logprob: -13.008808135986328

Token 57: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.13837410509586334
    2. ' lambda' → logprob: -3.138374090194702
    3. ' a' → logprob: -3.763374090194702
    4. 'acc' → logprob: -4.138374328613281
    5. ' x' → logprob: -4.388374328613281
    6. ' res' → logprob: -4.388374328613281
    7. ' prev' → logprob: -5.013374328613281
    8. 'a' → logprob: -5.263374328613281
    9. 'lambda' → logprob: -5.388374328613281
    10. 'x' → logprob: -6.763374328613281

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ',item' → logprob: -11.875021934509277
    3. ' ,' → logprob: -12.625021934509277
    4. ',x' → logprob: -13.000021934509277
    5. 's' → logprob: -13.500021934509277
    6. 'acc' → logprob: -14.000021934509277
    7. ',index' → logprob: -14.000021934509277
    8. 'lambda' → logprob: -14.250021934509277
    9. ',
' → logprob: -14.625021934509277
    10. ',res' → logprob: -14.625021934509277

Token 59: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8490055203437805
    2. 'interval' → logprob: -1.2240054607391357
    3. ' x' → logprob: -2.8490054607391357
    4. 'curr' → logprob: -3.0990054607391357
    5. 'it' → logprob: -3.7240054607391357
    6. 'cur' → logprob: -3.7240054607391357
    7. 'int' → logprob: -3.9740054607391357
    8. 'i' → logprob: -3.9740054607391357
    9. ' interval' → logprob: -3.9740054607391357
    10. ' curr' → logprob: -4.474005699157715

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00204676715657115
    2. ',' → logprob: -6.502046585083008
    3. ' :' → logprob: -8.252046585083008
    4. ',:' → logprob: -9.502046585083008
    5. ':x' → logprob: -9.752046585083008
    6. 's' → logprob: -10.252046585083008
    7. '_:' → logprob: -10.877046585083008
    8. ':
' → logprob: -11.252046585083008
    9. ':item' → logprob: -11.252046585083008
    10. ':(' → logprob: -12.127046585083008

Token 61: ' (' (ID: 350)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6363945603370667
    2. '(acc' → logprob: -1.8863945007324219
    3. 'max' → logprob: -2.636394500732422
    4. '(' → logprob: -2.636394500732422
    5. ' acc' → logprob: -3.011394500732422
    6. ' (' → logprob: -3.136394500732422
    7. '[' → logprob: -3.511394500732422
    8. ' max' → logprob: -3.761394500732422
    9. ' [' → logprob: -5.136394500732422
    10. '(
' → logprob: -5.386394500732422

Token 62: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.49099287390708923
    2. '(acc' → logprob: -1.4909929037094116
    3. 'max' → logprob: -2.615992784500122
    4. '(' → logprob: -3.240992784500122
    5. '[' → logprob: -3.990992784500122
    6. '(max' → logprob: -4.365993022918701
    7. '0' → logprob: -5.740993022918701
    8. '(
' → logprob: -5.865993022918701
    9. '   ' → logprob: -5.990993022918701
    10. '[max' → logprob: -6.365993022918701

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1116331815719604
    2. '+' → logprob: -1.2366331815719604
    3. ' +' → logprob: -1.7366331815719604
    4. ' if' → logprob: -1.8616331815719604
    5. ',' → logprob: -3.61163330078125
    6. ' and' → logprob: -5.61163330078125
    7. '+[' → logprob: -5.61163330078125
    8. 'if' → logprob: -5.73663330078125
    9. 'and' → logprob: -6.11163330078125
    10. '[:-' → logprob: -6.48663330078125

Token 64: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.541953980922699
    2. '0' → logprob: -0.916953980922699
    3. '-' → logprob: -4.041954040527344
    4. ' ' → logprob: -8.291954040527344
    5. '[' → logprob: -8.604454040527344
    6. '
' → logprob: -8.979454040527344
    7. ' -' → logprob: -9.291954040527344
    8. 'x' → logprob: -9.791954040527344
    9. '+' → logprob: -9.854454040527344
    10. '(' → logprob: -10.166954040527344

Token 65: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0646926164627075
    2. ',' → logprob: -1.1896926164627075
    3. ' if' → logprob: -1.8146926164627075
    4. ' +' → logprob: -1.9396926164627075
    5. '[' → logprob: -3.814692497253418
    6. 'if' → logprob: -4.939692497253418
    7. '-' → logprob: -5.564692497253418
    8. 'x' → logprob: -6.314692497253418
    9. '+x' → logprob: -6.439692497253418
    10. ' ,' → logprob: -6.689692497253418

Token 66: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15785285830497742
    2. ',' → logprob: -2.9078528881073
    3. ' if' → logprob: -3.2828528881073
    4. ' +' → logprob: -3.7828528881073
    5. 'if' → logprob: -4.657852649688721
    6. 'and' → logprob: -4.907852649688721
    7. '[' → logprob: -5.157852649688721
    8. '-' → logprob: -6.032852649688721
    9. '+x' → logprob: -6.782852649688721
    10. ' and' → logprob: -7.157852649688721

Token 67: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.48366349935531616
    2. ' max' → logprob: -1.733663558959961
    3. 'x' → logprob: -2.108663558959961
    4. ' x' → logprob: -3.483663558959961
    5. '(max' → logprob: -3.733663558959961
    6. '(x' → logprob: -4.233663558959961
    7. '1' → logprob: -4.983663558959961
    8. ' (' → logprob: -5.983663558959961
    9. '(' → logprob: -5.983663558959961
    10. '0' → logprob: -6.608663558959961

Token 68: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16053809225559235
    2. 'x' → logprob: -2.2855381965637207
    3. '(max' → logprob: -3.9105381965637207
    4. '(x' → logprob: -4.410538196563721
    5. '1' → logprob: -5.160538196563721
    6. ' max' → logprob: -5.410538196563721
    7. '(' → logprob: -6.660538196563721
    8. 'min' → logprob: -6.910538196563721
    9. '0' → logprob: -7.160538196563721
    10. ' x' → logprob: -7.785538196563721

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49366122484207153
    2. ' if' → logprob: -0.9936612248420715
    3. 'if' → logprob: -4.118661403656006
    4. ')' → logprob: -6.368661403656006
    5. 'x' → logprob: -7.618661403656006
    6. ' ,' → logprob: -8.118660926818848
    7. ',x' → logprob: -8.993660926818848
    8. ' ' → logprob: -8.993660926818848
    9. '   ' → logprob: -9.493660926818848
    10. ' x' → logprob: -9.743660926818848

Token 70: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1905677318572998
    2. 'x' → logprob: -1.4405677318572998
    3. ' (' → logprob: -1.9405677318572998
    4. '(max' → logprob: -2.3155677318573
    5. 'max' → logprob: -2.4405677318573
    6. ' x' → logprob: -3.1905677318573
    7. ' max' → logprob: -3.6905677318573
    8. '(' → logprob: -3.6905677318573
    9. '(acc' → logprob: -5.190567970275879
    10. ' [' → logprob: -5.440567970275879

Token 71: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14970722794532776
    2. ' if' → logprob: -2.524707317352295
    3. '[' → logprob: -3.399707317352295
    4. '),' → logprob: -4.149707317352295
    5. ')
' → logprob: -5.524707317352295
    6. ' )' → logprob: -6.149707317352295
    7. '),
' → logprob: -6.399707317352295
    8. 'if' → logprob: -6.649707317352295
    9. ' ' → logprob: -9.149706840515137
    10. '   ' → logprob: -9.274706840515137

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01543565932661295
    2. '[' → logprob: -4.265435695648193
    3. ' ' → logprob: -7.390435695648193
    4. '][' → logprob: -8.765435218811035
    5. ']' → logprob: -9.140435218811035
    6. '0' → logprob: -9.390435218811035
    7. '-' → logprob: -10.265435218811035
    8. '])' → logprob: -10.390435218811035
    9. ')' → logprob: -10.515435218811035
    10. ')]' → logprob: -10.515435218811035

Token 73: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26305484771728516
    2. ' if' → logprob: -1.5130548477172852
    3. ' )' → logprob: -4.888054847717285
    4. 'if' → logprob: -6.763054847717285
    5. '),' → logprob: -6.763054847717285
    6. '   ' → logprob: -7.888054847717285
    7. ' ' → logprob: -8.513054847717285
    8. '    ' → logprob: -8.638054847717285
    9. ')
' → logprob: -9.138054847717285
    10. '  ' → logprob: -9.388054847717285

Token 74: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25829535722732544
    2. 'if' → logprob: -1.5082952976226807
    3. '   ' → logprob: -5.38329553604126
    4. ',' → logprob: -6.50829553604126
    5. ' ' → logprob: -9.133295059204102
    6. '    ' → logprob: -9.508295059204102
    7. '  ' → logprob: -10.383295059204102
    8. '       ' → logprob: -11.258295059204102
    9. ',
' → logprob: -11.508295059204102
    10. '     ' → logprob: -12.008295059204102

Token 75: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17693160474300385
    2. ' x' → logprob: -1.926931619644165
    3. 'acc' → logprob: -4.426931381225586
    4. ' acc' → logprob: -5.551931381225586
    5. 'interval' → logprob: -8.176931381225586
    6. ' intervals' → logprob: -9.301931381225586
    7. '(x' → logprob: -9.426931381225586
    8. ' ' → logprob: -9.926931381225586
    9. 'item' → logprob: -10.301931381225586
    10. '(acc' → logprob: -10.301931381225586

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0921942703134846e-05
    2. '[item' → logprob: -12.62501049041748
    3. ')[' → logprob: -12.87501049041748
    4. '][' → logprob: -13.50001049041748
    5. ' [' → logprob: -14.00001049041748
    6. '[
' → logprob: -14.75001049041748
    7. '[x' → logprob: -15.12501049041748
    8. '>[' → logprob: -15.37501049041748
    9. 'and' → logprob: -15.62501049041748
    10. '[i' → logprob: -15.62501049041748

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007742324378341436
    2. '[' → logprob: -4.882742404937744
    3. ' ' → logprob: -9.257741928100586
    4. '1' → logprob: -10.507741928100586
    5. '(' → logprob: -12.632741928100586
    6. '][' → logprob: -13.132741928100586
    7. '   ' → logprob: -13.757741928100586
    8. 'interval' → logprob: -14.257741928100586
    9. '<|end|>' → logprob: -14.382741928100586
    10. '```' → logprob: -14.445241928100586

Token 78: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10158415138721466
    2. ' >' → logprob: -2.3515841960906982
    3. '>=' → logprob: -6.726583957672119
    4. ' >=' → logprob: -8.976584434509277
    5. '">' → logprob: -11.351584434509277
    6. '<=' → logprob: -11.601584434509277
    7. ' ' → logprob: -11.726584434509277
    8. '[' → logprob: -12.226584434509277
    9. '>end' → logprob: -12.726584434509277
    10. '```' → logprob: -13.226584434509277

Token 79: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2441854625940323
    2. '>=' → logprob: -1.994185447692871
    3. ' >' → logprob: -2.869185447692871
    4. ' >=' → logprob: -3.744185447692871
    5. '[' → logprob: -10.494185447692871
    6. ' ' → logprob: -10.619185447692871
    7. '>end' → logprob: -10.869185447692871
    8. '">' → logprob: -10.994185447692871
    9. ' ' → logprob: -12.244185447692871
    10. '```' → logprob: -12.244185447692871

Token 80: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.38688725233078003
    2. ' acc' → logprob: -1.1368873119354248
    3. '   ' → logprob: -12.386887550354004
    4. ' ' → logprob: -12.636887550354004
    5. '	acc' → logprob: -12.886887550354004
    6. '(acc' → logprob: -13.261887550354004
    7. 'ac' → logprob: -13.386887550354004
    8. '_acc' → logprob: -14.011887550354004
    9. '.acc' → logprob: -15.386887550354004
    10. '```' → logprob: -15.636887550354004

Token 81: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002153378736693412
    2. '1' → logprob: -8.625215530395508
    3. '()[' → logprob: -11.125215530395508
    4. '(' → logprob: -12.250215530395508
    5. ' [' → logprob: -12.625215530395508
    6. '0' → logprob: -12.875215530395508
    7. ' ' → logprob: -13.125215530395508
    8. '2' → logprob: -13.125215530395508
    9. '][' → logprob: -13.375215530395508
    10. '   ' → logprob: -13.750215530395508

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008285674848593771
    2. ' ' → logprob: -7.250828742980957
    3. '[' → logprob: -9.375828742980957
    4. '0' → logprob: -10.750828742980957
    5. '2' → logprob: -12.000828742980957
    6. '   ' → logprob: -13.250828742980957
    7. '][' → logprob: -13.250828742980957
    8. '```' → logprob: -14.000828742980957
    9. '  ' → logprob: -15.375828742980957
    10. '
' → logprob: -15.500828742980957

Token 83: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.006291837431490421
    2. 'else' → logprob: -5.13129186630249
    3. '        ' → logprob: -8.756291389465332
    4. '       ' → logprob: -9.506291389465332
    5. '    ' → logprob: -9.631291389465332
    6. ' ' → logprob: -10.756291389465332
    7. '   ' → logprob: -11.006291389465332
    8. ' and' → logprob: -12.006291389465332
    9. ')' → logprob: -12.006291389465332
    10. '      ' → logprob: -12.756291389465332

Token 84: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.05549979582428932
    2. 'else' → logprob: -2.930499792098999
    3. '       ' → logprob: -8.180500030517578
    4. '   ' → logprob: -8.805500030517578
    5. ',' → logprob: -9.430500030517578
    6. '    ' → logprob: -10.680500030517578
    7. '           ' → logprob: -11.055500030517578
    8. '        ' → logprob: -11.180500030517578
    9. ' ' → logprob: -11.180500030517578
    10. ')' → logprob: -11.930500030517578

Token 85: ' acc' (ID: 1259)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.06299987435340881
    2. ' (' → logprob: -2.812999963760376
    3. '(' → logprob: -7.812999725341797
    4. '   ' → logprob: -8.187999725341797
    5. 'acc' → logprob: -9.187999725341797
    6. ' acc' → logprob: -9.812999725341797
    7. '       ' → logprob: -9.937999725341797
    8. ' ' → logprob: -10.062999725341797
    9. '(max' → logprob: -10.187999725341797
    10. '(ac' → logprob: -11.562999725341797

Token 86: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009409664198756218
    2. '   ' → logprob: -5.384409427642822
    3. '       ' → logprob: -6.134409427642822
    4. ' ,' → logprob: -6.884409427642822
    5. ',
' → logprob: -7.009409427642822
    6. '),' → logprob: -8.00940990447998
    7. '[' → logprob: -8.50940990447998
    8. ')' → logprob: -10.00940990447998
    9. '           ' → logprob: -10.38440990447998
    10. ',x' → logprob: -11.25940990447998

Token 87: '       ' (ID: 309)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9451178908348083
    2. ' intervals' → logprob: -1.3201179504394531
    3. '       ' → logprob: -1.8201179504394531
    4. 'item' → logprob: -2.695117950439453
    5. '   ' → logprob: -3.070117950439453
    6. ' (' → logprob: -3.820117950439453
    7. ' item' → logprob: -3.945117950439453
    8. '(interval' → logprob: -4.695117950439453
    9. '           ' → logprob: -5.195117950439453
    10. '(' → logprob: -5.320117950439453

Token 88: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' (adapté à ' sorted') → logprob: -0.057060033082962036
    2. 'interval' → logprob: -3.1820600032806396
    3. ' sorted' → logprob: -4.432060241699219
    4. '   ' → logprob: -6.557060241699219
    5. ' intervals' → logprob: -7.682060241699219
    6. '(sorted' → logprob: -9.307060241699219
    7. '[' → logprob: -10.807060241699219
    8. ' ' → logprob: -11.557060241699219
    9. '       ' → logprob: -11.807060241699219
    10. '    ' → logprob: -11.932060241699219

Token 89: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.0003598952607717365
    2. 'interval' → logprob: -8.125359535217285
    3. '(' → logprob: -9.750359535217285
    4. '(
' → logprob: -12.500359535217285
    5. ')' → logprob: -14.375359535217285
    6. ' intervals' → logprob: -14.375359535217285
    7. ' (' → logprob: -15.250359535217285
    8. '(inter' → logprob: -15.625359535217285
    9. ')(' → logprob: -16.2503604888916
    10. '```' → logprob: -16.2503604888916

Token 90: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02335483767092228
    2. 'als' → logprob: -3.8983547687530518
    3. 'vals' → logprob: -5.898355007171631
    4. 'al' → logprob: -11.398354530334473
    5. ')' → logprob: -11.773354530334473
    6. 'val' → logprob: -11.773354530334473
    7. 'erv' → logprob: -12.023354530334473
    8. 'v' → logprob: -12.023354530334473
    9. 'vs' → logprob: -12.148354530334473
    10. '[' → logprob: -12.523354530334473

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01280662976205349
    2. ',key' → logprob: -4.387806415557861
    3. ' ,' → logprob: -8.51280689239502
    4. 'key' → logprob: -9.76280689239502
    5. '),' → logprob: -10.51280689239502
    6. ' key' → logprob: -12.38780689239502
    7. '(key' → logprob: -13.26280689239502
    8. '(),' → logprob: -13.76280689239502
    9. ')' → logprob: -13.88780689239502
    10. ',item' → logprob: -14.26280689239502

Token 92: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.018163522705435753
    2. ' key' → logprob: -4.018163681030273
    3. ',key' → logprob: -12.018163681030273
    4. '   ' → logprob: -12.768163681030273
    5. '(key' → logprob: -13.143163681030273
    6. 'lambda' → logprob: -14.393163681030273
    7. '	key' → logprob: -14.518163681030273
    8. ' ' → logprob: -15.143163681030273
    9. '  ' → logprob: -15.268163681030273
    10. 'item' → logprob: -15.268163681030273

Token 93: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.010254038497805595
    2. '=' → logprob: -4.63525390625
    3. 'item' → logprob: -7.63525390625
    4. '=lambda' → logprob: -11.38525390625
    5. ')item' → logprob: -13.76025390625
    6. 'Item' → logprob: -14.26025390625
    7. ' item' → logprob: -14.63525390625
    8. 'getitem' → logprob: -14.63525390625
    9. ':item' → logprob: -15.76025390625
    10. ')' → logprob: -16.01025390625

Token 94: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -6.392202976712724e-06
    2. 'get' → logprob: -12.375006675720215
    3. 'setter' → logprob: -14.750006675720215
    4. 'giver' → logprob: -14.750006675720215
    5. 'picker' → logprob: -15.500006675720215
    6. 'selector' → logprob: -16.2500057220459
    7. 'starter' → logprob: -16.2500057220459
    8. 'operator' → logprob: -16.3750057220459
    9. 'Getter' → logprob: -16.5000057220459
    10. 'holder' → logprob: -16.5000057220459

Token 95: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009276202879846096
    2. '0' → logprob: -4.884276390075684
    3. '(' → logprob: -6.509276390075684
    4. ' ' → logprob: -8.759276390075684
    5. '   ' → logprob: -11.759276390075684
    6. '```' → logprob: -11.884276390075684
    7. '`' → logprob: -12.884276390075684
    8. '(
' → logprob: -14.009276390075684
    9. '    ' → logprob: -14.259276390075684
    10. '  ' → logprob: -14.259276390075684

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012737659562844783
    2. ' ' → logprob: -9.250127792358398
    3. '0' → logprob: -10.625127792358398
    4. '   ' → logprob: -12.250127792358398
    5. '  ' → logprob: -14.250127792358398
    6. '    ' → logprob: -14.500127792358398
    7. '
' → logprob: -15.437627792358398
    8. ')' → logprob: -16.0001277923584
    9. '	' → logprob: -16.0626277923584
    10. '```' → logprob: -16.1251277923584

Token 97: '))[' (ID: 101036)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6053628921508789
    2. ')))' → logprob: -1.230362892150879
    3. ')),' → logprob: -2.605362892150879
    4. ')' → logprob: -2.855362892150879
    5. ')),
' → logprob: -3.980362892150879
    6. '))
' → logprob: -5.355362892150879
    7. '),' → logprob: -5.980362892150879
    8. ')));' → logprob: -6.980362892150879
    9. '))),' → logprob: -7.105362892150879
    10. ')
' → logprob: -7.355362892150879

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022849280387163162
    2. ',' → logprob: -4.647849082946777
    3. '],' → logprob: -4.897849082946777
    4. '),' → logprob: -5.522849082946777
    5. ')' → logprob: -7.397849082946777
    6. '])' → logprob: -8.022849082946777
    7. '],
' → logprob: -8.897849082946777
    8. ' ' → logprob: -9.397849082946777
    9. ']' → logprob: -9.647849082946777
    10. ':],' → logprob: -9.772849082946777

Token 99: ':' (ID: 25)
  Prédit: ':],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.1960996836423874
    2. ':' → logprob: -2.0710997581481934
    3. '],' → logprob: -3.0710997581481934
    4. '],
' → logprob: -6.196099758148193
    5. ':]' → logprob: -6.196099758148193
    6. '),' → logprob: -7.321099758148193
    7. ']),' → logprob: -7.946099758148193
    8. ']' → logprob: -9.321099281311035
    9. '])' → logprob: -9.446099281311035
    10. ']),
' → logprob: -9.571099281311035

Token 100: '],
' (ID: 2274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07090748101472855
    2. '),' → logprob: -3.3209075927734375
    3. '   ' → logprob: -3.8209075927734375
    4. '       ' → logprob: -5.4459075927734375
    5. '),
' → logprob: -5.5709075927734375
    6. ',
' → logprob: -6.5709075927734375
    7. '],' → logprob: -7.9459075927734375
    8. ' ,' → logprob: -8.195907592773438
    9. '           ' → logprob: -9.570907592773438
    10. '],
' → logprob: -9.945907592773438

Token 101: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20602372288703918
    2. ' intervals' → logprob: -2.831023693084717
    3. '(acc' → logprob: -2.956023693084717
    4. '(interval' → logprob: -3.831023693084717
    5. '   ' → logprob: -4.206023693084717
    6. 'interval' → logprob: -4.331023693084717
    7. '(' → logprob: -4.831023693084717
    8. '(res' → logprob: -5.456023693084717
    9. 'res' → logprob: -5.456023693084717
    10. 'acc' → logprob: -5.831023693084717

Token 102: ' (' (ID: 350)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.057564906775951385
    2. '(interval' → logprob: -3.5575649738311768
    3. ' (' → logprob: -3.6825649738311768
    4. '(s' → logprob: -7.057564735412598
    5. '(' (adapté à ' (') → logprob: -7.182564735412598
    6. 'sorted' → logprob: -7.932564735412598
    7. '   ' → logprob: -8.807564735412598
    8. ' sorted' → logprob: -9.682564735412598
    9. 'interval' → logprob: -10.932564735412598
    10. '(sort' → logprob: -11.432564735412598

Token 103: '1' (ID: 16)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.3754841685295105
    2. 'sorted' → logprob: -1.7504842281341553
    3. '(interval' → logprob: -2.7504842281341553
    4. '0' → logprob: -3.5004842281341553
    5. '(sorted' → logprob: -3.8754842281341553
    6. '(' → logprob: -4.250483989715576
    7. '-' → logprob: -5.750483989715576
    8. ' intervals' → logprob: -6.000483989715576
    9. 'float' → logprob: -6.625483989715576
    10. ' sorted' → logprob: -7.125483989715576

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8232690460281447e-05
    2. 'interval' → logprob: -10.625048637390137
    3. ' ,' → logprob: -11.750048637390137
    4. 'sorted' → logprob: -12.000048637390137
    5. ',
' → logprob: -12.500048637390137
    6. ',[' → logprob: -13.625048637390137
    7. '[' → logprob: -13.625048637390137
    8. ' intervals' → logprob: -13.875048637390137
    9. '),' → logprob: -14.625048637390137
    10. ',(' → logprob: -14.875048637390137

Token 105: ' sorted' (ID: 20099)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.29283106327056885
    2. 'sorted' → logprob: -1.6678310632705688
    3. ' intervals' → logprob: -2.7928309440612793
    4. ' sorted' → logprob: -5.667830944061279
    5. '   ' → logprob: -8.417831420898438
    6. '    ' → logprob: -9.292831420898438
    7. '       ' → logprob: -9.417831420898438
    8. '           ' → logprob: -10.417831420898438
    9. '        ' → logprob: -10.917831420898438
    10. ')' → logprob: -11.417831420898438

Token 106: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -6.635164754698053e-05
    2. 'interval' → logprob: -9.625066757202148
    3. ' intervals' → logprob: -15.750066757202148
    4. '(' → logprob: -16.00006675720215
    5. '(
' → logprob: -18.25006675720215
    6. '```' → logprob: -19.50006675720215
    7. ')' → logprob: -19.62506675720215
    8. 'Intervals' → logprob: -19.62506675720215
    9. ' (' → logprob: -19.75006675720215
    10. '(indices' → logprob: -20.00006675720215

Token 107: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0538826584815979
    2. 'interval' → logprob: -3.178882598876953
    3. '(interval' → logprob: -4.553882598876953
    4. ' intervals' → logprob: -8.678882598876953
    5. ')' → logprob: -9.803882598876953
    6. '[' → logprob: -10.803882598876953
    7. 'erv' → logprob: -11.053882598876953
    8. '),' → logprob: -12.303882598876953
    9. 'ranges' → logprob: -12.303882598876953
    10. 'es' → logprob: -12.678882598876953

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17981283366680145
    2. '(interval' → logprob: -1.8048127889633179
    3. ' ,' → logprob: -10.05481243133545
    4. ',key' → logprob: -12.30481243133545
    5. ' (' → logprob: -12.55481243133545
    6. 'interval' → logprob: -12.92981243133545
    7. '(inter' → logprob: -13.30481243133545
    8. '[' → logprob: -13.80481243133545
    9. '   ' → logprob: -14.05481243133545
    10. ',
' → logprob: -14.05481243133545

Token 109: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.011069518513977528
    2. ' key' → logprob: -4.511069297790527
    3. '(key' → logprob: -11.636069297790527
    4. 'lambda' → logprob: -12.261069297790527
    5. '0' → logprob: -12.511069297790527
    6. '1' → logprob: -13.136069297790527
    7. ',key' → logprob: -14.261069297790527
    8. ' ' → logprob: -14.761069297790527
    9. '[key' → logprob: -15.261069297790527
    10. 'item' → logprob: -15.386069297790527

Token 110: '=item' (ID: 76091)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.8110211491584778
    2. '(lambda' → logprob: -0.9360211491584778
    3. '=item' → logprob: -2.811021089553833
    4. '=lambda' → logprob: -2.811021089553833
    5. '(interval' → logprob: -3.186021089553833
    6. '(' → logprob: -7.436021327972412
    7. '[item' → logprob: -7.436021327972412
    8. 'lambda' → logprob: -8.561020851135254
    9. '=' → logprob: -9.311020851135254
    10. '(
' → logprob: -9.436020851135254

Token 111: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.3824332654476166
    2. 'getitem' → logprob: -1.257433295249939
    3. '(' → logprob: -4.1324334144592285
    4. 'get' → logprob: -4.5074334144592285
    5. '(lambda' → logprob: -6.7574334144592285
    6. '=item' → logprob: -7.0074334144592285
    7. 'item' → logprob: -7.1324334144592285
    8. '[' → logprob: -7.3824334144592285
    9. '(item' → logprob: -7.5074334144592285
    10. 'lambda' → logprob: -7.5074334144592285

Token 112: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00675551313906908
    2. '1' → logprob: -5.006755352020264
    3. '[' → logprob: -10.506755828857422
    4. '(lambda' → logprob: -12.256755828857422
    5. '```' → logprob: -13.131755828857422
    6. ',' → logprob: -13.881755828857422
    7. '0' → logprob: -14.006755828857422
    8. 'lambda' → logprob: -14.006755828857422
    9. '('' → logprob: -14.131755828857422
    10. ' (' → logprob: -14.381755828857422

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.250015258789062
    3. '0' → logprob: -13.125015258789062
    4. '   ' → logprob: -15.875015258789062
    5. '```' → logprob: -16.250015258789062
    6. '-' → logprob: -17.125015258789062
    7. '    ' → logprob: -17.812515258789062
    8. '  ' → logprob: -18.062515258789062
    9. ')' → logprob: -18.125015258789062
    10. '(' → logprob: -18.312515258789062

Token 114: '))[' (ID: 101036)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.00021212305000517517
    2. '())[' → logprob: -9.250211715698242
    3. '[' → logprob: -9.500211715698242
    4. '))[' → logprob: -11.000211715698242
    5. '(' → logprob: -11.750211715698242
    6. '()[' → logprob: -12.000211715698242
    7. ' )[' → logprob: -13.000211715698242
    8. ')(' → logprob: -13.250211715698242
    9. ')' → logprob: -13.500211715698242
    10. ',' → logprob: -14.125211715698242

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026777281891554594
    2. '[' → logprob: -8.25026798248291
    3. ' ' → logprob: -12.37526798248291
    4. ')[' → logprob: -14.00026798248291
    5. '(' → logprob: -14.25026798248291
    6. '   ' → logprob: -15.37526798248291
    7. '][' → logprob: -15.87526798248291
    8. ' [' → logprob: -16.125267028808594
    9. '
' → logprob: -16.125267028808594
    10. '```' → logprob: -16.500267028808594

Token 116: '][' (ID: 2696)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.28432488441467285
    2. '][' → logprob: -1.4093248844146729
    3. '[' → logprob: -5.909324645996094
    4. '])[' → logprob: -8.659324645996094
    5. ')' → logprob: -9.284324645996094
    6. ')][' → logprob: -10.659324645996094
    7. '))[' → logprob: -10.659324645996094
    8. '1' → logprob: -10.909324645996094
    9. ']))' → logprob: -11.034324645996094
    10. ' )[' → logprob: -11.034324645996094

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.750009536743164
    3. '   ' → logprob: -14.625009536743164
    4. '
' → logprob: -14.750009536743164
    5. '```' → logprob: -15.125009536743164
    6. '[' → logprob: -17.000009536743164
    7. '0' → logprob: -17.250009536743164
    8. ']' → logprob: -17.500009536743164
    9. '

' → logprob: -17.562509536743164
    10. ')' → logprob: -17.625009536743164

Token 118: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06892816722393036
    2. '))' → logprob: -2.8189282417297363
    3. ')))' → logprob: -5.068928241729736
    4. ')
' → logprob: -7.443928241729736
    5. '   ' → logprob: -10.443927764892578
    6. '))))' → logprob: -11.193927764892578
    7. '))
' → logprob: -11.943927764892578
    8. ' )' → logprob: -12.193927764892578
    9. ')),' → logprob: -13.068927764892578
    10. '),' → logprob: -14.068927764892578

Token 119: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038415249437093735
    2. '))' → logprob: -6.003841400146484
    3. '   ' → logprob: -6.753841400146484
    4. ')
' → logprob: -8.628841400146484
    5. ')))' → logprob: -11.128841400146484
    6. '       ' → logprob: -13.503841400146484
    7. ' )' → logprob: -14.378841400146484
    8. ')`' → logprob: -14.628841400146484
    9. ')
' → logprob: -14.878841400146484
    10. '}' → logprob: -15.378841400146484

Token 120: ' )[' (ID: 192008)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006767125800251961
    2. '))' → logprob: -5.006767272949219
    3. ')
' → logprob: -10.631767272949219
    4. '   ' → logprob: -10.756767272949219
    5. ')))' → logprob: -12.881767272949219
    6. ')[' (adapté à ' )[') → logprob: -13.506767272949219
    7. ' )' → logprob: -13.881767272949219
    8. ' ' → logprob: -14.506767272949219
    9. ').' → logprob: -16.13176727294922
    10. ')`' → logprob: -16.75676727294922

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.875
    4. '00' → logprob: -17.625
    5. '
' → logprob: -18.5
    6. '000' → logprob: -18.625
    7. '1' → logprob: -18.75
    8. '```' → logprob: -19.0
    9. '[' → logprob: -19.125
    10. '#' → logprob: -19.25

Token 122: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. '}' → logprob: -13.375005722045898
    3. ' )' → logprob: -13.500005722045898
    4. ')
' → logprob: -14.000005722045898
    5. '<|end|>' → logprob: -14.375005722045898
    6. '```' → logprob: -14.875005722045898
    7. '))' → logprob: -15.500005722045898
    8. ')}' → logprob: -15.875005722045898
    9. '）' → logprob: -16.6250057220459
    10. ']' → logprob: -16.7500057220459

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014770099660381675
    2. '<|end|>' → logprob: -6.751477241516113
    3. '
' → logprob: -8.876477241516113
    4. '```' → logprob: -9.626477241516113
    5. '#' → logprob: -10.126477241516113
    6. ')
' → logprob: -10.376477241516113
    7. 'print' → logprob: -11.876477241516113
    8. ' )' → logprob: -12.251477241516113
    9. '}' → logprob: -12.626477241516113
    10. '\n' → logprob: -13.251477241516113

Token 124: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -14.125000953674316
    3. ' print' → logprob: -14.875000953674316
    4. '```' → logprob: -16.625001907348633
    5. ')
' → logprob: -17.750001907348633
    6. '
' → logprob: -18.000001907348633
    7. '(print' → logprob: -18.750001907348633
    8. '#print' → logprob: -18.750001907348633
    9. 'pr' → logprob: -19.000001907348633
    10. 'prin' → logprob: -19.375001907348633

Token 125: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.026360677555203438
    2. '(' → logprob: -3.6513607501983643
    3. 'res' → logprob: -9.776360511779785
    4. '()' → logprob: -14.151360511779785
    5. ' (' → logprob: -14.276360511779785
    6. ' res' → logprob: -14.526360511779785
    7. '(
' → logprob: -14.901360511779785
    8. '('' → logprob: -15.026360511779785
    9. '(len' → logprob: -16.1513614654541
    10. '```' → logprob: -16.1513614654541

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -14.250001907348633
    3. '))' → logprob: -14.750001907348633
    4. ')`' → logprob: -15.125001907348633
    5. '`)' → logprob: -15.375001907348633
    6. ' )' → logprob: -15.375001907348633
    7. '')' → logprob: -16.875001907348633
    8. '(' → logprob: -17.500001907348633
    9. '#' → logprob: -17.625001907348633
    10. '```' → logprob: -17.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 124
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 99
Précision stricte (1ère position): 42.74%
Précision adaptée (1ère position): 45.16%
Précision (top 10): 79.84%
================================================================================
