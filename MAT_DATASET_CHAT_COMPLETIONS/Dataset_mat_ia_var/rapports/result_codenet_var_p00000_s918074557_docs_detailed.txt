================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:26:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def display_multiplication_table():
    """
    Affiche la table de multiplication de 1 à 9.
    
    Pour chaque entier i de 1 à 9, et pour chaque entier j de 1 à 9,
    cette fonction affiche une ligne de la forme "ixj=produit".
    Exemple : "2x3=6"
    """
    # Boucle extérieure : parcourt les entiers de 1 à 9 (inclus)
    for i in range(1, 10):
        # Boucle intérieure : parcourt aussi les entiers de 1 à 9 (inclus)
        for j in range(1, 10):
            # Concatène i, 'x', j et le résultat de leur multiplication dans une chaîne
            # et l'affiche à l'écran.
            print(str(i) + "x" + str(j) + "=" + str(i * j))

# Appel de la fonction pour afficher la table de multiplication
display_multiplication_table()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' display' (ID: 4589)
  → Token d'amorce (pas de prédiction)

Token 2: '_m' (ID: 1285)
  → Token d'amorce (pas de prédiction)

Token 3: 'ultip' (ID: 22975)
  Prédit: 'enu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enu' → logprob: -0.06331311911344528
    2. 'essage' → logprob: -2.9383130073547363
    3. 'essages' → logprob: -5.313313007354736
    4. 'atrix' → logprob: -6.063313007354736
    5. 'ain' → logprob: -7.438313007354736
    6. 'etadata' → logprob: -8.438313484191895
    7. 'e' → logprob: -9.688313484191895
    8. 'enus' → logprob: -9.938313484191895
    9. 'ethod' → logprob: -10.438313484191895
    10. 'etrics' → logprob: -10.688313484191895

Token 4: 'lication' (ID: 2389)
  Prédit: 'liers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liers' → logprob: -0.31883299350738525
    2. 'lication' → logprob: -1.6938329935073853
    3. 'licity' → logprob: -3.3188328742980957
    4. 'lic' → logprob: -3.4438328742980957
    5. 'li' → logprob: -4.443832874298096
    6. 'lier' → logprob: -5.943832874298096
    7. 'l' → logprob: -6.068832874298096
    8. 'lications' → logprob: -7.068832874298096
    9. 'licate' → logprob: -7.068832874298096
    10. '()' → logprob: -8.068833351135254

Token 5: '_table' (ID: 11721)
  Prédit: '(:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(:' → logprob: -0.023900650441646576
    2. '():' → logprob: -4.648900508880615
    3. '(_:' → logprob: -4.773900508880615
    4. '(' → logprob: -6.273900508880615
    5. '_' → logprob: -7.648900508880615
    6. '(':' → logprob: -8.023900985717773
    7. '(":' → logprob: -8.148900985717773
    8. '(*' → logprob: -8.273900985717773
    9. '(`' → logprob: -8.273900985717773
    10. ':' → logprob: -8.273900985717773

Token 6: '():
' (ID: 8595)
  Prédit: '(:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(:' → logprob: -0.002932298928499222
    2. '():' → logprob: -6.252932071685791
    3. '(_:' → logprob: -7.502932071685791
    4. '(' → logprob: -8.87793254852295
    5. '(::' → logprob: -9.50293254852295
    6. '(':' → logprob: -10.37793254852295
    7. '(...' → logprob: -10.62793254852295
    8. '(:,' → logprob: -10.75293254852295
    9. '(`' → logprob: -10.75293254852295
    10. ' (:' → logprob: -11.00293254852295

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06258665025234222
    2. 'pass' → logprob: -2.812586545944214
    3. '```' → logprob: -7.687586784362793
    4. '  ' → logprob: -10.062586784362793
    5. ' pass' → logprob: -10.562586784362793
    6. '    ' → logprob: -10.937586784362793
    7. '   ' → logprob: -11.312586784362793
    8. 'print' → logprob: -11.312586784362793
    9. '	pass' → logprob: -11.562586784362793
    10. ':' → logprob: -11.562586784362793

Token 8: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04935732111334801
    2. 'pass' → logprob: -3.0493574142456055
    3. '```' → logprob: -8.424357414245605
    4. 'for' → logprob: -8.924357414245605
    5. 'print' → logprob: -9.174357414245605
    6. '#' → logprob: -9.924357414245605
    7. '  ' → logprob: -10.049357414245605
    8. '    ' → logprob: -10.174357414245605
    9. 'table' → logprob: -10.424357414245605
    10. 'n' → logprob: -10.424357414245605

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041667260229587555
    2. '       ' → logprob: -6.129166603088379
    3. 'Displays' → logprob: -6.879166603088379
    4. 'Display' → logprob: -8.004166603088379
    5. 'Generate' → logprob: -8.129166603088379
    6. 'Gener' → logprob: -8.879166603088379
    7. 'Returns' → logprob: -10.254166603088379
    8. '  ' → logprob: -10.379166603088379
    9. '    ' → logprob: -10.504166603088379
    10. 'This' → logprob: -10.629166603088379

Token 10: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0442427396774292
    2. 'Displays' → logprob: -3.6692428588867188
    3. 'Gener' → logprob: -4.544242858886719
    4. 'Generate' → logprob: -5.669242858886719
    5. 'Display' → logprob: -6.169242858886719
    6. 'This' → logprob: -7.294242858886719
    7. '"""' → logprob: -8.294242858886719
    8. 'Returns' → logprob: -8.669242858886719
    9. '       ' → logprob: -8.919242858886719
    10. 'Print' → logprob: -9.169242858886719

Token 11: 'iche' (ID: 7509)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060277774930000305
    2. 'irm' → logprob: -3.5602777004241943
    3. '  ' → logprob: -5.310277938842773
    4. '    ' → logprob: -5.435277938842773
    5. '"""' → logprob: -5.685277938842773
    6. 'ichage' → logprob: -5.810277938842773
    7. '       ' → logprob: -6.060277938842773
    8. 'irms' → logprob: -6.185277938842773
    9. 'def' → logprob: -6.560277938842773
    10. 'ording' → logprob: -6.810277938842773

Token 12: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09585566818714142
    2. 'e' → logprob: -3.220855712890625
    3. 's' → logprob: -3.845855712890625
    4. '    ' → logprob: -4.095855712890625
    5. 'r' → logprob: -5.470855712890625
    6. '  ' → logprob: -5.470855712890625
    7. '       ' → logprob: -6.470855712890625
    8. '     ' → logprob: -7.220855712890625
    9. ' ' → logprob: -7.470855712890625
    10. 'd' → logprob: -7.845855712890625

Token 13: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.06266805529594421
    2. 'multip' → logprob: -2.8126680850982666
    3. 'mult' → logprob: -8.062667846679688
    4. ' multiplication' → logprob: -9.437667846679688
    5. '_table' → logprob: -9.687667846679688
    6. ' table' → logprob: -10.062667846679688
    7. 'tabl' → logprob: -10.187667846679688
    8. 'tables' → logprob: -10.312667846679688
    9. ' табли' → logprob: -10.812667846679688
    10. 'tab' → logprob: -10.937667846679688

Token 14: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.005394314881414175
    2. '   ' → logprob: -5.755394458770752
    3. ' de' → logprob: -6.505394458770752
    4. 'des' → logprob: -7.630394458770752
    5. '_de' → logprob: -9.130393981933594
    6. 'multip' → logprob: -9.880393981933594
    7. '  ' → logprob: -10.255393981933594
    8. '    ' → logprob: -11.630393981933594
    9. '       ' → logprob: -11.755393981933594
    10. '	de' → logprob: -12.630393981933594

Token 15: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.00015502817404922098
    2. ' multiplication' → logprob: -9.125155448913574
    3. 'mult' → logprob: -10.250155448913574
    4. 'multi' → logprob: -12.625155448913574
    5. 'Multip' → logprob: -13.250155448913574
    6. 'mont' → logprob: -13.250155448913574
    7. 'mul' → logprob: -14.500155448913574
    8. 'multiply' → logprob: -14.500155448913574
    9. 'mut' → logprob: -14.750155448913574
    10. 'la' → logprob: -14.750155448913574

Token 16: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034932732582092285
    2. ':' → logprob: -4.159932613372803
    3. 'de' → logprob: -5.409932613372803
    4. '"""' → logprob: -5.409932613372803
    5. '       ' → logprob: -5.659932613372803
    6. 'pour' → logprob: -5.784932613372803
    7. '"""
' → logprob: -6.534932613372803
    8. '    ' → logprob: -8.284933090209961
    9. 'du' → logprob: -8.409933090209961
    10. '.' → logprob: -8.659933090209961

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00870155543088913
    2. '0' → logprob: -4.883701324462891
    3. '2' → logprob: -8.13370132446289
    4. 'n' → logprob: -8.38370132446289
    5. 'de' → logprob: -8.50870132446289
    6. ' ' → logprob: -8.75870132446289
    7. 'l' → logprob: -9.13370132446289
    8. '9' → logprob: -10.50870132446289
    9. 'un' → logprob: -10.50870132446289
    10. 'multip' → logprob: -11.25870132446289

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0050539602525532246
    2. '0' → logprob: -5.755053997039795
    3. 'de' → logprob: -7.505053997039795
    4. '9' → logprob: -7.755053997039795
    5. 'l' → logprob: -8.005053520202637
    6. 'n' → logprob: -9.255053520202637
    7. '10' → logprob: -9.255053520202637
    8. '2' → logprob: -9.255053520202637
    9. 'la' → logprob: -9.755053520202637
    10. 'un' → logprob: -10.005053520202637

Token 19: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.004373036324977875
    2. ' à' → logprob: -5.629373073577881
    3. '   ' → logprob: -7.504373073577881
    4. 'jus' → logprob: -9.629372596740723
    5. 'au' → logprob: -10.004372596740723
    6. 'À' → logprob: -10.379372596740723
    7. ' jusqu' → logprob: -10.629372596740723
    8. ''à' → logprob: -11.004372596740723
    9. '.' → logprob: -12.379372596740723
    10. '1' → logprob: -12.629372596740723

Token 20: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004151056986302137
    2. '9' → logprob: -5.504150867462158
    3. '20' → logprob: -10.504151344299316
    4. '100' → logprob: -10.629151344299316
    5. 'n' → logprob: -11.254151344299316
    6. ' ' → logprob: -12.129151344299316
    7. '   ' → logprob: -14.004151344299316
    8. '  ' → logprob: -14.879151344299316
    9. '12' → logprob: -14.879151344299316
    10. ' ten' → logprob: -15.254151344299316

Token 21: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007249409682117403
    2. '9' → logprob: -7.250724792480469
    3. '100' → logprob: -11.625724792480469
    4. 'n' → logprob: -12.500724792480469
    5. '20' → logprob: -14.000724792480469
    6. '12' → logprob: -14.375724792480469
    7. 'ten' → logprob: -15.000724792480469
    8. '１０' → logprob: -16.00072479248047
    9. '1' → logprob: -16.12572479248047
    10. ' ten' → logprob: -16.37572479248047

Token 22: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0741812139749527
    2. ':' → logprob: -3.199181318283081
    3. '"""' → logprob: -3.574181318283081
    4. '       ' → logprob: -6.699181079864502
    5. '```' → logprob: -7.449181079864502
    6. '"""
' → logprob: -8.44918155670166
    7. '""' → logprob: -8.82418155670166
    8. '":' → logprob: -9.07418155670166
    9. '  ' → logprob: -9.82418155670166
    10. ':"' → logprob: -9.94918155670166

Token 23: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004789426457136869
    2. '"""' → logprob: -5.379789352416992
    3. '       ' → logprob: -9.629789352416992
    4. '```' → logprob: -9.754789352416992
    5. '"""
' → logprob: -10.629789352416992
    6. '  ' → logprob: -11.754789352416992
    7. '    ' → logprob: -12.254789352416992
    8. '""' → logprob: -12.754789352416992
    9. ' """' → logprob: -13.754789352416992
    10. ':' → logprob: -14.004789352416992

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001560331555083394
    2. '"""' → logprob: -6.751560211181641
    3. '"""
' → logprob: -8.25156021118164
    4. '       ' → logprob: -9.75156021118164
    5. 'def' → logprob: -10.87656021118164
    6. '  ' → logprob: -10.87656021118164
    7. '```' → logprob: -11.00156021118164
    8. 'return' → logprob: -12.25156021118164
    9. 'print' → logprob: -12.87656021118164
    10. '    ' → logprob: -13.12656021118164

Token 25: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1843738704919815
    2. '"""' → logprob: -1.8093738555908203
    3. '```' → logprob: -5.93437385559082
    4. 'return' → logprob: -7.05937385559082
    5. '       ' → logprob: -7.93437385559082
    6. 'print' → logprob: -7.93437385559082
    7. 'for' → logprob: -9.18437385559082
    8. '""' → logprob: -9.43437385559082
    9. 'pass' → logprob: -10.05937385559082
    10. '"""
' → logprob: -10.30937385559082

Token 26: ' chaque' (ID: 21194)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.45898643136024475
    2. '   ' → logprob: -1.4589864015579224
    3. 'termin' → logprob: -3.708986520767212
    4. 'aff' → logprob: -3.958986520767212
    5. 'Afficher' → logprob: -4.333986282348633
    6. ' continuer' → logprob: -4.583986282348633
    7. 'faire' → logprob: -4.708986282348633
    8. ' génér' → logprob: -5.208986282348633
    9. 'contin' → logprob: -5.458986282348633
    10. ' effectuer' → logprob: -5.583986282348633

Token 27: ' entier' (ID: 80473)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.014745581895112991
    2. 'ent' → logprob: -5.139745712280273
    3. 'ch' → logprob: -6.014745712280273
    4. 'cha' → logprob: -6.764745712280273
    5. 'ligne' → logprob: -6.764745712280273
    6. 'n' → logprob: -6.889745712280273
    7. ' nombre' → logprob: -7.264745712280273
    8. 'multiple' → logprob: -7.889745712280273
    9. 'multip' → logprob: -7.889745712280273
    10. 'num' → logprob: -7.889745712280273

Token 28: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10067372769117355
    2. ':' → logprob: -3.6006736755371094
    3. 'de' → logprob: -3.8506736755371094
    4. ',' → logprob: -4.100673675537109
    5. 'dans' → logprob: -4.100673675537109
    6. '    ' → logprob: -6.225673675537109
    7. 'd' → logprob: -6.350673675537109
    8. 'def' → logprob: -6.725673675537109
    9. '```' → logprob: -6.725673675537109
    10. 'à' → logprob: -6.975673675537109

Token 29: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18929067254066467
    2. '   ' → logprob: -1.9392906427383423
    3. ':\' → logprob: -4.439290523529053
    4. ',' → logprob: -5.064290523529053
    5. 'dans' → logprob: -5.814290523529053
    6. ':,' → logprob: -6.564290523529053
    7. ':
' → logprob: -6.939290523529053
    8. '       ' → logprob: -6.939290523529053
    9. ':",' → logprob: -7.439290523529053
    10. 'de' → logprob: -7.564290523529053

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. 'range' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.50001049041748
    4. '   ' → logprob: -13.50001049041748
    5. '```' → logprob: -15.75001049041748
    6. '2' → logprob: -16.625011444091797
    7. '  ' → logprob: -17.250011444091797
    8. '0' → logprob: -17.250011444091797
    9. '`' → logprob: -18.125011444091797
    10. ' range' → logprob: -18.375011444091797

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006716913543641567
    2. 'range' → logprob: -5.006716728210449
    3. ' range' → logprob: -14.38171672821045
    4. '(range' → logprob: -14.88171672821045
    5. '(' → logprob: -15.25671672821045
    6. '   ' → logprob: -16.006717681884766
    7. '```' → logprob: -16.631717681884766
    8. 'dans' → logprob: -17.006717681884766
    9. ' ' → logprob: -17.131717681884766
    10. 'ranges' → logprob: -17.256717681884766

Token 32: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0008955012308433652
    2. ' à' → logprob: -7.2508955001831055
    3. '   ' → logprob: -8.750895500183105
    4. ':' → logprob: -11.125895500183105
    5. 'À' → logprob: -12.125895500183105
    6. 'au' → logprob: -13.125895500183105
    7. ''à' → logprob: -13.250895500183105
    8. 'jus' → logprob: -13.250895500183105
    9. 'á' → logprob: -15.375895500183105
    10. '’à' → logprob: -15.500895500183105

Token 33: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0011686758371070027
    2. '8' → logprob: -7.251168727874756
    3. '   ' → logprob: -7.876168727874756
    4. '10' → logprob: -10.501168251037598
    5. '  ' → logprob: -10.626168251037598
    6. ' ' → logprob: -10.626168251037598
    7. '```' → logprob: -13.876168251037598
    8. '    ' → logprob: -14.376168251037598
    9. 'def' → logprob: -15.376168251037598
    10. 'nine' → logprob: -15.501168251037598

Token 34: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.8889261304575484e-06
    2. '10' → logprob: -13.125003814697266
    3. '8' → logprob: -13.250003814697266
    4. '   ' → logprob: -17.500003814697266
    5. 'nine' → logprob: -17.750003814697266
    6. '```' → logprob: -18.625003814697266
    7. '  ' → logprob: -19.250003814697266
    8. ' ' → logprob: -19.500003814697266
    9. '999' → logprob: -19.875003814697266
    10. '９' → logprob: -20.000003814697266

Token 35: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5330681204795837
    2. '   ' → logprob: -1.1580681800842285
    3. ',' → logprob: -3.0330681800842285
    4. '       ' → logprob: -3.5330681800842285
    5. ':\' → logprob: -4.6580681800842285
    6. ':,' → logprob: -5.0330681800842285
    7. ':",' → logprob: -6.0330681800842285
    8. ' :' → logprob: -7.7830681800842285
    9. '":' → logprob: -8.03306770324707
    10. ':
' → logprob: -8.03306770324707

Token 36: ' et' (ID: 859)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.429874986410141
    2. '   ' → logprob: -1.5548750162124634
    3. 'il' → logprob: -3.804874897003174
    4. 'on' → logprob: -3.929874897003174
    5. 'la' → logprob: -4.304874897003174
    6. 'le' → logprob: -4.304874897003174
    7. 'vous' → logprob: -4.679874897003174
    8. 'pour' → logprob: -4.804874897003174
    9. 'un' → logprob: -4.929874897003174
    10. '       ' → logprob: -5.054874897003174

Token 37: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5086811184883118
    2. 'pour' → logprob: -1.133681058883667
    3. 'de' → logprob: -3.258681058883667
    4. 'd' → logprob: -4.383681297302246
    5. '       ' → logprob: -5.508681297302246
    6. 'print' → logprob: -5.883681297302246
    7. 'def' → logprob: -6.133681297302246
    8. '    ' → logprob: -6.133681297302246
    9. 'il' → logprob: -6.508681297302246
    10. 'à' → logprob: -6.633681297302246

Token 38: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.03169145807623863
    2. ' chaque' → logprob: -3.531691551208496
    3. 'Chaque' → logprob: -7.281691551208496
    4. 'ch' → logprob: -7.656691551208496
    5. '   ' → logprob: -7.781691551208496
    6. 'each' → logprob: -8.406691551208496
    7. 'cada' → logprob: -9.531691551208496
    8. '每' → logprob: -10.281691551208496
    9. ' Chaque' → logprob: -12.156691551208496
    10. '```' → logprob: -12.656691551208496

Token 39: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.014546222984790802
    2. ' entier' → logprob: -4.5145463943481445
    3. 'nombre' → logprob: -6.5145463943481445
    4. 'j' → logprob: -6.8895463943481445
    5. 'integer' → logprob: -7.7645463943481445
    6. 'int' → logprob: -8.889546394348145
    7. 'enti' → logprob: -9.264546394348145
    8. ''ent' → logprob: -9.514546394348145
    9. '``' → logprob: -10.514546394348145
    10. 'n' → logprob: -10.764546394348145

Token 40: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.250001907348633
    4. 'je' → logprob: -17.625001907348633
    5. '	j' → logprob: -18.000001907348633
    6. '```' → logprob: -18.125001907348633
    7. '`' → logprob: -18.250001907348633
    8. ' ' → logprob: -18.875001907348633
    9. 'jou' → logprob: -18.875001907348633
    10. '$j' → logprob: -19.000001907348633

Token 41: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.002562695648521185
    2. '   ' → logprob: -6.252562522888184
    3. ' de' → logprob: -7.502562522888184
    4. 'dans' → logprob: -10.127562522888184
    5. 'def' → logprob: -10.877562522888184
    6. 'en' → logprob: -12.252562522888184
    7. '    ' → logprob: -12.502562522888184
    8. '       ' → logprob: -12.877562522888184
    9. 'from' → logprob: -13.002562522888184
    10. ' ' → logprob: -13.127562522888184

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.992775888647884e-05
    2. ' ' → logprob: -9.875069618225098
    3. '   ' → logprob: -11.250069618225098
    4. 'range' → logprob: -13.000069618225098
    5. '2' → logprob: -13.375069618225098
    6. '  ' → logprob: -13.500069618225098
    7. '    ' → logprob: -16.250070571899414
    8. '```' → logprob: -16.750070571899414
    9. 'la' → logprob: -17.750070571899414
    10. '0' → logprob: -17.875070571899414

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.125
    3. ' ' → logprob: -17.5
    4. '   ' → logprob: -19.875
    5. '0' → logprob: -20.5
    6. 'range' → logprob: -20.625
    7. '１' → logprob: -21.875
    8. '```' → logprob: -22.125
    9. '  ' → logprob: -22.625
    10. '`' → logprob: -23.625

Token 44: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -3.9054008084349334e-05
    2. ' à' → logprob: -10.250039100646973
    3. ''à' → logprob: -13.125039100646973
    4. 'À' → logprob: -14.000039100646973
    5. '   ' → logprob: -14.625039100646973
    6. '’à' → logprob: -15.750039100646973
    7. '-à' → logprob: -16.375038146972656
    8. 'á' → logprob: -16.875038146972656
    9. 'au' → logprob: -17.875038146972656
    10. ':' → logprob: -18.250038146972656

Token 45: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0012210593558847904
    2. '   ' → logprob: -6.751221179962158
    3. '  ' → logprob: -10.251220703125
    4. ' ' → logprob: -12.001220703125
    5. '10' → logprob: -12.501220703125
    6. '99' → logprob: -13.376220703125
    7. '    ' → logprob: -13.876220703125
    8. 'range' → logprob: -14.001220703125
    9. '```' → logprob: -14.376220703125
    10. '999' → logprob: -15.001220703125

Token 46: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '10' → logprob: -15.25
    3. '   ' → logprob: -16.625
    4. '  ' → logprob: -18.5
    5. ' ' → logprob: -19.25
    6. 'nine' → logprob: -19.75
    7. '09' → logprob: -20.0
    8. '99' → logprob: -20.25
    9. '```' → logprob: -20.375
    10. '    ' → logprob: -20.375

Token 47: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3139854073524475
    2. ':' → logprob: -1.9389853477478027
    3. '   ' → logprob: -2.3139853477478027
    4. ':,' → logprob: -4.313985347747803
    5. ':\' → logprob: -5.063985347747803
    6. '       ' → logprob: -5.438985347747803
    7. ',:' → logprob: -7.688985347747803
    8. ':",' → logprob: -7.688985347747803
    9. ',\' → logprob: -7.688985347747803
    10. ':return' → logprob: -8.188985824584961

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6357870101928711
    2. '       ' → logprob: -0.7607870101928711
    3. '     ' → logprob: -6.385787010192871
    4. '    ' → logprob: -7.385787010192871
    5. '      ' → logprob: -8.010787010192871
    6. 'aff' → logprob: -8.635787010192871
    7. 'vous' → logprob: -9.885787010192871
    8. '        ' → logprob: -10.010787010192871
    9. '  ' → logprob: -10.010787010192871
    10. 'nous' → logprob: -10.385787010192871

Token 49: ' cette' (ID: 7696)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.15017923712730408
    2. 'la' → logprob: -2.900179147720337
    3. 'on' → logprob: -3.775179147720337
    4. 'il' → logprob: -4.150179386138916
    5. '   ' → logprob: -4.775179386138916
    6. ' affiche' → logprob: -5.025179386138916
    7. 'cal' → logprob: -5.150179386138916
    8. 'im' → logprob: -5.400179386138916
    9. 'print' → logprob: -5.525179386138916
    10. 'le' → logprob: -5.525179386138916

Token 50: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.06122970953583717
    2. 'ligne' → logprob: -3.061229705810547
    3. 'table' → logprob: -5.186229705810547
    4. 'function' → logprob: -5.811229705810547
    5. ' fonction' → logprob: -6.186229705810547
    6. 'chaine' → logprob: -7.436229705810547
    7. 'fon' → logprob: -8.311229705810547
    8. 'cha' → logprob: -8.936229705810547
    9. '```' → logprob: -8.936229705810547
    10. 'phrase' → logprob: -9.311229705810547

Token 51: ' affiche' (ID: 127479)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.0410928949713707
    2. 'im' → logprob: -4.291092872619629
    3. 'g' → logprob: -4.666092872619629
    4. 'impl' → logprob: -5.541092872619629
    5. 'cal' → logprob: -5.666092872619629
    6. 'calc' → logprob: -6.166092872619629
    7. 'ren' → logprob: -6.666092872619629
    8. 'produ' → logprob: -6.916092872619629
    9. 'calcul' → logprob: -7.041092872619629
    10. 'print' → logprob: -7.291092872619629

Token 52: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.07344955205917358
    2. '   ' → logprob: -2.6984496116638184
    3. '  ' → logprob: -6.573449611663818
    4. ' la' → logprob: -6.948449611663818
    5. '    ' → logprob: -8.32344913482666
    6. 'une' → logprob: -8.32344913482666
    7. 'un' → logprob: -8.44844913482666
    8. 'le' → logprob: -8.57344913482666
    9. 'les' → logprob: -9.57344913482666
    10. '       ' → logprob: -10.07344913482666

Token 53: ' ligne' (ID: 19583)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.24169766902923584
    2. 'ligne' → logprob: -1.6166976690292358
    3. 'cha' → logprob: -4.866697788238525
    4. 'chaine' → logprob: -5.991697788238525
    5. 'multip' → logprob: -5.991697788238525
    6. 'phrase' → logprob: -6.866697788238525
    7. 'liste' → logprob: -7.116697788238525
    8. 'l' → logprob: -7.741697788238525
    9. 'mult' → logprob: -8.741697311401367
    10. 'description' → logprob: -8.991697311401367

Token 54: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3958936631679535
    2. '   ' → logprob: -1.1458936929702759
    3. 'd' → logprob: -5.395893573760986
    4. '       ' → logprob: -5.895893573760986
    5. 'avec' → logprob: -7.520893573760986
    6. ' de' → logprob: -7.770893573760986
    7. '    ' → logprob: -9.020894050598145
    8. ' contenant' → logprob: -9.145894050598145
    9. ':' → logprob: -9.895894050598145
    10. '     ' → logprob: -10.020894050598145

Token 55: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.04852684214711189
    2. 'table' → logprob: -3.2985267639160156
    3. 'multip' → logprob: -4.673526763916016
    4. 'produ' → logprob: -7.798526763916016
    5. ' la' → logprob: -8.298526763916016
    6. 'rés' → logprob: -8.798526763916016
    7. 'result' → logprob: -9.548526763916016
    8. 'mult' → logprob: -9.798526763916016
    9. '   ' → logprob: -10.548526763916016
    10. 'texte' → logprob: -10.923526763916016

Token 56: ' forme' (ID: 27450)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -4.723352049040841e-06
    2. ' table' → logprob: -12.875004768371582
    3. 'tables' → logprob: -13.500004768371582
    4. '_table' → logprob: -16.000003814697266
    5. '	table' → logprob: -16.000003814697266
    6. 'Table' → logprob: -16.375003814697266
    7. 'tab' → logprob: -16.625003814697266
    8. '<table' → logprob: -16.625003814697266
    9. '.table' → logprob: -16.750003814697266
    10. '-table' → logprob: -16.875003814697266

Token 57: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.39204156398773193
    2. '   ' → logprob: -1.767041563987732
    3. '       ' → logprob: -2.8920416831970215
    4. '"{' → logprob: -4.0170416831970215
    5. ':' → logprob: -4.2670416831970215
    6. '`' → logprob: -4.6420416831970215
    7. 'f' → logprob: -4.7670416831970215
    8. 'i' → logprob: -4.8920416831970215
    9. '“' → logprob: -5.0170416831970215
    10. 'd' → logprob: -5.0170416831970215

Token 58: 'ix' (ID: 1128)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0020012001041322947
    2. '{i' → logprob: -6.2520012855529785
    3. '{' → logprob: -10.25200080871582
    4. '<i' → logprob: -11.37700080871582
    5. '"{' → logprob: -11.50200080871582
    6. ' i' → logprob: -12.12700080871582
    7. '(i' → logprob: -12.25200080871582
    8. '"' → logprob: -13.12700080871582
    9. '[i' → logprob: -14.00200080871582
    10. ''i' → logprob: -14.12700080871582

Token 59: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12289808690547943
    2. ' *' → logprob: -3.2478981018066406
    3. 'x' → logprob: -3.3728981018066406
    4. '*j' → logprob: -3.7478981018066406
    5. '*' → logprob: -4.872898101806641
    6. '×' → logprob: -5.122898101806641
    7. ' ×' → logprob: -6.622898101806641
    8. ' x' → logprob: -6.872898101806641
    9. 'i' → logprob: -7.622898101806641
    10. '*y' → logprob: -7.872898101806641

Token 60: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005768446251749992
    2. ' =' → logprob: -5.255768299102783
    3. '=i' → logprob: -8.005768775939941
    4. '=result' → logprob: -9.880768775939941
    5. '==' → logprob: -10.630768775939941
    6. '=j' → logprob: -11.005768775939941
    7. '=d' → logprob: -11.130768775939941
    8. '=k' → logprob: -11.255768775939941
    9. '=\' → logprob: -11.630768775939941
    10. '=x' → logprob: -11.755768775939941

Token 61: 'produ' (ID: 11634)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36284443736076355
    2. 'k' → logprob: -1.612844467163086
    3. 'result' → logprob: -2.487844467163086
    4. 'ix' → logprob: -4.612844467163086
    5. 'produ' → logprob: -5.987844467163086
    6. '"' → logprob: -6.112844467163086
    7. 'ij' → logprob: -6.862844467163086
    8. 'x' → logprob: -6.862844467163086
    9. 'kx' → logprob: -6.987844467163086
    10. 'j' → logprob: -7.487844467163086

Token 62: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -9.543733904138207e-05
    2. 'ict' → logprob: -9.87509536743164
    3. 'its' → logprob: -10.87509536743164
    4. 'uit' → logprob: -12.12509536743164
    5. ' it' → logprob: -12.87509536743164
    6. 'ît' → logprob: -13.00009536743164
    7. '(it' → logprob: -13.25009536743164
    8. 'iit' → logprob: -13.37509536743164
    9. 'ит' → logprob: -13.50009536743164
    10. '-it' → logprob: -13.75009536743164

Token 63: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24654056131839752
    2. '".' → logprob: -1.6215405464172363
    3. '."' → logprob: -3.9965405464172363
    4. '".
' → logprob: -7.246540546417236
    5. '",' → logprob: -7.871540546417236
    6. 'd' → logprob: -8.246541023254395
    7. 'i' → logprob: -8.621541023254395
    8. '".

' → logprob: -8.996541023254395
    9. '""' → logprob: -9.121541023254395
    10. 'de' → logprob: -9.121541023254395

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005818825680762529
    2. 'for' → logprob: -5.255818843841553
    3. '```' → logprob: -8.255818367004395
    4. 'pass' → logprob: -8.630818367004395
    5. '	for' → logprob: -10.630818367004395
    6. '  ' → logprob: -10.755818367004395
    7. 'i' → logprob: -10.880818367004395
    8. ':' → logprob: -11.005818367004395
    9. '       ' → logprob: -11.130818367004395
    10. ' ' → logprob: -11.755818367004395

Token 65: ' Exemple' (ID: 142783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008244221098721027
    2. 'for' → logprob: -4.883244037628174
    3. '```' → logprob: -8.508244514465332
    4. '       ' → logprob: -9.008244514465332
    5. ':' → logprob: -9.008244514465332
    6. '  ' → logprob: -10.008244514465332
    7. '	for' → logprob: -10.383244514465332
    8. ' ' → logprob: -10.383244514465332
    9. 'pass' → logprob: -10.883244514465332
    10. '    ' → logprob: -11.508244514465332

Token 66: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13458281755447388
    2. ':' → logprob: -2.259582757949829
    3. 'de' → logprob: -4.509582996368408
    4. '       ' → logprob: -5.009582996368408
    5. 'd' → logprob: -6.009582996368408
    6. '    ' → logprob: -8.38458251953125
    7. '":' → logprob: -8.63458251953125
    8. '"""' → logprob: -8.63458251953125
    9. ':"' → logprob: -8.75958251953125
    10. ' de' → logprob: -9.38458251953125

Token 67: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5871801376342773
    2. '       ' → logprob: -1.4621801376342773
    3. '"' → logprob: -1.5871801376342773
    4. '    ' → logprob: -6.212180137634277
    5. ' "' → logprob: -6.712180137634277
    6. 'print' → logprob: -6.962180137634277
    7. '     ' → logprob: -6.962180137634277
    8. '        ' → logprob: -7.587180137634277
    9. '           ' → logprob: -7.712180137634277
    10. '"""' → logprob: -7.962180137634277

Token 68: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.273621405242011e-05
    2. '2' → logprob: -10.750032424926758
    3. '3' → logprob: -12.250032424926758
    4. '"' → logprob: -12.875032424926758
    5. 'ix' → logprob: -13.000032424926758
    6. '5' → logprob: -13.750032424926758
    7. '4' → logprob: -15.125032424926758
    8. 'i' → logprob: -15.875032424926758
    9. '8' → logprob: -16.375032424926758
    10. '6' → logprob: -16.625032424926758

Token 69: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0020227357745170593
    2. '×' → logprob: -6.252022743225098
    3. '*' → logprob: -9.502022743225098
    4. ' x' → logprob: -11.377022743225098
    5. '\' → logprob: -13.252022743225098
    6. '2' → logprob: -13.252022743225098
    7. 'ix' → logprob: -13.752022743225098
    8. '\xe2\x9c' → logprob: -14.252022743225098
    9. '"x' → logprob: -14.252022743225098
    10. '`' → logprob: -14.752022743225098

Token 70: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3730106055736542
    2. 'j' → logprob: -1.2480106353759766
    3. '3' → logprob: -3.7480106353759766
    4. '1' → logprob: -7.498010635375977
    5. '=' → logprob: -8.998010635375977
    6. '4' → logprob: -11.373010635375977
    7. 'x' → logprob: -12.748010635375977
    8. '9' → logprob: -13.248010635375977
    9. '5' → logprob: -13.498010635375977
    10. 'je' → logprob: -13.748010635375977

Token 71: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: 0.0
    2. ' =' → logprob: -17.125
    3. '="' → logprob: -18.25
    4. '=`' → logprob: -20.5
    5. '"' → logprob: -20.75
    6. '==' → logprob: -21.0
    7. '=f' → logprob: -21.125
    8. '＝' → logprob: -21.25
    9. '=d' → logprob: -21.875
    10. '=
' → logprob: -22.0

Token 72: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. 'six' → logprob: -19.0
    3. ' ' → logprob: -19.375
    4. '5' → logprob: -21.25
    5. '06' → logprob: -21.75
    6. '６' → logprob: -21.75
    7. ' six' → logprob: -22.125
    8. '"' → logprob: -22.25
    9. '7' → logprob: -22.375
    10. '  ' → logprob: -22.5

Token 73: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07973220944404602
    2. '".' → logprob: -2.5797321796417236
    3. '."' → logprob: -8.079731941223145
    4. '"."' → logprob: -8.079731941223145
    5. '""' → logprob: -8.704731941223145
    6. '"""' → logprob: -10.829731941223145
    7. '".
' → logprob: -11.204731941223145
    8. '"
' → logprob: -11.954731941223145
    9. '```' → logprob: -12.204731941223145
    10. '   ' → logprob: -13.454731941223145

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009276322089135647
    2. 'for' → logprob: -4.759276390075684
    3. ':' → logprob: -8.509276390075684
    4. '```' → logprob: -8.634276390075684
    5. '       ' → logprob: -9.259276390075684
    6. '	for' → logprob: -9.884276390075684
    7. '  ' → logprob: -10.134276390075684
    8. ' ' → logprob: -10.384276390075684
    9. '    
' → logprob: -11.259276390075684
    10. ' for' → logprob: -11.884276390075684

Token 75: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005380553193390369
    2. 'for' → logprob: -5.505380630493164
    3. '```' → logprob: -7.630380630493164
    4. ':' → logprob: -7.880380630493164
    5. '       ' → logprob: -9.255380630493164
    6. '  ' → logprob: -9.505380630493164
    7. 'pass' → logprob: -9.505380630493164
    8. ' ' → logprob: -9.880380630493164
    9. '"""' → logprob: -10.505380630493164
    10. 'print' → logprob: -10.880380630493164

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007435183506458998
    2. 'for' → logprob: -7.375743389129639
    3. 'pass' → logprob: -10.125743865966797
    4. '```' → logprob: -10.250743865966797
    5. '  ' → logprob: -10.750743865966797
    6. 'i' → logprob: -11.625743865966797
    7. ' ' → logprob: -12.500743865966797
    8. '    ' → logprob: -12.750743865966797
    9. '	for' → logprob: -14.250743865966797
    10. 'print' → logprob: -14.250743865966797

Token 77: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4784184694290161
    2. '   ' → logprob: -0.9784184694290161
    3. 'i' → logprob: -5.478418350219727
    4. 'pass' → logprob: -8.978418350219727
    5. '  ' → logprob: -11.853418350219727
    6. '```' → logprob: -12.103418350219727
    7. 'pour' → logprob: -12.353418350219727
    8. ' for' → logprob: -12.853418350219727
    9. 'n' → logprob: -13.353418350219727
    10. 'print' → logprob: -13.603418350219727

Token 78: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35002192854881287
    2. '   ' → logprob: -1.2250219583511353
    3. 'pour' → logprob: -7.100021839141846
    4. 'i' → logprob: -7.850021839141846
    5. 'pass' → logprob: -8.850022315979004
    6. '```' → logprob: -9.600022315979004
    7. 'table' → logprob: -9.850022315979004
    8. '#' → logprob: -10.225022315979004
    9. 'print' → logprob: -11.225022315979004
    10. '  ' → logprob: -11.475022315979004

Token 79: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.40767377614974976
    2. 'cler' → logprob: -2.0326738357543945
    3. 'cles' → logprob: -2.7826738357543945
    4. 'ler' → logprob: -2.7826738357543945
    5. 'cl' → logprob: -2.9076738357543945
    6. 'clé' → logprob: -4.7826738357543945
    7. '   ' → logprob: -5.7826738357543945
    8. '#' → logprob: -6.1576738357543945
    9. 'levard' → logprob: -6.4076738357543945
    10. 'len' → logprob: -6.6576738357543945

Token 80: ' extérieure' (ID: 154110)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001277853618375957
    2. 'pour' → logprob: -7.251277923583984
    3. '   ' → logprob: -7.751277923583984
    4. 'while' → logprob: -9.001277923583984
    5. ' for' → logprob: -12.876277923583984
    6. 'de' → logprob: -13.001277923583984
    7. 'from' → logprob: -13.251277923583984
    8. '_for' → logprob: -13.751277923583984
    9. 'foreach' → logprob: -14.001277923583984
    10. '```' → logprob: -14.251277923583984

Token 81: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029760675504803658
    2. '   ' → logprob: -3.5297605991363525
    3. ' for' → logprob: -12.404760360717773
    4. '	for' → logprob: -12.529760360717773
    5. '```' → logprob: -14.154760360717773
    6. 'FOR' → logprob: -14.779760360717773
    7. 'while' → logprob: -15.029760360717773
    8. '_for' → logprob: -15.529760360717773
    9. '  ' → logprob: -15.654760360717773
    10. '       ' → logprob: -15.654760360717773

Token 82: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002979240380227566
    2. '   ' → logprob: -8.125297546386719
    3. 'pour' → logprob: -13.500297546386719
    4. ' for' → logprob: -16.12529754638672
    5. 'foreach' → logprob: -16.25029754638672
    6. '	for' → logprob: -16.62529754638672
    7. 'FOR' → logprob: -16.75029754638672
    8. 'For' → logprob: -17.25029754638672
    9. 'while' → logprob: -17.37529754638672
    10. 'from' → logprob: -17.75029754638672

Token 83: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.08099077641963959
    2. 'oure' → logprob: -3.080990791320801
    3. 'ou' → logprob: -4.330990791320801
    4. 'ours' → logprob: -4.455990791320801
    5. 'h' → logprob: -6.080990791320801
    6. 'ourt' → logprob: -6.330990791320801
    7. 'hou' → logprob: -6.455990791320801
    8. 'hout' → logprob: -8.3309907913208
    9. 'e' → logprob: -8.5809907913208
    10. 'o' → logprob: -9.2059907913208

Token 84: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14807061851024628
    2. 'range' → logprob: -3.0230705738067627
    3. '   ' → logprob: -3.3980705738067627
    4. 'pour' → logprob: -3.8980705738067627
    5. 'les' → logprob: -4.023070812225342
    6. 'i' → logprob: -4.273070812225342
    7. 'de' → logprob: -5.898070812225342
    8. 'la' → logprob: -9.023070335388184
    9. 'from' → logprob: -9.273070335388184
    10. '       ' → logprob: -9.773070335388184

Token 85: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.022005213424563408
    2. 'n' → logprob: -4.272005081176758
    3. 'int' → logprob: -6.022005081176758
    4. 'inte' → logprob: -6.397005081176758
    5. 'i' → logprob: -7.022005081176758
    6. 'val' → logprob: -7.147005081176758
    7. 'inter' → logprob: -7.272005081176758
    8. 'nombre' → logprob: -8.147005081176758
    9. 'enti' → logprob: -8.397005081176758
    10. 'integer' → logprob: -8.772005081176758

Token 86: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -3.619311974034645e-05
    2. 'ier' → logprob: -11.000036239624023
    3. 'ières' → logprob: -11.250036239624023
    4. 'ière' → logprob: -12.625036239624023
    5. 'i' → logprob: -13.125036239624023
    6. 'riers' → logprob: -14.125036239624023
    7. 'ers' → logprob: -15.875036239624023
    8. 'ités' → logprob: -16.000036239624023
    9. 'r' → logprob: -16.125036239624023
    10. 'niers' → logprob: -18.125036239624023

Token 87: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12833377718925476
    2. 'for' → logprob: -2.503333806991577
    3. 'de' → logprob: -4.128333568572998
    4. '   ' → logprob: -4.253333568572998
    5. 'pour' → logprob: -4.878333568572998
    6. 'from' → logprob: -7.378333568572998
    7. '1' → logprob: -10.878334045410156
    8. '#' → logprob: -11.253334045410156
    9. ' i' → logprob: -11.503334045410156
    10. 'def' → logprob: -12.128334045410156

Token 88: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '   ' → logprob: -13.750001907348633
    3. ' ' → logprob: -15.250001907348633
    4. 'range' → logprob: -15.500001907348633
    5. '  ' → logprob: -18.500001907348633
    6. '```' → logprob: -18.750001907348633
    7. '１' → logprob: -20.125001907348633
    8. '    ' → logprob: -20.750001907348633
    9. '       ' → logprob: -21.000001907348633
    10. '`' → logprob: -21.000001907348633

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. 'range' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.375
    4. '１' → logprob: -19.625
    5. ' ' → logprob: -20.0
    6. 'for' → logprob: -20.75
    7. 'i' → logprob: -21.75
    8. '```' → logprob: -22.375
    9. '  ' → logprob: -22.5
    10. 'def' → logprob: -22.75

Token 90: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0015435494715347886
    2. ' à' → logprob: -6.5015435218811035
    3. '   ' → logprob: -10.376543998718262
    4. 'À' → logprob: -12.501543998718262
    5. 'to' → logprob: -13.251543998718262
    6. ''à' → logprob: -13.376543998718262
    7. 'au' → logprob: -14.376543998718262
    8. 'a' → logprob: -14.501543998718262
    9. 'á' → logprob: -14.626543998718262
    10. '’à' → logprob: -14.751543998718262

Token 91: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00011152983643114567
    2. '8' → logprob: -9.37511157989502
    3. '   ' → logprob: -10.62511157989502
    4. '10' → logprob: -13.37511157989502
    5. '  ' → logprob: -15.00011157989502
    6. ' ' → logprob: -15.87511157989502
    7. 'def' → logprob: -15.87511157989502
    8. 'nine' → logprob: -16.000110626220703
    9. '#' → logprob: -17.125110626220703
    10. '```' → logprob: -17.375110626220703

Token 92: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '8' → logprob: -16.375
    3. '10' → logprob: -16.875
    4. '   ' → logprob: -17.875
    5. 'nine' → logprob: -18.375
    6. ' ' → logprob: -20.25
    7. '  ' → logprob: -20.625
    8. '９' → logprob: -21.25
    9. '```' → logprob: -21.5
    10. ' nine' → logprob: -21.75

Token 93: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013350016670301557
    2. 'for' → logprob: -6.626335144042969
    3. '```' → logprob: -12.251335144042969
    4. '  ' → logprob: -13.501335144042969
    5. '	for' → logprob: -13.751335144042969
    6. ' for' → logprob: -14.376335144042969
    7. '    
' → logprob: -14.751335144042969
    8. '       ' → logprob: -15.501335144042969
    9. '    ' → logprob: -15.501335144042969
    10. ' ' → logprob: -15.626335144042969

Token 94: 'in' (ID: 258)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04123944789171219
    2. 'for' → logprob: -3.2912395000457764
    3. '9' → logprob: -6.291239261627197
    4. 'range' → logprob: -6.791239261627197
    5. '   ' → logprob: -8.791239738464355
    6. 'inclusive' → logprob: -10.791239738464355
    7. '```' → logprob: -11.791239738464355
    8. ' i' → logprob: -12.166239738464355
    9. '1' → logprob: -12.541239738464355
    10. ')' → logprob: -12.666239738464355

Token 95: 'clus' (ID: 4085)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.017564449459314346
    2. 'ter' → logprob: -4.392564296722412
    3. 't' → logprob: -6.017564296722412
    4. ' range' → logprob: -7.892564296722412
    5. 'dex' → logprob: -8.01756477355957
    6. 'tr' → logprob: -8.51756477355957
    7. 'ange' → logprob: -8.51756477355957
    8. 'te' → logprob: -8.64256477355957
    9. 'rage' → logprob: -9.01756477355957
    10. 'r' → logprob: -9.01756477355957

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3410594165325165
    2. '   ' → logprob: -1.7160594463348389
    3. '):' → logprob: -3.466059446334839
    4. ')
' → logprob: -3.591059446334839
    5. ').' → logprob: -3.966059446334839
    6. '):
' → logprob: -4.21605920791626
    7. 'ion' → logprob: -4.59105920791626
    8. 'de' → logprob: -6.46605920791626
    9. ':' → logprob: -6.84105920791626
    10. 'if' → logprob: -7.71605920791626

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013319060672074556
    2. 'for' → logprob: -6.626331806182861
    3. '```' → logprob: -12.50133228302002
    4. ' for' → logprob: -14.25133228302002
    5. '  ' → logprob: -14.25133228302002
    6. '	for' → logprob: -14.37633228302002
    7. '    ' → logprob: -15.75133228302002
    8. '       ' → logprob: -16.001331329345703
    9. '    
' → logprob: -16.251331329345703
    10. '``' → logprob: -16.751331329345703

Token 98: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00010926496179308742
    2. '   ' → logprob: -9.125109672546387
    3. ' for' → logprob: -16.12510871887207
    4. 'i' → logprob: -16.37510871887207
    5. '	for' → logprob: -16.75010871887207
    6. 'foreach' → logprob: -17.87510871887207
    7. 'pour' → logprob: -18.00010871887207
    8. 'For' → logprob: -18.62510871887207
    9. 'FOR' → logprob: -18.75010871887207
    10. 'from' → logprob: -19.00010871887207

Token 99: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03842081129550934
    2. ' i' → logprob: -3.2884209156036377
    3. '   ' → logprob: -8.663420677185059
    4. 'range' → logprob: -8.913420677185059
    5. ' ' → logprob: -10.163420677185059
    6. ' range' → logprob: -11.413420677185059
    7. '	i' → logprob: -12.288420677185059
    8. '  ' → logprob: -12.413420677185059
    9. '    ' → logprob: -12.538420677185059
    10. 'in' → logprob: -13.038420677185059

Token 100: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.012934788130223751
    2. ' in' → logprob: -4.387934684753418
    3. ':' → logprob: -7.887934684753418
    4. 'range' → logprob: -10.887934684753418
    5. '   ' → logprob: -11.262934684753418
    6. 'In' → logprob: -12.137934684753418
    7. '-in' → logprob: -12.762934684753418
    8. '_in' → logprob: -13.012934684753418
    9. '在' → logprob: -13.762934684753418
    10. 'for' → logprob: -14.012934684753418

Token 101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7848862373502925e-05
    2. ' range' → logprob: -10.500027656555176
    3. '	range' → logprob: -16.625028610229492
    4. '(range' → logprob: -16.875028610229492
    5. 'rang' → logprob: -17.500028610229492
    6. '.range' → logprob: -18.000028610229492
    7. '_range' → logprob: -18.375028610229492
    8. 'Range' → logprob: -19.500028610229492
    9. 'ranges' → logprob: -20.000028610229492
    10. '-range' → logprob: -20.250028610229492

Token 102: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.976922744186595e-05
    2. '(len' → logprob: -10.750040054321289
    3. '(:' → logprob: -12.375040054321289
    4. '((' → logprob: -13.375040054321289
    5. '(range' → logprob: -13.375040054321289
    6. '（' → logprob: -13.625040054321289
    7. '(`' → logprob: -13.750040054321289
    8. '(":' → logprob: -14.000040054321289
    9. '(np' → logprob: -14.500040054321289
    10. '(start' → logprob: -14.500040054321289

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '10' → logprob: -14.75
    3. '11' → logprob: -20.0
    4. '9' → logprob: -20.0
    5. '   ' → logprob: -20.125
    6. '１' → logprob: -20.25
    7. ' ' → logprob: -20.375
    8. '(' → logprob: -20.875
    9. '2' → logprob: -21.125
    10. '١' → logprob: -22.25

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ',to' → logprob: -12.000014305114746
    3. '，' → logprob: -12.875014305114746
    4. ' ,' → logprob: -13.625014305114746
    5. ',n' → logprob: -13.750014305114746
    6. 'to' → logprob: -14.000014305114746
    7. '   ' → logprob: -14.500014305114746
    8. ',
' → logprob: -15.875014305114746
    9. '،' → logprob: -16.25001335144043
    10. '9' → logprob: -16.37501335144043

Token 105: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '11' → logprob: -16.75
    3. ' ' → logprob: -17.875
    4. '１０' → logprob: -19.375
    5. '010' → logprob: -19.5
    6. '9' → logprob: -19.625
    7. ' ten' → logprob: -20.625
    8. '۱۰' → logprob: -20.625
    9. 'ten' → logprob: -21.75
    10. '101' → logprob: -22.125

Token 106: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '11' → logprob: -19.375
    3. '１０' → logprob: -20.25
    4. '9' → logprob: -20.375
    5. ' ten' → logprob: -21.375
    6. '010' → logprob: -21.5
    7. 'ten' → logprob: -21.625
    8. '۱۰' → logprob: -22.0
    9. '十' → logprob: -22.625
    10. ' tenth' → logprob: -22.875

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012987985974177718
    2. '):
' → logprob: -9.375129699707031
    3. ')):' → logprob: -10.750129699707031
    4. ')' → logprob: -11.625129699707031
    5. '):

' → logprob: -11.625129699707031
    6. '   ' → logprob: -12.750129699707031
    7. ':' → logprob: -14.500129699707031
    8. '):
' → logprob: -14.625129699707031
    9. ''):' → logprob: -15.000129699707031
    10. '"):' → logprob: -15.000129699707031

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.751746746478602e-05
    2. '   ' → logprob: -10.37504768371582
    3. '      ' → logprob: -12.12504768371582
    4. '     ' → logprob: -12.25004768371582
    5. '        ' → logprob: -12.62504768371582
    6. 'for' → logprob: -14.12504768371582
    7. '```' → logprob: -14.12504768371582
    8. '    ' → logprob: -14.87504768371582
    9. '        
' → logprob: -15.25004768371582
    10. '           ' → logprob: -15.37504768371582

Token 109: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.13242948055267334
    2. '       ' → logprob: -2.382429599761963
    3. '   ' → logprob: -3.757429599761963
    4. 'for' → logprob: -5.382429599761963
    5. '           ' → logprob: -5.632429599761963
    6. 'print' → logprob: -9.507429122924805
    7. '```' → logprob: -10.382429122924805
    8. '         ' → logprob: -11.007429122924805
    9. '#print' → logprob: -11.382429122924805
    10. '        ' → logprob: -11.507429122924805

Token 110: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030276264995336533
    2. '       ' → logprob: -3.530276298522949
    3. '           ' → logprob: -8.28027629852295
    4. '   ' → logprob: -8.40527629852295
    5. '#' → logprob: -10.40527629852295
    6. 'print' → logprob: -11.40527629852295
    7. ' for' → logprob: -13.53027629852295
    8. '        ' → logprob: -14.03027629852295
    9. 'pour' → logprob: -14.28027629852295
    10. 'Bou' → logprob: -14.53027629852295

Token 111: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.004130288027226925
    2. 'cles' → logprob: -5.6291303634643555
    3. 'clé' → logprob: -8.254130363464355
    4. ' cle' → logprob: -9.504130363464355
    5. 'cule' → logprob: -9.879130363464355
    6. 'cl' → logprob: -9.879130363464355
    7. 'cled' → logprob: -10.879130363464355
    8. 'le' → logprob: -11.504130363464355
    9. 'kle' → logprob: -11.629130363464355
    10. ' Cle' → logprob: -11.754130363464355

Token 112: ' intérieure' (ID: 135392)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00043972869752906263
    2. 'inter' → logprob: -9.000439643859863
    3. ' int' → logprob: -9.250439643859863
    4. 'intern' → logprob: -9.500439643859863
    5. ' intérieure' → logprob: -9.500439643859863
    6. 'in' → logprob: -10.875439643859863
    7. ''int' → logprob: -11.125439643859863
    8. '_int' → logprob: -12.125439643859863
    9. '-int' → logprob: -12.375439643859863
    10. 'Int' → logprob: -12.375439643859863

Token 113: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19836309552192688
    2. 'for' → logprob: -1.8233630657196045
    3. '   ' → logprob: -4.698363304138184
    4. '       ' → logprob: -4.698363304138184
    5. '           ' → logprob: -8.823363304138184
    6. ':
' → logprob: -10.823363304138184
    7. '        ' → logprob: -11.448363304138184
    8. '     ' → logprob: -11.948363304138184
    9. ' :' → logprob: -11.948363304138184
    10. '         ' → logprob: -12.073363304138184

Token 114: ' parc' (ID: 22138)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.08460169285535812
    2. 'for' → logprob: -2.959601640701294
    3. 'pour' → logprob: -3.709601640701294
    4. '       ' → logprob: -5.959601879119873
    5. 'range' → logprob: -6.459601879119873
    6. ' parc' → logprob: -7.959601879119873
    7. '   ' → logprob: -8.834601402282715
    8. 'para' → logprob: -9.459601402282715
    9. 'pars' → logprob: -11.459601402282715
    10. 'park' → logprob: -11.834601402282715

Token 115: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.02363419346511364
    2. 'out' → logprob: -4.64863395690918
    3. 'rait' → logprob: -5.27363395690918
    4. 'r' → logprob: -5.52363395690918
    5. 'raut' → logprob: -6.89863395690918
    6. 'ount' → logprob: -6.89863395690918
    7. 'aut' → logprob: -7.02363395690918
    8. 'roit' → logprob: -8.52363395690918
    9. 'raint' → logprob: -8.64863395690918
    10. 'ou' → logprob: -8.77363395690918

Token 116: ' aussi' (ID: 9894)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.001516173011623323
    2. ' les' → logprob: -6.501516342163086
    3. '   ' → logprob: -12.376516342163086
    4. '       ' → logprob: -12.751516342163086
    5. 'range' → logprob: -13.001516342163086
    6. 'Les' → logprob: -13.751516342163086
    7. '(' → logprob: -14.126516342163086
    8. '    ' → logprob: -14.501516342163086
    9. 'j' → logprob: -14.626516342163086
    10. '        ' → logprob: -15.126516342163086

Token 117: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5782357454299927
    2. 'range' → logprob: -0.8282357454299927
    3. ' les' → logprob: -6.703235626220703
    4. '(range' → logprob: -7.328235626220703
    5. 'de' → logprob: -8.703235626220703
    6. '   ' → logprob: -9.328235626220703
    7. '(' → logprob: -9.953235626220703
    8. ' range' → logprob: -10.453235626220703
    9. 'for' → logprob: -10.703235626220703
    10. 'pour' → logprob: -11.703235626220703

Token 118: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.00013321757433004677
    2. ''ent' → logprob: -10.500133514404297
    3. 'enti' → logprob: -10.875133514404297
    4. 'ents' → logprob: -10.875133514404297
    5. ' ent' → logprob: -11.125133514404297
    6. 'entes' → logprob: -11.125133514404297
    7. 'int' → logprob: -11.375133514404297
    8. '.ent' → logprob: -11.875133514404297
    9. 'inte' → logprob: -12.500133514404297
    10. 'j' → logprob: -13.125133514404297

Token 119: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -1.1160349458805285e-05
    2. 'i' → logprob: -12.125011444091797
    3. 'ers' → logprob: -12.875011444091797
    4. 'ier' → logprob: -13.125011444091797
    5. 'ières' → logprob: -14.750011444091797
    6. 'riers' → logprob: -15.500011444091797
    7. 'itiers' → logprob: -15.500011444091797
    8. 'ière' → logprob: -16.250011444091797
    9. 'tiers' → logprob: -17.125011444091797
    10. 'lers' → logprob: -17.375011444091797

Token 120: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.00023524489370174706
    2. ' de' → logprob: -9.125235557556152
    3. 'from' → logprob: -9.125235557556152
    4. '       ' → logprob: -11.125235557556152
    5. 'def' → logprob: -14.000235557556152
    6. 'for' → logprob: -14.250235557556152
    7. 'of' → logprob: -14.625235557556152
    8. '   ' → logprob: -15.250235557556152
    9. '_de' → logprob: -15.250235557556152
    10. '        ' → logprob: -16.750234603881836

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.125001907348633
    4. 'range' → logprob: -17.875001907348633
    5. '2' → logprob: -19.375001907348633
    6. '  ' → logprob: -19.625001907348633
    7. '１' → logprob: -19.875001907348633
    8. '```' → logprob: -20.500001907348633
    9. '       ' → logprob: -21.500001907348633
    10. '١' → logprob: -21.875001907348633

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'range' → logprob: -17.375
    3. ' ' → logprob: -20.125
    4. '１' → logprob: -21.625
    5. '   ' → logprob: -21.75
    6. '2' → logprob: -23.125
    7. '۱' → logprob: -24.375
    8. '(' → logprob: -24.5
    9. '  ' → logprob: -24.5
    10. ' range' → logprob: -24.875

Token 123: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.1326567679643631
    2. '       ' → logprob: -2.6326568126678467
    3. '   ' → logprob: -4.007656574249268
    4. ',' → logprob: -4.632656574249268
    5. 'to' → logprob: -4.882656574249268
    6. 'for' → logprob: -5.507656574249268
    7. 'range' → logprob: -5.507656574249268
    8. ' à' → logprob: -5.757656574249268
    9. '           ' → logprob: -6.632656574249268
    10. 'pour' → logprob: -7.257656574249268

Token 124: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.000494533043820411
    2. '10' → logprob: -7.625494480133057
    3. '   ' → logprob: -12.000494956970215
    4. '  ' → logprob: -16.5004940032959
    5. '8' → logprob: -16.7504940032959
    6. ' ' → logprob: -16.8754940032959
    7. 'nine' → logprob: -17.0004940032959
    8. 'range' → logprob: -17.1254940032959
    9. '       ' → logprob: -17.1254940032959
    10. '90' → logprob: -17.2504940032959

Token 125: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.10020699352025986
    2. '10' → logprob: -2.3502070903778076
    3. '910' → logprob: -15.600207328796387
    4. 'nine' → logprob: -16.60020637512207
    5. '90' → logprob: -17.10020637512207
    6. '11' → logprob: -17.22520637512207
    7. '99' → logprob: -18.22520637512207
    8. '９' → logprob: -18.60020637512207
    9. '   ' → logprob: -18.72520637512207
    10. '109' → logprob: -18.72520637512207

Token 126: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22173506021499634
    2. '           ' → logprob: -1.7217350006103516
    3. '   ' → logprob: -3.9717350006103516
    4. 'for' → logprob: -7.596735000610352
    5. '         ' → logprob: -8.221735000610352
    6. '        ' → logprob: -8.346735000610352
    7. '(in' → logprob: -9.346735000610352
    8. '          ' → logprob: -9.846735000610352
    9. '               ' → logprob: -10.096735000610352
    10. '     ' → logprob: -10.596735000610352

Token 127: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0016707765171304345
    2. 'inclusive' → logprob: -6.751670837402344
    3. 'incl' → logprob: -7.626670837402344
    4. 'included' → logprob: -11.626670837402344
    5. ' inclus' → logprob: -13.376670837402344
    6. '(in' → logprob: -14.626670837402344
    7. '-in' → logprob: -14.626670837402344
    8. 'includes' → logprob: -15.001670837402344
    9. 'Inclus' → logprob: -15.126670837402344
    10. 'inc' → logprob: -15.251670837402344

Token 128: 'clus' (ID: 4085)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.15460805594921112
    2. '10' → logprob: -2.7796080112457275
    3. 'clus' → logprob: -3.4046080112457275
    4. '9' → logprob: -3.9046080112457275
    5. '   ' → logprob: -4.404608249664307
    6. 'clusive' → logprob: -4.904608249664307
    7. ' range' → logprob: -6.654608249664307
    8. 'ten' → logprob: -6.779608249664307
    9. '       ' → logprob: -7.279608249664307
    10. '  ' → logprob: -7.279608249664307

Token 129: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5654503703117371
    2. '):
' → logprob: -1.0654504299163818
    3. '           ' → logprob: -2.940450429916382
    4. '   ' → logprob: -4.315450191497803
    5. ')
' → logprob: -4.565450191497803
    6. '):' → logprob: -4.815450191497803
    7. ')' → logprob: -6.065450191497803
    8. '):

' → logprob: -9.190450668334961
    9. '         ' → logprob: -9.940450668334961
    10. '        ' → logprob: -10.190450668334961

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1366397738456726
    2. 'for' → logprob: -2.3866398334503174
    3. '           ' → logprob: -3.3866398334503174
    4. '   ' → logprob: -6.261639595031738
    5. '         ' → logprob: -10.886639595031738
    6. '        ' → logprob: -10.886639595031738
    7. ' for' → logprob: -12.636639595031738
    8. '      ' → logprob: -13.011639595031738
    9. '     ' → logprob: -13.386639595031738
    10. '          ' → logprob: -13.636639595031738

Token 131: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.512236498361744e-07
    2. '       ' → logprob: -14.625000953674316
    3. ' for' → logprob: -17.75
    4. '   ' → logprob: -18.5
    5. '           ' → logprob: -20.625
    6. 'from' → logprob: -21.375
    7. 'foreach' → logprob: -21.5
    8. '	for' → logprob: -21.625
    9. 'forall' → logprob: -21.625
    10. '.for' → logprob: -21.75

Token 132: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38712579011917114
    2. ' j' → logprob: -1.1371257305145264
    3. '   ' → logprob: -8.512125968933105
    4. '    ' → logprob: -11.387125968933105
    5. ' ' → logprob: -11.512125968933105
    6. '	j' → logprob: -11.512125968933105
    7. '  ' → logprob: -11.762125968933105
    8. '       ' → logprob: -12.262125968933105
    9. '_j' → logprob: -13.512125968933105
    10. '$j' → logprob: -13.512125968933105

Token 133: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0031981545034796
    2. ' in' → logprob: -5.753198146820068
    3. '       ' → logprob: -11.753198623657227
    4. '           ' → logprob: -12.753198623657227
    5. '   ' → logprob: -13.253198623657227
    6. '-in' → logprob: -13.253198623657227
    7. 'range' → logprob: -13.503198623657227
    8. ':' → logprob: -14.003198623657227
    9. '_in' → logprob: -14.003198623657227
    10. '        ' → logprob: -14.503198623657227

Token 134: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.088346359931165e-07
    2. ' range' → logprob: -14.000000953674316
    3. '	range' → logprob: -19.625
    4. '(range' → logprob: -21.125
    5. '.range' → logprob: -21.375
    6. '_range' → logprob: -21.375
    7. 'Range' → logprob: -22.75
    8. 'rate' → logprob: -23.625
    9. 'rang' → logprob: -24.0
    10. '-range' → logprob: -24.125

Token 135: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '((' → logprob: -14.500001907348633
    3. '(range' → logprob: -14.875001907348633
    4. '(len' → logprob: -15.125001907348633
    5. ' (' → logprob: -15.500001907348633
    6. '（' → logprob: -15.500001907348633
    7. '   ' → logprob: -16.000001907348633
    8. '(int' → logprob: -16.875001907348633
    9. '       ' → logprob: -17.187501907348633
    10. '(`' → logprob: -17.500001907348633

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. ' ' → logprob: -20.625
    4. '   ' → logprob: -21.125
    5. '2' → logprob: -21.5
    6. '10' → logprob: -22.375
    7. '       ' → logprob: -22.625
    8. '１' → logprob: -22.75
    9. '11' → logprob: -23.5
    10. '               ' → logprob: -24.75

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -12.625003814697266
    3. '，' → logprob: -14.625003814697266
    4. '،' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.250003814697266
    6. ':' → logprob: -16.625003814697266
    7. '(' → logprob: -17.250003814697266
    8. ',:' → logprob: -17.875003814697266
    9. '10' → logprob: -19.000003814697266
    10. '、' → logprob: -19.000003814697266

Token 138: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '11' → logprob: -15.875000953674316
    4. ' ten' → logprob: -19.000001907348633
    5. '１０' → logprob: -19.125001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '۱۰' → logprob: -20.500001907348633
    8. '010' → logprob: -20.875001907348633
    9. ' деся' → logprob: -21.500001907348633
    10. '  ' → logprob: -21.875001907348633

Token 139: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '11' → logprob: -18.375
    3. '１０' → logprob: -19.25
    4. ' ' → logprob: -19.75
    5. ' ten' → logprob: -20.375
    6. '۱۰' → logprob: -20.5
    7. '010' → logprob: -21.625
    8. '   ' → logprob: -21.875
    9. 'ten' → logprob: -22.125
    10. ' деся' → logprob: -22.75

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002065564738586545
    2. '):
' → logprob: -6.252065658569336
    3. '           ' → logprob: -10.002065658569336
    4. '"):' → logprob: -10.752065658569336
    5. ''):' → logprob: -10.752065658569336
    6. '):

' → logprob: -10.752065658569336
    7. '       ' → logprob: -11.752065658569336
    8. ':' → logprob: -11.877065658569336
    9. '):
' → logprob: -11.877065658569336
    10. ')' → logprob: -14.002065658569336

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.392824874026701e-05
    2. '          ' → logprob: -11.25003433227539
    3. '            ' → logprob: -12.00003433227539
    4. '         ' → logprob: -12.00003433227539
    5. '               ' → logprob: -12.75003433227539
    6. '       ' → logprob: -12.87503433227539
    7. 'print' → logprob: -13.37503433227539
    8. '             ' → logprob: -14.50003433227539
    9. '```' → logprob: -14.75003433227539
    10. '        ' → logprob: -15.12503433227539

Token 142: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008165115490555763
    2. 'print' → logprob: -4.883164882659912
    3. '               ' → logprob: -7.508164882659912
    4. '            ' → logprob: -12.25816535949707
    5. '             ' → logprob: -12.50816535949707
    6. '          ' → logprob: -13.88316535949707
    7. '         ' → logprob: -15.50816535949707
    8. '              ' → logprob: -15.88316535949707
    9. ' print' → logprob: -15.88316535949707
    10. '       ' → logprob: -16.25816535949707

Token 143: ' Con' (ID: 1532)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029761482030153275
    2. '           ' → logprob: -3.529761552810669
    3. ' print' → logprob: -12.65476131439209
    4. '               ' → logprob: -12.77976131439209
    5. 'produ' → logprob: -13.52976131439209
    6. '       ' → logprob: -14.40476131439209
    7. '            ' → logprob: -14.40476131439209
    8. 'printf' → logprob: -14.77976131439209
    9. '          ' → logprob: -14.90476131439209
    10. 'result' → logprob: -14.90476131439209

Token 144: 'cat' (ID: 8837)
  Prédit: 'struct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'struct' → logprob: -0.4989240765571594
    2. 'cat' → logprob: -1.7489240169525146
    3. 'stru' → logprob: -3.1239240169525146
    4. 'struction' → logprob: -3.1239240169525146
    5. 't' → logprob: -3.2489240169525146
    6. 'truct' → logprob: -3.7489240169525146
    7. 'texte' → logprob: -3.9989240169525146
    8. 'truction' → logprob: -4.373924255371094
    9. 'str' → logprob: -4.873924255371094
    10. 'c' → logprob: -4.873924255371094

Token 145: 'ène' (ID: 22902)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2795398235321045
    2. 'ène' → logprob: -2.5295398235321045
    3. '           ' → logprob: -2.9045398235321045
    4. 'e' → logprob: -3.5295398235321045
    5. 'én' → logprob: -3.5295398235321045
    6. 'ena' → logprob: -4.154540061950684
    7. 'en' → logprob: -4.279540061950684
    8. 'ener' → logprob: -5.279540061950684
    9. 'énez' → logprob: -6.029540061950684
    10. '   ' → logprob: -6.279540061950684

Token 146: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22882995009422302
    2. '"' → logprob: -1.6038299798965454
    3. '               ' → logprob: -6.353829860687256
    4. '            ' → logprob: -8.228830337524414
    5. 'f' → logprob: -8.353830337524414
    6. ''' → logprob: -8.353830337524414
    7. '""' → logprob: -8.853830337524414
    8. '`' → logprob: -9.103830337524414
    9. '```' → logprob: -9.353830337524414
    10. '       ' → logprob: -9.478830337524414

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17244121432304382
    2. 'str' → logprob: -2.297441244125366
    3. '           ' → logprob: -3.672441244125366
    4. 'f' → logprob: -5.422441005706787
    5. ',j' → logprob: -5.422441005706787
    6. '               ' → logprob: -5.547441005706787
    7. '            ' → logprob: -5.672441005706787
    8. ',str' → logprob: -6.547441005706787
    9. 'j' → logprob: -6.672441005706787
    10. '"' → logprob: -6.672441005706787

Token 148: ' '' (ID: 461)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05765121802687645
    2. ''' → logprob: -3.4326512813568115
    3. '"' → logprob: -3.8076512813568115
    4. ' j' → logprob: -7.432651042938232
    5. '',' → logprob: -8.93265151977539
    6. '`' → logprob: -9.05765151977539
    7. '               ' → logprob: -9.55765151977539
    8. 'str' → logprob: -9.68265151977539
    9. '",' → logprob: -9.68265151977539
    10. '             ' → logprob: -9.93265151977539

Token 149: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.246537173457909e-06
    2. '×' → logprob: -13.000003814697266
    3. ''x' → logprob: -14.000003814697266
    4. ' x' → logprob: -14.250003814697266
    5. '',' → logprob: -15.250003814697266
    6. ''' → logprob: -15.750003814697266
    7. '"x' → logprob: -17.250003814697266
    8. '*x' → logprob: -17.625003814697266
    9. 'X' → logprob: -18.125003814697266
    10. '.x' → logprob: -18.500003814697266

Token 150: '',' (ID: 787)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05622941255569458
    2. '',' → logprob: -3.05622935295105
    3. ''' → logprob: -5.306229591369629
    4. ',' → logprob: -6.056229591369629
    5. ',j' → logprob: -9.306229591369629
    6. '   ' → logprob: -9.806229591369629
    7. ' j' → logprob: -9.931229591369629
    8. '','' → logprob: -10.431229591369629
    9. '`,' → logprob: -10.681229591369629
    10. ','' → logprob: -10.931229591369629

Token 151: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0014737951569259167
    2. ''' → logprob: -6.626473903656006
    3. '           ' → logprob: -10.001473426818848
    4. ' j' → logprob: -10.251473426818848
    5. '`' → logprob: -11.126473426818848
    6. '             ' → logprob: -11.251473426818848
    7. '               ' → logprob: -11.876473426818848
    8. '            ' → logprob: -12.001473426818848
    9. ',j' → logprob: -12.001473426818848
    10. '$j' → logprob: -12.251473426818848

Token 152: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11258821189403534
    2. ',' → logprob: -2.3625881671905518
    3. ''' → logprob: -4.862588405609131
    4. '=' → logprob: -6.112588405609131
    5. '='' → logprob: -7.612588405609131
    6. '"' → logprob: -8.237587928771973
    7. '            ' → logprob: -8.362587928771973
    8. '','' → logprob: -8.362587928771973
    9. '               ' → logprob: -8.737587928771973
    10. ','' → logprob: -8.987587928771973

Token 153: ' le' (ID: 505)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005130457691848278
    2. ''=' → logprob: -6.380130290985107
    3. ''un' → logprob: -6.505130290985107
    4. ' '='' → logprob: -7.380130290985107
    5. '"' → logprob: -7.630130290985107
    6. '           ' → logprob: -8.880130767822266
    7. ''e' → logprob: -9.255130767822266
    8. '('='' → logprob: -9.255130767822266
    9. '='' → logprob: -9.505130767822266
    10. ' '=',' → logprob: -10.130130767822266

Token 154: ' résultat' (ID: 62556)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.020392274484038353
    2. ''=' → logprob: -4.770392417907715
    3. '"' → logprob: -5.520392417907715
    4. 'f' → logprob: -5.770392417907715
    5. 'produ' → logprob: -6.645392417907715
    6. ''f' → logprob: -6.770392417907715
    7. '='' → logprob: -8.145392417907715
    8. ''aff' → logprob: -8.395392417907715
    9. ''e' → logprob: -8.520392417907715
    10. '=f' → logprob: -8.645392417907715

Token 155: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020983952563256025
    2. '=' → logprob: -7.002098560333252
    3. 'print' → logprob: -8.002098083496094
    4. '"' → logprob: -8.377098083496094
    5. 'f' → logprob: -9.002098083496094
    6. '               ' → logprob: -9.377098083496094
    7. '       ' → logprob: -9.502098083496094
    8. '            ' → logprob: -9.877098083496094
    9. '          ' → logprob: -9.877098083496094
    10. '="' → logprob: -10.127098083496094

Token 156: ' leur' (ID: 9853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019324826076626778
    2. ' i' → logprob: -4.519324779510498
    3. '(i' → logprob: -5.394324779510498
    4. 'str' → logprob: -6.269324779510498
    5. '`' → logprob: -7.019324779510498
    6. 'f' → logprob: -8.019325256347656
    7. '   ' → logprob: -8.644325256347656
    8. ''i' → logprob: -8.894325256347656
    9. ' str' → logprob: -9.519325256347656
    10. 'l' → logprob: -10.269325256347656

Token 157: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.003949575126171112
    2. 'produ' → logprob: -5.8789496421813965
    3. ' multiplication' → logprob: -6.8789496421813965
    4. 'production' → logprob: -10.003949165344238
    5. 'mult' → logprob: -10.503949165344238
    6. 'product' → logprob: -11.753949165344238
    7. 'calcul' → logprob: -12.003949165344238
    8. 'Multip' → logprob: -12.128949165344238
    9. ' produit' → logprob: -12.378949165344238
    10. 'multi' → logprob: -12.378949165344238

Token 158: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02033737488090992
    2. 'print' → logprob: -4.1453375816345215
    3. '               ' → logprob: -5.6453375816345215
    4. '            ' → logprob: -8.270337104797363
    5. '             ' → logprob: -8.895337104797363
    6. 'f' → logprob: -9.520337104797363
    7. '"' → logprob: -9.645337104797363
    8. '```' → logprob: -9.645337104797363
    9. '          ' → logprob: -10.020337104797363
    10. '       ' → logprob: -10.770337104797363

Token 159: ' une' (ID: 2463)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9120363593101501
    2. 'f' → logprob: -1.412036418914795
    3. 'une' → logprob: -1.912036418914795
    4. 'un' → logprob: -2.412036418914795
    5. '               ' → logprob: -3.287036418914795
    6. 'print' → logprob: -3.662036418914795
    7. ' une' → logprob: -4.037036418914795
    8. ' un' → logprob: -5.037036418914795
    9. 'la' → logprob: -5.537036418914795
    10. '   ' → logprob: -5.537036418914795

Token 160: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.509721577167511
    2. 'cha' → logprob: -1.1347215175628662
    3. 'f' → logprob: -2.884721517562866
    4. 'string' → logprob: -4.134721755981445
    5. ' chaîne' → logprob: -5.384721755981445
    6. 'ligne' → logprob: -7.134721755981445
    7. 'str' → logprob: -9.134721755981445
    8. 'variable' → logprob: -9.384721755981445
    9. ' строк' → logprob: -9.509721755981445
    10. 'phrase' → logprob: -10.009721755981445

Token 161: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001694461447186768
    2. '"' → logprob: -6.751694679260254
    3. '       ' → logprob: -9.376694679260254
    4. '```' → logprob: -9.501694679260254
    5. 'f' → logprob: -9.626694679260254
    6. 'd' → logprob: -10.001694679260254
    7. '               ' → logprob: -10.251694679260254
    8. '         ' → logprob: -10.501694679260254
    9. '"""' → logprob: -10.501694679260254
    10. 'de' → logprob: -10.751694679260254

Token 162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032200184650719166
    2. '               ' → logprob: -6.253220081329346
    3. '```' → logprob: -6.878220081329346
    4. '            ' → logprob: -9.253219604492188
    5. '             ' → logprob: -9.878219604492188
    6. '"' → logprob: -10.253219604492188
    7. 'print' → logprob: -11.003219604492188
    8. '``' → logprob: -11.128219604492188
    9. '          ' → logprob: -11.378219604492188
    10. '       ' → logprob: -12.128219604492188

Token 163: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6451694965362549
    2. 'f' → logprob: -1.2701694965362549
    3. 'print' → logprob: -1.7701694965362549
    4. 'result' → logprob: -3.895169496536255
    5. '               ' → logprob: -6.645169258117676
    6. '"' → logprob: -6.895169258117676
    7. '"{' → logprob: -8.270169258117676
    8. 'chaine' → logprob: -8.770169258117676
    9. '            ' → logprob: -8.895169258117676
    10. 'output' → logprob: -8.895169258117676

Token 164: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7109751105308533
    2. 'print' → logprob: -1.335975170135498
    3. 'f' → logprob: -1.460975170135498
    4. 'result' → logprob: -4.585975170135498
    5. 'aff' → logprob: -7.085975170135498
    6. '"' → logprob: -7.960975170135498
    7. 'chaine' → logprob: -7.960975170135498
    8. 'format' → logprob: -8.21097469329834
    9. '```' → logprob: -8.21097469329834
    10. 'formatted' → logprob: -8.21097469329834

Token 165: ' l' (ID: 305)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.1760672777891159
    2. 'print' → logprob: -2.426067352294922
    3. '           ' → logprob: -2.801067352294922
    4. ''aff' → logprob: -4.801067352294922
    5. 'af' → logprob: -7.176067352294922
    6. 'im' → logprob: -7.676067352294922
    7. ' affiche' → logprob: -7.801067352294922
    8. 'format' → logprob: -7.801067352294922
    9. '"' → logprob: -8.176067352294922
    10. '            ' → logprob: -8.801067352294922

Token 166: ''aff' (ID: 53397)
  Prédit: ''aff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aff' → logprob: -0.0057888394221663475
    2. ''' → logprob: -5.880788803100586
    3. 'e' → logprob: -7.005788803100586
    4. ''im' → logprob: -7.255788803100586
    5. 'a' → logprob: -8.005788803100586
    6. ''é' → logprob: -8.755788803100586
    7. ''impression' → logprob: -8.880788803100586
    8. '’aff' → logprob: -9.130788803100586
    9. ''af' → logprob: -9.505788803100586
    10. 'aff' → logprob: -9.755788803100586

Token 167: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0002562137378845364
    2. 'icher' → logprob: -8.625256538391113
    3. 'ich' → logprob: -10.000256538391113
    4. 'ichage' → logprob: -10.750256538391113
    5. 'ic' → logprob: -12.625256538391113
    6. 'iché' → logprob: -13.750256538391113
    7. 'ichel' → logprob: -13.875256538391113
    8. 'iches' → logprob: -13.875256538391113
    9. 'ichen' → logprob: -14.125256538391113
    10. 'ice' → logprob: -14.750256538391113

Token 168: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017585984896868467
    2. 'print' → logprob: -6.876758575439453
    3. '               ' → logprob: -7.251758575439453
    4. '            ' → logprob: -11.876758575439453
    5. '             ' → logprob: -12.376758575439453
    6. '          ' → logprob: -13.001758575439453
    7. '       ' → logprob: -13.876758575439453
    8. '         ' → logprob: -14.001758575439453
    9. '   ' → logprob: -14.376758575439453
    10. '                   ' → logprob: -15.126758575439453

Token 169: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009728021104820073
    2. 'stdout' → logprob: -7.750972747802734
    3. 'printf' → logprob: -8.875972747802734
    4. '   ' → logprob: -9.375972747802734
    5. 'System' → logprob: -9.500972747802734
    6. '  ' → logprob: -9.875972747802734
    7. 'println' → logprob: -10.125972747802734
    8. 'format' → logprob: -10.125972747802734
    9. '.print' → logprob: -10.750972747802734
    10. 'l' → logprob: -11.625972747802734

Token 170: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3696122169494629
    2. ''aide' → logprob: -2.619612216949463
    3. ''écran' → logprob: -2.994612216949463
    4. 'print' → logprob: -3.619612216949463
    5. 'igne' → logprob: -4.119612216949463
    6. 'e' → logprob: -4.119612216949463
    7. 'ligne' → logprob: -4.494612216949463
    8. 'aine' → logprob: -4.619612216949463
    9. ''aff' → logprob: -4.744612216949463
    10. 'aise' → logprob: -4.994612216949463

Token 171: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014389235293492675
    2. 'print' → logprob: -6.626439094543457
    3. '               ' → logprob: -9.251439094543457
    4. '            ' → logprob: -11.751439094543457
    5. '          ' → logprob: -12.376439094543457
    6. '             ' → logprob: -13.376439094543457
    7. '       ' → logprob: -13.876439094543457
    8. '         ' → logprob: -13.876439094543457
    9. '   ' → logprob: -14.501439094543457
    10. ' print' → logprob: -15.001439094543457

Token 172: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016802136087790132
    2. '               ' → logprob: -9.375167846679688
    3. 'print' → logprob: -9.500167846679688
    4. '            ' → logprob: -12.750167846679688
    5. '             ' → logprob: -12.875167846679688
    6. '```' → logprob: -13.500167846679688
    7. '          ' → logprob: -14.125167846679688
    8. '         ' → logprob: -15.625167846679688
    9. '   ' → logprob: -15.625167846679688
    10. '       ' → logprob: -16.250167846679688

Token 173: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12693282961845398
    2. '           ' → logprob: -2.1269328594207764
    3. ' print' → logprob: -12.876933097839355
    4. '.print' → logprob: -14.626933097839355
    5. '               ' → logprob: -14.876933097839355
    6. '```' → logprob: -15.001933097839355
    7. '            ' → logprob: -15.626933097839355
    8. '          ' → logprob: -15.876933097839355
    9. 'prints' → logprob: -16.00193214416504
    10. 'Print' → logprob: -16.00193214416504

Token 174: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4154807925224304
    2. '("' → logprob: -2.040480852127075
    3. '("("' → logprob: -2.165480852127075
    4. '('' → logprob: -3.040480852127075
    5. '()' → logprob: -3.665480852127075
    6. '(f' → logprob: -4.415480613708496
    7. '(...)' → logprob: -5.790480613708496
    8. '(`' → logprob: -6.165480613708496
    9. '("")' → logprob: -7.165480613708496
    10. '("(' → logprob: -7.290480613708496

Token 175: '(i' (ID: 3649)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.5275341272354126
    2. '(' → logprob: -1.4025341272354126
    3. '(i' → logprob: -2.527534008026123
    4. '(int' → logprob: -2.902534008026123
    5. '(format' → logprob: -5.527534008026123
    6. '(f' → logprob: -5.902534008026123
    7. '(len' → logprob: -6.402534008026123
    8. '("("' → logprob: -6.402534008026123
    9. '(m' → logprob: -6.777534008026123
    10. '(print' → logprob: -7.027534008026123

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.702754474943504e-05
    2. ')+'' → logprob: -10.37503719329834
    3. ')+' → logprob: -12.25003719329834
    4. ')+"' → logprob: -14.75003719329834
    5. '）' → logprob: -15.87503719329834
    6. '}' → logprob: -15.87503719329834
    7. '))' → logprob: -16.875036239624023
    8. ' )' → logprob: -16.875036239624023
    9. ')x' → logprob: -17.125036239624023
    10. ')*' → logprob: -17.250036239624023

Token 177: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41977864503860474
    2. '+'' → logprob: -1.29477858543396
    3. ' +' → logprob: -3.16977858543396
    4. '+x' → logprob: -4.294778823852539
    5. '+"' → logprob: -5.044778823852539
    6. 'x' → logprob: -5.419778823852539
    7. '           ' → logprob: -7.419778823852539
    8. '   ' → logprob: -8.794778823852539
    9. '          ' → logprob: -8.919778823852539
    10. '       ' → logprob: -9.107278823852539

Token 178: ' "' (ID: 392)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.05661112815141678
    2. ''' → logprob: -3.1816110610961914
    3. '"x' → logprob: -5.556611061096191
    4. ''s' → logprob: -5.681611061096191
    5. ''f' → logprob: -6.931611061096191
    6. ' '' → logprob: -6.931611061096191
    7. ''inter' → logprob: -7.556611061096191
    8. ''m' → logprob: -7.681611061096191
    9. ''y' → logprob: -7.931611061096191
    10. ''en' → logprob: -8.181611061096191

Token 179: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.054500666621607e-06
    2. '"x' → logprob: -12.87500286102295
    3. '"' → logprob: -15.62500286102295
    4. '×' → logprob: -16.250003814697266
    5. ' x' → logprob: -16.500003814697266
    6. '+x' → logprob: -18.500003814697266
    7. '*x' → logprob: -19.875003814697266
    8. 'xh' → logprob: -20.750003814697266
    9. ''x' → logprob: -21.000003814697266
    10. '.x' → logprob: -21.625003814697266

Token 180: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.027335280552506447
    2. 'str' → logprob: -3.6523351669311523
    3. 'j' → logprob: -7.402335166931152
    4. '"+' → logprob: -8.027335166931152
    5. ' str' → logprob: -9.777335166931152
    6. '=str' → logprob: -11.652335166931152
    7. '$str' → logprob: -12.402335166931152
    8. '"+"' → logprob: -12.402335166931152
    9. '`' → logprob: -12.777335166931152
    10. 'Str' → logprob: -13.152335166931152

Token 181: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20530188083648682
    2. '+j' → logprob: -1.8303018808364868
    3. ' +' → logprob: -4.080301761627197
    4. 'j' → logprob: -5.830301761627197
    5. '           ' → logprob: -6.455301761627197
    6. '+"' → logprob: -7.080301761627197
    7. '               ' → logprob: -7.455301761627197
    8. '"+"' → logprob: -7.455301761627197
    9. '             ' → logprob: -8.580302238464355
    10. '   ' → logprob: -8.580302238464355

Token 182: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.1472419600977446e-06
    2. ' str' → logprob: -13.750000953674316
    3. '	str' → logprob: -18.375001907348633
    4. '(str' → logprob: -18.875001907348633
    5. '.str' → logprob: -19.250001907348633
    6. 'Str' → logprob: -19.750001907348633
    7. '-str' → logprob: -19.875001907348633
    8. 'stri' → logprob: -20.625001907348633
    9. '   ' → logprob: -20.875001907348633
    10. '=str' → logprob: -21.125001907348633

Token 183: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.2295631766319275
    2. '(i' → logprob: -1.6045632362365723
    3. '(' → logprob: -6.104563236236572
    4. '(int' → logprob: -7.229563236236572
    5. '(f' → logprob: -7.479563236236572
    6. '(ii' → logprob: -9.229562759399414
    7. '(a' → logprob: -9.729562759399414
    8. '(o' → logprob: -9.854562759399414
    9. '(m' → logprob: -10.104562759399414
    10. '(str' → logprob: -10.229562759399414

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013314292300492525
    2. ')+' → logprob: -7.126331329345703
    3. '")' → logprob: -8.876331329345703
    4. '+")' → logprob: -8.876331329345703
    5. '+' → logprob: -9.501331329345703
    6. '+)' → logprob: -9.751331329345703
    7. '   ' → logprob: -10.251331329345703
    8. '`)' → logprob: -10.876331329345703
    9. '           ' → logprob: -11.126331329345703
    10. '）' → logprob: -11.751331329345703

Token 185: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5969976782798767
    2. '           ' → logprob: -1.0969977378845215
    3. ' +' → logprob: -3.5969977378845215
    4. '"' → logprob: -3.7219977378845215
    5. ')' → logprob: -4.2219977378845215
    6. '+")' → logprob: -4.2219977378845215
    7. '+"' → logprob: -5.0969977378845215
    8. '             ' → logprob: -5.2219977378845215
    9. '"+"' → logprob: -5.2219977378845215
    10. '               ' → logprob: -5.4719977378845215

Token 186: ' "="' (ID: 78157)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14745987951755524
    2. ' "="' → logprob: -2.5224599838256836
    3. 'str' → logprob: -3.0224599838256836
    4. '=str' → logprob: -5.147459983825684
    5. '("="' → logprob: -6.397459983825684
    6. '=' → logprob: -8.897459983825684
    7. '"+"' → logprob: -9.397459983825684
    8. ' str' → logprob: -9.397459983825684
    9. '="' → logprob: -9.522459983825684
    10. '""' → logprob: -9.522459983825684

Token 187: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0004958406207151711
    2. '           ' → logprob: -8.375495910644531
    3. ' +' → logprob: -9.375495910644531
    4. '+' → logprob: -9.625495910644531
    5. ' str' → logprob: -9.625495910644531
    6. '(str' → logprob: -11.125495910644531
    7. '               ' → logprob: -11.250495910644531
    8. '.str' → logprob: -11.625495910644531
    9. '=str' → logprob: -13.250495910644531
    10. 'print' → logprob: -13.500495910644531

Token 188: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0280383548888494e-06
    2. ' str' → logprob: -13.875000953674316
    3. '       ' → logprob: -17.625001907348633
    4. '.str' → logprob: -18.250001907348633
    5. '           ' → logprob: -18.625001907348633
    6. '               ' → logprob: -19.250001907348633
    7. '	str' → logprob: -19.500001907348633
    8. '(str' → logprob: -19.875001907348633
    9. 'Str' → logprob: -19.875001907348633
    10. '-str' → logprob: -20.250001907348633

Token 189: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0925627946853638
    2. '(' → logprob: -1.3425627946853638
    3. '(prod' → logprob: -1.7175627946853638
    4. '(pro' → logprob: -2.092562675476074
    5. '(product' → logprob: -3.342562675476074
    6. '(result' → logprob: -3.842562675476074
    7. '(int' → logprob: -3.842562675476074
    8. '(f' → logprob: -5.592562675476074
    9. '(str' → logprob: -5.592562675476074
    10. '(pr' → logprob: -6.092562675476074

Token 190: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.13382814824581146
    2. '*' → logprob: -2.5088281631469727
    3. '*i' → logprob: -3.1338281631469727
    4. '*j' → logprob: -8.383828163146973
    5. '   ' → logprob: -10.508828163146973
    6. '[i' → logprob: -11.008828163146973
    7. '*num' → logprob: -11.883828163146973
    8. '*y' → logprob: -12.133828163146973
    9. '*(' → logprob: -12.383828163146973
    10. '*u' → logprob: -12.633828163146973

Token 191: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: 0.0
    2. ' j' → logprob: -18.875
    3. '   ' → logprob: -21.25
    4. '(j' → logprob: -22.625
    5. '	j' → logprob: -23.25
    6. 'je' → logprob: -23.375
    7. '$j' → logprob: -23.375
    8. '[j' → logprob: -23.5
    9. 'jj' → logprob: -23.875
    10. '.j' → logprob: -24.0

Token 192: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004340037237852812
    2. '           ' → logprob: -6.129340171813965
    3. ')' → logprob: -6.254340171813965
    4. '"))' → logprob: -8.754340171813965
    5. '       ' → logprob: -10.754340171813965
    6. ''))' → logprob: -11.129340171813965
    7. '               ' → logprob: -11.629340171813965
    8. '))
' → logprob: -11.629340171813965
    9. '         ' → logprob: -12.379340171813965
    10. ')))' → logprob: -12.754340171813965

Token 193: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3276735842227936
    2. '   ' → logprob: -1.5776735544204712
    3. 'def' → logprob: -4.077673435211182
    4. 'None' → logprob: -4.077673435211182
    5. 'print' → logprob: -4.327673435211182
    6. '<|end|>' → logprob: -4.577673435211182
    7. 'display' → logprob: -5.202673435211182
    8. 'return' → logprob: -5.702673435211182
    9. '#' → logprob: -6.577673435211182
    10. '"""' → logprob: -7.327673435211182

Token 194: ' App' (ID: 2583)
  Prédit: 'display'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'display' → logprob: -0.00036715567694045603
    2. '#' → logprob: -8.000367164611816
    3. '```' → logprob: -11.500367164611816
    4. 'if' → logprob: -12.125367164611816
    5. 'def' → logprob: -12.125367164611816
    6. ' display' → logprob: -12.875367164611816
    7. '   ' → logprob: -13.250367164611816
    8. '.display' → logprob: -13.375367164611816
    9. '"display' → logprob: -13.625367164611816
    10. 'print' → logprob: -13.750367164611816

Token 195: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -1.1427257061004639
    2. '#' → logprob: -1.5177257061004639
    3. 'le' → logprob: -1.8927257061004639
    4. 'elle' → logprob: -2.017725706100464
    5. 'ler' → logprob: -2.392725706100464
    6. 'eler' → logprob: -3.267725706100464
    7. 'elé' → logprob: -4.142725944519043
    8. 'ell' → logprob: -5.142725944519043
    9. '```' → logprob: -5.142725944519043
    10. 'e' → logprob: -6.392725944519043

Token 196: ' de' (ID: 334)
  Prédit: 'display'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'display' → logprob: -6.456358823925257e-05
    2. 'de' → logprob: -10.500064849853516
    3. '(display' → logprob: -10.750064849853516
    4. '"display' → logprob: -12.250064849853516
    5. '.display' → logprob: -12.375064849853516
    6. ' display' → logprob: -13.250064849853516
    7. '_display' → logprob: -13.500064849853516
    8. 'def' → logprob: -13.875064849853516
    9. '	display' → logprob: -14.000064849853516
    10. '#' → logprob: -15.000064849853516

Token 197: ' la' (ID: 557)
  Prédit: 'display'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'display' → logprob: -0.47412458062171936
    2. 'la' → logprob: -0.974124550819397
    3. ' la' → logprob: -10.849124908447266
    4. 'aff' → logprob: -10.974124908447266
    5. 'fonction' → logprob: -12.724124908447266
    6. 'l' → logprob: -12.849124908447266
    7. 'function' → logprob: -13.474124908447266
    8. ' display' → logprob: -13.849124908447266
    9. '_display' → logprob: -13.974124908447266
    10. '`' → logprob: -14.599124908447266

Token 198: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.01052975282073021
    2. 'function' → logprob: -5.135529518127441
    3. 'display' → logprob: -5.510529518127441
    4. ' fonction' → logprob: -8.010529518127441
    5. 'fon' → logprob: -8.885529518127441
    6. 'func' → logprob: -10.010529518127441
    7. 'funktion' → logprob: -11.260529518127441
    8. 'aff' → logprob: -12.510529518127441
    9. 'Fon' → logprob: -12.635529518127441
    10. 'f' → logprob: -13.010529518127441

Token 199: ' pour' (ID: 1930)
  Prédit: 'display'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'display' → logprob: -1.6240566083070007e-06
    2. ' display' → logprob: -14.625001907348633
    3. '.display' → logprob: -14.750001907348633
    4. '"display' → logprob: -15.125001907348633
    5. '```' → logprob: -15.750001907348633
    6. '(display' → logprob: -16.375001907348633
    7. '	display' → logprob: -16.625001907348633
    8. '_display' → logprob: -16.625001907348633
    9. '#' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.875001907348633

Token 200: ' afficher' (ID: 146524)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.00311984121799469
    2. ' afficher' → logprob: -5.878119945526123
    3. 'display' → logprob: -8.628119468688965
    4. 'ex' → logprob: -10.253119468688965
    5. 'af' → logprob: -10.378119468688965
    6. 'Afficher' → logprob: -10.628119468688965
    7. ''aff' → logprob: -10.878119468688965
    8. '.aff' → logprob: -12.628119468688965
    9. '   ' → logprob: -12.878119468688965
    10. '_aff' → logprob: -13.003119468688965

Token 201: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.10521142929792404
    2. '_la' → logprob: -2.3552114963531494
    3. ' la' → logprob: -5.98021125793457
    4. '_m' → logprob: -6.35521125793457
    5. '   ' → logprob: -7.73021125793457
    6. '_' → logprob: -8.98021125793457
    7. 'les' → logprob: -10.35521125793457
    8. 'le' → logprob: -10.98021125793457
    9. '_l' → logprob: -11.10521125793457
    10. 'multip' → logprob: -11.23021125793457

Token 202: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -1.6240566083070007e-06
    2. 'multip' → logprob: -14.375001907348633
    3. ' table' → logprob: -14.750001907348633
    4. 'tables' → logprob: -15.125001907348633
    5. 'tab' → logprob: -17.125001907348633
    6. 'tabl' → logprob: -17.250001907348633
    7. '<table' → logprob: -17.375001907348633
    8. '	table' → logprob: -17.500001907348633
    9. '#' → logprob: -17.750001907348633
    10. 'tabla' → logprob: -17.875001907348633

Token 203: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5170706510543823
    2. 'display' → logprob: -1.2670706510543823
    3. 'multip' → logprob: -2.142070770263672
    4. '_display' → logprob: -5.767070770263672
    5. '   ' → logprob: -7.517070770263672
    6. '_de' → logprob: -8.267070770263672
    7. '_m' → logprob: -9.017070770263672
    8. 'd' → logprob: -9.392070770263672
    9. '.display' → logprob: -9.392070770263672
    10. ' de' → logprob: -9.517070770263672

Token 204: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.9743012671824545e-05
    2. ' multiplication' → logprob: -11.250020027160645
    3. 'mont' → logprob: -12.500020027160645
    4. 'mult' → logprob: -13.000020027160645
    5. 'Multip' → logprob: -15.250020027160645
    6. 'multi' → logprob: -15.375020027160645
    7. 'mutation' → logprob: -16.625019073486328
    8. ' Multip' → logprob: -17.625019073486328
    9. 'multiply' → logprob: -18.125019073486328
    10. 'mobil' → logprob: -18.125019073486328

Token 205: '
' (ID: 198)
  Prédit: 'display'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'display' → logprob: -3.128163257315464e-07
    2. ' display' → logprob: -15.75
    3. '.display' → logprob: -15.875
    4. '_display' → logprob: -17.625
    5. '	display' → logprob: -18.5
    6. '"display' → logprob: -19.375
    7. '(display' → logprob: -19.75
    8. 'Display' → logprob: -20.25
    9. 'print' → logprob: -20.625
    10. '#' → logprob: -21.625

Token 206: 'display' (ID: 9992)
  Prédit: 'display'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'display' → logprob: 0.0
    2. ' display' → logprob: -18.5
    3. '.display' → logprob: -21.625
    4. '	display' → logprob: -22.0
    5. '_display' → logprob: -22.5
    6. '"display' → logprob: -23.0
    7. 'Display' → logprob: -23.875
    8. 'dis' → logprob: -24.125
    9. '(display' → logprob: -24.625
    10. 'DISPLAY' → logprob: -24.875

Token 207: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0020414141472429037
    2. '_' → logprob: -6.502041339874268
    3. '_multiplier' → logprob: -8.752041816711426
    4. '_mult' → logprob: -8.877041816711426
    5. '_mul' → logprob: -9.252041816711426
    6. '_display' → logprob: -11.752041816711426
    7. '_M' → logprob: -11.752041816711426
    8. '_mut' → logprob: -11.752041816711426
    9. '_multiple' → logprob: -11.877041816711426
    10. '_t' → logprob: -12.002041816711426

Token 208: 'ultip' (ID: 22975)
  Prédit: 'ultip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultip' → logprob: -0.00021319588995538652
    2. 'ulti' → logprob: -9.625213623046875
    3. 'ult' → logprob: -10.000213623046875
    4. '_table' → logprob: -10.750213623046875
    5. 'utip' → logprob: -10.750213623046875
    6. 'ultiple' → logprob: -11.125213623046875
    7. 'ultiply' → logprob: -11.875213623046875
    8. 'ulation' → logprob: -12.125213623046875
    9. ' multiplication' → logprob: -12.250213623046875
    10. 'ul' → logprob: -12.250213623046875

Token 209: 'lication' (ID: 2389)
  Prédit: 'lication'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lication' → logprob: -0.02976079285144806
    2. 'ication' → logprob: -4.154760837554932
    3. 'ation' → logprob: -4.904760837554932
    4. 'lation' → logprob: -5.404760837554932
    5. 'cation' → logprob: -7.779760837554932
    6. 'ulation' → logprob: -8.154760360717773
    7. 'ilation' → logprob: -8.279760360717773
    8. 'tion' → logprob: -8.904760360717773
    9. 'iation' → logprob: -8.904760360717773
    10. 'liction' → logprob: -9.029760360717773

Token 210: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.00011343709047650918
    2. '_tables' → logprob: -10.250113487243652
    3. '_' → logprob: -10.375113487243652
    4. '_t' → logprob: -10.750113487243652
    5. '"_' → logprob: -12.125113487243652
    6. '_TABLE' → logprob: -12.875113487243652
    7. 'table' → logprob: -13.375113487243652
    8. '_Table' → logprob: -13.875113487243652
    9. ' _' → logprob: -14.000113487243652
    10. '_tab' → logprob: -14.125113487243652

Token 211: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.9623810658231378e-05
    2. '()`' → logprob: -11.125020027160645
    3. '(' → logprob: -13.375020027160645
    4. '().' → logprob: -14.375020027160645
    5. '()(' → logprob: -14.625020027160645
    6. '```' → logprob: -15.125020027160645
    7. '（）' → logprob: -15.250020027160645
    8. ']()' → logprob: -15.375020027160645
    9. '#' → logprob: -15.500020027160645
    10. '()
' → logprob: -15.500020027160645


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 209
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 143
Précision stricte (1ère position): 28.71%
Précision adaptée (1ère position): 30.62%
Précision (top 10): 68.42%
================================================================================
