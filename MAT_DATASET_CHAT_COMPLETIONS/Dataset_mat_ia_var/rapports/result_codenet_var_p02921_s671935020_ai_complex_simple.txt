================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

S, T = map(lambda x: x.strip(), [input(), input()])
X = reduce(add, map(lambda pair: int(pair[0] == pair[1]), zip(S, T, '   '))) if len(S) >= 3 and len(T) >= 3 else 0
print(X)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009063414763659239
    2. ' (' → logprob: -8.250905990600586
    3. ',' → logprob: -8.375905990600586
    4. '(lambda' → logprob: -8.625905990600586
    5. '.' → logprob: -9.625905990600586
    6. 'def' → logprob: -9.750905990600586
    7. '(
' → logprob: -10.750905990600586
    8. 'a' → logprob: -11.000905990600586
    9. '```' → logprob: -11.250905990600586
    10. '\(' → logprob: -11.500905990600586

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06605874747037888
    2. 'import' → logprob: -2.81605863571167
    3. '.' → logprob: -5.69105863571167
    4. ' ' → logprob: -7.44105863571167
    5. ' .' → logprob: -10.066059112548828
    6. '.import' → logprob: -10.191059112548828
    7. '	import' → logprob: -11.066059112548828
    8. '_import' → logprob: -12.066059112548828
    9. '-import' → logprob: -13.316059112548828
    10. ' ,' → logprob: -13.316059112548828

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2034524381160736
    2. ' import' → logprob: -2.5784523487091064
    3. ' ' → logprob: -2.7034523487091064
    4. ' mul' → logprob: -3.3284523487091064
    5. 'add' → logprob: -5.8284525871276855
    6. ' item' → logprob: -6.9534525871276855
    7. 'import' → logprob: -7.9534525871276855
    8. ' ad' → logprob: -8.203452110290527
    9. ' icon' → logprob: -8.453452110290527
    10. 'mul' → logprob: -8.578452110290527

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: 'S' (ID: 50)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.43318963050842285
    2. '#' → logprob: -2.683189630508423
    3. '(' → logprob: -3.058189630508423
    4. '\' → logprob: -3.183189630508423
    5. 'sum' → logprob: -3.308189630508423
    6. 'def' → logprob: -3.558189630508423
    7. '`' → logprob: -4.058189392089844
    8. 'a' → logprob: -4.058189392089844
    9. 'print' → logprob: -4.308189392089844
    10. '[' → logprob: -4.558189392089844

Token 11: ',' (ID: 11)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.4555943012237549
    2. 'E' → logprob: -1.9555943012237549
    3. 'UM' → logprob: -2.330594301223755
    4. '(' → logprob: -2.580594301223755
    5. 'et' → logprob: -2.580594301223755
    6. 'ET' → logprob: -2.830594301223755
    7. 'Q' → logprob: -2.955594301223755
    8. ' =' → logprob: -3.205594301223755
    9. 'S' → logprob: -3.205594301223755
    10. '=' → logprob: -3.330594301223755

Token 12: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.31274425983428955
    2. ' =' → logprob: -2.937744140625
    3. ' T' → logprob: -3.062744140625
    4. 'N' → logprob: -3.687744140625
    5. 'n' → logprob: -3.687744140625
    6. 'K' → logprob: -4.187744140625
    7. '=' → logprob: -4.562744140625
    8. 'a' → logprob: -4.562744140625
    9. 'L' → logprob: -4.687744140625
    10. 'B' → logprob: -5.062744140625

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16029226779937744
    2. '=' → logprob: -1.9102922677993774
    3. '_' → logprob: -10.160292625427246
    4. ' ' → logprob: -11.285292625427246
    5. ',' → logprob: -11.660292625427246
    6. ')' → logprob: -12.535292625427246
    7. '  ' → logprob: -13.910292625427246
    8. ' =
' → logprob: -14.160292625427246
    9. '.' → logprob: -14.285292625427246
    10. ' ,' → logprob: -15.035292625427246

Token 14: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.346924066543579
    2. ' [' → logprob: -1.721924066543579
    3. ' {' → logprob: -2.346924066543579
    4. '[' → logprob: -2.596924066543579
    5. ' []' → logprob: -2.721924066543579
    6. ' map' → logprob: -2.971924066543579
    7. ' "' → logprob: -2.971924066543579
    8. '0' → logprob: -3.221924066543579
    9. 'map' → logprob: -3.846924066543579
    10. '{' → logprob: -3.846924066543579

Token 15: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1367286741733551
    2. '(int' → logprob: -2.5117287635803223
    3. '(lambda' → logprob: -3.5117287635803223
    4. '(str' → logprob: -4.261728763580322
    5. '<|end|>' → logprob: -6.636728763580322
    6. '(input' → logprob: -8.136728286743164
    7. '(user' → logprob: -8.761728286743164
    8. '()' → logprob: -8.886728286743164
    9. 'int' → logprob: -9.261728286743164
    10. '(eval' → logprob: -9.511728286743164

Token 16: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38522952795028687
    2. 'x' → logprob: -1.8852295875549316
    3. 'int' → logprob: -2.8852295875549316
    4. ' int' → logprob: -3.1352295875549316
    5. ' s' → logprob: -3.2602295875549316
    6. 's' → logprob: -3.6352295875549316
    7. 'str' → logprob: -6.510229587554932
    8. ' str' → logprob: -6.760229587554932
    9. ' ' → logprob: -8.635229110717773
    10. 'lambda' → logprob: -8.885229110717773

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15115702152252197
    2. ':int' → logprob: -2.1511569023132324
    3. ' :' → logprob: -4.651156902313232
    4. 'int' → logprob: -4.776156902313232
    5. ' x' → logprob: -6.151156902313232
    6. ' int' → logprob: -6.401156902313232
    7. 'x' → logprob: -6.776156902313232
    8. ':x' → logprob: -7.276156902313232
    9. ',int' → logprob: -9.40115737915039
    10. '=int' → logprob: -9.77615737915039

Token 18: ' x' (ID: 1215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3054267466068268
    2. ' int' → logprob: -1.4304267168045044
    3. 'x' → logprob: -4.930426597595215
    4. ' x' → logprob: -4.930426597595215
    5. 'str' → logprob: -5.805426597595215
    6. ' ord' → logprob: -5.930426597595215
    7. ' str' → logprob: -6.180426597595215
    8. 'ord' → logprob: -7.305426597595215
    9. ' input' → logprob: -8.305426597595215
    10. 'input' → logprob: -8.305426597595215

Token 19: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.3814886510372162
    2. '.split' → logprob: -2.006488561630249
    3. ':' → logprob: -2.506488561630249
    4. '.rstrip' → logprob: -3.006488561630249
    5. '.replace' → logprob: -4.506488800048828
    6. '**' → logprob: -5.006488800048828
    7. '*' → logprob: -5.131488800048828
    8. '.' → logprob: -5.631488800048828
    9. '.readline' → logprob: -5.631488800048828
    10. '+' → logprob: -5.881488800048828

Token 20: '(),' (ID: 2547)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028993669897317886
    2. '(','' → logprob: -3.653993606567383
    3. '),' → logprob: -7.278993606567383
    4. '(),' → logprob: -7.528993606567383
    5. ',input' → logprob: -7.778993606567383
    6. '(' → logprob: -8.028993606567383
    7. ' ,' → logprob: -8.153993606567383
    8. '(","' → logprob: -8.778993606567383
    9. ')' → logprob: -9.778993606567383
    10. '(',' → logprob: -10.028993606567383

Token 21: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016122112050652504
    2. ' input' → logprob: -4.141122341156006
    3. 'open' → logprob: -9.391121864318848
    4. ' open' → logprob: -13.141121864318848
    5. '(input' → logprob: -14.266121864318848
    6. 'sys' → logprob: -15.141121864318848
    7. ' ' → logprob: -15.141121864318848
    8. '   ' → logprob: -15.391121864318848
    9. 'stdin' → logprob: -15.391121864318848
    10. '```' → logprob: -15.516121864318848

Token 22: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00015800826076883823
    2. ' input' → logprob: -9.375158309936523
    3. 'open' → logprob: -10.125158309936523
    4. '   ' → logprob: -11.500158309936523
    5. 'S' → logprob: -12.125158309936523
    6. '```' → logprob: -12.500158309936523
    7. ''' → logprob: -12.750158309936523
    8. '(input' → logprob: -12.875158309936523
    9. '<input' → logprob: -13.000158309936523
    10. ' ' → logprob: -14.375158309936523

Token 23: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6017789840698242
    2. '(),' → logprob: -0.8517789840698242
    3. '()]' → logprob: -3.726778984069824
    4. '()],' → logprob: -6.851778984069824
    5. '())' → logprob: -8.976778984069824
    6. '(),"' → logprob: -9.476778984069824
    7. '()>' → logprob: -10.601778984069824
    8. '()),' → logprob: -10.726778984069824
    9. '(' → logprob: -10.851778984069824
    10. '()][' → logprob: -10.976778984069824

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029773399233818054
    2. ' input' → logprob: -3.529773473739624
    3. ' ' → logprob: -11.029773712158203
    4. '   ' → logprob: -12.904773712158203
    5. '<input' → logprob: -13.779773712158203
    6. '(input' → logprob: -14.029773712158203
    7. '  ' → logprob: -14.029773712158203
    8. '	input' → logprob: -14.279773712158203
    9. '=input' → logprob: -14.904773712158203
    10. ',input' → logprob: -15.654773712158203

Token 25: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0956919863820076
    2. '())' → logprob: -2.8456919193267822
    3. '()]' → logprob: -3.8456919193267822
    4. ')])' → logprob: -4.470692157745361
    5. '])' → logprob: -8.595691680908203
    6. ')' → logprob: -9.220691680908203
    7. '()])
' → logprob: -10.970691680908203
    8. ')]' → logprob: -10.970691680908203
    9. '()`' → logprob: -12.220691680908203
    10. '])]' → logprob: -12.345691680908203

Token 26: 'X' (ID: 55)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4328862726688385
    2. 'if' → logprob: -1.3078862428665161
    3. '\n' → logprob: -3.6828863620758057
    4. ')' → logprob: -4.432886123657227
    5. ' if' → logprob: -4.932886123657227
    6. 'for' → logprob: -5.057886123657227
    7. ' 
' → logprob: -5.182886123657227
    8. 'def' → logprob: -5.307886123657227
    9. 'result' → logprob: -5.557886123657227
    10. '
' → logprob: -5.807886123657227

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1720227748155594
    2. '_' → logprob: -2.047022819519043
    3. '=' → logprob: -4.047022819519043
    4. '1' → logprob: -5.547022819519043
    5. ',' → logprob: -5.922022819519043
    6. ' ' → logprob: -6.297022819519043
    7. 's' → logprob: -7.172022819519043
    8. '[' → logprob: -8.047022819519043
    9. '0' → logprob: -8.672022819519043
    10. '.' → logprob: -8.922022819519043

Token 28: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.6108388900756836
    2. 'S' → logprob: -1.7358388900756836
    3. 'list' → logprob: -2.6108388900756836
    4. '[' → logprob: -2.8608388900756836
    5. '[]' → logprob: -2.9858388900756836
    6. 'set' → logprob: -3.8608388900756836
    7. 'sum' → logprob: -4.360838890075684
    8. 'T' → logprob: -4.485838890075684
    9. '[S' → logprob: -4.610838890075684
    10. ' reduce' → logprob: -5.110838890075684

Token 29: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.017834052443504333
    2. '(' → logprob: -4.267834186553955
    3. '(lambda' → logprob: -5.642834186553955
    4. '(operator' → logprob: -9.142833709716797
    5. 'add' → logprob: -11.517833709716797
    6. ' (' → logprob: -13.892833709716797
    7. '((' → logprob: -14.017833709716797
    8. '(
' → logprob: -14.267833709716797
    9. '(op' → logprob: -14.892833709716797
    10. '(Add' → logprob: -15.517833709716797

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005960914772003889
    2. ',S' → logprob: -5.755960941314697
    3. ' ,' → logprob: -6.505960941314697
    4. ')' → logprob: -8.005960464477539
    5. ',T' → logprob: -8.380960464477539
    6. ',X' → logprob: -8.505960464477539
    7. ',[' → logprob: -9.380960464477539
    8. '(S' → logprob: -9.380960464477539
    9. '(' → logprob: -9.880960464477539
    10. ',int' → logprob: -10.380960464477539

Token 31: ' map' (ID: 4014)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3071391582489014
    2. 'S' → logprob: -1.4321391582489014
    3. '[S' → logprob: -1.6821391582489014
    4. '[' → logprob: -2.4321391582489014
    5. 'map' → logprob: -2.9321391582489014
    6. '[T' → logprob: -3.1821391582489014
    7. '[x' → logprob: -3.4321391582489014
    8. '[list' → logprob: -3.8071391582489014
    9. 'list' → logprob: -4.4321393966674805
    10. 'T' → logprob: -4.8071393966674805

Token 32: '(lambda' (ID: 43341)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.22136014699935913
    2. '(lambda' → logprob: -2.096360206604004
    3. '(ord' → logprob: -2.721360206604004
    4. '(' → logprob: -5.221360206604004
    5. '(list' → logprob: -5.846360206604004
    6. '(int' → logprob: -7.346360206604004
    7. '(len' → logprob: -7.471360206604004
    8. '(chr' → logprob: -8.471360206604004
    9. '(tuple' → logprob: -9.221360206604004
    10. 'str' → logprob: -10.721360206604004

Token 33: ' pair' (ID: 10610)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0116101503372192
    2. ' str' → logprob: -1.5116101503372192
    3. ' ord' → logprob: -2.1366100311279297
    4. 'lambda' → logprob: -2.3866100311279297
    5. 'list' → logprob: -2.7616100311279297
    6. ' lambda' → logprob: -2.8866100311279297
    7. 'int' → logprob: -3.6366100311279297
    8. 'ord' → logprob: -3.7616100311279297
    9. ' list' → logprob: -4.38661003112793
    10. 'chr' → logprob: -4.88661003112793

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016706773021724075
    2. ' :' → logprob: -9.250166893005371
    3. ':list' → logprob: -10.625166893005371
    4. 's' → logprob: -11.500166893005371
    5. '=lambda' → logprob: -11.750166893005371
    6. ':
' → logprob: -12.375166893005371
    7. '(pair' → logprob: -12.750166893005371
    8. '[' → logprob: -13.250166893005371
    9. '(lambda' → logprob: -13.500166893005371
    10. ':int' → logprob: -13.500166893005371

Token 35: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.7544511556625366
    2. ''' → logprob: -2.004451274871826
    3. 'pair' → logprob: -2.254451274871826
    4. '(pair' → logprob: -2.504451274871826
    5. ' int' → logprob: -2.879451274871826
    6. '(' → logprob: -3.004451274871826
    7. '[' → logprob: -3.004451274871826
    8. '(int' → logprob: -3.254451274871826
    9. '[int' → logprob: -3.254451274871826
    10. ' str' → logprob: -3.504451274871826

Token 36: '(pair' (ID: 84884)
  Prédit: '(pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.02319037914276123
    2. '(' → logprob: -4.398190498352051
    3. '(S' → logprob: -5.148190498352051
    4. '(T' → logprob: -5.898190498352051
    5. '((' → logprob: -7.273190498352051
    6. '(X' → logprob: -8.39819049835205
    7. 'pair' → logprob: -8.39819049835205
    8. '(not' → logprob: -8.77319049835205
    9. '('' → logprob: -9.02319049835205
    10. '(x' → logprob: -9.27319049835205

Token 37: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08951961249113083
    2. '('' → logprob: -3.339519500732422
    3. '(' → logprob: -3.589519500732422
    4. ')' → logprob: -4.839519500732422
    5. '(pair' → logprob: -5.464519500732422
    6. '(S' → logprob: -6.589519500732422
    7. '[::-' → logprob: -7.089519500732422
    8. '```' → logprob: -7.214519500732422
    9. '("' → logprob: -7.339519500732422
    10. '[]' → logprob: -7.464519500732422

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3143693804740906
    2. '1' → logprob: -1.3143694400787354
    3. '-' → logprob: -7.814369201660156
    4. ' ' → logprob: -8.064369201660156
    5. ']' → logprob: -9.126869201660156
    6. ':' → logprob: -9.814369201660156
    7. 'S' → logprob: -10.376869201660156
    8. '::-' → logprob: -10.501869201660156
    9. '])' → logprob: -10.876869201660156
    10. '2' → logprob: -11.189369201660156

Token 39: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.32571521401405334
    2. ']' → logprob: -1.450715184211731
    3. '])*' → logprob: -4.325715065002441
    4. ']),' → logprob: -4.450715065002441
    5. '])+' → logprob: -5.200715065002441
    6. ']==' → logprob: -5.700715065002441
    7. ')' → logprob: -5.950715065002441
    8. ']*' → logprob: -6.200715065002441
    9. ']+' → logprob: -6.325715065002441
    10. '])-' → logprob: -6.700715065002441

Token 40: ' ==' (ID: 951)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7143518328666687
    2. ')' → logprob: -1.4643518924713135
    3. '+' → logprob: -2.3393518924713135
    4. '),' → logprob: -2.8393518924713135
    5. ')*' → logprob: -2.8393518924713135
    6. ' *' → logprob: -3.5893518924713135
    7. ')+' → logprob: -4.464351654052734
    8. '[' → logprob: -4.589351654052734
    9. ' +' → logprob: -5.589351654052734
    10. '-' → logprob: -5.839351654052734

Token 41: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.012491291388869286
    2. 'S' → logprob: -6.137491226196289
    3. 'T' → logprob: -6.137491226196289
    4. ' pair' → logprob: -6.387491226196289
    5. 'p' → logprob: -6.512491226196289
    6. ''' → logprob: -6.762491226196289
    7. 'X' → logprob: -7.137491226196289
    8. '1' → logprob: -7.574991226196289
    9. '(pair' → logprob: -7.574991226196289
    10. ''p' → logprob: -7.699991226196289

Token 42: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47493278980255127
    2. '[' → logprob: -0.9749327898025513
    3. ' ' → logprob: -7.974932670593262
    4. '),' → logprob: -9.099932670593262
    5. 'and' → logprob: -9.912432670593262
    6. 's' → logprob: -10.287432670593262
    7. ')' → logprob: -10.474932670593262
    8. '<|end|>' → logprob: -10.599932670593262
    9. ',' → logprob: -11.037432670593262
    10. ']),' → logprob: -11.224932670593262

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009817203972488642
    2. '0' → logprob: -7.12598180770874
    3. ' ' → logprob: -9.375981330871582
    4. '])' → logprob: -11.063481330871582
    5. ']' → logprob: -11.438481330871582
    6. 'S' → logprob: -12.000981330871582
    7. 'T' → logprob: -12.125981330871582
    8. '   ' → logprob: -12.375981330871582
    9. ']),' → logprob: -12.438481330871582
    10. '-' → logprob: -12.500981330871582

Token 44: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005916469730436802
    2. ')' → logprob: -5.505916595458984
    3. ''),' → logprob: -7.505916595458984
    4. ',' → logprob: -7.880916595458984
    5. ' ),' → logprob: -8.005916595458984
    6. '"),' → logprob: -8.380916595458984
    7. ' and' → logprob: -9.630916595458984
    8. ' ' → logprob: -9.755916595458984
    9. ')),' → logprob: -10.505916595458984
    10. 'and' → logprob: -10.755916595458984

Token 45: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.4741778075695038
    2. ' zip' → logprob: -0.9741778373718262
    3. '(zip' → logprob: -9.599177360534668
    4. ' ' → logprob: -11.724177360534668
    5. '   ' → logprob: -11.849177360534668
    6. '.zip' → logprob: -12.099177360534668
    7. 'list' → logprob: -12.349177360534668
    8. ' list' → logprob: -12.974177360534668
    9. '  ' → logprob: -14.099177360534668
    10. ')' → logprob: -14.536677360534668

Token 46: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -9.496052371105179e-05
    2. '(' → logprob: -9.50009536743164
    3. 'S' → logprob: -11.25009536743164
    4. '(
' → logprob: -13.12509536743164
    5. '(s' → logprob: -13.12509536743164
    6. '(T' → logprob: -13.50009536743164
    7. ' (' → logprob: -15.12509536743164
    8. '((' → logprob: -15.12509536743164
    9. ')' → logprob: -15.37509536743164
    10. '(X' → logprob: -15.50009536743164

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032500479370355606
    2. ',T' → logprob: -4.032500267028809
    3. ' ,' → logprob: -4.407500267028809
    4. 'T' → logprob: -6.282500267028809
    5. ' T' → logprob: -9.407500267028809
    6. '(' → logprob: -9.657500267028809
    7. '(),' → logprob: -11.532500267028809
    8. ' ' → logprob: -11.782500267028809
    9. ',
' → logprob: -11.907500267028809
    10. '(T' → logprob: -12.157500267028809

Token 48: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.04868195205926895
    2. ' T' → logprob: -3.0486819744110107
    3. 'S' → logprob: -9.42368221282959
    4. ' ' → logprob: -11.79868221282959
    5. ' S' → logprob: -13.54868221282959
    6. ')' → logprob: -13.86118221282959
    7. '   ' → logprob: -14.86118221282959
    8. '  ' → logprob: -15.23618221282959
    9. '[' → logprob: -15.36118221282959
    10. ',' → logprob: -15.36118221282959

Token 49: ',' (ID: 11)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.009193172678351402
    2. '))' → logprob: -5.134192943572998
    3. ')' → logprob: -5.759192943572998
    4. ')))
' → logprob: -9.759193420410156
    5. '))))' → logprob: -10.259193420410156
    6. '),' → logprob: -12.259193420410156
    7. ')))

' → logprob: -12.884193420410156
    8. ' ' → logprob: -13.384193420410156
    9. ')));' → logprob: -13.384193420410156
    10. ')
' → logprob: -14.884193420410156

Token 50: ' '' (ID: 461)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10560011118650436
    2. '))' → logprob: -3.105600118637085
    3. ')))' → logprob: -3.230600118637085
    4. ')' → logprob: -5.105599880218506
    5. ' S' → logprob: -5.355599880218506
    6. 'T' → logprob: -5.980599880218506
    7. ' ' → logprob: -6.855599880218506
    8. 'len' → logprob: -8.605600357055664
    9. 'range' → logprob: -8.980600357055664
    10. ' ))' → logprob: -8.980600357055664

Token 51: '  ' (ID: 256)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0864126905798912
    2. 'T' → logprob: -2.8364126682281494
    3. ''))' → logprob: -4.2114129066467285
    4. ''' → logprob: -6.0864129066467285
    5. ' S' → logprob: -6.7114129066467285
    6. ' '' → logprob: -6.8364129066467285
    7. ' ' → logprob: -6.8364129066467285
    8. 'ST' → logprob: -7.0864129066467285
    9. '')))' → logprob: -7.8989129066467285
    10. '))' → logprob: -8.08641242980957

Token 52: ' '' (ID: 461)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.42910853028297424
    2. '')))' → logprob: -1.5541085004806519
    3. 'S' → logprob: -3.3041086196899414
    4. ' '' → logprob: -3.4291086196899414
    5. ' ' → logprob: -3.5541086196899414
    6. ')' → logprob: -4.929108619689941
    7. 'T' → logprob: -4.929108619689941
    8. '))' → logprob: -5.054108619689941
    9. ''))' → logprob: -5.429108619689941
    10. '  ' → logprob: -5.429108619689941

Token 53: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.10645923018455505
    2. '))' → logprob: -2.356459140777588
    3. ')' → logprob: -5.106459140777588
    4. ' ' → logprob: -9.731459617614746
    5. '))))' → logprob: -10.481459617614746
    6. ')))
' → logprob: -10.606459617614746
    7. '')))' → logprob: -11.231459617614746
    8. ' ))' → logprob: -11.356459617614746
    9. '),' → logprob: -11.981459617614746
    10. ')));' → logprob: -12.231459617614746

Token 54: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008322591311298311
    2. ')
' → logprob: -8.000832557678223
    3. ' ' → logprob: -9.125832557678223
    4. '#' → logprob: -9.125832557678223
    5. '[' → logprob: -9.500832557678223
    6. '(' → logprob: -9.750832557678223
    7. '
' → logprob: -10.500832557678223
    8. '<|end|>' → logprob: -10.500832557678223
    9. ' )' → logprob: -11.000832557678223
    10. '```' → logprob: -11.125832557678223

Token 55: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4859716296195984
    2. 'len' → logprob: -0.9859716296195984
    3. ' S' → logprob: -4.735971450805664
    4. 'S' → logprob: -6.235971450805664
    5. ' ' → logprob: -7.110971450805664
    6. '(len' → logprob: -8.485971450805664
    7. '  ' → logprob: -10.985971450805664
    8. '	len' → logprob: -12.360971450805664
    9. '<len' → logprob: -12.423471450805664
    10. ' (' → logprob: -12.610971450805664

Token 56: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0080407140776515
    2. '(' → logprob: -4.883040904998779
    3. '(T' → logprob: -8.508040428161621
    4. 'S' → logprob: -8.883040428161621
    5. ' (' → logprob: -10.383040428161621
    6. '(s' → logprob: -10.633040428161621
    7. '(X' → logprob: -10.633040428161621
    8. ' S' → logprob: -13.008040428161621
    9. '(
' → logprob: -13.133040428161621
    10. 's' → logprob: -13.133040428161621

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044866159558296204
    2. ')==' → logprob: -3.6698660850524902
    3. '==' → logprob: -4.04486608505249
    4. ' ==' → logprob: -7.66986608505249
    5. ' )' → logprob: -8.669866561889648
    6. '=' → logprob: -9.169866561889648
    7. ')>=' → logprob: -9.419866561889648
    8. '>=' → logprob: -10.669866561889648
    9. ')<=' → logprob: -11.544866561889648
    10. '<=' → logprob: -12.294866561889648

Token 58: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48012521862983704
    2. ' ==' → logprob: -0.9801251888275146
    3. '>=' → logprob: -5.980125427246094
    4. ' >=' → logprob: -6.855125427246094
    5. '<=' → logprob: -7.230125427246094
    6. '=' → logprob: -7.230125427246094
    7. ' <=' → logprob: -7.730125427246094
    8. '>' → logprob: -8.605125427246094
    9. ' and' → logprob: -9.730125427246094
    10. '!=' → logprob: -10.230125427246094

Token 59: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.007926945574581623
    2. ' len' → logprob: -4.882926940917969
    3. '3' → logprob: -9.257926940917969
    4. '1' → logprob: -9.632926940917969
    5. '2' → logprob: -9.882926940917969
    6. '4' → logprob: -10.007926940917969
    7. '5' → logprob: -11.132926940917969
    8. '6' → logprob: -11.257926940917969
    9. ' ' → logprob: -11.257926940917969
    10. '7' → logprob: -12.382926940917969

Token 60: '3' (ID: 18)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.007885199971497059
    2. 'T' → logprob: -5.007884979248047
    3. ' len' → logprob: -7.257884979248047
    4. 'min' → logprob: -8.507884979248047
    5. '3' → logprob: -9.382884979248047
    6. '1' → logprob: -10.132884979248047
    7. '5' → logprob: -10.757884979248047
    8. '2' → logprob: -10.757884979248047
    9. '4' → logprob: -10.757884979248047
    10. '6' → logprob: -10.882884979248047

Token 61: ' and' (ID: 326)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31166115403175354
    2. 'else' → logprob: -1.6866611242294312
    3. ' and' → logprob: -2.6866612434387207
    4. 'and' → logprob: -4.311661243438721
    5. '-' → logprob: -7.686661243438721
    6. ' ' → logprob: -7.811661243438721
    7. '+' → logprob: -9.186660766601562
    8. '<|end|>' → logprob: -10.436660766601562
    9. '>' → logprob: -11.436660766601562
    10. '	else' → logprob: -11.811660766601562

Token 62: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0411054790019989
    2. ' len' → logprob: -3.2911055088043213
    3. 'S' → logprob: -6.166105270385742
    4. ' S' → logprob: -7.666105270385742
    5. 'T' → logprob: -8.541105270385742
    6. '  ' → logprob: -9.291105270385742
    7. '   ' → logprob: -9.666105270385742
    8. ' T' → logprob: -10.041105270385742
    9. ' ' → logprob: -10.166105270385742
    10. '(len' → logprob: -11.041105270385742

Token 63: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.5823928117752075
    2. '(S' → logprob: -0.8323928117752075
    3. '(' → logprob: -5.082392692565918
    4. 'S' → logprob: -8.707392692565918
    5. 'T' → logprob: -10.707392692565918
    6. ' (' → logprob: -11.457392692565918
    7. '(X' → logprob: -11.707392692565918
    8. '(s' → logprob: -11.832392692565918
    9. '(
' → logprob: -12.957392692565918
    10. ')' → logprob: -13.207392692565918

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01667666994035244
    2. ')>=' → logprob: -4.391676902770996
    3. ' >=' → logprob: -6.141676902770996
    4. '>=' → logprob: -6.891676902770996
    5. ' )' → logprob: -7.141676902770996
    6. '<|end|>' → logprob: -9.891676902770996
    7. ']>=' → logprob: -10.266676902770996
    8. '[' → logprob: -10.391676902770996
    9. 'and' → logprob: -10.766676902770996
    10. ' ' → logprob: -11.141676902770996

Token 65: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6382007598876953
    2. ' >=' → logprob: -0.7632007598876953
    3. ')>=' → logprob: -5.763200759887695
    4. ')' → logprob: -6.763200759887695
    5. ']>=' → logprob: -7.763200759887695
    6. '<|end|>' → logprob: -8.013200759887695
    7. '>' → logprob: -8.763200759887695
    8. ' ' → logprob: -9.388200759887695
    9. 'and' → logprob: -9.513200759887695
    10. ' and' → logprob: -10.325700759887695

Token 66: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0031806828919798136
    2. ' ' → logprob: -5.753180503845215
    3. '2' → logprob: -14.565680503845215
    4. '1' → logprob: -14.628180503845215
    5. '  ' → logprob: -14.753180503845215
    6. '<|end|>' → logprob: -14.753180503845215
    7. '   ' → logprob: -15.440680503845215
    8. '```' → logprob: -15.628180503845215
    9. '4' → logprob: -15.690680503845215
    10. '...' → logprob: -15.878180503845215

Token 67: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00034583290107548237
    2. ' ' → logprob: -8.000346183776855
    3. '1' → logprob: -13.000346183776855
    4. '```' → logprob: -13.000346183776855
    5. '2' → logprob: -13.500346183776855
    6. 'len' → logprob: -13.562846183776855
    7. '  ' → logprob: -14.437846183776855
    8. '4' → logprob: -14.562846183776855
    9. '   ' → logprob: -14.625346183776855
    10. '`' → logprob: -14.937846183776855

Token 68: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.05513456463813782
    2. 'else' → logprob: -2.9301345348358154
    3. ' ' → logprob: -8.805134773254395
    4. ' and' → logprob: -9.680134773254395
    5. ')' → logprob: -11.680134773254395
    6. '<|end|>' → logprob: -12.055134773254395
    7. '	else' → logprob: -12.430134773254395
    8. 'and' → logprob: -12.680134773254395
    9. ' ' → logprob: -12.930134773254395
    10. ':' → logprob: -12.930134773254395

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023306388407945633
    2. ' ' → logprob: -4.523306369781494
    3. 'len' → logprob: -5.148306369781494
    4. 'None' → logprob: -6.148306369781494
    5. 'sum' → logprob: -6.398306369781494
    6. '-' → logprob: -6.648306369781494
    7. '3' → logprob: -8.523306846618652
    8. ' None' → logprob: -8.773306846618652
    9. 'min' → logprob: -8.773306846618652
    10. '...' → logprob: -9.148306846618652

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02668631635606289
    2. 'len' → logprob: -4.651686191558838
    3. '-' → logprob: -5.151686191558838
    4. 'sum' → logprob: -5.276686191558838
    5. 'None' → logprob: -5.651686191558838
    6. 'min' → logprob: -7.276686191558838
    7. ' ' → logprob: -7.776686191558838
    8. 'int' → logprob: -7.901686191558838
    9. 'max' → logprob: -8.651686668395996
    10. 'False' → logprob: -9.026686668395996

Token 71: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37082377076148987
    2. '[' → logprob: -1.6208237409591675
    3. '<|end|>' → logprob: -2.495823860168457
    4. '(' → logprob: -4.370823860168457
    5. '
' → logprob: -4.745823860168457
    6. '#' → logprob: -6.245823860168457
    7. ' ' → logprob: -6.495823860168457
    8. ']' → logprob: -6.995823860168457
    9. '[
' → logprob: -7.620823860168457
    10. 'X' → logprob: -7.620823860168457

Token 72: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.847054123878479
    2. '
' → logprob: -0.972054123878479
    3. '<|end|>' → logprob: -1.847054123878479
    4. 'print' → logprob: -3.7220540046691895
    5. '#' → logprob: -5.8470540046691895
    6. ')
' → logprob: -6.0970540046691895
    7. '```' → logprob: -6.0970540046691895
    8. '<|end|>' → logprob: -7.5970540046691895
    9. 'X' → logprob: -7.8470540046691895
    10. '(' → logprob: -8.097054481506348

Token 73: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.12720966339111328
    2. '(' → logprob: -2.1272096633911133
    3. '(x' → logprob: -8.752209663391113
    4. '()' → logprob: -9.502209663391113
    5. '(sum' → logprob: -11.127209663391113
    6. '(max' → logprob: -11.752209663391113
    7. '(S' → logprob: -12.002209663391113
    8. 'X' → logprob: -12.252209663391113
    9. '(len' → logprob: -12.252209663391113
    10. '((' → logprob: -12.377209663391113

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0100624169572257e-05
    2. '))' → logprob: -11.125020027160645
    3. ' )' → logprob: -12.375020027160645
    4. ')`' → logprob: -15.125020027160645
    5. '`)' → logprob: -15.375020027160645
    6. ')
' → logprob: -15.500020027160645
    7. ')))' → logprob: -16.62502098083496
    8. '')' → logprob: -17.12502098083496
    9. ')}' → logprob: -17.25002098083496
    10. ')**' → logprob: -17.50002098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 40.28%
Précision adaptée (1ère position): 40.28%
Précision (top 10): 77.78%
================================================================================
