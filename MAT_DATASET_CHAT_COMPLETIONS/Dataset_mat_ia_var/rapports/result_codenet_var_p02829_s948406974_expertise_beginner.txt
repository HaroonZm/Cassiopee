================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
b = int(input())

if a == 1:
    if b == 2:
        print('3')
    elif b == 3:
        print('2')
elif a == 2:
    if b == 1:
        print('3')
    elif b == 3:
        print('1')
elif a == 3:
    if b == 1:
        print('2')
    elif b == 2:
        print('1')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004484269011300057
    2. '(a' → logprob: -8.625448226928711
    3. 'a' → logprob: -9.250448226928711
    4. ' (' → logprob: -9.750448226928711
    5. ''' → logprob: -10.500448226928711
    6. '`' → logprob: -10.750448226928711
    7. '```' → logprob: -11.000448226928711
    8. '32' → logprob: -11.500448226928711
    9. '('' → logprob: -11.750448226928711
    10. '[' → logprob: -12.000448226928711

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.041177209466695786
    2. ')' → logprob: -3.291177272796631
    3. '()' → logprob: -6.291177272796631
    4. '())' → logprob: -7.791177272796631
    5. '(
' → logprob: -9.041176795959473
    6. '```' → logprob: -9.041176795959473
    7. '(()' → logprob: -9.291176795959473
    8. '<|end|>' → logprob: -9.791176795959473
    9. '(a' → logprob: -10.041176795959473
    10. '('' → logprob: -10.166176795959473

Token 5: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15050211548805237
    2. 'if' → logprob: -2.2755022048950195
    3. '*' → logprob: -3.5255022048950195
    4. '+
' → logprob: -6.1505022048950195
    5. '\n' → logprob: -6.1505022048950195
    6. '%' → logprob: -6.5255022048950195
    7. '#' → logprob: -7.9005022048950195
    8. '\' → logprob: -8.27550220489502
    9. '```' → logprob: -8.40050220489502
    10. '**' → logprob: -8.52550220489502

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4122715890407562
    2. '=' → logprob: -1.2872716188430786
    3. ' ' → logprob: -3.287271499633789
    4. '+' → logprob: -4.162271499633789
    5. '[' → logprob: -6.037271499633789
    6. ')' → logprob: -6.287271499633789
    7. ' +=' → logprob: -6.412271499633789
    8. '_' → logprob: -7.162271499633789
    9. '  ' → logprob: -7.787271499633789
    10. '+=' → logprob: -7.912271499633789

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014315696433186531
    2. 'int' → logprob: -4.264315605163574
    3. ' a' → logprob: -9.014315605163574
    4. 'a' → logprob: -10.889315605163574
    5. ' ' → logprob: -12.014315605163574
    6. ' input' → logprob: -12.764315605163574
    7. '=int' → logprob: -13.639315605163574
    8. '<int' → logprob: -14.639315605163574
    9. ' ' → logprob: -15.014315605163574
    10. 'input' → logprob: -15.014315605163574

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007672215579077601
    2. ')' → logprob: -8.25076675415039
    3. '()' → logprob: -8.37576675415039
    4. '(a' → logprob: -9.12576675415039
    5. ' (' → logprob: -10.00076675415039
    6. '(
' → logprob: -10.50076675415039
    7. '```' → logprob: -10.87576675415039
    8. ' ' → logprob: -11.37576675415039
    9. '(input' → logprob: -11.50076675415039
    10. 'a' → logprob: -11.50076675415039

Token 9: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08525170385837555
    2. '()' → logprob: -2.585251808166504
    3. ')' → logprob: -5.085251808166504
    4. '()))' → logprob: -9.960251808166504
    5. ' ())' → logprob: -10.210251808166504
    6. '(' → logprob: -10.710251808166504
    7. '`)' → logprob: -10.835251808166504
    8. '()>' → logprob: -12.585251808166504
    9. '()`' → logprob: -12.585251808166504
    10. '();)' → logprob: -12.585251808166504

Token 10: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08182825148105621
    2. 'c' → logprob: -2.5818283557891846
    3. 's' → logprob: -7.0818281173706055
    4. 'sum' → logprob: -7.3318281173706055
    5. '+' → logprob: -7.4568281173706055
    6. 'print' → logprob: -7.8318281173706055
    7. 'result' → logprob: -8.331828117370605
    8. 'i' → logprob: -9.831828117370605
    9. ' if' → logprob: -9.831828117370605
    10. '+
' → logprob: -10.081828117370605

Token 11: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14604926109313965
    2. ' a' → logprob: -2.1460492610931396
    3. 'a' → logprob: -4.021049499511719
    4. '  ' → logprob: -7.146049499511719
    5. ' (' → logprob: -9.646049499511719
    6. ' b' → logprob: -10.271049499511719
    7. ''' → logprob: -10.396049499511719
    8. ' )' → logprob: -11.396049499511719
    9. '(a' → logprob: -11.521049499511719
    10. ' ' → logprob: -11.646049499511719

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5128214359283447
    2. ' <' → logprob: -1.0128214359283447
    3. ' ' → logprob: -3.7628214359283447
    4. ' <=' → logprob: -5.012821197509766
    5. ' >=' → logprob: -5.762821197509766
    6. ' ==' → logprob: -6.137821197509766
    7. '<' → logprob: -6.887821197509766
    8. '>' → logprob: -7.137821197509766
    9. '  ' → logprob: -8.012821197509766
    10. ' !=' → logprob: -8.762821197509766

Token 13: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3882219195365906
    2. ' b' → logprob: -1.1382219791412354
    3. ' ' → logprob: -7.013221740722656
    4. '0' → logprob: -7.763221740722656
    5. '1' → logprob: -10.888221740722656
    6. 'a' → logprob: -13.013221740722656
    7. '10' → logprob: -14.638221740722656
    8. '=' → logprob: -14.638221740722656
    9. ' a' → logprob: -14.638221740722656
    10. '3' → logprob: -14.888221740722656

Token 14: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009617198375053704
    2. ' b' → logprob: -7.375961780548096
    3. '0' → logprob: -8.250961303710938
    4. '1' → logprob: -9.875961303710938
    5. ' ' → logprob: -11.125961303710938
    6. '5' → logprob: -13.250961303710938
    7. '10' → logprob: -13.500961303710938
    8. '3' → logprob: -13.750961303710938
    9. '7' → logprob: -14.250961303710938
    10. '2' → logprob: -14.250961303710938

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008226146455854177
    2. ' :' → logprob: -7.1258225440979
    3. ' and' → logprob: -11.250823020935059
    4. '):' → logprob: -13.500823020935059
    5. ':**' → logprob: -13.625823020935059
    6. '():' → logprob: -14.250823020935059
    7. ':
' → logprob: -14.500823020935059
    8. 'and' → logprob: -15.375823020935059
    9. '：' → logprob: -15.500823020935059
    10. '':' → logprob: -15.625823020935059

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1891205906867981
    2. '   ' → logprob: -1.9391205310821533
    3. '    ' → logprob: -4.189120769500732
    4. ' :' → logprob: -5.689120769500732
    5. '\n' → logprob: -5.814120769500732
    6. ':
' → logprob: -6.064120769500732
    7. ' ' → logprob: -6.939120769500732
    8. '\' → logprob: -7.189120769500732
    9. ' print' → logprob: -7.314120769500732
    10. ':\' → logprob: -7.814120769500732

Token 17: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3770550787448883
    2. ' print' → logprob: -1.377055048942566
    3. 'print' → logprob: -3.1270551681518555
    4. '    ' → logprob: -5.1270551681518555
    5. ' ' → logprob: -5.3770551681518555
    6. ' pass' → logprob: -6.3770551681518555
    7. ' b' → logprob: -6.6270551681518555
    8. '\n' → logprob: -6.6270551681518555
    9. ' a' → logprob: -6.8770551681518555
    10. 'b' → logprob: -8.252055168151855

Token 18: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.004857172723859549
    2. 'b' → logprob: -5.379857063293457
    3. ' ' → logprob: -8.504857063293457
    4. ' a' → logprob: -10.629857063293457
    5. 'a' → logprob: -12.629857063293457
    6. ' ' → logprob: -12.879857063293457
    7. '_' → logprob: -13.629857063293457
    8. ' True' → logprob: -13.879857063293457
    9. '_b' → logprob: -14.379857063293457
    10. '  ' → logprob: -14.504857063293457

Token 19: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.015386237762868404
    2. '==' → logprob: -4.39038610458374
    3. ' >' → logprob: -6.01538610458374
    4. ' ' → logprob: -9.140386581420898
    5. '>' → logprob: -9.265386581420898
    6. ' <' → logprob: -9.390386581420898
    7. ' <=' → logprob: -9.765386581420898
    8. ' >=' → logprob: -10.140386581420898
    9. ' !=' → logprob: -10.515386581420898
    10. ' ' → logprob: -11.765386581420898

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20206446945667267
    2. '1' → logprob: -1.7020645141601562
    3. '2' → logprob: -7.827064514160156
    4. '0' → logprob: -8.327064514160156
    5. ' ' → logprob: -13.139564514160156
    6. '  ' → logprob: -13.827064514160156
    7. '3' → logprob: -13.827064514160156
    8. ' =' → logprob: -14.452064514160156
    9. '<|end|>' → logprob: -14.452064514160156
    10. ' a' → logprob: -14.514564514160156

Token 21: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016994792968034744
    2. ' ' → logprob: -4.641994953155518
    3. '2' → logprob: -5.016994953155518
    4. '0' → logprob: -7.516994953155518
    5. '3' → logprob: -11.01699447631836
    6. '5' → logprob: -11.51699447631836
    7. '4' → logprob: -12.39199447631836
    8. '  ' → logprob: -12.89199447631836
    9. 'a' → logprob: -13.32949447631836
    10. '10' → logprob: -13.64199447631836

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006936123827472329
    2. ':
' → logprob: -7.3756937980651855
    3. ' :' → logprob: -10.000693321228027
    4. ' and' → logprob: -11.875693321228027
    5. '       ' → logprob: -12.125693321228027
    6. '   ' → logprob: -12.250693321228027
    7. '):' → logprob: -13.750693321228027
    8. ' or' → logprob: -14.125693321228027
    9. ' :
' → logprob: -14.250693321228027
    10. ':\' → logprob: -14.750693321228027

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2042437642812729
    2. '\n' → logprob: -1.829243779182434
    3. '   ' → logprob: -4.2042436599731445
    4. ':' → logprob: -4.9542436599731445
    5. '    ' → logprob: -7.2042436599731445
    6. '\' → logprob: -7.9542436599731445
    7. ':\' → logprob: -8.454243659973145
    8. ':
' → logprob: -8.579243659973145
    9. '        ' → logprob: -9.204243659973145
    10. '     ' → logprob: -9.454243659973145

Token 24: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.39408791065216064
    2. ' print' → logprob: -1.2690879106521606
    3. '       ' → logprob: -3.394087791442871
    4. '           ' → logprob: -4.894087791442871
    5. '   ' → logprob: -6.519087791442871
    6. ' pass' → logprob: -7.019087791442871
    7. 'pass' → logprob: -7.644087791442871
    8. '\n' → logprob: -8.144087791442871
    9. '        ' → logprob: -9.019087791442871
    10. ' ' → logprob: -9.644087791442871

Token 25: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.052842918783426285
    2. '("' → logprob: -3.052842855453491
    3. '('' → logprob: -5.67784309387207
    4. '("("' → logprob: -7.67784309387207
    5. '()' → logprob: -8.17784309387207
    6. '("")' → logprob: -10.30284309387207
    7. '(True' → logprob: -10.80284309387207
    8. '(
' → logprob: -11.92784309387207
    9. '(a' → logprob: -12.55284309387207
    10. '"' → logprob: -13.30284309387207

Token 26: '3' (ID: 18)
  Prédit: 'Hello'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hello' → logprob: -0.8956072330474854
    2. 'Yes' → logprob: -1.1456072330474854
    3. 'YES' → logprob: -3.0206072330474854
    4. 'One' → logprob: -3.1456072330474854
    5. 'hello' → logprob: -3.7706072330474854
    6. 'one' → logprob: -3.7706072330474854
    7. '3' → logprob: -3.7706072330474854
    8. 'OK' → logprob: -4.145606994628906
    9. '1' → logprob: -4.645606994628906
    10. 'b' → logprob: -4.645606994628906

Token 27: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0005961624556221068
    2. '')
' → logprob: -7.750596046447754
    3. ')' → logprob: -8.875596046447754
    4. ''' → logprob: -11.250596046447754
    5. '')
' → logprob: -12.500596046447754
    6. '")' → logprob: -13.375596046447754
    7. '!' → logprob: -13.750596046447754
    8. '()' → logprob: -13.750596046447754
    9. '')

' → logprob: -13.750596046447754
    10. '4' → logprob: -14.125596046447754

Token 28: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7398484349250793
    2. 'elif' → logprob: -1.3648483753204346
    3. ' else' → logprob: -2.1148483753204346
    4. '   ' → logprob: -2.6148483753204346
    5. '\n' → logprob: -3.6148483753204346
    6. '
' → logprob: -4.114848613739014
    7. '```' → logprob: -4.739848613739014
    8. ' elif' → logprob: -4.739848613739014
    9. '<|end|>' → logprob: -5.364848613739014
    10. ':' → logprob: -6.489848613739014

Token 29: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5390057563781738
    2. ' else' → logprob: -1.7890057563781738
    3. 'elif' (adapté à ' elif') → logprob: -1.9140057563781738
    4. '   ' → logprob: -2.789005756378174
    5. ':' → logprob: -3.789005756378174
    6. ' elif' → logprob: -4.789005756378174
    7. ' ' → logprob: -5.789005756378174
    8. '\n' → logprob: -6.164005756378174
    9. '```' → logprob: -6.664005756378174
    10. '
' → logprob: -7.039005756378174

Token 30: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.003288582433015108
    2. 'b' → logprob: -5.753288745880127
    3. ' ' → logprob: -9.253288269042969
    4. '    ' → logprob: -12.378288269042969
    5. ' ' → logprob: -12.378288269042969
    6. '   ' → logprob: -13.378288269042969
    7. ' a' → logprob: -14.003288269042969
    8. ' (' → logprob: -14.253288269042969
    9. ' True' → logprob: -14.378288269042969
    10. '  ' → logprob: -14.503288269042969

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03369353339076042
    2. '==' → logprob: -3.408693552017212
    3. ' ' → logprob: -10.158693313598633
    4. ' !=' → logprob: -13.908693313598633
    5. ' ===' → logprob: -14.033693313598633
    6. ' ' → logprob: -14.033693313598633
    7. ' >' → logprob: -14.283693313598633
    8. ')' → logprob: -14.283693313598633
    9. '<|end|>' → logprob: -14.408693313598633
    10. ' =' → logprob: -14.658693313598633

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3979358375072479
    2. '3' → logprob: -1.1479358673095703
    3. '1' → logprob: -4.52293586730957
    4. '4' → logprob: -9.14793586730957
    5. '2' → logprob: -10.64793586730957
    6. '0' → logprob: -12.46043586730957
    7. '  ' → logprob: -13.14793586730957
    8. '5' → logprob: -13.21043586730957
    9. ' '' → logprob: -13.58543586730957
    10. ''' → logprob: -13.71043586730957

Token 33: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1030205711722374
    2. '1' → logprob: -2.353020668029785
    3. ' ' → logprob: -6.103020668029785
    4. '4' → logprob: -7.603020668029785
    5. '2' → logprob: -9.853020668029785
    6. '0' → logprob: -11.353020668029785
    7. '5' → logprob: -12.228020668029785
    8. '7' → logprob: -14.103020668029785
    9. '   ' → logprob: -14.290520668029785
    10. '6' → logprob: -14.603020668029785

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.870950215263292e-05
    2. ':
' → logprob: -10.750048637390137
    3. '):' → logprob: -11.000048637390137
    4. ' :' → logprob: -11.875048637390137
    5. '':' → logprob: -13.750048637390137
    6. ':**' → logprob: -13.750048637390137
    7. '   ' → logprob: -15.125048637390137
    8. '>:' → logprob: -15.375048637390137
    9. ')' → logprob: -15.750048637390137
    10. '       ' → logprob: -15.875048637390137

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002373035065829754
    2. ':' → logprob: -6.752373218536377
    3. '4' → logprob: -7.877373218536377
    4. 'print' → logprob: -8.252372741699219
    5. ''' → logprob: -8.752372741699219
    6. '        ' → logprob: -9.002372741699219
    7. ':
' → logprob: -9.627372741699219
    8. '   ' → logprob: -9.877372741699219
    9. '           ' → logprob: -10.502372741699219
    10. '```' → logprob: -10.877372741699219

Token 36: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04558791220188141
    2. ' print' → logprob: -3.2955880165100098
    3. '       ' → logprob: -4.92058801651001
    4. '   ' → logprob: -9.045587539672852
    5. '           ' → logprob: -9.920587539672852
    6. ' ' → logprob: -10.795587539672852
    7. ''' → logprob: -11.170587539672852
    8. '        ' → logprob: -12.295587539672852
    9. '```' → logprob: -12.420587539672852
    10. '	print' → logprob: -12.545587539672852

Token 37: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.003605416975915432
    2. '(' → logprob: -5.628605365753174
    3. ' ('' → logprob: -13.003605842590332
    4. '("' → logprob: -13.378605842590332
    5. '(('' → logprob: -14.378605842590332
    6. ' ' → logprob: -14.878605842590332
    7. ''' → logprob: -15.378605842590332
    8. ' (' → logprob: -15.753605842590332
    9. '('(' → logprob: -16.503604888916016
    10. '()' → logprob: -16.878604888916016

Token 38: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.29363465309143066
    2. '2' → logprob: -1.6686346530914307
    3. '5' → logprob: -3.1686346530914307
    4. '3' → logprob: -4.918634414672852
    5. '1' → logprob: -5.043634414672852
    6. ''' → logprob: -5.168634414672852
    7. '6' → logprob: -5.543634414672852
    8. '7' → logprob: -8.793634414672852
    9. '"' → logprob: -9.668634414672852
    10. ' ' → logprob: -9.793634414672852

Token 39: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0004738063144031912
    2. '')
' → logprob: -7.750473976135254
    3. ')' → logprob: -10.250473976135254
    4. ''' → logprob: -11.875473976135254
    5. '')

' → logprob: -15.000473976135254
    6. '   ' → logprob: -16.125473022460938
    7. '')
' → logprob: -16.250473022460938
    8. '")' → logprob: -16.500473022460938
    9. ' ')' → logprob: -16.750473022460938
    10. '}')' → logprob: -17.500473022460938

Token 40: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2011224776506424
    2. ' else' → logprob: -2.451122522354126
    3. 'elif' → logprob: -2.576122522354126
    4. '   ' → logprob: -4.076122283935547
    5. '<|end|>' → logprob: -6.701122283935547
    6. ' elif' → logprob: -7.076122283935547
    7. '```' → logprob: -7.451122283935547
    8. '	else' → logprob: -9.201122283935547
    9. '	elif' → logprob: -10.201122283935547
    10. '<|end|>' → logprob: -10.576122283935547

Token 41: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.11610109359025955
    2. ' b' → logprob: -2.491101026535034
    3. 'a' → logprob: -3.741101026535034
    4. 'b' → logprob: -6.366101264953613
    5. ' ' → logprob: -6.741101264953613
    6. ' ' → logprob: -8.866101264953613
    7. ' `' → logprob: -12.991101264953613
    8. '`' → logprob: -13.053601264953613
    9. '_a' → logprob: -13.178601264953613
    10. '<|end|>' → logprob: -13.241101264953613

Token 42: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012587939389050007
    2. '==' → logprob: -4.387588024139404
    3. ' ' → logprob: -9.637587547302246
    4. ' ' → logprob: -11.887587547302246
    5. ' =' → logprob: -13.887587547302246
    6. '=' → logprob: -14.137587547302246
    7. '[' → logprob: -14.387587547302246
    8. ' !=' → logprob: -14.387587547302246
    9. ' ===' → logprob: -14.512587547302246
    10. ')' → logprob: -15.012587547302246

Token 43: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2814171612262726
    2. '2' → logprob: -1.4064171314239502
    3. '3' → logprob: -8.406416893005371
    4. '1' → logprob: -10.531416893005371
    5. '4' → logprob: -12.093916893005371
    6. '  ' → logprob: -12.593916893005371
    7. '0' → logprob: -13.031416893005371
    8. '<|end|>' → logprob: -13.468916893005371
    9. ' ' → logprob: -14.593916893005371
    10. ' a' → logprob: -15.343916893005371

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010378103470429778
    2. ' ' → logprob: -7.00103759765625
    3. '3' → logprob: -9.00103759765625
    4. '1' → logprob: -13.12603759765625
    5. '  ' → logprob: -14.87603759765625
    6. '4' → logprob: -15.56353759765625
    7. '   ' → logprob: -16.50103759765625
    8. '0' → logprob: -16.75103759765625
    9. '<|end|>' → logprob: -16.87603759765625
    10. '۲' → logprob: -16.93853759765625

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002165299083571881
    2. ':
' → logprob: -8.625216484069824
    3. ' and' → logprob: -11.000216484069824
    4. ' :' → logprob: -11.125216484069824
    5. '   ' → logprob: -12.625216484069824
    6. 'and' → logprob: -14.000216484069824
    7. ' ==' → logprob: -14.875216484069824
    8. ':

' → logprob: -15.125216484069824
    9. '==' → logprob: -15.375216484069824
    10. ':**' → logprob: -16.12521743774414

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07328449934720993
    2. 'if' → logprob: -3.198284387588501
    3. ' if' → logprob: -3.573284387588501
    4. ' ' → logprob: -7.44828462600708
    5. '    ' → logprob: -7.82328462600708
    6. '       ' → logprob: -8.073284149169922
    7. '  ' → logprob: -8.823284149169922
    8. ' and' → logprob: -9.323284149169922
    9. '```' → logprob: -9.323284149169922
    10. ':' → logprob: -10.198284149169922

Token 47: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3232059180736542
    2. 'if' (adapté à ' if') → logprob: -1.3232059478759766
    3. '   ' → logprob: -4.698205947875977
    4. '```' → logprob: -7.698205947875977
    5. ' ' → logprob: -8.323205947875977
    6. '`' → logprob: -10.323205947875977
    7. '    ' → logprob: -11.698205947875977
    8. '  ' → logprob: -11.698205947875977
    9. '``' → logprob: -11.823205947875977
    10. 'elif' → logprob: -12.198205947875977

Token 48: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6786322593688965
    2. ' a' → logprob: -0.8036322593688965
    3. ' b' → logprob: -3.6786322593688965
    4. 'b' → logprob: -3.9286322593688965
    5. ' ' → logprob: -10.303632736206055
    6. '   ' → logprob: -10.928632736206055
    7. '1' → logprob: -12.428632736206055
    8. '	a' → logprob: -12.928632736206055
    9. '  ' → logprob: -13.303632736206055
    10. '3' → logprob: -14.428632736206055

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008634308353066444
    2. '==' → logprob: -4.758634090423584
    3. ' ' → logprob: -11.508634567260742
    4. '<|end|>' → logprob: -12.883634567260742
    5. ' =' → logprob: -13.133634567260742
    6. ')' → logprob: -13.508634567260742
    7. ' ' → logprob: -13.758634567260742
    8. ' !=' → logprob: -14.258634567260742
    9. '=' → logprob: -14.508634567260742
    10. '<|end|>' → logprob: -15.508634567260742

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1438438594341278
    2. ' ' → logprob: -2.01884388923645
    3. '3' → logprob: -6.768843650817871
    4. '  ' → logprob: -11.393843650817871
    5. '<|end|>' → logprob: -13.331343650817871
    6. '2' → logprob: -13.393843650817871
    7. '   ' → logprob: -13.768843650817871
    8. '123' → logprob: -15.143843650817871
    9. ''' → logprob: -15.331343650817871
    10. '<|end|>' → logprob: -15.456343650817871

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023578304797410965
    2. '3' → logprob: -3.773578405380249
    3. ' ' → logprob: -8.023578643798828
    4. '   ' → logprob: -13.586078643798828
    5. '2' → logprob: -13.961078643798828
    6. '  ' → logprob: -13.961078643798828
    7. 'a' → logprob: -15.148578643798828
    8. ''' → logprob: -15.836078643798828
    9. '<|end|>' → logprob: -16.023578643798828
    10. 'elif' → logprob: -16.148578643798828

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0059443251229822636
    2. ':
' → logprob: -5.13094425201416
    3. '):' → logprob: -12.00594425201416
    4. '       ' → logprob: -12.63094425201416
    5. ':

' → logprob: -12.63094425201416
    6. '):
' → logprob: -14.25594425201416
    7. ' :' → logprob: -14.38094425201416
    8. '   ' → logprob: -14.38094425201416
    9. '<|end|>' → logprob: -14.63094425201416
    10. ')' → logprob: -15.88094425201416

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1900855004787445
    2. ':' → logprob: -1.815085530281067
    3. ':
' → logprob: -5.815085411071777
    4. '<|end|>' → logprob: -6.190085411071777
    5. '   ' → logprob: -6.565085411071777
    6. ' ' → logprob: -7.190085411071777
    7. 'print' → logprob: -7.565085411071777
    8. '3' → logprob: -8.315085411071777
    9. ' :' → logprob: -8.440085411071777
    10. '4' → logprob: -8.565085411071777

Token 54: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001805130043067038
    2. '       ' → logprob: -6.751805305480957
    3. ' print' → logprob: -7.751805305480957
    4. '3' → logprob: -8.751805305480957
    5. '   ' → logprob: -11.501805305480957
    6. '4' → logprob: -11.876805305480957
    7. '```' → logprob: -11.876805305480957
    8. '
' → logprob: -12.501805305480957
    9. '        
' → logprob: -12.751805305480957
    10. '.print' → logprob: -13.001805305480957

Token 55: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.004102977458387613
    2. '(' → logprob: -5.504103183746338
    3. '('(' → logprob: -11.25410270690918
    4. ' ('' → logprob: -11.87910270690918
    5. '("' → logprob: -13.12910270690918
    6. ' (' → logprob: -13.87910270690918
    7. ''' → logprob: -14.25410270690918
    8. '(('' → logprob: -14.87910270690918
    9. '("("' → logprob: -15.37910270690918
    10. '(\'' → logprob: -16.37910270690918

Token 56: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.061054359131958e-06
    2. ''' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.250007629394531
    4. '')' → logprob: -18.37500762939453
    5. '   ' → logprob: -18.50000762939453
    6. ' '' → logprob: -18.87500762939453
    7. '```' → logprob: -18.87500762939453
    8. '`' → logprob: -19.62500762939453
    9. 'third' → logprob: -19.87500762939453
    10. '       ' → logprob: -19.87500762939453

Token 57: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10047656297683716
    2. '')
' → logprob: -2.3504765033721924
    3. ')' → logprob: -8.475476264953613
    4. '')
' → logprob: -10.725476264953613
    5. ')
' → logprob: -10.975476264953613
    6. ''' → logprob: -11.350476264953613
    7. '')

' → logprob: -12.225476264953613
    8. '   ' → logprob: -12.350476264953613
    9. '")' → logprob: -14.725476264953613
    10. ')')
' → logprob: -15.475476264953613

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36889591813087463
    2. 'elif' → logprob: -1.2438958883285522
    3. ' elif' → logprob: -4.493896007537842
    4. '	elif' → logprob: -5.743896007537842
    5. '```' → logprob: -5.743896007537842
    6. '<|end|>' → logprob: -6.493896007537842
    7. 'else' → logprob: -7.118896007537842
    8. ' else' → logprob: -9.243895530700684
    9. '    
' → logprob: -9.368895530700684
    10. '<|end|>' → logprob: -10.243895530700684

Token 59: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.003196727717295289
    2. ' elif' → logprob: -5.753196716308594
    3. '   ' → logprob: -11.753196716308594
    4. 'else' → logprob: -12.253196716308594
    5. '	elif' → logprob: -12.253196716308594
    6. 'el' → logprob: -13.503196716308594
    7. ' ' → logprob: -16.503196716308594
    8. 'elseif' → logprob: -17.003196716308594
    9. ' else' → logprob: -17.128196716308594
    10. '<|end|>' → logprob: -17.128196716308594

Token 60: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.004088135901838541
    2. 'b' → logprob: -5.504087924957275
    3. ' ' → logprob: -11.754088401794434
    4. ' ' → logprob: -14.504088401794434
    5. '	b' → logprob: -15.004088401794434
    6. '3' → logprob: -15.754088401794434
    7. ' a' → logprob: -15.879088401794434
    8. '(b' → logprob: -16.379087448120117
    9. '```' → logprob: -16.379087448120117
    10. '   ' → logprob: -16.504087448120117

Token 61: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06200018152594566
    2. '==' → logprob: -2.812000274658203
    3. ' ' → logprob: -11.187000274658203
    4. ')' → logprob: -12.062000274658203
    5. '=' → logprob: -12.437000274658203
    6. ' =' → logprob: -13.062000274658203
    7. '===' → logprob: -13.812000274658203
    8. '  ' → logprob: -13.937000274658203
    9. ' ' → logprob: -14.187000274658203
    10. '<|end|>' → logprob: -14.312000274658203

Token 62: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.31326910853385925
    2. ' ' → logprob: -1.3132691383361816
    3. '   ' → logprob: -12.438268661499023
    4. '1' → logprob: -13.938268661499023
    5. '  ' → logprob: -14.063268661499023
    6. '```' → logprob: -14.563268661499023
    7. ' ' → logprob: -15.188268661499023
    8. ''' → logprob: -15.438268661499023
    9. '    ' → logprob: -15.563268661499023
    10. '`' → logprob: -15.563268661499023

Token 63: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.500011444091797
    3. '1' → logprob: -13.625011444091797
    4. '   ' → logprob: -17.625011444091797
    5. '۳' → logprob: -18.875011444091797
    6. '```' → logprob: -19.250011444091797
    7. '  ' → logprob: -19.375011444091797
    8. '৩' → logprob: -19.875011444091797
    9. 'input' → logprob: -20.000011444091797
    10. '<|end|>' → logprob: -20.250011444091797

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012058269931003451
    2. '       ' → logprob: -7.251205921173096
    3. ':
' → logprob: -7.751205921173096
    4. '):' → logprob: -10.251205444335938
    5. ' :' → logprob: -10.626205444335938
    6. '   ' → logprob: -13.376205444335938
    7. 'print' → logprob: -14.376205444335938
    8. '):
' → logprob: -14.501205444335938
    9. '():' → logprob: -14.501205444335938
    10. '':' → logprob: -14.501205444335938

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036035135854035616
    2. 'print' → logprob: -5.753603458404541
    3. ' print' → logprob: -8.0036039352417
    4. '   ' → logprob: -10.5036039352417
    5. '```' → logprob: -11.2536039352417
    6. '           ' → logprob: -11.5036039352417
    7. '     ' → logprob: -11.6286039352417
    8. '        ' → logprob: -11.8786039352417
    9. ''' → logprob: -12.2536039352417
    10. '    ' → logprob: -12.2536039352417

Token 66: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5298371911048889
    2. 'print' (adapté à ' print') → logprob: -0.9048371911048889
    3. '       ' → logprob: -5.029837131500244
    4. '   ' → logprob: -10.154837608337402
    5. ''' → logprob: -10.279837608337402
    6. '	print' → logprob: -10.779837608337402
    7. '```' → logprob: -11.029837608337402
    8. ' ' → logprob: -11.029837608337402
    9. '`' → logprob: -12.279837608337402
    10. '.print' → logprob: -12.529837608337402

Token 67: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00033999193692579865
    2. '(' → logprob: -8.000340461730957
    3. '('(' → logprob: -13.000340461730957
    4. ''' → logprob: -13.375340461730957
    5. ' ('' → logprob: -15.375340461730957
    6. '("' → logprob: -15.500340461730957
    7. '(('' → logprob: -16.00033950805664
    8. '("("' → logprob: -17.12533950805664
    9. '(\'' → logprob: -17.25033950805664
    10. ''s' → logprob: -17.75033950805664

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. ''' → logprob: -15.875
    4. '2' → logprob: -18.25
    5. '   ' → logprob: -20.625
    6. '１' → logprob: -21.25
    7. '```' → logprob: -21.25
    8. ''''' → logprob: -21.625
    9. '')' → logprob: -21.75
    10. '  ' → logprob: -22.125

Token 69: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.001167960581369698
    2. ')' → logprob: -7.0011677742004395
    3. '')
' → logprob: -8.501168251037598
    4. ''' → logprob: -9.876168251037598
    5. '   ' → logprob: -14.751168251037598
    6. '('' → logprob: -15.251168251037598
    7. '')

' → logprob: -15.501168251037598
    8. '")' → logprob: -15.626168251037598
    9. ')
' → logprob: -15.626168251037598
    10. ' ')' → logprob: -15.751168251037598

Token 70: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.20213089883327484
    2. 'else' → logprob: -1.702130913734436
    3. '<|end|>' → logprob: -8.202131271362305
    4. '```' → logprob: -8.327131271362305
    5. ' else' → logprob: -9.202131271362305
    6. ' elif' → logprob: -9.327131271362305
    7. 'el' → logprob: -12.452131271362305
    8. '#elif' → logprob: -12.952131271362305
    9. '	elif' → logprob: -13.827131271362305
    10. '...' → logprob: -13.827131271362305

Token 71: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0037562556099146605
    2. ' ' → logprob: -6.003756046295166
    3. 'a' → logprob: -6.753756046295166
    4. ' ' → logprob: -9.753756523132324
    5. ' b' → logprob: -10.003756523132324
    6. '<|end|>' → logprob: -12.253756523132324
    7. ' а' → logprob: -13.378756523132324
    8. 'b' → logprob: -14.128756523132324
    9. '	a' → logprob: -14.378756523132324
    10. ' (' → logprob: -14.753756523132324

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01418079063296318
    2. '==' → logprob: -4.264180660247803
    3. ' ' → logprob: -11.139181137084961
    4. ' ' → logprob: -14.139181137084961
    5. ' =' → logprob: -14.389181137084961
    6. '=' → logprob: -14.639181137084961
    7. '[' → logprob: -15.764181137084961
    8. ')' → logprob: -15.889181137084961
    9. '3' → logprob: -16.01418113708496
    10. ' ===' → logprob: -16.26418113708496

Token 73: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1797449141740799
    2. ' ' → logprob: -1.8047449588775635
    3. '۳' → logprob: -16.929744720458984
    4. '<|end|>' → logprob: -18.304744720458984
    5. ' ' → logprob: -18.429744720458984
    6. '３' → logprob: -18.429744720458984
    7. '1' → logprob: -18.429744720458984
    8. '33' → logprob: -18.554744720458984
    9. '৩' → logprob: -18.679744720458984
    10. '  ' → logprob: -18.804744720458984

Token 74: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۳' → logprob: -19.125
    4. '৩' → logprob: -19.875
    5. '३' → logprob: -20.625
    6. '３' → logprob: -21.0
    7. '٣' → logprob: -21.875
    8. '1' → logprob: -22.5
    9. '33' → logprob: -23.0
    10. '<|end|>' → logprob: -23.5625

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002715873415581882
    2. ' :' → logprob: -8.250271797180176
    3. ':
' → logprob: -12.375271797180176
    4. '   ' → logprob: -12.750271797180176
    5. '):' → logprob: -13.500271797180176
    6. ':**' → logprob: -14.000271797180176
    7. '>:' → logprob: -15.000271797180176
    8. '':' → logprob: -15.875271797180176
    9. '：' → logprob: -16.00027084350586
    10. ':

' → logprob: -16.37527084350586

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.79811754100956e-05
    2. ' if' → logprob: -11.250038146972656
    3. 'if' → logprob: -11.625038146972656
    4. '    ' → logprob: -11.875038146972656
    5. ' ' → logprob: -12.375038146972656
    6. '  ' → logprob: -12.875038146972656
    7. '```' → logprob: -14.000038146972656
    8. '       ' → logprob: -14.625038146972656
    9. '    
' → logprob: -15.375038146972656
    10. '<|end|>' → logprob: -16.000038146972656

Token 77: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.503448486328125
    2. 'if' (adapté à ' if') → logprob: -1.503448486328125
    3. '   ' → logprob: -1.753448486328125
    4. ' ' → logprob: -11.128448486328125
    5. '	if' → logprob: -13.128448486328125
    6. '```' → logprob: -13.628448486328125
    7. '  ' → logprob: -13.753448486328125
    8. '       ' → logprob: -15.503448486328125
    9. '    ' → logprob: -15.503448486328125
    10. '   ' → logprob: -16.753448486328125

Token 78: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.009762698784470558
    2. 'b' → logprob: -4.634762763977051
    3. ' ' → logprob: -12.63476276397705
    4. '   ' → logprob: -13.50976276397705
    5. ' a' → logprob: -13.63476276397705
    6. '    ' → logprob: -14.63476276397705
    7. '  ' → logprob: -15.88476276397705
    8. 'a' → logprob: -15.88476276397705
    9. '	b' → logprob: -16.509761810302734
    10. ' (' → logprob: -16.884761810302734

Token 79: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0890302062034607
    2. '==' → logprob: -2.4640302658081055
    3. ' ' → logprob: -10.589030265808105
    4. ' =' → logprob: -10.589030265808105
    5. '=' → logprob: -10.964030265808105
    6. ' ' → logprob: -11.839030265808105
    7. '`' → logprob: -12.589030265808105
    8. ' !=' → logprob: -12.589030265808105
    9. ')' → logprob: -13.089030265808105
    10. '```' → logprob: -14.151530265808105

Token 80: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03804917633533478
    2. '1' → logprob: -3.2880492210388184
    3. '2' → logprob: -11.91304874420166
    4. '  ' → logprob: -14.41304874420166
    5. '   ' → logprob: -15.41304874420166
    6. ' ' → logprob: -16.600549697875977
    7. ''' → logprob: -16.725549697875977
    8. ' '' → logprob: -17.725549697875977
    9. '```' → logprob: -17.725549697875977
    10. '`' → logprob: -18.225549697875977

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007702575996518135
    2. ' ' → logprob: -4.882702350616455
    3. '2' → logprob: -9.257702827453613
    4. '   ' → logprob: -14.507702827453613
    5. '  ' → logprob: -15.007702827453613
    6. '```' → logprob: -16.945201873779297
    7. '`' → logprob: -17.570201873779297
    8. ''' → logprob: -17.945201873779297
    9. ' ' → logprob: -18.007701873779297
    10. '3' → logprob: -18.320201873779297

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028323998674750328
    2. ':
' → logprob: -3.6533238887786865
    3. '       ' → logprob: -6.278324127197266
    4. ' :' → logprob: -9.778324127197266
    5. '   ' → logprob: -10.153324127197266
    6. '):' → logprob: -10.903324127197266
    7. '):
' → logprob: -11.528324127197266
    8. ' :
' → logprob: -11.778324127197266
    9. ':

' → logprob: -12.028324127197266
    10. '```' → logprob: -12.903324127197266

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022594700567424297
    2. '   ' → logprob: -8.625226020812988
    3. 'print' → logprob: -11.125226020812988
    4. '```' → logprob: -11.250226020812988
    5. '     ' → logprob: -12.125226020812988
    6. '      ' → logprob: -13.125226020812988
    7. ':' → logprob: -13.250226020812988
    8. ':
' → logprob: -13.375226020812988
    9. '           ' → logprob: -13.375226020812988
    10. '
' → logprob: -13.500226020812988

Token 84: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02281199023127556
    2. ' print' → logprob: -4.2728118896484375
    3. '       ' → logprob: -4.7728118896484375
    4. '           ' → logprob: -9.397811889648438
    5. '   ' → logprob: -10.397811889648438
    6. '```' → logprob: -10.647811889648438
    7. ' ' → logprob: -12.147811889648438
    8. '`' → logprob: -12.897811889648438
    9. '	print' → logprob: -12.897811889648438
    10. '.print' → logprob: -13.397811889648438

Token 85: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00044353955308906734
    2. '(' → logprob: -7.750443458557129
    3. '('(' → logprob: -12.125443458557129
    4. ' ('' → logprob: -12.375443458557129
    5. ''' → logprob: -13.500443458557129
    6. '("' → logprob: -13.625443458557129
    7. ''(' → logprob: -15.750443458557129
    8. '(('' → logprob: -15.875443458557129
    9. ' ' → logprob: -17.000444412231445
    10. ' (' → logprob: -17.125444412231445

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. ''' → logprob: -18.5
    4. '۲' → logprob: -19.625
    5. '２' → logprob: -20.625
    6. '"' → logprob: -21.5
    7. '২' → logprob: -21.875
    8. '```' → logprob: -22.0
    9. '२' → logprob: -22.125
    10. '٢' → logprob: -22.375

Token 87: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3762710392475128
    2. '')
' → logprob: -1.6262710094451904
    3. ')' → logprob: -2.6262710094451904
    4. '   ' → logprob: -3.5012710094451904
    5. ')
' → logprob: -4.2512712478637695
    6. '       ' → logprob: -9.25127124786377
    7. ''' → logprob: -10.87627124786377
    8. '```' → logprob: -11.12627124786377
    9. ')')
' → logprob: -11.12627124786377
    10. ' ')
' → logprob: -12.50127124786377

Token 88: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.13682891428470612
    2. '   ' → logprob: -2.136828899383545
    3. ' elif' → logprob: -4.636828899383545
    4. '	elif' → logprob: -9.511829376220703
    5. 'else' → logprob: -9.511829376220703
    6. ' ' → logprob: -12.511829376220703
    7. 'el' → logprob: -12.886829376220703
    8. '  ' → logprob: -12.886829376220703
    9. '```' → logprob: -13.261829376220703
    10. ' else' → logprob: -13.386829376220703

Token 89: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0007443527574650943
    2. ' elif' → logprob: -7.250744342803955
    3. '   ' → logprob: -10.500744819641113
    4. '	elif' → logprob: -12.000744819641113
    5. 'el' → logprob: -15.125744819641113
    6. 'else' → logprob: -15.375744819641113
    7. 'elseif' → logprob: -17.000743865966797
    8. ' ' → logprob: -17.000743865966797
    9. '    
' → logprob: -17.125743865966797
    10. 'eli' → logprob: -17.625743865966797

Token 90: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.014169503934681416
    2. 'b' → logprob: -4.264169692993164
    3. ' ' → logprob: -12.139169692993164
    4. ' ' → logprob: -15.139169692993164
    5. '    ' → logprob: -16.264169692993164
    6. '`' → logprob: -16.264169692993164
    7. ''' → logprob: -17.389169692993164
    8. '2' → logprob: -17.764169692993164
    9. ' `' → logprob: -17.889169692993164
    10. '	b' → logprob: -18.014169692993164

Token 91: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01611730270087719
    2. '==' → logprob: -4.141117095947266
    3. ' =' → logprob: -10.266117095947266
    4. '=' → logprob: -10.891117095947266
    5. ' ' → logprob: -11.016117095947266
    6. ')' → logprob: -12.266117095947266
    7. '`' → logprob: -12.391117095947266
    8. '<|end|>' → logprob: -14.516117095947266
    9. ' ===' → logprob: -14.766117095947266
    10. ' ' → logprob: -14.891117095947266

Token 92: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2254183143377304
    2. ' ' → logprob: -1.6004183292388916
    3. '  ' → logprob: -12.600418090820312
    4. ' ' → logprob: -14.225418090820312
    5. '```' → logprob: -14.725418090820312
    6. '   ' → logprob: -14.975418090820312
    7. '<|end|>' → logprob: -15.600418090820312
    8. '`' → logprob: -15.600418090820312
    9. ''' → logprob: -15.850418090820312
    10. '۲' → logprob: -16.100418090820312

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '3' → logprob: -16.625024795532227
    4. '۲' → logprob: -17.125024795532227
    5. '```' → logprob: -17.500024795532227
    6. '   ' → logprob: -17.875024795532227
    7. '２' → logprob: -18.125024795532227
    8. '  ' → logprob: -18.312524795532227
    9. '২' → logprob: -18.937524795532227
    10. '1' → logprob: -19.000024795532227

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1432812660932541
    2. ':
' → logprob: -2.1432812213897705
    3. '       ' → logprob: -4.14328145980835
    4. '   ' → logprob: -9.143280982971191
    5. 'print' → logprob: -9.643280982971191
    6. '':' → logprob: -9.643280982971191
    7. '):
' → logprob: -10.143280982971191
    8. '):' → logprob: -10.518280982971191
    9. ' :' → logprob: -11.518280982971191
    10. '```' → logprob: -11.518280982971191

Token 95: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.031801626086235046
    2. '       ' → logprob: -3.531801700592041
    3. ' print' → logprob: -6.281801700592041
    4. '   ' → logprob: -9.031801223754883
    5. '           ' → logprob: -10.531801223754883
    6. '	print' → logprob: -11.031801223754883
    7. '```' → logprob: -11.156801223754883
    8. '`' → logprob: -14.656801223754883
    9. '     ' → logprob: -15.156801223754883
    10. ' ' → logprob: -15.281801223754883

Token 96: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011708177626132965
    2. ' print' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.126171112060547
    4. '       ' → logprob: -15.751171112060547
    5. '	print' → logprob: -16.126171112060547
    6. '```' → logprob: -17.001171112060547
    7. ' ' → logprob: -18.251171112060547
    8. '           ' → logprob: -18.376171112060547
    9. '.print' → logprob: -19.001171112060547
    10. ''' → logprob: -19.251171112060547

Token 97: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.3120038501219824e-05
    2. '('(' → logprob: -10.250053405761719
    3. '(' → logprob: -11.125053405761719
    4. ''' → logprob: -13.125053405761719
    5. '("' → logprob: -14.500053405761719
    6. ' ('' → logprob: -15.375053405761719
    7. ''(' → logprob: -15.750053405761719
    8. '("("' → logprob: -17.25005340576172
    9. '('.')' → logprob: -17.62505340576172
    10. '(',' → logprob: -18.00005340576172

Token 98: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05687187612056732
    2. '3' → logprob: -3.0568718910217285
    3. '1' → logprob: -4.8068718910217285
    4. ' '' → logprob: -9.80687141418457
    5. ' ' → logprob: -11.30687141418457
    6. '('' → logprob: -11.93187141418457
    7. 'print' → logprob: -13.80687141418457
    8. '"' → logprob: -13.93187141418457
    9. '`' → logprob: -14.80687141418457
    10. '   ' → logprob: -15.43187141418457

Token 99: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005395849701017141
    2. ')' → logprob: -5.255395889282227
    3. '')
' → logprob: -8.755395889282227
    4. ''' → logprob: -12.630395889282227
    5. ')
' → logprob: -14.505395889282227
    6. '   ' → logprob: -15.505395889282227
    7. '('' → logprob: -16.130395889282227
    8. '')

' → logprob: -16.255395889282227
    9. '")' → logprob: -16.505395889282227
    10. ''))' → logprob: -16.630395889282227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 51.55%
Précision adaptée (1ère position): 58.76%
Précision (top 10): 94.85%
================================================================================
