================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from collections import Counter
import numpy as np

def read_input():
    return stdin.readline()

def parse_first_line(line):
    return [int(x) for x in line.split()]

def parse_array_line(line):
    return [int(a) for a in line.split()]

def to_numpy_array(lst):
    return np.array(lst, dtype=np.int64)

def prepend_zero(arr):
    return np.hstack([0, arr])

def mod_array(arr, mod):
    return arr % mod

def cumulative_sum(arr):
    return arr.cumsum()

def compute_cum_remainders(A, M):
    arr_with_zero = prepend_zero(A)
    arr_mod = mod_array(arr_with_zero, M)
    cumsum_arr = cumulative_sum(arr_mod)
    return mod_array(cumsum_arr, M)

def count_remainders(arr):
    return Counter(arr)

def calculate_combinations_from_counts(counts):
    total = 0
    for count in counts.values():
        total += count * (count - 1) // 2
    return total

def main():
    first_line = read_input()
    N, M = parse_first_line(first_line)
    array_line = read_input()
    A_raw = parse_array_line(array_line)
    A = to_numpy_array(A_raw)
    cum_remainders = compute_cum_remainders(A, M)
    remainder_counts = count_remainders(cum_remainders)
    combinations = calculate_combinations_from_counts(remainder_counts)
    print(combinations)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.05142802372574806
    2. ' argv' → logprob: -3.4264280796051025
    3. 'exit' → logprob: -4.176427841186523
    4. ' exit' → logprob: -6.801427841186523
    5. 'stdout' → logprob: -7.301427841186523
    6. 'stdin' → logprob: -8.426427841186523
    7. 'path' → logprob: -8.801427841186523
    8. 'import' → logprob: -10.176427841186523
    9. 'stderr' → logprob: -10.426427841186523
    10. 'version' → logprob: -10.676427841186523

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06320580840110779
    2. '.readline' → logprob: -3.5632057189941406
    3. 'for' → logprob: -4.563205718994141
    4. '\n' → logprob: -4.688205718994141
    5. '
' → logprob: -5.938205718994141
    6. 'import' → logprob: -5.938205718994141
    7. 'print' → logprob: -6.188205718994141
    8. '.read' → logprob: -6.688205718994141
    9. '```' → logprob: -7.313205718994141
    10. ',' → logprob: -7.313205718994141

Token 6: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03390835225582123
    2. ' sys' → logprob: -3.7839083671569824
    3. ' io' → logprob: -4.783908367156982
    4. ' math' → logprob: -7.283908367156982
    5. ' typing' → logprob: -7.658908367156982
    6. 'os' → logprob: -7.908908367156982
    7. ' stdout' → logprob: -9.033907890319824
    8. ' itertools' → logprob: -9.033907890319824
    9. ' subprocess' → logprob: -9.283907890319824
    10. ' space' → logprob: -9.408907890319824

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.475628525018692
    2. 'import' → logprob: -0.9756284952163696
    3. '```' → logprob: -7.35062837600708
    4. ' defaultdict' → logprob: -7.72562837600708
    5. ' ' → logprob: -8.600628852844238
    6. '<|end|>' → logprob: -9.475628852844238
    7. '.' → logprob: -10.100628852844238
    8. 'abc' → logprob: -10.975628852844238
    9. '.Counter' → logprob: -10.975628852844238
    10. ' ' → logprob: -11.100628852844238

Token 8: ' Counter' (ID: 32251)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.3009956479072571
    2. 'deque' → logprob: -1.9259955883026123
    3. ' defaultdict' → logprob: -2.1759955883026123
    4. ' abc' → logprob: -7.800995826721191
    5. 'default' → logprob: -8.800995826721191
    6. 'abc' → logprob: -9.675995826721191
    7. ' named' → logprob: -10.425995826721191
    8. ' Counter' → logprob: -11.425995826721191
    9. 'named' → logprob: -11.550995826721191
    10. 'de' → logprob: -11.800995826721191

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10443511605262756
    2. '
' → logprob: -3.1044352054595947
    3. '\' → logprob: -3.8544352054595947
    4. 'newline' → logprob: -4.729434967041016
    5. '```' → logprob: -4.854434967041016
    6. 'import' → logprob: -4.854434967041016
    7. 'for' → logprob: -5.729434967041016
    8. '

' → logprob: -6.854434967041016
    9. '  
' → logprob: -7.354434967041016
    10. '' → logprob: -7.479434967041016

Token 10: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4045424461364746
    2. 'data' → logprob: -2.4045424461364746
    3. '\' → logprob: -2.5295424461364746
    4. 'for' → logprob: -3.4045424461364746
    5. '
' → logprob: -3.4045424461364746
    6. 'n' → logprob: -3.9045424461364746
    7. 'newline' → logprob: -4.279542446136475
    8. '```' → logprob: -4.279542446136475
    9. '`' → logprob: -4.404542446136475
    10. 'import' → logprob: -5.154542446136475

Token 11: ' numpy' (ID: 19529)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005504930857568979
    2. ' itertools' → logprob: -5.630505084991455
    3. ' collections' → logprob: -7.505505084991455
    4. ' os' → logprob: -7.505505084991455
    5. ' math' → logprob: -7.755505084991455
    6. ' re' → logprob: -8.630504608154297
    7. ' ' → logprob: -9.130504608154297
    8. ' json' → logprob: -10.005504608154297
    9. ' string' → logprob: -11.005504608154297
    10. ' functools' → logprob: -12.255504608154297

Token 12: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013334346003830433
    2. ' as' → logprob: -4.763334274291992
    3. 'as' → logprob: -6.513334274291992
    4. '.
' → logprob: -6.888334274291992
    5. '
' → logprob: -7.888334274291992
    6. '\' → logprob: -8.138334274291992
    7. 'newline' → logprob: -8.138334274291992
    8. 'import' → logprob: -8.263334274291992
    9. '\n' → logprob: -8.513334274291992
    10. '[' → logprob: -9.013334274291992

Token 13: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0003478593716863543
    2. 'np' → logprob: -8.000348091125488
    3. ' numpy' → logprob: -12.375348091125488
    4. ' ' → logprob: -12.750348091125488
    5. ' ' → logprob: -13.250348091125488
    6. ''' → logprob: -14.000348091125488
    7. ' ndarray' → logprob: -14.000348091125488
    8. ' array' → logprob: -14.625348091125488
    9. '"' → logprob: -14.750348091125488
    10. ' None' → logprob: -15.875348091125488

Token 14: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3739933371543884
    2. '
' → logprob: -1.4989933967590332
    3. 'newline' → logprob: -3.748993396759033
    4. '

' → logprob: -3.998993396759033
    5. 'n' → logprob: -4.248993396759033
    6. '\' → logprob: -4.623993396759033
    7. '```' → logprob: -5.123993396759033
    8. '' → logprob: -5.873993396759033
    9. '[' → logprob: -6.123993396759033
    10. '
' → logprob: -6.123993396759033

Token 15: 'def' (ID: 1314)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7772567272186279
    2. 'd' → logprob: -1.777256727218628
    3. 'a' → logprob: -2.027256727218628
    4. 'def' → logprob: -2.402256727218628
    5. 'n' → logprob: -2.777256727218628
    6. '#' → logprob: -4.527256965637207
    7. '`' → logprob: -4.527256965637207
    8. '\' → logprob: -4.527256965637207
    9. 'x' → logprob: -4.527256965637207
    10. '.' → logprob: -5.152256965637207

Token 16: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0037207419518381357
    2. ' process' → logprob: -7.003720760345459
    3. ' space' → logprob: -7.503720760345459
    4. ' calculate' → logprob: -7.628720760345459
    5. ' read' → logprob: -8.1287202835083
    6. ' predict' → logprob: -8.3787202835083
    7. ' main' → logprob: -8.7537202835083
    8. ' compute' → logprob: -9.6287202835083
    9. ' ```' → logprob: -9.6287202835083
    10. ' factorial' → logprob: -9.7537202835083

Token 17: '_input' (ID: 12507)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.6065343618392944
    2. '_' → logprob: -0.8565343618392944
    3. '(' → logprob: -3.856534481048584
    4. '_input' → logprob: -5.606534481048584
    5. '_data' → logprob: -6.606534481048584
    6. '_word' → logprob: -6.606534481048584
    7. '():' → logprob: -7.231534481048584
    8. '_token' → logprob: -7.481534481048584
    9. '_lines' → logprob: -8.606534004211426
    10. '(line' → logprob: -8.981534004211426

Token 18: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16090363264083862
    2. '(' → logprob: -1.9109036922454834
    3. ' ():' → logprob: -8.410903930664062
    4. '()' → logprob: -8.535903930664062
    5. '(:' → logprob: -9.160903930664062
    6. '(":' → logprob: -11.160903930664062
    7. '(line' → logprob: -11.285903930664062
    8. '_' → logprob: -11.410903930664062
    9. ' (' → logprob: -11.410903930664062
    10. '("("' → logprob: -11.535903930664062

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023444274440407753
    2. '<|end|>' → logprob: -4.898444175720215
    3. '\n' → logprob: -5.273444175720215
    4. '\' → logprob: -5.898444175720215
    5. '    
' → logprob: -6.398444175720215
    6. '()' → logprob: -6.523444175720215
    7. '    ' → logprob: -6.773444175720215
    8. '<|end|>' → logprob: -7.773444175720215
    9. ')' → logprob: -7.898444175720215
    10. ' return' → logprob: -7.898444175720215

Token 20: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3396158218383789
    2. 'return' (adapté à ' return') → logprob: -2.589615821838379
    3. ' line' → logprob: -2.589615821838379
    4. 'data' → logprob: -2.714615821838379
    5. ' return' → logprob: -3.214615821838379
    6. 'line' → logprob: -4.339615821838379
    7. ' data' → logprob: -4.339615821838379
    8. ' lines' → logprob: -5.714615821838379
    9. ' ' → logprob: -7.214615821838379
    10. 'input' → logprob: -8.714615821838379

Token 21: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.297942191362381
    2. 'stdin' → logprob: -1.5479421615600586
    3. 'list' → logprob: -4.047942161560059
    4. ' list' → logprob: -4.172942161560059
    5. '(stdin' → logprob: -4.922942161560059
    6. '[' → logprob: -5.672942161560059
    7. ' [' → logprob: -7.172942161560059
    8. '.stdin' → logprob: -7.922942161560059
    9. ' ' → logprob: -9.047942161560059
    10. '[int' → logprob: -10.297942161560059

Token 22: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.09051578491926193
    2. '.read' → logprob: -2.5905158519744873
    3. '.' → logprob: -4.590515613555908
    4. '.readlines' → logprob: -6.715515613555908
    5. '().' → logprob: -8.715516090393066
    6. 'read' → logprob: -10.715516090393066
    7. '.write' → logprob: -13.090516090393066
    8. ').' → logprob: -13.215516090393066
    9. ' readline' → logprob: -13.215516090393066
    10. '.Read' → logprob: -13.465516090393066

Token 23: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007842566701583564
    2. '().' → logprob: -7.375784397125244
    3. '(' → logprob: -9.125783920288086
    4. '()
' → logprob: -10.750783920288086
    5. '()

' → logprob: -11.875783920288086
    6. '()(' → logprob: -11.875783920288086
    7. ' ()' → logprob: -12.375783920288086
    8. '())' → logprob: -12.750783920288086
    9. '()\' → logprob: -13.375783920288086
    10. ')' → logprob: -13.750783920288086

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004044683184474707
    2. '\' → logprob: -6.879044532775879
    3. 'd' → logprob: -7.129044532775879
    4. 'data' → logprob: -7.379044532775879
    5. 'x' → logprob: -7.379044532775879
    6. '#' → logprob: -8.754044532775879
    7. 'n' → logprob: -9.129044532775879
    8. 'a' → logprob: -9.504044532775879
    9. '
' → logprob: -9.504044532775879
    10. '```' → logprob: -9.629044532775879

Token 25: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.22455351054668427
    2. ' calculate' → logprob: -2.4745535850524902
    3. ' process' → logprob: -3.4745535850524902
    4. ' ' → logprob: -3.7245535850524902
    5. ' compute' → logprob: -4.72455358505249
    6. ' get' → logprob: -4.84955358505249
    7. '_' → logprob: -5.09955358505249
    8. ' _' → logprob: -5.22455358505249
    9. ' analyze' → logprob: -5.22455358505249
    10. ' count' → logprob: -5.34955358505249

Token 26: '_first' (ID: 29347)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.6253945827484131
    2. '_line' → logprob: -1.250394582748413
    3. '(' → logprob: -2.125394582748413
    4. '_' → logprob: -3.250394582748413
    5. '(line' → logprob: -4.500394821166992
    6. '_data' → logprob: -5.875394821166992
    7. '()' → logprob: -6.375394821166992
    8. '(input' → logprob: -7.000394821166992
    9. 'input' → logprob: -7.750394821166992
    10. '_code' → logprob: -7.875394821166992

Token 27: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0006746663711965084
    2. '_' → logprob: -7.750674724578857
    3. '_token' → logprob: -8.3756742477417
    4. '_input' → logprob: -12.3756742477417
    5. 'line' → logprob: -12.7506742477417
    6. '_word' → logprob: -13.3756742477417
    7. '()' → logprob: -14.5006742477417
    8. '_value' → logprob: -14.6256742477417
    9. '_element' → logprob: -14.6256742477417
    10. '_key' → logprob: -14.8756742477417

Token 28: '(line' (ID: 18178)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013335748808458447
    2. '()' → logprob: -6.751333713531494
    3. '(' → logprob: -9.251333236694336
    4. ' ():' → logprob: -9.876333236694336
    5. '():
' → logprob: -12.376333236694336
    6. '):' → logprob: -12.876333236694336
    7. ' ()' → logprob: -13.376333236694336
    8. ':' → logprob: -13.626333236694336
    9. '(line' → logprob: -13.751333236694336
    10. '()>' → logprob: -14.376333236694336

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000586991140153259
    2. ' ):' → logprob: -8.375587463378906
    3. ')' → logprob: -8.500587463378906
    4. '):
' → logprob: -9.000587463378906
    5. ':' → logprob: -11.125587463378906
    6. '   ' → logprob: -12.375587463378906
    7. '):
' → logprob: -12.500587463378906
    8. ',' → logprob: -13.000587463378906
    9. ':str' → logprob: -13.500587463378906
    10. ' ' → logprob: -14.250587463378906

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03837595507502556
    2. ' return' → logprob: -3.4133758544921875
    3. ' line' → logprob: -6.0383758544921875
    4. ' tokens' → logprob: -6.9133758544921875
    5. 'return' → logprob: -7.1633758544921875
    6. 'tokens' → logprob: -8.163375854492188
    7. ' parts' → logprob: -9.413375854492188
    8. '    ' → logprob: -9.538375854492188
    9. 'line' → logprob: -9.663375854492188
    10. '    
' → logprob: -11.288375854492188

Token 31: ' return' (ID: 622)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.11936314404010773
    2. 'line' → logprob: -2.6193630695343018
    3. ' list' → logprob: -4.369363307952881
    4. ' map' → logprob: -4.744363307952881
    5. ' return' → logprob: -5.119363307952881
    6. '   ' → logprob: -5.369363307952881
    7. 'list' → logprob: -5.744363307952881
    8. 'return' (adapté à ' return') → logprob: -6.494363307952881
    9. 'map' → logprob: -6.744363307952881
    10. 'int' → logprob: -7.494363307952881

Token 32: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12147174775600433
    2. ' tuple' → logprob: -2.621471643447876
    3. ' line' → logprob: -3.996471643447876
    4. 'list' → logprob: -4.621471881866455
    5. ' map' → logprob: -5.371471881866455
    6. ' [' → logprob: -5.621471881866455
    7. '[' → logprob: -6.496471881866455
    8. 'tuple' → logprob: -6.871471881866455
    9. '[line' → logprob: -7.121471881866455
    10. ' int' → logprob: -7.496471881866455

Token 33: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00030185774085111916
    2. ' int' → logprob: -8.1253023147583
    3. '   ' → logprob: -13.0003023147583
    4. '(int' → logprob: -13.6253023147583
    5. 'float' → logprob: -14.1253023147583
    6. '*' → logprob: -14.3753023147583
    7. ']int' → logprob: -14.5003023147583
    8. '```' → logprob: -16.000301361083984
    9. '[int' → logprob: -16.500301361083984
    10. '	int' → logprob: -16.750301361083984

Token 34: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04664779081940651
    2. '(' → logprob: -3.921647787094116
    3. '(token' → logprob: -4.171648025512695
    4. '(i' → logprob: -4.671648025512695
    5. '(s' → logprob: -7.546648025512695
    6. 'token' → logprob: -8.296648025512695
    7. '(char' → logprob: -10.046648025512695
    8. '(word' → logprob: -10.171648025512695
    9. '(tok' → logprob: -10.546648025512695
    10. 'x' → logprob: -10.546648025512695

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07949838787317276
    2. '(x' → logprob: -3.079498291015625
    3. '(line' → logprob: -4.204498291015625
    4. ' for' → logprob: -4.954498291015625
    5. 'for' → logprob: -5.079498291015625
    6. '(' → logprob: -6.454498291015625
    7. ' )' → logprob: -8.079498291015625
    8. '(token' → logprob: -9.579498291015625
    9. '())' → logprob: -10.204498291015625
    10. '()' → logprob: -10.204498291015625

Token 36: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.839530348777771
    2. '(line' → logprob: -1.339530348777771
    3. '(x' → logprob: -1.589530348777771
    4. ' for' → logprob: -2.4645304679870605
    5. ')' → logprob: -4.3395304679870605
    6. '(' → logprob: -5.7145304679870605
    7. '(token' → logprob: -8.589529991149902
    8. 'line' → logprob: -9.464529991149902
    9. 'x' → logprob: -9.714529991149902
    10. ' line' → logprob: -9.714529991149902

Token 37: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28188395500183105
    2. 'x' → logprob: -1.406883955001831
    3. ' line' → logprob: -7.78188419342041
    4. ' ' → logprob: -9.15688419342041
    5. '(x' → logprob: -9.40688419342041
    6. '	x' → logprob: -9.90688419342041
    7. '<|end|>' → logprob: -10.78188419342041
    8. '_' → logprob: -10.90688419342041
    9. '<|end|>' → logprob: -11.03188419342041
    10. 'line' → logprob: -11.28188419342041

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10057638585567474
    2. 'in' → logprob: -2.350576400756836
    3. ' ' → logprob: -8.975576400756836
    4. ' line' → logprob: -8.975576400756836
    5. 'line' → logprob: -9.600576400756836
    6. '	in' → logprob: -11.100576400756836
    7. ' i' → logprob: -12.600576400756836
    8. '<|end|>' → logprob: -12.600576400756836
    9. '	line' → logprob: -12.600576400756836
    10. '  ' → logprob: -12.975576400756836

Token 39: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.061968810856342316
    2. 'line' → logprob: -2.8119688034057617
    3. '	line' → logprob: -14.186968803405762
    4. '(line' → logprob: -15.061968803405762
    5. '=line' → logprob: -16.561969757080078
    6. '#line' → logprob: -16.811969757080078
    7. '[line' → logprob: -17.811969757080078
    8. '_line' → logprob: -18.936969757080078
    9. ' ligne' → logprob: -19.186969757080078
    10. ' ' → logprob: -19.186969757080078

Token 40: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.5057000517845154
    2. '.strip' → logprob: -1.0057001113891602
    3. '.' → logprob: -3.50570011138916
    4. 'split' → logprob: -7.50570011138916
    5. '.rstrip' → logprob: -7.75570011138916
    6. ')' → logprob: -10.38070011138916
    7. ' .' → logprob: -10.50570011138916
    8. 'strip' → logprob: -11.13070011138916
    9. ']' → logprob: -11.13070011138916
    10. ' split' → logprob: -11.25570011138916

Token 41: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.6237296462059021
    2. '('' → logprob: -0.8737296462059021
    3. '(' → logprob: -3.123729705810547
    4. '()' → logprob: -5.998729705810547
    5. '())' → logprob: -9.248729705810547
    6. '("' → logprob: -10.248729705810547
    7. '("("' → logprob: -10.748729705810547
    8. ']' → logprob: -11.623729705810547
    9. '(',' → logprob: -11.623729705810547
    10. '(','' → logprob: -12.748729705810547

Token 42: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005866459105163813
    2. ')]' → logprob: -5.630866527557373
    3. '()]' → logprob: -6.130866527557373
    4. '])' → logprob: -10.130866050720215
    5. ')' → logprob: -10.755866050720215
    6. ' ]' → logprob: -11.255866050720215
    7. ']()' → logprob: -11.880866050720215
    8. '   ' → logprob: -12.880866050720215
    9. '(' → logprob: -13.505866050720215
    10. ']
' → logprob: -13.880866050720215

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06527775526046753
    2. 'd' → logprob: -3.5652778148651123
    3. '
' → logprob: -4.065277576446533
    4. '\' → logprob: -4.690277576446533
    5. '#' → logprob: -6.065277576446533
    6. 'n' → logprob: -6.190277576446533
    7. '```' → logprob: -6.315277576446533
    8. 'a' → logprob: -7.815277576446533
    9. '\n' → logprob: -7.815277576446533
    10. '[' → logprob: -8.315278053283691

Token 44: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.0594407357275486
    2. ' read' → logprob: -3.934440851211548
    3. ' count' → logprob: -4.559440612792969
    4. ' calculate' → logprob: -4.684440612792969
    5. ' main' → logprob: -5.184440612792969
    6. ' process' → logprob: -5.309440612792969
    7. ' compute' → logprob: -5.684440612792969
    8. 'parse' → logprob: -7.309440612792969
    9. ' counter' → logprob: -7.309440612792969
    10. ' build' → logprob: -7.434440612792969

Token 45: '_array' (ID: 8766)
  Prédit: '_second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.003962516784667969
    2. '_line' → logprob: -6.378962516784668
    3. '_' → logprob: -7.128962516784668
    4. '_array' → logprob: -7.753962516784668
    5. '_input' → logprob: -8.253962516784668
    6. '_list' → logprob: -8.253962516784668
    7. '_data' → logprob: -9.128962516784668
    8. '_first' → logprob: -9.878962516784668
    9. '_other' → logprob: -10.253962516784668
    10. '_last' → logprob: -10.503962516784668

Token 46: '_line' (ID: 14418)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.026531103998422623
    2. '(' → logprob: -3.651531219482422
    3. '_line' → logprob: -8.776531219482422
    4. '(row' → logprob: -10.901531219482422
    5. '(lines' → logprob: -11.651531219482422
    6. '_(' → logprob: -11.651531219482422
    7. '[line' → logprob: -12.026531219482422
    8. '#line' → logprob: -12.401531219482422
    9. '_' → logprob: -12.651531219482422
    10. '_list' → logprob: -12.776531219482422

Token 47: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.007626388221979141
    2. '(' → logprob: -4.882626533508301
    3. ' (' → logprob: -11.1326265335083
    4. '(lines' → logprob: -13.0076265335083
    5. '(row' → logprob: -14.0076265335083
    6. '(l' → logprob: -14.8826265335083
    7. '(x' → logprob: -14.8826265335083
    8. '=line' → logprob: -15.0076265335083
    9. '(layer' → logprob: -15.0076265335083
    10. '[line' → logprob: -15.1326265335083

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018542143516242504
    2. ' ):' → logprob: -9.125185012817383
    3. ')' → logprob: -10.250185012817383
    4. '):
' → logprob: -10.375185012817383
    5. '   ' → logprob: -12.250185012817383
    6. ':' → logprob: -13.750185012817383
    7. '[]):' → logprob: -14.000185012817383
    8. '():' → logprob: -14.125185012817383
    9. '):
' → logprob: -14.750185012817383
    10. ',' → logprob: -15.000185012817383

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00044663884909823537
    2. 'return' → logprob: -8.250446319580078
    3. ' return' → logprob: -8.625446319580078
    4. '	return' → logprob: -13.375446319580078
    5. '[' → logprob: -13.500446319580078
    6. '   ' → logprob: -14.125446319580078
    7. '  ' → logprob: -14.625446319580078
    8. ')' → logprob: -14.875446319580078
    9. '[int' → logprob: -14.875446319580078
    10. '    ' → logprob: -15.500446319580078

Token 50: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4417594075202942
    2. ' return' → logprob: -1.4417593479156494
    3. 'return' (adapté à ' return') → logprob: -2.6917593479156494
    4. ' [' → logprob: -3.3167593479156494
    5. '[int' → logprob: -4.5667595863342285
    6. '[' → logprob: -5.1917595863342285
    7. '[np' → logprob: -7.9417595863342285
    8. ' ' → logprob: -9.81675910949707
    9. '[array' → logprob: -10.81675910949707
    10. '	return' → logprob: -10.81675910949707

Token 51: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6081449389457703
    2. '[int' → logprob: -0.9831449389457703
    3. '[np' → logprob: -2.858144998550415
    4. '[list' → logprob: -4.358144760131836
    5. '[' → logprob: -4.983144760131836
    6. '[x' → logprob: -5.983144760131836
    7. '[line' → logprob: -7.983144760131836
    8. ' np' → logprob: -7.983144760131836
    9. '[array' → logprob: -8.108144760131836
    10. ' list' → logprob: -8.608144760131836

Token 52: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003900391166098416
    2. 'float' → logprob: -7.87539005279541
    3. ' int' → logprob: -12.37539005279541
    4. 'np' → logprob: -13.00039005279541
    5. '(int' → logprob: -13.75039005279541
    6. '[int' → logprob: -14.00039005279541
    7. ']int' → logprob: -14.75039005279541
    8. '<int' → logprob: -15.62539005279541
    9. '	int' → logprob: -16.250389099121094
    10. 'map' → logprob: -16.500389099121094

Token 53: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014165272004902363
    2. '(' → logprob: -4.26416540145874
    3. ' (' → logprob: -14.764164924621582
    4. '(i' → logprob: -14.889164924621582
    5. '(s' → logprob: -15.264164924621582
    6. 's' → logprob: -15.639164924621582
    7. '(
' → logprob: -16.0141658782959
    8. ')' → logprob: -16.2641658782959
    9. ']' → logprob: -16.6391658782959
    10. '(

' → logprob: -16.8891658782959

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001272973488084972
    2. '(x' → logprob: -7.126273155212402
    3. ')x' → logprob: -8.626273155212402
    4. 'x' → logprob: -8.751273155212402
    5. 'a' → logprob: -9.626273155212402
    6. '(' → logprob: -11.501273155212402
    7. ')i' → logprob: -11.501273155212402
    8. 'i' → logprob: -11.626273155212402
    9. ' )' → logprob: -11.876273155212402
    10. ')a' → logprob: -12.126273155212402

Token 55: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3089922070503235
    2. 'for' → logprob: -2.0589921474456787
    3. ' for' → logprob: -2.3089921474456787
    4. '(x' → logprob: -3.4339921474456787
    5. 'x' → logprob: -5.558992385864258
    6. ' ' → logprob: -6.933992385864258
    7. 'i' → logprob: -7.683992385864258
    8. 'in' → logprob: -8.058992385864258
    9. ' in' → logprob: -8.183992385864258
    10. ' x' → logprob: -8.558992385864258

Token 56: ' a' (ID: 261)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3272757828235626
    2. ' a' → logprob: -1.3272757530212402
    3. 'a' → logprob: -4.70227575302124
    4. ' x' → logprob: -6.70227575302124
    5. 'line' → logprob: -7.07727575302124
    6. '(line' → logprob: -7.07727575302124
    7. '<|end|>' → logprob: -7.07727575302124
    8. ' ' → logprob: -7.82727575302124
    9. '<|end|>' → logprob: -7.95227575302124
    10. '_a' → logprob: -9.827276229858398

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03840991482138634
    2. 'in' → logprob: -3.288409948348999
    3. ' ' → logprob: -8.413410186767578
    4. 'line' → logprob: -10.038410186767578
    5. 'a' → logprob: -10.288410186767578
    6. ' line' → logprob: -10.913410186767578
    7. '_' → logprob: -11.288410186767578
    8. '=line' → logprob: -11.663410186767578
    9. '_in' → logprob: -12.163410186767578
    10. '	in' → logprob: -12.538410186767578

Token 58: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3132665753364563
    2. 'line' → logprob: -1.3132665157318115
    3. '(line' → logprob: -12.93826675415039
    4. '	line' → logprob: -13.31326675415039
    5. '=line' → logprob: -14.68826675415039
    6. '[line' → logprob: -15.56326675415039
    7. '#line' → logprob: -16.93826675415039
    8. '_line' → logprob: -16.93826675415039
    9. ' ' → logprob: -17.68826675415039
    10. ',line' → logprob: -17.68826675415039

Token 59: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.05124514177441597
    2. '.strip' → logprob: -3.0512452125549316
    3. '.' → logprob: -6.176245212554932
    4. ' .' → logprob: -8.051244735717773
    5. 'split' → logprob: -8.801244735717773
    6. '.rstrip' → logprob: -9.551244735717773
    7. ')' → logprob: -10.801244735717773
    8. '().' → logprob: -11.926244735717773
    9. ' split' → logprob: -13.301244735717773
    10. 'strip' → logprob: -13.551244735717773

Token 60: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00031615851912647486
    2. '()' → logprob: -9.250316619873047
    3. '())' → logprob: -9.500316619873047
    4. '(' → logprob: -9.500316619873047
    5. ']' → logprob: -10.125316619873047
    6. ')]' → logprob: -10.500316619873047
    7. ']()' → logprob: -14.250316619873047
    8. '()]
' → logprob: -14.750316619873047
    9. '()][' → logprob: -14.750316619873047
    10. '`]' → logprob: -14.875316619873047

Token 61: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16482670605182648
    2. ']' → logprob: -1.91482675075531
    3. ')]' → logprob: -5.4148268699646
    4. '<|end|>' → logprob: -9.664826393127441
    5. '']' → logprob: -10.664826393127441
    6. '])' → logprob: -11.289826393127441
    7. '}' → logprob: -11.414826393127441
    8. ' ]' → logprob: -12.164826393127441
    9. '）' → logprob: -12.164826393127441
    10. ')
' → logprob: -12.664826393127441

Token 62: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005923704709857702
    2. '
' → logprob: -5.505923748016357
    3. '\' → logprob: -6.755923748016357
    4. 'd' → logprob: -8.3809232711792
    5. '

' → logprob: -8.7559232711792
    6. '#' → logprob: -9.2559232711792
    7. '```' → logprob: -9.7559232711792
    8. '\n' → logprob: -9.8809232711792
    9. 'n' → logprob: -10.2559232711792
    10. 'ndef' → logprob: -11.5059232711792

Token 63: ' to' (ID: 316)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.2461206018924713
    2. ' calculate' → logprob: -2.7461206912994385
    3. ' find' → logprob: -3.1211206912994385
    4. ' compute' → logprob: -3.3711206912994385
    5. ' process' → logprob: -3.6211206912994385
    6. ' main' → logprob: -5.246120452880859
    7. ' solve' → logprob: -5.496120452880859
    8. ' counter' → logprob: -5.871120452880859
    9. ' max' → logprob: -5.996120452880859
    10. ' space' → logprob: -6.121120452880859

Token 64: '_numpy' (ID: 98421)
  Prédit: '_numpy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numpy' → logprob: -0.1353277713060379
    2. '_array' → logprob: -2.8853278160095215
    3. '_c' → logprob: -3.6353278160095215
    4. '_' → logprob: -3.7603278160095215
    5. '_np' → logprob: -4.7603278160095215
    6. '_n' → logprob: -5.2603278160095215
    7. '_list' → logprob: -5.7603278160095215
    8. 'array' → logprob: -7.7603278160095215
    9. '_numeric' → logprob: -8.010327339172363
    10. '_nd' → logprob: -8.135327339172363

Token 65: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.009478507563471794
    2. '(' → logprob: -5.384478569030762
    3. '_' → logprob: -5.759478569030762
    4. '(_' → logprob: -7.259478569030762
    5. '_vector' → logprob: -8.759478569030762
    6. 'array' → logprob: -8.884478569030762
    7. '_arrays' → logprob: -9.009478569030762
    8. '(array' → logprob: -9.384478569030762
    9. '```' → logprob: -9.634478569030762
    10. 'Array' → logprob: -9.884478569030762

Token 66: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5122182965278625
    2. '(line' → logprob: -1.1372182369232178
    3. '(lst' → logprob: -3.0122182369232178
    4. '(arr' → logprob: -4.637218475341797
    5. '(array' → logprob: -4.887218475341797
    6. '(ls' → logprob: -5.512218475341797
    7. '(l' → logprob: -6.012218475341797
    8. '(lines' → logprob: -6.262218475341797
    9. ' (' → logprob: -6.262218475341797
    10. '(list' → logprob: -7.137218475341797

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016300741583108902
    2. ')' → logprob: -4.141300678253174
    3. ' ):' → logprob: -9.016301155090332
    4. '):
' → logprob: -9.641301155090332
    5. ')]' → logprob: -10.266301155090332
    6. ' )' → logprob: -11.516301155090332
    7. '):
' → logprob: -12.016301155090332
    8. '(' → logprob: -12.391301155090332
    9. ']:' → logprob: -12.391301155090332
    10. ')=' → logprob: -12.391301155090332

Token 68: '   ' (ID: 271)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.8453416228294373
    2. ' np' → logprob: -1.095341682434082
    3. '(np' → logprob: -1.470341682434082
    4. '(' → logprob: -5.470341682434082
    5. '   ' → logprob: -7.345341682434082
    6. '=np' → logprob: -7.970341682434082
    7. ' return' → logprob: -7.970341682434082
    8. '[np' → logprob: -8.345341682434082
    9. ',np' → logprob: -8.720341682434082
    10. 'return' → logprob: -9.095341682434082

Token 69: ' return' (ID: 622)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.013147053308784962
    2. 'np' → logprob: -4.388146877288818
    3. ' return' → logprob: -7.388146877288818
    4. 'return' (adapté à ' return') → logprob: -11.263147354125977
    5. '   ' → logprob: -13.013147354125977
    6. ' numpy' → logprob: -13.263147354125977
    7. '(np' → logprob: -13.638147354125977
    8. '=np' → logprob: -15.388147354125977
    9. '[np' → logprob: -16.263147354125977
    10. ',np' → logprob: -16.263147354125977

Token 70: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0028086788952350616
    2. 'np' → logprob: -5.877808570861816
    3. ' numpy' → logprob: -13.377808570861816
    4. '(np' → logprob: -13.502808570861816
    5. ' ' → logprob: -14.377808570861816
    6. ' ' → logprob: -16.002809524536133
    7. ',np' → logprob: -16.627809524536133
    8. '=np' → logprob: -17.002809524536133
    9. 'numpy' → logprob: -17.627809524536133
    10. '_np' → logprob: -18.127809524536133

Token 71: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.004728684201836586
    2. '.asarray' → logprob: -5.7547287940979
    3. '.' → logprob: -6.7547287940979
    4. '.ndarray' → logprob: -7.8797287940979
    5. '.arr' → logprob: -13.254728317260742
    6. '.arange' → logprob: -13.379728317260742
    7. '.Array' → logprob: -14.004728317260742
    8. '.npy' → logprob: -14.504728317260742
    9. ' .' → logprob: -14.754728317260742
    10. '.numpy' → logprob: -14.879728317260742

Token 72: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.10035277903079987
    2. '(' → logprob: -2.3503527641296387
    3. '(ls' → logprob: -8.975353240966797
    4. '(ll' → logprob: -12.350353240966797
    5. '(list' → logprob: -12.850353240966797
    6. '(l' → logprob: -12.975353240966797
    7. '(lhs' → logprob: -12.975353240966797
    8. ' (' → logprob: -13.475353240966797
    9. '(lista' → logprob: -13.600353240966797
    10. '(
' → logprob: -13.850353240966797

Token 73: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5954712075181305e-05
    2. ',' → logprob: -10.625036239624023
    3. ' )' → logprob: -12.375036239624023
    4. '   ' → logprob: -13.000036239624023
    5. ']' → logprob: -13.625036239624023
    6. '))' → logprob: -14.500036239624023
    7. '[' → logprob: -14.625036239624023
    8. '),' → logprob: -14.625036239624023
    9. ')
' → logprob: -14.750036239624023
    10. ')]' → logprob: -15.000036239624023

Token 74: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.06228695809841156
    2. ' dtype' → logprob: -2.812286853790283
    3. 'int' → logprob: -8.312287330627441
    4. 'np' → logprob: -10.937287330627441
    5. ' int' → logprob: -10.937287330627441
    6. ' np' → logprob: -11.312287330627441
    7. ' ' → logprob: -11.937287330627441
    8. ')' → logprob: -12.062287330627441
    9. '  ' → logprob: -12.312287330627441
    10. 'd' → logprob: -12.937287330627441

Token 75: '=np' (ID: 40593)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07076876610517502
    2. '=int' → logprob: -3.0707688331604004
    3. '=np' → logprob: -3.8207688331604004
    4. '=
' → logprob: -11.445768356323242
    5. '=n' → logprob: -11.820768356323242
    6. '=torch' → logprob: -13.195768356323242
    7. '=i' → logprob: -13.445768356323242
    8. '=

' → logprob: -13.445768356323242
    9. ')=' → logprob: -13.820768356323242
    10. '=Integer' → logprob: -14.570768356323242

Token 76: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.2830537259578705
    2. '.' → logprob: -1.6580537557601929
    3. '.Int' → logprob: -3.4080536365509033
    4. '.INT' → logprob: -4.783053874969482
    5. '.i' → logprob: -5.408053874969482
    6. '.ndarray' → logprob: -5.533053874969482
    7. '.I' → logprob: -6.408053874969482
    8. 'int' → logprob: -6.533053874969482
    9. '.uint' → logprob: -6.908053874969482
    10. '.In' → logprob: -7.033053874969482

Token 77: '64' (ID: 2220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.011071049608290195
    2. '64' → logprob: -4.51107120513916
    3. '_' → logprob: -11.63607120513916
    4. '_)' → logprob: -11.63607120513916
    5. ')' → logprob: -12.51107120513916
    6. 'c' → logprob: -14.38607120513916
    7. 'p' → logprob: -14.51107120513916
    8. '3' → logprob: -15.01107120513916
    9. '6' → logprob: -15.13607120513916
    10. '_)
' → logprob: -16.261070251464844

Token 78: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -16.0
    4. '')' → logprob: -18.5
    5. '),' → logprob: -18.625
    6. '))' → logprob: -18.75
    7. ')`' → logprob: -19.0
    8. ')

' → logprob: -19.5
    9. ').' → logprob: -19.75
    10. '<|end|>' → logprob: -20.0

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07903750985860825
    2. 'd' → logprob: -3.2040374279022217
    3. '
' → logprob: -3.8290374279022217
    4. '\' → logprob: -5.079037666320801
    5. 'n' → logprob: -5.579037666320801
    6. '

' → logprob: -6.954037666320801
    7. '#' → logprob: -7.079037666320801
    8. '```' → logprob: -7.329037666320801
    9. '\n' → logprob: -7.454037666320801
    10. '<|end|>' → logprob: -8.9540376663208

Token 80: ' prepend' (ID: 176253)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.6384851932525635
    2. ' compute' → logprob: -1.6384851932525635
    3. ' find' → logprob: -1.8884851932525635
    4. ' _' → logprob: -1.8884851932525635
    5. ' convert' → logprob: -3.1384851932525635
    6. ' process' → logprob: -3.3884851932525635
    7. ' space' → logprob: -3.6384851932525635
    8. ' ' → logprob: -3.8884851932525635
    9. '_' → logprob: -3.8884851932525635
    10. ' analyze' → logprob: -4.013484954833984

Token 81: '_zero' (ID: 53468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009020347148180008
    2. '_array' → logprob: -5.8840203285217285
    3. '(' → logprob: -6.3840203285217285
    4. '_string' → logprob: -7.5090203285217285
    5. '_s' → logprob: -7.6340203285217285
    6. ' _' → logprob: -7.7590203285217285
    7. '_space' → logprob: -7.7590203285217285
    8. '_(' → logprob: -8.259020805358887
    9. '_vector' → logprob: -8.259020805358887
    10. '(_' → logprob: -8.634020805358887

Token 82: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3927159607410431
    2. '_' → logprob: -1.8927159309387207
    3. '_array' → logprob: -3.6427159309387207
    4. '(arr' → logprob: -3.6427159309387207
    5. '(array' → logprob: -3.7677159309387207
    6. '(s' → logprob: -3.8927159309387207
    7. '(lst' → logprob: -3.8927159309387207
    8. 's' → logprob: -4.017715930938721
    9. '(a' → logprob: -4.892715930938721
    10. '_(' → logprob: -5.017715930938721

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49736055731773376
    2. ')' → logprob: -0.9973605871200562
    3. '):
' → logprob: -3.8723604679107666
    4. ')=' → logprob: -7.747360706329346
    5. '):

' → logprob: -8.247360229492188
    6. '))' → logprob: -8.247360229492188
    7. '):
' → logprob: -8.372360229492188
    8. '),' → logprob: -8.872360229492188
    9. 'ect' → logprob: -9.122360229492188
    10. ')):' → logprob: -9.122360229492188

Token 84: '   ' (ID: 271)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.19956442713737488
    2. '(np' → logprob: -2.1995644569396973
    3. '(' → logprob: -3.5745644569396973
    4. 'arr' → logprob: -4.324564456939697
    5. '   ' → logprob: -4.449564456939697
    6. '(
' → logprob: -5.449564456939697
    7. ' arr' → logprob: -5.824564456939697
    8. ' =' → logprob: -5.824564456939697
    9. ' return' → logprob: -6.199564456939697
    10. 'return' → logprob: -7.074564456939697

Token 85: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4400406777858734
    2. 'return' (adapté à ' return') → logprob: -1.6900407075881958
    3. ' np' → logprob: -1.9400407075881958
    4. 'np' → logprob: -3.6900405883789062
    5. '   ' → logprob: -5.940040588378906
    6. 'import' → logprob: -9.815040588378906
    7. '0' → logprob: -9.815040588378906
    8. ' ' → logprob: -10.815040588378906
    9. '    ' → logprob: -11.190040588378906
    10. '=np' → logprob: -11.940040588378906

Token 86: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.4287053346633911
    2. ' np' → logprob: -1.0537053346633911
    3. '(np' → logprob: -13.303705215454102
    4. ' ' → logprob: -14.053705215454102
    5. '0' → logprob: -14.678705215454102
    6. ' numpy' → logprob: -14.803705215454102
    7. '=np' → logprob: -15.053705215454102
    8. 'numpy' → logprob: -15.053705215454102
    9. '   ' → logprob: -15.553705215454102
    10. '[np' → logprob: -15.803705215454102

Token 87: '.h' (ID: 1508)
  Prédit: '.concatenate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.concatenate' → logprob: -0.025660764425992966
    2. '.pad' → logprob: -4.400660991668701
    3. '.' → logprob: -4.650660991668701
    4. '.insert' → logprob: -6.150660991668701
    5. '.ndarray' → logprob: -7.400660991668701
    6. '.append' → logprob: -8.025660514831543
    7. '.h' → logprob: -9.025660514831543
    8. '.vstack' → logprob: -9.400660514831543
    9. '.con' → logprob: -9.900660514831543
    10. '.array' → logprob: -10.150660514831543

Token 88: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -6.396757089532912e-05
    2. 'np' → logprob: -10.3750638961792
    3. 'elper' → logprob: -11.2500638961792
    4. 'pad' → logprob: -12.6250638961792
    5. 'split' → logprob: -13.5000638961792
    6. 'p' → logprob: -13.5000638961792
    7. '	stack' → logprob: -13.6250638961792
    8. '   ' → logprob: -13.6250638961792
    9. '(np' → logprob: -14.3750638961792
    10. '_' → logprob: -14.3750638961792

Token 89: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.1360025554895401
    2. '((' → logprob: -2.386002540588379
    3. '(([' → logprob: -3.386002540588379
    4. '(' → logprob: -6.636002540588379
    5. '([
' → logprob: -13.386002540588379
    6. ' ([' → logprob: -13.636002540588379
    7. '([[' → logprob: -13.886002540588379
    8. '([(' → logprob: -14.136002540588379
    9. '0' → logprob: -14.511002540588379
    10. '([-' → logprob: -14.636002540588379

Token 90: '0' (ID: 15)
  Prédit: '[np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[np' → logprob: -0.09796945750713348
    2. '(np' → logprob: -3.0979695320129395
    3. '([' → logprob: -3.3479695320129395
    4. '[' → logprob: -4.4729695320129395
    5. '0' → logprob: -6.8479695320129395
    6. 'np' → logprob: -7.5979695320129395
    7. '[array' → logprob: -10.597969055175781
    8. '[arr' → logprob: -11.472969055175781
    9. '(' → logprob: -12.472969055175781
    10. ',np' → logprob: -12.597969055175781

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028040475444868207
    2. ' ,' → logprob: -8.750280380249023
    3. ',np' → logprob: -9.750280380249023
    4. ',array' → logprob: -10.375280380249023
    5. ',
' → logprob: -11.000280380249023
    6. '‌,' → logprob: -13.250280380249023
    7. ',[' → logprob: -13.250280380249023
    8. ',a' → logprob: -13.625280380249023
    9. ',

' → logprob: -13.750280380249023
    10. ',num' → logprob: -14.125280380249023

Token 92: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.3868812620639801
    2. 'arr' → logprob: -1.1368812322616577
    3. '	arr' → logprob: -12.511880874633789
    4. '(arr' → logprob: -13.386880874633789
    5. '[arr' → logprob: -13.386880874633789
    6. '<arr' → logprob: -14.011880874633789
    7. '$arr' → logprob: -14.636880874633789
    8. '_arr' → logprob: -14.886880874633789
    9. '-arr' → logprob: -14.886880874633789
    10. 'arra' → logprob: -15.011880874633789

Token 93: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0002931558701675385
    2. ' ])' → logprob: -8.875292778015137
    3. ')' → logprob: -10.000292778015137
    4. '[' → logprob: -10.250292778015137
    5. ',' → logprob: -10.250292778015137
    6. ')])' → logprob: -11.125292778015137
    7. ']' → logprob: -11.750292778015137
    8. ')]' → logprob: -13.250292778015137
    9. '])]' → logprob: -13.250292778015137
    10. '])
' → logprob: -13.375292778015137

Token 94: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05376088246703148
    2. '[' → logprob: -3.1787607669830322
    3. '(' → logprob: -5.178761005401611
    4. ',' → logprob: -6.553761005401611
    5. 's' → logprob: -6.928761005401611
    6. ']' → logprob: -7.928761005401611
    7. '()' → logprob: -8.053760528564453
    8. ' ' → logprob: -8.178760528564453
    9. '
' → logprob: -8.428760528564453
    10. '(
' → logprob: -8.553760528564453

Token 95: ' mod' (ID: 1812)
  Prédit: ' prepend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prepend' → logprob: -1.0395714044570923
    2. '_' → logprob: -1.7895714044570923
    3. ' append' → logprob: -1.9145714044570923
    4. ' _' → logprob: -2.0395712852478027
    5. ' ' → logprob: -2.6645712852478027
    6. ' space' → logprob: -3.6645712852478027
    7. ' multiply' → logprob: -4.164571285247803
    8. ' compute' → logprob: -4.289571285247803
    9. ' calculate' → logprob: -4.664571285247803
    10. ' convert' → logprob: -4.914571285247803

Token 96: '_array' (ID: 8766)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2228807806968689
    2. '=' → logprob: -2.0978808403015137
    3. '_' → logprob: -3.3478808403015137
    4. 'ULO' → logprob: -4.472880840301514
    5. 'ulus' → logprob: -4.472880840301514
    6. 'ulo' → logprob: -5.222880840301514
    7. ' ' → logprob: -5.722880840301514
    8. ',' → logprob: -6.097880840301514
    9. '<|end|>' → logprob: -6.722880840301514
    10. ':' → logprob: -6.972880840301514

Token 97: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.016385063529014587
    2. '(' → logprob: -4.141385078430176
    3. '(array' → logprob: -8.766385078430176
    4. ' (' → logprob: -8.766385078430176
    5. '(np' → logprob: -11.516385078430176
    6. '(a' → logprob: -11.891385078430176
    7. '_arr' → logprob: -12.641385078430176
    8. 'arr' → logprob: -12.766385078430176
    9. '(ar' → logprob: -13.141385078430176
    10. '((' → logprob: -13.516385078430176

Token 98: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028130924329161644
    2. ')' → logprob: -4.028131008148193
    3. ',' → logprob: -4.653131008148193
    4. ' ):' → logprob: -8.778130531311035
    5. '):
' → logprob: -8.778130531311035
    6. ')]' → logprob: -9.903130531311035
    7. ' )' → logprob: -11.778130531311035
    8. ']:' → logprob: -12.153130531311035
    9. ')):' → logprob: -12.153130531311035
    10. ':' → logprob: -13.028130531311035

Token 99: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.9123845100402832
    2. 'mod' → logprob: -1.0373845100402832
    3. ' m' → logprob: -1.9123845100402832
    4. 'm' → logprob: -2.537384510040283
    5. ' modulus' → logprob: -5.162384510040283
    6. ' ' → logprob: -6.037384510040283
    7. ' p' → logprob: -6.412384510040283
    8. ' n' → logprob: -6.662384510040283
    9. ' M' → logprob: -6.912384510040283
    10. ')' → logprob: -7.287384510040283

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015081466175615788
    2. ')' → logprob: -4.265081405639648
    3. '=' → logprob: -7.765081405639648
    4. '):
' → logprob: -8.390081405639648
    5. ' ):' → logprob: -9.890081405639648
    6. ',' → logprob: -9.890081405639648
    7. ':' → logprob: -10.140081405639648
    8. ')):' → logprob: -10.265081405639648
    9. 'ulus' → logprob: -10.890081405639648
    10. ')]' → logprob: -11.265081405639648

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013654354959726334
    2. ' return' → logprob: -4.8886542320251465
    3. ' arr' → logprob: -6.3886542320251465
    4. ' np' → logprob: -6.7636542320251465
    5. ')' → logprob: -7.0136542320251465
    6. ' =' → logprob: -7.3886542320251465
    7. ':' → logprob: -8.138654708862305
    8. ' (' → logprob: -8.263654708862305
    9. '(arr' → logprob: -8.388654708862305
    10. 'arr' → logprob: -8.638654708862305

Token 102: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.048696715384721756
    2. ' arr' → logprob: -3.298696756362915
    3. 'return' (adapté à ' return') → logprob: -4.798696517944336
    4. 'arr' → logprob: -6.798696517944336
    5. ' np' → logprob: -7.048696517944336
    6. ' ' → logprob: -8.173696517944336
    7. 'np' → logprob: -10.548696517944336
    8. '(arr' → logprob: -10.923696517944336
    9. '   ' → logprob: -11.423696517944336
    10. ' (' → logprob: -12.173696517944336

Token 103: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.04946192726492882
    2. 'arr' → logprob: -3.049461841583252
    3. ' np' → logprob: -7.174461841583252
    4. 'np' → logprob: -9.17446231842041
    5. '(arr' → logprob: -12.67446231842041
    6. '	arr' → logprob: -13.92446231842041
    7. ' ' → logprob: -15.29946231842041
    8. '_arr' → logprob: -16.049461364746094
    9. ' (' → logprob: -16.299461364746094
    10. ' ar' → logprob: -16.924461364746094

Token 104: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.023249788209795952
    2. ' %' → logprob: -3.773249864578247
    3. ' ' → logprob: -12.898249626159668
    4. 'mod' → logprob: -15.023249626159668
    5. '[' → logprob: -15.773249626159668
    6. '```' → logprob: -15.773249626159668
    7. '%i' → logprob: -15.773249626159668
    8. ' ' → logprob: -15.898249626159668
    9. '%n' → logprob: -16.273250579833984
    10. '%
' → logprob: -16.398250579833984

Token 105: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.029752571135759354
    2. 'mod' → logprob: -3.529752492904663
    3. '(mod' → logprob: -13.529752731323242
    4. '	mod' → logprob: -14.529752731323242
    5. ' ' → logprob: -16.154752731323242
    6. ' ' → logprob: -16.279752731323242
    7. ' мод' → logprob: -17.529752731323242
    8. '_mod' → logprob: -17.654752731323242
    9. ' modul' → logprob: -17.654752731323242
    10. ' modu' → logprob: -17.779752731323242

Token 106: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8011351823806763
    2. 'def' → logprob: -0.9261351823806763
    3. '<|end|>' → logprob: -2.5511350631713867
    4. '\n' → logprob: -3.5511350631713867
    5. '[' → logprob: -4.051135063171387
    6. '

' → logprob: -5.051135063171387
    7. '#' → logprob: -5.301135063171387
    8. '_' → logprob: -5.426135063171387
    9. ')' → logprob: -6.051135063171387
    10. '<|end|>' → logprob: -6.301135063171387

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.247525155544281
    2. '
' → logprob: -1.8725252151489258
    3. '\n' → logprob: -4.122525215148926
    4. '

' → logprob: -4.122525215148926
    5. '#' → logprob: -4.497525215148926
    6. '<|end|>' → logprob: -4.622525215148926
    7. '```' → logprob: -5.872525215148926
    8. '\' → logprob: -6.622525215148926
    9. '[' → logprob: -6.997525215148926
    10. ')' → logprob: -7.122525215148926

Token 108: ' cumulative' (ID: 75628)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3789196312427521
    2. ' multiply' → logprob: -2.7539196014404297
    3. ' mod' → logprob: -3.0039196014404297
    4. ' prefix' → logprob: -3.5039196014404297
    5. ' count' → logprob: -3.6289196014404297
    6. ' compute' → logprob: -3.7539196014404297
    7. ' factorial' → logprob: -4.00391960144043
    8. ' calculate' → logprob: -4.12891960144043
    9. ' solve' → logprob: -4.37891960144043
    10. ' fast' → logprob: -4.50391960144043

Token 109: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0014167845947667956
    2. '_array' → logprob: -7.1264166831970215
    3. '_' → logprob: -7.6264166831970215
    4. '_product' → logprob: -9.50141716003418
    5. 'sum' → logprob: -10.75141716003418
    6. '_arr' → logprob: -11.50141716003418
    7. '_s' → logprob: -12.87641716003418
    8. '_max' → logprob: -13.00141716003418
    9. '_add' → logprob: -13.62641716003418
    10. '_prod' → logprob: -13.75141716003418

Token 110: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.25252461433410645
    2. '(' → logprob: -1.5025246143341064
    3. '(array' → logprob: -8.502524375915527
    4. '_arr' → logprob: -9.127524375915527
    5. ' (' → logprob: -9.377524375915527
    6. '_array' → logprob: -9.627524375915527
    7. '_' → logprob: -10.502524375915527
    8. '(np' → logprob: -10.877524375915527
    9. '(a' → logprob: -11.002524375915527
    10. '_(' → logprob: -11.127524375915527

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21110568940639496
    2. '):
' → logprob: -2.3361055850982666
    3. ',' → logprob: -2.4611055850982666
    4. ')' → logprob: -4.961105823516846
    5. '):
' → logprob: -7.336105823516846
    6. ' ):' → logprob: -7.836105823516846
    7. '(arr' → logprob: -9.961105346679688
    8. 'arr' → logprob: -10.711105346679688
    9. '):

' → logprob: -10.711105346679688
    10. ' ):
' → logprob: -10.836105346679688

Token 112: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07451818138360977
    2. '   ' → logprob: -3.4495182037353516
    3. ' return' → logprob: -3.8245182037353516
    4. 'np' → logprob: -4.074518203735352
    5. '	return' → logprob: -8.199518203735352
    6. '=np' → logprob: -8.449518203735352
    7. '()' → logprob: -8.949518203735352
    8. ' np' → logprob: -9.199518203735352
    9. '(np' → logprob: -9.449518203735352
    10. ')' → logprob: -9.574518203735352

Token 113: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3881794512271881
    2. ' return' → logprob: -1.1381794214248657
    3. 'np' → logprob: -6.888179302215576
    4. ' np' → logprob: -8.388179779052734
    5. '   ' → logprob: -10.138179779052734
    6. ' ' → logprob: -11.638179779052734
    7. '	return' → logprob: -12.388179779052734
    8. '  ' → logprob: -12.388179779052734
    9. 'def' → logprob: -14.013179779052734
    10. ':return' → logprob: -14.388179779052734

Token 114: ' arr' (ID: 1724)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.46221020817756653
    2. ' np' → logprob: -1.2122101783752441
    3. 'arr' → logprob: -2.712210178375244
    4. ' arr' → logprob: -5.087210178375244
    5. '(np' → logprob: -13.087210655212402
    6. '	arr' → logprob: -13.837210655212402
    7. ' ' → logprob: -13.837210655212402
    8. '.arr' → logprob: -14.837210655212402
    9. '=np' → logprob: -15.087210655212402
    10. '[np' → logprob: -15.212210655212402

Token 115: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -1.1517960956552997e-05
    2. '().' → logprob: -12.750011444091797
    3. '.' → logprob: -12.875011444091797
    4. 'c' → logprob: -13.000011444091797
    5. ' .' → logprob: -13.000011444091797
    6. '.sum' → logprob: -14.875011444091797
    7. 'np' → logprob: -15.375011444091797
    8. ' ' → logprob: -15.875011444091797
    9. ' c' → logprob: -16.375011444091797
    10. '(np' → logprob: -16.375011444091797

Token 116: 'umsum' (ID: 197728)
  Prédit: 'umsum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umsum' → logprob: -0.00046177039621397853
    2. 'um' → logprob: -8.12546157836914
    3. 'umulative' → logprob: -8.87546157836914
    4. 'ms' → logprob: -11.75046157836914
    5. 'umulate' → logprob: -11.75046157836914
    6. '**' → logprob: -13.00046157836914
    7. 'm' → logprob: -13.25046157836914
    8. 'uml' → logprob: -13.37546157836914
    9. 'ums' → logprob: -13.50046157836914
    10. '#' → logprob: -14.50046157836914

Token 117: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008174888207577169
    2. '(' → logprob: -7.12581729888916
    3. '()(' → logprob: -12.75081729888916
    4. '()
' → logprob: -13.00081729888916
    5. ' ()' → logprob: -13.75081729888916
    6. '().' → logprob: -13.75081729888916
    7. '()]' → logprob: -14.12581729888916
    8. '()

' → logprob: -14.37581729888916
    9. ']()' → logprob: -14.50081729888916
    10. '()`' → logprob: -14.75081729888916

Token 118: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7098750472068787
    2. 'def' → logprob: -0.7098750472068787
    3. '(
' → logprob: -5.209875106811523
    4. '()' → logprob: -6.084875106811523
    5. '
' → logprob: -6.209875106811523
    6. '(

' → logprob: -6.209875106811523
    7. '

' → logprob: -6.709875106811523
    8. '<|end|>' → logprob: -6.959875106811523
    9. '[' → logprob: -7.709875106811523
    10. '(def' → logprob: -7.834875106811523

Token 119: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15772244334220886
    2. ' mod' → logprob: -3.0327224731445312
    3. ' multiply' → logprob: -4.282722473144531
    4. ' count' → logprob: -4.407722473144531
    5. ' compute' → logprob: -4.532722473144531
    6. ' find' → logprob: -4.907722473144531
    7. ' solve' → logprob: -4.907722473144531
    8. ' cumulative' → logprob: -5.157722473144531
    9. ' max' → logprob: -5.282722473144531
    10. ' process' → logprob: -5.282722473144531

Token 120: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3016849756240845
    2. '_sub' → logprob: -1.8016849756240845
    3. '_prefix' → logprob: -1.9266849756240845
    4. '_x' → logprob: -2.051684856414795
    5. '_mod' → logprob: -2.926684856414795
    6. '_hash' → logprob: -3.176684856414795
    7. '_diff' → logprob: -3.551684856414795
    8. '_max' → logprob: -3.551684856414795
    9. '_difference' → logprob: -3.676684856414795
    10. '_array' → logprob: -4.051684856414795

Token 121: 'um' (ID: 394)
  Prédit: 'umulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.14430131018161774
    2. 'ount' → logprob: -2.644301414489746
    3. 'om' → logprob: -4.019301414489746
    4. 'um' → logprob: -4.269301414489746
    5. 'omb' → logprob: -4.769301414489746
    6. 'ont' → logprob: -5.019301414489746
    7. 'umsum' → logprob: -5.394301414489746
    8. 'ounter' → logprob: -5.394301414489746
    9. 'on' → logprob: -5.894301414489746
    10. 'ounted' → logprob: -7.394301414489746

Token 122: '_re' (ID: 3067)
  Prédit: 'ulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulative' → logprob: -0.008971675299108028
    2. '_sum' → logprob: -4.758971691131592
    3. 'sum' → logprob: -8.508971214294434
    4. '_array' → logprob: -9.383971214294434
    5. 'ul' → logprob: -10.758971214294434
    6. 'uml' → logprob: -11.383971214294434
    7. 'ulate' → logprob: -11.758971214294434
    8. 'u' → logprob: -12.008971214294434
    9. 'l' → logprob: -12.133971214294434
    10. '_s' → logprob: -12.758971214294434

Token 123: 'ma' (ID: 809)
  Prédit: 'mainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.7792001366615295
    2. 'm' → logprob: -0.9042001366615295
    3. 'v' → logprob: -3.0292000770568848
    4. 'ma' → logprob: -3.7792000770568848
    5. 'verse' → logprob: -3.9042000770568848
    6. 's' → logprob: -4.029200077056885
    7. 'main' → logprob: -4.654200077056885
    8. 'g' → logprob: -6.279200077056885
    9. 'sum' → logprob: -6.654200077056885
    10. 'wards' → logprob: -6.654200077056885

Token 124: 'inders' (ID: 41077)
  Prédit: 'inder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -0.012836999259889126
    2. 'inders' → logprob: -5.012836933135986
    3. 'nder' → logprob: -5.512836933135986
    4. 'ind' → logprob: -6.762836933135986
    5. 'in' → logprob: -8.012837409973145
    6. 'p' → logprob: -8.262837409973145
    7. 'inde' → logprob: -8.762837409973145
    8. 'ining' → logprob: -9.887837409973145
    9. 'nders' → logprob: -11.262837409973145
    10. 'iner' → logprob: -11.387837409973145

Token 125: '(A' (ID: 10706)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0009113443666137755
    2. '(' → logprob: -7.375911235809326
    3. '(array' → logprob: -8.750911712646484
    4. ' (' → logprob: -9.250911712646484
    5. '(a' → logprob: -11.250911712646484
    6. '(prefix' → logprob: -12.625911712646484
    7. '(def' → logprob: -13.000911712646484
    8. '(nums' → logprob: -13.500911712646484
    9. '(lst' → logprob: -13.625911712646484
    10. '(data' → logprob: -14.000911712646484

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018861611606553197
    2. '):' → logprob: -6.501886367797852
    3. ' ,' → logprob: -8.001886367797852
    4. ',n' → logprob: -11.751886367797852
    5. ' ):' → logprob: -12.251886367797852
    6. '):
' → logprob: -12.251886367797852
    7. '_,' → logprob: -12.626886367797852
    8. ',A' → logprob: -12.751886367797852
    9. ',array' → logprob: -12.876886367797852
    10. ',a' → logprob: -13.126886367797852

Token 127: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6618970036506653
    2. ' M' → logprob: -1.0368969440460205
    3. 'mod' → logprob: -3.1618969440460205
    4. 'K' → logprob: -3.6618969440460205
    5. 'm' → logprob: -4.1618971824646
    6. 'B' → logprob: -4.5368971824646
    7. ' K' → logprob: -4.6618971824646
    8. ' mod' → logprob: -4.6618971824646
    9. ' B' → logprob: -5.4118971824646
    10. 'k' → logprob: -5.7868971824646

Token 128: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11297255009412766
    2. '):' → logprob: -2.2379724979400635
    3. ')' → logprob: -9.487972259521484
    4. ' ,' → logprob: -10.487972259521484
    5. ' ):' → logprob: -10.737972259521484
    6. '):
' → logprob: -12.112972259521484
    7. ',A' → logprob: -12.737972259521484
    8. ':' → logprob: -13.487972259521484
    9. '_,' → logprob: -13.737972259521484
    10. ',array' → logprob: -14.050472259521484

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03430676460266113
    2. ':' → logprob: -3.409306764602661
    3. ':
' → logprob: -8.034306526184082
    4. '
' → logprob: -9.534306526184082
    5. '```' → logprob: -10.159306526184082
    6. '    
' → logprob: -10.284306526184082
    7. ',' → logprob: -10.284306526184082
    8. '):' → logprob: -10.534306526184082
    9. '():' → logprob: -10.659306526184082
    10. '(' → logprob: -10.909306526184082

Token 130: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19942401349544525
    2. ' n' → logprob: -2.0744240283966064
    3. 'n' → logprob: -3.1994240283966064
    4. ' N' → logprob: -5.199423789978027
    5. ' M' → logprob: -5.824423789978027
    6. 'N' → logprob: -6.949423789978027
    7. ' A' → logprob: -6.949423789978027
    8. '
' → logprob: -7.949423789978027
    9. 'A' → logprob: -7.949423789978027
    10. 'M' → logprob: -8.199423789978027

Token 131: '_with' (ID: 14161)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11347594112157822
    2. '=' → logprob: -2.238476037979126
    3. '   ' → logprob: -7.988475799560547
    4. '_' → logprob: -9.613475799560547
    5. 'ay' → logprob: -9.738475799560547
    6. ' ' → logprob: -9.863475799560547
    7. '=A' → logprob: -10.113475799560547
    8. '=np' → logprob: -10.238475799560547
    9. ')' → logprob: -10.863475799560547
    10. 'A' → logprob: -11.988475799560547

Token 132: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.0014126161113381386
    2. 'out' → logprob: -7.376412391662598
    3. 'zero' → logprob: -7.876412391662598
    4. '0' → logprob: -9.501412391662598
    5. '=' → logprob: -9.751412391662598
    6. '_ZERO' → logprob: -9.876412391662598
    7. 'Zero' → logprob: -10.001412391662598
    8. '_' → logprob: -10.126412391662598
    9. 'prepend' → logprob: -10.376412391662598
    10. 'prep' → logprob: -10.751412391662598

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868858814239502
    2. '=' → logprob: -1.1368858814239502
    3. ')' → logprob: -11.386885643005371
    4. 's' → logprob: -13.136885643005371
    5. ' ' → logprob: -15.136885643005371
    6. '  ' → logprob: -15.136885643005371
    7. ',' → logprob: -15.261885643005371
    8. ']' → logprob: -15.386885643005371
    9. ')=' → logprob: -16.511886596679688
    10. '＝' → logprob: -16.511886596679688

Token 134: ' prepend' (ID: 176253)
  Prédit: ' prepend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prepend' → logprob: -0.20172420144081116
    2. 'prepend' → logprob: -1.7017241716384888
    3. ' prep' → logprob: -8.4517240524292
    4. ' np' → logprob: -10.3267240524292
    5. 'np' → logprob: -10.4517240524292
    6. 'pre' → logprob: -11.0767240524292
    7. '(pre' → logprob: -11.5767240524292
    8. 'prep' → logprob: -12.4517240524292
    9. ' pre' → logprob: -14.0767240524292
    10. ' preprocess' → logprob: -14.0767240524292

Token 135: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -2.3795937522663735e-05
    2. 'zero' → logprob: -10.75002384185791
    3. '_' → logprob: -14.00002384185791
    4. '0' → logprob: -14.87502384185791
    5. '_ZERO' → logprob: -15.12502384185791
    6. 's' → logprob: -15.87502384185791
    7. '```' → logprob: -16.250022888183594
    8. 'a' → logprob: -16.375022888183594
    9. 'd' → logprob: -16.375022888183594
    10. '_array' → logprob: -16.625022888183594

Token 136: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -12.25001049041748
    3. '(arr' → logprob: -12.25001049041748
    4. ' (' → logprob: -14.75001049041748
    5. '((' → logprob: -15.87501049041748
    6. '(array' → logprob: -16.125009536743164
    7. '(np' → logprob: -16.625009536743164
    8. '(Array' → logprob: -17.000009536743164
    9. ')(' → logprob: -17.125009536743164
    10. '(
' → logprob: -17.750009536743164

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002541417023167014
    2. ')
' → logprob: -6.002541542053223
    3. ' )' → logprob: -10.502541542053223
    4. ')
' → logprob: -10.877541542053223
    5. ')`' → logprob: -12.127541542053223
    6. ')

' → logprob: -12.377541542053223
    7. '))' → logprob: -13.252541542053223
    8. '[' → logprob: -13.502541542053223
    9. ',)' → logprob: -13.502541542053223
    10. '),' → logprob: -14.252541542053223

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003231306094676256
    2. 'cum' → logprob: -6.253231525421143
    3. ' cum' → logprob: -8.128231048583984
    4. 're' → logprob: -8.128231048583984
    5. 'c' → logprob: -8.378231048583984
    6. 'mod' → logprob: -9.003231048583984
    7. '    
' → logprob: -9.253231048583984
    8. ' c' → logprob: -10.378231048583984
    9. 'rem' → logprob: -10.628231048583984
    10. ' cumulative' → logprob: -10.753231048583984

Token 139: ' arr' (ID: 1724)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.6077017188072205
    2. '   ' → logprob: -1.1077017784118652
    3. 'c' → logprob: -2.4827017784118652
    4. ' c' → logprob: -4.482701778411865
    5. 'mod' → logprob: -4.607701778411865
    6. ' cum' → logprob: -4.607701778411865
    7. ' mod' → logprob: -6.357701778411865
    8. 'cs' → logprob: -6.607701778411865
    9. 're' → logprob: -6.607701778411865
    10. ' cumulative' → logprob: -6.857701778411865

Token 140: '_mod' (ID: 15325)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.08934290707111359
    2. '_mod' → logprob: -2.5893428325653076
    3. '_re' → logprob: -5.839343070983887
    4. '_with' → logprob: -6.089343070983887
    5. '_cs' → logprob: -6.589343070983887
    6. 'cum' → logprob: -7.214343070983887
    7. 'mod' → logprob: -7.339343070983887
    8. ' =' → logprob: -7.464343070983887
    9. '=' → logprob: -7.714343070983887
    10. '_sum' → logprob: -7.714343070983887

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052377874962985516
    2. ' =' → logprob: -5.255237579345703
    3. '(arr' → logprob: -12.880237579345703
    4. 'arr' → logprob: -14.130237579345703
    5. '=array' → logprob: -16.005237579345703
    6. 'ulated' → logprob: -16.130237579345703
    7. '(' → logprob: -16.630237579345703
    8. '=np' → logprob: -16.630237579345703
    9. '=
' → logprob: -16.755237579345703
    10. ',' → logprob: -17.130237579345703

Token 142: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.15048007667064667
    2. 'mod' → logprob: -2.025480031967163
    3. ' arr' → logprob: -5.275480270385742
    4. 'arr' → logprob: -6.650480270385742
    5. '(arr' → logprob: -6.775480270385742
    6. '(mod' → logprob: -9.400480270385742
    7. ' ' → logprob: -9.775480270385742
    8. 'od' → logprob: -11.025480270385742
    9. '_mod' → logprob: -11.025480270385742
    10. '	mod' → logprob: -11.150480270385742

Token 143: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.6240566083070007e-06
    2. 'array' → logprob: -13.625001907348633
    3. '(arr' → logprob: -15.750001907348633
    4. 'arr' → logprob: -16.250001907348633
    5. 'Array' → logprob: -16.500001907348633
    6. '_arr' → logprob: -17.000001907348633
    7. '_ARRAY' → logprob: -17.875001907348633
    8. '_' → logprob: -18.375001907348633
    9. '_arrays' → logprob: -18.750001907348633
    10. 'rray' → logprob: -19.125001907348633

Token 144: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -1.0087516784551553e-05
    2. '(' → logprob: -12.00001049041748
    3. '<|end|>' → logprob: -13.12501049041748
    4. '[arr' → logprob: -14.25001049041748
    5. '(array' → logprob: -14.62501049041748
    6. 'arr' → logprob: -14.75001049041748
    7. '<arr' → logprob: -16.375009536743164
    8. ' (' → logprob: -16.625009536743164
    9. '(
' → logprob: -17.000009536743164
    10. ' arr' → logprob: -17.125009536743164

Token 145: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0121776033192873
    2. '(arr' → logprob: -4.512177467346191
    3. 'with' → logprob: -7.387177467346191
    4. 'arr' → logprob: -7.762177467346191
    5. 'With' → logprob: -10.762177467346191
    6. ',' → logprob: -11.512177467346191
    7. 's' → logprob: -11.512177467346191
    8. ')' → logprob: -11.637177467346191
    9. '[arr' → logprob: -12.137177467346191
    10. ')(' → logprob: -12.512177467346191

Token 146: '_zero' (ID: 53468)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.05424552783370018
    2. 'arr' → logprob: -3.0542454719543457
    3. '_zero' → logprob: -5.554245471954346
    4. '(arr' → logprob: -7.304245471954346
    5. '0' → logprob: -7.804245471954346
    6. 'Zero' → logprob: -8.304245948791504
    7. 'o' → logprob: -9.679245948791504
    8. ' zero' → logprob: -9.679245948791504
    9. 'z' → logprob: -10.054245948791504
    10. ' arr' → logprob: -10.304245948791504

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010541265364736319
    2. ',M' → logprob: -7.501054286956787
    3. ' ,' → logprob: -7.626054286956787
    4. ')' → logprob: -12.876053810119629
    5. ',m' → logprob: -13.126053810119629
    6. ',
' → logprob: -13.376053810119629
    7. '(' → logprob: -13.751053810119629
    8. ' ' → logprob: -13.751053810119629
    9. '(M' → logprob: -13.751053810119629
    10. ',A' → logprob: -14.126053810119629

Token 148: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.043006736785173416
    2. ' M' → logprob: -3.168006658554077
    3. '   ' → logprob: -11.918006896972656
    4. ')' → logprob: -15.168006896972656
    5. '  ' → logprob: -15.543006896972656
    6. ' ' → logprob: -15.543006896972656
    7. '    ' → logprob: -16.168006896972656
    8. '
' → logprob: -17.043006896972656
    9. '	M' → logprob: -17.168006896972656
    10. '>M' → logprob: -17.293006896972656

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06201429292559624
    2. ')
' → logprob: -2.81201434135437
    3. ')
' → logprob: -10.43701457977295
    4. ')

' → logprob: -11.31201457977295
    5. ' )' → logprob: -13.06201457977295
    6. ' )
' → logprob: -13.68701457977295
    7. '   ' → logprob: -14.93701457977295
    8. ' ' → logprob: -15.06201457977295
    9. ')`' → logprob: -15.68701457977295
    10. ').' → logprob: -16.062013626098633

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21168695390224457
    2. 'cum' → logprob: -1.7116869688034058
    3. 'c' → logprob: -4.711687088012695
    4. ' cum' → logprob: -7.461687088012695
    5. 'return' → logprob: -8.711687088012695
    6. 'cs' → logprob: -9.586687088012695
    7. 'arr' → logprob: -9.711687088012695
    8. 're' → logprob: -10.086687088012695
    9. '```' → logprob: -10.336687088012695
    10. 'prefix' → logprob: -10.336687088012695

Token 151: ' c' (ID: 274)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.22448210418224335
    2. 'c' (adapté à ' c') → logprob: -1.7244820594787598
    3. '   ' → logprob: -4.34948205947876
    4. 'arr' → logprob: -4.97448205947876
    5. 'return' → logprob: -6.97448205947876
    6. 'prefix' → logprob: -7.59948205947876
    7. ' c' → logprob: -7.84948205947876
    8. ' cum' → logprob: -8.099482536315918
    9. 'cs' → logprob: -8.349482536315918
    10. 'rem' → logprob: -9.224482536315918

Token 152: 'umsum' (ID: 197728)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.04827595129609108
    2. 'umulative' → logprob: -3.923275947570801
    3. 'umsum' → logprob: -4.173275947570801
    4. 'sum' → logprob: -5.048275947570801
    5. 'cum' → logprob: -5.423275947570801
    6. 'umul' → logprob: -8.0482759475708
    7. 'umu' → logprob: -8.1732759475708
    8. '_sum' → logprob: -8.4232759475708
    9. '=' → logprob: -9.9232759475708
    10. 'c' → logprob: -10.2982759475708

Token 153: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.29539069533348083
    2. ' =' → logprob: -1.7953907251358032
    3. '=' → logprob: -2.7953906059265137
    4. 'arr' → logprob: -4.295390605926514
    5. '_array' → logprob: -4.795390605926514
    6. '_' → logprob: -5.420390605926514
    7. 's' → logprob: -6.295390605926514
    8. '_=' → logprob: -9.295391082763672
    9. '_result' → logprob: -9.670391082763672
    10. 'array' → logprob: -9.920391082763672

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048593275249004364
    2. ' =' → logprob: -3.048593282699585
    3. '=np' → logprob: -12.798593521118164
    4. '=array' → logprob: -14.798593521118164
    5. '＝' → logprob: -14.923593521118164
    6. '  ' → logprob: -15.048593521118164
    7. '=o' → logprob: -15.298593521118164
    8. '=
' → logprob: -15.548593521118164
    9. ' ' → logprob: -15.548593521118164
    10. 'ay' → logprob: -15.923593521118164

Token 155: ' cumulative' (ID: 75628)
  Prédit: ' cumulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumulative' → logprob: -0.2519746720790863
    2. 'c' → logprob: -1.5019747018814087
    3. ' c' → logprob: -10.251975059509277
    4. ' ' → logprob: -12.501975059509277
    5. 'cum' → logprob: -13.376975059509277
    6. 'umulative' → logprob: -13.376975059509277
    7. '(c' → logprob: -13.876975059509277
    8. '	c' → logprob: -14.251975059509277
    9. '   ' → logprob: -14.251975059509277
    10. 'arr' → logprob: -15.251975059509277

Token 156: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00010962257510982454
    2. 'sum' → logprob: -9.125109672546387
    3. '_arr' → logprob: -15.000109672546387
    4. 'arr' → logprob: -15.500109672546387
    5. ' sum' → logprob: -16.62510871887207
    6. 's' → logprob: -17.37510871887207
    7. '_' → logprob: -17.75010871887207
    8. 'Sum' → logprob: -18.12510871887207
    9. '_s' → logprob: -18.25010871887207
    10. 'um' → logprob: -19.00010871887207

Token 157: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.750000953674316
    3. 'arr' → logprob: -14.875000953674316
    4. '[arr' → logprob: -17.125
    5. '(array' → logprob: -17.875
    6. '<arr' → logprob: -18.0
    7. ' (' → logprob: -18.5
    8. '	arr' → logprob: -18.625
    9. '(
' → logprob: -19.5
    10. '(mod' → logprob: -19.875

Token 158: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0038764351047575474
    2. '_arr' → logprob: -5.628876209259033
    3. 'mod' → logprob: -8.753876686096191
    4. 'arr' → logprob: -9.128876686096191
    5. '(arr' → logprob: -12.253876686096191
    6. ')' → logprob: -13.878876686096191
    7. 'od' → logprob: -13.878876686096191
    8. 'Mod' → logprob: -14.378876686096191
    9. '[arr' → logprob: -14.878876686096191
    10. '_obj' → logprob: -15.003876686096191

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004878992680460215
    2. ')
' → logprob: -6.379878997802734
    3. ' )' → logprob: -7.254878997802734
    4. '())' → logprob: -7.254878997802734
    5. '(' → logprob: -7.629878997802734
    6. '()' → logprob: -8.004878997802734
    7. '(arr' → logprob: -8.379878997802734
    8. 'arr' → logprob: -8.629878997802734
    9. ')
' → logprob: -8.754878997802734
    10. '[' → logprob: -9.504878997802734

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00530040031298995
    2. ' return' → logprob: -6.005300521850586
    3. 'return' → logprob: -6.255300521850586
    4. '
' → logprob: -8.005300521850586
    5. '<|end|>' → logprob: -9.005300521850586
    6. '    
' → logprob: -9.130300521850586
    7. ')' → logprob: -9.880300521850586
    8. 'c' → logprob: -10.005300521850586
    9. 'mod' → logprob: -10.380300521850586
    10. '	return' → logprob: -10.505300521850586

Token 161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5932310819625854
    2. ' return' → logprob: -0.9682310819625854
    3. ' c' → logprob: -3.343231201171875
    4. 'c' → logprob: -4.093231201171875
    5. '   ' → logprob: -5.093231201171875
    6. 'mod' → logprob: -5.718231201171875
    7. 're' → logprob: -6.593231201171875
    8. 'arr' → logprob: -6.718231201171875
    9. ' mod' → logprob: -6.718231201171875
    10. 'result' → logprob: -6.968231201171875

Token 162: ' mod' (ID: 1812)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6978278756141663
    2. ' mod' → logprob: -1.0728278160095215
    3. 'c' → logprob: -2.1978278160095215
    4. 'mod' → logprob: -3.0728278160095215
    5. ' np' → logprob: -6.6978278160095215
    6. 'np' → logprob: -7.6978278160095215
    7. '(c' → logprob: -7.6978278160095215
    8. ' (' → logprob: -8.44782829284668
    9. ' cumulative' → logprob: -8.44782829284668
    10. '(mod' → logprob: -8.82282829284668

Token 163: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00354816229082644
    2. '_arr' → logprob: -5.7535481452941895
    3. 'arr' → logprob: -8.128548622131348
    4. '(c' → logprob: -10.378548622131348
    5. '_c' → logprob: -11.378548622131348
    6. 'array' → logprob: -11.378548622131348
    7. 'Array' → logprob: -12.003548622131348
    8. 'c' → logprob: -12.753548622131348
    9. '(arr' → logprob: -12.753548622131348
    10. '_ar' → logprob: -13.503548622131348

Token 164: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.250007629394531
    3. ' (' → logprob: -13.125007629394531
    4. '<|end|>' → logprob: -14.500007629394531
    5. '(s' → logprob: -16.75000762939453
    6. '(
' → logprob: -16.87500762939453
    7. '```' → logprob: -17.12500762939453
    8. '((' → logprob: -17.25000762939453
    9. 'c' → logprob: -17.87500762939453
    10. '(np' → logprob: -18.00000762939453

Token 165: 'umsum' (ID: 197728)
  Prédit: 'umsum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umsum' → logprob: -6.392202976712724e-06
    2. 'ums' → logprob: -12.000006675720215
    3. 'um' → logprob: -16.1250057220459
    4. 'umulative' → logprob: -16.8750057220459
    5. 'psum' → logprob: -18.0000057220459
    6. 'c' → logprob: -18.8750057220459
    7. 'us' → logprob: -19.6250057220459
    8. '```' → logprob: -19.7500057220459
    9. '[' → logprob: -19.8750057220459
    10. 'u' → logprob: -20.3750057220459

Token 166: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -7.255023956531659e-05
    2. 'arr' → logprob: -9.625072479248047
    3. '(arr' → logprob: -12.375072479248047
    4. '_array' → logprob: -14.000072479248047
    5. 'Arr' → logprob: -14.625072479248047
    6. '	arr' → logprob: -15.500072479248047
    7. 'r' → logprob: -15.875072479248047
    8. '```' → logprob: -16.125072479248047
    9. '[arr' → logprob: -16.500072479248047
    10. ')' → logprob: -16.500072479248047

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020368914119899273
    2. ',M' → logprob: -7.002037048339844
    3. '(M' → logprob: -7.127037048339844
    4. ' ,' → logprob: -8.627037048339844
    5. '(' → logprob: -9.002037048339844
    6. ')' → logprob: -12.002037048339844
    7. ',
' → logprob: -12.127037048339844
    8. '),' → logprob: -13.377037048339844
    9. '   ' → logprob: -14.252037048339844
    10. '(A' → logprob: -14.502037048339844

Token 168: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.03804183006286621
    2. ' M' → logprob: -3.288041830062866
    3. ')' → logprob: -15.663042068481445
    4. '   ' → logprob: -16.038042068481445
    5. ' ' → logprob: -16.413042068481445
    6. '	M' → logprob: -18.288042068481445
    7. '<|end|>' → logprob: -18.413042068481445
    8. '
' → logprob: -18.663042068481445
    9. '>M' → logprob: -19.038042068481445
    10. '  ' → logprob: -19.038042068481445

Token 169: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.000001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '}' → logprob: -18.125001907348633
    5. '<|end|>' → logprob: -18.125001907348633
    6. ')#' → logprob: -18.375001907348633
    7. ')

' → logprob: -18.500001907348633
    8. '),' → logprob: -19.125001907348633
    9. '))' → logprob: -19.125001907348633
    10. ']' → logprob: -19.125001907348633

Token 170: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9996960759162903
    2. ')' → logprob: -1.3746960163116455
    3. '(' → logprob: -1.6246960163116455
    4. '<|end|>' → logprob: -2.2496960163116455
    5. '#' → logprob: -3.6246960163116455
    6. ',' → logprob: -3.9996960163116455
    7. ':' → logprob: -4.499696254730225
    8. ']' → logprob: -5.124696254730225
    9. '.' → logprob: -5.249696254730225
    10. '
' → logprob: -6.374696254730225

Token 171: ' count' (ID: 3605)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1403849720954895
    2. ' find' → logprob: -3.2653849124908447
    3. ' count' → logprob: -3.2653849124908447
    4. ' compute' → logprob: -3.7653849124908447
    5. 'main' → logprob: -4.265385150909424
    6. ' solve' → logprob: -5.015385150909424
    7. 'count' → logprob: -5.890385150909424
    8. 'compute' → logprob: -5.890385150909424
    9. ' max' → logprob: -6.390385150909424
    10. ' process' → logprob: -6.765385150909424

Token 172: '_re' (ID: 3067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7471491694450378
    2. '_occ' → logprob: -1.9971492290496826
    3. '_sub' → logprob: -2.2471492290496826
    4. '(' → logprob: -2.2471492290496826
    5. '_re' → logprob: -2.4971492290496826
    6. '_c' → logprob: -2.9971492290496826
    7. '_prefix' → logprob: -4.9971489906311035
    8. '_counter' → logprob: -5.3721489906311035
    9. '_suffix' → logprob: -5.9971489906311035
    10. '_oc' → logprob: -6.1221489906311035

Token 173: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.09881982952356339
    2. 'm' → logprob: -2.5988197326660156
    3. 'mainder' → logprob: -3.9738197326660156
    4. 'main' → logprob: -7.348819732666016
    5. 're' → logprob: -10.223819732666016
    6. 'mad' → logprob: -10.223819732666016
    7. 'matches' → logprob: -10.473819732666016
    8. 'rema' → logprob: -10.723819732666016
    9. 'members' → logprob: -10.848819732666016
    10. 's' → logprob: -11.098819732666016

Token 174: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.0044600279070436954
    2. 'inder' → logprob: -5.504459857940674
    3. 'nders' → logprob: -8.004460334777832
    4. 'ind' → logprob: -10.754460334777832
    5. 'inde' → logprob: -11.129460334777832
    6. 'iners' → logprob: -11.879460334777832
    7. 'in' → logprob: -13.879460334777832
    8. '```' → logprob: -14.129460334777832
    9. 'nder' → logprob: -14.254460334777832
    10. 'indered' → logprob: -15.129460334777832

Token 175: '(arr' (ID: 19646)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.6877880096435547
    2. '(arr' → logprob: -1.1877880096435547
    3. '(re' → logprob: -1.8127880096435547
    4. '(' → logprob: -3.8127880096435547
    5. '(prefix' → logprob: -6.562788009643555
    6. '(counter' → logprob: -6.687788009643555
    7. '(rem' → logprob: -6.812788009643555
    8. '(array' → logprob: -7.562788009643555
    9. '(count' → logprob: -7.812788009643555
    10. '(r' → logprob: -7.937788009643555

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008548025973141193
    2. '):
' → logprob: -4.883548259735107
    3. ' ):' → logprob: -7.633548259735107
    4. ')' → logprob: -8.50854778289795
    5. ',' → logprob: -8.50854778289795
    6. '):
' → logprob: -10.38354778289795
    7. '   ' → logprob: -12.13354778289795
    8. ')):' → logprob: -12.38354778289795
    9. '(' → logprob: -13.13354778289795
    10. ' ' → logprob: -13.38354778289795

Token 177: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2633078992366791
    2. ' return' → logprob: -2.138307809829712
    3. '   ' → logprob: -2.263307809829712
    4. 'Counter' → logprob: -4.763308048248291
    5. 'counts' → logprob: -8.013307571411133
    6. 'counter' → logprob: -8.138307571411133
    7. ' Counter' → logprob: -8.763307571411133
    8. ' counter' → logprob: -9.263307571411133
    9. ' counts' → logprob: -9.763307571411133
    10. 'def' → logprob: -9.888307571411133

Token 178: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11030987650156021
    2. 'counts' → logprob: -2.7353098392486572
    3. 'counter' → logprob: -3.4853098392486572
    4. ' return' → logprob: -5.610310077667236
    5. 'count' → logprob: -5.860310077667236
    6. 'cnt' → logprob: -7.235310077667236
    7. 'freq' → logprob: -7.610310077667236
    8. ' counts' → logprob: -7.610310077667236
    9. 'Counter' → logprob: -8.235309600830078
    10. 'c' → logprob: -8.735309600830078

Token 179: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.00027682865038514137
    2. ' Counter' → logprob: -8.750276565551758
    3. 'dict' → logprob: -9.375276565551758
    4. 'np' → logprob: -10.750276565551758
    5. 'len' → logprob: -12.250276565551758
    6. 'counter' → logprob: -12.875276565551758
    7. 'arr' → logprob: -14.000276565551758
    8. 'list' → logprob: -14.250276565551758
    9. 'collections' → logprob: -14.250276565551758
    10. 'Dict' → logprob: -14.375276565551758

Token 180: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00018387178715784103
    2. '(list' → logprob: -9.000184059143066
    3. '(' → logprob: -10.500184059143066
    4. 'arr' → logprob: -10.500184059143066
    5. '(np' → logprob: -12.500184059143066
    6. 'list' → logprob: -15.000184059143066
    7. '(int' → logprob: -15.000184059143066
    8. '((' → logprob: -15.250184059143066
    9. '[arr' → logprob: -15.375184059143066
    10. ' (' → logprob: -16.00018310546875

Token 181: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')
' → logprob: -16.750001907348633
    4. '))' → logprob: -16.750001907348633
    5. ').' → logprob: -16.875001907348633
    6. '())' → logprob: -17.000001907348633
    7. '}' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.500001907348633
    10. ')`' → logprob: -18.625001907348633

Token 182: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.053365856409072876
    2. '<|end|>' → logprob: -3.05336594581604
    3. '<|end|>' → logprob: -6.678365707397461
    4. '
' → logprob: -6.678365707397461
    5. '[' → logprob: -7.178365707397461
    6. '#' → logprob: -7.803365707397461
    7. '\' → logprob: -8.178365707397461
    8. ')' → logprob: -8.678365707397461
    9. '(' → logprob: -9.053365707397461
    10. '```' → logprob: -9.303365707397461

Token 183: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12888117134571075
    2. ' find' → logprob: -3.3788812160491943
    3. 'main' → logprob: -3.5038812160491943
    4. ' compute' → logprob: -3.8788812160491943
    5. ' count' → logprob: -4.253880977630615
    6. ' most' → logprob: -5.128880977630615
    7. 'compute' → logprob: -5.753880977630615
    8. ' solve' → logprob: -5.753880977630615
    9. ' calculate' → logprob: -6.378880977630615
    10. 'count' → logprob: -6.378880977630615

Token 184: '_com' (ID: 10828)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.322788804769516
    2. '_max' → logprob: -1.9477888345718384
    3. '_prefix' → logprob: -3.447788715362549
    4. '(' → logprob: -3.822788715362549
    5. '_mod' → logprob: -4.197788715362549
    6. '_total' → logprob: -4.447788715362549
    7. 'sub' → logprob: -5.322788715362549
    8. '_' → logprob: -5.447788715362549
    9. '_min' → logprob: -5.822788715362549
    10. '_sum' → logprob: -5.947788715362549

Token 185: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.011190002784132957
    2. 'b' → logprob: -5.886189937591553
    3. '```' → logprob: -5.886189937591553
    4. '_b' → logprob: -6.636189937591553
    5. '_' → logprob: -6.761189937591553
    6. '_pairs' → logprob: -7.136189937591553
    7. 'bin' → logprob: -8.011190414428711
    8. 'ponents' → logprob: -8.261190414428711
    9. '_bin' → logprob: -8.511190414428711
    10. 'plements' → logprob: -8.636190414428711

Token 186: '_from' (ID: 12526)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.8753905296325684
    2. '(counter' → logprob: -1.1253905296325684
    3. '(' → logprob: -1.5003905296325684
    4. ' (' → logprob: -3.7503905296325684
    5. '(arr' → logprob: -5.125390529632568
    6. '(cnt' → logprob: -6.125390529632568
    7. '(n' → logprob: -6.750390529632568
    8. '_' → logprob: -7.125390529632568
    9. '_(' → logprob: -8.125391006469727
    10. '(re' → logprob: -8.375391006469727

Token 187: '_counts' (ID: 61971)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.7249711155891418
    2. 'counter' → logprob: -1.474971055984497
    3. '_counts' → logprob: -1.474971055984497
    4. 'counts' → logprob: -3.099971055984497
    5. 'count' → logprob: -4.724971294403076
    6. '_count' → logprob: -5.849971294403076
    7. '_re' → logprob: -7.849971294403076
    8. '_' → logprob: -8.349970817565918
    9. '(counter' → logprob: -9.099970817565918
    10. 're' → logprob: -9.224970817565918

Token 188: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.2772494852542877
    2. '(counter' → logprob: -1.7772494554519653
    3. '(' → logprob: -2.777249574661255
    4. '(c' → logprob: -4.652249336242676
    5. '(cnt' → logprob: -6.777249336242676
    6. ' (' → logprob: -10.152249336242676
    7. '(arr' → logprob: -10.277249336242676
    8. '(C' → logprob: -11.027249336242676
    9. '(s' → logprob: -11.402249336242676
    10. '(freq' → logprob: -12.527249336242676

Token 189: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.236549335066229e-05
    2. ')' → logprob: -11.500021934509277
    3. ')s' → logprob: -11.750021934509277
    4. '_s' → logprob: -13.125021934509277
    5. '=' → logprob: -14.375021934509277
    6. '=s' → logprob: -14.875021934509277
    7. '}s' → logprob: -15.625021934509277
    8. '{s' → logprob: -15.875021934509277
    9. '_)' → logprob: -16.000022888183594
    10. '_counts' → logprob: -16.000022888183594

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008883291855454445
    2. ' ):' → logprob: -5.508883476257324
    3. ')' → logprob: -6.008883476257324
    4. '):
' → logprob: -6.133883476257324
    5. '(' → logprob: -9.508883476257324
    6. ',' → logprob: -10.758883476257324
    7. '   ' → logprob: -11.008883476257324
    8. '(count' → logprob: -11.633883476257324
    9. ' )' → logprob: -11.883883476257324
    10. ' ' → logprob: -12.258883476257324

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08106959611177444
    2. 'total' → logprob: -2.8310697078704834
    3. 'result' → logprob: -4.581069469451904
    4. 'res' → logprob: -5.206069469451904
    5. ' total' → logprob: -6.581069469451904
    6. 'def' → logprob: -7.331069469451904
    7. 'return' → logprob: -8.206069946289062
    8. 'ans' → logprob: -8.456069946289062
    9. 'com' → logprob: -9.081069946289062
    10. '
' → logprob: -9.331069946289062

Token 192: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.441899061203003
    2. ' res' → logprob: -1.566899061203003
    3. ' result' → logprob: -1.691899061203003
    4. 'res' → logprob: -2.066899061203003
    5. ' total' → logprob: -2.191899061203003
    6. 'result' → logprob: -2.441899061203003
    7. 'total' (adapté à ' total') → logprob: -3.691899061203003
    8. ' combinations' → logprob: -5.191899299621582
    9. ' comb' → logprob: -5.316899299621582
    10. 'com' → logprob: -5.941899299621582

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22562676668167114
    2. '=' → logprob: -1.6006267070770264
    3. '_' → logprob: -8.600626945495605
    4. ' +=' → logprob: -11.225626945495605
    5. ' ' → logprob: -12.350626945495605
    6. 's' → logprob: -12.600626945495605
    7. '_=' → logprob: -12.725626945495605
    8. ' =
' → logprob: -13.600626945495605
    9. ' _' → logprob: -13.850626945495605
    10. '+=' → logprob: -14.475626945495605

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017027945723384619
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.626703262329102
    4. 'np' → logprob: -15.626703262329102
    5. ' np' → logprob: -16.2517032623291
    6. 'int' → logprob: -16.8767032623291
    7. 'sum' → logprob: -17.0017032623291
    8. ' sum' → logprob: -17.7517032623291
    9. '  ' → logprob: -18.1267032623291
    10. '1' → logprob: -18.2517032623291

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.600714161526412e-05
    2. ' ' → logprob: -9.625076293945312
    3. 'sum' → logprob: -11.750076293945312
    4. 'np' → logprob: -13.625076293945312
    5. 'int' → logprob: -14.875076293945312
    6. '   ' → logprob: -15.000076293945312
    7. ' sum' → logprob: -16.125076293945312
    8. '  ' → logprob: -17.562576293945312
    9. '1' → logprob: -17.562576293945312
    10. ' np' → logprob: -17.625076293945312

Token 196: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1220824122428894
    2. '   ' → logprob: -2.622082471847534
    3. '<|end|>' → logprob: -4.622082233428955
    4. ' for' → logprob: -4.747082233428955
    5. ' ' → logprob: -5.372082233428955
    6. ' 
' → logprob: -5.497082233428955
    7. '    
' → logprob: -5.747082233428955
    8. '  
' → logprob: -5.747082233428955
    9. ':' → logprob: -6.122082233428955
    10. ',' → logprob: -6.497082233428955

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41502878069877625
    2. ' for' → logprob: -1.7900288105010986
    3. '
' → logprob: -2.6650288105010986
    4. ' ' → logprob: -2.7900288105010986
    5. ' 
' → logprob: -4.2900285720825195
    6. 'for' → logprob: -4.6650285720825195
    7. '    
' → logprob: -4.9150285720825195
    8. '  
' → logprob: -5.7900285720825195
    9. '<|end|>' → logprob: -6.2900285720825195
    10. ':' → logprob: -6.7900285720825195

Token 198: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0223498344421387
    2. 'for' (adapté à ' for') → logprob: -1.0223498344421387
    3. '   ' → logprob: -1.2723498344421387
    4. ' ' → logprob: -8.772350311279297
    5. '	for' → logprob: -9.772350311279297
    6. ' 
' → logprob: -10.022350311279297
    7. '    
' → logprob: -10.522350311279297
    8. '
' → logprob: -10.647350311279297
    9. '  ' → logprob: -11.147350311279297
    10. '    ' → logprob: -13.522350311279297

Token 199: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8959581255912781
    2. ' count' → logprob: -1.0209581851959229
    3. ' key' → logprob: -2.770958185195923
    4. ' k' → logprob: -3.770958185195923
    5. ' cnt' → logprob: -4.020957946777344
    6. 'cnt' → logprob: -4.020957946777344
    7. 'value' → logprob: -4.270957946777344
    8. 'k' → logprob: -4.270957946777344
    9. 'key' → logprob: -4.270957946777344
    10. 'v' → logprob: -4.270957946777344

Token 200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017150074243545532
    2. 'in' → logprob: -4.767149925231934
    3. ',' → logprob: -5.142149925231934
    4. ' ' → logprob: -6.517149925231934
    5. 's' → logprob: -7.392149925231934
    6. '_in' → logprob: -8.517149925231934
    7. ' ,' → logprob: -8.642149925231934
    8. '_' → logprob: -10.642149925231934
    9. '  ' → logprob: -10.642149925231934
    10. ':' → logprob: -11.392149925231934

Token 201: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.029753616079688072
    2. ' counts' → logprob: -3.5297536849975586
    3. 'count' → logprob: -12.779753684997559
    4. 'values' → logprob: -15.529753684997559
    5. '_counts' → logprob: -16.779752731323242
    6. ' ' → logprob: -18.029752731323242
    7. '[count' → logprob: -18.279752731323242
    8. 'cnt' → logprob: -18.404752731323242
    9. 'Counts' → logprob: -19.154752731323242
    10. '(count' → logprob: -19.154752731323242

Token 202: '.values' (ID: 20422)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16249383985996246
    2. '.values' → logprob: -1.9124938249588013
    3. 'values' → logprob: -6.662493705749512
    4. ' :' → logprob: -8.162493705749512
    5. '_values' → logprob: -8.537493705749512
    6. ':
' → logprob: -8.662493705749512
    7. '):' → logprob: -8.912493705749512
    8. ' values' → logprob: -10.412493705749512
    9. '   ' → logprob: -10.787493705749512
    10. '.keys' → logprob: -11.037493705749512

Token 203: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.639096970204264e-05
    2. '():
' → logprob: -9.375096321105957
    3. '()' → logprob: -12.125096321105957
    4. ' ():' → logprob: -12.125096321105957
    5. ':' → logprob: -15.500096321105957
    6. '():
' → logprob: -15.875096321105957
    7. '():

' → logprob: -16.125097274780273
    8. '()>' → logprob: -16.500097274780273
    9. '):' → logprob: -16.875097274780273
    10. '(' → logprob: -17.250097274780273

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018361835973337293
    2. '   ' → logprob: -7.25183629989624
    3. '<|end|>' → logprob: -8.251835823059082
    4. ',' → logprob: -8.501835823059082
    5. ' if' → logprob: -8.501835823059082
    6. ' total' → logprob: -8.751835823059082
    7. '(total' → logprob: -9.126835823059082
    8. ' ' → logprob: -9.876835823059082
    9. 'total' → logprob: -10.126835823059082
    10. '      ' → logprob: -11.376835823059082

Token 205: ' total' (ID: 3609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5719883441925049
    2. '       ' → logprob: -1.6969883441925049
    3. '           ' → logprob: -2.196988344192505
    4. ' total' → logprob: -2.696988344192505
    5. 'if' → logprob: -3.196988344192505
    6. 'total' (adapté à ' total') → logprob: -3.446988344192505
    7. '   ' → logprob: -7.196988105773926
    8. '(total' → logprob: -8.571988105773926
    9. '	total' → logprob: -9.946988105773926
    10. ',total' → logprob: -10.571988105773926

Token 206: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12697608768939972
    2. '+=' → logprob: -2.1269760131835938
    3. '+=(' → logprob: -10.001976013183594
    4. '   ' → logprob: -13.126976013183594
    5. ']+=' → logprob: -15.376976013183594
    6. '```' → logprob: -15.376976013183594
    7. '+' → logprob: -15.876976013183594
    8. '    ' → logprob: -16.751976013183594
    9. '	' → logprob: -17.126976013183594
    10. '+="' → logprob: -17.126976013183594

Token 207: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.38788944482803345
    2. 'count' → logprob: -1.1378893852233887
    3. '(count' → logprob: -7.262889385223389
    4. ' (' → logprob: -8.262889862060547
    5. '(' → logprob: -9.887889862060547
    6. ' ' → logprob: -12.137889862060547
    7. '   ' → logprob: -13.637889862060547
    8. '	count' → logprob: -14.262889862060547
    9. '  ' → logprob: -15.512889862060547
    10. '[count' → logprob: -15.762889862060547

Token 208: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3900890648365021
    2. '*' → logprob: -1.1400890350341797
    3. '*(' → logprob: -5.76508903503418
    4. ' ' → logprob: -9.51508903503418
    5. ' ' → logprob: -13.51508903503418
    6. '   ' → logprob: -14.01508903503418
    7. ' *(' → logprob: -14.26508903503418
    8. '  ' → logprob: -15.01508903503418
    9. '
' → logprob: -15.01508903503418
    10. '**' → logprob: -15.51508903503418

Token 209: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5766957402229309
    2. '(count' → logprob: -0.8266957402229309
    3. '   ' → logprob: -8.201695442199707
    4. '  ' → logprob: -9.076695442199707
    5. ' ' → logprob: -9.326695442199707
    6. '(int' → logprob: -9.826695442199707
    7. '       ' → logprob: -10.076695442199707
    8. '(cnt' → logprob: -10.201695442199707
    9. '(' → logprob: -11.076695442199707
    10. '           ' → logprob: -11.076695442199707

Token 210: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.002278007799759507
    2. '(count' → logprob: -6.252277851104736
    3. ' count' → logprob: -8.002278327941895
    4. '[count' → logprob: -11.377278327941895
    5. '<count' → logprob: -13.127278327941895
    6. '$count' → logprob: -15.002278327941895
    7. '	count' → logprob: -15.252278327941895
    8. '.count' → logprob: -15.502278327941895
    9. '=count' → logprob: -15.752278327941895
    10. ',count' → logprob: -16.377277374267578

Token 211: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16022655367851257
    2. ' -' → logprob: -1.910226583480835
    3. ' ' → logprob: -13.785226821899414
    4. '1' → logprob: -14.285226821899414
    5. '   ' → logprob: -14.660226821899414
    6. '  ' → logprob: -16.035226821899414
    7. '```' → logprob: -16.410226821899414
    8. '<|end|>' → logprob: -17.160226821899414
    9. '
' → logprob: -17.660226821899414
    10. ')' → logprob: -18.160226821899414

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.625911712646484
    4. '
' → logprob: -16.500911712646484
    5. '```' → logprob: -16.875911712646484
    6. '<|end|>' → logprob: -17.625911712646484
    7. '  ' → logprob: -17.750911712646484
    8. 'to' → logprob: -17.750911712646484
    9. ')' → logprob: -18.000911712646484
    10. ' ' → logprob: -19.125911712646484

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -17.062503814697266
    4. '
' → logprob: -17.437503814697266
    5. ')' → logprob: -17.500003814697266
    6. 'def' → logprob: -17.562503814697266
    7. 'from' → logprob: -17.625003814697266
    8. '   ' → logprob: -17.687503814697266
    9. '<|end|>' → logprob: -18.062503814697266
    10. '2' → logprob: -18.687503814697266

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020416523329913616
    2. ')//' → logprob: -6.377041816711426
    3. ' )' → logprob: -8.002041816711426
    4. '//' → logprob: -13.002041816711426
    5. ' //' → logprob: -13.627041816711426
    6. '   ' → logprob: -14.502041816711426
    7. ')
' → logprob: -15.752041816711426
    8. '```' → logprob: -16.12704086303711
    9. ')>>' → logprob: -16.50204086303711
    10. ')...' → logprob: -16.62704086303711

Token 215: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1271602362394333
    2. '//' → logprob: -2.1271603107452393
    3. '   ' → logprob: -8.87716007232666
    4. ')' → logprob: -10.50216007232666
    5. ' ' → logprob: -10.87716007232666
    6. ')//' → logprob: -11.87716007232666
    7. '```' → logprob: -12.00216007232666
    8. '    ' → logprob: -12.00216007232666
    9. ' ' → logprob: -12.25216007232666
    10. '0' → logprob: -12.50216007232666

Token 216: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.3750057220459
    4. '1' → logprob: -19.0000057220459
    5. '
' → logprob: -19.5000057220459
    6. '```' → logprob: -20.3750057220459
    7. '۲' → logprob: -21.8750057220459
    8. '    ' → logprob: -22.0000057220459
    9. '  ' → logprob: -22.1250057220459
    10. '       ' → logprob: -22.8750057220459

Token 217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -19.625
    4. '1' → logprob: -20.375
    5. '   ' → logprob: -20.75
    6. '```' → logprob: -21.125
    7. '۲' → logprob: -22.75
    8. '  ' → logprob: -23.875
    9. 'def' → logprob: -23.875
    10. '２' → logprob: -24.0

Token 218: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030669044703245163
    2. '
' → logprob: -3.6556689739227295
    3. 'return' → logprob: -6.155669212341309
    4. ' return' → logprob: -6.405669212341309
    5. '    
' → logprob: -8.155669212341309
    6. '	return' → logprob: -8.530669212341309
    7. ' 
' → logprob: -9.905669212341309
    8. '\n' → logprob: -11.280669212341309
    9. '  
' → logprob: -11.905669212341309
    10. '	
' → logprob: -12.155669212341309

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009895805269479752
    2. '
' → logprob: -7.3759894371032715
    3. 'return' → logprob: -8.12598991394043
    4. ' return' → logprob: -9.87598991394043
    5. '	return' → logprob: -11.75098991394043
    6. '    
' → logprob: -12.00098991394043
    7. '```' → logprob: -14.62598991394043
    8. ':return' → logprob: -14.87598991394043
    9. '   ' → logprob: -15.50098991394043
    10. '
' → logprob: -16.00098991394043

Token 220: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007434231229126453
    2. 'return' (adapté à ' return') → logprob: -5.007434368133545
    3. ' return' → logprob: -7.257434368133545
    4. '	return' → logprob: -11.507433891296387
    5. ' ' → logprob: -13.007433891296387
    6. '       ' → logprob: -14.882433891296387
    7. '
' → logprob: -15.132433891296387
    8. '```' → logprob: -15.132433891296387
    9. ':return' → logprob: -15.257433891296387
    10. '  ' → logprob: -16.007434844970703

Token 221: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6931474208831787
    2. 'total' → logprob: -0.6931474208831787
    3. '(total' → logprob: -16.693147659301758
    4. 'tot' → logprob: -17.193147659301758
    5. ' tot' → logprob: -17.568147659301758
    6. ' ' → logprob: -18.193147659301758
    7. '	total' → logprob: -18.193147659301758
    8. ' ' → logprob: -18.693147659301758
    9. ' tota' → logprob: -18.818147659301758
    10. 't' → logprob: -19.068147659301758

Token 222: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006862897425889969
    2. 'if' → logprob: -5.256863117218018
    3. '#' → logprob: -6.881863117218018
    4. '<|end|>' → logprob: -8.38186264038086
    5. '```' → logprob: -8.50686264038086
    6. '\' → logprob: -10.25686264038086
    7. '\n' → logprob: -10.38186264038086
    8. '
' → logprob: -10.75686264038086
    9. 'for' → logprob: -10.88186264038086
    10. 'n' → logprob: -11.75686264038086

Token 223: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4243449568748474
    2. '<|end|>' → logprob: -1.2993450164794922
    3. '#' → logprob: -3.049345016479492
    4. ':' → logprob: -5.424345016479492
    5. '[' → logprob: -5.799345016479492
    6. '```' → logprob: -5.924345016479492
    7. '<|end|>' → logprob: -5.924345016479492
    8. '.' → logprob: -6.049345016479492
    9. '(' → logprob: -6.299345016479492
    10. ')' → logprob: -6.299345016479492

Token 224: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005018736235797405
    2. 'main' → logprob: -5.755018711090088
    3. ' solve' → logprob: -6.880018711090088
    4. ' count' → logprob: -7.630018711090088
    5. ' compute' → logprob: -8.630019187927246
    6. ' calculate' → logprob: -9.630019187927246
    7. 'count' → logprob: -11.130019187927246
    8. ' process' → logprob: -11.130019187927246
    9. 'solve' → logprob: -11.130019187927246
    10. 'compute' → logprob: -11.255019187927246

Token 225: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.723352049040841e-06
    2. '():
' → logprob: -13.250004768371582
    3. ' ():' → logprob: -13.250004768371582
    4. '(' → logprob: -14.375004768371582
    5. '()' → logprob: -14.625004768371582
    6. '()>' → logprob: -17.125003814697266
    7. '(":' → logprob: -17.500003814697266
    8. '():
' → logprob: -17.875003814697266
    9. '(:' → logprob: -18.750003814697266
    10. ':' → logprob: -18.750003814697266

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030474625527858734
    2. ' line' → logprob: -6.253047466278076
    3. 'line' → logprob: -7.003047466278076
    4. '	line' → logprob: -9.503046989440918
    5. 'first' → logprob: -10.003046989440918
    6. ' first' → logprob: -10.253046989440918
    7. 'import' → logprob: -11.003046989440918
    8. ' lines' → logprob: -11.378046989440918
    9. '   ' → logprob: -12.253046989440918
    10. 'n' → logprob: -12.503046989440918

Token 227: ' first' (ID: 1577)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8310187458992004
    2. 'line' → logprob: -0.8310187458992004
    3. '   ' → logprob: -2.9560186862945557
    4. 'first' (adapté à ' first') → logprob: -3.2060186862945557
    5. 't' → logprob: -4.331018924713135
    6. 'T' → logprob: -4.831018924713135
    7. 'N' → logprob: -4.831018924713135
    8. ' n' → logprob: -6.206018924713135
    9. ' first' → logprob: -6.581018924713135
    10. ' line' → logprob: -6.831018924713135

Token 228: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.22607997059822083
    2. '_' → logprob: -1.6010799407958984
    3. 'line' → logprob: -7.976079940795898
    4. '_token' → logprob: -8.601079940795898
    5. ' _' → logprob: -9.976079940795898
    6. '_space' → logprob: -10.476079940795898
    7. '(' → logprob: -11.351079940795898
    8. '()' → logprob: -11.851079940795898
    9. 'Line' → logprob: -11.976079940795898
    10. ' line' → logprob: -12.226079940795898

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02109484188258648
    2. '=' → logprob: -3.896094799041748
    3. '   ' → logprob: -8.021095275878906
    4. '()' → logprob: -9.021095275878906
    5. '(' → logprob: -10.271095275878906
    6. ' ' → logprob: -10.396095275878906
    7. '_' → logprob: -11.396095275878906
    8. ')' → logprob: -12.146095275878906
    9. '_tokens' → logprob: -12.396095275878906
    10. '  ' → logprob: -12.521095275878906

Token 230: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1628446877002716
    2. ' read' → logprob: -1.9128446578979492
    3. 'stdin' → logprob: -6.037844657897949
    4. ' stdin' → logprob: -8.53784465789795
    5. '   ' → logprob: -10.91284465789795
    6. ' readline' → logprob: -12.28784465789795
    7. '	read' → logprob: -12.41284465789795
    8. '(stdin' → logprob: -12.91284465789795
    9. 'parse' → logprob: -13.16284465789795
    10. '(read' → logprob: -13.66284465789795

Token 231: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.027755212038755417
    2. '()' → logprob: -3.6527552604675293
    3. '_line' → logprob: -7.152755260467529
    4. '_' → logprob: -7.652755260467529
    5. 'line' → logprob: -9.527754783630371
    6. '()
' → logprob: -10.027754783630371
    7. 'input' → logprob: -10.402754783630371
    8. ')' → logprob: -11.027754783630371
    9. '())' → logprob: -11.652754783630371
    10. '_in' → logprob: -12.152754783630371

Token 232: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014478032244369388
    2. '().' → logprob: -9.000144958496094
    3. '()
' → logprob: -11.000144958496094
    4. '())' → logprob: -13.250144958496094
    5. '()

' → logprob: -13.625144958496094
    6. '(' → logprob: -14.375144958496094
    7. '();' → logprob: -15.125144958496094
    8. '()`' → logprob: -15.875144958496094
    9. '()"' → logprob: -16.125144958496094
    10. ' ()' → logprob: -16.125144958496094

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005274076480418444
    2. 'second' → logprob: -6.630274295806885
    3. ' second' → logprob: -6.755274295806885
    4. 'n' → logprob: -6.755274295806885
    5. 'arr' → logprob: -7.505274295806885
    6. ' n' → logprob: -7.630274295806885
    7. ' arr' → logprob: -9.255273818969727
    8. 'A' → logprob: -9.505273818969727
    9. 'array' → logprob: -9.505273818969727
    10. 'N' → logprob: -9.630273818969727

Token 234: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.16503070294857025
    2. 'n' → logprob: -2.4150307178497314
    3. '   ' → logprob: -2.7900307178497314
    4. ' N' → logprob: -7.040030479431152
    5. ' n' → logprob: -8.540030479431152
    6. '```' → logprob: -9.165030479431152
    7. 'H' → logprob: -10.540030479431152
    8. 'if' → logprob: -10.790030479431152
    9. '    
' → logprob: -10.915030479431152
    10. ' ' → logprob: -11.665030479431152

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008999044075608253
    2. ' =' → logprob: -7.375899791717529
    3. '=' → logprob: -8.375900268554688
    4. ' ,' → logprob: -10.250900268554688
    5. ')' → logprob: -12.750900268554688
    6. ',N' → logprob: -13.750900268554688
    7. '   ' → logprob: -14.250900268554688
    8. ',
' → logprob: -14.750900268554688
    9. '_,' → logprob: -14.750900268554688
    10. ',line' → logprob: -14.875900268554688

Token 236: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.38687169551849365
    2. ' M' → logprob: -1.1368716955184937
    3. ' ' → logprob: -14.511871337890625
    4. ' ' → logprob: -16.511871337890625
    5. ' М' → logprob: -17.261871337890625
    6. '*M' → logprob: -17.511871337890625
    7. '=' → logprob: -17.636871337890625
    8. 'K' → logprob: -18.136871337890625
    9. ')' → logprob: -18.136871337890625
    10. ' 
' → logprob: -18.261871337890625

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687241077423096
    2. ' =' → logprob: -1.136872410774231
    3. ',' → logprob: -14.261872291564941
    4. ')' → logprob: -14.386872291564941
    5. '=int' → logprob: -17.261873245239258
    6. '=line' → logprob: -17.386873245239258
    7. ')=' → logprob: -17.511873245239258
    8. '   ' → logprob: -17.636873245239258
    9. ' =
' → logprob: -18.386873245239258
    10. ' ' → logprob: -18.511873245239258

Token 238: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.0789012461900711
    2. 'parse' → logprob: -2.5789012908935547
    3. '=parse' → logprob: -12.453901290893555
    4. ' map' → logprob: -12.953901290893555
    5. '*' → logprob: -13.203901290893555
    6. '(parse' → logprob: -13.953901290893555
    7. '	parse' → logprob: -14.203901290893555
    8. ' *' → logprob: -14.328901290893555
    9. '_parse' → logprob: -14.828901290893555
    10. ' ' → logprob: -15.203901290893555

Token 239: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0019711002241820097
    2. 'first' → logprob: -6.251971244812012
    3. '(first' → logprob: -10.126971244812012
    4. '[first' → logprob: -13.876971244812012
    5. ' first' → logprob: -14.376971244812012
    6. '_(' → logprob: -14.751971244812012
    7. '_' → logprob: -15.376971244812012
    8. '_second' → logprob: -16.376970291137695
    9. '```' → logprob: -17.001970291137695
    10. '_FIRST' → logprob: -17.251970291137695

Token 240: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.320199877838604e-07
    2. 'line' → logprob: -14.875
    3. '_' → logprob: -17.75
    4. '_LINE' → logprob: -19.125
    5. '_word' → logprob: -20.0
    6. 'Line' → logprob: -20.25
    7. ' line' → logprob: -20.625
    8. '_lin' → logprob: -20.875
    9. '_Line' → logprob: -21.625
    10. '_lines' → logprob: -22.125

Token 241: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -4.3226136767771095e-05
    2. '(' → logprob: -10.375042915344238
    3. '(read' → logprob: -11.875042915344238
    4. '(second' → logprob: -12.500042915344238
    5. ' (' → logprob: -14.750042915344238
    6. '(line' → logprob: -15.125042915344238
    7. '(next' → logprob: -15.375042915344238
    8. 'first' → logprob: -15.750042915344238
    9. '(
' → logprob: -17.125043869018555
    10. '()' → logprob: -17.250043869018555

Token 242: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.01448607537895441
    2. '_' → logprob: -4.264486312866211
    3. 'line' → logprob: -9.014486312866211
    4. '_)' → logprob: -9.264486312866211
    5. ')_' → logprob: -9.639486312866211
    6. ')' → logprob: -11.139486312866211
    7. ' _' → logprob: -11.764486312866211
    8. '_l' → logprob: -12.264486312866211
    9. '__' → logprob: -13.014486312866211
    10. '_
' → logprob: -13.264486312866211

Token 243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.750001907348633
    4. ' )' → logprob: -16.250001907348633
    5. ')#' → logprob: -18.125001907348633
    6. ')`' → logprob: -18.250001907348633
    7. '),' → logprob: -18.500001907348633
    8. '))' → logprob: -19.000001907348633
    9. ').' → logprob: -19.375001907348633
    10. '()' → logprob: -19.500001907348633

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06937826424837112
    2. 'A' → logprob: -2.94437837600708
    3. 'arr' → logprob: -5.06937837600708
    4. ' A' → logprob: -5.44437837600708
    5. 'array' → logprob: -6.56937837600708
    6. 'second' → logprob: -6.69437837600708
    7. 'a' → logprob: -8.069377899169922
    8. '
' → logprob: -8.819377899169922
    9. ' second' → logprob: -8.819377899169922
    10. ' array' → logprob: -9.069377899169922

Token 245: ' array' (ID: 2644)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13104799389839172
    2. 'arr' → logprob: -2.8810479640960693
    3. '   ' → logprob: -3.3810479640960693
    4. 'array' (adapté à ' array') → logprob: -3.7560479640960693
    5. 'second' → logprob: -5.006048202514648
    6. 'line' → logprob: -6.381048202514648
    7. 'a' → logprob: -7.506048202514648
    8. ' A' → logprob: -8.256048202514648
    9. 'raw' → logprob: -10.506048202514648
    10. 'data' → logprob: -10.506048202514648

Token 246: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1896592676639557
    2. '=' → logprob: -2.064659357070923
    3. '_line' → logprob: -3.314659357070923
    4. '_' → logprob: -4.689659118652344
    5. '   ' → logprob: -8.564659118652344
    6. '_lines' → logprob: -10.189659118652344
    7. '=line' → logprob: -10.439659118652344
    8. '_=' → logprob: -10.939659118652344
    9. ' line' → logprob: -11.189659118652344
    10. 'Line' → logprob: -11.439659118652344

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395956993103
    2. '=' → logprob: -0.8259395956993103
    3. ' ' → logprob: -16.700939178466797
    4. '   ' → logprob: -17.075939178466797
    5. 's' → logprob: -18.200939178466797
    6. '_' → logprob: -18.200939178466797
    7. ',' → logprob: -19.200939178466797
    8. ')' → logprob: -19.325939178466797
    9. ' ' → logprob: -19.450939178466797
    10. '=line' → logprob: -19.575939178466797

Token 248: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0007146967691369355
    2. ' read' → logprob: -7.2507147789001465
    3. 'stdin' → logprob: -12.375714302062988
    4. '   ' → logprob: -15.000714302062988
    5. '	read' → logprob: -16.000715255737305
    6. '(read' → logprob: -16.625715255737305
    7. '.read' → logprob: -18.750715255737305
    8. 'reads' → logprob: -19.250715255737305
    9. 'Read' → logprob: -19.625715255737305
    10. '_read' → logprob: -19.625715255737305

Token 249: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.000681457226164639
    2. 'line' → logprob: -7.500681400299072
    3. 'input' → logprob: -9.12568187713623
    4. 'put' → logprob: -11.50068187713623
    5. '()' → logprob: -12.87568187713623
    6. '_line' → logprob: -13.37568187713623
    7. 'in' → logprob: -13.50068187713623
    8. '()
' → logprob: -13.62568187713623
    9. 'array' → logprob: -14.12568187713623
    10. '_array' → logprob: -14.25068187713623

Token 250: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002512285253033042
    2. '()
' → logprob: -6.002512454986572
    3. '   ' → logprob: -10.752511978149414
    4. ')' → logprob: -11.877511978149414
    5. '())' → logprob: -13.002511978149414
    6. '()\' → logprob: -13.627511978149414
    7. '(' → logprob: -13.752511978149414
    8. '().' → logprob: -13.752511978149414
    9. '()

' → logprob: -14.252511978149414
    10. '()<' → logprob: -14.877511978149414

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35224929451942444
    2. 'A' → logprob: -1.227249264717102
    3. ' A' → logprob: -5.6022491455078125
    4. 'arr' → logprob: -10.727249145507812
    5. 'array' → logprob: -10.977249145507812
    6. '<|end|>' → logprob: -10.977249145507812
    7. '```' → logprob: -11.602249145507812
    8. '	A' → logprob: -12.102249145507812
    9. 'a' → logprob: -12.227249145507812
    10. '  ' → logprob: -12.227249145507812

Token 252: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0004094619944225997
    2. 'arr' → logprob: -8.000409126281738
    3. ' A' → logprob: -10.125409126281738
    4. 'array' → logprob: -11.250409126281738
    5. '   ' → logprob: -11.500409126281738
    6. 'a' → logprob: -12.000409126281738
    7. 'lst' → logprob: -13.250409126281738
    8. 'data' → logprob: -14.250409126281738
    9. '	A' → logprob: -14.875409126281738
    10. '```' → logprob: -15.000409126281738

Token 253: '_raw' (ID: 36128)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407740354537964
    2. '=' → logprob: -0.9740774035453796
    3. '_' → logprob: -15.474077224731445
    4. ')' → logprob: -17.099077224731445
    5. ' ' → logprob: -17.224077224731445
    6. ',' → logprob: -17.224077224731445
    7. ' =
' → logprob: -17.224077224731445
    8. '＝' → logprob: -17.474077224731445
    9. '=parse' → logprob: -17.974077224731445
    10. '=[]' → logprob: -18.224077224731445

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141421258449554
    2. '=' → logprob: -1.7014142274856567
    3. '_' → logprob: -15.326414108276367
    4. ',' → logprob: -15.326414108276367
    5. ')' → logprob: -15.451414108276367
    6. ' ' → logprob: -15.701414108276367
    7. '[' → logprob: -16.951414108276367
    8. '   ' → logprob: -17.076414108276367
    9. ' =
' → logprob: -17.201414108276367
    10. '＝' → logprob: -17.201414108276367

Token 255: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.20141538977622986
    2. ' parse' → logprob: -1.7014154195785522
    3. '(parse' → logprob: -14.076415061950684
    4. '=parse' → logprob: -14.326415061950684
    5. '	parse' → logprob: -14.701415061950684
    6. '_parse' → logprob: -16.576416015625
    7. ' ' → logprob: -16.701416015625
    8. '   ' → logprob: -16.826416015625
    9. 'array' → logprob: -17.201416015625
    10. ' ' → logprob: -17.451416015625

Token 256: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: 0.0
    2. 'array' → logprob: -17.375
    3. 'Array' → logprob: -21.5
    4. '_' → logprob: -22.25
    5. '_ARRAY' → logprob: -22.375
    6. '_arrays' → logprob: -23.5
    7. '_Array' → logprob: -23.75
    8. '_first' → logprob: -24.0
    9. '$array' → logprob: -24.0
    10. 'rray' → logprob: -24.5

Token 257: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.001183204003609717
    2. '_array' → logprob: -6.751183032989502
    3. 'array' → logprob: -11.37618350982666
    4. 'line' → logprob: -13.87618350982666
    5. '_raw' → logprob: -14.50118350982666
    6. '_' → logprob: -17.001182556152344
    7. '_lines' → logprob: -18.126182556152344
    8. 'Line' → logprob: -18.501182556152344
    9. '_LINE' → logprob: -18.626182556152344
    10. '```' → logprob: -18.876182556152344

Token 258: '(array' (ID: 13176)
  Prédit: '(array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(array' → logprob: -7.107425062713446e-06
    2. 'array' → logprob: -12.250006675720215
    3. '[array' → logprob: -13.250006675720215
    4. ',array' → logprob: -15.375006675720215
    5. '=array' → logprob: -16.00000762939453
    6. '(arr' → logprob: -16.12500762939453
    7. '(' → logprob: -17.12500762939453
    8. '(object' → logprob: -18.87500762939453
    9. '$array' → logprob: -19.00000762939453
    10. ' array' → logprob: -20.00000762939453

Token 259: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.8889261304575484e-06
    2. 'line' → logprob: -13.250003814697266
    3. '_raw' → logprob: -13.750003814697266
    4. ')' → logprob: -14.375003814697266
    5. ')_' → logprob: -15.625003814697266
    6. '[line' → logprob: -16.000003814697266
    7. '_LINE' → logprob: -16.625003814697266
    8. '_lin' → logprob: -17.000003814697266
    9. '_' → logprob: -17.250003814697266
    10. 'Line' → logprob: -17.500003814697266

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026441827416419983
    2. ')
' → logprob: -3.651441812515259
    3. '   ' → logprob: -8.90144157409668
    4. ')
' → logprob: -13.15144157409668
    5. ')

' → logprob: -13.77644157409668
    6. ' )' → logprob: -14.65144157409668
    7. '<|end|>' → logprob: -14.77644157409668
    8. '
' → logprob: -14.90144157409668
    9. ' ' → logprob: -15.90144157409668
    10. '    
' → logprob: -16.27644157409668

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2539416253566742
    2. 'A' → logprob: -1.5039416551589966
    3. ' A' → logprob: -6.253941535949707
    4. '    
' → logprob: -10.628941535949707
    5. '
' → logprob: -11.003941535949707
    6. '```' → logprob: -11.003941535949707
    7. ' ' → logprob: -11.378941535949707
    8. '	A' → logprob: -12.378941535949707
    9. '  ' → logprob: -12.503941535949707
    10. '<|end|>' → logprob: -12.628941535949707

Token 262: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0029728300869464874
    2. ' A' → logprob: -6.002972602844238
    3. '   ' → logprob: -7.627972602844238
    4. ' ' → logprob: -12.502972602844238
    5. '```' → logprob: -13.377972602844238
    6. '  ' → logprob: -14.002972602844238
    7. '#' → logprob: -14.377972602844238
    8. '
' → logprob: -14.502972602844238
    9. '	A' → logprob: -15.065472602844238
    10. '    
' → logprob: -15.127972602844238

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3414915204048157
    2. '=' → logprob: -1.841491460800171
    3. '_raw' → logprob: -2.466491460800171
    4. '_' → logprob: -3.091491460800171
    5. '=np' → logprob: -9.09149169921875
    6. '_array' → logprob: -9.59149169921875
    7. '=_' → logprob: -9.71649169921875
    8. '_numpy' → logprob: -9.71649169921875
    9. '_=' → logprob: -9.84149169921875
    10. '_arr' → logprob: -11.09149169921875

Token 264: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.029754657298326492
    2. 'to' → logprob: -3.529754638671875
    3. ' np' → logprob: -12.529754638671875
    4. 'np' → logprob: -14.404754638671875
    5. '	to' → logprob: -18.404754638671875
    6. '(to' → logprob: -19.154754638671875
    7. ' ' → logprob: -19.529754638671875
    8. ' ' → logprob: -20.154754638671875
    9. 't' → logprob: -20.279754638671875
    10. ',to' → logprob: -20.529754638671875

Token 265: '_numpy' (ID: 98421)
  Prédit: '_numpy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numpy' → logprob: -1.5213274309644476e-05
    2. 'numpy' → logprob: -11.125015258789062
    3. '_np' → logprob: -15.625015258789062
    4. '_numeric' → logprob: -15.750015258789062
    5. 'umpy' → logprob: -16.750015258789062
    6. 'np' → logprob: -18.500015258789062
    7. 's' → logprob: -18.875015258789062
    8. 'N' → logprob: -18.875015258789062
    9. '```' → logprob: -19.875015258789062
    10. '_nan' → logprob: -20.375015258789062

Token 266: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -4.60414821645827e-06
    2. 'array' → logprob: -13.000004768371582
    3. '_arr' → logprob: -14.250004768371582
    4. 'Array' → logprob: -14.250004768371582
    5. '_arrays' → logprob: -15.000004768371582
    6. '_' → logprob: -15.375004768371582
    7. '```' → logprob: -15.750004768371582
    8. '_ARRAY' → logprob: -17.500003814697266
    9. 'A' → logprob: -17.500003814697266
    10. ' array' → logprob: -17.750003814697266

Token 267: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -14.625005722045898
    4. '((' → logprob: -17.6250057220459
    5. ')(' → logprob: -17.8750057220459
    6. '(
' → logprob: -18.5000057220459
    7. '```' → logprob: -18.5000057220459
    8. '(arr' → logprob: -19.3750057220459
    9. ')' → logprob: -19.3750057220459
    10. '(a' → logprob: -19.5000057220459

Token 268: '_raw' (ID: 36128)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.959636033978313e-05
    2. ')
' → logprob: -10.250089645385742
    3. '[' → logprob: -10.250089645385742
    4. '(A' → logprob: -11.875089645385742
    5. '[A' → logprob: -12.750089645385742
    6. ' )' → logprob: -13.375089645385742
    7. 'A' → logprob: -13.500089645385742
    8. '[])' → logprob: -14.625089645385742
    9. 'raw' → logprob: -14.750089645385742
    10. '))' → logprob: -14.750089645385742

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.000001907348633
    4. '   ' → logprob: -17.750001907348633
    5. ')

' → logprob: -18.000001907348633
    6. '),' → logprob: -18.125001907348633
    7. '))' → logprob: -18.125001907348633
    8. ')`' → logprob: -18.625001907348633
    9. ').' → logprob: -19.125001907348633
    10. ')}' → logprob: -19.250001907348633

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01632244512438774
    2. 'cum' → logprob: -4.266322612762451
    3. 'c' → logprob: -7.141322612762451
    4. ' cum' → logprob: -7.266322612762451
    5. '
' → logprob: -7.766322612762451
    6. '    
' → logprob: -9.266322135925293
    7. '```' → logprob: -9.766322135925293
    8. 'A' → logprob: -11.391322135925293
    9. 'rest' → logprob: -11.891322135925293
    10. '	c' → logprob: -11.891322135925293

Token 271: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.30504730343818665
    2. '   ' → logprob: -1.5550472736358643
    3. 'c' → logprob: -3.3050472736358643
    4. 'prefix' → logprob: -4.805047512054443
    5. ' cum' → logprob: -6.305047512054443
    6. 'rema' → logprob: -6.555047512054443
    7. 'rem' → logprob: -6.680047512054443
    8. 're' → logprob: -7.680047512054443
    9. 'S' → logprob: -8.055047035217285
    10. 'A' → logprob: -8.805047035217285

Token 272: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.007054456975311041
    2. 'rema' → logprob: -5.757054328918457
    3. '_rem' → logprob: -5.882054328918457
    4. '_arr' → logprob: -7.257054328918457
    5. 'arr' → logprob: -9.507054328918457
    6. '_sum' → logprob: -9.507054328918457
    7. 're' → logprob: -9.632054328918457
    8. '_' → logprob: -10.382054328918457
    9. '_r' → logprob: -10.632054328918457
    10. ' =' → logprob: -10.882054328918457

Token 273: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -8.006006828509271e-05
    2. 'm' → logprob: -10.625080108642578
    3. 'main' → logprob: -10.625080108642578
    4. 'mainder' → logprob: -10.750080108642578
    5. 'mar' → logprob: -13.750080108642578
    6. 'rema' → logprob: -13.875080108642578
    7. 'ms' → logprob: -13.875080108642578
    8. 'man' → logprob: -14.125080108642578
    9. 'mad' → logprob: -14.125080108642578
    10. '```' → logprob: -14.250080108642578

Token 274: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.0055096689611673355
    2. 'nders' → logprob: -5.255509853363037
    3. 'inder' → logprob: -8.255509376525879
    4. 'unders' → logprob: -12.130509376525879
    5. 'inde' → logprob: -13.005509376525879
    6. 'ind' → logprob: -13.630509376525879
    7. 'ders' → logprob: -13.755509376525879
    8. '```' → logprob: -14.005509376525879
    9. 'iners' → logprob: -14.130509376525879
    10. 'nder' → logprob: -14.130509376525879

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1303604692220688
    2. '=' → logprob: -2.1303603649139404
    3. '_arr' → logprob: -6.0053606033325195
    4. '_' → logprob: -7.8803606033325195
    5. '(' → logprob: -7.8803606033325195
    6. '(A' → logprob: -9.75536060333252
    7. 's' → logprob: -10.00536060333252
    8. '=A' → logprob: -10.63036060333252
    9. '_array' → logprob: -11.00536060333252
    10. ')' → logprob: -11.25536060333252

Token 276: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.31326186656951904
    2. 'compute' → logprob: -1.313261866569519
    3. '   ' → logprob: -16.563261032104492
    4. '.compute' → logprob: -16.813261032104492
    5. '_compute' → logprob: -17.313261032104492
    6. 'calculate' → logprob: -18.313261032104492
    7. '(com' → logprob: -18.938261032104492
    8. ' calculate' → logprob: -18.938261032104492
    9. ' ' → logprob: -19.063261032104492
    10. 'computer' → logprob: -19.938261032104492

Token 277: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.9361264946837764e-07
    2. 'cum' → logprob: -15.875
    3. '_' → logprob: -17.5
    4. '_re' → logprob: -20.875
    5. '```' → logprob: -21.125
    6. '(c' → logprob: -21.25
    7. ' cum' → logprob: -21.75
    8. '_sum' → logprob: -22.5
    9. '\' → logprob: -22.5
    10. '_array' → logprob: -22.625

Token 278: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.06528009474277496
    2. '_re' → logprob: -2.8152801990509033
    3. 'cum' → logprob: -6.065279960632324
    4. '_' → logprob: -7.690279960632324
    5. '_um' → logprob: -8.190279960632324
    6. '_c' → logprob: -9.315279960632324
    7. 'umulative' → logprob: -9.815279960632324
    8. '_r' → logprob: -10.565279960632324
    9. 're' → logprob: -10.815279960632324
    10. 'umsum' → logprob: -11.315279960632324

Token 279: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00010926496179308742
    2. 'rema' → logprob: -9.250109672546387
    3. 're' → logprob: -11.875109672546387
    4. 'ema' → logprob: -12.375109672546387
    5. 'ma' → logprob: -14.125109672546387
    6. '_rem' → logprob: -15.500109672546387
    7. '_' → logprob: -16.00010871887207
    8. 'ream' → logprob: -16.00010871887207
    9. 'umer' → logprob: -16.37510871887207
    10. 's' → logprob: -16.50010871887207

Token 280: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -4.246537173457909e-06
    2. 'mainder' → logprob: -13.875003814697266
    3. 'm' → logprob: -14.000003814697266
    4. 'nders' → logprob: -14.375003814697266
    5. 'main' → logprob: -14.875003814697266
    6. '(' → logprob: -15.375003814697266
    7. 'inders' → logprob: -15.500003814697266
    8. '(ma' → logprob: -15.625003814697266
    9. 'mma' → logprob: -15.875003814697266
    10. 'maids' → logprob: -16.250003814697266

Token 281: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.002438789699226618
    2. 'nders' → logprob: -6.127439022064209
    3. 'inder' → logprob: -8.87743854522705
    4. 'unders' → logprob: -10.12743854522705
    5. 'anders' → logprob: -10.50243854522705
    6. 'inde' → logprob: -11.12743854522705
    7. '```' → logprob: -11.62743854522705
    8. 'ind' → logprob: -12.25243854522705
    9. 'a' → logprob: -12.50243854522705
    10. 'ma' → logprob: -12.87743854522705

Token 282: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -16.125
    3. '(' → logprob: -16.375
    4. '```' → logprob: -18.625
    5. '(C' → logprob: -19.5
    6. '(arr' → logprob: -19.625
    7. '(
' → logprob: -19.625
    8. 'A' → logprob: -20.375
    9. '((' → logprob: -20.375
    10. '(array' → logprob: -21.25

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ',M' → logprob: -12.125007629394531
    3. ' ,' → logprob: -13.500007629394531
    4. ',
' → logprob: -14.875007629394531
    5. ')' → logprob: -15.000007629394531
    6. ',A' → logprob: -16.37500762939453
    7. '   ' → logprob: -16.75000762939453
    8. '(' → logprob: -17.00000762939453
    9. '(M' → logprob: -17.62500762939453
    10. ',N' → logprob: -17.75000762939453

Token 284: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02324547804892063
    2. ' M' → logprob: -3.7732455730438232
    3. ')' → logprob: -17.148244857788086
    4. '   ' → logprob: -17.648244857788086
    5. ' ' → logprob: -18.398244857788086
    6. '	M' → logprob: -20.523244857788086
    7. '```' → logprob: -20.523244857788086
    8. '[M' → logprob: -20.648244857788086
    9. '    ' → logprob: -21.273244857788086
    10. '
' → logprob: -21.398244857788086

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. ')
' → logprob: -12.250008583068848
    3. '   ' → logprob: -12.500008583068848
    4. ' )' → logprob: -15.500008583068848
    5. ')`' → logprob: -18.375009536743164
    6. '))' → logprob: -18.875009536743164
    7. ')

' → logprob: -19.125009536743164
    8. '[' → logprob: -19.250009536743164
    9. '),' → logprob: -19.625009536743164
    10. ')#' → logprob: -19.875009536743164

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01805991493165493
    2. 'counts' → logprob: -4.143059730529785
    3. 'counter' → logprob: -7.268059730529785
    4. ' counts' → logprob: -7.518059730529785
    5. 'count' → logprob: -7.643059730529785
    6. '    
' → logprob: -9.768059730529785
    7. 'rema' → logprob: -10.018059730529785
    8. '```' → logprob: -10.143059730529785
    9. 're' → logprob: -10.268059730529785
    10. 'rem' → logprob: -10.518059730529785

Token 287: ' remainder' (ID: 47056)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.03199272230267525
    2. 'counter' → logprob: -3.7819926738739014
    3. 're' → logprob: -5.5319929122924805
    4. 'rem' → logprob: -6.2819929122924805
    5. 'rema' → logprob: -7.0319929122924805
    6. 'count' → logprob: -7.1569929122924805
    7. '   ' → logprob: -7.5319929122924805
    8. 'freq' → logprob: -8.15699291229248
    9. 'cnt' → logprob: -8.15699291229248
    10. ' counts' → logprob: -9.53199291229248

Token 288: '_counts' (ID: 61971)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47542884945869446
    2. '_counts' → logprob: -0.9754288196563721
    3. '_counter' → logprob: -6.975429058074951
    4. '_s' → logprob: -8.600428581237793
    5. 'counts' → logprob: -8.850428581237793
    6. '_count' → logprob: -9.725428581237793
    7. '_c' → logprob: -11.100428581237793
    8. '_' → logprob: -11.725428581237793
    9. 'counter' → logprob: -12.975428581237793
    10. 'count' → logprob: -13.975428581237793

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. ')' → logprob: -15.688261985778809
    4. '=count' → logprob: -15.938261985778809
    5. '＝' → logprob: -17.188262939453125
    6. '(' → logprob: -17.438262939453125
    7. ' ' → logprob: -17.688262939453125
    8. ')=' → logprob: -17.813262939453125
    9. ' =
' → logprob: -18.063262939453125
    10. ',' → logprob: -18.063262939453125

Token 290: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0002613358374219388
    2. ' count' → logprob: -8.250261306762695
    3. 'counter' → logprob: -17.250261306762695
    4. '(count' → logprob: -21.125261306762695
    5. 'Counter' → logprob: -22.250261306762695
    6. '	count' → logprob: -23.375261306762695
    7. 'Count' → logprob: -24.000261306762695
    8. 'counts' → logprob: -24.000261306762695
    9. '=count' → logprob: -24.250261306762695
    10. '   ' → logprob: -24.250261306762695

Token 291: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.019932197406888008
    2. '(c' → logprob: -4.269932270050049
    3. 're' → logprob: -5.644932270050049
    4. '(re' → logprob: -6.519932270050049
    5. '_(' → logprob: -7.644932270050049
    6. 's' → logprob: -8.89493179321289
    7. 'rema' → logprob: -9.39493179321289
    8. '(' → logprob: -11.14493179321289
    9. '_' → logprob: -11.76993179321289
    10. ' (' → logprob: -12.26993179321289

Token 292: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.0005902059492655098
    2. 'rema' → logprob: -7.5005903244018555
    3. 'mainder' → logprob: -10.750590324401855
    4. 'main' → logprob: -12.500590324401855
    5. 'mma' → logprob: -13.500590324401855
    6. 'mai' → logprob: -13.500590324401855
    7. 'mares' → logprob: -13.625590324401855
    8. '(ma' → logprob: -13.625590324401855
    9. 'm' → logprob: -13.875590324401855
    10. 'ema' → logprob: -14.000590324401855

Token 293: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.005041271448135376
    2. 'nders' → logprob: -5.380041122436523
    3. 'inder' → logprob: -8.005041122436523
    4. 'ders' → logprob: -11.005041122436523
    5. '```' → logprob: -11.005041122436523
    6. 'anders' → logprob: -11.380041122436523
    7. 'a' → logprob: -11.630041122436523
    8. 'unders' → logprob: -12.255041122436523
    9. 'inde' → logprob: -12.380041122436523
    10. 'iders' → logprob: -12.505041122436523

Token 294: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. ' (' → logprob: -18.625
    4. '(C' → logprob: -20.0
    5. 'c' → logprob: -21.0
    6. '(arr' → logprob: -21.125
    7. '(count' → logprob: -21.375
    8. 'cum' → logprob: -21.5
    9. '(com' → logprob: -21.625
    10. '(
' → logprob: -21.625

Token 295: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00673135370016098
    2. 'cum' → logprob: -5.1317315101623535
    3. 'ount' → logprob: -7.3817315101623535
    4. 'umsum' → logprob: -10.006731033325195
    5. 'om' → logprob: -10.631731033325195
    6. 'ounter' → logprob: -11.256731033325195
    7. 'ont' → logprob: -11.506731033325195
    8. 'umulative' → logprob: -11.506731033325195
    9. 'ounters' → logprob: -11.631731033325195
    10. 'arr' → logprob: -11.756731033325195

Token 296: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.039716631174087524
    2. 'rema' → logprob: -3.2897167205810547
    3. 'ema' → logprob: -6.539716720581055
    4. 're' → logprob: -9.039716720581055
    5. 'ma' → logprob: -10.039716720581055
    6. '_rem' → logprob: -11.289716720581055
    7. 'mainder' → logprob: -11.414716720581055
    8. '_' → logprob: -11.664716720581055
    9. 'em' → logprob: -11.789716720581055
    10. ' re' → logprob: -12.789716720581055

Token 297: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.0007038529147394001
    2. 'inders' → logprob: -7.500703811645508
    3. 'nders' → logprob: -10.000703811645508
    4. 'anders' → logprob: -10.125703811645508
    5. 'mainder' → logprob: -10.625703811645508
    6. 'a' → logprob: -10.750703811645508
    7. 'm' → logprob: -12.375703811645508
    8. 'rema' → logprob: -13.250703811645508
    9. 'main' → logprob: -13.625703811645508
    10. '```' → logprob: -13.875703811645508

Token 298: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.22914282977581024
    2. 'nders' → logprob: -1.6041427850723267
    3. 'anders' → logprob: -6.354142665863037
    4. 'a' → logprob: -6.604142665863037
    5. 'ders' → logprob: -8.104143142700195
    6. 'inder' → logprob: -8.729143142700195
    7. 'nder' → logprob: -10.479143142700195
    8. 'aders' → logprob: -10.604143142700195
    9. 'uders' → logprob: -10.729143142700195
    10. 'unders' → logprob: -10.729143142700195

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004350797680672258
    2. ')
' → logprob: -7.750434875488281
    3. '())' → logprob: -12.875434875488281
    4. '()' → logprob: -14.125434875488281
    5. ' )' → logprob: -14.875434875488281
    6. '   ' → logprob: -14.875434875488281
    7. ')

' → logprob: -16.00043487548828
    8. ')`' → logprob: -16.50043487548828
    9. ')
' → logprob: -16.62543487548828
    10. '))' → logprob: -16.62543487548828

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047260165214538574
    2. 'print' → logprob: -3.297260284423828
    3. 'result' → logprob: -4.922260284423828
    4. 'total' → logprob: -6.547260284423828
    5. '```' → logprob: -8.297260284423828
    6. '
' → logprob: -9.672260284423828
    7. ' print' → logprob: -9.922260284423828
    8. '    
' → logprob: -10.172260284423828
    9. ' result' → logprob: -10.547260284423828
    10. 'answer' → logprob: -11.297260284423828

Token 301: ' combinations' (ID: 43835)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11775275319814682
    2. 'print' → logprob: -2.61775279045105
    3. 'total' → logprob: -3.86775279045105
    4. 'answer' → logprob: -4.367752552032471
    5. '   ' → logprob: -5.617752552032471
    6. 'count' → logprob: -7.992752552032471
    7. 'ans' → logprob: -8.117753028869629
    8. 'res' → logprob: -9.242753028869629
    9. ' result' → logprob: -9.867753028869629
    10. '```' → logprob: -9.867753028869629

Token 302: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10325098037719727
    2. ' =' → logprob: -3.3532509803771973
    3. '_from' → logprob: -3.3532509803771973
    4. '=' → logprob: -3.7282509803771973
    5. '_counts' → logprob: -5.728250980377197
    6. '_=' → logprob: -7.728250980377197
    7. '_total' → logprob: -8.978250503540039
    8. 'from' → logprob: -9.228250503540039
    9. '_for' → logprob: -10.103250503540039
    10. '(' → logprob: -10.228250503540039

Token 303: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.00861456897109747
    2. ' calculate' → logprob: -4.758614540100098
    3. '   ' → logprob: -19.008615493774414
    4. '.calculate' → logprob: -20.008615493774414
    5. 'Calculate' → logprob: -21.508615493774414
    6. 'alculate' → logprob: -21.508615493774414
    7. ' ' → logprob: -21.758615493774414
    8. '
' → logprob: -23.008615493774414
    9. '  ' → logprob: -23.008615493774414
    10. ' ' → logprob: -23.258615493774414

Token 304: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.9146995327901095e-05
    2. 'com' → logprob: -10.875019073486328
    3. '(com' → logprob: -17.375019073486328
    4. 's' → logprob: -18.125019073486328
    5. '_' → logprob: -18.625019073486328
    6. '_from' → logprob: -19.500019073486328
    7. '_c' → logprob: -19.500019073486328
    8. '\' → logprob: -19.750019073486328
    9. '_comb' → logprob: -20.000019073486328
    10. '_con' → logprob: -20.375019073486328

Token 305: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0014723646454513073
    2. 'b' → logprob: -7.126472473144531
    3. 'inations' → logprob: -7.376472473144531
    4. 'bon' → logprob: -11.501472473144531
    5. 'com' → logprob: -11.626472473144531
    6. 'bin' → logprob: -12.376472473144531
    7. 'ations' → logprob: -12.876472473144531
    8. '_b' → logprob: -13.001472473144531
    9. 'utations' → logprob: -13.501472473144531
    10. '_' → logprob: -13.501472473144531

Token 306: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.9361264946837764e-07
    2. 'from' → logprob: -15.875
    3. '_FROM' → logprob: -17.25
    4. '_com' → logprob: -18.625
    5. '_for' → logprob: -18.875
    6. '```' → logprob: -19.25
    7. '[' → logprob: -19.625
    8. 'From' → logprob: -20.0
    9. '`' → logprob: -20.25
    10. '_From' → logprob: -20.375

Token 307: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0004883344518020749
    2. 'counts' → logprob: -7.62548828125
    3. 'count' → logprob: -15.50048828125
    4. ' counts' → logprob: -16.75048828125
    5. '(count' → logprob: -17.37548828125
    6. 'com' → logprob: -18.12548828125
    7. 'Counts' → logprob: -18.37548828125
    8. 'dict' → logprob: -18.50048828125
    9. '_com' → logprob: -18.75048828125
    10. 's' → logprob: -19.25048828125

Token 308: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -9.088346359931165e-07
    2. 're' → logprob: -15.250000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '(rem' → logprob: -15.750000953674316
    5. '(' → logprob: -16.5
    6. '(return' → logprob: -17.0
    7. '(rest' → logprob: -17.25
    8. '```' → logprob: -17.25
    9. ' remainder' → logprob: -18.375
    10. '	re' → logprob: -18.875

Token 309: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0023907560389488935
    2. 'ma' → logprob: -6.1273908615112305
    3. 'm' → logprob: -8.50239086151123
    4. 'a' → logprob: -14.00239086151123
    5. 'main' → logprob: -14.37739086151123
    6. 're' → logprob: -14.50239086151123
    7. 'mai' → logprob: -15.12739086151123
    8. 'inder' → logprob: -15.75239086151123
    9. '
' → logprob: -16.752389907836914
    10. ' remainder' → logprob: -17.002389907836914

Token 310: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -3.702754474943504e-05
    2. 's' → logprob: -10.62503719329834
    3. 'counts' → logprob: -11.37503719329834
    4. 're' → logprob: -14.62503719329834
    5. 'Counts' → logprob: -15.75003719329834
    6. '_codes' → logprob: -16.500036239624023
    7. 'nts' → logprob: -16.625036239624023
    8. ' counts' → logprob: -16.625036239624023
    9. '_com' → logprob: -16.875036239624023
    10. '_re' → logprob: -17.125036239624023

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010089301504194736
    2. ')
' → logprob: -4.63508939743042
    3. '   ' → logprob: -8.635088920593262
    4. '()' → logprob: -8.885088920593262
    5. '())' → logprob: -12.260088920593262
    6. '()
' → logprob: -12.385088920593262
    7. '(' → logprob: -12.760088920593262
    8. ' )' → logprob: -13.885088920593262
    9. '())
' → logprob: -14.010088920593262
    10. ')
' → logprob: -14.135088920593262

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16133375465869904
    2. 'print' → logprob: -1.9113337993621826
    3. '
' → logprob: -7.2863335609436035
    4. '```' → logprob: -8.786334037780762
    5. '    
' → logprob: -9.286334037780762
    6. ' print' → logprob: -9.411334037780762
    7. '	print' → logprob: -9.536334037780762
    8. '<|end|>' → logprob: -11.661334037780762
    9. 'return' → logprob: -11.786334037780762
    10. '(print' → logprob: -12.661334037780762

Token 313: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.787507714354433e-05
    2. '   ' → logprob: -10.00004768371582
    3. ' print' → logprob: -13.25004768371582
    4. '```' → logprob: -14.25004768371582
    5. '
' → logprob: -18.00004768371582
    6. '	print' → logprob: -18.12504768371582
    7. 'return' → logprob: -18.37504768371582
    8. '#print' → logprob: -18.62504768371582
    9. '    
' → logprob: -20.00004768371582
    10. '``' → logprob: -20.62504768371582

Token 314: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.01424165815114975
    2. '(' → logprob: -4.264241695404053
    3. '()' → logprob: -9.639241218566895
    4. ' (' → logprob: -11.639241218566895
    5. '(
' → logprob: -13.389241218566895
    6. 'com' → logprob: -13.389241218566895
    7. '(`' → logprob: -15.014241218566895
    8. '((' → logprob: -15.264241218566895
    9. '('' → logprob: -15.764241218566895
    10. '```' → logprob: -16.51424217224121

Token 315: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.001035191467963159
    2. 'b' → logprob: -6.876035213470459
    3. 'bis' → logprob: -14.8760347366333
    4. 'bin' → logprob: -14.8760347366333
    5. 'bat' → logprob: -15.6260347366333
    6. '(b' → logprob: -15.7510347366333
    7. '```' → logprob: -15.7510347366333
    8. ')' → logprob: -15.7510347366333
    9. '(' → logprob: -16.001035690307617
    10. 'bos' → logprob: -16.126035690307617

Token 316: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -16.375
    4. '()' → logprob: -17.875
    5. ')`' → logprob: -18.0
    6. '())' → logprob: -18.5
    7. '')' → logprob: -18.625
    8. '))' → logprob: -19.375
    9. '`)' → logprob: -19.75
    10. '）' → logprob: -20.375

Token 317: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.666993507067673e-05
    2. ' if' → logprob: -10.375036239624023
    3. '```' → logprob: -12.375036239624023
    4. '
' → logprob: -14.000036239624023
    5. '#' → logprob: -15.500036239624023
    6. '<|end|>' → logprob: -16.125036239624023
    7. '\' → logprob: -17.625036239624023
    8. '\n' → logprob: -18.000036239624023
    9. 'If' → logprob: -18.250036239624023
    10. '#if' → logprob: -18.375036239624023

Token 318: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010385589674115181
    2. '(' → logprob: -4.635385513305664
    3. '()
' → logprob: -7.885385513305664
    4. '(
' → logprob: -9.885385513305664
    5. '```' → logprob: -9.885385513305664
    6. '\n' → logprob: -10.010385513305664
    7. '()\' → logprob: -10.510385513305664
    8. '
' → logprob: -10.510385513305664
    9. '<|end|>' → logprob: -10.635385513305664
    10. '\' → logprob: -12.010385513305664


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 316
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 280
Précision stricte (1ère position): 51.58%
Précision adaptée (1ère position): 54.11%
Précision (top 10): 88.61%
================================================================================
