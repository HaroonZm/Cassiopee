================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# ok, on va faire un peu à ma façon
N = int(input("Combien de lignes ? "))
liste = []
for i in range(N):
    s = input()
    # C'est peut-être pas optimal...
    if s.strip() != "":
        liste.append(s)
# On enlève les doublons ici
ens = set()
for x in liste:
    ens.add(x)
print(len(ens))  # Combien de trucs uniques ?
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' ok' (ID: 4763)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0765066146850586
    2. '\n' → logprob: -3.7015066146850586
    3. ' \' → logprob: -4.326506614685059
    4. ',' → logprob: -4.576506614685059
    5. '```' → logprob: -4.951506614685059
    6. ' ,' → logprob: -5.701506614685059
    7. ' let's' → logprob: -5.701506614685059
    8. '`' → logprob: -5.826506614685059
    9. ' ```' → logprob: -6.201506614685059
    10. '\' → logprob: -7.076506614685059

Token 4: ' va' (ID: 3423)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.028071459382772446
    2. '_' → logprob: -4.403071403503418
    3. 'ly' → logprob: -5.403071403503418
    4. 'ce' → logprob: -6.278071403503418
    5. '#' → logprob: -6.653071403503418
    6. ' e' → logprob: -7.653071403503418
    7. 'eline' → logprob: -7.653071403503418
    8. '_continue' → logprob: -7.653071403503418
    9. 'line' → logprob: -8.028071403503418
    10. 'ne' → logprob: -8.028071403503418

Token 5: ' faire' (ID: 8119)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0492206811904907
    2. '_' → logprob: -1.7992206811904907
    3. ' continuer' → logprob: -1.9242206811904907
    4. '```' → logprob: -2.174220561981201
    5. 'contin' → logprob: -2.549220561981201
    6. 's' → logprob: -2.924220561981201
    7. 'm' → logprob: -5.049220561981201
    8. 'l' → logprob: -5.549220561981201
    9. ' ```' → logprob: -5.674220561981201
    10. 'faire' → logprob: -5.799220561981201

Token 6: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13649646937847137
    2. '_' → logprob: -2.2614965438842773
    3. ' un' → logprob: -5.261496543884277
    4. ' _' → logprob: -5.386496543884277
    5. 'un' → logprob: -5.761496543884277
    6. ':' → logprob: -6.261496543884277
    7. '```' → logprob: -6.636496543884277
    8. ' ça' → logprob: -6.761496543884277
    9. ' une' → logprob: -6.886496543884277
    10. ' ```' → logprob: -7.636496543884277

Token 7: ' peu' (ID: 9235)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.934973418712616
    2. ' ' → logprob: -1.5599734783172607
    3. 'test' → logprob: -2.8099734783172607
    4. 'tour' → logprob: -3.1849734783172607
    5. ' tour' → logprob: -3.1849734783172607
    6. 'for' → logprob: -3.4349734783172607
    7. ' for' → logprob: -3.5599734783172607
    8. '```' → logprob: -3.8099734783172607
    9. 'space' → logprob: -4.559973239898682
    10. 's' → logprob: -4.684973239898682

Token 8: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015242677181959152
    2. '_' → logprob: -8.126523971557617
    3. '`' → logprob: -9.126523971557617
    4. 'l' → logprob: -9.251523971557617
    5. '.' → logprob: -9.376523971557617
    6. '  ' → logprob: -9.376523971557617
    7. '\' → logprob: -9.376523971557617
    8. '```' → logprob: -9.376523971557617
    9. 'd' → logprob: -9.626523971557617
    10. ' d' → logprob: -9.751523971557617

Token 9: ' ma' (ID: 831)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7026283740997314
    2. 'l' → logprob: -0.8276283740997314
    3. '```' → logprob: -3.4526283740997314
    4. ' la' → logprob: -4.202628135681152
    5. ' ' → logprob: -4.827628135681152
    6. ' l' → logprob: -5.577628135681152
    7. 'a' → logprob: -6.452628135681152
    8. 'pe' → logprob: -6.577628135681152
    9. '  ' → logprob: -6.702628135681152
    10. 'p' → logprob: -7.077628135681152

Token 10: ' façon' (ID: 33381)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9223585724830627
    2. '  ' → logprob: -2.172358512878418
    3. '   ' → logprob: -2.422358512878418
    4. 'fa' → logprob: -2.672358512878418
    5. 'place' → logprob: -2.672358512878418
    6. ' place' → logprob: -2.797358512878418
    7. '```' → logprob: -3.422358512878418
    8. ' ' → logprob: -3.547358512878418
    9. ' manière' → logprob: -3.797358512878418
    10. 'f' → logprob: -3.797358512878418

Token 11: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6424655318260193
    2. '\' → logprob: -1.142465591430664
    3. '#' → logprob: -2.892465591430664
    4. '  
' → logprob: -3.267465591430664
    5. ':' → logprob: -4.142465591430664
    6. '
' → logprob: -4.517465591430664
    7. '.' → logprob: -5.017465591430664
    8. ' ' → logprob: -5.017465591430664
    9. '```' → logprob: -5.142465591430664
    10. ',' → logprob: -5.392465591430664

Token 12: 'N' (ID: 45)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3665403127670288
    2. '.' → logprob: -1.7415403127670288
    3. '\n' → logprob: -1.7415403127670288
    4. ',' → logprob: -1.9915403127670288
    5. ':' → logprob: -2.2415404319763184
    6. '#' → logprob: -3.1165404319763184
    7. ' ' → logprob: -3.6165404319763184
    8. '`' → logprob: -4.491540431976318
    9. '  
' → logprob: -4.491540431976318
    10. '```' → logprob: -4.491540431976318

Token 13: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.49239394068717957
    2. 'o' → logprob: -1.492393970489502
    3. '#' → logprob: -2.992393970489502
    4. '=' → logprob: -3.117393970489502
    5. 'b' → logprob: -3.617393970489502
    6. 'a' → logprob: -4.742393970489502
    7. ' =' → logprob: -4.742393970489502
    8. '_' → logprob: -4.992393970489502
    9. 'p' → logprob: -5.992393970489502
    10. 'm' → logprob: -6.492393970489502

Token 14: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008005242794752121
    2. '10' → logprob: -4.883005142211914
    3. '20' → logprob: -8.508005142211914
    4. '5' → logprob: -9.508005142211914
    5. '32' → logprob: -9.758005142211914
    6. '100' → logprob: -10.758005142211914
    7. '50' → logprob: -11.633005142211914
    8. '4' → logprob: -11.883005142211914
    9. '16' → logprob: -12.133005142211914
    10. 'int' → logprob: -12.258005142211914

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00707409018650651
    2. '(input' → logprob: -5.007073879241943
    3. '('' → logprob: -8.757074356079102
    4. ' (' → logprob: -8.882074356079102
    5. '()' → logprob: -10.757074356079102
    6. '("' → logprob: -11.507074356079102
    7. 'input' → logprob: -12.007074356079102
    8. '(`' → logprob: -12.382074356079102
    9. '(
' → logprob: -12.632074356079102
    10. ' ' → logprob: -12.632074356079102

Token 16: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04484108090400696
    2. '()' → logprob: -3.1698410511016846
    3. ')' → logprob: -7.169841289520264
    4. '())' → logprob: -7.294841289520264
    5. '('' → logprob: -8.794840812683105
    6. '(

' → logprob: -9.669840812683105
    7. '(
' → logprob: -9.919840812683105
    8. '("("' → logprob: -10.419840812683105
    9. '("")' → logprob: -10.544840812683105
    10. '(""))' → logprob: -10.669840812683105

Token 17: 'Comb' (ID: 39774)
  Prédit: ' "))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "))' → logprob: -1.1081291437149048
    2. '"))' → logprob: -1.2331291437149048
    3. ' nombre' → logprob: -3.1081290245056152
    4. 'Votre' → logprob: -3.2331290245056152
    5. ' votre' → logprob: -3.2331290245056152
    6. ' la' → logprob: -3.3581290245056152
    7. 'Nombre' → logprob: -3.4831290245056152
    8. 'n' → logprob: -3.6081290245056152
    9. 'nombre' → logprob: -3.8581290245056152
    10. ':' → logprob: -3.9831290245056152

Token 18: 'ien' (ID: 847)
  Prédit: 'ien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ien' → logprob: -0.004288403782993555
    2. 'ient' → logprob: -6.629288196563721
    3. 'i' → logprob: -6.879288196563721
    4. 'iens' → logprob: -7.879288196563721
    5. 'ina' → logprob: -8.004288673400879
    6. 'ine' → logprob: -8.504288673400879
    7. 'ie' → logprob: -8.504288673400879
    8. ' ien' → logprob: -8.754288673400879
    9. 'in' → logprob: -8.879288673400879
    10. 'ién' → logprob: -9.254288673400879

Token 19: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20969632267951965
    2. ' de' → logprob: -1.8346962928771973
    3. ' ' → logprob: -3.5846962928771973
    4. 'de' → logprob: -7.584696292877197
    5. 'd' → logprob: -7.834696292877197
    6. ' )' → logprob: -8.459696769714355
    7. ' "))' → logprob: -8.959696769714355
    8. ' ' → logprob: -9.209696769714355
    9. ' "' → logprob: -9.584696769714355
    10. '  ' → logprob: -10.334696769714355

Token 20: ' lignes' (ID: 81687)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.057670801877975464
    2. ' éléments' → logprob: -4.307670593261719
    3. ' joueurs' → logprob: -4.807670593261719
    4. ' personnes' → logprob: -5.182670593261719
    5. ' nombres' → logprob: -5.432670593261719
    6. ' valeurs' → logprob: -5.432670593261719
    7. 'élé' → logprob: -5.682670593261719
    8. ' chiffres' → logprob: -6.057670593261719
    9. ' espaces' → logprob: -6.995170593261719
    10. ' fois' → logprob: -7.307670593261719

Token 21: ' ?' (ID: 1423)
  Prédit: ' ?'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ?' → logprob: -0.011945932172238827
    2. ' ' → logprob: -5.136945724487305
    3. '?' → logprob: -5.386945724487305
    4. ' ' → logprob: -7.011945724487305
    5. ' :' → logprob: -8.136945724487305
    6. ' ?"' → logprob: -8.636945724487305
    7. ' "))' → logprob: -11.386945724487305
    8. ' ?:' → logprob: -11.761945724487305
    9. ' ?

' → logprob: -12.636945724487305
    10. '   ' → logprob: -12.761945724487305

Token 22: ' "))
' (ID: 94820)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.19658134877681732
    2. '")' → logprob: -1.8215813636779785
    3. ')' → logprob: -4.4465813636779785
    4. '?' → logprob: -6.3215813636779785
    5. ':' → logprob: -6.6965813636779785
    6. '"' → logprob: -6.9465813636779785
    7. ' :' → logprob: -7.8215813636779785
    8. ' "))' → logprob: -8.82158088684082
    9. ')")' → logprob: -8.94658088684082
    10. '")))' → logprob: -9.57158088684082

Token 23: 'liste' (ID: 69656)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6414607763290405
    2. 'for' → logprob: -1.7664607763290405
    3. ' 
' → logprob: -2.14146089553833
    4. 'n' → logprob: -3.01646089553833
    5. '\n' → logprob: -3.14146089553833
    6. ' for' → logprob: -3.51646089553833
    7. '' → logprob: -3.64146089553833
    8. ' ' → logprob: -4.39146089553833
    9. '  
' → logprob: -5.14146089553833
    10. '#' → logprob: -5.14146089553833

Token 24: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.037409067153930664
    2. '[' → logprob: -4.162408828735352
    3. ' =' → logprob: -5.037408828735352
    4. '.' → logprob: -5.037408828735352
    5. 's' → logprob: -5.912408828735352
    6. '[:]' → logprob: -6.412408828735352
    7. '_l' → logprob: -7.412408828735352
    8. ' ' → logprob: -7.537408828735352
    9. ')' → logprob: -7.787408828735352
    10. '[]' → logprob: -8.037408828735352

Token 25: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.020273830741643906
    2. ' [' → logprob: -4.395273685455322
    3. '[]' → logprob: -4.895273685455322
    4. '[' → logprob: -8.77027416229248
    5. ' list' → logprob: -10.52027416229248
    6. 'list' → logprob: -10.77027416229248
    7. ' ' → logprob: -11.02027416229248
    8. '[int' → logprob: -11.39527416229248
    9. ' [[]' → logprob: -11.89527416229248
    10. '[list' → logprob: -12.27027416229248

Token 26: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016208330169320107
    2. ' for' → logprob: -4.141208171844482
    3. '
' → logprob: -9.39120864868164
    4. ' 
' → logprob: -9.89120864868164
    5. ' ' → logprob: -11.64120864868164
    6. '```' → logprob: -11.76620864868164
    7. '\n' → logprob: -12.39120864868164
    8. 'n' → logprob: -12.51620864868164
    9. '<|end|>' → logprob: -12.64120864868164
    10. '' → logprob: -12.89120864868164

Token 27: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00791807472705841
    2. ' i' → logprob: -4.882917881011963
    3. '  ' → logprob: -8.132918357849121
    4. '_' → logprob: -12.257918357849121
    5. ' _' → logprob: -12.382918357849121
    6. 'i' → logprob: -12.882918357849121
    7. ' ‌' → logprob: -13.382918357849121
    8. ' ' → logprob: -13.632918357849121
    9. ' N' → logprob: -13.757918357849121
    10. ' n' → logprob: -14.257918357849121

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009318135678768158
    2. 'in' → logprob: -4.7593183517456055
    3. ' ' → logprob: -7.3843183517456055
    4. ' i' → logprob: -10.509318351745605
    5. '  ' → logprob: -10.634318351745605
    6. 'n' → logprob: -12.009318351745605
    7. '_' → logprob: -12.259318351745605
    8. '```' → logprob: -13.071818351745605
    9. 'range' → logprob: -13.134318351745605
    10. '   ' → logprob: -13.321818351745605

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0036815516650676727
    2. 'range' → logprob: -5.753681659698486
    3. ' ' → logprob: -7.628681659698486
    4. '	range' → logprob: -11.628681182861328
    5. ' in' → logprob: -13.128681182861328
    6. ')' → logprob: -14.003681182861328
    7. ' xrange' → logprob: -14.003681182861328
    8. '  ' → logprob: -14.128681182861328
    9. ' ' → logprob: -14.128681182861328
    10. '_' → logprob: -14.628681182861328

Token 30: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01837749592959881
    2. '(N' → logprob: -4.018377304077148
    3. '(n' → logprob: -9.018377304077148
    4. ' (' → logprob: -9.518377304077148
    5. '(i' → logprob: -10.768377304077148
    6. '(
' → logprob: -12.143377304077148
    7. '(len' → logprob: -13.018377304077148
    8. '(s' → logprob: -14.143377304077148
    9. '(int' → logprob: -14.268377304077148
    10. '('' → logprob: -14.643377304077148

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010819419287145138
    2. ')' → logprob: -4.635819435119629
    3. ' ):' → logprob: -7.385819435119629
    4. '+' → logprob: -8.135819435119629
    5. ':' → logprob: -9.135819435119629
    6. '):
' → logprob: -10.760819435119629
    7. ' )' → logprob: -11.510819435119629
    8. ' ' → logprob: -13.260819435119629
    9. '+:' → logprob: -13.385819435119629
    10. ',' → logprob: -13.510819435119629

Token 32: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.863627552986145
    2. ' ' → logprob: -0.988627552986145
    3. '     
' → logprob: -1.988627552986145
    4. '   ' → logprob: -3.9886274337768555
    5. ' 
' → logprob: -4.1136274337768555
    6. '    
' → logprob: -4.9886274337768555
    7. ' ```' → logprob: -5.4886274337768555
    8. ' ligne' → logprob: -5.8636274337768555
    9. ' liste' → logprob: -5.9886274337768555
    10. ' print' → logprob: -6.2386274337768555

Token 33: ' s' (ID: 265)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.13646642863750458
    2. ' line' → logprob: -2.6364665031433105
    3. ' liste' → logprob: -4.2614665031433105
    4. ' lignes' → logprob: -4.7614665031433105
    5. 'ligne' → logprob: -5.0114665031433105
    6. '   ' → logprob: -5.3864665031433105
    7. ' lines' → logprob: -5.5114665031433105
    8. ' lst' → logprob: -5.6364665031433105
    9. '    ' → logprob: -6.0114665031433105
    10. ' ' → logprob: -6.1364665031433105

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7146363854408264
    2. 'tr' → logprob: -0.7146363854408264
    3. '=' → logprob: -4.464636325836182
    4. '=input' → logprob: -6.089636325836182
    5. 'tring' → logprob: -6.089636325836182
    6. '   ' → logprob: -6.589636325836182
    7. ' ' → logprob: -6.964636325836182
    8. 'aisie' → logprob: -7.964636325836182
    9. 'trip' → logprob: -8.08963680267334
    10. '  ' → logprob: -8.08963680267334

Token 35: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08931662887334824
    2. 'input' → logprob: -2.4643166065216064
    3. ' int' → logprob: -8.839316368103027
    4. ' ' → logprob: -9.089316368103027
    5. 'int' → logprob: -9.589316368103027
    6. ' str' → logprob: -10.839316368103027
    7. 'str' → logprob: -12.089316368103027
    8. '	input' → logprob: -12.214316368103027
    9. '=input' → logprob: -12.464316368103027
    10. ' list' → logprob: -12.839316368103027

Token 36: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15287333726882935
    2. '(' → logprob: -2.5278732776641846
    3. '("' → logprob: -2.9028732776641846
    4. '("")' → logprob: -5.402873516082764
    5. '("("' → logprob: -6.152873516082764
    6. '('' → logprob: -8.402873039245605
    7. '("(' → logprob: -9.402873039245605
    8. '(">' → logprob: -9.902873039245605
    9. '())' → logprob: -10.527873039245605
    10. '("""' → logprob: -11.152873039245605

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03222290799021721
    2. '    ' → logprob: -4.532222747802734
    3. 'liste' → logprob: -5.032222747802734
    4. '    
' → logprob: -5.407222747802734
    5. '.' → logprob: -6.532222747802734
    6. ' liste' → logprob: -6.782222747802734
    7. '
' → logprob: -6.907222747802734
    8. ' ' → logprob: -7.032222747802734
    9. ' 
' → logprob: -7.032222747802734
    10. '.split' → logprob: -7.157222747802734

Token 38: ' #' (ID: 1069)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.7928745746612549
    2. '   ' → logprob: -1.0428745746612549
    3. ' liste' → logprob: -1.6678745746612549
    4. '    ' → logprob: -6.917874336242676
    5. ' ' → logprob: -7.167874336242676
    6. 'list' → logprob: -7.417874336242676
    7. ' if' → logprob: -7.417874336242676
    8. 'l' → logprob: -7.542874336242676
    9. '	l' → logprob: -8.042874336242676
    10. '    
' → logprob: -8.042874336242676

Token 39: ' C' (ID: 363)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.667462170124054
    2. 'liste' → logprob: -1.4174621105194092
    3. 'if' → logprob: -1.9174621105194092
    4. ' liste' → logprob: -3.042462110519409
    5. 'l' → logprob: -4.042462348937988
    6. '   ' → logprob: -4.667462348937988
    7. 's' → logprob: -5.542462348937988
    8. ' ' → logprob: -5.917462348937988
    9. 'lst' → logprob: -6.292462348937988
    10. ' l' → logprob: -6.292462348937988

Token 40: ''est' (ID: 6616)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.4490254819393158
    2. '   ' → logprob: -2.5740253925323486
    3. 'ont' → logprob: -3.0740253925323486
    4. 'omme' → logprob: -3.3240253925323486
    5. 'om' → logprob: -3.4490253925323486
    6. 'on' → logprob: -3.4490253925323486
    7. ' if' → logprob: -4.074025630950928
    8. 'ho' → logprob: -4.199025630950928
    9. 'omm' → logprob: -4.324025630950928
    10. 'onte' → logprob: -4.699025630950928

Token 41: ' peut' (ID: 9216)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6601744294166565
    2. '   ' → logprob: -1.5351743698120117
    3. 'la' → logprob: -2.4101743698120117
    4. 's' → logprob: -2.5351743698120117
    5. 'l' → logprob: -3.2851743698120117
    6. ' une' → logprob: -4.410174369812012
    7. 'une' → logprob: -4.535174369812012
    8. 't' → logprob: -5.160174369812012
    9. ' ' → logprob: -5.285174369812012
    10. 'a' → logprob: -5.285174369812012

Token 42: '-être' (ID: 33599)
  Prédit: '-être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-être' → logprob: -0.3934567868709564
    2. 'être' → logprob: -1.2684568166732788
    3. '-' → logprob: -3.3934566974639893
    4. 'etre' → logprob: -6.018456935882568
    5. 'pas' → logprob: -6.643456935882568
    6. 't' → logprob: -6.643456935882568
    7. '-il' → logprob: -6.893456935882568
    8. '#' → logprob: -7.143456935882568
    9. 'tre' → logprob: -7.393456935882568
    10. 'ê' → logprob: -7.643456935882568

Token 43: ' pas' (ID: 2173)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8431143164634705
    2. ' une' → logprob: -2.0931143760681152
    3. 'la' → logprob: -2.8431143760681152
    4. 'l' → logprob: -2.9681143760681152
    5. 'à' → logprob: -3.0931143760681152
    6. ' tout' → logprob: -3.0931143760681152
    7. 'tout' → logprob: -3.4681143760681152
    8. ' ' → logprob: -3.7181143760681152
    9. ' à' → logprob: -3.7181143760681152
    10. 'une' → logprob: -3.7181143760681152

Token 44: ' optimal' (ID: 24174)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.2925713062286377
    2. ' la' → logprob: -2.4175713062286377
    3. ' fini' → logprob: -2.4175713062286377
    4. 'tout' → logprob: -2.4175713062286377
    5. 'le' → logprob: -2.5425713062286377
    6. ' le' → logprob: -2.6675713062286377
    7. ' mal' → logprob: -3.2925713062286377
    8. 'grave' → logprob: -3.4175713062286377
    9. 'mal' → logprob: -3.5425713062286377
    10. 'f' → logprob: -3.6675713062286377

Token 45: '...
' (ID: 4908)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042727041989564896
    2. '    ' → logprob: -3.792726993560791
    3. ' ' → logprob: -4.542726993560791
    4. '    
' → logprob: -5.542726993560791
    5. '.' → logprob: -6.917726993560791
    6. ',' → logprob: -7.042726993560791
    7. ')' → logprob: -7.292726993560791
    8. '  ' → logprob: -7.417726993560791
    9. '       ' → logprob: -7.792726993560791
    10. '<|end|>' → logprob: -8.54272747039795

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010100746527314186
    2. ' ' → logprob: -6.010100841522217
    3. '    ' → logprob: -6.135100841522217
    4. 'liste' → logprob: -6.385100841522217
    5. '    
' → logprob: -6.635100841522217
    6. ' liste' → logprob: -8.010100364685059
    7. '  ' → logprob: -8.010100364685059
    8. ' 
' → logprob: -8.135100364685059
    9. '```' → logprob: -8.760100364685059
    10. 'l' → logprob: -8.885100364685059

Token 47: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29512718319892883
    2. 'liste' → logprob: -1.4201271533966064
    3. ' liste' → logprob: -5.4201273918151855
    4. 'l' → logprob: -6.4201273918151855
    5. '	l' → logprob: -6.7951273918151855
    6. 'if' (adapté à ' if') → logprob: -6.9201273918151855
    7. '   ' → logprob: -7.1701273918151855
    8. '    
' → logprob: -7.2951273918151855
    9. ' ' → logprob: -7.4201273918151855
    10. ' if' → logprob: -7.5451273918151855

Token 48: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2176465094089508
    2. ' len' → logprob: -2.717646598815918
    3. ' '' → logprob: -2.842646598815918
    4. ' ' → logprob: -3.092646598815918
    5. ' "' → logprob: -4.717646598815918
    6. 's' → logprob: -4.967646598815918
    7. ' not' → logprob: -5.717646598815918
    8. ''' → logprob: -5.967646598815918
    9. 'len' → logprob: -6.717646598815918
    10. '"' → logprob: -6.717646598815918

Token 49: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6446917057037354
    2. '.startswith' → logprob: -1.6446917057037354
    3. '.strip' → logprob: -2.1446917057037354
    4. ' not' → logprob: -2.8946917057037354
    5. ' !=' → logprob: -3.5196917057037354
    6. ' in' → logprob: -3.7696917057037354
    7. '.endswith' → logprob: -3.8946917057037354
    8. ' .' → logprob: -4.269691467285156
    9. ' ==' → logprob: -4.644691467285156
    10. '!=' → logprob: -5.519691467285156

Token 50: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4088502824306488
    2. '()' → logprob: -1.1588503122329712
    3. '()==' → logprob: -4.533850193023682
    4. '()!=' → logprob: -4.783850193023682
    5. ':' → logprob: -6.658850193023682
    6. '()>' → logprob: -7.658850193023682
    7. '(' → logprob: -8.53385066986084
    8. '!=' → logprob: -8.90885066986084
    9. '().' → logprob: -9.03385066986084
    10. '==' → logprob: -9.53385066986084

Token 51: ' !=' (ID: 1666)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24875310063362122
    2. '==' → logprob: -2.498753070831299
    3. '>' → logprob: -2.498753070831299
    4. ' ==' → logprob: -3.748753070831299
    5. '!=' → logprob: -4.623753070831299
    6. ' !=' → logprob: -4.873753070831299
    7. '<|end|>' → logprob: -5.498753070831299
    8. ')' → logprob: -5.998753070831299
    9. '):' → logprob: -6.248753070831299
    10. ' >' → logprob: -6.373753070831299

Token 52: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.3783877193927765
    2. '''' → logprob: -2.003387689590454
    3. '"":' → logprob: -2.253387689590454
    4. ''' → logprob: -3.253387689590454
    5. '"' → logprob: -3.378387689590454
    6. ' ""' → logprob: -6.503387928009033
    7. ' ''' → logprob: -8.253387451171875
    8. ' "' → logprob: -8.378387451171875
    9. ' '' → logprob: -9.003387451171875
    10. '""""' → logprob: -9.503387451171875

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008610807126387954
    2. '   ' → logprob: -8.375861167907715
    3. '    ' → logprob: -8.750861167907715
    4. ':' → logprob: -9.000861167907715
    5. '<|end|>' → logprob: -9.500861167907715
    6. ' liste' → logprob: -10.125861167907715
    7. '        
' → logprob: -10.500861167907715
    8. 'liste' → logprob: -10.500861167907715
    9. '.' → logprob: -10.750861167907715
    10. '     ' → logprob: -10.875861167907715

Token 54: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6060906648635864
    2. '       ' → logprob: -1.3560906648635864
    3. 'liste' (adapté à ' liste') → logprob: -1.7310906648635864
    4. 'list' → logprob: -5.106090545654297
    5. '   ' → logprob: -5.106090545654297
    6. ' list' → logprob: -6.231090545654297
    7. '           ' → logprob: -6.731090545654297
    8. '    ' → logprob: -6.856090545654297
    9. 'l' → logprob: -7.856090545654297
    10. '        ' → logprob: -7.856090545654297

Token 55: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.061989083886146545
    2. '.' → logprob: -2.8119890689849854
    3. '.add' → logprob: -11.811988830566406
    4. ' .' → logprob: -12.436988830566406
    5. '.Append' → logprob: -12.811988830566406
    6. '.app' → logprob: -13.061988830566406
    7. '.extend' → logprob: -13.061988830566406
    8. '.ap' → logprob: -13.686988830566406
    9. '.setdefault' → logprob: -14.311988830566406
    10. 'append' → logprob: -14.561988830566406

Token 56: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01815556176006794
    2. '(' → logprob: -4.018155574798584
    3. '((' → logprob: -13.393155097961426
    4. '(
' → logprob: -13.518155097961426
    5. 's' → logprob: -13.643155097961426
    6. '(i' → logprob: -14.768155097961426
    7. ' (' → logprob: -15.393155097961426
    8. '('' → logprob: -15.768155097961426
    9. '(n' → logprob: -16.018156051635742
    10. '(

' → logprob: -16.268156051635742

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006227265694178641
    2. '))' → logprob: -7.500622749328613
    3. ' )' → logprob: -9.875622749328613
    4. '   ' → logprob: -11.750622749328613
    5. ')
' → logprob: -12.375622749328613
    6. ')))' → logprob: -13.000622749328613
    7. '")' → logprob: -14.250622749328613
    8. ')")' → logprob: -14.250622749328613
    9. '`)' → logprob: -14.375622749328613
    10. '')' → logprob: -14.750622749328613

Token 58: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0525922775268555
    2. '<|end|>' → logprob: -1.0525922775268555
    3. '[' → logprob: -1.9275922775268555
    4. '#' → logprob: -3.6775922775268555
    5. '
' → logprob: -3.8025922775268555
    6. ' ' → logprob: -3.8025922775268555
    7. 'print' → logprob: -4.0525922775268555
    8. ')' → logprob: -4.1775922775268555
    9. '```' → logprob: -4.5525922775268555
    10. '\n' → logprob: -5.1775922775268555

Token 59: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4375063180923462
    2. 'for' → logprob: -1.3125063180923462
    3. '#' → logprob: -3.9375061988830566
    4. ' ' → logprob: -4.062506198883057
    5. ' for' → logprob: -4.187506198883057
    6. '[' → logprob: -4.812506198883057
    7. '.' → logprob: -5.937506198883057
    8. ' ```' → logprob: -6.312506198883057
    9. '<|end|>' → logprob: -6.437506198883057
    10. '```' → logprob: -6.562506198883057

Token 60: ' enl' (ID: 116494)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.34938204288482666
    2. '.' → logprob: -2.474381923675537
    3. ' =' → logprob: -2.849381923675537
    4. '=' → logprob: -3.599381923675537
    5. '.for' → logprob: -3.849381923675537
    6. 'for' → logprob: -4.474381923675537
    7. '.reverse' → logprob: -4.474381923675537
    8. '.append' → logprob: -4.599381923675537
    9. 'print' → logprob: -4.724381923675537
    10. ' .' → logprob: -4.724381923675537

Token 61: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.1500607281923294
    2. 'eve' → logprob: -2.0250606536865234
    3. 'e' → logprob: -5.025060653686523
    4. 'ever' → logprob: -7.775060653686523
    5. 'ev' → logprob: -8.525060653686523
    6. 'è' → logprob: -9.900060653686523
    7. 'èv' → logprob: -9.900060653686523
    8. 'èves' → logprob: -10.525060653686523
    9. ' eve' → logprob: -12.525060653686523
    10. '#' → logprob: -12.525060653686523

Token 62: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.12561705708503723
    2. 's' → logprob: -2.750617027282715
    3. 'les' → logprob: -4.125617027282715
    4. '_' → logprob: -4.500617027282715
    5. ' ' → logprob: -5.125617027282715
    6. '<|end|>' → logprob: -5.250617027282715
    7. '()' → logprob: -6.375617027282715
    8. 'es' → logprob: -6.750617027282715
    9. ' la' → logprob: -6.875617027282715
    10. '[' → logprob: -7.188117027282715

Token 63: ' doubl' (ID: 127992)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.6393610835075378
    2. ' doubl' → logprob: -1.1393611431121826
    3. ' lignes' → logprob: -3.2643611431121826
    4. ' ' → logprob: -3.8893611431121826
    5. 'élé' → logprob: -4.2643609046936035
    6. ' éléments' → logprob: -4.3893609046936035
    7. ' blancs' → logprob: -4.7643609046936035
    8. '  ' → logprob: -5.0143609046936035
    9. 'd' → logprob: -5.1393609046936035
    10. 'dou' → logprob: -5.2643609046936035

Token 64: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.00029112942866049707
    2. 'on' → logprob: -9.125290870666504
    3. 'es' → logprob: -10.125290870666504
    4. '   ' → logprob: -10.875290870666504
    5. 'ic' → logprob: -11.000290870666504
    6. '#' → logprob: -11.375290870666504
    7. '```' → logprob: -11.375290870666504
    8. 'és' → logprob: -11.750290870666504
    9. 'e' → logprob: -12.000290870666504
    10. 's' → logprob: -12.125290870666504

Token 65: ' ici' (ID: 27994)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7615604400634766
    2. 'liste' → logprob: -1.3865604400634766
    3. ',' → logprob: -2.3865604400634766
    4. ':' → logprob: -3.3865604400634766
    5. '.' → logprob: -3.5115604400634766
    6. ' ' → logprob: -4.011560440063477
    7. ' liste' → logprob: -4.011560440063477
    8. '\' → logprob: -4.511560440063477
    9. ' 
' → logprob: -4.511560440063477
    10. 'set' → logprob: -4.511560440063477

Token 66: '
' (ID: 198)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.28545475006103516
    2. 's' → logprob: -2.285454750061035
    3. '
' → logprob: -3.785454750061035
    4. ' 
' → logprob: -4.160454750061035
    5. ' liste' → logprob: -4.410454750061035
    6. 'list' → logprob: -4.535454750061035
    7. ' =' → logprob: -4.535454750061035
    8. ',' → logprob: -4.660454750061035
    9. '<|end|>' → logprob: -4.660454750061035
    10. ' ' → logprob: -4.785454750061035

Token 67: 'ens' (ID: 696)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.004199848044663668
    2. ' liste' → logprob: -6.004199981689453
    3. 'list' → logprob: -7.504199981689453
    4. '```' → logprob: -8.129199981689453
    5. 'l' → logprob: -8.504199981689453
    6. 's' → logprob: -9.004199981689453
    7. 'unique' → logprob: -9.379199981689453
    8. 'lst' → logprob: -9.504199981689453
    9. 'set' → logprob: -9.754199981689453
    10. 'for' → logprob: -9.754199981689453

Token 68: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24572433531284332
    2. ' =' → logprob: -1.8707243204116821
    3. 'a' → logprob: -3.2457244396209717
    4. 'u' → logprob: -4.620724201202393
    5. '=' → logprob: -5.370724201202393
    6. 'l' → logprob: -6.120724201202393
    7. 'es' → logprob: -6.495724201202393
    8. 'liste' → logprob: -6.870724201202393
    9. '=set' → logprob: -6.995724201202393
    10. 'al' → logprob: -7.245724201202393

Token 69: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.0433112271130085
    2. 'set' → logprob: -3.16831111907959
    3. ' list' → logprob: -8.16831111907959
    4. 'list' → logprob: -11.41831111907959
    5. '(set' → logprob: -12.04331111907959
    6. '=set' → logprob: -12.54331111907959
    7. 's' → logprob: -13.16831111907959
    8. '	set' → logprob: -13.16831111907959
    9. ' ' → logprob: -13.91831111907959
    10. ' ' → logprob: -14.66831111907959

Token 70: '()
' (ID: 1234)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.018175693228840828
    2. '(' → logprob: -4.0181756019592285
    3. '(s' → logprob: -10.893176078796387
    4. '()' → logprob: -13.268176078796387
    5. '(list' → logprob: -13.518176078796387
    6. '(lst' → logprob: -13.768176078796387
    7. '(lista' → logprob: -14.018176078796387
    8. '(n' → logprob: -14.518176078796387
    9. ' (' → logprob: -15.268176078796387
    10. '(li' → logprob: -15.393176078796387

Token 71: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03053991124033928
    2. 'result' → logprob: -4.1555399894714355
    3. ' for' → logprob: -5.4055399894714355
    4. 'res' → logprob: -5.9055399894714355
    5. 'new' → logprob: -6.1555399894714355
    6. 'liste' → logprob: -7.1555399894714355
    7. 'unique' → logprob: -7.1555399894714355
    8. 'nou' → logprob: -7.5305399894714355
    9. 'l' → logprob: -7.6555399894714355
    10. 'final' → logprob: -7.6555399894714355

Token 72: ' x' (ID: 1215)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.3820210695266724
    2. ' s' → logprob: -2.132020950317383
    3. ' e' → logprob: -2.257020950317383
    4. 'l' → logprob: -2.507020950317383
    5. ' x' → logprob: -2.757020950317383
    6. ' ligne' → logprob: -2.757020950317383
    7. ' element' → logprob: -3.132020950317383
    8. ' elem' → logprob: -3.257020950317383
    9. ' line' → logprob: -3.632020950317383
    10. ' ' → logprob: -3.632020950317383

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00724856136366725
    2. 'in' → logprob: -5.132248401641846
    3. ' ' → logprob: -6.757248401641846
    4. 's' → logprob: -9.007248878479004
    5. '<|end|>' → logprob: -11.007248878479004
    6. 'en' → logprob: -13.007248878479004
    7. '  ' → logprob: -13.132248878479004
    8. ' ' → logprob: -13.632248878479004
    9. ' dans' → logprob: -13.632248878479004
    10. 'In' → logprob: -14.194748878479004

Token 74: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.14361950755119324
    2. 'liste' → logprob: -2.0186195373535156
    3. ' list' → logprob: -8.018619537353516
    4. 'list' → logprob: -8.518619537353516
    5. 'l' → logprob: -9.518619537353516
    6. ' lst' → logprob: -9.768619537353516
    7. ' ' → logprob: -9.768619537353516
    8. 'lst' → logprob: -10.018619537353516
    9. ' lista' → logprob: -10.518619537353516
    10. ' listes' → logprob: -10.518619537353516

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008664444088935852
    2. ' :' → logprob: -4.758664608001709
    3. '):' → logprob: -10.88366413116455
    4. ':**' → logprob: -11.38366413116455
    5. '<|end|>' → logprob: -11.63366413116455
    6. ' if' → logprob: -12.75866413116455
    7. ':
' → logprob: -13.13366413116455
    8. 's' → logprob: -13.38366413116455
    9. ')' → logprob: -14.00866413116455
    10. '<|end|>' → logprob: -14.00866413116455

Token 76: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8300015330314636
    2. '<|end|>' → logprob: -1.3300015926361084
    3. '   ' → logprob: -1.4550015926361084
    4. ':' → logprob: -3.4550015926361084
    5. ' ' → logprob: -3.9550015926361084
    6. ' 
' → logprob: -5.830001354217529
    7. '    
' → logprob: -6.205001354217529
    8. '<|end|>' → logprob: -6.330001354217529
    9. '    ' → logprob: -6.455001354217529
    10. 'if' → logprob: -6.830001354217529

Token 77: ' ens' (ID: 4266)
  Prédit: ' ens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ens' → logprob: -0.4627304673194885
    2. ' if' → logprob: -1.2127304077148438
    3. 'ens' (adapté à ' ens') → logprob: -2.8377304077148438
    4. 'if' → logprob: -4.462730407714844
    5. '   ' → logprob: -6.962730407714844
    6. ' 
' → logprob: -7.587730407714844
    7. ' en' → logprob: -7.962730407714844
    8. '    
' → logprob: -8.337730407714844
    9. '<|end|>' → logprob: -8.837730407714844
    10. '
' → logprob: -8.837730407714844

Token 78: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.5760145783424377
    2. '.' → logprob: -0.8260145783424377
    3. '.update' → logprob: -10.201014518737793
    4. '.setdefault' → logprob: -10.701014518737793
    5. ' .' → logprob: -11.326014518737793
    6. '.append' → logprob: -13.076014518737793
    7. '.union' → logprob: -14.951014518737793
    8. 'add' → logprob: -15.076014518737793
    9. '.insert' → logprob: -15.451014518737793
    10. '.Add' → logprob: -16.20101547241211

Token 79: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.038043100386857986
    2. '(' → logprob: -3.2880430221557617
    3. '(s' → logprob: -13.538043022155762
    4. '(
' → logprob: -15.788043022155762
    5. '('' → logprob: -17.413043975830078
    6. ' (' → logprob: -17.413043975830078
    7. '("("' → logprob: -17.413043975830078
    8. '((' → logprob: -17.663043975830078
    9. 'x' → logprob: -18.038043975830078
    10. '(xs' → logprob: -18.288043975830078

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.130576806142926e-05
    2. ' )' → logprob: -10.625031471252441
    3. ')
' → logprob: -12.000031471252441
    4. '))' → logprob: -15.000031471252441
    5. '())' → logprob: -16.125030517578125
    6. ' ' → logprob: -16.625030517578125
    7. ')

' → logprob: -17.000030517578125
    8. '   ' → logprob: -17.125030517578125
    9. ')#' → logprob: -17.125030517578125
    10. ')`' → logprob: -17.500030517578125

Token 81: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09068270027637482
    2. 'for' → logprob: -3.3406827449798584
    3. '#' → logprob: -3.9656827449798584
    4. '
' → logprob: -4.090682506561279
    5. '<|end|>' → logprob: -5.590682506561279
    6. 'ens' → logprob: -6.340682506561279
    7. 's' → logprob: -6.590682506561279
    8. 'sorted' → logprob: -6.965682506561279
    9. 'liste' → logprob: -7.090682506561279
    10. 'list' → logprob: -7.215682506561279

Token 82: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003927014302462339
    2. '(len' → logprob: -5.628927230834961
    3. '(list' → logprob: -8.753927230834961
    4. '(l' → logprob: -10.128927230834961
    5. '('' → logprob: -10.253927230834961
    6. '(sorted' → logprob: -10.503927230834961
    7. '("("' → logprob: -10.753927230834961
    8. '()' → logprob: -11.503927230834961
    9. '(en' → logprob: -11.503927230834961
    10. '((' → logprob: -11.753927230834961

Token 83: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.226628895296017e-06
    2. '(
' → logprob: -12.875007629394531
    3. '(`' → logprob: -13.375007629394531
    4. '(set' → logprob: -14.125007629394531
    5. ' (' → logprob: -14.250007629394531
    6. '(

' → logprob: -14.500007629394531
    7. '(s' → logprob: -14.750007629394531
    8. '((' → logprob: -15.500007629394531
    9. ')' → logprob: -15.875007629394531
    10. '()' → logprob: -16.25000762939453

Token 84: 'ens' (ID: 696)
  Prédit: 'ens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ens' → logprob: -0.0001664717128733173
    2. ' ens' → logprob: -9.000166893005371
    3. '(' → logprob: -10.625166893005371
    4. ')' → logprob: -11.500166893005371
    5. 'ense' → logprob: -13.375166893005371
    6. 'Ens' → logprob: -13.750166893005371
    7. '```' → logprob: -14.125166893005371
    8. 'ess' → logprob: -14.250166893005371
    9. ' ' → logprob: -14.375166893005371
    10. 'set' → logprob: -15.000166893005371

Token 85: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023249439895153046
    2. '))' → logprob: -3.773249387741089
    3. ' )' → logprob: -13.148249626159668
    4. ')))' → logprob: -14.398249626159668
    5. ')}' → logprob: -14.648249626159668
    6. ')`' → logprob: -15.273249626159668
    7. ')
' → logprob: -15.398249626159668
    8. '(' → logprob: -16.27324867248535
    9. '),' → logprob: -16.39824867248535
    10. '})' → logprob: -16.77324867248535

Token 86: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17827726900577545
    2. '<|end|>' → logprob: -1.9282772541046143
    3. '#' → logprob: -4.553277492523193
    4. '```' → logprob: -5.803277492523193
    5. '
' → logprob: -6.678277492523193
    6. '\n' → logprob: -6.803277492523193
    7. '\' → logprob: -7.803277492523193
    8. ' ' → logprob: -7.803277492523193
    9. '<|end|>' → logprob: -8.053277015686035
    10. ' )' → logprob: -9.053277015686035

Token 88: ' Comb' (ID: 37810)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: 'ien' (ID: 847)
  Prédit: 'ien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ien' → logprob: -0.001587939215824008
    2. 'ient' → logprob: -6.751587867736816
    3. 'iens' → logprob: -8.001587867736816
    4. 'iend' → logprob: -10.251587867736816
    5. 'ién' → logprob: -11.501587867736816
    6. 'i' → logprob: -11.501587867736816
    7. 'ie' → logprob: -12.126587867736816
    8. '```' → logprob: -12.751587867736816
    9. '#' → logprob: -12.876587867736816
    10. ' ien' → logprob: -13.376587867736816

Token 90: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' trucs' (ID: 151878)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.527768075466156
    2. ' caractères' → logprob: -2.402768135070801
    3. 'élé' → logprob: -2.777768135070801
    4. ' éléments' → logprob: -3.402768135070801
    5. ' unique' → logprob: -3.402768135070801
    6. ' ' → logprob: -3.527768135070801
    7. ' valeurs' → logprob: -3.527768135070801
    8. ' mots' → logprob: -4.277768135070801
    9. ' lines' → logprob: -4.277768135070801
    10. 's' → logprob: -4.402768135070801

Token 92: ' uniques' (ID: 156848)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 31.87%
Précision adaptée (1ère position): 31.87%
Précision (top 10): 59.34%
================================================================================
