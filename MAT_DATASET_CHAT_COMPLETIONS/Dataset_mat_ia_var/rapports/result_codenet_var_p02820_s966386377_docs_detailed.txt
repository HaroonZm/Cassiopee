================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def compute_max_score():
    """
    Calculates the maximum score achievable in a hand game ("Rock, Paper, Scissors") with constraints.
    The game is played over n rounds with three scoring possibilities (for each winning move).
    Each move cannot be repeated in the same group separated by k rounds.

    The function reads input values for number of rounds, group size, scores for each move, and the opponent's moves.
    It outputs the total score, applying the game constraints.

    Input format (from stdin):
        n k         - Number of rounds and group size (separated by space)
        R S P       - Scores for winning with Rock, Scissors, Paper (separated by space)
        t           - String of opponent moves, each character: 'r', 's', or 'p'

    Output:
        Prints the maximum possible score (as per the rules and constraints).

    Example input:
        5 2
        1 2 3
        rsrps

    Example output:
        10
    """
    # Read and unpack basic input values:
    n, k = map(int, input().split())      # n = total rounds, k = repeat constraint
    R, S, P = map(int, input().split())   # R = points for Rock, S = for Scissors, P = for Paper
    t = input()                           # Opponent's moves as a string (n letters)

    ans = 0       # To accumulate the final score
    win = []      # To track our own move for each round (for possible repeat checking)

    # First pass: Choose the best move against each of the opponent's moves and add score
    for tt in t:
        if tt == 'r':
            # Opponent throws Rock, we win with Paper
            win.append('p')
            ans += P
        elif tt == 's':
            # Opponent throws Scissors, we win with Rock
            win.append('r')
            ans += R
        else:
            # Opponent throws Paper, we win with Scissors
            win.append('s')
            ans += S

    # Second pass: Adjust for not being allowed to make the same move within each k-group consecutively
    for i in range(k):
        # Extract every k-th move starting from index i: this forms a "group"
        l = win[i::k]
        # For each group, check for consecutive identical wins and nullify (subtract) one occurrence as required
        for j in range(1, len(l)):
            if l[j] == l[j-1]:
                if l[j] == 'p':
                    ans -= P
                elif l[j] == 'r':
                    ans -= R
                else:  # l[j] == 's'
                    ans -= S
                l[j] = 'z'  # Mark this move as "used/invalid", so it doesn't cause further subtractions

    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' compute' (ID: 23864)
  → Token d'amorce (pas de prédiction)

Token 2: '_max' (ID: 13731)
  → Token d'amorce (pas de prédiction)

Token 3: '_score' (ID: 22555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009877323172986507
    2. '(_' → logprob: -6.0098772048950195
    3. '_value' → logprob: -6.1348772048950195
    4. '_length' → logprob: -6.6348772048950195
    5. '_max' → logprob: -6.8848772048950195
    6. '```' → logprob: -7.6348772048950195
    7. ' _' → logprob: -8.25987720489502
    8. '_parent' → logprob: -8.38487720489502
    9. ')_' → logprob: -8.75987720489502
    10. '_size' → logprob: -9.00987720489502

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12836073338985443
    2. '_' → logprob: -2.1283607482910156
    3. '(_' → logprob: -7.378360748291016
    4. '```' → logprob: -8.128360748291016
    5. '(_:' → logprob: -8.878360748291016
    6. ' (' → logprob: -9.753360748291016
    7. '_:' → logprob: -9.878360748291016
    8. '_(' → logprob: -10.128360748291016
    9. '(:' → logprob: -11.128360748291016
    10. '("("' → logprob: -11.503360748291016

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05340665578842163
    2. '():' → logprob: -3.4284067153930664
    3. '   ' → logprob: -4.803406715393066
    4. '```' → logprob: -5.428406715393066
    5. '\' → logprob: -5.803406715393066
    6. '(' → logprob: -6.053406715393066
    7. ':
' → logprob: -8.053406715393066
    8. '\n' → logprob: -8.178406715393066
    9. '(:' → logprob: -8.553406715393066
    10. '    
' → logprob: -8.553406715393066

Token 6: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8653146028518677
    2. '   ' → logprob: -1.2403146028518677
    3. '(' → logprob: -2.740314483642578
    4. '\' → logprob: -2.740314483642578
    5. '_' → logprob: -3.240314483642578
    6. '    ' → logprob: -3.740314483642578
    7. ''' → logprob: -3.990314483642578
    8. 'return' → logprob: -4.115314483642578
    9. '```' → logprob: -4.990314483642578
    10. '    
' → logprob: -5.240314483642578

Token 7: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.9671904444694519
    2. '"""' → logprob: -1.3421905040740967
    3. '   ' → logprob: -1.9671905040740967
    4. 'Returns' → logprob: -2.4671905040740967
    5. 'Find' → logprob: -3.8421905040740967
    6. 'Calcul' → logprob: -4.092190265655518
    7. ' Calculate' → logprob: -4.342190265655518
    8. ' """' → logprob: -4.342190265655518
    9. 'Return' → logprob: -4.342190265655518
    10. ' Calculates' → logprob: -4.342190265655518

Token 8: ' Calculates' (ID: 143745)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.1850537210702896
    2. 'Compute' → logprob: -2.685053825378418
    3. 'Calcul' → logprob: -2.810053825378418
    4. 'Find' → logprob: -4.435053825378418
    5. 'Returns' → logprob: -4.560053825378418
    6. '   ' → logprob: -4.685053825378418
    7. 'Return' → logprob: -5.435053825378418
    8. '"""' → logprob: -6.310053825378418
    9. 'Comput' → logprob: -6.310053825378418
    10. ' Calculates' → logprob: -8.560053825378418

Token 9: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.019732460379600525
    2. 'the' → logprob: -4.019732475280762
    3. ' maximum' → logprob: -7.269732475280762
    4. '   ' → logprob: -8.269732475280762
    5. '<|end|>' → logprob: -9.144732475280762
    6. ' maximal' → logprob: -9.519732475280762
    7. ' highest' → logprob: -9.644732475280762
    8. ' max' → logprob: -9.769732475280762
    9. '    ' → logprob: -10.144732475280762
    10. 'max' → logprob: -10.269732475280762

Token 10: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.004902838729321957
    2. 'maximum' → logprob: -5.8799028396606445
    3. ' max' → logprob: -6.8799028396606445
    4. ' highest' → logprob: -7.5049028396606445
    5. ' maximal' → logprob: -8.129902839660645
    6. 'max' → logprob: -8.879902839660645
    7. ' best' → logprob: -10.254902839660645
    8. ' total' → logprob: -11.254902839660645
    9. '   ' → logprob: -11.379902839660645
    10. ' possible' → logprob: -11.379902839660645

Token 11: ' score' (ID: 8429)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.17910031974315643
    2. ' score' → logprob: -1.9291002750396729
    3. ' achievable' → logprob: -4.929100513458252
    4. '_' → logprob: -5.679100513458252
    5. ' value' → logprob: -5.804100513458252
    6. 'possible' → logprob: -5.929100513458252
    7. '_possible' → logprob: -7.429100513458252
    8. '_score' → logprob: -8.054100036621094
    9. ' ' → logprob: -8.179100036621094
    10. '   ' → logprob: -8.304100036621094

Token 12: ' achievable' (ID: 118877)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8643603324890137
    2. ' ' → logprob: -1.3643603324890137
    3. ' that' → logprob: -2.2393603324890137
    4. ' from' → logprob: -3.3643603324890137
    5. ' possible' → logprob: -3.4893603324890137
    6. ' for' → logprob: -3.4893603324890137
    7. '_' → logprob: -3.7393603324890137
    8. '    ' → logprob: -4.114360332489014
    9. '.' → logprob: -4.364360332489014
    10. '```' → logprob: -4.364360332489014

Token 13: ' in' (ID: 306)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.4816223084926605
    2. '   ' → logprob: -1.356622338294983
    3. '.' → logprob: -2.9816222190856934
    4. ' from' → logprob: -3.4816222190856934
    5. ' ' → logprob: -4.606622219085693
    6. ' in' → logprob: -4.731622219085693
    7. 'from' → logprob: -5.106622219085693
    8. '```' → logprob: -5.106622219085693
    9. 'by' → logprob: -5.606622219085693
    10. '    ' → logprob: -5.981622219085693

Token 14: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29973551630973816
    2. ' the' → logprob: -1.4247355461120605
    3. ' one' → logprob: -4.5497355461120605
    4. ' any' → logprob: -5.6747355461120605
    5. ' this' → logprob: -6.4247355461120605
    6. ' an' → logprob: -6.5497355461120605
    7. 'a' → logprob: -7.5497355461120605
    8. ' each' → logprob: -7.7997355461120605
    9. 'the' → logprob: -8.924735069274902
    10. ' given' → logprob: -9.174735069274902

Token 15: ' hand' (ID: 1803)
  Prédit: ' game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' game' → logprob: -0.4150990843772888
    2. ' given' → logprob: -1.4150991439819336
    3. ' single' → logprob: -2.5400991439819336
    4. 'game' → logprob: -4.790099143981934
    5. ' test' → logprob: -5.915099143981934
    6. 'single' → logprob: -6.290099143981934
    7. 'given' → logprob: -6.665099143981934
    8. ' quiz' → logprob: -7.415099143981934
    9. ' competition' → logprob: -7.790099143981934
    10. ' sequence' → logprob: -7.915099143981934

Token 16: ' game' (ID: 2813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08435453474521637
    2. '.' → logprob: -2.9593546390533447
    3. '```' → logprob: -4.209354400634766
    4. ' by' → logprob: -5.209354400634766
    5. ' from' → logprob: -6.334354400634766
    6. ',' → logprob: -6.459354400634766
    7. ' ' → logprob: -7.084354400634766
    8. '    ' → logprob: -7.834354400634766
    9. '    
' → logprob: -7.959354400634766
    10. ' based' → logprob: -7.959354400634766

Token 17: ' ("' (ID: 7109)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6706281900405884
    2. '.' → logprob: -1.1706281900405884
    3. '```' → logprob: -1.9206281900405884
    4. '\n' → logprob: -4.670628070831299
    5. '"' → logprob: -5.420628070831299
    6. '"""
' → logprob: -5.920628070831299
    7. '
' → logprob: -6.045628070831299
    8. '"""' → logprob: -6.420628070831299
    9. '`' → logprob: -6.545628070831299
    10. '.
' → logprob: -6.545628070831299

Token 18: 'Rock' (ID: 47408)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.2813018560409546
    2. '"' → logprob: -1.6563018560409546
    3. ' of' → logprob: -1.6563018560409546
    4. ' ")' → logprob: -2.406301975250244
    5. '").' → logprob: -2.781301975250244
    6. 'of' → logprob: -2.781301975250244
    7. ' ").' → logprob: -3.656301975250244
    8. ' ' → logprob: -4.406301975250244
    9. 'p' → logprob: -4.406301975250244
    10. ' "' → logprob: -4.406301975250244

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2825783491134644
    2. '-P' → logprob: -1.4075783491134644
    3. '")' → logprob: -1.6575783491134644
    4. '-paper' → logprob: -2.032578468322754
    5. '   ' → logprob: -2.907578468322754
    6. '"' → logprob: -3.282578468322754
    7. '-' → logprob: -3.407578468322754
    8. 'Paper' → logprob: -3.782578468322754
    9. ' Paper' → logprob: -5.407578468322754
    10. ')' → logprob: -7.407578468322754

Token 20: ' Paper' (ID: 23804)
  Prédit: 'Paper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Paper' → logprob: -0.288344144821167
    2. ' Paper' → logprob: -1.413344144821167
    3. ' paper' → logprob: -5.538344383239746
    4. '    ' → logprob: -6.413344383239746
    5. '   ' → logprob: -6.788344383239746
    6. 'paper' → logprob: -8.288344383239746
    7. '<|end|>' → logprob: -9.913344383239746
    8. 'Sc' → logprob: -10.163344383239746
    9. ' scissors' → logprob: -10.538344383239746
    10. '  ' → logprob: -10.538344383239746

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030825156718492508
    2. 'Sc' → logprob: -4.030825138092041
    3. '")' → logprob: -5.155825138092041
    4. ' Sc' → logprob: -5.405825138092041
    5. ' ,' → logprob: -7.405825138092041
    6. '",' → logprob: -7.530825138092041
    7. '   ' → logprob: -8.1558256149292
    8. 's' → logprob: -8.4058256149292
    9. 'S' → logprob: -8.5308256149292
    10. '-' → logprob: -9.0308256149292

Token 22: ' Sc' (ID: 3380)
  Prédit: ' Sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sc' → logprob: -0.2732623815536499
    2. 'Sc' → logprob: -1.52326238155365
    3. ' scissors' → logprob: -3.8982625007629395
    4. '")' → logprob: -8.273262023925781
    5. '```' → logprob: -9.023262023925781
    6. ' ' → logprob: -9.273262023925781
    7. '   ' → logprob: -9.273262023925781
    8. '_sc' → logprob: -9.648262023925781
    9. '-' → logprob: -10.898262023925781
    10. ' Rock' → logprob: -10.898262023925781

Token 23: 'issors' (ID: 69357)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.06907916069030762
    2. 'or' → logprob: -2.8190791606903076
    3. '```' → logprob: -5.944079399108887
    4. 'issors' → logprob: -6.069079399108887
    5. '"""' → logprob: -7.194079399108887
    6. '   ' → logprob: -8.319079399108887
    7. 'oring' → logprob: -8.819079399108887
    8. 'is' → logprob: -8.819079399108887
    9. 'r' → logprob: -8.819079399108887
    10. 'ore' → logprob: -8.944079399108887

Token 24: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05396398529410362
    2. '")
' → logprob: -3.3039638996124268
    3. '").' → logprob: -4.928964138031006
    4. '"' → logprob: -5.428964138031006
    5. ')' → logprob: -6.428964138031006
    6. '").
' → logprob: -6.678964138031006
    7. ' ")' → logprob: -7.428964138031006
    8. '   ' → logprob: -8.553963661193848
    9. ' ")
' → logprob: -8.678963661193848
    10. '"):
' → logprob: -9.553963661193848

Token 25: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025508882477879524
    2. '```' → logprob: -4.150508880615234
    3. '\n' → logprob: -5.400508880615234
    4. '
' → logprob: -6.525508880615234
    5. '    
' → logprob: -6.775508880615234
    6. '\' → logprob: -7.650508880615234
    7. '`' → logprob: -7.775508880615234
    8. '.' → logprob: -8.275508880615234
    9. '"' → logprob: -8.275508880615234
    10. '    ' → logprob: -8.525508880615234

Token 26: ' constraints' (ID: 31060)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.295788049697876
    2. ' given' → logprob: -1.420788049697876
    3. 'out' → logprob: -1.670788049697876
    4. ' a' → logprob: -1.795788049697876
    5. ' each' → logprob: -2.420788049697876
    6. ' an' → logprob: -3.920788049697876
    7. ' possible' → logprob: -5.420787811279297
    8. 'in' → logprob: -6.420787811279297
    9. ' dynamic' → logprob: -6.670787811279297
    10. ' one' → logprob: -6.795787811279297

Token 27: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0694538950920105
    2. '.' → logprob: -3.9444539546966553
    3. ' ' → logprob: -4.194453716278076
    4. ':' → logprob: -5.444453716278076
    5. '    ' → logprob: -5.569453716278076
    6. '```' → logprob: -5.569453716278076
    7. ' for' → logprob: -5.694453716278076
    8. ' that' → logprob: -5.944453716278076
    9. ',' → logprob: -5.944453716278076
    10. '  ' → logprob: -6.569453716278076

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049547694623470306
    2. '```' → logprob: -3.9245476722717285
    3. '`' → logprob: -4.7995476722717285
    4. '\n' → logprob: -5.2995476722717285
    5. ''' → logprob: -5.9245476722717285
    6. '    
' → logprob: -6.0495476722717285
    7. '    ' → logprob: -6.0495476722717285
    8. '"' → logprob: -6.1745476722717285
    9. '\' → logprob: -6.4245476722717285
    10. '
' → logprob: -7.1745476722717285

Token 29: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051436398178339005
    2. '```' → logprob: -3.676436424255371
    3. '\n' → logprob: -3.926436424255371
    4. '    
' → logprob: -6.926436424255371
    5. '
' → logprob: -7.051436424255371
    6. '`' → logprob: -7.426436424255371
    7. '\' → logprob: -7.426436424255371
    8. '    ' → logprob: -7.676436424255371
    9. '"""' → logprob: -7.801436424255371
    10. ' 
' → logprob: -8.801436424255371

Token 30: ' game' (ID: 2813)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18014681339263916
    2. ' maximum' → logprob: -3.3051466941833496
    3. ' constraints' → logprob: -3.8051466941833496
    4. ' user' → logprob: -4.05514669418335
    5. ' max' → logprob: -4.43014669418335
    6. ' next' → logprob: -4.55514669418335
    7. ' current' → logprob: -5.18014669418335
    8. 'def' → logprob: -5.30514669418335
    9. ' best' → logprob: -5.30514669418335
    10. ' ' → logprob: -5.30514669418335

Token 31: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.715190589427948
    2. ' ' → logprob: -0.840190589427948
    3. '   ' → logprob: -4.340190410614014
    4. ' involves' → logprob: -4.340190410614014
    5. ' of' → logprob: -4.715190410614014
    6. ' consists' → logprob: -4.840190410614014
    7. ' can' → logprob: -5.465190410614014
    8. ' def' → logprob: -5.590190410614014
    9. ' has' → logprob: -5.840190410614014
    10. '  ' → logprob: -5.840190410614014

Token 32: ' played' (ID: 10518)
  Prédit: ' played'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' played' → logprob: -0.006245276425033808
    2. ' possible' → logprob: -6.506245136260986
    3. 'played' → logprob: -6.506245136260986
    4. ' a' → logprob: -7.006245136260986
    5. ' based' → logprob: -7.756245136260986
    6. ' to' → logprob: -8.006245613098145
    7. ' constrained' → logprob: -8.631245613098145
    8. ' designed' → logprob: -8.631245613098145
    9. '   ' → logprob: -8.881245613098145
    10. ' limited' → logprob: -8.881245613098145

Token 33: ' over' (ID: 1072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0168501138687134
    2. ' by' → logprob: -1.0168501138687134
    3. ' with' → logprob: -1.7668501138687134
    4. '   ' → logprob: -3.516849994659424
    5. ' in' → logprob: -3.766849994659424
    6. ' to' → logprob: -4.516849994659424
    7. ' using' → logprob: -4.641849994659424
    8. ' for' → logprob: -5.016849994659424
    9. ' on' → logprob: -5.141849994659424
    10. '  ' → logprob: -5.266849994659424

Token 34: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09965759515762329
    2. ' a' → logprob: -2.8496575355529785
    3. 'n' → logprob: -3.8496575355529785
    4. ' multiple' → logprob: -4.7246575355529785
    5. ' the' → logprob: -5.9746575355529785
    6. ' N' → logprob: -6.8496575355529785
    7. ' an' → logprob: -6.9746575355529785
    8. ' ' → logprob: -7.3496575355529785
    9. '   ' → logprob: -7.4746575355529785
    10. ' one' → logprob: -7.7246575355529785

Token 35: ' rounds' (ID: 37740)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -1.7432067394256592
    2. ' ' → logprob: -1.8682067394256592
    3. '_' → logprob: -1.9932067394256592
    4. ' turns' → logprob: -1.9932067394256592
    5. ' rounds' → logprob: -2.993206739425659
    6. ' tokens' → logprob: -2.993206739425659
    7. ' steps' → logprob: -3.493206739425659
    8. '_tokens' → logprob: -3.618206739425659
    9. ' days' → logprob: -3.743206739425659
    10. '_steps' → logprob: -3.743206739425659

Token 36: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0940135046839714
    2. ',' → logprob: -2.7190134525299072
    3. 'n' → logprob: -4.219013690948486
    4. '.' → logprob: -5.594013690948486
    5. ':' → logprob: -6.219013690948486
    6. '```' → logprob: -7.094013690948486
    7. ' ' → logprob: -8.094013214111328
    8. ' and' → logprob: -8.219013214111328
    9. '\n' → logprob: -8.344013214111328
    10. '
' → logprob: -8.344013214111328

Token 37: ' three' (ID: 3407)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3356700539588928
    2. ' the' → logprob: -2.335669994354248
    3. ' each' → logprob: -2.710669994354248
    4. ' an' → logprob: -2.960669994354248
    5. ' given' → logprob: -3.210669994354248
    6. ' players' → logprob: -5.085669994354248
    7. ' certain' → logprob: -5.210669994354248
    8. ' n' → logprob: -5.710669994354248
    9. ' constraints' → logprob: -6.085669994354248
    10. ' some' → logprob: -6.210669994354248

Token 38: ' scoring' (ID: 35765)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.2070276141166687
    2. ' possible' → logprob: -2.0820276737213135
    3. ' options' → logprob: -3.5820276737213135
    4. ' moves' → logprob: -4.332027435302734
    5. ' strategies' → logprob: -5.332027435302734
    6. ' players' → logprob: -5.582027435302734
    7. ' types' → logprob: -5.957027435302734
    8. ' tokens' → logprob: -6.207027435302734
    9. 'choices' → logprob: -6.457027435302734
    10. ' different' → logprob: -6.707027435302734

Token 39: ' possibilities' (ID: 31061)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -1.64285147190094
    2. ' options' → logprob: -1.89285147190094
    3. ' possibilities' → logprob: -1.89285147190094
    4. ' ' → logprob: -2.5178513526916504
    5. '_per' → logprob: -2.7678513526916504
    6. ' criteria' → logprob: -2.8928513526916504
    7. ' strategies' → logprob: -2.8928513526916504
    8. ' per' → logprob: -3.0178513526916504
    9. ' for' → logprob: -3.8928513526916504
    10. ' points' → logprob: -4.14285135269165

Token 40: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3380975723266602
    2. ',' → logprob: -1.4630975723266602
    3. '.' → logprob: -1.4630975723266602
    4. ' for' → logprob: -1.5880975723266602
    5. ' ' → logprob: -4.21309757232666
    6. '```' → logprob: -4.58809757232666
    7. ')' → logprob: -4.96309757232666
    8. '   ' → logprob: -5.21309757232666
    9. 'for' → logprob: -5.21309757232666
    10. '(' → logprob: -5.33809757232666

Token 41: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5964075922966003
    2. ':' → logprob: -1.5964076519012451
    3. ' for' → logprob: -2.471407651901245
    4. ',' → logprob: -2.971407651901245
    5. '   ' → logprob: -4.096407413482666
    6. '),' → logprob: -4.221407413482666
    7. ' )' → logprob: -4.346407413482666
    8. ').' → logprob: -4.346407413482666
    9. '"' → logprob: -5.096407413482666
    10. 'r' → logprob: -5.096407413482666

Token 42: ' each' (ID: 2454)
  Prédit: ' rock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rock' → logprob: -0.6236656904220581
    2. ' each' → logprob: -1.498665690422058
    3. ' the' → logprob: -3.1236658096313477
    4. ' Rock' → logprob: -4.123665809631348
    5. ' "' → logprob: -4.248665809631348
    6. ' winning' → logprob: -4.248665809631348
    7. 'rock' → logprob: -4.248665809631348
    8. ' ' → logprob: -4.373665809631348
    9. ' scissors' → logprob: -4.498665809631348
    10. 'each' → logprob: -4.623665809631348

Token 43: ' winning' (ID: 15212)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.2841200828552246
    2. ' move' → logprob: -1.7841200828552246
    3. ' ' → logprob: -2.0341200828552246
    4. ' option' → logprob: -2.4091200828552246
    5. ')' → logprob: -2.5341200828552246
    6. ' hand' → logprob: -2.7841200828552246
    7. ' token' → logprob: -3.1591200828552246
    8. ' choice' → logprob: -3.2841200828552246
    9. ' possible' → logprob: -3.5341200828552246
    10. ' player' → logprob: -4.284120082855225

Token 44: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.5629406571388245
    2. ')' → logprob: -2.1879405975341797
    3. ' )' → logprob: -2.1879405975341797
    4. '_' → logprob: -2.3129405975341797
    5. ' ' → logprob: -2.9379405975341797
    6. ' hand' → logprob: -3.6879405975341797
    7. '_move' → logprob: -5.43794059753418
    8. '   ' → logprob: -5.93794059753418
    9. ' player' → logprob: -6.18794059753418
    10. ' token' → logprob: -6.18794059753418

Token 45: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09910726547241211
    2. '):' → logprob: -2.849107265472412
    3. ' )' → logprob: -3.849107265472412
    4. ':' → logprob: -4.849107265472412
    5. ').' → logprob: -5.724107265472412
    6. ' ):' → logprob: -6.474107265472412
    7. ',' → logprob: -6.974107265472412
    8. 's' → logprob: -7.349107265472412
    9. '),' → logprob: -7.849107265472412
    10. ' :' → logprob: -9.34910774230957

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2367870956659317
    2. 'n' → logprob: -1.8617870807647705
    3. ' 
' → logprob: -3.9867870807647705
    4. ' ' → logprob: -5.11178731918335
    5. '\n' → logprob: -5.23678731918335
    6. '```' → logprob: -5.23678731918335
    7. '    
' → logprob: -5.61178731918335
    8. ')' → logprob: -5.73678731918335
    9. '  
' → logprob: -5.86178731918335
    10. '
' → logprob: -5.86178731918335

Token 47: ' Each' (ID: 11555)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40044477581977844
    2. 'n' → logprob: -1.900444746017456
    3. ' 
' → logprob: -2.775444746017456
    4. '\n' → logprob: -2.900444746017456
    5. '```' → logprob: -4.150444984436035
    6. '\' → logprob: -4.275444984436035
    7. ' ' → logprob: -4.900444984436035
    8. '
' → logprob: -5.025444984436035
    9. '    ' → logprob: -5.525444984436035
    10. '    
' → logprob: -5.900444984436035

Token 48: ' move' (ID: 5275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7099053859710693
    2. ' ' → logprob: -0.7099053859710693
    3. 'n' → logprob: -4.834905624389648
    4. ' _' → logprob: -6.084905624389648
    5. ')' → logprob: -6.709905624389648
    6. ' )' → logprob: -7.209905624389648
    7. ' n' → logprob: -7.584905624389648
    8. ' ,' → logprob: -7.834905624389648
    9. ' round' → logprob: -7.834905624389648
    10. '_n' → logprob: -8.084905624389648

Token 49: ' cannot' (ID: 6284)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.813027560710907
    2. ' is' → logprob: -1.3130276203155518
    3. ' ' → logprob: -1.8130276203155518
    4. '<|end|>' → logprob: -3.6880276203155518
    5. '```' → logprob: -4.313027381896973
    6. '  ' → logprob: -4.438027381896973
    7. ''' → logprob: -4.938027381896973
    8. ' can' → logprob: -4.938027381896973
    9. ')' → logprob: -5.188027381896973
    10. ' _' → logprob: -5.313027381896973

Token 50: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0013108364073559642
    2. '_' → logprob: -7.8763108253479
    3. 'be' → logprob: -8.126311302185059
    4. ' ' → logprob: -8.626311302185059
    5. ' have' → logprob: -9.001311302185059
    6. '_be' → logprob: -9.501311302185059
    7. ' follow' → logprob: -9.501311302185059
    8. ' immediately' → logprob: -9.876311302185059
    9. '_follow' → logprob: -10.251311302185059
    10. ' exceed' → logprob: -11.251311302185059

Token 51: ' repeated' (ID: 24161)
  Prédit: ' played'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' played' → logprob: -0.8238024115562439
    2. ' repeated' → logprob: -1.1988024711608887
    3. 'played' → logprob: -2.3238024711608887
    4. ' chosen' → logprob: -2.6988024711608887
    5. ' used' → logprob: -3.1988024711608887
    6. 'chosen' → logprob: -3.8238024711608887
    7. 'used' → logprob: -5.323802471160889
    8. ' made' → logprob: -5.448802471160889
    9. 'taken' → logprob: -5.448802471160889
    10. ' ' → logprob: -5.823802471160889

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9412456750869751
    2. ' on' → logprob: -1.316245675086975
    3. ' for' → logprob: -1.816245675086975
    4. ' more' → logprob: -2.6912455558776855
    5. ' two' → logprob: -3.5662455558776855
    6. '_' → logprob: -3.8162455558776855
    7. ' ' → logprob: -3.9412455558776855
    8. 'in' → logprob: -5.0662455558776855
    9. 'for' → logprob: -5.0662455558776855
    10. ' immediately' → logprob: -5.3162455558776855

Token 53: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8550357818603516
    2. 'two' → logprob: -1.7300357818603516
    3. 'con' → logprob: -2.1050357818603516
    4. ' two' → logprob: -2.1050357818603516
    5. 'n' → logprob: -3.1050357818603516
    6. 'the' → logprob: -3.2300357818603516
    7. ' ' → logprob: -3.9800357818603516
    8. ' the' → logprob: -4.605035781860352
    9. '    ' → logprob: -5.105035781860352
    10. 'a' → logprob: -5.230035781860352

Token 54: ' same' (ID: 2684)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.8462550640106201
    2. 'row' → logprob: -1.8462550640106201
    3. ' previous' → logprob: -2.22125506401062
    4. 'previous' → logprob: -2.22125506401062
    5. 'same' → logprob: -2.59625506401062
    6. ' row' → logprob: -2.59625506401062
    7. ' k' → logprob: -3.09625506401062
    8. ' ' → logprob: -3.09625506401062
    9. 'k' → logprob: -3.09625506401062
    10. ' next' → logprob: -3.47125506401062

Token 55: ' group' (ID: 3566)
  Prédit: ' round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' round' → logprob: -0.19148053228855133
    2. 'round' → logprob: -2.6914806365966797
    3. ' position' → logprob: -3.1914806365966797
    4. 'position' → logprob: -4.44148063659668
    5. ' turn' → logprob: -4.56648063659668
    6. ' ' → logprob: -4.69148063659668
    7. '   ' → logprob: -5.19148063659668
    8. '```' → logprob: -5.69148063659668
    9. ' consecutive' → logprob: -5.69148063659668
    10. ' sequence' → logprob: -5.81648063659668

Token 56: ' separated' (ID: 33930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42312678694725037
    2. 's' → logprob: -2.048126697540283
    3. ' ' → logprob: -2.298126697540283
    4. '   ' → logprob: -4.048126697540283
    5. ':' → logprob: -4.798126697540283
    6. '`' → logprob: -4.798126697540283
    7. ',' → logprob: -4.923126697540283
    8. '_
' → logprob: -4.923126697540283
    9. '```' → logprob: -5.048126697540283
    10. '(' → logprob: -5.173126697540283

Token 57: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.03406921774148941
    2. 'by' → logprob: -3.409069299697876
    3. '   ' → logprob: -8.784069061279297
    4. '_' → logprob: -9.284069061279297
    5. ' ' → logprob: -9.409069061279297
    6. '  ' → logprob: -10.409069061279297
    7. '\n' → logprob: -11.659069061279297
    8. 'b' → logprob: -11.659069061279297
    9. '```' → logprob: -11.659069061279297
    10. '<|end|>' → logprob: -12.534069061279297

Token 58: ' k' (ID: 372)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07979285717010498
    2. 'a' → logprob: -3.7047929763793945
    3. ' two' → logprob: -4.0797929763793945
    4. ' ' → logprob: -4.7047929763793945
    5. '\n' → logprob: -4.7047929763793945
    6. ' an' → logprob: -5.5797929763793945
    7. ' n' → logprob: -5.8297929763793945
    8. ' one' → logprob: -6.3297929763793945
    9. ' spaces' → logprob: -6.7047929763793945
    10. ' at' → logprob: -6.8297929763793945

Token 59: ' rounds' (ID: 37740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9237364530563354
    2. ' ' → logprob: -1.5487364530563354
    3. ')' → logprob: -1.9237364530563354
    4. '_' → logprob: -2.048736572265625
    5. ':' → logprob: -3.423736572265625
    6. '):' → logprob: -3.673736572265625
    7. '\n' → logprob: -4.798736572265625
    8. '.' → logprob: -5.173736572265625
    9. '    ' → logprob: -5.298736572265625
    10. '
' → logprob: -5.548736572265625

Token 60: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33275917172431946
    2. 'n' → logprob: -2.082759141921997
    3. ':' → logprob: -2.582759141921997
    4. '\n' → logprob: -3.457759141921997
    5. '(n' → logprob: -4.457759380340576
    6. '
' → logprob: -4.582759380340576
    7. '\' → logprob: -5.082759380340576
    8. ')' → logprob: -5.582759380340576
    9. '    
' → logprob: -5.707759380340576
    10. '```' → logprob: -5.832759380340576

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03811240941286087
    2. ')' → logprob: -3.9131124019622803
    3. ' ' → logprob: -4.538112640380859
    4. 'n' → logprob: -5.538112640380859
    5. '    ' → logprob: -7.038112640380859
    6. '```' → logprob: -7.913112640380859
    7. ' 
' → logprob: -8.28811264038086
    8. ' )' → logprob: -8.28811264038086
    9. '\n' → logprob: -8.66311264038086
    10. '"""' → logprob: -8.66311264038086

Token 62: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5699260830879211
    2. 'n' → logprob: -0.9449260830879211
    3. '```' → logprob: -4.5699262619018555
    4. '
' → logprob: -4.8199262619018555
    5. ' n' → logprob: -4.9449262619018555
    6. ')' → logprob: -5.0699262619018555
    7. '    ' → logprob: -5.3199262619018555
    8. ' ' → logprob: -6.3199262619018555
    9. '\n' → logprob: -6.6949262619018555
    10. '"""' → logprob: -6.9449262619018555

Token 63: ' function' (ID: 1114)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6456785798072815
    2. ' n' → logprob: -0.7706785798072815
    3. ' input' → logprob: -5.395678520202637
    4. ' ' → logprob: -6.145678520202637
    5. '   ' → logprob: -6.270678520202637
    6. ' code' → logprob: -6.645678520202637
    7. 'def' → logprob: -7.145678520202637
    8. ' next' → logprob: -7.645678520202637
    9. ' import' → logprob: -7.895678520202637
    10. 'import' → logprob: -8.520678520202637

Token 64: ' reads' (ID: 31523)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3343786895275116
    2. ' ' → logprob: -2.084378719329834
    3. ' takes' → logprob: -2.709378719329834
    4. ' accepts' → logprob: -3.834378719329834
    5. ' continues' → logprob: -4.334378719329834
    6. ' def' → logprob: -4.709378719329834
    7. ':' → logprob: -5.084378719329834
    8. ' will' → logprob: -5.084378719329834
    9. ' receives' → logprob: -5.084378719329834
    10. ' should' → logprob: -5.334378719329834

Token 65: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2042085826396942
    2. ' input' → logprob: -2.8292086124420166
    3. 'n' → logprob: -3.0792086124420166
    4. ' the' → logprob: -3.5792086124420166
    5. ' ' → logprob: -3.8292086124420166
    6. '<|end|>' → logprob: -4.4542083740234375
    7. '   ' → logprob: -5.5792083740234375
    8. ' a' → logprob: -5.9542083740234375
    9. '<|end|>' → logprob: -6.4542083740234375
    10. 'input' → logprob: -6.4542083740234375

Token 66: ' values' (ID: 4824)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.616259753704071
    2. '   ' → logprob: -1.4912598133087158
    3. '(' → logprob: -2.491259813308716
    4. 's' → logprob: -3.616259813308716
    5. '<|end|>' → logprob: -3.616259813308716
    6. '(n' → logprob: -4.616259574890137
    7. ':' → logprob: -4.741259574890137
    8. ')' → logprob: -4.866259574890137
    9. '```' → logprob: -4.866259574890137
    10. ' ' → logprob: -4.991259574890137

Token 67: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2540234625339508
    2. '()' → logprob: -2.504023551940918
    3. '(' → logprob: -2.754023551940918
    4. ':' → logprob: -3.879023551940918
    5. ' from' → logprob: -4.254023551940918
    6. '```' → logprob: -4.504023551940918
    7. 'from' → logprob: -5.629023551940918
    8. ' =' → logprob: -5.879023551940918
    9. '(n' → logprob: -6.004023551940918
    10. '    ' → logprob: -6.129023551940918

Token 68: ' number' (ID: 2086)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16215503215789795
    2. 'n' → logprob: -1.912155032157898
    3. ' the' → logprob: -6.2871551513671875
    4. '```' → logprob: -10.037155151367188
    5. 'the' → logprob: -11.162155151367188
    6. ' ' → logprob: -11.787155151367188
    7. '   ' → logprob: -14.412155151367188
    8. ' input' → logprob: -14.537155151367188
    9. '	n' → logprob: -15.162155151367188
    10. ' a' → logprob: -15.287155151367188

Token 69: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3735958933830261
    2. ')' → logprob: -1.748595952987671
    3. 's' → logprob: -2.498595952987671
    4. ' ' → logprob: -3.498595952987671
    5. '(' → logprob: -5.373595714569092
    6. '=' → logprob: -5.623595714569092
    7. '   ' → logprob: -5.748595714569092
    8. ',' → logprob: -6.123595714569092
    9. ' =' → logprob: -6.998595714569092
    10. '_input' → logprob: -6.998595714569092

Token 70: ' rounds' (ID: 37740)
  Prédit: ' rounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rounds' → logprob: -0.1053207740187645
    2. ' ' → logprob: -2.480320692062378
    3. ' players' → logprob: -4.605320930480957
    4. '_' → logprob: -5.730320930480957
    5. ' lines' → logprob: -6.480320930480957
    6. ' n' → logprob: -7.355320930480957
    7. ' player' → logprob: -8.730320930480957
    8. ' )' → logprob: -9.105320930480957
    9. ' spaces' → logprob: -9.230320930480957
    10. 'n' → logprob: -9.230320930480957

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8518043160438538
    2. '   ' → logprob: -0.8518043160438538
    3. 'n' → logprob: -2.226804256439209
    4. ' and' → logprob: -4.351804256439209
    5. ' n' → logprob: -4.976804256439209
    6. '(n' → logprob: -4.976804256439209
    7. '```' → logprob: -5.851804256439209
    8. ' ,' → logprob: -5.851804256439209
    9. '(' → logprob: -6.226804256439209
    10. ' (' → logprob: -6.976804256439209

Token 72: ' group' (ID: 3566)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02728261984884739
    2. ' ' → logprob: -4.15228271484375
    3. 'n' → logprob: -4.52728271484375
    4. ' )' → logprob: -9.02728271484375
    5. ')' → logprob: -9.77728271484375
    6. '    ' → logprob: -9.90228271484375
    7. ' ,' → logprob: -10.27728271484375
    8. ' ' → logprob: -10.77728271484375
    9. ' and' → logprob: -11.15228271484375
    10. ' k' → logprob: -11.52728271484375

Token 73: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.8779339790344238
    2. '_size' → logprob: -1.6279339790344238
    3. '   ' → logprob: -1.7529339790344238
    4. 's' → logprob: -1.7529339790344238
    5. 'size' → logprob: -4.002933979034424
    6. '_' → logprob: -5.002933979034424
    7. ' ' → logprob: -5.502933979034424
    8. ' s' → logprob: -5.877933979034424
    9. ' _' → logprob: -6.502933979034424
    10. ',' → logprob: -6.752933979034424

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09942526370286942
    2. 'n' → logprob: -3.0994253158569336
    3. '   ' → logprob: -3.2244253158569336
    4. ' n' → logprob: -4.974425315856934
    5. ' and' → logprob: -7.724425315856934
    6. ' ,' → logprob: -7.724425315856934
    7. ' (' → logprob: -7.849425315856934
    8. '(n' → logprob: -7.849425315856934
    9. ',n' → logprob: -8.099425315856934
    10. '=' → logprob: -8.724425315856934

Token 75: ' scores' (ID: 18923)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8376665115356445
    2. ' and' → logprob: -0.9626665115356445
    3. 'n' → logprob: -2.4626665115356445
    4. ' ' → logprob: -3.3376665115356445
    5. ' k' → logprob: -4.3376665115356445
    6. '   ' → logprob: -4.3376665115356445
    7. ' ,' → logprob: -4.7126665115356445
    8. ' t' → logprob: -5.0876665115356445
    9. ',' → logprob: -5.4626665115356445
    10. 't' → logprob: -5.7126665115356445

Token 76: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04100789129734039
    2. '   ' → logprob: -3.9160079956054688
    3. ' for' → logprob: -4.791007995605469
    4. ' ,' → logprob: -5.291007995605469
    5. '=' → logprob: -5.666007995605469
    6. ')' → logprob: -7.166007995605469
    7. ' and' → logprob: -7.291007995605469
    8. 's' → logprob: -7.791007995605469
    9. ' ' → logprob: -8.416007995605469
    10. 'for' → logprob: -8.791007995605469

Token 77: ' each' (ID: 2454)
  Prédit: ' rock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rock' → logprob: -0.28284093737602234
    2. ' each' → logprob: -2.1578409671783447
    3. ' r' → logprob: -3.0328409671783447
    4. ' winning' → logprob: -3.4078409671783447
    5. ' ' → logprob: -3.9078409671783447
    6. ' Rock' → logprob: -4.907840728759766
    7. 'rock' → logprob: -5.282840728759766
    8. 'r' → logprob: -5.532840728759766
    9. ' the' → logprob: -6.032840728759766
    10. '   ' → logprob: -6.782840728759766

Token 78: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.08514977991580963
    2. 'move' → logprob: -3.3351497650146484
    3. ' hand' → logprob: -3.8351497650146484
    4. ' possible' → logprob: -5.460149765014648
    5. ' of' → logprob: -5.710149765014648
    6. '   ' → logprob: -5.960149765014648
    7. ' ' → logprob: -6.085149765014648
    8. 'hand' → logprob: -6.210149765014648
    9. ' choice' → logprob: -6.460149765014648
    10. ' option' → logprob: -7.085149765014648

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26517048478126526
    2. '   ' → logprob: -1.5151704549789429
    3. 'n' → logprob: -4.890170574188232
    4. ' ,' → logprob: -6.390170574188232
    5. ':' → logprob: -6.640170574188232
    6. ',n' → logprob: -7.390170574188232
    7. '(n' → logprob: -7.765170574188232
    8. ')' → logprob: -7.890170574188232
    9. '):' → logprob: -8.140170097351074
    10. ' and' → logprob: -8.390170097351074

Token 80: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17188575863838196
    2. ' and' → logprob: -2.9218857288360596
    3. 'n' → logprob: -3.1718857288360596
    4. ' n' → logprob: -3.7968857288360596
    5. ',' → logprob: -4.421885967254639
    6. '    ' → logprob: -4.671885967254639
    7. ')' → logprob: -5.296885967254639
    8. ' ' → logprob: -5.421885967254639
    9. ' ,' → logprob: -5.921885967254639
    10. ' )' → logprob: -6.171885967254639

Token 81: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11316898465156555
    2. ' moves' → logprob: -3.613168954849243
    3. 'the' → logprob: -3.613168954849243
    4. ' player' → logprob: -4.113169193267822
    5. ' inputs' → logprob: -5.113169193267822
    6. 'n' → logprob: -5.863169193267822
    7. 'moves' → logprob: -5.863169193267822
    8. ' n' → logprob: -5.988169193267822
    9. '   ' → logprob: -6.113169193267822
    10. ' sequences' → logprob: -6.113169193267822

Token 82: ' opponent' (ID: 38519)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7598812580108643
    2. ' moves' → logprob: -1.5098812580108643
    3. 'n' → logprob: -2.3848812580108643
    4. ' player' → logprob: -2.8848812580108643
    5. ' choices' → logprob: -3.3848812580108643
    6. ' n' → logprob: -3.5098812580108643
    7. ' input' → logprob: -4.259881019592285
    8. 'moves' → logprob: -4.509881019592285
    9. ' inputs' → logprob: -4.759881019592285
    10. '   ' → logprob: -4.884881019592285

Token 83: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.5319428443908691
    2. '_input' → logprob: -1.6569428443908691
    3. ' ' → logprob: -3.406942844390869
    4. 's' → logprob: -3.656942844390869
    5. ' input' → logprob: -3.656942844390869
    6. ':' → logprob: -4.031942844390869
    7. '   ' → logprob: -4.031942844390869
    8. ')' → logprob: -4.156942844390869
    9. '_moves' → logprob: -4.156942844390869
    10. '_inputs' → logprob: -4.406942844390869

Token 84: ' moves' (ID: 19523)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -1.2542924880981445
    2. '_' → logprob: -1.5042924880981445
    3. '_move' → logprob: -2.1292924880981445
    4. ''s' → logprob: -2.8792924880981445
    5. ' moves' → logprob: -3.1292924880981445
    6. ' ' → logprob: -3.2542924880981445
    7. ' hand' → logprob: -3.2542924880981445
    8. '_hand' → logprob: -3.2542924880981445
    9. '_choices' → logprob: -3.7542924880981445
    10. ' move' → logprob: -3.7542924880981445

Token 85: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10689178854227066
    2. ':' → logprob: -3.1068918704986572
    3. 'n' → logprob: -3.1068918704986572
    4. '
' → logprob: -5.356891632080078
    5. '    
' → logprob: -6.606891632080078
    6. '.' → logprob: -6.856891632080078
    7. '\n' → logprob: -7.231891632080078
    8. '```' → logprob: -7.231891632080078
    9. '):' → logprob: -7.481891632080078
    10. 'def' → logprob: -7.731891632080078

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04684130474925041
    2. 'n' → logprob: -3.2968413829803467
    3. '```' → logprob: -5.546841144561768
    4. '    
' → logprob: -6.421841144561768
    5. '
' → logprob: -7.546841144561768
    6. '    ' → logprob: -7.796841144561768
    7. ')' → logprob: -7.921841144561768
    8. ':' → logprob: -7.921841144561768
    9. ' 
' → logprob: -8.296841621398926
    10. '   
' → logprob: -8.546841621398926

Token 87: ' It' (ID: 1225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2383948415517807
    2. 'n' → logprob: -1.613394856452942
    3. ' n' → logprob: -5.363394737243652
    4. '```' → logprob: -5.988394737243652
    5. '
' → logprob: -6.238394737243652
    6. '    
' → logprob: -6.988394737243652
    7. ')' → logprob: -7.238394737243652
    8. '    ' → logprob: -8.113394737243652
    9. '\n' → logprob: -8.113394737243652
    10. 'def' → logprob: -8.113394737243652

Token 88: ' outputs' (ID: 32725)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49214985966682434
    2. '_' → logprob: -1.492149829864502
    3. ' reads' → logprob: -2.617149829864502
    4. ':' → logprob: -3.742149829864502
    5. 'n' → logprob: -3.992149829864502
    6. ')' → logprob: -4.367149829864502
    7. '.' → logprob: -5.242149829864502
    8. 's' → logprob: -5.492149829864502
    9. '=' → logprob: -5.617149829864502
    10. '   ' → logprob: -5.742149829864502

Token 89: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.059377267956733704
    2. 'the' → logprob: -4.184377193450928
    3. ' a' → logprob: -4.434377193450928
    4. '<|end|>' → logprob: -4.684377193450928
    5. '   ' → logprob: -5.309377193450928
    6. 'n' → logprob: -5.434377193450928
    7. ' ' → logprob: -5.934377193450928
    8. ':' → logprob: -6.684377193450928
    9. 's' → logprob: -6.809377193450928
    10. '<|end|>' → logprob: -7.059377193450928

Token 90: ' total' (ID: 3609)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.016705166548490524
    2. ' maximal' → logprob: -4.89170503616333
    3. ' total' → logprob: -5.64170503616333
    4. 'maximum' → logprob: -6.26670503616333
    5. ' max' → logprob: -6.51670503616333
    6. ' best' → logprob: -7.51670503616333
    7. 'max' → logprob: -7.64170503616333
    8. ' highest' → logprob: -7.64170503616333
    9. ' final' → logprob: -8.016705513000488
    10. ' maximale' → logprob: -9.516705513000488

Token 91: ' score' (ID: 8429)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.334150493144989
    2. '_' → logprob: -1.3341505527496338
    3. ' score' → logprob: -4.459150314331055
    4. '_score' → logprob: -5.459150314331055
    5. ' _' → logprob: -5.834150314331055
    6. 'score' → logprob: -7.834150314331055
    7. ' possible' → logprob: -8.334150314331055
    8. ' ▁' → logprob: -8.709150314331055
    9. '_possible' → logprob: -9.084150314331055
    10. '  ' → logprob: -9.209150314331055

Token 92: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5589326024055481
    2. '
' → logprob: -2.0589325428009033
    3. '\' → logprob: -2.4339325428009033
    4. '\n' → logprob: -2.6839325428009033
    5. ':' → logprob: -2.8089325428009033
    6. '```' → logprob: -3.5589325428009033
    7. ')' → logprob: -4.808932781219482
    8. 'n' → logprob: -4.933932781219482
    9. ' ' → logprob: -4.933932781219482
    10. '    ' → logprob: -4.933932781219482

Token 93: ' applying' (ID: 24667)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4719351828098297
    2. ' ' → logprob: -1.9719351530075073
    3. '    ' → logprob: -2.596935272216797
    4. ')' → logprob: -2.596935272216797
    5. ' 
' → logprob: -3.721935272216797
    6. 'n' → logprob: -3.971935272216797
    7. '
' → logprob: -4.971935272216797
    8. ' )' → logprob: -5.471935272216797
    9. '#' → logprob: -5.596935272216797
    10. '```' → logprob: -5.596935272216797

Token 94: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15226154029369354
    2. ' constraints' → logprob: -2.52726149559021
    3. ' a' → logprob: -3.77726149559021
    4. ' an' → logprob: -5.027261734008789
    5. 'the' → logprob: -5.027261734008789
    6. '  ' → logprob: -5.777261734008789
    7. ' modulo' → logprob: -5.902261734008789
    8. ' logic' → logprob: -6.152261734008789
    9. ' ' → logprob: -6.402261734008789
    10. ' each' → logprob: -6.527261734008789

Token 95: ' game' (ID: 2813)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.797663688659668
    2. ' constraints' → logprob: -0.922663688659668
    3. ' logic' → logprob: -3.547663688659668
    4. ' maximum' → logprob: -4.047663688659668
    5. 'n' → logprob: -4.297663688659668
    6. ' constraint' → logprob: -4.297663688659668
    7. 'constraints' → logprob: -4.547663688659668
    8. ' given' → logprob: -4.672663688659668
    9. '  ' → logprob: -5.047663688659668
    10. ' best' → logprob: -5.422663688659668

Token 96: ' constraints' (ID: 31060)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13516011834144592
    2. '_' → logprob: -3.135160207748413
    3. '  ' → logprob: -3.260160207748413
    4. ')' → logprob: -4.510159969329834
    5. '   ' → logprob: -4.510159969329834
    6. 's' → logprob: -5.635159969329834
    7. ' )' → logprob: -6.385159969329834
    8. '<|end|>' → logprob: -6.385159969329834
    9. ' logic' → logprob: -6.635159969329834
    10. '(' → logprob: -6.885159969329834

Token 97: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42226603627204895
    2. '
' → logprob: -1.4222660064697266
    3. ':' → logprob: -3.0472660064697266
    4. 'n' → logprob: -3.5472660064697266
    5. '\n' → logprob: -4.672266006469727
    6. '(n' → logprob: -5.297266006469727
    7. '```' → logprob: -5.422266006469727
    8. '    
' → logprob: -5.422266006469727
    9. '  
' → logprob: -7.047266006469727
    10. '' → logprob: -7.797266006469727

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08960277587175369
    2. ')' → logprob: -2.5896027088165283
    3. 'n' → logprob: -5.089602947235107
    4. '```' → logprob: -5.964602947235107
    5. '
' → logprob: -7.214602947235107
    6. '\n' → logprob: -7.964602947235107
    7. '    ' → logprob: -8.71460247039795
    8. ' ' → logprob: -8.96460247039795
    9. 'def' → logprob: -9.33960247039795
    10. ':' → logprob: -9.46460247039795

Token 99: ' Input' (ID: 10090)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10755691677331924
    2. '   ' → logprob: -2.4825568199157715
    3. ' n' → logprob: -4.9825568199157715
    4. '
' → logprob: -5.2325568199157715
    5. '#' → logprob: -5.9825568199157715
    6. '    
' → logprob: -7.6075568199157715
    7. ' ' → logprob: -7.6075568199157715
    8. ')' → logprob: -7.6075568199157715
    9. ' 
' → logprob: -7.6075568199157715
    10. '    ' → logprob: -7.8575568199157715

Token 100: ' format' (ID: 6011)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8306061029434204
    2. 'n' → logprob: -1.0806061029434204
    3. '(n' → logprob: -3.080605983734131
    4. '(' → logprob: -3.330605983734131
    5. '   ' → logprob: -3.455605983734131
    6. ' =' → logprob: -3.705605983734131
    7. '=' → logprob: -3.705605983734131
    8. ')' → logprob: -4.205605983734131
    9. 's' → logprob: -4.205605983734131
    10. '()' → logprob: -4.705605983734131

Token 101: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10567454993724823
    2. '\n' → logprob: -2.9806745052337646
    3. '(n' → logprob: -3.6056745052337646
    4. ':' → logprob: -4.480674743652344
    5. '   ' → logprob: -5.355674743652344
    6. '```' → logprob: -5.980674743652344
    7. ' n' → logprob: -6.355674743652344
    8. '
' → logprob: -6.855674743652344
    9. '[n' → logprob: -7.980674743652344
    10. 'def' → logprob: -8.855674743652344

Token 102: 'from' (ID: 2845)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08755243569612503
    2. ' n' → logprob: -2.962552547454834
    3. ')' → logprob: -3.712552547454834
    4. '\n' → logprob: -5.712552547454834
    5. ')n' → logprob: -5.962552547454834
    6. ' )' → logprob: -7.212552547454834
    7. '```' → logprob: -7.462552547454834
    8. '   ' → logprob: -8.587552070617676
    9. '):' → logprob: -9.587552070617676
    10. '):
' → logprob: -10.212552070617676

Token 103: ' stdin' (ID: 75143)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5922203063964844
    2. ' stdin' → logprob: -1.5922203063964844
    3. ' standard' → logprob: -1.7172203063964844
    4. ' ' → logprob: -3.2172203063964844
    5. ' the' → logprob: -5.092220306396484
    6. 'stdin' → logprob: -5.592220306396484
    7. ' )' → logprob: -6.092220306396484
    8. ' n' → logprob: -6.217220306396484
    9. ')' → logprob: -6.467220306396484
    10. 'input' → logprob: -6.467220306396484

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38974130153656006
    2. ')' → logprob: -1.13974130153656
    3. '):
' → logprob: -6.63974142074585
    4. '   ' → logprob: -7.88974142074585
    5. ' ):' → logprob: -7.88974142074585
    6. ' )' → logprob: -8.514740943908691
    7. ':' → logprob: -8.639740943908691
    8. '```' → logprob: -9.514740943908691
    9. 'def' → logprob: -9.639740943908691
    10. ',' → logprob: -9.889740943908691

Token 105: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009565542452037334
    2. '   ' → logprob: -5.884565353393555
    3. ' 
' → logprob: -6.009565353393555
    4. ' n' → logprob: -6.134565353393555
    5. '\n' → logprob: -6.509565353393555
    6. ')' → logprob: -8.884565353393555
    7. '    
' → logprob: -9.134565353393555
    8. '```' → logprob: -9.634565353393555
    9. '\' → logprob: -9.884565353393555
    10. ' ' → logprob: -10.009565353393555

Token 106: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0009278989746235311
    2. ' n' → logprob: -7.125927925109863
    3. '   ' → logprob: -9.500927925109863
    4. '\n' → logprob: -10.000927925109863
    5. '	n' → logprob: -13.375927925109863
    6. '
' → logprob: -14.125927925109863
    7. '```' → logprob: -15.500927925109863
    8. '    
' → logprob: -15.750927925109863
    9. ''n' → logprob: -16.000926971435547
    10. '\' → logprob: -16.250926971435547

Token 107: ' k' (ID: 372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6784396767616272
    2. ',' → logprob: -1.1784396171569824
    3. '=' → logprob: -1.9284396171569824
    4. ':' → logprob: -3.8034396171569824
    5. ')' → logprob: -5.053439617156982
    6. '=int' → logprob: -5.303439617156982
    7. '):' → logprob: -6.428439617156982
    8. ' ,' → logprob: -6.803439617156982
    9. '   ' → logprob: -6.928439617156982
    10. ',n' → logprob: -7.678439617156982

Token 108: '        ' (ID: 269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13277170062065125
    2. '
' → logprob: -3.5077717304229736
    3. ')' → logprob: -3.6327717304229736
    4. 'def' → logprob: -3.6327717304229736
    5. '\n' → logprob: -4.6327714920043945
    6. '```' → logprob: -4.6327714920043945
    7. 'n' → logprob: -5.3827714920043945
    8. '<|end|>' → logprob: -5.6327714920043945
    9. ' =' → logprob: -5.7577714920043945
    10. '    
' → logprob: -6.2577714920043945

Token 109: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30585968494415283
    2. '\n' → logprob: -1.6808596849441528
    3. ' n' → logprob: -3.6808595657348633
    4. '```' → logprob: -4.430859565734863
    5. ')' → logprob: -4.680859565734863
    6. '   ' → logprob: -4.805859565734863
    7. 'def' → logprob: -5.930859565734863
    8. '=' → logprob: -6.055859565734863
    9. ' =' → logprob: -6.055859565734863
    10. '<|end|>' → logprob: -6.180859565734863

Token 110: ' Number' (ID: 9184)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7491526007652283
    2. ' n' → logprob: -0.7491526007652283
    3. 'int' → logprob: -2.999152660369873
    4. ' int' → logprob: -5.749152660369873
    5. 'input' → logprob: -7.624152660369873
    6. '   ' → logprob: -7.999152660369873
    7. ' input' → logprob: -8.749152183532715
    8. ' ' → logprob: -9.124152183532715
    9. 'map' → logprob: -9.499152183532715
    10. '    ' → logprob: -9.749152183532715

Token 111: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' rounds' (ID: 37740)
  Prédit: ' rounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rounds' → logprob: -0.00025430647656321526
    2. 'round' → logprob: -9.37525463104248
    3. ' ' → logprob: -9.50025463104248
    4. ' moves' → logprob: -10.25025463104248
    5. ' round' → logprob: -10.87525463104248
    6. ' players' → logprob: -10.87525463104248
    7. ' turns' → logprob: -11.75025463104248
    8. ' spaces' → logprob: -12.50025463104248
    9. ' lines' → logprob: -12.75025463104248
    10. ' games' → logprob: -13.00025463104248

Token 113: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17504651844501495
    2. '<|end|>' → logprob: -3.175046443939209
    3. ',' → logprob: -3.300046443939209
    4. 'n' → logprob: -4.050046443939209
    5. ' n' → logprob: -4.550046443939209
    6. ')' → logprob: -4.800046443939209
    7. '\n' → logprob: -4.800046443939209
    8. 'def' → logprob: -5.175046443939209
    9. '    
' → logprob: -5.300046443939209
    10. '    ' → logprob: -5.300046443939209

Token 114: ' group' (ID: 3566)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7656729221343994
    2. ' k' → logprob: -0.8906729221343994
    3. ' a' → logprob: -2.6406729221343994
    4. ' ' → logprob: -4.64067268371582
    5. ' space' → logprob: -4.64067268371582
    6. ' maximum' → logprob: -5.01567268371582
    7. ' K' → logprob: -5.26567268371582
    8. ' input' → logprob: -5.89067268371582
    9. ' number' → logprob: -5.89067268371582
    10. ' n' → logprob: -5.89067268371582

Token 115: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.7180380821228027
    2. 's' → logprob: -1.0930380821228027
    3. 'size' → logprob: -2.9680380821228027
    4. '_size' → logprob: -3.4680380821228027
    5. ' ' → logprob: -3.5930380821228027
    6. ' sizes' → logprob: -3.7180380821228027
    7. ' s' → logprob: -4.218038082122803
    8. '   ' → logprob: -4.968038082122803
    9. ' n' → logprob: -5.593038082122803
    10. ',' → logprob: -5.843038082122803

Token 116: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3833974599838257
    2. '
' → logprob: -1.8833974599838257
    3. '\n' → logprob: -2.3833975791931152
    4. '```' → logprob: -3.7583975791931152
    5. 'n' → logprob: -4.008397579193115
    6. '<|end|>' → logprob: -4.258397579193115
    7. '    
' → logprob: -5.258397579193115
    8. 'def' → logprob: -5.383397579193115
    9. ',' → logprob: -5.883397579193115
    10. '       ' → logprob: -6.633397579193115

Token 117: 'se' (ID: 344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034224167466163635
    2. ')
' → logprob: -4.909224033355713
    3. 'int' → logprob: -4.909224033355713
    4. '\n' → logprob: -4.909224033355713
    5. ' )' → logprob: -6.034224033355713
    6. ' int' → logprob: -6.409224033355713
    7. '   ' → logprob: -6.534224033355713
    8. 'n' → logprob: -7.034224033355713
    9. ' n' → logprob: -7.159224033355713
    10. '")' → logprob: -7.159224033355713

Token 118: 'parated' (ID: 80291)
  Prédit: 'parated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parated' → logprob: -0.11612062156200409
    2. 'p' → logprob: -2.7411205768585205
    3. 'par' → logprob: -4.4911208152771
    4. 'en' → logprob: -4.4911208152771
    5. 'pa' → logprob: -4.8661208152771
    6. 'n' → logprob: -5.3661208152771
    7. 'nt' → logprob: -5.8661208152771
    8. 'e' → logprob: -7.1161208152771
    9. 'parate' → logprob: -7.1161208152771
    10. 'paration' → logprob: -7.4911208152771

Token 119: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.37345385551452637
    2. ')' → logprob: -1.3734538555145264
    3. ' )' → logprob: -3.7484538555145264
    4. '=' → logprob: -3.7484538555145264
    5. 'by' → logprob: -4.8734540939331055
    6. ',' → logprob: -7.2484540939331055
    7. ' =' → logprob: -7.2484540939331055
    8. ')
' → logprob: -7.7484540939331055
    9. ' ' → logprob: -8.123454093933105
    10. '   ' → logprob: -8.123454093933105

Token 120: ' space' (ID: 4918)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.040987636893987656
    2. 'space' → logprob: -3.665987730026245
    3. ' space' → logprob: -4.790987491607666
    4. '"' → logprob: -5.665987491607666
    5. ' a' → logprob: -6.665987491607666
    6. ')' → logprob: -7.415987491607666
    7. ' )' → logprob: -7.540987491607666
    8. ' '' → logprob: -8.290987968444824
    9. ' ' → logprob: -9.415987968444824
    10. 'a' → logprob: -10.540987968444824

Token 121: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7162829041481018
    2. ')' → logprob: -0.8412829041481018
    3. ')
' → logprob: -3.216282844543457
    4. '\n' → logprob: -3.591282844543457
    5. '")' → logprob: -5.841282844543457
    6. ' )' → logprob: -5.841282844543457
    7. '```' → logprob: -5.841282844543457
    8. '"""
' → logprob: -7.216282844543457
    9. ' )
' → logprob: -7.216282844543457
    10. '"""' → logprob: -7.341282844543457

Token 122: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.12916459143161774
    2. '   ' → logprob: -2.754164695739746
    3. 'n' → logprob: -3.379164695739746
    4. '
' → logprob: -5.129164695739746
    5. '       ' → logprob: -5.129164695739746
    6. '```' → logprob: -6.129164695739746
    7. '    
' → logprob: -6.254164695739746
    8. '\' → logprob: -6.629164695739746
    9. ')' → logprob: -6.879164695739746
    10. ' ' → logprob: -7.004164695739746

Token 123: ' R' (ID: 460)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07478810101747513
    2. 't' → logprob: -3.3247880935668945
    3. ' r' → logprob: -3.6997880935668945
    4. 'R' (adapté à ' R') → logprob: -5.1997880935668945
    5. ' t' → logprob: -5.8247880935668945
    6. '   ' → logprob: -7.1997880935668945
    7. 's' → logprob: -7.4497880935668945
    8. 'T' → logprob: -7.9497880935668945
    9. 'h' → logprob: -8.699788093566895
    10. 'n' → logprob: -8.824788093566895

Token 124: ' S' (ID: 336)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7807067036628723
    2. 's' → logprob: -2.2807066440582275
    3. ' ' → logprob: -2.6557066440582275
    4. '   ' → logprob: -2.9057066440582275
    5. ',' → logprob: -3.0307066440582275
    6. ' =' → logprob: -3.1557066440582275
    7. 'P' → logprob: -3.1557066440582275
    8. 'C' → logprob: -3.9057066440582275
    9. '  ' → logprob: -4.280706882476807
    10. 'ock' → logprob: -4.280706882476807

Token 125: ' P' (ID: 398)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.2651576101779938
    2. 'T' → logprob: -1.6401575803756714
    3. 't' → logprob: -4.515157699584961
    4. 'P' → logprob: -5.765157699584961
    5. ' ' → logprob: -6.015157699584961
    6. '_points' → logprob: -6.140157699584961
    7. ' P' → logprob: -6.140157699584961
    8. ' =' → logprob: -6.390157699584961
    9. 'p' → logprob: -6.515157699584961
    10. ' t' → logprob: -6.890157699584961

Token 126: '      ' (ID: 1699)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032061874866485596
    2. '<|end|>' → logprob: -4.53206205368042
    3. '   ' → logprob: -4.65706205368042
    4. '=' → logprob: -5.40706205368042
    5. '    ' → logprob: -6.40706205368042
    6. '
' → logprob: -6.65706205368042
    7. ' ' → logprob: -7.15706205368042
    8. '  ' → logprob: -7.40706205368042
    9. '<|end|>' → logprob: -7.90706205368042
    10. ')' → logprob: -8.157061576843262

Token 127: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' Scores' (ID: 122806)
  Prédit: 'Scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Scores' → logprob: -0.5250179171562195
    2. ' Scores' → logprob: -1.1500179767608643
    3. ' scores' → logprob: -3.7750179767608643
    4. 'Points' → logprob: -4.150017738342285
    5. ' Points' → logprob: -4.650017738342285
    6. 'Three' → logprob: -4.900017738342285
    7. 'scores' → logprob: -4.900017738342285
    8. ' three' → logprob: -5.275017738342285
    9. ' Three' → logprob: -5.400017738342285
    10. ' Sc' → logprob: -5.525017738342285

Token 129: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.840900719165802
    2. ' for' → logprob: -1.2159006595611572
    3. '\n' → logprob: -1.8409006595611572
    4. ')' → logprob: -3.2159006595611572
    5. 'for' → logprob: -4.340900897979736
    6. ' ' → logprob: -4.465900897979736
    7. ' =' → logprob: -4.590900897979736
    8. '  ' → logprob: -5.215900897979736
    9. ',' → logprob: -5.215900897979736
    10. '<|end|>' → logprob: -5.340900897979736

Token 130: ' winning' (ID: 15212)
  Prédit: ' rock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rock' → logprob: -0.9012815356254578
    2. 'rock' → logprob: -1.2762815952301025
    3. ' Rock' → logprob: -2.2762815952301025
    4. 'Rock' → logprob: -2.5262815952301025
    5. ' winning' → logprob: -2.7762815952301025
    6. 'winning' → logprob: -2.9012815952301025
    7. ' each' → logprob: -5.526281356811523
    8. 'each' → logprob: -5.651281356811523
    9. 'win' → logprob: -6.776281356811523
    10. ' win' → logprob: -7.026281356811523

Token 131: ' with' (ID: 483)
  Prédit: ' moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.19955769181251526
    2. ' ' → logprob: -3.0745577812194824
    3. '<|end|>' → logprob: -3.1995577812194824
    4. ' each' → logprob: -3.4495577812194824
    5. ' Rock' → logprob: -3.8245577812194824
    6. 'moves' → logprob: -4.199557781219482
    7. ' rock' → logprob: -4.824557781219482
    8. ' the' → logprob: -4.949557781219482
    9. '_moves' → logprob: -6.324557781219482
    10. ' a' → logprob: -6.574557781219482

Token 132: ' Rock' (ID: 12251)
  Prédit: ' rock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rock' → logprob: -0.5075097680091858
    2. 'rock' → logprob: -1.507509708404541
    3. ' Rock' → logprob: -2.382509708404541
    4. 'Rock' → logprob: -2.757509708404541
    5. '"' → logprob: -5.257509708404541
    6. ' scissors' → logprob: -5.382509708404541
    7. '   ' → logprob: -5.882509708404541
    8. 'r' → logprob: -6.257509708404541
    9. ' ' → logprob: -6.757509708404541
    10. ''' → logprob: -6.757509708404541

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07389803975820541
    2. ' ,' → logprob: -2.9488980770111084
    3. '<|end|>' → logprob: -5.198897838592529
    4. ' ' → logprob: -5.698897838592529
    5. ' T' → logprob: -6.198897838592529
    6. ')' → logprob: -6.323897838592529
    7. '   ' → logprob: -6.448897838592529
    8. ' and' → logprob: -6.573897838592529
    9. ' )' → logprob: -7.198897838592529
    10. ' S' → logprob: -7.323897838592529

Token 134: ' Sc' (ID: 3380)
  Prédit: 'Sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sc' → logprob: -1.2954062223434448
    2. ' scissors' → logprob: -1.7954062223434448
    3. ' Sc' → logprob: -1.9204062223434448
    4. ' ' → logprob: -1.9204062223434448
    5. 'Paper' → logprob: -2.2954063415527344
    6. '   ' → logprob: -2.2954063415527344
    7. ' Paper' → logprob: -3.9204063415527344
    8. 'P' → logprob: -4.420406341552734
    9. ' paper' → logprob: -5.045406341552734
    10. '  ' → logprob: -5.170406341552734

Token 135: 'issors' (ID: 69357)
  Prédit: 'issors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issors' → logprob: -0.007550308480858803
    2. 'issor' → logprob: -5.007550239562988
    3. 'ss' → logprob: -7.632550239562988
    4. 'iss' → logprob: -8.757550239562988
    5. 'is' → logprob: -9.007550239562988
    6. 'r' → logprob: -11.132550239562988
    7. '```' → logprob: -11.632550239562988
    8. 's' → logprob: -11.882550239562988
    9. 'isses' → logprob: -12.257550239562988
    10. '#' → logprob: -12.382550239562988

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22023427486419678
    2. ' ,' → logprob: -1.7202342748641968
    3. ' ' → logprob: -4.845234394073486
    4. ' and' → logprob: -4.970234394073486
    5. 'and' → logprob: -7.220234394073486
    6. ' Paper' → logprob: -7.595234394073486
    7. '   ' → logprob: -7.845234394073486
    8. ' or' → logprob: -8.345233917236328
    9. ',
' → logprob: -8.595233917236328
    10. '<|end|>' → logprob: -8.595233917236328

Token 137: ' Paper' (ID: 23804)
  Prédit: 'Paper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Paper' → logprob: -1.1081106662750244
    2. ' Paper' → logprob: -1.3581106662750244
    3. ' and' → logprob: -1.6081106662750244
    4. 'and' → logprob: -1.7331106662750244
    5. ' ' → logprob: -4.108110427856445
    6. 'P' → logprob: -5.608110427856445
    7. ' paper' → logprob: -5.733110427856445
    8. ' Rock' → logprob: -5.858110427856445
    9. 'Rock' → logprob: -5.983110427856445
    10. ' or' → logprob: -5.983110427856445

Token 138: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8954797387123108
    2. '\n' → logprob: -1.645479679107666
    3. ')' → logprob: -1.770479679107666
    4. '<|end|>' → logprob: -2.020479679107666
    5. '
' → logprob: -3.770479679107666
    6. ',' → logprob: -4.145479679107666
    7. 'n' → logprob: -4.645479679107666
    8. 'def' → logprob: -4.770479679107666
    9. ')
' → logprob: -5.145479679107666
    10. '```' → logprob: -5.520479679107666

Token 139: 'se' (ID: 344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09429266303777695
    2. ')
' → logprob: -3.844292640686035
    3. ' )' → logprob: -3.969292640686035
    4. ' moves' → logprob: -4.719292640686035
    5. '")' → logprob: -4.969292640686035
    6. '):' → logprob: -4.969292640686035
    7. '   ' → logprob: -4.969292640686035
    8. ' for' → logprob: -6.594292640686035
    9. ' respectively' → logprob: -6.844292640686035
    10. '),' → logprob: -6.844292640686035

Token 140: 'parated' (ID: 80291)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14070597290992737
    2. 'parated' → logprob: -2.2657060623168945
    3. 'par' → logprob: -4.6407060623168945
    4. 'paration' → logprob: -5.3907060623168945
    5. 'parate' → logprob: -6.3907060623168945
    6. ')' → logprob: -6.3907060623168945
    7. 'parator' → logprob: -6.5157060623168945
    8. 'lf' → logprob: -6.8907060623168945
    9. 'n' → logprob: -7.1407060623168945
    10. '\n' → logprob: -7.2657060623168945

Token 141: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.14190492033958435
    2. ')' → logprob: -3.266904830932617
    3. 'by' → logprob: -3.391904830932617
    4. '=' → logprob: -3.516904830932617
    5. ' )' → logprob: -3.516904830932617
    6. ' =' → logprob: -7.516904830932617
    7. '   ' → logprob: -8.891904830932617
    8. ' ' → logprob: -9.141904830932617
    9. ')=' → logprob: -9.141904830932617
    10. ',' → logprob: -9.766904830932617

Token 142: ' space' (ID: 4918)
  Prédit: ' space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.6864388585090637
    2. 'space' → logprob: -0.8114388585090637
    3. ' spaces' → logprob: -3.061438798904419
    4. 'spaces' → logprob: -5.561439037322998
    5. ''' → logprob: -6.561439037322998
    6. ' a' → logprob: -8.93643856048584
    7. ')' → logprob: -9.18643856048584
    8. '"' → logprob: -10.18643856048584
    9. 'a' → logprob: -10.81143856048584
    10. ' )' → logprob: -11.43643856048584

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06764385104179382
    2. ')
' → logprob: -3.442643880844116
    3. ' )' → logprob: -3.567643880844116
    4. ' )
' → logprob: -5.442643642425537
    5. '   ' → logprob: -7.567643642425537
    6. ',' → logprob: -9.442644119262695
    7. '):
' → logprob: -9.817644119262695
    8. '```' → logprob: -10.192644119262695
    9. '"""' → logprob: -10.567644119262695
    10. ')

' → logprob: -10.567644119262695

Token 144: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015534271486103535
    2. '       ' → logprob: -5.140534400939941
    3. 'def' → logprob: -5.265534400939941
    4. '```' → logprob: -7.015534400939941
    5. '#' → logprob: -7.140534400939941
    6. '
' → logprob: -7.265534400939941
    7. 'n' → logprob: -8.140534400939941
    8. '\n' → logprob: -8.140534400939941
    9. '"""
' → logprob: -8.515534400939941
    10. 'r' → logprob: -8.640534400939941

Token 145: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.016528120264410973
    2. 'T' → logprob: -4.266528129577637
    3. '   ' → logprob: -7.016528129577637
    4. ' t' → logprob: -7.766528129577637
    5. 'h' → logprob: -7.891528129577637
    6. 's' → logprob: -8.266528129577637
    7. 'ts' → logprob: -9.641528129577637
    8. 'r' → logprob: -9.641528129577637
    9. 'import' → logprob: -10.266528129577637
    10. 'op' → logprob: -10.641528129577637

Token 146: '          ' (ID: 3550)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2824763059616089
    2. '=' → logprob: -2.2824764251708984
    3. 'arget' → logprob: -3.7824764251708984
    4. 's' → logprob: -3.7824764251708984
    5. '_moves' → logprob: -3.7824764251708984
    6. 'h' → logprob: -4.282476425170898
    7. 'o' → logprob: -4.407476425170898
    8. ' ' → logprob: -4.532476425170898
    9. ' opponent' → logprob: -4.907476425170898
    10. '_op' → logprob: -5.532476425170898

Token 147: ' -' (ID: 533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10343599319458008
    2. '=' → logprob: -2.47843599319458
    3. 's' → logprob: -4.60343599319458
    4. 'imes' → logprob: -7.60343599319458
    5. '=
' → logprob: -7.72843599319458
    6. '
' → logprob: -7.72843599319458
    7. ' =
' → logprob: -7.97843599319458
    8. ')' → logprob: -8.353435516357422
    9. ' ' → logprob: -8.478435516357422
    10. '=[]
' → logprob: -8.603435516357422

Token 148: ' String' (ID: 1189)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.5291163325309753
    2. ' A' → logprob: -2.90411639213562
    3. ' The' → logprob: -2.90411639213562
    4. 'str' → logprob: -3.27911639213562
    5. ' opponent' → logprob: -3.27911639213562
    6. 'Opponent' → logprob: -3.27911639213562
    7. ' a' → logprob: -3.77911639213562
    8. ' input' → logprob: -3.77911639213562
    9. ' ' → logprob: -3.90411639213562
    10. ' t' → logprob: -4.029116153717041

Token 149: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' opponent' (ID: 38519)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.8882796764373779
    2. 'the' → logprob: -2.138279676437378
    3. 'length' → logprob: -2.388279676437378
    4. 'moves' → logprob: -2.513279676437378
    5. ' length' → logprob: -3.013279676437378
    6. ' moves' → logprob: -3.263279676437378
    7. ' opponent' → logprob: -3.263279676437378
    8. 'characters' → logprob: -3.388279676437378
    9. ' the' → logprob: -3.513279676437378
    10. ' R' → logprob: -3.888279676437378

Token 151: ' moves' (ID: 19523)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.07073555886745453
    2. ''s' → logprob: -3.570735454559326
    3. 's' → logprob: -4.195735454559326
    4. '_' → logprob: -4.945735454559326
    5. ' moves' → logprob: -5.070735454559326
    6. 'moves' → logprob: -5.820735454559326
    7. '_move' → logprob: -6.070735454559326
    8. '<|end|>' → logprob: -6.195735454559326
    9. '   ' → logprob: -6.445735454559326
    10. ' ' → logprob: -7.070735454559326

Token 152: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.395370751619339
    2. '
' → logprob: -1.5203707218170166
    3. '\n' → logprob: -2.8953707218170166
    4. 'def' → logprob: -3.6453707218170166
    5. '    
' → logprob: -4.145370960235596
    6. 'n' → logprob: -5.020370960235596
    7. '```' → logprob: -6.395370960235596
    8. '  
' → logprob: -7.770370960235596
    9. ')' → logprob: -7.770370960235596
    10. '

' → logprob: -8.395370483398438

Token 153: ' each' (ID: 2454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.031057357788086
    2. 'n' → logprob: -2.406057357788086
    3. ' ' → logprob: -2.656057357788086
    4. '       ' → logprob: -3.031057357788086
    5. ' n' → logprob: -3.031057357788086
    6. ' where' → logprob: -3.156057357788086
    7. ' which' → logprob: -3.156057357788086
    8. '    ' → logprob: -3.406057357788086
    9. '<|end|>' → logprob: -3.531057357788086
    10. 'def' → logprob: -4.156057357788086

Token 154: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -1.1687157154083252
    2. ' representing' → logprob: -1.7937157154083252
    3. ' ' → logprob: -1.9187157154083252
    4. ' of' → logprob: -2.168715715408325
    5. ' consisting' → logprob: -3.168715715408325
    6. ' \' → logprob: -3.543715715408325
    7. ' R' → logprob: -3.793715715408325
    8. 'character' → logprob: -3.918715715408325
    9. ' (' → logprob: -4.043715476989746
    10. 'R' → logprob: -4.418715476989746

Token 155: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5668990015983582
    2. '=' → logprob: -1.566899061203003
    3. '   ' → logprob: -2.941899061203003
    4. 'def' → logprob: -2.941899061203003
    5. ':' → logprob: -3.191899061203003
    6. ')' → logprob: -3.816899061203003
    7. ' ' → logprob: -4.441898822784424
    8. 's' → logprob: -5.316898822784424
    9. '<|end|>' → logprob: -5.441898822784424
    10. ',' → logprob: -5.816898822784424

Token 156: ' '' (ID: 461)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.37976887822151184
    2. ''' → logprob: -1.5047688484191895
    3. ' R' → logprob: -3.0047688484191895
    4. '"' → logprob: -4.0047688484191895
    5. '   ' → logprob: -5.2547688484191895
    6. 'r' → logprob: -5.2547688484191895
    7. ' '' → logprob: -5.5047688484191895
    8. ' ' → logprob: -5.7547688484191895
    9. '`' → logprob: -6.6297688484191895
    10. '{'' → logprob: -6.7547688484191895

Token 157: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6369690895080566
    2. 'R' → logprob: -1.3869690895080566
    3. ''' → logprob: -1.7619690895080566
    4. '')' → logprob: -4.136969089508057
    5. ''''
' → logprob: -5.261969089508057
    6. '
' → logprob: -5.511969089508057
    7. '   ' → logprob: -5.886969089508057
    8. 'a' → logprob: -6.136969089508057
    9. 'RS' → logprob: -6.136969089508057
    10. ''
' → logprob: -6.261969089508057

Token 158: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2603236138820648
    2. '',' → logprob: -1.6353236436843872
    3. 'p' → logprob: -4.760323524475098
    4. '')' → logprob: -4.760323524475098
    5. '','' → logprob: -5.135323524475098
    6. 'o' → logprob: -5.885323524475098
    7. 's' → logprob: -6.260323524475098
    8. ''
' → logprob: -7.010323524475098
    9. ''),' → logprob: -7.135323524475098
    10. 'ock' → logprob: -7.260323524475098

Token 159: ' '' (ID: 461)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.6394261121749878
    2. 'p' → logprob: -1.0144261121749878
    3. ' p' → logprob: -3.2644262313842773
    4. ''s' → logprob: -3.6394262313842773
    5. ''' → logprob: -3.8894262313842773
    6. ' '' → logprob: -4.264426231384277
    7. 's' → logprob: -4.889426231384277
    8. ' s' → logprob: -6.389426231384277
    9. '   ' → logprob: -7.389426231384277
    10. ' ' → logprob: -7.389426231384277

Token 160: 's' (ID: 82)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02325817570090294
    2. 's' → logprob: -3.7732582092285156
    3. ' p' → logprob: -12.398258209228516
    4. '
' → logprob: -12.773258209228516
    5. ''p' → logprob: -13.023258209228516
    6. '

' → logprob: -14.398258209228516
    7. ' ' → logprob: -14.398258209228516
    8. 'P' → logprob: -14.898258209228516
    9. ' s' → logprob: -15.148258209228516
    10. '   ' → logprob: -15.398258209228516

Token 161: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0858323574066162
    2. '')' → logprob: -1.0858323574066162
    3. ''' → logprob: -1.5858323574066162
    4. ')' → logprob: -3.335832357406616
    5. '',' → logprob: -3.585832357406616
    6. ' or' → logprob: -4.085832595825195
    7. '"' → logprob: -4.960832595825195
    8. '")' → logprob: -5.460832595825195
    9. 'u' → logprob: -5.835832595825195
    10. ' '' → logprob: -6.210832595825195

Token 162: ' or' (ID: 503)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.025924475863575935
    2. ' '' → logprob: -4.2759246826171875
    3. 'p' → logprob: -5.5259246826171875
    4. ''' → logprob: -5.7759246826171875
    5. ' or' → logprob: -5.9009246826171875
    6. ' p' → logprob: -7.2759246826171875
    7. ''r' → logprob: -7.2759246826171875
    8. ' ' → logprob: -8.900924682617188
    9. '   ' → logprob: -9.400924682617188
    10. 'or' → logprob: -9.650924682617188

Token 163: ' '' (ID: 461)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.0001049736310960725
    2. 'p' → logprob: -10.000104904174805
    3. ''r' → logprob: -10.500104904174805
    4. ' '' → logprob: -11.000104904174805
    5. ''' → logprob: -11.500104904174805
    6. '"' → logprob: -12.750104904174805
    7. ''''' → logprob: -15.000104904174805
    8. ''t' → logprob: -15.125104904174805
    9. '('' → logprob: -15.375104904174805
    10. '
' → logprob: -15.375104904174805

Token 164: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00014716439181938767
    2. 'r' → logprob: -8.875146865844727
    3. ''p' → logprob: -12.000146865844727
    4. ''' → logprob: -14.625146865844727
    5. '
' → logprob: -15.125146865844727
    6. ' p' → logprob: -15.375146865844727
    7. '`' → logprob: -17.125146865844727
    8. '_p' → logprob: -17.250146865844727
    9. '

' → logprob: -17.250146865844727
    10. '	p' → logprob: -17.500146865844727

Token 165: ''

' (ID: 7497)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8056946396827698
    2. ''' → logprob: -0.8056946396827698
    3. ')'' → logprob: -3.555694580078125
    4. '')' → logprob: -4.180694580078125
    5. '')"' → logprob: -4.430694580078125
    6. '")' → logprob: -4.680694580078125
    7. '"'' → logprob: -4.805694580078125
    8. ''"' → logprob: -5.180694580078125
    9. ')' → logprob: -5.305694580078125
    10. ')"' → logprob: -5.305694580078125

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008039060048758984
    2. ')' → logprob: -6.3830389976501465
    3. 'def' → logprob: -6.3830389976501465
    4. '"""' → logprob: -6.6330389976501465
    5. '```' → logprob: -6.6330389976501465
    6. '    
' → logprob: -7.3830389976501465
    7. '
' → logprob: -8.008039474487305
    8. 'n' → logprob: -8.258039474487305
    9. '    ' → logprob: -8.383039474487305
    10. '"' → logprob: -9.258039474487305

Token 167: ' Output' (ID: 18315)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04944571480154991
    2. 'def' → logprob: -3.174445629119873
    3. 'n' → logprob: -5.424445629119873
    4. '```' → logprob: -7.674445629119873
    5. '    
' → logprob: -7.674445629119873
    6. 'import' → logprob: -7.799445629119873
    7. '
' → logprob: -8.299446105957031
    8. ' n' → logprob: -8.674446105957031
    9. ' def' → logprob: -9.174446105957031
    10. '    ' → logprob: -9.799446105957031

Token 168: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3693442940711975
    2. ' total' → logprob: -1.7443442344665527
    3. ' The' → logprob: -2.7443442344665527
    4. 'The' → logprob: -3.7443442344665527
    5. 'Total' → logprob: -4.744344234466553
    6. ' int' → logprob: -4.869344234466553
    7. '    ' → logprob: -5.119344234466553
    8. ' Total' → logprob: -5.494344234466553
    9. '"' → logprob: -5.619344234466553
    10. ' the' → logprob: -5.869344234466553

Token 170: ' Prints' (ID: 92195)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.2979146242141724
    2. 'int' → logprob: -1.4229146242141724
    3. 'total' → logprob: -2.047914505004883
    4. 'The' → logprob: -2.547914505004883
    5. ' The' → logprob: -2.672914505004883
    6. ' An' → logprob: -2.797914505004883
    7. 'An' → logprob: -2.922914505004883
    8. ' int' → logprob: -3.672914505004883
    9. 'Total' → logprob: -3.922914505004883
    10. '   ' → logprob: -3.922914505004883

Token 171: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07726429402828217
    2. 'the' → logprob: -2.7022643089294434
    3. ' total' → logprob: -6.077264308929443
    4. 'total' → logprob: -6.827264308929443
    5. '(total' → logprob: -6.952264308929443
    6. '(' → logprob: -7.327264308929443
    7. '   ' → logprob: -7.327264308929443
    8. ' ' → logprob: -7.452264308929443
    9. '(max' → logprob: -8.827263832092285
    10. 'max' → logprob: -8.952263832092285

Token 172: ' maximum' (ID: 10562)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.03072512336075306
    2. ' maximum' → logprob: -3.5307252407073975
    3. 'total' → logprob: -7.405725002288818
    4. ' maximal' → logprob: -8.780725479125977
    5. ' ' → logprob: -9.655725479125977
    6. 'maximum' → logprob: -9.780725479125977
    7. ' max' → logprob: -10.155725479125977
    8. 'max' → logprob: -10.780725479125977
    9. ' highest' → logprob: -11.030725479125977
    10. ' final' → logprob: -12.405725479125977

Token 173: ' possible' (ID: 4149)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.010247424244880676
    2. 'score' → logprob: -5.385247230529785
    3. ' possible' → logprob: -5.635247230529785
    4. '_score' → logprob: -7.260247230529785
    5. ' total' → logprob: -7.635247230529785
    6. ' achievable' → logprob: -8.010247230529785
    7. '_' → logprob: -8.510247230529785
    8. ' ' → logprob: -8.510247230529785
    9. 'possible' → logprob: -10.010247230529785
    10. '(score' → logprob: -11.135247230529785

Token 174: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.3054279685020447
    2. ' ' → logprob: -1.5554280281066895
    3. '_' → logprob: -3.6804280281066895
    4. ' total' → logprob: -4.4304280281066895
    5. 'score' → logprob: -4.4304280281066895
    6. '_score' → logprob: -6.5554280281066895
    7. ' space' → logprob: -8.180427551269531
    8. '  
' → logprob: -8.180427551269531
    9. ' 
' → logprob: -8.305427551269531
    10. ' )' → logprob: -8.805427551269531

Token 175: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6474341154098511
    2. '   ' → logprob: -0.7724341154098511
    3. '():' → logprob: -5.522434234619141
    4. '(n' → logprob: -5.772434234619141
    5. 'def' → logprob: -6.272434234619141
    6. '(' → logprob: -6.522434234619141
    7. '```' → logprob: -6.647434234619141
    8. '    
' → logprob: -7.147434234619141
    9. '):' → logprob: -7.397434234619141
    10. ':
' → logprob: -7.772434234619141

Token 176: 'as' (ID: 288)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003364158037584275
    2. ' )' → logprob: -8.375336647033691
    3. '")' → logprob: -9.875336647033691
    4. 'def' → logprob: -11.375336647033691
    5. ')
' → logprob: -11.625336647033691
    6. ').' → logprob: -11.875336647033691
    7. '()' → logprob: -12.125336647033691
    8. '   ' → logprob: -12.125336647033691
    9. 'end' → logprob: -13.500336647033691
    10. ' to' → logprob: -13.625336647033691

Token 177: ' per' (ID: 777)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.006749597378075123
    2. 'an' → logprob: -5.131749629974365
    3. ' integer' → logprob: -7.881749629974365
    4. ' a' → logprob: -8.381749153137207
    5. 'int' → logprob: -9.006749153137207
    6. ' int' → logprob: -10.131749153137207
    7. 'n' → logprob: -11.131749153137207
    8. 'a' → logprob: -11.131749153137207
    9. 'integer' → logprob: -11.506749153137207
    10. ')' → logprob: -12.881749153137207

Token 178: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09724004566669464
    2. ' a' → logprob: -2.7222399711608887
    3. ' )' → logprob: -4.472239971160889
    4. ')' → logprob: -4.597239971160889
    5. 'the' → logprob: -6.097239971160889
    6. ' your' → logprob: -6.472239971160889
    7. ' winning' → logprob: -8.222240447998047
    8. ' ' → logprob: -8.597240447998047
    9. '```' → logprob: -8.722240447998047
    10. '   ' → logprob: -8.847240447998047

Token 179: ' rules' (ID: 9607)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9649744033813477
    2. ' problem' → logprob: -1.0899744033813477
    3. ' constraints' → logprob: -2.5899744033813477
    4. ' game' → logprob: -2.9649744033813477
    5. ' )' → logprob: -3.4649744033813477
    6. ' remaining' → logprob: -4.089974403381348
    7. ' code' → logprob: -4.214974403381348
    8. '\n' → logprob: -4.464974403381348
    9. '"' → logprob: -4.589974403381348
    10. ' best' → logprob: -4.714974403381348

Token 180: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010852093109861016
    2. ')
' → logprob: -7.00108528137207
    3. '   ' → logprob: -10.00108528137207
    4. 'def' → logprob: -10.00108528137207
    5. ' )' → logprob: -10.25108528137207
    6. '```' → logprob: -11.00108528137207
    7. '"""' → logprob: -11.12608528137207
    8. ').' → logprob: -12.62608528137207
    9. '")' → logprob: -12.87608528137207
    10. '):' → logprob: -12.87608528137207

Token 181: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.03359891101717949
    2. ' the' → logprob: -3.9085988998413086
    3. 'constraints' → logprob: -5.408598899841309
    4. ')' → logprob: -6.033598899841309
    5. '"' → logprob: -6.158598899841309
    6. ' input' → logprob: -7.533598899841309
    7. ' )' → logprob: -7.658598899841309
    8. ' game' → logprob: -7.908598899841309
    9. ' logic' → logprob: -8.158598899841309
    10. ' constraint' → logprob: -8.283598899841309

Token 182: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01686633937060833
    2. '):' → logprob: -4.266866207122803
    3. ')
' → logprob: -6.516866207122803
    4. '):
' → logprob: -7.141866207122803
    5. '   ' → logprob: -8.141866683959961
    6. 'def' → logprob: -9.641866683959961
    7. '```' → logprob: -10.641866683959961
    8. '"""' → logprob: -10.891866683959961
    9. ').' → logprob: -11.266866683959961
    10. ' )' → logprob: -11.891866683959961

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010907517746090889
    2. 'def' → logprob: -5.8859076499938965
    3. 'n' → logprob: -6.0109076499938965
    4. '```' → logprob: -6.1359076499938965
    5. '    
' → logprob: -6.3859076499938965
    6. '
' → logprob: -6.6359076499938965
    7. '    ' → logprob: -8.885907173156738
    8. ' n' → logprob: -9.010907173156738
    9. ' 
' → logprob: -10.260907173156738
    10. ' def' → logprob: -10.260907173156738

Token 184: ' Example' (ID: 24855)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2123812735080719
    2. 'n' → logprob: -1.9623812437057495
    3. 'def' → logprob: -3.337381362915039
    4. ' n' → logprob: -4.462381362915039
    5. 'import' → logprob: -6.087381362915039
    6. '    
' → logprob: -7.587381362915039
    7. '```' → logprob: -8.212381362915039
    8. '
' → logprob: -8.462381362915039
    9. '    ' → logprob: -8.712381362915039
    10. ' def' → logprob: -9.462381362915039

Token 185: ' input' (ID: 3422)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7240909934043884
    2. '   ' → logprob: -1.0990910530090332
    3. '```' → logprob: -2.849091053009033
    4. 'def' → logprob: -3.099091053009033
    5. '[' → logprob: -3.849091053009033
    6. '(' → logprob: -4.349091053009033
    7. '
' → logprob: -4.599091053009033
    8. ' =' → logprob: -5.349091053009033
    9. '(
' → logprob: -5.474091053009033
    10. ' :' → logprob: -5.724091053009033

Token 186: ':
' (ID: 734)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2270269393920898
    2. ':' → logprob: -1.4770269393920898
    3. '
' → logprob: -1.6020269393920898
    4. '```' → logprob: -1.8520269393920898
    5. '   ' → logprob: -3.22702693939209
    6. '\' → logprob: -4.22702693939209
    7. '(' → logprob: -4.60202693939209
    8. 'n' → logprob: -4.85202693939209
    9. ')' → logprob: -5.22702693939209
    10. '(n' → logprob: -5.35202693939209

Token 187: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5032042264938354
    2. '\n' → logprob: -1.6282042264938354
    3. 'n' → logprob: -2.628204345703125
    4. '```' → logprob: -3.378204345703125
    5. '1' → logprob: -3.503204345703125
    6. '4' → logprob: -4.128204345703125
    7. '    ' → logprob: -5.003204345703125
    8. '\' → logprob: -5.003204345703125
    9. ' n' → logprob: -5.128204345703125
    10. ' 
' → logprob: -5.378204345703125

Token 188: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.30934327840805054
    2. '5' → logprob: -2.0593433380126953
    3. '7' → logprob: -3.1843433380126953
    4. '1' → logprob: -3.8093433380126953
    5. '3' → logprob: -3.8093433380126953
    6. '```' → logprob: -4.309343338012695
    7. 'n' → logprob: -4.559343338012695
    8. '8' → logprob: -4.809343338012695
    9. '4' → logprob: -4.934343338012695
    10. '   ' → logprob: -5.184343338012695

Token 189: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4994140565395355
    2. '5' → logprob: -1.249414086341858
    3. '7' → logprob: -3.7494139671325684
    4. '3' → logprob: -3.7494139671325684
    5. '4' → logprob: -4.124413967132568
    6. '```' → logprob: -4.374413967132568
    7. 'n' → logprob: -4.749413967132568
    8. '   ' → logprob: -4.999413967132568
    9. '8' → logprob: -5.249413967132568
    10. '6' → logprob: -6.249413967132568

Token 190: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20895247161388397
    2. ' ' → logprob: -2.7089524269104004
    3. ',' → logprob: -2.9589524269104004
    4. ' ,' → logprob: -3.2089524269104004
    5. 'n' → logprob: -4.4589524269104
    6. ' k' → logprob: -5.0839524269104
    7. '    ' → logprob: -5.4589524269104
    8. '   ' → logprob: -5.7089524269104
    9. ',n' → logprob: -6.9589524269104
    10. '  ' → logprob: -6.9589524269104

Token 191: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5738403797149658
    2. '10' → logprob: -1.4488403797149658
    3. '5' → logprob: -2.823840379714966
    4. '3' → logprob: -3.448840379714966
    5. ',' → logprob: -3.448840379714966
    6. '7' → logprob: -3.823840379714966
    7. '4' → logprob: -4.073840141296387
    8. '   ' → logprob: -4.323840141296387
    9. ' ,' → logprob: -4.823840141296387
    10. '2' → logprob: -5.198840141296387

Token 192: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.31870514154434204
    2. '   ' → logprob: -1.4437050819396973
    3. '```' → logprob: -4.443705081939697
    4. '
' → logprob: -5.068705081939697
    5. '\r' → logprob: -5.318705081939697
    6. '    
' → logprob: -5.318705081939697
    7. '    ' → logprob: -6.193705081939697
    8. ' ' → logprob: -6.443705081939697
    9. '  
' → logprob: -6.693705081939697
    10. '\' → logprob: -7.068705081939697

Token 193: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0489834547042847
    2. '   ' → logprob: -1.1739834547042847
    3. '10' → logprob: -2.048983573913574
    4. '4' → logprob: -2.798983573913574
    5. 'R' → logprob: -3.548983573913574
    6. ' ' → logprob: -3.548983573913574
    7. '    ' → logprob: -3.548983573913574
    8. '7' → logprob: -3.548983573913574
    9. ' R' → logprob: -4.923983573913574
    10. '5' → logprob: -5.173983573913574

Token 194: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3692408800125122
    2. '1' → logprob: -2.1192407608032227
    3. '3' → logprob: -2.2442407608032227
    4. '10' → logprob: -2.7442407608032227
    5. '5' → logprob: -4.494240760803223
    6. '4' → logprob: -6.619240760803223
    7. '100' → logprob: -6.744240760803223
    8. '8' → logprob: -6.994240760803223
    9. '7' → logprob: -7.244240760803223
    10. ' ' → logprob: -7.619240760803223

Token 195: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1759440153837204
    2. '3' → logprob: -2.9259440898895264
    3. '10' → logprob: -2.9259440898895264
    4. '1' → logprob: -3.4259440898895264
    5. '5' → logprob: -4.675943851470947
    6. '100' → logprob: -5.300943851470947
    7. '8' → logprob: -6.050943851470947
    8. '7' → logprob: -6.425943851470947
    9. '4' → logprob: -6.925943851470947
    10. '500' → logprob: -7.550943851470947

Token 196: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02695045992732048
    2. '2' → logprob: -4.151950359344482
    3. '  ' → logprob: -5.901950359344482
    4. '    ' → logprob: -6.151950359344482
    5. '0' → logprob: -6.651950359344482
    6. '1' → logprob: -6.901950359344482
    7. '   ' → logprob: -7.026950359344482
    8. ' ,' → logprob: -7.151950359344482
    9. '<|end|>' → logprob: -7.526950359344482
    10. ' S' → logprob: -7.776950359344482

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014371353900060058
    2. '0' → logprob: -7.126437187194824
    3. '1' → logprob: -8.126437187194824
    4. '3' → logprob: -8.501437187194824
    5. '5' → logprob: -9.876437187194824
    6. '4' → logprob: -10.501437187194824
    7. ' ' → logprob: -11.126437187194824
    8. '7' → logprob: -11.251437187194824
    9. '
' → logprob: -11.501437187194824
    10. '10' → logprob: -13.063937187194824

Token 198: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5342890024185181
    2. '3' → logprob: -0.9092890024185181
    3. '1' → logprob: -4.6592888832092285
    4. '0' → logprob: -6.6592888832092285
    5. '2' → logprob: -8.159289360046387
    6. '4' → logprob: -11.034289360046387
    7. '   ' → logprob: -11.409289360046387
    8. ' 
' → logprob: -11.784289360046387
    9. '    ' → logprob: -12.159289360046387
    10. '```' → logprob: -12.159289360046387

Token 199: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16962206363677979
    2. '0' → logprob: -2.7946219444274902
    3. '1' → logprob: -2.7946219444274902
    4. ' ' → logprob: -3.4196219444274902
    5. '2' → logprob: -7.54462194442749
    6. '4' → logprob: -9.419622421264648
    7. 'p' → logprob: -9.419622421264648
    8. '```' → logprob: -9.544622421264648
    9. ' p' → logprob: -10.294622421264648
    10. '
' → logprob: -10.294622421264648

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08808155357837677
    2. 'r' → logprob: -3.4630815982818604
    3. 't' → logprob: -4.213081359863281
    4. '\n' → logprob: -4.838081359863281
    5. '
' → logprob: -5.213081359863281
    6. '    
' → logprob: -5.213081359863281
    7. ' ' → logprob: -5.838081359863281
    8. ' r' → logprob: -5.963081359863281
    9. 's' → logprob: -6.213081359863281
    10. ' t' → logprob: -6.213081359863281

Token 201: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4955955147743225
    2. 'r' → logprob: -1.8705954551696777
    3. ' r' → logprob: -2.2455954551696777
    4. '       ' → logprob: -2.7455954551696777
    5. '    ' → logprob: -3.4955954551696777
    6. ' ' → logprob: -4.495595455169678
    7. ' p' → logprob: -4.870595455169678
    8. 's' → logprob: -5.245595455169678
    9. ' s' → logprob: -5.620595455169678
    10. 'p' → logprob: -6.495595455169678

Token 202: ' rs' (ID: 15181)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2985713481903076
    2. 'rsp' → logprob: -2.0485713481903076
    3. 'rs' (adapté à ' rs') → logprob: -2.5485713481903076
    4. 'p' → logprob: -3.6735713481903076
    5. 's' → logprob: -4.923571586608887
    6. 'rss' → logprob: -5.173571586608887
    7. 'ps' → logprob: -5.173571586608887
    8. 'rr' → logprob: -6.423571586608887
    9. 'prs' → logprob: -7.048571586608887
    10. 'ss' → logprob: -7.048571586608887

Token 203: 'r' (ID: 81)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1837050914764404
    2. '\n' → logprob: -1.5587050914764404
    3. 'r' → logprob: -1.8087050914764404
    4. '   ' → logprob: -2.1837050914764404
    5. 'n' → logprob: -3.4337050914764404
    6. 'ss' → logprob: -3.6837050914764404
    7. ')' → logprob: -3.9337050914764404
    8. 'def' → logprob: -4.3087053298950195
    9. '       ' → logprob: -4.9337053298950195
    10. '    ' → logprob: -5.0587053298950195

Token 204: 'ps' (ID: 947)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18899831175804138
    2. 'def' → logprob: -2.563998222351074
    3. '
' → logprob: -2.688998222351074
    4. '\n' → logprob: -4.938998222351074
    5. 'n' → logprob: -5.313998222351074
    6. ')' → logprob: -5.813998222351074
    7. '    
' → logprob: -5.938998222351074
    8. ':' → logprob: -6.188998222351074
    9. '```' → logprob: -6.438998222351074
    10. '  
' → logprob: -6.563998222351074

Token 205: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007082975469529629
    2. 'def' → logprob: -5.882082939147949
    3. '    
' → logprob: -6.007082939147949
    4. '
' → logprob: -6.632082939147949
    5. 'n' → logprob: -8.63208293914795
    6. '\n' → logprob: -9.75708293914795
    7. '    ' → logprob: -9.88208293914795
    8. '   
' → logprob: -10.25708293914795
    9. ':' → logprob: -10.38208293914795
    10. 'import' → logprob: -10.50708293914795

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04019633308053017
    2. 'def' → logprob: -3.665196418762207
    3. '
' → logprob: -5.165196418762207
    4. '```' → logprob: -5.540196418762207
    5. '    
' → logprob: -6.290196418762207
    6. '\n' → logprob: -7.415196418762207
    7. ':' → logprob: -7.540196418762207
    8. ' def' → logprob: -7.790196418762207
    9. '       ' → logprob: -8.915196418762207
    10. '    ' → logprob: -8.915196418762207

Token 207: ' Example' (ID: 24855)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2979491949081421
    2. 'def' → logprob: -2.2979493141174316
    3. 'n' → logprob: -2.5479493141174316
    4. 'import' → logprob: -2.7979493141174316
    5. ' n' → logprob: -4.422949314117432
    6. ' import' → logprob: -5.922949314117432
    7. ' lines' → logprob: -7.172949314117432
    8. '#' → logprob: -7.422949314117432
    9. 'input' → logprob: -7.547949314117432
    10. '```' → logprob: -7.922949314117432

Token 208: ' output' (ID: 4733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.891556441783905
    2. '_output' → logprob: -1.6415565013885498
    3. ':' → logprob: -1.7665565013885498
    4. '```' → logprob: -2.64155650138855
    5. '_input' → logprob: -2.89155650138855
    6. '   ' → logprob: -3.51655650138855
    7. '\' → logprob: -4.266556262969971
    8. '_score' → logprob: -4.891556262969971
    9. '_token' → logprob: -4.891556262969971
    10. ' =' → logprob: -5.391556262969971

Token 209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02490651048719883
    2. ':
' → logprob: -4.649906635284424
    3. '```' → logprob: -5.399906635284424
    4. '   ' → logprob: -5.524906635284424
    5. '4' → logprob: -6.524906635284424
    6. '3' → logprob: -6.524906635284424
    7. ' :' → logprob: -6.649906635284424
    8. '6' → logprob: -7.774906635284424
    9. '
' → logprob: -8.024906158447266
    10. '2' → logprob: -8.024906158447266

Token 210: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1163872480392456
    2. '9' → logprob: -1.6163872480392456
    3. '12' → logprob: -2.241387367248535
    4. '15' → logprob: -2.491387367248535
    5. '10' → logprob: -2.616387367248535
    6. '14' → logprob: -3.241387367248535
    7. '11' → logprob: -3.366387367248535
    8. '8' → logprob: -3.741387367248535
    9. '13' → logprob: -3.741387367248535
    10. '7' → logprob: -4.241387367248535

Token 211: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.8711075782775879
    2. '7' → logprob: -1.996107578277588
    3. '10' → logprob: -1.996107578277588
    4. '12' → logprob: -2.246107578277588
    5. '8' → logprob: -2.621107578277588
    6. '11' → logprob: -2.746107578277588
    7. '15' → logprob: -3.996107578277588
    8. '14' → logprob: -4.496107578277588
    9. '13' → logprob: -4.746107578277588
    10. '6' → logprob: -4.746107578277588

Token 212: '10' (ID: 702)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.8045269250869751
    2. '7' → logprob: -1.429526925086975
    3. '9' → logprob: -1.804526925086975
    4. '10' → logprob: -2.3045268058776855
    5. '5' → logprob: -4.0545268058776855
    6. '6' → logprob: -4.1795268058776855
    7. '11' → logprob: -4.8045268058776855
    8. '12' → logprob: -5.4295268058776855
    9. '4' → logprob: -6.6795268058776855
    10. '13' → logprob: -7.6795268058776855

Token 213: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2653641700744629
    2. '\n' → logprob: -2.265364170074463
    3. ':' → logprob: -3.515364170074463
    4. '
' → logprob: -3.890364170074463
    5. '```' → logprob: -4.265364170074463
    6. '\' → logprob: -4.515364170074463
    7. 'def' → logprob: -4.640364170074463
    8. '    
' → logprob: -4.640364170074463
    9. '(n' → logprob: -4.765364170074463
    10. ',' → logprob: -5.390364170074463

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13163913786411285
    2. 'def' → logprob: -2.756639242172241
    3. '```' → logprob: -3.756639242172241
    4. '(n' → logprob: -4.881639003753662
    5. ':' → logprob: -5.131639003753662
    6. '\n' → logprob: -5.256639003753662
    7. '
' → logprob: -5.506639003753662
    8. '\' → logprob: -5.756639003753662
    9. ' def' → logprob: -6.131639003753662
    10. '    
' → logprob: -6.131639003753662

Token 215: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2818450331687927
    2. '\n' → logprob: -2.1568450927734375
    3. '
' → logprob: -2.9068450927734375
    4. 'def' → logprob: -4.1568450927734375
    5. ':' → logprob: -4.4068450927734375
    6. '\' → logprob: -4.5318450927734375
    7. '    
' → logprob: -4.6568450927734375
    8. '```' → logprob: -5.0318450927734375
    9. ' 
' → logprob: -5.4068450927734375
    10. '(n' → logprob: -5.5318450927734375

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08434423804283142
    2. 'def' → logprob: -3.5843441486358643
    3. 'n' → logprob: -3.9593441486358643
    4. '    
' → logprob: -3.9593441486358643
    5. '
' → logprob: -4.459344387054443
    6. '\n' → logprob: -6.084344387054443
    7. '	n' → logprob: -8.459343910217285
    8. '```' → logprob: -8.459343910217285
    9. '    ' → logprob: -8.709343910217285
    10. ' n' → logprob: -8.959343910217285

Token 217: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1993836760520935
    2. 'import' → logprob: -2.1993837356567383
    3. '   ' → logprob: -2.6993837356567383
    4. ' n' → logprob: -6.199383735656738
    5. ' import' → logprob: -8.074383735656738
    6. 'input' → logprob: -8.324383735656738
    7. 'from' → logprob: -10.574383735656738
    8. '```' → logprob: -10.699383735656738
    9. '	n' → logprob: -12.074383735656738
    10. ' input' → logprob: -13.199383735656738

Token 218: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8793627023696899
    2. ' n' → logprob: -1.37936270236969
    3. 'import' → logprob: -1.50436270236969
    4. 'input' → logprob: -3.1293625831604004
    5. '   ' → logprob: -3.2543625831604004
    6. ' import' → logprob: -4.1293625831604
    7. ' input' → logprob: -4.3793625831604
    8. '	n' → logprob: -10.629363059997559
    9. 'from' → logprob: -10.629363059997559
    10. '(n' → logprob: -12.254363059997559

Token 219: ' and' (ID: 326)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011759212240576744
    2. ' input' → logprob: -5.011759281158447
    3. 'n' → logprob: -5.511759281158447
    4. ' ' → logprob: -7.761759281158447
    5. '   ' → logprob: -8.136758804321289
    6. 'input' → logprob: -8.511758804321289
    7. '	n' → logprob: -10.886758804321289
    8. '    ' → logprob: -11.261758804321289
    9. ' line' → logprob: -11.386758804321289
    10. ' ' → logprob: -12.511758804321289

Token 220: ' unpack' (ID: 61704)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2113327980041504
    2. 'split' → logprob: -1.3363327980041504
    3. 'input' → logprob: -1.4613327980041504
    4. 'import' → logprob: -2.8363327980041504
    5. 'parse' → logprob: -2.9613327980041504
    6. ' split' → logprob: -3.0863327980041504
    7. ' import' → logprob: -3.4613327980041504
    8. ' parse' → logprob: -4.21133279800415
    9. ' process' → logprob: -7.08633279800415
    10. 'process' → logprob: -7.08633279800415

Token 221: ' basic' (ID: 9439)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048624493181705475
    2. 'n' → logprob: -3.0486245155334473
    3. '   ' → logprob: -10.298624038696289
    4. '	n' → logprob: -12.923624038696289
    5. 'input' → logprob: -15.423624038696289
    6. '(n' → logprob: -15.423624038696289
    7. ' ' → logprob: -15.923624038696289
    8. '    ' → logprob: -15.923624038696289
    9. 'line' → logprob: -16.17362403869629
    10. ' input' → logprob: -16.54862403869629

Token 222: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0499286651611328
    2. ' input' → logprob: -1.2999286651611328
    3. '   ' → logprob: -1.9249286651611328
    4. ' ' → logprob: -3.174928665161133
    5. 'n' → logprob: -3.174928665161133
    6. ' inputs' → logprob: -3.424928665161133
    7. 'input' → logprob: -3.549928665161133
    8. ' values' → logprob: -3.799928665161133
    9. '_' → logprob: -3.924928665161133
    10. '_input' → logprob: -4.674928665161133

Token 223: ' values' (ID: 4824)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9681090116500854
    2. '(n' → logprob: -0.9681090116500854
    3. '   ' → logprob: -1.8431090116500854
    4. ' n' → logprob: -3.218109130859375
    5. ' =' → logprob: -3.468109130859375
    6. '    
' → logprob: -6.218109130859375
    7. '=' → logprob: -6.343109130859375
    8. '
' → logprob: -6.468109130859375
    9. '(' → logprob: -6.843109130859375
    10. '(
' → logprob: -6.968109130859375

Token 224: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6343814134597778
    2. 'n' → logprob: -1.1343814134597778
    3. ' n' → logprob: -2.0093812942504883
    4. '
' → logprob: -4.634381294250488
    5. '    
' → logprob: -5.634381294250488
    6. '(n' → logprob: -8.509381294250488
    7. '\n' → logprob: -8.634381294250488
    8. '       ' → logprob: -8.884381294250488
    9. ' 
' → logprob: -9.509381294250488
    10. '	n' → logprob: -10.134381294250488

Token 225: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18190224468708038
    2. '   ' → logprob: -2.1819021701812744
    3. 'n' → logprob: -2.9319021701812744
    4. '    
' → logprob: -9.556901931762695
    5. '	n' → logprob: -10.056901931762695
    6. ' 
' → logprob: -10.306901931762695
    7. '    ' → logprob: -10.931901931762695
    8. '       ' → logprob: -11.556901931762695
    9. '\n' → logprob: -12.431901931762695
    10. '(n' → logprob: -12.556901931762695

Token 226: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5782364010810852
    2. 'n' (adapté à ' n') → logprob: -0.8282364010810852
    3. '   ' → logprob: -6.0782365798950195
    4. 'import' → logprob: -13.82823657989502
    5. '	n' → logprob: -13.95323657989502
    6. '    
' → logprob: -16.578235626220703
    7. '       ' → logprob: -17.078235626220703
    8. ' ' → logprob: -17.203235626220703
    9. ' import' → logprob: -17.453235626220703
    10. '    ' → logprob: -17.453235626220703

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003433296224102378
    2. ',k' → logprob: -8.000343322753906
    3. ' ,' → logprob: -11.875343322753906
    4. ',
' → logprob: -14.375343322753906
    5. ',int' → logprob: -16.250343322753906
    6. ',n' → logprob: -16.500343322753906
    7. ',K' → logprob: -16.625343322753906
    8. 'k' → logprob: -17.625343322753906
    9. ',

' → logprob: -17.625343322753906
    10. '‌,' → logprob: -17.875343322753906

Token 228: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.22557997703552246
    2. 'k' → logprob: -1.6005799770355225
    3. ' ' → logprob: -9.225580215454102
    4. '<|end|>' → logprob: -9.975580215454102
    5. '"k' → logprob: -11.975580215454102
    6. '_k' → logprob: -12.100580215454102
    7. '"' → logprob: -13.350580215454102
    8. ')' → logprob: -13.475580215454102
    9. ',k' → logprob: -13.475580215454102
    10. '=k' → logprob: -13.975580215454102

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602262556552887
    2. ' =' → logprob: -1.9102262258529663
    3. '=input' → logprob: -13.660225868225098
    4. '   ' → logprob: -14.660225868225098
    5. '=int' → logprob: -15.535225868225098
    6. ',' → logprob: -15.910225868225098
    7. ')' → logprob: -16.035226821899414
    8. '    ' → logprob: -17.160226821899414
    9. ' ' → logprob: -17.160226821899414
    10. '=line' → logprob: -17.660226821899414

Token 230: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1002068892121315
    2. 'map' → logprob: -2.3502068519592285
    3. '	map' → logprob: -15.850207328796387
    4. ' ' → logprob: -16.85020637512207
    5. ' list' → logprob: -17.47520637512207
    6. '   ' → logprob: -17.72520637512207
    7. '(map' → logprob: -18.22520637512207
    8. 'list' → logprob: -18.72520637512207
    9. '  ' → logprob: -19.60020637512207
    10. ' ' → logprob: -19.60020637512207

Token 231: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014316666638478637
    2. '(' → logprob: -6.751431465148926
    3. '(input' → logprob: -8.376431465148926
    4. '(str' → logprob: -10.626431465148926
    5. 'int' → logprob: -12.126431465148926
    6. 'input' → logprob: -14.376431465148926
    7. '(
' → logprob: -15.501431465148926
    8. ' int' → logprob: -16.126432418823242
    9. '<int' → logprob: -16.126432418823242
    10. '(list' → logprob: -16.251432418823242

Token 232: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09320399165153503
    2. '(input' → logprob: -2.5932040214538574
    3. ',input' → logprob: -4.843204021453857
    4. ')' → logprob: -5.468204021453857
    5. ',' → logprob: -6.593204021453857
    6. ' input' → logprob: -7.343204021453857
    7. '(' → logprob: -9.7182035446167
    8. '=input' → logprob: -10.8432035446167
    9. '[input' → logprob: -11.8432035446167
    10. ')(' → logprob: -13.4682035446167

Token 233: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047935113310814
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -16.76104736328125
    4. ')' → logprob: -17.26104736328125
    5. '=input' → logprob: -18.88604736328125
    6. ',input' → logprob: -19.38604736328125
    7. '	input' → logprob: -20.38604736328125
    8. '[input' → logprob: -21.13604736328125
    9. '   ' → logprob: -21.26104736328125
    10. '.input' → logprob: -21.63604736328125

Token 234: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3544423381972592e-05
    2. '()' → logprob: -11.25001335144043
    3. '())' → logprob: -15.12501335144043
    4. '()
' → logprob: -16.25001335144043
    5. '(' → logprob: -17.37501335144043
    6. '().
' → logprob: -17.50001335144043
    7. ')' → logprob: -17.87501335144043
    8. '().__' → logprob: -18.62501335144043
    9. '()[' → logprob: -18.75001335144043
    10. '('').' → logprob: -18.75001335144043

Token 235: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043257648940198123
    2. 'strip' → logprob: -7.75043249130249
    3. 'rstrip' → logprob: -13.500432968139648
    4. 'read' → logprob: -15.125432968139648
    5. '(split' → logprob: -16.00043296813965
    6. ' split' → logprob: -16.50043296813965
    7. 'spl' → logprob: -18.12543296813965
    8. ')' → logprob: -19.00043296813965
    9. '_split' → logprob: -19.50043296813965
    10. '()' → logprob: -21.00043296813965

Token 236: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39464718103408813
    2. ')' → logprob: -1.1446471214294434
    3. '()' → logprob: -4.894647121429443
    4. '(' → logprob: -8.394647598266602
    5. '())
' → logprob: -11.144647598266602
    6. ' )' → logprob: -12.644647598266602
    7. '))' → logprob: -12.769647598266602
    8. '('' → logprob: -12.894647598266602
    9. ' ())' → logprob: -13.144647598266602
    10. '(),' → logprob: -13.269647598266602

Token 237: '     ' (ID: 530)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08108235150575638
    2. '\n' → logprob: -3.831082344055176
    3. '    
' → logprob: -4.331082344055176
    4. '   ' → logprob: -4.581082344055176
    5. '  
' → logprob: -4.706082344055176
    6. 'n' → logprob: -4.831082344055176
    7. ' 
' → logprob: -4.956082344055176
    8. 'r' → logprob: -6.706082344055176
    9. '<|end|>' → logprob: -6.706082344055176
    10. '   
' → logprob: -6.956082344055176

Token 238: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17331327497959137
    2. '\n' → logprob: -2.7983133792877197
    3. 'n' → logprob: -3.4233133792877197
    4. ')' → logprob: -3.9233133792877197
    5. '  
' → logprob: -4.423313140869141
    6. '    
' → logprob: -4.548313140869141
    7. '<|end|>' → logprob: -5.173313140869141
    8. '   ' → logprob: -5.548313140869141
    9. ' 
' → logprob: -5.548313140869141
    10. '```' → logprob: -6.673313140869141

Token 239: ' n' (ID: 297)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2664910852909088
    2. 'n' → logprob: -1.6414910554885864
    3. 'r' → logprob: -3.766491174697876
    4. ' R' → logprob: -4.641490936279297
    5. ' n' → logprob: -5.891490936279297
    6. 'input' → logprob: -6.766490936279297
    7. 'scores' → logprob: -7.391490936279297
    8. '<|end|>' → logprob: -8.016490936279297
    9. 'tokens' → logprob: -8.266490936279297
    10. 'k' → logprob: -8.266490936279297

Token 240: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023454755544662476
    2. ',k' → logprob: -4.023454666137695
    3. ' ,' → logprob: -5.523454666137695
    4. '<|end|>' → logprob: -7.648454666137695
    5. 'k' → logprob: -8.398454666137695
    6. ',n' → logprob: -8.648454666137695
    7. ')' → logprob: -8.898454666137695
    8. '   ' → logprob: -8.898454666137695
    9. ' k' → logprob: -10.023454666137695
    10. '<|end|>' → logprob: -10.523454666137695

Token 241: ' total' (ID: 3609)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.2164992094039917
    2. 'n' → logprob: -1.3414992094039917
    3. ' number' → logprob: -1.8414992094039917
    4. 'int' → logprob: -1.9664992094039917
    5. ' n' → logprob: -2.2164993286132812
    6. ' int' → logprob: -3.8414993286132812
    7. 'Number' → logprob: -5.216499328613281
    8. 'the' → logprob: -5.716499328613281
    9. ' the' → logprob: -5.966499328613281
    10. ' rounds' → logprob: -7.966499328613281

Token 242: ' rounds' (ID: 37740)
  Prédit: ' rounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rounds' → logprob: -0.7358064651489258
    2. '_round' → logprob: -0.7358064651489258
    3. 'round' → logprob: -3.485806465148926
    4. ',' → logprob: -5.485806465148926
    5. '   ' → logprob: -6.360806465148926
    6. '_' → logprob: -6.610806465148926
    7. ' _' → logprob: -6.860806465148926
    8. '_n' → logprob: -7.485806465148926
    9. 'n' → logprob: -7.985806465148926
    10. ' number' → logprob: -8.110806465148926

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04854636639356613
    2. '<|end|>' → logprob: -4.048546314239502
    3. ',k' → logprob: -4.048546314239502
    4. '   ' → logprob: -5.423546314239502
    5. 'n' → logprob: -6.298546314239502
    6. ',n' → logprob: -6.298546314239502
    7. ',
' → logprob: -6.548546314239502
    8. 'k' → logprob: -6.923546314239502
    9. '<|end|>' → logprob: -7.548546314239502
    10. ' ,' → logprob: -7.548546314239502

Token 244: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5759470462799072
    2. ' k' → logprob: -0.8259470462799072
    3. ' ' → logprob: -12.325946807861328
    4. '	k' → logprob: -13.450946807861328
    5. '    ' → logprob: -14.200946807861328
    6. '   ' → logprob: -15.325946807861328
    7. ' 
' → logprob: -15.575946807861328
    8. '_k' → logprob: -15.950946807861328
    9. ',k' → logprob: -16.075946807861328
    10. ' ' → logprob: -16.575946807861328

Token 245: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7367994785308838
    2. '=' → logprob: -1.1117994785308838
    3. ' =' → logprob: -1.7367994785308838
    4. '<|end|>' → logprob: -4.611799240112305
    5. ' )' → logprob: -5.736799240112305
    6. ')=' → logprob: -7.236799240112305
    7. '<|end|>' → logprob: -7.361799240112305
    8. ',' → logprob: -7.361799240112305
    9. '=int' → logprob: -7.861799240112305
    10. '),' → logprob: -9.111799240112305

Token 246: ' repeat' (ID: 22962)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3272668421268463
    2. ' k' → logprob: -1.327266812324524
    3. '<|end|>' → logprob: -4.952266693115234
    4. 'int' → logprob: -5.577266693115234
    5. 'n' → logprob: -7.327266693115234
    6. ')' → logprob: -7.327266693115234
    7. ' int' → logprob: -7.827266693115234
    8. ' the' → logprob: -8.452266693115234
    9. 'the' → logprob: -8.577266693115234
    10. '<|end|>' → logprob: -8.702266693115234

Token 247: ' constraint' (ID: 44762)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7910438179969788
    2. '_' → logprob: -1.291043758392334
    3. '_limit' → logprob: -2.166043758392334
    4. '<|end|>' → logprob: -3.041043758392334
    5. ' _' → logprob: -3.166043758392334
    6. ')' → logprob: -3.916043758392334
    7. '_constraint' → logprob: -4.666043758392334
    8. '_constraints' → logprob: -5.416043758392334
    9. '_space' → logprob: -5.666043758392334
    10. '   ' → logprob: -5.916043758392334

Token 248: '
' (ID: 198)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.22366918623447418
    2. '   ' → logprob: -2.2236692905426025
    3. 'r' → logprob: -2.7236692905426025
    4. ' R' → logprob: -4.098669052124023
    5. '    
' → logprob: -5.723669052124023
    6. '
' → logprob: -5.723669052124023
    7. ',' → logprob: -6.473669052124023
    8. ' r' → logprob: -6.973669052124023
    9. ' ' → logprob: -9.098669052124023
    10. ',R' → logprob: -9.098669052124023

Token 249: '   ' (ID: 271)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.34570908546447754
    2. '   ' → logprob: -1.9707090854644775
    3. ' R' → logprob: -2.4707090854644775
    4. 'r' → logprob: -2.8457090854644775
    5. '
' → logprob: -5.470708847045898
    6. ' r' → logprob: -5.595708847045898
    7. '    
' → logprob: -6.720708847045898
    8. ' scores' → logprob: -8.220708847045898
    9. ',' → logprob: -8.345708847045898
    10. '\n' → logprob: -8.970708847045898

Token 250: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.6424528956413269
    2. 'r' → logprob: -0.7674528956413269
    3. ' R' → logprob: -4.892452716827393
    4. ' r' → logprob: -6.642452716827393
    5. '   ' → logprob: -7.892452716827393
    6. 'rs' → logprob: -8.89245319366455
    7. 'scores' → logprob: -8.89245319366455
    8. 'score' → logprob: -9.26745319366455
    9. 'Rs' → logprob: -10.01745319366455
    10. 'rock' → logprob: -10.39245319366455

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015491410158574581
    2. ' ,' → logprob: -6.501549243927002
    3. ',S' → logprob: -10.376548767089844
    4. 's' → logprob: -12.501548767089844
    5. 'S' → logprob: -12.626548767089844
    6. ',s' → logprob: -13.251548767089844
    7. '_,' → logprob: -13.501548767089844
    8. '_S' → logprob: -13.626548767089844
    9. '_scores' → logprob: -14.251548767089844
    10. ' S' → logprob: -14.376548767089844

Token 252: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3134182095527649
    2. ' S' → logprob: -1.3134181499481201
    3. ' ' → logprob: -8.9384183883667
    4. '  ' → logprob: -11.8134183883667
    5. ' 
' → logprob: -11.8134183883667
    6. ' ' → logprob: -13.3134183883667
    7. '<|end|>' → logprob: -13.5634183883667
    8. '    ' → logprob: -13.8134183883667
    9. ' ,' → logprob: -13.8134183883667
    10. ',' → logprob: -14.1884183883667

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3954463510308415e-05
    2. ' ,' → logprob: -9.875054359436035
    3. ',P' → logprob: -13.125054359436035
    4. ',S' → logprob: -16.12505340576172
    5. 'P' → logprob: -16.12505340576172
    6. '<|end|>' → logprob: -16.25005340576172
    7. '=' → logprob: -16.87505340576172
    8. ' P' → logprob: -18.37505340576172
    9. ',
' → logprob: -18.37505340576172
    10. ' ' → logprob: -19.00005340576172

Token 254: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.20152044296264648
    2. ' P' → logprob: -1.7015204429626465
    3. ' ' → logprob: -9.326520919799805
    4. 'p' → logprob: -12.076520919799805
    5. '  ' → logprob: -12.701520919799805
    6. '   ' → logprob: -12.701520919799805
    7. '	P' → logprob: -13.576520919799805
    8. '
' → logprob: -13.826520919799805
    9. '`' → logprob: -14.576520919799805
    10. ' ' → logprob: -14.826520919799805

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519446313381195
    2. '=' → logprob: -1.501944661140442
    3. ',' → logprob: -11.251944541931152
    4. '   ' → logprob: -13.876944541931152
    5. ' ' → logprob: -14.001944541931152
    6. ')' → logprob: -14.876944541931152
    7. '  ' → logprob: -16.50194549560547
    8. ' ,' → logprob: -16.50194549560547
    9. '    ' → logprob: -16.68944549560547
    10. '=input' → logprob: -17.12694549560547

Token 256: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740796685218811
    2. ' map' → logprob: -0.9740796685218811
    3. '   ' → logprob: -13.349080085754395
    4. '  ' → logprob: -14.849080085754395
    5. '	map' → logprob: -14.974080085754395
    6. ' ' → logprob: -15.099080085754395
    7. '    ' → logprob: -16.599079132080078
    8. 'list' → logprob: -16.599079132080078
    9. ' list' → logprob: -17.849079132080078
    10. '(map' → logprob: -18.224079132080078

Token 257: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002198676229454577
    2. 'int' → logprob: -8.50022029876709
    3. '(' → logprob: -11.12522029876709
    4. ' int' → logprob: -14.37522029876709
    5. ' (' → logprob: -14.75022029876709
    6. '[int' → logprob: -15.37522029876709
    7. '=int' → logprob: -16.000219345092773
    8. '   ' → logprob: -16.250219345092773
    9. '<int' → logprob: -17.000219345092773
    10. '(
' → logprob: -17.500219345092773

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4157804548740387
    2. '(int' → logprob: -1.4157804250717163
    3. '(' → logprob: -3.040780544281006
    4. ',int' → logprob: -3.290780544281006
    5. '<|end|>' → logprob: -5.415780544281006
    6. ')' → logprob: -5.665780544281006
    7. 'int' → logprob: -6.665780544281006
    8. '(lambda' → logprob: -7.165780544281006
    9. '[int' → logprob: -7.290780544281006
    10. ' ,' → logprob: -7.290780544281006

Token 259: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002636006975080818
    2. ' input' → logprob: -8.250263214111328
    3. 'int' → logprob: -13.000263214111328
    4. ' ' → logprob: -20.250263214111328
    5. '(input' → logprob: -21.000263214111328
    6. '<input' → logprob: -21.375263214111328
    7. '=input' → logprob: -22.000263214111328
    8. 'str' → logprob: -22.125263214111328
    9. '_input' → logprob: -22.250263214111328
    10. '   ' → logprob: -22.250263214111328

Token 260: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005028736195527017
    2. '()' → logprob: -7.625503063201904
    3. '   ' → logprob: -12.500502586364746
    4. ',' → logprob: -12.500502586364746
    5. ' ()' → logprob: -13.375502586364746
    6. '.split' → logprob: -13.500502586364746
    7. ' ().' → logprob: -13.625502586364746
    8. '(),' → logprob: -13.750502586364746
    9. '.' → logprob: -14.375502586364746
    10. '(' → logprob: -14.500502586364746

Token 261: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.5
    3. 'strip' → logprob: -18.0
    4. '(split' → logprob: -18.625
    5. ')' → logprob: -19.0
    6. '.split' → logprob: -19.125
    7. 'read' → logprob: -19.875
    8. 'rstrip' → logprob: -20.375
    9. 'str' → logprob: -21.375
    10. 'spl' → logprob: -21.375

Token 262: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2816604673862457
    2. '()' → logprob: -1.5316604375839233
    3. ')' → logprob: -3.531660556793213
    4. '(' → logprob: -11.031660079956055
    5. '())
' → logprob: -11.781660079956055
    6. ' ())' → logprob: -12.781660079956055
    7. '()
' → logprob: -12.906660079956055
    8. '()]' → logprob: -13.156660079956055
    9. ' )' → logprob: -13.281660079956055
    10. '(),' → logprob: -13.656660079956055

Token 263: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026509862393140793
    2. '    
' → logprob: -4.651509761810303
    3. 't' → logprob: -4.776509761810303
    4. '<|end|>' → logprob: -5.651509761810303
    5. '
' → logprob: -6.401509761810303
    6. '<|end|>' → logprob: -6.526509761810303
    7. '	t' → logprob: -7.401509761810303
    8. '    ' → logprob: -8.901510238647461
    9. ' t' → logprob: -9.401510238647461
    10. '	
' → logprob: -9.526510238647461

Token 264: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.02486848644912243
    2. ' R' → logprob: -3.7748684883117676
    3. 'r' → logprob: -6.899868488311768
    4. '#' → logprob: -9.39986801147461
    5. 'scores' → logprob: -9.39986801147461
    6. ' ' → logprob: -9.64986801147461
    7. ' scores' → logprob: -9.77486801147461
    8. 'S' → logprob: -10.27486801147461
    9. 'Rock' → logprob: -10.39986801147461
    10. '[R' → logprob: -10.39986801147461

Token 266: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01862557791173458
    2. ' ,' → logprob: -4.018625736236572
    3. '<|end|>' → logprob: -8.018625259399414
    4. ',S' → logprob: -10.393625259399414
    5. ' S' → logprob: -10.393625259399414
    6. ' ' → logprob: -10.768625259399414
    7. 'S' → logprob: -11.018625259399414
    8. '  ' → logprob: -11.268625259399414
    9. ')' → logprob: -11.643625259399414
    10. ',
' → logprob: -11.893625259399414

Token 267: ' points' (ID: 5571)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6252797245979309
    2. 'Rock' → logprob: -1.2502796649932861
    3. 'R' → logprob: -2.375279664993286
    4. 'rock' → logprob: -3.750279664993286
    5. ' Rock' → logprob: -3.875279664993286
    6. ' int' → logprob: -4.250279903411865
    7. ' rock' → logprob: -4.500279903411865
    8. 'score' → logprob: -5.375279903411865
    9. ' R' → logprob: -5.500279903411865
    10. 'winning' → logprob: -6.750279903411865

Token 268: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' Rock' (ID: 12251)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.42160624265670776
    2. ''' → logprob: -2.1716063022613525
    3. ' winning' → logprob: -2.5466063022613525
    4. 'winning' → logprob: -2.6716063022613525
    5. 'rock' → logprob: -4.171606063842773
    6. ' "' → logprob: -4.171606063842773
    7. 'using' → logprob: -4.421606063842773
    8. ' using' → logprob: -4.921606063842773
    9. ' '' → logprob: -4.921606063842773
    10. '   ' → logprob: -5.046606063842773

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40147918462753296
    2. ' ,' → logprob: -1.1514792442321777
    3. ' ' → logprob: -5.151479244232178
    4. '<|end|>' → logprob: -5.151479244232178
    5. '   ' → logprob: -6.526479244232178
    6. '  ' → logprob: -7.526479244232178
    7. ',
' → logprob: -8.15147876739502
    8. ')' → logprob: -8.65147876739502
    9. '<|end|>' → logprob: -9.27647876739502
    10. ',S' → logprob: -9.40147876739502

Token 271: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6936479806900024
    2. ' S' → logprob: -0.6936479806900024
    3. ' ' → logprob: -7.943647861480713
    4. '   ' → logprob: -9.193648338317871
    5. '  ' → logprob: -10.818648338317871
    6. '    ' → logprob: -11.818648338317871
    7. '<|end|>' → logprob: -12.443648338317871
    8. ' ' → logprob: -13.193648338317871
    9. ' 
' → logprob: -13.318648338317871
    10. '    
' → logprob: -13.568648338317871

Token 272: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023833142593503
    2. '=' → logprob: -4.773833274841309
    3. ' ,' → logprob: -5.273833274841309
    4. ' for' → logprob: -5.398833274841309
    5. '<|end|>' → logprob: -5.773833274841309
    6. ' =' → logprob: -6.773833274841309
    7. 'for' → logprob: -7.023833274841309
    8. ' ' → logprob: -9.398833274841309
    9. ')' → logprob: -9.398833274841309
    10. '<|end|>' → logprob: -9.773833274841309

Token 273: ' for' (ID: 395)
  Prédit: ' Sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sc' → logprob: -0.6664397120475769
    2. 'Sc' → logprob: -0.9164397120475769
    3. 'int' → logprob: -3.7914397716522217
    4. ' int' → logprob: -3.9164397716522217
    5. ' points' → logprob: -3.9164397716522217
    6. ' scissors' → logprob: -3.9164397716522217
    7. 'sc' → logprob: -6.791439533233643
    8. ' ' → logprob: -7.041439533233643
    9. '_sc' → logprob: -7.541439533233643
    10. 'points' → logprob: -8.2914400100708

Token 274: ' Sc' (ID: 3380)
  Prédit: 'Sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sc' → logprob: -0.08602216839790344
    2. ' Sc' → logprob: -2.711022138595581
    3. ' scissors' → logprob: -4.21102237701416
    4. ' ' → logprob: -7.71102237701416
    5. 'Paper' → logprob: -7.96102237701416
    6. '   ' → logprob: -8.96102237701416
    7. '  ' → logprob: -9.96102237701416
    8. ' Paper' → logprob: -10.71102237701416
    9. ' ' → logprob: -10.71102237701416
    10. '<Sc' → logprob: -11.21102237701416

Token 275: 'issors' (ID: 69357)
  Prédit: 'issors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issors' → logprob: -0.0008957397076301277
    2. 'issor' → logprob: -7.125895977020264
    3. 'i' → logprob: -10.000895500183105
    4. 'is' → logprob: -11.250895500183105
    5. 'iss' → logprob: -11.500895500183105
    6. 'ores' → logprob: -13.125895500183105
    7. 'isses' → logprob: -13.250895500183105
    8. 'rock' → logprob: -13.500895500183105
    9. ' scissors' → logprob: -13.500895500183105
    10. 'ic' → logprob: -13.625895500183105

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025200152304023504
    2. ' ,' → logprob: -6.0025200843811035
    3. '   ' → logprob: -11.127519607543945
    4. ',P' → logprob: -11.127519607543945
    5. ',
' → logprob: -12.127519607543945
    6. ' ' → logprob: -12.502519607543945
    7. 'P' → logprob: -12.877519607543945
    8. '  ' → logprob: -14.502519607543945
    9. '<|end|>' → logprob: -14.502519607543945
    10. ',p' → logprob: -14.877519607543945

Token 277: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.12694290280342102
    2. ' P' → logprob: -2.1269428730010986
    3. ' ' → logprob: -11.62694263458252
    4. '   ' → logprob: -12.37694263458252
    5. ',' → logprob: -14.75194263458252
    6. '  ' → logprob: -15.00194263458252
    7. 'and' → logprob: -15.75194263458252
    8. '       ' → logprob: -15.87694263458252
    9. 'p' → logprob: -16.126943588256836
    10. ' and' → logprob: -16.126943588256836

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47444674372673035
    2. '=' → logprob: -0.9744467735290527
    3. ',' → logprob: -7.974446773529053
    4. ')' → logprob: -11.474446296691895
    5. '=int' → logprob: -11.599446296691895
    6. ' ' → logprob: -12.724446296691895
    7. '<|end|>' → logprob: -13.599446296691895
    8. ' for' → logprob: -14.599446296691895
    9. 'for' → logprob: -15.099446296691895
    10. ' ,' → logprob: -15.224446296691895

Token 279: ' for' (ID: 395)
  Prédit: 'Paper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Paper' → logprob: -0.038499731570482254
    2. ' Paper' → logprob: -3.9134998321533203
    3. 'for' → logprob: -4.41349983215332
    4. ' for' → logprob: -5.66349983215332
    5. 'int' → logprob: -6.28849983215332
    6. ' int' → logprob: -8.66349983215332
    7. ' paper' → logprob: -9.53849983215332
    8. 'Pap' → logprob: -9.66349983215332
    9. ' ' → logprob: -11.16349983215332
    10. 'For' → logprob: -11.91349983215332

Token 280: ' Paper' (ID: 23804)
  Prédit: 'Paper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Paper' → logprob: -1.0325924449716695e-05
    2. ' Paper' → logprob: -11.62501049041748
    3. 'paper' → logprob: -14.25001049041748
    4. 'Pap' → logprob: -14.50001049041748
    5. ' paper' → logprob: -15.75001049041748
    6. 'Rock' → logprob: -16.875009536743164
    7. 'int' → logprob: -18.000009536743164
    8. 'Python' → logprob: -18.125009536743164
    9. 'P' → logprob: -18.250009536743164
    10. '   ' → logprob: -18.375009536743164

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3223673105239868
    2. 't' → logprob: -1.3223673105239868
    3. '
' → logprob: -5.947367191314697
    4. 'op' → logprob: -5.947367191314697
    5. '    
' → logprob: -6.447367191314697
    6. 'moves' → logprob: -6.697367191314697
    7. ' t' → logprob: -8.197367668151855
    8. '	t' → logprob: -8.572367668151855
    9. ' opponent' → logprob: -9.447367668151855
    10. '	op' → logprob: -9.447367668151855

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35008949041366577
    2. 't' → logprob: -1.2250895500183105
    3. ' t' → logprob: -7.1000895500183105
    4. 'op' → logprob: -7.4750895500183105
    5. 'moves' → logprob: -9.100089073181152
    6. '	t' → logprob: -10.100089073181152
    7. '    
' → logprob: -10.475089073181152
    8. '   ' → logprob: -11.600089073181152
    9. ' opp' → logprob: -11.725089073181152
    10. ' opponent' → logprob: -11.725089073181152

Token 283: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.046065445989370346
    2. ' t' → logprob: -3.171065330505371
    3. 'op' → logprob: -6.171065330505371
    4. ' opponent' → logprob: -7.171065330505371
    5. ' opp' → logprob: -9.421065330505371
    6. 'moves' → logprob: -10.671065330505371
    7. 'opp' → logprob: -10.921065330505371
    8. '`t' → logprob: -11.046065330505371
    9. 'o' → logprob: -11.171065330505371
    10. '   ' → logprob: -11.296065330505371

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269298940896988
    2. '=' → logprob: -2.126929998397827
    3. '=input' → logprob: -13.376930236816406
    4. ' ' → logprob: -15.876930236816406
    5. '=int' → logprob: -17.251930236816406
    6. 't' → logprob: -17.251930236816406
    7. ' ' → logprob: -17.376930236816406
    8. '   ' → logprob: -17.876930236816406
    9. '  ' → logprob: -18.251930236816406
    10. 's' → logprob: -18.251930236816406

Token 285: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740773141384125
    2. ' input' → logprob: -0.9740773439407349
    3. 'list' → logprob: -15.724077224731445
    4. ' list' → logprob: -16.849077224731445
    5. 'str' → logprob: -17.224077224731445
    6. ' ' → logprob: -17.724077224731445
    7. '(input' → logprob: -17.974077224731445
    8. '=input' → logprob: -18.099077224731445
    9. '<input' → logprob: -18.224077224731445
    10. ' str' → logprob: -18.224077224731445

Token 286: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010551994200795889
    2. '().' → logprob: -6.8760552406311035
    3. ' ()' → logprob: -10.876054763793945
    4. '()>' → logprob: -13.126054763793945
    5. '(' → logprob: -15.001054763793945
    6. '()
' → logprob: -15.126054763793945
    7. '()<' → logprob: -15.126054763793945
    8. '())' → logprob: -15.501054763793945
    9. '()</' → logprob: -16.251054763793945
    10. '()`' → logprob: -16.376054763793945

Token 287: '                          ' (ID: 12397)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16538670659065247
    2. '    
' → logprob: -2.54038667678833
    3. '
' → logprob: -2.66538667678833
    4. 'result' → logprob: -6.91538667678833
    5. '   
' → logprob: -7.41538667678833
    6. 'score' → logprob: -7.41538667678833
    7. 'dp' → logprob: -8.415387153625488
    8. '  
' → logprob: -8.415387153625488
    9. '        
' → logprob: -8.540387153625488
    10. ' result' → logprob: -8.665387153625488

Token 288: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43930163979530334
    2. '   ' → logprob: -1.189301609992981
    3. '    
' → logprob: -3.4393017292022705
    4. 'def' → logprob: -5.064301490783691
    5. 't' → logprob: -5.939301490783691
    6. '  
' → logprob: -6.189301490783691
    7. 'n' → logprob: -6.439301490783691
    8. '   
' → logprob: -6.939301490783691
    9. ' for' → logprob: -7.064301490783691
    10. '<|end|>' → logprob: -7.189301490783691

Token 289: ' Opp' (ID: 55440)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03060581348836422
    2. ' t' → logprob: -3.5306057929992676
    3. 'input' → logprob: -7.780605792999268
    4. 'Opponent' → logprob: -8.405606269836426
    5. ' input' → logprob: -9.030606269836426
    6. ' opponent' → logprob: -10.280606269836426
    7. '`t' → logprob: -11.405606269836426
    8. 'The' → logprob: -11.405606269836426
    9. '"' → logprob: -12.030606269836426
    10. '""' → logprob: -12.280606269836426

Token 290: 'onent' (ID: 130930)
  Prédit: 'onent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -0.0002790935104712844
    2. 'ponent' → logprob: -8.375279426574707
    3. 'on' → logprob: -10.750279426574707
    4. 'nent' → logprob: -11.375279426574707
    5. 'onen' → logprob: -12.500279426574707
    6. ''s' → logprob: -12.500279426574707
    7. '`' → logprob: -13.250279426574707
    8. 'onn' → logprob: -13.750279426574707
    9. 'ent' → logprob: -13.875279426574707
    10. '   ' → logprob: -14.250279426574707

Token 291: ''s' (ID: 885)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.03572097420692444
    2. '<|end|>' → logprob: -3.7857210636138916
    3. 'moves' → logprob: -5.0357208251953125
    4. '_move' → logprob: -5.5357208251953125
    5. ''s' → logprob: -7.2857208251953125
    6. ' moves' → logprob: -7.4107208251953125
    7. '_' → logprob: -8.160720825195312
    8. '<|end|>' → logprob: -8.785720825195312
    9. 'Moves' → logprob: -10.160720825195312
    10. ' ' → logprob: -10.535720825195312

Token 292: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.05866538733243942
    2. '_moves' → logprob: -3.6836652755737305
    3. ' moves' → logprob: -4.0586652755737305
    4. 'move' → logprob: -4.4336652755737305
    5. ' move' → logprob: -7.3086652755737305
    6. 't' → logprob: -7.3086652755737305
    7. '<|end|>' → logprob: -7.9336652755737305
    8. 's' → logprob: -7.9336652755737305
    9. '_move' → logprob: -8.30866527557373
    10. ' ' → logprob: -9.55866527557373

Token 293: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15327002108097076
    2. '
' → logprob: -2.5282700061798096
    3. '    
' → logprob: -3.0282700061798096
    4. 'moves' → logprob: -5.528270244598389
    5. 'score' → logprob: -6.403270244598389
    6. 'dp' → logprob: -6.653270244598389
    7. 'result' → logprob: -6.653270244598389
    8. ' moves' → logprob: -7.028270244598389
    9. '  
' → logprob: -7.278270244598389
    10. '   
' → logprob: -7.403270244598389

Token 294: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17383667826652527
    2. 'str' → logprob: -2.9238367080688477
    3. ' input' → logprob: -3.1738367080688477
    4. 'a' → logprob: -3.5488367080688477
    5. 'string' → logprob: -4.673836708068848
    6. ' str' → logprob: -4.798836708068848
    7. ' string' → logprob: -4.798836708068848
    8. 'input' → logprob: -4.798836708068848
    9. 's' → logprob: -7.173836708068848
    10. 't' → logprob: -8.673836708068848

Token 295: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.11416276544332504
    2. 'tring' → logprob: -2.3641626834869385
    3. ' string' → logprob: -4.364162921905518
    4. 'str' → logprob: -6.864162921905518
    5. 'tr' → logprob: -9.48916244506836
    6. 't' → logprob: -12.36416244506836
    7. 's' → logprob: -12.73916244506836
    8. 'stri' → logprob: -13.11416244506836
    9. 'ring' → logprob: -13.86416244506836
    10. 'n' → logprob: -14.73916244506836

Token 296: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6246235966682434
    2. '   ' → logprob: -1.1246235370635986
    3. '    
' → logprob: -2.3746235370635986
    4. 'dp' → logprob: -3.7496235370635986
    5. 'result' → logprob: -4.874623775482178
    6. 'score' → logprob: -5.499623775482178
    7. 'moves' → logprob: -5.499623775482178
    8. '   
' → logprob: -6.374623775482178
    9. 'scores' → logprob: -7.124623775482178
    10. '  
' → logprob: -7.249623775482178

Token 297: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0634370893239975
    2. '")' → logprob: -4.563436985015869
    3. 'input' → logprob: -4.938436985015869
    4. 'str' → logprob: -5.063436985015869
    5. ' )' → logprob: -5.188436985015869
    6. 't' → logprob: -5.188436985015869
    7. 'rstrip' → logprob: -5.188436985015869
    8. ' ' → logprob: -5.563436985015869
    9. '   ' → logprob: -5.563436985015869
    10. 'r' → logprob: -5.688436985015869

Token 298: ' letters' (ID: 18151)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020083377603441477
    2. ' )' → logprob: -6.252008438110352
    3. '=' → logprob: -10.752008438110352
    4. ' characters' → logprob: -11.877008438110352
    5. ')t' → logprob: -11.877008438110352
    6. ')
' → logprob: -12.002008438110352
    7. '-length' → logprob: -12.377008438110352
    8. ' =' → logprob: -12.377008438110352
    9. 'chars' → logprob: -12.502008438110352
    10. ' chars' → logprob: -12.627008438110352

Token 299: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015217094914987683
    2. '   ' → logprob: -9.000152587890625
    3. ' )' → logprob: -11.250152587890625
    4. ')
' → logprob: -12.000152587890625
    5. ').' → logprob: -12.375152587890625
    6. ')

' → logprob: -13.625152587890625
    7. '")' → logprob: -14.000152587890625
    8. ')")' → logprob: -14.625152587890625
    9. '')' → logprob: -14.750152587890625
    10. ')`' → logprob: -14.875152587890625

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03972476348280907
    2. '
' → logprob: -4.164724826812744
    3. 'dp' → logprob: -4.414724826812744
    4. '    
' → logprob: -4.664724826812744
    5. 'score' → logprob: -6.789724826812744
    6. 'moves' → logprob: -8.664724349975586
    7. '#' → logprob: -9.164724349975586
    8. ' dp' → logprob: -9.164724349975586
    9. 'ans' → logprob: -10.039724349975586
    10. 'answer' → logprob: -10.164724349975586

Token 301: ' ans' (ID: 3345)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16098745167255402
    2. '#' → logprob: -2.535987377166748
    3. 'score' → logprob: -3.035987377166748
    4. 'answer' → logprob: -5.160987377166748
    5. 'win' → logprob: -5.660987377166748
    6. 'ans' (adapté à ' ans') → logprob: -6.035987377166748
    7. 'res' → logprob: -6.035987377166748
    8. 'from' → logprob: -6.535987377166748
    9. 'scores' → logprob: -7.035987377166748
    10. 'answers' → logprob: -7.160987377166748

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25249841809272766
    2. '=' → logprob: -1.5024983882904053
    3. '_' → logprob: -8.002498626708984
    4. ' ' → logprob: -8.377498626708984
    5. '_score' → logprob: -14.377498626708984
    6. '   ' → logprob: -14.502498626708984
    7. '  ' → logprob: -14.502498626708984
    8. '[' → logprob: -14.502498626708984
    9. ' _' → logprob: -15.002498626708984
    10. ')' → logprob: -15.002498626708984

Token 303: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08237457275390625
    2. '[' → logprob: -2.5823745727539062
    3. ' ' → logprob: -6.207374572753906
    4. ' [' → logprob: -6.582374572753906
    5. '['' → logprob: -10.332374572753906
    6. '[]' → logprob: -10.457374572753906
    7. '["' → logprob: -12.207374572753906
    8. '   ' → logprob: -12.207374572753906
    9. '[]
' → logprob: -12.332374572753906
    10. '[int' → logprob: -14.082374572753906

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028074870351701975
    2. '[' → logprob: -5.8778076171875
    3. ' ' → logprob: -13.7528076171875
    4. '['' → logprob: -14.1278076171875
    5. '[]' → logprob: -15.0028076171875
    6. '[]
' → logprob: -15.6278076171875
    7. '["' → logprob: -15.7528076171875
    8. ' [' → logprob: -16.2528076171875
    9. '[int' → logprob: -17.0028076171875
    10. '   ' → logprob: -18.3778076171875

Token 305: '      ' (ID: 1699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03954613208770752
    2. '   ' → logprob: -3.789546012878418
    3. '    
' → logprob: -5.164546012878418
    4. ',' → logprob: -5.789546012878418
    5. '\n' → logprob: -6.039546012878418
    6. 'for' → logprob: -6.789546012878418
    7. ' 
' → logprob: -6.914546012878418
    8. ' for' → logprob: -7.289546012878418
    9. '   
' → logprob: -7.289546012878418
    10. '  
' → logprob: -7.914546012878418

Token 306: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6410986185073853
    2. '   ' → logprob: -0.8910986185073853
    3. '    
' → logprob: -3.3910984992980957
    4. '   
' → logprob: -4.766098499298096
    5. '\n' → logprob: -5.266098499298096
    6. ',' → logprob: -5.641098499298096
    7. 'dp' → logprob: -6.141098499298096
    8. 'for' → logprob: -6.516098499298096
    9. 'moves' → logprob: -6.766098499298096
    10. '  
' → logprob: -6.766098499298096

Token 307: ' To' (ID: 2514)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6044604182243347
    2. 'prev' → logprob: -2.2294604778289795
    3. 'visited' → logprob: -2.3544604778289795
    4. 'for' → logprob: -2.8544604778289795
    5. 'used' → logprob: -2.9794604778289795
    6. '#' → logprob: -3.2294604778289795
    7. '[]' → logprob: -3.4794604778289795
    8. 'score' → logprob: -4.1044602394104
    9. '[' → logprob: -4.6044602394104
    10. 'moves' → logprob: -4.7294602394104

Token 308: ' accumulate' (ID: 74226)
  Prédit: ' accumulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.19783389568328857
    2. ' ' → logprob: -1.8228338956832886
    3. '    ' → logprob: -5.697834014892578
    4. '  ' → logprob: -5.697834014892578
    5. 'calculate' → logprob: -6.072834014892578
    6. ' calculate' → logprob: -6.447834014892578
    7. 'acc' → logprob: -7.072834014892578
    8. '   ' → logprob: -7.072834014892578
    9. 'maximize' → logprob: -7.572834014892578
    10. ' keep' → logprob: -7.697834014892578

Token 309: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07007736712694168
    2. 'total' → logprob: -3.820077419281006
    3. ' total' → logprob: -4.195077419281006
    4. '   ' → logprob: -5.195077419281006
    5. '    ' → logprob: -5.195077419281006
    6. 'result' → logprob: -5.570077419281006
    7. '_' → logprob: -5.570077419281006
    8. ' the' → logprob: -5.945077419281006
    9. '  ' → logprob: -6.070077419281006
    10. ' )' → logprob: -6.695077419281006

Token 310: ' final' (ID: 1721)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.17478220164775848
    2. 'total' → logprob: -2.5497822761535645
    3. ' maximum' → logprob: -2.7997822761535645
    4. 'maximum' → logprob: -4.7997822761535645
    5. ' score' → logprob: -5.1747822761535645
    6. 'score' → logprob: -5.4247822761535645
    7. 'max' → logprob: -6.6747822761535645
    8. ' final' → logprob: -7.2997822761535645
    9. ' ' → logprob: -7.6747822761535645
    10. ' max' → logprob: -8.049781799316406

Token 311: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.12965883314609528
    2. 'score' → logprob: -2.1296589374542236
    3. ' ' → logprob: -7.0046586990356445
    4. ' result' → logprob: -7.0046586990356445
    5. '_score' → logprob: -7.5046586990356445
    6. '_' → logprob: -8.504658699035645
    7. ' answer' → logprob: -9.629658699035645
    8. 'result' → logprob: -10.004658699035645
    9. ' total' → logprob: -11.504658699035645
    10. ' maximum' → logprob: -11.879658699035645

Token 312: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6869699358940125
    2. '   ' → logprob: -0.9369699358940125
    3. '    
' → logprob: -3.1869699954986572
    4. 'moves' → logprob: -3.8119699954986572
    5. ' moves' → logprob: -4.436969757080078
    6. 'dp' → logprob: -4.811969757080078
    7. '_moves' → logprob: -6.061969757080078
    8. 'choices' → logprob: -6.186969757080078
    9. ' choices' → logprob: -6.186969757080078
    10. 'for' → logprob: -6.311969757080078

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7706021070480347
    2. 'dp' → logprob: -0.7706021070480347
    3. ' dp' → logprob: -3.645602226257324
    4. 'moves' → logprob: -4.270602226257324
    5. 'used' → logprob: -4.395602226257324
    6. ' used' → logprob: -5.145602226257324
    7. 'chosen' → logprob: -5.520602226257324
    8. 'for' → logprob: -5.645602226257324
    9. ' moves' → logprob: -6.145602226257324
    10. 'choices' → logprob: -6.520602226257324

Token 314: ' win' (ID: 4449)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5927702784538269
    2. 'used' → logprob: -1.0927703380584717
    3. 'chosen' → logprob: -3.4677703380584717
    4. '#' → logprob: -4.217770099639893
    5. 'moves' → logprob: -4.592770099639893
    6. 'played' → logprob: -4.967770099639893
    7. 'score' → logprob: -5.092770099639893
    8. 'for' → logprob: -5.342770099639893
    9. 'memo' → logprob: -5.592770099639893
    10. 'choices' → logprob: -5.592770099639893

Token 315: ' =' (ID: 314)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.3270551562309265
    2. '_move' → logprob: -1.5770552158355713
    3. '_map' → logprob: -3.4520552158355713
    4. ' =' → logprob: -3.5770552158355713
    5. '_choices' → logprob: -5.452054977416992
    6. 's' → logprob: -5.827054977416992
    7. 'ning' → logprob: -6.327054977416992
    8. 'moves' → logprob: -6.827054977416992
    9. 'move' → logprob: -7.077054977416992
    10. '_choice' → logprob: -7.077054977416992

Token 316: ' []' (ID: 6126)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.0009986326331272721
    2. '{"' → logprob: -7.000998497009277
    3. '{' → logprob: -9.750998497009277
    4. ' {'' → logprob: -10.750998497009277
    5. '{
' → logprob: -12.125998497009277
    6. '   ' → logprob: -14.000998497009277
    7. '['' → logprob: -14.375998497009277
    8. '[' → logprob: -15.000998497009277
    9. '({'' → logprob: -16.375999450683594
    10. ' ' → logprob: -16.500999450683594

Token 317: '     ' (ID: 530)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3754597306251526
    2. '   ' → logprob: -2.125459671020508
    3. ' for' → logprob: -2.375459671020508
    4. 'for' → logprob: -3.500459671020508
    5. '    
' → logprob: -3.750459671020508
    6. '[' → logprob: -4.500459671020508
    7. ' ' → logprob: -4.750459671020508
    8. '=' → logprob: -5.000459671020508
    9. ' 
' → logprob: -5.000459671020508
    10. '  
' → logprob: -5.875459671020508

Token 318: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6410675644874573
    2. 'for' → logprob: -1.1410675048828125
    3. ' for' → logprob: -3.3910675048828125
    4. '    
' → logprob: -3.5160675048828125
    5. '#' (adapté à ' #') → logprob: -3.8910675048828125
    6. '
' → logprob: -3.8910675048828125
    7. ' =' → logprob: -4.3910675048828125
    8. '  ' → logprob: -4.7660675048828125
    9. '[' → logprob: -5.3910675048828125
    10. '   
' → logprob: -5.5160675048828125

Token 319: ' To' (ID: 2514)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.42760762572288513
    2. '['' → logprob: -1.9276076555252075
    3. '[' → logprob: -2.927607536315918
    4. '[]
' → logprob: -2.927607536315918
    5. '[(' → logprob: -3.177607536315918
    6. '{'' → logprob: -3.802607536315918
    7. 'for' → logprob: -4.427607536315918
    8. '[]

' → logprob: -5.052607536315918
    9. '["' → logprob: -5.427607536315918
    10. '[str' → logprob: -6.302607536315918

Token 320: ' track' (ID: 5290)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2200707197189331
    2. 'append' → logprob: -1.720070719718933
    3. '[]
' → logprob: -5.220070838928223
    4. 'range' → logprob: -6.345070838928223
    5. '.append' → logprob: -6.470070838928223
    6. 'len' → logprob: -6.595070838928223
    7. ' []' → logprob: -6.720070838928223
    8. '[' → logprob: -6.720070838928223
    9. 'win' → logprob: -7.095070838928223
    10. 'map' → logprob: -7.470070838928223

Token 321: ' our' (ID: 1039)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15525579452514648
    2. 'the' → logprob: -2.4052557945251465
    3. ' ' → logprob: -4.1552557945251465
    4. '   ' → logprob: -4.2802557945251465
    5. ' for' → logprob: -5.0302557945251465
    6. ' which' → logprob: -5.6552557945251465
    7. ' what' → logprob: -6.0302557945251465
    8. ' your' → logprob: -6.0302557945251465
    9. '  ' → logprob: -6.1552557945251465
    10. 'for' → logprob: -6.5302557945251465

Token 322: ' own' (ID: 2316)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.5659374594688416
    2. 'chosen' → logprob: -1.9409375190734863
    3. ' moves' → logprob: -2.1909375190734863
    4. ' chosen' → logprob: -3.4409375190734863
    5. 'move' → logprob: -3.4409375190734863
    6. 'choices' → logprob: -3.6909375190734863
    7. 'winning' → logprob: -3.8159375190734863
    8. ' move' → logprob: -4.440937519073486
    9. 'possible' → logprob: -4.565937519073486
    10. 'own' → logprob: -4.940937519073486

Token 323: ' move' (ID: 5275)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.09028121829032898
    2. ' moves' → logprob: -3.0902812480926514
    3. '_moves' → logprob: -3.5902812480926514
    4. 'choices' → logprob: -5.340281009674072
    5. 'move' → logprob: -5.715281009674072
    6. 'wins' → logprob: -6.590281009674072
    7. ' choices' → logprob: -7.090281009674072
    8. '_move' → logprob: -7.465281009674072
    9. '_choices' → logprob: -7.715281009674072
    10. 'win' → logprob: -7.965281009674072

Token 324: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4627571403980255
    2. 'choices' → logprob: -2.212757110595703
    3. '_choices' → logprob: -2.337757110595703
    4. ' choices' → logprob: -3.587757110595703
    5. 'scores' → logprob: -3.587757110595703
    6. '_scores' → logprob: -3.712757110595703
    7. '   ' → logprob: -4.212757110595703
    8. ' for' → logprob: -4.587757110595703
    9. '_score' → logprob: -4.587757110595703
    10. 'for' → logprob: -4.587757110595703

Token 325: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.11867841333150864
    2. ' each' → logprob: -2.243678331375122
    3. 'previous' → logprob: -5.743678569793701
    4. ' previous' → logprob: -7.118678569793701
    5. 'i' → logprob: -7.368678569793701
    6. 'the' → logprob: -7.993678569793701
    7. ' the' → logprob: -8.743678092956543
    8. ' ' → logprob: -8.993678092956543
    9. 'round' → logprob: -8.993678092956543
    10. '   ' → logprob: -9.743678092956543

Token 326: ' round' (ID: 7353)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.043372977524995804
    2. ' round' → logprob: -3.293372869491577
    3. 'position' → logprob: -6.293373107910156
    4. 'index' → logprob: -6.793373107910156
    5. '_' → logprob: -7.168373107910156
    6. '_round' → logprob: -7.418373107910156
    7. ' ' → logprob: -7.918373107910156
    8. 'op' → logprob: -8.918373107910156
    9. ' index' → logprob: -9.168373107910156
    10. ' position' → logprob: -9.418373107910156

Token 327: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7077755928039551
    2. 'for' → logprob: -1.207775592803955
    3. ' for' → logprob: -1.832775592803955
    4. ' =' → logprob: -4.207775592803955
    5. '
' → logprob: -4.582775592803955
    6. '    
' → logprob: -4.832775592803955
    7. ',' → logprob: -5.832775592803955
    8. '[' → logprob: -6.082775592803955
    9. '#' → logprob: -6.707775592803955
    10. '=' → logprob: -6.707775592803955

Token 328: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014090518467128277
    2. ' )' → logprob: -4.639090538024902
    3. 'None' → logprob: -6.639090538024902
    4. '   ' → logprob: -7.639090538024902
    5. ' None' → logprob: -8.014090538024902
    6. 'for' → logprob: -8.014090538024902
    7. ' for' → logprob: -8.139090538024902
    8. ')
' → logprob: -8.139090538024902
    9. 'n' → logprob: -8.389090538024902
    10. ' ' → logprob: -9.014090538024902

Token 329: ' possible' (ID: 4149)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.1763602495193481
    2. ')' → logprob: -2.1763601303100586
    3. ' i' → logprob: -2.4263601303100586
    4. 'i' → logprob: -2.5513601303100586
    5. ' avoiding' → logprob: -2.6763601303100586
    6. ' constraint' → logprob: -2.9263601303100586
    7. 'constraint' → logprob: -3.0513601303100586
    8. 'k' → logprob: -3.1763601303100586
    9. 'checking' → logprob: -3.3013601303100586
    10. ' checking' → logprob: -3.6763601303100586

Token 330: ' repeat' (ID: 22962)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.8611153364181519
    2. ' i' → logprob: -2.1111154556274414
    3. ')' → logprob: -2.3611154556274414
    4. 'i' → logprob: -2.3611154556274414
    5. ' scoring' → logprob: -2.7361154556274414
    6. 'k' → logprob: -2.8611154556274414
    7. ' move' → logprob: -2.9861154556274414
    8. ' repetition' → logprob: -3.4861154556274414
    9. ' win' → logprob: -3.6111154556274414
    10. 'win' → logprob: -3.9861154556274414

Token 331: ' checking' (ID: 19141)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8358028531074524
    2. ')' → logprob: -1.2108027935028076
    3. ' avoidance' → logprob: -2.0858027935028076
    4. ' prevention' → logprob: -2.3358027935028076
    5. ' constraints' → logprob: -4.835803031921387
    6. 'ing' → logprob: -5.210803031921387
    7. '   ' → logprob: -5.460803031921387
    8. '_' → logprob: -5.460803031921387
    9. ' restrictions' → logprob: -5.585803031921387
    10. ' ' → logprob: -5.585803031921387

Token 332: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010020548506872728
    2. ' )' → logprob: -10.125100135803223
    3. ')
' → logprob: -10.750100135803223
    4. ']' → logprob: -10.750100135803223
    5. ',' → logprob: -12.625100135803223
    6. ')

' → logprob: -12.875100135803223
    7. '   ' → logprob: -13.125100135803223
    8. '[' → logprob: -13.250100135803223
    9. ' for' → logprob: -13.875100135803223
    10. ' ' → logprob: -13.875100135803223

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20181821286678314
    2. 'for' → logprob: -2.2018182277679443
    3. ' for' → logprob: -2.7018182277679443
    4. '    
' → logprob: -6.201817989349365
    5. 'moves' → logprob: -6.451817989349365
    6. '
' → logprob: -7.326817989349365
    7. ' moves' → logprob: -8.326818466186523
    8. '#' → logprob: -9.201818466186523
    9. '  
' → logprob: -9.326818466186523
    10. 'dp' → logprob: -9.951818466186523

Token 334: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10765368491411209
    2. 'dp' → logprob: -3.3576536178588867
    3. 'moves' → logprob: -3.3576536178588867
    4. ' for' → logprob: -4.232653617858887
    5. '#' (adapté à ' #') → logprob: -5.107653617858887
    6. 'move' → logprob: -5.482653617858887
    7. 'win' → logprob: -5.732653617858887
    8. '   ' → logprob: -6.482653617858887
    9. ' moves' → logprob: -7.232653617858887
    10. 'from' → logprob: -7.982653617858887

Token 335: ' First' (ID: 8338)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9174909591674805
    2. 'dp' → logprob: -0.9174909591674805
    3. 'moves' → logprob: -2.4174909591674805
    4. '#' → logprob: -3.1674909591674805
    5. 'move' → logprob: -3.2924909591674805
    6. 'from' → logprob: -4.6674909591674805
    7. 'win' → logprob: -4.7924909591674805
    8. 'score' → logprob: -5.1674909591674805
    9. 'For' → logprob: -5.6674909591674805
    10. 'def' → logprob: -7.0424909591674805

Token 336: ' pass' (ID: 1853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6863000988960266
    2. 'for' → logprob: -1.4363000392913818
    3. ' for' → logprob: -1.8113000392913818
    4. ',' → logprob: -3.561300039291382
    5. '=' → logprob: -3.561300039291382
    6. '_' → logprob: -5.061300277709961
    7. ' ' → logprob: -5.436300277709961
    8. '_token' → logprob: -6.311300277709961
    9. 'def' → logprob: -6.311300277709961
    10. '_line' → logprob: -6.436300277709961

Token 337: ':' (ID: 25)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7860177159309387
    2. ':' → logprob: -1.161017656326294
    3. 'for' → logprob: -1.911017656326294
    4. '   ' → logprob: -2.786017656326294
    5. '    ' → logprob: -4.786017894744873
    6. ' ' → logprob: -5.036017894744873
    7. ' =' → logprob: -6.161017894744873
    8. ' :' → logprob: -6.661017894744873
    9. '    
' → logprob: -7.036017894744873
    10. '     
' → logprob: -8.286017417907715

Token 338: ' Choose' (ID: 25151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4292467534542084
    2. ' for' → logprob: -1.0542467832565308
    3. '   ' → logprob: -7.92924690246582
    4. 'win' → logprob: -9.42924690246582
    5. ' win' → logprob: -9.80424690246582
    6. 'dp' → logprob: -11.30424690246582
    7. 'from' → logprob: -11.80424690246582
    8. ' ' → logprob: -12.80424690246582
    9. ' ans' → logprob: -13.05424690246582
    10. 'score' → logprob: -13.17924690246582

Token 339: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8541989326477051
    2. ' moves' → logprob: -1.729198932647705
    3. '   ' → logprob: -2.104198932647705
    4. 'moves' → logprob: -2.979198932647705
    5. ' our' → logprob: -3.104198932647705
    6. ' for' → logprob: -3.229198932647705
    7. 'the' → logprob: -3.479198932647705
    8. ' your' → logprob: -3.979198932647705
    9. ' ' → logprob: -4.479198932647705
    10. ' move' → logprob: -4.479198932647705

Token 340: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.6426250338554382
    2. 'best' → logprob: -1.517625093460083
    3. ' move' → logprob: -2.642625093460083
    4. ' next' → logprob: -3.517625093460083
    5. 'optimal' → logprob: -3.517625093460083
    6. ' optimal' → logprob: -3.767625093460083
    7. 'winning' → logprob: -3.892625093460083
    8. 'move' → logprob: -4.017624855041504
    9. ' moves' → logprob: -4.142624855041504
    10. 'next' → logprob: -4.517624855041504

Token 341: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.15316437184810638
    2. 'move' → logprob: -2.6531643867492676
    3. '   ' → logprob: -4.153164386749268
    4. ' possible' → logprob: -4.403164386749268
    5. 'possible' → logprob: -4.653164386749268
    6. ' counter' → logprob: -4.778164386749268
    7. ' moves' → logprob: -5.278164386749268
    8. 'counter' → logprob: -5.528164386749268
    9. '_move' → logprob: -5.528164386749268
    10. 'winning' → logprob: -5.653164386749268

Token 342: ' against' (ID: 4372)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13257241249084473
    2. 'for' → logprob: -2.1325724124908447
    3. '   ' → logprob: -5.507572174072266
    4. ' =' → logprob: -7.632572174072266
    5. ' to' → logprob: -8.007572174072266
    6. 's' → logprob: -9.007572174072266
    7. ' ' → logprob: -9.132572174072266
    8. ' in' → logprob: -9.257572174072266
    9. ' that' → logprob: -9.882572174072266
    10. '=' → logprob: -9.882572174072266

Token 343: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.7608841061592102
    2. 'each' → logprob: -1.2608840465545654
    3. 't' → logprob: -1.7608840465545654
    4. ' t' → logprob: -3.1358840465545654
    5. ' the' → logprob: -3.8858840465545654
    6. 'the' → logprob: -5.0108842849731445
    7. ' opponent' → logprob: -5.5108842849731445
    8. 'op' → logprob: -6.1358842849731445
    9. ' ' → logprob: -8.385884284973145
    10. '   ' → logprob: -9.010884284973145

Token 344: ' of' (ID: 328)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.38785219192504883
    2. ' opponent' → logprob: -2.012852191925049
    3. 't' → logprob: -2.137852191925049
    4. ' move' → logprob: -3.387852191925049
    5. 'move' → logprob: -4.137852191925049
    6. ' t' → logprob: -5.387852191925049
    7. 'character' → logprob: -5.762852191925049
    8. '   ' → logprob: -5.762852191925049
    9. ' character' → logprob: -6.387852191925049
    10. ' ' → logprob: -6.637852191925049

Token 345: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0461311340332031
    2. 't' → logprob: -1.1711311340332031
    3. ' the' → logprob: -1.5461311340332031
    4. ' opponent' → logprob: -2.421131134033203
    5. ' t' → logprob: -3.796131134033203
    6. 'op' → logprob: -4.296131134033203
    7. 'each' → logprob: -8.796131134033203
    8. ' opponents' → logprob: -8.921131134033203
    9. ' ' → logprob: -9.546131134033203
    10. 'Opponent' → logprob: -9.796131134033203

Token 346: ' opponent' (ID: 38519)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.12043564021587372
    2. ' opponent' → logprob: -2.6204357147216797
    3. 't' → logprob: -3.2454357147216797
    4. ' t' → logprob: -7.74543571472168
    5. 'r' → logprob: -8.62043571472168
    6. ' ' → logprob: -8.62043571472168
    7. 'i' → logprob: -9.37043571472168
    8. ''s' → logprob: -9.37043571472168
    9. '_op' → logprob: -9.49543571472168
    10. 'enemy' → logprob: -9.62043571472168

Token 347: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.7063927054405212
    2. '[' → logprob: -1.331392765045166
    3. '[i' → logprob: -1.956392765045166
    4. ' move' → logprob: -3.456392765045166
    5. '   ' → logprob: -4.081392765045166
    6. ' moves' → logprob: -4.456392765045166
    7. 'move' → logprob: -4.456392765045166
    8. 'moves' → logprob: -4.831392765045166
    9. '_moves' → logprob: -4.956392765045166
    10. '_move' → logprob: -4.956392765045166

Token 348: ' moves' (ID: 19523)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.4459109604358673
    2. 'move' → logprob: -1.945910930633545
    3. 't' → logprob: -2.070910930633545
    4. '_move' → logprob: -3.570910930633545
    5. ''' → logprob: -4.195910930633545
    6. '_' → logprob: -4.445910930633545
    7. ' ' → logprob: -4.695910930633545
    8. '   ' → logprob: -5.320910930633545
    9. ' t' → logprob: -5.570910930633545
    10. 'm' → logprob: -5.695910930633545

Token 349: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4555603265762329
    2. 'for' → logprob: -1.705560326576233
    3. ' for' → logprob: -1.705560326576233
    4. '
' → logprob: -6.455560207366943
    5. '    
' → logprob: -7.455560207366943
    6. ',' → logprob: -8.580560684204102
    7. ':' → logprob: -9.080560684204102
    8. '  
' → logprob: -10.705560684204102
    9. ' ' → logprob: -11.205560684204102
    10. '.' → logprob: -11.455560684204102

Token 350: ' add' (ID: 1147)
  Prédit: ' append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.4874540865421295
    2. 'append' → logprob: -1.1124540567398071
    3. ' store' → logprob: -3.9874541759490967
    4. 'win' → logprob: -4.987453937530518
    5. 'store' → logprob: -5.112453937530518
    6. 'for' → logprob: -5.237453937530518
    7. ' win' → logprob: -5.237453937530518
    8. ' for' → logprob: -5.612453937530518
    9. ' fill' → logprob: -6.112453937530518
    10. 'calculate' → logprob: -6.612453937530518

Token 351: ' score' (ID: 8429)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4419938325881958
    2. '_' → logprob: -2.1919937133789062
    3. ' ' → logprob: -2.1919937133789062
    4. ' scores' → logprob: -2.1919937133789062
    5. '_score' → logprob: -2.1919937133789062
    6. 'score' → logprob: -3.1919937133789062
    7. ' score' → logprob: -3.3169937133789062
    8. ' the' → logprob: -3.3169937133789062
    9. ' for' → logprob: -3.4419937133789062
    10. '(' → logprob: -3.5669937133789062

Token 352: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23775021731853485
    2. '
' → logprob: -2.112750291824341
    3. ' for' → logprob: -2.987750291824341
    4. 'for' → logprob: -3.612750291824341
    5. '    
' → logprob: -4.862750053405762
    6. ':' → logprob: -5.487750053405762
    7. '  
' → logprob: -7.362750053405762
    8. ',' → logprob: -8.487750053405762
    9. ':
' → logprob: -8.862750053405762
    10. '   
' → logprob: -8.987750053405762

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03710149973630905
    2. '
' → logprob: -4.2871012687683105
    3. 'for' → logprob: -4.2871012687683105
    4. ' for' → logprob: -4.9121012687683105
    5. '    
' → logprob: -6.5371012687683105
    6. '  
' → logprob: -10.037101745605469
    7. ':' → logprob: -10.537101745605469
    8. '   
' → logprob: -11.287101745605469
    9. ' ' → logprob: -11.537101745605469
    10. '\n' → logprob: -12.037101745605469

Token 354: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13925181329250336
    2. ' for' → logprob: -2.389251708984375
    3. '   ' → logprob: -3.264251708984375
    4. '    
' → logprob: -10.889251708984375
    5. 'moves' → logprob: -11.139251708984375
    6. '
' → logprob: -11.264251708984375
    7. ' ' → logprob: -12.639251708984375
    8. '	for' → logprob: -12.639251708984375
    9. 'win' → logprob: -12.764251708984375
    10. ' moves' → logprob: -12.889251708984375

Token 355: ' tt' (ID: 34181)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28122177720069885
    2. ' i' → logprob: -1.4062217473983765
    3. '_i' → logprob: -10.281221389770508
    4. '_' → logprob: -10.656221389770508
    5. 'idx' → logprob: -13.156221389770508
    6. ' _' → logprob: -13.156221389770508
    7. ' ' → logprob: -13.156221389770508
    8. '	i' → logprob: -13.656221389770508
    9. '(i' → logprob: -13.781221389770508
    10. '   ' → logprob: -13.781221389770508

Token 356: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012766375206410885
    2. 'in' → logprob: -4.387766361236572
    3. 'i' → logprob: -9.13776683807373
    4. ' ' → logprob: -9.38776683807373
    5. 'n' → logprob: -11.26276683807373
    6. 's' → logprob: -11.26276683807373
    7. ',' → logprob: -11.51276683807373
    8. '  ' → logprob: -11.63776683807373
    9. ' i' → logprob: -12.13776683807373
    10. '   ' → logprob: -12.76276683807373

Token 357: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03367774561047554
    2. ' t' → logprob: -3.408677816390991
    3. 'range' → logprob: -10.90867805480957
    4. ' range' → logprob: -11.65867805480957
    5. ' ' → logprob: -12.90867805480957
    6. '(t' → logprob: -13.78367805480957
    7. '[t' → logprob: -15.03367805480957
    8. '`t' → logprob: -15.15867805480957
    9. '	t' → logprob: -15.40867805480957
    10. '   ' → logprob: -15.53367805480957

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000205566844670102
    2. ':
' → logprob: -9.000205993652344
    3. '):' → logprob: -10.000205993652344
    4. ' :' → logprob: -10.250205993652344
    5. ')' → logprob: -14.750205993652344
    6. '):
' → logprob: -15.375205993652344
    7. '=' → logprob: -15.625205993652344
    8. ',' → logprob: -16.125205993652344
    9. ':
' → logprob: -16.375205993652344
    10. ':

' → logprob: -16.750205993652344

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01647769846022129
    2. ':' → logprob: -5.141477584838867
    3. '   ' → logprob: -5.516477584838867
    4. '    ' → logprob: -5.766477584838867
    5. ' ' → logprob: -6.766477584838867
    6. ' if' → logprob: -7.141477584838867
    7. '        
' → logprob: -7.891477584838867
    8. ',' → logprob: -8.766477584838867
    9. '    
' → logprob: -9.016477584838867
    10. '<|end|>' → logprob: -9.016477584838867

Token 360: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25467735528945923
    2. '   ' → logprob: -1.8796772956848145
    3. ' if' → logprob: -2.6296772956848145
    4. '	if' → logprob: -10.504677772521973
    5. 'i' → logprob: -10.754677772521973
    6. '       ' → logprob: -11.504677772521973
    7. ' ' → logprob: -11.754677772521973
    8. 'win' → logprob: -11.879677772521973
    9. '  ' → logprob: -12.004677772521973
    10. '    ' → logprob: -12.629677772521973

Token 361: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.061997491866350174
    2. ' tt' → logprob: -2.811997413635254
    3. '(tt' → logprob: -11.311997413635254
    4. '  ' → logprob: -11.686997413635254
    5. '_tt' → logprob: -11.811997413635254
    6. '   ' → logprob: -14.436997413635254
    7. '    ' → logprob: -14.436997413635254
    8. 'TT' → logprob: -15.311997413635254
    9. '.tt' → logprob: -15.311997413635254
    10. 't' → logprob: -16.68699836730957

Token 362: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18185405433177948
    2. ' ==' → logprob: -1.806854009628296
    3. '=='' → logprob: -6.181854248046875
    4. '=' → logprob: -11.431854248046875
    5. ' =='' → logprob: -11.556854248046875
    6. '=="' → logprob: -12.181854248046875
    7. '==
' → logprob: -12.431854248046875
    8. ''' → logprob: -13.056854248046875
    9. ' ' → logprob: -13.056854248046875
    10. '===' → logprob: -13.181854248046875

Token 363: ' '' (ID: 461)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.00595617201179266
    2. 'r' → logprob: -5.380956172943115
    3. '"' → logprob: -7.505956172943115
    4. ''s' → logprob: -8.005955696105957
    5. ''' → logprob: -8.130955696105957
    6. ''p' → logprob: -9.005955696105957
    7. ' '' → logprob: -12.005955696105957
    8. '	r' → logprob: -12.255955696105957
    9. '`' → logprob: -12.630955696105957
    10. ' r' → logprob: -12.630955696105957

Token 364: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2025185376405716
    2. 's' → logprob: -1.7025185823440552
    3. 'p' → logprob: -6.952518463134766
    4. ''' → logprob: -9.327518463134766
    5. ''r' → logprob: -10.202518463134766
    6. ''s' → logprob: -11.327518463134766
    7. '"' → logprob: -12.827518463134766
    8. '"s' → logprob: -13.077518463134766
    9. '_s' → logprob: -13.827518463134766
    10. ''p' → logprob: -13.952518463134766

Token 365: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.28885510563850403
    2. '':
' → logprob: -1.9138550758361816
    3. ''' → logprob: -2.2888550758361816
    4. '':
' → logprob: -6.538855075836182
    5. ' '' → logprob: -8.03885555267334
    6. '':

' → logprob: -9.28885555267334
    7. ':' → logprob: -9.66385555267334
    8. ' ':' → logprob: -11.03885555267334
    9. ''s' → logprob: -11.16385555267334
    10. '':'' → logprob: -11.78885555267334

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1039559617638588
    2. 'P' → logprob: -2.7289559841156006
    3. 's' → logprob: -4.1039557456970215
    4. '       ' → logprob: -5.7289557456970215
    5. ' P' → logprob: -6.4789557456970215
    6. '   ' → logprob: -6.6039557456970215
    7. ')' → logprob: -6.7289557456970215
    8. 'p' → logprob: -6.7289557456970215
    9. ''s' → logprob: -6.9789557456970215
    10. '            
' → logprob: -7.1039557456970215

Token 367: ' #' (ID: 1069)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.10602477937936783
    2. 's' → logprob: -3.481024742126465
    3. ' P' → logprob: -4.231024742126465
    4. 'ans' → logprob: -4.356024742126465
    5. '           ' → logprob: -4.606024742126465
    6. ' ans' → logprob: -4.731024742126465
    7. 'p' → logprob: -4.856024742126465
    8. 'S' → logprob: -5.481024742126465
    9. '       ' → logprob: -5.981024742126465
    10. '   ' → logprob: -6.106024742126465

Token 368: ' Opp' (ID: 55440)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9922177791595459
    2. 'ans' → logprob: -0.9922177791595459
    3. 'P' → logprob: -2.367217779159546
    4. 'p' → logprob: -2.617217779159546
    5. '           ' → logprob: -3.492217779159546
    6. 'win' → logprob: -4.367218017578125
    7. 'if' → logprob: -4.367218017578125
    8. '#' → logprob: -4.742218017578125
    9. '       ' → logprob: -5.117218017578125
    10. ' ans' → logprob: -5.617218017578125

Token 369: 'onent' (ID: 130930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4307106137275696
    2. 'ose' → logprob: -1.4307105541229248
    3. '       ' → logprob: -2.930710554122925
    4. 'onent' → logprob: -3.555710554122925
    5. 'oint' → logprob: -4.805710792541504
    6. 'play' → logprob: -6.055710792541504
    7. '=' → logprob: -6.180710792541504
    8. 'osite' → logprob: -6.555710792541504
    9. 'move' → logprob: -6.805710792541504
    10. 'osing' → logprob: -6.930710792541504

Token 370: ' throws' (ID: 5114)
  Prédit: ' moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moves' → logprob: -1.864794135093689
    2. 'wins' → logprob: -2.1147942543029785
    3. 'win' → logprob: -2.2397942543029785
    4. ' wins' → logprob: -2.6147942543029785
    5. 'moves' → logprob: -2.8647942543029785
    6. ' chooses' → logprob: -3.2397942543029785
    7. 'plays' → logprob: -3.3647942543029785
    8. ' move' → logprob: -3.3647942543029785
    9. 'move' → logprob: -3.3647942543029785
    10. ' plays' → logprob: -3.3647942543029785

Token 371: ' Rock' (ID: 12251)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1036615371704102
    2. ''s' → logprob: -1.1036615371704102
    3. 'p' → logprob: -1.6036615371704102
    4. ''p' → logprob: -2.85366153717041
    5. ''' → logprob: -3.22866153717041
    6. '           ' → logprob: -3.85366153717041
    7. ' '' → logprob: -5.22866153717041
    8. 'sc' → logprob: -5.72866153717041
    9. 'paper' → logprob: -6.22866153717041
    10. '   ' → logprob: -6.60366153717041

Token 372: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6465126872062683
    2. 's' → logprob: -2.396512746810913
    3. 'P' → logprob: -2.521512746810913
    4. 'S' → logprob: -2.896512746810913
    5. ' ans' → logprob: -2.896512746810913
    6. ')' → logprob: -2.896512746810913
    7. '               ' → logprob: -3.396512746810913
    8. 'ans' → logprob: -3.646512746810913
    9. '            
' → logprob: -4.396512508392334
    10. '       ' → logprob: -4.521512508392334

Token 373: ' we' (ID: 581)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1444290578365326
    2. '           ' → logprob: -2.5194289684295654
    3. ' ans' → logprob: -3.8944289684295654
    4. 'win' → logprob: -4.5194292068481445
    5. 'score' → logprob: -4.8944292068481445
    6. 's' → logprob: -5.1444292068481445
    7. 'move' → logprob: -5.7694292068481445
    8. 'answer' → logprob: -6.3944292068481445
    9. '   ' → logprob: -7.2694292068481445
    10. 'sc' → logprob: -7.6444292068481445

Token 374: ' win' (ID: 4449)
  Prédit: ' should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.8718872666358948
    2. ' choose' → logprob: -1.74688720703125
    3. '           ' → logprob: -2.24688720703125
    4. 'choose' → logprob: -2.37188720703125
    5. ' can' → logprob: -2.74688720703125
    6. 'should' → logprob: -2.87188720703125
    7. 'play' → logprob: -4.37188720703125
    8. ' use' → logprob: -4.49688720703125
    9. ' play' → logprob: -4.49688720703125
    10. ' want' → logprob: -4.62188720703125

Token 375: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.35280725359916687
    2. 'with' → logprob: -1.3528072834014893
    3. ' by' → logprob: -4.47780704498291
    4. 's' → logprob: -4.47780704498291
    5. ' =' → logprob: -5.35280704498291
    6. '           ' → logprob: -5.72780704498291
    7. '=' → logprob: -6.10280704498291
    8. ' ' → logprob: -6.97780704498291
    9. 'by' → logprob: -7.35280704498291
    10. '   ' → logprob: -7.35280704498291

Token 376: ' Paper' (ID: 23804)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12884438037872314
    2. 'P' → logprob: -2.1288442611694336
    3. 'paper' → logprob: -6.878844261169434
    4. ''p' → logprob: -7.503844261169434
    5. ''' → logprob: -8.628844261169434
    6. 'Paper' → logprob: -10.128844261169434
    7. ' p' → logprob: -10.503844261169434
    8. ' P' → logprob: -10.628844261169434
    9. '_p' → logprob: -11.128844261169434
    10. '"P' → logprob: -11.503844261169434

Token 377: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002119211945682764
    2. ',' → logprob: -7.252119064331055
    3. '       ' → logprob: -8.127119064331055
    4. ' (' → logprob: -8.877119064331055
    5. ')' → logprob: -9.252119064331055
    6. ':' → logprob: -9.502119064331055
    7. '
' → logprob: -9.502119064331055
    8. '               ' → logprob: -9.502119064331055
    9. '   ' → logprob: -9.877119064331055
    10. ' =' → logprob: -9.877119064331055

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0066932267509400845
    2. ')' → logprob: -7.006693363189697
    3. '
' → logprob: -7.006693363189697
    4. ':' → logprob: -7.006693363189697
    5. '       ' → logprob: -7.381693363189697
    6. '            
' → logprob: -7.506693363189697
    7. '               ' → logprob: -7.631693363189697
    8. ',' → logprob: -7.631693363189697
    9. ':
' → logprob: -8.131692886352539
    10. ' 
' → logprob: -8.756692886352539

Token 379: ' win' (ID: 4449)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.17313191294670105
    2. 'win' (adapté à ' win') → logprob: -2.6731319427490234
    3. 'score' → logprob: -3.4231319427490234
    4. '           ' → logprob: -3.5481319427490234
    5. ' ans' → logprob: -4.048131942749023
    6. 'move' → logprob: -5.548131942749023
    7. '   ' → logprob: -5.548131942749023
    8. ' win' → logprob: -7.048131942749023
    9. 'answer' → logprob: -7.673131942749023
    10. ' score' → logprob: -8.048131942749023

Token 380: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00103686039801687
    2. '.' → logprob: -6.876036643981934
    3. ' .' → logprob: -12.876036643981934
    4. 'append' → logprob: -14.126036643981934
    5. ' +=' → logprob: -15.251036643981934
    6. '.ap' → logprob: -15.501036643981934
    7. '.app' → logprob: -16.00103759765625
    8. '+=' → logprob: -17.25103759765625
    9. '.extend' → logprob: -17.25103759765625
    10. '_append' → logprob: -17.50103759765625

Token 381: '('' (ID: 706)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5789957046508789
    2. ''p' → logprob: -0.8289957046508789
    3. '('' → logprob: -6.453995704650879
    4. ' '' → logprob: -6.703995704650879
    5. '   ' → logprob: -9.453995704650879
    6. 'p' → logprob: -9.828995704650879
    7. 'P' → logprob: -10.203995704650879
    8. '"P' → logprob: -10.828995704650879
    9. ''s' → logprob: -11.328995704650879
    10. '(p' → logprob: -12.078995704650879

Token 382: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001329791557509452
    2. 'P' → logprob: -9.00013256072998
    3. ''p' → logprob: -11.62513256072998
    4. ''' → logprob: -15.00013256072998
    5. ' p' → logprob: -15.75013256072998
    6. '_p' → logprob: -16.750133514404297
    7. '	p' → logprob: -17.000133514404297
    8. '')' → logprob: -18.750133514404297
    9. 'paper' → logprob: -19.125133514404297
    10. '`' → logprob: -19.250133514404297

Token 383: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.02085459604859352
    2. '')
' → logprob: -3.8958547115325928
    3. ')' → logprob: -8.270854949951172
    4. ''' → logprob: -10.895854949951172
    5. '')
' → logprob: -11.020854949951172
    6. ' ')' → logprob: -11.395854949951172
    7. ' ')
' → logprob: -12.395854949951172
    8. '')

' → logprob: -12.895854949951172
    9. '")' → logprob: -13.770854949951172
    10. ')
' → logprob: -13.895854949951172

Token 384: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11947062611579895
    2. '           ' → logprob: -2.7444705963134766
    3. '<|end|>' → logprob: -3.8694705963134766
    4. '
' → logprob: -4.619470596313477
    5. 'elif' → logprob: -4.744470596313477
    6. '   ' → logprob: -5.119470596313477
    7. ')' → logprob: -7.119470596313477
    8. '    
' → logprob: -7.494470596313477
    9. '<|end|>' → logprob: -7.619470596313477
    10. ' elif' → logprob: -7.994470596313477

Token 385: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.019250690937042236
    2. ' ans' → logprob: -4.019250869750977
    3. '           ' → logprob: -7.519250869750977
    4. '   ' → logprob: -7.644250869750977
    5. '	ans' → logprob: -9.894250869750977
    6. '       ' → logprob: -11.894250869750977
    7. 'answer' → logprob: -11.894250869750977
    8. '
' → logprob: -12.144250869750977
    9. '(ans' → logprob: -13.019250869750977
    10. '_ans' → logprob: -13.144250869750977

Token 386: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04872623085975647
    2. ' +=' → logprob: -3.0487263202667236
    3. '+' → logprob: -8.923726081848145
    4. ']+=' → logprob: -12.548726081848145
    5. '+=(' → logprob: -13.798726081848145
    6. '+='' → logprob: -14.798726081848145
    7. '+="' → logprob: -15.298726081848145
    8. '   ' → logprob: -15.548726081848145
    9. '=' → logprob: -16.17372703552246
    10. '    ' → logprob: -16.17372703552246

Token 387: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.320199877838604e-07
    2. ' P' → logprob: -14.75
    3. '   ' → logprob: -19.0
    4. '3' → logprob: -19.25
    5. 'p' → logprob: -20.625
    6. '  ' → logprob: -21.0
    7. '(P' → logprob: -21.375
    8. ' ' → logprob: -21.875
    9. '           ' → logprob: -22.0
    10. '_P' → logprob: -22.25

Token 388: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0700603649020195
    2. '
' → logprob: -3.4450602531433105
    3. '<|end|>' → logprob: -3.6950602531433105
    4. 'elif' → logprob: -4.6950602531433105
    5. ' elif' → logprob: -7.4450602531433105
    6. '   ' → logprob: -7.4450602531433105
    7. '<|end|>' → logprob: -8.070060729980469
    8. '    
' → logprob: -9.195060729980469
    9. '	elif' → logprob: -10.070060729980469
    10. ')' → logprob: -10.195060729980469

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013486423529684544
    2. 'elif' → logprob: -4.888486385345459
    3. '
' → logprob: -5.513486385345459
    4. '<|end|>' → logprob: -7.013486385345459
    5. ' elif' → logprob: -7.388486385345459
    6. '   ' → logprob: -8.388486862182617
    7. '    
' → logprob: -10.638486862182617
    8. '\n' → logprob: -10.888486862182617
    9. '<|end|>' → logprob: -11.388486862182617
    10. '	elif' → logprob: -11.888486862182617

Token 390: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.015111993998289108
    2. ' elif' → logprob: -4.515111923217773
    3. '       ' → logprob: -5.515111923217773
    4. '   ' → logprob: -10.640111923217773
    5. 'el' → logprob: -12.515111923217773
    6. '	elif' → logprob: -13.015111923217773
    7. '    ' → logprob: -15.015111923217773
    8. 'elseif' → logprob: -17.015111923217773
    9. ' ' → logprob: -17.265111923217773
    10. 'else' → logprob: -17.265111923217773

Token 391: ' tt' (ID: 34181)
  Prédit: ' tt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.004646926652640104
    2. 'tt' → logprob: -5.3796467781066895
    3. 't' → logprob: -11.379647254943848
    4. ' ' → logprob: -11.879647254943848
    5. ' t' → logprob: -12.129647254943848
    6. ' ' → logprob: -14.254647254943848
    7. '(tt' → logprob: -14.504647254943848
    8. '   ' → logprob: -14.879647254943848
    9. '    ' → logprob: -15.004647254943848
    10. '_tt' → logprob: -15.004647254943848

Token 392: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018159780651330948
    2. '==' → logprob: -4.018159866333008
    3. '=='' → logprob: -12.893159866333008
    4. ' ' → logprob: -13.143159866333008
    5. ' ' → logprob: -13.268159866333008
    6. ' =='' → logprob: -13.518159866333008
    7. '=' → logprob: -14.643159866333008
    8. ' =' → logprob: -14.643159866333008
    9. '==
' → logprob: -15.768159866333008
    10. '    ' → logprob: -15.768159866333008

Token 393: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.00022713904036208987
    2. ' '' → logprob: -9.250226974487305
    3. ''' → logprob: -9.750226974487305
    4. 's' → logprob: -9.875226974487305
    5. '`s' → logprob: -11.875226974487305
    6. ' s' → logprob: -12.000226974487305
    7. ''p' → logprob: -12.875226974487305
    8. ' ' → logprob: -13.125226974487305
    9. '‘s' → logprob: -13.750226974487305
    10. '   ' → logprob: -14.000226974487305

Token 394: 's' (ID: 82)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.10027988255023956
    2. 's' → logprob: -2.3502798080444336
    3. ''p' → logprob: -10.225279808044434
    4. '`s' → logprob: -10.725279808044434
    5. '"s' → logprob: -11.725279808044434
    6. 'p' → logprob: -12.475279808044434
    7. ''r' → logprob: -14.225279808044434
    8. ''S' → logprob: -14.475279808044434
    9. ''' → logprob: -14.600279808044434
    10. 'sc' → logprob: -14.975279808044434

Token 395: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1438305526971817
    2. ':
' → logprob: -2.1438305377960205
    3. '':
' → logprob: -4.7688307762146
    4. '           ' → logprob: -5.5188307762146
    5. '':' → logprob: -6.0188307762146
    6. '       ' → logprob: -6.8938307762146
    7. ''' → logprob: -7.7688307762146
    8. '   ' → logprob: -8.893830299377441
    9. ''):
' → logprob: -9.018830299377441
    10. '):
' → logprob: -10.768830299377441

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015383612480945885
    2. '       ' → logprob: -8.875153541564941
    3. '```' → logprob: -12.750153541564941
    4. '          ' → logprob: -13.000153541564941
    5. '            
' → logprob: -13.375153541564941
    6. '		' → logprob: -13.625153541564941
    7. '   ' → logprob: -13.750153541564941
    8. ' ' → logprob: -13.875153541564941
    9. '         ' → logprob: -14.500153541564941
    10. '
' → logprob: -14.500153541564941

Token 397: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21189983189105988
    2. '#' (adapté à ' #') → logprob: -1.9618998765945435
    3. 'win' → logprob: -3.961899757385254
    4. ' #' → logprob: -4.336899757385254
    5. '       ' → logprob: -4.336899757385254
    6. '   ' → logprob: -5.711899757385254
    7. ' win' → logprob: -6.711899757385254
    8. '
' → logprob: -7.961899757385254
    9. '```' → logprob: -9.586899757385254
    10. '          ' → logprob: -10.086899757385254

Token 398: ' Opp' (ID: 55440)
  Prédit: ' tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tt' → logprob: -0.9152945876121521
    2. 't' → logprob: -1.1652946472167969
    3. '           ' → logprob: -2.415294647216797
    4. ' t' → logprob: -2.540294647216797
    5. 'tt' → logprob: -2.790294647216797
    6. ''' → logprob: -4.415294647216797
    7. 'Opponent' → logprob: -4.415294647216797
    8. '       ' → logprob: -5.290294647216797
    9. ' '' → logprob: -5.290294647216797
    10. ''t' → logprob: -5.415294647216797

Token 399: 'onent' (ID: 130930)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.020200232043862343
    2. '           ' → logprob: -4.395200252532959
    3. 'if' → logprob: -5.145200252532959
    4. ' elif' → logprob: -7.645200252532959
    5. 'ip' → logprob: -8.5201997756958
    6. '       ' → logprob: -8.6451997756958
    7. 'ot' → logprob: -8.7701997756958
    8. 'def' → logprob: -9.1451997756958
    9. 'import' → logprob: -9.2701997756958
    10. 't' → logprob: -9.6451997756958

Token 400: ' throws' (ID: 5114)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06199894845485687
    2. '==' → logprob: -2.8119988441467285
    3. '=='' → logprob: -11.061999320983887
    4. ' =='' → logprob: -11.936999320983887
    5. ' ' → logprob: -12.686999320983887
    6. '=' → logprob: -13.311999320983887
    7. 'elif' → logprob: -13.936999320983887
    8. '==
' → logprob: -14.186999320983887
    9. ' ' → logprob: -14.436999320983887
    10. ' ==
' → logprob: -14.811999320983887

Token 401: ' Sc' (ID: 3380)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.0378393791615963
    2. ''p' → logprob: -3.537839412689209
    3. ' '' → logprob: -5.412839412689209
    4. ''' → logprob: -5.662839412689209
    5. 'r' → logprob: -9.78783893585205
    6. '   ' → logprob: -10.41283893585205
    7. ' ' → logprob: -11.41283893585205
    8. ''re' → logprob: -12.03783893585205
    9. 'rock' → logprob: -12.28783893585205
    10. ''s' → logprob: -12.28783893585205

Token 402: 'issors' (ID: 69357)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8262901902198792
    2. 'elif' → logprob: -0.9512901902198792
    3. '       ' → logprob: -2.5762901306152344
    4. 'issors' → logprob: -3.0762901306152344
    5. '```' → logprob: -4.326290130615234
    6. ''' → logprob: -5.076290130615234
    7. '   ' → logprob: -5.076290130615234
    8. 'r' → logprob: -5.326290130615234
    9. ''s' → logprob: -5.451290130615234
    10. 'p' → logprob: -5.701290130615234

Token 403: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002506111632101238
    2. ':
' → logprob: -9.500250816345215
    3. '       ' → logprob: -10.125250816345215
    4. ',' → logprob: -10.500250816345215
    5. ':' → logprob: -10.500250816345215
    6. 'win' → logprob: -10.750250816345215
    7. '          ' → logprob: -11.000250816345215
    8. '               ' → logprob: -11.375250816345215
    9. '```' → logprob: -11.625250816345215
    10. '
' → logprob: -12.125250816345215

Token 404: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009815827012062073
    2. ' win' → logprob: -5.259815692901611
    3. 'win' → logprob: -5.509815692901611
    4. '
' → logprob: -8.63481616973877
    5. '   ' → logprob: -8.75981616973877
    6. '       ' → logprob: -9.63481616973877
    7. '          ' → logprob: -10.00981616973877
    8. '```' → logprob: -11.00981616973877
    9. '            ' → logprob: -11.25981616973877
    10. ' ' → logprob: -11.88481616973877

Token 405: ' win' (ID: 4449)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8564569354057312
    2. 'win' → logprob: -1.106456995010376
    3. ' win' → logprob: -1.481456995010376
    4. 'append' → logprob: -4.731456756591797
    5. '.append' → logprob: -6.356456756591797
    6. '   ' → logprob: -6.606456756591797
    7. ' append' → logprob: -6.856456756591797
    8. '       ' → logprob: -7.106456756591797
    9. 'continue' → logprob: -7.106456756591797
    10. '          ' → logprob: -7.856456756591797

Token 406: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.37871959805488586
    2. ' with' → logprob: -1.5037195682525635
    3. '           ' → logprob: -2.3787195682525635
    4. '       ' → logprob: -9.128719329833984
    5. '.append' → logprob: -9.503719329833984
    6. '   ' → logprob: -10.753719329833984
    7. 'ith' → logprob: -10.878719329833984
    8. '=' → logprob: -11.503719329833984
    9. 'if' → logprob: -11.878719329833984
    10. ' =' → logprob: -12.128719329833984

Token 407: ' Rock' (ID: 12251)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.0034508646931499243
    2. ''' → logprob: -6.253450870513916
    3. 'r' → logprob: -6.503450870513916
    4. ''p' → logprob: -11.628450393676758
    5. 'rock' → logprob: -12.128450393676758
    6. ''q' → logprob: -12.628450393676758
    7. '   ' → logprob: -13.628450393676758
    8. ''re' → logprob: -13.753450393676758
    9. ''s' → logprob: -14.128450393676758
    10. ''l' → logprob: -14.378450393676758

Token 408: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.922563963802531e-05
    2. 'win' → logprob: -9.875079154968262
    3. '
' → logprob: -11.500079154968262
    4. '       ' → logprob: -12.125079154968262
    5. '```' → logprob: -12.375079154968262
    6. '          ' → logprob: -13.125079154968262
    7. '		' → logprob: -13.375079154968262
    8. '   ' → logprob: -13.625079154968262
    9. ' win' → logprob: -13.875079154968262
    10. '               ' → logprob: -14.250079154968262

Token 409: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.049755782238208e-05
    2. '```' → logprob: -10.37505054473877
    3. 'win' → logprob: -12.00005054473877
    4. '       ' → logprob: -12.25005054473877
    5. '
' → logprob: -12.50005054473877
    6. '   ' → logprob: -13.87505054473877
    7. '            
' → logprob: -14.00005054473877
    8. '          ' → logprob: -14.12505054473877
    9. '		' → logprob: -14.62505054473877
    10. ' win' → logprob: -14.87505054473877

Token 410: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' (adapté à ' win') → logprob: -0.6323098540306091
    2. '           ' → logprob: -0.8823098540306091
    3. ' win' → logprob: -3.007309913635254
    4. '
' → logprob: -6.132309913635254
    5. '   ' → logprob: -6.882309913635254
    6. 'r' → logprob: -6.882309913635254
    7. 'rock' → logprob: -8.757309913635254
    8. '```' → logprob: -8.757309913635254
    9. 'w' → logprob: -8.882309913635254
    10. '       ' → logprob: -8.882309913635254

Token 411: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009136092266999185
    2. '.' → logprob: -7.000913619995117
    3. ' .' → logprob: -13.250913619995117
    4. 'append' → logprob: -14.875913619995117
    5. '   ' → logprob: -17.250913619995117
    6. '.ap' → logprob: -18.500913619995117
    7. '.app' → logprob: -18.500913619995117
    8. '.extend' → logprob: -18.875913619995117
    9. ' append' → logprob: -19.875913619995117
    10. '.add' → logprob: -20.125913619995117

Token 412: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0007127894787117839
    2. '(' → logprob: -7.250712871551514
    3. ''' → logprob: -13.250712394714355
    4. ''s' → logprob: -14.375712394714355
    5. ' ('' → logprob: -15.375712394714355
    6. '("' → logprob: -16.375713348388672
    7. '(
' → logprob: -16.500713348388672
    8. '(('' → logprob: -16.625713348388672
    9. 's' → logprob: -19.000713348388672
    10. '(',' → logprob: -19.250713348388672

Token 413: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.162282367469743e-05
    2. ''r' → logprob: -9.500091552734375
    3. ''' → logprob: -11.000091552734375
    4. 'rock' → logprob: -17.750091552734375
    5. ' r' → logprob: -19.250091552734375
    6. '')' → logprob: -20.875091552734375
    7. '_r' → logprob: -20.875091552734375
    8. '	r' → logprob: -21.125091552734375
    9. ''s' → logprob: -21.500091552734375
    10. '`' → logprob: -21.875091552734375

Token 414: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.048883818089962006
    2. '')' → logprob: -3.0488839149475098
    3. ')
' → logprob: -8.548883438110352
    4. ')' → logprob: -10.048883438110352
    5. '           ' → logprob: -10.298883438110352
    6. '')
' → logprob: -11.048883438110352
    7. '')

' → logprob: -12.923883438110352
    8. ' ')
' → logprob: -13.048883438110352
    9. '       ' → logprob: -13.423883438110352
    10. ''' → logprob: -13.673883438110352

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.15441757265944e-05
    2. '       ' → logprob: -10.500031471252441
    3. '<|end|>' → logprob: -13.500031471252441
    4. '```' → logprob: -13.750031471252441
    5. '   ' → logprob: -14.500031471252441
    6. '
' → logprob: -15.250031471252441
    7. '            
' → logprob: -15.250031471252441
    8. '               ' → logprob: -15.500031471252441
    9. '<|end|>' → logprob: -15.750031471252441
    10. 'elif' → logprob: -17.125032424926758

Token 416: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017768036341294646
    2. 'ans' (adapté à ' ans') → logprob: -7.376776695251465
    3. ' ans' → logprob: -7.751776695251465
    4. '
' → logprob: -8.001776695251465
    5. '       ' → logprob: -9.001776695251465
    6. '   ' → logprob: -9.126776695251465
    7. '            
' → logprob: -9.376776695251465
    8. '```' → logprob: -10.501776695251465
    9. ' 
' → logprob: -11.251776695251465
    10. '(ans' → logprob: -12.001776695251465

Token 417: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3133346438407898
    2. ' +=' → logprob: -1.3133347034454346
    3. '+' → logprob: -9.688334465026855
    4. ']+=' → logprob: -11.938334465026855
    5. '```' → logprob: -14.063334465026855
    6. '+='' → logprob: -14.313334465026855
    7. '.append' → logprob: -14.438334465026855
    8. ' +' → logprob: -14.688334465026855
    9. '+="' → logprob: -14.688334465026855
    10. '   ' → logprob: -14.938334465026855

Token 418: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.7610454708337784e-05
    2. ' R' → logprob: -10.500027656555176
    3. '	R' → logprob: -18.25002670288086
    4. '   ' → logprob: -18.75002670288086
    5. ' ' → logprob: -20.00002670288086
    6. '  ' → logprob: -21.50002670288086
    7. '_R' → logprob: -22.12502670288086
    8. 'Ｒ' → logprob: -22.37502670288086
    9. '       ' → logprob: -22.75002670288086
    10. '`' → logprob: -22.75002670288086

Token 419: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6286106983898208e-05
    2. 'elif' → logprob: -11.375016212463379
    3. '<|end|>' → logprob: -13.125016212463379
    4. ' elif' → logprob: -13.750016212463379
    5. '   ' → logprob: -14.125016212463379
    6. '      ' → logprob: -15.625016212463379
    7. '	' → logprob: -15.875016212463379
    8. 'else' → logprob: -16.625017166137695
    9. '	elif' → logprob: -16.625017166137695
    10. '```' → logprob: -16.625017166137695

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.24179228907451e-05
    2. 'elif' → logprob: -9.750061988830566
    3. ' elif' → logprob: -12.875061988830566
    4. '<|end|>' → logprob: -14.500061988830566
    5. '```' → logprob: -15.000061988830566
    6. '   ' → logprob: -15.125061988830566
    7. '	elif' → logprob: -16.000062942504883
    8. 'else' → logprob: -16.375062942504883
    9. '	' → logprob: -16.625062942504883
    10. '           ' → logprob: -16.875062942504883

Token 421: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11853791773319244
    2. 'elif' → logprob: -2.2435379028320312
    3. ' elif' → logprob: -5.368537902832031
    4. 'else' (adapté à ' else') → logprob: -7.243537902832031
    5. '   ' → logprob: -8.368537902832031
    6. ' else' → logprob: -9.618537902832031
    7. '	elif' → logprob: -11.243537902832031
    8. '	' → logprob: -12.243537902832031
    9. '```' → logprob: -13.618537902832031
    10. ' ' → logprob: -13.743537902832031

Token 422: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.605827271938324
    2. ':' → logprob: -1.1058273315429688
    3. '           ' → logprob: -2.1058273315429688
    4. '       ' → logprob: -6.980827331542969
    5. '   ' → logprob: -8.355827331542969
    6. '{' → logprob: -8.980827331542969
    7. '          ' → logprob: -9.480827331542969
    8. 'if' → logprob: -9.605827331542969
    9. ' :
' → logprob: -9.605827331542969
    10. ' if' → logprob: -9.730827331542969

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032824059017002583
    2. '#' → logprob: -6.50328254699707
    3. ' #' → logprob: -6.62828254699707
    4. '       ' → logprob: -8.87828254699707
    5. 'if' → logprob: -9.25328254699707
    6. '   ' → logprob: -9.37828254699707
    7. ' if' → logprob: -10.12828254699707
    8. '          ' → logprob: -10.50328254699707
    9. ':
' → logprob: -11.75328254699707
    10. ' ' → logprob: -12.12828254699707

Token 424: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13278475403785706
    2. '#' (adapté à ' #') → logprob: -2.132784843444824
    3. ' #' → logprob: -5.382784843444824
    4. '   ' → logprob: -7.132784843444824
    5. '       ' → logprob: -8.382784843444824
    6. '#
' → logprob: -10.007784843444824
    7. '          ' → logprob: -10.257784843444824
    8. '
' → logprob: -10.507784843444824
    9. ' ' → logprob: -10.632784843444824
    10. 'if' → logprob: -11.382784843444824

Token 425: ' Opp' (ID: 55440)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.613098680973053
    2. '#' → logprob: -1.4880986213684082
    3. 'p' → logprob: -1.9880986213684082
    4. 'win' → logprob: -2.863098621368408
    5. ' #' → logprob: -3.988098621368408
    6. 't' → logprob: -5.738098621368408
    7. '   ' → logprob: -5.863098621368408
    8. ' win' → logprob: -5.988098621368408
    9. ' p' → logprob: -6.113098621368408
    10. '       ' → logprob: -6.488098621368408

Token 426: 'onent' (ID: 130930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6226364970207214
    2. 'ponent' → logprob: -1.6226365566253662
    3. 'onent' → logprob: -2.122636556625366
    4. '==' → logprob: -2.372636556625366
    5. 'elif' → logprob: -4.122636318206787
    6. '.append' → logprob: -4.372636318206787
    7. '=='' → logprob: -5.497636318206787
    8. ''' → logprob: -5.747636318206787
    9. '       ' → logprob: -6.122636318206787
    10. '('' → logprob: -6.622636318206787

Token 427: ' throws' (ID: 5114)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2852345407009125
    2. '==' → logprob: -1.4102345705032349
    3. '=='' → logprob: -6.535234451293945
    4. 'throws' → logprob: -6.785234451293945
    5. ' throws' → logprob: -6.785234451293945
    6. 'throw' → logprob: -8.660234451293945
    7. ' =='' → logprob: -9.535234451293945
    8. '=' → logprob: -10.410234451293945
    9. ' throw' → logprob: -10.660234451293945
    10. '==
' → logprob: -11.410234451293945

Token 428: ' Paper' (ID: 23804)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.009005106054246426
    2. 'p' → logprob: -4.759005069732666
    3. ''r' → logprob: -8.634005546569824
    4. ' '' → logprob: -9.134005546569824
    5. ' p' → logprob: -9.884005546569824
    6. ''' → logprob: -10.134005546569824
    7. 'r' → logprob: -12.134005546569824
    8. '   ' → logprob: -12.509005546569824
    9. ' ' → logprob: -13.259005546569824
    10. '`' → logprob: -14.134005546569824

Token 429: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003760535968467593
    2. 'win' → logprob: -5.62876033782959
    3. '```' → logprob: -9.50376033782959
    4. ' win' → logprob: -10.75376033782959
    5. '       ' → logprob: -11.12876033782959
    6. '   ' → logprob: -11.50376033782959
    7. '		' → logprob: -11.62876033782959
    8. '          ' → logprob: -11.62876033782959
    9. '(win' → logprob: -12.75376033782959
    10. '
' → logprob: -12.87876033782959

Token 430: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04639950767159462
    2. ' win' → logprob: -3.9213995933532715
    3. 'win' → logprob: -3.9213995933532715
    4. 's' → logprob: -5.7963995933532715
    5. ' s' → logprob: -7.0463995933532715
    6. '   ' → logprob: -7.4213995933532715
    7. 'w' → logprob: -7.9213995933532715
    8. '       ' → logprob: -8.546399116516113
    9. '            ' → logprob: -9.171399116516113
    10. '          ' → logprob: -9.171399116516113

Token 431: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.30150362849235535
    2. '           ' → logprob: -1.9265036582946777
    3. ' win' → logprob: -2.6765036582946777
    4. 'append' → logprob: -3.1765036582946777
    5. '.append' → logprob: -6.176503658294678
    6. ' append' → logprob: -7.801503658294678
    7. '       ' → logprob: -8.17650318145752
    8. '          ' → logprob: -8.80150318145752
    9. 'wins' → logprob: -8.80150318145752
    10. 'add' → logprob: -8.92650318145752

Token 432: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.06609132885932922
    2. ' with' → logprob: -2.816091299057007
    3. '           ' → logprob: -5.566091537475586
    4. '('' → logprob: -9.566091537475586
    5. '.append' → logprob: -10.066091537475586
    6. ''s' → logprob: -10.691091537475586
    7. '   ' → logprob: -10.816091537475586
    8. '          ' → logprob: -10.941091537475586
    9. 'append' → logprob: -11.191091537475586
    10. '_with' → logprob: -11.191091537475586

Token 433: ' Sc' (ID: 3380)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.012008365243673325
    2. 's' → logprob: -4.512008190155029
    3. '`s' → logprob: -7.012008190155029
    4. '"s' → logprob: -9.762008666992188
    5. ''S' → logprob: -14.637008666992188
    6. '‘s' → logprob: -14.887008666992188
    7. 'sc' → logprob: -15.012008666992188
    8. ' s' → logprob: -15.887008666992188
    9. ''' → logprob: -16.262008666992188
    10. '   ' → logprob: -16.512008666992188

Token 434: 'issors' (ID: 69357)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3177869915962219
    2. 'issors' → logprob: -1.8177869319915771
    3. 'c' → logprob: -2.817786931991577
    4. 'p' → logprob: -4.067787170410156
    5. 's' → logprob: -4.442787170410156
    6. 'i' → logprob: -5.317787170410156
    7. 'rock' → logprob: -5.567787170410156
    8. 'is' → logprob: -6.067787170410156
    9. 'issor' → logprob: -6.067787170410156
    10. ''s' → logprob: -6.192787170410156

Token 435: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009848159970715642
    2. 'win' → logprob: -7.0009846687316895
    3. ' win' → logprob: -10.375985145568848
    4. '		' → logprob: -11.625985145568848
    5. '
' → logprob: -11.875985145568848
    6. '       ' → logprob: -11.875985145568848
    7. '          ' → logprob: -12.125985145568848
    8. '```' → logprob: -12.375985145568848
    9. '   ' → logprob: -13.125985145568848
    10. '	win' → logprob: -13.250985145568848

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026692345272749662
    2. 'win' → logprob: -6.002669334411621
    3. '       ' → logprob: -9.127669334411621
    4. '```' → logprob: -10.627669334411621
    5. '   ' → logprob: -10.752669334411621
    6. ' win' → logprob: -11.377669334411621
    7. '		' → logprob: -11.752669334411621
    8. '          ' → logprob: -12.002669334411621
    9. '               ' → logprob: -12.252669334411621
    10. '
' → logprob: -13.127669334411621

Token 437: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' (adapté à ' win') → logprob: -0.12514372169971466
    2. ' win' → logprob: -2.5001437664031982
    3. '           ' → logprob: -3.5001437664031982
    4. 's' → logprob: -5.500143527984619
    5. '   ' → logprob: -7.375143527984619
    6. ' s' → logprob: -8.000144004821777
    7. '       ' → logprob: -8.875144004821777
    8. '
' → logprob: -10.625144004821777
    9. 'w' → logprob: -10.750144004821777
    10. ' ' → logprob: -10.750144004821777

Token 438: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.2127087504486553e-05
    2. '.' → logprob: -10.750021934509277
    3. 'append' → logprob: -14.875021934509277
    4. ' .' → logprob: -15.250021934509277
    5. '.app' → logprob: -17.625022888183594
    6. '_append' → logprob: -18.500022888183594
    7. '.extend' → logprob: -19.625022888183594
    8. '.ap' → logprob: -19.875022888183594
    9. '.Append' → logprob: -20.125022888183594
    10. 'app' → logprob: -20.375022888183594

Token 439: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0040838588029146194
    2. ''s' → logprob: -5.504083633422852
    3. '(' → logprob: -13.004083633422852
    4. ''' → logprob: -13.879083633422852
    5. ' ('' → logprob: -14.004083633422852
    6. ''S' → logprob: -14.129083633422852
    7. ''p' → logprob: -15.254083633422852
    8. ' '' → logprob: -16.12908363342285
    9. '(s' → logprob: -16.25408363342285
    10. 's' → logprob: -16.25408363342285

Token 440: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804321587085724
    2. ''s' → logprob: -3.288043260574341
    3. '`s' → logprob: -13.538043022155762
    4. ''S' → logprob: -15.413043022155762
    5. ' s' → logprob: -16.163043975830078
    6. '"s' → logprob: -16.913043975830078
    7. ''' → logprob: -17.413043975830078
    8. '   ' → logprob: -18.038043975830078
    9. ' '' → logprob: -18.413043975830078
    10. 'sc' → logprob: -19.413043975830078

Token 441: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.2846424877643585
    2. ')
' → logprob: -1.7846424579620361
    3. '')' → logprob: -2.909642457962036
    4. ')' → logprob: -4.034642696380615
    5. '           ' → logprob: -4.909642696380615
    6. '       ' → logprob: -9.034642219543457
    7. '   ' → logprob: -9.284642219543457
    8. '```' → logprob: -11.284642219543457
    9. '")
' → logprob: -11.409642219543457
    10. ''
' → logprob: -11.784642219543457

Token 442: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001698094274615869
    2. '```' → logprob: -10.12516975402832
    3. '
' → logprob: -10.50016975402832
    4. '<|end|>' → logprob: -10.50016975402832
    5. '       ' → logprob: -10.62516975402832
    6. '   ' → logprob: -11.00016975402832
    7. '          ' → logprob: -11.00016975402832
    8. '<|end|>' → logprob: -12.50016975402832
    9. ')' → logprob: -13.00016975402832
    10. '            
' → logprob: -13.25016975402832

Token 443: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007383593823760748
    2. ' ans' → logprob: -5.757383823394775
    3. '
' → logprob: -6.257383823394775
    4. '          ' → logprob: -7.507383823394775
    5. 'ans' (adapté à ' ans') → logprob: -7.507383823394775
    6. '   ' → logprob: -7.882383823394775
    7. '       ' → logprob: -9.007383346557617
    8. ' +=' → logprob: -9.132383346557617
    9. '            
' → logprob: -9.257383346557617
    10. ' ' → logprob: -9.382383346557617

Token 444: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023253049701452255
    2. ' +=' → logprob: -3.7732529640197754
    3. '+' → logprob: -12.023253440856934
    4. ']+=' → logprob: -13.898253440856934
    5. '+="' → logprob: -16.148252487182617
    6. '.append' → logprob: -16.148252487182617
    7. '+='' → logprob: -16.273252487182617
    8. '   ' → logprob: -16.398252487182617
    9. '+=(' → logprob: -16.648252487182617
    10. '+++' → logprob: -17.398252487182617

Token 445: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.128163257315464e-07
    2. ' S' → logprob: -15.375
    3. '_S' → logprob: -18.125
    4. '	S' → logprob: -18.125
    5. '   ' → logprob: -20.75
    6. '>S' → logprob: -20.75
    7. '.S' → logprob: -20.875
    8. 's' → logprob: -21.0
    9. 'Ｓ' → logprob: -21.0
    10. 'Ss' → logprob: -21.125

Token 446: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06243604049086571
    2. '
' → logprob: -3.437436103820801
    3. '#' → logprob: -4.187436103820801
    4. 'for' → logprob: -5.312436103820801
    5. '    
' → logprob: -5.437436103820801
    6. ' for' → logprob: -5.937436103820801
    7. '\n' → logprob: -8.0624361038208
    8. ' #' → logprob: -8.5624361038208
    9. '        
' → logprob: -9.0624361038208
    10. '```' → logprob: -9.0624361038208

Token 447: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2612794041633606
    2. '   ' → logprob: -1.6362793445587158
    3. ' for' → logprob: -3.761279344558716
    4. '#' → logprob: -4.511279582977295
    5. '
' → logprob: -7.136279582977295
    6. '    
' → logprob: -9.261279106140137
    7. ' #' → logprob: -10.136279106140137
    8. '```' → logprob: -11.011279106140137
    9. 'win' → logprob: -12.261279106140137
    10. 'from' → logprob: -12.386279106140137

Token 448: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04579039290547371
    2. '#' (adapté à ' #') → logprob: -3.170790433883667
    3. 'used' → logprob: -6.420790195465088
    4. '   ' → logprob: -6.920790195465088
    5. 'win' → logprob: -10.545790672302246
    6. ' for' → logprob: -10.670790672302246
    7. 'result' → logprob: -10.795790672302246
    8. 'final' → logprob: -10.920790672302246
    9. 'prev' → logprob: -11.170790672302246
    10. 'res' → logprob: -11.420790672302246

Token 449: ' Second' (ID: 16652)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010525768157094717
    2. '#' → logprob: -7.251052379608154
    3. 'used' → logprob: -8.251052856445312
    4. 'win' → logprob: -10.126052856445312
    5. 'For' → logprob: -11.501052856445312
    6. 'prev' → logprob: -11.501052856445312
    7. 'visited' → logprob: -11.501052856445312
    8. 'seen' → logprob: -13.001052856445312
    9. 'Used' → logprob: -13.501052856445312
    10. ' for' → logprob: -13.876052856445312

Token 450: ' pass' (ID: 1853)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47188037633895874
    2. ' pass' → logprob: -1.9718804359436035
    3. 'for' → logprob: -1.9718804359436035
    4. 'pass' → logprob: -3.0968804359436035
    5. '_pass' → logprob: -3.0968804359436035
    6. ' step' → logprob: -5.9718804359436035
    7. ' ' → logprob: -6.4718804359436035
    8. '_' → logprob: -6.7218804359436035
    9. '
' → logprob: -7.9718804359436035
    10. ' line' → logprob: -8.221879959106445

Token 451: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4782470464706421
    2. ' for' → logprob: -1.603247046470642
    3. 'for' → logprob: -1.728247046470642
    4. ':' → logprob: -7.478247165679932
    5. '
' → logprob: -7.728247165679932
    6. '#' → logprob: -9.103246688842773
    7. '	for' → logprob: -9.478246688842773
    8. ' to' → logprob: -9.978246688842773
    9. '       ' → logprob: -10.978246688842773
    10. 'i' → logprob: -11.978246688842773

Token 452: ' Adjust' (ID: 43076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006036276929080486
    2. ' for' → logprob: -5.131036281585693
    3. '   ' → logprob: -9.381035804748535
    4. 'win' → logprob: -11.881035804748535
    5. 'visited' → logprob: -11.881035804748535
    6. 'i' → logprob: -12.381035804748535
    7. 'prev' → logprob: -12.881035804748535
    8. 'used' → logprob: -14.256035804748535
    9. 'from' → logprob: -14.881035804748535
    10. ' i' → logprob: -15.381035804748535

Token 453: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22883166372776031
    2. ' for' → logprob: -1.6038316488265991
    3. 'win' → logprob: -6.603831768035889
    4. 'ans' → logprob: -7.603831768035889
    5. ' i' → logprob: -7.853831768035889
    6. 'i' → logprob: -7.978831768035889
    7. '   ' → logprob: -8.47883129119873
    8. 'score' → logprob: -8.85383129119873
    9. '_for' → logprob: -8.97883129119873
    10. ' ' → logprob: -9.47883129119873

Token 454: ' not' (ID: 625)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7852751016616821
    2. 'i' → logprob: -1.5352751016616821
    3. ' k' → logprob: -1.9102751016616821
    4. ' i' → logprob: -2.5352749824523926
    5. ' range' → logprob: -3.0352749824523926
    6. 'range' → logprob: -3.4102749824523926
    7. ' repeats' → logprob: -5.535274982452393
    8. ' the' → logprob: -5.785274982452393
    9. ' repeated' → logprob: -6.035274982452393
    10. 'the' → logprob: -6.285274982452393

Token 455: ' being' (ID: 2447)
  Prédit: ' repeating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' repeating' → logprob: -0.38067886233329773
    2. 'using' → logprob: -2.38067889213562
    3. 're' → logprob: -2.63067889213562
    4. 'winning' → logprob: -3.00567889213562
    5. ' using' → logprob: -4.005678653717041
    6. 'win' → logprob: -4.130678653717041
    7. 'allow' → logprob: -4.130678653717041
    8. 'i' → logprob: -4.630678653717041
    9. '(i' → logprob: -4.630678653717041
    10. '(' → logprob: -5.380678653717041

Token 456: ' allowed' (ID: 9279)
  Prédit: 'able'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.06475585699081421
    2. ' able' → logprob: -4.189755916595459
    3. 'the' → logprob: -4.689755916595459
    4. 'allowed' → logprob: -4.939755916595459
    5. 'equal' → logprob: -4.939755916595459
    6. 're' → logprob: -5.189755916595459
    7. 'same' → logprob: -5.189755916595459
    8. 'k' → logprob: -5.689755916595459
    9. 'None' → logprob: -6.189755916595459
    10. 'win' → logprob: -7.064755916595459

Token 457: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5232049226760864
    2. ' to' → logprob: -0.8982049226760864
    3. '   ' → logprob: -9.898204803466797
    4. 'def' → logprob: -11.523204803466797
    5. '
' → logprob: -12.523204803466797
    6. ' ' → logprob: -12.898204803466797
    7. 'win' → logprob: -12.898204803466797
    8. '#' → logprob: -13.148204803466797
    9. 'if' → logprob: -13.398204803466797
    10. ',' → logprob: -13.398204803466797

Token 458: ' make' (ID: 1520)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.3683038055896759
    2. 'use' → logprob: -1.3683037757873535
    3. 'choose' → logprob: -3.1183037757873535
    4. 'play' → logprob: -5.1183037757873535
    5. 'reuse' → logprob: -6.8683037757873535
    6. ' repeat' → logprob: -7.1183037757873535
    7. 'have' → logprob: -7.9933037757873535
    8. ' use' → logprob: -8.243304252624512
    9. 'win' → logprob: -8.368304252624512
    10. 'pick' → logprob: -8.743304252624512

Token 459: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.14320988953113556
    2. ' the' → logprob: -2.018209934234619
    3. 'win' → logprob: -8.768209457397461
    4. 'same' → logprob: -8.893209457397461
    5. 'a' → logprob: -9.518209457397461
    6. '   ' → logprob: -10.268209457397461
    7. ' ' → logprob: -10.768209457397461
    8. ' a' → logprob: -10.768209457397461
    9. 'moves' → logprob: -11.018209457397461
    10. ' same' → logprob: -11.018209457397461

Token 460: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.20145796239376068
    2. ' same' → logprob: -1.7014579772949219
    3. '```' → logprob: -10.951457977294922
    4. ' ' → logprob: -11.701457977294922
    5. '
' → logprob: -12.076457977294922
    6. '_same' → logprob: -12.951457977294922
    7. 'sam' → logprob: -13.201457977294922
    8. 'previous' → logprob: -13.701457977294922
    9. '   ' → logprob: -14.076457977294922
    10. '  ' → logprob: -14.326457977294922

Token 461: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.05562835931777954
    2. ' move' → logprob: -2.9306282997131348
    3. ' ' → logprob: -8.305628776550293
    4. '   ' → logprob: -8.680628776550293
    5. '_move' → logprob: -8.680628776550293
    6. 'choice' → logprob: -9.805628776550293
    7. '    
' → logprob: -10.305628776550293
    8. '
' → logprob: -10.930628776550293
    9. '	move' → logprob: -11.430628776550293
    10. '(move' → logprob: -11.805628776550293

Token 462: ' within' (ID: 3518)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8809007406234741
    2. 'for' → logprob: -1.2559007406234741
    3. '   ' → logprob: -1.8809007406234741
    4. 'in' → logprob: -2.8809008598327637
    5. 'k' → logprob: -3.1309008598327637
    6. 'at' → logprob: -3.7559008598327637
    7. 'within' → logprob: -5.505900859832764
    8. ' k' → logprob: -5.755900859832764
    9. 'exact' → logprob: -5.880900859832764
    10. ' if' → logprob: -5.880900859832764

Token 463: ' each' (ID: 2454)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01257558073848486
    2. ' k' → logprob: -4.387575626373291
    3. 'the' → logprob: -10.637575149536133
    4. '   ' → logprob: -10.762575149536133
    5. '```' → logprob: -11.262575149536133
    6. ' the' → logprob: -13.137575149536133
    7. '`' → logprob: -13.262575149536133
    8. '_k' → logprob: -14.137575149536133
    9. '*k' → logprob: -14.262575149536133
    10. '	k' → logprob: -14.512575149536133

Token 464: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04562333598732948
    2. 'group' → logprob: -3.545623302459717
    3. ' k' → logprob: -4.670623302459717
    4. ' group' → logprob: -5.170623302459717
    5. '```' → logprob: -8.295623779296875
    6. '   ' → logprob: -9.170623779296875
    7. 'block' → logprob: -9.170623779296875
    8. '
' → logprob: -9.670623779296875
    9. '`' → logprob: -10.545623779296875
    10. '_k' → logprob: -10.670623779296875

Token 465: '-group' (ID: 9496)
  Prédit: ' rounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rounds' → logprob: -0.3741385340690613
    2. 'round' → logprob: -1.249138593673706
    3. 'interval' → logprob: -5.249138355255127
    4. 'group' → logprob: -5.874138355255127
    5. ' round' → logprob: -5.999138355255127
    6. 'groups' → logprob: -6.249138355255127
    7. '```' → logprob: -6.374138355255127
    8. 'blocks' → logprob: -6.749138355255127
    9. ' group' → logprob: -6.749138355255127
    10. '_round' → logprob: -6.999138355255127

Token 466: ' consecut' (ID: 32704)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8293702602386475
    2. 'for' → logprob: -0.8293702602386475
    3. ' for' → logprob: -2.0793702602386475
    4. '
' → logprob: -6.079370498657227
    5. '    
' → logprob: -10.329370498657227
    6. '\n' → logprob: -11.954370498657227
    7. '```' → logprob: -11.954370498657227
    8. '	for' → logprob: -12.204370498657227
    9. ':' → logprob: -14.204370498657227
    10. '   
' → logprob: -15.079370498657227

Token 467: 'ively' (ID: 5861)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.0012499965960159898
    2. 'utive' → logprob: -6.87624979019165
    3. '   ' → logprob: -9.251250267028809
    4. 'itive' → logprob: -9.626250267028809
    5. 'if' → logprob: -10.626250267028809
    6. 'for' → logprob: -11.876250267028809
    7. 'ively' → logprob: -11.876250267028809
    8. '       ' → logprob: -12.251250267028809
    9. 'u' → logprob: -13.001250267028809
    10. 'ent' → logprob: -13.251250267028809

Token 468: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3413689136505127
    2. ' for' → logprob: -1.3413689136505127
    3. '   ' → logprob: -3.5913689136505127
    4. '
' → logprob: -8.841368675231934
    5. '\n' → logprob: -12.341368675231934
    6. '```' → logprob: -12.841368675231934
    7. '    
' → logprob: -13.341368675231934
    8. '	for' → logprob: -14.466368675231934
    9. '_for' → logprob: -15.591368675231934
    10. '``' → logprob: -15.591368675231934

Token 469: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29462671279907227
    2. ' for' → logprob: -1.7946267127990723
    3. '   ' → logprob: -2.4196267127990723
    4. '
' → logprob: -10.419626235961914
    5. '    
' → logprob: -12.669626235961914
    6. '```' → logprob: -12.794626235961914
    7. 'win' → logprob: -13.044626235961914
    8. '\n' → logprob: -13.169626235961914
    9. 'i' → logprob: -13.419626235961914
    10. '	for' → logprob: -13.544626235961914

Token 470: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003222342347726226
    2. '   ' → logprob: -8.500322341918945
    3. ' for' → logprob: -9.250322341918945
    4. 'used' → logprob: -11.375322341918945
    5. 'win' → logprob: -11.750322341918945
    6. 'visited' → logprob: -13.875322341918945
    7. 'seen' → logprob: -14.625322341918945
    8. 'i' → logprob: -14.875322341918945
    9. 'from' → logprob: -15.000322341918945
    10. 'prev' → logprob: -15.000322341918945

Token 471: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12693744897842407
    2. ' i' → logprob: -2.1269373893737793
    3. '_i' → logprob: -12.501937866210938
    4. 'idx' → logprob: -13.001937866210938
    5. ' ' → logprob: -13.876937866210938
    6. '_' → logprob: -13.876937866210938
    7. ' idx' → logprob: -14.751937866210938
    8. 'index' → logprob: -15.001937866210938
    9. '   ' → logprob: -15.251937866210938
    10. '	i' → logprob: -15.251937866210938

Token 472: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016417549923062325
    2. 'in' → logprob: -4.141417503356934
    3. ' ' → logprob: -8.016417503356934
    4. '	in' → logprob: -10.516417503356934
    5. ' i' → logprob: -11.891417503356934
    6. '  ' → logprob: -12.141417503356934
    7. '   ' → logprob: -13.016417503356934
    8. ',' → logprob: -13.641417503356934
    9. '<|end|>' → logprob: -13.641417503356934
    10. 'In' → logprob: -13.891417503356934

Token 473: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615042082965374
    2. ' range' → logprob: -4.758615016937256
    3. '(range' → logprob: -14.758615493774414
    4. '   ' → logprob: -17.633615493774414
    5. 'ange' → logprob: -17.633615493774414
    6. ' ' → logprob: -18.008615493774414
    7. '	range' → logprob: -18.133615493774414
    8. 'k' → logprob: -18.258615493774414
    9. ' xrange' → logprob: -19.883615493774414
    10. '  ' → logprob: -19.883615493774414

Token 474: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0011411691084504128
    2. '(' → logprob: -7.00114107131958
    3. '(i' → logprob: -8.626141548156738
    4. '(n' → logprob: -10.126141548156738
    5. 'k' → logprob: -12.251141548156738
    6. ' (' → logprob: -12.626141548156738
    7. ' k' → logprob: -13.501141548156738
    8. '   ' → logprob: -15.376141548156738
    9. '(len' → logprob: -15.626141548156738
    10. '(
' → logprob: -16.001140594482422

Token 475: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004985823179595172
    2. ',n' → logprob: -7.6254987716674805
    3. ' ,' → logprob: -12.00049877166748
    4. ',len' → logprob: -12.87549877166748
    5. '):' → logprob: -13.87549877166748
    6. ',k' → logprob: -14.75049877166748
    7. 'n' → logprob: -15.37549877166748
    8. ',
' → logprob: -16.500497817993164
    9. '   ' → logprob: -16.750497817993164
    10. ',N' → logprob: -17.375497817993164

Token 476: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11435992270708084
    2. '       ' → logprob: -2.2393598556518555
    3. ':' → logprob: -6.9893598556518555
    4. ' for' → logprob: -7.8643598556518555
    5. ' n' → logprob: -10.239359855651855
    6. '    ' → logprob: -10.489359855651855
    7. ' ' → logprob: -10.989359855651855
    8. '<|end|>' → logprob: -10.989359855651855
    9. '```' → logprob: -11.364359855651855
    10. '	   ' → logprob: -11.489359855651855

Token 477: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.577968955039978
    2. 'j' → logprob: -0.827968955039978
    3. '   ' → logprob: -6.452969074249268
    4. 'idx' → logprob: -8.20296859741211
    5. 'prev' → logprob: -9.70296859741211
    6. ' for' → logprob: -10.07796859741211
    7. 'last' → logprob: -11.32796859741211
    8. 'used' → logprob: -11.45296859741211
    9. 'index' → logprob: -11.57796859741211
    10. 'current' → logprob: -11.70296859741211

Token 478: ' Extract' (ID: 39239)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6339008808135986
    2. 'for' → logprob: -0.7589008808135986
    3. 'prev' → logprob: -7.3839006423950195
    4. 'idx' → logprob: -8.13390064239502
    5. '   ' → logprob: -8.63390064239502
    6. 'last' → logprob: -10.38390064239502
    7. 'current' → logprob: -10.38390064239502
    8. 'group' → logprob: -10.50890064239502
    9. ' for' → logprob: -10.75890064239502
    10. 'while' → logprob: -11.00890064239502

Token 479: ' every' (ID: 1753)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0274845361709595
    2. 'indices' → logprob: -1.9024845361709595
    3. 'for' → logprob: -2.15248441696167
    4. '   ' → logprob: -2.27748441696167
    5. 'idx' → logprob: -2.77748441696167
    6. 'group' → logprob: -2.77748441696167
    7. 'sub' → logprob: -3.52748441696167
    8. 'i' → logprob: -3.52748441696167
    9. 'moves' → logprob: -4.02748441696167
    10. 'seq' → logprob: -4.15248441696167

Token 480: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0844140276312828
    2. 'i' → logprob: -2.709414005279541
    3. 'j' → logprob: -4.709414005279541
    4. ' k' → logprob: -5.459414005279541
    5. ' i' → logprob: -7.584414005279541
    6. ' j' → logprob: -8.5844144821167
    7. '   ' → logprob: -9.7094144821167
    8. 'index' → logprob: -9.7094144821167
    9. '```' → logprob: -10.0844144821167
    10. 'n' → logprob: -10.4594144821167

Token 481: '-th' (ID: 14928)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.15517657995224
    2. 'index' → logprob: -2.9051766395568848
    3. 'i' → logprob: -3.5301766395568848
    4. 'token' → logprob: -4.530176639556885
    5. 'for' → logprob: -4.780176639556885
    6. 'indices' → logprob: -5.280176639556885
    7. '-th' → logprob: -5.280176639556885
    8. '   ' → logprob: -5.280176639556885
    9. '+i' → logprob: -5.780176639556885
    10. '```' → logprob: -5.780176639556885

Token 482: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5976169109344482
    2. 'element' → logprob: -1.2226169109344482
    3. ' move' → logprob: -2.4726169109344482
    4. 'index' → logprob: -3.8476169109344482
    5. ' element' → logprob: -3.8476169109344482
    6. 'character' → logprob: -4.847617149353027
    7. 'token' → logprob: -5.347617149353027
    8. ' ' → logprob: -5.347617149353027
    9. ' character' → logprob: -5.847617149353027
    10. 'char' → logprob: -6.472617149353027

Token 483: ' starting' (ID: 8601)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2670652866363525
    2. ' from' → logprob: -1.5170652866363525
    3. 'from' → logprob: -1.5170652866363525
    4. ' for' → logprob: -1.8920652866363525
    5. '       ' → logprob: -2.7670652866363525
    6. '   ' → logprob: -3.7670652866363525
    7. 'for' → logprob: -3.7670652866363525
    8. ' in' → logprob: -5.017065048217773
    9. ' ,' → logprob: -6.267065048217773
    10. ':' → logprob: -6.392065048217773

Token 484: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04516153037548065
    2. 'at' → logprob: -3.545161485671997
    3. ' from' → logprob: -4.545161724090576
    4. ' at' → logprob: -5.420161724090576
    5. 'i' → logprob: -9.420161247253418
    6. '```' → logprob: -9.670161247253418
    7. 'with' → logprob: -10.045161247253418
    8. '   ' → logprob: -10.295161247253418
    9. '[i' → logprob: -11.295161247253418
    10. ' i' → logprob: -12.545161247253418

Token 485: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019291093340143561
    2. ' i' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.75192928314209
    4. '```' → logprob: -16.126928329467773
    5. 'the' → logprob: -16.376928329467773
    6. ' the' → logprob: -16.501928329467773
    7. '`' → logprob: -16.751928329467773
    8. 'index' → logprob: -16.876928329467773
    9. '=i' → logprob: -17.001928329467773
    10. '	i' → logprob: -17.501928329467773

Token 486: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038109999150037766
    2. ' i' → logprob: -3.2881100177764893
    3. '   ' → logprob: -9.91310977935791
    4. '```' → logprob: -11.53810977935791
    5. '(i' → logprob: -12.41310977935791
    6. '=i' → logprob: -13.16310977935791
    7. '`' → logprob: -14.03810977935791
    8. '	i' → logprob: -14.03810977935791
    9. '
' → logprob: -14.41310977935791
    10. '_i' → logprob: -15.53810977935791

Token 487: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2114529013633728
    2. ' for' → logprob: -2.4614529609680176
    3. ',' → logprob: -2.8364529609680176
    4. ':' → logprob: -4.086452960968018
    5. 'for' → logprob: -4.836452960968018
    6. '   ' → logprob: -4.961452960968018
    7. ' in' → logprob: -5.336452960968018
    8. ':
' → logprob: -5.836452960968018
    9. ' to' → logprob: -6.586452960968018
    10. '           ' → logprob: -7.461452960968018

Token 488: ' this' (ID: 495)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.0948385000228882
    2. '       ' → logprob: -1.3448385000228882
    3. ' moves' → logprob: -2.0948386192321777
    4. 'j' → logprob: -2.3448386192321777
    5. 'indices' → logprob: -2.9698386192321777
    6. 'for' → logprob: -3.9698386192321777
    7. ' for' → logprob: -4.219838619232178
    8. ' group' → logprob: -4.219838619232178
    9. ' indices' → logprob: -4.344838619232178
    10. 'idx' → logprob: -4.344838619232178

Token 489: ' forms' (ID: 11526)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2562216520309448
    2. '   ' → logprob: -2.1312217712402344
    3. ' for' → logprob: -2.8812217712402344
    4. 'i' → logprob: -3.0062217712402344
    5. ' is' → logprob: -3.0062217712402344
    6. 'is' → logprob: -3.1312217712402344
    7. 'will' → logprob: -3.2562217712402344
    8. ' will' → logprob: -3.5062217712402344
    9. '```' → logprob: -3.6312217712402344
    10. 'moves' → logprob: -3.8812217712402344

Token 490: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5891263484954834
    2. ' a' → logprob: -2.0891263484954834
    3. '[i' → logprob: -2.0891263484954834
    4. 'the' → logprob: -2.5891263484954834
    5. 'i' → logprob: -2.8391263484954834
    6. ' the' → logprob: -3.0891263484954834
    7. '   ' → logprob: -5.8391265869140625
    8. 'k' → logprob: -5.9641265869140625
    9. ' i' → logprob: -6.0891265869140625
    10. 'range' → logprob: -6.2141265869140625

Token 491: ' "' (ID: 392)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.2511415183544159
    2. 'sub' → logprob: -2.0011415481567383
    3. 'range' → logprob: -3.3761415481567383
    4. '[i' → logprob: -4.751141548156738
    5. 'i' → logprob: -4.876141548156738
    6. 'sequence' → logprob: -5.001141548156738
    7. 'subset' → logprob: -5.001141548156738
    8. 'window' → logprob: -5.251141548156738
    9. 'list' → logprob: -5.751141548156738
    10. 'k' → logprob: -5.751141548156738

Token 492: 'group' (ID: 4323)
  Prédit: 'group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.27942588925361633
    2. 'sub' → logprob: -1.779425859451294
    3. 'window' → logprob: -4.279426097869873
    4. 'sequence' → logprob: -4.529426097869873
    5. 'chunk' → logprob: -4.654426097869873
    6. 'segment' → logprob: -4.654426097869873
    7. 'block' → logprob: -4.654426097869873
    8. 'i' → logprob: -5.279426097869873
    9. 'subset' → logprob: -5.404426097869873
    10. 'substring' → logprob: -5.529426097869873

Token 493: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4222184419631958
    2. '"
' → logprob: -1.2972184419631958
    3. '       ' → logprob: -3.0472183227539062
    4. '   ' → logprob: -4.297218322753906
    5. 'for' → logprob: -6.172218322753906
    6. ',' → logprob: -6.172218322753906
    7. '":
' → logprob: -7.047218322753906
    8. '[' → logprob: -7.422218322753906
    9. ' for' → logprob: -7.422218322753906
    10. '",' → logprob: -7.797218322753906

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018302347511053085
    2. ' for' → logprob: -4.1433024406433105
    3. 'for' → logprob: -6.2683024406433105
    4. '   ' → logprob: -8.768301963806152
    5. ',' → logprob: -10.018301963806152
    6. '```' → logprob: -10.393301963806152
    7. ' j' → logprob: -10.643301963806152
    8. 'j' → logprob: -10.768301963806152
    9. '           ' → logprob: -11.268301963806152
    10. 'moves' → logprob: -11.518301963806152

Token 495: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5500830411911011
    2. 'for' → logprob: -1.300083041191101
    3. 'group' → logprob: -2.0500831604003906
    4. 'moves' → logprob: -4.675083160400391
    5. 'idx' → logprob: -5.425083160400391
    6. 'indices' → logprob: -5.550083160400391
    7. '   ' → logprob: -6.175083160400391
    8. 'grp' → logprob: -7.050083160400391
    9. 'seq' → logprob: -7.925083160400391
    10. 'positions' → logprob: -8.67508316040039

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14741070568561554
    2. ' =' → logprob: -2.0224106311798096
    3. '=[]' → logprob: -6.022410869598389
    4. 'moves' → logprob: -7.272410869598389
    5. 'ist' → logprob: -7.897410869598389
    6. '_moves' → logprob: -8.39741039276123
    7. '   ' → logprob: -8.52241039276123
    8. '=[]
' → logprob: -8.64741039276123
    9. 'group' → logprob: -8.89741039276123
    10. 'ength' → logprob: -9.64741039276123

Token 497: ' win' (ID: 4449)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8048318028450012
    2. '[n' → logprob: -0.8048318028450012
    3. '[t' → logprob: -2.9298317432403564
    4. '[' → logprob: -3.3048317432403564
    5. '[]
' → logprob: -5.4298319816589355
    6. '[len' → logprob: -5.5548319816589355
    7. '[]' → logprob: -5.8048319816589355
    8. ' [' → logprob: -6.6798319816589355
    9. 'win' → logprob: -7.0548319816589355
    10. '[m' → logprob: -7.9298319816589355

Token 498: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -11.875008583068848
    3. '[n' → logprob: -14.625008583068848
    4. 'i' → logprob: -15.000008583068848
    5. '
' → logprob: -15.125008583068848
    6. '   ' → logprob: -15.375008583068848
    7. '[
' → logprob: -16.000009536743164
    8. ' [' → logprob: -16.250009536743164
    9. '[l' → logprob: -16.500009536743164
    10. '[k' → logprob: -16.750009536743164

Token 499: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.0001294030516874045
    2. ':n' → logprob: -9.250129699707031
    3. ':' → logprob: -10.500129699707031
    4. ':::' → logprob: -12.750129699707031
    5. ']' → logprob: -14.625129699707031
    6. ';n' → logprob: -14.750129699707031
    7. '::
' → logprob: -15.125129699707031
    8. '::-' → logprob: -15.250129699707031
    9. ' ::' → logprob: -15.375129699707031
    10. '```' → logprob: -15.375129699707031

Token 500: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5048530030981055e-06
    2. ' k' → logprob: -13.500001907348633
    3. '{k' → logprob: -21.000001907348633
    4. '+k' → logprob: -21.375001907348633
    5. '-k' → logprob: -22.000001907348633
    6. '	k' → logprob: -22.250001907348633
    7. '   ' → logprob: -22.625001907348633
    8. ',k' → logprob: -22.875001907348633
    9. '_k' → logprob: -23.125001907348633
    10. ']' → logprob: -23.125001907348633

Token 501: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1447376012802124
    2. ']
' → logprob: -2.019737720489502
    3. ']

' → logprob: -6.644737720489502
    4. ']
' → logprob: -7.269737720489502
    5. '   ' → logprob: -10.269737243652344
    6. ']

' → logprob: -11.269737243652344
    7. ' ]' → logprob: -12.019737243652344
    8. '       ' → logprob: -12.144737243652344
    9. ' ]
' → logprob: -14.019737243652344
    10. '].' → logprob: -14.269737243652344

Token 502: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22753840684890747
    2. 'for' → logprob: -2.2275383472442627
    3. ' for' → logprob: -2.3525383472442627
    4. '   ' → logprob: -8.102538108825684
    5. '
' → logprob: -9.477538108825684
    6. '#' → logprob: -9.602538108825684
    7. '```' → logprob: -10.102538108825684
    8. '        
' → logprob: -10.602538108825684
    9. 'prev' → logprob: -11.102538108825684
    10. '           ' → logprob: -11.352538108825684

Token 503: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013179058209061623
    2. 'prev' → logprob: -5.388178825378418
    3. 'last' → logprob: -5.888178825378418
    4. 'm' → logprob: -6.013178825378418
    5. 'used' → logprob: -6.138178825378418
    6. 'l' → logprob: -8.013178825378418
    7. 'length' → logprob: -8.888178825378418
    8. 'dp' → logprob: -9.388178825378418
    9. '#' (adapté à ' #') → logprob: -9.763178825378418
    10. 'score' → logprob: -9.888178825378418

Token 504: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004900704603642225
    2. 'prev' → logprob: -5.629900932312012
    3. 'last' → logprob: -7.129900932312012
    4. 'm' → logprob: -9.254900932312012
    5. 'score' → logprob: -9.629900932312012
    6. '#' → logprob: -9.754900932312012
    7. 'pre' → logprob: -9.754900932312012
    8. 'l' → logprob: -10.254900932312012
    9. 'previous' → logprob: -10.254900932312012
    10. 'used' → logprob: -10.379900932312012

Token 505: ' each' (ID: 2454)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001919479575008154
    2. 'idx' → logprob: -6.501919269561768
    3. ' j' → logprob: -7.876919269561768
    4. '_j' → logprob: -10.626919746398926
    5. ' idx' → logprob: -11.751919746398926
    6. 'index' → logprob: -13.001919746398926
    7. 'i' → logprob: -13.251919746398926
    8. '```' → logprob: -14.501919746398926
    9. '_idx' → logprob: -14.751919746398926
    10. 'pos' → logprob: -16.00191879272461

Token 506: ' group' (ID: 3566)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1028168648481369
    2. ' j' → logprob: -2.3528168201446533
    3. 'idx' → logprob: -6.227817058563232
    4. ' idx' → logprob: -8.102816581726074
    5. 'i' → logprob: -8.602816581726074
    6. '_j' → logprob: -9.727816581726074
    7. ' in' → logprob: -10.352816581726074
    8. ' i' → logprob: -10.852816581726074
    9. 'index' → logprob: -10.977816581726074
    10. '   ' → logprob: -12.102816581726074

Token 507: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.017419695854187
    2. ',' → logprob: -1.392419695854187
    3. ' j' → logprob: -1.517419695854187
    4. 'j' → logprob: -2.3924198150634766
    5. ' for' → logprob: -3.2674198150634766
    6. '       ' → logprob: -4.267419815063477
    7. 'for' → logprob: -5.142419815063477
    8. 'idx' → logprob: -5.392419815063477
    9. '_j' → logprob: -5.892419815063477
    10. '   ' → logprob: -6.017419815063477

Token 508: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011022298131138086
    2. 'prev' → logprob: -7.501102447509766
    3. '       ' → logprob: -8.001102447509766
    4. ' for' → logprob: -8.626102447509766
    5. 'last' → logprob: -11.251102447509766
    6. 'j' → logprob: -12.126102447509766
    7. '   ' → logprob: -12.501102447509766
    8. 'previous' → logprob: -12.501102447509766
    9. 'm' → logprob: -12.626102447509766
    10. 'length' → logprob: -13.376102447509766

Token 509: ' for' (ID: 395)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.48069918155670166
    2. ' j' → logprob: -0.9806991815567017
    3. ' for' → logprob: -5.980699062347412
    4. 'for' → logprob: -6.230699062347412
    5. '   ' → logprob: -7.105699062347412
    6. ' if' → logprob: -7.105699062347412
    7. 'if' → logprob: -8.10569953918457
    8. '_j' → logprob: -10.35569953918457
    9. 'idx' → logprob: -10.48069953918457
    10. 'len' → logprob: -10.60569953918457

Token 510: ' consecutive' (ID: 40840)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05618184804916382
    2. ' j' → logprob: -2.9311819076538086
    3. 'idx' → logprob: -6.931181907653809
    4. 'index' → logprob: -9.181181907653809
    5. ' idx' → logprob: -9.681181907653809
    6. 'len' → logprob: -10.181181907653809
    7. 'range' → logprob: -10.431181907653809
    8. ' ' → logprob: -11.181181907653809
    9. ' consecutive' → logprob: -11.306181907653809
    10. '```' → logprob: -11.431181907653809

Token 511: ' identical' (ID: 32820)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.708710789680481
    2. 'duplicates' → logprob: -1.333710789680481
    3. ' moves' → logprob: -3.0837106704711914
    4. 'ident' → logprob: -3.4587106704711914
    5. 'indices' → logprob: -3.5837106704711914
    6. 'equal' → logprob: -3.5837106704711914
    7. ' duplicates' → logprob: -3.7087106704711914
    8. 'elements' → logprob: -4.333710670471191
    9. 'same' → logprob: -4.458710670471191
    10. 're' → logprob: -4.458710670471191

Token 512: ' wins' (ID: 25327)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.14737358689308167
    2. ' moves' → logprob: -2.022373676300049
    3. 'tokens' → logprob: -6.147373676300049
    4. 'j' → logprob: -7.147373676300049
    5. '_moves' → logprob: -8.39737319946289
    6. 'move' → logprob: -8.52237319946289
    7. 'if' → logprob: -8.77237319946289
    8. '   ' → logprob: -8.89737319946289
    9. ' move' → logprob: -9.02237319946289
    10. ' tokens' → logprob: -9.02237319946289

Token 513: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047977957874536514
    2. ' for' → logprob: -3.297977924346924
    3. ' in' → logprob: -5.547977924346924
    4. 'for' → logprob: -6.047977924346924
    5. '   ' → logprob: -7.172977924346924
    6. ',' → logprob: -7.172977924346924
    7. ' and' → logprob: -7.297977924346924
    8. '           ' → logprob: -7.422977924346924
    9. ' that' → logprob: -7.922977924346924
    10. ' with' → logprob: -9.047978401184082

Token 514: ' null' (ID: 1256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20731300115585327
    2. 'replace' → logprob: -2.332313060760498
    3. '       ' → logprob: -2.957313060760498
    4. ' for' → logprob: -4.332313060760498
    5. '           ' → logprob: -4.957313060760498
    6. '   ' → logprob: -5.582313060760498
    7. 'correct' → logprob: -6.082313060760498
    8. 'j' → logprob: -6.207313060760498
    9. 'fix' → logprob: -6.457313060760498
    10. 'adjust' → logprob: -6.832313060760498

Token 515: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0003932576219085604
    2. 'if' → logprob: -8.25039291381836
    3. 'for' → logprob: -10.00039291381836
    4. '   ' → logprob: -10.62539291381836
    5. 'out' → logprob: -10.62539291381836
    6. 'ified' → logprob: -11.50039291381836
    7. ' out' → logprob: -12.00039291381836
    8. '       ' → logprob: -12.37539291381836
    9. '#' → logprob: -13.00039291381836
    10. 'ification' → logprob: -13.25039291381836

Token 516: ' (' (ID: 350)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.47804906964302063
    2. 'scores' → logprob: -1.6030490398406982
    3. 'the' → logprob: -2.6030490398406982
    4. '           ' → logprob: -3.2280490398406982
    5. ' the' → logprob: -3.9780490398406982
    6. '       ' → logprob: -4.478049278259277
    7. ' scores' → logprob: -4.478049278259277
    8. 'their' → logprob: -4.978049278259277
    9. ' score' → logprob: -5.353049278259277
    10. 'points' → logprob: -5.478049278259277

Token 517: 'subtract' (ID: 129471)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.6719381809234619
    2. 'ans' → logprob: -1.546938180923462
    3. '           ' → logprob: -2.296938180923462
    4. 'the' → logprob: -2.796938180923462
    5. 'their' → logprob: -3.171938180923462
    6. 'scores' → logprob: -3.796938180923462
    7. ' their' → logprob: -4.421937942504883
    8. ' the' → logprob: -4.546937942504883
    9. '       ' → logprob: -4.796937942504883
    10. ')' → logprob: -4.796937942504883

Token 518: ')' (ID: 8)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -1.4736275672912598
    2. ' the' → logprob: -1.5986275672912598
    3. ' scores' → logprob: -1.8486275672912598
    4. 'score' → logprob: -1.8486275672912598
    5. ' their' → logprob: -2.5986275672912598
    6. '           ' → logprob: -2.9736275672912598
    7. ' score' → logprob: -3.4736275672912598
    8. ')' → logprob: -3.7236275672912598
    9. 'the' → logprob: -3.8486275672912598
    10. 'ans' → logprob: -4.09862756729126

Token 519: ' one' (ID: 1001)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9550020098686218
    2. 'ans' → logprob: -1.2050020694732666
    3. 'the' → logprob: -2.3300020694732666
    4. 'score' → logprob: -2.9550020694732666
    5. ' ans' → logprob: -3.2050020694732666
    6. 'scores' → logprob: -3.2050020694732666
    7. ' scores' → logprob: -3.5800020694732666
    8. '           ' → logprob: -3.7050020694732666
    9. '       ' → logprob: -5.3300018310546875
    10. 'l' → logprob: -5.3300018310546875

Token 520: ' occurrence' (ID: 55807)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.4911794066429138
    2. ' of' → logprob: -2.4911794662475586
    3. '           ' → logprob: -2.6161794662475586
    4. ' if' → logprob: -3.1161794662475586
    5. ' score' → logprob: -3.4911794662475586
    6. 'token' → logprob: -3.4911794662475586
    7. 'if' → logprob: -3.7411794662475586
    8. '_score' → logprob: -3.8661794662475586
    9. 'of' → logprob: -3.9911794662475586
    10. 's' → logprob: -4.616179466247559

Token 521: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04235105961561203
    2. '           ' → logprob: -3.667351007461548
    3. ' for' → logprob: -5.042351245880127
    4. ' of' → logprob: -5.542351245880127
    5. 'for' → logprob: -5.917351245880127
    6. ' if' → logprob: -7.042351245880127
    7. 'of' → logprob: -7.042351245880127
    8. '               ' → logprob: -8.292350769042969
    9. ',' → logprob: -8.792350769042969
    10. 'if' → logprob: -9.167350769042969

Token 522: ' required' (ID: 3759)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.166881799697876
    2. 'needed' → logprob: -1.291881799697876
    3. '0' → logprob: -1.666881799697876
    4. 'ans' → logprob: -2.791881799697876
    5. 'necessary' → logprob: -3.416881799697876
    6. '   ' → logprob: -3.666881799697876
    7. ' needed' → logprob: -4.041881561279297
    8. 'win' → logprob: -4.291881561279297
    9. 'they' → logprob: -4.916881561279297
    10. ' score' → logprob: -4.916881561279297

Token 523: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014420046471059322
    2. ' for' → logprob: -4.514420032501221
    3. 'for' → logprob: -5.889420032501221
    4. '           ' → logprob: -8.514420509338379
    5. ',' → logprob: -9.014420509338379
    6. ' to' → logprob: -9.264420509338379
    7. ' in' → logprob: -10.139420509338379
    8. '   ' → logprob: -10.889420509338379
    9. ' of' → logprob: -10.889420509338379
    10. ' and' → logprob: -11.514420509338379

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.138441237155348e-05
    2. 'for' → logprob: -9.875091552734375
    3. ' for' → logprob: -10.250091552734375
    4. '           ' → logprob: -13.250091552734375
    5. '   ' → logprob: -13.625091552734375
    6. '	' → logprob: -14.500091552734375
    7. '```' → logprob: -15.500091552734375
    8. '      ' → logprob: -15.625091552734375
    9. ',' → logprob: -15.750091552734375
    10. '     ' → logprob: -16.250091552734375

Token 525: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00936348456889391
    2. '       ' → logprob: -4.759363651275635
    3. 'j' → logprob: -7.884363651275635
    4. ' for' → logprob: -8.259363174438477
    5. '   ' → logprob: -9.634363174438477
    6. 'prev' → logprob: -10.259363174438477
    7. '           ' → logprob: -12.134363174438477
    8. 'last' → logprob: -12.884363174438477
    9. '	for' → logprob: -12.884363174438477
    10. 'length' → logprob: -14.634363174438477

Token 526: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00091217877343297
    2. ' j' → logprob: -7.000912189483643
    3. '_j' → logprob: -15.125911712646484
    4. '   ' → logprob: -15.375911712646484
    5. 'idx' → logprob: -15.625911712646484
    6. 'x' → logprob: -17.375911712646484
    7. '	j' → logprob: -17.500911712646484
    8. ' ' → logprob: -18.375911712646484
    9. 'jj' → logprob: -18.750911712646484
    10. '    ' → logprob: -19.375911712646484

Token 527: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018226269632577896
    2. 'in' → logprob: -4.018226146697998
    3. '	in' → logprob: -10.268226623535156
    4. ',' → logprob: -11.143226623535156
    5. ' ' → logprob: -11.893226623535156
    6. '+' → logprob: -12.018226623535156
    7. '   ' → logprob: -12.268226623535156
    8. '1' → logprob: -12.643226623535156
    9. ' j' → logprob: -13.143226623535156
    10. '_in' → logprob: -13.768226623535156

Token 528: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015024791937321424
    2. ' range' → logprob: -6.501502513885498
    3. '	range' → logprob: -16.001502990722656
    4. '   ' → logprob: -17.876502990722656
    5. '(range' → logprob: -18.751502990722656
    6. ' ' → logprob: -19.251502990722656
    7. '  ' → logprob: -20.126502990722656
    8. '`' → logprob: -21.501502990722656
    9. '
' → logprob: -22.251502990722656
    10. '    ' → logprob: -22.251502990722656

Token 529: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005541566759347916
    2. '1' → logprob: -5.755541801452637
    3. '(len' → logprob: -6.130541801452637
    4. 'len' → logprob: -8.630541801452637
    5. '   ' → logprob: -12.380541801452637
    6. ' (' → logprob: -13.630541801452637
    7. '(j' → logprob: -13.880541801452637
    8. ' ' → logprob: -15.380541801452637
    9. ' len' → logprob: -15.505541801452637
    10. '+' → logprob: -16.25554084777832

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.566264295950532e-05
    2. 'len' → logprob: -9.375085830688477
    3. 'k' → logprob: -14.750085830688477
    4. ' ' → logprob: -15.375085830688477
    5. '   ' → logprob: -17.500085830688477
    6. '+' → logprob: -17.625085830688477
    7. '(len' → logprob: -18.250085830688477
    8. '0' → logprob: -18.500085830688477
    9. '(' → logprob: -18.500085830688477
    10. 'j' → logprob: -18.750085830688477

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02326865680515766
    2. ',len' → logprob: -3.773268699645996
    3. ',l' → logprob: -11.773268699645996
    4. ' ,' → logprob: -11.773268699645996
    5. '(len' → logprob: -12.398268699645996
    6. 'len' → logprob: -13.523268699645996
    7. ',length' → logprob: -13.898268699645996
    8. '<len' → logprob: -14.773268699645996
    9. ',
' → logprob: -15.648268699645996
    10. '=len' → logprob: -15.773268699645996

Token 532: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4140441635390744e-05
    2. ' len' → logprob: -11.250014305114746
    3. '(len' → logprob: -14.375014305114746
    4. '   ' → logprob: -15.250014305114746
    5. '=len' → logprob: -16.25001335144043
    6. ',len' → logprob: -17.00001335144043
    7. '[len' → logprob: -17.12501335144043
    8. '	len' → logprob: -17.75001335144043
    9. '<len' → logprob: -17.75001335144043
    10. 'l' → logprob: -18.25001335144043

Token 533: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.166338137816638e-05
    2. 'l' → logprob: -10.375031471252441
    3. '[l' → logprob: -16.125032424926758
    4. '(' → logprob: -16.375032424926758
    5. '(win' → logprob: -16.500032424926758
    6. '	l' → logprob: -16.875032424926758
    7. ' l' → logprob: -17.500032424926758
    8. '   ' → logprob: -17.750032424926758
    9. ' (' → logprob: -18.000032424926758
    10. '(
' → logprob: -18.125032424926758

Token 534: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020841754972934723
    2. ')):
' → logprob: -4.520841598510742
    3. '):' → logprob: -4.645841598510742
    4. ')):' → logprob: -9.395841598510742
    5. '):
' → logprob: -10.395841598510742
    6. '():
' → logprob: -12.145841598510742
    7. '()):
' → logprob: -12.145841598510742
    8. '   ' → logprob: -12.145841598510742
    9. ' ):
' → logprob: -12.395841598510742
    10. '):

' → logprob: -12.645841598510742

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03447215259075165
    2. '       ' → logprob: -3.4094722270965576
    3. ' if' → logprob: -7.7844719886779785
    4. '```' → logprob: -8.534472465515137
    5. '<|end|>' → logprob: -8.909472465515137
    6. '   ' → logprob: -10.909472465515137
    7. '	       ' → logprob: -11.034472465515137
    8. '               ' → logprob: -11.409472465515137
    9. '         ' → logprob: -11.909472465515137
    10. ',' → logprob: -12.034472465515137

Token 536: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4172023832798004
    2. 'if' (adapté à ' if') → logprob: -1.292202353477478
    3. ' if' → logprob: -3.2922024726867676
    4. '       ' → logprob: -3.5422024726867676
    5. '               ' → logprob: -8.91720199584961
    6. '   ' → logprob: -9.91720199584961
    7. '	       ' → logprob: -10.04220199584961
    8. '```' → logprob: -10.41720199584961
    9. '	if' → logprob: -10.54220199584961
    10. 'If' → logprob: -11.04220199584961

Token 537: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1602628231048584
    2. ' l' → logprob: -1.9102628231048584
    3. '           ' → logprob: -10.410263061523438
    4. '   ' → logprob: -12.910263061523438
    5. '	l' → logprob: -12.910263061523438
    6. 'win' → logprob: -13.535263061523438
    7. ' win' → logprob: -14.410263061523438
    8. '    ' → logprob: -14.910263061523438
    9. '            ' → logprob: -15.160263061523438
    10. '               ' → logprob: -15.410263061523438

Token 538: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[l' → logprob: -15.75
    3. '[' → logprob: -15.875
    4. '[i' → logprob: -16.5
    5. '```' → logprob: -17.875
    6. 'j' → logprob: -18.0
    7. ' [' → logprob: -18.0
    8. '   ' → logprob: -19.0
    9. '[
' → logprob: -20.0
    10. '][' → logprob: -20.875

Token 539: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07953780144453049
    2. ' ==' → logprob: -2.704537868499756
    3. ']==' → logprob: -4.704537868499756
    4. ']' → logprob: -7.954537868499756
    5. ')==' → logprob: -9.204537391662598
    6. '==
' → logprob: -11.079537391662598
    7. ')' → logprob: -11.329537391662598
    8. '===' → logprob: -11.329537391662598
    9. '']==' → logprob: -12.704537391662598
    10. '=' → logprob: -13.204537391662598

Token 540: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002202120842412114
    2. ' ==' → logprob: -6.127202033996582
    3. '==
' → logprob: -11.252202033996582
    4. '===' → logprob: -13.252202033996582
    5. '=' → logprob: -13.752202033996582
    6. ']==' → logprob: -14.252202033996582
    7. ')==' → logprob: -15.127202033996582
    8. '```' → logprob: -16.5022029876709
    9. '()==' → logprob: -17.1272029876709
    10. 'l' → logprob: -17.2522029876709

Token 541: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001438266917830333
    2. ' l' → logprob: -8.875144004821777
    3. '           ' → logprob: -13.500144004821777
    4. '   ' → logprob: -13.625144004821777
    5. '       ' → logprob: -14.125144004821777
    6. ' ' → logprob: -15.875144004821777
    7. '	l' → logprob: -16.12514305114746
    8. '     ' → logprob: -16.25014305114746
    9. '                   ' → logprob: -16.50014305114746
    10. '    ' → logprob: -17.00014305114746

Token 542: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0006504826596938074
    2. '[l' → logprob: -7.375650405883789
    3. 'l' → logprob: -11.125650405883789
    4. '[' → logprob: -12.125650405883789
    5. '```' → logprob: -14.000650405883789
    6. '[
' → logprob: -14.625650405883789
    7. '           ' → logprob: -14.625650405883789
    8. ' [' → logprob: -14.625650405883789
    9. '[i' → logprob: -14.750650405883789
    10. '   ' → logprob: -14.750650405883789

Token 543: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04862041026353836
    2. '[j' → logprob: -3.0486204624176025
    3. ' -' → logprob: -10.923620223999023
    4. '[' → logprob: -11.548620223999023
    5. '[-' → logprob: -13.048620223999023
    6. 'j' → logprob: -14.048620223999023
    7. '1' → logprob: -14.173620223999023
    8. ']' → logprob: -14.798620223999023
    9. '[i' → logprob: -15.548620223999023
    10. '-
' → logprob: -15.548620223999023

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.875001907348633
    3. '```' → logprob: -14.875001907348633
    4. ']' → logprob: -15.125001907348633
    5. '   ' → logprob: -15.375001907348633
    6. 'j' → logprob: -15.750001907348633
    7. '
' → logprob: -16.625001907348633
    8. '0' → logprob: -17.062501907348633
    9. '``' → logprob: -17.875001907348633
    10. 'i' → logprob: -18.125001907348633

Token 545: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49790385365486145
    2. '):
' → logprob: -1.372903823852539
    3. ']:' → logprob: -2.122903823852539
    4. ']:
' → logprob: -4.747903823852539
    5. ':' → logprob: -5.122903823852539
    6. ')' → logprob: -6.372903823852539
    7. ']' → logprob: -6.997903823852539
    8. '       ' → logprob: -8.122903823852539
    9. ' ):' → logprob: -8.122903823852539
    10. ' and' → logprob: -8.247903823852539

Token 546: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001848254178185016
    2. 'ans' → logprob: -10.375185012817383
    3. '```' → logprob: -10.625185012817383
    4. ' and' → logprob: -10.750185012817383
    5. '           ' → logprob: -10.875185012817383
    6. ' ans' → logprob: -10.875185012817383
    7. ':
' → logprob: -11.125185012817383
    8. ',' → logprob: -11.625185012817383
    9. '                
' → logprob: -11.625185012817383
    10. '):
' → logprob: -11.750185012817383

Token 547: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008808734826743603
    2. 'if' (adapté à ' if') → logprob: -5.758808612823486
    3. '               ' → logprob: -5.758808612823486
    4. '                   ' → logprob: -6.383808612823486
    5. 'l' → logprob: -7.883808612823486
    6. ' ans' → logprob: -8.383809089660645
    7. '   ' → logprob: -9.883809089660645
    8. '#' → logprob: -10.633809089660645
    9. '	ans' → logprob: -11.008809089660645
    10. 'score' → logprob: -11.133809089660645

Token 548: ' l' (ID: 305)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9967703223228455
    2. 'l' → logprob: -1.6217703819274902
    3. 'i' → logprob: -1.7467703819274902
    4. 'tt' → logprob: -1.9967703819274902
    5. 'win' → logprob: -2.8717703819274902
    6. 'j' → logprob: -3.2467703819274902
    7. ' t' → logprob: -5.24677038192749
    8. 'ans' → logprob: -5.49677038192749
    9. '   ' → logprob: -5.74677038192749
    10. ' i' → logprob: -6.24677038192749

Token 549: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0008827611454762518
    2. '[i' → logprob: -8.375883102416992
    3. '[' → logprob: -8.875883102416992
    4. '```' → logprob: -8.875883102416992
    5. '               ' → logprob: -9.250883102416992
    6. 'j' → logprob: -9.625883102416992
    7. '                   ' → logprob: -9.750883102416992
    8. ' [' → logprob: -10.375883102416992
    9. '[l' → logprob: -10.750883102416992
    10. '   ' → logprob: -11.625883102416992

Token 550: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.6491941809654236
    2. ']' → logprob: -0.7741941809654236
    3. '==' → logprob: -5.149194240570068
    4. ']=='' → logprob: -5.274194240570068
    5. ' ==' → logprob: -6.149194240570068
    6. '               ' → logprob: -7.399194240570068
    7. ']!=' → logprob: -7.524194240570068
    8. '']' → logprob: -8.14919376373291
    9. '                   ' → logprob: -8.39919376373291
    10. ']=' → logprob: -8.64919376373291

Token 551: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2549739480018616
    2. ' ==' → logprob: -1.5049738883972168
    3. '=='' → logprob: -7.129973888397217
    4. 'in' → logprob: -7.754973888397217
    5. ' in' → logprob: -7.754973888397217
    6. '!=' → logprob: -8.379974365234375
    7. '==
' → logprob: -8.379974365234375
    8. 'is' → logprob: -9.004974365234375
    9. ' not' → logprob: -9.004974365234375
    10. ' !=' → logprob: -9.004974365234375

Token 552: ' '' (ID: 461)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.3464649021625519
    2. ''p' → logprob: -1.5964648723602295
    3. ''l' → logprob: -3.4714648723602295
    4. 'p' → logprob: -4.096465110778809
    5. ''r' → logprob: -4.096465110778809
    6. 'l' → logprob: -4.346465110778809
    7. ''' → logprob: -4.721465110778809
    8. ''s' → logprob: -6.471465110778809
    9. 'r' → logprob: -7.096465110778809
    10. ''w' → logprob: -7.471465110778809

Token 553: 'p' (ID: 79)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.7324233651161194
    2. ''p' → logprob: -0.8574233651161194
    3. 'p' → logprob: -2.6074233055114746
    4. ''r' → logprob: -4.607423305511475
    5. ''' → logprob: -4.982423305511475
    6. 'r' → logprob: -5.982423305511475
    7. ''w' → logprob: -7.732423305511475
    8. ''s' → logprob: -8.232423782348633
    9. ''l' → logprob: -8.232423782348633
    10. 'l' → logprob: -8.857423782348633

Token 554: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.7070673704147339
    2. '':
' → logprob: -0.7070673704147339
    3. ''' → logprob: -4.332067489624023
    4. '':
' → logprob: -8.207067489624023
    5. '                   ' → logprob: -9.457067489624023
    6. '':

' → logprob: -9.957067489624023
    7. ':' → logprob: -10.207067489624023
    8. '           ' → logprob: -10.332067489624023
    9. ''or' → logprob: -10.332067489624023
    10. ':
' → logprob: -10.457067489624023

Token 555: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.197641983628273
    2. 'ans' → logprob: -2.3226420879364014
    3. '               ' → logprob: -2.6976420879364014
    4. ' ans' → logprob: -4.447641849517822
    5. '```' → logprob: -7.447641849517822
    6. '	ans' → logprob: -7.697641849517822
    7. '                       ' → logprob: -7.822641849517822
    8. '(ans' → logprob: -8.57264232635498
    9. '           ' → logprob: -9.07264232635498
    10. '=' → logprob: -9.07264232635498

Token 556: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0017153972294181585
    2. '                   ' → logprob: -6.626715183258057
    3. ' ans' → logprob: -7.876715183258057
    4. '               ' → logprob: -12.376715660095215
    5. '	ans' → logprob: -12.501715660095215
    6. '   ' → logprob: -14.251715660095215
    7. '(ans' → logprob: -14.376715660095215
    8. '           ' → logprob: -15.001715660095215
    9. '```' → logprob: -16.1267147064209
    10. '                       ' → logprob: -16.3767147064209

Token 557: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.01825869455933571
    2. ' -=' → logprob: -4.018258571624756
    3. '-' → logprob: -9.143259048461914
    4. '   ' → logprob: -13.518259048461914
    5. '```' → logprob: -15.518259048461914
    6. ' -' → logprob: -15.768259048461914
    7. '  ' → logprob: -16.768259048461914
    8. '+=' → logprob: -16.893259048461914
    9. '=' → logprob: -17.018259048461914
    10. '    ' → logprob: -17.893259048461914

Token 558: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: 0.0
    2. ' P' → logprob: -18.625
    3. '(P' → logprob: -22.5
    4. '           ' → logprob: -22.625
    5. '               ' → logprob: -22.625
    6. '                   ' → logprob: -22.625
    7. '   ' → logprob: -23.25
    8. '=P' → logprob: -23.375
    9. '[P' → logprob: -23.75
    10. 'p' → logprob: -24.0

Token 559: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000856193364597857
    2. '<|end|>' → logprob: -7.375856399536133
    3. '```' → logprob: -9.625856399536133
    4. 'elif' → logprob: -9.875856399536133
    5. '                   ' → logprob: -10.500856399536133
    6. '           ' → logprob: -10.500856399536133
    7. '                ' → logprob: -11.500856399536133
    8. '       ' → logprob: -11.500856399536133
    9. '              ' → logprob: -11.500856399536133
    10. '                
' → logprob: -11.750856399536133

Token 560: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013586864806711674
    2. '<|end|>' → logprob: -7.126358509063721
    3. 'elif' → logprob: -8.501358985900879
    4. '```' → logprob: -8.751358985900879
    5. '           ' → logprob: -9.876358985900879
    6. '       ' → logprob: -10.376358985900879
    7. '                   ' → logprob: -10.501358985900879
    8. '                ' → logprob: -10.751358985900879
    9. '                
' → logprob: -10.876358985900879
    10. '              ' → logprob: -11.251358985900879

Token 561: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004094904754310846
    2. 'elif' (adapté à ' elif') → logprob: -6.129095077514648
    3. ' elif' → logprob: -6.504095077514648
    4. 'else' → logprob: -9.129095077514648
    5. ' else' → logprob: -9.379095077514648
    6. '                ' → logprob: -9.379095077514648
    7. '                   ' → logprob: -9.879095077514648
    8. '```' → logprob: -10.254095077514648
    9. '           ' → logprob: -10.879095077514648
    10. '              ' → logprob: -11.754095077514648

Token 562: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4303905665874481
    2. ' l' → logprob: -1.0553905963897705
    3. '                   ' → logprob: -6.430390357971191
    4. '                    ' → logprob: -11.180390357971191
    5. '               ' → logprob: -11.430390357971191
    6. 's' → logprob: -11.680390357971191
    7. '                       ' → logprob: -11.930390357971191
    8. '           ' → logprob: -12.055390357971191
    9. '                  ' → logprob: -12.555390357971191
    10. ' ' → logprob: -12.805390357971191

Token 563: '[j' (ID: 7895)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31404730677604675
    2. ' ==' → logprob: -1.3140473365783691
    3. '                   ' → logprob: -7.814047336578369
    4. '               ' → logprob: -8.564046859741211
    5. '=='' → logprob: -10.189046859741211
    6. '           ' → logprob: -10.314046859741211
    7. '[j' → logprob: -10.564046859741211
    8. 'j' → logprob: -11.189046859741211
    9. '                ' → logprob: -11.314046859741211
    10. 'l' → logprob: -11.439046859741211

Token 564: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2520507276058197
    2. '==' → logprob: -1.502050757408142
    3. '=='' → logprob: -9.377050399780273
    4. '                   ' → logprob: -10.752050399780273
    5. '               ' → logprob: -12.377050399780273
    6. ' =='' → logprob: -12.627050399780273
    7. ']==' → logprob: -12.877050399780273
    8. '                ' → logprob: -13.752050399780273
    9. 'elif' → logprob: -14.127050399780273
    10. '==
' → logprob: -14.252050399780273

Token 565: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4742175340652466
    2. ' ==' → logprob: -0.9742175340652466
    3. '=='' → logprob: -8.974217414855957
    4. ' =='' → logprob: -11.849217414855957
    5. '==
' → logprob: -13.349217414855957
    6. '=' → logprob: -13.349217414855957
    7. '===' → logprob: -13.849217414855957
    8. 'elif' → logprob: -14.849217414855957
    9. ' ' → logprob: -15.099217414855957
    10. '                   ' → logprob: -15.224217414855957

Token 566: ' '' (ID: 461)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.05417517200112343
    2. ''s' → logprob: -3.1791751384735107
    3. ''' → logprob: -4.55417537689209
    4. ' '' → logprob: -7.55417537689209
    5. 'r' → logprob: -10.05417537689209
    6. ''S' → logprob: -11.42917537689209
    7. ' r' → logprob: -12.80417537689209
    8. ' ' → logprob: -13.17917537689209
    9. ''z' → logprob: -13.17917537689209
    10. 's' → logprob: -13.80417537689209

Token 567: 'r' (ID: 81)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2033682018518448
    2. 'r' → logprob: -1.7033681869506836
    3. 'S' → logprob: -7.328368186950684
    4. 'R' → logprob: -7.828368186950684
    5. ''s' → logprob: -7.828368186950684
    6. ''r' → logprob: -8.078368186950684
    7. '`s' → logprob: -8.953368186950684
    8. ''S' → logprob: -10.203368186950684
    9. '"s' → logprob: -11.703368186950684
    10. ''' → logprob: -11.953368186950684

Token 568: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14409387111663818
    2. '               ' → logprob: -2.5190939903259277
    3. ':
' → logprob: -3.1440939903259277
    4. ':' → logprob: -5.019093990325928
    5. '':
' → logprob: -6.519093990325928
    6. '           ' → logprob: -7.644093990325928
    7. '<|end|>' → logprob: -7.894093990325928
    8. ''):
' → logprob: -8.26909351348877
    9. '):
' → logprob: -8.64409351348877
    10. '']:
' → logprob: -8.76909351348877

Token 569: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003557662246748805
    2. ' ans' → logprob: -5.8785576820373535
    3. 'ans' → logprob: -7.2535576820373535
    4. '               ' → logprob: -10.628557205200195
    5. '```' → logprob: -11.628557205200195
    6. '                  ' → logprob: -12.753557205200195
    7. '           ' → logprob: -12.878557205200195
    8. '(ans' → logprob: -13.253557205200195
    9. '                    ' → logprob: -13.753557205200195
    10. '                       ' → logprob: -13.753557205200195

Token 570: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.14851708710193634
    2. '                   ' → logprob: -2.14851713180542
    3. 'R' → logprob: -4.02351713180542
    4. ' ans' → logprob: -5.89851713180542
    5. '               ' → logprob: -7.64851713180542
    6. '           ' → logprob: -9.648516654968262
    7. ' R' → logprob: -10.148516654968262
    8. '                    ' → logprob: -10.398516654968262
    9. '                  ' → logprob: -10.523516654968262
    10. '```' → logprob: -10.898516654968262

Token 571: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5759974122047424
    2. '-=' → logprob: -0.8259974122047424
    3. '-' → logprob: -9.825997352600098
    4. '                   ' → logprob: -12.825997352600098
    5. '   ' → logprob: -14.450997352600098
    6. '               ' → logprob: -15.575997352600098
    7. '```' → logprob: -15.700997352600098
    8. '                    ' → logprob: -16.325998306274414
    9. '           ' → logprob: -16.325998306274414
    10. ' ' → logprob: -17.075998306274414

Token 572: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.9385402993066236e-05
    2. ' R' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.125019073486328
    4. '                   ' → logprob: -16.500019073486328
    5. '               ' → logprob: -16.500019073486328
    6. '           ' → logprob: -17.500019073486328
    7. '	R' → logprob: -17.625019073486328
    8. '       ' → logprob: -18.125019073486328
    9. '  ' → logprob: -18.500019073486328
    10. '    ' → logprob: -19.000019073486328

Token 573: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.717296517104842e-05
    2. '```' → logprob: -10.375057220458984
    3. 'else' → logprob: -10.750057220458984
    4. ' else' → logprob: -13.750057220458984
    5. 'elif' → logprob: -14.000057220458984
    6. '<|end|>' → logprob: -14.375057220458984
    7. '``' → logprob: -14.750057220458984
    8. '			' → logprob: -15.000057220458984
    9. '           ' → logprob: -15.250057220458984
    10. '              ' → logprob: -15.625057220458984

Token 574: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006190311978571117
    2. 'else' → logprob: -7.750618934631348
    3. '```' → logprob: -8.625618934631348
    4. 'elif' → logprob: -11.875618934631348
    5. ' else' → logprob: -13.875618934631348
    6. '			' → logprob: -15.000618934631348
    7. '``' → logprob: -15.125618934631348
    8. '           ' → logprob: -16.750619888305664
    9. '                   ' → logprob: -16.750619888305664
    10. '              ' → logprob: -17.125619888305664

Token 575: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012120219180360436
    2. 'else' (adapté à ' else') → logprob: -6.876212120056152
    3. 'elif' → logprob: -9.251212120056152
    4. '```' → logprob: -9.501212120056152
    5. ' else' → logprob: -11.876212120056152
    6. ' elif' → logprob: -14.126212120056152
    7. '			' → logprob: -15.001212120056152
    8. '``' → logprob: -15.876212120056152
    9. '              ' → logprob: -16.501211166381836
    10. '                   ' → logprob: -16.876211166381836

Token 576: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5405800342559814
    2. ':
' → logprob: -1.5405800342559814
    3. '                   ' → logprob: -1.9155800342559814
    4. '               ' → logprob: -2.9155800342559814
    5. '                ' → logprob: -7.040579795837402
    6. '           ' → logprob: -8.165579795837402
    7. '                    ' → logprob: -8.415579795837402
    8. '                  ' → logprob: -9.165579795837402
    9. 's' → logprob: -9.290579795837402
    10. '                 ' → logprob: -9.415579795837402

Token 577: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010900316759943962
    2. ' ans' → logprob: -4.760900497436523
    3. 'ans' → logprob: -6.260900497436523
    4. '               ' → logprob: -8.510900497436523
    5. '   ' → logprob: -10.385900497436523
    6. '                  ' → logprob: -10.510900497436523
    7. '           ' → logprob: -10.510900497436523
    8. '                    ' → logprob: -11.135900497436523
    9. '(ans' → logprob: -11.260900497436523
    10. 'S' → logprob: -11.385900497436523

Token 578: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.015354543924331665
    2. '                   ' → logprob: -4.265354633331299
    3. ' ans' → logprob: -6.890354633331299
    4. '               ' → logprob: -9.64035415649414
    5. '	ans' → logprob: -10.14035415649414
    6. '           ' → logprob: -10.51535415649414
    7. '(ans' → logprob: -11.14035415649414
    8. '   ' → logprob: -11.39035415649414
    9. 'S' → logprob: -12.01535415649414
    10. '                  ' → logprob: -12.51535415649414

Token 579: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03452939912676811
    2. '                   ' → logprob: -3.534529447555542
    3. 's' → logprob: -5.534529209136963
    4. ' ans' → logprob: -7.534529209136963
    5. '               ' → logprob: -8.784529685974121
    6. '   ' → logprob: -10.284529685974121
    7. '           ' → logprob: -10.409529685974121
    8. '	ans' → logprob: -10.409529685974121
    9. '(ans' → logprob: -12.034529685974121
    10. '                  ' → logprob: -12.034529685974121

Token 580: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2664456789934775e-06
    2. 'l' → logprob: -14.750000953674316
    3. '[l' → logprob: -14.750000953674316
    4. 'j' → logprob: -15.750000953674316
    5. '[i' → logprob: -16.375001907348633
    6. '           ' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '==' → logprob: -18.000001907348633
    9. 'elif' → logprob: -18.000001907348633
    10. 's' → logprob: -18.250001907348633

Token 581: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.44022971391677856
    2. ' ==' → logprob: -1.1902296543121338
    3. ']' → logprob: -3.190229654312134
    4. ']==' → logprob: -4.565229892730713
    5. '[j' → logprob: -8.440229415893555
    6. '               ' → logprob: -10.065229415893555
    7. '']' → logprob: -10.440229415893555
    8. '           ' → logprob: -10.440229415893555
    9. '=='' → logprob: -10.815229415893555
    10. '                   ' → logprob: -10.940229415893555

Token 582: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029770513996481895
    2. ' ==' → logprob: -3.529770612716675
    3. '=='' → logprob: -11.029770851135254
    4. '==
' → logprob: -13.904770851135254
    5. '=' → logprob: -14.029770851135254
    6. ']==' → logprob: -14.404770851135254
    7. '           ' → logprob: -15.154770851135254
    8. '===' → logprob: -15.279770851135254
    9. '                   ' → logprob: -15.404770851135254
    10. '               ' → logprob: -15.404770851135254

Token 583: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -4.060365608893335e-05
    2. '`s' → logprob: -10.750041007995605
    3. 's' → logprob: -11.000041007995605
    4. '"s' → logprob: -13.625041007995605
    5. '‘s' → logprob: -13.750041007995605
    6. ' s' → logprob: -17.37504005432129
    7. ' '' → logprob: -17.50004005432129
    8. ''' → logprob: -17.50004005432129
    9. '   ' → logprob: -18.50004005432129
    10. ''S' → logprob: -19.00004005432129

Token 584: 's' (ID: 82)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.5759502053260803
    2. 's' → logprob: -0.8259502053260803
    3. '`s' → logprob: -11.950950622558594
    4. '"s' → logprob: -12.450950622558594
    5. ' s' → logprob: -15.575950622558594
    6. '‘s' → logprob: -15.950950622558594
    7. ''S' → logprob: -16.575950622558594
    8. '_s' → logprob: -16.825950622558594
    9. ''' → logprob: -18.200950622558594
    10. '	s' → logprob: -18.200950622558594

Token 585: ''
' (ID: 2207)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22790001332759857
    2. '               ' → logprob: -2.2279000282287598
    3. ':
' → logprob: -2.4779000282287598
    4. '):
' → logprob: -4.72790002822876
    5. ':' → logprob: -6.10290002822876
    6. '           ' → logprob: -7.97790002822876
    7. '                  ' → logprob: -9.102899551391602
    8. '                ' → logprob: -9.227899551391602
    9. '                 ' → logprob: -9.477899551391602
    10. ']:
' → logprob: -9.727899551391602

Token 586: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05190248042345047
    2. 'ans' → logprob: -3.4269025325775146
    3. '               ' → logprob: -4.0519022941589355
    4. ' ans' → logprob: -7.6769022941589355
    5. 'S' → logprob: -9.176902770996094
    6. '           ' → logprob: -9.926902770996094
    7. '(ans' → logprob: -10.801902770996094
    8. '```' → logprob: -11.051902770996094
    9. '                  ' → logprob: -11.301902770996094
    10. '	ans' → logprob: -11.301902770996094

Token 587: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00013762809976469725
    2. '                   ' → logprob: -9.500137329101562
    3. ' ans' → logprob: -9.750137329101562
    4. '               ' → logprob: -12.750137329101562
    5. '	ans' → logprob: -13.750137329101562
    6. '           ' → logprob: -15.250137329101562
    7. '(ans' → logprob: -15.875137329101562
    8. '   ' → logprob: -17.375137329101562
    9. '_ans' → logprob: -18.250137329101562
    10. '                  ' → logprob: -18.500137329101562

Token 588: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0110534792765975
    2. ' -=' → logprob: -4.511053562164307
    3. '-' → logprob: -12.136053085327148
    4. '   ' → logprob: -16.01105308532715
    5. '           ' → logprob: -17.13605308532715
    6. '```' → logprob: -17.26105308532715
    7. '=' → logprob: -18.13605308532715
    8. '                   ' → logprob: -18.13605308532715
    9. ' ' → logprob: -18.51105308532715
    10. '+=' → logprob: -18.51105308532715

Token 589: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.7968066206085496e-05
    2. ' S' → logprob: -10.500027656555176
    3. '               ' → logprob: -16.375028610229492
    4. 's' → logprob: -16.875028610229492
    5. '                   ' → logprob: -16.875028610229492
    6. '   ' → logprob: -17.000028610229492
    7. '           ' → logprob: -17.375028610229492
    8. '  ' → logprob: -17.875028610229492
    9. '       ' → logprob: -18.250028610229492
    10. '          ' → logprob: -19.000028610229492

Token 590: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020187146961688995
    2. '       ' → logprob: -4.6451873779296875
    3. '```' → logprob: -4.7701873779296875
    4. '   ' → logprob: -6.8951873779296875
    5. '<|end|>' → logprob: -8.270187377929688
    6. 'return' → logprob: -8.645187377929688
    7. '                   ' → logprob: -9.020187377929688
    8. '           ' → logprob: -9.395187377929688
    9. ' return' → logprob: -9.895187377929688
    10. '                
' → logprob: -10.520187377929688

Token 591: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29423651099205017
    2. '```' → logprob: -1.6692365407943726
    3. '       ' → logprob: -3.044236421585083
    4. '<|end|>' → logprob: -5.169236660003662
    5. '   ' → logprob: -5.669236660003662
    6. '                   ' → logprob: -5.669236660003662
    7. '           ' → logprob: -6.044236660003662
    8. '                ' → logprob: -6.419236660003662
    9. '                
' → logprob: -8.169236183166504
    10. '              ' → logprob: -8.294236183166504

Token 592: ' l' (ID: 305)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08922440558671951
    2. 'l' (adapté à ' l') → logprob: -2.464224338531494
    3. ' l' → logprob: -8.464224815368652
    4. '              ' → logprob: -10.464224815368652
    5. '                   ' → logprob: -10.589224815368652
    6. 'win' → logprob: -12.339224815368652
    7. '           ' → logprob: -12.339224815368652
    8. '                ' → logprob: -12.839224815368652
    9. '#' → logprob: -12.964224815368652
    10. '```' → logprob: -12.964224815368652

Token 593: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: 0.0
    2. '[i' → logprob: -16.875
    3. '```' → logprob: -17.875
    4. '[l' → logprob: -18.375
    5. '.pop' → logprob: -18.75
    6. '\[' → logprob: -19.875
    7. '=j' → logprob: -20.25
    8. '[k' → logprob: -20.375
    9. '[:]' → logprob: -20.625
    10. ''[' → logprob: -20.875

Token 594: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002828296273946762
    2. ' =' → logprob: -5.877828121185303
    3. ']' → logprob: -11.127828598022461
    4. ']=' → logprob: -11.877828598022461
    5. ')' → logprob: -14.127828598022461
    6. ')=' → logprob: -15.377828598022461
    7. '=
' → logprob: -15.627828598022461
    8. '='' → logprob: -16.00282859802246
    9. '=None' → logprob: -16.12782859802246
    10. '.=' → logprob: -16.87782859802246

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8624639324116288e-06
    2. ' =' → logprob: -13.375001907348633
    3. '=''' → logprob: -15.375001907348633
    4. '='' → logprob: -17.750001907348633
    5. '=""' → logprob: -17.875001907348633
    6. '+=' → logprob: -18.375001907348633
    7. '.=' → logprob: -19.000001907348633
    8. '=None' → logprob: -19.500001907348633
    9. '=}' → logprob: -19.875001907348633
    10. '=

' → logprob: -20.125001907348633

Token 596: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.05721326917409897
    2. 'None' → logprob: -3.182213306427002
    3. ''' → logprob: -5.307213306427002
    4. '""' → logprob: -6.057213306427002
    5. ''*' → logprob: -6.182213306427002
    6. ''n' → logprob: -6.307213306427002
    7. ''x' → logprob: -6.682213306427002
    8. ''-' → logprob: -7.307213306427002
    9. ''a' → logprob: -8.557212829589844
    10. ''#' → logprob: -8.682212829589844

Token 597: 'z' (ID: 89)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.09863504022359848
    2. ''' → logprob: -3.348634958267212
    3. ''x' → logprob: -3.473634958267212
    4. ''n' → logprob: -4.848635196685791
    5. 'None' → logprob: -4.848635196685791
    6. 'x' → logprob: -5.473635196685791
    7. '""' → logprob: -5.973635196685791
    8. ''-' → logprob: -6.223635196685791
    9. ''*' → logprob: -6.848635196685791
    10. '"' → logprob: -7.848635196685791

Token 598: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.584861744660884e-05
    2. '<|end|>' → logprob: -10.250045776367188
    3. ''
' → logprob: -12.125045776367188
    4. '"' → logprob: -12.750045776367188
    5. '')' → logprob: -14.250045776367188
    6. ''''' → logprob: -15.125045776367188
    7. ''#' → logprob: -15.500045776367188
    8. '0' → logprob: -15.500045776367188
    9. '```' → logprob: -15.625045776367188
    10. '''' → logprob: -16.500045776367188

Token 599: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 600: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 601: ' Mark' (ID: 5070)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.6760835647583008
    2. ''' → logprob: -0.8010835647583008
    3. 'None' → logprob: -3.801083564758301
    4. '#' → logprob: -5.176083564758301
    5. ''l' → logprob: -5.676083564758301
    6. ''#' → logprob: -5.676083564758301
    7. 'z' → logprob: -6.176083564758301
    8. '"' → logprob: -6.176083564758301
    9. ' None' → logprob: -7.301083564758301
    10. ' '' → logprob: -7.301083564758301

Token 602: ' this' (ID: 495)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 603: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.037489451467990875
    2. 'as' → logprob: -4.412489414215088
    3. 'position' → logprob: -4.537489414215088
    4. 'invalid' → logprob: -5.162489414215088
    5. ' move' → logprob: -5.787489414215088
    6. 'for' → logprob: -6.912489414215088
    7. 'loss' → logprob: -7.412489414215088
    8. ' as' → logprob: -7.662489414215088
    9. 'element' → logprob: -7.662489414215088
    10. 'duplicate' → logprob: -7.662489414215088

Token 604: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: ' "' (ID: 392)
  Prédit: 'invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'invalid' → logprob: -0.24028269946575165
    2. 'used' → logprob: -1.740282654762268
    3. 'for' → logprob: -3.8652827739715576
    4. 'dis' → logprob: -5.2402825355529785
    5. 'not' → logprob: -6.1152825355529785
    6. 'null' → logprob: -6.2402825355529785
    7. 'void' → logprob: -6.4902825355529785
    8. 'unused' → logprob: -6.8652825355529785
    9. ''' → logprob: -7.2402825355529785
    10. 'ignored' → logprob: -7.3652825355529785

Token 606: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.38481682538986206
    2. 'invalid' → logprob: -1.2598168849945068
    3. 'null' → logprob: -4.384816646575928
    4. 'for' → logprob: -4.884816646575928
    5. 'None' → logprob: -5.384816646575928
    6. 'void' → logprob: -5.759816646575928
    7. 'none' → logprob: -6.259816646575928
    8. 'unused' → logprob: -7.134816646575928
    9. 'ignored' → logprob: -7.259816646575928
    10. 'dis' → logprob: -7.509816646575928

Token 607: '/' (ID: 14)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002909369533881545
    2. 'up' → logprob: -6.377909183502197
    3. ' up' → logprob: -7.002909183502197
    4. ' "' → logprob: -8.877909660339355
    5. '-up' → logprob: -9.877909660339355
    6. '"
' → logprob: -10.752909660339355
    7. '```' → logprob: -11.252909660339355
    8. '   ' → logprob: -11.502909660339355
    9. '".' → logprob: -11.502909660339355
    10. '<|end|>' → logprob: -11.877909660339355

Token 608: 'invalid' (ID: 25351)
  Prédit: 'invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'invalid' → logprob: -0.6107358932495117
    2. 'None' → logprob: -1.7357358932495117
    3. 'none' → logprob: -2.4857358932495117
    4. '"' → logprob: -3.3607358932495117
    5. 'null' → logprob: -3.3607358932495117
    6. 'n' → logprob: -3.6107358932495117
    7. 'blocked' → logprob: -3.6107358932495117
    8. ''' → logprob: -4.110735893249512
    9. 'ignored' → logprob: -5.110735893249512
    10. 'x' → logprob: -5.110735893249512

Token 609: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08001076430082321
    2. '<|end|>' → logprob: -2.5800106525421143
    3. '```' → logprob: -8.205010414123535
    4. '       ' → logprob: -8.330010414123535
    5. '               ' → logprob: -8.830010414123535
    6. '")' → logprob: -8.955010414123535
    7. '<|end|>' → logprob: -9.330010414123535
    8. ')' → logprob: -9.705010414123535
    9. ''' → logprob: -9.955010414123535
    10. '           ' → logprob: -10.830010414123535

Token 610: ' so' (ID: 813)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.27087897062301636
    2. ' it' → logprob: -1.6458790302276611
    3. 'that' → logprob: -3.395879030227661
    4. ' that' → logprob: -5.520878791809082
    5. 'it's' → logprob: -5.520878791809082
    6. ' no' → logprob: -7.270878791809082
    7. ' it's' → logprob: -7.270878791809082
    8. 'no' → logprob: -7.270878791809082
    9. '               ' → logprob: -8.145878791809082
    10. 'we' → logprob: -8.645878791809082

Token 612: ' doesn't' (ID: 8740)
  Prédit: 'won'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'won' → logprob: -0.4629936218261719
    2. 'does' → logprob: -1.4629936218261719
    3. ' won't' → logprob: -2.462993621826172
    4. 'cannot' → logprob: -3.587993621826172
    5. 'is' → logprob: -5.087993621826172
    6. ' does' → logprob: -5.337993621826172
    7. 'can't' → logprob: -5.712993621826172
    8. '#' → logprob: -5.712993621826172
    9. ' doesn't' → logprob: -6.337993621826172
    10. ' is' → logprob: -6.462993621826172

Token 613: ' cause' (ID: 7075)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7267860174179077
    2. 'aff' → logprob: -1.4767860174179077
    3. 'repeat' → logprob: -2.2267861366271973
    4. 'get' → logprob: -2.3517861366271973
    5. 'con' → logprob: -2.9767861366271973
    6. 'particip' → logprob: -4.976786136627197
    7. 'score' → logprob: -5.226786136627197
    8. 'match' → logprob: -5.351786136627197
    9. 'inter' → logprob: -5.851786136627197
    10. 'conf' → logprob: -5.851786136627197

Token 614: ' further' (ID: 6544)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7083191275596619
    2. 'a' → logprob: -1.8333191871643066
    3. 'issues' → logprob: -2.3333191871643066
    4. 'double' → logprob: -2.7083191871643066
    5. 'conf' → logprob: -3.2083191871643066
    6. 'pen' → logprob: -3.5833191871643066
    7. 'future' → logprob: -3.5833191871643066
    8. ' further' → logprob: -3.8333191871643066
    9. 'sub' → logprob: -4.083319187164307
    10. 'ans' → logprob: -4.958319187164307

Token 615: ' sub' (ID: 1543)
  Prédit: 'pen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pen' → logprob: -0.7548635601997375
    2. 'conf' → logprob: -1.1298635005950928
    3. 'issues' → logprob: -2.1298635005950928
    4. 'sub' → logprob: -3.0048635005950928
    5. 'ded' → logprob: -4.004863739013672
    6. 'pro' → logprob: -4.629863739013672
    7. 'score' → logprob: -6.129863739013672
    8. 'redu' → logprob: -6.254863739013672
    9. 'subtract' → logprob: -6.379863739013672
    10. 'ans' → logprob: -6.754863739013672

Token 616: 'tractions' (ID: 26354)
  Prédit: 'tract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -0.385856032371521
    2. 'se' → logprob: -2.0108561515808105
    3. 'stitution' → logprob: -2.6358561515808105
    4. 'traction' → logprob: -3.5108561515808105
    5. 'stitute' → logprob: -3.7608561515808105
    6. 'tractions' → logprob: -4.5108561515808105
    7. '   ' → logprob: -5.0108561515808105
    8. '           ' → logprob: -5.0108561515808105
    9. 'stit' → logprob: -5.2608561515808105
    10. 'stract' → logprob: -5.3858561515808105

Token 617: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40301603078842163
    2. '   ' → logprob: -1.1530160903930664
    3. ' for' → logprob: -5.028016090393066
    4. 'for' → logprob: -5.028016090393066
    5. '```' → logprob: -6.653016090393066
    6. '<|end|>' → logprob: -7.403016090393066
    7. '
' → logprob: -8.403016090393066
    8. 'win' → logprob: -8.403016090393066
    9. '           ' → logprob: -8.903016090393066
    10. '#' → logprob: -9.153016090393066

Token 619: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08590325713157654
    2. 'print' (adapté à ' print') → logprob: -3.3359031677246094
    3. 'for' → logprob: -3.5859031677246094
    4. 'return' → logprob: -4.335903167724609
    5. ' for' → logprob: -5.585903167724609
    6. 'win' → logprob: -7.085903167724609
    7. ' return' → logprob: -7.460903167724609
    8. '```' → logprob: -8.33590316772461
    9. ' print' → logprob: -8.71090316772461
    10. '       ' → logprob: -8.83590316772461

Token 620: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -11.750008583068848
    3. 'ans' → logprob: -15.250008583068848
    4. '()' → logprob: -15.625008583068848
    5. '(answer' → logprob: -15.875008583068848
    6. '(abs' → logprob: -17.00000762939453
    7. ' (' → logprob: -18.37500762939453
    8. '(
' → logprob: -19.50000762939453
    9. '	ans' → logprob: -20.00000762939453
    10. '(sum' → logprob: -20.12500762939453

Token 621: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -17.0
    3. ')
' → logprob: -17.25
    4. '())' → logprob: -17.875
    5. ')`' → logprob: -18.0
    6. '()' → logprob: -18.375
    7. '```' → logprob: -18.625
    8. '`)' → logprob: -18.75
    9. '))' → logprob: -19.125
    10. '')' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 619
Tokens correctement prédits (1ère position, stricte): 159
Tokens correctement prédits (1ère position, avec adaptation): 174
Tokens correctement prédits (top 10): 390
Précision stricte (1ère position): 25.69%
Précision adaptée (1ère position): 28.11%
Précision (top 10): 63.00%
================================================================================
