================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Je prends la valeur n, apparemment c'est la longueur ?
n = int(sys.stdin.readline().strip())

# J'extrais les deux chaînes, s et t
temp = sys.stdin.readline().strip().split()
s = temp[0]
t = temp[1]

res = "" # pour stocker le résultat

# petite boucle, on suppose que n fait sens
for idx in range(0, n):
    res = res + s[idx]
    res += t[idx]  # ajouter aussi t

# Bon, affichons ce truc !
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' Je' (ID: 4678)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02773398905992508
    2. '  ' → logprob: -5.52773380279541
    3. ' #' → logprob: -5.77773380279541
    4. ' def' → logprob: -6.40273380279541
    5. ' -*-' → logprob: -6.40273380279541
    6. ' import' → logprob: -6.52773380279541
    7. 'import' → logprob: -6.52773380279541
    8. ' ```' → logprob: -6.52773380279541
    9. ' argparse' → logprob: -6.52773380279541
    10. 'def' → logprob: -6.77773380279541

Token 5: ' prends' (ID: 151723)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25545403361320496
    2. 'r' → logprob: -2.6304540634155273
    3. 'b' → logprob: -2.8804540634155273
    4. 'ct' → logprob: -4.255454063415527
    5. 'st' → logprob: -4.380454063415527
    6. 'm' → logprob: -4.630454063415527
    7. 'f' → logprob: -5.130454063415527
    8. '```' → logprob: -5.130454063415527
    9. 'ctor' → logprob: -5.255454063415527
    10. '#' → logprob: -5.380454063415527

Token 6: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4008837342262268
    2. ' un' → logprob: -2.525883674621582
    3. 'le' → logprob: -3.275883674621582
    4. ' ' → logprob: -3.275883674621582
    5. 'un' → logprob: -3.400883674621582
    6. ' le' → logprob: -3.525883674621582
    7. ' la' → logprob: -3.650883674621582
    8. 'une' → logprob: -4.275883674621582
    9. ' mon' → logprob: -4.400883674621582
    10. ' une' → logprob: -4.400883674621582

Token 7: ' valeur' (ID: 41664)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -1.1425117254257202
    2. 'import' → logprob: -1.6425117254257202
    3. 'main' → logprob: -2.3925118446350098
    4. 's' → logprob: -2.3925118446350098
    5. 'val' → logprob: -3.0175118446350098
    6. 'input' → logprob: -3.1425118446350098
    7. ' ' → logprob: -3.6425118446350098
    8. 'd' → logprob: -3.7675118446350098
    9. 'l' → logprob: -3.8925118446350098
    10. ' ' → logprob: -3.8925118446350098

Token 8: ' n' (ID: 297)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5755077600479126
    2. ' ' → logprob: -1.4505077600479126
    3. ' =' → logprob: -2.575507640838623
    4. 's' → logprob: -3.200507640838623
    5. 'de' → logprob: -3.825507640838623
    6. ' de' → logprob: -4.325507640838623
    7. 'd' → logprob: -4.450507640838623
    8. '=' → logprob: -4.950507640838623
    9. ',' → logprob: -5.575507640838623
    10. ' d' → logprob: -5.700507640838623

Token 9: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1845611035823822
    2. ' =' → logprob: -2.559561014175415
    3. '_' → logprob: -2.934561014175415
    4. 'n' → logprob: -4.309561252593994
    5. ' ' → logprob: -4.684561252593994
    6. ',' → logprob: -4.684561252593994
    7. 'e' → logprob: -6.559561252593994
    8. '\' → logprob: -6.559561252593994
    9. '```' → logprob: -7.434561252593994
    10. '.' → logprob: -7.434561252593994

Token 10: ' app' (ID: 1053)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8095651865005493
    2. ' =' → logprob: -0.9345651865005493
    3. ' n' → logprob: -2.9345650672912598
    4. ' a' → logprob: -3.9345650672912598
    5. ' la' → logprob: -4.55956506729126
    6. ' ' → logprob: -4.55956506729126
    7. 'n' → logprob: -4.68456506729126
    8. '=' → logprob: -4.68456506729126
    9. 's' → logprob: -5.05956506729126
    10. ' ,' → logprob: -5.43456506729126

Token 11: 'aremment' (ID: 185120)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.336841344833374
    2. 'en' → logprob: -1.961841344833374
    3. 'ending' → logprob: -1.961841344833374
    4. 'ort' → logprob: -2.336841344833374
    5. 'el' → logprob: -2.336841344833374
    6. '=' → logprob: -2.711841344833374
    7. 'os' → logprob: -4.086841583251953
    8. 's' → logprob: -4.086841583251953
    9. 'o' → logprob: -4.211841583251953
    10. 'ent' → logprob: -4.461841583251953

Token 12: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2826783061027527
    2. ' =' → logprob: -2.4076783657073975
    3. ' ' → logprob: -2.9076783657073975
    4. ',' → logprob: -3.1576783657073975
    5. 'n' → logprob: -3.4076783657073975
    6. '.' → logprob: -4.532678127288818
    7. '_' → logprob: -4.782678127288818
    8. 'e' → logprob: -5.782678127288818
    9. ':' → logprob: -6.657678127288818
    10. '```' → logprob: -7.782678127288818

Token 13: ''est' (ID: 6616)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.6250528693199158
    2. ''' → logprob: -2.1250529289245605
    3. 'omm' → logprob: -2.7500529289245605
    4. ''est' → logprob: -2.7500529289245605
    5. 'e' → logprob: -3.0000529289245605
    6. 'a' → logprob: -3.0000529289245605
    7. 'o' → logprob: -4.1250529289245605
    8. 'est' → logprob: -4.3750529289245605
    9. '```' → logprob: -4.5000529289245605
    10. ''''' → logprob: -5.0000529289245605

Token 14: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.321051836013794
    2. 'une' → logprob: -1.446051836013794
    3. 'la' → logprob: -2.196051836013794
    4. ' un' → logprob: -2.321051836013794
    5. ' une' → logprob: -2.446051836013794
    6. ' la' → logprob: -2.821051836013794
    7. ' le' → logprob: -2.821051836013794
    8. 'un' → logprob: -3.196051836013794
    9. 'l' → logprob: -5.196051597595215
    10. '=' → logprob: -5.321051597595215

Token 15: ' longueur' (ID: 104613)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45092087984085083
    2. '=' → logprob: -1.825920820236206
    3. ' ' → logprob: -2.450920820236206
    4. 'n' → logprob: -3.825920820236206
    5. ' valeur' → logprob: -3.950920820236206
    6. ':' → logprob: -4.700921058654785
    7. '.' → logprob: -4.700921058654785
    8. ' n' → logprob: -4.700921058654785
    9. ',' → logprob: -4.825921058654785
    10. ' variable' → logprob: -5.450921058654785

Token 16: ' ?
' (ID: 19740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0940895602107048
    2. ' ' → logprob: -2.8440895080566406
    3. ')' → logprob: -4.844089508056641
    4. ',' → logprob: -5.469089508056641
    5. '=' → logprob: -5.469089508056641
    6. ' de' → logprob: -5.469089508056641
    7. ' =' → logprob: -5.969089508056641
    8. 'n' → logprob: -5.969089508056641
    9. '[' → logprob: -6.844089508056641
    10. '\' → logprob: -7.094089508056641

Token 17: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07755611091852188
    2. '=' → logprob: -2.7025561332702637
    3. ',' → logprob: -5.577556133270264
    4. '_' → logprob: -6.827556133270264
    5. '.' → logprob: -7.452556133270264
    6. '\' → logprob: -7.452556133270264
    7. ' =' → logprob: -7.827556133270264
    8. ' ' → logprob: -8.077555656433105
    9. ':' → logprob: -8.827555656433105
    10. '#' → logprob: -8.952555656433105

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01419159211218357
    2. '=' → logprob: -4.264191627502441
    3. '=int' → logprob: -10.639191627502441
    4. ' ' → logprob: -13.264191627502441
    5. '=input' → logprob: -14.264191627502441
    6. ' ' → logprob: -14.514191627502441
    7. ',' → logprob: -14.889191627502441
    8. ')' → logprob: -15.639191627502441
    9. ' =
' → logprob: -15.764191627502441
    10. ' =
' → logprob: -16.139190673828125

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10309271514415741
    2. 'int' → logprob: -2.353092670440674
    3. ' len' → logprob: -5.978092670440674
    4. 'len' → logprob: -8.853093147277832
    5. ' ' → logprob: -9.353093147277832
    6. ' input' → logprob: -9.353093147277832
    7. 'input' → logprob: -10.978093147277832
    8. ' sys' → logprob: -11.728093147277832
    9. ' ' → logprob: -13.603093147277832
    10. ' n' → logprob: -13.603093147277832

Token 20: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011113489978015423
    2. '(input' → logprob: -4.63611364364624
    3. '(sys' → logprob: -6.63611364364624
    4. ' (' → logprob: -11.136113166809082
    5. '(
' → logprob: -11.386113166809082
    6. '('' → logprob: -11.886113166809082
    7. '(s' → logprob: -12.511113166809082
    8. 'input' → logprob: -12.636113166809082
    9. '()' → logprob: -13.761113166809082
    10. '(

' → logprob: -14.136113166809082

Token 21: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7450760006904602
    2. '.stdin' → logprob: -0.7450760006904602
    3. '.argv' → logprob: -2.9950759410858154
    4. '.readline' → logprob: -8.245076179504395
    5. '.input' → logprob: -9.120076179504395
    6. ' .' → logprob: -9.120076179504395
    7. '.import' → logprob: -10.620076179504395
    8. '.stdout' → logprob: -10.870076179504395
    9. '.std' → logprob: -11.120076179504395
    10. '.read' → logprob: -11.495076179504395

Token 22: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3490903973579407
    2. '.' → logprob: -1.349090337753296
    3. '.read' → logprob: -3.349090337753296
    4. '.)' → logprob: -10.349090576171875
    5. '.Read' → logprob: -10.849090576171875
    6. ')' → logprob: -11.724090576171875
    7. ' .' → logprob: -11.849090576171875
    8. '.readlines' → logprob: -12.599090576171875
    9. '.READ' → logprob: -13.224090576171875
    10. '.')' → logprob: -13.349090576171875

Token 23: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012810753658413887
    2. '()' → logprob: -4.387810707092285
    3. '(' → logprob: -9.012810707092285
    4. ' ())' → logprob: -9.137810707092285
    5. ')' → logprob: -10.387810707092285
    6. '()))' → logprob: -10.637810707092285
    7. '().' → logprob: -11.762810707092285
    8. '();)' → logprob: -13.012810707092285
    9. '()]' → logprob: -13.637810707092285
    10. '()),' → logprob: -13.887810707092285

Token 24: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0011821311200037599
    2. 'rstrip' → logprob: -6.7511820793151855
    3. ')' → logprob: -12.251182556152344
    4. ' strip' → logprob: -12.376182556152344
    5. '_strip' → logprob: -13.251182556152344
    6. 'read' → logprob: -14.501182556152344
    7. '-strip' → logprob: -14.751182556152344
    8. '(strip' → logprob: -16.626182556152344
    9. '())' → logprob: -16.751182556152344
    10. 'replace' → logprob: -17.251182556152344

Token 25: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.26537588238716125
    2. ')' → logprob: -1.5153758525848389
    3. '()' → logprob: -5.015376091003418
    4. '()))' → logprob: -5.640376091003418
    5. '))' → logprob: -5.765376091003418
    6. '(' → logprob: -11.140376091003418
    7. ' ())' → logprob: -11.640376091003418
    8. '())
' → logprob: -12.015376091003418
    9. ' )' → logprob: -13.265376091003418
    10. '()),' → logprob: -14.015376091003418

Token 26: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.109655499458313
    2. 'a' → logprob: -1.109655499458313
    3. 'for' → logprob: -2.1096553802490234
    4. 'n' → logprob: -2.6096553802490234
    5. 'i' → logprob: -3.2346553802490234
    6. '\n' → logprob: -3.8596553802490234
    7. 'data' → logprob: -4.234655380249023
    8. 'x' → logprob: -4.484655380249023
    9. ')' → logprob: -4.734655380249023
    10. 's' → logprob: -4.984655380249023

Token 27: ' J' (ID: 643)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7080644369125366
    2. 'data' → logprob: -2.083064556121826
    3. ' data' → logprob: -2.833064556121826
    4. ' a' → logprob: -2.833064556121826
    5. 's' → logprob: -2.958064556121826
    6. ' ' → logprob: -3.208064556121826
    7. 'result' → logprob: -3.583064556121826
    8. 'x' → logprob: -4.083064556121826
    9. 'arr' → logprob: -4.583064556121826
    10. ' result' → logprob: -4.708064556121826

Token 28: ''ex' (ID: 23472)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0007408959208987653
    2. ''' → logprob: -8.625741004943848
    3. 'a' → logprob: -8.625741004943848
    4. 'u' → logprob: -9.000741004943848
    5. ''ai' → logprob: -10.000741004943848
    6. 'uste' → logprob: -10.125741004943848
    7. ''ob' → logprob: -11.125741004943848
    8. ''aj' → logprob: -11.125741004943848
    9. ''é' → logprob: -11.250741004943848
    10. ''aime' → logprob: -11.250741004943848

Token 29: 'tra' (ID: 1787)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éc' → logprob: -1.2209985256195068
    2. 'plique' → logprob: -1.4709985256195068
    3. 'ecute' → logprob: -1.8459985256195068
    4. 'é' → logprob: -2.095998525619507
    5. 'plore' → logprob: -2.470998525619507
    6. 'e' → logprob: -2.970998525619507
    7. '#' → logprob: -3.595998525619507
    8. 'ec' → logprob: -5.095998764038086
    9. 'plic' → logprob: -5.220998764038086
    10. 'emple' → logprob: -6.470998764038086

Token 30: 'is' (ID: 276)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.4777543246746063
    2. 'ire' → logprob: -1.8527543544769287
    3. 'cte' → logprob: -1.9777543544769287
    4. 'is' → logprob: -3.3527543544769287
    5. 'ite' → logprob: -5.10275411605835
    6. '#' → logprob: -5.10275411605835
    7. 'i' → logprob: -5.35275411605835
    8. 'ction' → logprob: -5.35275411605835
    9. 'm' → logprob: -5.47775411605835
    10. 'me' → logprob: -6.10275411605835

Token 31: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5474932193756104
    2. '_' → logprob: -1.5474932193756104
    3. '<|end|>' → logprob: -3.1724932193756104
    4. 's' → logprob: -3.6724932193756104
    5. '<|end|>' → logprob: -3.7974932193756104
    6. '(' → logprob: -4.047492980957031
    7. 'n' → logprob: -4.172492980957031
    8. '[' → logprob: -4.797492980957031
    9. '()' → logprob: -4.797492980957031
    10. ' la' → logprob: -4.922492980957031

Token 32: ' deux' (ID: 10301)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.48810237646102905
    2. ' data' → logprob: -2.738102436065674
    3. 'élé' → logprob: -2.738102436065674
    4. ' valeurs' → logprob: -2.863102436065674
    5. ' nombres' → logprob: -3.488102436065674
    6. 'd' → logprob: -3.738102436065674
    7. ' caractères' → logprob: -4.113102436065674
    8. 'data' → logprob: -4.113102436065674
    9. ' elements' → logprob: -4.363102436065674
    10. ' éléments' → logprob: -4.363102436065674

Token 33: ' chaînes' (ID: 179904)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.7078475952148438
    2. '_' → logprob: -1.9578475952148438
    3. ' lignes' → logprob: -2.0828475952148438
    4. 'n' → logprob: -2.8328475952148438
    5. ' tokens' → logprob: -2.9578475952148438
    6. ' premières' → logprob: -2.9578475952148438
    7. 'prem' → logprob: -3.3328475952148438
    8. ' variables' → logprob: -3.4578475952148438
    9. 'val' → logprob: -3.4578475952148438
    10. ' lines' → logprob: -3.7078475952148438

Token 34: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.178302600979805
    2. ' s' → logprob: -2.303302526473999
    3. 'a' → logprob: -3.178302526473999
    4. ' a' → logprob: -5.553302764892578
    5. 'n' → logprob: -5.553302764892578
    6. 'tokens' → logprob: -6.053302764892578
    7. 'strings' → logprob: -6.803302764892578
    8. '_' → logprob: -7.053302764892578
    9. ' strings' → logprob: -7.303302764892578
    10. 't' → logprob: -7.303302764892578

Token 35: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2887711524963379
    2. 's' → logprob: -2.038771152496338
    3. 'a' → logprob: -3.913771152496338
    4. ' str' → logprob: -4.163771152496338
    5. ' string' → logprob: -4.163771152496338
    6. 'chaine' → logprob: -4.163771152496338
    7. ' a' → logprob: -4.288771152496338
    8. ' strings' → logprob: -5.163771152496338
    9. 'str' → logprob: -5.288771152496338
    10. ' chaine' → logprob: -5.288771152496338

Token 36: ' et' (ID: 859)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18403179943561554
    2. ' =' → logprob: -1.8090318441390991
    3. '_' → logprob: -6.559031963348389
    4. 'tring' → logprob: -7.184031963348389
    5. '=' → logprob: -7.684031963348389
    6. 'tr' → logprob: -8.30903148651123
    7. 's' → logprob: -8.30903148651123
    8. ',' → logprob: -8.43403148651123
    9. ' ' → logprob: -8.55903148651123
    10. 'a' → logprob: -8.68403148651123

Token 37: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04744821414351463
    2. ' t' → logprob: -3.17244815826416
    3. 'p' → logprob: -5.67244815826416
    4. 's' → logprob: -7.67244815826416
    5. ' p' → logprob: -8.42244815826416
    6. 'r' → logprob: -9.54744815826416
    7. 'e' → logprob: -10.17244815826416
    8. 'd' → logprob: -10.54744815826416
    9. 'b' → logprob: -10.79744815826416
    10. ' s' → logprob: -10.79744815826416

Token 38: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008882334805093706
    2. ' s' → logprob: -7.375888347625732
    3. '```' → logprob: -9.250887870788574
    4. 'n' → logprob: -9.875887870788574
    5. '
' → logprob: -10.375887870788574
    6. ' =' → logprob: -11.250887870788574
    7. '\n' → logprob: -11.500887870788574
    8. ',' → logprob: -11.625887870788574
    9. '`s' → logprob: -11.875887870788574
    10. '\' → logprob: -11.875887870788574

Token 39: 'temp' (ID: 7340)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005576779949478805
    2. ' s' → logprob: -7.500557899475098
    3. '```' → logprob: -12.625557899475098
    4. '`s' → logprob: -14.375557899475098
    5. '_s' → logprob: -14.500557899475098
    6. 'for' → logprob: -16.62555694580078
    7. ''s' → logprob: -16.62555694580078
    8. '``' → logprob: -16.87555694580078
    9. ',' → logprob: -17.62555694580078
    10. '.s' → logprob: -17.75055694580078

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018534772098064423
    2. '=' → logprob: -4.6435346603393555
    3. '_' → logprob: -5.6435346603393555
    4. 's' → logprob: -5.7685346603393555
    5. 'es' → logprob: -6.5185346603393555
    6. 'e' → logprob: -8.518534660339355
    7. '_strings' → logprob: -9.143534660339355
    8. '_lines' → logprob: -9.768534660339355
    9. '_s' → logprob: -9.893534660339355
    10. '_input' → logprob: -10.393534660339355

Token 41: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.31328871846199036
    2. 'sys' → logprob: -1.313288688659668
    3. '=sys' → logprob: -11.188288688659668
    4. 'input' → logprob: -12.813288688659668
    5. '(sys' → logprob: -12.813288688659668
    6. '	sys' → logprob: -13.188288688659668
    7. 's' → logprob: -13.563288688659668
    8. ' [' → logprob: -13.938288688659668
    9. ' input' → logprob: -13.938288688659668
    10. ' ' → logprob: -14.188288688659668

Token 42: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.764977686339989e-05
    2. '.' → logprob: -10.500057220458984
    3. '.stdout' → logprob: -10.750057220458984
    4. '.std' → logprob: -12.375057220458984
    5. '.argv' → logprob: -13.375057220458984
    6. 'stdin' → logprob: -13.500057220458984
    7. '.readline' → logprob: -13.875057220458984
    8. '.st' → logprob: -14.875057220458984
    9. ' .' → logprob: -17.000057220458984
    10. '(stdin' → logprob: -17.000057220458984

Token 43: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.696889623621246e-06
    2. '.readlines' → logprob: -13.00000286102295
    3. '.' → logprob: -15.37500286102295
    4. ' readline' → logprob: -16.750001907348633
    5. '.read' → logprob: -17.250001907348633
    6. 'read' → logprob: -18.625001907348633
    7. '```' → logprob: -18.875001907348633
    8. '.stdin' → logprob: -20.000001907348633
    9. '_read' → logprob: -21.125001907348633
    10. '_reader' → logprob: -21.750001907348633

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.47413793206214905
    2. '()' → logprob: -0.9741379022598267
    3. '.' → logprob: -11.474138259887695
    4. '()
' → logprob: -11.849138259887695
    5. '()

' → logprob: -11.974138259887695
    6. '()).' → logprob: -11.974138259887695
    7. '(' → logprob: -12.224138259887695
    8. '())' → logprob: -12.349138259887695
    9. ')' → logprob: -12.474138259887695
    10. ' ()' → logprob: -12.474138259887695

Token 45: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.700132997939363e-05
    2. 'rstrip' → logprob: -11.500017166137695
    3. 'split' → logprob: -12.000017166137695
    4. ' strip' → logprob: -14.250017166137695
    5. '(strip' → logprob: -19.000017166137695
    6. '.strip' → logprob: -20.375017166137695
    7. '_strip' → logprob: -20.375017166137695
    8. 'str' → logprob: -20.875017166137695
    9. 'stripe' → logprob: -21.125017166137695
    10. 'read' → logprob: -21.375017166137695

Token 46: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026376008987426758
    2. '(' → logprob: -3.6513760089874268
    3. ' ()' → logprob: -10.776375770568848
    4. '()`' → logprob: -11.651375770568848
    5. '())' → logprob: -11.901375770568848
    6. '().' → logprob: -12.151375770568848
    7. ')' → logprob: -12.401375770568848
    8. '()
' → logprob: -12.526375770568848
    9. '`()' → logprob: -12.526375770568848
    10. '()>' → logprob: -12.776375770568848

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. 's' → logprob: -14.12500286102295
    3. 'spl' → logprob: -14.12500286102295
    4. ' split' → logprob: -14.50000286102295
    5. '(split' → logprob: -15.62500286102295
    6. 'rstrip' → logprob: -15.87500286102295
    7. 'sp' → logprob: -16.000001907348633
    8. 'strip' → logprob: -16.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. 'replace' → logprob: -18.750001907348633

Token 48: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1502358615398407
    2. '(' → logprob: -2.025235891342163
    3. '("("' → logprob: -5.025235652923584
    4. '()' → logprob: -7.025235652923584
    5. '("' → logprob: -10.400236129760742
    6. '(`' → logprob: -11.525236129760742
    7. ''' → logprob: -12.025236129760742
    8. '(',' → logprob: -12.150236129760742
    9. '(('' → logprob: -12.650236129760742
    10. '('(' → logprob: -12.775236129760742

Token 49: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.512236498361744e-07
    2. ' s' → logprob: -15.000000953674316
    3. '`s' → logprob: -16.25
    4. '```' → logprob: -17.75
    5. '(s' → logprob: -19.25
    6. ''s' → logprob: -19.375
    7. 'n' → logprob: -19.625
    8. '`' → logprob: -19.875
    9. 'a' → logprob: -20.625
    10. '_s' → logprob: -20.75

Token 50: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002066398970782757
    2. '[' → logprob: -7.127066612243652
    3. ' ,' → logprob: -7.377066612243652
    4. ',s' → logprob: -7.877066612243652
    5. '=' → logprob: -9.502066612243652
    6. ' =' → logprob: -9.627066612243652
    7. 's' → logprob: -9.627066612243652
    8. ')' → logprob: -11.002066612243652
    9. ',t' → logprob: -11.377066612243652
    10. ',n' → logprob: -12.002066612243652

Token 51: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.3868730664253235
    2. ' temp' → logprob: -1.1368730068206787
    3. 'str' → logprob: -13.886873245239258
    4. 't' → logprob: -15.261873245239258
    5. ' ' → logprob: -15.886873245239258
    6. '(temp' → logprob: -15.886873245239258
    7. '	temp' → logprob: -16.011873245239258
    8. 'tem' → logprob: -16.136873245239258
    9. 's' → logprob: -16.261873245239258
    10. 'tmp' → logprob: -16.261873245239258

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -12.250007629394531
    3. '0' → logprob: -13.375007629394531
    4. '()[' → logprob: -14.000007629394531
    5. '()' → logprob: -16.50000762939453
    6. '\[' → logprob: -16.87500762939453
    7. '[
' → logprob: -17.25000762939453
    8. '```' → logprob: -17.50000762939453
    9. ' [' → logprob: -17.62500762939453
    10. '[int' → logprob: -20.00000762939453

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '1' → logprob: -19.0
    4. '۰' → logprob: -20.875
    5. '-' → logprob: -21.0
    6. '０' → logprob: -21.375
    7. '00' → logprob: -22.0
    8. ''' → logprob: -22.375
    9. '٠' → logprob: -22.375
    10. ']' → logprob: -22.5

Token 54: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018935515254270285
    2. ' ]' → logprob: -8.625189781188965
    3. ']
' → logprob: -11.875189781188965
    4. '']' → logprob: -13.250189781188965
    5. ']

' → logprob: -14.125189781188965
    6. '],' → logprob: -16.37518882751465
    7. '"]' → logprob: -16.75018882751465
    8. ',' → logprob: -17.12518882751465
    9. '`]' → logprob: -18.00018882751465
    10. ')' → logprob: -18.12518882751465

Token 55: 't' (ID: 83)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6346141695976257
    2. 't' → logprob: -0.7596141695976257
    3. 's' → logprob: -7.009613990783691
    4. ' ' → logprob: -7.134613990783691
    5. '<|end|>' → logprob: -8.759613990783691
    6. ' 
' → logprob: -9.509613990783691
    7. ' s' → logprob: -10.634613990783691
    8. ' ' → logprob: -10.759613990783691
    9. '  
' → logprob: -10.884613990783691
    10. ' ,' → logprob: -12.634613990783691

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7591296434402466
    2. ' =' → logprob: -0.7591296434402466
    3. '[' → logprob: -2.759129524230957
    4. ' ' → logprob: -9.259129524230957
    5. ')' → logprob: -9.259129524230957
    6. 's' → logprob: -9.384129524230957
    7. '[]' → logprob: -9.509129524230957
    8. ']' → logprob: -9.634129524230957
    9. '[:]' → logprob: -11.134129524230957
    10. '.' → logprob: -11.259129524230957

Token 57: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.2014143168926239
    2. ' temp' → logprob: -1.7014143466949463
    3. 's' → logprob: -14.326414108276367
    4. 'tmp' → logprob: -16.326414108276367
    5. '	temp' → logprob: -16.826414108276367
    6. 't' → logprob: -16.951414108276367
    7. ' s' → logprob: -17.076414108276367
    8. '(temp' → logprob: -17.076414108276367
    9. '$temp' → logprob: -17.326414108276367
    10. ' ' → logprob: -17.701414108276367

Token 58: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.2987729102605954e-05
    2. '1' → logprob: -10.125042915344238
    3. ' [' → logprob: -12.875042915344238
    4. '```' → logprob: -16.000043869018555
    5. '0' → logprob: -16.250043869018555
    6. 's' → logprob: -17.500043869018555
    7. '\[' → logprob: -17.750043869018555
    8. '2' → logprob: -18.000043869018555
    9. '[-' → logprob: -18.625043869018555
    10. '[
' → logprob: -18.750043869018555

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033677343162707984
    2. '0' → logprob: -8.000336647033691
    3. ' ' → logprob: -14.125336647033691
    4. ']' → logprob: -15.125336647033691
    5. '2' → logprob: -16.500337600708008
    6. '])' → logprob: -16.500337600708008
    7. '-' → logprob: -16.500337600708008
    8. '```' → logprob: -17.500337600708008
    9. '   ' → logprob: -18.625337600708008
    10. '  ' → logprob: -18.625337600708008

Token 60: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0490630567073822
    2. ']' → logprob: -3.049062967300415
    3. '])' → logprob: -7.674063205718994
    4. ')]' → logprob: -12.299062728881836
    5. '）' → logprob: -13.049062728881836
    6. '}' → logprob: -13.549062728881836
    7. '[' → logprob: -13.924062728881836
    8. '']' → logprob: -14.924062728881836
    9. '')' → logprob: -14.924062728881836
    10. '))' → logprob: -15.674062728881836

Token 61: 'res' (ID: 430)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6159278750419617
    2. 'i' → logprob: -1.7409279346466064
    3. 'if' → logprob: -2.1159279346466064
    4. 'for' → logprob: -2.1159279346466064
    5. 'n' → logprob: -4.615927696228027
    6. 'result' → logprob: -5.115927696228027
    7. 'f' → logprob: -5.615927696228027
    8. 'a' → logprob: -5.615927696228027
    9. 'd' → logprob: -5.615927696228027
    10. 'm' → logprob: -5.865927696228027

Token 62: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.14492881298065186
    2. ' =' → logprob: -2.8949289321899414
    3. 'u' → logprob: -3.7699289321899414
    4. '=' → logprob: -3.7699289321899414
    5. 'ults' → logprob: -4.019928932189941
    6. 'ultat' → logprob: -4.519928932189941
    7. 'ul' → logprob: -5.769928932189941
    8. 'ULT' → logprob: -7.269928932189941
    9. 'ault' → logprob: -8.269928932189941
    10. '_' → logprob: -8.519928932189941

Token 63: ' ""' (ID: 3216)
  Prédit: ' ""'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ""' → logprob: -1.1534936428070068
    2. '""' → logprob: -1.4034936428070068
    3. ' []' → logprob: -1.6534936428070068
    4. '0' → logprob: -2.028493642807007
    5. '[]' → logprob: -3.403493642807007
    6. ' ''' → logprob: -3.528493642807007
    7. '"' → logprob: -3.778493642807007
    8. ' ' → logprob: -3.903493642807007
    9. '''' → logprob: -5.153493881225586
    10. ' "' → logprob: -6.153493881225586

Token 64: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0985422432422638
    2. '
' → logprob: -2.5985422134399414
    3. '\n' → logprob: -4.723542213439941
    4. ' for' → logprob: -5.098542213439941
    5. 'i' → logprob: -6.223542213439941
    6. 'if' → logprob: -7.223542213439941
    7. '\' → logprob: -7.598542213439941
    8. 'f' → logprob: -7.973542213439941
    9. '' → logprob: -8.473542213439941
    10. ' 
' → logprob: -8.723542213439941

Token 65: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7251973748207092
    2. 'for' → logprob: -0.8501973748207092
    3. ' ' → logprob: -2.4751973152160645
    4. 'i' → logprob: -7.1001973152160645
    5. ' 
' → logprob: -7.6001973152160645
    6. '#' → logprob: -7.7251973152160645
    7. '_' → logprob: -7.9751973152160645
    8. ' if' → logprob: -8.100197792053223
    9. 'if' → logprob: -8.350197792053223
    10. 'f' → logprob: -8.350197792053223

Token 66: ' stock' (ID: 6546)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2199181467294693
    2. ' ' → logprob: -1.969918131828308
    3. '_' → logprob: -4.094918251037598
    4. ' _' → logprob: -4.219918251037598
    5. ' l' → logprob: -4.844918251037598
    6. 'i' → logprob: -4.969918251037598
    7. ' c' → logprob: -5.844918251037598
    8. '  ' → logprob: -6.594918251037598
    9. 'r' → logprob: -7.094918251037598
    10. ' r' → logprob: -7.219918251037598

Token 67: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.002214250387623906
    2. 'e' → logprob: -6.127214431762695
    3. 'é' → logprob: -10.627214431762695
    4. '#' → logprob: -12.502214431762695
    5. 'r' → logprob: -15.002214431762695
    6. 'a' → logprob: -15.002214431762695
    7. 'u' → logprob: -16.127214431762695
    8. '­er' → logprob: -16.377214431762695
    9. '```' → logprob: -16.502214431762695
    10. 'е' → logprob: -17.127214431762695

Token 68: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17598029971122742
    2. '<|end|>' → logprob: -2.67598032951355
    3. ' la' → logprob: -3.80098032951355
    4. ' l' → logprob: -4.425980091094971
    5. 's' → logprob: -4.425980091094971
    6. ' the' → logprob: -4.925980091094971
    7. 'l' → logprob: -5.050980091094971
    8. '_' → logprob: -5.300980091094971
    9. ' le' → logprob: -5.425980091094971
    10. ' les' → logprob: -6.050980091094971

Token 69: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.1072196438908577
    2. 'rés' → logprob: -2.482219696044922
    3. ' resultat' → logprob: -4.982219696044922
    4. 'result' → logprob: -5.857219696044922
    5. 'r' → logprob: -6.232219696044922
    6. ' result' → logprob: -6.357219696044922
    7. ' rés' → logprob: -6.732219696044922
    8. ' résult' → logprob: -7.232219696044922
    9. ' code' → logprob: -7.232219696044922
    10. 's' → logprob: -7.982219696044922

Token 70: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14103814959526062
    2. '
' → logprob: -2.891038179397583
    3. ' for' → logprob: -3.391038179397583
    4. 'i' → logprob: -3.766038179397583
    5. '\n' → logprob: -4.391037940979004
    6. 'f' → logprob: -6.266037940979004
    7. ' ' → logprob: -6.891037940979004
    8. ' 
' → logprob: -7.141037940979004
    9. '\' → logprob: -7.516037940979004
    10. '' → logprob: -7.766037940979004

Token 71: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17070956528186798
    2. 'i' → logprob: -1.9207096099853516
    3. 'f' → logprob: -4.795709609985352
    4. ' for' → logprob: -6.920709609985352
    5. '
' → logprob: -7.920709609985352
    6. 'if' → logprob: -8.670709609985352
    7. '#' → logprob: -8.795709609985352
    8. 'n' → logprob: -9.170709609985352
    9. '_' → logprob: -9.545709609985352
    10. '.' → logprob: -9.920709609985352

Token 72: ' petite' (ID: 28119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2007883671903983e-05
    2. 'i' → logprob: -11.250021934509277
    3. ' for' → logprob: -11.750021934509277
    4. '```' → logprob: -14.875021934509277
    5. 'fo' → logprob: -15.500021934509277
    6. 'if' → logprob: -15.750021934509277
    7. 'f' → logprob: -15.750021934509277
    8. 'For' → logprob: -16.875022888183594
    9. '#' → logprob: -17.250022888183594
    10. 'range' → logprob: -17.750022888183594

Token 73: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8347266912460327
    2. 'for' → logprob: -0.8347266912460327
    3. ' boucle' → logprob: -2.2097268104553223
    4. 's' → logprob: -3.9597268104553223
    5. '_' → logprob: -6.584726810455322
    6. 'bou' → logprob: -7.584726810455322
    7. ' ' → logprob: -8.084726333618164
    8. ' loop' → logprob: -8.584726333618164
    9. 'f' → logprob: -8.834726333618164
    10. 'space' → logprob: -9.334726333618164

Token 74: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16144037246704102
    2. 'for' → logprob: -1.911440372467041
    3. 'i' → logprob: -7.161440372467041
    4. ' i' → logprob: -7.911440372467041
    5. 'f' → logprob: -10.411439895629883
    6. ' ' → logprob: -10.786439895629883
    7. ' f' → logprob: -11.161439895629883
    8. '
' → logprob: -13.411439895629883
    9. ' 
' → logprob: -13.786439895629883
    10. ':' → logprob: -14.036439895629883

Token 75: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.481766015291214
    2. ' for' → logprob: -0.9817659854888916
    3. 'i' → logprob: -5.856766223907471
    4. ' i' → logprob: -5.981766223907471
    5. ' ' → logprob: -6.106766223907471
    6. 'f' → logprob: -10.606765747070312
    7. 's' → logprob: -12.106765747070312
    8. ' ' → logprob: -12.606765747070312
    9. 'pour' → logprob: -13.731765747070312
    10. 'range' → logprob: -13.856765747070312

Token 76: ' suppose' (ID: 35968)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3155626654624939
    2. 'for' → logprob: -1.3155627250671387
    3. ' range' → logprob: -7.440562725067139
    4. 'range' → logprob: -7.565562725067139
    5. ' va' → logprob: -7.815562725067139
    6. ' veut' → logprob: -8.56556224822998
    7. ' pour' → logprob: -9.31556224822998
    8. ' continue' → logprob: -9.81556224822998
    9. ' a' → logprob: -10.19056224822998
    10. 's' → logprob: -10.69056224822998

Token 77: ' que' (ID: 661)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2020607739686966
    2. 'for' → logprob: -1.8270608186721802
    3. ' i' → logprob: -4.452060699462891
    4. ' ' → logprob: -4.827060699462891
    5. 'i' → logprob: -7.702060699462891
    6. '  ' → logprob: -7.827060699462891
    7. 'n' → logprob: -8.20206069946289
    8. ' ' → logprob: -8.32706069946289
    9. ' that' → logprob: -8.45206069946289
    10. '   ' → logprob: -8.57706069946289

Token 78: ' n' (ID: 297)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.522173285484314
    2. 'len' → logprob: -1.647173285484314
    3. ' n' → logprob: -1.897173285484314
    4. ' i' → logprob: -3.1471734046936035
    5. 'n' → logprob: -4.1471734046936035
    6. 'i' → logprob: -6.1471734046936035
    7. ' s' → logprob: -6.6471734046936035
    8. ' for' → logprob: -7.3971734046936035
    9. 's' → logprob: -8.147172927856445
    10. ' ' → logprob: -8.272172927856445

Token 79: ' fait' (ID: 7473)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.0420969724655151
    2. '>' → logprob: -1.1670969724655151
    3. ' =' → logprob: -2.1670970916748047
    4. '=' → logprob: -2.4170970916748047
    5. ' ' → logprob: -3.5420970916748047
    6. ' for' → logprob: -4.167097091674805
    7. '#' → logprob: -4.292097091674805
    8. ':' → logprob: -4.292097091674805
    9. ' is' → logprob: -4.542097091674805
    10. 'for' → logprob: -4.792097091674805

Token 80: ' sens' (ID: 5050)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7762618064880371
    2. ' la' → logprob: -1.776261806488037
    3. ' bien' → logprob: -1.776261806488037
    4. ' len' → logprob: -2.901261806488037
    5. ' n' → logprob: -3.151261806488037
    6. 'n' → logprob: -3.901261806488037
    7. 'len' → logprob: -4.026261806488037
    8. 'bien' → logprob: -4.526261806488037
    9. 'la' → logprob: -5.276261806488037
    10. ' exactly' → logprob: -5.276261806488037

Token 81: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34867292642593384
    2. 'for' → logprob: -1.223672866821289
    3. '<|end|>' → logprob: -9.598672866821289
    4. '```' → logprob: -9.723672866821289
    5. ' ' → logprob: -10.723672866821289
    6. '
' → logprob: -10.723672866821289
    7. 'i' → logprob: -10.723672866821289
    8. '\n' → logprob: -11.973672866821289
    9. ' i' → logprob: -12.473672866821289
    10. '<|end|>' → logprob: -12.473672866821289

Token 82: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022094044834375381
    2. ' for' → logprob: -8.500221252441406
    3. '
' → logprob: -11.500221252441406
    4. '```' → logprob: -12.125221252441406
    5. 'i' → logprob: -13.375221252441406
    6. 'f' → logprob: -16.125221252441406
    7. '\n' → logprob: -16.750221252441406
    8. '``' → logprob: -16.875221252441406
    9. 'n' → logprob: -17.250221252441406
    10. 'fo' → logprob: -17.625221252441406

Token 83: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3897324204444885
    2. ' ' → logprob: -1.1397323608398438
    3. '_' → logprob: -6.889732360839844
    4. ' _' → logprob: -7.139732360839844
    5. '  ' → logprob: -7.389732360839844
    6. 'i' → logprob: -8.139732360839844
    7. ' ‌' → logprob: -9.139732360839844
    8. ' ​' → logprob: -11.889732360839844
    9. ' ﻿' → logprob: -12.139732360839844
    10. ' ▁' → logprob: -12.764732360839844

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013509475626051426
    2. ' ' → logprob: -4.888509273529053
    3. 'in' → logprob: -5.138509273529053
    4. ',' → logprob: -12.263509750366211
    5. ' ,' → logprob: -13.138509750366211
    6. '```' → logprob: -13.263509750366211
    7. ' i' → logprob: -13.388509750366211
    8. '  ' → logprob: -13.513509750366211
    9. '<|end|>' → logprob: -13.888509750366211
    10. ' ' → logprob: -13.888509750366211

Token 85: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008631822653114796
    2. 'range' → logprob: -4.758631706237793
    3. ' xrange' → logprob: -11.883631706237793
    4. ' ' → logprob: -12.383631706237793
    5. '	range' → logprob: -12.633631706237793
    6. '(range' → logprob: -13.633631706237793
    7. 'n' → logprob: -14.633631706237793
    8. ' rang' → logprob: -15.258631706237793
    9. '```' → logprob: -15.633631706237793
    10. ' ran' → logprob: -15.758631706237793

Token 86: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.062118370085954666
    2. '(' → logprob: -2.8121182918548584
    3. ' (' → logprob: -8.812118530273438
    4. ' n' → logprob: -14.187118530273438
    5. '(
' → logprob: -14.312118530273438
    6. '(len' → logprob: -15.062118530273438
    7. 'n' → logprob: -16.437118530273438
    8. '(s' → logprob: -17.437118530273438
    9. '(int' → logprob: -17.937118530273438
    10. '(i' → logprob: -18.312118530273438

Token 87: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006715967319905758
    2. ' n' → logprob: -5.006715774536133
    3. ')n' → logprob: -15.006715774536133
    4. '0' → logprob: -16.006715774536133
    5. ')' → logprob: -16.756715774536133
    6. '1' → logprob: -17.631715774536133
    7. '(n' → logprob: -18.631715774536133
    8. '	n' → logprob: -18.881715774536133
    9. ' ' → logprob: -19.881715774536133
    10. ',n' → logprob: -20.131715774536133

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1729363054037094
    2. ',n' → logprob: -1.9229363203048706
    3. ' ,' → logprob: -4.67293643951416
    4. 'n' → logprob: -5.92293643951416
    5. ' n' → logprob: -7.54793643951416
    6. '(n' → logprob: -10.54793643951416
    7. ' ' → logprob: -10.92293643951416
    8. ')' → logprob: -11.29793643951416
    9. '	n' → logprob: -11.79793643951416
    10. '<n' → logprob: -11.92293643951416

Token 89: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1602243334054947
    2. 'n' → logprob: -1.9102243185043335
    3. ')n' → logprob: -16.53522491455078
    4. ' ' → logprob: -17.16022491455078
    5. '	n' → logprob: -17.41022491455078
    6. ' len' → logprob: -18.03522491455078
    7. ')' → logprob: -18.03522491455078
    8. ' ' → logprob: -18.16022491455078
    9. ',n' → logprob: -18.91022491455078
    10. 'len' → logprob: -19.16022491455078

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000536232371814549
    2. ' ):' → logprob: -8.12553596496582
    3. ')' → logprob: -9.25053596496582
    4. '):
' → logprob: -9.50053596496582
    5. ':' → logprob: -9.62553596496582
    6. '+' → logprob: -13.62553596496582
    7. ',' → logprob: -14.37553596496582
    8. ' )' → logprob: -14.75053596496582
    9. '   ' → logprob: -15.62553596496582
    10. ' :' → logprob: -16.12553596496582

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07135068625211716
    2. ' res' → logprob: -2.821350574493408
    3. 'res' → logprob: -4.946350574493408
    4. ' if' → logprob: -6.321350574493408
    5. '	res' → logprob: -8.946351051330566
    6. '    
' → logprob: -9.321351051330566
    7. 'if' → logprob: -9.696351051330566
    8. '<|end|>' → logprob: -9.946351051330566
    9. '   ' → logprob: -9.946351051330566
    10. ' ' → logprob: -11.696351051330566

Token 92: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9085806012153625
    2. ' if' → logprob: -1.1585805416107178
    3. ' ' → logprob: -1.4085805416107178
    4. ' res' → logprob: -4.408580780029297
    5. 'if' → logprob: -4.908580780029297
    6. 'res' (adapté à ' res') → logprob: -5.033580780029297
    7. 's' → logprob: -5.408580780029297
    8. '    ' → logprob: -6.158580780029297
    9. ' s' → logprob: -6.658580780029297
    10. '  ' → logprob: -6.658580780029297

Token 93: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.021813945844769478
    2. '+=' → logprob: -3.8968138694763184
    3. '+' → logprob: -6.771813869476318
    4. ' +' → logprob: -9.396814346313477
    5. '+='' → logprob: -10.646814346313477
    6. '+="' → logprob: -11.146814346313477
    7. '+=(' → logprob: -13.146814346313477
    8. '.append' → logprob: -14.396814346313477
    9. ' ' → logprob: -14.521814346313477
    10. ']+=' → logprob: -14.771814346313477

Token 94: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.04002281278371811
    2. 'res' → logprob: -3.665022850036621
    3. ' s' → logprob: -4.415022850036621
    4. 's' → logprob: -6.540022850036621
    5. ' ' → logprob: -10.915022850036621
    6. '+' → logprob: -11.290022850036621
    7. ' t' → logprob: -11.540022850036621
    8. ' ' → logprob: -11.540022850036621
    9. '"' → logprob: -11.790022850036621
    10. ' "' → logprob: -12.040022850036621

Token 95: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193601846694946
    2. ' +' → logprob: -1.5019359588623047
    3. '+"' → logprob: -13.251935958862305
    4. ' +
' → logprob: -14.126935958862305
    5. '+
' → logprob: -14.126935958862305
    6. ' plus' → logprob: -14.376935958862305
    7. '+s' → logprob: -14.501935958862305
    8. '+t' → logprob: -14.876935958862305
    9. '+i' → logprob: -15.126935958862305
    10. '+n' → logprob: -15.251935958862305

Token 96: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27184364199638367
    2. 't' → logprob: -2.271843671798706
    3. ' s' → logprob: -2.396843671798706
    4. ' t' → logprob: -3.896843671798706
    5. '"' → logprob: -4.896843433380127
    6. '(' → logprob: -5.646843433380127
    7. 'chr' → logprob: -5.771843433380127
    8. '"s' → logprob: -6.396843433380127
    9. ' (' → logprob: -6.646843433380127
    10. ''' → logprob: -6.646843433380127

Token 97: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001410850090906024
    2. 'idx' → logprob: -9.375141143798828
    3. '[' → logprob: -10.375141143798828
    4. '[int' → logprob: -12.125141143798828
    5. '[i' → logprob: -12.750141143798828
    6. 's' → logprob: -12.875141143798828
    7. 't' → logprob: -12.875141143798828
    8. '[index' → logprob: -13.375141143798828
    9. '[t' → logprob: -13.750141143798828
    10. '[s' → logprob: -14.000141143798828

Token 98: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8028861880302429
    2. 'if' → logprob: -1.8028862476348877
    3. ' if' → logprob: -1.9278862476348877
    4. ')' → logprob: -2.3028862476348877
    5. '+t' → logprob: -3.0528862476348877
    6. '^' → logprob: -3.6778862476348877
    7. ' +' → logprob: -4.177886009216309
    8. ' ^' → logprob: -4.177886009216309
    9. 't' → logprob: -4.302886009216309
    10. ' t' → logprob: -5.052886009216309

Token 99: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3941291570663452
    2. '+' → logprob: -1.3941291570663452
    3. ' if' → logprob: -3.1441292762756348
    4. '<|end|>' → logprob: -3.8941292762756348
    5. ' +' → logprob: -4.769129276275635
    6. ' ' → logprob: -5.894129276275635
    7. '+
' → logprob: -7.519129276275635
    8. '^' → logprob: -8.269128799438477
    9. 't' → logprob: -8.269128799438477
    10. 'print' → logprob: -8.394128799438477

Token 100: ' res' (ID: 694)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3832845985889435
    2. 'if' → logprob: -1.258284568786621
    3. '+' → logprob: -3.883284568786621
    4. ' if' → logprob: -5.258284568786621
    5. '+t' → logprob: -6.258284568786621
    6. ' ' → logprob: -6.383284568786621
    7. ' +' → logprob: -6.633284568786621
    8. '   ' → logprob: -6.758284568786621
    9. ' t' → logprob: -7.258284568786621
    10. 'res' (adapté à ' res') → logprob: -7.633284568786621

Token 101: ' +=' (ID: 2757)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7070327401161194
    2. '+' → logprob: -1.3320326805114746
    3. ' +=' → logprob: -2.0820326805114746
    4. '+=' → logprob: -2.7070326805114746
    5. ' if' → logprob: -3.9570326805114746
    6. ' +' → logprob: -4.207032680511475
    7. 'res' → logprob: -5.582032680511475
    8. '==' → logprob: -5.832032680511475
    9. ' ==' → logprob: -5.957032680511475
    10. '!=' → logprob: -6.332032680511475

Token 102: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.038102198392152786
    2. ' t' → logprob: -3.288102149963379
    3. ' ' → logprob: -10.788102149963379
    4. '"' → logprob: -11.163102149963379
    5. ''' → logprob: -11.788102149963379
    6. 's' → logprob: -12.038102149963379
    7. '	t' → logprob: -12.913102149963379
    8. ' '' → logprob: -13.288102149963379
    9. '   ' → logprob: -13.413102149963379
    10. ' "' → logprob: -13.538102149963379

Token 103: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0003255719493608922
    2. '[' → logprob: -8.375325202941895
    3. 'idx' → logprob: -9.750325202941895
    4. ' [' → logprob: -10.750325202941895
    5. ' idx' → logprob: -12.375325202941895
    6. ' ' → logprob: -12.625325202941895
    7. '   ' → logprob: -14.125325202941895
    8. '[i' → logprob: -14.125325202941895
    9. '[index' → logprob: -14.250325202941895
    10. ''' → logprob: -14.375325202941895

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037910540122538805
    2. ')' → logprob: -6.628790855407715
    3. '}' → logprob: -6.878790855407715
    4. '']' → logprob: -6.878790855407715
    5. '<|end|>' → logprob: -8.503790855407715
    6. '"]' → logprob: -9.128790855407715
    7. ' ]' → logprob: -10.378790855407715
    8. ']
' → logprob: -11.128790855407715
    9. '[' → logprob: -11.628790855407715
    10. '#' → logprob: -11.753790855407715

Token 105: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.062030989676713943
    2. '
' → logprob: -2.8120310306549072
    3. ' print' → logprob: -10.437030792236328
    4. '<|end|>' → logprob: -11.687030792236328
    5. '```' → logprob: -11.812030792236328
    6. '\n' → logprob: -12.187030792236328
    7. '
' → logprob: -12.437030792236328
    8. '  
' → logprob: -12.937030792236328
    9. '    
' → logprob: -13.437030792236328
    10. '#' → logprob: -13.687030792236328

Token 106: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3878272473812103
    2. '
' → logprob: -1.1378272771835327
    3. '\n' → logprob: -8.012826919555664
    4. '  
' → logprob: -8.512826919555664
    5. '<|end|>' → logprob: -8.637826919555664
    6. ')' → logprob: -10.137826919555664
    7. '```' → logprob: -10.137826919555664
    8. '#' → logprob: -10.137826919555664
    9. '    
' → logprob: -10.512826919555664
    10. ' print' → logprob: -10.762826919555664

Token 107: ' ajouter' (ID: 78457)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3872002959251404
    2. '
' → logprob: -1.1372003555297852
    3. '

' → logprob: -9.137200355529785
    4. '\n' → logprob: -9.887200355529785
    5. ' print' → logprob: -9.887200355529785
    6. ' 
' → logprob: -10.262200355529785
    7. '
' → logprob: -10.387200355529785
    8. '  
' → logprob: -10.762200355529785
    9. '```' → logprob: -11.387200355529785
    10. '#' → logprob: -12.762200355529785

Token 108: ' aussi' (ID: 9894)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8438292741775513
    2. 'print' → logprob: -0.8438292741775513
    3. '\n' → logprob: -2.9688291549682617
    4. '<|end|>' → logprob: -3.3438291549682617
    5. '"\' → logprob: -3.9688291549682617
    6. 'res' → logprob: -4.843829154968262
    7. ' 
' → logprob: -5.343829154968262
    8. ' ' → logprob: -5.593829154968262
    9. '```' → logprob: -5.593829154968262
    10. 's' → logprob: -5.968829154968262

Token 109: ' t' (ID: 260)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25234901905059814
    2. '
' → logprob: -1.5023490190505981
    3. '\n' → logprob: -8.252348899841309
    4. ' print' → logprob: -9.877348899841309
    5. '
' → logprob: -10.002348899841309
    6. '  
' → logprob: -11.002348899841309
    7. '

' → logprob: -11.252348899841309
    8. '<|end|>' → logprob: -11.627348899841309
    9. ' 
' → logprob: -11.752348899841309
    10. '```' → logprob: -12.127348899841309

Token 110: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007828657515347004
    2. '
' → logprob: -4.882828712463379
    3. '<|end|>' → logprob: -8.882828712463379
    4. ' print' → logprob: -10.632828712463379
    5. '\n' → logprob: -11.007828712463379
    6. '#' → logprob: -11.382828712463379
    7. '

' → logprob: -11.632828712463379
    8. '  
' → logprob: -11.882828712463379
    9. '```' → logprob: -12.257828712463379
    10. '#print' → logprob: -12.757828712463379

Token 111: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009783862624317408
    2. '
' → logprob: -7.250978469848633
    3. '<|end|>' → logprob: -8.875978469848633
    4. '#' → logprob: -9.500978469848633
    5. ' print' → logprob: -11.250978469848633
    6. '#print' → logprob: -11.375978469848633
    7. '\n' → logprob: -11.875978469848633
    8. ')' → logprob: -12.250978469848633
    9. '```' → logprob: -12.500978469848633
    10. '  
' → logprob: -12.500978469848633

Token 112: ' Bon' (ID: 12658)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.75
    3. '#' → logprob: -17.625
    4. '#print' → logprob: -18.125
    5. 'pr' → logprob: -19.375
    6. '```' → logprob: -19.75
    7. '
' → logprob: -20.375
    8. 'import' → logprob: -21.125
    9. 'prin' → logprob: -21.375
    10. '  
' → logprob: -21.75

Token 113: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.664371848164592e-05
    2. ' print' → logprob: -11.125016212463379
    3. 'return' → logprob: -14.000016212463379
    4. 'pr' → logprob: -14.500016212463379
    5. '#' → logprob: -15.250016212463379
    6. '#print' → logprob: -16.250017166137695
    7. '<|end|>' → logprob: -16.625017166137695
    8. 'prin' → logprob: -17.125017166137695
    9. '```' → logprob: -17.250017166137695
    10. 'for' → logprob: -17.250017166137695

Token 114: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038046542555093765
    2. ' print' → logprob: -3.2880465984344482
    3. '#' → logprob: -13.038046836853027
    4. '#print' → logprob: -14.163046836853027
    5. ' on' → logprob: -14.413046836853027
    6. 'import' → logprob: -14.413046836853027
    7. '
' → logprob: -14.913046836853027
    8. '```' → logprob: -15.538046836853027
    9. 'sys' → logprob: -16.03804588317871
    10. ' sys' → logprob: -16.41304588317871

Token 115: 'ons' (ID: 1808)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4307154715061188
    2. 'print' → logprob: -1.1807154417037964
    3. 'e' → logprob: -3.180715560913086
    4. 'res' → logprob: -6.805715560913086
    5. '(res' → logprob: -9.180715560913086
    6. ' print' → logprob: -10.555715560913086
    7. 'age' → logprob: -10.680715560913086
    8. 'ons' → logprob: -10.680715560913086
    9. 'é' → logprob: -11.305715560913086
    10. 'r' → logprob: -12.055715560913086

Token 116: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.630610641877865e-06
    2. ' print' → logprob: -12.750006675720215
    3. '
' → logprob: -12.875006675720215
    4. '(' → logprob: -14.375006675720215
    5. '(print' → logprob: -14.625006675720215
    6. '```' → logprob: -18.0000057220459
    7. '()
' → logprob: -19.8750057220459
    8. 'res' → logprob: -20.0000057220459
    9. '  
' → logprob: -20.0000057220459
    10. '(
' → logprob: -20.1250057220459

Token 117: ' truc' (ID: 58342)
  Prédit: ' résultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.1491757482290268
    2. 'rés' → logprob: -2.8991756439208984
    3. ' resultat' → logprob: -3.7741756439208984
    4. 'result' → logprob: -3.8991756439208984
    5. ' result' → logprob: -4.149175643920898
    6. 'r' → logprob: -4.149175643920898
    7. 'res' → logprob: -5.899175643920898
    8. ' res' → logprob: -5.899175643920898
    9. 'print' → logprob: -7.399175643920898
    10. ' rés' → logprob: -7.774175643920898

Token 118: ' !
' (ID: 27498)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.36574100604048e-06
    2. ' print' → logprob: -13.000004768371582
    3. '
' → logprob: -13.125004768371582
    4. '```' → logprob: -17.625003814697266
    5. '
' → logprob: -19.875003814697266
    6. ' 
' → logprob: -20.875003814697266
    7. '(print' → logprob: -21.000003814697266
    8. '#print' → logprob: -21.125003814697266
    9. '``' → logprob: -21.125003814697266
    10. '.print' → logprob: -21.375003814697266

Token 119: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '
' → logprob: -16.75
    3. '```' → logprob: -18.25
    4. ' print' → logprob: -19.25
    5. '#print' → logprob: -24.125
    6. '``' → logprob: -24.125
    7. '
' → logprob: -25.0
    8. 'import' → logprob: -25.375
    9. 'sys' → logprob: -25.75
    10. 'println' → logprob: -26.125

Token 120: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02328728698194027
    2. '(res' → logprob: -3.773287296295166
    3. '("("' → logprob: -10.273286819458008
    4. '('' → logprob: -12.023286819458008
    5. '(
' → logprob: -14.898286819458008
    6. ' (' → logprob: -15.523286819458008
    7. '("' → logprob: -15.648286819458008
    8. '((' → logprob: -15.898286819458008
    9. '(f' → logprob: -16.023286819458008
    10. '(`' → logprob: -16.398286819458008

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -16.5
    4. ')`' → logprob: -16.625
    5. '`)' → logprob: -19.625
    6. ')
' → logprob: -20.125
    7. '')' → logprob: -20.25
    8. ')}' → logprob: -20.5
    9. '())' → logprob: -20.875
    10. '),' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 28.57%
Précision adaptée (1ère position): 28.57%
Précision (top 10): 58.82%
================================================================================
