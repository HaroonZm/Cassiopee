================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_positive_difference_sum(N, V, C):
    """
    Calcule la somme des différences positives entre deux listes d'entiers.
    Pour chaque index i, si V[i] - C[i] > 0, ajoute cette différence à la somme totale.

    Args:
        N (int): Le nombre d'éléments dans les listes V et C.
        V (list of int): Liste des valeurs initiales.
        C (list of int): Liste des valeurs à soustraire de V.

    Returns:
        int: La somme des différences positives pour chaque index.
    """
    Ans = 0  # Variable pour stocker la somme totale des différences positives

    # Parcourt chaque index des listes V et C
    for i in range(N):
        # Vérifie si la différence est positive
        if V[i] - C[i] > 0:
            Ans += V[i] - C[i]  # Ajoute la différence à la somme totale

    return Ans

def main():
    """
    Lit les entrées utilisateur, effectue le calcul des différences positives 
    et affiche le résultat final.
    """
    # Lecture du nombre d'éléments
    N = int(input())

    # Lecture et conversion en liste d'entiers pour les valeurs V
    V = list(map(int, input().split()))

    # Lecture et conversion en liste d'entiers pour les valeurs C
    C = list(map(int, input().split()))

    # Appel de la fonction pour calculer la somme et affichage du résultat
    result = calculate_positive_difference_sum(N, V, C)
    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_positive' (ID: 137937)
  → Token d'amorce (pas de prédiction)

Token 3: '_difference' (ID: 123771)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007687435485422611
    2. '_integer' → logprob: -5.507687568664551
    3. '_number' → logprob: -6.132687568664551
    4. '_numbers' → logprob: -8.13268756866455
    5. '_parent' → logprob: -8.13268756866455
    6. '_sum' → logprob: -9.00768756866455
    7. '```' → logprob: -9.13268756866455
    8. '_space' → logprob: -9.25768756866455
    9. '_value' → logprob: -9.50768756866455
    10. '_difference' → logprob: -9.63268756866455

Token 4: '_sum' (ID: 29859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010033482685685158
    2. '_' → logprob: -5.13503360748291
    3. '(_' → logprob: -6.51003360748291
    4. '(_:' → logprob: -6.76003360748291
    5. '```' → logprob: -6.88503360748291
    6. '(:' → logprob: -9.63503360748291
    7. '_between' → logprob: -9.88503360748291
    8. '(a' → logprob: -10.26003360748291
    9. '_:' → logprob: -10.51003360748291
    10. ' (' → logprob: -10.63503360748291

Token 5: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030632726848125458
    2. '(:' → logprob: -6.753063201904297
    3. '():' → logprob: -7.378063201904297
    4. '(_:' → logprob: -7.503063201904297
    5. '```' → logprob: -8.503063201904297
    6. '_' → logprob: -9.003063201904297
    7. ':' → logprob: -9.378063201904297
    8. '(a' → logprob: -9.503063201904297
    9. '(_' → logprob: -9.503063201904297
    10. '((' → logprob: -10.753063201904297

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01200270839035511
    2. ')' → logprob: -4.887002944946289
    3. ',' → logprob: -5.512002944946289
    4. ':' → logprob: -8.387002944946289
    5. '```' → logprob: -10.137002944946289
    6. '):
' → logprob: -10.262002944946289
    7. '[' → logprob: -12.137002944946289
    8. '(' → logprob: -12.637002944946289
    9. '   ' → logprob: -12.637002944946289
    10. ''):' → logprob: -12.637002944946289

Token 7: ' V' (ID: 631)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5329841375350952
    2. ' numbers' → logprob: -1.5329841375350952
    3. ' array' → logprob: -1.7829841375350952
    4. ' a' → logprob: -2.1579842567443848
    5. ' M' → logprob: -2.7829842567443848
    6. 'arr' → logprob: -3.5329842567443848
    7. ' arr' → logprob: -3.6579842567443848
    8. 'array' → logprob: -3.6579842567443848
    9. 'numbers' → logprob: -3.6579842567443848
    10. ' x' → logprob: -4.282984256744385

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004918377846479416
    2. ')' → logprob: -5.379918575286865
    3. ',' → logprob: -8.754918098449707
    4. ':' → logprob: -9.504918098449707
    5. '):
' → logprob: -10.504918098449707
    6. '```' → logprob: -11.129918098449707
    7. '[' → logprob: -11.629918098449707
    8. ''):' → logprob: -13.129918098449707
    9. '[]):' → logprob: -13.129918098449707
    10. ')):' → logprob: -13.254918098449707

Token 9: ' C' (ID: 363)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.8774242401123047
    2. ' ' → logprob: -2.1274242401123047
    3. ' M' → logprob: -2.2524242401123047
    4. ' )' → logprob: -2.6274242401123047
    5. ')' → logprob: -3.0024242401123047
    6. ' V' → logprob: -3.4399242401123047
    7. 'A' → logprob: -3.5024242401123047
    8. ' ):' → logprob: -3.5649242401123047
    9. 'a' → logprob: -3.6899242401123047
    10. ' a' → logprob: -3.8149242401123047

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005987335927784443
    2. ')' → logprob: -5.130987167358398
    3. ''):' → logprob: -10.880987167358398
    4. ',' → logprob: -11.380987167358398
    5. '```' → logprob: -11.505987167358398
    6. ':' → logprob: -11.755987167358398
    7. '):
' → logprob: -12.130987167358398
    8. ' ):' → logprob: -13.880987167358398
    9. '   ' → logprob: -14.005987167358398
    10. ')):' → logprob: -14.380987167358398

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1963568478822708
    2. '```' → logprob: -2.321356773376465
    3. '   ' → logprob: -2.696356773376465
    4. ':
' → logprob: -5.696356773376465
    5. '():' → logprob: -5.946356773376465
    6. '``' → logprob: -6.071356773376465
    7. '`' → logprob: -6.571356773376465
    8. '(' → logprob: -7.196356773376465
    9. '`:' → logprob: -7.321356773376465
    10. '':' → logprob: -8.446356773376465

Token 12: ' """
' (ID: 7037)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6204439401626587
    2. '   ' → logprob: -0.9954439401626587
    3. '`' → logprob: -3.620443820953369
    4. 'total' → logprob: -3.995443820953369
    5. 'result' → logprob: -4.370443820953369
    6. '``' → logprob: -4.495443820953369
    7. ''' → logprob: -5.495443820953369
    8. '"' → logprob: -5.620443820953369
    9. '\' → logprob: -5.745443820953369
    10. '       ' → logprob: -5.870443820953369

Token 13: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9168064594268799
    2. '   ' → logprob: -1.5418064594268799
    3. 'i' → logprob: -2.04180645942688
    4. 'r' → logprob: -3.16680645942688
    5. ''' → logprob: -3.41680645942688
    6. '"' → logprob: -3.66680645942688
    7. '"""' → logprob: -3.79180645942688
    8. 'n' → logprob: -3.91680645942688
    9. 'd' → logprob: -4.416806221008301
    10. ' \' → logprob: -4.541806221008301

Token 14: ' Cal' (ID: 4453)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.23452678322792053
    2. '"""' → logprob: -2.3595268726348877
    3. 'Calcul' → logprob: -2.4845268726348877
    4. 'Returns' → logprob: -4.359526634216309
    5. 'Return' → logprob: -5.609526634216309
    6. '   ' → logprob: -5.859526634216309
    7. ''''' → logprob: -5.859526634216309
    8. ' Calculate' → logprob: -6.109526634216309
    9. ' Calculates' → logprob: -6.109526634216309
    10. 'Sum' → logprob: -6.734526634216309

Token 15: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10062123835086823
    2. 'culate' → logprob: -2.350621223449707
    3. 'cul' → logprob: -8.100621223449707
    4. 'cula' → logprob: -9.725621223449707
    5. 'cu' → logprob: -11.475621223449707
    6. 'culated' → logprob: -11.975621223449707
    7. '```' → logprob: -11.975621223449707
    8. 'culator' → logprob: -12.100621223449707
    9. '   ' → logprob: -12.350621223449707
    10. 'cular' → logprob: -12.475621223449707

Token 16: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39643430709838867
    2. 'te' → logprob: -1.6464343070983887
    3. 's' → logprob: -2.8964343070983887
    4. 't' → logprob: -3.0214343070983887
    5. 'rate' → logprob: -3.8964343070983887
    6. 'late' → logprob: -5.896434307098389
    7. 'brate' → logprob: -6.021434307098389
    8. 'tes' → logprob: -7.021434307098389
    9. 'm' → logprob: -7.146434307098389
    10. 'ate' → logprob: -7.896434307098389

Token 17: ' somme' (ID: 64484)
  Prédit: ' difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.6423792243003845
    2. '   ' → logprob: -1.7673792839050293
    3. ' ' → logprob: -2.1423792839050293
    4. ' différence' → logprob: -2.8923792839050293
    5. '  ' → logprob: -3.5173792839050293
    6. 's' → logprob: -3.5173792839050293
    7. 't' → logprob: -3.8923792839050293
    8. 'tion' → logprob: -4.142379283905029
    9. ' somme' → logprob: -5.017379283905029
    10. '_difference' → logprob: -5.392379283905029

Token 18: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8052169680595398
    2. '_' → logprob: -1.4302170276641846
    3. ' ' → logprob: -1.8052170276641846
    4. ' de' → logprob: -2.5552170276641846
    5. ' )' → logprob: -4.3052167892456055
    6. ')' → logprob: -5.1802167892456055
    7. '   ' → logprob: -5.1802167892456055
    8. ' d' → logprob: -5.3052167892456055
    9. '  ' → logprob: -5.4302167892456055
    10. '`' → logprob: -5.5552167892456055

Token 19: ' différences' (ID: 175718)
  Prédit: ' différences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différences' → logprob: -0.2084749937057495
    2. 'diff' → logprob: -2.958475112915039
    3. 'dif' → logprob: -3.083475112915039
    4. ' valeurs' → logprob: -3.583475112915039
    5. ' diff' → logprob: -3.708475112915039
    6. ' differences' → logprob: -3.833475112915039
    7. ' positive' → logprob: -5.833475112915039
    8. ' ' → logprob: -5.958475112915039
    9. ' dif' → logprob: -6.208475112915039
    10. 'd' → logprob: -6.708475112915039

Token 20: ' positives' (ID: 95584)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.8571881651878357
    2. ' ' → logprob: -1.8571882247924805
    3. '   ' → logprob: -2.2321882247924805
    4. 's' → logprob: -2.3571882247924805
    5. ' positive' → logprob: -2.6071882247924805
    6. '_' → logprob: -3.1071882247924805
    7. ' between' → logprob: -3.4821882247924805
    8. ' positives' → logprob: -4.4821882247924805
    9. 'entre' → logprob: -4.8571882247924805
    10. '    ' → logprob: -4.8571882247924805

Token 21: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.08349768817424774
    2. ' ' → logprob: -2.7084977626800537
    3. ' between' → logprob: -4.833497524261475
    4. 'entre' → logprob: -6.458497524261475
    5. ' \' → logprob: -7.208497524261475
    6. '   ' → logprob: -7.333497524261475
    7. '  ' → logprob: -7.708497524261475
    8. '\n' → logprob: -7.958497524261475
    9. ' Entre' → logprob: -7.958497524261475
    10. '\' → logprob: -8.458498001098633

Token 22: ' deux' (ID: 10301)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0246150493621826
    2. ' chaque' → logprob: -1.7746150493621826
    3. ' la' → logprob: -2.0246150493621826
    4. ' V' → logprob: -2.1496150493621826
    5. ' ' → logprob: -2.6496150493621826
    6. ' deux' → logprob: -2.8996150493621826
    7. '   ' → logprob: -3.6496150493621826
    8. ' N' → logprob: -4.274615287780762
    9. 'les' → logprob: -4.649615287780762
    10. 'V' → logprob: -5.024615287780762

Token 23: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.09747061878442764
    2. '   ' → logprob: -4.097470760345459
    3. ' ' → logprob: -4.347470760345459
    4. ' lists' → logprob: -4.597470760345459
    5. ' tableaux' → logprob: -4.597470760345459
    6. 'list' → logprob: -4.597470760345459
    7. '```' → logprob: -5.222470760345459
    8. ' list' → logprob: -5.347470760345459
    9. ' espaces' → logprob: -5.472470760345459
    10. 'lists' → logprob: -6.222470760345459

Token 24: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2185263633728027
    2. '\' → logprob: -1.8435263633728027
    3. '\n' → logprob: -1.9685263633728027
    4. '.' → logprob: -2.0935263633728027
    5. ' ' → logprob: -2.8435263633728027
    6. ',' → logprob: -3.4685263633728027
    7. '```' → logprob: -3.4685263633728027
    8. '`' → logprob: -3.5935263633728027
    9. ' entre' → logprob: -3.8435263633728027
    10. ' \' → logprob: -3.9685263633728027

Token 25: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.2525395452976227
    2. 'e' → logprob: -1.7525395154953003
    3. 'a' → logprob: -4.00253963470459
    4. ''' → logprob: -4.87753963470459
    5. ' e' → logprob: -5.50253963470459
    6. ' ent' → logprob: -6.00253963470459
    7. ''int' → logprob: -6.12753963470459
    8. ''entrée' → logprob: -6.25253963470459
    9. ' valeurs' → logprob: -6.37753963470459
    10. '’ent' → logprob: -6.75253963470459

Token 26: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.978096604347229
    2. 'r' → logprob: -1.103096604347229
    3. 'ières' → logprob: -2.1030964851379395
    4. 'êtes' → logprob: -2.4780964851379395
    5. '   ' → logprob: -3.3530964851379395
    6. 'i' → logprob: -4.2280964851379395
    7. 'ries' → logprob: -4.4780964851379395
    8. 'ier' → logprob: -5.6030964851379395
    9. 'ités' → logprob: -5.7280964851379395
    10. 'ées' → logprob: -6.2280964851379395

Token 27: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.780183732509613
    2. '.' → logprob: -1.7801837921142578
    3. '\' → logprob: -2.280183792114258
    4. '\n' → logprob: -2.280183792114258
    5. ' ' → logprob: -2.905183792114258
    6. ',' → logprob: -3.155183792114258
    7. ' \' → logprob: -4.655183792114258
    8. ')' → logprob: -4.655183792114258
    9. ':' → logprob: -5.280183792114258
    10. '    
' → logprob: -5.405183792114258

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1729010045528412
    2. '\n' → logprob: -2.297900915145874
    3. '"""
' → logprob: -3.922900915145874
    4. '```' → logprob: -4.672901153564453
    5. '"""' → logprob: -5.047901153564453
    6. '    
' → logprob: -5.172901153564453
    7. '\' → logprob: -5.422901153564453
    8. ')' → logprob: -5.922901153564453
    9. '
' → logprob: -6.422901153564453
    10. '"' → logprob: -7.047901153564453

Token 29: ' Pour' (ID: 13931)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8140687942504883
    2. '   ' → logprob: -0.9390687942504883
    3. '    
' → logprob: -2.6890687942504883
    4. ' 
' → logprob: -3.8140687942504883
    5. '
' → logprob: -3.9390687942504883
    6. '"""
' → logprob: -4.439068794250488
    7. '\' → logprob: -4.689068794250488
    8. '```' → logprob: -4.689068794250488
    9. '"""' → logprob: -4.939068794250488
    10. '   
' → logprob: -5.064068794250488

Token 30: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030391793698072433
    2. 'i' → logprob: -3.7803916931152344
    3. ' chaque' → logprob: -5.030391693115234
    4. ' ' → logprob: -8.405391693115234
    5. '   ' → logprob: -9.155391693115234
    6. ' each' → logprob: -9.780391693115234
    7. ' les' → logprob: -10.280391693115234
    8. ' ' → logprob: -10.280391693115234
    9. '```' → logprob: -11.030391693115234
    10. ' index' → logprob: -11.405391693115234

Token 31: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07154957950115204
    2. 'i' → logprob: -3.321549654006958
    3. ' index' → logprob: -4.571549415588379
    4. ' pair' → logprob: -5.071549415588379
    5. ' paire' → logprob: -5.196549415588379
    6. ' ' → logprob: -5.946549415588379
    7. ' élément' → logprob: -6.071549415588379
    8. ' indice' → logprob: -6.446549415588379
    9. 'index' → logprob: -7.196549415588379
    10. 'indice' → logprob: -7.446549415588379

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0933745875954628
    2. 'i' → logprob: -2.843374490737915
    3. ',' → logprob: -3.843374490737915
    4. ' ,' → logprob: -4.718374729156494
    5. ' `' → logprob: -7.968374729156494
    6. ' ' → logprob: -9.968374252319336
    7. ',i' → logprob: -10.218374252319336
    8. '   ' → logprob: -11.218374252319336
    9. '```' → logprob: -11.218374252319336
    10. 'e' → logprob: -11.468374252319336

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08248083293437958
    2. ' ,' → logprob: -2.8324809074401855
    3. ' :' → logprob: -4.8324809074401855
    4. ':' → logprob: -5.2074809074401855
    5. '   ' → logprob: -5.7074809074401855
    6. ' if' → logprob: -6.2074809074401855
    7. ' de' → logprob: -7.8324809074401855
    8. '```' → logprob: -8.207480430603027
    9. ' si' → logprob: -9.332480430603027
    10. ' ' → logprob: -9.457480430603027

Token 34: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5077067613601685
    2. ' si' → logprob: -1.6327067613601685
    3. ' on' → logprob: -1.7577067613601685
    4. '   ' → logprob: -4.507706642150879
    5. ' s' → logprob: -5.757706642150879
    6. ' la' → logprob: -5.882706642150879
    7. ' ' → logprob: -6.132706642150879
    8. 'if' → logprob: -6.257706642150879
    9. '```' → logprob: -6.882706642150879
    10. '    ' → logprob: -7.007706642150879

Token 35: ' V' (ID: 631)
  Prédit: ' V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.036663297563791275
    2. 'V' → logprob: -3.411663293838501
    3. ' ' → logprob: -6.66166353225708
    4. ' la' → logprob: -7.78666353225708
    5. ' N' → logprob: -7.91166353225708
    6. ' C' → logprob: -8.411663055419922
    7. ' `' → logprob: -9.161663055419922
    8. '  ' → logprob: -9.286663055419922
    9. ' ' → logprob: -9.911663055419922
    10. ' (' → logprob: -9.974163055419922

Token 36: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002556165214627981
    2. '[' → logprob: -6.002556324005127
    3. '[I' → logprob: -10.627555847167969
    4. ' [' → logprob: -11.377555847167969
    5. '[
' → logprob: -11.627555847167969
    6. 'i' → logprob: -11.752555847167969
    7. '[V' → logprob: -12.002555847167969
    8. '>' → logprob: -12.752555847167969
    9. '\[' → logprob: -12.752555847167969
    10. '```' → logprob: -12.877555847167969

Token 37: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030009878799319267
    2. '>' → logprob: -3.9050099849700928
    3. ']>' → logprob: -5.280009746551514
    4. ' >' → logprob: -6.030009746551514
    5. '-' → logprob: -6.905009746551514
    6. ' ]' → logprob: -7.905009746551514
    7. ' -' → logprob: -8.155010223388672
    8. '[' → logprob: -9.155010223388672
    9. ' ' → logprob: -10.530010223388672
    10. '>]' → logprob: -11.405010223388672

Token 38: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.050961729139089584
    2. '>' → logprob: -3.30096173286438
    3. ' -' → logprob: -5.300961494445801
    4. ' <' → logprob: -5.550961494445801
    5. '-' → logprob: -5.925961494445801
    6. ' ' → logprob: -7.050961494445801
    7. ' est' → logprob: -9.1759614944458
    8. ' ' → logprob: -9.8009614944458
    9. '[' → logprob: -10.0509614944458
    10. '<' → logprob: -10.1759614944458

Token 39: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.3500503599643707
    2. 'C' → logprob: -1.2250503301620483
    3. ' ' → logprob: -6.475050449371338
    4. '  ' → logprob: -10.60004997253418
    5. ' ' → logprob: -11.85004997253418
    6. '<|end|>' → logprob: -11.85004997253418
    7. '>C' → logprob: -12.72504997253418
    8. ' >' → logprob: -12.85004997253418
    9. '>' → logprob: -12.97504997253418
    10. '0' → logprob: -13.10004997253418

Token 40: '[i' (ID: 1768)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.537933349609375
    2. '[i' → logprob: -1.162933349609375
    3. '>' → logprob: -2.912933349609375
    4. '[' → logprob: -3.037933349609375
    5. ' ' → logprob: -7.412933349609375
    6. ' [' → logprob: -8.412933349609375
    7. '">' → logprob: -9.537933349609375
    8. ' i' → logprob: -9.912933349609375
    9. '```' → logprob: -10.287933349609375
    10. '[]' → logprob: -10.412933349609375

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14742551743984222
    2. '>' → logprob: -2.147425413131714
    3. ']>' → logprob: -4.022425651550293
    4. ' >' → logprob: -6.272425651550293
    5. '```' → logprob: -8.522425651550293
    6. ' ]' → logprob: -9.397425651550293
    7. '[' → logprob: -10.022425651550293
    8. '">' → logprob: -10.147425651550293
    9. ')' → logprob: -10.522425651550293
    10. '']' → logprob: -10.772425651550293

Token 42: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5764733552932739
    2. '>' → logprob: -0.8264733552932739
    3. ' ' → logprob: -7.951473236083984
    4. ' est' → logprob: -9.451473236083984
    5. '&gt' → logprob: -9.701473236083984
    6. ' is' → logprob: -11.576473236083984
    7. ' ' → logprob: -11.701473236083984
    8. '">' → logprob: -12.326473236083984
    9. '   ' → logprob: -12.826473236083984
    10. '```' → logprob: -13.076473236083984

Token 43: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2811715006828308
    2. '0' → logprob: -1.4061715602874756
    3. '<|end|>' → logprob: -11.406171798706055
    4. ' ' → logprob: -12.031171798706055
    5. '```' → logprob: -13.531171798706055
    6. '  ' → logprob: -14.218671798706055
    7. '>' → logprob: -14.968671798706055
    8. '1' → logprob: -15.156171798706055
    9. '<|end|>' → logprob: -15.281171798706055
    10. '۰' → logprob: -16.156171798706055

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '<|end|>' → logprob: -16.250431060791016
    4. '```' → logprob: -17.125431060791016
    5. '۰' → logprob: -17.500431060791016
    6. '  ' → logprob: -18.125431060791016
    7. '1' → logprob: -18.750431060791016
    8. '>' → logprob: -19.750431060791016
    9. '-' → logprob: -20.187931060791016
    10. '<|end|>' → logprob: -20.375431060791016

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07159650325775146
    2. ' ,' → logprob: -2.821596622467041
    3. ':' → logprob: -4.946596622467041
    4. ' :' → logprob: -6.446596622467041
    5. '   ' → logprob: -7.196596622467041
    6. '):' → logprob: -9.946596145629883
    7. '),' → logprob: -10.821596145629883
    8. ':return' → logprob: -11.446596145629883
    9. '```' → logprob: -11.946596145629883
    10. ' alors' → logprob: -11.946596145629883

Token 46: ' ajoute' (ID: 91611)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2603077292442322
    2. '    ' → logprob: -2.010307788848877
    3. '   ' → logprob: -2.760307788848877
    4. ' alors' → logprob: -4.385307788848877
    5. ' la' → logprob: -5.010307788848877
    6. 'on' → logprob: -5.260307788848877
    7. ' ' → logprob: -6.635307788848877
    8. ' je' → logprob: -7.385307788848877
    9. 'contin' → logprob: -7.510307788848877
    10. ' somme' → logprob: -7.510307788848877

Token 47: ' cette' (ID: 7696)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.07296550273895264
    2. '   ' → logprob: -4.322965621948242
    3. '    ' → logprob: -4.447965621948242
    4. ' la' → logprob: -4.822965621948242
    5. 'V' → logprob: -5.072965621948242
    6. ' ' → logprob: -5.072965621948242
    7. ' à' → logprob: -5.197965621948242
    8. ' (' → logprob: -5.322965621948242
    9. ' `' → logprob: -5.947965621948242
    10. ' au' → logprob: -6.072965621948242

Token 48: ' différence' (ID: 79196)
  Prédit: ' différence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différence' → logprob: -0.08355975896120071
    2. ' valeur' → logprob: -2.95855975151062
    3. 'diff' → logprob: -4.208559989929199
    4. ' difference' → logprob: -5.083559989929199
    5. 'difference' → logprob: -5.583559989929199
    6. ' ' → logprob: -6.958559989929199
    7. ' somme' → logprob: -7.458559989929199
    8. 'val' → logprob: -7.833559989929199
    9. ' différ' → logprob: -8.0835599899292
    10. 'd' → logprob: -8.3335599899292

Token 49: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.23107855021953583
    2. ' au' → logprob: -1.7310785055160522
    3. ' ' → logprob: -3.856078624725342
    4. '   ' → logprob: -5.731078624725342
    5. '    ' → logprob: -6.231078624725342
    6. 'au' → logprob: -7.106078624725342
    7. ' a' → logprob: -7.356078624725342
    8. ' to' → logprob: -7.731078624725342
    9. '  ' → logprob: -7.981078624725342
    10. 'à' → logprob: -8.606078147888184

Token 50: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21972274780273438
    2. ' ' → logprob: -2.0947227478027344
    3. ' total' → logprob: -2.8447227478027344
    4. ' sum' → logprob: -5.844722747802734
    5. ' result' → logprob: -5.844722747802734
    6. ' somme' → logprob: -5.969722747802734
    7. 's' → logprob: -6.719722747802734
    8. 'la' → logprob: -6.719722747802734
    9. 'total' → logprob: -6.844722747802734
    10. '   ' → logprob: -7.094722747802734

Token 51: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3005515933036804
    2. ' somme' → logprob: -1.4255516529083252
    3. 'sum' → logprob: -4.550551414489746
    4. '   ' → logprob: -5.425551414489746
    5. 'som' → logprob: -6.550551414489746
    6. ' ' → logprob: -6.550551414489746
    7. 'total' → logprob: -7.800551414489746
    8. 'variable' → logprob: -8.300551414489746
    9. ' variable' → logprob: -9.050551414489746
    10. 'result' → logprob: -9.050551414489746

Token 52: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024459900334477425
    2. '.' → logprob: -4.5244598388671875
    3. '  ' → logprob: -5.6494598388671875
    4. ' ' → logprob: -6.6494598388671875
    5. '    
' → logprob: -6.7744598388671875
    6. '\' → logprob: -6.7744598388671875
    7. '
' → logprob: -6.8994598388671875
    8. '\n' → logprob: -6.8994598388671875
    9. 'def' → logprob: -7.0244598388671875
    10. '    ' → logprob: -7.0244598388671875

Token 53: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7649877667427063
    2. '.' → logprob: -0.8899877667427063
    3. ':' → logprob: -2.6399877071380615
    4. '\' → logprob: -4.139987945556641
    5. '\n' → logprob: -4.139987945556641
    6. ',' → logprob: -4.889987945556641
    7. ' :' → logprob: -6.014987945556641
    8. '  ' → logprob: -6.014987945556641
    9. '
' → logprob: -6.764987945556641
    10. ')' → logprob: -6.764987945556641

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003668129211291671
    2. '"""' → logprob: -5.753668308258057
    3. '```' → logprob: -9.003667831420898
    4. '"""
' → logprob: -9.378667831420898
    5. ' """' → logprob: -9.753667831420898
    6. '"' → logprob: -9.878667831420898
    7. '""' → logprob: -10.378667831420898
    8. '\n' → logprob: -10.503667831420898
    9. '    
' → logprob: -10.753667831420898
    10. ' """
' → logprob: -10.753667831420898

Token 55: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010917536914348602
    2. '"""' → logprob: -5.260917663574219
    3. '```' → logprob: -5.510917663574219
    4. '"""
' → logprob: -6.885917663574219
    5. '\n' → logprob: -7.885917663574219
    6. '    
' → logprob: -9.760917663574219
    7. '
' → logprob: -10.135917663574219
    8. '""' → logprob: -10.260917663574219
    9. '  ' → logprob: -10.760917663574219
    10. '``' → logprob: -11.135917663574219

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31030207872390747
    2. ' :' → logprob: -2.1853020191192627
    3. ',' → logprob: -2.4353020191192627
    4. '):' → logprob: -3.1853020191192627
    5. '   ' → logprob: -4.185302257537842
    6. ')' → logprob: -5.560302257537842
    7. '[' → logprob: -6.060302257537842
    8. ' ):' → logprob: -6.935302257537842
    9. '```' → logprob: -6.935302257537842
    10. ' ,' → logprob: -7.685302257537842

Token 57: '       ' (ID: 309)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.43110793828964233
    2. 'N' → logprob: -1.306107997894287
    3. '   ' → logprob: -2.806107997894287
    4. '    ' → logprob: -4.306107997894287
    5. ' ' → logprob: -6.306107997894287
    6. ')' → logprob: -6.931107997894287
    7. 'n' → logprob: -7.556107997894287
    8. '```' → logprob: -7.806107997894287
    9. ' )' → logprob: -7.931107997894287
    10. '  ' → logprob: -8.431107521057129

Token 58: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.015516664832830429
    2. '   ' → logprob: -4.765516757965088
    3. ' N' → logprob: -5.640516757965088
    4. 'V' → logprob: -5.765516757965088
    5. ' V' → logprob: -9.76551628112793
    6. '```' → logprob: -10.26551628112793
    7. '       ' → logprob: -11.01551628112793
    8. 'list' → logprob: -11.01551628112793
    9. 'self' → logprob: -11.26551628112793
    10. 'int' → logprob: -11.26551628112793

Token 59: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0455957651138306
    2. '):' → logprob: -1.5455957651138306
    3. ',' → logprob: -1.6705957651138306
    4. ' :' → logprob: -1.7955957651138306
    5. ' (' → logprob: -3.795595645904541
    6. ':int' → logprob: -3.920595645904541
    7. '   ' → logprob: -4.170595645904541
    8. '[int' → logprob: -4.670595645904541
    9. '(int' → logprob: -5.420595645904541
    10. ')' → logprob: -5.920595645904541

Token 60: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.33214399218559265
    2. ' int' → logprob: -1.457144021987915
    3. ')' → logprob: -3.207144021987915
    4. ' )' → logprob: -5.207143783569336
    5. ',' → logprob: -5.957143783569336
    6. '   ' → logprob: -7.957143783569336
    7. ',int' → logprob: -8.207143783569336
    8. ':int' → logprob: -9.082143783569336
    9. '[int' → logprob: -9.207143783569336
    10. ' ,' → logprob: -9.457143783569336

Token 61: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01622064597904682
    2. '):' → logprob: -4.141220569610596
    3. ',' → logprob: -9.641221046447754
    4. ' )' → logprob: -10.141221046447754
    5. '<|end|>' → logprob: -10.516221046447754
    6. '),' → logprob: -11.391221046447754
    7. '):
' → logprob: -11.641221046447754
    8. '   ' → logprob: -11.766221046447754
    9. '```' → logprob: -11.891221046447754
    10. ' ' → logprob: -11.891221046447754

Token 62: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0922626331448555
    2. ' la' → logprob: -3.7172627449035645
    3. ' The' → logprob: -4.4672627449035645
    4. ' Nombre' → logprob: -4.8422627449035645
    5. '<|end|>' → logprob: -4.9672627449035645
    6. ' le' → logprob: -5.0922627449035645
    7. ' the' → logprob: -5.2172627449035645
    8. ')' → logprob: -5.4672627449035645
    9. ' Le' → logprob: -5.4672627449035645
    10. ' nombre' → logprob: -5.5922627449035645

Token 63: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.007965383119881153
    2. 'nombre' → logprob: -4.882965564727783
    3. ' ' → logprob: -8.132965087890625
    4. ' nombres' → logprob: -10.132965087890625
    5. ' number' → logprob: -12.132965087890625
    6. 'n' → logprob: -12.632965087890625
    7. ' espace' → logprob: -13.007965087890625
    8. '_nombre' → logprob: -13.132965087890625
    9. ' entier' → logprob: -13.257965087890625
    10. ' n' → logprob: -13.257965087890625

Token 64: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3893029987812042
    2. ' ' → logprob: -1.3893029689788818
    3. ' de' → logprob: -3.139302968978882
    4. ' total' → logprob: -4.139303207397461
    5. '<|end|>' → logprob: -5.639303207397461
    6. '_' → logprob: -5.889303207397461
    7. 'd' → logprob: -6.014303207397461
    8. '_total' → logprob: -6.889303207397461
    9. ' des' → logprob: -7.139303207397461
    10. ')' → logprob: -7.264303207397461

Token 65: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0462590716779232
    2. ' éléments' → logprob: -3.6712591648101807
    3. 'élé' → logprob: -4.171258926391602
    4. ' élément' → logprob: -6.796258926391602
    5. ' elements' → logprob: -6.921258926391602
    6. ')' → logprob: -7.921258926391602
    7. '_' → logprob: -7.921258926391602
    8. ' espaces' → logprob: -8.421258926391602
    9. 's' → logprob: -8.546258926391602
    10. ' )' → logprob: -8.671258926391602

Token 66: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0716119334101677
    2. ' éléments' → logprob: -2.6966118812561035
    3. ' ' → logprob: -7.0716118812561035
    4. 'é' → logprob: -8.446612358093262
    5. 'él' → logprob: -8.696612358093262
    6. ' él' → logprob: -8.946612358093262
    7. ' élément' → logprob: -10.071612358093262
    8. ' é' → logprob: -10.196612358093262
    9. 'elements' → logprob: -10.571612358093262
    10. ''' → logprob: -10.696612358093262

Token 67: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0001490716531407088
    2. 'ment' → logprob: -9.25014877319336
    3. 'm' → logprob: -10.00014877319336
    4. '   ' → logprob: -12.50014877319336
    5. '```' → logprob: -13.75014877319336
    6. 'phants' → logprob: -14.25014877319336
    7. 'v' → logprob: -15.12514877319336
    8. '       ' → logprob: -15.12514877319336
    9. 'MENTS' → logprob: -15.50014877319336
    10. 'me' → logprob: -15.62514877319336

Token 68: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6100100874900818
    2. '   ' → logprob: -0.9850100874900818
    3. ' )' → logprob: -3.3600101470947266
    4. ' à' → logprob: -4.110010147094727
    5. '```' → logprob: -4.110010147094727
    6. ' des' → logprob: -5.360010147094727
    7. '<|end|>' → logprob: -6.110010147094727
    8. ',' → logprob: -6.235010147094727
    9. '  ' → logprob: -6.610010147094727
    10. ' de' → logprob: -7.235010147094727

Token 69: ' les' (ID: 1341)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.1481383591890335
    2. ' les' → logprob: -2.1481382846832275
    3. 'V' → logprob: -4.648138523101807
    4. ' la' → logprob: -5.023138523101807
    5. ' ' → logprob: -5.898138523101807
    6. ' N' → logprob: -7.023138523101807
    7. 'les' → logprob: -8.148138046264648
    8. 'N' → logprob: -9.148138046264648
    9. ' ' → logprob: -9.398138046264648
    10. '  ' → logprob: -9.523138046264648

Token 70: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.5723688006401062
    2. 'list' → logprob: -1.447368860244751
    3. ' V' → logprob: -2.072368860244751
    4. ' list' → logprob: -3.822368860244751
    5. ' deux' → logprob: -4.197368621826172
    6. ' ' → logprob: -4.197368621826172
    7. 'de' → logprob: -5.072368621826172
    8. '   ' → logprob: -5.572368621826172
    9. 'V' → logprob: -5.697368621826172
    10. ' lists' → logprob: -5.947368621826172

Token 71: ' V' (ID: 631)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6601471304893494
    2. '   ' → logprob: -1.4101471900939941
    3. ',' → logprob: -2.035147190093994
    4. '```' → logprob: -2.910147190093994
    5. '):' → logprob: -3.410147190093994
    6. '<|end|>' → logprob: -5.035147190093994
    7. ':' → logprob: -5.910147190093994
    8. '),' → logprob: -6.160147190093994
    9. '\n' → logprob: -6.785147190093994
    10. ').' → logprob: -7.035147190093994

Token 72: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.318692147731781
    2. ',' → logprob: -1.9436922073364258
    3. ')' → logprob: -2.193692207336426
    4. '):' → logprob: -4.443692207336426
    5. '```' → logprob: -6.068692207336426
    6. '),' → logprob: -6.443692207336426
    7. ' ,' → logprob: -7.443692207336426
    8. '<|end|>' → logprob: -7.943692207336426
    9. '       ' → logprob: -8.318692207336426
    10. ' et' → logprob: -8.443692207336426

Token 73: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.133207306265831
    2. 'C' → logprob: -2.133207321166992
    3. ' et' → logprob: -5.758207321166992
    4. '   ' → logprob: -6.008207321166992
    5. ' ' → logprob: -8.383207321166992
    6. ' and' → logprob: -8.383207321166992
    7. 'et' → logprob: -9.633207321166992
    8. '```' → logprob: -10.258207321166992
    9. ',' → logprob: -11.008207321166992
    10. ' ' → logprob: -11.133207321166992

Token 74: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.594861626625061
    2. ')' → logprob: -1.719861626625061
    3. ',' → logprob: -2.0948615074157715
    4. '):' → logprob: -2.2198615074157715
    5. '```' → logprob: -4.2198615074157715
    6. '<|end|>' → logprob: -4.3448615074157715
    7. ':' → logprob: -5.8448615074157715
    8. '<|end|>' → logprob: -6.2198615074157715
    9. '\n' → logprob: -6.3448615074157715
    10. '),' → logprob: -6.5948615074157715

Token 75: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5610046982765198
    2. '```' → logprob: -1.061004638671875
    3. '\n' → logprob: -2.811004638671875
    4. '\' → logprob: -4.811004638671875
    5. ')' → logprob: -5.811004638671875
    6. '"""
' → logprob: -6.061004638671875
    7. '
' → logprob: -6.436004638671875
    8. '    
' → logprob: -6.436004638671875
    9. '"""' → logprob: -6.561004638671875
    10. '``' → logprob: -6.811004638671875

Token 76: ' V' (ID: 631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6643414497375488
    2. 'V' (adapté à ' V') → logprob: -0.9143414497375488
    3. '       ' → logprob: -3.289341449737549
    4. ' V' → logprob: -3.539341449737549
    5. '```' → logprob: -4.414341449737549
    6. 'Returns' → logprob: -5.914341449737549
    7. '"""' → logprob: -6.664341449737549
    8. ')' → logprob: -7.414341449737549
    9. '    ' → logprob: -7.789341449737549
    10. '  ' → logprob: -8.41434097290039

Token 77: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38419026136398315
    2. ':' → logprob: -1.759190320968628
    3. ' :' → logprob: -2.509190320968628
    4. '   ' → logprob: -3.759190320968628
    5. '[' → logprob: -4.384190082550049
    6. '[int' → logprob: -4.759190082550049
    7. ',' → logprob: -5.134190082550049
    8. '<|end|>' → logprob: -5.509190082550049
    9. ')' → logprob: -5.884190082550049
    10. '```' → logprob: -6.384190082550049

Token 78: 'list' (ID: 2641)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6488601565361023
    2. ')' → logprob: -1.898860216140747
    3. '[' → logprob: -2.273860216140747
    4. 'list' → logprob: -2.523860216140747
    5. 'List' → logprob: -2.648860216140747
    6. 'int' → logprob: -3.273860216140747
    7. '[i' → logprob: -3.773860216140747
    8. '[List' → logprob: -4.773859977722168
    9. '[]' → logprob: -6.648859977722168
    10. ',' → logprob: -7.023859977722168

Token 79: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.020810693502426147
    2. ')' → logprob: -4.020810604095459
    3. '[' → logprob: -6.895810604095459
    4. '):' → logprob: -7.270810604095459
    5. '<int' → logprob: -8.020811080932617
    6. '<|end|>' → logprob: -8.645811080932617
    7. '):
' → logprob: -9.020811080932617
    8. ',' → logprob: -9.145811080932617
    9. '   ' → logprob: -10.145811080932617
    10. ' of' → logprob: -10.395811080932617

Token 80: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04871749505400658
    2. ' int' → logprob: -3.048717498779297
    3. ' integers' → logprob: -9.673717498779297
    4. '[int' → logprob: -10.798717498779297
    5. 'ints' → logprob: -10.923717498779297
    6. ' ints' → logprob: -11.173717498779297
    7. '<int' → logprob: -12.298717498779297
    8. 'inte' → logprob: -12.298717498779297
    9. ']int' → logprob: -13.048717498779297
    10. ':int' → logprob: -14.048717498779297

Token 81: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1285247951745987
    2. ')' → logprob: -2.2535247802734375
    3. '[int' → logprob: -4.2535247802734375
    4. ' ):' → logprob: -7.5035247802734375
    5. '[' → logprob: -8.003524780273438
    6. 's' → logprob: -9.128524780273438
    7. ']):' → logprob: -9.753524780273438
    8. '>):' → logprob: -10.503524780273438
    9. '[]):' → logprob: -10.503524780273438
    10. '):
' → logprob: -10.753524780273438

Token 82: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2094801813364029
    2. ')' → logprob: -2.7094802856445312
    3. '[' → logprob: -2.9594802856445312
    4. ' [' → logprob: -4.709480285644531
    5. ' )' → logprob: -4.834480285644531
    6. '    ' → logprob: -4.834480285644531
    7. ' ' → logprob: -4.834480285644531
    8. '<|end|>' → logprob: -5.084480285644531
    9. '[int' → logprob: -5.709480285644531
    10. 'v' → logprob: -5.834480285644531

Token 83: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4823129177093506
    2. '[int' → logprob: -1.7323129177093506
    3. '<|end|>' → logprob: -1.7323129177093506
    4. '[' → logprob: -4.48231315612793
    5. ' d' → logprob: -5.35731315612793
    6. '<int' → logprob: -6.10731315612793
    7. ' of' → logprob: -6.23231315612793
    8. 'des' → logprob: -6.23231315612793
    9. 's' → logprob: -6.60731315612793
    10. ')' → logprob: -6.98231315612793

Token 84: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.2951885163784027
    2. 'val' → logprob: -1.670188546180725
    3. ' ent' → logprob: -3.0451884269714355
    4. 'ent' → logprob: -4.5451884269714355
    5. ' scores' → logprob: -6.2951884269714355
    6. ' volumes' → logprob: -6.6701884269714355
    7. ' nombres' → logprob: -6.7951884269714355
    8. ' val' → logprob: -7.5451884269714355
    9. 'scores' → logprob: -7.6701884269714355
    10. 'valu' → logprob: -7.7951884269714355

Token 85: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6773554086685181
    2. ')' → logprob: -1.177355408668518
    3. ' des' → logprob: -2.3023552894592285
    4. 's' → logprob: -4.3023552894592285
    5. ' )' → logprob: -4.5523552894592285
    6. ' de' → logprob: -4.6773552894592285
    7. ' d' → logprob: -5.1773552894592285
    8. 'des' → logprob: -5.4273552894592285
    9. '    ' → logprob: -5.5523552894592285
    10. ' ' → logprob: -5.8023552894592285

Token 86: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.02868223935365677
    2. '   ' → logprob: -4.903682231903076
    3. ')' → logprob: -5.028682231903076
    4. 'isées' → logprob: -5.028682231903076
    5. 's' → logprob: -5.778682231903076
    6. 'e' → logprob: -6.653682231903076
    7. 'ales' → logprob: -7.528682231903076
    8. 'ées' → logprob: -7.778682231903076
    9. 'def' → logprob: -7.903682231903076
    10. ' ' → logprob: -7.903682231903076

Token 87: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4067259132862091
    2. ',' → logprob: -1.4067258834838867
    3. ')' → logprob: -2.5317258834838867
    4. ' ,' → logprob: -5.406725883483887
    5. ' )' → logprob: -7.031725883483887
    6. '```' → logprob: -7.031725883483887
    7. '),' → logprob: -7.281725883483887
    8. '<|end|>' → logprob: -7.531725883483887
    9. '):' → logprob: -7.781725883483887
    10. '       ' → logprob: -8.406725883483887

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007165000773966312
    2. '       ' → logprob: -6.25716495513916
    3. '```' → logprob: -6.75716495513916
    4. 'C' → logprob: -6.88216495513916
    5. ' ' → logprob: -6.88216495513916
    6. '    ' → logprob: -7.25716495513916
    7. ')' → logprob: -7.50716495513916
    8. ' C' → logprob: -8.50716495513916
    9. ' )' → logprob: -8.50716495513916
    10. '  ' → logprob: -9.25716495513916

Token 89: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.17218875885009766
    2. ' C' → logprob: -2.0471887588500977
    3. '   ' → logprob: -3.5471887588500977
    4. ' ' → logprob: -8.547188758850098
    5. '  ' → logprob: -10.547188758850098
    6. '       ' → logprob: -10.672188758850098
    7. '    ' → logprob: -10.922188758850098
    8. '	C' → logprob: -12.297188758850098
    9. ' ' → logprob: -12.797188758850098
    10. '```' → logprob: -12.922188758850098

Token 90: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00030388421146199107
    2. '(list' → logprob: -8.250304222106934
    3. ' :' → logprob: -11.000304222106934
    4. ':' → logprob: -11.500304222106934
    5. '   ' → logprob: -11.750304222106934
    6. ' ' → logprob: -12.750304222106934
    7. '```' → logprob: -13.250304222106934
    8. ':list' → logprob: -13.875304222106934
    9. '(int' → logprob: -15.000304222106934
    10. '[list' → logprob: -15.000304222106934

Token 91: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0033420445397496223
    2. ' list' → logprob: -6.003342151641846
    3. 'int' → logprob: -7.753342151641846
    4. ')' → logprob: -8.003341674804688
    5. '   ' → logprob: -10.753341674804688
    6. 'liste' → logprob: -10.878341674804688
    7. ',' → logprob: -11.628341674804688
    8. 'l' → logprob: -11.878341674804688
    9. ' )' → logprob: -11.878341674804688
    10. 'ist' → logprob: -11.878341674804688

Token 92: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.03361964598298073
    2. '[int' → logprob: -4.2836198806762695
    3. ' d' → logprob: -4.9086198806762695
    4. ' des' → logprob: -5.7836198806762695
    5. ')' → logprob: -5.7836198806762695
    6. '[' → logprob: -6.0336198806762695
    7. 'd' → logprob: -6.9086198806762695
    8. ' de' → logprob: -7.1586198806762695
    9. ' ' → logprob: -7.2836198806762695
    10. 'of' → logprob: -7.9086198806762695

Token 93: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2811776399612427
    2. ' int' → logprob: -1.4061776399612427
    3. ')' → logprob: -11.156177520751953
    4. ']int' → logprob: -11.906177520751953
    5. '[int' → logprob: -13.156177520751953
    6. '<int' → logprob: -14.281177520751953
    7. '(int' → logprob: -14.406177520751953
    8. ',int' → logprob: -14.531177520751953
    9. '```' → logprob: -14.531177520751953
    10. ':int' → logprob: -14.656177520751953

Token 94: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011351366527378559
    2. ')' → logprob: -5.761351585388184
    3. ' ):' → logprob: -5.761351585388184
    4. ']):' → logprob: -6.011351585388184
    5. '[int' → logprob: -7.011351585388184
    6. '   ' → logprob: -7.636351585388184
    7. '):
' → logprob: -8.511351585388184
    8. ''):' → logprob: -8.761351585388184
    9. ']:' → logprob: -9.011351585388184
    10. ':' → logprob: -9.386351585388184

Token 95: ' Liste' (ID: 61030)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.194402813911438
    2. ' Liste' → logprob: -1.194402813911438
    3. 'Liste' → logprob: -1.444402813911438
    4. ' liste' → logprob: -2.3194026947021484
    5. 'list' → logprob: -3.6944026947021484
    6. 'List' → logprob: -4.944402694702148
    7. ' La' → logprob: -5.319402694702148
    8. ' listes' → logprob: -5.319402694702148
    9. ' List' → logprob: -5.569402694702148
    10. ' la' → logprob: -5.944402694702148

Token 96: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.008713138289749622
    2. 'des' → logprob: -4.758713245391846
    3. '[' → logprob: -10.008712768554688
    4. 'd' → logprob: -11.258712768554688
    5. ' of' → logprob: -11.508712768554688
    6. '_des' → logprob: -11.883712768554688
    7. ' de' → logprob: -12.258712768554688
    8. ' d' → logprob: -12.508712768554688
    9. 's' → logprob: -12.758712768554688
    10. ' ' → logprob: -13.258712768554688

Token 97: ' valeurs' (ID: 73668)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.5622144341468811
    2. ' coûts' → logprob: -1.5622143745422363
    3. 'cout' → logprob: -2.1872143745422363
    4. 'coeff' → logprob: -3.3122143745422363
    5. 'val' → logprob: -3.5622143745422363
    6. 'capac' → logprob: -4.437214374542236
    7. 'const' → logprob: -4.937214374542236
    8. 'cons' → logprob: -5.312214374542236
    9. ' cout' → logprob: -5.687214374542236
    10. 'cost' → logprob: -5.812214374542236

Token 98: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9454885721206665
    2. ' de' → logprob: -2.320488452911377
    3. 'final' → logprob: -2.820488452911377
    4. '_mod' → logprob: -2.945488452911377
    5. 'mod' → logprob: -3.070488452911377
    6. 'initial' → logprob: -3.070488452911377
    7. '```' → logprob: -3.070488452911377
    8. '_con' → logprob: -3.195488452911377
    9. ' initial' → logprob: -3.320488452911377
    10. '_initial' → logprob: -3.320488452911377

Token 99: ' sou' (ID: 4069)
  Prédit: ' comparer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comparer' → logprob: -0.8026703596115112
    2. ' sou' → logprob: -1.3026703596115112
    3. 'comp' → logprob: -1.6776703596115112
    4. 'sou' → logprob: -3.177670478820801
    5. 'com' → logprob: -4.177670478820801
    6. '   ' → logprob: -4.677670478820801
    7. '```' → logprob: -5.052670478820801
    8. 'compare' → logprob: -5.177670478820801
    9. 'compar' → logprob: -5.427670478820801
    10. 'subtract' → logprob: -5.927670478820801

Token 100: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.15008793771266937
    2. 'b' → logprob: -2.025087833404541
    3. 'stract' → logprob: -6.400087833404541
    4. 'straction' → logprob: -6.650087833404541
    5. 'str' → logprob: -6.900087833404541
    6. 'm' → logprob: -7.025087833404541
    7. 'p' → logprob: -7.150087833404541
    8. 'mettre' → logprob: -7.900087833404541
    9. 'r' → logprob: -8.0250883102417
    10. 'bs' → logprob: -8.2750883102417

Token 101: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.7013878226280212
    2. 'ct' → logprob: -0.8263878226280212
    3. '   ' → logprob: -3.826387882232666
    4. 'i' → logprob: -4.576387882232666
    5. 't' → logprob: -4.826387882232666
    6. 'r' → logprob: -4.951387882232666
    7. '```' → logprob: -5.576387882232666
    8. 'it' → logprob: -5.701387882232666
    9. 'ction' → logprob: -6.201387882232666
    10. 'cter' → logprob: -6.451387882232666

Token 102: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14104725420475006
    2. '):
' → logprob: -2.641047239303589
    3. '   ' → logprob: -3.266047239303589
    4. ')' → logprob: -4.016047477722168
    5. ' ):' → logprob: -6.766047477722168
    6. ').' → logprob: -6.766047477722168
    7. '.' → logprob: -8.016047477722168
    8. '```' → logprob: -8.016047477722168
    9. '):

' → logprob: -8.516047477722168
    10. '):
' → logprob: -9.016047477722168

Token 103: ' V' (ID: 631)
  Prédit: ' V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.13041844964027405
    2. 'V' → logprob: -2.130418539047241
    3. ' ' → logprob: -6.380418300628662
    4. ')' → logprob: -6.755418300628662
    5. ' )' → logprob: -8.13041877746582
    6. ' la' → logprob: -8.88041877746582
    7. ' ' → logprob: -10.25541877746582
    8. '   ' → logprob: -11.00541877746582
    9. '  ' → logprob: -11.00541877746582
    10. ' N' → logprob: -11.13041877746582

Token 104: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3225686550140381
    2. '):
' → logprob: -1.572568655014038
    3. '   ' → logprob: -2.822568655014038
    4. ')' → logprob: -5.072568893432617
    5. '):

' → logprob: -6.947568893432617
    6. '```' → logprob: -7.822568893432617
    7. ' ):' → logprob: -8.072568893432617
    8. ').' → logprob: -8.447568893432617
    9. ' ):
' → logprob: -9.197568893432617
    10. '):
' → logprob: -9.197568893432617

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18016205728054047
    2. ')' → logprob: -2.055161952972412
    3. '"""' → logprob: -3.430161952972412
    4. '"""
' → logprob: -6.305161952972412
    5. '```' → logprob: -6.930161952972412
    6. '):' → logprob: -7.680161952972412
    7. '""' → logprob: -8.18016242980957
    8. '"' → logprob: -8.68016242980957
    9. ' """' → logprob: -8.68016242980957
    10. '
' → logprob: -9.30516242980957

Token 106: ' Returns' (ID: 9609)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.9293931126594543
    2. '"""' → logprob: -0.9293931126594543
    3. '   ' → logprob: -1.6793930530548096
    4. 'Returns' (adapté à ' Returns') → logprob: -4.054393291473389
    5. ' """
' → logprob: -5.929393291473389
    6. '""' → logprob: -6.679393291473389
    7. ' """' → logprob: -6.929393291473389
    8. ')' → logprob: -7.179393291473389
    9. '"' → logprob: -8.05439281463623
    10. '```' → logprob: -8.42939281463623

Token 107: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.29474177956581116
    2. ':' → logprob: -1.4197417497634888
    3. ' ):' → logprob: -5.544741630554199
    4. '   ' → logprob: -5.919741630554199
    5. '):' → logprob: -6.044741630554199
    6. ' int' → logprob: -6.794741630554199
    7. '  ' → logprob: -7.169741630554199
    8. ')' → logprob: -7.544741630554199
    9. ',' → logprob: -8.1697416305542
    10. ' )' → logprob: -8.1697416305542

Token 108: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08124799281358719
    2. '   ' → logprob: -2.5812480449676514
    3. '    ' → logprob: -6.831247806549072
    4. 'int' → logprob: -7.206247806549072
    5. '       ' → logprob: -7.706247806549072
    6. ' sum' → logprob: -9.83124828338623
    7. ' la' → logprob: -11.58124828338623
    8. ' ' → logprob: -11.95624828338623
    9. '        ' → logprob: -12.45624828338623
    10. '(int' → logprob: -13.20624828338623

Token 109: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.07907848060131073
    2. ' int' → logprob: -2.579078435897827
    3. '   ' → logprob: -8.579078674316406
    4. '
' → logprob: -15.204078674316406
    5. '(int' → logprob: -16.204078674316406
    6. '       ' → logprob: -16.329078674316406
    7. '	int' → logprob: -16.704078674316406
    8. 'float' → logprob: -16.829078674316406
    9. ' 
' → logprob: -17.079078674316406
    10. ' ' → logprob: -17.454078674316406

Token 110: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01202873419970274
    2. ' :' → logprob: -4.637028694152832
    3. '   ' → logprob: -6.137028694152832
    4. '    ' → logprob: -10.637028694152832
    5. '):' → logprob: -11.387028694152832
    6. ':return' → logprob: -11.387028694152832
    7. 'The' → logprob: -11.512028694152832
    8. 'La' → logprob: -12.137028694152832
    9. '```' → logprob: -12.262028694152832
    10. ',' → logprob: -12.262028694152832

Token 111: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.12857858836650848
    2. '   ' → logprob: -2.2535786628723145
    3. 'La' → logprob: -4.2535786628723145
    4. ' la' → logprob: -7.3785786628723145
    5. '    ' → logprob: -7.5035786628723145
    6. '       ' → logprob: -8.878578186035156
    7. ' Le' → logprob: -9.878578186035156
    8. ' sum' → logprob: -10.753578186035156
    9. ' Som' → logprob: -11.378578186035156
    10. ' somme' → logprob: -12.128578186035156

Token 112: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.029871052131056786
    2. 's' → logprob: -3.5298709869384766
    3. ' sum' → logprob: -9.904870986938477
    4. 'sum' → logprob: -10.779870986938477
    5. '   ' → logprob: -11.404870986938477
    6. ' total' → logprob: -11.904870986938477
    7. ' som' → logprob: -11.904870986938477
    8. 'som' → logprob: -12.029870986938477
    9. ' différence' → logprob: -12.154870986938477
    10. ' sommes' → logprob: -12.279870986938477

Token 113: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.0028111785650253296
    2. '_des' → logprob: -6.377810955047607
    3. ' de' → logprob: -7.627810955047607
    4. ' totale' → logprob: -8.502811431884766
    5. ' of' → logprob: -9.252811431884766
    6. 'des' → logprob: -9.752811431884766
    7. ' maximale' → logprob: -9.877811431884766
    8. ' )' → logprob: -10.127811431884766
    9. '   ' → logprob: -10.127811431884766
    10. '(
' → logprob: -11.002811431884766

Token 114: ' différences' (ID: 175718)
  Prédit: ' différences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différences' → logprob: -0.07804468274116516
    2. 'diff' → logprob: -3.2030446529388428
    3. ' diff' → logprob: -3.9530446529388428
    4. 'dif' → logprob: -4.453044891357422
    5. ' differences' → logprob: -6.203044891357422
    6. 'd' → logprob: -8.078044891357422
    7. ' différ' → logprob: -8.078044891357422
    8. ' valeurs' → logprob: -8.578044891357422
    9. ' différence' → logprob: -8.828044891357422
    10. ' dif' → logprob: -8.828044891357422

Token 115: ' positives' (ID: 95584)
  Prédit: ' positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.7225175499916077
    2. ' positives' → logprob: -1.097517490386963
    3. '   ' → logprob: -2.722517490386963
    4. '_positive' → logprob: -2.972517490386963
    5. ' _' → logprob: -4.472517490386963
    6. ' )' → logprob: -4.722517490386963
    7. '_' → logprob: -4.972517490386963
    8. ' posit' → logprob: -5.472517490386963
    9. ' positivas' → logprob: -5.472517490386963
    10. 'positive' → logprob: -5.597517490386963

Token 116: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03697570785880089
    2. '.
' → logprob: -4.786975860595703
    3. '.' → logprob: -4.911975860595703
    4. '
' → logprob: -5.036975860595703
    5. ':
' → logprob: -5.036975860595703
    6. '    
' → logprob: -5.786975860595703
    7. 'def' → logprob: -7.286975860595703
    8. ':' → logprob: -7.286975860595703
    9. '\n' → logprob: -7.411975860595703
    10. '):
' → logprob: -7.536975860595703

Token 117: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.028955455869436264
    2. ' toutes' → logprob: -4.903955459594727
    3. ' tous' → logprob: -5.028955459594727
    4. ' les' → logprob: -5.403955459594727
    5. ' ' → logprob: -5.778955459594727
    6. ' chaque' → logprob: -5.778955459594727
    7. 'i' → logprob: -6.028955459594727
    8. ' ' → logprob: -7.778955459594727
    9. ' lesquelles' → logprob: -8.278955459594727
    10. ' all' → logprob: -8.778955459594727

Token 118: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14588876068592072
    2. 'i' → logprob: -2.1458888053894043
    3. ' index' → logprob: -4.520888805389404
    4. 'index' → logprob: -5.145888805389404
    5. 'indice' → logprob: -6.645888805389404
    6. ' indice' → logprob: -7.645888805389404
    7. ' ' → logprob: -8.895888328552246
    8. ' élément' → logprob: -10.645888328552246
    9. 'élé' → logprob: -10.770888328552246
    10. ' ' → logprob: -10.895888328552246

Token 119: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47324031591415405
    2. '.' → logprob: -1.2232403755187988
    3. '
' → logprob: -3.598240375518799
    4. 's' → logprob: -4.473240375518799
    5. '.
' → logprob: -4.598240375518799
    6. '```' → logprob: -4.723240375518799
    7. ' entre' → logprob: -4.973240375518799
    8. ',' → logprob: -6.098240375518799
    9. '\n' → logprob: -6.098240375518799
    10. '    
' → logprob: -6.223240375518799

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011171492747962475
    2. '"""' → logprob: -5.136171340942383
    3. '
' → logprob: -5.886171340942383
    4. '```' → logprob: -7.136171340942383
    5. '"""
' → logprob: -7.511171340942383
    6. '\n' → logprob: -7.886171340942383
    7. '    
' → logprob: -8.761171340942383
    8. ')' → logprob: -9.011171340942383
    9. '"' → logprob: -9.011171340942383
    10. '""' → logprob: -9.136171340942383

Token 121: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2229032963514328
    2. '
' → logprob: -1.8479032516479492
    3. ')' → logprob: -4.347903251647949
    4. '\n' → logprob: -4.972903251647949
    5. '    
' → logprob: -4.972903251647949
    6. ':' → logprob: -5.347903251647949
    7. '):' → logprob: -5.847903251647949
    8. '"""' → logprob: -6.222903251647949
    9. '):
' → logprob: -6.472903251647949
    10. '  
' → logprob: -7.222903251647949

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020155981183052063
    2. '    
' → logprob: -6.752015590667725
    3. 'result' → logprob: -8.377016067504883
    4. '
' → logprob: -8.377016067504883
    5. 's' → logprob: -9.252016067504883
    6. ' result' → logprob: -9.252016067504883
    7. 'sum' → logprob: -10.502016067504883
    8. '   
' → logprob: -10.877016067504883
    9. ' 
' → logprob: -11.002016067504883
    10. 'def' → logprob: -11.002016067504883

Token 123: ' Ans' (ID: 22542)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6110326051712036
    2. 'result' → logprob: -1.1110326051712036
    3. 's' → logprob: -2.361032485961914
    4. 'sum' → logprob: -3.861032485961914
    5. ' total' → logprob: -4.736032485961914
    6. ' result' → logprob: -5.736032485961914
    7. '   ' → logprob: -8.236032485961914
    8. 'return' → logprob: -8.861032485961914
    9. ' somme' → logprob: -9.236032485961914
    10. ' sum' → logprob: -9.986032485961914

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006138768512755632
    2. '=' → logprob: -5.131138801574707
    3. ' +=' → logprob: -8.506138801574707
    4. '   ' → logprob: -12.131138801574707
    5. ' ' → logprob: -13.881138801574707
    6. '  ' → logprob: -14.256138801574707
    7. ' =
' → logprob: -15.131138801574707
    8. '+=' → logprob: -15.381138801574707
    9. '    ' → logprob: -16.25613784790039
    10. '_' → logprob: -16.25613784790039

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197160854935646
    2. ' ' → logprob: -2.811971664428711
    3. '   ' → logprob: -12.686971664428711
    4. ' ' → logprob: -14.561971664428711
    5. '  ' → logprob: -15.749471664428711
    6. 'sum' → logprob: -16.31197166442871
    7. 'int' → logprob: -17.43697166442871
    8. ' sum' → logprob: -17.62447166442871
    9. '	' → logprob: -17.74947166442871
    10. '[' → logprob: -17.87447166442871

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -9.750060081481934
    3. 'sum' → logprob: -13.375060081481934
    4. '   ' → logprob: -15.375060081481934
    5. 'int' → logprob: -16.68756103515625
    6. '  ' → logprob: -17.50006103515625
    7. ' sum' → logprob: -18.25006103515625
    8. '[' → logprob: -18.37506103515625
    9. '"' → logprob: -18.50006103515625
    10. 's' → logprob: -18.50006103515625

Token 127: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10723334550857544
    2. '   ' → logprob: -2.4822332859039307
    3. ' for' → logprob: -4.23223352432251
    4. 'for' → logprob: -6.85723352432251
    5. '    
' → logprob: -6.98223352432251
    6. '\n' → logprob: -7.35723352432251
    7. ' 
' → logprob: -7.98223352432251
    8. '  
' → logprob: -8.357233047485352
    9. '	for' → logprob: -8.607233047485352
    10. '
' → logprob: -9.607233047485352

Token 128: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02410445362329483
    2. 'for' → logprob: -3.774104356765747
    3. ' for' → logprob: -7.274104595184326
    4. '\n' → logprob: -9.649104118347168
    5. '   ' → logprob: -9.899104118347168
    6. ' 
' → logprob: -10.899104118347168
    7. '
' → logprob: -10.899104118347168
    8. '    
' → logprob: -12.149104118347168
    9. '  
' → logprob: -12.899104118347168
    10. '	for' → logprob: -13.149104118347168

Token 129: ' Variable' (ID: 36336)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.437640905380249
    2. ' ' → logprob: -1.687640905380249
    3. 'for' → logprob: -1.812640905380249
    4. ' accumulator' → logprob: -2.562640905380249
    5. ' somme' → logprob: -2.937640905380249
    6. '0' → logprob: -3.312640905380249
    7. ' Calcul' → logprob: -3.562640905380249
    8. 'Calcul' → logprob: -3.812640905380249
    9. '   ' → logprob: -3.937640905380249
    10. ' initial' → logprob: -4.062641143798828

Token 130: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4850802719593048
    2. ' for' → logprob: -1.7350802421569824
    3. ' =' → logprob: -2.1100802421569824
    4. ' +=' → logprob: -3.4850802421569824
    5. '=' → logprob: -4.485080242156982
    6. ' ' → logprob: -4.610080242156982
    7. ' de' → logprob: -4.735080242156982
    8. 'for' → logprob: -5.110080242156982
    9. '  ' → logprob: -5.235080242156982
    10. '_' → logprob: -5.360080242156982

Token 131: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.9667538404464722
    2. ' accum' → logprob: -1.7167538404464722
    3. 'i' → logprob: -1.9667538404464722
    4. ' i' → logprob: -2.3417539596557617
    5. 'stock' → logprob: -2.4667539596557617
    6. 'acc' → logprob: -3.3417539596557617
    7. 's' → logprob: -4.591753959655762
    8. ' accumulator' → logprob: -4.716753959655762
    9. ' cum' → logprob: -4.841753959655762
    10. '_' → logprob: -5.091753959655762

Token 132: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -7.231182826217264e-05
    2. 'e' → logprob: -9.625072479248047
    3. '   ' → logprob: -12.875072479248047
    4. ' ' → logprob: -13.750072479248047
    5. '=' → logprob: -14.250072479248047
    6. 'r' → logprob: -14.625072479248047
    7. ' er' → logprob: -15.125072479248047
    8. ' =' → logprob: -15.250072479248047
    9. ' e' → logprob: -15.250072479248047
    10. 'é' → logprob: -15.625072479248047

Token 133: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5139523148536682
    2. ' la' → logprob: -1.0139522552490234
    3. ' l' → logprob: -4.263952255249023
    4. '   ' → logprob: -4.388952255249023
    5. '  ' → logprob: -5.513952255249023
    6. '    ' → logprob: -5.763952255249023
    7. ' the' → logprob: -6.388952255249023
    8. ' le' → logprob: -6.763952255249023
    9. ' les' → logprob: -7.763952255249023
    10. 's' → logprob: -8.263952255249023

Token 134: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.3145962953567505
    2. 's' → logprob: -1.3145962953567505
    3. '   ' → logprob: -7.939596176147461
    4. ' ' → logprob: -7.939596176147461
    5. ' différence' → logprob: -8.439596176147461
    6. 'som' → logprob: -9.439596176147461
    7. 'sum' → logprob: -9.564596176147461
    8. ' som' → logprob: -9.689596176147461
    9. ' ' → logprob: -10.564596176147461
    10. ' sum' → logprob: -10.689596176147461

Token 135: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045128364115953445
    2. ' for' → logprob: -3.670128345489502
    3. 'for' → logprob: -4.795128345489502
    4. '    
' → logprob: -5.545128345489502
    5. '
' → logprob: -5.670128345489502
    6. '  
' → logprob: -7.170128345489502
    7. '  ' → logprob: -7.295128345489502
    8. ' ' → logprob: -7.670128345489502
    9. '	for' → logprob: -8.04512882232666
    10. ' 
' → logprob: -8.29512882232666

Token 136: ' des' (ID: 731)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0174357108771801
    2. '   ' → logprob: -4.267435550689697
    3. '    
' → logprob: -6.517435550689697
    4. ' for' → logprob: -7.142435550689697
    5. '  
' → logprob: -7.892435550689697
    6. '\n' → logprob: -8.392436027526855
    7. ' 
' → logprob: -8.767436027526855
    8. 'for' → logprob: -9.017436027526855
    9. '
' → logprob: -10.017436027526855
    10. '   
' → logprob: -10.267436027526855

Token 137: ' différences' (ID: 175718)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3698389530181885
    2. 'dif' → logprob: -1.2448389530181885
    3. 'd' → logprob: -4.744838714599609
    4. ' différences' → logprob: -4.869838714599609
    5. ' diff' → logprob: -6.119838714599609
    6. ' differences' → logprob: -6.244838714599609
    7. 'difference' → logprob: -8.74483871459961
    8. 'positive' → logprob: -9.11983871459961
    9. ' positive' → logprob: -9.24483871459961
    10. ' différ' → logprob: -10.24483871459961

Token 138: ' positives' (ID: 95584)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7911988496780396
    2. '
' → logprob: -1.1661988496780396
    3. '    
' → logprob: -2.41619873046875
    4. '  
' → logprob: -2.79119873046875
    5. ' 
' → logprob: -3.16619873046875
    6. ' for' → logprob: -4.16619873046875
    7. 'for' → logprob: -4.41619873046875
    8. '   
' → logprob: -5.04119873046875
    9. ' ' → logprob: -5.66619873046875
    10. '\n' → logprob: -6.79119873046875

Token 139: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0031199604272842407
    2. '   ' → logprob: -6.003119945526123
    3. '    
' → logprob: -8.253120422363281
    4. '\n' → logprob: -8.753120422363281
    5. '
' → logprob: -9.628120422363281
    6. ' for' → logprob: -9.878120422363281
    7. '  
' → logprob: -9.878120422363281
    8. ' 
' → logprob: -10.503120422363281
    9. 'for' → logprob: -11.128120422363281
    10. '   
' → logprob: -11.878120422363281

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014122605323791504
    2. ' for' → logprob: -4.764122486114502
    3. '
' → logprob: -5.639122486114502
    4. 'for' → logprob: -6.389122486114502
    5. '    
' → logprob: -8.51412296295166
    6. '	for' → logprob: -10.51412296295166
    7. '\n' → logprob: -11.38912296295166
    8. ' 
' → logprob: -11.51412296295166
    9. '  
' → logprob: -12.76412296295166
    10. '   
' → logprob: -13.51412296295166

Token 141: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9266199160483666e-05
    2. '   ' → logprob: -11.250019073486328
    3. ' for' → logprob: -12.000019073486328
    4. '	for' → logprob: -17.875019073486328
    5. 'fo' → logprob: -18.125019073486328
    6. 'i' → logprob: -18.250019073486328
    7. ' ' → logprob: -18.625019073486328
    8. '    
' → logprob: -19.500019073486328
    9. '```' → logprob: -19.625019073486328
    10. '
' → logprob: -19.750019073486328

Token 142: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036045825108885765
    2. ' for' → logprob: -5.628604412078857
    3. 'range' → logprob: -12.878604888916016
    4. '   ' → logprob: -13.628604888916016
    5. 'i' → logprob: -15.253604888916016
    6. ' ' → logprob: -15.753604888916016
    7. 'fo' → logprob: -16.128604888916016
    8. 'pour' → logprob: -16.753604888916016
    9. 'f' → logprob: -17.003604888916016
    10. 'For' → logprob: -17.253604888916016

Token 143: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0015887735644355416
    2. 'ours' → logprob: -6.626588821411133
    3. 'ourt' → logprob: -9.251588821411133
    4. '   ' → logprob: -10.376588821411133
    5. '
' → logprob: -10.501588821411133
    6. 'or' → logprob: -11.126588821411133
    7. 'o' → logprob: -11.126588821411133
    8. '_' → logprob: -11.751588821411133
    9. '```' → logprob: -11.751588821411133
    10. 'ou' → logprob: -12.001588821411133

Token 144: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2093551605939865
    2. '   ' → logprob: -2.084355115890503
    3. ' range' → logprob: -3.834355115890503
    4. ' i' → logprob: -3.959355115890503
    5. ' for' → logprob: -5.459355354309082
    6. 'e' → logprob: -5.459355354309082
    7. ' e' → logprob: -6.209355354309082
    8. ' in' → logprob: -6.584355354309082
    9. '  ' → logprob: -6.584355354309082
    10. 'range' → logprob: -6.584355354309082

Token 145: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004162687808275223
    2. 'i' → logprob: -5.879162788391113
    3. ' index' → logprob: -7.004162788391113
    4. ' ' → logprob: -8.504162788391113
    5. ' range' → logprob: -9.254162788391113
    6. 'index' → logprob: -10.129162788391113
    7. ' ' → logprob: -10.754162788391113
    8. 'range' → logprob: -11.004162788391113
    9. '   ' → logprob: -11.129162788391113
    10. 'indice' → logprob: -11.129162788391113

Token 146: ' des' (ID: 731)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.44185683131217957
    2. ' in' → logprob: -1.941856861114502
    3. ' de' → logprob: -2.691856861114502
    4. ' for' → logprob: -3.066856861114502
    5. '   ' → logprob: -3.816856861114502
    6. ' ' → logprob: -3.816856861114502
    7. ' range' → logprob: -3.941856861114502
    8. ' en' → logprob: -4.316856861114502
    9. 'range' → logprob: -4.816856861114502
    10. 'in' → logprob: -5.441856861114502

Token 147: ' listes' (ID: 179198)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.017451176419854164
    2. 'range' → logprob: -4.142451286315918
    3. ' V' → logprob: -6.892451286315918
    4. ' ' → logprob: -8.267451286315918
    5. ' N' → logprob: -9.517451286315918
    6. ' rang' → logprob: -10.642451286315918
    7. 'V' → logprob: -11.142451286315918
    8. 'N' → logprob: -12.017451286315918
    9. '   ' → logprob: -12.267451286315918
    10. ' ranges' → logprob: -12.892451286315918

Token 148: ' V' (ID: 631)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6052412986755371
    2. '   ' → logprob: -1.105241298675537
    3. 'for' → logprob: -2.605241298675537
    4. '
' → logprob: -3.355241298675537
    5. 'range' → logprob: -5.355241298675537
    6. ' range' → logprob: -6.105241298675537
    7. ' i' → logprob: -6.355241298675537
    8. '    
' → logprob: -6.480241298675537
    9. ' pour' → logprob: -7.480241298675537
    10. ' en' → logprob: -7.605241298675537

Token 149: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7372201681137085
    2. ' for' → logprob: -0.9872201681137085
    3. ',' → logprob: -2.362220287322998
    4. 'for' → logprob: -3.487220287322998
    5. ':' → logprob: -4.987220287322998
    6. ' ' → logprob: -5.862220287322998
    7. ' in' → logprob: -6.237220287322998
    8. ' ,' → logprob: -6.237220287322998
    9. ' i' → logprob: -6.362220287322998
    10. ' and' → logprob: -6.737220287322998

Token 150: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.3133459687232971
    2. 'C' → logprob: -1.3133459091186523
    3. ' ' → logprob: -10.188345909118652
    4. 'range' → logprob: -11.063345909118652
    5. ' range' → logprob: -11.438345909118652
    6. '   ' → logprob: -11.438345909118652
    7. ',' → logprob: -13.063345909118652
    8. ' ' → logprob: -13.250845909118652
    9. 's' → logprob: -14.500845909118652
    10. '  ' → logprob: -14.563345909118652

Token 151: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4195660948753357
    2. '
' → logprob: -1.1695661544799805
    3. ' for' → logprob: -3.9195661544799805
    4. '    
' → logprob: -4.9195661544799805
    5. 'for' → logprob: -6.2945661544799805
    6. '  
' → logprob: -6.6695661544799805
    7. ' 
' → logprob: -7.1695661544799805
    8. ',' → logprob: -7.7945661544799805
    9. '\n' → logprob: -8.54456615447998
    10. ':' → logprob: -8.66956615447998

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14648538827896118
    2. ' for' → logprob: -2.2714853286743164
    3. '
' → logprob: -3.8964853286743164
    4. '    
' → logprob: -5.021485328674316
    5. 'for' → logprob: -6.021485328674316
    6. ' 
' → logprob: -6.521485328674316
    7. '  
' → logprob: -6.771485328674316
    8. ',' → logprob: -7.646485328674316
    9. ':' → logprob: -8.896485328674316
    10. ' ' → logprob: -9.146485328674316

Token 153: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5775246620178223
    2. 'for' (adapté à ' for') → logprob: -0.8275246620178223
    3. '   ' → logprob: -6.452524662017822
    4. '	for' → logprob: -12.202524185180664
    5. ' ' → logprob: -14.702524185180664
    6. '    
' → logprob: -14.952524185180664
    7. '
' → logprob: -15.077524185180664
    8. ' i' → logprob: -15.327524185180664
    9. ' ' → logprob: -15.452524185180664
    10. 'i' → logprob: -15.702524185180664

Token 154: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00039468807517550886
    2. ' ' → logprob: -8.125394821166992
    3. 'i' → logprob: -9.250394821166992
    4. '	i' → logprob: -13.750394821166992
    5. ' ' → logprob: -14.875394821166992
    6. ' in' → logprob: -15.125394821166992
    7. ' ‌' → logprob: -15.375394821166992
    8. ' index' → logprob: -15.875394821166992
    9. ' I' → logprob: -15.875394821166992
    10. ' _' → logprob: -16.000394821166992

Token 155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032448475249111652
    2. 'in' → logprob: -5.878244876861572
    3. ' ' → logprob: -7.753244876861572
    4. ' i' → logprob: -12.003244400024414
    5. ',' → logprob: -13.753244400024414
    6. '  ' → logprob: -14.253244400024414
    7. ' ' → logprob: -14.503244400024414
    8. ' ,' → logprob: -15.378244400024414
    9. '   ' → logprob: -15.503244400024414
    10. ')' → logprob: -15.628244400024414

Token 156: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001503313542343676
    2. 'range' → logprob: -6.5015034675598145
    3. ' ' → logprob: -14.626502990722656
    4. ' xrange' → logprob: -14.876502990722656
    5. '	range' → logprob: -15.626502990722656
    6. ' rang' → logprob: -17.751502990722656
    7. '(range' → logprob: -18.126502990722656
    8. ')' → logprob: -18.751502990722656
    9. ' in' → logprob: -18.876502990722656
    10. ' rango' → logprob: -19.126502990722656

Token 157: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3870360851287842
    2. '(' → logprob: -1.1370360851287842
    3. ' (' → logprob: -8.887036323547363
    4. ' N' → logprob: -11.262036323547363
    5. '(
' → logprob: -12.137036323547363
    6. ')' → logprob: -12.637036323547363
    7. '(len' → logprob: -13.012036323547363
    8. '(n' → logprob: -13.262036323547363
    9. 'N' → logprob: -14.137036323547363
    10. ' ' → logprob: -15.762036323547363

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015481874579563737
    2. '):
' → logprob: -6.7515482902526855
    3. ')' → logprob: -8.126547813415527
    4. ' ):' → logprob: -9.876547813415527
    5. '   ' → logprob: -10.751547813415527
    6. ':' → logprob: -11.751547813415527
    7. '):
' → logprob: -15.001547813415527
    8. '):

' → logprob: -15.001547813415527
    9. ' ' → logprob: -15.376547813415527
    10. '():' → logprob: -15.626547813415527

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005473756231367588
    2. ' if' → logprob: -6.005473613739014
    3. '
' → logprob: -6.505473613739014
    4. '   ' → logprob: -7.755473613739014
    5. 'if' → logprob: -8.380474090576172
    6. '<|end|>' → logprob: -8.380474090576172
    7. '        
' → logprob: -8.630474090576172
    8. '    
' → logprob: -9.005474090576172
    9. ' 
' → logprob: -9.255474090576172
    10. '    ' → logprob: -10.005474090576172

Token 160: ' #' (ID: 1069)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6187940239906311
    2. ' if' → logprob: -1.4937939643859863
    3. ' diff' → logprob: -2.1187939643859863
    4. '       ' → logprob: -3.1187939643859863
    5. 'if' → logprob: -3.1187939643859863
    6. 'difference' → logprob: -4.368793964385986
    7. ' difference' → logprob: -5.118793964385986
    8. 'd' → logprob: -5.493793964385986
    9. '   ' → logprob: -5.743793964385986
    10. '	diff' → logprob: -7.368793964385986

Token 161: ' Vér' (ID: 159169)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.35657423734664917
    2. 'difference' → logprob: -1.856574296951294
    3. ' diff' → logprob: -2.231574296951294
    4. ' difference' → logprob: -4.356574058532715
    5. 'if' → logprob: -4.481574058532715
    6. ' if' → logprob: -4.981574058532715
    7. '   ' → logprob: -6.231574058532715
    8. ' différence' → logprob: -6.606574058532715
    9. 'd' → logprob: -6.731574058532715
    10. '	diff' → logprob: -8.356574058532715

Token 162: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.000486680306494236
    2. 'if' → logprob: -8.125486373901367
    3. 'ifi' → logprob: -9.250486373901367
    4. 'ifier' → logprob: -10.375486373901367
    5. 'ifiez' → logprob: -10.625486373901367
    6. 'i' → logprob: -11.000486373901367
    7. '   ' → logprob: -11.125486373901367
    8. 'ifié' → logprob: -12.875486373901367
    9. 'ife' → logprob: -13.875486373901367
    10. '       ' → logprob: -14.000486373901367

Token 163: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.027437470853328705
    2. ' ' → logprob: -3.652437448501587
    3. 'if' → logprob: -7.902437686920166
    4. ' i' → logprob: -8.402437210083008
    5. ' si' → logprob: -9.152437210083008
    6. '  ' → logprob: -9.277437210083008
    7. ' (' → logprob: -9.402437210083008
    8. '   ' → logprob: -9.777437210083008
    9. ' V' → logprob: -10.277437210083008
    10. ' space' → logprob: -10.652437210083008

Token 164: ' la' (ID: 557)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.02495906688272953
    2. 'V' → logprob: -3.774959087371826
    3. ' (' → logprob: -6.524959087371826
    4. '(V' → logprob: -8.774958610534668
    5. ' ' → logprob: -10.024958610534668
    6. '	V' → logprob: -11.024958610534668
    7. '   ' → logprob: -11.024958610534668
    8. '(' → logprob: -11.399958610534668
    9. ' ' → logprob: -13.649958610534668
    10. '    ' → logprob: -14.212458610534668

Token 165: ' différence' (ID: 79196)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.16420063376426697
    2. 'V' → logprob: -2.0392005443573
    3. ' difference' → logprob: -4.539200782775879
    4. 'difference' → logprob: -5.164200782775879
    5. 'diff' → logprob: -6.414200782775879
    6. ' (' → logprob: -6.789200782775879
    7. ' différence' → logprob: -6.789200782775879
    8. '(V' → logprob: -7.289200782775879
    9. ' diff' → logprob: -9.664200782775879
    10. ' ' → logprob: -9.789200782775879

Token 166: ' est' (ID: 893)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.1742820292711258
    2. ' ' → logprob: -3.0492820739746094
    3. ' entre' → logprob: -3.5492820739746094
    4. ' between' → logprob: -3.7992820739746094
    5. 'V' → logprob: -4.049282073974609
    6. '(V' → logprob: -4.674282073974609
    7. '>' → logprob: -4.799282073974609
    8. ' >' → logprob: -4.799282073974609
    9. '   ' → logprob: -5.424282073974609
    10. ' positive' → logprob: -5.674282073974609

Token 167: ' positive' (ID: 8841)
  Prédit: ' positive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.137652188539505
    2. 'positive' → logprob: -2.6376521587371826
    3. '>' → logprob: -3.6376521587371826
    4. ' supérieure' → logprob: -4.137652397155762
    5. ' >' → logprob: -5.012652397155762
    6. 'strict' → logprob: -5.387652397155762
    7. ' strict' → logprob: -6.512652397155762
    8. ' ' → logprob: -7.512652397155762
    9. ' positif' → logprob: -8.137652397155762
    10. 'posit' → logprob: -8.512652397155762

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0750974491238594
    2. ':' → logprob: -3.0750975608825684
    3. ' :' → logprob: -4.450097560882568
    4. ' if' → logprob: -5.950097560882568
    5. ' and' → logprob: -5.950097560882568
    6. '           ' → logprob: -5.950097560882568
    7. ',' → logprob: -6.325097560882568
    8. '        ' → logprob: -6.950097560882568
    9. '        
' → logprob: -6.950097560882568
    10. '   ' → logprob: -7.075097560882568

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028770342469215393
    2. ' if' → logprob: -6.252877235412598
    3. ':' → logprob: -8.252877235412598
    4. ',' → logprob: -9.002877235412598
    5. '        
' → logprob: -9.377877235412598
    6. ' :' → logprob: -9.502877235412598
    7. '        ' → logprob: -9.502877235412598
    8. 'if' → logprob: -9.627877235412598
    9. '           ' → logprob: -9.627877235412598
    10. '   ' → logprob: -10.002877235412598

Token 170: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26671451330184937
    2. 'if' (adapté à ' if') → logprob: -2.141714572906494
    3. 'diff' → logprob: -2.391714572906494
    4. ' diff' → logprob: -4.391714572906494
    5. '       ' → logprob: -4.641714572906494
    6. 'difference' → logprob: -6.391714572906494
    7. ' difference' → logprob: -7.141714572906494
    8. 'd' → logprob: -8.016714096069336
    9. ' différence' → logprob: -9.641714096069336
    10. '	diff' → logprob: -9.641714096069336

Token 171: ' V' (ID: 631)
  Prédit: ' V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.0015436685644090176
    2. 'V' → logprob: -6.6265435218811035
    3. ' (' → logprob: -8.501543998718262
    4. '(V' → logprob: -11.751543998718262
    5. ' ' → logprob: -12.626543998718262
    6. ' ' → logprob: -13.001543998718262
    7. '(' → logprob: -14.251543998718262
    8. '	V' → logprob: -14.751543998718262
    9. '    ' → logprob: -16.876543045043945
    10. '   ' → logprob: -17.251543045043945

Token 172: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024801772087812424
    2. '[' → logprob: -6.0024800300598145
    3. ' [' → logprob: -12.627480506896973
    4. '[
' → logprob: -14.252480506896973
    5. '[I' → logprob: -14.752480506896973
    6. '[V' → logprob: -17.752479553222656
    7. '[j' → logprob: -18.252479553222656
    8. ')' → logprob: -18.252479553222656
    9. '[n' → logprob: -18.502479553222656
    10. ' i' → logprob: -18.627479553222656

Token 173: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015890540555119514
    2. ' -' → logprob: -4.890890598297119
    3. '-' → logprob: -5.140890598297119
    4. '>' → logprob: -7.015890598297119
    5. ' ]' → logprob: -7.265890598297119
    6. ']>' → logprob: -8.140890121459961
    7. '[' → logprob: -8.890890121459961
    8. ')' → logprob: -9.015890121459961
    9. ' >' → logprob: -9.265890121459961
    10. ' ' → logprob: -9.265890121459961

Token 174: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09280773997306824
    2. '-' → logprob: -2.8428077697753906
    3. ' >' → logprob: -3.8428077697753906
    4. '>' → logprob: -5.092807769775391
    5. ' ' → logprob: -5.967807769775391
    6. '[' → logprob: -9.59280776977539
    7. ')' → logprob: -9.59280776977539
    8. '">' → logprob: -10.84280776977539
    9. ']' → logprob: -11.21780776977539
    10. ' ' → logprob: -11.34280776977539

Token 175: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.2519325315952301
    2. 'C' → logprob: -1.5019325017929077
    3. '	C' → logprob: -13.751932144165039
    4. '>C' → logprob: -14.001932144165039
    5. '<|end|>' → logprob: -14.501932144165039
    6. ' ' → logprob: -14.501932144165039
    7. ' ' → logprob: -15.751932144165039
    8. '   ' → logprob: -16.37693214416504
    9. '>' → logprob: -17.25193214416504
    10. '_C' → logprob: -17.37693214416504

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018220659694634378
    2. '[' → logprob: -8.625182151794434
    3. 'i' → logprob: -13.375182151794434
    4. ' [' → logprob: -14.375182151794434
    5. ' i' → logprob: -15.625182151794434
    6. ')' → logprob: -15.625182151794434
    7. '[
' → logprob: -16.12518310546875
    8. '(i' → logprob: -16.50018310546875
    9. '[I' → logprob: -16.87518310546875
    10. ']' → logprob: -17.00018310546875

Token 177: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4963199198246002
    2. ')' → logprob: -1.4963198900222778
    3. '>' → logprob: -2.1213200092315674
    4. ' >' → logprob: -3.2463200092315674
    5. ']>' → logprob: -4.996319770812988
    6. ')>' → logprob: -6.871319770812988
    7. ' ]' → logprob: -7.996319770812988
    8. ' )' → logprob: -9.246319770812988
    9. '']' → logprob: -9.746319770812988
    10. '">' → logprob: -9.746319770812988

Token 178: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.47469833493232727
    2. ' >' → logprob: -0.9746983051300049
    3. ')' → logprob: -7.724698543548584
    4. ' ' → logprob: -9.224698066711426
    5. ')>' → logprob: -10.224698066711426
    6. '<|end|>' → logprob: -10.974698066711426
    7. ']' → logprob: -12.224698066711426
    8. ' )' → logprob: -12.474698066711426
    9. '   ' → logprob: -12.974698066711426
    10. '}' → logprob: -12.974698066711426

Token 179: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.474082887172699
    2. '0' → logprob: -0.974082887172699
    3. '<|end|>' → logprob: -12.099082946777344
    4. ' ' → logprob: -15.599082946777344
    5. '  ' → logprob: -17.099082946777344
    6. '۰' → logprob: -17.224082946777344
    7. ' )' → logprob: -17.599082946777344
    8. ' 
' → logprob: -17.849082946777344
    9. '<|end|>' → logprob: -18.474082946777344
    10. ')' → logprob: -18.474082946777344

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019288709154352546
    2. ' ' → logprob: -6.251928806304932
    3. '<|end|>' → logprob: -15.50192928314209
    4. '۰' → logprob: -18.376928329467773
    5. '```' → logprob: -19.626928329467773
    6. '  ' → logprob: -20.126928329467773
    7. ')' → logprob: -20.251928329467773
    8. ' ' → logprob: -20.251928329467773
    9. ' ' → logprob: -20.876928329467773
    10. '   ' → logprob: -21.689428329467773

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031432549003511667
    2. ':
' → logprob: -6.128143310546875
    3. '):' → logprob: -7.128143310546875
    4. '       ' → logprob: -9.753143310546875
    5. ' :' → logprob: -9.753143310546875
    6. '           ' → logprob: -10.753143310546875
    7. '):
' → logprob: -11.753143310546875
    8. ')' → logprob: -12.003143310546875
    9. ' :
' → logprob: -14.378143310546875
    10. '():' → logprob: -14.378143310546875

Token 182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032301140017807484
    2. ':' → logprob: -6.503230094909668
    3. '       ' → logprob: -7.628230094909668
    4. '               ' → logprob: -7.628230094909668
    5. '            ' → logprob: -8.878230094909668
    6. ' :' → logprob: -8.878230094909668
    7. ' ' → logprob: -9.628230094909668
    8. ')' → logprob: -9.878230094909668
    9. '        ' → logprob: -9.878230094909668
    10. '   ' → logprob: -10.003230094909668

Token 183: ' Ans' (ID: 22542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1611325591802597
    2. '               ' → logprob: -2.411132574081421
    3. ' Ans' → logprob: -3.036132574081421
    4. 'Ans' (adapté à ' Ans') → logprob: -4.786132335662842
    5. '
' → logprob: -6.911132335662842
    6. '       ' → logprob: -7.536132335662842
    7. ' ans' → logprob: -8.0361328125
    8. ' Ansatz' → logprob: -8.0361328125
    9. '            ' → logprob: -9.2861328125
    10. '   ' → logprob: -9.2861328125

Token 184: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0031878093723207712
    2. '+=' → logprob: -5.753187656402588
    3. '            ' → logprob: -12.628188133239746
    4. '    ' → logprob: -13.128188133239746
    5. '           ' → logprob: -13.128188133239746
    6. '   ' → logprob: -13.753188133239746
    7. '+' → logprob: -14.503188133239746
    8. ']+=' → logprob: -15.003188133239746
    9. '        ' → logprob: -15.253188133239746
    10. '       ' → logprob: -15.753188133239746

Token 185: ' V' (ID: 631)
  Prédit: ' V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.4294460117816925
    2. 'V' → logprob: -1.0544459819793701
    3. ' (' → logprob: -7.804446220397949
    4. '(V' → logprob: -8.05444622039795
    5. '(' → logprob: -12.05444622039795
    6. ' ' → logprob: -12.30444622039795
    7. '	V' → logprob: -12.42944622039795
    8. '   ' → logprob: -12.55444622039795
    9. ' ' → logprob: -14.42944622039795
    10. '_V' → logprob: -15.17944622039795

Token 186: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019293125660624355
    2. '[' → logprob: -8.625192642211914
    3. ' [' → logprob: -11.250192642211914
    4. '[
' → logprob: -15.000192642211914
    5. '[I' → logprob: -17.750192642211914
    6. '[index' → logprob: -18.625192642211914
    7. 'i' → logprob: -18.750192642211914
    8. '```' → logprob: -18.750192642211914
    9. '[V' → logprob: -19.125192642211914
    10. '[int' → logprob: -19.875192642211914

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005590294953435659
    2. '[i' → logprob: -5.255590438842773
    3. ' -' → logprob: -8.630590438842773
    4. '[' → logprob: -9.880590438842773
    5. ' ]' → logprob: -9.880590438842773
    6. '-' → logprob: -10.005590438842773
    7. ']-' → logprob: -11.130590438842773
    8. '   ' → logprob: -12.130590438842773
    9. '][' → logprob: -12.630590438842773
    10. ' ' → logprob: -13.380590438842773

Token 188: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029889097437262535
    2. '-' → logprob: -3.5298891067504883
    3. '[i' → logprob: -9.029889106750488
    4. '[' → logprob: -11.654889106750488
    5. ' ' → logprob: -12.154889106750488
    6. ' ' → logprob: -13.404889106750488
    7. '[-' → logprob: -14.154889106750488
    8. '   ' → logprob: -14.529889106750488
    9. ' -
' → logprob: -14.904889106750488
    10. '[]' → logprob: -15.154889106750488

Token 189: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.11282410472631454
    2. ' C' → logprob: -2.2378242015838623
    3. ' ' → logprob: -13.987824440002441
    4. ' ' → logprob: -14.737824440002441
    5. '```' → logprob: -15.987824440002441
    6. '   ' → logprob: -16.237823486328125
    7. '	C' → logprob: -16.487823486328125
    8. '_C' → logprob: -16.737823486328125
    9. '<|end|>' → logprob: -16.987823486328125
    10. '`' → logprob: -17.487823486328125

Token 190: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.125006675720215
    3. 'i' → logprob: -14.250006675720215
    4. '[
' → logprob: -16.6250057220459
    5. ']' → logprob: -18.0000057220459
    6. '[I' → logprob: -18.5000057220459
    7. ' [' → logprob: -18.6250057220459
    8. '```' → logprob: -19.0000057220459
    9. '][' → logprob: -19.5000057220459
    10. '   ' → logprob: -20.6250057220459

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008704868378117681
    2. ']
' → logprob: -7.125870704650879
    3. '       ' → logprob: -10.750870704650879
    4. ')' → logprob: -10.750870704650879
    5. ' ]' → logprob: -11.500870704650879
    6. '   ' → logprob: -12.250870704650879
    7. ']

' → logprob: -12.875870704650879
    8. '<|end|>' → logprob: -12.875870704650879
    9. '']' → logprob: -14.500870704650879
    10. '           ' → logprob: -14.500870704650879

Token 192: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004092174116522074
    2. '   ' → logprob: -6.004092216491699
    3. 'return' → logprob: -6.879092216491699
    4. ' return' → logprob: -8.0040922164917
    5. '
' → logprob: -9.2540922164917
    6. '    
' → logprob: -9.6290922164917
    7. '\n' → logprob: -10.1290922164917
    8. '  
' → logprob: -10.5040922164917
    9. ' 
' → logprob: -11.3790922164917
    10. '

' → logprob: -12.3790922164917

Token 193: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007263474632054567
    2. '<|end|>' → logprob: -5.757263660430908
    3. 'return' → logprob: -6.382263660430908
    4. '   ' → logprob: -6.632263660430908
    5. ' return' → logprob: -7.632263660430908
    6. '\n' → logprob: -8.38226318359375
    7. '    
' → logprob: -9.38226318359375
    8. '  
' → logprob: -9.50726318359375
    9. '
' → logprob: -9.63226318359375
    10. ':return' → logprob: -10.63226318359375

Token 194: ' Aj' (ID: 28294)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -9.901345038088039e-05
    2. 'outer' → logprob: -11.000099182128906
    3. 'outez' → logprob: -11.250099182128906
    4. '#' → logprob: -11.750099182128906
    5. 'o' → logprob: -11.875099182128906
    6. '\' → logprob: -12.000099182128906
    7. 'outes' → logprob: -12.125099182128906
    8. '
' → logprob: -12.375099182128906
    9. 'ou' → logprob: -12.375099182128906
    10. 'out' → logprob: -12.500099182128906

Token 196: ' la' (ID: 557)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.09997133165597916
    2. ' ' → logprob: -2.599971294403076
    3. '<|end|>' → logprob: -4.724971294403076
    4. ' )' → logprob: -5.099971294403076
    5. 'V' → logprob: -6.099971294403076
    6. '1' → logprob: -6.724971294403076
    7. ' (' → logprob: -7.099971294403076
    8. ')' → logprob: -7.599971294403076
    9. ' ' → logprob: -8.849971771240234
    10. '<|end|>' → logprob: -9.099971771240234

Token 197: ' différence' (ID: 79196)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.5447337627410889
    2. ' difference' → logprob: -1.6697337627410889
    3. 'diff' → logprob: -1.9197337627410889
    4. ' différence' → logprob: -3.419733762741089
    5. ' V' → logprob: -3.544733762741089
    6. ' )' → logprob: -5.044734001159668
    7. 'V' → logprob: -5.419734001159668
    8. ')' → logprob: -5.794734001159668
    9. 'd' → logprob: -6.044734001159668
    10. 'dif' → logprob: -7.294734001159668

Token 198: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01169488113373518
    2. '<|end|>' → logprob: -4.88669490814209
    3. 'return' → logprob: -6.76169490814209
    4. '\n' → logprob: -7.13669490814209
    5. '   ' → logprob: -7.51169490814209
    6. '
' → logprob: -7.88669490814209
    7. '<|end|>' → logprob: -8.01169490814209
    8. '  
' → logprob: -8.26169490814209
    9. ' return' → logprob: -8.38669490814209
    10. '    
' → logprob: -8.76169490814209

Token 199: ' la' (ID: 557)
  Prédit: ' Ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Ans' → logprob: -0.09302425384521484
    2. 'Ans' → logprob: -2.468024253845215
    3. ' Ansatz' → logprob: -5.593024253845215
    4. ' ' → logprob: -9.218024253845215
    5. ' ans' → logprob: -9.718024253845215
    6. ' ' → logprob: -9.718024253845215
    7. '_ans' → logprob: -9.968024253845215
    8. 'ans' → logprob: -10.843024253845215
    9. 'Answer' → logprob: -11.218024253845215
    10. ' An' → logprob: -11.468024253845215

Token 200: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7013540267944336
    2. ' somme' → logprob: -1.0763540267944336
    3. 'sum' → logprob: -2.4513540267944336
    4. 'som' → logprob: -3.4513540267944336
    5. 'Ans' → logprob: -3.5763540267944336
    6. 'ans' → logprob: -4.576354026794434
    7. 'total' → logprob: -6.076354026794434
    8. 'Som' → logprob: -6.701354026794434
    9. ' Ans' → logprob: -7.201354026794434
    10. 'Answer' → logprob: -7.576354026794434

Token 201: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18439815938472748
    2. '
' → logprob: -1.8093981742858887
    3. 'return' → logprob: -6.559398174285889
    4. '    
' → logprob: -6.559398174285889
    5. ' return' → logprob: -7.309398174285889
    6. '<|end|>' → logprob: -7.684398174285889
    7. '	return' → logprob: -8.55939769744873
    8. '\n' → logprob: -8.68439769744873
    9. '  
' → logprob: -9.55939769744873
    10. '
' → logprob: -9.68439769744873

Token 202: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009056024253368378
    2. '   ' → logprob: -4.884056091308594
    3. '    
' → logprob: -7.384056091308594
    4. ' return' → logprob: -8.259056091308594
    5. '  
' → logprob: -8.634056091308594
    6. 'return' → logprob: -9.134056091308594
    7. '\n' → logprob: -9.134056091308594
    8. '
' → logprob: -9.509056091308594
    9. '<|end|>' → logprob: -10.384056091308594
    10. ' 
' → logprob: -10.634056091308594

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10206528753042221
    2. '
' → logprob: -2.352065324783325
    3. 'return' → logprob: -6.727065086364746
    4. '    
' → logprob: -7.602065086364746
    5. ' return' → logprob: -8.852065086364746
    6. '  
' → logprob: -12.352065086364746
    7. '
' → logprob: -12.352065086364746
    8. ' 
' → logprob: -13.227065086364746
    9. '	return' → logprob: -13.477065086364746
    10. '

' → logprob: -13.477065086364746

Token 204: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011397816240787506
    2. '   ' → logprob: -4.511397838592529
    3. ' return' → logprob: -8.011397361755371
    4. '
' → logprob: -11.011397361755371
    5. '	return' → logprob: -14.136397361755371
    6. '    
' → logprob: -14.136397361755371
    7. '```' → logprob: -16.136398315429688
    8. ' ' → logprob: -16.886398315429688
    9. '{return' → logprob: -17.136398315429688
    10. 'ret' → logprob: -17.136398315429688

Token 205: ' Ans' (ID: 22542)
  Prédit: ' Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ans' → logprob: -0.0004419935867190361
    2. 'Ans' → logprob: -7.750442028045654
    3. ' Ansatz' → logprob: -12.000441551208496
    4. ' ans' → logprob: -12.500441551208496
    5. ' An' → logprob: -14.500441551208496
    6. ' ' → logprob: -14.750441551208496
    7. '_ans' → logprob: -15.125441551208496
    8. ' ' → logprob: -16.500442504882812
    9. ' Answers' → logprob: -17.625442504882812
    10. ' Answer' → logprob: -18.125442504882812

Token 206: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6549011468887329
    2. ' calculate' → logprob: -1.404901146888733
    3. ' max' → logprob: -2.7799010276794434
    4. ' compute' → logprob: -3.4049010276794434
    5. ' sum' → logprob: -3.4049010276794434
    6. ' maximum' → logprob: -3.7799010276794434
    7. ' process' → logprob: -3.7799010276794434
    8. ' find' → logprob: -3.9049010276794434
    9. ' solve' → logprob: -4.529901027679443
    10. ' maximize' → logprob: -5.404901027679443

Token 209: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000536828360054642
    2. ' ():' → logprob: -7.750536918640137
    3. '(' → logprob: -9.375536918640137
    4. '()' → logprob: -11.000536918640137
    5. '():
' → logprob: -13.000536918640137
    6. ':' → logprob: -13.875536918640137
    7. '_' → logprob: -14.625536918640137
    8. ' ()' → logprob: -15.250536918640137
    9. '(:' → logprob: -15.250536918640137
    10. '()>' → logprob: -15.250536918640137

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005293221911415458
    2. 'n' → logprob: -8.750529289245605
    3. ' N' → logprob: -8.750529289245605
    4. '    
' → logprob: -9.000529289245605
    5. ' n' → logprob: -10.250529289245605
    6. ' 
' → logprob: -11.500529289245605
    7. '    ' → logprob: -11.875529289245605
    8. 'N' → logprob: -12.375529289245605
    9. '(n' → logprob: -12.375529289245605
    10. '```' → logprob: -12.375529289245605

Token 211: ' """
' (ID: 7037)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.1868416965007782
    2. 'N' → logprob: -2.5618417263031006
    3. '   ' → logprob: -2.6868417263031006
    4. ' n' → logprob: -4.1868414878845215
    5. 'n' → logprob: -4.8118414878845215
    6. ' import' → logprob: -6.5618414878845215
    7. 'import' → logprob: -8.43684196472168
    8. '    
' → logprob: -10.31184196472168
    9. ' 
' → logprob: -10.56184196472168
    10. '#' → logprob: -10.68684196472168

Token 212: '   ' (ID: 271)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.36338338255882263
    2. 'N' → logprob: -2.2383832931518555
    3. ' n' → logprob: -2.2383832931518555
    4. 'n' → logprob: -2.9883832931518555
    5. '   ' → logprob: -3.2383832931518555
    6. '#' → logprob: -8.363383293151855
    7. ' import' → logprob: -8.363383293151855
    8. ' input' → logprob: -8.363383293151855
    9. ' #' → logprob: -8.613383293151855
    10. 'import' → logprob: -8.988383293151855

Token 213: ' Lit' (ID: 45595)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6194879412651062
    2. 'N' → logprob: -1.744488000869751
    3. '   ' → logprob: -1.744488000869751
    4. ' n' → logprob: -3.369488000869751
    5. '#' → logprob: -3.369488000869751
    6. 'n' → logprob: -4.119487762451172
    7. ' #' → logprob: -4.369487762451172
    8. ' import' → logprob: -5.869487762451172
    9. ' values' → logprob: -6.244487762451172
    10. 'import' → logprob: -6.619487762451172

Token 214: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08583542704582214
    2. '   ' → logprob: -2.5858354568481445
    3. ' les' → logprob: -5.8358354568481445
    4. 'import' → logprob: -7.0858354568481445
    5. ' des' → logprob: -7.0858354568481445
    6. ' la' → logprob: -7.7108354568481445
    7. '():' → logprob: -7.7108354568481445
    8. ' ' → logprob: -7.8358354568481445
    9. ' le' → logprob: -8.585835456848145
    10. ' un' → logprob: -9.085835456848145

Token 215: ' entr' (ID: 7072)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.24658173322677612
    2. ' valeurs' → logprob: -2.371581792831421
    3. ' entr' → logprob: -2.996581792831421
    4. ' inputs' → logprob: -2.996581792831421
    5. ' input' → logprob: -4.621581554412842
    6. 'entr' → logprob: -5.746581554412842
    7. 'input' → logprob: -6.121581554412842
    8. 'inputs' → logprob: -6.496581554412842
    9. 'val' → logprob: -6.496581554412842
    10. 'ent' → logprob: -6.621581554412842

Token 216: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.028380779549479485
    2. 'ees' → logprob: -4.028380870819092
    3. 'ée' → logprob: -4.903380870819092
    4. 'e' → logprob: -7.278380870819092
    5. 'rees' → logprob: -7.403380870819092
    6. '   ' → logprob: -7.528380870819092
    7. 'es' → logprob: -8.028380393981934
    8. 'r' → logprob: -8.278380393981934
    9. '```' → logprob: -10.028380393981934
    10. 'ies' → logprob: -10.278380393981934

Token 217: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1709059327840805
    2. ',' → logprob: -2.670905828475952
    3. '()' → logprob: -3.045905828475952
    4. '():' → logprob: -4.420906066894531
    5. ' et' → logprob: -4.920906066894531
    6. '():
' → logprob: -5.420906066894531
    7. ':' → logprob: -5.545906066894531
    8. 'import' → logprob: -6.170906066894531
    9. 'def' → logprob: -6.670906066894531
    10. ' N' → logprob: -6.920906066894531

Token 218: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012864251621067524
    2. ',' → logprob: -7.626286506652832
    3. '()' → logprob: -7.626286506652832
    4. ' et' → logprob: -9.126286506652832
    5. '():' → logprob: -9.501286506652832
    6. ':' → logprob: -10.376286506652832
    7. '    
' → logprob: -10.501286506652832
    8. '
' → logprob: -11.626286506652832
    9. ' :' → logprob: -11.751286506652832
    10. '   ' → logprob: -12.001286506652832

Token 219: ' effect' (ID: 3159)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5892196297645569
    2. ' calc' → logprob: -1.339219570159912
    3. ' appelle' → logprob: -2.589219570159912
    4. ' N' → logprob: -4.089219570159912
    5. ' ex' → logprob: -4.214219570159912
    6. ' les' → logprob: -4.339219570159912
    7. 'cal' → logprob: -4.839219570159912
    8. ' traite' → logprob: -4.839219570159912
    9. ' calcul' → logprob: -5.214219570159912
    10. ' calculates' → logprob: -5.464219570159912

Token 220: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -1.0683535037969705e-05
    2. 'u' → logprob: -11.50001049041748
    3. 'uate' → logprob: -16.000011444091797
    4. '   ' → logprob: -16.125011444091797
    5. 'ues' → logprob: -16.125011444091797
    6. 'uez' → logprob: -16.875011444091797
    7. 'uer' → logprob: -17.125011444091797
    8. 'ure' → logprob: -17.500011444091797
    9. 'uent' → logprob: -17.625011444091797
    10. 'uie' → logprob: -18.125011444091797

Token 221: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.807810366153717
    2. ' le' → logprob: -1.1828103065490723
    3. ' la' → logprob: -1.5578103065490723
    4. '   ' → logprob: -3.6828103065490723
    5. ' l' → logprob: -4.932810306549072
    6. ' ' → logprob: -6.182810306549072
    7. ' des' → logprob: -7.432810306549072
    8. ' calcul' → logprob: -7.807810306549072
    9. 'calcul' → logprob: -7.932810306549072
    10. ' calculations' → logprob: -8.05781078338623

Token 222: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.0023616172838956118
    2. ' calcul' → logprob: -6.37736177444458
    3. 'cal' → logprob: -7.62736177444458
    4. 'calc' → logprob: -9.127361297607422
    5. 'calculate' → logprob: -11.127361297607422
    6. 'nombre' → logprob: -11.502361297607422
    7. 'test' → logprob: -12.002361297607422
    8. '#' → logprob: -12.127361297607422
    9. '```' → logprob: -12.127361297607422
    10. '   ' → logprob: -12.252361297607422

Token 223: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22641700506210327
    2. ',' → logprob: -1.601417064666748
    3. ' et' → logprob: -7.726417064666748
    4. '    
' → logprob: -8.10141658782959
    5. ' ,' → logprob: -8.97641658782959
    6. ':' → logprob: -10.85141658782959
    7. ' and' → logprob: -10.85141658782959
    8. '   ' → logprob: -11.10141658782959
    9. ' ' → logprob: -11.72641658782959
    10. ',
' → logprob: -11.72641658782959

Token 224: ' différences' (ID: 175718)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3774532675743103
    2. 'val' → logprob: -2.252453327178955
    3. 'positive' → logprob: -3.002453327178955
    4. 'dif' → logprob: -3.002453327178955
    5. ' positive' → logprob: -3.127453327178955
    6. 'rés' → logprob: -4.377453327178955
    7. ' différences' → logprob: -4.627453327178955
    8. 'd' → logprob: -4.627453327178955
    9. 's' → logprob: -4.752453327178955
    10. ' résultats' → logprob: -5.002453327178955

Token 225: ' positives' (ID: 95584)
  Prédit: ' positives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positives' → logprob: -0.8610507249832153
    2. '   ' → logprob: -1.2360507249832153
    3. 'posit' → logprob: -1.3610507249832153
    4. ',' → logprob: -3.986050605773926
    5. ' positive' → logprob: -5.736050605773926
    6. 'positive' → logprob: -5.861050605773926
    7. ' et' → logprob: -6.611050605773926
    8. ' posit' → logprob: -6.861050605773926
    9. 'pos' → logprob: -7.486050605773926
    10. ' positif' → logprob: -7.611050605773926

Token 226: ' 
' (ID: 793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2574303448200226
    2. '   ' → logprob: -1.5074303150177002
    3. ' et' → logprob: -5.507430553436279
    4. ' ,' → logprob: -6.882430553436279
    5. ',
' → logprob: -8.882430076599121
    6. ' entre' → logprob: -9.507430076599121
    7. 'et' → logprob: -10.007430076599121
    8. '    
' → logprob: -10.132430076599121
    9. 's' → logprob: -11.507430076599121
    10. '       ' → logprob: -11.632430076599121

Token 227: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40200307965278625
    2. '   ' → logprob: -1.4020030498504639
    3. ' et' → logprob: -2.652003049850464
    4. 'et' → logprob: -5.027003288269043
    5. ' entre' → logprob: -5.027003288269043
    6. ' ,' → logprob: -7.527003288269043
    7. 'entre' → logprob: -8.152003288269043
    8. ' pour' → logprob: -8.902003288269043
    9. 'pour' → logprob: -9.902003288269043
    10. ' des' → logprob: -10.152003288269043

Token 228: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2998473346233368
    2. 'et' (adapté à ' et') → logprob: -1.6748473644256592
    3. '   ' → logprob: -2.924847364425659
    4. 'entre' → logprob: -4.17484712600708
    5. ' et' → logprob: -6.42484712600708
    6. ' entre' → logprob: -7.54984712600708
    7. 'pour' → logprob: -8.549847602844238
    8. 'des' → logprob: -9.924847602844238
    9. 'between' → logprob: -10.049847602844238
    10. 'ens' → logprob: -10.049847602844238

Token 229: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.20502939820289612
    2. '   ' → logprob: -2.0800294876098633
    3. 'aff' → logprob: -3.2050294876098633
    4. ' imprime' → logprob: -4.205029487609863
    5. 'print' → logprob: -5.955029487609863
    6. ' print' → logprob: -6.580029487609863
    7. ' les' → logprob: -7.705029487609863
    8. '    ' → logprob: -8.830029487609863
    9. 'im' → logprob: -9.205029487609863
    10. ' affich' → logprob: -9.455029487609863

Token 230: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39718979597091675
    2. '()' → logprob: -1.6471898555755615
    3. ' la' → logprob: -2.6471898555755615
    4. ' le' → logprob: -2.8971898555755615
    5. ' les' → logprob: -5.772189617156982
    6. '("' → logprob: -6.272189617156982
    7. '(
' → logprob: -6.522189617156982
    8. '(l' → logprob: -7.522189617156982
    9. 'result' → logprob: -8.02219009399414
    10. '(result' → logprob: -8.64719009399414

Token 231: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.03105318360030651
    2. ' résultat' → logprob: -3.531053066253662
    3. 'result' → logprob: -7.156053066253662
    4. 'r' → logprob: -7.906053066253662
    5. 'Rés' → logprob: -9.78105354309082
    6. 'ré' → logprob: -10.78105354309082
    7. ' resultat' → logprob: -10.90605354309082
    8. 's' → logprob: -11.40605354309082
    9. 'rs' → logprob: -11.53105354309082
    10. ' rés' → logprob: -11.90605354309082

Token 232: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003857316682115197
    2. '.' → logprob: -6.003857135772705
    3. '
' → logprob: -6.878857135772705
    4. '    
' → logprob: -9.003857612609863
    5. ':' → logprob: -9.253857612609863
    6. ')' → logprob: -10.503857612609863
    7. '```' → logprob: -10.503857612609863
    8. 'def' → logprob: -10.628857612609863
    9. ',' → logprob: -11.503857612609863
    10. 'import' → logprob: -11.628857612609863

Token 233: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00218392675742507
    2. '.' → logprob: -6.75218391418457
    3. '
' → logprob: -7.50218391418457
    4. ')' → logprob: -8.75218391418457
    5. '    
' → logprob: -8.87718391418457
    6. ':' → logprob: -9.12718391418457
    7. 'def' → logprob: -11.12718391418457
    8. '```' → logprob: -11.50218391418457
    9. ',' → logprob: -11.62718391418457
    10. 'import' → logprob: -12.37718391418457

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012273816391825676
    2. '
' → logprob: -4.762273788452148
    3. '    
' → logprob: -5.637273788452148
    4. '```' → logprob: -10.387273788452148
    5. '  
' → logprob: -10.512273788452148
    6. '   
' → logprob: -11.512273788452148
    7. ' 
' → logprob: -12.012273788452148
    8. 'def' → logprob: -12.387273788452148
    9. '\n' → logprob: -12.637273788452148
    10. 'import' → logprob: -13.637273788452148

Token 235: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010945945978164673
    2. '    
' → logprob: -5.260945796966553
    3. '
' → logprob: -5.385945796966553
    4. 'n' → logprob: -7.385945796966553
    5. 'import' → logprob: -8.635946273803711
    6. 'N' → logprob: -8.760946273803711
    7. 'input' → logprob: -10.510946273803711
    8. '```' → logprob: -10.510946273803711
    9. '\n' → logprob: -11.010946273803711
    10. '  
' → logprob: -11.260946273803711

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011425144970417023
    2. 'N' → logprob: -5.261425018310547
    3. ' N' → logprob: -5.386425018310547
    4. 'n' → logprob: -6.886425018310547
    5. ' n' → logprob: -7.636425018310547
    6. 'import' → logprob: -10.011425018310547
    7. '    
' → logprob: -10.636425018310547
    8. ' import' → logprob: -11.761425018310547
    9. ' ' → logprob: -12.761425018310547
    10. '  ' → logprob: -12.886425018310547

Token 237: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00016623330884613097
    2. 'import' → logprob: -9.750165939331055
    3. '   ' → logprob: -9.875165939331055
    4. 'n' → logprob: -10.125165939331055
    5. ' N' → logprob: -11.750165939331055
    6. '#' (adapté à ' #') → logprob: -11.875165939331055
    7. 'T' → logprob: -14.125165939331055
    8. 't' → logprob: -14.500165939331055
    9. 'try' → logprob: -15.625165939331055
    10. 'if' → logprob: -16.625165939331055

Token 238: ' Lecture' (ID: 106534)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04945058375597
    2. 'n' → logprob: -3.174450635910034
    3. ' N' → logprob: -5.424450397491455
    4. 'import' → logprob: -6.799450397491455
    5. '#' → logprob: -8.174450874328613
    6. 'input' → logprob: -8.299450874328613
    7. ' n' → logprob: -8.674450874328613
    8. 't' → logprob: -9.299450874328613
    9. 'T' → logprob: -10.424450874328613
    10. '   ' → logprob: -10.674450874328613

Token 239: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.999167263507843
    2. ' N' → logprob: -1.4991672039031982
    3. ' =' → logprob: -1.6241672039031982
    4. ' des' → logprob: -2.3741672039031982
    5. ',' → logprob: -2.9991672039031982
    6. ' de' → logprob: -4.124167442321777
    7. ' n' → logprob: -4.499167442321777
    8. 'N' → logprob: -4.874167442321777
    9. '()' → logprob: -4.999167442321777
    10. 's' → logprob: -5.749167442321777

Token 240: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12111632525920868
    2. 'N' → logprob: -2.2461163997650146
    3. 't' → logprob: -5.8711161613464355
    4. 'nombre' → logprob: -5.8711161613464355
    5. 'int' → logprob: -6.4961161613464355
    6. 'T' → logprob: -8.246116638183594
    7. ' N' → logprob: -8.371116638183594
    8. 'num' → logprob: -8.496116638183594
    9. ' n' → logprob: -9.121116638183594
    10. 'number' → logprob: -9.371116638183594

Token 241: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1080303192138672
    2. 'd' → logprob: -1.7330303192138672
    3. '_' → logprob: -2.233030319213867
    4. ' ' → logprob: -2.608030319213867
    5. ' =' → logprob: -2.858030319213867
    6. '<|end|>' → logprob: -2.983030319213867
    7. 'de' → logprob: -3.108030319213867
    8. '   ' → logprob: -3.358030319213867
    9. '_d' → logprob: -3.483030319213867
    10. ' de' → logprob: -3.983030319213867

Token 242: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.7012742757797241
    2. ' éléments' → logprob: -0.8262742757797241
    3. ' ' → logprob: -4.201274394989014
    4. ' elements' → logprob: -4.451274394989014
    5. '_' → logprob: -4.951274394989014
    6. ' articles' → logprob: -5.326274394989014
    7. ' cas' → logprob: -5.576274394989014
    8. 'elements' → logprob: -6.076274394989014
    9. ' test' → logprob: -6.326274394989014
    10. 'é' → logprob: -6.576274394989014

Token 243: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.3735008239746094
    2. 'test' → logprob: -2.4985008239746094
    3. 'elements' → logprob: -2.8735008239746094
    4. 'tests' → logprob: -3.1235008239746094
    5. 'val' → logprob: -3.9985008239746094
    6. 'cas' → logprob: -4.373500823974609
    7. ' test' → logprob: -4.498500823974609
    8. 'obj' → logprob: -4.748500823974609
    9. ' éléments' → logprob: -4.873500823974609
    10. ' tests' → logprob: -5.248500823974609

Token 244: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -9.014684110297821e-06
    2. 'ents' → logprob: -13.125008583068848
    3. 'ements' → logprob: -13.500008583068848
    4. 'm' → logprob: -13.500008583068848
    5. 'éments' → logprob: -13.625008583068848
    6. 'ment' → logprob: -13.750008583068848
    7. 'nts' → logprob: -13.875008583068848
    8. 'ts' → logprob: -15.375008583068848
    9. 'MENTS' → logprob: -15.750008583068848
    10. 'lements' → logprob: -15.875008583068848

Token 245: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3270454406738281
    2. 'n' → logprob: -2.077045440673828
    3. '   ' → logprob: -2.202045440673828
    4. ' N' → logprob: -3.202045440673828
    5. ' n' → logprob: -6.577045440673828
    6. '    
' → logprob: -7.202045440673828
    7. '
' → logprob: -9.202045440673828
    8. ',' → logprob: -9.827045440673828
    9. 'import' → logprob: -10.577045440673828
    10. '	N' → logprob: -11.202045440673828

Token 246: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3286360800266266
    2. ' N' → logprob: -1.9536360502243042
    3. 'n' → logprob: -2.4536361694335938
    4. '   ' → logprob: -3.0786361694335938
    5. ' n' → logprob: -5.078636169433594
    6. '    
' → logprob: -9.578636169433594
    7. '    ' → logprob: -12.078636169433594
    8. '	N' → logprob: -12.078636169433594
    9. ' 
' → logprob: -12.203636169433594
    10. 'import' → logprob: -12.203636169433594

Token 247: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.006920326501131058
    2. ' N' → logprob: -5.506920337677002
    3. 'n' → logprob: -5.881920337677002
    4. ' n' → logprob: -10.381919860839844
    5. '   ' → logprob: -11.006919860839844
    6. ' ' → logprob: -14.256919860839844
    7. '	N' → logprob: -16.256919860839844
    8. 'import' → logprob: -16.506919860839844
    9. '```' → logprob: -17.631919860839844
    10. '    
' → logprob: -18.006919860839844

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038134098052978516
    2. '=' → logprob: -3.2881340980529785
    3. '=int' → logprob: -9.78813362121582
    4. ',' → logprob: -10.28813362121582
    5. '=input' → logprob: -13.53813362121582
    6. ' ' → logprob: -14.78813362121582
    7. ' ' → logprob: -14.78813362121582
    8. ' =
' → logprob: -15.16313362121582
    9. ')' → logprob: -16.28813362121582
    10. ' ,' → logprob: -16.91313362121582

Token 249: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.005234594456851482
    2. 'int' → logprob: -5.255234718322754
    3. ' in' → logprob: -14.880234718322754
    4. '=int' → logprob: -15.630234718322754
    5. ' ' → logprob: -15.880234718322754
    6. ' ' → logprob: -16.755233764648438
    7. '	int' → logprob: -17.130233764648438
    8. '[int' → logprob: -17.755233764648438
    9. '(int' → logprob: -17.880233764648438
    10. ' 
' → logprob: -18.255233764648438

Token 250: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009470687946304679
    2. '(' → logprob: -7.000946998596191
    3. 'input' → logprob: -10.250946998596191
    4. ' input' → logprob: -16.000947952270508
    5. '()' → logprob: -16.125947952270508
    6. '=input' → logprob: -17.625947952270508
    7. ' (' → logprob: -18.250947952270508
    8. '(
' → logprob: -18.375947952270508
    9. '(in' → logprob: -19.125947952270508
    10. '<input' → logprob: -20.125947952270508

Token 251: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018156850710511208
    2. '()' → logprob: -4.018157005310059
    3. '().' → logprob: -13.018157005310059
    4. '())
' → logprob: -13.518157005310059
    5. ' ())' → logprob: -13.643157005310059
    6. '(' → logprob: -13.893157005310059
    7. '();)' → logprob: -15.143157005310059
    8. '()>' → logprob: -15.143157005310059
    9. '()))' → logprob: -15.518157005310059
    10. '()),' → logprob: -16.018156051635742

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010452128015458584
    2. 'V' → logprob: -5.7604522705078125
    3. '    
' → logprob: -5.7604522705078125
    4. ' V' → logprob: -5.8854522705078125
    5. ')' → logprob: -7.8854522705078125
    6. ' ' → logprob: -8.760452270507812
    7. '  ' → logprob: -8.760452270507812
    8. '
' → logprob: -8.885452270507812
    9. '   
' → logprob: -9.010452270507812
    10. ' 
' → logprob: -9.010452270507812

Token 253: ' #' (ID: 1069)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.005745336879044771
    2. ' V' → logprob: -5.3807454109191895
    3. '   ' → logprob: -7.0057454109191895
    4. '#' (adapté à ' #') → logprob: -8.505744934082031
    5. '    
' → logprob: -12.505744934082031
    6. ' #' → logprob: -12.630744934082031
    7. '	V' → logprob: -13.005744934082031
    8. '```' → logprob: -13.005744934082031
    9. '  ' → logprob: -14.255744934082031
    10. ' ' → logprob: -14.505744934082031

Token 254: ' Lecture' (ID: 106534)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.005661767907440662
    2. ' V' → logprob: -5.380661964416504
    3. '#' → logprob: -6.880661964416504
    4. ' #' → logprob: -12.255661964416504
    5. '   ' → logprob: -12.630661964416504
    6. 'v' → logprob: -13.255661964416504
    7. ' ' → logprob: -13.880661964416504
    8. 'for' → logprob: -14.693161964416504
    9. '
' → logprob: -14.943161964416504
    10. '	V' → logprob: -15.505661964416504

Token 255: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03775167092680931
    2. ' des' → logprob: -3.6627516746520996
    3. '(' → logprob: -5.0377516746521
    4. '   ' → logprob: -5.6627516746521
    5. '()
' → logprob: -8.037751197814941
    6. 'des' → logprob: -8.037751197814941
    7. '(V' → logprob: -8.287751197814941
    8. ' de' → logprob: -8.912751197814941
    9. ' of' → logprob: -9.662751197814941
    10. 's' → logprob: -9.662751197814941

Token 256: ' conversion' (ID: 22165)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.29494398832321167
    2. 'V' → logprob: -1.4199440479278564
    3. 'split' → logprob: -5.169943809509277
    4. ' split' → logprob: -5.794943809509277
    5. ' la' → logprob: -6.544943809509277
    6. 's' → logprob: -7.419943809509277
    7. ' list' → logprob: -7.919943809509277
    8. ' for' → logprob: -8.544943809509277
    9. ' récupération' → logprob: -8.794943809509277
    10. ' conversion' → logprob: -8.919943809509277

Token 257: ' en' (ID: 469)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05469042435288429
    2. ' de' → logprob: -3.554690361022949
    3. '()' → logprob: -3.929690361022949
    4. '(' → logprob: -6.179690361022949
    5. 'des' → logprob: -6.679690361022949
    6. ' of' → logprob: -6.929690361022949
    7. '   ' → logprob: -7.679690361022949
    8. ' ' → logprob: -10.17969036102295
    9. 'de' → logprob: -10.42969036102295
    10. '    ' → logprob: -10.42969036102295

Token 258: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.09323885291814804
    2. ' list' → logprob: -3.0932388305664062
    3. 'liste' → logprob: -3.3432388305664062
    4. ' liste' → logprob: -4.843238830566406
    5. 'lists' → logprob: -8.218238830566406
    6. 'lista' → logprob: -9.593238830566406
    7. ' listes' → logprob: -9.718238830566406
    8. 'lst' → logprob: -11.218238830566406
    9. ' lists' → logprob: -11.218238830566406
    10. ' lista' → logprob: -11.843238830566406

Token 259: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3876795768737793
    2. ' V' → logprob: -1.6376795768737793
    3. '   ' → logprob: -1.8876795768737793
    4. ' des' → logprob: -2.0126795768737793
    5. 'V' → logprob: -2.3876795768737793
    6. '(V' → logprob: -2.5126795768737793
    7. ' de' → logprob: -3.1376795768737793
    8. ' of' → logprob: -3.5126795768737793
    9. 's' → logprob: -4.387679576873779
    10. '(' → logprob: -6.012679576873779

Token 260: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.20205822587013245
    2. 'ints' → logprob: -2.2020583152770996
    3. 'int' → logprob: -3.0770583152770996
    4. 'inte' → logprob: -4.2020583152771
    5. ' ent' → logprob: -5.2020583152771
    6. ''ent' → logprob: -5.4520583152771
    7. ' integers' → logprob: -7.5770583152771
    8. '’ent' → logprob: -8.327057838439941
    9. '_ent' → logprob: -8.452057838439941
    10. 'ents' → logprob: -8.702057838439941

Token 261: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.000111768240458332
    2. 'ier' → logprob: -9.75011157989502
    3. 'ières' → logprob: -10.00011157989502
    4. 't' → logprob: -12.37511157989502
    5. 'i' → logprob: -13.50011157989502
    6. 'r' → logprob: -14.25011157989502
    7. 'ers' → logprob: -14.50011157989502
    8. 'ités' → logprob: -14.50011157989502
    9. 'er' → logprob: -15.37511157989502
    10. ' integers' → logprob: -16.375112533569336

Token 262: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17490582168102264
    2. '()' → logprob: -2.674905776977539
    3. 'V' → logprob: -2.924905776977539
    4. ' V' → logprob: -3.799905776977539
    5. '(V' → logprob: -4.549905776977539
    6. ')' → logprob: -6.424905776977539
    7. '(' → logprob: -7.049905776977539
    8. '()
' → logprob: -7.299905776977539
    9. ',' → logprob: -7.924905776977539
    10. 's' → logprob: -8.299905776977539

Token 263: ' les' (ID: 1341)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.8146135807037354
    2. ' V' → logprob: -0.9396135807037354
    3. 'list' → logprob: -2.4396135807037354
    4. ' list' → logprob: -3.1896135807037354
    5. ' la' → logprob: -3.5646135807037354
    6. 'la' → logprob: -5.689613342285156
    7. 'l' → logprob: -7.064613342285156
    8. ')' → logprob: -7.189613342285156
    9. 'input' → logprob: -7.689613342285156
    10. 'liste' → logprob: -7.689613342285156

Token 264: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6286314129829407
    2. ' valeurs' → logprob: -0.8786314129829407
    3. 'V' → logprob: -3.503631353378296
    4. ' V' → logprob: -4.628631591796875
    5. ' val' → logprob: -5.378631591796875
    6. 'values' → logprob: -5.753631591796875
    7. 'Vale' → logprob: -6.753631591796875
    8. ' values' → logprob: -7.378631591796875
    9. 'vals' → logprob: -7.628631591796875
    10. ' Vale' → logprob: -8.128631591796875

Token 265: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.22095154225826263
    2. ' V' → logprob: -1.7209515571594238
    3. '   ' → logprob: -5.220951557159424
    4. '_V' → logprob: -5.470951557159424
    5. '()' → logprob: -5.845951557159424
    6. '(V' → logprob: -5.845951557159424
    7. ' =' → logprob: -6.720951557159424
    8. '_' → logprob: -6.845951557159424
    9. '(' → logprob: -7.970951557159424
    10. '_v' → logprob: -8.720951080322266

Token 266: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2055770754814148
    2. '=' → logprob: -1.7055771350860596
    3. ')' → logprob: -6.4555768966674805
    4. '   ' → logprob: -6.5805768966674805
    5. 'V' → logprob: -7.4555768966674805
    6. '()' → logprob: -7.7055768966674805
    7. ' V' → logprob: -10.33057689666748
    8. ',' → logprob: -10.45557689666748
    9. 's' → logprob: -10.83057689666748
    10. '(' → logprob: -11.45557689666748

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4055028259754181
    2. 'V' → logprob: -1.1555027961730957
    3. ' V' → logprob: -4.030502796173096
    4. 'v' → logprob: -8.655503273010254
    5. ')' → logprob: -9.030503273010254
    6. ' =' → logprob: -9.155503273010254
    7. '    
' → logprob: -9.530503273010254
    8. '    ' → logprob: -10.155503273010254
    9. 's' → logprob: -10.655503273010254
    10. ':' → logprob: -10.655503273010254

Token 268: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.048588622361421585
    2. ' V' → logprob: -3.048588514328003
    3. '   ' → logprob: -14.423588752746582
    4. 'v' → logprob: -14.923588752746582
    5. '	V' → logprob: -16.048587799072266
    6. ' ' → logprob: -16.673587799072266
    7. 'list' → logprob: -17.548587799072266
    8. ')V' → logprob: -17.673587799072266
    9. '[V' → logprob: -18.173587799072266
    10. ' ' → logprob: -18.423587799072266

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693041563034058
    2. '=' → logprob: -2.1269304752349854
    3. ')' → logprob: -14.376930236816406
    4. ' =
' → logprob: -14.751930236816406
    5. ' ' → logprob: -15.001930236816406
    6. '_' → logprob: -15.126930236816406
    7. ' =[' → logprob: -15.126930236816406
    8. 's' → logprob: -15.876930236816406
    9. '=input' → logprob: -16.376930236816406
    10. ',' → logprob: -16.501930236816406

Token 270: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.029750484973192215
    2. ' list' → logprob: -3.5297505855560303
    3. '[list' → logprob: -18.40475082397461
    4. '	list' → logprob: -19.27975082397461
    5. '[' → logprob: -19.27975082397461
    6. '=list' → logprob: -19.65475082397461
    7. 'List' → logprob: -20.77975082397461
    8. ' ' → logprob: -21.27975082397461
    9. '(list' → logprob: -21.65475082397461
    10. 'lis' → logprob: -22.15475082397461

Token 271: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00043102685594931245
    2. '(' → logprob: -7.750431060791016
    3. 'map' → logprob: -15.500431060791016
    4. '(int' → logprob: -16.875431060791016
    5. '(m' → logprob: -17.250431060791016
    6. '()' → logprob: -17.750431060791016
    7. '(
' → logprob: -18.000431060791016
    8. '(input' → logprob: -18.500431060791016
    9. '(ma' → logprob: -18.500431060791016
    10. ' (' → logprob: -19.250431060791016

Token 272: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0032833523582667112
    2. '(' → logprob: -5.753283500671387
    3. 'int' → logprob: -9.253283500671387
    4. '(
' → logprob: -12.378283500671387
    5. ' int' → logprob: -12.753283500671387
    6. ' (' → logprob: -13.628283500671387
    7. '   ' → logprob: -14.378283500671387
    8. '<int' → logprob: -15.003283500671387
    9. ')' → logprob: -15.628283500671387
    10. '=int' → logprob: -15.878283500671387

Token 273: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01073120441287756
    2. ',input' → logprob: -4.885731220245361
    3. 'input' → logprob: -6.385731220245361
    4. '(' → logprob: -7.010731220245361
    5. ',' → logprob: -7.760731220245361
    6. ' (' → logprob: -9.760730743408203
    7. ' input' → logprob: -10.135730743408203
    8. '   ' → logprob: -12.635730743408203
    9. '(
' → logprob: -13.385730743408203
    10. '=input' → logprob: -13.510730743408203

Token 274: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889441400766373
    2. ' input' → logprob: -2.5788943767547607
    3. '(input' → logprob: -12.57889461517334
    4. ',input' → logprob: -13.95389461517334
    5. '   ' → logprob: -15.82889461517334
    6. '=input' → logprob: -16.328893661499023
    7. '	input' → logprob: -16.828893661499023
    8. ' ' → logprob: -16.953893661499023
    9. '<input' → logprob: -17.078893661499023
    10. '_input' → logprob: -18.578893661499023

Token 275: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3544423381972592e-05
    2. '()' → logprob: -11.25001335144043
    3. ' ().' → logprob: -14.62501335144043
    4. '()
' → logprob: -17.37501335144043
    5. '(' → logprob: -17.75001335144043
    6. '.split' → logprob: -18.75001335144043
    7. 'split' → logprob: -19.75001335144043
    8. '("").' → logprob: -20.12501335144043
    9. '('').' → logprob: -20.75001335144043
    10. '   ' → logprob: -21.12501335144043

Token 276: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004311460361350328
    2. 'strip' → logprob: -7.750431060791016
    3. 'rstrip' → logprob: -15.000431060791016
    4. ' split' → logprob: -16.000431060791016
    5. '(split' → logprob: -16.750431060791016
    6. 'spl' → logprob: -20.000431060791016
    7. '.split' → logprob: -20.375431060791016
    8. 's' → logprob: -21.375431060791016
    9. '_split' → logprob: -22.250431060791016
    10. ' strip' → logprob: -23.000431060791016

Token 277: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.012166650034487247
    2. '()' → logprob: -4.512166500091553
    3. '())' → logprob: -7.137166500091553
    4. '))' → logprob: -8.887166976928711
    5. '(' → logprob: -9.387166976928711
    6. '()))
' → logprob: -9.637166976928711
    7. '()));' → logprob: -11.262166976928711
    8. '().' → logprob: -11.637166976928711
    9. '())))' → logprob: -11.887166976928711
    10. '()))

' → logprob: -12.762166976928711

Token 278: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.18272580206394196
    2. '   ' → logprob: -1.8077257871627808
    3. ' C' → logprob: -5.93272590637207
    4. ' ' → logprob: -9.05772590637207
    5. '
' → logprob: -9.43272590637207
    6. '    
' → logprob: -9.68272590637207
    7. '  ' → logprob: -10.55772590637207
    8. '	C' → logprob: -10.80772590637207
    9. '  
' → logprob: -12.05772590637207
    10. ' 
' → logprob: -12.30772590637207

Token 279: ' #' (ID: 1069)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0010201864643022418
    2. '   ' → logprob: -7.2510199546813965
    3. ' C' → logprob: -8.251020431518555
    4. '#' (adapté à ' #') → logprob: -10.126020431518555
    5. '
' → logprob: -12.126020431518555
    6. ' ' → logprob: -13.001020431518555
    7. '    
' → logprob: -14.501020431518555
    8. '  ' → logprob: -14.876020431518555
    9. '	C' → logprob: -16.001020431518555
    10. ' #' → logprob: -16.376020431518555

Token 280: ' Lecture' (ID: 106534)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.910643762443215e-05
    2. ' C' → logprob: -9.500079154968262
    3. '   ' → logprob: -12.500079154968262
    4. '
' → logprob: -16.250078201293945
    5. ' ' → logprob: -16.375078201293945
    6. '#' → logprob: -16.375078201293945
    7. '  ' → logprob: -18.250078201293945
    8. 'c' → logprob: -18.375078201293945
    9. '    
' → logprob: -18.500078201293945
    10. '```' → logprob: -18.875078201293945

Token 281: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.3056803047657013
    2. '   ' → logprob: -1.805680274963379
    3. 'et' → logprob: -3.430680274963379
    4. ' and' → logprob: -3.555680274963379
    5. 'C' → logprob: -3.805680274963379
    6. 'and' → logprob: -5.305680274963379
    7. ',' → logprob: -5.805680274963379
    8. ' C' → logprob: -6.055680274963379
    9. ' =' → logprob: -6.555680274963379
    10. '()' → logprob: -6.930680274963379

Token 282: ' conversion' (ID: 22165)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04399682208895683
    2. ' C' → logprob: -3.168996810913086
    3. 'list' → logprob: -7.168996810913086
    4. ' list' → logprob: -9.293996810913086
    5. 'conversion' → logprob: -9.918996810913086
    6. 'V' → logprob: -10.293996810913086
    7. ' conversion' → logprob: -11.293996810913086
    8. 'convert' → logprob: -11.418996810913086
    9. ' ' → logprob: -11.793996810913086
    10. '#' → logprob: -13.106496810913086

Token 283: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07948330044746399
    2. 'en' → logprob: -2.5794832706451416
    3. ' in' → logprob: -7.829483509063721
    4. 'in' → logprob: -8.954483032226562
    5. 'int' → logprob: -10.454483032226562
    6. '(int' → logprob: -11.079483032226562
    7. '=int' → logprob: -12.204483032226562
    8. '   ' → logprob: -12.704483032226562
    9. ' int' → logprob: -12.954483032226562
    10. ' des' → logprob: -13.329483032226562

Token 284: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.061967913061380386
    2. ' list' → logprob: -2.8119678497314453
    3. 'liste' → logprob: -15.561967849731445
    4. ' liste' → logprob: -17.311967849731445
    5. ' ' → logprob: -18.936967849731445
    6. 'List' → logprob: -19.311967849731445
    7. 'lis' → logprob: -19.561967849731445
    8. '=list' → logprob: -19.686967849731445
    9. 'int' → logprob: -19.811967849731445
    10. 'l' → logprob: -19.811967849731445

Token 285: ' d' (ID: 272)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.11197160929441452
    2. '(int' → logprob: -2.861971616744995
    3. '(' → logprob: -3.236971616744995
    4. '(list' → logprob: -5.611971378326416
    5. 'map' → logprob: -6.236971378326416
    6. 'int' → logprob: -6.486971378326416
    7. ' (' → logprob: -6.611971378326416
    8. '   ' → logprob: -8.111971855163574
    9. 'of' → logprob: -8.486971855163574
    10. ' of' → logprob: -8.986971855163574

Token 286: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.29404568672180176
    2. 'map' → logprob: -2.0440456867218018
    3. 'ent' → logprob: -3.1690456867218018
    4. 'list' → logprob: -3.2940456867218018
    5. '(int' → logprob: -3.4190456867218018
    6. '(map' → logprob: -4.794045448303223
    7. '[int' → logprob: -6.169045448303223
    8. 'ints' → logprob: -6.669045448303223
    9. '=int' → logprob: -7.169045448303223
    10. 'ents' → logprob: -8.669045448303223

Token 287: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.20767152309417725
    2. 't' → logprob: -1.7076715230941772
    3. 'ters' → logprob: -6.082671642303467
    4. 'ents' → logprob: -6.582671642303467
    5. 'tiers' → logprob: -7.207671642303467
    6. 'gers' → logprob: -7.832671642303467
    7. 'ints' → logprob: -8.082671165466309
    8. 'tes' → logprob: -8.332671165466309
    9. 'int' → logprob: -8.832671165466309
    10. 'ier' → logprob: -9.582671165466309

Token 288: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.601111650466919
    2. '(C' → logprob: -0.976111650466919
    3. 'C' → logprob: -3.476111650466919
    4. '   ' → logprob: -3.976111650466919
    5. 'for' → logprob: -4.47611141204834
    6. ',' → logprob: -5.72611141204834
    7. ' (' → logprob: -5.72611141204834
    8. ' C' → logprob: -5.85111141204834
    9. ' for' → logprob: -6.10111141204834
    10. '(
' → logprob: -7.10111141204834

Token 289: ' les' (ID: 1341)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.22174499928951263
    2. ' C' → logprob: -1.8467450141906738
    3. '(' → logprob: -4.096745014190674
    4. 'input' → logprob: -4.596745014190674
    5. '   ' → logprob: -5.096745014190674
    6. ' input' → logprob: -5.721745014190674
    7. '(input' → logprob: -6.846745014190674
    8. 'the' → logprob: -7.471745014190674
    9. 's' → logprob: -7.596745014190674
    10. '(C' → logprob: -7.721745014190674

Token 290: ' valeurs' (ID: 73668)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0036071976646780968
    2. ' C' → logprob: -5.628607273101807
    3. 'input' → logprob: -12.753606796264648
    4. ' input' → logprob: -13.753606796264648
    5. '   ' → logprob: -14.378606796264648
    6. ' code' → logprob: -14.878606796264648
    7. 'c' → logprob: -15.441106796264648
    8. ')' → logprob: -15.441106796264648
    9. 's' → logprob: -15.441106796264648
    10. '(C' → logprob: -15.628606796264648

Token 291: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.017762737348675728
    2. ' C' → logprob: -4.642762660980225
    3. '(C' → logprob: -5.017762660980225
    4. '(' → logprob: -6.642762660980225
    5. '(
' → logprob: -11.267763137817383
    6. ' (' → logprob: -11.267763137817383
    7. '   ' → logprob: -11.392763137817383
    8. ',' → logprob: -12.517763137817383
    9. 's' → logprob: -13.142763137817383
    10. ')' → logprob: -13.142763137817383

Token 292: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7365564107894897
    2. '   ' → logprob: -1.6115564107894897
    3. '=' → logprob: -1.7365564107894897
    4. ' =' → logprob: -1.9865564107894897
    5. 'C' → logprob: -5.611556529998779
    6. '()' → logprob: -6.486556529998779
    7. '(' → logprob: -7.486556529998779
    8. ' C' → logprob: -7.611556529998779
    9. ')
' → logprob: -8.111556053161621
    10. '(C' → logprob: -8.236556053161621

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11587785929441452
    2. ')' → logprob: -2.365877866744995
    3. 'C' → logprob: -4.740877628326416
    4. ' =' → logprob: -5.865877628326416
    5. '=' → logprob: -6.365877628326416
    6. 'V' → logprob: -7.490877628326416
    7. '(' → logprob: -7.865877628326416
    8. '(C' → logprob: -8.115878105163574
    9. ' C' → logprob: -8.240878105163574
    10. ')
' → logprob: -8.365878105163574

Token 294: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0022204378619790077
    2. ' C' → logprob: -6.127220630645752
    3. '   ' → logprob: -10.252220153808594
    4. ' ' → logprob: -16.752220153808594
    5. '	C' → logprob: -17.502220153808594
    6. '  ' → logprob: -18.002220153808594
    7. '
' → logprob: -18.002220153808594
    8. '    ' → logprob: -18.252220153808594
    9. 'c' → logprob: -18.877220153808594
    10. '    
' → logprob: -19.127220153808594

Token 295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. ')' → logprob: -16.10020637512207
    4. ' ' → logprob: -17.22520637512207
    5. '=
' → logprob: -17.35020637512207
    6. '=list' → logprob: -17.35020637512207
    7. '＝' → logprob: -18.22520637512207
    8. '   ' → logprob: -18.35020637512207
    9. '=

' → logprob: -18.35020637512207
    10. '=input' → logprob: -18.97520637512207

Token 296: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4740770161151886
    2. 'list' → logprob: -0.9740769863128662
    3. 'List' → logprob: -18.474077224731445
    4. '=list' → logprob: -19.474077224731445
    5. '	list' → logprob: -20.974077224731445
    6. '(list' → logprob: -21.599077224731445
    7. '_list' → logprob: -22.724077224731445
    8. '.list' → logprob: -23.099077224731445
    9. 'l' → logprob: -23.349077224731445
    10. ' ' → logprob: -23.599077224731445

Token 297: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002524649491533637
    2. '(' → logprob: -6.5025248527526855
    3. '(int' → logprob: -7.0025248527526855
    4. '(list' → logprob: -9.377524375915527
    5. ' (' → logprob: -11.127524375915527
    6. 'map' → logprob: -11.627524375915527
    7. '(input' → logprob: -13.127524375915527
    8. '(
' → logprob: -14.252524375915527
    9. '(m' → logprob: -14.627524375915527
    10. '(in' → logprob: -14.752524375915527

Token 298: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.494741632603109e-05
    2. '(' → logprob: -9.62508487701416
    3. 'int' → logprob: -11.50008487701416
    4. '<int' → logprob: -12.75008487701416
    5. '=int' → logprob: -12.87508487701416
    6. ' (' → logprob: -13.25008487701416
    7. '[int' → logprob: -14.25008487701416
    8. ',int' → logprob: -14.62508487701416
    9. ' int' → logprob: -15.62508487701416
    10. ']int' → logprob: -16.375085830688477

Token 299: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0034609679132699966
    2. ',int' → logprob: -5.753460884094238
    3. ',' → logprob: -8.503460884094238
    4. 'int' → logprob: -10.503460884094238
    5. '(input' → logprob: -10.753460884094238
    6. '(' → logprob: -11.378460884094238
    7. '=int' → logprob: -11.878460884094238
    8. '<int' → logprob: -12.253460884094238
    9. ' (' → logprob: -13.128460884094238
    10. '[int' → logprob: -13.253460884094238

Token 300: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0032257253769785166
    2. 'input' → logprob: -5.753225803375244
    3. ' int' → logprob: -10.128225326538086
    4. '(int' → logprob: -12.003225326538086
    5. ' input' → logprob: -13.378225326538086
    6. '[int' → logprob: -15.628225326538086
    7. '<int' → logprob: -16.503225326538086
    8. '=int' → logprob: -17.128225326538086
    9. '(input' → logprob: -17.503225326538086
    10. ',int' → logprob: -18.878225326538086

Token 301: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.5597102396423e-05
    2. '()' → logprob: -10.375035285949707
    3. '(int' → logprob: -12.750035285949707
    4. '(' → logprob: -14.125035285949707
    5. ' ().' → logprob: -15.500035285949707
    6. '()(' → logprob: -16.250036239624023
    7. '(.' → logprob: -16.625036239624023
    8. '()
' → logprob: -16.750036239624023
    9. '(input' → logprob: -17.250036239624023
    10. '(),' → logprob: -17.375036239624023

Token 302: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. '(split' → logprob: -14.625001907348633
    3. '.split' → logprob: -14.875001907348633
    4. 'strip' → logprob: -15.000001907348633
    5. ')' → logprob: -15.375001907348633
    6. ' split' → logprob: -16.750001907348633
    7. '().' → logprob: -17.750001907348633
    8. 'plit' → logprob: -18.125001907348633
    9. '```' → logprob: -18.750001907348633
    10. 'spl' → logprob: -18.750001907348633

Token 303: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0016434036660939455
    2. '()' → logprob: -6.751643180847168
    3. '()))
' → logprob: -8.626643180847168
    4. '))' → logprob: -8.876643180847168
    5. '())' → logprob: -8.876643180847168
    6. '()));' → logprob: -12.126643180847168
    7. '(' → logprob: -12.251643180847168
    8. '()))

' → logprob: -12.876643180847168
    9. '())).' → logprob: -14.376643180847168
    10. '())))' → logprob: -14.876643180847168

Token 304: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08842860907316208
    2. '   ' → logprob: -2.713428497314453
    3. ' result' → logprob: -4.088428497314453
    4. 'print' → logprob: -7.213428497314453
    5. 'res' → logprob: -8.588428497314453
    6. '
' → logprob: -9.088428497314453
    7. '```' → logprob: -9.088428497314453
    8. 'Result' → logprob: -9.713428497314453
    9. '    
' → logprob: -9.838428497314453
    10. 'r' → logprob: -10.213428497314453

Token 305: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0005669722449965775
    2. 'Ans' → logprob: -8.250567436218262
    3. 'print' → logprob: -8.500567436218262
    4. 'res' → logprob: -10.125567436218262
    5. 'answer' → logprob: -10.750567436218262
    6. ' result' → logprob: -11.000567436218262
    7. '   ' → logprob: -12.250567436218262
    8. 'ans' → logprob: -12.500567436218262
    9. 'Result' → logprob: -12.750567436218262
    10. '#' (adapté à ' #') → logprob: -12.750567436218262

Token 306: ' App' (ID: 2583)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00668316800147295
    2. ' result' → logprob: -5.381683349609375
    3. 'Ans' → logprob: -6.631683349609375
    4. 'answer' → logprob: -8.381683349609375
    5. 'print' → logprob: -8.506683349609375
    6. 'res' → logprob: -8.756683349609375
    7. 'rés' → logprob: -10.256683349609375
    8. 'ans' → logprob: -10.381683349609375
    9. '#' → logprob: -11.006683349609375
    10. 'difference' → logprob: -11.506683349609375

Token 307: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.5781689882278442
    2. 'eler' → logprob: -0.8281689882278442
    3. 'elle' → logprob: -6.328168869018555
    4. 'eller' → logprob: -9.078168869018555
    5. 'le' → logprob: -9.203168869018555
    6. 'elé' → logprob: -9.328168869018555
    7. 'ler' → logprob: -10.328168869018555
    8. 'ele' → logprob: -10.578168869018555
    9. '   ' → logprob: -10.828168869018555
    10. 'els' → logprob: -11.453168869018555

Token 308: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10155151039361954
    2. 'result' → logprob: -3.2265515327453613
    3. '(' → logprob: -3.6015515327453613
    4. ' de' → logprob: -4.601551532745361
    5. 'calculate' → logprob: -4.601551532745361
    6. ' result' → logprob: -5.726551532745361
    7. '_result' → logprob: -6.351551532745361
    8. ' calculate' → logprob: -7.226551532745361
    9. ' à' → logprob: -7.351551532745361
    10. 'de' → logprob: -7.476551532745361

Token 309: ' la' (ID: 557)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.07998909056186676
    2. 'print' → logprob: -2.579989194869995
    3. ' calculate' → logprob: -6.829988956451416
    4. ' print' → logprob: -11.579989433288574
    5. '   ' → logprob: -11.829989433288574
    6. 'calcul' → logprob: -14.079989433288574
    7. 'result' → logprob: -15.829989433288574
    8. 'alculate' → logprob: -16.079988479614258
    9. 'Calculate' → logprob: -16.954988479614258
    10. 'calc' → logprob: -17.204988479614258

Token 310: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17573624849319458
    2. 'result' → logprob: -1.9257361888885498
    3. 'calculate' → logprob: -4.175736427307129
    4. 'answer' → logprob: -11.175736427307129
    5. 'rés' → logprob: -12.800736427307129
    6. '```' → logprob: -13.050736427307129
    7. 'res' → logprob: -13.425736427307129
    8. 'resultado' → logprob: -13.550736427307129
    9. 'cal' → logprob: -13.675736427307129
    10. 'calc' → logprob: -13.800736427307129

Token 311: ' pour' (ID: 1930)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05628281459212303
    2. 'print' → logprob: -3.6812827587127686
    3. '   ' → logprob: -3.8062827587127686
    4. ' result' → logprob: -5.056282997131348
    5. 'calculate' → logprob: -7.681282997131348
    6. '_result' → logprob: -8.431282997131348
    7. ' print' → logprob: -9.681282997131348
    8. 'res' → logprob: -10.056282997131348
    9. 'resultado' → logprob: -10.056282997131348
    10. ' resultat' → logprob: -10.556282997131348

Token 312: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.5484476089477539
    2. 'calculate' → logprob: -1.048447608947754
    3. 'print' → logprob: -2.673447608947754
    4. 'cal' → logprob: -7.298447608947754
    5. 'calc' → logprob: -7.423447608947754
    6. ' calcul' → logprob: -7.548447608947754
    7. 'result' → logprob: -8.673447608947754
    8. ' calculate' → logprob: -8.673447608947754
    9. 'aff' → logprob: -8.798447608947754
    10. '   ' → logprob: -8.923447608947754

Token 313: 'er' (ID: 259)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.20600955188274384
    2. 'er' → logprob: -1.7060095071792603
    3. 'ater' → logprob: -6.081009387969971
    4. 'culate' → logprob: -6.331009387969971
    5. 'ulate' → logprob: -7.831009387969971
    6. 'calculate' → logprob: -9.706009864807129
    7. 'cul' → logprob: -10.831009864807129
    8. '   ' → logprob: -11.331009864807129
    9. 'rer' → logprob: -12.081009864807129
    10. 'uler' → logprob: -12.331009864807129

Token 314: ' la' (ID: 557)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.07093711942434311
    2. 'result' → logprob: -2.820937156677246
    3. ' calculate' → logprob: -5.570937156677246
    4. ' la' → logprob: -6.195937156677246
    5. '_result' → logprob: -7.320937156677246
    6. 'print' → logprob: -7.445937156677246
    7. 'positive' → logprob: -7.445937156677246
    8. 'the' → logprob: -8.070937156677246
    9. 'la' → logprob: -8.195937156677246
    10. 'le' → logprob: -8.695937156677246

Token 315: ' somme' (ID: 64484)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.006139122415333986
    2. '_positive' → logprob: -5.506139278411865
    3. 'calculate' → logprob: -6.381139278411865
    4. ' positive' → logprob: -8.256138801574707
    5. 'difference' → logprob: -9.756138801574707
    6. 'result' → logprob: -10.756138801574707
    7. 'print' → logprob: -10.881138801574707
    8. 'sum' → logprob: -12.631138801574707
    9. 'Positive' → logprob: -13.631138801574707
    10. ' calculate' → logprob: -14.381138801574707

Token 316: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1454315334558487
    2. '_result' → logprob: -2.8954315185546875
    3. '_positive' → logprob: -3.2704315185546875
    4. 'result' → logprob: -3.8954315185546875
    5. ' =' → logprob: -4.5204315185546875
    6. 'positive' → logprob: -5.5204315185546875
    7. 'calculate' → logprob: -6.2704315185546875
    8. 'des' → logprob: -6.8954315185546875
    9. 'print' → logprob: -6.8954315185546875
    10. '=' → logprob: -7.1454315185546875

Token 317: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003175889723934233
    2. ' print' → logprob: -8.250317573547363
    3. '   ' → logprob: -10.375317573547363
    4. '#print' → logprob: -11.500317573547363
    5. '#' → logprob: -11.750317573547363
    6. '
' → logprob: -12.625317573547363
    7. 'result' → logprob: -13.750317573547363
    8. 'aff' → logprob: -14.375317573547363
    9. '    
' → logprob: -14.750317573547363
    10. '```' → logprob: -15.250317573547363

Token 318: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00028159678913652897
    2. '   ' → logprob: -8.25028133392334
    3. 'print' → logprob: -11.25028133392334
    4. 'e' → logprob: -12.12528133392334
    5. 'age' → logprob: -13.75028133392334
    6. 'ier' → logprob: -15.12528133392334
    7. 'her' → logprob: -16.125282287597656
    8. '  ' → logprob: -16.375282287597656
    9. '```' → logprob: -16.625282287597656
    10. '#' → logprob: -16.750282287597656

Token 319: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26238641142845154
    2. 'print' → logprob: -1.762386441230774
    3. 'result' → logprob: -2.8873863220214844
    4. '(' → logprob: -6.762386322021484
    5. ' print' → logprob: -6.762386322021484
    6. '(print' → logprob: -7.262386322021484
    7. ' result' → logprob: -8.137386322021484
    8. '(result' → logprob: -9.887386322021484
    9. '_result' → logprob: -10.762386322021484
    10. 'res' → logprob: -11.512386322021484

Token 320: ' résultat' (ID: 62556)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.052244119346141815
    2. 'result' → logprob: -3.302244186401367
    3. ' calculate' → logprob: -4.302244186401367
    4. ' result' → logprob: -7.552244186401367
    5. ' resultat' → logprob: -10.802244186401367
    6. ' résultat' → logprob: -11.802244186401367
    7. 'resultado' → logprob: -13.427244186401367
    8. '(result' → logprob: -13.552244186401367
    9. 'answer' → logprob: -13.677244186401367
    10. ')' → logprob: -13.677244186401367

Token 321: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001472960808314383
    2. 'print' → logprob: -6.7514729499816895
    3. ' print' → logprob: -8.876473426818848
    4. 'result' → logprob: -9.001473426818848
    5. '```' → logprob: -10.751473426818848
    6. ' result' → logprob: -11.376473426818848
    7. '    
' → logprob: -13.001473426818848
    8. '
' → logprob: -13.126473426818848
    9. '	print' → logprob: -14.251473426818848
    10. '       ' → logprob: -14.251473426818848

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002619893290102482
    2. 'result' → logprob: -6.752619743347168
    3. 'print' → logprob: -7.127619743347168
    4. ' result' → logprob: -7.752619743347168
    5. ' print' → logprob: -8.502619743347168
    6. '```' → logprob: -11.752619743347168
    7. '    
' → logprob: -13.002619743347168
    8. ' resultat' → logprob: -14.502619743347168
    9. 'Ans' → logprob: -14.877619743347168
    10. ' ans' → logprob: -15.127619743347168

Token 323: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03340257704257965
    2. 'result' (adapté à ' result') → logprob: -3.658402681350708
    3. ' print' → logprob: -5.033402442932129
    4. ' result' → logprob: -7.533402442932129
    5. '   ' → logprob: -10.908402442932129
    6. 'Ans' → logprob: -12.658402442932129
    7. 'answer' → logprob: -13.908402442932129
    8. '```' → logprob: -14.408402442932129
    9. 'ans' → logprob: -14.783402442932129
    10. 'prin' → logprob: -14.908402442932129

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20228895545005798
    2. '=' → logprob: -1.7022889852523804
    3. ')' → logprob: -7.07728910446167
    4. ' ' → logprob: -11.452288627624512
    5. '_' → logprob: -11.702288627624512
    6. '   ' → logprob: -12.077288627624512
    7. '  ' → logprob: -13.327288627624512
    8. ',' → logprob: -13.952288627624512
    9. '(' → logprob: -14.202288627624512
    10. ' =
' → logprob: -14.577288627624512

Token 325: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.03804149478673935
    2. ' calculate' → logprob: -3.288041591644287
    3. '.calculate' → logprob: -17.663042068481445
    4. 'calcul' → logprob: -18.413042068481445
    5. 'cal' → logprob: -18.538042068481445
    6. 'alculate' → logprob: -19.788042068481445
    7. 'calc' → logprob: -19.788042068481445
    8. 'compute' → logprob: -20.538042068481445
    9. ' calcular' → logprob: -20.538042068481445
    10. '   ' → logprob: -20.663042068481445

Token 326: '_positive' (ID: 137937)
  Prédit: '_positive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positive' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.5
    3. 'positive' → logprob: -16.375
    4. '_negative' → logprob: -16.875
    5. '_pos' → logprob: -18.625
    6. ' positive' → logprob: -19.25
    7. '_possible' → logprob: -19.625
    8. ' _' → logprob: -20.25
    9. '```' → logprob: -21.0
    10. 'Positive' → logprob: -21.0

Token 327: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -1.0802738870552275e-05
    2. 'difference' → logprob: -11.50001049041748
    3. '_diff' → logprob: -14.50001049041748
    4. '_' → logprob: -17.000011444091797
    5. ' difference' → logprob: -17.250011444091797
    6. '_d' → logprob: -18.250011444091797
    7. 'Difference' → logprob: -18.875011444091797
    8. '_distance' → logprob: -19.125011444091797
    9. '\' → logprob: -19.875011444091797
    10. '```' → logprob: -20.000011444091797

Token 328: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.60414821645827e-06
    2. '_s' → logprob: -13.000004768371582
    3. '_' → logprob: -13.125004768371582
    4. 'sum' → logprob: -15.875004768371582
    5. ' _' → logprob: -16.000003814697266
    6. 's' → logprob: -18.875003814697266
    7. '"_' → logprob: -18.875003814697266
    8. '_S' → logprob: -19.000003814697266
    9. '_SUM' → logprob: -19.000003814697266
    10. '```' → logprob: -19.000003814697266

Token 329: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.005243479739874601
    2. '(' → logprob: -5.255243301391602
    3. ' (' → logprob: -11.880243301391602
    4. '(
' → logprob: -12.880243301391602
    5. '(n' → logprob: -16.2552433013916
    6. '```' → logprob: -17.2552433013916
    7. '(

' → logprob: -17.8802433013916
    8. ' ' → logprob: -18.7552433013916
    9. '   ' → logprob: -18.8802433013916
    10. '(
' → logprob: -18.8802433013916

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.315936429426074e-05
    2. ',V' → logprob: -9.625082969665527
    3. ' ,' → logprob: -11.625082969665527
    4. ',
' → logprob: -12.875082969665527
    5. '(' → logprob: -13.000082969665527
    6. ')' → logprob: -13.375082969665527
    7. ',N' → logprob: -13.875082969665527
    8. '(V' → logprob: -15.250082969665527
    9. '   ' → logprob: -16.000083923339844
    10. '(N' → logprob: -16.750083923339844

Token 331: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.3868734836578369
    2. ' V' → logprob: -1.136873483657837
    3. ')' → logprob: -13.511873245239258
    4. ')V' → logprob: -14.261873245239258
    5. '	V' → logprob: -16.136873245239258
    6. '   ' → logprob: -16.261873245239258
    7. ' ' → logprob: -16.886873245239258
    8. ',V' → logprob: -17.386873245239258
    9. 'v' → logprob: -17.511873245239258
    10. '    ' → logprob: -17.636873245239258

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.41866585687967e-06
    2. ',C' → logprob: -12.000008583068848
    3. ' ,' → logprob: -13.250008583068848
    4. ',
' → logprob: -15.000008583068848
    5. '   ' → logprob: -17.12500762939453
    6. ',

' → logprob: -18.25000762939453
    7. ')' → logprob: -18.37500762939453
    8. 'C' → logprob: -18.37500762939453
    9. '‌,' → logprob: -18.50000762939453
    10. ',
' → logprob: -19.50000762939453

Token 333: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.005233882926404476
    2. ' C' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.880233764648438
    4. ' ' → logprob: -18.255233764648438
    5. 'c' → logprob: -18.380233764648438
    6. '	C' → logprob: -18.880233764648438
    7. ')' → logprob: -19.005233764648438
    8. ' ' → logprob: -20.005233764648438
    9. '>C' → logprob: -20.630233764648438
    10. '    ' → logprob: -20.880233764648438

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38688185811042786
    2. ')
' → logprob: -1.1368818283081055
    3. '   ' → logprob: -11.886881828308105
    4. ')
' → logprob: -13.011881828308105
    5. ')

' → logprob: -14.011881828308105
    6. ' )
' → logprob: -14.511881828308105
    7. ' )' → logprob: -15.511881828308105
    8. ' ' → logprob: -17.136882781982422
    9. '
' → logprob: -17.136882781982422
    10. '),' → logprob: -17.636882781982422

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03732156381011009
    2. 'print' → logprob: -3.7873215675354004
    3. '
' → logprob: -4.2873215675354
    4. '    
' → logprob: -8.787321090698242
    5. ' print' → logprob: -9.537321090698242
    6. '```' → logprob: -12.162321090698242
    7. '	print' → logprob: -12.787321090698242
    8. '  
' → logprob: -13.287321090698242
    9. '
' → logprob: -14.162321090698242
    10. ' 
' → logprob: -15.537321090698242

Token 336: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.015082285739481449
    2. '   ' → logprob: -4.515082359313965
    3. ' print' → logprob: -5.515082359313965
    4. '
' → logprob: -14.640082359313965
    5. '```' → logprob: -15.390082359313965
    6. '	print' → logprob: -16.14008140563965
    7. '    
' → logprob: -17.26508140563965
    8. 'pr' → logprob: -19.14008140563965
    9. '.print' → logprob: -19.14008140563965
    10. '  ' → logprob: -20.01508140563965

Token 337: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00671584764495492
    2. '(' → logprob: -5.006715774536133
    3. '(res' → logprob: -15.256715774536133
    4. '(results' → logprob: -16.381715774536133
    5. 'result' → logprob: -17.006715774536133
    6. ' (' → logprob: -17.006715774536133
    7. '(
' → logprob: -17.381715774536133
    8. '()' → logprob: -17.756715774536133
    9. '(resultado' → logprob: -18.006715774536133
    10. '(Result' → logprob: -19.131715774536133

Token 338: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.0
    3. ')
' → logprob: -17.875
    4. '())' → logprob: -18.25
    5. '()' → logprob: -18.5
    6. ')`' → logprob: -19.5
    7. '))' → logprob: -20.5
    8. '')' → logprob: -21.125
    9. '`)' → logprob: -21.375
    10. '）' → logprob: -21.625

Token 339: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.248469718324486e-05
    2. '
' → logprob: -11.000022888183594
    3. ' if' → logprob: -12.500022888183594
    4. '```' → logprob: -13.625022888183594
    5. '<|end|>' → logprob: -15.500022888183594
    6. '#' → logprob: -15.750022888183594
    7. '\n' → logprob: -15.875022888183594
    8. 'main' → logprob: -16.125022888183594
    9. '    
' → logprob: -16.375022888183594
    10. '  
' → logprob: -16.500022888183594

Token 340: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008179537020623684
    2. '__' → logprob: -5.008179664611816
    3. '_' → logprob: -6.633179664611816
    4. ' ' → logprob: -9.258179664611816
    5. ' _' → logprob: -10.258179664611816
    6. '_name' → logprob: -12.133179664611816
    7. ' ' → logprob: -12.258179664611816
    8. ' ___' → logprob: -13.508179664611816
    9. ' ​' → logprob: -13.758179664611816
    10. '___' → logprob: -14.133179664611816

Token 341: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029697378631681204
    2. ' __' → logprob: -6.252969741821289
    3. ' ==' → logprob: -7.377969741821289
    4. '==' → logprob: -8.627969741821289
    5. '.__' → logprob: -9.752969741821289
    6. '__.__' → logprob: -9.877969741821289
    7. '[' → logprob: -10.127969741821289
    8. '_' → logprob: -10.627969741821289
    9. '__.' → logprob: -10.627969741821289
    10. '__["' → logprob: -11.252969741821289

Token 342: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.2729995988775045e-06
    2. '__.__' → logprob: -12.125006675720215
    3. '==' → logprob: -14.500006675720215
    4. '__.' → logprob: -16.1250057220459
    5. '___' → logprob: -16.6250057220459
    6. '__["' → logprob: -17.1250057220459
    7. '____' → logprob: -17.1250057220459
    8. '=="' → logprob: -17.1250057220459
    9. '__
' → logprob: -17.3750057220459
    10. ' ==' → logprob: -17.6250057220459

Token 343: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005742399953305721
    2. '==' → logprob: -7.750574111938477
    3. ' ==' → logprob: -9.000574111938477
    4. '=="' → logprob: -11.000574111938477
    5. '___' → logprob: -13.250574111938477
    6. '_' → logprob: -14.750574111938477
    7. '__.__' → logprob: -15.000574111938477
    8. ' __' → logprob: -15.125574111938477
    9. '____' → logprob: -15.875574111938477
    10. '=='' → logprob: -16.000574111938477

Token 344: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014250123873353004
    2. ''' → logprob: -4.2642502784729
    3. ' "__' → logprob: -9.389249801635742
    4. '__' → logprob: -13.139249801635742
    5. ' '__' → logprob: -14.139249801635742
    6. '"user' → logprob: -16.389249801635742
    7. '"_' → logprob: -17.014249801635742
    8. '"name' → logprob: -17.514249801635742
    9. ''"' → logprob: -17.764249801635742
    10. '("__' → logprob: -17.889249801635742

Token 345: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003368926409166306
    2. '__' → logprob: -8.000336647033691
    3. '"' → logprob: -14.125336647033691
    4. '_main' → logprob: -14.875336647033691
    5. ' main' → logprob: -15.000336647033691
    6. 'name' → logprob: -15.750336647033691
    7. '-main' → logprob: -18.750337600708008
    8. ''' → logprob: -18.875337600708008
    9. '	main' → logprob: -19.500337600708008
    10. 'ma' → logprob: -20.250337600708008

Token 346: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16023772954940796
    2. '__":
' → logprob: -1.9102377891540527
    3. '__["' → logprob: -12.535237312316895
    4. '_"' → logprob: -12.785237312316895
    5. '__':
' → logprob: -13.160237312316895
    6. '"' → logprob: -13.160237312316895
    7. '_' → logprob: -13.160237312316895
    8. '__("' → logprob: -14.660237312316895
    9. '__
' → logprob: -15.160237312316895
    10. '__.__' → logprob: -15.785237312316895

Token 347: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20071116089820862
    2. '__' → logprob: -2.200711250305176
    3. '"' → logprob: -2.825711250305176
    4. ' main' → logprob: -4.575711250305176
    5. ''' → logprob: -7.075711250305176
    6. ' __' → logprob: -8.200711250305176
    7. '   ' → logprob: -8.825711250305176
    8. ' "__' → logprob: -8.825711250305176
    9. '_main' → logprob: -9.200711250305176
    10. 'Main' → logprob: -11.200711250305176

Token 348: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03804952651262283
    2. 'main' (adapté à ' main') → logprob: -3.2880494594573975
    3. '	main' → logprob: -11.788049697875977
    4. '   ' → logprob: -15.413049697875977
    5. '_main' → logprob: -15.913049697875977
    6. '(main' → logprob: -16.413049697875977
    7. ' ' → logprob: -17.538049697875977
    8. '.main' → logprob: -18.663049697875977
    9. ' mains' → logprob: -19.288049697875977
    10. ' ' → logprob: -19.913049697875977

Token 349: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003503969172015786
    2. '<|end|>' → logprob: -6.378503799438477
    3. '(' → logprob: -7.003503799438477
    4. '
' → logprob: -8.128503799438477
    5. '```' → logprob: -8.378503799438477
    6. '()
' → logprob: -9.003503799438477
    7. ')' → logprob: -9.128503799438477
    8. '#' → logprob: -10.378503799438477
    9. '("")' → logprob: -10.628503799438477
    10. '\n' → logprob: -10.878503799438477


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 347
Tokens correctement prédits (1ère position, stricte): 136
Tokens correctement prédits (1ère position, avec adaptation): 144
Tokens correctement prédits (top 10): 245
Précision stricte (1ère position): 39.19%
Précision adaptée (1ère position): 41.50%
Précision (top 10): 70.61%
================================================================================
