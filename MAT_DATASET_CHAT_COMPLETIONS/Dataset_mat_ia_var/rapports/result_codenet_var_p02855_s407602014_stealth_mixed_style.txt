================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h,w,k = [int(x) for x in input().split()]
s = []
for _ in range(h):
    row_str = input()
    temp = []
    idx = 0
    while idx < len(row_str):
        temp.append(row_str[idx])
        idx += 1
    s.append(temp)

result = []
for a in range(h):
    buf = []
    for b in range(w):
        buf.append(0)
    result.append(buf)

cc = 1
for y in range(h):
    x = 0
    while x < w:
        if s[y][x] == "#":
            result[y][x] = cc
            cc += 1
        x += 1

for y in range(h):
    run = None
    for x in range(w):
        if result[y][x]:
            run = result[y][x]
        elif run:
            result[y][x] = run

for y in range(h):
    x = w-1
    run = None
    while x >= 0:
        if result[y][x]:
            run = result[y][x]
        elif run:
            result[y][x] = run
        x -= 1

for y in range(h):
    for x in range(w):
        if not result[y][x]:
            if y > 0:
                result[y][x] = result[y-1][x]

for _ in range(h):
    j = w-1
    i = h-1 - _
    while j >= 0:
        if result[i][j] == 0:
            if i < h-1:
                result[i][j] = result[i+1][j]
        j -= 1

[print(*row) for row in result]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: ',w' (ID: 49598)
  → Token d'amorce (pas de prédiction)

Token 2: ',k' (ID: 35155)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08789224922657013
    2. ' =' → logprob: -2.7128922939300537
    3. ',' → logprob: -4.087892055511475
    4. ')' → logprob: -8.462892532348633
    5. '[' → logprob: -8.837892532348633
    6. '.' → logprob: -8.837892532348633
    7. '<|end|>' → logprob: -9.587892532348633
    8. '```' → logprob: -10.087892532348633
    9. ':' → logprob: -10.212892532348633
    10. '*' → logprob: -10.337892532348633

Token 4: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.031038738787174225
    2. '0' → logprob: -4.281038761138916
    3. ' h' → logprob: -5.281038761138916
    4. '10' → logprob: -6.031038761138916
    5. 'map' → logprob: -6.156038761138916
    6. ' map' → logprob: -6.156038761138916
    7. ' (' → logprob: -6.781038761138916
    8. '64' → logprob: -7.656038761138916
    9. '32' → logprob: -7.781038761138916
    10. '100' → logprob: -8.406038284301758

Token 5: 'int' (ID: 491)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.5704053044319153
    2. 'int' → logprob: -1.8204052448272705
    3. '0' → logprob: -2.0704052448272705
    4. '64' → logprob: -3.4454052448272705
    5. '224' → logprob: -3.5704052448272705
    6. '128' → logprob: -3.9454052448272705
    7. '10' → logprob: -4.07040548324585
    8. '100' → logprob: -4.19540548324585
    9. '16' → logprob: -4.69540548324585
    10. '1' → logprob: -5.07040548324585

Token 6: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06059208884835243
    2. '(i' → logprob: -2.9355921745300293
    3. '(' → logprob: -5.810592174530029
    4. '(s' → logprob: -6.185592174530029
    5. '(_)' → logprob: -8.560591697692871
    6. '(input' → logprob: -9.185591697692871
    7. '(item' → logprob: -9.560591697692871
    8. ']' → logprob: -9.810591697692871
    9. '(token' → logprob: -9.810591697692871
    10. '()]' → logprob: -10.685591697692871

Token 7: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023078618105500937
    2. ')]' → logprob: -6.377307891845703
    3. '(x' → logprob: -7.877307891845703
    4. '(' → logprob: -9.377307891845703
    5. ')])' → logprob: -10.377307891845703
    6. 'for' → logprob: -10.627307891845703
    7. ']' → logprob: -10.752307891845703
    8. '(i' → logprob: -11.627307891845703
    9. ' for' → logprob: -12.252307891845703
    10. '(input' → logprob: -12.377307891845703

Token 8: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2194427251815796
    2. '(x' → logprob: -1.4694427251815796
    3. ']' → logprob: -2.219442844390869
    4. '(' → logprob: -2.344442844390869
    5. 'for' → logprob: -2.469442844390869
    6. ')' → logprob: -2.844442844390869
    7. '(i' → logprob: -3.219442844390869
    8. '(input' → logprob: -3.469442844390869
    9. '(token' → logprob: -3.844442844390869
    10. '(s' → logprob: -4.594442844390869

Token 9: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03961556404829025
    2. 'input' → logprob: -3.2896156311035156
    3. ' x' → logprob: -7.164615631103516
    4. ' range' → logprob: -7.914615631103516
    5. ' s' → logprob: -8.914615631103516
    6. ' ' → logprob: -9.414615631103516
    7. ' in' → logprob: -9.539615631103516
    8. ' raw' → logprob: -10.414615631103516
    9. ' user' → logprob: -10.414615631103516
    10. 'range' → logprob: -10.539615631103516

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06267600506544113
    2. 'in' → logprob: -3.437675952911377
    3. 'input' → logprob: -4.562675952911377
    4. '.' → logprob: -4.812675952911377
    5. '<|end|>' → logprob: -5.562675952911377
    6. ' ' → logprob: -7.187675952911377
    7. ' input' → logprob: -7.437675952911377
    8. '(input' → logprob: -7.437675952911377
    9. '=input' → logprob: -7.437675952911377
    10. '(' → logprob: -7.812675952911377

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759400725364685
    2. 'input' → logprob: -0.8259400725364685
    3. '(input' → logprob: -14.825940132141113
    4. ' ' → logprob: -15.825940132141113
    5. '=input' → logprob: -17.575939178466797
    6. '<input' → logprob: -17.575939178466797
    7. 'range' → logprob: -18.450939178466797
    8. ' range' → logprob: -18.825939178466797
    9. '	input' → logprob: -18.950939178466797
    10. '```' → logprob: -19.075939178466797

Token 12: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.017257874831557274
    2. '()' → logprob: -4.1422576904296875
    3. '().' → logprob: -7.0172576904296875
    4. '()][' → logprob: -8.892257690429688
    5. '()].' → logprob: -9.767257690429688
    6. '(' → logprob: -10.142257690429688
    7. ']' → logprob: -10.392257690429688
    8. ']()' → logprob: -10.892257690429688
    9. '())' → logprob: -11.017257690429688
    10. '()],' → logprob: -12.017257690429688

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001245708903297782
    2. 'strip' → logprob: -6.751245498657227
    3. 'rstrip' → logprob: -9.501245498657227
    4. ' split' → logprob: -14.501245498657227
    5. 'spl' → logprob: -16.126245498657227
    6. '(split' → logprob: -16.251245498657227
    7. 'read' → logprob: -17.751245498657227
    8. 'replace' → logprob: -18.876245498657227
    9. 'sp' → logprob: -19.251245498657227
    10. 's' → logprob: -19.251245498657227

Token 14: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0635826364159584
    2. '(' → logprob: -2.8135826587677
    3. '()' → logprob: -6.938582420349121
    4. '('' → logprob: -7.938582420349121
    5. ']' → logprob: -8.813582420349121
    6. '())' → logprob: -9.813582420349121
    7. ')]' → logprob: -10.438582420349121
    8. ']()' → logprob: -10.813582420349121
    9. '()][' → logprob: -12.063582420349121
    10. '()],' → logprob: -12.188582420349121

Token 15: 's' (ID: 82)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4324628114700317
    2. '#' → logprob: -1.5574628114700317
    3. 'a' → logprob: -2.932462692260742
    4. ':' → logprob: -3.057462692260742
    5. '`' → logprob: -3.057462692260742
    6. 'i' → logprob: -3.182462692260742
    7. 'n' → logprob: -3.307462692260742
    8. 'r' → logprob: -3.307462692260742
    9. '\n' → logprob: -3.432462692260742
    10. ',
' → logprob: -3.557462692260742

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5549892783164978
    2. '[' → logprob: -1.5549893379211426
    3. '.' → logprob: -2.1799893379211426
    4. ' =' → logprob: -2.4299893379211426
    5. ',' → logprob: -6.179989337921143
    6. '[i' → logprob: -6.429989337921143
    7. 't' → logprob: -6.679989337921143
    8. '_' → logprob: -7.054989337921143
    9. ' ' → logprob: -7.054989337921143
    10. '[:]' → logprob: -7.054989337921143

Token 17: ' []
' (ID: 8911)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02214689739048481
    2. ' input' → logprob: -3.8971469402313232
    3. '""' → logprob: -8.022147178649902
    4. 'list' → logprob: -8.147147178649902
    5. '[input' → logprob: -8.147147178649902
    6. ''' → logprob: -8.897147178649902
    7. '"' → logprob: -9.022147178649902
    8. '[]' → logprob: -9.397147178649902
    9. '0' → logprob: -9.522147178649902
    10. '[' → logprob: -9.522147178649902

Token 18: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008123667794279754
    2. ' for' → logprob: -7.125812530517578
    3. '_' → logprob: -12.375812530517578
    4. '```' → logprob: -13.250812530517578
    5. 'range' → logprob: -14.875812530517578
    6. '-' → logprob: -15.375812530517578
    7. 'For' → logprob: -15.500812530517578
    8. '[' → logprob: -15.625812530517578
    9. '_for' → logprob: -15.625812530517578
    10. '	for' → logprob: -15.875812530517578

Token 19: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36281490325927734
    2. ' i' → logprob: -1.8628149032592773
    3. '_' → logprob: -2.1128149032592773
    4. ' _' → logprob: -3.6128149032592773
    5. 'i' → logprob: -6.987814903259277
    6. '  ' → logprob: -9.362814903259277
    7. ' range' → logprob: -9.612814903259277
    8. ' ‌' → logprob: -10.112814903259277
    9. ' ' → logprob: -10.362814903259277
    10. ' ▁' → logprob: -11.987814903259277

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.051894333213567734
    2. 'in' → logprob: -3.301894426345825
    3. ' ' → logprob: -4.676894187927246
    4. 'n' → logprob: -5.926894187927246
    5. '_' → logprob: -6.551894187927246
    6. 'i' → logprob: -9.051894187927246
    7. ' n' → logprob: -9.176894187927246
    8. ' i' → logprob: -9.926894187927246
    9. ' _' → logprob: -10.676894187927246
    10. '  ' → logprob: -10.801894187927246

Token 21: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029765760526061058
    2. ' range' → logprob: -3.5297658443450928
    3. 's' → logprob: -12.279766082763672
    4. '(range' → logprob: -12.779766082763672
    5. 'ran' → logprob: -13.779766082763672
    6. '	range' → logprob: -13.779766082763672
    7. '[' → logprob: -13.904766082763672
    8. 'h' → logprob: -14.154766082763672
    9. '_range' → logprob: -14.404766082763672
    10. 'rang' → logprob: -14.654766082763672

Token 22: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.03209881857037544
    2. '(k' → logprob: -3.7820987701416016
    3. '(' → logprob: -4.782098770141602
    4. '(w' → logprob: -8.032098770141602
    5. ' (' → logprob: -9.157098770141602
    6. '(s' → logprob: -13.157098770141602
    7. ' h' → logprob: -13.907098770141602
    8. '(range' → logprob: -14.032098770141602
    9. '(n' → logprob: -14.532098770141602
    10. '(int' → logprob: -14.907098770141602

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021033943630754948
    2. ')' → logprob: -6.377103328704834
    3. '):
' → logprob: -8.502103805541992
    4. ' ):' → logprob: -9.002103805541992
    5. ':' → logprob: -9.752103805541992
    6. '+' → logprob: -11.877103805541992
    7. ' )' → logprob: -13.627103805541992
    8. '):
' → logprob: -13.627103805541992
    9. '-' → logprob: -13.752103805541992
    10. ''):' → logprob: -13.877103805541992

Token 24: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05494830012321472
    2. 's' → logprob: -2.929948329925537
    3. '   ' → logprob: -10.429947853088379
    4. ' ' → logprob: -10.929947853088379
    5. ' input' → logprob: -12.429947853088379
    6. '	s' → logprob: -13.179947853088379
    7. '```' → logprob: -13.429947853088379
    8. 'input' → logprob: -13.804947853088379
    9. ' line' → logprob: -13.929947853088379
    10. '`s' → logprob: -13.929947853088379

Token 25: ' row' (ID: 5225)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007617745082825422
    2. ' s' → logprob: -4.882617950439453
    3. 'list' → logprob: -12.007617950439453
    4. 'row' (adapté à ' row') → logprob: -12.882617950439453
    5. ' list' → logprob: -14.257617950439453
    6. 'input' → logprob: -14.382617950439453
    7. ' row' → logprob: -14.632617950439453
    8. 'line' → logprob: -15.257617950439453
    9. '   ' → logprob: -15.507617950439453
    10. '_s' → logprob: -16.132617950439453

Token 26: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006095639429986477
    2. '=' → logprob: -5.1310954093933105
    3. '.append' → logprob: -8.881095886230469
    4. ' +=' → logprob: -11.131095886230469
    5. ' ' → logprob: -11.881095886230469
    6. '=input' → logprob: -12.881095886230469
    7. '.extend' → logprob: -13.006095886230469
    8. 's' → logprob: -15.131095886230469
    9. '_' → logprob: -15.256095886230469
    10. '.' → logprob: -15.631095886230469

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029843280091881752
    2. '=' → logprob: -3.529843330383301
    3. ' ' → logprob: -10.0298433303833
    4. 'ing' → logprob: -10.1548433303833
    5. '=input' → logprob: -12.1548433303833
    6. 's' → logprob: -13.7798433303833
    7. ' ' → logprob: -14.1548433303833
    8. ' +=' → logprob: -14.7798433303833
    9. '  ' → logprob: -15.0298433303833
    10. '   ' → logprob: -15.0298433303833

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31326377391815186
    2. ' input' → logprob: -1.3132637739181519
    3. '=input' → logprob: -14.063263893127441
    4. 'list' → logprob: -14.688263893127441
    5. '<input' → logprob: -15.688263893127441
    6. '(input' → logprob: -15.813263893127441
    7. ',input' → logprob: -15.813263893127441
    8. ' list' → logprob: -16.188262939453125
    9. 'int' → logprob: -16.563262939453125
    10. '	input' → logprob: -16.813262939453125

Token 29: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00045438710367307067
    2. '().' → logprob: -7.750454425811768
    3. '())' → logprob: -12.00045394897461
    4. ' ()' → logprob: -12.25045394897461
    5. '`()' → logprob: -12.87545394897461
    6. '()`' → logprob: -13.12545394897461
    7. '()]' → logprob: -13.50045394897461
    8. '()
' → logprob: -13.75045394897461
    9. ']()' → logprob: -13.75045394897461
    10. '>()' → logprob: -14.37545394897461

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03187575936317444
    2. 's' → logprob: -3.7818758487701416
    3. ' s' → logprob: -4.7818756103515625
    4. '<|end|>' → logprob: -9.656875610351562
    5. '
' → logprob: -10.156875610351562
    6. '  ' → logprob: -10.781875610351562
    7. ' ' → logprob: -10.781875610351562
    8. '    ' → logprob: -11.406875610351562
    9. ',' → logprob: -11.406875610351562
    10. '_s' → logprob: -11.656875610351562

Token 31: ' temp' (ID: 5484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28576669096946716
    2. ' s' → logprob: -1.4107667207717896
    3. ' row' → logprob: -5.9107666015625
    4. 'row' → logprob: -6.4107666015625
    5. '   ' → logprob: -8.6607666015625
    6. ' ' → logprob: -10.6607666015625
    7. 'rows' → logprob: -10.9107666015625
    8. ' rows' → logprob: -11.2857666015625
    9. ' for' → logprob: -11.6607666015625
    10. '_s' → logprob: -12.6607666015625

Token 32: ' =' (ID: 314)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.20768363773822784
    2. ' =' → logprob: -1.8326836824417114
    3. '=' → logprob: -4.457683563232422
    4. '_list' → logprob: -5.332683563232422
    5. 'row' → logprob: -5.707683563232422
    6. '=[]' → logprob: -5.832683563232422
    7. '.append' → logprob: -5.957683563232422
    8. '=[]
' → logprob: -7.457683563232422
    9. '_s' → logprob: -7.707683563232422
    10. '_' → logprob: -8.582683563232422

Token 33: ' []
' (ID: 8911)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.8360297083854675
    2. ' [' → logprob: -1.2110297679901123
    3. '[]' → logprob: -2.5860297679901123
    4. '[' → logprob: -2.8360297679901123
    5. ' []' → logprob: -3.3360297679901123
    6. '[list' → logprob: -3.3360297679901123
    7. '[len' → logprob: -3.8360297679901123
    8. 'list' → logprob: -3.8360297679901123
    9. '[int' → logprob: -4.586029529571533
    10. ' list' → logprob: -5.211029529571533

Token 34: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21522070467472076
    2. 'for' → logprob: -1.9652206897735596
    3. '   ' → logprob: -3.3402206897735596
    4. '<|end|>' → logprob: -4.715220928192139
    5. ' ' → logprob: -4.840220928192139
    6. '	for' → logprob: -7.590220928192139
    7. '    ' → logprob: -8.09022045135498
    8. '<|end|>' → logprob: -9.09022045135498
    9. '  ' → logprob: -9.34022045135498
    10. '    
' → logprob: -9.84022045135498

Token 35: ' idx' (ID: 14016)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6932111382484436
    2. 'for' → logprob: -0.6932111382484436
    3. ' ' → logprob: -10.818211555480957
    4. '   ' → logprob: -10.818211555480957
    5. '[' → logprob: -11.193211555480957
    6. '	for' → logprob: -12.943211555480957
    7. 'For' → logprob: -13.568211555480957
    8. ' 
' → logprob: -13.943211555480957
    9. '<|end|>' → logprob: -14.068211555480957
    10. '    
' → logprob: -14.193211555480957

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014212986454367638
    2. '=' → logprob: -4.2642130851745605
    3. ' ' → logprob: -10.389212608337402
    4. 's' → logprob: -12.264212608337402
    5. ',' → logprob: -12.264212608337402
    6. '_' → logprob: -12.514212608337402
    7. ')' → logprob: -13.639212608337402
    8. '<|end|>' → logprob: -14.139212608337402
    9. '<|end|>' → logprob: -14.389212608337402
    10. 'x' → logprob: -14.639212608337402

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06204935908317566
    2. ' ' → logprob: -2.812049388885498
    3. '1' → logprob: -9.68704891204834
    4. '-' → logprob: -12.43704891204834
    5. ' -' → logprob: -12.62454891204834
    6. 'len' → logprob: -13.68704891204834
    7. 's' → logprob: -13.81204891204834
    8. '`' → logprob: -14.06204891204834
    9. ' len' → logprob: -14.06204891204834
    10. '   ' → logprob: -14.18704891204834

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019746100588236004
    2. ' ' → logprob: -9.000197410583496
    3. '-' → logprob: -10.375197410583496
    4. 'len' → logprob: -10.875197410583496
    5. '1' → logprob: -11.125197410583496
    6. 'k' → logprob: -13.375197410583496
    7. 's' → logprob: -14.062697410583496
    8. '2' → logprob: -14.125197410583496
    9. 'h' → logprob: -14.125197410583496
    10. ' -' → logprob: -14.250197410583496

Token 39: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3804972469806671
    2. '<|end|>' → logprob: -2.1304972171783447
    3. ' while' → logprob: -2.6304972171783447
    4. ' ' → logprob: -3.1304972171783447
    5. 'while' → logprob: -3.1304972171783447
    6. '	while' → logprob: -3.6304972171783447
    7. '    ' → logprob: -5.755497455596924
    8. '<|end|>' → logprob: -6.255497455596924
    9. '  ' → logprob: -6.380497455596924
    10. '```' → logprob: -7.380497455596924

Token 41: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1173243522644043
    2. ' while' → logprob: -2.2423243522644043
    3. '   ' → logprob: -5.492324352264404
    4. 'for' → logprob: -8.742324829101562
    5. ' ' → logprob: -9.242324829101562
    6. '	while' → logprob: -9.867324829101562
    7. '    ' → logprob: -11.242324829101562
    8. '<|end|>' → logprob: -11.492324829101562
    9. ' for' → logprob: -11.617324829101562
    10. 'While' → logprob: -11.617324829101562

Token 42: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.05490259826183319
    2. 'idx' → logprob: -2.9299025535583496
    3. '(idx' → logprob: -11.929903030395508
    4. ' len' → logprob: -12.179903030395508
    5. ' True' → logprob: -12.429903030395508
    6. '	idx' → logprob: -12.929903030395508
    7. 'True' → logprob: -13.804903030395508
    8. ' ' → logprob: -14.679903030395508
    9. 'len' → logprob: -15.179903030395508
    10. '_idx' → logprob: -15.929903030395508

Token 43: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.024074891582131386
    2. '<' → logprob: -3.7740747928619385
    3. ' <=' → logprob: -7.274075031280518
    4. '<=' → logprob: -10.14907455444336
    5. ' ' → logprob: -10.39907455444336
    6. '<|end|>' → logprob: -10.39907455444336
    7. '<len' → logprob: -11.14907455444336
    8. '+' → logprob: -12.14907455444336
    9. 's' → logprob: -12.77407455444336
    10. '<class' → logprob: -13.39907455444336

Token 44: ' len' (ID: 4631)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3364395499229431
    2. 'len' → logprob: -2.086439609527588
    3. ' w' → logprob: -2.461439609527588
    4. ' len' → logprob: -2.586439609527588
    5. 'k' → logprob: -7.211439609527588
    6. ' k' → logprob: -8.71143913269043
    7. ' ' → logprob: -10.58643913269043
    8. '(len' → logprob: -11.08643913269043
    9. '(w' → logprob: -12.21143913269043
    10. '<w' → logprob: -12.96143913269043

Token 45: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0001887591351987794
    2. 'row' → logprob: -8.625188827514648
    3. '(' → logprob: -12.000188827514648
    4. ' row' → logprob: -12.875188827514648
    5. '(s' → logprob: -14.750188827514648
    6. ' (' → logprob: -16.75018882751465
    7. 's' → logprob: -17.75018882751465
    8. '	row' → logprob: -18.00018882751465
    9. '=row' → logprob: -18.50018882751465
    10. 'Row' → logprob: -18.75018882751465

Token 46: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.1424973713001236e-05
    2. ')' → logprob: -11.125031471252441
    3. 'str' → logprob: -11.250031471252441
    4. '_s' → logprob: -13.625031471252441
    5. ')_' → logprob: -14.875031471252441
    6. 's' → logprob: -15.000031471252441
    7. '   ' → logprob: -15.000031471252441
    8. '_' → logprob: -15.500031471252441
    9. '_)' → logprob: -15.625031471252441
    10. ' _' → logprob: -15.625031471252441

Token 47: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3546447157859802
    2. '):' → logprob: -1.729644775390625
    3. ' and' → logprob: -2.354644775390625
    4. '):
' → logprob: -3.979644775390625
    5. 'and' → logprob: -5.354644775390625
    6. ' )' → logprob: -6.354644775390625
    7. ' ):' → logprob: -7.479644775390625
    8. ':' → logprob: -8.604644775390625
    9. '   ' → logprob: -8.979644775390625
    10. ' ' → logprob: -9.604644775390625

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04035605117678642
    2. ' if' → logprob: -3.540356159210205
    3. 'if' → logprob: -5.540356159210205
    4. '    ' → logprob: -6.790356159210205
    5. '   ' → logprob: -6.915356159210205
    6. '[' → logprob: -7.165356159210205
    7. ',' → logprob: -7.290356159210205
    8. '        
' → logprob: -7.415356159210205
    9. '```' → logprob: -7.915356159210205
    10. ' ' → logprob: -8.665355682373047

Token 49: ' temp' (ID: 5484)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.438072144985199
    2. 'if' → logprob: -1.3130722045898438
    3. '       ' → logprob: -2.6880722045898438
    4. ' c' → logprob: -5.438072204589844
    5. 'c' → logprob: -5.688072204589844
    6. '           ' → logprob: -6.188072204589844
    7. 'ch' → logprob: -6.688072204589844
    8. '   ' → logprob: -6.813072204589844
    9. 'count' → logprob: -6.813072204589844
    10. '```' → logprob: -7.063072204589844

Token 50: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032445008400827646
    2. '.' → logprob: -5.753244400024414
    3. '.extend' → logprob: -9.878244400024414
    4. 'append' → logprob: -11.628244400024414
    5. ' .' → logprob: -13.003244400024414
    6. '.app' → logprob: -13.878244400024414
    7. '_append' → logprob: -14.128244400024414
    8. '.ap' → logprob: -14.628244400024414
    9. '+' → logprob: -15.128244400024414
    10. '=' → logprob: -15.253244400024414

Token 51: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.02185080386698246
    2. '(int' → logprob: -4.1468505859375
    3. '(' → logprob: -5.3968505859375
    4. '(ord' → logprob: -7.1468505859375
    5. 'row' → logprob: -8.6468505859375
    6. '('' → logprob: -8.6468505859375
    7. '((' → logprob: -10.3968505859375
    8. '(s' → logprob: -10.8968505859375
    9. 'int' → logprob: -11.0218505859375
    10. '(True' → logprob: -11.3968505859375

Token 52: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0003469057264737785
    2. 'str' → logprob: -8.250347137451172
    3. '[idx' → logprob: -9.500347137451172
    4. '_[' → logprob: -12.875347137451172
    5. 'Str' → logprob: -13.625347137451172
    6. '[' → logprob: -13.750347137451172
    7. '[str' → logprob: -14.375347137451172
    8. '_idx' → logprob: -14.375347137451172
    9. '[_' → logprob: -14.625347137451172
    10. '```' → logprob: -14.750347137451172

Token 53: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.173704271830502e-06
    2. 'idx' → logprob: -13.00000286102295
    3. '[' → logprob: -15.37500286102295
    4. ')' → logprob: -16.125003814697266
    5. '(idx' → logprob: -16.125003814697266
    6. '[int' → logprob: -16.125003814697266
    7. '```' → logprob: -16.125003814697266
    8. '[
' → logprob: -17.250003814697266
    9. ' idx' → logprob: -17.375003814697266
    10. '[index' → logprob: -17.375003814697266

Token 54: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09272386133670807
    2. '])
' → logprob: -2.842723846435547
    3. ':' → logprob: -4.092723846435547
    4. ']' → logprob: -5.217723846435547
    5. ' ])' → logprob: -5.717723846435547
    6. ')' → logprob: -6.967723846435547
    7. ' ])
' → logprob: -7.217723846435547
    8. '+' → logprob: -7.717723846435547
    9. '   ' → logprob: -7.967723846435547
    10. ']+' → logprob: -8.217723846435547

Token 55: '       ' (ID: 309)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7247875332832336
    2. ' if' → logprob: -1.5997874736785889
    3. '       ' → logprob: -2.099787473678589
    4. '[idx' → logprob: -2.724787473678589
    5. ' idx' → logprob: -3.474787473678589
    6. 'if' → logprob: -4.224787712097168
    7. '   ' → logprob: -4.349787712097168
    8. '    
' → logprob: -4.599787712097168
    9. '
' → logprob: -4.724787712097168
    10. '        
' → logprob: -4.849787712097168

Token 56: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.39252224564552307
    2. 'if' → logprob: -1.2675222158432007
    3. ' if' → logprob: -3.8925223350524902
    4. '       ' → logprob: -4.26752233505249
    5. ' idx' → logprob: -4.89252233505249
    6. 'count' → logprob: -7.64252233505249
    7. '           ' → logprob: -8.767521858215332
    8. 'cnt' → logprob: -9.142521858215332
    9. '        
' → logprob: -9.392521858215332
    10. 'index' → logprob: -9.892521858215332

Token 57: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31964269280433655
    2. '+' → logprob: -1.8196426630020142
    3. ' +=' → logprob: -2.1946427822113037
    4. '++' → logprob: -10.069643020629883
    5. '=' → logprob: -10.444643020629883
    6. ' +' → logprob: -10.944643020629883
    7. '+++' → logprob: -11.694643020629883
    8. '<|end|>' → logprob: -12.194643020629883
    9. '1' → logprob: -13.444643020629883
    10. '+='' → logprob: -13.569643020629883

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008139163837768137
    2. 'k' → logprob: -7.375813961029053
    3. ' ' → logprob: -8.625813484191895
    4. '2' → logprob: -12.375813484191895
    5. ' k' → logprob: -13.250813484191895
    6. '3' → logprob: -15.500813484191895
    7. '4' → logprob: -15.688313484191895
    8. '   ' → logprob: -15.875813484191895
    9. 's' → logprob: -15.875813484191895
    10. '7' → logprob: -16.31331443786621

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010747690976131707
    2. 'k' → logprob: -9.375107765197754
    3. ' ' → logprob: -11.375107765197754
    4. '2' → logprob: -11.500107765197754
    5. '3' → logprob: -15.625107765197754
    6. '4' → logprob: -16.125106811523438
    7. '7' → logprob: -16.750106811523438
    8. ' k' → logprob: -16.937606811523438
    9. 'int' → logprob: -16.937606811523438
    10. '6' → logprob: -17.000106811523438

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009577942080795765
    2. 's' → logprob: -4.759577751159668
    3. ' ' → logprob: -7.759577751159668
    4. '       ' → logprob: -8.759577751159668
    5. ' s' → logprob: -8.884577751159668
    6. '  ' → logprob: -9.384577751159668
    7. '<|end|>' → logprob: -10.009577751159668
    8. '    
' → logprob: -10.259577751159668
    9. '
' → logprob: -10.384577751159668
    10. '    ' → logprob: -11.884577751159668

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18197788298130035
    2. 's' → logprob: -1.8069778680801392
    3. ' s' → logprob: -7.05697774887085
    4. ' ' → logprob: -7.05697774887085
    5. '  ' → logprob: -9.056978225708008
    6. '
' → logprob: -9.181978225708008
    7. '       ' → logprob: -9.431978225708008
    8. 'if' → logprob: -9.681978225708008
    9. '<|end|>' → logprob: -10.181978225708008
    10. '    
' → logprob: -10.306978225708008

Token 62: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.10240957885980606
    2. '   ' → logprob: -2.477409601211548
    3. ' s' → logprob: -4.352409362792969
    4. ' ' → logprob: -7.852409362792969
    5. '    
' → logprob: -10.477409362792969
    6. '  ' → logprob: -11.102409362792969
    7. '```' → logprob: -11.102409362792969
    8. ' 
' → logprob: -11.352409362792969
    9. '
' → logprob: -11.477409362792969
    10. '    ' → logprob: -11.477409362792969

Token 63: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007141007808968425
    2. '.' → logprob: -7.250714302062988
    3. 'append' → logprob: -13.250714302062988
    4. '.extend' → logprob: -13.625714302062988
    5. '.app' → logprob: -14.125714302062988
    6. '.ap' → logprob: -15.500714302062988
    7. ' .' → logprob: -16.875713348388672
    8. '.Append' → logprob: -17.000713348388672
    9. '.push' → logprob: -17.125713348388672
    10. '.add' → logprob: -19.375713348388672

Token 64: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -7.672236824873835e-05
    2. '(' → logprob: -9.500076293945312
    3. '(tmp' → logprob: -13.625076293945312
    4. 'temp' → logprob: -15.000076293945312
    5. '(t' → logprob: -15.375076293945312
    6. '(s' → logprob: -17.875076293945312
    7. '(tuple' → logprob: -18.000076293945312
    8. ' (' → logprob: -18.250076293945312
    9. '(
' → logprob: -18.375076293945312
    10. '((' → logprob: -19.375076293945312

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -16.875
    4. '))' → logprob: -17.0
    5. ')`' → logprob: -17.25
    6. '`)' → logprob: -19.0
    7. '),' → logprob: -19.0
    8. ')s' → logprob: -19.125
    9. '')' → logprob: -19.25
    10. '）' → logprob: -19.375

Token 66: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01132496539503336
    2. ' for' → logprob: -6.511324882507324
    3. '```' → logprob: -6.761324882507324
    4. 'm' → logprob: -6.886324882507324
    5. 'result' → logprob: -7.011324882507324
    6. 'r' → logprob: -7.261324882507324
    7. 'n' → logprob: -7.386324882507324
    8. '#' → logprob: -7.636324882507324
    9. 'x' → logprob: -7.636324882507324
    10. 'i' → logprob: -7.636324882507324

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1814369410276413
    2. '=' → logprob: -1.8064368963241577
    3. 's' → logprob: -6.431437015533447
    4. '=[]' → logprob: -10.056436538696289
    5. '_' → logprob: -10.806436538696289
    6. '=[]
' → logprob: -12.306436538696289
    7. '[:]' → logprob: -12.931436538696289
    8. '[' → logprob: -13.181436538696289
    9. '[]' → logprob: -13.306436538696289
    10. ')' → logprob: -13.806436538696289

Token 68: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.29077959060668945
    2. '0' → logprob: -1.5407795906066895
    3. '[' → logprob: -4.4157795906066895
    4. ' []' → logprob: -4.5407795906066895
    5. '[[' → logprob: -5.1657795906066895
    6. ' ' → logprob: -5.7907795906066895
    7. 'set' → logprob: -7.0407795906066895
    8. '""' → logprob: -7.0407795906066895
    9. '[]
' → logprob: -7.4157795906066895
    10. '[h' → logprob: -7.4157795906066895

Token 69: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.249780638725497e-05
    2. ' for' → logprob: -11.000032424926758
    3. 'row' → logprob: -11.750032424926758
    4. 'if' → logprob: -13.000032424926758
    5. 'i' → logprob: -13.375032424926758
    6. 'while' → logprob: -13.375032424926758
    7. '```' → logprob: -14.250032424926758
    8. 'count' → logprob: -14.500032424926758
    9. 'def' → logprob: -15.250032424926758
    10. 'found' → logprob: -16.000032424926758

Token 70: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05159163847565651
    2. ' _' → logprob: -3.301591634750366
    3. 'i' → logprob: -4.801591873168945
    4. '_' → logprob: -6.176591873168945
    5. ' row' → logprob: -6.926591873168945
    6. ' r' → logprob: -7.176591873168945
    7. ' ' → logprob: -7.426591873168945
    8. ' h' → logprob: -7.551591873168945
    9. ' y' → logprob: -9.301591873168945
    10. 'row' → logprob: -10.051591873168945

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011336400173604488
    2. 'in' → logprob: -4.761336326599121
    3. ' ' → logprob: -6.011336326599121
    4. '_' → logprob: -8.886336326599121
    5. ' i' → logprob: -9.636336326599121
    6. 'i' → logprob: -10.886336326599121
    7. 'n' → logprob: -11.386336326599121
    8. '_in' → logprob: -12.136336326599121
    9. 'a' → logprob: -12.636336326599121
    10. ',' → logprob: -12.636336326599121

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012077613733708858
    2. ' range' → logprob: -4.512077808380127
    3. 's' → logprob: -6.887077808380127
    4. ' s' → logprob: -12.887077331542969
    5. '(range' → logprob: -13.012077331542969
    6. 'r' → logprob: -13.512077331542969
    7. '[' → logprob: -15.262077331542969
    8. '	range' → logprob: -15.262077331542969
    9. 'row' → logprob: -15.387077331542969
    10. 'ran' → logprob: -15.512077331542969

Token 73: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0024970639497041702
    2. '(k' → logprob: -6.12749719619751
    3. '(' → logprob: -8.252496719360352
    4. '(w' → logprob: -10.752496719360352
    5. 'h' → logprob: -11.002496719360352
    6. '(len' → logprob: -11.752496719360352
    7. 'k' → logprob: -13.502496719360352
    8. '((' → logprob: -13.627496719360352
    9. '(max' → logprob: -13.877496719360352
    10. '(-' → logprob: -15.002496719360352

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4456133246421814
    2. '-k' → logprob: -1.3206133842468262
    3. ' -' → logprob: -2.820613384246826
    4. '):
' → logprob: -4.195613384246826
    5. '-' → logprob: -4.320613384246826
    6. '-w' → logprob: -5.695613384246826
    7. '-h' → logprob: -6.945613384246826
    8. ' ):' → logprob: -8.945612907409668
    9. ')' → logprob: -9.695612907409668
    10. '   ' → logprob: -9.945612907409668

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014244482852518559
    2. ' ' → logprob: -4.764244556427002
    3. ' for' → logprob: -5.389244556427002
    4. '    ' → logprob: -7.514244556427002
    5. '<|end|>' → logprob: -8.514244079589844
    6. '\' → logprob: -9.889244079589844
    7. 'for' → logprob: -9.889244079589844
    8. '   ' → logprob: -10.389244079589844
    9. '  ' → logprob: -10.889244079589844
    10. ',' → logprob: -10.889244079589844

Token 76: ' buf' (ID: 13976)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31522804498672485
    2. 'for' → logprob: -1.31522798538208
    3. '   ' → logprob: -6.69022798538208
    4. 'b' → logprob: -8.440228462219238
    5. ' ' → logprob: -8.940228462219238
    6. ' result' → logprob: -9.565228462219238
    7. ' row' → logprob: -9.690228462219238
    8. ' b' → logprob: -9.815228462219238
    9. 'result' → logprob: -9.815228462219238
    10. 'row' → logprob: -10.065228462219238

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16360795497894287
    2. '=' → logprob: -1.9136079549789429
    3. 'f' → logprob: -6.538608074188232
    4. 'w' → logprob: -7.413608074188232
    5. '=[]' → logprob: -7.538608074188232
    6. ' ' → logprob: -8.413607597351074
    7. 'for' → logprob: -8.788607597351074
    8. 'r' → logprob: -9.538607597351074
    9. 'er' → logprob: -9.538607597351074
    10. '   ' → logprob: -10.163607597351074

Token 78: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.040471795946359634
    2. '""' → logprob: -3.4154717922210693
    3. '''' → logprob: -5.290472030639648
    4. '0' → logprob: -7.415472030639648
    5. ' []' → logprob: -7.540472030639648
    6. '[' → logprob: -8.290472030639648
    7. '"' → logprob: -8.790472030639648
    8. '[]
' → logprob: -9.415472030639648
    9. 's' → logprob: -9.665472030639648
    10. ''' → logprob: -10.790472030639648

Token 79: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39733824133872986
    2. 'for' → logprob: -1.3973382711410522
    3. '   ' → logprob: -2.5223381519317627
    4. ' ' → logprob: -8.522337913513184
    5. '	for' → logprob: -9.772337913513184
    6. '       ' → logprob: -10.272337913513184
    7. '<|end|>' → logprob: -10.272337913513184
    8. '    ' → logprob: -10.647337913513184
    9. '  ' → logprob: -12.522337913513184
    10. '[' → logprob: -13.147337913513184

Token 80: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005266997031867504
    2. 'b' → logprob: -7.7505269050598145
    3. ' for' → logprob: -9.375526428222656
    4. '   ' → logprob: -12.375526428222656
    5. 'count' → logprob: -12.625526428222656
    6. 'row' → logprob: -13.000526428222656
    7. 'cnt' → logprob: -15.000526428222656
    8. 'c' → logprob: -15.250526428222656
    9. 'col' → logprob: -15.875526428222656
    10. 'j' → logprob: -16.000526428222656

Token 81: ' b' (ID: 287)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.253287672996521
    2. 'w' → logprob: -1.753287672996521
    3. ' range' → logprob: -3.1282877922058105
    4. 'range' → logprob: -5.1282877922058105
    5. ' b' → logprob: -8.003287315368652
    6. 'b' → logprob: -8.128287315368652
    7. '(w' → logprob: -9.753287315368652
    8. '_' → logprob: -9.878287315368652
    9. ' ' → logprob: -10.378287315368652
    10. '0' → logprob: -11.128287315368652

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012408251641318202
    2. 'in' → logprob: -6.7512407302856445
    3. ' ' → logprob: -9.626240730285645
    4. 'range' → logprob: -13.626240730285645
    5. '   ' → logprob: -14.251240730285645
    6. '    ' → logprob: -15.001240730285645
    7. '```' → logprob: -15.126240730285645
    8. '  ' → logprob: -15.376240730285645
    9. '0' → logprob: -15.626240730285645
    10. '+' → logprob: -15.751240730285645

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06196802109479904
    2. 'range' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.436967849731445
    4. '(range' → logprob: -16.061967849731445
    5. '   ' → logprob: -17.936967849731445
    6. '	range' → logprob: -18.061967849731445
    7. 'ran' → logprob: -18.561967849731445
    8. '  ' → logprob: -19.186967849731445
    9. 's' → logprob: -19.311967849731445
    10. 'w' → logprob: -19.311967849731445

Token 84: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00508990278467536
    2. 'w' → logprob: -5.50508975982666
    3. '(k' → logprob: -7.63008975982666
    4. '(h' → logprob: -8.50508975982666
    5. ' (' → logprob: -8.75508975982666
    6. '(' → logprob: -8.88008975982666
    7. ' w' → logprob: -11.88008975982666
    8. 'k' → logprob: -12.00508975982666
    9. '(b' → logprob: -12.13008975982666
    10. ')' → logprob: -13.63008975982666

Token 85: '):
' (ID: 1883)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.14093928039073944
    2. '):' → logprob: -2.390939235687256
    3. ' -' → logprob: -3.640939235687256
    4. '-' → logprob: -4.390939235687256
    5. '   ' → logprob: -7.140939235687256
    6. '+k' → logprob: -9.015939712524414
    7. ')' → logprob: -9.140939712524414
    8. '):
' → logprob: -9.390939712524414
    9. ' ' → logprob: -10.015939712524414
    10. ' ):' → logprob: -10.390939712524414

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.669394850730896
    2. ' ' → logprob: -0.794394850730896
    3. '        ' → logprob: -3.7943949699401855
    4. '    ' → logprob: -5.5443949699401855
    5. ' if' → logprob: -6.6693949699401855
    6. ',' → logprob: -6.9193949699401855
    7. ' 
' → logprob: -7.1693949699401855
    8. '   ' → logprob: -7.1693949699401855
    9. '        
' → logprob: -7.1693949699401855
    10. 'if' → logprob: -7.4193949699401855

Token 87: ' buf' (ID: 13976)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.047775574028491974
    2. ''' → logprob: -3.6727755069732666
    3. ' if' → logprob: -5.172775745391846
    4. 's' → logprob: -5.297775745391846
    5. ' s' → logprob: -6.047775745391846
    6. ' buf' → logprob: -6.172775745391846
    7. ''s' → logprob: -6.797775745391846
    8. '    ' → logprob: -6.922775745391846
    9. 'if' → logprob: -7.297775745391846
    10. '[' → logprob: -7.672775745391846

Token 88: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03441261127591133
    2. '.' → logprob: -3.7844126224517822
    3. '=' → logprob: -4.909412384033203
    4. ' =' → logprob: -6.534412384033203
    5. 'append' → logprob: -7.159412384033203
    6. ' +=' → logprob: -7.659412384033203
    7. '+' → logprob: -7.784412384033203
    8. '+=' → logprob: -7.909412384033203
    9. '.extend' → logprob: -9.534412384033203
    10. ')' → logprob: -9.659412384033203

Token 89: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07173842936754227
    2. '('' → logprob: -3.0717384815216064
    3. '(' → logprob: -3.8217384815216064
    4. 's' → logprob: -7.321738243103027
    5. '('.')' → logprob: -8.821738243103027
    6. '((' → logprob: -9.946738243103027
    7. '("("' → logprob: -10.821738243103027
    8. '('#' → logprob: -10.821738243103027
    9. '("' → logprob: -10.946738243103027
    10. '('*' → logprob: -11.321738243103027

Token 90: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07284492999315262
    2. ''s' → logprob: -3.822844982147217
    3. '0' → logprob: -4.072844982147217
    4. ''.' → logprob: -4.197844982147217
    5. ''' → logprob: -4.572844982147217
    6. '1' → logprob: -6.322844982147217
    7. '[' → logprob: -7.447844982147217
    8. ''#' → logprob: -7.447844982147217
    9. '(' → logprob: -7.697844982147217
    10. ''*' → logprob: -7.822844982147217

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010974763426929712
    2. ' )' → logprob: -6.876097679138184
    3. ')
' → logprob: -9.876097679138184
    4. '   ' → logprob: -12.626097679138184
    5. '+' → logprob: -13.126097679138184
    6. ']' → logprob: -13.376097679138184
    7. ' )
' → logprob: -14.126097679138184
    8. ' ' → logprob: -14.251097679138184
    9. '       ' → logprob: -14.376097679138184
    10. '*' → logprob: -14.376097679138184

Token 92: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7911067605018616
    2. 'result' (adapté à ' result') → logprob: -0.7911067605018616
    3. ' result' → logprob: -3.166106700897217
    4. '<|end|>' → logprob: -3.416106700897217
    5. ' ' → logprob: -4.291106700897217
    6. '
' → logprob: -6.166106700897217
    7. ')' → logprob: -7.166106700897217
    8. '  ' → logprob: -8.041107177734375
    9. '```' → logprob: -8.416107177734375
    10. ' for' → logprob: -8.541107177734375

Token 94: '.append' (ID: 3709)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.02179761417210102
    2. '[' → logprob: -4.0217976570129395
    3. '.append' → logprob: -5.6467976570129395
    4. '[-' → logprob: -10.021797180175781
    5. '[b' → logprob: -11.021797180175781
    6. '```' → logprob: -11.521797180175781
    7. '[h' → logprob: -11.646797180175781
    8. '[A' → logprob: -12.146797180175781
    9. '\[' → logprob: -12.396797180175781
    10. '[s' → logprob: -12.771797180175781

Token 95: '(buf' (ID: 24783)
  Prédit: '(buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buf' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.625003814697266
    3. 'buf' → logprob: -15.625003814697266
    4. '([' → logprob: -16.000003814697266
    5. '(buff' → logprob: -16.000003814697266
    6. '(buffer' → logprob: -16.125003814697266
    7. '([]' → logprob: -16.250003814697266
    8. '(b' → logprob: -18.000003814697266
    9. ' buf' → logprob: -18.875003814697266
    10. '(len' → logprob: -19.125003814697266

Token 96: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -17.0
    4. '))' → logprob: -17.375
    5. ']' → logprob: -19.375
    6. ')`' → logprob: -19.5
    7. ')

' → logprob: -20.0
    8. '）' → logprob: -20.0
    9. '),' → logprob: -20.25
    10. ')return' → logprob: -20.625

Token 97: 'cc' (ID: 710)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009211080614477396
    2. ' for' → logprob: -7.625921249389648
    3. '#' → logprob: -8.000921249389648
    4. '
' → logprob: -11.000921249389648
    5. 'a' → logprob: -11.250921249389648
    6. ')' → logprob: -11.375921249389648
    7. '.' → logprob: -11.625921249389648
    8. '(' → logprob: -11.750921249389648
    9. '```' → logprob: -12.250921249389648
    10. 'def' → logprob: -12.625921249389648

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.712209165096283
    2. '=' → logprob: -0.837209165096283
    3. 'ount' → logprob: -3.3372092247009277
    4. '=[]' → logprob: -4.212209224700928
    5. 'nt' → logprob: -4.837209224700928
    6. 'ounter' → logprob: -5.462209224700928
    7. '_' → logprob: -5.712209224700928
    8. '[' → logprob: -6.712209224700928
    9. 'c' → logprob: -7.337209224700928
    10. 'h' → logprob: -7.462209224700928

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03151728957891464
    2. '[]' → logprob: -4.281517505645752
    3. '[[' → logprob: -5.031517505645752
    4. '1' → logprob: -5.156517505645752
    5. '{}' → logprob: -6.156517505645752
    6. '[' → logprob: -6.281517505645752
    7. '-' → logprob: -8.156517028808594
    8. ' ' → logprob: -8.906517028808594
    9. '[h' → logprob: -9.031517028808594
    10. '[]
' → logprob: -9.156517028808594

Token 100: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2680334150791168
    2. '[[' → logprob: -2.143033504486084
    3. '[]' → logprob: -2.643033504486084
    4. '[' → logprob: -3.893033504486084
    5. '{}' → logprob: -4.393033504486084
    6. '1' → logprob: -4.768033504486084
    7. '[h' → logprob: -6.018033504486084
    8. '[(' → logprob: -7.393033504486084
    9. '-' → logprob: -7.518033504486084
    10. '[]
' → logprob: -8.143033027648926

Token 101: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3234497308731079
    2. '<|end|>' → logprob: -1.823449730873108
    3. '
' → logprob: -2.5734496116638184
    4. ' for' → logprob: -3.3234496116638184
    5. 'while' → logprob: -7.073449611663818
    6. '<|end|>' → logprob: -8.073450088500977
    7. '#' → logprob: -8.323450088500977
    8. '```' → logprob: -8.573450088500977
    9. ',' → logprob: -8.948450088500977
    10. '\n' → logprob: -9.073450088500977

Token 102: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.058669984340667725
    2. 'visited' → logprob: -2.9336700439453125
    3. 'stack' → logprob: -6.6836700439453125
    4. 'direction' → logprob: -7.1836700439453125
    5. 'def' → logprob: -7.6836700439453125
    6. ' for' → logprob: -8.058670043945312
    7. 'dire' → logprob: -8.308670043945312
    8. 'color' → logprob: -9.183670043945312
    9. 'neighbors' → logprob: -9.308670043945312
    10. 'used' → logprob: -9.433670043945312

Token 103: ' y' (ID: 342)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.011634803377091885
    2. 'a' → logprob: -5.636634826660156
    3. ' i' → logprob: -5.761634826660156
    4. ' _' → logprob: -5.761634826660156
    5. ' ' → logprob: -7.136634826660156
    6. ' h' → logprob: -8.261634826660156
    7. ' range' → logprob: -8.636634826660156
    8. '_' → logprob: -8.636634826660156
    9. ' r' → logprob: -9.386634826660156
    10. ' x' → logprob: -9.511634826660156

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01109497994184494
    2. 'in' → logprob: -4.51109504699707
    3. ' ' → logprob: -10.01109504699707
    4. '	in' → logprob: -15.01109504699707
    5. '   ' → logprob: -15.38609504699707
    6. 'import' → logprob: -15.38609504699707
    7. 'range' → logprob: -15.51109504699707
    8. ',' → logprob: -15.76109504699707
    9. '  ' → logprob: -15.88609504699707
    10. '0' → logprob: -16.13609504699707

Token 105: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16022443771362305
    2. 'range' → logprob: -1.910224437713623
    3. '	range' → logprob: -16.53522491455078
    4. 'Range' → logprob: -16.66022491455078
    5. '(range' → logprob: -16.91022491455078
    6. ' ' → logprob: -18.16022491455078
    7. '_range' → logprob: -18.41022491455078
    8. 'ange' → logprob: -18.91022491455078
    9. ' xrange' → logprob: -18.91022491455078
    10. '0' → logprob: -19.28522491455078

Token 106: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.8351892473874614e-05
    2. '(' → logprob: -10.000048637390137
    3. 'h' → logprob: -13.375048637390137
    4. ' (' → logprob: -13.875048637390137
    5. ' h' → logprob: -15.750048637390137
    6. '(
' → logprob: -16.62504768371582
    7. '(H' → logprob: -16.75004768371582
    8. '(height' → logprob: -17.12504768371582
    9. '(len' → logprob: -17.25004768371582
    10. '(k' → logprob: -17.50004768371582

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741256833076477
    2. '):
' → logprob: -0.9741256833076477
    3. ':' → logprob: -10.849125862121582
    4. '):
' → logprob: -10.849125862121582
    5. '+' → logprob: -13.099125862121582
    6. '   ' → logprob: -13.224125862121582
    7. ' ):' → logprob: -13.349125862121582
    8. '):

' → logprob: -13.474125862121582
    9. '-' → logprob: -14.224125862121582
    10. ' ):
' → logprob: -14.349125862121582

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6478240489959717
    2. ' for' → logprob: -0.8978240489959717
    3. ':' → logprob: -3.1478240489959717
    4. '<|end|>' → logprob: -4.272824287414551
    5. ':
' → logprob: -4.772824287414551
    6. 'for' → logprob: -5.897824287414551
    7. ' ' → logprob: -7.647824287414551
    8. ' and' → logprob: -8.77282428741455
    9. ',' → logprob: -8.77282428741455
    10. '       ' → logprob: -9.14782428741455

Token 109: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5764533281326294
    2. 'for' → logprob: -0.8264533281326294
    3. '   ' → logprob: -7.82645320892334
    4. '<|end|>' → logprob: -10.20145320892334
    5. 'w' → logprob: -10.57645320892334
    6. ' ' → logprob: -10.95145320892334
    7. ' w' → logprob: -11.57645320892334
    8. '```' → logprob: -12.45145320892334
    9. '
' → logprob: -12.57645320892334
    10. 'range' → logprob: -12.82645320892334

Token 110: ' =' (ID: 314)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4207518994808197
    2. 'in' → logprob: -1.670751929283142
    3. '=' → logprob: -2.0457518100738525
    4. ' =' → logprob: -3.6707518100738525
    5. ' ' → logprob: -8.670751571655273
    6. ')' → logprob: -8.920751571655273
    7. '0' → logprob: -10.045751571655273
    8. '+' → logprob: -10.045751571655273
    9. 'for' → logprob: -10.295751571655273
    10. '<|end|>' → logprob: -10.295751571655273

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005533903022296727
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.250553131103516
    4. '1' → logprob: -16.000553131103516
    5. 'w' → logprob: -17.375553131103516
    6. 'k' → logprob: -18.000553131103516
    7. '=' → logprob: -18.125553131103516
    8. '(' → logprob: -18.625553131103516
    9. '  ' → logprob: -18.875553131103516
    10. '[' → logprob: -18.938053131103516

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.875051498413086
    4. '1' → logprob: -17.375051498413086
    5. 'w' → logprob: -17.500051498413086
    6. 'k' → logprob: -18.125051498413086
    7. '=' → logprob: -18.125051498413086
    8. '<|end|>' → logprob: -18.250051498413086
    9. '(' → logprob: -18.625051498413086
    10. ')' → logprob: -18.875051498413086

Token 113: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6127334833145142
    2. ' while' → logprob: -1.1127334833145142
    3. '<|end|>' → logprob: -2.1127333641052246
    4. ':' → logprob: -5.862733364105225
    5. '<|end|>' → logprob: -6.362733364105225
    6. '   ' → logprob: -6.362733364105225
    7. '
' → logprob: -7.487733364105225
    8. '	while' → logprob: -7.862733364105225
    9. ':
' → logprob: -8.362733840942383
    10. ')' → logprob: -8.487733840942383

Token 116: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11284966766834259
    2. ' x' → logprob: -2.237849712371826
    3. 'w' → logprob: -10.862849235534668
    4. ' w' → logprob: -12.112849235534668
    5. '(x' → logprob: -13.237849235534668
    6. ' ' → logprob: -14.612849235534668
    7. '	x' → logprob: -16.362850189208984
    8. '   ' → logprob: -16.487850189208984
    9. '```' → logprob: -16.862850189208984
    10. '(w' → logprob: -17.237850189208984

Token 117: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011227368377149105
    2. '<' → logprob: -4.511227130889893
    3. '<w' → logprob: -8.63622760772705
    4. '<n' → logprob: -14.26122760772705
    5. ' ' → logprob: -14.63622760772705
    6. '<len' → logprob: -15.26122760772705
    7. 'w' → logprob: -15.51122760772705
    8. '<s' → logprob: -15.88622760772705
    9. ' <=' → logprob: -16.636226654052734
    10. ' <
' → logprob: -16.636226654052734

Token 118: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00861528143286705
    2. ' w' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.883615493774414
    4. ' ' → logprob: -16.133615493774414
    5. '	w' → logprob: -16.383615493774414
    6. '<w' → logprob: -16.633615493774414
    7. '(w' → logprob: -17.133615493774414
    8. 'len' → logprob: -17.258615493774414
    9. '    ' → logprob: -17.758615493774414
    10. '  ' → logprob: -17.758615493774414

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006741304416209459
    2. ':
' → logprob: -5.506741523742676
    3. ' and' → logprob: -6.006741523742676
    4. 'and' → logprob: -8.756741523742676
    5. ' :' → logprob: -10.381741523742676
    6. ':

' → logprob: -12.881741523742676
    7. '   ' → logprob: -13.256741523742676
    8. ',' → logprob: -13.506741523742676
    9. ' :
' → logprob: -14.256741523742676
    10. '):' → logprob: -14.631741523742676

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052854105830192566
    2. ':' → logprob: -4.052854061126709
    3. '<|end|>' → logprob: -4.552854061126709
    4. ' if' → logprob: -5.052854061126709
    5. '
' → logprob: -5.177854061126709
    6. ' and' → logprob: -5.552854061126709
    7. ':
' → logprob: -6.052854061126709
    8. ',' → logprob: -7.052854061126709
    9. '        
' → logprob: -7.052854061126709
    10. '   ' → logprob: -7.052854061126709

Token 121: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13681206107139587
    2. ' if' → logprob: -2.2618119716644287
    3. '           ' → logprob: -4.386812210083008
    4. '       ' → logprob: -5.261812210083008
    5. '        ' → logprob: -6.636812210083008
    6. '0' → logprob: -6.761812210083008
    7. '.' → logprob: -7.261812210083008
    8. '#' → logprob: -7.511812210083008
    9. ':' → logprob: -8.011812210083008
    10. ''' → logprob: -8.011812210083008

Token 122: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12704570591449738
    2. 's' → logprob: -2.1270456314086914
    3. ' not' → logprob: -10.002045631408691
    4. 'result' → logprob: -11.377045631408691
    5. ' result' → logprob: -11.377045631408691
    6. ' ' → logprob: -11.502045631408691
    7. ' x' → logprob: -11.877045631408691
    8. 'x' → logprob: -12.002045631408691
    9. ' (' → logprob: -12.002045631408691
    10. '(s' → logprob: -12.002045631408691

Token 123: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.246537173457909e-06
    2. ' [' → logprob: -13.500003814697266
    3. '[x' → logprob: -13.875003814697266
    4. '[' → logprob: -13.875003814697266
    5. 'y' → logprob: -15.375003814697266
    6. '[a' → logprob: -15.500003814697266
    7. '```' → logprob: -16.000003814697266
    8. '[s' → logprob: -17.125003814697266
    9. '[h' → logprob: -17.375003814697266
    10. '   ' → logprob: -17.375003814697266

Token 124: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.31485098600387573
    2. '[x' → logprob: -1.3148510456085205
    3. '][' → logprob: -6.564850807189941
    4. '[' → logprob: -9.564850807189941
    5. ' [' → logprob: -10.314850807189941
    6. '[a' → logprob: -11.189850807189941
    7. '[s' → logprob: -11.814850807189941
    8. '[z' → logprob: -11.814850807189941
    9. '[u' → logprob: -12.189850807189941
    10. '```' → logprob: -12.189850807189941

Token 125: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.75000286102295
    3. '[x' → logprob: -18.125003814697266
    4. ']' → logprob: -18.375003814697266
    5. '```' → logprob: -18.750003814697266
    6. '][' → logprob: -18.875003814697266
    7. ''x' → logprob: -18.875003814697266
    8. ')x' → logprob: -19.000003814697266
    9. '
' → logprob: -19.125003814697266
    10. ' ' → logprob: -19.375003814697266

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7028253674507141
    2. '==' → logprob: -0.9528253674507141
    3. ' ==' → logprob: -2.5778253078460693
    4. ']==' → logprob: -3.2028253078460693
    5. '[' → logprob: -7.327825546264648
    6. '=='' → logprob: -7.327825546264648
    7. ']=='' → logprob: -7.577825546264648
    8. ' ]' → logprob: -8.327825546264648
    9. '!=' → logprob: -8.577825546264648
    10. ' !=' → logprob: -9.577825546264648

Token 127: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.315937340259552
    2. ' ==' → logprob: -1.3159372806549072
    3. '!=' → logprob: -6.440937519073486
    4. ' !=' → logprob: -7.315937519073486
    5. '=='' → logprob: -8.565937042236328
    6. ':' → logprob: -9.440937042236328
    7. '[' → logprob: -10.315937042236328
    8. '.' → logprob: -10.690937042236328
    9. ' ' → logprob: -10.940937042236328
    10. '=' → logprob: -11.065937042236328

Token 128: ' "#' (ID: 11351)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.4657631814479828
    2. ''#' → logprob: -1.4657632112503052
    3. ''' → logprob: -2.4657630920410156
    4. ''*' → logprob: -3.0907630920410156
    5. '"#' → logprob: -6.090763092041016
    6. '".' → logprob: -6.465763092041016
    7. '"."' → logprob: -6.590763092041016
    8. ''o' → logprob: -7.215763092041016
    9. ' '#'' → logprob: -7.340763092041016
    10. '"' → logprob: -7.340763092041016

Token 129: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.13173891603946686
    2. '"' → logprob: -2.2567389011383057
    3. '":
' → logprob: -4.256739139556885
    4. ' "' → logprob: -6.006739139556885
    5. ' ":' → logprob: -7.006739139556885
    6. ' and' → logprob: -7.756739139556885
    7. ':' → logprob: -7.756739139556885
    8. '":
' → logprob: -9.506738662719727
    9. '#' → logprob: -9.631738662719727
    10. '":

' → logprob: -10.131738662719727

Token 130: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.33604589104652405
    2. ':' → logprob: -1.8360458612442017
    3. '           ' → logprob: -2.211045980453491
    4. ':
' → logprob: -4.836045742034912
    5. 'and' → logprob: -5.711045742034912
    6. ' or' → logprob: -6.336045742034912
    7. '       ' → logprob: -6.586045742034912
    8. ' :' → logprob: -7.336045742034912
    9. '   ' → logprob: -8.71104621887207
    10. '#' → logprob: -8.96104621887207

Token 131: ' result' (ID: 1534)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9285164475440979
    2. ' x' → logprob: -0.9285164475440979
    3. ' if' → logprob: -2.053516387939453
    4. '           ' → logprob: -3.803516387939453
    5. 'if' → logprob: -4.178516387939453
    6. ' result' → logprob: -4.928516387939453
    7. 'result' (adapté à ' result') → logprob: -5.053516387939453
    8. ' cc' → logprob: -5.553516387939453
    9. ' pass' → logprob: -5.803516387939453
    10. '            ' → logprob: -5.928516387939453

Token 132: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -13.000004768371582
    3. ' [' → logprob: -13.875004768371582
    4. '[Y' → logprob: -14.375004768371582
    5. '][' → logprob: -14.625004768371582
    6. '[user' → logprob: -16.500003814697266
    7. '[h' → logprob: -17.000003814697266
    8. '[x' → logprob: -17.125003814697266
    9. '[s' → logprob: -17.125003814697266
    10. '[a' → logprob: -17.125003814697266

Token 133: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0037992498837411404
    2. '[x' → logprob: -6.1287994384765625
    3. '[y' → logprob: -6.8787994384765625
    4. ' ][' → logprob: -8.003799438476562
    5. ']' → logprob: -8.878799438476562
    6. '[' → logprob: -10.378799438476562
    7. '   ' → logprob: -10.753799438476562
    8. '"][' → logprob: -11.503799438476562
    9. ' ' → logprob: -12.003799438476562
    10. '       ' → logprob: -12.128799438476562

Token 134: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.8087270038668066e-05
    2. ' x' → logprob: -11.125027656555176
    3. '0' → logprob: -11.250027656555176
    4. 'w' → logprob: -16.250028610229492
    5. ' ' → logprob: -17.000028610229492
    6. 'max' → logprob: -17.375028610229492
    7. ']' → logprob: -17.375028610229492
    8. '(x' → logprob: -17.500028610229492
    9. 'b' → logprob: -18.500028610229492
    10. '   ' → logprob: -18.500028610229492

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04057928919792175
    2. ' =' → logprob: -4.040579319000244
    3. '=' → logprob: -4.415579319000244
    4. ' ]' → logprob: -5.290579319000244
    5. ']=' → logprob: -5.415579319000244
    6. '[' → logprob: -7.915579319000244
    7. ']+=' → logprob: -9.040578842163086
    8. ' ' → logprob: -10.415578842163086
    9. ']==' → logprob: -10.665578842163086
    10. ')' → logprob: -11.415578842163086

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01251177117228508
    2. ' =' → logprob: -4.387511730194092
    3. '=int' → logprob: -14.76251220703125
    4. '+=' → logprob: -15.26251220703125
    5. '[' → logprob: -15.38751220703125
    6. ',' → logprob: -15.63751220703125
    7. ' ' → logprob: -15.76251220703125
    8. '.' → logprob: -16.63751220703125
    9. '=k' → logprob: -16.76251220703125
    10. '=user' → logprob: -16.76251220703125

Token 137: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0013617821969091892
    2. ' cc' → logprob: -6.626361846923828
    3. '0' → logprob: -10.751361846923828
    4. ' ' → logprob: -12.626361846923828
    5. '1' → logprob: -12.751361846923828
    6. '	cc' → logprob: -13.376361846923828
    7. '-' → logprob: -13.626361846923828
    8. 'c' → logprob: -13.876361846923828
    9. '(cc' → logprob: -14.001361846923828
    10. 'ccc' → logprob: -14.501361846923828

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22334489226341248
    2. '           ' → logprob: -1.8483449220657349
    3. 'x' → logprob: -3.4733448028564453
    4. '               ' → logprob: -6.098344802856445
    5. ' x' → logprob: -6.598344802856445
    6. ' 
' → logprob: -6.723344802856445
    7. '
' → logprob: -6.723344802856445
    8. '            
' → logprob: -7.098344802856445
    9. '                   ' → logprob: -7.473344802856445
    10. '```' → logprob: -7.598344802856445

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17438675463199615
    2. 'x' → logprob: -2.174386739730835
    3. '
' → logprob: -3.924386739730835
    4. ' x' → logprob: -3.924386739730835
    5. '       ' → logprob: -5.924386978149414
    6. '               ' → logprob: -7.174386978149414
    7. '   ' → logprob: -7.299386978149414
    8. '<|end|>' → logprob: -7.674386978149414
    9. '          ' → logprob: -7.799386978149414
    10. ' ' → logprob: -8.549386978149414

Token 140: ' cc' (ID: 22988)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0034470646642148495
    2. ' x' → logprob: -6.62844705581665
    3. '           ' → logprob: -6.87844705581665
    4. 'if' → logprob: -7.75344705581665
    5. 'while' → logprob: -8.378447532653809
    6. 'cc' (adapté à ' cc') → logprob: -8.753447532653809
    7. 'for' → logprob: -9.753447532653809
    8. ' if' → logprob: -10.378447532653809
    9. 'y' → logprob: -10.378447532653809
    10. '               ' → logprob: -10.503447532653809

Token 141: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03328808397054672
    2. '+' → logprob: -3.53328800201416
    3. ' +=' → logprob: -5.65828800201416
    4. '=' → logprob: -10.40828800201416
    5. '++' → logprob: -12.03328800201416
    6. '<|end|>' → logprob: -13.28328800201416
    7. '+='' → logprob: -13.65828800201416
    8. '```' → logprob: -14.15828800201416
    9. '+++' → logprob: -14.28328800201416
    10. ']+=' → logprob: -14.40828800201416

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -19.125024795532227
    4. '```' → logprob: -20.250024795532227
    5. ' ' → logprob: -20.500024795532227
    6. '１' → logprob: -20.500024795532227
    7. '
' → logprob: -20.875024795532227
    8. '۱' → logprob: -21.375024795532227
    9. '0' → logprob: -21.625024795532227
    10. '	' → logprob: -21.687524795532227

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.750003814697266
    4. '```' → logprob: -19.000003814697266
    5. '１' → logprob: -19.062503814697266
    6. '0' → logprob: -19.500003814697266
    7. '-' → logprob: -20.250003814697266
    8. '۱' → logprob: -20.375003814697266
    9. '
' → logprob: -20.625003814697266
    10. '﻿' → logprob: -20.750003814697266

Token 144: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5471724271774292
    2. 'x' → logprob: -1.0471724271774292
    3. ' x' → logprob: -3.1721725463867188
    4. '       ' → logprob: -4.422172546386719
    5. '
' → logprob: -4.922172546386719
    6. '               ' → logprob: -5.672172546386719
    7. '<|end|>' → logprob: -7.297172546386719
    8. '                   ' → logprob: -7.672172546386719
    9. ',x' → logprob: -7.672172546386719
    10. '   ' → logprob: -7.797172546386719

Token 145: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12648290395736694
    2. '           ' → logprob: -2.2514829635620117
    3. ' x' → logprob: -4.751482963562012
    4. '       ' → logprob: -5.626482963562012
    5. 'else' → logprob: -7.251482963562012
    6. 'elif' → logprob: -8.251482963562012
    7. 'while' → logprob: -9.376482963562012
    8. ' else' → logprob: -9.876482963562012
    9. '               ' → logprob: -10.001482963562012
    10. '
' → logprob: -10.126482963562012

Token 146: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.13369926810264587
    2. 'else' → logprob: -2.6336991786956787
    3. 'elif' → logprob: -3.5086991786956787
    4. ' else' → logprob: -4.258699417114258
    5. ' x' → logprob: -4.883699417114258
    6. '       ' → logprob: -7.008699417114258
    7. ' elif' → logprob: -7.508699417114258
    8. '   ' → logprob: -8.883699417114258
    9. '           ' → logprob: -10.508699417114258
    10. ' ' → logprob: -11.258699417114258

Token 147: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018198054283857346
    2. ' +=' → logprob: -4.018198013305664
    3. '+' → logprob: -10.393198013305664
    4. '=' → logprob: -11.268198013305664
    5. '++' → logprob: -12.768198013305664
    6. ']+=' → logprob: -14.768198013305664
    7. '1' → logprob: -15.018198013305664
    8. '```' → logprob: -15.143198013305664
    9. '<|end|>' → logprob: -15.268198013305664
    10. '+="' → logprob: -16.268198013305664

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -16.750158309936523
    4. '１' → logprob: -18.562658309936523
    5. '   ' → logprob: -18.687658309936523
    6. '0' → logprob: -19.687658309936523
    7. '2' → logprob: -19.687658309936523
    8. '  ' → logprob: -20.000158309936523
    9. '`' → logprob: -20.062658309936523
    10. ' ' → logprob: -20.187658309936523

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.500009536743164
    4. '１' → logprob: -17.625009536743164
    5. '۱' → logprob: -18.750009536743164
    6. '<|end|>' → logprob: -18.937509536743164
    7. '0' → logprob: -19.000009536743164
    8. '-' → logprob: -19.000009536743164
    9. '2' → logprob: -19.312509536743164
    10. '+' → logprob: -19.625009536743164

Token 150: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.046128854155540466
    2. 'x' → logprob: -3.921128749847412
    3. '#' → logprob: -4.421128749847412
    4. 'y' → logprob: -4.796128749847412
    5. ' for' → logprob: -6.171128749847412
    6. 'while' → logprob: -6.921128749847412
    7. '```' → logprob: -7.546128749847412
    8. 'row' → logprob: -8.04612922668457
    9. 'cc' → logprob: -8.54612922668457
    10. '<|end|>' → logprob: -8.67112922668457

Token 152: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.004364371299743652
    2. 'y' → logprob: -6.129364490509033
    3. ' _' → logprob: -7.004364490509033
    4. ' a' → logprob: -7.504364490509033
    5. '_' → logprob: -8.379364013671875
    6. ' ' → logprob: -9.129364013671875
    7. ' x' → logprob: -9.254364013671875
    8. ' i' → logprob: -9.254364013671875
    9. 'a' → logprob: -10.004364013671875
    10. ' h' → logprob: -10.129364013671875

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01417174469679594
    2. 'in' → logprob: -4.264171600341797
    3. ' ' → logprob: -12.139171600341797
    4. 'range' → logprob: -14.264171600341797
    5. ',' → logprob: -15.014171600341797
    6. '0' → logprob: -15.264171600341797
    7. 'import' → logprob: -15.389171600341797
    8. 'In' → logprob: -15.389171600341797
    9. '1' → logprob: -15.639171600341797
    10. 's' → logprob: -15.889171600341797

Token 154: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975500375032425
    2. ' range' → logprob: -3.529755115509033
    3. '(range' → logprob: -12.904754638671875
    4. 'h' → logprob: -14.029754638671875
    5. ' in' → logprob: -15.029754638671875
    6. 'in' → logprob: -15.279754638671875
    7. ' h' → logprob: -15.404754638671875
    8. ' ' → logprob: -15.654754638671875
    9. '0' → logprob: -16.779754638671875
    10. '```' → logprob: -17.279754638671875

Token 155: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.006142561323940754
    2. '(' → logprob: -5.256142616271973
    3. '(w' → logprob: -7.756142616271973
    4. '(range' → logprob: -8.131142616271973
    5. 'h' → logprob: -9.756142616271973
    6. 'range' → logprob: -9.881142616271973
    7. '(s' → logprob: -10.381142616271973
    8. ' (' → logprob: -10.881142616271973
    9. ' range' → logprob: -11.506142616271973
    10. '(k' → logprob: -12.006142616271973

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023961178958415985
    2. '):
' → logprob: -3.773961067199707
    3. '+' → logprob: -7.773961067199707
    4. ':' → logprob: -8.648961067199707
    5. '-' → logprob: -9.398961067199707
    6. ' ):' → logprob: -11.023961067199707
    7. '   ' → logprob: -12.773961067199707
    8. '):
' → logprob: -12.773961067199707
    9. ')' → logprob: -12.898961067199707
    10. '}:' → logprob: -13.148961067199707

Token 157: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7089381814002991
    2. '   ' → logprob: -1.2089381217956543
    3. ' x' → logprob: -1.7089381217956543
    4. ' for' → logprob: -3.8339381217956543
    5. 'for' → logprob: -5.083938121795654
    6. ':' → logprob: -9.083938598632812
    7. ' ' → logprob: -9.833938598632812
    8. 'b' → logprob: -10.583938598632812
    9. 'print' → logprob: -10.708938598632812
    10. ' if' → logprob: -10.833938598632812

Token 158: ' run' (ID: 2461)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.051332008093595505
    2. 'for' → logprob: -3.0513319969177246
    3. ' x' → logprob: -6.551331996917725
    4. ' for' → logprob: -7.176331996917725
    5. '   ' → logprob: -7.551331996917725
    6. '0' → logprob: -11.926332473754883
    7. ' ' → logprob: -12.926332473754883
    8. 'if' → logprob: -13.176332473754883
    9. 'prev' → logprob: -13.301332473754883
    10. 'b' → logprob: -13.301332473754883

Token 159: ' =' (ID: 314)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.6905837655067444
    2. '_' → logprob: -1.4405837059020996
    3. '_len' → logprob: -1.5655837059020996
    4. ' =' → logprob: -3.6905837059020996
    5. '=' → logprob: -4.1905837059021
    6. '_start' → logprob: -5.6905837059021
    7. 'length' → logprob: -5.6905837059021
    8. 'len' → logprob: -5.9405837059021
    9. '_l' → logprob: -6.4405837059021
    10. '   ' → logprob: -8.565584182739258

Token 160: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0325443334877491
    2. 'False' → logprob: -3.9075443744659424
    3. '1' → logprob: -5.407544136047363
    4. '[]' → logprob: -6.157544136047363
    5. 'w' → logprob: -6.282544136047363
    6. '-' → logprob: -6.532544136047363
    7. ' ' → logprob: -6.907544136047363
    8. 'True' → logprob: -8.157544136047363
    9. '""' → logprob: -8.657544136047363
    10. '[' → logprob: -9.032544136047363

Token 161: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03806525096297264
    2. ' for' → logprob: -3.788065195083618
    3. '
' → logprob: -5.038065433502197
    4. 'for' → logprob: -5.288065433502197
    5. '<|end|>' → logprob: -6.163065433502197
    6. ',' → logprob: -7.538065433502197
    7. '    
' → logprob: -8.538064956665039
    8. ' ' → logprob: -9.538064956665039
    9. '#' → logprob: -9.913064956665039
    10. ';' → logprob: -10.413064956665039

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4276285469532013
    2. ' for' → logprob: -1.427628517150879
    3. '
' → logprob: -2.677628517150879
    4. 'for' → logprob: -3.427628517150879
    5. '<|end|>' → logprob: -5.302628517150879
    6. ' ' → logprob: -7.552628517150879
    7. ',' → logprob: -8.177628517150879
    8. '#' → logprob: -8.302628517150879
    9. '    
' → logprob: -8.427628517150879
    10. '	for' → logprob: -9.677628517150879

Token 163: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011167853139340878
    2. ' for' → logprob: -4.511168003082275
    3. '   ' → logprob: -9.636167526245117
    4. 'x' → logprob: -9.886167526245117
    5. 'b' → logprob: -12.886167526245117
    6. ' ' → logprob: -14.636167526245117
    7. ' x' → logprob: -15.636167526245117
    8. '	for' → logprob: -16.386167526245117
    9. 'if' → logprob: -16.511167526245117
    10. '  ' → logprob: -16.761167526245117

Token 164: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.062101010233163834
    2. ' x' → logprob: -2.812101125717163
    3. 'b' → logprob: -9.062101364135742
    4. ' b' → logprob: -11.187101364135742
    5. 'y' → logprob: -13.812101364135742
    6. 'a' → logprob: -14.937101364135742
    7. ' y' → logprob: -14.937101364135742
    8. 'w' → logprob: -15.312101364135742
    9. ' ' → logprob: -15.437101364135742
    10. 'z' → logprob: -15.562101364135742

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20144549012184143
    2. 'in' → logprob: -1.701445460319519
    3. '   ' → logprob: -10.951445579528809
    4. '0' → logprob: -11.951445579528809
    5. ' ' → logprob: -12.951445579528809
    6. '(' → logprob: -13.451445579528809
    7. 'import' → logprob: -13.951445579528809
    8. '1' → logprob: -14.701445579528809
    9. 'In' → logprob: -14.826445579528809
    10. '=' → logprob: -14.951445579528809

Token 166: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5762535333633423
    2. 'range' → logprob: -0.8262535333633423
    3. 'w' → logprob: -8.326253890991211
    4. '(range' → logprob: -10.576253890991211
    5. ' w' → logprob: -10.826253890991211
    6. '0' → logprob: -10.826253890991211
    7. '(w' → logprob: -12.826253890991211
    8. ' ' → logprob: -13.451253890991211
    9. '   ' → logprob: -13.701253890991211
    10. '(' → logprob: -14.326253890991211

Token 167: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0007352970424108207
    2. '(' → logprob: -7.250735282897949
    3. 'w' → logprob: -11.37573528289795
    4. ' (' → logprob: -12.37573528289795
    5. '(x' → logprob: -13.25073528289795
    6. '(h' → logprob: -13.50073528289795
    7. '0' → logprob: -14.00073528289795
    8. '   ' → logprob: -14.12573528289795
    9. 'range' → logprob: -14.12573528289795
    10. '(y' → logprob: -14.25073528289795

Token 168: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5792146921157837
    2. '):' → logprob: -0.8292146921157837
    3. ':' → logprob: -5.954214572906494
    4. '+' → logprob: -8.579215049743652
    5. ')' → logprob: -8.954215049743652
    6. '   ' → logprob: -8.954215049743652
    7. ':
' → logprob: -9.579215049743652
    8. '-' → logprob: -9.704215049743652
    9. '):
' → logprob: -10.579215049743652
    10. '):

' → logprob: -10.704215049743652

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012220353819429874
    2. ':' → logprob: -4.63722038269043
    3. ' if' → logprob: -6.63722038269043
    4. ',' → logprob: -7.26222038269043
    5. ':
' → logprob: -8.38722038269043
    6. '   ' → logprob: -9.51222038269043
    7. '<|end|>' → logprob: -10.01222038269043
    8. 'if' → logprob: -10.63722038269043
    9. '#' → logprob: -11.38722038269043
    10. ' and' → logprob: -11.76222038269043

Token 170: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.37941303849220276
    2. ' if' → logprob: -1.6294130086898804
    3. '       ' → logprob: -2.12941312789917
    4. '   ' → logprob: -7.25441312789917
    5. '```' → logprob: -10.254412651062012
    6. '	if' → logprob: -11.504412651062012
    7. '           ' → logprob: -11.504412651062012
    8. ' ' → logprob: -12.129412651062012
    9. '#' → logprob: -12.129412651062012
    10. 'If' → logprob: -12.254412651062012

Token 171: ' result' (ID: 1534)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43387922644615173
    2. 'result' → logprob: -1.3088792562484741
    3. ' s' → logprob: -2.6838791370391846
    4. ' result' → logprob: -4.308879375457764
    5. 'run' → logprob: -10.308878898620605
    6. ' ' → logprob: -11.183878898620605
    7. '(result' → logprob: -11.308878898620605
    8. '   ' → logprob: -11.371378898620605
    9. 'not' → logprob: -11.433878898620605
    10. '(s' → logprob: -12.246378898620605

Token 172: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.200166469876422e-06
    2. '][' → logprob: -12.750004768371582
    3. '[' → logprob: -13.750004768371582
    4. 'y' → logprob: -14.625004768371582
    5. '```' → logprob: -16.0000057220459
    6. '[Y' → logprob: -16.0000057220459
    7. ' [' → logprob: -16.1250057220459
    8. '[x' → logprob: -16.3750057220459
    9. ')[' → logprob: -17.0000057220459
    10. '}[' → logprob: -17.3750057220459

Token 173: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.2526404559612274
    2. '][' → logprob: -1.5026404857635498
    3. '[y' → logprob: -8.002640724182129
    4. '[' → logprob: -8.252640724182129
    5. 'x' → logprob: -10.127640724182129
    6. ' ][' → logprob: -10.502640724182129
    7. ']' → logprob: -10.752640724182129
    8. '```' → logprob: -12.502640724182129
    9. ' [' → logprob: -12.752640724182129
    10. '}[' → logprob: -12.752640724182129

Token 174: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.034592388459714e-06
    2. '0' → logprob: -13.250005722045898
    3. ' x' → logprob: -13.250005722045898
    4. '[x' → logprob: -13.750005722045898
    5. ']' → logprob: -14.375005722045898
    6. '[' → logprob: -16.1875057220459
    7. ' ' → logprob: -16.3125057220459
    8. '][' → logprob: -16.3125057220459
    9. '"x' → logprob: -16.4375057220459
    10. 'None' → logprob: -16.4375057220459

Token 175: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07846181094646454
    2. ']!=' → logprob: -3.5784618854522705
    3. ']==' → logprob: -3.5784618854522705
    4. '!=' → logprob: -4.578461647033691
    5. '==' → logprob: -4.828461647033691
    6. ' !=' → logprob: -7.828461647033691
    7. ']>' → logprob: -7.953461647033691
    8. '>' → logprob: -7.953461647033691
    9. ']:' → logprob: -9.078461647033691
    10. ' ]' → logprob: -9.453461647033691

Token 176: '           ' (ID: 352)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.4403151571750641
    2. 'run' → logprob: -1.5653151273727417
    3. '           ' → logprob: -2.4403152465820312
    4. '       ' → logprob: -3.6903152465820312
    5. ':' → logprob: -4.065315246582031
    6. '   ' → logprob: -4.690315246582031
    7. ':
' → logprob: -5.565315246582031
    8. '(run' → logprob: -6.815315246582031
    9. '==' → logprob: -7.440315246582031
    10. '	run' → logprob: -7.565315246582031

Token 177: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.09591556340456009
    2. ' run' → logprob: -2.5959155559539795
    3. '           ' → logprob: -4.345915794372559
    4. '               ' → logprob: -5.720915794372559
    5. '   ' → logprob: -7.970915794372559
    6. 'if' → logprob: -8.595915794372559
    7. '       ' → logprob: -9.970915794372559
    8. ' if' → logprob: -10.470915794372559
    9. '	run' → logprob: -10.970915794372559
    10. ' ' → logprob: -11.970915794372559

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009756443090736866
    2. ' =' → logprob: -4.634756565093994
    3. '=

' → logprob: -15.634756088256836
    4. '＝' → logprob: -16.509756088256836
    5. '=}' → logprob: -16.634756088256836
    6. 'run' → logprob: -16.884756088256836
    7. ',' → logprob: -17.009756088256836
    8. '==' → logprob: -17.759756088256836
    9. '=None' → logprob: -18.259756088256836
    10. ')' → logprob: -18.259756088256836

Token 179: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00866798684000969
    2. ' result' → logprob: -4.758667945861816
    3. 'x' → logprob: -10.258667945861816
    4. ' x' → logprob: -12.383667945861816
    5. ' y' → logprob: -13.008667945861816
    6. 'y' → logprob: -13.008667945861816
    7. '[result' → logprob: -13.008667945861816
    8. 'cc' → logprob: -13.258667945861816
    9. '(result' → logprob: -13.883667945861816
    10. ' ' → logprob: -13.883667945861816

Token 180: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.1160349458805285e-05
    2. 'y' → logprob: -11.625011444091797
    3. '[' → logprob: -13.750011444091797
    4. '```' → logprob: -14.875011444091797
    5. ' [' → logprob: -15.125011444091797
    6. '][' → logprob: -16.625011444091797
    7. '[user' → logprob: -17.000011444091797
    8. ',y' → logprob: -17.125011444091797
    9. '[
' → logprob: -17.500011444091797
    10. '[x' → logprob: -17.500011444091797

Token 181: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015996063593775034
    2. '[y' → logprob: -6.8765997886657715
    3. '[x' → logprob: -7.6265997886657715
    4. ' ][' → logprob: -9.626599311828613
    5. ']' → logprob: -11.751599311828613
    6. '[' → logprob: -13.751599311828613
    7. ' [' → logprob: -14.001599311828613
    8. 'y' → logprob: -14.626599311828613
    9. '```' → logprob: -14.626599311828613
    10. '   ' → logprob: -14.626599311828613

Token 182: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.961759259458631e-06
    2. ' x' → logprob: -12.375004768371582
    3. '[x' → logprob: -15.000004768371582
    4. 'y' → logprob: -15.250004768371582
    5. '][' → logprob: -16.2500057220459
    6. '0' → logprob: -17.7500057220459
    7. '```' → logprob: -18.5000057220459
    8. ']' → logprob: -18.7500057220459
    9. ' ' → logprob: -19.0000057220459
    10. '   ' → logprob: -19.2500057220459

Token 183: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003904215293005109
    2. 'elif' → logprob: -6.753904342651367
    3. '
' → logprob: -7.003904342651367
    4. '<|end|>' → logprob: -7.378904342651367
    5. 'else' → logprob: -7.503904342651367
    6. ')' → logprob: -8.003904342651367
    7. '   ' → logprob: -9.503904342651367
    8. ' elif' → logprob: -9.503904342651367
    9. ' else' → logprob: -9.628904342651367
    10. ')
' → logprob: -10.628904342651367

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047988566802814603
    2. 'elif' → logprob: -8.125479698181152
    3. 'else' → logprob: -8.875479698181152
    4. ' else' → logprob: -10.750479698181152
    5. ' elif' → logprob: -11.500479698181152
    6. '   ' → logprob: -12.250479698181152
    7. '           ' → logprob: -12.750479698181152
    8. ' for' → logprob: -13.750479698181152
    9. '```' → logprob: -13.750479698181152
    10. 'continue' → logprob: -14.750479698181152

Token 185: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3088161051273346
    2. 'elif' (adapté à ' elif') → logprob: -1.8088160753250122
    3. 'else' → logprob: -2.3088161945343018
    4. ' else' → logprob: -6.308815956115723
    5. ' elif' → logprob: -7.433815956115723
    6. '   ' → logprob: -10.308815956115723
    7. 'if' → logprob: -11.933815956115723
    8. '	elif' → logprob: -13.558815956115723
    9. '           ' → logprob: -13.683815956115723
    10. '
' → logprob: -14.058815956115723

Token 186: ' run' (ID: 2461)
  Prédit: ' run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.5809124112129211
    2. 'run' → logprob: -0.8309124112129211
    3. ' s' → logprob: -6.0809125900268555
    4. ' y' → logprob: -6.8309125900268555
    5. ' not' → logprob: -7.5809125900268555
    6. 's' → logprob: -7.7059125900268555
    7. 'y' → logprob: -8.830912590026855
    8. ' ' → logprob: -9.205912590026855
    9. 'not' → logprob: -9.330912590026855
    10. 'result' → logprob: -9.580912590026855

Token 187: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01263713650405407
    2. 'is' → logprob: -4.387637138366699
    3. ':' → logprob: -9.2626371383667
    4. '!=' → logprob: -11.2626371383667
    5. 'and' → logprob: -11.3876371383667
    6. ' and' → logprob: -13.0126371383667
    7. ' !=' → logprob: -13.6376371383667
    8. '	is' → logprob: -13.6376371383667
    9. '>' → logprob: -13.8876371383667
    10. 'not' → logprob: -14.5126371383667

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.65866619348526
    2. '=' → logprob: -0.90866619348526
    3. '       ' → logprob: -3.4086661338806152
    4. 'result' → logprob: -3.6586661338806152
    5. ' =' → logprob: -4.658666133880615
    6. ':
' → logprob: -6.158666133880615
    7. ':' → logprob: -6.283666133880615
    8. '=result' → logprob: -6.283666133880615
    9. '   ' → logprob: -6.908666133880615
    10. '==' → logprob: -7.158666133880615

Token 189: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.02377924509346485
    2. ' result' → logprob: -3.7737791538238525
    3. '           ' → logprob: -8.148778915405273
    4. '               ' → logprob: -8.773778915405273
    5. '       ' → logprob: -9.648778915405273
    6. ' ' → logprob: -11.773778915405273
    7. '   ' → logprob: -12.398778915405273
    8. ' ' → logprob: -12.523778915405273
    9. '	result' → logprob: -12.898778915405273
    10. 'run' → logprob: -13.523778915405273

Token 190: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.750003814697266
    3. ' [' → logprob: -14.125003814697266
    4. '```' → logprob: -16.250003814697266
    5. 'y' → logprob: -16.625003814697266
    6. '[user' → logprob: -17.000003814697266
    7. '[row' → logprob: -17.500003814697266
    8. '[u' → logprob: -17.500003814697266
    9. '\[' → logprob: -17.500003814697266
    10. '   ' → logprob: -18.250003814697266

Token 191: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009936298010870814
    2. '[y' → logprob: -7.000993728637695
    3. ']' → logprob: -10.375993728637695
    4. '[x' → logprob: -10.500993728637695
    5. ' ][' → logprob: -11.000993728637695
    6. '[' → logprob: -13.000993728637695
    7. '   ' → logprob: -13.375993728637695
    8. '```' → logprob: -14.000993728637695
    9. 'y' → logprob: -14.500993728637695
    10. ']][' → logprob: -15.625993728637695

Token 192: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.292907877039397e-06
    2. ' x' → logprob: -13.62500286102295
    3. '[x' → logprob: -13.75000286102295
    4. '][' → logprob: -15.00000286102295
    5. '[' → logprob: -15.75000286102295
    6. '0' → logprob: -16.250003814697266
    7. '```' → logprob: -16.250003814697266
    8. ']' → logprob: -16.875003814697266
    9. '"x' → logprob: -17.125003814697266
    10. 'y' → logprob: -17.375003814697266

Token 193: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871729075908661
    2. '=' → logprob: -1.1371729373931885
    3. ']' → logprob: -8.13717269897461
    4. ')' → logprob: -12.38717269897461
    5. ']=' → logprob: -12.63717269897461
    6. ' ]' → logprob: -14.01217269897461
    7. ' ' → logprob: -14.01217269897461
    8. '   ' → logprob: -15.51217269897461
    9. ')=' → logprob: -16.63717269897461
    10. ',' → logprob: -17.26217269897461

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '=result' → logprob: -17.47520637512207
    4. '＝' → logprob: -17.60020637512207
    5. '=
' → logprob: -17.72520637512207
    6. '=int' → logprob: -18.60020637512207
    7. '=end' → logprob: -18.72520637512207
    8. '[' → logprob: -19.10020637512207
    9. '=user' → logprob: -19.10020637512207
    10. ' ' → logprob: -19.10020637512207

Token 195: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.0015024791937321424
    2. ' run' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.626502990722656
    4. ' ' → logprob: -17.251502990722656
    5. '(run' → logprob: -17.626502990722656
    6. '	run' → logprob: -18.126502990722656
    7. 'result' → logprob: -19.251502990722656
    8. '  ' → logprob: -19.501502990722656
    9. '
' → logprob: -20.126502990722656
    10. '```' → logprob: -20.251502990722656

Token 196: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04310184717178345
    2. '   ' → logprob: -3.5431017875671387
    3. ' for' → logprob: -4.543101787567139
    4. '
' → logprob: -7.668101787567139
    5. '       ' → logprob: -7.793101787567139
    6. 'else' → logprob: -8.043102264404297
    7. 'print' → logprob: -8.543102264404297
    8. '#' → logprob: -8.543102264404297
    9. 's' → logprob: -8.793102264404297
    10. '    
' → logprob: -9.043102264404297

Token 197: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011713240382960066
    2. ' for' → logprob: -9.500117301940918
    3. '#' → logprob: -10.625117301940918
    4. 'run' → logprob: -11.375117301940918
    5. '   ' → logprob: -13.875117301940918
    6. 'prev' → logprob: -14.000117301940918
    7. 'last' → logprob: -14.000117301940918
    8. 'if' → logprob: -14.125117301940918
    9. '    
' → logprob: -14.250117301940918
    10. 'else' → logprob: -14.500117301940918

Token 198: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.14318716526031494
    2. 'y' → logprob: -2.0181870460510254
    3. 'x' → logprob: -8.393187522888184
    4. ' x' → logprob: -8.643187522888184
    5. '_y' → logprob: -10.143187522888184
    6. 'a' → logprob: -11.268187522888184
    7. ' ' → logprob: -11.643187522888184
    8. '_' → logprob: -11.643187522888184
    9. '(y' → logprob: -11.768187522888184
    10. ' a' → logprob: -12.018187522888184

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03367140144109726
    2. 'in' → logprob: -3.4086713790893555
    3. '+' → logprob: -11.908671379089355
    4. ' ' → logprob: -12.283671379089355
    5. 'range' → logprob: -12.283671379089355
    6. 'In' → logprob: -13.283671379089355
    7. '1' → logprob: -13.283671379089355
    8. '   ' → logprob: -13.408671379089355
    9. '```' → logprob: -14.408671379089355
    10. 'import' → logprob: -14.408671379089355

Token 200: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061999619007110596
    2. ' range' → logprob: -2.811999559402466
    3. 'in' → logprob: -10.936999320983887
    4. ' in' → logprob: -11.311999320983887
    5. '(range' → logprob: -13.561999320983887
    6. 're' → logprob: -15.686999320983887
    7. ' ' → logprob: -15.811999320983887
    8. '1' → logprob: -16.437000274658203
    9. '   ' → logprob: -16.937000274658203
    10. '```' → logprob: -17.687000274658203

Token 201: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.22993558645248413
    2. '(' → logprob: -1.604935646057129
    3. '(range' → logprob: -5.729935646057129
    4. 'range' → logprob: -6.729935646057129
    5. ' range' → logprob: -9.729935646057129
    6. 'h' → logprob: -12.979935646057129
    7. 'Range' → logprob: -13.729935646057129
    8. '(w' → logprob: -13.729935646057129
    9. ' (' → logprob: -13.729935646057129
    10. '((' → logprob: -13.854935646057129

Token 202: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1608281135559082
    2. '):' → logprob: -1.9108281135559082
    3. '-' → logprob: -7.535828113555908
    4. ':' → logprob: -10.91082763671875
    5. '   ' → logprob: -11.28582763671875
    6. '):
' → logprob: -11.53582763671875
    7. ':
' → logprob: -11.53582763671875
    8. ' -' → logprob: -11.66082763671875
    9. '+' → logprob: -12.41082763671875
    10. '):

' → logprob: -13.03582763671875

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.384836888173595e-05
    2. 'for' → logprob: -9.7500638961792
    3. ' for' → logprob: -12.7500638961792
    4. 'run' → logprob: -13.7500638961792
    5. '       ' → logprob: -14.2500638961792
    6. ' ' → logprob: -15.1250638961792
    7. '	for' → logprob: -15.7500638961792
    8. '```' → logprob: -15.8750638961792
    9. '   ' → logprob: -16.250062942504883
    10. '  ' → logprob: -16.875062942504883

Token 204: ' x' (ID: 1215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4977181851863861
    2. 'run' → logprob: -1.3727182149887085
    3. '   ' → logprob: -1.9977182149887085
    4. ' for' → logprob: -6.247718334197998
    5. ' run' → logprob: -7.372718334197998
    6. 'prev' → logprob: -8.62271785736084
    7. 'last' → logprob: -8.99771785736084
    8. ' ' → logprob: -9.74771785736084
    9. 'x' (adapté à ' x') → logprob: -10.99771785736084
    10. '  ' → logprob: -11.49771785736084

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20178265869617462
    2. '=' → logprob: -1.7017827033996582
    3. ' in' → logprob: -8.4517822265625
    4. 'in' → logprob: -9.5767822265625
    5. '0' → logprob: -10.4517822265625
    6. ' ' → logprob: -10.8267822265625
    7. ' +=' → logprob: -11.2017822265625
    8. '   ' → logprob: -11.2017822265625
    9. '+=' → logprob: -12.9517822265625
    10. '1' → logprob: -13.0767822265625

Token 206: ' w' (ID: 286)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004911735188215971
    2. ' ' → logprob: -5.75491189956665
    3. '1' → logprob: -6.37991189956665
    4. 'w' → logprob: -10.379911422729492
    5. ' w' → logprob: -12.754911422729492
    6. '   ' → logprob: -13.754911422729492
    7. 'k' → logprob: -13.754911422729492
    8. ' k' → logprob: -15.629911422729492
    9. '[' → logprob: -16.004911422729492
    10. '(' → logprob: -16.067411422729492

Token 207: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.021712815389037132
    2. '0' → logprob: -4.396712779998779
    3. ' -' → logprob: -4.771712779998779
    4. '1' → logprob: -7.521712779998779
    5. ' ' → logprob: -9.021713256835938
    6. '   ' → logprob: -10.896713256835938
    7. '=' → logprob: -11.646713256835938
    8. '>' → logprob: -13.521713256835938
    9. '2' → logprob: -13.771713256835938
    10. 'x' → logprob: -14.271713256835938

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006291598547250032
    2. '2' → logprob: -7.37562894821167
    3. ' ' → logprob: -12.875629425048828
    4. '
' → logprob: -17.375629425048828
    5. '-' → logprob: -17.625629425048828
    6. '１' → logprob: -18.125629425048828
    7. '   ' → logprob: -18.250629425048828
    8. '

' → logprob: -18.313129425048828
    9. '0' → logprob: -18.625629425048828
    10. ' -' → logprob: -19.188129425048828

Token 209: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.40730607509613037
    2. '   ' → logprob: -1.4073060750961304
    3. '
' → logprob: -2.65730619430542
    4. ' while' → logprob: -4.53230619430542
    5. ';' → logprob: -4.90730619430542
    6. '	while' → logprob: -7.65730619430542
    7. '    
' → logprob: -8.532305717468262
    8. '  ' → logprob: -9.157305717468262
    9. ' ' → logprob: -9.282305717468262
    10. ';x' → logprob: -9.282305717468262

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2804868817329407
    2. 'while' → logprob: -1.530486822128296
    3. ' while' → logprob: -3.655486822128296
    4. '
' → logprob: -7.030487060546875
    5. ';' → logprob: -7.905487060546875
    6. '	while' → logprob: -7.905487060546875
    7. '    
' → logprob: -8.280487060546875
    8. '  ' → logprob: -9.530487060546875
    9. ',' → logprob: -9.530487060546875
    10. ' ' → logprob: -9.655487060546875

Token 211: ' run' (ID: 2461)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0069398521445691586
    2. ' while' → logprob: -5.381939888000488
    3. '   ' → logprob: -6.131939888000488
    4. '
' → logprob: -9.506939888000488
    5. 'run' (adapté à ' run') → logprob: -9.756939888000488
    6. 'While' → logprob: -12.756939888000488
    7. 'x' → logprob: -12.881939888000488
    8. '    
' → logprob: -13.256939888000488
    9. ' run' → logprob: -13.756939888000488
    10. '	while' → logprob: -13.881939888000488

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133859634399414
    2. ' =' → logprob: -1.3133859634399414
    3. '=None' → logprob: -9.063385963439941
    4. 'None' → logprob: -11.813385963439941
    5. ' None' → logprob: -14.688385963439941
    6. '=
' → logprob: -15.438385963439941
    7. ' ' → logprob: -16.313385009765625
    8. '=

' → logprob: -16.563385009765625
    9. ':' → logprob: -17.313385009765625
    10. '   ' → logprob: -17.563385009765625

Token 213: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005238736979663372
    2. ' None' → logprob: -5.2552385330200195
    3. '0' → logprob: -12.25523853302002
    4. 'none' → logprob: -16.130239486694336
    5. '_None' → logprob: -17.005239486694336
    6. '(None' → logprob: -17.380239486694336
    7. ' ' → logprob: -18.130239486694336
    8. 'null' → logprob: -18.130239486694336
    9. '   ' → logprob: -18.630239486694336
    10. '=None' → logprob: -18.755239486694336

Token 214: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6768336296081543
    2. '   ' → logprob: -0.8018336296081543
    3. 'while' → logprob: -4.301833629608154
    4. ' while' → logprob: -4.551833629608154
    5. '<|end|>' → logprob: -4.676833629608154
    6. '    
' → logprob: -5.551833629608154
    7. ' 
' → logprob: -6.176833629608154
    8. '  
' → logprob: -6.426833629608154
    9. '	while' → logprob: -6.926833629608154
    10. '	
' → logprob: -7.676833629608154

Token 215: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8753113746643066
    2. 'while' → logprob: -1.2503113746643066
    3. '   ' → logprob: -1.5003113746643066
    4. ' while' → logprob: -2.7503113746643066
    5. '<|end|>' → logprob: -5.125311374664307
    6. ' for' → logprob: -6.875311374664307
    7. 'for' → logprob: -6.875311374664307
    8. ' ' → logprob: -7.500311374664307
    9. '	while' → logprob: -7.500311374664307
    10. ' 
' → logprob: -8.000310897827148

Token 216: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0006529859383590519
    2. 'for' → logprob: -8.000653266906738
    3. ' while' → logprob: -8.125653266906738
    4. '   ' → logprob: -10.875653266906738
    5. '
' → logprob: -13.125653266906738
    6. 'While' → logprob: -14.875653266906738
    7. ' for' → logprob: -16.125652313232422
    8. '	while' → logprob: -16.250652313232422
    9. '```' → logprob: -16.250652313232422
    10. '    
' → logprob: -16.625652313232422

Token 217: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.474077969789505
    2. ' x' → logprob: -0.9740779399871826
    3. '0' → logprob: -14.724078178405762
    4. '(x' → logprob: -15.099078178405762
    5. ' ' → logprob: -15.849078178405762
    6. '	x' → logprob: -15.974078178405762
    7. '   ' → logprob: -17.474077224731445
    8. '>x' → logprob: -18.224077224731445
    9. ')x' → logprob: -18.349077224731445
    10. '"x' → logprob: -18.849077224731445

Token 218: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03809106722474098
    2. ' >=' → logprob: -3.2880911827087402
    3. '>' → logprob: -10.163090705871582
    4. ']>=' → logprob: -13.288090705871582
    5. '≥' → logprob: -13.288090705871582
    6. ' ' → logprob: -13.538090705871582
    7. '=' → logprob: -13.663090705871582
    8. '0' → logprob: -14.163090705871582
    9. ')>=' → logprob: -14.288090705871582
    10. '```' → logprob: -14.413090705871582

Token 219: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006268949946388602
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.000626564025879
    4. '۰' → logprob: -18.000627517700195
    5. '           ' → logprob: -18.875627517700195
    6. '       ' → logprob: -18.938127517700195
    7. '  ' → logprob: -19.125627517700195
    8. ' ' → logprob: -19.188127517700195
    9. '
' → logprob: -19.375627517700195
    10. '```' → logprob: -19.500627517700195

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.750011444091797
    4. '۰' → logprob: -20.000011444091797
    5. '```' → logprob: -20.250011444091797
    6. '1' → logprob: -21.250011444091797
    7. '０' → logprob: -21.625011444091797
    8. '00' → logprob: -21.750011444091797
    9. '<|end|>' → logprob: -22.062511444091797
    10. '=' → logprob: -22.375011444091797

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10198908299207687
    2. ':
' → logprob: -2.3519890308380127
    3. ' and' → logprob: -7.101989269256592
    4. '   ' → logprob: -7.226989269256592
    5. '       ' → logprob: -9.101988792419434
    6. '<|end|>' → logprob: -9.726988792419434
    7. ':

' → logprob: -11.226988792419434
    8. 'and' → logprob: -11.351988792419434
    9. '):
' → logprob: -11.476988792419434
    10. ' :' → logprob: -12.351988792419434

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017852524761110544
    2. ' if' → logprob: -6.7517852783203125
    3. 'if' → logprob: -7.6267852783203125
    4. '   ' → logprob: -9.001785278320312
    5. '```' → logprob: -12.751785278320312
    6. '	if' → logprob: -15.001785278320312
    7. '<|end|>' → logprob: -15.376785278320312
    8. ' ' → logprob: -15.501785278320312
    9. '
' → logprob: -15.626785278320312
    10. '           ' → logprob: -15.751785278320312

Token 223: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11490777879953384
    2. '       ' → logprob: -2.614907741546631
    3. ' if' → logprob: -3.364907741546631
    4. '   ' → logprob: -7.239907741546631
    5. '           ' → logprob: -10.239908218383789
    6. '```' → logprob: -10.864908218383789
    7. '	if' → logprob: -10.989908218383789
    8. ' ' → logprob: -11.114908218383789
    9. '
' → logprob: -12.364908218383789
    10. 'If' → logprob: -14.114908218383789

Token 224: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.34914371371269226
    2. ' result' → logprob: -1.2241437435150146
    3. 's' → logprob: -7.8491435050964355
    4. ' s' → logprob: -8.099143981933594
    5. '   ' → logprob: -13.349143981933594
    6. ' ' → logprob: -14.224143981933594
    7. '(result' → logprob: -14.349143981933594
    8. '    ' → logprob: -14.474143981933594
    9. '[result' → logprob: -14.849143981933594
    10. '	result' → logprob: -15.224143981933594

Token 225: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -14.750000953674316
    3. 'y' → logprob: -15.375000953674316
    4. '[' → logprob: -16.125
    5. '```' → logprob: -16.875
    6. '][' → logprob: -18.125
    7. '[u' → logprob: -18.625
    8. '[h' → logprob: -19.0
    9. '[s' → logprob: -19.375
    10. '(y' → logprob: -19.75

Token 226: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.10031040012836456
    2. '][' → logprob: -2.3503103256225586
    3. '[' → logprob: -9.975310325622559
    4. '[y' → logprob: -10.850310325622559
    5. ']' → logprob: -11.600310325622559
    6. '}[' → logprob: -11.850310325622559
    7. ' [' → logprob: -11.975310325622559
    8. 'x' → logprob: -12.600310325622559
    9. ' ][' → logprob: -12.600310325622559
    10. '[
' → logprob: -13.225310325622559

Token 227: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.319370302458992e-06
    2. '[x' → logprob: -12.625005722045898
    3. ' x' → logprob: -13.250005722045898
    4. '[' → logprob: -16.6250057220459
    5. '"x' → logprob: -17.0000057220459
    6. ']' → logprob: -18.5000057220459
    7. '][' → logprob: -18.5000057220459
    8. '```' → logprob: -18.6250057220459
    9. '	x' → logprob: -19.0000057220459
    10. '(x' → logprob: -19.2500057220459

Token 228: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9113022685050964
    2. ':' → logprob: -1.1613023281097412
    3. ']:' → logprob: -1.4113023281097412
    4. ']:
' → logprob: -3.786302328109741
    5. '>' → logprob: -4.661302089691162
    6. ':
' → logprob: -5.161302089691162
    7. '):' → logprob: -7.161302089691162
    8. ']!=' → logprob: -7.911302089691162
    9. '):
' → logprob: -8.03630256652832
    10. '!=' → logprob: -8.03630256652832

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07999788969755173
    2. ' run' → logprob: -3.2049977779388428
    3. 'run' → logprob: -3.3299977779388428
    4. '       ' → logprob: -7.829998016357422
    5. '          ' → logprob: -10.079998016357422
    6. '(run' → logprob: -10.204998016357422
    7. '
' → logprob: -11.454998016357422
    8. '         ' → logprob: -12.329998016357422
    9. '=' → logprob: -12.454998016357422
    10. '```' → logprob: -12.579998016357422

Token 230: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.030478166416287422
    2. ' run' → logprob: -3.5304782390594482
    3. '       ' → logprob: -7.280478000640869
    4. '           ' → logprob: -10.405478477478027
    5. '	run' → logprob: -12.905478477478027
    6. '
' → logprob: -13.155478477478027
    7. '(run' → logprob: -13.405478477478027
    8. '   ' → logprob: -13.780478477478027
    9. '               ' → logprob: -14.405478477478027
    10. '.run' → logprob: -15.405478477478027

Token 231: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029771439731121063
    2. ' =' → logprob: -3.529771327972412
    3. '=result' → logprob: -10.77977180480957
    4. 'result' → logprob: -17.65477180480957
    5. '=
' → logprob: -17.77977180480957
    6. '   ' → logprob: -17.90477180480957
    7. '=

' → logprob: -18.27977180480957
    8. ' ' → logprob: -18.90477180480957
    9. ')' → logprob: -19.52977180480957
    10. '=}' → logprob: -20.02977180480957

Token 232: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12693041563034058
    2. ' result' → logprob: -2.1269304752349854
    3. '   ' → logprob: -13.501930236816406
    4. ' ' → logprob: -15.376930236816406
    5. '	result' → logprob: -15.376930236816406
    6. '(result' → logprob: -15.751930236816406
    7. '[result' → logprob: -16.251930236816406
    8. '       ' → logprob: -16.501930236816406
    9. '           ' → logprob: -16.626930236816406
    10. '    ' → logprob: -17.251930236816406

Token 233: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.016441943123936653
    2. '[result' → logprob: -4.641441822052002
    3. 'result' → logprob: -5.016441822052002
    4. '[x' → logprob: -11.14144229888916
    5. ' result' → logprob: -11.64144229888916
    6. '[' → logprob: -12.39144229888916
    7. 'y' → logprob: -13.01644229888916
    8. '(result' → logprob: -13.76644229888916
    9. '$result' → logprob: -13.76644229888916
    10. 'results' → logprob: -14.14144229888916

Token 234: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.33284783363342285
    2. '][' → logprob: -1.3328478336334229
    3. '[y' → logprob: -3.957847833633423
    4. '[' → logprob: -8.457847595214844
    5. ']' → logprob: -10.207847595214844
    6. 'x' → logprob: -10.582847595214844
    7. '}[' → logprob: -12.582847595214844
    8. ' ][' → logprob: -12.707847595214844
    9. '[
' → logprob: -13.082847595214844
    10. ')[' → logprob: -13.082847595214844

Token 235: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. '[x' → logprob: -15.250000953674316
    3. ' x' → logprob: -15.875000953674316
    4. 'result' → logprob: -16.25
    5. '"x' → logprob: -20.625
    6. '(x' → logprob: -20.875
    7. '$x' → logprob: -21.0
    8. '   ' → logprob: -21.125
    9. '
' → logprob: -21.625
    10. ' ' → logprob: -21.75

Token 236: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005779119674116373
    2. '
' → logprob: -6.005779266357422
    3. ')
' → logprob: -6.130779266357422
    4. ')' → logprob: -6.880779266357422
    5. '<|end|>' → logprob: -10.255779266357422
    6. ']
' → logprob: -11.505779266357422
    7. ':
' → logprob: -11.630779266357422
    8. '):
' → logprob: -11.880779266357422
    9. '}
' → logprob: -12.005779266357422
    10. '   ' → logprob: -12.255779266357422

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020445059053599834
    2. 'else' → logprob: -6.377044677734375
    3. ' else' → logprob: -8.502044677734375
    4. 'elif' → logprob: -9.002044677734375
    5. '<|end|>' → logprob: -12.252044677734375
    6. '   ' → logprob: -12.502044677734375
    7. ' elif' → logprob: -12.877044677734375
    8. '```' → logprob: -13.252044677734375
    9. '           ' → logprob: -13.752044677734375
    10. '
' → logprob: -14.002044677734375

Token 238: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15864364802837372
    2. ' else' → logprob: -3.0336437225341797
    3. 'elif' (adapté à ' elif') → logprob: -3.1586437225341797
    4. 'else' → logprob: -3.4086437225341797
    5. ' elif' → logprob: -3.7836437225341797
    6. ' x' → logprob: -8.53364372253418
    7. 'x' → logprob: -10.90864372253418
    8. '```' → logprob: -11.15864372253418
    9. '   ' → logprob: -11.65864372253418
    10. '	elif' → logprob: -12.15864372253418

Token 239: ' run' (ID: 2461)
  Prédit: ' run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.07889298349618912
    2. 'run' → logprob: -2.578892946243286
    3. '   ' → logprob: -13.953892707824707
    4. ' ' → logprob: -14.578892707824707
    5. '           ' → logprob: -14.828892707824707
    6. '    ' → logprob: -14.828892707824707
    7. ' ' → logprob: -14.828892707824707
    8. '(run' → logprob: -15.328892707824707
    9. '       ' → logprob: -15.453892707824707
    10. '	run' → logprob: -15.703892707824707

Token 240: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3602883815765381
    2. ':' → logprob: -1.360288381576538
    3. '           ' → logprob: -3.110288381576538
    4. '>' → logprob: -7.110288619995117
    5. '=' → logprob: -8.610288619995117
    6. '):
' → logprob: -9.235288619995117
    7. '       ' → logprob: -9.985288619995117
    8. ':

' → logprob: -10.235288619995117
    9. ' =' → logprob: -10.360288619995117
    10. ')' → logprob: -10.485288619995117

Token 241: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01726478338241577
    2. '           ' → logprob: -4.5172648429870605
    3. ' result' → logprob: -5.6422648429870605
    4. 'result' → logprob: -6.1422648429870605
    5. '   ' → logprob: -7.6422648429870605
    6. '```' → logprob: -11.892264366149902
    7. '               ' → logprob: -12.017264366149902
    8. 'x' → logprob: -12.767264366149902
    9. ' x' → logprob: -13.017264366149902
    10. '      ' → logprob: -14.017264366149902

Token 242: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.062031205743551254
    2. ' result' → logprob: -2.8120312690734863
    3. '           ' → logprob: -10.062030792236328
    4. '       ' → logprob: -11.062030792236328
    5. '   ' → logprob: -12.562030792236328
    6. '               ' → logprob: -13.562030792236328
    7. '	result' → logprob: -15.187030792236328
    8. ' ' → logprob: -16.562030792236328
    9. '```' → logprob: -17.437030792236328
    10. '[result' → logprob: -17.687030792236328

Token 243: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: 0.0
    2. '[' → logprob: -18.875
    3. 'y' → logprob: -19.875
    4. ' [' → logprob: -20.125
    5. '```' → logprob: -20.5
    6. '   ' → logprob: -21.75
    7. '][' → logprob: -21.875
    8. '	y' → logprob: -22.0
    9. '\[' → logprob: -22.625
    10. '=y' → logprob: -23.0

Token 244: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00685236556455493
    2. '[x' → logprob: -5.006852149963379
    3. '[y' → logprob: -9.756852149963379
    4. ']' → logprob: -10.131852149963379
    5. '[' → logprob: -10.631852149963379
    6. ' ][' → logprob: -11.756852149963379
    7. '   ' → logprob: -12.256852149963379
    8. '```' → logprob: -13.631852149963379
    9. ' [' → logprob: -15.006852149963379
    10. '       ' → logprob: -15.631852149963379

Token 245: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.5
    3. 'y' → logprob: -17.875
    4. '```' → logprob: -19.375
    5. '[' → logprob: -20.0
    6. '0' → logprob: -20.25
    7. '   ' → logprob: -20.5
    8. '
' → logprob: -20.5
    9. ' ' → logprob: -20.75
    10. ']' → logprob: -20.75

Token 246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48117756843566895
    2. '=' → logprob: -0.981177568435669
    3. ' =' → logprob: -5.10617733001709
    4. ']=' → logprob: -6.98117733001709
    5. ' ]' → logprob: -9.98117733001709
    6. '   ' → logprob: -10.60617733001709
    7. ')' → logprob: -12.23117733001709
    8. '[' → logprob: -12.35617733001709
    9. '           ' → logprob: -13.23117733001709
    10. ' ' → logprob: -13.73117733001709

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889000326395035
    2. ' =' → logprob: -2.578890085220337
    3. '   ' → logprob: -16.078889846801758
    4. '[' → logprob: -16.578889846801758
    5. ' ' → logprob: -17.453889846801758
    6. '=
' → logprob: -17.828889846801758
    7. '=result' → logprob: -18.078889846801758
    8. '           ' → logprob: -18.703889846801758
    9. ')' → logprob: -18.828889846801758
    10. ']' → logprob: -19.203889846801758

Token 248: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.07889044284820557
    2. ' run' → logprob: -2.578890323638916
    3. '(run' → logprob: -14.828890800476074
    4. ' ' → logprob: -15.953890800476074
    5. ' ' → logprob: -16.578889846801758
    6. '	run' → logprob: -16.703889846801758
    7. '```' → logprob: -17.328889846801758
    8. 'r' → logprob: -17.578889846801758
    9. '   ' → logprob: -17.703889846801758
    10. '
' → logprob: -18.203889846801758

Token 249: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001313213026151061
    2. ' x' → logprob: -7.001313209533691
    3. '   ' → logprob: -8.376313209533691
    4. 'x' → logprob: -8.751313209533691
    5. '           ' → logprob: -12.376313209533691
    6. '      ' → logprob: -12.751313209533691
    7. '```' → logprob: -13.626313209533691
    8. '	' → logprob: -13.876313209533691
    9. '
' → logprob: -14.126313209533691
    10. '    ' → logprob: -14.501313209533691

Token 250: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5256555080413818
    2. '       ' → logprob: -0.9006555080413818
    3. 'x' → logprob: -6.025655746459961
    4. ' x' → logprob: -10.400655746459961
    5. '```' → logprob: -10.650655746459961
    6. '           ' → logprob: -10.775655746459961
    7. ' y' → logprob: -11.275655746459961
    8. 'y' → logprob: -12.025655746459961
    9. '	' → logprob: -12.400655746459961
    10. '     ' → logprob: -12.650655746459961

Token 251: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.023424476385116577
    2. ' x' → logprob: -3.7734243869781494
    3. '   ' → logprob: -9.27342414855957
    4. '       ' → logprob: -9.39842414855957
    5. '           ' → logprob: -13.64842414855957
    6. '	x' → logprob: -14.52342414855957
    7. '```' → logprob: -14.77342414855957
    8. ' ' → logprob: -16.52342414855957
    9. '     ' → logprob: -18.39842414855957
    10. '               ' → logprob: -18.52342414855957

Token 252: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.053578875958919525
    2. '-' → logprob: -3.0535788536071777
    3. ' -=' → logprob: -5.303578853607178
    4. '=' → logprob: -12.803579330444336
    5. '+=' → logprob: -13.803579330444336
    6. '```' → logprob: -14.553579330444336
    7. '   ' → logprob: -15.303579330444336
    8. '–' → logprob: -15.928579330444336
    9. '−' → logprob: -15.928579330444336
    10. ')' → logprob: -15.928579330444336

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -15.750024795532227
    4. '   ' → logprob: -18.875024795532227
    5. '`' → logprob: -20.375024795532227
    6. ' ' → logprob: -20.562524795532227
    7. '<|end|>' → logprob: -20.562524795532227
    8. '0' → logprob: -20.562524795532227
    9. '۱' → logprob: -21.000024795532227
    10. '2' → logprob: -21.125024795532227

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.875001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '１' → logprob: -21.500001907348633
    6. ' ' → logprob: -21.625001907348633
    7. '0' → logprob: -22.000001907348633
    8. '
' → logprob: -22.125001907348633
    9. '۱' → logprob: -22.187501907348633
    10. '-' → logprob: -22.375001907348633

Token 255: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.921253225300461e-05
    2. 'changed' → logprob: -10.250069618225098
    3. 'y' → logprob: -11.250069618225098
    4. '#' → logprob: -12.000069618225098
    5. ' for' → logprob: -12.125069618225098
    6. 'if' → logprob: -12.500069618225098
    7. 'change' → logprob: -13.000069618225098
    8. 'while' → logprob: -14.125069618225098
    9. 'prev' → logprob: -14.875069618225098
    10. 'from' → logprob: -15.000069618225098

Token 256: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.843177233240567e-05
    2. 'changed' → logprob: -11.250018119812012
    3. ' for' → logprob: -13.375018119812012
    4. 'prev' → logprob: -14.000018119812012
    5. 'change' → logprob: -14.625018119812012
    6. 'col' → logprob: -14.750018119812012
    7. 'found' → logprob: -14.750018119812012
    8. '#' → logprob: -14.875018119812012
    9. 'run' → logprob: -15.250018119812012
    10. 'last' → logprob: -15.250018119812012

Token 257: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3237135112285614
    2. ' y' → logprob: -1.4487135410308838
    3. 'x' → logprob: -3.323713541030884
    4. ' x' → logprob: -5.698713302612305
    5. 'i' → logprob: -6.448713302612305
    6. ' i' → logprob: -7.573713302612305
    7. 'a' → logprob: -8.948713302612305
    8. '_y' → logprob: -10.948713302612305
    9. '_' → logprob: -11.198713302612305
    10. ' a' → logprob: -11.823713302612305

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806283324956894
    2. 'in' → logprob: -3.288062810897827
    3. ' ' → logprob: -12.288063049316406
    4. 'range' → logprob: -12.538063049316406
    5. '_' → logprob: -13.163063049316406
    6. 'y' → logprob: -13.413063049316406
    7. '1' → logprob: -13.413063049316406
    8. '   ' → logprob: -13.663063049316406
    9. 's' → logprob: -13.788063049316406
    10. 'In' → logprob: -14.413063049316406

Token 259: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048170737922192
    2. ' range' → logprob: -4.511048316955566
    3. '1' → logprob: -16.38604736328125
    4. '(range' → logprob: -16.51104736328125
    5. 'in' → logprob: -16.88604736328125
    6. ' ' → logprob: -17.13604736328125
    7. ' in' → logprob: -17.76104736328125
    8. '   ' → logprob: -18.38604736328125
    9. 'r' → logprob: -19.51104736328125
    10. '	range' → logprob: -19.51104736328125

Token 260: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.002848029136657715
    2. '(' → logprob: -5.877848148345947
    3. '(range' → logprob: -11.127847671508789
    4. 'range' → logprob: -11.502847671508789
    5. '(k' → logprob: -11.752847671508789
    6. 'h' → logprob: -12.127847671508789
    7. '(w' → logprob: -13.252847671508789
    8. ' range' → logprob: -13.752847671508789
    9. ' (' → logprob: -14.502847671508789
    10. '1' → logprob: -14.752847671508789

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1578892022371292
    2. '):
' → logprob: -2.0328891277313232
    3. '+' → logprob: -4.657889366149902
    4. '-' → logprob: -5.282889366149902
    5. ':' → logprob: -8.407889366149902
    6. ' -' → logprob: -9.157889366149902
    7. '   ' → logprob: -9.407889366149902
    8. ' +' → logprob: -9.782889366149902
    9. ')' → logprob: -10.657889366149902
    10. ' ):' → logprob: -11.657889366149902

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001698094274615869
    2. 'for' → logprob: -8.87516975402832
    3. ' for' → logprob: -11.37516975402832
    4. 'if' → logprob: -11.50016975402832
    5. 'x' → logprob: -12.12516975402832
    6. ' if' → logprob: -14.00016975402832
    7. '	for' → logprob: -14.12516975402832
    8. '       ' → logprob: -14.25016975402832
    9. ' ' → logprob: -15.62516975402832
    10. '	if' → logprob: -16.00016975402832

Token 263: ' for' (ID: 395)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1403985470533371
    2. 'for' (adapté à ' for') → logprob: -2.1403985023498535
    3. '   ' → logprob: -4.3903985023498535
    4. ' for' → logprob: -7.3903985023498535
    5. ' x' → logprob: -8.390398979187012
    6. 'if' → logprob: -9.515398979187012
    7. 'row' → logprob: -11.015398979187012
    8. 'y' → logprob: -11.390398979187012
    9. 'run' → logprob: -11.640398979187012
    10. 'prev' → logprob: -12.015398979187012

Token 264: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00014036978245712817
    2. ' x' → logprob: -8.875140190124512
    3. 'y' → logprob: -15.875140190124512
    4. 'k' → logprob: -16.000141143798828
    5. '   ' → logprob: -16.750141143798828
    6. '1' → logprob: -16.750141143798828
    7. 'i' → logprob: -17.000141143798828
    8. '	x' → logprob: -17.000141143798828
    9. '_x' → logprob: -17.250141143798828
    10. 'a' → logprob: -17.625141143798828

Token 265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42875975370407104
    2. 'in' → logprob: -1.0537598133087158
    3. '(' → logprob: -10.678759574890137
    4. '   ' → logprob: -10.928759574890137
    5. '0' → logprob: -11.678759574890137
    6. '1' → logprob: -12.928759574890137
    7. ' ' → logprob: -13.053759574890137
    8. ',' → logprob: -13.928759574890137
    9. 'range' → logprob: -14.178759574890137
    10. 'import' → logprob: -14.678759574890137

Token 266: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029753267765045166
    2. ' range' → logprob: -3.5297532081604004
    3. 'w' → logprob: -12.904753684997559
    4. '(range' → logprob: -15.779753684997559
    5. '   ' → logprob: -16.654752731323242
    6. ' ' → logprob: -18.404752731323242
    7. '[w' → logprob: -18.529752731323242
    8. 'in' → logprob: -19.529752731323242
    9. '	range' → logprob: -20.029752731323242
    10. '[' → logprob: -20.029752731323242

Token 267: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.1102466732263565
    2. '(' → logprob: -2.3602466583251953
    3. '(range' → logprob: -4.860246658325195
    4. 'range' → logprob: -6.110246658325195
    5. ' range' → logprob: -11.110246658325195
    6. '(k' → logprob: -13.860246658325195
    7. '   ' → logprob: -13.985246658325195
    8. '(r' → logprob: -14.235246658325195
    9. '(l' → logprob: -14.485246658325195
    10. '(width' → logprob: -14.610246658325195

Token 268: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7692879438400269
    2. '+' → logprob: -1.0192879438400269
    3. '):' → logprob: -1.7692879438400269
    4. '-' → logprob: -6.269288063049316
    5. ':' → logprob: -6.519288063049316
    6. '   ' → logprob: -7.019288063049316
    7. ' +' → logprob: -7.519288063049316
    8. ')' → logprob: -8.144288063049316
    9. '=' → logprob: -9.519288063049316
    10. ' ' → logprob: -10.644288063049316

Token 269: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4940418601036072
    2. '       ' → logprob: -0.9940418601036072
    3. ' if' → logprob: -3.994041919708252
    4. 'if' → logprob: -6.744041919708252
    5. 'print' → logprob: -9.494041442871094
    6. ' print' → logprob: -9.494041442871094
    7. '	if' → logprob: -12.619041442871094
    8. ' ' → logprob: -12.744041442871094
    9. ' for' → logprob: -13.744041442871094
    10. '           ' → logprob: -13.869041442871094

Token 270: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8181338310241699
    2. '   ' → logprob: -1.06813383102417
    3. ' if' → logprob: -1.56813383102417
    4. 'if' (adapté à ' if') → logprob: -5.19313383102417
    5. '           ' → logprob: -6.94313383102417
    6. ' print' → logprob: -9.443134307861328
    7. ' ' → logprob: -10.943134307861328
    8. '	if' → logprob: -10.943134307861328
    9. 'print' → logprob: -11.568134307861328
    10. '#' → logprob: -12.193134307861328

Token 271: ' not' (ID: 625)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2705458700656891
    2. 'not' → logprob: -1.5205458402633667
    3. 'y' → logprob: -4.270545959472656
    4. 's' → logprob: -5.645545959472656
    5. ' not' → logprob: -7.270545959472656
    6. ' result' → logprob: -9.020545959472656
    7. '!' → logprob: -10.145545959472656
    8. ' y' → logprob: -10.270545959472656
    9. 'x' → logprob: -11.020545959472656
    10. '0' → logprob: -12.020545959472656

Token 272: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004623087588697672
    2. ' result' → logprob: -5.379622936248779
    3. '   ' → logprob: -13.129623413085938
    4. 's' → logprob: -14.254623413085938
    5. '	result' → logprob: -16.504623413085938
    6. ' ' → logprob: -16.754623413085938
    7. '  ' → logprob: -17.129623413085938
    8. '(result' → logprob: -17.254623413085938
    9. '$result' → logprob: -18.254623413085938
    10. '[result' → logprob: -18.379623413085938

Token 273: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.512236498361744e-07
    2. '[h' → logprob: -15.500000953674316
    3. '][' → logprob: -16.875
    4. 'y' → logprob: -17.125
    5. '[' → logprob: -17.75
    6. '[u' → logprob: -17.875
    7. ' [' → logprob: -17.875
    8. '```' → logprob: -18.375
    9. '[a' → logprob: -18.75
    10. '[x' → logprob: -18.875

Token 274: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.096126576769166e-05
    2. '[x' → logprob: -10.250041007995605
    3. ' ][' → logprob: -12.750041007995605
    4. '[y' → logprob: -13.750041007995605
    5. ']' → logprob: -13.875041007995605
    6. '[' → logprob: -14.875041007995605
    7. '   ' → logprob: -16.87504005432129
    8. ']][' → logprob: -16.87504005432129
    9. '"][' → logprob: -17.75004005432129
    10. ' [' → logprob: -18.12504005432129

Token 275: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.45848218582978e-06
    2. ' x' → logprob: -13.12500286102295
    3. '[x' → logprob: -15.00000286102295
    4. '   ' → logprob: -17.750001907348633
    5. '][' → logprob: -18.500001907348633
    6. ' ' → logprob: -18.875001907348633
    7. '	x' → logprob: -18.875001907348633
    8. '```' → logprob: -18.875001907348633
    9. '"x' → logprob: -19.000001907348633
    10. ']' → logprob: -19.250001907348633

Token 276: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.01570456102490425
    2. ']:
' → logprob: -4.39070463180542
    3. ']' → logprob: -5.76570463180542
    4. ']:
' → logprob: -10.890704154968262
    5. ' ]' → logprob: -11.265704154968262
    6. ']:

' → logprob: -11.640704154968262
    7. ':' → logprob: -11.890704154968262
    8. ']==' → logprob: -12.890704154968262
    9. ' and' → logprob: -13.265704154968262
    10. ']=' → logprob: -14.015704154968262

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00653679296374321
    2. 'result' → logprob: -5.506536960601807
    3. ' result' → logprob: -6.756536960601807
    4. ' and' → logprob: -7.131536960601807
    5. ' for' → logprob: -8.006536483764648
    6. '   ' → logprob: -10.131536483764648
    7. 'for' → logprob: -10.381536483764648
    8. ':' → logprob: -10.631536483764648
    9. ':
' → logprob: -11.131536483764648
    10. '#' → logprob: -11.756536483764648

Token 278: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.051179107278585434
    2. 'if' (adapté à ' if') → logprob: -3.4261791706085205
    3. 'for' → logprob: -4.301178932189941
    4. '   ' → logprob: -5.676178932189941
    5. 'up' → logprob: -9.551178932189941
    6. 'above' → logprob: -9.551178932189941
    7. '       ' → logprob: -9.926178932189941
    8. 'found' → logprob: -10.426178932189941
    9. ' result' → logprob: -10.551178932189941
    10. 'upper' → logprob: -10.801178932189941

Token 279: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007666255696676672
    2. ' y' → logprob: -7.375766754150391
    3. 'result' → logprob: -10.00076675415039
    4. 's' → logprob: -10.12576675415039
    5. '   ' → logprob: -10.75076675415039
    6. '(y' → logprob: -11.25076675415039
    7. 'h' → logprob: -11.87576675415039
    8. 'x' → logprob: -12.12576675415039
    9. '0' → logprob: -13.25076675415039
    10. ' ' → logprob: -13.37576675415039

Token 280: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25204935669898987
    2. ' >' → logprob: -1.5020493268966675
    3. '-' → logprob: -9.252049446105957
    4. '==' → logprob: -11.627049446105957
    5. ':' → logprob: -12.002049446105957
    6. ' ==' → logprob: -13.127049446105957
    7. '">' → logprob: -13.752049446105957
    8. ' -' → logprob: -14.502049446105957
    9. '!=' → logprob: -14.502049446105957
    10. '＞' → logprob: -14.627049446105957

Token 281: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013266648165881634
    2. ' ' → logprob: -6.626326560974121
    3. '=' → logprob: -14.376326560974121
    4. '   ' → logprob: -16.001327514648438
    5. '1' → logprob: -18.501327514648438
    6. '```' → logprob: -18.876327514648438
    7. '>' → logprob: -19.376327514648438
    8. '  ' → logprob: -19.376327514648438
    9. '۰' → logprob: -19.376327514648438
    10. '
' → logprob: -19.876327514648438

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.12504005432129
    4. '=' → logprob: -17.37504005432129
    5. '۰' → logprob: -19.62504005432129
    6. '```' → logprob: -20.18754005432129
    7. '０' → logprob: -20.25004005432129
    8. '1' → logprob: -20.37504005432129
    9. '
' → logprob: -21.12504005432129
    10. '  ' → logprob: -21.31254005432129

Token 283: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8477188944816589
    2. ':
' → logprob: -0.9727188944816589
    3. ' and' → logprob: -1.8477189540863037
    4. ':' → logprob: -3.7227189540863037
    5. '               ' → logprob: -4.597718715667725
    6. '           ' → logprob: -6.472718715667725
    7. ':

' → logprob: -9.847719192504883
    8. '   ' → logprob: -11.347719192504883
    9. '):
' → logprob: -11.347719192504883
    10. '              ' → logprob: -11.347719192504883

Token 284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008721556514501572
    2. '           ' → logprob: -7.1258721351623535
    3. 'result' → logprob: -10.000872611999512
    4. ' result' → logprob: -11.500872611999512
    5. '                   ' → logprob: -12.500872611999512
    6. '       ' → logprob: -12.750872611999512
    7. '   ' → logprob: -13.000872611999512
    8. '              ' → logprob: -13.500872611999512
    9. '             ' → logprob: -14.125872611999512
    10. '```' → logprob: -14.875872611999512

Token 285: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.020611608400940895
    2. ' result' → logprob: -4.020611763000488
    3. '               ' → logprob: -6.020611763000488
    4. '           ' → logprob: -10.770611763000488
    5. '                   ' → logprob: -12.020611763000488
    6. '   ' → logprob: -13.520611763000488
    7. '	result' → logprob: -14.145611763000488
    8. ' ' → logprob: -14.770611763000488
    9. '       ' → logprob: -15.145611763000488
    10. '                       ' → logprob: -15.770611763000488

Token 286: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.3544423381972592e-05
    2. '][' → logprob: -11.75001335144043
    3. ' [' → logprob: -12.50001335144043
    4. '[' → logprob: -14.50001335144043
    5. 'y' → logprob: -14.62501335144043
    6. '=[' → logprob: -15.87501335144043
    7. '=y' → logprob: -16.00001335144043
    8. '```' → logprob: -16.25001335144043
    9. '[Y' → logprob: -16.37501335144043
    10. ' =' → logprob: -16.50001335144043

Token 287: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.28139087557792664
    2. '-' → logprob: -1.406390905380249
    3. ' -' → logprob: -8.531391143798828
    4. ']' → logprob: -10.781391143798828
    5. '[y' → logprob: -11.531391143798828
    6. '[x' → logprob: -12.906391143798828
    7. ' ][' → logprob: -12.906391143798828
    8. '[' → logprob: -13.031391143798828
    9. '   ' → logprob: -13.656391143798828
    10. '][-' → logprob: -14.031391143798828

Token 288: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.75000286102295
    3. '	x' → logprob: -18.750003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '[x' → logprob: -19.500003814697266
    6. '```' → logprob: -19.625003814697266
    7. '][' → logprob: -19.875003814697266
    8. '0' → logprob: -19.875003814697266
    9. ' ' → logprob: -20.500003814697266
    10. '[' → logprob: -21.625003814697266

Token 289: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2560952603816986
    2. ']=' → logprob: -1.631095290184021
    3. '=' → logprob: -3.5060951709747314
    4. '][' → logprob: -8.881094932556152
    5. ' =' → logprob: -10.256094932556152
    6. ']+=' → logprob: -11.131094932556152
    7. '   ' → logprob: -12.631094932556152
    8. ' ]' → logprob: -12.881094932556152
    9. '[' → logprob: -13.006094932556152
    10. '```' → logprob: -13.256094932556152

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889287173748016
    2. ' =' → logprob: -2.578892946243286
    3. '   ' → logprob: -13.203892707824707
    4. '           ' → logprob: -14.578892707824707
    5. '=
' → logprob: -15.203892707824707
    6. '[' → logprob: -15.328892707824707
    7. '=result' → logprob: -16.328893661499023
    8. ']' → logprob: -16.828893661499023
    9. '               ' → logprob: -17.203893661499023
    10. '       ' → logprob: -17.328893661499023

Token 291: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5451681974809617e-05
    2. ' result' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.375015258789062
    4. '	result' → logprob: -18.625015258789062
    5. '(result' → logprob: -19.500015258789062
    6. '=result' → logprob: -19.625015258789062
    7. '       ' → logprob: -20.000015258789062
    8. '
' → logprob: -20.000015258789062
    9. ' ' → logprob: -20.000015258789062
    10. '  ' → logprob: -20.250015258789062

Token 292: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -9.662937372922897e-05
    2. 'y' → logprob: -9.250096321105957
    3. '][' → logprob: -15.250096321105957
    4. '```' → logprob: -15.875096321105957
    5. '\[' → logprob: -17.125097274780273
    6. '[' → logprob: -18.375097274780273
    7. '	y' → logprob: -18.375097274780273
    8. ' y' → logprob: -20.125097274780273
    9. '   ' → logprob: -20.375097274780273
    10. ' [' → logprob: -20.625097274780273

Token 293: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.824579784530215e-05
    2. ' -' → logprob: -10.2500581741333
    3. '[y' → logprob: -10.7500581741333
    4. '[' → logprob: -14.5000581741333
    5. '[x' → logprob: -14.7500581741333
    6. '][' → logprob: -15.1250581741333
    7. 'y' → logprob: -16.375059127807617
    8. '```' → logprob: -17.000059127807617
    9. '1' → logprob: -17.750059127807617
    10. '[-' → logprob: -18.500059127807617

Token 294: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015149809187278152
    2. '1' → logprob: -6.626514911651611
    3. '][' → logprob: -8.62651538848877
    4. 'y' → logprob: -12.50151538848877
    5. ' x' → logprob: -12.62651538848877
    6. '[x' → logprob: -13.00151538848877
    7. '```' → logprob: -15.25151538848877
    8. ']' → logprob: -16.251514434814453
    9. ' ' → logprob: -16.626514434814453
    10. '0' → logprob: -16.751514434814453

Token 295: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017159747949335724
    2. '[x' → logprob: -8.875171661376953
    3. ']' → logprob: -11.250171661376953
    4. ' ][' → logprob: -11.250171661376953
    5. '[' → logprob: -12.875171661376953
    6. '[y' → logprob: -13.625171661376953
    7. '"][' → logprob: -14.500171661376953
    8. '```' → logprob: -14.625171661376953
    9. ' [' → logprob: -15.250171661376953
    10. '}[' → logprob: -15.250171661376953

Token 296: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.723352049040841e-06
    2. '][' → logprob: -12.500004768371582
    3. '[x' → logprob: -14.250004768371582
    4. ' x' → logprob: -15.125004768371582
    5. '0' → logprob: -17.750003814697266
    6. '```' → logprob: -18.375003814697266
    7. '	x' → logprob: -19.375003814697266
    8. '"x' → logprob: -20.125003814697266
    9. ']' → logprob: -20.250003814697266
    10. '[' → logprob: -20.375003814697266

Token 297: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: 'for' (ID: 1938)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2882261872291565
    2. '           ' → logprob: -2.0382261276245117
    3. 'for' → logprob: -2.2882261276245117
    4. 'else' → logprob: -4.788226127624512
    5. 'elif' → logprob: -4.788226127624512
    6. '   ' → logprob: -7.038226127624512
    7. 'print' → logprob: -7.663226127624512
    8. ' for' → logprob: -8.038226127624512
    9. '```' → logprob: -9.163226127624512
    10. 'if' → logprob: -9.413226127624512

Token 299: ' _' (ID: 1175)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04859452322125435
    2. 'y' → logprob: -3.0485944747924805
    3. '_y' → logprob: -12.54859447479248
    4. ' ' → logprob: -14.04859447479248
    5. '(y' → logprob: -14.42359447479248
    6. 'x' → logprob: -14.54859447479248
    7. ' x' → logprob: -14.79859447479248
    8. '_' → logprob: -14.79859447479248
    9. '	y' → logprob: -14.92359447479248
    10. ' _' → logprob: -15.54859447479248

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000660015270113945
    2. 'in' → logprob: -7.375659942626953
    3. 'range' → logprob: -10.500659942626953
    4. ' ' → logprob: -13.500659942626953
    5. 's' → logprob: -13.625659942626953
    6. '_' → logprob: -14.125659942626953
    7. ' range' → logprob: -14.500659942626953
    8. '   ' → logprob: -14.625659942626953
    9. ',' → logprob: -15.250659942626953
    10. '[' → logprob: -15.625659942626953

Token 301: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889056205749512
    2. ' range' → logprob: -2.578890562057495
    3. '[' → logprob: -15.078890800476074
    4. '(range' → logprob: -15.328890800476074
    5. '_' → logprob: -16.328889846801758
    6. '	range' → logprob: -17.203889846801758
    7. '_range' → logprob: -17.453889846801758
    8. 'input' → logprob: -17.828889846801758
    9. '0' → logprob: -18.078889846801758
    10. 'r' → logprob: -18.078889846801758

Token 302: '(h' (ID: 8120)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.07949706166982651
    2. 'k' → logprob: -2.5794970989227295
    3. ' k' → logprob: -8.079497337341309
    4. ' (' → logprob: -8.579497337341309
    5. '(' → logprob: -9.204497337341309
    6. '(h' → logprob: -12.704497337341309
    7. ' ' → logprob: -13.954497337341309
    8. '1' → logprob: -14.204497337341309
    9. '3' → logprob: -14.579497337341309
    10. '(
' → logprob: -14.579497337341309

Token 303: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00878533348441124
    2. '):
' → logprob: -4.758785247802734
    3. '-' → logprob: -8.883785247802734
    4. ':' → logprob: -11.508785247802734
    5. ' ):' → logprob: -11.758785247802734
    6. '+' → logprob: -11.883785247802734
    7. '*' → logprob: -12.883785247802734
    8. ')' → logprob: -13.508785247802734
    9. ' -' → logprob: -13.883785247802734
    10. '   ' → logprob: -14.258785247802734

Token 304: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06518394500017166
    2. '   ' → logprob: -2.9401838779449463
    3. ' print' → logprob: -4.690184116363525
    4. 'row' → logprob: -7.940184116363525
    5. 'result' → logprob: -8.440183639526367
    6. 'output' → logprob: -8.815183639526367
    7. 'for' → logprob: -9.315183639526367
    8. 'ans' → logprob: -10.065183639526367
    9. 'answer' → logprob: -10.190183639526367
    10. 'rows' → logprob: -10.690183639526367

Token 305: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00031282080453820527
    2. ' print' → logprob: -8.125312805175781
    3. 'for' → logprob: -11.500312805175781
    4. '   ' → logprob: -13.000312805175781
    5. 'row' → logprob: -13.625312805175781
    6. 'pass' → logprob: -14.000312805175781
    7. 'ans' → logprob: -14.250312805175781
    8. ' ' → logprob: -14.875312805175781
    9. 'output' → logprob: -15.000312805175781
    10. 'line' → logprob: -15.250312805175781

Token 306: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.2183163166046143
    2. 'for' → logprob: -1.8433163166046143
    3. ' =' → logprob: -1.9683163166046143
    4. ',' → logprob: -2.0933163166046143
    5. '=' → logprob: -2.2183163166046143
    6. 'print' → logprob: -3.3433163166046143
    7. 'a' → logprob: -4.093316078186035
    8. 'w' → logprob: -4.093316078186035
    9. ' ' → logprob: -4.718316078186035
    10. 'i' → logprob: -4.718316078186035

Token 307: ' w' (ID: 286)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.09570066630840302
    2. 'int' → logprob: -2.595700740814209
    3. '[' → logprob: -4.595700740814209
    4. '[]' → logprob: -6.095700740814209
    5. '0' → logprob: -6.220700740814209
    6. '[input' → logprob: -6.845700740814209
    7. '[result' → logprob: -8.59570026397705
    8. 'input' → logprob: -8.72070026397705
    9. '[len' → logprob: -8.72070026397705
    10. ' [' → logprob: -8.72070026397705

Token 308: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7599705457687378
    2. 'for' → logprob: -1.3849705457687378
    3. '=' → logprob: -2.2599706649780273
    4. '   ' → logprob: -3.8849706649780273
    5. ' ' → logprob: -4.009970664978027
    6. '<|end|>' → logprob: -4.134970664978027
    7. 'j' → logprob: -4.509970664978027
    8. ' =' → logprob: -4.509970664978027
    9. '*' → logprob: -4.509970664978027
    10. '[' → logprob: -4.634970664978027

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.250005722045898
    3. '2' → logprob: -14.250005722045898
    4. '0' → logprob: -15.875005722045898
    5. '   ' → logprob: -16.9375057220459
    6. '-' → logprob: -18.1250057220459
    7. '１' → logprob: -18.3750057220459
    8. '
' → logprob: -18.5625057220459
    9. '```' → logprob: -18.5625057220459
    10. '  ' → logprob: -19.1250057220459

Token 310: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47463151812553406
    2. '<|end|>' → logprob: -1.9746315479278564
    3. ' for' → logprob: -2.9746315479278564
    4. '+' → logprob: -3.5996315479278564
    5. '
' → logprob: -3.7246315479278564
    6. ',' → logprob: -3.7246315479278564
    7. ' ' → logprob: -3.8496315479278564
    8. 'for' → logprob: -3.8496315479278564
    9. 'while' → logprob: -3.8496315479278564
    10. ' while' → logprob: -3.9746315479278564

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06835529953241348
    2. '<|end|>' → logprob: -2.8183553218841553
    3. 'while' → logprob: -6.193355083465576
    4. ' ' → logprob: -6.568355083465576
    5. '
' → logprob: -7.318355083465576
    6. ' while' → logprob: -7.943355083465576
    7. '  ' → logprob: -8.068355560302734
    8. '0' → logprob: -8.193355560302734
    9. 'for' → logprob: -8.818355560302734
    10. '    ' → logprob: -8.818355560302734

Token 312: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18205368518829346
    2. 'while' → logprob: -2.557053565979004
    3. 'j' → logprob: -3.682053565979004
    4. 'for' → logprob: -3.932053565979004
    5. '   ' → logprob: -4.057053565979004
    6. '-' → logprob: -4.557053565979004
    7. ' _' → logprob: -5.307053565979004
    8. ' while' → logprob: -5.432053565979004
    9. ' for' → logprob: -6.682053565979004
    10. ' j' → logprob: -6.807053565979004

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759487152099609
    2. ' =' → logprob: -0.8259487152099609
    3. ' ' → logprob: -12.950948715209961
    4. 'f' → logprob: -13.075948715209961
    5. 'w' → logprob: -13.950948715209961
    6. 't' → logprob: -14.200948715209961
    7. ',' → logprob: -14.450948715209961
    8. '   ' → logprob: -14.450948715209961
    9. 'for' → logprob: -14.950948715209961
    10. '  ' → logprob: -15.950948715209961

Token 314: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.017302634194493294
    2. ' h' → logprob: -4.267302513122559
    3. '0' → logprob: -6.142302513122559
    4. '_' → logprob: -7.142302513122559
    5. ' ' → logprob: -9.267302513122559
    6. '_h' → logprob: -10.017302513122559
    7. 'w' → logprob: -11.017302513122559
    8. ' _' → logprob: -11.142302513122559
    9. '1' → logprob: -11.767302513122559
    10. '   ' → logprob: -12.392302513122559

Token 315: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.0339031834737398e-05
    2. ' -' → logprob: -11.125020027160645
    3. '1' → logprob: -12.125020027160645
    4. ' ' → logprob: -17.25002098083496
    5. '2' → logprob: -18.50002098083496
    6. '   ' → logprob: -18.75002098083496
    7. '()-' → logprob: -19.25002098083496
    8. '--' → logprob: -20.00002098083496
    9. '-=' → logprob: -20.00002098083496
    10. '0' → logprob: -20.75002098083496

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052354102954268456
    2. '2' → logprob: -5.255235195159912
    3. ' ' → logprob: -14.13023567199707
    4. '_' → logprob: -14.75523567199707
    5. '
' → logprob: -16.44273567199707
    6. '-' → logprob: -16.75523567199707
    7. '   ' → logprob: -17.00523567199707
    8. 'j' → logprob: -17.00523567199707
    9. 'i' → logprob: -17.38023567199707
    10. '１' → logprob: -17.38023567199707

Token 317: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06888064742088318
    2. '<|end|>' → logprob: -2.818880558013916
    3. '
' → logprob: -5.818880558013916
    4. ';' → logprob: -6.818880558013916
    5. '  ' → logprob: -7.568880558013916
    6. 'while' → logprob: -7.568880558013916
    7. ' ' → logprob: -7.693880558013916
    8. '<|end|>' → logprob: -8.443881034851074
    9. ',' → logprob: -8.693881034851074
    10. 'i' → logprob: -8.818881034851074

Token 318: ' _
' (ID: 55146)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13491100072860718
    2. 'j' → logprob: -2.259911060333252
    3. '0' → logprob: -5.134911060333252
    4. '1' → logprob: -5.384911060333252
    5. ' j' → logprob: -5.759911060333252
    6. ' _' → logprob: -5.884911060333252
    7. '_)' → logprob: -6.009911060333252
    8. '_j' → logprob: -7.009911060333252
    9. '_]' → logprob: -7.259911060333252
    10. 'i' → logprob: -7.759911060333252

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013663170859217644
    2. 'while' → logprob: -4.513663291931152
    3. ' while' → logprob: -6.013663291931152
    4. '
' → logprob: -10.263663291931152
    5. '	while' → logprob: -10.638663291931152
    6. '  ' → logprob: -10.888663291931152
    7. ' ' → logprob: -11.013663291931152
    8. ',' → logprob: -11.013663291931152
    9. '    ' → logprob: -11.388663291931152
    10. ';' → logprob: -11.388663291931152

Token 320: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.49096012115478516
    2. '   ' → logprob: -0.9909601211547852
    3. ' while' → logprob: -4.115960121154785
    4. 'if' → logprob: -8.240960121154785
    5. 'j' → logprob: -10.115960121154785
    6. '	while' → logprob: -10.240960121154785
    7. 'i' → logprob: -10.865960121154785
    8. '       ' → logprob: -10.990960121154785
    9. '    ' → logprob: -10.990960121154785
    10. '  ' → logprob: -11.490960121154785

Token 321: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6345728635787964
    2. 'j' → logprob: -0.7595728635787964
    3. ' i' → logprob: -6.759572982788086
    4. ' j' → logprob: -7.259572982788086
    5. '0' → logprob: -9.759572982788086
    6. 'True' → logprob: -11.009572982788086
    7. '   ' → logprob: -11.509572982788086
    8. '(i' → logprob: -11.634572982788086
    9. 'not' → logprob: -12.884572982788086
    10. ' ' → logprob: -13.134572982788086

Token 322: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0015062900492921472
    2. ' >=' → logprob: -6.626506328582764
    3. '>' → logprob: -8.626505851745605
    4. '=' → logprob: -14.376505851745605
    5. '≥' → logprob: -15.626505851745605
    6. ' >' → logprob: -16.251506805419922
    7. ']>=' → logprob: -16.751506805419922
    8. ' ' → logprob: -17.001506805419922
    9. '0' → logprob: -17.376506805419922
    10. ')>=' → logprob: -17.501506805419922

Token 323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '1' → logprob: -15.875051498413086
    4. '   ' → logprob: -16.625051498413086
    5. 'k' → logprob: -16.875051498413086
    6. '=' → logprob: -18.000051498413086
    7. '00' → logprob: -18.437551498413086
    8. '۰' → logprob: -18.500051498413086
    9. '```' → logprob: -19.312551498413086
    10. '
' → logprob: -19.562551498413086

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -15.750031471252441
    4. '   ' → logprob: -17.812530517578125
    5. 'i' → logprob: -18.062530517578125
    6. 'x' → logprob: -18.312530517578125
    7. '00' → logprob: -18.375030517578125
    8. 'k' → logprob: -18.812530517578125
    9. 'j' → logprob: -18.875030517578125
    10. '=' → logprob: -19.062530517578125

Token 325: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1036665290594101
    2. ':
' → logprob: -2.7286665439605713
    3. ':' → logprob: -3.6036665439605713
    4. 'and' → logprob: -5.353666305541992
    5. '   ' → logprob: -7.228666305541992
    6. '       ' → logprob: -7.728666305541992
    7. '):
' → logprob: -11.103666305541992
    8. ' ' → logprob: -12.228666305541992
    9. '           ' → logprob: -12.478666305541992
    10. '0' → logprob: -12.728666305541992

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10350155830383301
    2. 'if' → logprob: -2.353501558303833
    3. ' if' → logprob: -5.728501319885254
    4. '           ' → logprob: -10.853501319885254
    5. '   ' → logprob: -11.103501319885254
    6. '```' → logprob: -13.478501319885254
    7. '	if' → logprob: -13.978501319885254
    8. '               ' → logprob: -14.728501319885254
    9. 'If' → logprob: -16.22850227355957
    10. '{
' → logprob: -16.47850227355957

Token 327: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019663851708173752
    2. '           ' → logprob: -4.0196638107299805
    3. '       ' → logprob: -7.0196638107299805
    4. ' if' → logprob: -7.3946638107299805
    5. '   ' → logprob: -12.89466381072998
    6. '	if' → logprob: -14.39466381072998
    7. '               ' → logprob: -14.64466381072998
    8. '
' → logprob: -15.89466381072998
    9. '```' → logprob: -16.019664764404297
    10. 'If' → logprob: -16.144664764404297

Token 328: ' result' (ID: 1534)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3879862427711487
    2. 'result' → logprob: -1.137986183166504
    3. 'i' → logprob: -7.762986183166504
    4. ' not' → logprob: -8.137986183166504
    5. 's' → logprob: -8.637986183166504
    6. 'j' → logprob: -8.762986183166504
    7. 'y' → logprob: -10.887986183166504
    8. '!' → logprob: -11.137986183166504
    9. ' result' → logprob: -11.887986183166504
    10. '(not' → logprob: -12.387986183166504

Token 329: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[j' → logprob: -13.375001907348633
    3. '[' → logprob: -15.125001907348633
    4. 'i' → logprob: -15.750001907348633
    5. '[y' → logprob: -16.125001907348633
    6. '[a' → logprob: -17.500001907348633
    7. '```' → logprob: -17.625001907348633
    8. '[u' → logprob: -17.750001907348633
    9. '

' → logprob: -18.125001907348633
    10. '[in' → logprob: -18.250001907348633

Token 330: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005089493934065104
    2. '[j' → logprob: -7.875508785247803
    3. '   ' → logprob: -9.875509262084961
    4. '-' → logprob: -11.125509262084961
    5. '[' → logprob: -11.125509262084961
    6. ' ][' → logprob: -11.250509262084961
    7. ']' → logprob: -11.375509262084961
    8. '>' → logprob: -12.750509262084961
    9. '```' → logprob: -12.750509262084961
    10. '>[' → logprob: -13.000509262084961

Token 331: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.531315314830863e-06
    2. ' j' → logprob: -12.750003814697266
    3. '[j' → logprob: -15.375003814697266
    4. '	j' → logprob: -15.625003814697266
    5. '   ' → logprob: -15.875003814697266
    6. '][' → logprob: -17.125003814697266
    7. '```' → logprob: -17.125003814697266
    8. '
' → logprob: -17.375003814697266
    9. ' ' → logprob: -18.125003814697266
    10. ']' → logprob: -18.750003814697266

Token 332: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.18723027408123016
    2. ']==' → logprob: -2.562230348587036
    3. ']' → logprob: -2.687230348587036
    4. ']:
' → logprob: -3.687230348587036
    5. ']!=' → logprob: -8.687230110168457
    6. ']>' → logprob: -9.062230110168457
    7. ']:

' → logprob: -9.437230110168457
    8. ' ]' → logprob: -9.937230110168457
    9. '==' → logprob: -9.937230110168457
    10. ']:
' → logprob: -10.562230110168457

Token 333: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1675737351179123
    2. ':' → logprob: -2.4175736904144287
    3. ' and' → logprob: -3.2925736904144287
    4. ' ==' → logprob: -4.167573928833008
    5. 'and' → logprob: -4.542573928833008
    6. '=' → logprob: -7.417573928833008
    7. '!=' → logprob: -7.417573928833008
    8. ':
' → logprob: -7.792573928833008
    9. '>' → logprob: -9.042573928833008
    10. '           ' → logprob: -10.292573928833008

Token 334: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.750295639038086
    4. '     ' → logprob: -18.875295639038086
    5. '  ' → logprob: -19.250295639038086
    6. '       ' → logprob: -19.500295639038086
    7. '    ' → logprob: -20.000295639038086
    8. ' ' → logprob: -20.250295639038086
    9. '00' → logprob: -20.500295639038086
    10. '#' → logprob: -20.625295639038086

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -17.500179290771484
    4. '[' → logprob: -18.750179290771484
    5. '#' → logprob: -18.937679290771484
    6. 'None' → logprob: -18.937679290771484
    7. '  ' → logprob: -19.000179290771484
    8. 'k' → logprob: -19.062679290771484
    9. 'a' → logprob: -19.687679290771484
    10. '     ' → logprob: -19.812679290771484

Token 336: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.307084858417511
    2. ' and' → logprob: -1.6820847988128662
    3. ':' → logprob: -2.557084798812866
    4. 'and' → logprob: -7.557085037231445
    5. '           ' → logprob: -8.307085037231445
    6. ' :
' → logprob: -10.307085037231445
    7. '       ' → logprob: -10.432085037231445
    8. ' or' → logprob: -10.432085037231445
    9. '   ' → logprob: -11.432085037231445
    10. ':

' → logprob: -12.057085037231445

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03666559234261513
    2. ' and' → logprob: -3.536665678024292
    3. 'and' → logprob: -5.286665439605713
    4. ':
' → logprob: -6.786665439605713
    5. ':' → logprob: -7.661665439605713
    6. '       ' → logprob: -9.786665916442871
    7. '               ' → logprob: -10.286665916442871
    8. 'if' → logprob: -10.286665916442871
    9. '   ' → logprob: -10.536665916442871
    10. '=' → logprob: -10.911665916442871

Token 338: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5781574249267578
    2. 'if' (adapté à ' if') → logprob: -0.8281574249267578
    3. '           ' → logprob: -6.328157424926758
    4. '               ' → logprob: -8.703157424926758
    5. ' result' → logprob: -9.328157424926758
    6. '   ' → logprob: -9.703157424926758
    7. ' if' → logprob: -9.828157424926758
    8. '       ' → logprob: -9.953157424926758
    9. '                   ' → logprob: -12.703157424926758
    10. '	result' → logprob: -13.203157424926758

Token 339: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015134313143789768
    2. ' i' → logprob: -6.626513481140137
    3. 'result' → logprob: -8.876513481140137
    4. 'j' → logprob: -10.376513481140137
    5. '   ' → logprob: -11.626513481140137
    6. ' result' → logprob: -12.876513481140137
    7. '0' → logprob: -14.126513481140137
    8. '	i' → logprob: -14.126513481140137
    9. '
' → logprob: -14.376513481140137
    10. ' ' → logprob: -14.376513481140137

Token 340: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2548435926437378
    2. '<' → logprob: -2.6298437118530273
    3. '+' → logprob: -2.7548437118530273
    4. ' +' → logprob: -3.0048437118530273
    5. ' >' → logprob: -3.5048437118530273
    6. '>' → logprob: -4.754843711853027
    7. '<h' → logprob: -7.254843711853027
    8. '<n' → logprob: -9.379843711853027
    9. '-' → logprob: -10.379843711853027
    10. ' ' → logprob: -10.629843711853027

Token 341: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0006273718317970634
    2. ' h' → logprob: -7.375627517700195
    3. '(h' → logprob: -14.375627517700195
    4. ' ' → logprob: -16.125627517700195
    5. '   ' → logprob: -16.875627517700195
    6. '	h' → logprob: -17.750627517700195
    7. '<h' → logprob: -18.125627517700195
    8. '[h' → logprob: -18.125627517700195
    9. '=h' → logprob: -18.375627517700195
    10. '```' → logprob: -18.625627517700195

Token 342: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008124859305098653
    2. ' -' → logprob: -7.125812530517578
    3. '1' → logprob: -11.750812530517578
    4. '```' → logprob: -16.000812530517578
    5. ' ' → logprob: -17.500812530517578
    6. '-
' → logprob: -17.750812530517578
    7. 't' → logprob: -18.625812530517578
    8. '()-' → logprob: -18.750812530517578
    9. '−' → logprob: -19.000812530517578
    10. 's' → logprob: -19.125812530517578

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.500017166137695
    4. '2' → logprob: -17.500017166137695
    5. '
' → logprob: -17.875017166137695
    6. '```' → logprob: -18.250017166137695
    7. '-' → logprob: -18.437517166137695
    8. '  ' → logprob: -19.125017166137695
    9. '１' → logprob: -19.187517166137695
    10. '11' → logprob: -19.375017166137695

Token 344: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8618727326393127
    2. ':
' → logprob: -0.9868727326393127
    3. ' and' → logprob: -1.611872673034668
    4. ':' → logprob: -5.986872673034668
    5. '           ' → logprob: -5.986872673034668
    6. '               ' → logprob: -8.486872673034668
    7. '       ' → logprob: -10.861872673034668
    8. '>' → logprob: -10.861872673034668
    9. '   ' → logprob: -10.986872673034668
    10. '):
' → logprob: -11.111872673034668

Token 345: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01682671532034874
    2. '           ' → logprob: -4.141826629638672
    3. ' and' → logprob: -7.891826629638672
    4. 'result' → logprob: -8.766826629638672
    5. '              ' → logprob: -9.891826629638672
    6. ':' → logprob: -10.141826629638672
    7. '                   ' → logprob: -10.516826629638672
    8. 'and' → logprob: -10.766826629638672
    9. '```' → logprob: -11.016826629638672
    10. ':
' → logprob: -11.016826629638672

Token 346: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.10070294886827469
    2. ' result' → logprob: -2.350703001022339
    3. '               ' → logprob: -7.97570276260376
    4. '           ' → logprob: -9.475703239440918
    5. '                   ' → logprob: -9.600703239440918
    6. '                       ' → logprob: -12.725703239440918
    7. ' ' → logprob: -13.350703239440918
    8. '   ' → logprob: -13.475703239440918
    9. 'answer' → logprob: -14.600703239440918
    10. '	result' → logprob: -14.600703239440918

Token 347: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. '[j' → logprob: -16.0
    4. '[I' → logprob: -18.875
    5. '][' → logprob: -19.0
    6. 'i' → logprob: -19.25
    7. '[u' → logprob: -19.5
    8. '[in' → logprob: -20.125
    9. '[y' → logprob: -20.125
    10. '[int' → logprob: -20.125

Token 348: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2519930303096771
    2. '+' → logprob: -1.5019930601119995
    3. ' +' → logprob: -9.876993179321289
    4. '[' → logprob: -12.126993179321289
    5. ']' → logprob: -12.876993179321289
    6. '[j' → logprob: -13.376993179321289
    7. ' ][' → logprob: -13.501993179321289
    8. '+j' → logprob: -14.876993179321289
    9. '   ' → logprob: -15.126993179321289
    10. '"][' → logprob: -15.751993179321289

Token 349: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.008129963040119e-06
    2. ' j' → logprob: -12.500003814697266
    3. '	j' → logprob: -15.875003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '[j' → logprob: -19.375003814697266
    6. '```' → logprob: -19.625003814697266
    7. ',j' → logprob: -20.250003814697266
    8. '  ' → logprob: -20.375003814697266
    9. ' ' → logprob: -20.500003814697266
    10. '_j' → logprob: -20.750003814697266

Token 350: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009175688959658146
    2. ']=' → logprob: -4.759175777435303
    3. '=' → logprob: -7.509175777435303
    4. ']+=' → logprob: -11.884175300598145
    5. ' ]' → logprob: -12.384175300598145
    6. ' =' → logprob: -13.634175300598145
    7. ')' → logprob: -14.634175300598145
    8. '```' → logprob: -16.75917625427246
    9. ')=' → logprob: -17.13417625427246
    10. '>' → logprob: -17.38417625427246

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '   ' → logprob: -16.768150329589844
    4. ']' → logprob: -16.768150329589844
    5. '+=' → logprob: -17.643150329589844
    6. ']=' → logprob: -18.143150329589844
    7. '=
' → logprob: -18.643150329589844
    8. ')' → logprob: -18.768150329589844
    9. '>' → logprob: -19.518150329589844
    10. '.=' → logprob: -19.518150329589844

Token 352: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -2.8325677703833207e-05
    2. ' result' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.125028610229492
    4. '=result' → logprob: -18.500028610229492
    5. '	result' → logprob: -18.875028610229492
    6. '       ' → logprob: -19.375028610229492
    7. '(result' → logprob: -19.500028610229492
    8. '           ' → logprob: -19.750028610229492
    9. '[result' → logprob: -19.750028610229492
    10. ' ' → logprob: -19.875028610229492

Token 353: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.15310683415737e-05
    2. 'i' → logprob: -10.750021934509277
    3. '```' → logprob: -17.75002098083496
    4. '[' → logprob: -18.12502098083496
    5. '   ' → logprob: -18.75002098083496
    6. ' [' → logprob: -19.12502098083496
    7. '[I' → logprob: -19.12502098083496
    8. '(i' → logprob: -20.12502098083496
    9. 's' → logprob: -20.62502098083496
    10. '[next' → logprob: -20.62502098083496

Token 354: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.1689596148207784e-05
    2. ' +' → logprob: -9.875051498413086
    3. '+
' → logprob: -16.125051498413086
    4. '+j' → logprob: -16.375051498413086
    5. '＋' → logprob: -17.750051498413086
    6. '+i' → logprob: -18.125051498413086
    7. '[' → logprob: -18.250051498413086
    8. '+[' → logprob: -18.750051498413086
    9. '[j' → logprob: -19.500051498413086
    10. '1' → logprob: -19.875051498413086

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -12.125009536743164
    3. '   ' → logprob: -13.125009536743164
    4. '][' → logprob: -13.750009536743164
    5. '```' → logprob: -14.500009536743164
    6. '[' → logprob: -17.125009536743164
    7. '0' → logprob: -17.750009536743164
    8. '       ' → logprob: -17.875009536743164
    9. '``' → logprob: -18.000009536743164
    10. '
' → logprob: -18.500009536743164

Token 356: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013333676906768233
    2. '[j' → logprob: -9.750133514404297
    3. ' ][' → logprob: -9.750133514404297
    4. ']' → logprob: -11.875133514404297
    5. '   ' → logprob: -12.625133514404297
    6. '[' → logprob: -12.625133514404297
    7. '```' → logprob: -14.125133514404297
    8. ' [' → logprob: -14.375133514404297
    9. '       ' → logprob: -14.500133514404297
    10. '[i' → logprob: -15.125133514404297

Token 357: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.961759259458631e-06
    2. ' j' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.5000057220459
    4. '[j' → logprob: -17.3750057220459
    5. '	j' → logprob: -17.7500057220459
    6. '       ' → logprob: -19.2500057220459
    7. '
' → logprob: -19.6250057220459
    8. '  ' → logprob: -20.2500057220459
    9. '```' → logprob: -20.2500057220459
    10. ' ' → logprob: -20.6250057220459

Token 358: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005430831108242273
    2. ']' → logprob: -6.005430698394775
    3. ']
' → logprob: -6.005430698394775
    4. '           ' → logprob: -8.130431175231934
    5. '
' → logprob: -9.005431175231934
    6. ')' → logprob: -11.005431175231934
    7. '```' → logprob: -11.255431175231934
    8. '               ' → logprob: -11.755431175231934
    9. '<|end|>' → logprob: -11.880431175231934
    10. ')
' → logprob: -12.005431175231934

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011009939044015482
    2. 'j' → logprob: -9.500109672546387
    3. '           ' → logprob: -10.875109672546387
    4. '   ' → logprob: -12.250109672546387
    5. '```' → logprob: -12.500109672546387
    6. ' j' → logprob: -13.125109672546387
    7. '
' → logprob: -13.125109672546387
    8. '        
' → logprob: -14.125109672546387
    9. ',j' → logprob: -14.375109672546387
    10. '      ' → logprob: -14.500109672546387

Token 360: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.7218089699745178
    2. '       ' → logprob: -0.7218089699745178
    3. '   ' → logprob: -4.096808910369873
    4. ' j' → logprob: -4.471808910369873
    5. '           ' → logprob: -9.721809387207031
    6. '	j' → logprob: -9.721809387207031
    7. '     ' → logprob: -10.596809387207031
    8. ' ' → logprob: -10.721809387207031
    9. '    ' → logprob: -10.971809387207031
    10. '      ' → logprob: -11.721809387207031

Token 361: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03162412717938423
    2. ' -=' → logprob: -3.5316240787506104
    3. '-' → logprob: -6.2816243171691895
    4. '=' → logprob: -13.656623840332031
    5. '+=' → logprob: -15.656623840332031
    6. ' -' → logprob: -16.53162384033203
    7. '   ' → logprob: -18.03162384033203
    8. ')' → logprob: -18.78162384033203
    9. '>' → logprob: -18.78162384033203
    10. '>=' → logprob: -18.90662384033203

Token 362: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '```' → logprob: -15.87650203704834
    4. '   ' → logprob: -17.501502990722656
    5. '0' → logprob: -18.376502990722656
    6. ' ' → logprob: -19.251502990722656
    7. '１' → logprob: -19.439002990722656
    8. '`' → logprob: -19.751502990722656
    9. '۱' → logprob: -20.376502990722656
    10. '	' → logprob: -20.751502990722656

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.750001907348633
    4. '0' → logprob: -18.062501907348633
    5. '-' → logprob: -19.875001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '3' → logprob: -20.312501907348633
    8. '01' → logprob: -20.500001907348633
    9. '10' → logprob: -20.562501907348633
    10. '2' → logprob: -20.562501907348633

Token 364: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021508578211069107
    2. ' for' → logprob: -6.252151012420654
    3. 'print' → logprob: -8.752150535583496
    4. '#' → logprob: -11.002150535583496
    5. '```' → logprob: -11.252150535583496
    6. ')' → logprob: -11.877150535583496
    7. '<|end|>' → logprob: -11.877150535583496
    8. '   ' → logprob: -12.377150535583496
    9. 'i' → logprob: -12.877150535583496
    10. '
' → logprob: -13.377150535583496

Token 365: '[' (ID: 58)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3306015716807451e-05
    2. ' for' → logprob: -11.25001335144043
    3. 'print' → logprob: -15.87501335144043
    4. '#' → logprob: -16.87501335144043
    5. '```' → logprob: -17.87501335144043
    6. ')' → logprob: -19.37501335144043
    7. 'from' → logprob: -19.62501335144043
    8. 'break' → logprob: -19.75001335144043
    9. 'import' → logprob: -20.12501335144043
    10. '   ' → logprob: -20.25001335144043

Token 366: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28167441487312317
    2. 'print' → logprob: -2.156674385070801
    3. 'y' → logprob: -3.156674385070801
    4. '[y' → logprob: -3.531674385070801
    5. 'row' → logprob: -4.406674385070801
    6. 'i' → logprob: -4.531674385070801
    7. ']' → logprob: -5.031674385070801
    8. '[' → logprob: -5.031674385070801
    9. '[i' → logprob: -5.156674385070801
    10. '0' → logprob: -5.406674385070801

Token 367: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0013586864806711674
    2. '("' → logprob: -7.251358509063721
    3. '('' → logprob: -7.501358509063721
    4. '(' → logprob: -9.376358985900879
    5. '(*(' → logprob: -12.126358985900879
    6. '(*)' → logprob: -12.876358985900879
    7. '*' → logprob: -13.501358985900879
    8. '((*' → logprob: -13.876358985900879
    9. ' (*' → logprob: -14.126358985900879
    10. '(
' → logprob: -15.876358985900879

Token 368: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.048631083220243454
    2. 'result' → logprob: -3.048631191253662
    3. 'line' → logprob: -10.673630714416504
    4. ' row' → logprob: -11.423630714416504
    5. 'r' → logprob: -11.923630714416504
    6. 'res' → logprob: -12.923630714416504
    7. '(row' → logprob: -16.17363166809082
    8. ' result' → logprob: -16.42363166809082
    9. '(result' → logprob: -16.67363166809082
    10. 'arr' → logprob: -16.92363166809082

Token 369: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.62500286102295
    3. '())' → logprob: -14.00000286102295
    4. ')
' → logprob: -15.50000286102295
    5. '()' → logprob: -16.000001907348633
    6. ')`' → logprob: -16.500001907348633
    7. '))' → logprob: -16.625001907348633
    8. '(' → logprob: -18.125001907348633
    9. '),' → logprob: -18.625001907348633
    10. '")' → logprob: -18.625001907348633

Token 370: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10563122481107712
    2. '()' → logprob: -2.355631113052368
    3. '())' → logprob: -5.230631351470947
    4. '(' → logprob: -9.980630874633789
    5. ' )' → logprob: -12.730630874633789
    6. ')
' → logprob: -13.105630874633789
    7. '()
' → logprob: -13.605630874633789
    8. '))' → logprob: -13.730630874633789
    9. '()]' → logprob: -13.730630874633789
    10. '```' → logprob: -14.605630874633789

Token 371: ' row' (ID: 5225)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0009117019944824278
    2. ' result' → logprob: -7.000911712646484
    3. 'row' → logprob: -15.500911712646484
    4. '(result' → logprob: -20.750911712646484
    5. '	result' → logprob: -21.250911712646484
    6. ' row' → logprob: -21.375911712646484
    7. ' ' → logprob: -21.750911712646484
    8. '$result' → logprob: -22.875911712646484
    9. '[result' → logprob: -22.875911712646484
    10. '=result' → logprob: -23.000911712646484

Token 372: ' in' (ID: 306)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5863043665885925
    2. ' in' → logprob: -1.4613044261932373
    3. 'in' → logprob: -1.7113044261932373
    4. ' result' → logprob: -3.5863044261932373
    5. '(result' → logprob: -5.711304187774658
    6. ']' → logprob: -11.086304664611816
    7. '_result' → logprob: -12.086304664611816
    8. ',result' → logprob: -12.086304664611816
    9. 's' → logprob: -12.211304664611816
    10. ')' → logprob: -12.461304664611816

Token 373: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0002613358374219388
    2. ' result' → logprob: -8.250261306762695
    3. '(result' → logprob: -20.000261306762695
    4. 'range' → logprob: -22.750261306762695
    5. 'results' → logprob: -24.125261306762695
    6. '	result' → logprob: -24.250261306762695
    7. '$result' → logprob: -24.250261306762695
    8. ' ' → logprob: -24.375261306762695
    9. '[result' → logprob: -24.375261306762695
    10. '_result' → logprob: -24.750261306762695

Token 374: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011915886716451496
    2. ')]' → logprob: -9.75011920928955
    3. '()]' → logprob: -10.12511920928955
    4. ' ]' → logprob: -10.87511920928955
    5. '];' → logprob: -14.37511920928955
    6. ']
' → logprob: -14.37511920928955
    7. '`]' → logprob: -15.25011920928955
    8. '>]' → logprob: -17.000118255615234
    9. '.]' → logprob: -17.125118255615234
    10. ']]' → logprob: -17.125118255615234


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 372
Tokens correctement prédits (1ère position, stricte): 162
Tokens correctement prédits (1ère position, avec adaptation): 183
Tokens correctement prédits (top 10): 333
Précision stricte (1ère position): 43.55%
Précision adaptée (1ère position): 49.19%
Précision (top 10): 89.52%
================================================================================
