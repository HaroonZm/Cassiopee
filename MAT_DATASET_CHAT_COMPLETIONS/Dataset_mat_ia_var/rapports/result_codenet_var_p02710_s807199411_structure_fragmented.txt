================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_input():
    return sys.stdin.readline().rstrip()

def read_int():
    return int(read_input())

def read_int_list():
    return list(map(int, read_input().split()))

def adjust_colors(raw_colors):
    return [a - 1 for a in raw_colors]

def init_adjacency_list(size):
    return [[] for _ in range(size)]

def read_edges(N, X):
    for _ in range(N - 1):
        add_edge(X, read_edge())

def read_edge():
    x, y = map(int, read_input().split())
    return x - 1, y - 1

def add_edge(X, edge):
    x, y = edge
    X[x].append(y)
    X[y].append(x)

def make_function_f():
    return lambda k: k * (k + 1) // 2

def make_USED(n):
    return [0] * n

def make_ORG(n):
    return [0] * n

def make_TMP(n):
    return [0] * n

def make_P(n):
    return [-1] * n

def make_ET1(n):
    return [0] * n

def make_ET2(n):
    return [0] * n

def make_ANS(n, f):
    return [f(n)] * n

def make_Q(i0):
    return [~i0, i0]

def should_skip_parent(a, parent):
    return a != parent

def remove_back_edge(X, a, parent):
    for k in range(len(X[a])):
        if X[a][k] == parent:
            del X[a][k]
            break

def visit_first_time(i, ET1, ct, ORG, USED, C, P):
    if i:
        ORG[i] = USED[C[P[i]]]
    ct[0] += 1  # list allows pass by reference
    if ET1[i] == 0:
        ET1[i] = ct[0]

def visit_second_time(i, ET2, ct, USED, TMP, C, P, ORG, ANS, f):
    ET2[i] = ct[0]
    USED[C[i]] += 1 + TMP[i]
    if i:
        p = P[i]
        k = ET2[i] - ET1[i] + 1 - USED[C[p]] + ORG[i]
        ANS[C[p]] -= f(k)
        TMP[p] += k

def process_child(X, i, P, Q):
    for a in X[i][::-1]:
        if a != P[i]:
            P[a] = i
            remove_back_edge(X, a, i)
            Q.append(~a)
            Q.append(a)

def finalize_ANS(n, ANS, USED, f):
    for i in range(n):
        ANS[i] -= f(n - USED[i])

def EulerTour(n, X, i0):
    f = make_function_f()
    USED = make_USED(n)
    ORG = make_ORG(n)
    TMP = make_TMP(n)
    P = make_P(n)
    Q = make_Q(i0)
    ct = [-1] # to allow pass by reference
    ET1 = make_ET1(n)
    ET2 = make_ET2(n)
    ANS = make_ANS(n, f)
    while Q:
        i = Q.pop()
        if i < 0:
            visit_second_time(~i, ET2, ct, USED, TMP, C, P, ORG, ANS, f)
            continue
        if i >= 0:
            visit_first_time(i, ET1, ct, ORG, USED, C, P)
        process_child(X, i, P, Q)
    finalize_ANS(n, ANS, USED, f)
    return ANS

def main():
    N = read_int()
    C_raw = read_int_list()
    global C
    C = adjust_colors(C_raw)
    X = init_adjacency_list(N)
    read_edges(N, X)
    ans = EulerTour(N, X, 0)
    print_result(ans)

def print_result(ans):
    for v in ans:
        print(v)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0531209371984005
    2. '\n' → logprob: -3.6781208515167236
    3. 'import' → logprob: -4.303121089935303
    4. '\' → logprob: -4.803121089935303
    5. '[' → logprob: -6.928121089935303
    6. '' → logprob: -7.303121089935303
    7. '```' → logprob: -7.553121089935303
    8. 'newline' → logprob: -7.553121089935303
    9. '#' → logprob: -7.928121089935303
    10. '<|end|>' → logprob: -8.053120613098145

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25461360812187195
    2. '_' → logprob: -1.5046136379241943
    3. ' (' → logprob: -6.629613399505615
    4. '_line' → logprob: -7.379613399505615
    5. '```' → logprob: -9.379613876342773
    6. ':' → logprob: -9.504613876342773
    7. ' ' → logprob: -9.629613876342773
    8. '_input' → logprob: -9.879613876342773
    9. 's' → logprob: -9.879613876342773
    10. '_data' → logprob: -10.004613876342773

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011192589066922665
    2. '_' → logprob: -4.636192798614502
    3. '():' → logprob: -7.136192798614502
    4. ' (' → logprob: -8.761192321777344
    5. '(_' → logprob: -9.261192321777344
    6. ':' → logprob: -9.886192321777344
    7. '```' → logprob: -9.886192321777344
    8. '(_:' → logprob: -9.886192321777344
    9. '):' → logprob: -10.636192321777344
    10. '_:' → logprob: -10.761192321777344

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7521213889122009
    2. '(' → logprob: -1.0021214485168457
    3. '\' → logprob: -3.3771214485168457
    4. '```' → logprob: -3.8771214485168457
    5. ' return' → logprob: -4.002121448516846
    6. '    ' → logprob: -4.127121448516846
    7. '    
' → logprob: -4.377121448516846
    8. '\n' → logprob: -4.877121448516846
    9. '(return' → logprob: -5.002121448516846
    10. '(
' → logprob: -5.002121448516846

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5003159642219543
    2. 'return' (adapté à ' return') → logprob: -1.2503159046173096
    3. ' return' → logprob: -3.5003159046173096
    4. ' ' → logprob: -3.5003159046173096
    5. 'data' → logprob: -3.7503159046173096
    6. 'input' → logprob: -4.625316143035889
    7. '    ' → logprob: -5.750316143035889
    8. 'r' → logprob: -6.000316143035889
    9. '```' → logprob: -6.875316143035889
    10. ' data' → logprob: -6.875316143035889

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.01425282470881939
    2. ' ' → logprob: -4.764252662658691
    3. ' input' → logprob: -5.764252662658691
    4. 'sys' → logprob: -6.139252662658691
    5. 'input' → logprob: -8.389252662658691
    6. ' int' → logprob: -9.639252662658691
    7. ' None' → logprob: -11.639252662658691
    8. ' ' → logprob: -12.139252662658691
    9. '  ' → logprob: -12.389252662658691
    10. 'int' → logprob: -12.514252662658691

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.030893119052052498
    2. '.stdin' → logprob: -3.655893087387085
    3. '.argv' → logprob: -5.655893325805664
    4. '.stdout' → logprob: -7.155893325805664
    5. '.readline' → logprob: -9.030893325805664
    6. ' .' → logprob: -9.155893325805664
    7. '.exit' → logprob: -10.905893325805664
    8. '.input' → logprob: -11.155893325805664
    9. '.import' → logprob: -11.405893325805664
    10. '.stderr' → logprob: -11.905893325805664

Token 11: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4414442181587219
    2. '.readline' → logprob: -1.1914441585540771
    3. '.read' → logprob: -2.941444158554077
    4. '.readlines' → logprob: -8.316444396972656
    5. 'read' → logprob: -10.441444396972656
    6. '.Read' → logprob: -10.566444396972656
    7. ' .' → logprob: -11.941444396972656
    8. '.write' → logprob: -12.441444396972656
    9. '.`' → logprob: -13.066444396972656
    10. '.READ' → logprob: -13.441444396972656

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002621551277115941
    2. '().' → logprob: -6.002621650695801
    3. '()
' → logprob: -10.1276216506958
    4. '()(' → logprob: -10.2526216506958
    5. ' ()' → logprob: -10.5026216506958
    6. '(' → logprob: -11.0026216506958
    7. '()\' → logprob: -12.1276216506958
    8. '()

' → logprob: -12.2526216506958
    9. '`()' → logprob: -12.5026216506958
    10. '())' → logprob: -12.8776216506958

Token 13: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0005533903022296727
    2. 'rstrip' → logprob: -7.500553607940674
    3. ' strip' → logprob: -15.250553131103516
    4. 'decode' → logprob: -16.750553131103516
    5. '_strip' → logprob: -16.750553131103516
    6. 'replace' → logprob: -17.875553131103516
    7. '```' → logprob: -18.250553131103516
    8. 'read' → logprob: -18.625553131103516
    9. '-strip' → logprob: -18.750553131103516
    10. '(strip' → logprob: -19.125553131103516

Token 14: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6942451596260071
    2. '()' → logprob: -0.6942451596260071
    3. '(\' → logprob: -7.694245338439941
    4. '(
' → logprob: -9.444245338439941
    5. '```' → logprob: -9.569245338439941
    6. ' ' → logprob: -9.819245338439941
    7. ')' → logprob: -9.819245338439941
    8. ' ()' → logprob: -9.944245338439941
    9. '`()' → logprob: -9.944245338439941
    10. ''' → logprob: -10.194245338439941

Token 15: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09371048957109451
    2. '\' → logprob: -3.843710422515869
    3. '\n' → logprob: -3.968710422515869
    4. '#' → logprob: -3.968710422515869
    5. '
' → logprob: -4.843710422515869
    6. '```' → logprob: -4.968710422515869
    7. '    
' → logprob: -5.468710422515869
    8. '  
' → logprob: -6.093710422515869
    9. '<|end|>' → logprob: -6.218710422515869
    10. '(' → logprob: -6.968710422515869

Token 16: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0922030657529831
    2. ' calculate' → logprob: -3.342203140258789
    3. ' process' → logprob: -3.842203140258789
    4. ' read' → logprob: -4.967203140258789
    5. ' write' → logprob: -4.967203140258789
    6. ' space' → logprob: -6.092203140258789
    7. ' solve' → logprob: -6.342203140258789
    8. ' ' → logprob: -6.342203140258789
    9. ' compute' → logprob: -6.592203140258789
    10. '_' → logprob: -6.592203140258789

Token 17: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.11532671004533768
    2. '_line' → logprob: -2.6153266429901123
    3. '_' → logprob: -3.6153266429901123
    4. '_input' → logprob: -5.365326881408691
    5. '_list' → logprob: -7.115326881408691
    6. '_word' → logprob: -7.115326881408691
    7. '_token' → logprob: -7.865326881408691
    8. '_integer' → logprob: -7.990326881408691
    9. 'int' → logprob: -8.115326881408691
    10. '()' → logprob: -8.115326881408691

Token 18: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.25336894392967224
    2. '()' → logprob: -1.5033689737319946
    3. ' ()' → logprob: -8.003369331359863
    4. '(' → logprob: -8.503369331359863
    5. '():
' → logprob: -8.753369331359863
    6. 's' → logprob: -9.628369331359863
    7. ']()' → logprob: -9.628369331359863
    8. '`()' → logprob: -9.628369331359863
    9. '```' → logprob: -9.753369331359863
    10. '()">' → logprob: -9.878369331359863

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26898637413978577
    2. ' return' → logprob: -1.6439863443374634
    3. 'return' → logprob: -4.268986225128174
    4. 'int' → logprob: -4.643986225128174
    5. '()' → logprob: -5.393986225128174
    6. ' int' → logprob: -5.643986225128174
    7. '  ' → logprob: -5.893986225128174
    8. '(int' → logprob: -6.018986225128174
    9. '    ' → logprob: -6.268986225128174
    10. ' ' → logprob: -6.518986225128174

Token 20: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03937698155641556
    2. 'return' (adapté à ' return') → logprob: -3.664376974105835
    3. ' int' → logprob: -5.039377212524414
    4. 'int' → logprob: -5.164377212524414
    5. '   ' → logprob: -7.164377212524414
    6. ' ' → logprob: -11.664377212524414
    7. '    ' → logprob: -11.914377212524414
    8. '  ' → logprob: -13.289377212524414
    9. 'eturn' → logprob: -13.289377212524414
    10. '    
' → logprob: -14.039377212524414

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0006058142753317952
    2. 'int' → logprob: -7.750605583190918
    3. '(int' → logprob: -8.750605583190918
    4. ' ' → logprob: -11.125605583190918
    5. ' in' → logprob: -13.500605583190918
    6. '  ' → logprob: -15.250605583190918
    7. '<int' → logprob: -16.125606536865234
    8. '(' → logprob: -16.375606536865234
    9. '   ' → logprob: -16.750606536865234
    10. '[int' → logprob: -16.750606536865234

Token 22: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014669344760477543
    2. '(read' → logprob: -4.514669418334961
    3. '(sys' → logprob: -5.639669418334961
    4. '(
' → logprob: -10.514669418334961
    5. '(

' → logprob: -12.014669418334961
    6. '(s' → logprob: -12.639669418334961
    7. '('' → logprob: -13.014669418334961
    8. '(input' → logprob: -13.139669418334961
    9. '(Read' → logprob: -13.139669418334961
    10. '()' → logprob: -13.264669418334961

Token 23: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0023054813500493765
    2. '_int' → logprob: -6.627305507659912
    3. '_' → logprob: -7.377305507659912
    4. '_line' → logprob: -8.127305030822754
    5. '_in' → logprob: -10.377305030822754
    6. '_i' → logprob: -12.127305030822754
    7. '_put' → logprob: -12.252305030822754
    8. ' _' → logprob: -12.627305030822754
    9. '_token' → logprob: -13.377305030822754
    10. '_str' → logprob: -13.502305030822754

Token 24: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019383925246074796
    2. '()' → logprob: -6.251938343048096
    3. '()))' → logprob: -12.501938819885254
    4. '())
' → logprob: -13.001938819885254
    5. ')' → logprob: -13.001938819885254
    6. ' ())' → logprob: -14.251938819885254
    7. '();)' → logprob: -15.251938819885254
    8. '()]' → logprob: -15.876938819885254
    9. '()),' → logprob: -16.001937866210938
    10. '())

' → logprob: -16.376937866210938

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010628487507347018
    2. '\' → logprob: -10.125105857849121
    3. 'class' → logprob: -10.500105857849121
    4. '

' → logprob: -11.375105857849121
    5. '#' → logprob: -11.625105857849121
    6. '
' → logprob: -12.000105857849121
    7. '```' → logprob: -12.375105857849121
    8. '<|end|>' → logprob: -13.500105857849121
    9. 'n' → logprob: -14.000105857849121
    10. ' def' → logprob: -14.000105857849121

Token 26: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.1028660237789154
    2. ' write' → logprob: -2.4778659343719482
    3. 'read' → logprob: -4.727866172790527
    4. ' main' → logprob: -5.852866172790527
    5. 'write' → logprob: -6.602866172790527
    6. ' def' → logprob: -9.102866172790527
    7. ' ' → logprob: -9.227866172790527
    8. ' sum' → logprob: -9.477866172790527
    9. ' print' → logprob: -9.727866172790527
    10. ' calculate' → logprob: -9.852866172790527

Token 27: '_int' (ID: 12285)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.7251500487327576
    2. '_line' → logprob: -1.2251501083374023
    3. '_' → logprob: -2.1001501083374023
    4. '_int' → logprob: -2.7251501083374023
    5. '_array' → logprob: -4.100150108337402
    6. '_str' → logprob: -5.225150108337402
    7. '_float' → logprob: -5.225150108337402
    8. '_string' → logprob: -6.350150108337402
    9. 's' → logprob: -6.975150108337402
    10. '_tuple' → logprob: -7.100150108337402

Token 28: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6691746115684509
    2. '_array' → logprob: -1.4191746711730957
    3. '_list' → logprob: -1.4191746711730957
    4. '()' → logprob: -6.294174671173096
    5. '_s' → logprob: -6.544174671173096
    6. '_line' → logprob: -8.419174194335938
    7. '_' → logprob: -8.919174194335938
    8. '_vector' → logprob: -9.294174194335938
    9. 'list' → logprob: -9.669174194335938
    10. '_lst' → logprob: -9.794174194335938

Token 29: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07009237259626389
    2. '()' → logprob: -2.6950924396514893
    3. '():
' → logprob: -10.32009220123291
    4. '(' → logprob: -10.69509220123291
    5. '()>' → logprob: -11.07009220123291
    6. '()">' → logprob: -11.19509220123291
    7. '()*' → logprob: -11.44509220123291
    8. '()]' → logprob: -11.57009220123291
    9. ' ()' → logprob: -11.69509220123291
    10. '():

' → logprob: -12.07009220123291

Token 30: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5773793458938599
    2. '():' → logprob: -0.8273793458938599
    3. ' ()' → logprob: -7.20237922668457
    4. '():
' → logprob: -8.07737922668457
    5. '   ' → logprob: -8.57737922668457
    6. '()[' → logprob: -9.95237922668457
    7. ' ():' → logprob: -10.57737922668457
    8. '(' → logprob: -10.70237922668457
    9. 'return' → logprob: -11.07737922668457
    10. '().' → logprob: -11.07737922668457

Token 31: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38347017765045166
    2. ' return' → logprob: -1.3834701776504517
    3. '   ' → logprob: -2.758470058441162
    4. '()' → logprob: -6.258470058441162
    5. 'list' → logprob: -6.883470058441162
    6. ' list' → logprob: -7.758470058441162
    7. ' ' → logprob: -7.758470058441162
    8. '  ' → logprob: -8.88347053527832
    9. ')' → logprob: -9.63347053527832
    10. '()
' → logprob: -9.63347053527832

Token 32: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1634356826543808
    2. 'list' → logprob: -1.913435697555542
    3. '[list' → logprob: -5.788435459136963
    4. '[' → logprob: -9.538435935974121
    5. ' [' → logprob: -9.663435935974121
    6. '(list' → logprob: -12.538435935974121
    7. '[int' → logprob: -13.663435935974121
    8. ' ' → logprob: -13.663435935974121
    9. '	list' → logprob: -14.413435935974121
    10. '[len' → logprob: -14.913435935974121

Token 33: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02978474460542202
    2. '(' → logprob: -3.529784679412842
    3. '(int' → logprob: -11.15478515625
    4. '(read' → logprob: -11.40478515625
    5. '(

' → logprob: -13.02978515625
    6. '(range' → logprob: -13.15478515625
    7. '(eval' → logprob: -14.15478515625
    8. '_map' → logprob: -14.15478515625
    9. '(
' → logprob: -14.27978515625
    10. '(filter' → logprob: -14.52978515625

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00765975471585989
    2. '(' → logprob: -4.882659912109375
    3. 'int' → logprob: -10.632659912109375
    4. ')' → logprob: -11.007659912109375
    5. '<int' → logprob: -12.507659912109375
    6. '(
' → logprob: -13.257659912109375
    7. ',int' → logprob: -13.382659912109375
    8. '[int' → logprob: -13.632659912109375
    9. ')(' → logprob: -13.882659912109375
    10. '```' → logprob: -13.882659912109375

Token 35: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.03734695166349411
    2. '(' → logprob: -3.662346839904785
    3. ',' → logprob: -4.537346839904785
    4. 'read' → logprob: -9.162346839904785
    5. ')' → logprob: -10.037346839904785
    6. ' (' → logprob: -10.287346839904785
    7. ' ,' → logprob: -11.287346839904785
    8. '),' → logprob: -11.412346839904785
    9. ' read' → logprob: -11.412346839904785
    10. ',(' → logprob: -11.537346839904785

Token 36: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0297551192343235
    2. ' read' → logprob: -3.529755115509033
    3. '(read' → logprob: -13.154755592346191
    4. '	read' → logprob: -13.279755592346191
    5. '   ' → logprob: -14.279755592346191
    6. ' ' → logprob: -15.279755592346191
    7. ' readline' → logprob: -16.779754638671875
    8. '  ' → logprob: -16.904754638671875
    9. '.read' → logprob: -17.404754638671875
    10. '```' → logprob: -17.904754638671875

Token 37: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0004336493439041078
    2. '_int' → logprob: -7.750433444976807
    3. '_in' → logprob: -13.625433921813965
    4. ' _' → logprob: -15.125433921813965
    5. ')_' → logprob: -15.250433921813965
    6. '```' → logprob: -15.375433921813965
    7. '_str' → logprob: -15.750433921813965
    8. '_line' → logprob: -15.750433921813965
    9. '(_' → logprob: -16.00043296813965
    10. '_inputs' → logprob: -16.75043296813965

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.9153885558771435e-06
    2. '()))' → logprob: -13.375005722045898
    3. '()' → logprob: -13.500005722045898
    4. '))' → logprob: -13.875005722045898
    5. ' ().' → logprob: -14.125005722045898
    6. ')' → logprob: -14.750005722045898
    7. '.split' → logprob: -15.875005722045898
    8. '   ' → logprob: -16.0000057220459
    9. '.' → logprob: -16.2500057220459
    10. '()
' → logprob: -16.2500057220459

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002238013403257355
    2. 'strip' → logprob: -8.500224113464355
    3. 'rstrip' → logprob: -11.000224113464355
    4. ' split' → logprob: -12.625224113464355
    5. '(split' → logprob: -15.500224113464355
    6. '.split' → logprob: -17.25022315979004
    7. 's' → logprob: -17.87522315979004
    8. 'spl' → logprob: -18.25022315979004
    9. '```' → logprob: -18.62522315979004
    10. ')' → logprob: -19.00022315979004

Token 40: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13517750799655914
    2. '))' → logprob: -2.1351776123046875
    3. '()' → logprob: -5.2601776123046875
    4. '())' → logprob: -6.0101776123046875
    5. ')' → logprob: -8.135177612304688
    6. ')))' → logprob: -8.760177612304688
    7. '())))' → logprob: -9.885177612304688
    8. '(' → logprob: -10.010177612304688
    9. '()))
' → logprob: -11.135177612304688
    10. '()))

' → logprob: -13.385177612304688

Token 41: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01386211346834898
    2. 'd' → logprob: -4.888862133026123
    3. 'class' → logprob: -6.763862133026123
    4. '#' → logprob: -6.763862133026123
    5. 'n' → logprob: -6.888862133026123
    6. '\' → logprob: -7.138862133026123
    7. '
' → logprob: -7.263862133026123
    8. '

' → logprob: -7.638862133026123
    9. '```' → logprob: -7.763862133026123
    10. '' → logprob: -8.638861656188965

Token 42: ' adjust' (ID: 10266)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.7938464283943176
    2. ' main' → logprob: -1.0438463687896729
    3. ' write' → logprob: -3.168846368789673
    4. ' count' → logprob: -3.668846368789673
    5. ' read' → logprob: -3.793846368789673
    6. ' calculate' → logprob: -3.918846368789673
    7. ' binary' → logprob: -4.418846607208252
    8. ' is' → logprob: -4.418846607208252
    9. ' factorial' → logprob: -4.418846607208252
    10. 'solve' → logprob: -4.918846607208252

Token 43: '_colors' (ID: 79137)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11446454375982285
    2. '_value' → logprob: -2.739464521408081
    3. '_size' → logprob: -4.61446475982666
    4. 'ed' → logprob: -4.86446475982666
    5. '_array' → logprob: -4.86446475982666
    6. 'ment' → logprob: -6.86446475982666
    7. '_number' → logprob: -6.98946475982666
    8. '_val' → logprob: -7.11446475982666
    9. '_column' → logprob: -7.23946475982666
    10. '_(' → logprob: -7.36446475982666

Token 44: '(raw' (ID: 46707)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002499086782336235
    2. '()' → logprob: -7.627499103546143
    3. '(_' → logprob: -8.002498626708984
    4. '(color' → logprob: -8.127498626708984
    5. '_colors' → logprob: -8.377498626708984
    6. ' (' → logprob: -9.002498626708984
    7. '((' → logprob: -9.127498626708984
    8. '_color' → logprob: -9.127498626708984
    9. '_(' → logprob: -9.252498626708984
    10. '_' → logprob: -9.377498626708984

Token 45: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.0389927513897419
    2. '_' → logprob: -4.163992881774902
    3. '_color' → logprob: -4.663992881774902
    4. ')_' → logprob: -5.163992881774902
    5. ')' → logprob: -5.788992881774902
    6. '_data' → logprob: -6.413992881774902
    7. '_input' → logprob: -6.788992881774902
    8. '_string' → logprob: -8.288992881774902
    9. '_text' → logprob: -8.538992881774902
    10. '_)' → logprob: -8.538992881774902

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016295114532113075
    2. ',' → logprob: -4.266294956207275
    3. ')' → logprob: -6.516294956207275
    4. ' ):' → logprob: -8.266295433044434
    5. '[' → logprob: -8.516295433044434
    6. ' ' → logprob: -10.141295433044434
    7. ' ,' → logprob: -10.391295433044434
    8. ':' → logprob: -10.891295433044434
    9. '[]):' → logprob: -11.266295433044434
    10. '_list' → logprob: -11.391295433044434

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17644086480140686
    2. ':' → logprob: -2.426440954208374
    3. '(' → logprob: -3.051440954208374
    4. '[' → logprob: -4.051440715789795
    5. '[:]' → logprob: -6.676440715789795
    6. '(colors' → logprob: -6.801440715789795
    7. '_colors' → logprob: -7.051440715789795
    8. '    ' → logprob: -7.426440715789795
    9. '):' → logprob: -7.551440715789795
    10. ' ' → logprob: -7.551440715789795

Token 48: ' return' (ID: 622)
  Prédit: ' adjusted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjusted' → logprob: -0.9205394387245178
    2. ' colors' → logprob: -1.420539379119873
    3. ' return' → logprob: -1.670539379119873
    4. '   ' → logprob: -2.045539379119873
    5. 'colors' → logprob: -3.795539379119873
    6. '    ' → logprob: -5.295539379119873
    7. 'return' (adapté à ' return') → logprob: -5.545539379119873
    8. 'adjust' → logprob: -5.545539379119873
    9. ' corrected' → logprob: -6.670539379119873
    10. ' ' → logprob: -6.670539379119873

Token 49: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0807989165186882
    2. '[' → logprob: -2.580798864364624
    3. '[list' → logprob: -7.580799102783203
    4. ' list' → logprob: -7.955799102783203
    5. ' [(' → logprob: -8.580799102783203
    6. '[len' → logprob: -8.580799102783203
    7. ' ' → logprob: -8.705799102783203
    8. ' raw' → logprob: -8.955799102783203
    9. '[:]' → logprob: -10.080799102783203
    10. '[(' → logprob: -10.205799102783203

Token 50: 'a' (ID: 64)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.6257926225662231
    2. 'c' → logprob: -1.8757926225662231
    3. 'max' → logprob: -2.0007925033569336
    4. 'min' → logprob: -2.3757925033569336
    5. 'x' → logprob: -4.000792503356934
    6. '(color' → logprob: -4.250792503356934
    7. 'raw' → logprob: -4.750792503356934
    8. '(c' → logprob: -4.875792503356934
    9. ' color' → logprob: -5.375792503356934
    10. 'int' → logprob: -5.375792503356934

Token 51: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4530986547470093
    2. '+' → logprob: -1.5780986547470093
    3. ' -' → logprob: -3.578098773956299
    4. 'dj' → logprob: -3.578098773956299
    5. ' *' → logprob: -4.078098773956299
    6. '-' → logprob: -4.078098773956299
    7. '+b' → logprob: -4.078098773956299
    8. ' //' → logprob: -4.453098773956299
    9. '*' → logprob: -4.828098773956299
    10. 'dd' → logprob: -5.328098773956299

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.225449338555336
    2. ' ' → logprob: -1.6004493236541748
    3. 'b' → logprob: -11.600449562072754
    4. '2' → logprob: -12.287949562072754
    5. 'a' → logprob: -13.412949562072754
    6. '=' → logprob: -13.412949562072754
    7. '0' → logprob: -13.475449562072754
    8. '7' → logprob: -13.600449562072754
    9. '6' → logprob: -13.912949562072754
    10. '[' → logprob: -13.975449562072754

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001955275423824787
    2. 'b' → logprob: -7.376955509185791
    3. 'raw' → logprob: -8.626955032348633
    4. ' ' → logprob: -8.876955032348633
    5. '2' → logprob: -9.001955032348633
    6. 'c' → logprob: -9.251955032348633
    7. '128' → logprob: -9.376955032348633
    8. '0' → logprob: -9.501955032348633
    9. '100' → logprob: -10.001955032348633
    10. '10' → logprob: -10.126955032348633

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03387527912855148
    2. 'for' → logprob: -3.4088752269744873
    3. ')' → logprob: -8.783875465393066
    4. ',' → logprob: -10.033875465393066
    5. ' ' → logprob: -10.908875465393066
    6. ']' → logprob: -12.533875465393066
    7. '	for' → logprob: -12.533875465393066
    8. ' if' → logprob: -13.033875465393066
    9. 'color' → logprob: -14.283875465393066
    10. ' in' → logprob: -14.408875465393066

Token 55: ' a' (ID: 261)
  Prédit: ' raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.21100598573684692
    2. ' a' → logprob: -1.7110059261322021
    3. 'raw' → logprob: -4.711006164550781
    4. 'a' → logprob: -7.711006164550781
    5. ' ' → logprob: -10.336006164550781
    6. '	raw' → logprob: -10.836006164550781
    7. '(raw' → logprob: -11.336006164550781
    8. ' color' → logprob: -11.461006164550781
    9. '_raw' → logprob: -11.461006164550781
    10. ' x' → logprob: -12.086006164550781

Token 56: ' in' (ID: 306)
  Prédit: ' raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.31962329149246216
    2. ' in' → logprob: -1.3196232318878174
    3. 'raw' → logprob: -5.1946234703063965
    4. ' ' → logprob: -7.4446234703063965
    5. '(raw' → logprob: -9.069622993469238
    6. '	raw' → logprob: -10.069622993469238
    7. 'in' → logprob: -10.819622993469238
    8. '_raw' → logprob: -11.069622993469238
    9. '_' → logprob: -11.944622993469238
    10. ')' → logprob: -13.069622993469238

Token 57: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.5759410262107849
    2. ' raw' → logprob: -0.8259410262107849
    3. '	raw' → logprob: -14.07594108581543
    4. '(raw' → logprob: -14.32594108581543
    5. '_raw' → logprob: -16.20094108581543
    6. '.raw' → logprob: -16.32594108581543
    7. '/raw' → logprob: -17.82594108581543
    8. 'rawl' → logprob: -19.45094108581543
    9. ' raws' → logprob: -19.57594108581543
    10. 'Raw' → logprob: -19.95094108581543

Token 58: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -6.869017852295656e-06
    2. '_color' → logprob: -12.375006675720215
    3. 'colors' → logprob: -13.750006675720215
    4. '_' → logprob: -13.750006675720215
    5. '_c' → logprob: -15.625006675720215
    6. ')_' → logprob: -16.12500762939453
    7. '_col' → logprob: -16.50000762939453
    8. '_codes' → logprob: -17.00000762939453
    9. ']_' → logprob: -17.37500762939453
    10. '```' → logprob: -17.37500762939453

Token 59: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -9.555654105497524e-05
    2. ' ]' → logprob: -9.37509536743164
    3. ')]' → logprob: -11.62509536743164
    4. ']
' → logprob: -13.62509536743164
    5. '()]' → logprob: -15.12509536743164
    6. ')' → logprob: -15.87509536743164
    7. '])' → logprob: -16.62509536743164
    8. '']' → logprob: -16.87509536743164
    9. '`]' → logprob: -17.62509536743164
    10. ']}' → logprob: -17.75009536743164

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042088449001312256
    2. '<|end|>' → logprob: -4.042088508605957
    3. 'class' → logprob: -4.542088508605957
    4. '
' → logprob: -4.667088508605957
    5. '```' → logprob: -6.667088508605957
    6. '<|end|>' → logprob: -7.417088508605957
    7. '#' → logprob: -7.667088508605957
    8. 'import' → logprob: -7.792088508605957
    9. 'colors' → logprob: -8.542088508605957
    10. '[' → logprob: -8.792088508605957

Token 61: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.047636691480875015
    2. ' solve' → logprob: -3.9226367473602295
    3. 'main' → logprob: -5.04763650894165
    4. ' count' → logprob: -5.67263650894165
    5. ' build' → logprob: -5.79763650894165
    6. ' color' → logprob: -6.04763650894165
    7. ' dfs' → logprob: -6.17263650894165
    8. ' calculate' → logprob: -6.42263650894165
    9. ' is' → logprob: -6.79763650894165
    10. ' compute' → logprob: -7.04763650894165

Token 62: '_ad' (ID: 23782)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.07812472432851791
    2. '_' → logprob: -3.703124761581421
    3. '_graph' → logprob: -3.828124761581421
    4. '_color' → logprob: -4.703124523162842
    5. '(' → logprob: -5.953124523162842
    6. '_tree' → logprob: -6.078124523162842
    7. '_array' → logprob: -6.328124523162842
    8. '_cap' → logprob: -6.828124523162842
    9. '_data' → logprob: -7.078124523162842
    10. '_(' → logprob: -7.078124523162842

Token 63: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12710145115852356
    2. 'jac' → logprob: -2.127101421356201
    3. 'acency' → logprob: -9.37710189819336
    4. 'js' → logprob: -10.00210189819336
    5. '_j' → logprob: -10.87710189819336
    6. 'ja' → logprob: -12.12710189819336
    7. '_list' → logprob: -13.12710189819336
    8. 'J' → logprob: -13.12710189819336
    9. 'jc' → logprob: -13.12710189819336
    10. '[j' → logprob: -13.25210189819336

Token 64: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0034685709979385138
    2. 'acency' → logprob: -5.7534685134887695
    3. '```' → logprob: -8.87846851348877
    4. 'encies' → logprob: -9.75346851348877
    5. '   ' → logprob: -10.50346851348877
    6. 'ancy' → logprob: -11.25346851348877
    7. 'encv' → logprob: -12.37846851348877
    8. '[' → logprob: -12.37846851348877
    9. '{' → logprob: -12.50346851348877
    10. '_list' → logprob: -12.50346851348877

Token 65: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0035074150655418634
    2. '_matrix' → logprob: -6.253507614135742
    3. '_' → logprob: -6.878507614135742
    4. '(' → logprob: -8.253507614135742
    5. '_lists' → logprob: -8.253507614135742
    6. '_array' → logprob: -11.878507614135742
    7. 'list' → logprob: -12.503507614135742
    8. '(_' → logprob: -12.753507614135742
    9. '```' → logprob: -12.878507614135742
    10. 'List' → logprob: -13.128507614135742

Token 66: '(size' (ID: 15192)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.030942242592573166
    2. '(num' → logprob: -4.155942440032959
    3. '(' → logprob: -4.530942440032959
    4. '(size' → logprob: -5.780942440032959
    5. '(node' → logprob: -7.655942440032959
    6. '(number' → logprob: -8.5309419631958
    7. ' (' → logprob: -9.0309419631958
    8. '(N' → logprob: -9.9059419631958
    9. '():' → logprob: -10.4059419631958
    10. '(nodes' → logprob: -10.9059419631958

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005442153196781874
    2. '):
' → logprob: -8.250544548034668
    3. ' ):' → logprob: -8.750544548034668
    4. ')' → logprob: -9.250544548034668
    5. ':' → logprob: -11.750544548034668
    6. '):
' → logprob: -12.250544548034668
    7. '():' → logprob: -12.500544548034668
    8. '=' → logprob: -12.750544548034668
    9. ',' → logprob: -12.750544548034668
    10. '   ' → logprob: -13.375544548034668

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6656339168548584
    2. '[]' → logprob: -1.5406339168548584
    3. ':' → logprob: -2.1656339168548584
    4. '():' → logprob: -2.9156339168548584
    5. ' =' → logprob: -3.6656339168548584
    6. ' []' → logprob: -4.1656341552734375
    7. '=[]' → logprob: -4.7906341552734375
    8. ' [[]' → logprob: -4.7906341552734375
    9. '[' → logprob: -4.9156341552734375
    10. '[:]' → logprob: -5.0406341552734375

Token 69: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7907565832138062
    2. ' [[]' → logprob: -0.7907565832138062
    3. '[]' → logprob: -3.2907567024230957
    4. 'return' (adapté à ' return') → logprob: -3.6657567024230957
    5. ' [' → logprob: -4.040756702423096
    6. ' return' → logprob: -4.415756702423096
    7. ' []' → logprob: -8.790756225585938
    8. '[:]' → logprob: -9.165756225585938
    9. '[
' → logprob: -9.290756225585938
    10. '[]
' → logprob: -10.540756225585938

Token 70: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004079470410943031
    2. ' [[]' → logprob: -5.504079341888428
    3. '[]' → logprob: -14.129079818725586
    4. '[[' → logprob: -15.754079818725586
    5. '[:]' → logprob: -16.879079818725586
    6. ' [' → logprob: -17.254079818725586
    7. '   ' → logprob: -17.504079818725586
    8. '[n' → logprob: -17.879079818725586
    9. '{' → logprob: -18.504079818725586
    10. '[['' → logprob: -18.754079818725586

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.388070285320282
    2. 'for' → logprob: -1.1380703449249268
    3. ')' → logprob: -6.763070106506348
    4. ' ' → logprob: -10.638070106506348
    5. ']' → logprob: -11.763070106506348
    6. '	for' → logprob: -12.263070106506348
    7. '   ' → logprob: -12.763070106506348
    8. 'f' → logprob: -13.888070106506348
    9. ' ' → logprob: -14.888070106506348
    10. ',' → logprob: -15.013070106506348

Token 72: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08894611895084381
    2. '_' → logprob: -2.4639461040496826
    3. ' ' → logprob: -13.088946342468262
    4. ' i' → logprob: -13.338946342468262
    5. ' in' → logprob: -13.838946342468262
    6. '_i' → logprob: -14.088946342468262
    7. '<|end|>' → logprob: -15.088946342468262
    8. 'i' → logprob: -15.713946342468262
    9. '_in' → logprob: -15.713946342468262
    10. ' ' → logprob: -15.713946342468262

Token 73: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48308265209198
    2. ' in' → logprob: -0.98308265209198
    3. 'range' → logprob: -4.7330827713012695
    4. ' range' → logprob: -10.48308277130127
    5. ' ' → logprob: -10.60808277130127
    6. 'ange' → logprob: -10.60808277130127
    7. 'i' → logprob: -10.73308277130127
    8. 'n' → logprob: -11.10808277130127
    9. '_' → logprob: -11.48308277130127
    10. 'size' → logprob: -11.85808277130127

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011059612035751343
    2. ' range' → logprob: -4.511059761047363
    3. '(range' → logprob: -11.386059761047363
    4. '	range' → logprob: -15.011059761047363
    5. ')' → logprob: -16.011058807373047
    6. 'size' → logprob: -17.011058807373047
    7. ' ' → logprob: -17.511058807373047
    8. '   ' → logprob: -18.011058807373047
    9. ']' → logprob: -18.261058807373047
    10. ' xrange' → logprob: -18.386058807373047

Token 75: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -3.1424973713001236e-05
    2. '(' → logprob: -10.375031471252441
    3. ' (' → logprob: -16.750030517578125
    4. '=size' → logprob: -17.500030517578125
    5. ',size' → logprob: -17.625030517578125
    6. '(s' → logprob: -17.625030517578125
    7. '<size' → logprob: -18.250030517578125
    8. '(Size' → logprob: -18.500030517578125
    9. '(len' → logprob: -18.875030517578125
    10. ')(' → logprob: -19.250030517578125

Token 76: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.13388703338569e-06
    2. ')' → logprob: -11.750009536743164
    3. ']' → logprob: -14.375009536743164
    4. ')]
' → logprob: -14.875009536743164
    5. ')])' → logprob: -16.500009536743164
    6. ')}' → logprob: -16.750009536743164
    7. '))' → logprob: -17.250009536743164
    8. ' )' → logprob: -17.375009536743164
    9. ')].' → logprob: -17.750009536743164
    10. ')],' → logprob: -17.750009536743164

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00856918003410101
    2. '

' → logprob: -5.258569240570068
    3. '
' → logprob: -5.883569240570068
    4. '```' → logprob: -8.63356876373291
    5. 'class' → logprob: -8.88356876373291
    6. '<|end|>' → logprob: -9.13356876373291
    7. '
' → logprob: -10.38356876373291
    8. '\' → logprob: -10.50856876373291
    9. '<|end|>' → logprob: -11.00856876373291
    10. ' def' → logprob: -11.25856876373291

Token 78: ' read' (ID: 1729)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.8531888723373413
    2. ' main' → logprob: -1.2281888723373413
    3. ' build' → logprob: -1.9781888723373413
    4. ' dfs' → logprob: -2.978188991546631
    5. ' read' → logprob: -3.603188991546631
    6. ' solve' → logprob: -4.228188991546631
    7. 'add' → logprob: -4.478188991546631
    8. 'main' → logprob: -4.728188991546631
    9. 'dfs' → logprob: -4.853188991546631
    10. ' bfs' → logprob: -5.103188991546631

Token 79: '_edges' (ID: 68870)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.9406508803367615
    2. '_edges' → logprob: -1.0656509399414062
    3. '_graph' → logprob: -1.4406509399414062
    4. '_edge' → logprob: -5.190650939941406
    5. '_' → logprob: -5.315650939941406
    6. '_nodes' → logprob: -5.315650939941406
    7. '_data' → logprob: -5.565650939941406
    8. '_input' → logprob: -6.315650939941406
    9. '()' → logprob: -7.315650939941406
    10. '_n' → logprob: -7.440650939941406

Token 80: '(N' (ID: 10564)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.005517615471035242
    2. '(n' → logprob: -5.380517482757568
    3. '(' → logprob: -7.630517482757568
    4. '(num' → logprob: -8.130517959594727
    5. '(number' → logprob: -9.755517959594727
    6. '(count' → logprob: -10.380517959594727
    7. '():' → logprob: -10.880517959594727
    8. ' (' → logprob: -12.005517959594727
    9. '(N' → logprob: -13.880517959594727
    10. '(node' → logprob: -14.505517959594727

Token 81: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013214307837188244
    2. '):
' → logprob: -7.126321315765381
    3. ' ):' → logprob: -7.876321315765381
    4. ')' → logprob: -9.001321792602539
    5. ',' → logprob: -11.751321792602539
    6. '):
' → logprob: -12.501321792602539
    7. '=' → logprob: -14.876321792602539
    8. '   ' → logprob: -14.876321792602539
    9. ':' → logprob: -15.626321792602539
    10. '-' → logprob: -15.626321792602539

Token 82: ' X' (ID: 2127)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6443058252334595
    2. ' M' → logprob: -1.3943058252334595
    3. ' adjacency' → logprob: -2.39430570602417
    4. ' edges' → logprob: -2.89430570602417
    5. 'adj' → logprob: -2.89430570602417
    6. 'edges' → logprob: -4.01930570602417
    7. ' adj' → logprob: -6.01930570602417
    8. ' edge' → logprob: -7.51930570602417
    9. 'edge' → logprob: -7.51930570602417
    10. 'E' → logprob: -7.76930570602417

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02765561267733574
    2. ',' → logprob: -3.777655601501465
    3. '):
' → logprob: -5.652655601501465
    4. ')' → logprob: -7.402655601501465
    5. ' ):' → logprob: -9.402655601501465
    6. '):
' → logprob: -9.652655601501465
    7. '=' → logprob: -10.402655601501465
    8. '_' → logprob: -11.027655601501465
    9. '_edges' → logprob: -11.277655601501465
    10. '1' → logprob: -11.402655601501465

Token 84: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16169524192810059
    2. '   ' → logprob: -2.6616952419281006
    3. '):' → logprob: -2.7866952419281006
    4. '<|end|>' → logprob: -5.41169548034668
    5. '():' → logprob: -6.03669548034668
    6. ':
' → logprob: -6.16169548034668
    7. '.readlines' → logprob: -6.66169548034668
    8. ',' → logprob: -7.03669548034668
    9. '```' → logprob: -7.16169548034668
    10. '):
' → logprob: -7.28669548034668

Token 85: ' for' (ID: 395)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2576046586036682
    2. ' edges' → logprob: -2.0076045989990234
    3. '   ' → logprob: -2.3826045989990234
    4. '_edges' → logprob: -8.882604598999023
    5. '(edges' → logprob: -9.757604598999023
    6. 'edge' → logprob: -9.882604598999023
    7. 'for' (adapté à ' for') → logprob: -9.882604598999023
    8. '```' → logprob: -10.257604598999023
    9. '    
' → logprob: -10.882604598999023
    10. 'ed' → logprob: -10.882604598999023

Token 86: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0011314053554087877
    2. '_' → logprob: -6.876131534576416
    3. ' i' → logprob: -9.251131057739258
    4. ' ' → logprob: -12.876131057739258
    5. '_i' → logprob: -17.251131057739258
    6. ' ' → logprob: -17.501131057739258
    7. 'i' → logprob: -18.501131057739258
    8. ' ‌' → logprob: -18.751131057739258
    9. ' x' → logprob: -19.251131057739258
    10. ' range' → logprob: -19.876131057739258

Token 87: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1830330789089203
    2. ' in' → logprob: -1.8080331087112427
    3. 'n' → logprob: -6.058032989501953
    4. ' ' → logprob: -7.433032989501953
    5. '_' → logprob: -9.183032989501953
    6. ' _' → logprob: -9.558032989501953
    7. '  ' → logprob: -10.308032989501953
    8. 'x' → logprob: -10.558032989501953
    9. ' n' → logprob: -10.683032989501953
    10. 'range' → logprob: -10.683032989501953

Token 88: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25326088070869446
    2. ' range' → logprob: -1.503260850906372
    3. 'ange' → logprob: -7.253261089324951
    4. '(range' → logprob: -7.878261089324951
    5. 'nge' → logprob: -9.628260612487793
    6. ' xrange' → logprob: -9.878260612487793
    7. '	range' → logprob: -10.503260612487793
    8. ' ' → logprob: -10.628260612487793
    9. 'n' → logprob: -11.378260612487793
    10. 'ge' → logprob: -11.503260612487793

Token 89: '(N' (ID: 10564)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.02600695565342903
    2. '(' → logprob: -3.7760069370269775
    3. '(N' → logprob: -5.901007175445557
    4. ' X' → logprob: -11.901006698608398
    5. ' (' → logprob: -12.276006698608398
    6. '(
' → logprob: -12.651006698608398
    7. '(x' → logprob: -13.151006698608398
    8. 'X' → logprob: -13.276006698608398
    9. '(M' → logprob: -15.026006698608398
    10. '()' → logprob: -15.151006698608398

Token 90: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3908223807811737
    2. ' -' → logprob: -1.140822410583496
    3. '):' → logprob: -5.640822410583496
    4. '+' → logprob: -8.765822410583496
    5. ' ' → logprob: -10.140822410583496
    6. '  ' → logprob: -10.265822410583496
    7. ' ):' → logprob: -10.640822410583496
    8. ' +' → logprob: -10.640822410583496
    9. '   ' → logprob: -10.765822410583496
    10. '-X' → logprob: -10.890822410583496

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12693661451339722
    2. ' ' → logprob: -2.126936674118042
    3. '<|end|>' → logprob: -12.876936912536621
    4. ')' → logprob: -13.126936912536621
    5. ' X' → logprob: -13.501936912536621
    6. '2' → logprob: -14.376936912536621
    7. 'X' → logprob: -15.064436912536621
    8. '  ' → logprob: -15.064436912536621
    9. ' ' → logprob: -15.564436912536621
    10. '<|end|>' → logprob: -15.689436912536621

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004354373668320477
    2. ' ' → logprob: -7.7504353523254395
    3. '2' → logprob: -13.750435829162598
    4. ')' → logprob: -13.750435829162598
    5. '
' → logprob: -14.562935829162598
    6. 'X' → logprob: -15.000435829162598
    7. '

' → logprob: -15.187935829162598
    8. '```' → logprob: -15.187935829162598
    9. '<|end|>' → logprob: -15.625435829162598
    10. '１' → logprob: -16.31293487548828

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029095107689499855
    2. ' ):' → logprob: -3.65409517288208
    3. '):
' → logprob: -6.40409517288208
    4. ',' → logprob: -7.02909517288208
    5. ' ):
' → logprob: -9.529094696044922
    6. ')' → logprob: -9.529094696044922
    7. ':' → logprob: -10.029094696044922
    8. ' )' → logprob: -10.154094696044922
    9. ' ,' → logprob: -11.779094696044922
    10. '   ' → logprob: -12.279094696044922

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0761551707983017
    2. '<|end|>' → logprob: -3.201155185699463
    3. ' ' → logprob: -4.451155185699463
    4. ',' → logprob: -4.826155185699463
    5. ':' → logprob: -5.576155185699463
    6. '   ' → logprob: -5.951155185699463
    7. '        
' → logprob: -6.701155185699463
    8. '    ' → logprob: -6.826155185699463
    9. '<|end|>' → logprob: -7.451155185699463
    10. '	' → logprob: -7.576155185699463

Token 95: ' add' (ID: 1147)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.4158176779747009
    2. 'u' → logprob: -1.6658177375793457
    3. '       ' → logprob: -3.0408177375793457
    4. 'x' → logprob: -3.9158177375793457
    5. ' s' → logprob: -4.040817737579346
    6. ' x' → logprob: -4.290817737579346
    7. ' line' → logprob: -4.540817737579346
    8. 's' → logprob: -4.540817737579346
    9. ' a' → logprob: -4.790817737579346
    10. 'a' → logprob: -5.290817737579346

Token 96: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0483882799744606
    2. 'ed' → logprob: -3.6733882427215576
    3. '_' → logprob: -4.423388481140137
    4. '_edges' → logprob: -5.298388481140137
    5. '(' → logprob: -6.673388481140137
    6. '_line' → logprob: -6.923388481140137
    7. '_node' → logprob: -7.923388481140137
    8. '()' → logprob: -8.048388481140137
    9. '(_' → logprob: -8.048388481140137
    10. 'edge' → logprob: -8.298388481140137

Token 97: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.4933728873729706
    2. '(' → logprob: -0.993372917175293
    3. '(N' → logprob: -5.493372917175293
    4. '((' → logprob: -5.493372917175293
    5. '<|end|>' → logprob: -5.868372917175293
    6. '(_' → logprob: -6.868372917175293
    7. '(int' → logprob: -6.868372917175293
    8. '(*' → logprob: -6.868372917175293
    9. '(sys' → logprob: -7.243372917175293
    10. '(read' → logprob: -7.243372917175293

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5108293294906616
    2. ')' → logprob: -1.0108293294906616
    3. '[' → logprob: -3.635829448699951
    4. ' ,' → logprob: -5.885829448699951
    5. ' )' → logprob: -7.010829448699951
    6. '<|end|>' → logprob: -7.010829448699951
    7. '(),' → logprob: -7.135829448699951
    8. ',)' → logprob: -7.260829448699951
    9. '))' → logprob: -7.385829448699951
    10. '())' → logprob: -7.635829448699951

Token 99: ' read' (ID: 1729)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05318288505077362
    2. 'read' → logprob: -3.55318284034729
    3. '<|end|>' → logprob: -4.678183078765869
    4. ' )' → logprob: -5.053183078765869
    5. '_)' → logprob: -6.053183078765869
    6. ' read' → logprob: -7.178183078765869
    7. '_' → logprob: -7.178183078765869
    8. '_read' → logprob: -7.428183078765869
    9. ')
' → logprob: -7.928183078765869
    10. 'sys' → logprob: -8.053182601928711

Token 100: '_edge' (ID: 43226)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00016027313540689647
    2. '_input' → logprob: -9.250160217285156
    3. '_' → logprob: -9.875160217285156
    4. 'int' → logprob: -11.750160217285156
    5. '_line' → logprob: -14.250160217285156
    6. '_uint' → logprob: -14.500160217285156
    7. '```' → logprob: -14.750160217285156
    8. ')_' → logprob: -15.000160217285156
    9. '_edge' → logprob: -15.125160217285156
    10. '_in' → logprob: -15.125160217285156

Token 101: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0263585913926363
    2. '()' → logprob: -3.9013586044311523
    3. ')' → logprob: -6.401358604431152
    4. '(),' → logprob: -6.526358604431152
    5. '())
' → logprob: -7.026358604431152
    6. '()))' → logprob: -7.526358604431152
    7. '()
' → logprob: -8.026358604431152
    8. ' ())' → logprob: -8.776358604431152
    9. '(' → logprob: -9.151358604431152
    10. '()[' → logprob: -9.526358604431152

Token 102: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023321183398365974
    2. '(
' → logprob: -4.148321151733398
    3. ')' → logprob: -5.773321151733398
    4. '<|end|>' → logprob: -6.273321151733398
    5. 's' → logprob: -6.898321151733398
    6. '()' → logprob: -8.273321151733398
    7. 'def' → logprob: -8.398321151733398
    8. '(X' → logprob: -8.523321151733398
    9. '(

' → logprob: -8.898321151733398
    10. '
' → logprob: -9.773321151733398

Token 103: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.3444456458091736
    2. ' add' → logprob: -1.4694457054138184
    3. ' def' → logprob: -4.094445705413818
    4. '_' → logprob: -4.344445705413818
    5. ' ' → logprob: -4.969445705413818
    6. ' _' → logprob: -5.469445705413818
    7. 'read' → logprob: -5.594445705413818
    8. 'add' → logprob: -6.094445705413818
    9. '_add' → logprob: -6.094445705413818
    10. 'def' → logprob: -6.469445705413818

Token 104: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0013676194939762354
    2. '_edges' → logprob: -7.001367568969727
    3. '_' → logprob: -7.751367568969727
    4. '_ed' → logprob: -11.376367568969727
    5. '_input' → logprob: -12.001367568969727
    6. '_e' → logprob: -13.126367568969727
    7. '__' → logprob: -13.376367568969727
    8. ' _' → logprob: -14.126367568969727
    9. 'edge' → logprob: -14.251367568969727
    10. '_EDGE' → logprob: -14.876367568969727

Token 105: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00012654215970542282
    2. '():
' → logprob: -9.250126838684082
    3. '()' → logprob: -11.000126838684082
    4. ' ():' → logprob: -11.250126838684082
    5. '():
' → logprob: -15.375126838684082
    6. '():

' → logprob: -16.000125885009766
    7. '()>' → logprob: -16.125125885009766
    8. '(' → logprob: -16.250125885009766
    9. ' ()' → logprob: -17.000125885009766
    10. '()(' → logprob: -17.625125885009766

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.618976354598999
    2. '()' → logprob: -0.993976354598999
    3. ' return' → logprob: -2.993976354598999
    4. 'return' → logprob: -3.493976354598999
    5. '()
' → logprob: -5.368976593017578
    6. ')' → logprob: -6.743976593017578
    7. 'tuple' → logprob: -6.743976593017578
    8. '	return' → logprob: -7.368976593017578
    9. 'read' → logprob: -7.493976593017578
    10. '().' → logprob: -7.618976593017578

Token 107: ' x' (ID: 1215)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.4692249000072479
    2. 'return' → logprob: -1.8442249298095703
    3. ' tuple' → logprob: -1.8442249298095703
    4. ' return' → logprob: -3.8442249298095703
    5. 'map' → logprob: -4.09422492980957
    6. 'list' → logprob: -4.34422492980957
    7. '   ' → logprob: -5.96922492980957
    8. ' map' → logprob: -6.21922492980957
    9. 'read' → logprob: -6.71922492980957
    10. ' list' → logprob: -7.46922492980957

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012979383580386639
    2. ',y' → logprob: -4.387979507446289
    3. ' ,' → logprob: -8.262979507446289
    4. 'y' → logprob: -9.637979507446289
    5. ',_' → logprob: -10.012979507446289
    6. '=' → logprob: -11.012979507446289
    7. ',x' → logprob: -11.137979507446289
    8. '_,' → logprob: -11.387979507446289
    9. ' =' → logprob: -11.387979507446289
    10. ',int' → logprob: -12.012979507446289

Token 109: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6328805685043335
    2. ' y' → logprob: -0.7578805685043335
    3. ' ' → logprob: -8.507880210876465
    4. '<|end|>' → logprob: -10.257880210876465
    5. '	y' → logprob: -10.882880210876465
    6. '_y' → logprob: -11.507880210876465
    7. '<|end|>' → logprob: -12.257880210876465
    8. '_' → logprob: -12.882880210876465
    9. '  ' → logprob: -13.132880210876465
    10. 'space' → logprob: -13.257880210876465

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142094790935516
    2. '=' → logprob: -1.7014209032058716
    3. ',' → logprob: -11.951420783996582
    4. ' ' → logprob: -14.201420783996582
    5. ')' → logprob: -16.0764217376709
    6. '=input' → logprob: -16.2014217376709
    7. '＝' → logprob: -16.2014217376709
    8. ' =)' → logprob: -16.5764217376709
    9. ' =
' → logprob: -16.7014217376709
    10. '   ' → logprob: -17.5764217376709

Token 111: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6391026973724365
    2. ' read' → logprob: -0.7641026973724365
    3. 'read' → logprob: -5.639102935791016
    4. 'map' → logprob: -5.889102935791016
    5. ' ' → logprob: -9.264102935791016
    6. ' list' → logprob: -10.639102935791016
    7. '  ' → logprob: -11.514102935791016
    8. '	read' → logprob: -12.014102935791016
    9. ' tuple' → logprob: -12.389102935791016
    10. '	map' → logprob: -12.701602935791016

Token 112: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005889333784580231
    2. '(' → logprob: -5.380889415740967
    3. '(lambda' → logprob: -6.755889415740967
    4. '(read' → logprob: -10.255888938903809
    5. '<|end|>' → logprob: -10.630888938903809
    6. '(str' → logprob: -11.130888938903809
    7. '(tuple' → logprob: -12.130888938903809
    8. '<int' → logprob: -12.130888938903809
    9. '(input' → logprob: -12.630888938903809
    10. '()(' → logprob: -13.130888938903809

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021545520052313805
    2. '(read' → logprob: -4.14654541015625
    3. ')' → logprob: -6.64654541015625
    4. '(),' → logprob: -6.89654541015625
    5. ',input' → logprob: -6.89654541015625
    6. '(sys' → logprob: -7.14654541015625
    7. '(' → logprob: -7.27154541015625
    8. 'read' → logprob: -8.02154541015625
    9. '()' → logprob: -9.27154541015625
    10. ' ,' → logprob: -9.39654541015625

Token 114: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5269678831100464
    2. ' read' → logprob: -0.9019678831100464
    3. ' input' → logprob: -6.526968002319336
    4. 'sys' → logprob: -7.026968002319336
    5. 'input' → logprob: -7.151968002319336
    6. ' sys' → logprob: -7.776968002319336
    7. ')' → logprob: -8.776968002319336
    8. '	read' → logprob: -10.026968002319336
    9. ' ' → logprob: -10.651968002319336
    10. '   ' → logprob: -11.026968002319336

Token 115: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0022403046023100615
    2. '_' → logprob: -7.002240180969238
    3. '()' → logprob: -7.127240180969238
    4. 'input' → logprob: -7.877240180969238
    5. '().' → logprob: -9.752240180969238
    6. '_edge' → logprob: -10.502240180969238
    7. 'Input' → logprob: -12.002240180969238
    8. '__' → logprob: -12.127240180969238
    9. '_line' → logprob: -12.127240180969238
    10. 'import' → logprob: -12.377240180969238

Token 116: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.676292231422849e-05
    2. ')' → logprob: -11.750017166137695
    3. '()' → logprob: -11.750017166137695
    4. ' ().' → logprob: -14.625017166137695
    5. '())' → logprob: -15.250017166137695
    6. ' ' → logprob: -16.000017166137695
    7. '(' → logprob: -16.125017166137695
    8. '()
' → logprob: -17.125017166137695
    9. '.' → logprob: -17.500017166137695
    10. '   ' → logprob: -17.750017166137695

Token 117: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.073596548754722e-05
    2. 'strip' → logprob: -10.00005054473877
    3. ' split' → logprob: -12.62505054473877
    4. ')' → logprob: -14.12505054473877
    5. 'rstrip' → logprob: -14.25005054473877
    6. '(split' → logprob: -14.75005054473877
    7. 'spl' → logprob: -16.500051498413086
    8. 's' → logprob: -17.625051498413086
    9. ' ' → logprob: -18.250051498413086
    10. '.split' → logprob: -18.375051498413086

Token 118: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10329172760248184
    2. '())' → logprob: -2.6032917499542236
    3. '()' → logprob: -3.7282917499542236
    4. '))' → logprob: -9.728291511535645
    5. '())
' → logprob: -12.728291511535645
    6. ')
' → logprob: -12.728291511535645
    7. '(' → logprob: -13.228291511535645
    8. '()))' → logprob: -13.478291511535645
    9. ' )' → logprob: -13.603291511535645
    10. '()
' → logprob: -14.353291511535645

Token 119: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.755884051322937
    2. ' ' → logprob: -1.130884051322937
    3. '<|end|>' → logprob: -2.2558841705322266
    4. ' return' → logprob: -2.7558841705322266
    5. 'return' (adapté à ' return') → logprob: -3.8808841705322266
    6. '    ' → logprob: -4.880884170532227
    7. '	return' → logprob: -5.005884170532227
    8. '  ' → logprob: -6.880884170532227
    9. ' 
' → logprob: -7.380884170532227
    10. ' x' → logprob: -7.630884170532227

Token 121: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7549704909324646
    2. ' (' → logprob: -1.0049705505371094
    3. 'x' → logprob: -2.1299705505371094
    4. ' x' → logprob: -3.1299705505371094
    5. '(' → logprob: -6.629970550537109
    6. '[x' → logprob: -10.87997055053711
    7. ' [' → logprob: -12.25497055053711
    8. ' ' → logprob: -12.37997055053711
    9. '[' → logprob: -12.37997055053711
    10. '(
' → logprob: -12.75497055053711

Token 122: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04541205242276192
    2. '-' → logprob: -3.170412063598633
    3. ' ' → logprob: -6.420412063598633
    4. ' ,' → logprob: -7.920412063598633
    5. ',' → logprob: -8.170412063598633
    6. ' -,' → logprob: -9.170412063598633
    7. '-,' → logprob: -11.670412063598633
    8. ' -
' → logprob: -12.045412063598633
    9. ',y' → logprob: -12.170412063598633
    10. ' ' → logprob: -12.795412063598633

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005954044871032238
    2. ' ' → logprob: -5.130954265594482
    3. '<|end|>' → logprob: -10.630953788757324
    4. '	' → logprob: -15.630953788757324
    5. '```' → logprob: -15.630953788757324
    6. '<|end|>' → logprob: -15.880953788757324
    7. '１' → logprob: -16.25595474243164
    8. '   ' → logprob: -16.25595474243164
    9. '۱' → logprob: -16.50595474243164
    10. '0' → logprob: -16.56845474243164

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.750015258789062
    3. '<|end|>' → logprob: -11.875015258789062
    4. '```' → logprob: -16.562515258789062
    5. '<|end|>' → logprob: -16.812515258789062
    6. '0' → logprob: -16.875015258789062
    7. '2' → logprob: -17.750015258789062
    8. '`' → logprob: -17.812515258789062
    9. '...' → logprob: -17.875015258789062

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004699022509157658
    2. ',y' → logprob: -5.379699230194092
    3. ' ,' → logprob: -9.879698753356934
    4. ',
' → logprob: -11.004698753356934
    5. ',x' → logprob: -13.379698753356934
    6. ',n' → logprob: -13.504698753356934
    7. '<|end|>' → logprob: -13.504698753356934
    8. 'y' → logprob: -14.004698753356934
    9. ',Y' → logprob: -14.504698753356934
    10. ',",' → logprob: -14.504698753356934

Token 126: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0067310030572116375
    2. 'y' → logprob: -5.006731033325195
    3. ' ' → logprob: -11.381731033325195
    4. '<|end|>' → logprob: -12.756731033325195
    5. ' ' → logprob: -14.131731033325195
    6. '	y' → logprob: -14.756731033325195
    7. ' 
' → logprob: -15.881731033325195
    8. '(y' → logprob: -18.194231033325195
    9. ',y' → logprob: -18.444231033325195
    10. ''y' → logprob: -18.506731033325195

Token 127: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1608738899230957
    2. '-' → logprob: -1.9108738899230957
    3. ' ' → logprob: -7.535873889923096
    4. '<|end|>' → logprob: -9.160873413085938
    5. '<|end|>' → logprob: -12.535873413085938
    6. ' -
' → logprob: -13.660873413085938
    7. '   ' → logprob: -14.160873413085938
    8. ' ' → logprob: -14.285873413085938
    9. '0' → logprob: -14.410873413085938
    10. '1' → logprob: -14.410873413085938

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038127679377794266
    2. ' ' → logprob: -3.2881276607513428
    3. '<|end|>' → logprob: -9.413127899169922
    4. '<|end|>' → logprob: -13.725627899169922
    5. ' ' → logprob: -14.475627899169922
    6. '```' → logprob: -14.850627899169922
    7. '  ' → logprob: -14.975627899169922
    8. '0' → logprob: -14.975627899169922
    9. '   ' → logprob: -15.100627899169922
    10. '2' → logprob: -15.163127899169922

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011045700375689194
    2. ' ' → logprob: -9.250110626220703
    3. '<|end|>' → logprob: -11.250110626220703
    4. '<|end|>' → logprob: -15.500110626220703
    5. '```' → logprob: -15.750110626220703
    6. '-' → logprob: -16.000110626220703
    7. '2' → logprob: -16.125110626220703
    8. '  ' → logprob: -16.250110626220703
    9. '
' → logprob: -16.500110626220703
    10. '...' → logprob: -16.937610626220703

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20651875436306
    2. '
' → logprob: -2.3315186500549316
    3. '<|end|>' → logprob: -2.8315186500549316
    4. ' ' → logprob: -4.831518650054932
    5. '   ' → logprob: -5.081518650054932
    6. ')' → logprob: -5.956518650054932
    7. 'd' → logprob: -6.206518650054932
    8. '

' → logprob: -6.581518650054932
    9. '<|end|>' → logprob: -6.831518650054932
    10. '#' → logprob: -6.956518650054932

Token 132: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.05326402187347412
    2. ' main' → logprob: -3.3032641410827637
    3. 'add' → logprob: -4.303264141082764
    4. ' build' → logprob: -7.428264141082764
    5. 'main' → logprob: -7.803264141082764
    6. ' dfs' → logprob: -8.803263664245605
    7. ' solve' → logprob: -9.303263664245605
    8. ' process' → logprob: -10.115763664245605
    9. ' addedge' → logprob: -10.178263664245605
    10. 'dfs' → logprob: -10.178263664245605

Token 133: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.05696229264140129
    2. '_' → logprob: -2.931962251663208
    3. '_edges' → logprob: -6.306962490081787
    4. '_ed' → logprob: -9.806962013244629
    5. '_token' → logprob: -10.806962013244629
    6. ' _' → logprob: -10.931962013244629
    7. '_node' → logprob: -11.181962013244629
    8. '_line' → logprob: -11.306962013244629
    9. '_e' → logprob: -11.431962013244629
    10. '_vertex' → logprob: -11.431962013244629

Token 134: '(X' (ID: 17061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4226095676422119
    2. '(X' → logprob: -1.297609567642212
    3. '(x' → logprob: -3.047609567642212
    4. '(ad' → logprob: -4.922609329223633
    5. '(parent' → logprob: -5.297609329223633
    6. '(adj' → logprob: -5.422609329223633
    7. '(a' → logprob: -5.672609329223633
    8. '(node' → logprob: -6.672609329223633
    9. '(A' → logprob: -7.047609329223633
    10. '(edges' → logprob: -8.047609329223633

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002583594177849591
    2. ',x' → logprob: -8.500258445739746
    3. ' ,' → logprob: -10.250258445739746
    4. ',y' → logprob: -12.500258445739746
    5. ')' → logprob: -12.875258445739746
    6. '):' → logprob: -13.125258445739746
    7. '<|end|>' → logprob: -13.375258445739746
    8. ',X' → logprob: -14.000258445739746
    9. '‌,' → logprob: -14.250258445739746
    10. '[' → logprob: -14.250258445739746

Token 136: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.05515678972005844
    2. ' edge' → logprob: -2.930156707763672
    3. '(edge' → logprob: -9.055156707763672
    4. 'edges' → logprob: -9.680156707763672
    5. 'xy' → logprob: -9.930156707763672
    6. 'e' → logprob: -11.305156707763672
    7. '```' → logprob: -11.430156707763672
    8. 'pair' → logprob: -11.680156707763672
    9. ' ' → logprob: -11.930156707763672
    10. '_edge' → logprob: -13.055156707763672

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006797782611101866
    2. '):
' → logprob: -5.006797790527344
    3. ')' → logprob: -10.006797790527344
    4. '):
' → logprob: -10.506797790527344
    5. ' ):' → logprob: -11.756797790527344
    6. ':' → logprob: -14.256797790527344
    7. '):

' → logprob: -14.756797790527344
    8. '   ' → logprob: -15.631797790527344
    9. ')：' → logprob: -15.756797790527344
    10. ' ' → logprob: -16.131797790527344

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004063797648996115
    2. ' x' → logprob: -5.629063606262207
    3. 'x' → logprob: -8.004063606262207
    4. ' (' → logprob: -10.129063606262207
    5. ' a' → logprob: -10.879063606262207
    6. ',' → logprob: -10.879063606262207
    7. 'a' → logprob: -11.129063606262207
    8. '<|end|>' → logprob: -11.504063606262207
    9. '    
' → logprob: -12.129063606262207
    10. ' u' → logprob: -12.504063606262207

Token 139: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.07936371862888336
    2. ' x' → logprob: -2.7043638229370117
    3. '   ' → logprob: -4.704363822937012
    4. 'u' → logprob: -8.954363822937012
    5. 'a' → logprob: -9.454363822937012
    6. ' u' → logprob: -9.704363822937012
    7. '
' → logprob: -10.204363822937012
    8. '	x' → logprob: -11.579363822937012
    9. ' a' → logprob: -12.204363822937012
    10. '    
' → logprob: -12.329363822937012

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019424250058364123
    2. '[' → logprob: -9.750194549560547
    3. ',x' → logprob: -10.000194549560547
    4. ',y' → logprob: -10.500194549560547
    5. ' ,' → logprob: -11.250194549560547
    6. ' =' → logprob: -11.375194549560547
    7. '_,' → logprob: -11.625194549560547
    8. '_idx' → logprob: -12.000194549560547
    9. '=' → logprob: -12.125194549560547
    10. '0' → logprob: -12.375194549560547

Token 141: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12693524360656738
    2. ' y' → logprob: -2.1269352436065674
    3. '(y' → logprob: -12.626935005187988
    4. '   ' → logprob: -14.001935005187988
    5. 'x' → logprob: -14.376935005187988
    6. '	y' → logprob: -14.626935005187988
    7. ' ' → logprob: -14.751935005187988
    8. ',' → logprob: -15.001935005187988
    9. ',y' → logprob: -15.251935005187988
    10. '
' → logprob: -15.626935005187988

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12733963131904602
    2. '=' → logprob: -2.1273396015167236
    3. ',' → logprob: -7.877339839935303
    4. ')' → logprob: -10.627339363098145
    5. '   ' → logprob: -13.627339363098145
    6. '<|end|>' → logprob: -13.627339363098145
    7. ' =)' → logprob: -13.752339363098145
    8. ' ' → logprob: -13.752339363098145
    9. ']' → logprob: -14.502339363098145
    10. ')=' → logprob: -14.814839363098145

Token 143: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.06197138875722885
    2. 'edge' → logprob: -2.811971426010132
    3. '(edge' → logprob: -13.436971664428711
    4. '=edge' → logprob: -13.936971664428711
    5. ' edges' → logprob: -14.561971664428711
    6. '
' → logprob: -15.436971664428711
    7. 'edges' → logprob: -16.06197166442871
    8. ' ed' → logprob: -16.06197166442871
    9. ' ' → logprob: -16.18697166442871
    10. ' 
' → logprob: -16.18697166442871

Token 144: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03869999945163727
    2. '   ' → logprob: -3.6637001037597656
    3. '<|end|>' → logprob: -4.788700103759766
    4. '<|end|>' → logprob: -6.163700103759766
    5. '
' → logprob: -7.038700103759766
    6. '    
' → logprob: -7.663700103759766
    7. 'X' → logprob: -8.788700103759766
    8. ')' → logprob: -9.413700103759766
    9. '  
' → logprob: -10.038700103759766
    10. '	X' → logprob: -10.038700103759766

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044223688542842865
    2. '
' → logprob: -3.1692237854003906
    3. 'X' → logprob: -7.419223785400391
    4. '    
' → logprob: -8.16922378540039
    5. '<|end|>' → logprob: -8.66922378540039
    6. ' X' → logprob: -9.91922378540039
    7. '	X' → logprob: -10.16922378540039
    8. ')' → logprob: -11.16922378540039
    9. ',' → logprob: -11.16922378540039
    10. ' 
' → logprob: -11.54422378540039

Token 146: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.48598623275756836
    2. '   ' → logprob: -1.2359862327575684
    3. ' X' → logprob: -2.3609862327575684
    4. '	X' → logprob: -11.235986709594727
    5. ' ' → logprob: -11.485986709594727
    6. '
' → logprob: -12.235986709594727
    7. '  ' → logprob: -12.860986709594727
    8. 'x' → logprob: -14.735986709594727
    9. '```' → logprob: -14.860986709594727
    10. '       ' → logprob: -14.985986709594727

Token 147: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00030293059535324574
    2. '[' → logprob: -8.125303268432617
    3. 'x' → logprob: -13.125303268432617
    4. ' [' → logprob: -13.250303268432617
    5. '```' → logprob: -13.625303268432617
    6. '[
' → logprob: -14.125303268432617
    7. '[y' → logprob: -15.000303268432617
    8. '
' → logprob: -15.625303268432617
    9. '[int' → logprob: -16.000303268432617
    10. '\[' → logprob: -16.625303268432617

Token 148: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0017201616428792477
    2. ']' → logprob: -6.376719951629639
    3. ' ].' → logprob: -11.001720428466797
    4. '   ' → logprob: -14.251720428466797
    5. '.append' → logprob: -15.626720428466797
    6. ''].' → logprob: -16.626720428466797
    7. '.' → logprob: -16.876720428466797
    8. '"].' → logprob: -16.876720428466797
    9. ' ' → logprob: -17.251720428466797
    10. ']
' → logprob: -17.251720428466797

Token 149: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.6240566083070007e-06
    2. ' append' → logprob: -13.500001907348633
    3. '.append' → logprob: -16.375001907348633
    4. 'appen' → logprob: -16.625001907348633
    5. 'app' → logprob: -17.625001907348633
    6. '_append' → logprob: -19.500001907348633
    7. 'add' → logprob: -19.750001907348633
    8. '	append' → logprob: -20.375001907348633
    9. ' ' → logprob: -21.375001907348633
    10. 'Append' → logprob: -21.375001907348633

Token 150: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0004778592265211046
    2. '(' → logprob: -7.7504777908325195
    3. 'y' → logprob: -10.00047779083252
    4. '(
' → logprob: -14.12547779083252
    5. ' (' → logprob: -14.50047779083252
    6. ' y' → logprob: -14.87547779083252
    7. '((' → logprob: -16.375478744506836
    8. '(x' → logprob: -16.375478744506836
    9. '	y' → logprob: -18.250478744506836
    10. '()' → logprob: -19.375478744506836

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520138621330261
    2. ')
' → logprob: -1.502013921737671
    3. ')
' → logprob: -10.50201416015625
    4. '   ' → logprob: -10.87701416015625
    5. ' )
' → logprob: -10.87701416015625
    6. ' )' → logprob: -11.00201416015625
    7. ')

' → logprob: -13.50201416015625
    8. '),' → logprob: -14.87701416015625
    9. ')y' → logprob: -15.50201416015625
    10. ')#' → logprob: -15.87701416015625

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005320638883858919
    2. 'X' → logprob: -7.625532150268555
    3. '	X' → logprob: -10.875532150268555
    4. ' X' → logprob: -11.000532150268555
    5. ',' → logprob: -13.000532150268555
    6. ' ' → logprob: -13.250532150268555
    7. '    
' → logprob: -13.625532150268555
    8. '
' → logprob: -14.000532150268555
    9. '       ' → logprob: -14.625532150268555
    10. '  ' → logprob: -15.125532150268555

Token 153: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.005399053916335106
    2. ' X' → logprob: -5.255399227142334
    3. '   ' → logprob: -8.755398750305176
    4. '	X' → logprob: -12.130398750305176
    5. ' ' → logprob: -13.505398750305176
    6. '  ' → logprob: -15.005398750305176
    7. 'x' → logprob: -16.255399703979492
    8. '<|end|>' → logprob: -16.380399703979492
    9. '    
' → logprob: -16.505399703979492
    10. '
' → logprob: -16.880399703979492

Token 154: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0011970169143751264
    2. '[' → logprob: -6.75119686126709
    3. '[x' → logprob: -10.62619686126709
    4. ' [' → logprob: -14.00119686126709
    5. 'y' → logprob: -14.25119686126709
    6. '[
' → logprob: -15.00119686126709
    7. '```' → logprob: -15.50119686126709
    8. '[s' → logprob: -16.251197814941406
    9. '][' → logprob: -16.376197814941406
    10. ' y' → logprob: -16.876197814941406

Token 155: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.005406642332673073
    2. ']' → logprob: -5.255406856536865
    3. ' ].' → logprob: -8.755406379699707
    4. ').' → logprob: -11.505406379699707
    5. '.' → logprob: -13.005406379699707
    6. '.append' → logprob: -13.755406379699707
    7. ')' → logprob: -14.755406379699707
    8. ' ]' → logprob: -15.005406379699707
    9. '   ' → logprob: -15.130406379699707
    10. '])' → logprob: -16.130407333374023

Token 156: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.375
    3. 'app' → logprob: -16.75
    4. 'appen' → logprob: -17.0
    5. '	append' → logprob: -17.375
    6. '.append' → logprob: -17.625
    7. 'x' → logprob: -19.0
    8. 'Append' → logprob: -19.25
    9. '_append' → logprob: -19.375
    10. 'prepend' → logprob: -19.75

Token 157: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004093597177416086
    2. '(' → logprob: -5.504093647003174
    3. '(
' → logprob: -11.129093170166016
    4. ' (' → logprob: -15.254093170166016
    5. 'x' → logprob: -15.504093170166016
    6. '(

' → logprob: -17.379093170166016
    7. '(s' → logprob: -18.379093170166016
    8. '((' → logprob: -18.629093170166016
    9. '(y' → logprob: -19.379093170166016
    10. '(
' → logprob: -19.504093170166016

Token 158: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015943869948387146
    2. ')
' → logprob: -8.75015926361084
    3. ' )' → logprob: -14.87515926361084
    4. ')

' → logprob: -15.12515926361084
    5. ')return' → logprob: -15.75015926361084
    6. '<|end|>' → logprob: -15.87515926361084
    7. '   ' → logprob: -17.000160217285156
    8. '),' → logprob: -17.500160217285156
    9. '
' → logprob: -17.750160217285156
    10. '}' → logprob: -18.375160217285156

Token 159: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008017649524845183
    2. 'class' → logprob: -7.7508015632629395
    3. '
' → logprob: -8.625802040100098
    4. '<|end|>' → logprob: -9.500802040100098
    5. '```' → logprob: -10.375802040100098
    6. '#' → logprob: -10.625802040100098
    7. 'from' → logprob: -11.375802040100098
    8. 'ndef' → logprob: -11.750802040100098
    9. 'N' → logprob: -12.000802040100098
    10. 'import' → logprob: -12.125802040100098

Token 160: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6855392456054688
    2. ' dfs' → logprob: -0.8105392456054688
    3. ' solve' → logprob: -3.6855392456054688
    4. ' bfs' → logprob: -4.560539245605469
    5. 'dfs' → logprob: -5.310539245605469
    6. ' def' → logprob: -5.685539245605469
    7. 'main' → logprob: -6.310539245605469
    8. ' color' → logprob: -6.310539245605469
    9. ' find' → logprob: -6.935539245605469
    10. ' count' → logprob: -6.935539245605469

Token 161: '_function' (ID: 21094)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_colors' → logprob: -1.381396770477295
    2. '_tree' → logprob: -1.506396770477295
    3. '_color' → logprob: -1.881396770477295
    4. '_d' → logprob: -2.006396770477295
    5. '_depth' → logprob: -3.256396770477295
    6. '_' → logprob: -3.631396770477295
    7. '_b' → logprob: -4.006396770477295
    8. '_graph' → logprob: -4.006396770477295
    9. '_dp' → logprob: -4.256396770477295
    10. '_col' → logprob: -4.256396770477295

Token 162: '_f' (ID: 1337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0353257656097412
    2. '_name' → logprob: -1.1603257656097412
    3. '():' → logprob: -1.6603257656097412
    4. '_call' → logprob: -3.160325765609741
    5. '_' → logprob: -3.410325765609741
    6. '()' → logprob: -3.660325765609741
    7. '_body' → logprob: -4.41032600402832
    8. '(name' → logprob: -5.41032600402832
    9. '_parent' → logprob: -5.41032600402832
    10. '_signature' → logprob: -5.66032600402832

Token 163: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5788800716400146
    2. '_' → logprob: -1.5788800716400146
    3. '(' → logprob: -1.7038800716400146
    4. '()' → logprob: -3.9538800716400146
    5. 'unction' → logprob: -4.703880310058594
    6. '(N' → logprob: -5.578880310058594
    7. '(n' → logprob: -5.953880310058594
    8. '_(' → logprob: -6.078880310058594
    9. 'unc' → logprob: -6.203880310058594
    10. '(_' → logprob: -6.203880310058594

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017232444137334824
    2. '
' → logprob: -5.142232418060303
    3. '    
' → logprob: -5.392232418060303
    4. 'def' → logprob: -5.642232418060303
    5. '(' → logprob: -7.267232418060303
    6. ':' → logprob: -7.267232418060303
    7. ' def' → logprob: -8.017232894897461
    8. '```' → logprob: -8.017232894897461
    9. '()' → logprob: -8.767232894897461
    10. '       ' → logprob: -9.392232894897461

Token 165: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18467280268669128
    2. 'def' → logprob: -2.0596728324890137
    3. ' def' → logprob: -3.3096728324890137
    4. ' return' → logprob: -6.559672832489014
    5. ' pass' → logprob: -6.684672832489014
    6. 'pass' → logprob: -7.559672832489014
    7. '    ' → logprob: -7.934672832489014
    8. 'return' (adapté à ' return') → logprob: -8.184672355651855
    9. ' ' → logprob: -8.559672355651855
    10. '```' → logprob: -8.559672355651855

Token 166: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.08768599480390549
    2. 'None' → logprob: -3.837686061859131
    3. '(lambda' → logprob: -3.962686061859131
    4. ' lambda' → logprob: -4.087686061859131
    5. '[' → logprob: -4.587686061859131
    6. '0' → logprob: -5.087686061859131
    7. '[]' → logprob: -5.587686061859131
    8. 'def' → logprob: -5.712686061859131
    9. ' None' → logprob: -6.462686061859131
    10. ' ' → logprob: -7.712686061859131

Token 167: ' k' (ID: 372)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20234115421772003
    2. ' node' → logprob: -2.577341079711914
    3. ' ' → logprob: -3.827341079711914
    4. ' a' → logprob: -3.952341079711914
    5. ' n' → logprob: -4.077341079711914
    6. ' color' → logprob: -4.577341079711914
    7. ' s' → logprob: -5.077341079711914
    8. ' u' → logprob: -5.577341079711914
    9. 'x' → logprob: -5.702341079711914
    10. ' f' → logprob: -5.702341079711914

Token 168: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11574748158454895
    2. ',' → logprob: -2.3657474517822266
    3. ' :' → logprob: -4.240747451782227
    4. ',k' → logprob: -7.990747451782227
    5. ' ,' → logprob: -8.990747451782227
    6. ' ' → logprob: -9.365747451782227
    7. 'x' → logprob: -9.865747451782227
    8. 'k' → logprob: -9.990747451782227
    9. ' x' → logprob: -10.115747451782227
    10. '   ' → logprob: -10.240747451782227

Token 169: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.925804078578949
    2. 'k' → logprob: -1.0508041381835938
    3. ' (' → logprob: -2.5508041381835938
    4. ' ' → logprob: -2.5508041381835938
    5. '0' → logprob: -3.8008041381835938
    6. '1' → logprob: -4.425804138183594
    7. '(' → logprob: -4.550804138183594
    8. ' [' → logprob: -4.550804138183594
    9. '(k' → logprob: -4.800804138183594
    10. ' max' → logprob: -5.800804138183594

Token 170: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.717128336429596
    2. ' k' → logprob: -1.2171282768249512
    3. '2' → logprob: -1.7171282768249512
    4. ' ' → logprob: -3.467128276824951
    5. ' (' → logprob: -6.967128276824951
    6. '(' → logprob: -6.967128276824951
    7. '3' → logprob: -6.967128276824951
    8. '(k' → logprob: -7.717128276824951
    9. '10' → logprob: -7.717128276824951
    10. '4' → logprob: -8.34212875366211

Token 172: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008649553172290325
    2. ' k' → logprob: -5.2586493492126465
    3. '1' → logprob: -7.1336493492126465
    4. '2' → logprob: -7.1336493492126465
    5. '(k' → logprob: -7.6336493492126465
    6. '-' → logprob: -7.8836493492126465
    7. '(' → logprob: -8.008649826049805
    8. ' (' → logprob: -8.133649826049805
    9. ' -' → logprob: -9.383649826049805
    10. '3' → logprob: -9.883649826049805

Token 173: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.872933566570282
    2. '-' → logprob: -1.2479336261749268
    3. '+' → logprob: -1.6229336261749268
    4. ' +' → logprob: -2.3729336261749268
    5. ')' → logprob: -5.872933387756348
    6. ' )' → logprob: -6.497933387756348
    7. ' ' → logprob: -8.997933387756348
    8. '1' → logprob: -9.872933387756348
    9. '+)' → logprob: -10.435433387756348
    10. '-)' → logprob: -10.622933387756348

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043041784316301346
    2. ' ' → logprob: -3.168041706085205
    3. ')' → logprob: -10.293042182922363
    4. '<|end|>' → logprob: -13.293042182922363
    5. '
' → logprob: -13.418042182922363
    6. '2' → logprob: -13.980542182922363
    7. ' ' → logprob: -14.105542182922363
    8. '   ' → logprob: -14.543042182922363
    9. '```' → logprob: -14.855542182922363
    10. ' )' → logprob: -14.980542182922363

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011798698687925935
    2. ' ' → logprob: -6.7511796951293945
    3. ')' → logprob: -12.751179695129395
    4. '2' → logprob: -12.876179695129395
    5. '
' → logprob: -13.126179695129395
    6. '```' → logprob: -14.626179695129395
    7. '   ' → logprob: -15.001179695129395
    8. '  ' → logprob: -15.438679695129395
    9. '<|end|>' → logprob: -15.438679695129395
    10. '0' → logprob: -15.751179695129395

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015906495973467827
    2. ')//' → logprob: -4.39090633392334
    3. ' )' → logprob: -6.26590633392334
    4. ' //' → logprob: -6.76590633392334
    5. '//' → logprob: -8.01590633392334
    6. ')
' → logprob: -13.39090633392334
    7. ')#' → logprob: -13.51590633392334
    8. '   ' → logprob: -14.26590633392334
    9. ')/' → logprob: -14.39090633392334
    10. ')>>' → logprob: -14.39090633392334

Token 177: ' //' (ID: 602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5663252472877502
    2. '//' → logprob: -1.3163251876831055
    3. ' //' → logprob: -3.0663251876831055
    4. '
' → logprob: -3.1913251876831055
    5. '<|end|>' → logprob: -3.8163251876831055
    6. '/' → logprob: -4.0663251876831055
    7. '0' → logprob: -4.6913251876831055
    8. ' ' → logprob: -4.9413251876831055
    9. '#' → logprob: -5.8163251876831055
    10. '*' → logprob: -6.0663251876831055

Token 178: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023107275774236768
    2. ' ' → logprob: -8.37523078918457
    3. '
' → logprob: -16.25023078918457
    4. '   ' → logprob: -16.43773078918457
    5. '```' → logprob: -16.50023078918457
    6. '1' → logprob: -16.62523078918457
    7. '  ' → logprob: -17.62523078918457
    8. '۲' → logprob: -17.81273078918457
    9. '(' → logprob: -18.56273078918457
    10. '202' → logprob: -18.68773078918457

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -15.750021934509277
    4. '
' → logprob: -17.00002098083496
    5. '   ' → logprob: -17.06252098083496
    6. '```' → logprob: -17.06252098083496
    7. '۲' → logprob: -18.37502098083496
    8. '  ' → logprob: -18.43752098083496
    9. '202' → logprob: -18.56252098083496
    10. '3' → logprob: -18.68752098083496

Token 180: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11175276339054108
    2. '<|end|>' → logprob: -2.36175274848938
    3. '
' → logprob: -4.611752986907959
    4. '<|end|>' → logprob: -7.236752986907959
    5. ' def' → logprob: -8.7367525100708
    6. '```' → logprob: -8.9867525100708
    7. '\' → logprob: -8.9867525100708
    8. '#' → logprob: -8.9867525100708
    9. '

' → logprob: -9.2367525100708
    10. ')' → logprob: -10.2367525100708

Token 182: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.24915440380573273
    2. ' solve' → logprob: -1.8741544485092163
    3. ' dfs' → logprob: -3.4991543292999268
    4. ' def' → logprob: -3.9991543292999268
    5. ' count' → logprob: -5.499154567718506
    6. ' process' → logprob: -6.124154567718506
    7. ' compute' → logprob: -6.249154567718506
    8. 'def' → logprob: -6.374154567718506
    9. 'main' → logprob: -6.499154567718506
    10. ' find' → logprob: -6.749154567718506

Token 183: '_USED' (ID: 198909)
  Prédit: '_function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.06839148700237274
    2. '_color' → logprob: -4.3183913230896
    3. '_g' → logprob: -4.4433913230896
    4. '_dp' → logprob: -5.4433913230896
    5. '_f' → logprob: -5.6933913230896
    6. '_solver' → logprob: -6.3183913230896
    7. '_' → logprob: -6.4433913230896
    8. '_func' → logprob: -6.5683913230896
    9. '_depth' → logprob: -6.6933913230896
    10. '_counter' → logprob: -6.8183913230896

Token 184: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05584471672773361
    2. '():
' → logprob: -3.805844783782959
    3. '_set' → logprob: -4.055844783782959
    4. '()' → logprob: -5.805844783782959
    5. '_SET' → logprob: -5.805844783782959
    6. '_array' → logprob: -5.805844783782959
    7. '_ARRAY' → logprob: -6.930844783782959
    8. '_nodes' → logprob: -7.055844783782959
    9. '_states' → logprob: -7.305844783782959
    10. '_flags' → logprob: -7.430844783782959

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07541367411613464
    2. '):
' → logprob: -2.700413703918457
    3. ')' → logprob: -5.325413703918457
    4. '_' → logprob: -8.200413703918457
    5. ' ):' → logprob: -9.200413703918457
    6. ',' → logprob: -10.200413703918457
    7. '):
' → logprob: -10.200413703918457
    8. '):

' → logprob: -10.450413703918457
    9. ':' → logprob: -10.950413703918457
    10. 's' → logprob: -11.075413703918457

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34849533438682556
    2. ' [' → logprob: -1.848495364189148
    3. '[' → logprob: -2.4734952449798584
    4. ' return' → logprob: -3.0984952449798584
    5. 'return' → logprob: -6.0984954833984375
    6. '[]' → logprob: -6.4734954833984375
    7. '[n' → logprob: -6.9734954833984375
    8. ' =' → logprob: -7.7234954833984375
    9. '
' → logprob: -8.473495483398438
    10. ' ' → logprob: -8.598495483398438

Token 187: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5898441076278687
    2. ' [' → logprob: -0.8398441076278687
    3. ' return' → logprob: -4.839844226837158
    4. 'return' (adapté à ' return') → logprob: -5.214844226837158
    5. '   ' → logprob: -7.839844226837158
    6. '[n' → logprob: -10.46484375
    7. '[]' → logprob: -11.96484375
    8. ' ' → logprob: -12.21484375
    9. ' =' → logprob: -12.58984375
    10. '=[' → logprob: -12.96484375

Token 188: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008047692477703094
    2. ' [' → logprob: -4.883047580718994
    3. '[n' → logprob: -7.758047580718994
    4. '   ' → logprob: -11.883048057556152
    5. '[-' → logprob: -12.883048057556152
    6. ' ' → logprob: -14.383048057556152
    7. '[node' → logprob: -14.633048057556152
    8. 'set' → logprob: -14.758048057556152
    9. '[a' → logprob: -14.758048057556152
    10. '[N' → logprob: -15.133048057556152

Token 189: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00044890373828820884
    2. ' False' → logprob: -7.875448703765869
    3. '0' → logprob: -9.625449180603027
    4. 'True' → logprob: -14.125449180603027
    5. 'F' → logprob: -14.500449180603027
    6. '(False' → logprob: -14.875449180603027
    7. '   ' → logprob: -15.000449180603027
    8. '-' → logprob: -15.250449180603027
    9. ']' → logprob: -15.375449180603027
    10. '[' → logprob: -15.750449180603027

Token 190: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04934438690543175
    2. ']*' → logprob: -3.049344301223755
    3. ' for' → logprob: -7.549344539642334
    4. ' ]' → logprob: -8.549344062805176
    5. 'for' → logprob: -10.424344062805176
    6. ']*(' → logprob: -12.174344062805176
    7. ']+' → logprob: -14.049344062805176
    8. ')' → logprob: -15.299344062805176
    9. '   ' → logprob: -15.549344062805176
    10. '	for' → logprob: -16.299345016479492

Token 191: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1400557905435562
    2. ' *' → logprob: -2.3900558948516846
    3. '*n' → logprob: -3.2650558948516846
    4. ' for' → logprob: -7.5150556564331055
    5. ' ' → logprob: -9.765055656433105
    6. 'n' → logprob: -9.890055656433105
    7. ' n' → logprob: -9.890055656433105
    8. '[n' → logprob: -10.140055656433105
    9. ']*' → logprob: -10.640055656433105
    10. 'for' → logprob: -10.640055656433105

Token 192: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002635587938129902
    2. ' n' → logprob: -6.002635478973389
    3. '(n' → logprob: -8.752635955810547
    4. '(' → logprob: -14.252635955810547
    5. '	n' → logprob: -14.377635955810547
    6. ' (' → logprob: -14.752635955810547
    7. ')n' → logprob: -15.127635955810547
    8. '_n' → logprob: -16.877635955810547
    9. ',n' → logprob: -18.377635955810547
    10. '   ' → logprob: -19.252635955810547

Token 193: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010080150241265073
    2. 'class' → logprob: -10.000101089477539
    3. '<|end|>' → logprob: -10.500101089477539
    4. '#' → logprob: -11.500101089477539
    5. 'from' → logprob: -12.625101089477539
    6. 'ndef' → logprob: -13.000101089477539
    7. 'N' → logprob: -13.125101089477539
    8. ')' → logprob: -13.125101089477539
    9. '```' → logprob: -13.250101089477539
    10. 'import' → logprob: -13.375101089477539

Token 195: ' make' (ID: 1520)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.15460172295570374
    2. 'dfs' → logprob: -2.779601812362671
    3. ' main' → logprob: -3.279601812362671
    4. ' solve' → logprob: -3.529601812362671
    5. ' process' → logprob: -4.904601573944092
    6. 'solve' → logprob: -6.529601573944092
    7. ' count' → logprob: -7.029601573944092
    8. 'main' → logprob: -7.029601573944092
    9. 'process' → logprob: -7.154601573944092
    10. ' bfs' → logprob: -7.779601573944092

Token 196: '_OR' (ID: 41497)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stack' → logprob: -1.2678030729293823
    2. '_' → logprob: -2.142803192138672
    3. '_queue' → logprob: -2.767803192138672
    4. '_answer' → logprob: -3.017803192138672
    5. '_USED' → logprob: -3.017803192138672
    6. '_D' → logprob: -3.142803192138672
    7. '_used' → logprob: -3.517803192138672
    8. '_STACK' → logprob: -3.517803192138672
    9. '_dp' → logprob: -3.642803192138672
    10. '_d' → logprob: -3.767803192138672

Token 197: 'G' (ID: 38)
  Prédit: '_USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_USED' → logprob: -1.555246353149414
    2. 'ed' → logprob: -1.805246353149414
    3. '_used' → logprob: -2.055246353149414
    4. 'IGINAL' → logprob: -2.305246353149414
    5. '(' → logprob: -2.430246353149414
    6. 'ED' → logprob: -2.805246353149414
    7. '(N' → logprob: -3.180246353149414
    8. 'DER' → logprob: -3.430246353149414
    9. 'IGIN' → logprob: -3.680246353149414
    10. 'IG' → logprob: -4.180246353149414

Token 198: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11628098785877228
    2. '(N' → logprob: -2.366281032562256
    3. 'INAL' → logprob: -4.491281032562256
    4. 'inal' → logprob: -5.991281032562256
    5. 'IN' → logprob: -7.241281032562256
    6. '(size' → logprob: -8.116280555725098
    7. 'in' → logprob: -8.491280555725098
    8. '(' → logprob: -8.616280555725098
    9. 'IGINAL' → logprob: -8.866280555725098
    10. '_SIZE' → logprob: -9.366280555725098

Token 199: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08920542895793915
    2. '):' → logprob: -2.464205503463745
    3. '):
' → logprob: -8.339205741882324
    4. ')' → logprob: -11.214205741882324
    5. '):

' → logprob: -12.464205741882324
    6. '():
' → logprob: -12.464205741882324
    7. ':' → logprob: -13.839205741882324
    8. ' ):
' → logprob: -14.089205741882324
    9. '   ' → logprob: -14.339205741882324
    10. ':
' → logprob: -14.464205741882324

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00119296764023602
    2. 'return' → logprob: -7.251193046569824
    3. ' return' → logprob: -8.126193046569824
    4. '[' → logprob: -9.126193046569824
    5. ' =' → logprob: -10.126193046569824
    6. '=' → logprob: -11.251193046569824
    7. '[]' → logprob: -12.501193046569824
    8. '	return' → logprob: -12.876193046569824
    9. ' [' → logprob: -13.001193046569824
    10. 'def' → logprob: -13.251193046569824

Token 201: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5356171131134033
    2. '[' → logprob: -0.9106171131134033
    3. ' return' → logprob: -5.535616874694824
    4. '[]' → logprob: -5.660616874694824
    5. '[-' → logprob: -6.285616874694824
    6. '[n' → logprob: -6.785616874694824
    7. '   ' → logprob: -7.160616874694824
    8. ' [' → logprob: -7.535616874694824
    9. 'range' → logprob: -9.160616874694824
    10. '['' → logprob: -9.660616874694824

Token 202: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.044696882367134094
    2. '[n' → logprob: -3.669696807861328
    3. '[-' → logprob: -4.794696807861328
    4. '[]' → logprob: -5.294696807861328
    5. ' [' → logprob: -6.044696807861328
    6. 'list' → logprob: -7.169696807861328
    7. '[list' → logprob: -7.794696807861328
    8. '['' → logprob: -8.044696807861328
    9. '{}' → logprob: -8.419696807861328
    10. 'range' → logprob: -8.919696807861328

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3947242498397827
    2. '-' → logprob: -1.5197242498397827
    3. '[]' → logprob: -2.6447243690490723
    4. '[' → logprob: -4.394724369049072
    5. 'None' → logprob: -4.769724369049072
    6. 'n' → logprob: -5.519724369049072
    7. 'i' → logprob: -6.269724369049072
    8. 'False' → logprob: -6.394724369049072
    9. '[n' → logprob: -6.519724369049072
    10. '[-' → logprob: -6.519724369049072

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005199087900109589
    2. ']*' → logprob: -7.625519752502441
    3. ' ]' → logprob: -10.875519752502441
    4. '*' → logprob: -12.750519752502441
    5. ')' → logprob: -12.750519752502441
    6. ' for' → logprob: -13.000519752502441
    7. 'for' → logprob: -13.625519752502441
    8. 'n' → logprob: -13.750519752502441
    9. ',' → logprob: -14.000519752502441
    10. ' *' → logprob: -15.125519752502441

Token 205: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4966229796409607
    2. '*' → logprob: -1.3716230392456055
    3. '<|end|>' → logprob: -1.9966230392456055
    4. '*n' → logprob: -7.1216230392456055
    5. 'def' → logprob: -7.7466230392456055
    6. ' ' → logprob: -8.996623039245605
    7. '[' → logprob: -9.371623039245605
    8. '*[' → logprob: -9.371623039245605
    9. '
' → logprob: -9.496623039245605
    10. '<|end|>' → logprob: -9.871623039245605

Token 206: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008061755215749145
    2. ' n' → logprob: -7.1258063316345215
    3. '(n' → logprob: -14.000805854797363
    4. '(' → logprob: -14.375805854797363
    5. '	n' → logprob: -15.375805854797363
    6. ' (' → logprob: -17.00080680847168
    7. '<|end|>' → logprob: -17.12580680847168
    8. '_n' → logprob: -17.12580680847168
    9. ' ' → logprob: -17.37580680847168
    10. '   ' → logprob: -18.00080680847168

Token 207: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3178812265396118
    2. '<|end|>' → logprob: -1.3178812265396118
    3. '
' → logprob: -6.192881107330322
    4. '<|end|>' → logprob: -7.067881107330322
    5. '```' → logprob: -7.567881107330322
    6. ')' → logprob: -7.817881107330322
    7. '#' → logprob: -8.06788158416748
    8. 'n' → logprob: -8.94288158416748
    9. ' def' → logprob: -9.69288158416748
    10. '

' → logprob: -10.31788158416748

Token 209: ' make' (ID: 1520)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.874021589756012
    2. ' dfs' → logprob: -1.4990215301513672
    3. 'main' → logprob: -1.7490215301513672
    4. ' main' → logprob: -2.624021530151367
    5. 'solve' → logprob: -2.624021530151367
    6. ' solve' → logprob: -3.624021530151367
    7. 'process' → logprob: -4.874021530151367
    8. ' process' → logprob: -6.374021530151367
    9. 'count' → logprob: -6.624021530151367
    10. 'color' → logprob: -7.874021530151367

Token 210: '_TMP' (ID: 190160)
  Prédit: '_DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_DP' → logprob: -1.496059536933899
    2. '_dp' → logprob: -1.996059536933899
    3. '_' → logprob: -2.3710594177246094
    4. '_stack' → logprob: -2.7460594177246094
    5. '_D' → logprob: -3.4960594177246094
    6. '_USED' → logprob: -3.4960594177246094
    7. '_ans' → logprob: -3.6210594177246094
    8. '_count' → logprob: -3.7460594177246094
    9. '_result' → logprob: -3.8710594177246094
    10. '_answer' → logprob: -3.9960594177246094

Token 211: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.921253225300461e-05
    2. '(' → logprob: -9.625069618225098
    3. '(size' → logprob: -13.000069618225098
    4. ' (' → logprob: -14.875069618225098
    5. '(
' → logprob: -15.375069618225098
    6. 'n' → logprob: -16.12506866455078
    7. '(N' → logprob: -16.50006866455078
    8. '(num' → logprob: -18.25006866455078
    9. '(length' → logprob: -18.37506866455078
    10. '(s' → logprob: -18.50006866455078

Token 212: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2520545423030853
    2. '):
' → logprob: -1.5020545721054077
    3. '):
' → logprob: -9.127054214477539
    4. ')' → logprob: -11.127054214477539
    5. '):

' → logprob: -14.502054214477539
    6. '   ' → logprob: -15.002054214477539
    7. ' ):' → logprob: -15.127054214477539
    8. ':' → logprob: -15.752054214477539
    9. '():' → logprob: -15.752054214477539
    10. '():
' → logprob: -16.00205421447754

Token 213: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06891125440597534
    2. '   ' → logprob: -2.81891131401062
    3. ' [' → logprob: -5.193911075592041
    4. 'return' → logprob: -6.943911075592041
    5. '[n' → logprob: -8.4439115524292
    6. ' return' → logprob: -8.6939115524292
    7. ' ' → logprob: -12.4439115524292
    8. '[[' → logprob: -12.5689115524292
    9. '[]' → logprob: -12.6939115524292
    10. '0' → logprob: -12.8189115524292

Token 214: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007124318508431315
    2. ' [' → logprob: -7.7507123947143555
    3. 'return' (adapté à ' return') → logprob: -9.125712394714355
    4. '[[' → logprob: -9.750712394714355
    5. '[]' → logprob: -9.750712394714355
    6. '[-' → logprob: -11.000712394714355
    7. '   ' → logprob: -11.000712394714355
    8. '[n' → logprob: -11.500712394714355
    9. '0' → logprob: -11.875712394714355
    10. '['' → logprob: -13.625712394714355

Token 215: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009457848034799099
    2. ' [' → logprob: -4.759458065032959
    3. '[[' → logprob: -7.384458065032959
    4. '[]' → logprob: -9.1344575881958
    5. '[n' → logprob: -10.2594575881958
    6. '0' → logprob: -11.1344575881958
    7. '[-' → logprob: -11.1344575881958
    8. ' [[]' → logprob: -11.1344575881958
    9. ' [[' → logprob: -11.2594575881958
    10. '{}' → logprob: -11.2594575881958

Token 216: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0989517793059349
    2. '[' → logprob: -2.473951816558838
    3. '-' → logprob: -5.223951816558838
    4. 'None' → logprob: -6.848951816558838
    5. 'False' → logprob: -6.848951816558838
    6. '[]' → logprob: -6.848951816558838
    7. '[-' → logprob: -7.348951816558838
    8. ' [' → logprob: -8.84895133972168
    9. '{}' → logprob: -9.34895133972168
    10. '(' → logprob: -9.34895133972168

Token 217: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.23917081207037e-05
    2. ']*' → logprob: -10.375041961669922
    3. ' ]' → logprob: -11.750041961669922
    4. '*' → logprob: -13.250041961669922
    5. ')' → logprob: -15.000041961669922
    6. ']
' → logprob: -15.125041961669922
    7. ' ' → logprob: -15.250041961669922
    8. '}' → logprob: -16.125041961669922
    9. '   ' → logprob: -16.250041961669922
    10. '[' → logprob: -16.375041961669922

Token 218: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.36475855112075806
    2. '*n' → logprob: -1.6147584915161133
    3. ' *' → logprob: -2.2397584915161133
    4. ' ' → logprob: -9.739758491516113
    5. 'n' → logprob: -10.364758491516113
    6. ' n' → logprob: -10.489758491516113
    7. '(n' → logprob: -11.114758491516113
    8. '
' → logprob: -11.239758491516113
    9. '*N' → logprob: -11.489758491516113
    10. 'def' → logprob: -12.114758491516113

Token 219: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.084206375409849e-05
    2. ' n' → logprob: -10.125041007995605
    3. '(n' → logprob: -14.375041007995605
    4. ')n' → logprob: -15.875041007995605
    5. 'len' → logprob: -17.25004005432129
    6. '1' → logprob: -17.25004005432129
    7. '	n' → logprob: -17.37504005432129
    8. '10' → logprob: -18.00004005432129
    9. '(' → logprob: -18.12504005432129
    10. 'N' → logprob: -18.12504005432129

Token 220: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027204682119190693
    2. '<|end|>' → logprob: -6.002720355987549
    3. '
' → logprob: -9.627720832824707
    4. ' def' → logprob: -10.002720832824707
    5. ')' → logprob: -10.377720832824707
    6. '<|end|>' → logprob: -10.627720832824707
    7. '```' → logprob: -11.252720832824707
    8. '#' → logprob: -11.627720832824707
    9. '    
' → logprob: -12.002720832824707
    10. 'class' → logprob: -12.252720832824707

Token 222: ' make' (ID: 1520)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.2057751566171646
    2. 'dfs' → logprob: -1.9557751417160034
    3. ' main' → logprob: -3.705775260925293
    4. ' solve' → logprob: -4.330775260925293
    5. 'main' → logprob: -5.455775260925293
    6. 'solve' → logprob: -6.455775260925293
    7. ' process' → logprob: -8.080775260925293
    8. 'process' → logprob: -9.205775260925293
    9. ' count' → logprob: -9.705775260925293
    10. 'count' → logprob: -9.705775260925293

Token 223: '_P' (ID: 2008)
  Prédit: '_USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_USED' → logprob: -0.9565896987915039
    2. '_D' → logprob: -2.831589698791504
    3. '_VIS' → logprob: -2.831589698791504
    4. '_TMP' → logprob: -2.956589698791504
    5. '_' → logprob: -3.081589698791504
    6. '_DP' → logprob: -3.081589698791504
    7. '_used' → logprob: -3.206589698791504
    8. '_stack' → logprob: -3.581589698791504
    9. '_STACK' → logprob: -3.831589698791504
    10. '_DEPTH' → logprob: -3.956589698791504

Token 224: '(n' (ID: 2406)
  Prédit: 'ARENT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ARENT' → logprob: -0.7358716130256653
    2. 'AR' → logprob: -1.8608715534210205
    3. 'REFIX' → logprob: -2.7358715534210205
    4. '[' → logprob: -3.4858715534210205
    5. 'ERM' → logprob: -3.4858715534210205
    6. 'ARAM' → logprob: -3.7358715534210205
    7. '[]' → logprob: -4.1108717918396
    8. 'OP' → logprob: -4.1108717918396
    9. 'ar' → logprob: -4.7358717918396
    10. '=[]' → logprob: -4.7358717918396

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01617865078151226
    2. '):
' → logprob: -4.141178607940674
    3. ')' → logprob: -9.016179084777832
    4. '):
' → logprob: -11.391179084777832
    5. '(n' → logprob: -12.891179084777832
    6. '):

' → logprob: -13.141179084777832
    7. 'n' → logprob: -13.516179084777832
    8. ':' → logprob: -13.766179084777832
    9. ' ):' → logprob: -13.766179084777832
    10. ',' → logprob: -13.766179084777832

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006405908148735762
    2. '[' → logprob: -5.631405830383301
    3. '[n' → logprob: -6.756405830383301
    4. 'return' → logprob: -6.881405830383301
    5. ' return' → logprob: -7.506405830383301
    6. ' [' → logprob: -10.6314058303833
    7. '    
' → logprob: -11.1314058303833
    8. '	return' → logprob: -12.6314058303833
    9. '[]' → logprob: -12.7564058303833
    10. '[size' → logprob: -12.7564058303833

Token 227: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004218605346977711
    2. '[-' → logprob: -6.004218578338623
    3. '[n' → logprob: -7.129218578338623
    4. ' [' → logprob: -7.379218578338623
    5. 'return' (adapté à ' return') → logprob: -8.254219055175781
    6. '   ' → logprob: -11.004219055175781
    7. '[N' → logprob: -11.379219055175781
    8. ' return' → logprob: -12.379219055175781
    9. '[]' → logprob: -12.504219055175781
    10. '0' → logprob: -12.629219055175781

Token 228: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0037184846587479115
    2. '[n' → logprob: -6.253718376159668
    3. '[-' → logprob: -6.503718376159668
    4. ' [' → logprob: -8.378718376159668
    5. '[[' → logprob: -10.378718376159668
    6. '[N' → logprob: -11.878718376159668
    7. '[]' → logprob: -12.628718376159668
    8. '[int' → logprob: -12.628718376159668
    9. '[node' → logprob: -13.003718376159668
    10. '[p' → logprob: -13.128718376159668

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001415618316968903
    2. '(' → logprob: -9.750141143798828
    3. '2' → logprob: -10.875141143798828
    4. '-' → logprob: -10.875141143798828
    5. 'n' → logprob: -10.875141143798828
    6. '(n' → logprob: -11.000141143798828
    7. '(-' → logprob: -12.250141143798828
    8. '10' → logprob: -14.125141143798828
    9. 'float' → logprob: -14.250141143798828
    10. '100' → logprob: -14.875141143798828

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003002423793077469
    2. ']*' → logprob: -6.503002643585205
    3. ' for' → logprob: -6.753002643585205
    4. ' ]' → logprob: -8.128002166748047
    5. 'for' → logprob: -10.378002166748047
    6. ')' → logprob: -12.753002166748047
    7. ']*(' → logprob: -14.253002166748047
    8. '}' → logprob: -14.628002166748047
    9. ']+' → logprob: -14.753002166748047
    10. '*' → logprob: -15.753002166748047

Token 231: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3300073444843292
    2. ' *' → logprob: -1.3300073146820068
    3. '*n' → logprob: -4.330007553100586
    4. '[n' → logprob: -6.330007553100586
    5. '[' → logprob: -6.830007553100586
    6. ' for' → logprob: -8.830007553100586
    7. ' [' → logprob: -9.080007553100586
    8. '(n' → logprob: -9.455007553100586
    9. ' n' → logprob: -9.830007553100586
    10. 'n' → logprob: -10.330007553100586

Token 232: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007100477814674377
    2. ' n' → logprob: -7.2507100105285645
    3. '(n' → logprob: -17.375709533691406
    4. '	n' → logprob: -17.875709533691406
    5. ')n' → logprob: -19.000709533691406
    6. '_n' → logprob: -20.750709533691406
    7. '   ' → logprob: -20.750709533691406
    8. '(' → logprob: -21.625709533691406
    9. ' (' → logprob: -22.125709533691406
    10. ',n' → logprob: -22.375709533691406

Token 233: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001068654702976346
    2. ')' → logprob: -7.626068592071533
    3. '<|end|>' → logprob: -7.626068592071533
    4. '```' → logprob: -11.251069068908691
    5. ' def' → logprob: -11.376069068908691
    6. '[' → logprob: -11.501069068908691
    7. '#' → logprob: -11.626069068908691
    8. ':def' → logprob: -11.626069068908691
    9. ':' → logprob: -11.751069068908691
    10. ',' → logprob: -11.876069068908691

Token 235: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.38643980026245117
    2. ' dfs' → logprob: -1.3864398002624512
    3. 'main' → logprob: -3.886439800262451
    4. ' solve' → logprob: -4.136439800262451
    5. 'dfs' → logprob: -4.386439800262451
    6. ' make' → logprob: -4.886439800262451
    7. ' def' → logprob: -5.886439800262451
    8. ' read' → logprob: -6.136439800262451
    9. 'solve' → logprob: -6.761439800262451
    10. ' find' → logprob: -6.886439800262451

Token 236: '_ET' (ID: 176185)
  Prédit: '_Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_Q' → logprob: -1.633270263671875
    2. '_stack' → logprob: -1.633270263671875
    3. '_' → logprob: -1.883270263671875
    4. '_D' → logprob: -2.758270263671875
    5. '_d' → logprob: -3.383270263671875
    6. '_depth' → logprob: -3.508270263671875
    7. '_used' → logprob: -3.758270263671875
    8. '_queue' → logprob: -3.883270263671875
    9. '_T' → logprob: -4.008270263671875
    10. '_parent' → logprob: -4.133270263671875

Token 237: '1' (ID: 16)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12509608268737793
    2. '(N' → logprob: -2.375096082687378
    3. '(' → logprob: -4.375096321105957
    4. '(size' → logprob: -4.500096321105957
    5. '(len' → logprob: -8.000096321105957
    6. '()' → logprob: -9.250096321105957
    7. '(int' → logprob: -9.625096321105957
    8. 'size' → logprob: -10.250096321105957
    9. '(np' → logprob: -10.500096321105957
    10. ' =' → logprob: -10.750096321105957

Token 238: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00018935515254270285
    2. '(' → logprob: -8.750189781188965
    3. 'def' → logprob: -11.375189781188965
    4. '(size' → logprob: -11.750189781188965
    5. '(N' → logprob: -11.875189781188965
    6. ' (' → logprob: -13.125189781188965
    7. '(
' → logprob: -13.625189781188965
    8. 'n' → logprob: -14.500189781188965
    9. '<|end|>' → logprob: -15.750189781188965
    10. '()' → logprob: -16.25018882751465

Token 239: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011105241253972054
    2. '):
' → logprob: -4.511105060577393
    3. ')' → logprob: -9.88610553741455
    4. '):
' → logprob: -12.38610553741455
    5. '):

' → logprob: -14.13610553741455
    6. ' ):' → logprob: -14.13610553741455
    7. ':' → logprob: -14.51110553741455
    8. 'n' → logprob: -16.386104583740234
    9. '():' → logprob: -16.761104583740234
    10. 'def' → logprob: -16.886104583740234

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019254423677921295
    2. '[' → logprob: -4.519254207611084
    3. 'return' → logprob: -5.144254207611084
    4. ' return' → logprob: -6.394254207611084
    5. ' [' → logprob: -7.894254207611084
    6. '[n' → logprob: -9.144254684448242
    7. '[-' → logprob: -9.144254684448242
    8. 'def' → logprob: -10.894254684448242
    9. ' [-' → logprob: -11.519254684448242
    10. '
' → logprob: -11.644254684448242

Token 241: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15341544151306152
    2. 'return' (adapté à ' return') → logprob: -2.7784154415130615
    3. '[-' → logprob: -2.9034154415130615
    4. '   ' → logprob: -4.528415679931641
    5. ' [' → logprob: -4.903415679931641
    6. ' return' → logprob: -5.278415679931641
    7. '[n' → logprob: -7.153415679931641
    8. ' [-' → logprob: -7.653415679931641
    9. '[]' → logprob: -8.40341567993164
    10. '0' → logprob: -9.27841567993164

Token 242: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06352870911359787
    2. '[-' → logprob: -2.8135287761688232
    3. '[n' → logprob: -7.438528537750244
    4. '[]' → logprob: -7.813528537750244
    5. '[[' → logprob: -7.938528537750244
    6. ' [' → logprob: -9.563529014587402
    7. '0' → logprob: -9.938529014587402
    8. ' [[]' → logprob: -10.313529014587402
    9. '[(' → logprob: -10.688529014587402
    10. ' [-' → logprob: -11.813529014587402

Token 243: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.701178252696991
    2. '0' → logprob: -0.951178252696991
    3. '[]' → logprob: -2.3261783123016357
    4. 'False' → logprob: -5.201178073883057
    5. '[' → logprob: -5.451178073883057
    6. '(-' → logprob: -5.701178073883057
    7. '[-' → logprob: -5.951178073883057
    8. 'None' → logprob: -6.451178073883057
    9. ']' → logprob: -7.201178073883057
    10. '(' → logprob: -7.201178073883057

Token 244: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018887832993641496
    2. ']*' → logprob: -8.625188827514648
    3. ' ]' → logprob: -12.250188827514648
    4. '*' → logprob: -13.375188827514648
    5. ')' → logprob: -14.125188827514648
    6. '(n' → logprob: -14.750188827514648
    7. ']*(' → logprob: -15.125188827514648
    8. ' for' → logprob: -15.125188827514648
    9. '()]' → logprob: -15.500188827514648
    10. 'for' → logprob: -15.750188827514648

Token 245: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6341254115104675
    2. ' *' → logprob: -0.7591254115104675
    3. '*n' → logprob: -6.634125232696533
    4. ']' → logprob: -10.259125709533691
    5. '0' → logprob: -10.509125709533691
    6. ' ' → logprob: -10.634125709533691
    7. '
' → logprob: -11.009125709533691
    8. '*(' → logprob: -11.134125709533691
    9. ')' → logprob: -11.259125709533691
    10. 'def' → logprob: -11.384125709533691

Token 246: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010818242095410824
    2. '(' → logprob: -5.260818004608154
    3. '(n' → logprob: -5.885818004608154
    4. ' n' → logprob: -6.010818004608154
    5. ' (' → logprob: -8.135818481445312
    6. '2' → logprob: -10.635818481445312
    7. '   ' → logprob: -11.885818481445312
    8. ' ' → logprob: -12.010818481445312
    9. '
' → logprob: -13.510818481445312
    10. '	n' → logprob: -13.823318481445312

Token 247: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22456751763820648
    2. '<|end|>' → logprob: -1.9745675325393677
    3. '
' → logprob: -2.849567413330078
    4. '

' → logprob: -5.474567413330078
    5. ' def' → logprob: -9.224567413330078
    6. '<|end|>' → logprob: -9.599567413330078
    7. '```' → logprob: -10.349567413330078
    8. '\n' → logprob: -11.349567413330078
    9. '[' → logprob: -11.724567413330078
    10. '  
' → logprob: -11.849567413330078

Token 248: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026834949385374784
    2. '
' → logprob: -6.502683639526367
    3. '<|end|>' → logprob: -6.752683639526367
    4. '```' → logprob: -11.752683639526367
    5. ' def' → logprob: -13.502683639526367
    6. '

' → logprob: -13.627683639526367
    7. '<|end|>' → logprob: -14.127683639526367
    8. '  
' → logprob: -15.002683639526367
    9. 'ndef' → logprob: -15.127683639526367
    10. '``' → logprob: -16.002683639526367

Token 249: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.388589084148407
    2. ' make' → logprob: -1.6385891437530518
    3. 'def' → logprob: -2.1385891437530518
    4. ' def' → logprob: -5.138588905334473
    5. 'n' → logprob: -7.388588905334473
    6. '
' → logprob: -8.638588905334473
    7. 'read' → logprob: -8.826088905334473
    8. 'range' → logprob: -8.826088905334473
    9. 'sys' → logprob: -8.826088905334473
    10. '```' → logprob: -9.076088905334473

Token 250: '_ET' (ID: 176185)
  Prédit: '_ET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ET' → logprob: -0.04012291878461838
    2. '_P' → logprob: -5.415122985839844
    3. '_T' → logprob: -5.665122985839844
    4. 'ET' → logprob: -5.665122985839844
    5. '_ED' → logprob: -5.790122985839844
    6. '_TMP' → logprob: -5.915122985839844
    7. '_D' → logprob: -6.415122985839844
    8. '_E' → logprob: -6.540122985839844
    9. '_PT' → logprob: -6.540122985839844
    10. '_DT' → logprob: -6.665122985839844

Token 251: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003428528143558651
    2. '(n' → logprob: -8.750343322753906
    3. '2' → logprob: -8.875343322753906
    4. '(' → logprob: -10.375343322753906
    5. 'T' → logprob: -12.125343322753906
    6. '_' → logprob: -12.500343322753906
    7. '```' → logprob: -13.750343322753906
    8. '   ' → logprob: -13.875343322753906
    9. ' ' → logprob: -13.875343322753906
    10. '
' → logprob: -14.875343322753906

Token 252: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004472348664421588
    2. '(' → logprob: -7.7504472732543945
    3. '(size' → logprob: -11.500447273254395
    4. '(
' → logprob: -12.500447273254395
    5. 'n' → logprob: -13.750447273254395
    6. ' (' → logprob: -14.375447273254395
    7. '<|end|>' → logprob: -14.875447273254395
    8. '   ' → logprob: -15.500447273254395
    9. ')' → logprob: -15.875447273254395
    10. 'def' → logprob: -16.250446319580078

Token 253: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2335101068019867
    2. '):' → logprob: -1.608510136604309
    3. '):
' → logprob: -5.3585100173950195
    4. '(n' → logprob: -5.8585100173950195
    5. ')n' → logprob: -8.60851001739502
    6. ')(' → logprob: -9.23351001739502
    7. 'n' → logprob: -9.98351001739502
    8. '):

' → logprob: -10.23351001739502
    9. ')(
' → logprob: -10.48351001739502
    10. 'def' → logprob: -10.73351001739502

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11862389743328094
    2. 'return' → logprob: -2.368623971939087
    3. ' return' → logprob: -4.493623733520508
    4. '[' → logprob: -4.993623733520508
    5. ' [' → logprob: -8.993623733520508
    6. '0' → logprob: -9.868623733520508
    7. 'def' → logprob: -10.243623733520508
    8. '	return' → logprob: -10.368623733520508
    9. '[n' → logprob: -10.993623733520508
    10. 'n' → logprob: -11.618623733520508

Token 255: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7459194660186768
    2. 'return' (adapté à ' return') → logprob: -0.7459194660186768
    3. ' return' → logprob: -3.6209194660186768
    4. ' [' → logprob: -3.9959194660186768
    5. '0' → logprob: -5.870919227600098
    6. '[n' → logprob: -5.870919227600098
    7. '   ' → logprob: -7.870919227600098
    8. 'n' → logprob: -9.245919227600098
    9. 'def' → logprob: -10.120919227600098
    10. ' ' → logprob: -10.120919227600098

Token 256: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034540721680969
    2. ' [' → logprob: -5.753454208374023
    3. '0' → logprob: -8.628454208374023
    4. '[]' → logprob: -10.378454208374023
    5. '[[' → logprob: -10.753454208374023
    6. '[-' → logprob: -11.003454208374023
    7. '{}' → logprob: -11.253454208374023
    8. ' [[]' → logprob: -12.503454208374023
    9. '{' → logprob: -12.753454208374023
    10. '[n' → logprob: -13.128454208374023

Token 257: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038359444588422775
    2. 'n' → logprob: -6.128836154937744
    3. '[' → logprob: -6.628836154937744
    4. ' ' → logprob: -8.628835678100586
    5. ' n' → logprob: -9.878835678100586
    6. ' [' → logprob: -9.878835678100586
    7. '[n' → logprob: -10.628835678100586
    8. ']' → logprob: -12.128835678100586
    9. ')' → logprob: -12.253835678100586
    10. '[]' → logprob: -13.378835678100586

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002705250633880496
    2. '*' → logprob: -6.627705097198486
    3. ']*' → logprob: -7.377705097198486
    4. ' ]' → logprob: -7.877705097198486
    5. ' *' → logprob: -8.252705574035645
    6. ')' → logprob: -9.877705574035645
    7. '*n' → logprob: -10.627705574035645
    8. ' n' → logprob: -11.377705574035645
    9. '(n' → logprob: -11.752705574035645
    10. ' ' → logprob: -12.002705574035645

Token 259: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23379482328891754
    2. ' *' → logprob: -1.6087948083877563
    3. '*n' → logprob: -4.858794689178467
    4. ' ' → logprob: -7.858794689178467
    5. ']' → logprob: -10.233795166015625
    6. 'def' → logprob: -10.358795166015625
    7. ')' → logprob: -10.358795166015625
    8. ' n' → logprob: -10.983795166015625
    9. ' def' → logprob: -11.233795166015625
    10. '0' → logprob: -11.608795166015625

Token 260: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011703446507453918
    2. ' n' → logprob: -6.7511701583862305
    3. '(n' → logprob: -16.001171112060547
    4. '_n' → logprob: -17.626171112060547
    5. 'len' → logprob: -18.751171112060547
    6. '(' → logprob: -19.376171112060547
    7. '10' → logprob: -19.376171112060547
    8. ')n' → logprob: -19.376171112060547
    9. '	n' → logprob: -19.501171112060547
    10. '[' → logprob: -19.501171112060547

Token 261: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022601179778575897
    2. '<|end|>' → logprob: -4.022601127624512
    3. '#' → logprob: -5.772601127624512
    4. '```' → logprob: -7.647601127624512
    5. ')' → logprob: -8.397601127624512
    6. '[' → logprob: -8.772601127624512
    7. '<|end|>' → logprob: -9.647601127624512
    8. '.' → logprob: -9.772601127624512
    9. 'n' → logprob: -9.897601127624512
    10. 'import' → logprob: -10.147601127624512

Token 262: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.3199920178740285e-05
    2. '#' → logprob: -11.750022888183594
    3. 'import' → logprob: -12.250022888183594
    4. 'from' → logprob: -12.625022888183594
    5. 'class' → logprob: -12.750022888183594
    6. '<|end|>' → logprob: -13.625022888183594
    7. '```' → logprob: -13.750022888183594
    8. ')' → logprob: -14.125022888183594
    9. ' def' → logprob: -15.000022888183594
    10. '<|end|>' → logprob: -16.250022888183594

Token 263: ' make' (ID: 1520)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2650436758995056
    2. 'def' → logprob: -1.5150437355041504
    3. ' main' → logprob: -6.26504373550415
    4. ' sys' → logprob: -6.26504373550415
    5. ' adjust' → logprob: -6.39004373550415
    6. ' solve' → logprob: -6.51504373550415
    7. 'from' → logprob: -7.01504373550415
    8. ' make' → logprob: -7.26504373550415
    9. ' dfs' → logprob: -7.39004373550415
    10. ' read' → logprob: -7.51504373550415

Token 264: '_' (ID: 62)
  Prédit: '_ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ET' → logprob: -1.4913570880889893
    2. '_DP' → logprob: -2.2413570880889893
    3. '_D' → logprob: -2.3663570880889893
    4. '_L' → logprob: -3.2413570880889893
    5. '_' → logprob: -3.3663570880889893
    6. '_USED' → logprob: -3.4913570880889893
    7. '_E' → logprob: -3.6163570880889893
    8. '_Q' → logprob: -3.7413570880889893
    9. '_C' → logprob: -3.9913570880889893
    10. '_K' → logprob: -4.11635684967041

Token 265: 'ANS' (ID: 18850)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -2.3445897102355957
    2. 'C' → logprob: -3.3445897102355957
    3. 'count' → logprob: -3.3445897102355957
    4. 'DP' → logprob: -3.3445897102355957
    5. 'DEP' → logprob: -3.4695897102355957
    6. 'cnt' → logprob: -3.5945897102355957
    7. 'E' → logprob: -3.5945897102355957
    8. 'dp' → logprob: -3.5945897102355957
    9. 'depth' → logprob: -3.7195897102355957
    10. 'S' → logprob: -3.7195897102355957

Token 266: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006883738096803427
    2. '():' → logprob: -5.25688362121582
    3. '():
' → logprob: -7.25688362121582
    4. '(' → logprob: -7.50688362121582
    5. '(size' → logprob: -8.38188362121582
    6. '(N' → logprob: -9.13188362121582
    7. '()' → logprob: -10.50688362121582
    8. ' (' → logprob: -11.25688362121582
    9. 'def' → logprob: -11.63188362121582
    10. '(
' → logprob: -13.25688362121582

Token 267: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023273199796676636
    2. '):
' → logprob: -3.773273229598999
    3. '):
' → logprob: -10.898273468017578
    4. ')' → logprob: -12.148273468017578
    5. '):

' → logprob: -13.773273468017578
    6. ' ):' → logprob: -13.898273468017578
    7. '(n' → logprob: -13.898273468017578
    8. '   ' → logprob: -15.148273468017578
    9. '():' → logprob: -15.273273468017578
    10. ':' → logprob: -15.398273468017578

Token 268: ' f' (ID: 285)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04450558125972748
    2. ')' → logprob: -4.919505596160889
    3. '):
' → logprob: -4.919505596160889
    4. '):' → logprob: -4.919505596160889
    5. ' ' → logprob: -5.544505596160889
    6. 'size' → logprob: -6.044505596160889
    7. '-' → logprob: -6.294505596160889
    8. '   ' → logprob: -6.544505596160889
    9. 'n' → logprob: -6.544505596160889
    10. 'default' → logprob: -6.669505596160889

Token 269: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5809532403945923
    2. '):' → logprob: -0.8309532403945923
    3. '(n' → logprob: -6.580953121185303
    4. 'unction' → logprob: -6.580953121185303
    5. 'n' → logprob: -7.080953121185303
    6. 'size' → logprob: -8.080953598022461
    7. '):

' → logprob: -8.830953598022461
    8. 'ull' → logprob: -8.955953598022461
    9. '):
' → logprob: -8.955953598022461
    10. '   ' → logprob: -9.330953598022461

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007869821041822433
    2. '[' → logprob: -5.632869720458984
    3. '[n' → logprob: -6.382869720458984
    4. ' return' → logprob: -6.882869720458984
    5. 'return' → logprob: -7.132869720458984
    6. ' [' → logprob: -8.382869720458984
    7. '(n' → logprob: -8.507869720458984
    8. ':' → logprob: -9.257869720458984
    9. '0' → logprob: -10.382869720458984
    10. ' ' → logprob: -10.507869720458984

Token 271: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2647142708301544
    2. '[' → logprob: -1.514714241027832
    3. '   ' → logprob: -5.139714241027832
    4. ' return' → logprob: -5.264714241027832
    5. '0' → logprob: -7.639714241027832
    6. '[n' → logprob: -7.639714241027832
    7. '[-' → logprob: -7.889714241027832
    8. ' [' → logprob: -8.514714241027832
    9. '[f' → logprob: -9.264714241027832
    10. 'def' → logprob: -11.014714241027832

Token 272: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0027869308833032846
    2. '[f' → logprob: -6.127787113189697
    3. '[-' → logprob: -8.002786636352539
    4. '0' → logprob: -9.127786636352539
    5. '[n' → logprob: -9.377786636352539
    6. ' [' → logprob: -9.627786636352539
    7. '[int' → logprob: -13.002786636352539
    8. '[(' → logprob: -13.252786636352539
    9. '[[' → logprob: -14.127786636352539
    10. '[a' → logprob: -14.252786636352539

Token 273: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3576439321041107
    2. '0' → logprob: -1.357643961906433
    3. '-' → logprob: -3.7326438426971436
    4. '-f' → logprob: -4.107644081115723
    5. ' f' → logprob: -7.482644081115723
    6. 'None' → logprob: -7.732644081115723
    7. '(-' → logprob: -8.107644081115723
    8. ' -' → logprob: -8.357644081115723
    9. '[' → logprob: -8.857644081115723
    10. 'float' → logprob: -8.857644081115723

Token 274: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019641997292637825
    2. '(n' → logprob: -4.019641876220703
    3. '(i' → logprob: -6.894641876220703
    4. '0' → logprob: -8.019641876220703
    5. ' (' → logprob: -10.519641876220703
    6. '](' → logprob: -10.519641876220703
    7. '((' → logprob: -11.019641876220703
    8. ']' → logprob: -11.144641876220703
    9. '(N' → logprob: -11.519641876220703
    10. '(-' → logprob: -11.644641876220703

Token 275: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.44146522879600525
    2. ')' → logprob: -1.0664652585983276
    3. '-' → logprob: -4.691465377807617
    4. ' -' → logprob: -6.441465377807617
    5. '(n' → logprob: -7.066465377807617
    6. ' )' → logprob: -8.191465377807617
    7. '(i' → logprob: -9.316465377807617
    8. '))' → logprob: -9.566465377807617
    9. ')]
' → logprob: -9.566465377807617
    10. '[i' → logprob: -9.691465377807617

Token 276: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0023389006964862347
    2. '(n' → logprob: -6.502338886260986
    3. '(' → logprob: -7.377338886260986
    4. ' n' → logprob: -9.252339363098145
    5. '1' → logprob: -10.377339363098145
    6. ' (' → logprob: -10.502339363098145
    7. '0' → logprob: -11.252339363098145
    8. '2' → logprob: -11.502339363098145
    9. '3' → logprob: -11.877339363098145
    10. '10' → logprob: -12.252339363098145

Token 278: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0171623807400465
    2. ')' → logprob: -4.517162322998047
    3. '#' → logprob: -5.767162322998047
    4. '<|end|>' → logprob: -6.267162322998047
    5. '```' → logprob: -8.017162322998047
    6. 'n' → logprob: -8.392162322998047
    7. '<|end|>' → logprob: -9.392162322998047
    8. '0' → logprob: -9.517162322998047
    9. '...' → logprob: -9.767162322998047
    10. '.' → logprob: -9.892162322998047

Token 280: ' make' (ID: 1520)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6317735910415649
    2. ' main' → logprob: -1.006773591041565
    3. 'def' → logprob: -2.6317734718322754
    4. 'read' → logprob: -3.8817734718322754
    5. ' def' → logprob: -5.381773471832275
    6. ' read' → logprob: -5.506773471832275
    7. 'solve' → logprob: -7.756773471832275
    8. '__' → logprob: -8.006773948669434
    9. 'make' → logprob: -8.506773948669434
    10. ' solve' → logprob: -9.006773948669434

Token 281: '_Q' (ID: 28618)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -2.048544406890869
    2. '_ans' → logprob: -2.673544406890869
    3. '_TMP' → logprob: -2.798544406890869
    4. '_f' → logprob: -3.048544406890869
    5. '_P' → logprob: -3.673544406890869
    6. '_S' → logprob: -3.673544406890869
    7. 'f' → logprob: -3.673544406890869
    8. '_T' → logprob: -3.673544406890869
    9. '_K' → logprob: -3.673544406890869
    10. 'ANS' → logprob: -3.798544406890869

Token 282: '(i' (ID: 3649)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014845535159111023
    2. '(n' → logprob: -4.764845371246338
    3. '():
' → logprob: -5.639845371246338
    4. '()' → logprob: -6.139845371246338
    5. '(' → logprob: -8.389845848083496
    6. '(size' → logprob: -8.389845848083496
    7. '()(' → logprob: -11.139845848083496
    8. ' ():' → logprob: -11.264845848083496
    9. '():
' → logprob: -12.389845848083496
    10. '(N' → logprob: -12.764845848083496

Token 283: '0' (ID: 15)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.533683717250824
    2. '):' → logprob: -1.7836837768554688
    3. ')' → logprob: -2.5336837768554688
    4. 'n' → logprob: -2.6586837768554688
    5. ',' → logprob: -2.6586837768554688
    6. '):
' → logprob: -4.658683776855469
    7. 'nt' → logprob: -5.283683776855469
    8. 'dx' → logprob: -6.408683776855469
    9. '+' → logprob: -7.033683776855469
    10. 'd' → logprob: -7.033683776855469

Token 284: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3742985725402832
    2. '):' → logprob: -1.7492985725402832
    3. 'n' → logprob: -2.374298572540283
    4. 'nd' → logprob: -3.874298572540283
    5. ')' → logprob: -4.874298572540283
    6. '):
' → logprob: -4.874298572540283
    7. 'nt' → logprob: -5.874298572540283
    8. ',n' → logprob: -6.374298572540283
    9. '0' → logprob: -7.249298572540283
    10. 'd' → logprob: -7.374298572540283

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34664857387542725
    2. 'from' → logprob: -2.096648693084717
    3. '[]' → logprob: -2.221648693084717
    4. 'return' → logprob: -3.596648693084717
    5. 'import' → logprob: -3.721648693084717
    6. '[' → logprob: -5.971648693084717
    7. '=' → logprob: -6.096648693084717
    8. ' return' → logprob: -6.596648693084717
    9. 'deque' → logprob: -6.971648693084717
    10. ' =' → logprob: -7.096648693084717

Token 286: ' return' (ID: 622)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1824049949645996
    2. 'from' → logprob: -2.3074049949645996
    3. '[]' → logprob: -3.4324049949645996
    4. 'import' → logprob: -3.9324049949645996
    5. 'deque' → logprob: -5.1824049949646
    6. '[q' → logprob: -5.4324049949646
    7. '[' → logprob: -6.0574049949646
    8. 'return' (adapté à ' return') → logprob: -7.0574049949646
    9. '[from' → logprob: -7.1824049949646
    10. '[f' → logprob: -8.432405471801758

Token 287: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03021068125963211
    2. '[]' → logprob: -3.6552107334136963
    3. '[' → logprob: -5.780210494995117
    4. 'deque' → logprob: -7.405210494995117
    5. '[int' → logprob: -9.780210494995117
    6. '[(' → logprob: -9.905210494995117
    7. 'collections' → logprob: -10.905210494995117
    8. ' [' → logprob: -11.405210494995117
    9. '[index' → logprob: -11.655210494995117
    10. ' []' → logprob: -11.905210494995117

Token 288: '~' (ID: 93)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001005630983854644
    2. '(i' → logprob: -9.750100135803223
    3. ']' → logprob: -11.125100135803223
    4. '0' → logprob: -11.500100135803223
    5. '[i' → logprob: -12.500100135803223
    6. ' i' → logprob: -13.125100135803223
    7. '(' → logprob: -13.250100135803223
    8. '-' → logprob: -13.250100135803223
    9. '[' → logprob: -13.750100135803223
    10. ' (' → logprob: -14.000100135803223

Token 289: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00027206414961256087
    2. '0' → logprob: -8.375271797180176
    3. ' i' → logprob: -11.000271797180176
    4. '(' → logprob: -11.875271797180176
    5. '(i' → logprob: -12.000271797180176
    6. '-' → logprob: -12.375271797180176
    7. '-i' → logprob: -13.375271797180176
    8. '
' → logprob: -13.750271797180176
    9. 'int' → logprob: -13.750271797180176
    10. ' (' → logprob: -14.375271797180176

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -12.125009536743164
    3. 'o' → logprob: -14.000009536743164
    4. ' ' → logprob: -14.125009536743164
    5. 'i' → logprob: -14.375009536743164
    6. '
' → logprob: -14.875009536743164
    7. '(i' → logprob: -15.250009536743164
    8. ' i' → logprob: -15.437509536743164
    9. 'n' → logprob: -15.875009536743164
    10. '۰' → logprob: -16.000009536743164

Token 291: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003343944437801838
    2. ' ]' → logprob: -6.3783440589904785
    3. ',' → logprob: -6.6283440589904785
    4. '+' → logprob: -8.50334358215332
    5. ']+' → logprob: -10.25334358215332
    6. ' +' → logprob: -10.62834358215332
    7. ' ,' → logprob: -11.25334358215332
    8. '0' → logprob: -11.50334358215332
    9. '<|end|>' → logprob: -11.62834358215332
    10. '[' → logprob: -12.25334358215332

Token 292: ' i' (ID: 575)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8703289031982422
    2. 'i' → logprob: -1.2453289031982422
    3. '-' → logprob: -2.370328903198242
    4. '~' → logprob: -2.620328903198242
    5. '0' → logprob: -3.120328903198242
    6. ' i' → logprob: -3.120328903198242
    7. ' -' → logprob: -4.620328903198242
    8. ' ~' → logprob: -4.870328903198242
    9. ' ' → logprob: -5.245328903198242
    10. ' ]' → logprob: -5.370328903198242

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3902232348918915
    2. ']' → logprob: -1.2652232646942139
    3. ')]' → logprob: -4.390223026275635
    4. '+' → logprob: -5.390223026275635
    5. ' ]' → logprob: -5.390223026275635
    6. ',' → logprob: -5.765223026275635
    7. '])' → logprob: -5.890223026275635
    8. ']}' → logprob: -5.890223026275635
    9. '-' → logprob: -6.140223026275635
    10. ')' → logprob: -6.640223026275635

Token 294: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001696484163403511
    2. ' ]' → logprob: -7.001696586608887
    3. ',' → logprob: -7.751696586608887
    4. '+' → logprob: -8.251696586608887
    5. ' +' → logprob: -10.126696586608887
    6. '<|end|>' → logprob: -11.126696586608887
    7. ']
' → logprob: -12.126696586608887
    8. '-' → logprob: -12.501696586608887
    9. '[' → logprob: -12.626696586608887
    10. ')]' → logprob: -12.626696586608887

Token 295: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008454833878204226
    2. '#' → logprob: -8.000845909118652
    3. '<|end|>' → logprob: -8.125845909118652
    4. ')' → logprob: -9.250845909118652
    5. '```' → logprob: -10.250845909118652
    6. '[' → logprob: -10.875845909118652
    7. 'import' → logprob: -11.250845909118652
    8. 'class' → logprob: -12.000845909118652
    9. ']' → logprob: -12.125845909118652
    10. '<|end|>' → logprob: -12.250845909118652

Token 296: ' should' (ID: 1757)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0955824851989746
    2. ' main' → logprob: -1.5955824851989746
    3. ' read' → logprob: -1.9705824851989746
    4. ' def' → logprob: -2.8455824851989746
    5. 'read' → logprob: -3.0955824851989746
    6. 'main' → logprob: -3.2205824851989746
    7. ' ' → logprob: -3.5955824851989746
    8. 'range' → logprob: -4.470582485198975
    9. 'lambda' → logprob: -4.533082485198975
    10. ' i' → logprob: -4.720582485198975

Token 297: '_skip' (ID: 108208)
  Prédit: '_continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.7130537033081055
    2. '_use' → logprob: -1.0880537033081055
    3. '_return' → logprob: -3.5880537033081055
    4. '_pro' → logprob: -4.3380537033081055
    5. '_visit' → logprob: -4.4630537033081055
    6. '_add' → logprob: -4.4630537033081055
    7. '_generate' → logprob: -4.7130537033081055
    8. '_' → logprob: -4.8380537033081055
    9. '_accept' → logprob: -4.8380537033081055
    10. '_keep' → logprob: -4.9630537033081055

Token 298: '_parent' (ID: 39570)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.965366780757904
    2. '():' → logprob: -1.0903668403625488
    3. '(i' → logprob: -2.215366840362549
    4. '(node' → logprob: -2.465366840362549
    5. '(k' → logprob: -4.340366840362549
    6. '(s' → logprob: -4.465366840362549
    7. '()' → logprob: -4.590366840362549
    8. '(line' → logprob: -4.840366840362549
    9. '(skip' → logprob: -5.465366840362549
    10. '(space' → logprob: -5.840366840362549

Token 299: '(a' (ID: 6271)
  Prédit: '(parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.7422704100608826
    2. '(' → logprob: -1.4922704696655273
    3. '(node' → logprob: -1.6172704696655273
    4. '():' → logprob: -2.6172704696655273
    5. '(i' → logprob: -4.492270469665527
    6. '(p' → logprob: -4.867270469665527
    7. '()' → logprob: -5.617270469665527
    8. ':' → logprob: -7.367270469665527
    9. '(prev' → logprob: -7.867270469665527
    10. '(par' → logprob: -7.992270469665527

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010939467698335648
    2. '):' → logprob: -4.885939598083496
    3. ' ,' → logprob: -6.510939598083496
    4. '_parent' → logprob: -7.135939598083496
    5. 'parent' → logprob: -8.260939598083496
    6. ')' → logprob: -9.135939598083496
    7. '_,' → logprob: -9.135939598083496
    8. ',parent' → logprob: -9.135939598083496
    9. '):
' → logprob: -9.510939598083496
    10. 'b' → logprob: -10.260939598083496

Token 301: ' parent' (ID: 5980)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16933508217334747
    2. 'p' → logprob: -1.919335126876831
    3. 'i' → logprob: -5.919334888458252
    4. 'parent' → logprob: -5.919334888458252
    5. 'pa' → logprob: -6.669334888458252
    6. ' b' → logprob: -7.669334888458252
    7. 'par' → logprob: -7.919334888458252
    8. ' p' → logprob: -8.66933536529541
    9. 'x' → logprob: -8.79433536529541
    10. 'v' → logprob: -8.91933536529541

Token 302: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17772652208805084
    2. ',' → logprob: -1.9277265071868896
    3. '):
' → logprob: -4.302726745605469
    4. ')' → logprob: -5.927726745605469
    5. '_idx' → logprob: -8.052726745605469
    6. 'a' → logprob: -8.552726745605469
    7. '_index' → logprob: -8.677726745605469
    8. '):

' → logprob: -10.052726745605469
    9. '_a' → logprob: -10.302726745605469
    10. '=' → logprob: -10.302726745605469

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012277275091037154
    2. ' return' → logprob: -7.251227855682373
    3. 'a' → logprob: -8.501227378845215
    4. ' a' → logprob: -8.876227378845215
    5. 'return' → logprob: -9.251227378845215
    6. '    
' → logprob: -10.751227378845215
    7. '	return' → logprob: -11.126227378845215
    8. ':' → logprob: -11.376227378845215
    9. '    ' → logprob: -11.626227378845215
    10. ':
' → logprob: -12.001227378845215

Token 304: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015134301036596298
    2. 'a' → logprob: -4.265134334564209
    3. '   ' → logprob: -7.640134334564209
    4. ' return' → logprob: -7.640134334564209
    5. 'if' → logprob: -12.14013385772705
    6. ' a' → logprob: -13.51513385772705
    7. '
' → logprob: -14.14013385772705
    8. 'for' → logprob: -14.26513385772705
    9. '```' → logprob: -15.89013385772705
    10. 'def' → logprob: -16.015134811401367

Token 305: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008745167404413223
    2. ' a' → logprob: -4.758745193481445
    3. 'parent' → logprob: -9.008745193481445
    4. ' parent' → logprob: -12.508745193481445
    5. '(a' → logprob: -13.008745193481445
    6. '	a' → logprob: -14.133745193481445
    7. ' ' → logprob: -14.258745193481445
    8. '   ' → logprob: -15.758745193481445
    9. '(' → logprob: -16.133745193481445
    10. '  ' → logprob: -16.258745193481445

Token 306: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2529018521308899
    2. ' ==' → logprob: -1.5029017925262451
    3. '=' → logprob: -7.627902030944824
    4. '[' → logprob: -7.752902030944824
    5. '==
' → logprob: -11.252902030944824
    6. '[]' → logprob: -11.752902030944824
    7. '!=' → logprob: -12.002902030944824
    8. ' =' → logprob: -12.127902030944824
    9. 'a' → logprob: -12.377902030944824
    10. ' ' → logprob: -12.502902030944824

Token 307: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.006054640281945467
    2. ' parent' → logprob: -5.756054878234863
    3. '-' → logprob: -5.881054878234863
    4. '-parent' → logprob: -10.506054878234863
    5. ' -' → logprob: -10.631054878234863
    6. '[parent' → logprob: -11.631054878234863
    7. '(parent' → logprob: -12.006054878234863
    8. 'paren' → logprob: -12.506054878234863
    9. '	parent' → logprob: -12.756054878234863
    10. 'None' → logprob: -13.131054878234863

Token 308: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' remove' (ID: 6234)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.234300971031189
    2. ' main' → logprob: -1.609300971031189
    3. 'def' → logprob: -1.859300971031189
    4. 'dfs' → logprob: -2.2343010902404785
    5. ' def' → logprob: -2.9843010902404785
    6. 'main' → logprob: -2.9843010902404785
    7. ' should' → logprob: -3.1093010902404785
    8. 'should' → logprob: -3.3593010902404785
    9. ' process' → logprob: -4.3593010902404785
    10. ' is' → logprob: -4.8593010902404785

Token 311: '_back' (ID: 8715)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.28793466091156006
    2. '_' → logprob: -2.5379347801208496
    3. '_duplicates' → logprob: -3.1629347801208496
    4. '_child' → logprob: -4.28793478012085
    5. '_at' → logprob: -4.28793478012085
    6. '_element' → logprob: -4.78793478012085
    7. '_from' → logprob: -4.91293478012085
    8. '_item' → logprob: -4.91293478012085
    9. '_edge' → logprob: -5.03793478012085
    10. '_last' → logprob: -5.16293478012085

Token 312: '_edge' (ID: 43226)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.5602422952651978
    2. '_edge' → logprob: -1.1852422952651978
    3. '_reference' → logprob: -3.060242176055908
    4. 'ref' → logprob: -4.060242176055908
    5. '_ref' → logprob: -4.060242176055908
    6. 'edge' → logprob: -4.310242176055908
    7. 'edges' → logprob: -5.060242176055908
    8. '_re' → logprob: -5.310242176055908
    9. '(edge' → logprob: -5.685242176055908
    10. 'ward' → logprob: -5.935242176055908

Token 313: '(X' (ID: 17061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6732189059257507
    2. '(' → logprob: -1.0482189655303955
    3. '(_' → logprob: -3.4232189655303955
    4. '(A' → logprob: -3.5482189655303955
    5. '(parent' → logprob: -3.7982189655303955
    6. '(X' → logprob: -4.048218727111816
    7. '(s' → logprob: -4.673218727111816
    8. '(node' → logprob: -5.048218727111816
    9. '((' → logprob: -5.423218727111816
    10. '_(' → logprob: -5.673218727111816

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000273971410933882
    2. '):' → logprob: -8.875273704528809
    3. ' ,' → logprob: -9.750273704528809
    4. ')' → logprob: -11.000273704528809
    5. '[' → logprob: -11.000273704528809
    6. ',a' → logprob: -11.125273704528809
    7. ',x' → logprob: -12.000273704528809
    8. '   ' → logprob: -12.125273704528809
    9. '[x' → logprob: -12.875273704528809
    10. '[a' → logprob: -13.500273704528809

Token 315: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9630358219146729
    2. 'v' → logprob: -1.7130358219146729
    3. 'parent' → logprob: -1.7130358219146729
    4. 'p' → logprob: -3.088035821914673
    5. 'u' → logprob: -3.088035821914673
    6. ' parent' → logprob: -3.463035821914673
    7. 'x' → logprob: -3.588035821914673
    8. 'i' → logprob: -3.713035821914673
    9. ' v' → logprob: -4.088035583496094
    10. ' a' → logprob: -4.463035583496094

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.17420256882906e-05
    2. ' ,' → logprob: -9.875091552734375
    3. '):' → logprob: -11.250091552734375
    4. ',a' → logprob: -11.375091552734375
    5. ')' → logprob: -11.875091552734375
    6. '[' → logprob: -12.750091552734375
    7. '   ' → logprob: -13.625091552734375
    8. 'a' → logprob: -14.000091552734375
    9. '):
' → logprob: -14.000091552734375
    10. '),' → logprob: -14.625091552734375

Token 317: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0310223288834095
    2. ' parent' → logprob: -4.156022548675537
    3. 'b' → logprob: -4.781022548675537
    4. 'p' → logprob: -5.156022548675537
    5. 'a' → logprob: -8.781022071838379
    6. 'pa' → logprob: -8.781022071838379
    7. ' b' → logprob: -9.406022071838379
    8. 'par' → logprob: -9.656022071838379
    9. ' p' → logprob: -9.781022071838379
    10. 'X' → logprob: -10.406022071838379

Token 318: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47493839263916016
    2. '):' → logprob: -0.9749383926391602
    3. '):
' → logprob: -7.59993839263916
    4. ')' → logprob: -8.84993839263916
    5. '   ' → logprob: -9.09993839263916
    6. ' ,' → logprob: -10.09993839263916
    7. ',a' → logprob: -10.22493839263916
    8. ' ):' → logprob: -11.97493839263916
    9. '[' → logprob: -12.09993839263916
    10. ':' → logprob: -12.72493839263916

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06392253190279007
    2. 'X' → logprob: -2.938922643661499
    3. 'if' → logprob: -5.68892240524292
    4. ' X' → logprob: -6.18892240524292
    5. 'try' → logprob: -6.81392240524292
    6. ' if' → logprob: -7.18892240524292
    7. 'while' → logprob: -7.43892240524292
    8. 'for' → logprob: -7.43892240524292
    9. ' for' → logprob: -8.563922882080078
    10. ' while' → logprob: -9.313922882080078

Token 320: ' for' (ID: 395)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.18256619572639465
    2. 'if' → logprob: -1.9325661659240723
    3. 'try' → logprob: -4.807566165924072
    4. '   ' → logprob: -5.182566165924072
    5. 'for' (adapté à ' for') → logprob: -5.182566165924072
    6. 'while' → logprob: -6.182566165924072
    7. ' X' → logprob: -8.05756664276123
    8. ' if' → logprob: -8.68256664276123
    9. 'temp' → logprob: -10.93256664276123
    10. 'i' → logprob: -11.05756664276123

Token 321: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014065245166420937
    2. 'b' → logprob: -5.014065265655518
    3. ' i' → logprob: -5.389065265655518
    4. 'idx' → logprob: -6.264065265655518
    5. 'neighbor' → logprob: -8.51406478881836
    6. 'index' → logprob: -8.76406478881836
    7. 'v' → logprob: -9.01406478881836
    8. 'to' → logprob: -9.26406478881836
    9. 'j' → logprob: -9.51406478881836
    10. 'e' → logprob: -10.51406478881836

Token 322: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1480887085199356
    2. ' in' → logprob: -2.0230886936187744
    3. ',' → logprob: -5.2730889320373535
    4. ',in' → logprob: -9.773088455200195
    5. ' ' → logprob: -10.023088455200195
    6. 'i' → logprob: -10.523088455200195
    7. '_in' → logprob: -10.523088455200195
    8. '	in' → logprob: -10.523088455200195
    9. 'a' → logprob: -11.023088455200195
    10. ' i' → logprob: -11.273088455200195

Token 323: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.027127277106046677
    2. 'X' → logprob: -3.652127265930176
    3. ' range' → logprob: -7.402127265930176
    4. 'list' → logprob: -8.527127265930176
    5. '(range' → logprob: -12.402127265930176
    6. '(X' → logprob: -12.777127265930176
    7. '[X' → logprob: -12.902127265930176
    8. ' X' → logprob: -13.027127265930176
    9. 'enumer' → logprob: -13.277127265930176
    10. 're' → logprob: -13.277127265930176

Token 324: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.011055129580199718
    2. 'len' → logprob: -4.511054992675781
    3. ' len' → logprob: -12.761054992675781
    4. '	len' → logprob: -12.761054992675781
    5. ',len' → logprob: -14.386054992675781
    6. '=len' → logprob: -14.636054992675781
    7. '   ' → logprob: -14.886054992675781
    8. '<len' → logprob: -16.38605499267578
    9. '(' → logprob: -17.13605499267578
    10. '[len' → logprob: -17.26105499267578

Token 325: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.375
    3. 'X' → logprob: -17.875
    4. ' (' → logprob: -20.0
    5. '((' → logprob: -20.0
    6. '(A' → logprob: -20.375
    7. '(
' → logprob: -20.75
    8. '
' → logprob: -21.125
    9. '(x' → logprob: -21.875
    10. '[X' → logprob: -22.625

Token 326: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0002075933152809739
    2. '(a' → logprob: -9.375207901000977
    3. '[X' → logprob: -10.000207901000977
    4. '[' → logprob: -10.500207901000977
    5. '[parent' → logprob: -10.875207901000977
    6. 'a' → logprob: -11.625207901000977
    7. '[A' → logprob: -11.750207901000977
    8. ' [' → logprob: -12.000207901000977
    9. ')[' → logprob: -13.125207901000977
    10. '))' → logprob: -13.750207901000977

Token 327: '])):
' (ID: 145266)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.3372995853424072
    2. ']))' → logprob: -1.9622995853424072
    3. ')):
' → logprob: -3.2122995853424072
    4. '))' → logprob: -3.2122995853424072
    5. '[a' → logprob: -3.4622995853424072
    6. '])):
' → logprob: -3.7122995853424072
    7. '[' → logprob: -5.712299346923828
    8. ']):' → logprob: -5.837299346923828
    9. '()))' → logprob: -7.337299346923828
    10. 'a' → logprob: -7.587299346923828

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011948712635785341
    2. 'if' → logprob: -7.501194953918457
    3. ' if' → logprob: -7.626194953918457
    4. '   ' → logprob: -9.126194953918457
    5. '           ' → logprob: -10.251194953918457
    6. '	' → logprob: -13.126194953918457
    7. '	   ' → logprob: -13.501194953918457
    8. '<|end|>' → logprob: -13.751194953918457
    9. '	if' → logprob: -14.001194953918457
    10. ' ' → logprob: -14.626194953918457

Token 329: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0520072765648365
    2. '   ' → logprob: -3.3020071983337402
    3. ' if' → logprob: -4.30200719833374
    4. '       ' → logprob: -8.052007675170898
    5. '	if' → logprob: -12.677007675170898
    6. '           ' → logprob: -13.052007675170898
    7. ' ' → logprob: -13.427007675170898
    8. 'b' → logprob: -13.677007675170898
    9. 'If' → logprob: -15.052007675170898
    10. '  ' → logprob: -15.427007675170898

Token 330: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.12726719677448273
    2. ' X' → logprob: -2.1272671222686768
    3. '   ' → logprob: -8.002266883850098
    4. '	X' → logprob: -13.377266883850098
    5. '    ' → logprob: -14.377266883850098
    6. ' ' → logprob: -14.502266883850098
    7. '       ' → logprob: -14.627266883850098
    8. '           ' → logprob: -14.752266883850098
    9. '(X' → logprob: -15.002266883850098
    10. '  ' → logprob: -15.252266883850098

Token 331: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.4849443838757e-06
    2. 'a' → logprob: -12.750004768371582
    3. '[' → logprob: -13.500004768371582
    4. '[
' → logprob: -16.875003814697266
    5. '[A' → logprob: -17.500003814697266
    6. ' [' → logprob: -17.750003814697266
    7. ' a' → logprob: -17.875003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '#a' → logprob: -18.625003814697266
    10. ',a' → logprob: -18.625003814697266

Token 332: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.09386546909809113
    2. '][' → logprob: -2.593865394592285
    3. '[a' → logprob: -4.718865394592285
    4. '[' → logprob: -5.218865394592285
    5. 'k' → logprob: -8.468865394592285
    6. ']' → logprob: -9.593865394592285
    7. ')[' → logprob: -9.968865394592285
    8. '[x' → logprob: -10.218865394592285
    9. ' [' → logprob: -10.343865394592285
    10. '
' → logprob: -11.093865394592285

Token 333: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.173704271830502e-06
    2. ' k' → logprob: -13.37500286102295
    3. '[k' → logprob: -14.12500286102295
    4. '   ' → logprob: -15.25000286102295
    5. '	k' → logprob: -15.50000286102295
    6. 'a' → logprob: -16.125003814697266
    7. ' ' → logprob: -16.250003814697266
    8. '```' → logprob: -17.125003814697266
    9. '"k' → logprob: -17.750003814697266
    10. '{k' → logprob: -18.250003814697266

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014169389382004738
    2. ']==' → logprob: -4.264169216156006
    3. ' ]' → logprob: -12.514169692993164
    4. '==' → logprob: -13.264169692993164
    5. ']!=' → logprob: -15.639169692993164
    6. ']
' → logprob: -15.764169692993164
    7. ' ==' → logprob: -16.514169692993164
    8. ')' → logprob: -17.014169692993164
    9. ')==' → logprob: -18.139169692993164
    10. ']=' → logprob: -18.139169692993164

Token 335: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03806731849908829
    2. ' ==' → logprob: -3.28806734085083
    3. '=' → logprob: -11.413066864013672
    4. ']==' → logprob: -11.788066864013672
    5. '==
' → logprob: -12.163066864013672
    6. ')==' → logprob: -14.538066864013672
    7. '()==' → logprob: -14.538066864013672
    8. '!=' → logprob: -15.163066864013672
    9. ' ' → logprob: -16.163066864013672
    10. '===' → logprob: -16.413066864013672

Token 336: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00033546582562848926
    2. ' parent' → logprob: -8.000335693359375
    3. '[parent' → logprob: -18.750335693359375
    4. '(parent' → logprob: -18.875335693359375
    5. '	parent' → logprob: -19.375335693359375
    6. '   ' → logprob: -21.125335693359375
    7. ',parent' → logprob: -21.750335693359375
    8. '.parent' → logprob: -22.500335693359375
    9. 'paren' → logprob: -22.500335693359375
    10. ' ' → logprob: -22.750335693359375

Token 337: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11370866745710373
    2. ':' → logprob: -2.238708734512329
    3. '):
' → logprob: -7.73870849609375
    4. '           ' → logprob: -8.11370849609375
    5. ' and' → logprob: -9.73870849609375
    6. '       ' → logprob: -10.98870849609375
    7. ':
' → logprob: -11.11370849609375
    8. ':return' → logprob: -11.11370849609375
    9. '():
' → logprob: -11.36370849609375
    10. '):' → logprob: -11.36370849609375

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0073250094428658485
    2. ':' → logprob: -5.507325172424316
    3. ':
' → logprob: -6.257325172424316
    4. ' del' → logprob: -7.882325172424316
    5. ' :' → logprob: -8.257325172424316
    6. 'del' → logprob: -8.632325172424316
    7. ' return' → logprob: -9.007325172424316
    8. ',' → logprob: -9.882325172424316
    9. ' X' → logprob: -10.132325172424316
    10. '          ' → logprob: -10.132325172424316

Token 339: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.8740697503089905
    2. ' del' → logprob: -1.1240696907043457
    3. 'X' → logprob: -2.2490696907043457
    4. '           ' → logprob: -2.3740696907043457
    5. ' X' → logprob: -2.8740696907043457
    6. '               ' → logprob: -5.999069690704346
    7. '	del' → logprob: -8.749070167541504
    8. '   ' → logprob: -10.874070167541504
    9. ' ' → logprob: -11.374070167541504
    10. '	X' → logprob: -11.499070167541504

Token 340: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.007608635816723108
    2. 'X' → logprob: -4.882608413696289
    3. '(X' → logprob: -13.882608413696289
    4. '	X' → logprob: -14.257608413696289
    5. '<|end|>' → logprob: -14.382608413696289
    6. ' ' → logprob: -15.632608413696289
    7. '
' → logprob: -16.13260841369629
    8. '>X' → logprob: -16.50760841369629
    9. '[' → logprob: -17.88260841369629
    10. '```' → logprob: -18.25760841369629

Token 341: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.9153885558771435e-06
    2. 'a' → logprob: -12.250005722045898
    3. '[' → logprob: -13.750005722045898
    4. ' [' → logprob: -17.7500057220459
    5. ' a' → logprob: -17.8750057220459
    6. '[
' → logprob: -18.6250057220459
    7. '```' → logprob: -19.3750057220459
    8. '	a' → logprob: -19.7500057220459
    9. '[A' → logprob: -19.8750057220459
    10. '(a' → logprob: -20.5000057220459

Token 342: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0065096598118543625
    2. '[a' → logprob: -5.881509780883789
    3. '[k' → logprob: -6.006509780883789
    4. '[' → logprob: -6.881509780883789
    5. ']' → logprob: -9.631509780883789
    6. ' ][' → logprob: -9.756509780883789
    7. 'a' → logprob: -10.631509780883789
    8. ')[' → logprob: -11.131509780883789
    9. '}[' → logprob: -11.256509780883789
    10. '```' → logprob: -12.006509780883789

Token 343: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.0126840758603066e-05
    2. '<|end|>' → logprob: -11.000040054321289
    3. 'x' → logprob: -11.500040054321289
    4. ' k' → logprob: -11.750040054321289
    5. 'a' → logprob: -12.750040054321289
    6. '[k' → logprob: -13.750040054321289
    7. 'kx' → logprob: -15.500040054321289
    8. '[' → logprob: -15.625040054321289
    9. '{k' → logprob: -15.875040054321289
    10. '	k' → logprob: -16.00004005432129

Token 344: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018089536752086133
    2. '
' → logprob: -9.625181198120117
    3. '<|end|>' → logprob: -9.625181198120117
    4. ')' → logprob: -11.125181198120117
    5. '            
' → logprob: -12.375181198120117
    6. ',' → logprob: -12.500181198120117
    7. ')
' → logprob: -12.500181198120117
    8. '               ' → logprob: -12.625181198120117
    9. '		' → logprob: -12.625181198120117
    10. '<|end|>' → logprob: -12.750181198120117

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3856492842023727e-06
    2. '	       ' → logprob: -15.500000953674316
    3. '		' → logprob: -15.625000953674316
    4. '       ' → logprob: -15.625000953674316
    5. '	   ' → logprob: -15.625000953674316
    6. 'break' → logprob: -15.750000953674316
    7. '            
' → logprob: -16.000001907348633
    8. '          ' → logprob: -16.250001907348633
    9. '   ' → logprob: -16.375001907348633
    10. ' break' → logprob: -16.750001907348633

Token 346: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33085328340530396
    2. 'break' (adapté à ' break') → logprob: -1.5808532238006592
    3. ' break' → logprob: -2.580853223800659
    4. 'return' → logprob: -8.705853462219238
    5. ' return' → logprob: -11.830853462219238
    6. '   ' → logprob: -12.830853462219238
    7. '	break' → logprob: -13.330853462219238
    8. '       ' → logprob: -13.580853462219238
    9. '
' → logprob: -13.830853462219238
    10. 'b' → logprob: -14.955853462219238

Token 347: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: ' visit' (ID: 4030)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.5595202445983887
    2. ' dfs' → logprob: -1.0595202445983887
    3. ' main' → logprob: -3.5595202445983887
    4. 'main' → logprob: -3.9345202445983887
    5. 'process' → logprob: -5.309520244598389
    6. ' process' → logprob: -5.434520244598389
    7. ' solve' → logprob: -5.809520244598389
    8. 'def' → logprob: -5.934520244598389
    9. 'solve' → logprob: -6.059520244598389
    10. 'build' → logprob: -6.059520244598389

Token 350: '_first' (ID: 29347)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.43298840522766113
    2. '(' → logprob: -1.3079884052276611
    3. '(X' → logprob: -2.557988405227661
    4. '(A' → logprob: -5.807988166809082
    5. '(
' → logprob: -8.182988166809082
    6. '(node' → logprob: -8.682988166809082
    7. '(_' → logprob: -9.932988166809082
    8. '(x' → logprob: -11.057988166809082
    9. ' (' → logprob: -11.307988166809082
    10. '_(' → logprob: -11.432988166809082

Token 351: '_time' (ID: 6425)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2967259883880615
    2. '(' → logprob: -1.5467259883880615
    3. '(A' → logprob: -4.046726226806641
    4. '(X' → logprob: -4.671726226806641
    5. '(node' → logprob: -4.921726226806641
    6. ' (' → logprob: -5.546726226806641
    7. '(_' → logprob: -6.046726226806641
    8. '_parent' → logprob: -7.171726226806641
    9. '_child' → logprob: -7.921726226806641
    10. '_visit' → logprob: -8.29672622680664

Token 352: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.11698103696107864
    2. '(X' → logprob: -2.616981029510498
    3. '(' → logprob: -3.491981029510498
    4. '(A' → logprob: -4.991981029510498
    5. ' (' → logprob: -10.241981506347656
    6. '():' → logprob: -10.491981506347656
    7. '(node' → logprob: -11.241981506347656
    8. '(
' → logprob: -11.366981506347656
    9. '(parent' → logprob: -11.616981506347656
    10. '(x' → logprob: -11.616981506347656

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06351685523986816
    2. '):' → logprob: -2.813516855239868
    3. ')' → logprob: -7.188516616821289
    4. '):
' → logprob: -8.063516616821289
    5. ' ,' → logprob: -8.188516616821289
    6. ',a' → logprob: -9.313516616821289
    7. ' ):' → logprob: -10.563516616821289
    8. 'a' → logprob: -11.063516616821289
    9. '_,' → logprob: -11.313516616821289
    10. '   ' → logprob: -11.563516616821289

Token 354: ' ET' (ID: 23345)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.35742953419685364
    2. 'parent' → logprob: -1.6074295043945312
    3. ' X' → logprob: -3.4824295043945312
    4. ' parent' → logprob: -3.6074295043945312
    5. 'P' → logprob: -4.232429504394531
    6. 'p' → logprob: -4.357429504394531
    7. 'a' → logprob: -5.232429504394531
    8. ' p' → logprob: -6.857429504394531
    9. 'f' → logprob: -6.982429504394531
    10. 'i' → logprob: -7.107429504394531

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015987720107659698
    2. ',' → logprob: -7.126598834991455
    3. '2' → logprob: -7.376598834991455
    4. ')' → logprob: -9.876598358154297
    5. '[' → logprob: -11.189098358154297
    6. '),' → logprob: -11.564098358154297
    7. 'i' → logprob: -11.626598358154297
    8. '):
' → logprob: -11.814098358154297
    9. ')]' → logprob: -12.064098358154297
    10. '_' → logprob: -12.126598358154297

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0048515996895730495
    2. '):' → logprob: -5.379851818084717
    3. ')' → logprob: -9.129851341247559
    4. ' ,' → logprob: -9.504851341247559
    5. ',n' → logprob: -11.504851341247559
    6. '):
' → logprob: -12.129851341247559
    7. '   ' → logprob: -12.379851341247559
    8. '[' → logprob: -12.879851341247559
    9. ',i' → logprob: -12.879851341247559
    10. '),' → logprob: -12.879851341247559

Token 357: ' ct' (ID: 40541)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.19244208931922913
    2. 'X' → logprob: -2.3174421787261963
    3. 'ET' → logprob: -2.9424421787261963
    4. ' P' → logprob: -5.067441940307617
    5. 'ANS' → logprob: -5.942441940307617
    6. ')' → logprob: -6.067441940307617
    7. 'TMP' → logprob: -6.067441940307617
    8. 'parent' → logprob: -6.192441940307617
    9. 'USED' → logprob: -6.567441940307617
    10. 'ORG' → logprob: -6.567441940307617

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8376278877258301
    2. ')' → logprob: -1.46262788772583
    3. '2' → logprob: -2.21262788772583
    4. '1' → logprob: -2.46262788772583
    5. 'p' → logprob: -2.71262788772583
    6. 'r' → logprob: -3.46262788772583
    7. 'mp' → logprob: -4.21262788772583
    8. '):
' → logprob: -5.21262788772583
    9. 'i' → logprob: -5.83762788772583
    10. 'P' → logprob: -5.83762788772583

Token 359: ' OR' (ID: 4917)
  Prédit: 'ORG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ORG' → logprob: -0.4231432378292084
    2. 'P' → logprob: -2.048143148422241
    3. 'X' → logprob: -2.298143148422241
    4. 'ET' → logprob: -3.298143148422241
    5. 'TMP' → logprob: -4.29814338684082
    6. ' P' → logprob: -4.67314338684082
    7. 'ANS' → logprob: -4.79814338684082
    8. 'p' → logprob: -5.04814338684082
    9. 'f' → logprob: -5.42314338684082
    10. ' X' → logprob: -5.54814338684082

Token 360: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -4.723352049040841e-06
    2. ' G' → logprob: -14.500004768371582
    3. '1' → logprob: -14.625004768371582
    4. ',' → logprob: -14.937504768371582
    5. '
' → logprob: -15.000004768371582
    6. '[G' → logprob: -15.187504768371582
    7. '[' → logprob: -15.312504768371582
    8. 'g' → logprob: -15.375004768371582
    9. 'Gs' → logprob: -15.437504768371582
    10. 'GIN' → logprob: -16.125003814697266

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023693911731243134
    2. '):' → logprob: -4.023694038391113
    3. '):
' → logprob: -5.273694038391113
    4. ',i' → logprob: -8.898694038391113
    5. ' ,' → logprob: -9.023694038391113
    6. ')' → logprob: -9.773694038391113
    7. '[i' → logprob: -10.523694038391113
    8. '   ' → logprob: -11.648694038391113
    9. '):
' → logprob: -11.648694038391113
    10. '):

' → logprob: -11.648694038391113

Token 362: ' USED' (ID: 129384)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.9609848856925964
    2. 'TMP' → logprob: -0.9609848856925964
    3. 'USED' → logprob: -2.335984945297241
    4. 'X' → logprob: -3.085984945297241
    5. 'ET' → logprob: -3.460984945297241
    6. 'Q' → logprob: -4.085984706878662
    7. 'f' → logprob: -4.585984706878662
    8. 'ANS' → logprob: -4.960984706878662
    9. ' TMP' → logprob: -4.960984706878662
    10. 'used' → logprob: -5.460984706878662

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027063118293881416
    2. '):' → logprob: -3.7770631313323975
    3. '):
' → logprob: -5.652062892913818
    4. ' ,' → logprob: -9.027063369750977
    5. ',i' → logprob: -9.902063369750977
    6. ',
' → logprob: -10.152063369750977
    7. ')' → logprob: -11.152063369750977
    8. '   ' → logprob: -11.402063369750977
    9. ',a' → logprob: -11.527063369750977
    10. ' ):' → logprob: -11.527063369750977

Token 364: ' C' (ID: 363)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.49809539318084717
    2. 'X' → logprob: -1.6230953931808472
    3. 'TMP' → logprob: -2.7480955123901367
    4. 'Q' → logprob: -2.9980955123901367
    5. 'ET' → logprob: -3.6230955123901367
    6. 'ANS' → logprob: -4.373095512390137
    7. ' P' → logprob: -4.498095512390137
    8. 'f' → logprob: -4.748095512390137
    9. ' TMP' → logprob: -5.248095512390137
    10. 'N' → logprob: -5.748095512390137

Token 365: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7818551659584045
    2. '):
' → logprob: -1.6568551063537598
    3. ',' → logprob: -1.9068551063537598
    4. 'T' → logprob: -2.0318551063537598
    5. ')' → logprob: -3.7818551063537598
    6. '[i' → logprob: -4.78185510635376
    7. '):

' → logprob: -5.28185510635376
    8. 'P' → logprob: -5.40685510635376
    9. 'NT' → logprob: -5.53185510635376
    10. '
' → logprob: -6.03185510635376

Token 366: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.27068549394607544
    2. 'X' → logprob: -2.1456854343414307
    3. ' P' → logprob: -3.6456854343414307
    4. 'parent' → logprob: -3.7706854343414307
    5. 'Q' → logprob: -3.8956854343414307
    6. 'ANS' → logprob: -4.27068567276001
    7. 'N' → logprob: -5.02068567276001
    8. 'TMP' → logprob: -5.14568567276001
    9. 'ET' → logprob: -5.27068567276001
    10. 'f' → logprob: -5.64568567276001

Token 367: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053623273968696594
    2. '):' → logprob: -3.4286231994628906
    3. '):
' → logprob: -3.9286231994628906
    4. ',
' → logprob: -10.17862319946289
    5. ')' → logprob: -11.05362319946289
    6. '):
' → logprob: -11.05362319946289
    7. '):

' → logprob: -11.67862319946289
    8. ' ,' → logprob: -11.80362319946289
    9. '   ' → logprob: -12.67862319946289
    10. ',parent' → logprob: -12.67862319946289

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015514736878685653
    2. 'if' → logprob: -9.875155448913574
    3. ' if' → logprob: -10.875155448913574
    4. ':' → logprob: -11.375155448913574
    5. 'ct' → logprob: -11.375155448913574
    6. '   ' → logprob: -11.375155448913574
    7. 'CT' → logprob: -11.875155448913574
    8. 'P' → logprob: -12.000155448913574
    9. '```' → logprob: -12.125155448913574
    10. 'ET' → logprob: -12.250155448913574

Token 369: ' if' (ID: 538)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.23680517077445984
    2. 'if' (adapté à ' if') → logprob: -2.6118052005767822
    3. 'ET' → logprob: -3.1118052005767822
    4. 'P' → logprob: -3.2368052005767822
    5. 'ORG' → logprob: -3.9868052005767822
    6. 'ct' → logprob: -4.361804962158203
    7. 'CT' → logprob: -4.611804962158203
    8. '   ' → logprob: -5.611804962158203
    9. 'stack' → logprob: -5.986804962158203
    10. 'for' → logprob: -6.986804962158203

Token 370: ' i' (ID: 575)
  Prédit: ' USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' USED' → logprob: -0.2548014521598816
    2. 'USED' → logprob: -1.7548015117645264
    3. ' not' → logprob: -3.1298015117645264
    4. 'ct' → logprob: -6.004801273345947
    5. 'CT' → logprob: -6.754801273345947
    6. 'not' → logprob: -6.879801273345947
    7. ' ct' → logprob: -7.129801273345947
    8. 'ET' → logprob: -7.879801273345947
    9. 'OR' → logprob: -8.129801750183105
    10. ' CT' → logprob: -8.379801750183105

Token 371: ':
' (ID: 734)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.49879392981529236
    2. ' ==' → logprob: -1.3737939596176147
    3. '==' → logprob: -2.498793840408325
    4. ' in' → logprob: -3.373793840408325
    5. ')' → logprob: -4.873794078826904
    6. 'not' → logprob: -5.123794078826904
    7. ' >=' → logprob: -5.998794078826904
    8. ' <' → logprob: -6.623794078826904
    9. '>=' → logprob: -6.873794078826904
    10. 'in' → logprob: -6.998794078826904

Token 372: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8298290967941284
    2. ' ==' → logprob: -1.4548290967941284
    3. ':' → logprob: -2.704829216003418
    4. '==' → logprob: -2.829829216003418
    5. 'CT' → logprob: -3.829829216003418
    6. ' =' → logprob: -3.829829216003418
    7. 'ct' → logprob: -3.954829216003418
    8. 'ET' → logprob: -4.079829216003418
    9. '[' → logprob: -4.329829216003418
    10. ':
' → logprob: -4.579829216003418

Token 373: ' OR' (ID: 4917)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.4495278596878052
    2. 'ET' → logprob: -2.8245277404785156
    3. 'ct' → logprob: -3.0745277404785156
    4. 'if' → logprob: -3.1995277404785156
    5. ' P' → logprob: -3.1995277404785156
    6. ' ct' → logprob: -3.1995277404785156
    7. 'ORG' → logprob: -3.5745277404785156
    8. ' if' → logprob: -3.8245277404785156
    9. 'USED' → logprob: -3.9495277404785156
    10. 'CT' → logprob: -4.074527740478516

Token 374: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -2.935296834039036e-06
    2. '1' → logprob: -14.37500286102295
    3. '[' → logprob: -14.62500286102295
    4. '[i' → logprob: -14.87500286102295
    5. '[G' → logprob: -15.00000286102295
    6. '=' → logprob: -15.62500286102295
    7. ' G' → logprob: -16.000003814697266
    8. 'GIN' → logprob: -16.250003814697266
    9. '```' → logprob: -16.562503814697266
    10. '(' → logprob: -16.750003814697266

Token 375: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02671138383448124
    2. '[P' → logprob: -3.9017114639282227
    3. '[' → logprob: -5.276711463928223
    4. '[C' → logprob: -7.651711463928223
    5. '=' → logprob: -9.401711463928223
    6. '[I' → logprob: -9.651711463928223
    7. ' =' → logprob: -9.651711463928223
    8. 'P' → logprob: -9.901711463928223
    9. '[a' → logprob: -10.151711463928223
    10. 'i' → logprob: -10.276711463928223

Token 376: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.052617985755205154
    2. '[i' → logprob: -3.5526180267333984
    3. '-' → logprob: -4.802618026733398
    4. ']=' → logprob: -4.927618026733398
    5. '[' → logprob: -5.677618026733398
    6. ']+=' → logprob: -6.177618026733398
    7. ']==' → logprob: -7.427618026733398
    8. ']+' → logprob: -8.177618026733398
    9. ' -' → logprob: -8.677618026733398
    10. ']!=' → logprob: -8.802618026733398

Token 377: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8808268904685974
    2. '=' → logprob: -1.1308269500732422
    3. ' +=' → logprob: -2.005826950073242
    4. '+' → logprob: -3.505826950073242
    5. '[' → logprob: -3.505826950073242
    6. ' =' → logprob: -3.630826950073242
    7. ' ^=' → logprob: -4.755826950073242
    8. '[i' → logprob: -4.880826950073242
    9. '-' → logprob: -5.005826950073242
    10. '^' → logprob: -5.130826950073242

Token 378: ' USED' (ID: 129384)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.14774653315544128
    2. '1' → logprob: -3.5227465629577637
    3. 'CT' → logprob: -3.8977465629577637
    4. 'C' → logprob: -3.8977465629577637
    5. 'ORG' → logprob: -4.022746562957764
    6. '0' → logprob: -4.522746562957764
    7. ' ct' → logprob: -4.647746562957764
    8. 'P' → logprob: -5.272746562957764
    9. 'ET' → logprob: -5.397746562957764
    10. 'USED' → logprob: -5.522746562957764

Token 379: '[C' (ID: 107876)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12866149842739105
    2. '[P' → logprob: -2.3786613941192627
    3. '[' → logprob: -4.128661632537842
    4. '[parent' → logprob: -5.378661632537842
    5. 'i' → logprob: -6.253661632537842
    6. '[C' → logprob: -6.503661632537842
    7. 'ct' → logprob: -7.003661632537842
    8. '[a' → logprob: -7.128661632537842
    9. 'parent' → logprob: -7.628661632537842
    10. 'P' → logprob: -7.753661632537842

Token 380: '[P' (ID: 132164)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.048751551657915115
    2. '[P' → logprob: -3.0487515926361084
    3. '[' → logprob: -9.423751831054688
    4. 'i' → logprob: -11.048751831054688
    5. 'P' → logprob: -11.298751831054688
    6. '[I' → logprob: -11.548751831054688
    7. '[p' → logprob: -11.673751831054688
    8. '[a' → logprob: -12.173751831054688
    9. '[
' → logprob: -12.298751831054688
    10. '[parent' → logprob: -12.298751831054688

Token 381: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004350797680672258
    2. '[P' → logprob: -8.375434875488281
    3. 'i' → logprob: -9.500434875488281
    4. '[' → logprob: -9.875434875488281
    5. '[a' → logprob: -10.625434875488281
    6. '[parent' → logprob: -10.875434875488281
    7. '[
' → logprob: -11.750434875488281
    8. '[I' → logprob: -12.125434875488281
    9. ']' → logprob: -12.375434875488281
    10. '(i' → logprob: -13.000434875488281

Token 382: ']]' (ID: 8928)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.396757089532912e-05
    2. '[P' → logprob: -10.3750638961792
    3. ']]' → logprob: -11.5000638961792
    4. 'i' → logprob: -12.0000638961792
    5. '[' → logprob: -12.0000638961792
    6. ']' → logprob: -12.5000638961792
    7. '[I' → logprob: -12.6250638961792
    8. '[parent' → logprob: -14.2500638961792
    9. '(i' → logprob: -14.5000638961792
    10. '][' → logprob: -15.0000638961792

Token 383: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09463910013437271
    2. '[i' → logprob: -2.8446390628814697
    3. ']+' → logprob: -3.9696390628814697
    4. '-' → logprob: -5.469639301300049
    5. '[' → logprob: -6.344639301300049
    6. ' -' → logprob: -6.469639301300049
    7. ']]' → logprob: -6.719639301300049
    8. ']-' → logprob: -6.719639301300049
    9. ' ]' → logprob: -7.094639301300049
    10. 'i' → logprob: -7.219639301300049

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5085328817367554
    2. '<|end|>' → logprob: -1.2585328817367554
    3. '
' → logprob: -2.883533000946045
    4. '	ct' → logprob: -4.008533000946045
    5. ' ' → logprob: -4.633533000946045
    6. '[' → logprob: -5.508533000946045
    7. 'ct' → logprob: -6.008533000946045
    8. '\t' → logprob: -6.008533000946045
    9. '       ' → logprob: -6.133533000946045
    10. '+' → logprob: -6.383533000946045

Token 385: ' ct' (ID: 40541)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.27469560503959656
    2. '   ' → logprob: -2.149695634841919
    3. ' USED' → logprob: -3.149695634841919
    4. '<|end|>' → logprob: -3.649695634841919
    5. 'else' → logprob: -4.39969539642334
    6. '_USED' → logprob: -4.39969539642334
    7. '  ' → logprob: -4.77469539642334
    8. ' ' → logprob: -5.64969539642334
    9. 'for' → logprob: -5.89969539642334
    10. 'ct' (adapté à ' ct') → logprob: -6.14969539642334

Token 386: '[' (ID: 58)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8817464113235474
    2. ' +=' → logprob: -1.1317464113235474
    3. '[' → logprob: -1.3817464113235474
    4. '+' → logprob: -5.006746292114258
    5. '[i' → logprob: -5.756746292114258
    6. '=' → logprob: -6.506746292114258
    7. ' +' → logprob: -8.256746292114258
    8. ' =' → logprob: -9.006746292114258
    9. '[:]' → logprob: -9.006746292114258
    10. '   ' → logprob: -9.631746292114258

Token 387: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030869776383042336
    2. 'i' → logprob: -3.905869722366333
    3. ']' → logprob: -5.155869960784912
    4. 'C' → logprob: -6.155869960784912
    5. ' ' → logprob: -6.530869960784912
    6. 'P' → logprob: -8.530869483947754
    7. '[' → logprob: -9.155869483947754
    8. ')' → logprob: -9.155869483947754
    9. ' i' → logprob: -9.530869483947754
    10. '   ' → logprob: -9.843369483947754

Token 388: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019600363448262215
    2. ']+=' → logprob: -6.251959800720215
    3. ']+' → logprob: -10.751959800720215
    4. ' ]' → logprob: -11.876959800720215
    5. '[' → logprob: -13.626959800720215
    6. ']
' → logprob: -14.501959800720215
    7. '+]' → logprob: -15.251959800720215
    8. ')' → logprob: -15.626959800720215
    9. '
' → logprob: -16.12696075439453
    10. '][' → logprob: -16.12696075439453

Token 389: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3872787058353424
    2. '+=' → logprob: -1.13727867603302
    3. ' -=' → logprob: -8.38727855682373
    4. '=' → logprob: -9.13727855682373
    5. '[' → logprob: -10.38727855682373
    6. '-=' → logprob: -11.01227855682373
    7. '+' → logprob: -11.26227855682373
    8. ' =' → logprob: -11.88727855682373
    9. ']+=' → logprob: -12.63727855682373
    10. ' +' → logprob: -14.51227855682373

Token 390: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005449305754154921
    2. ' ' → logprob: -8.250544548034668
    3. 'ORG' → logprob: -8.750544548034668
    4. 'ET' → logprob: -9.875544548034668
    5. 'USED' → logprob: -10.125544548034668
    6. 'OR' → logprob: -11.750544548034668
    7. 'used' → logprob: -12.125544548034668
    8. 'USE' → logprob: -13.500544548034668
    9. 'USR' → logprob: -13.500544548034668
    10. 'make' → logprob: -13.500544548034668

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001089735422283411
    2. ' ' → logprob: -7.751089572906494
    3. 'ORG' → logprob: -7.751089572906494
    4. 'ET' → logprob: -9.501090049743652
    5. 'USED' → logprob: -10.001090049743652
    6. 'make' → logprob: -10.876090049743652
    7. 'used' → logprob: -11.001090049743652
    8. 'f' → logprob: -11.376090049743652
    9. 'OR' → logprob: -11.626090049743652
    10. '   ' → logprob: -12.001090049743652

Token 392: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: ' #' (ID: 1069)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.009731768630445004
    2. ' USED' → logprob: -5.759731769561768
    3. 'Used' → logprob: -6.384731769561768
    4. '   ' → logprob: -6.759731769561768
    5. '_USED' → logprob: -6.884731769561768
    6. 'C' → logprob: -7.134731769561768
    7. 'US' → logprob: -7.759731769561768
    8. 'USE' → logprob: -8.00973129272461
    9. 'used' → logprob: -8.25973129272461
    10. '<|end|>' → logprob: -8.63473129272461

Token 394: ' list' (ID: 1562)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.11402928829193115
    2. ' USED' → logprob: -2.6140294075012207
    3. '<|end|>' → logprob: -3.9890294075012207
    4. 'Used' → logprob: -5.739029407501221
    5. 'C' → logprob: -5.989029407501221
    6. '_USED' → logprob: -6.239029407501221
    7. 'CT' → logprob: -6.614029407501221
    8. 'ct' → logprob: -6.864029407501221
    9. 'OR' → logprob: -7.239029407501221
    10. 'ORG' → logprob: -7.614029407501221

Token 395: ' allows' (ID: 7927)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' pass' (ID: 1853)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.6726890206336975
    2. ' passing' → logprob: -1.6726889610290527
    3. 'passing' → logprob: -2.5476889610290527
    4. ' ct' → logprob: -3.5476889610290527
    5. 'mutable' → logprob: -3.5476889610290527
    6. 'pass' → logprob: -3.6726889610290527
    7. 'mut' → logprob: -4.047688961029053
    8. ' pass' → logprob: -4.172688961029053
    9. 'mod' → logprob: -4.297688961029053
    10. 'def' → logprob: -4.547688961029053

Token 397: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.9284197092056274
    2. 'by' → logprob: -1.0534197092056274
    3. '-by' → logprob: -1.5534197092056274
    4. 'ct' → logprob: -4.053419589996338
    5. '[' → logprob: -4.428419589996338
    6. '[]' → logprob: -5.678419589996338
    7. ' ' → logprob: -6.303419589996338
    8. '<|end|>' → logprob: -6.428419589996338
    9. 'able' → logprob: -6.803419589996338
    10. 'reference' → logprob: -7.053419589996338

Token 398: ' reference' (ID: 9682)
  Prédit: 'reference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reference' → logprob: -5.512236498361744e-07
    2. 'ref' → logprob: -15.375000953674316
    3. ' reference' → logprob: -15.375000953674316
    4. '-reference' → logprob: -16.125
    5. 'refer' → logprob: -17.0
    6. '_reference' → logprob: -18.0
    7. 'value' → logprob: -20.5
    8. 'object' → logprob: -20.875
    9. 'mutable' → logprob: -21.25
    10. 'list' → logprob: -21.625

Token 399: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3376930058002472
    2. 'USED' → logprob: -1.8376929759979248
    3. '<|end|>' → logprob: -2.712692975997925
    4. ' USED' → logprob: -3.462692975997925
    5. ' ' → logprob: -4.837693214416504
    6. '_USED' → logprob: -5.587693214416504
    7. '  ' → logprob: -5.712693214416504
    8. '    
' → logprob: -6.212693214416504
    9. 'return' → logprob: -6.337693214416504
    10. 'US' → logprob: -6.462693214416504

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5808145999908447
    2. '<|end|>' → logprob: -1.5808145999908447
    3. 'USED' → logprob: -2.5808145999908447
    4. ' USED' → logprob: -2.8308145999908447
    5. '_USED' → logprob: -2.9558145999908447
    6. ' ' → logprob: -4.455814361572266
    7. '    ' → logprob: -5.455814361572266
    8. '    
' → logprob: -5.580814361572266
    9. ' return' → logprob: -5.830814361572266
    10. ' Used' → logprob: -6.080814361572266

Token 401: ' if' (ID: 538)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.0050327288918197155
    2. 'P' → logprob: -5.630032539367676
    3. 'ORG' → logprob: -8.130032539367676
    4. 'CT' → logprob: -8.505032539367676
    5. 'C' → logprob: -8.755032539367676
    6. 'if' (adapté à ' if') → logprob: -9.005032539367676
    7. 'ct' → logprob: -9.005032539367676
    8. 'used' → logprob: -9.130032539367676
    9. 'return' → logprob: -9.130032539367676
    10. ' USED' → logprob: -10.005032539367676

Token 402: ' ET' (ID: 23345)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5470022559165955
    2. 'ct' → logprob: -2.0470023155212402
    3. 'i' → logprob: -2.2970023155212402
    4. 'not' → logprob: -3.1720023155212402
    5. 'CT' → logprob: -3.4220023155212402
    6. 'OR' → logprob: -3.6720023155212402
    7. 'P' → logprob: -3.9220023155212402
    8. ' not' → logprob: -4.04700231552124
    9. 'USED' → logprob: -4.54700231552124
    10. ' C' → logprob: -4.54700231552124

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -14.875001907348633
    3. '2' → logprob: -14.937501907348633
    4. '[' → logprob: -15.250001907348633
    5. '
' → logprob: -16.312501907348633
    6. ' ' → logprob: -16.687501907348633
    7. '   ' → logprob: -16.875001907348633
    8. '`' → logprob: -17.000001907348633
    9. '[i' → logprob: -17.125001907348633
    10. '' → logprob: -17.312501907348633

Token 404: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008636995335109532
    2. '[' → logprob: -7.625863552093506
    3. '[P' → logprob: -9.125864028930664
    4. '[C' → logprob: -9.125864028930664
    5. ' is' → logprob: -9.750864028930664
    6. '[I' → logprob: -10.250864028930664
    7. ')' → logprob: -10.750864028930664
    8. '==' → logprob: -11.125864028930664
    9. '[
' → logprob: -12.375864028930664
    10. 'i' → logprob: -12.625864028930664

Token 405: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5857293605804443
    2. ']==' → logprob: -1.0857293605804443
    3. ']:' → logprob: -2.4607293605804443
    4. '[i' → logprob: -4.835729598999023
    5. ']>' → logprob: -5.710729598999023
    6. ']<' → logprob: -6.210729598999023
    7. '==' → logprob: -6.710729598999023
    8. '[' → logprob: -6.835729598999023
    9. ']:
' → logprob: -6.960729598999023
    10. ']!=' → logprob: -7.085729598999023

Token 406: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2328391969203949
    2. ' ==' → logprob: -1.8578392267227173
    3. ':' → logprob: -3.3578391075134277
    4. '[' → logprob: -4.857839107513428
    5. '=' → logprob: -5.982839107513428
    6. '!=' → logprob: -6.357839107513428
    7. '+=' → logprob: -6.732839107513428
    8. '>' → logprob: -7.232839107513428
    9. ' +=' → logprob: -7.607839107513428
    10. ' !=' → logprob: -7.732839107513428

Token 407: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04732225090265274
    2. '-' → logprob: -3.9223222732543945
    3. '1' → logprob: -4.2973222732543945
    4. 'ct' → logprob: -4.6723222732543945
    5. ' ' → logprob: -6.4223222732543945
    6. '2' → logprob: -7.2973222732543945
    7. ' -' → logprob: -7.9223222732543945
    8. 'C' → logprob: -8.547322273254395
    9. '3' → logprob: -9.172322273254395
    10. 'CT' → logprob: -9.297322273254395

Token 408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00788011122494936
    2. '1' → logprob: -5.382880210876465
    3. '-' → logprob: -6.382880210876465
    4. ' ' → logprob: -7.132880210876465
    5. 'ct' → logprob: -8.132880210876465
    6. '2' → logprob: -8.382880210876465
    7. ' -' → logprob: -9.882880210876465
    8. 'C' → logprob: -10.257880210876465
    9. '3' → logprob: -10.507880210876465
    10. 'c' → logprob: -11.132880210876465

Token 409: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11483264714479446
    2. ':
' → logprob: -2.239832639694214
    3. ' and' → logprob: -7.239832878112793
    4. '=' → logprob: -7.989832878112793
    5. '   ' → logprob: -8.239832878112793
    6. ' :' → logprob: -8.739832878112793
    7. ' or' → logprob: -8.989832878112793
    8. '):' → logprob: -9.489832878112793
    9. '):
' → logprob: -9.489832878112793
    10. ' :
' → logprob: -9.739832878112793

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11853549629449844
    2. 'ET' → logprob: -2.9935355186462402
    3. '   ' → logprob: -3.1185355186462402
    4. ' ET' → logprob: -4.24353551864624
    5. ' US' → logprob: -7.36853551864624
    6. '           ' → logprob: -7.36853551864624
    7. '	   ' → logprob: -8.243535041809082
    8. '	' → logprob: -8.493535041809082
    9. '_ET' → logprob: -8.493535041809082
    10. '    ' → logprob: -9.118535041809082

Token 411: ' ET' (ID: 23345)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' (adapté à ' ET') → logprob: -0.0544496588408947
    2. 'USED' → logprob: -3.5544495582580566
    3. '   ' → logprob: -4.929449558258057
    4. 'ct' → logprob: -5.179449558258057
    5. ' ET' → logprob: -5.179449558258057
    6. ' USED' → logprob: -5.804449558258057
    7. 'CT' → logprob: -6.929449558258057
    8. '       ' → logprob: -7.304449558258057
    9. '	ct' → logprob: -9.054450035095215
    10. ' ct' → logprob: -9.054450035095215

Token 412: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.500000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[i' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.5
    6. '' → logprob: -17.0
    7. 'ET' → logprob: -17.875
    8. '
' → logprob: -18.375
    9. ' ' → logprob: -18.375
    10. '       ' → logprob: -18.75

Token 413: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.250004768371582
    3. '[I' → logprob: -15.875004768371582
    4. 'i' → logprob: -16.8750057220459
    5. '[a' → logprob: -17.2500057220459
    6. '[
' → logprob: -17.6250057220459
    7. '```' → logprob: -17.8750057220459
    8. ' [' → logprob: -18.5000057220459
    9. '=' → logprob: -18.8750057220459
    10. '[index' → logprob: -18.8750057220459

Token 414: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007633600849658251
    2. ']=' → logprob: -5.132633686065674
    3. ']+=' → logprob: -7.007633686065674
    4. '[i' → logprob: -7.632633686065674
    5. '[' → logprob: -8.507633209228516
    6. ' ]' → logprob: -9.882633209228516
    7. '=' → logprob: -10.257633209228516
    8. ')' → logprob: -12.007633209228516
    9. ' =' → logprob: -12.382633209228516
    10. ']
' → logprob: -12.882633209228516

Token 415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1525380164384842
    2. ' =' → logprob: -2.1525380611419678
    3. '+=' → logprob: -4.027537822723389
    4. ' +=' → logprob: -4.902537822723389
    5. '[' → logprob: -10.902538299560547
    6. ' |=' → logprob: -12.277538299560547
    7. '[i' → logprob: -12.902538299560547
    8. ',' → logprob: -12.902538299560547
    9. '=i' → logprob: -13.277538299560547
    10. ' ' → logprob: -13.527538299560547

Token 416: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.00011927806917810813
    2. ' ct' → logprob: -9.75011920928955
    3. '1' → logprob: -10.12511920928955
    4. 'c' → logprob: -12.12511920928955
    5. 'i' → logprob: -12.62511920928955
    6. '	ct' → logprob: -13.00011920928955
    7. '(ct' → logprob: -13.50011920928955
    8. ' ' → logprob: -13.75011920928955
    9. '  ' → logprob: -13.87511920928955
    10. '   ' → logprob: -14.00011920928955

Token 417: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009599390905350447
    2. '0' → logprob: -7.000959873199463
    3. '<|end|>' → logprob: -10.750960350036621
    4. '```' → logprob: -12.000960350036621
    5. '1' → logprob: -12.625960350036621
    6. ' ' → logprob: -12.625960350036621
    7. '<|end|>' → logprob: -12.750960350036621
    8. '][' → logprob: -13.500960350036621
    9. ' [' → logprob: -14.000960350036621
    10. '
' → logprob: -14.125960350036621

Token 418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6286106983898208e-05
    2. ']' → logprob: -11.625016212463379
    3. ' ' → logprob: -12.125016212463379
    4. '   ' → logprob: -14.375016212463379
    5. '[' → logprob: -15.312516212463379
    6. '
' → logprob: -15.437516212463379
    7. ')' → logprob: -16.125017166137695
    8. '1' → logprob: -16.437517166137695
    9. '-' → logprob: -16.500017166137695
    10. '```' → logprob: -16.812517166137695

Token 419: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003745094407349825
    2. ']
' → logprob: -6.628745079040527
    3. ')' → logprob: -6.878745079040527
    4. '<|end|>' → logprob: -6.878745079040527
    5. ' ]' → logprob: -8.753745079040527
    6. '   ' → logprob: -9.753745079040527
    7. ')]' → logprob: -9.878745079040527
    8. '<|end|>' → logprob: -10.753745079040527
    9. '
' → logprob: -11.378745079040527
    10. '[' → logprob: -11.628745079040527

Token 420: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: ' visit' (ID: 4030)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.7691171765327454
    2. ' visit' → logprob: -1.0191171169281006
    3. 'def' → logprob: -2.6441171169281006
    4. 'dfs' → logprob: -3.8941171169281006
    5. 'read' → logprob: -4.01911735534668
    6. ' read' → logprob: -4.14411735534668
    7. ' def' → logprob: -4.14411735534668
    8. ' dfs' → logprob: -5.01911735534668
    9. 'make' → logprob: -5.14411735534668
    10. ' make' → logprob: -5.70661735534668

Token 422: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.03782077878713608
    2. '_next' → logprob: -3.787820816040039
    3. '_last' → logprob: -5.037820816040039
    4. '_first' → logprob: -5.787820816040039
    5. '_again' → logprob: -6.912820816040039
    6. '_' → logprob: -7.037820816040039
    7. '_final' → logprob: -7.912820816040039
    8. '_other' → logprob: -8.037820816040039
    9. '_return' → logprob: -8.037820816040039
    10. '_sub' → logprob: -8.537820816040039

Token 423: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.041768160182983e-05
    2. '_times' → logprob: -10.625080108642578
    3. '_' → logprob: -11.000080108642578
    4. 'time' → logprob: -12.125080108642578
    5. '_line' → logprob: -12.375080108642578
    6. '_token' → logprob: -12.500080108642578
    7. '_space' → logprob: -12.625080108642578
    8. '_second' → logprob: -13.125080108642578
    9. '_once' → logprob: -13.375080108642578
    10. '_step' → logprob: -13.500080108642578

Token 424: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00016158436483237892
    2. '(' → logprob: -8.750161170959473
    3. '(I' → logprob: -13.250161170959473
    4. '(
' → logprob: -14.375161170959473
    5. '(a' → logprob: -15.375161170959473
    6. ' (' → logprob: -15.875161170959473
    7. '(n' → logprob: -16.50016212463379
    8. '(j' → logprob: -16.62516212463379
    9. '(s' → logprob: -17.00016212463379
    10. '(index' → logprob: -17.37516212463379

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.460291767027229e-05
    2. ' ,' → logprob: -9.375094413757324
    3. '):' → logprob: -12.500094413757324
    4. '‌,' → logprob: -13.375094413757324
    5. ',
' → logprob: -13.625094413757324
    6. '   ' → logprob: -13.875094413757324
    7. ')' → logprob: -13.875094413757324
    8. '):
' → logprob: -14.625094413757324
    9. 'def' → logprob: -15.875094413757324
    10. '_,' → logprob: -16.12509536743164

Token 426: ' ET' (ID: 23345)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.1453963816165924
    2. ' ET' → logprob: -2.0203964710235596
    3. 'ct' → logprob: -6.7703962326049805
    4. 'CT' → logprob: -7.3953962326049805
    5. ' ct' → logprob: -7.5203962326049805
    6. ' CT' → logprob: -8.64539623260498
    7. ' P' → logprob: -10.14539623260498
    8. ' ' → logprob: -10.14539623260498
    9. 'P' → logprob: -10.89539623260498
    10. 'et' → logprob: -10.95789623260498

Token 427: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4272752852994017e-05
    2. '1' → logprob: -11.00002384185791
    3. '   ' → logprob: -13.00002384185791
    4. '[' → logprob: -13.25002384185791
    5. '```' → logprob: -14.00002384185791
    6. ' ' → logprob: -14.12502384185791
    7. '₂' → logprob: -15.12502384185791
    8. '
' → logprob: -15.18752384185791
    9. '۲' → logprob: -15.18752384185791
    10. 'def' → logprob: -16.000024795532227

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030936390976421535
    2. ' ,' → logprob: -8.625308990478516
    3. '   ' → logprob: -9.750308990478516
    4. '):' → logprob: -10.375308990478516
    5. ',i' → logprob: -11.375308990478516
    6. '[' → logprob: -11.875308990478516
    7. ')' → logprob: -12.375308990478516
    8. '[i' → logprob: -12.750308990478516
    9. ' ' → logprob: -12.875308990478516
    10. '    ' → logprob: -13.250308990478516

Token 429: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.14277054369449615
    2. ' ct' → logprob: -2.017770528793335
    3. '	ct' → logprob: -10.892770767211914
    4. 'CT' → logprob: -11.142770767211914
    5. ' ' → logprob: -11.267770767211914
    6. '   ' → logprob: -11.392770767211914
    7. 'et' → logprob: -11.892770767211914
    8. 'ET' → logprob: -12.142770767211914
    9. '  ' → logprob: -12.392770767211914
    10. ' CT' → logprob: -12.830270767211914

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6789137084269896e-05
    2. ' ,' → logprob: -10.50003719329834
    3. '   ' → logprob: -12.25003719329834
    4. '):
' → logprob: -13.12503719329834
    5. '):' → logprob: -13.37503719329834
    6. ',
' → logprob: -15.50003719329834
    7. '[' → logprob: -15.75003719329834
    8. '  ' → logprob: -16.375036239624023
    9. ',i' → logprob: -16.375036239624023
    10. ' ' → logprob: -17.000036239624023

Token 431: ' USED' (ID: 129384)
  Prédit: 'ORG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ORG' → logprob: -0.02463042177259922
    2. ' OR' → logprob: -4.274630546569824
    3. 'ET' → logprob: -5.399630546569824
    4. 'OR' → logprob: -5.399630546569824
    5. 'ct' → logprob: -7.399630546569824
    6. 'CT' → logprob: -8.524630546569824
    7. ' ET' → logprob: -8.774630546569824
    8. ' ct' → logprob: -9.024630546569824
    9. 'OT' → logprob: -9.899630546569824
    10. 'ORD' → logprob: -10.149630546569824

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001514557225164026
    2. ' ,' → logprob: -9.500151634216309
    3. '):' → logprob: -10.000151634216309
    4. '):
' → logprob: -11.625151634216309
    5. ',C' → logprob: -11.875151634216309
    6. ',
' → logprob: -12.500151634216309
    7. '   ' → logprob: -12.875151634216309
    8. 'def' → logprob: -13.000151634216309
    9. '[' → logprob: -13.750151634216309
    10. 'C' → logprob: -14.250151634216309

Token 433: ' TMP' (ID: 121022)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.18932323157787323
    2. 'P' → logprob: -1.8143231868743896
    3. 'ct' → logprob: -5.314323425292969
    4. 'ORG' → logprob: -6.939323425292969
    5. ' C' → logprob: -7.064323425292969
    6. '   ' → logprob: -7.189323425292969
    7. 'CT' → logprob: -7.814323425292969
    8. ' P' → logprob: -8.064323425292969
    9. 'OR' → logprob: -8.189323425292969
    10. 'ET' → logprob: -8.314323425292969

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01977991685271263
    2. '):
' → logprob: -4.019779682159424
    3. '):' → logprob: -6.894779682159424
    4. 'def' → logprob: -8.644780158996582
    5. ' ,' → logprob: -9.269780158996582
    6. ',C' → logprob: -9.519780158996582
    7. '   ' → logprob: -9.769780158996582
    8. ',i' → logprob: -10.019780158996582
    9. '):

' → logprob: -10.019780158996582
    10. '[' → logprob: -10.519780158996582

Token 435: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5740270614624023
    2. 'P' → logprob: -1.4490270614624023
    3. 'ORG' → logprob: -1.9490270614624023
    4. ' C' → logprob: -4.324027061462402
    5. 'ET' → logprob: -4.324027061462402
    6. ' P' → logprob: -4.699027061462402
    7. 'OR' → logprob: -4.949027061462402
    8. 'CT' → logprob: -5.324027061462402
    9. 'i' → logprob: -5.824027061462402
    10. ' OR' → logprob: -6.449027061462402

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005344282370060682
    2. '):' → logprob: -5.880344390869141
    3. '):
' → logprob: -6.130344390869141
    4. ',P' → logprob: -8.13034439086914
    5. ',
' → logprob: -10.88034439086914
    6. ' ,' → logprob: -11.25534439086914
    7. '   ' → logprob: -11.63034439086914
    8. ',i' → logprob: -11.88034439086914
    9. '[P' → logprob: -12.25534439086914
    10. '):

' → logprob: -13.13034439086914

Token 437: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.008208625949919224
    2. 'i' → logprob: -5.758208751678467
    3. ' P' → logprob: -5.758208751678467
    4. ')' → logprob: -7.508208751678467
    5. ',' → logprob: -7.633208751678467
    6. '   ' → logprob: -8.133208274841309
    7. ' i' → logprob: -9.133208274841309
    8. 'ET' → logprob: -9.508208274841309
    9. 'X' → logprob: -9.633208274841309
    10. 'Q' → logprob: -9.633208274841309

Token 438: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.27869704365730286
    2. '):' → logprob: -1.5286970138549805
    3. ',' → logprob: -3.7786970138549805
    4. '):
' → logprob: -5.9036970138549805
    5. '   ' → logprob: -7.1536970138549805
    6. '):

' → logprob: -10.77869701385498
    7. ')' → logprob: -12.02869701385498
    8. ' ):
' → logprob: -12.52869701385498
    9. ' ):' → logprob: -13.02869701385498
    10. '[i' → logprob: -13.15369701385498

Token 439: ' OR' (ID: 4917)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.973495364189148
    2. 'ORG' → logprob: -0.973495364189148
    3. 'ANS' → logprob: -2.4734954833984375
    4. 'Q' → logprob: -2.5984954833984375
    5. 'f' → logprob: -3.8484954833984375
    6. 'OR' → logprob: -4.0984954833984375
    7. 'i' → logprob: -4.5984954833984375
    8. 'make' → logprob: -5.0984954833984375
    9. 'CT' → logprob: -5.3484954833984375
    10. '):
' → logprob: -5.5984954833984375

Token 440: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -4.1318875446449965e-05
    2. '1' → logprob: -12.062541007995605
    3. 'Gin' → logprob: -12.500041007995605
    4. '[' → logprob: -13.000041007995605
    5. '   ' → logprob: -13.187541007995605
    6. '
' → logprob: -13.437541007995605
    7. ' G' → logprob: -13.625041007995605
    8. ')' → logprob: -13.625041007995605
    9. '[i' → logprob: -13.625041007995605
    10. 'GIN' → logprob: -13.812541007995605

Token 441: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09806013107299805
    2. ',' → logprob: -2.848060131072998
    3. '):' → logprob: -3.348060131072998
    4. '):
' → logprob: -8.598060607910156
    5. '   ' → logprob: -9.848060607910156
    6. '):

' → logprob: -10.973060607910156
    7. '[i' → logprob: -11.598060607910156
    8. ')' → logprob: -11.723060607910156
    9. ',
' → logprob: -12.223060607910156
    10. ',i' → logprob: -12.348060607910156

Token 442: ' AN' (ID: 3473)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.3709535002708435
    2. 'ANS' → logprob: -1.4959535598754883
    3. 'i' → logprob: -3.6209535598754883
    4. 'Q' → logprob: -3.9959535598754883
    5. 'f' → logprob: -4.370953559875488
    6. 'AN' → logprob: -4.995953559875488
    7. 'CT' → logprob: -5.245953559875488
    8. '):
' → logprob: -5.870953559875488
    9. 'make' → logprob: -6.120953559875488
    10. ' ET' → logprob: -6.370953559875488

Token 443: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -7.3458322731312364e-06
    2. 's' → logprob: -13.125007629394531
    3. '
' → logprob: -14.250007629394531
    4. ' S' → logprob: -14.375007629394531
    5. ')' → logprob: -14.625007629394531
    6. '   ' → logprob: -14.750007629394531
    7. ')
' → logprob: -15.000007629394531
    8. ',' → logprob: -15.125007629394531
    9. '[S' → logprob: -15.125007629394531
    10. '```' → logprob: -15.125007629394531

Token 444: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.24240662157535553
    2. '):' → logprob: -1.6174066066741943
    3. ',' → logprob: -4.242406845092773
    4. '):
' → logprob: -6.242406845092773
    5. '   ' → logprob: -7.617406845092773
    6. '):

' → logprob: -10.867406845092773
    7. ')' → logprob: -11.492406845092773
    8. ' ):
' → logprob: -13.492406845092773
    9. ',i' → logprob: -13.617406845092773
    10. 'def' → logprob: -13.867406845092773

Token 445: ' f' (ID: 285)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.9040058851242065
    2. 'f' → logprob: -1.0290058851242065
    3. 'X' → logprob: -1.9040058851242065
    4. 'Q' → logprob: -3.279006004333496
    5. ' ET' → logprob: -4.279006004333496
    6. ' f' → logprob: -4.654006004333496
    7. 'i' → logprob: -4.904006004333496
    8. 'N' → logprob: -5.029006004333496
    9. ' X' → logprob: -5.529006004333496
    10. 'make' → logprob: -6.154006004333496

Token 446: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.330147385597229
    2. '):' → logprob: -1.330147385597229
    3. ',' → logprob: -4.4551472663879395
    4. '):
' → logprob: -5.3301472663879395
    5. '):

' → logprob: -9.455147743225098
    6. '   ' → logprob: -9.580147743225098
    7. ')' → logprob: -9.705147743225098
    8. ',i' → logprob: -11.455147743225098
    9. 'def' → logprob: -11.580147743225098
    10. '[' → logprob: -11.830147743225098

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007866036146879196
    2. 'if' → logprob: -5.007865905761719
    3. 'TMP' → logprob: -7.882865905761719
    4. '```' → logprob: -8.257865905761719
    5. ' if' → logprob: -8.382865905761719
    6. '_TMP' → logprob: -10.382865905761719
    7. '	if' → logprob: -10.507865905761719
    8. ':' → logprob: -10.507865905761719
    9. '   ' → logprob: -10.507865905761719
    10. 'ET' → logprob: -10.882865905761719

Token 448: ' ET' (ID: 23345)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.9553450345993042
    2. 'if' → logprob: -1.3303450345993042
    3. 'TMP' → logprob: -1.9553450345993042
    4. 'tmp' → logprob: -3.2053451538085938
    5. 'for' → logprob: -3.3303451538085938
    6. '   ' → logprob: -3.5803451538085938
    7. 'ct' → logprob: -3.7053451538085938
    8. 'ANS' → logprob: -3.9553451538085938
    9. 'P' → logprob: -4.580345153808594
    10. 'ORG' → logprob: -4.955345153808594

Token 449: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2948405128554441e-05
    2. '
' → logprob: -12.50001335144043
    3. '[' → logprob: -13.81251335144043
    4. '۲' → logprob: -13.93751335144043
    5. ' ' → logprob: -14.18751335144043
    6. '1' → logprob: -14.25001335144043
    7. '   ' → logprob: -14.37501335144043
    8. '

' → logprob: -14.68751335144043
    9. '```' → logprob: -15.12501335144043
    10. '₂' → logprob: -15.18751335144043

Token 450: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.822646693966817e-06
    2. '[' → logprob: -12.000007629394531
    3. '[I' → logprob: -14.375007629394531
    4. 'i' → logprob: -15.125007629394531
    5. '   ' → logprob: -15.875007629394531
    6. '
' → logprob: -16.12500762939453
    7. ' [' → logprob: -16.25000762939453
    8. ',i' → logprob: -17.00000762939453
    9. '```' → logprob: -17.00000762939453
    10. '[
' → logprob: -17.25000762939453

Token 451: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20972947776317596
    2. '[i' → logprob: -1.7097294330596924
    3. ']=' → logprob: -5.3347296714782715
    4. '=' → logprob: -6.8347296714782715
    5. '[' → logprob: -7.0847296714782715
    6. '   ' → logprob: -7.3347296714782715
    7. ' ]' → logprob: -8.209729194641113
    8. ' =' → logprob: -8.834729194641113
    9. ']+=' → logprob: -9.209729194641113
    10. '][' → logprob: -9.459729194641113

Token 452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038689903914928436
    2. ' =' → logprob: -3.2886898517608643
    3. '[' → logprob: -7.413690090179443
    4. '[i' → logprob: -10.663689613342285
    5. '   ' → logprob: -11.913689613342285
    6. '+=' → logprob: -12.038689613342285
    7. ',' → logprob: -13.038689613342285
    8. '=i' → logprob: -13.413689613342285
    9. ' ' → logprob: -13.538689613342285
    10. ' +=' → logprob: -14.038689613342285

Token 453: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.020625276491045952
    2. ' ct' → logprob: -3.895625352859497
    3. '	ct' → logprob: -10.270625114440918
    4. '   ' → logprob: -10.770625114440918
    5. ' ' → logprob: -11.895625114440918
    6. 'c' → logprob: -12.270625114440918
    7. '  ' → logprob: -13.145625114440918
    8. 'cnt' → logprob: -13.270625114440918
    9. '(ct' → logprob: -13.395625114440918
    10. 'ctr' → logprob: -13.395625114440918

Token 454: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.625000953674316
    3. '[
' → logprob: -15.625000953674316
    4. '1' → logprob: -16.125001907348633
    5. '```' → logprob: -17.250001907348633
    6. ' ' → logprob: -17.375001907348633
    7. '2' → logprob: -17.500001907348633
    8. ' [' → logprob: -17.750001907348633
    9. '	' → logprob: -17.750001907348633
    10. 's' → logprob: -18.250001907348633

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008121283026412129
    2. '[' → logprob: -7.12581205368042
    3. ' ' → logprob: -12.375812530517578
    4. '
' → logprob: -13.000812530517578
    5. ']' → logprob: -14.875812530517578
    6. '   ' → logprob: -15.625812530517578
    7. '][' → logprob: -15.875812530517578
    8. '1' → logprob: -16.000812530517578
    9. '[
' → logprob: -16.438312530517578
    10. '```' → logprob: -16.500812530517578

Token 456: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09184250980615616
    2. '[' → logprob: -2.7168424129486084
    3. '
' → logprob: -4.7168426513671875
    4. ']
' → logprob: -4.7168426513671875
    5. '   ' → logprob: -6.0918426513671875
    6. ' ]' → logprob: -7.3418426513671875
    7. ']+' → logprob: -8.216842651367188
    8. ')' → logprob: -8.466842651367188
    9. '+' → logprob: -9.591842651367188
    10. '-' → logprob: -10.341842651367188

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02764679677784443
    2. '<|end|>' → logprob: -3.902646780014038
    3. ' if' → logprob: -6.027647018432617
    4. 'if' → logprob: -6.277647018432617
    5. 'for' → logprob: -7.902647018432617
    6. ' for' → logprob: -8.402647018432617
    7. 'ct' → logprob: -8.652647018432617
    8. '  ' → logprob: -8.652647018432617
    9. '    
' → logprob: -8.777647018432617
    10. '
' → logprob: -8.777647018432617

Token 458: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' (adapté à ' USED') → logprob: -0.28948307037353516
    2. 'if' → logprob: -2.289483070373535
    3. 'ct' → logprob: -2.914483070373535
    4. 'TMP' → logprob: -3.289483070373535
    5. 'ANS' → logprob: -4.414483070373535
    6. '   ' → logprob: -4.414483070373535
    7. 'tmp' → logprob: -4.539483070373535
    8. 'for' → logprob: -5.664483070373535
    9. ' USED' → logprob: -5.789483070373535
    10. 'CT' → logprob: -5.914483070373535

Token 459: '[C' (ID: 107876)
  Prédit: '[C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.0004845346265938133
    2. '[' → logprob: -8.375484466552734
    3. 'C' → logprob: -9.250484466552734
    4. '[P' → logprob: -9.500484466552734
    5. '[c' → logprob: -10.500484466552734
    6. '=C' → logprob: -11.250484466552734
    7. '[i' → logprob: -11.375484466552734
    8. '[:]' → logprob: -11.875484466552734
    9. ' =' → logprob: -12.375484466552734
    10. '[
' → logprob: -12.750484466552734

Token 460: '[i' (ID: 1768)
  Prédit: '[P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[P' → logprob: -0.02365700714290142
    2. '[i' → logprob: -3.7736570835113525
    3. 'P' → logprob: -8.273656845092773
    4. '[' → logprob: -9.398656845092773
    5. 'i' → logprob: -10.148656845092773
    6. '[
' → logprob: -11.648656845092773
    7. '[I' → logprob: -12.148656845092773
    8. '[p' → logprob: -12.398656845092773
    9. '	P' → logprob: -13.273656845092773
    10. ' [' → logprob: -13.711156845092773

Token 461: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5790996551513672
    2. ']]' → logprob: -0.8290996551513672
    3. '[i' → logprob: -7.329099655151367
    4. '[' → logprob: -7.329099655151367
    5. ']+' → logprob: -7.329099655151367
    6. ']-' → logprob: -7.454099655151367
    7. ']+=' → logprob: -7.829099655151367
    8. '   ' → logprob: -10.204099655151367
    9. ']]]' → logprob: -10.579099655151367
    10. '][' → logprob: -10.704099655151367

Token 462: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.27315500378608704
    2. '-=' → logprob: -1.7731549739837646
    3. ' +=' → logprob: -3.5231549739837646
    4. ' -=' → logprob: -3.5231549739837646
    5. '=' → logprob: -4.648155212402344
    6. '-' → logprob: -8.398155212402344
    7. ' =' → logprob: -8.773155212402344
    8. '[' → logprob: -8.898155212402344
    9. '   ' → logprob: -9.898155212402344
    10. ']+=' → logprob: -10.273155212402344

Token 463: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005023968406021595
    2. ' ' → logprob: -7.875502586364746
    3. 'TMP' → logprob: -9.875502586364746
    4. '   ' → logprob: -10.250502586364746
    5. '-' → logprob: -11.250502586364746
    6. 'ct' → logprob: -12.625502586364746
    7. ' TMP' → logprob: -12.750502586364746
    8. 'tmp' → logprob: -12.750502586364746
    9. '(' → logprob: -12.875502586364746
    10. ' -' → logprob: -13.313002586364746

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0868278524139896e-05
    2. ' ' → logprob: -10.37506103515625
    3. 'f' → logprob: -11.37506103515625
    4. '-' → logprob: -12.00006103515625
    5. 'ct' → logprob: -12.75006103515625
    6. '(' → logprob: -13.37506103515625
    7. 'TMP' → logprob: -13.50006103515625
    8. '   ' → logprob: -13.75006103515625
    9. 'ANS' → logprob: -13.75006103515625
    10. '2' → logprob: -14.43756103515625

Token 465: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' TMP' (ID: 121022)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TMP' → logprob: -0.4924597442150116
    2. ' TMP' → logprob: -0.992459774017334
    3. 'ORG' → logprob: -6.117459774017334
    4. ' (' → logprob: -6.367459774017334
    5. 'ET' → logprob: -6.367459774017334
    6. ' USED' → logprob: -6.492459774017334
    7. 'USED' → logprob: -6.617459774017334
    8. '0' → logprob: -6.617459774017334
    9. 'OR' → logprob: -6.742459774017334
    10. '(' → logprob: -6.867459774017334

Token 467: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5839282870292664
    2. '[C' → logprob: -1.2089283466339111
    3. '[P' → logprob: -1.9589283466339111
    4. '[' → logprob: -6.458928108215332
    5. '[c' → logprob: -7.208928108215332
    6. '[a' → logprob: -8.958928108215332
    7. '[
' → logprob: -9.833928108215332
    8. '[I' → logprob: -10.208928108215332
    9. 'C' → logprob: -10.333928108215332
    10. ' [' → logprob: -10.583928108215332

Token 468: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017822343856096268
    2. ']
' → logprob: -4.642822265625
    3. '[i' → logprob: -5.142822265625
    4. ' ]' → logprob: -6.642822265625
    5. '[' → logprob: -7.767822265625
    6. '[
' → logprob: -8.767822265625
    7. '   ' → logprob: -9.017822265625
    8. ']

' → logprob: -10.267822265625
    9. '<|end|>' → logprob: -10.642822265625
    10. ' ]
' → logprob: -10.642822265625

Token 469: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: ' if' (ID: 538)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -1.005039095878601
    2. '   ' → logprob: -1.130039095878601
    3. 'if' (adapté à ' if') → logprob: -1.755039095878601
    4. ' if' → logprob: -3.6300392150878906
    5. 'for' → logprob: -3.6300392150878906
    6. 'ct' → logprob: -4.130039215087891
    7. 'ans' → logprob: -4.130039215087891
    8. 'TMP' → logprob: -4.255039215087891
    9. ' for' → logprob: -4.755039215087891
    10. 'tmp' → logprob: -4.880039215087891

Token 471: ' i' (ID: 575)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.7835477590560913
    2. 'ET' → logprob: -2.158547878265381
    3. 'ORG' → logprob: -2.283547878265381
    4. 'P' → logprob: -2.408547878265381
    5. 'i' → logprob: -2.658547878265381
    6. 'ANS' → logprob: -3.033547878265381
    7. 'C' → logprob: -3.283547878265381
    8. 'should' → logprob: -4.158547878265381
    9. ' USED' → logprob: -4.533547878265381
    10. 'f' → logprob: -4.658547878265381

Token 472: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.4178563356399536
    2. ' and' → logprob: -1.5428563356399536
    3. '==' → logprob: -1.6678563356399536
    4. ' !=' → logprob: -2.167856216430664
    5. ':' → logprob: -2.417856216430664
    6. 'and' → logprob: -3.042856216430664
    7. '!=' → logprob: -3.542856216430664
    8. ' not' → logprob: -3.667856216430664
    9. ' <' → logprob: -4.042856216430664
    10. ' in' → logprob: -4.042856216430664

Token 473: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6771150827407837
    2. '       ' → logprob: -0.8021150827407837
    3. ' P' → logprob: -4.302114963531494
    4. ' AN' → logprob: -4.927114963531494
    5. 'ANS' → logprob: -5.177114963531494
    6. ':
' → logprob: -5.427114963531494
    7. 'P' → logprob: -5.552114963531494
    8. ':' → logprob: -5.802114963531494
    9. ' and' → logprob: -7.427114963531494
    10. 'ans' → logprob: -7.802114963531494

Token 474: ' p' (ID: 275)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.14777110517024994
    2. 'ans' → logprob: -3.147771120071411
    3. 'tmp' → logprob: -3.897771120071411
    4. 'p' (adapté à ' p') → logprob: -4.272770881652832
    5. 'TMP' → logprob: -4.897770881652832
    6. 'parent' → logprob: -5.022770881652832
    7. 'if' → logprob: -5.022770881652832
    8. 'P' → logprob: -5.022770881652832
    9. 'x' → logprob: -5.522770881652832
    10. 'k' → logprob: -5.522770881652832

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04883511736989021
    2. '=' → logprob: -3.048835039138794
    3. 'i' → logprob: -10.048834800720215
    4. ' ' → logprob: -10.298834800720215
    5. 'ar' → logprob: -10.298834800720215
    6. '   ' → logprob: -10.673834800720215
    7. 'op' → logprob: -10.673834800720215
    8. '=C' → logprob: -10.673834800720215
    9. '	' → logprob: -11.048834800720215
    10. '=P' → logprob: -12.048834800720215

Token 476: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0001422770437784493
    2. ' P' → logprob: -8.875142097473145
    3. '   ' → logprob: -13.000142097473145
    4. '	P' → logprob: -17.50014305114746
    5. '       ' → logprob: -17.50014305114746
    6. '=P' → logprob: -17.50014305114746
    7. '[P' → logprob: -18.12514305114746
    8. '  ' → logprob: -18.37514305114746
    9. '>P' → logprob: -18.75014305114746
    10. ' ' → logprob: -18.87514305114746

Token 477: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. 'i' → logprob: -11.87501049041748
    3. '[' → logprob: -13.00001049041748
    4. ' [' → logprob: -14.75001049041748
    5. '[
' → logprob: -15.87501049041748
    6. ' i' → logprob: -16.125009536743164
    7. '[I' → logprob: -16.375009536743164
    8. '[a' → logprob: -16.500009536743164
    9. '(i' → logprob: -16.500009536743164
    10. ' =' → logprob: -16.500009536743164

Token 478: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22947579622268677
    2. ']
' → logprob: -1.604475736618042
    3. '[' → logprob: -6.229475975036621
    4. '[i' → logprob: -6.729475975036621
    5. '];' → logprob: -8.854475975036621
    6. ']
' → logprob: -8.979475975036621
    7. '       ' → logprob: -9.104475975036621
    8. '[
' → logprob: -9.354475975036621
    9. ')' → logprob: -9.479475975036621
    10. ']

' → logprob: -9.729475975036621

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13200721144676208
    2. '   ' → logprob: -2.882007122039795
    3. 'if' → logprob: -2.882007122039795
    4. ' if' → logprob: -5.132007122039795
    5. 'ANS' → logprob: -7.007007122039795
    6. 'tmp' → logprob: -7.132007122039795
    7. 'TMP' → logprob: -7.632007122039795
    8. 'for' → logprob: -8.007007598876953
    9. '           ' → logprob: -8.007007598876953
    10. 'ans' → logprob: -8.569507598876953

Token 480: ' k' (ID: 372)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'TMP' → logprob: -1.1682708263397217
    2. 'USED' → logprob: -1.2932708263397217
    3. 'ANS' → logprob: -1.5432708263397217
    4. 'if' → logprob: -2.1682708263397217
    5. 'tmp' → logprob: -3.2932708263397217
    6. 'ans' → logprob: -4.793271064758301
    7. 'ct' → logprob: -5.168271064758301
    8. 'for' → logprob: -5.293271064758301
    9. 'x' → logprob: -5.793271064758301
    10. 'TEMP' → logprob: -5.918271064758301

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1606014370918274
    2. '=' → logprob: -1.9106013774871826
    3. ' ' → logprob: -9.535601615905762
    4. 'p' → logprob: -9.785601615905762
    5. '   ' → logprob: -10.410601615905762
    6. '=C' → logprob: -10.410601615905762
    7. '=
' → logprob: -10.910601615905762
    8. ',' → logprob: -11.285601615905762
    9. '=p' → logprob: -11.285601615905762
    10. '=k' → logprob: -11.410601615905762

Token 482: ' ET' (ID: 23345)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.09834044426679611
    2. ' USED' → logprob: -3.7233405113220215
    3. 'C' → logprob: -3.9733405113220215
    4. 'ANS' → logprob: -4.0983405113220215
    5. 'ct' → logprob: -4.0983405113220215
    6. 'CT' → logprob: -5.3483405113220215
    7. 'ET' → logprob: -5.8483405113220215
    8. 'f' → logprob: -5.9733405113220215
    9. '(' → logprob: -6.3483405113220215
    10. 'ORG' → logprob: -6.5983405113220215

Token 483: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6326066255569458
    2. '1' → logprob: -0.7576066255569458
    3. '```' → logprob: -13.382606506347656
    4. '``' → logprob: -14.507606506347656
    5. '   ' → logprob: -14.945106506347656
    6. 'S' → logprob: -15.007606506347656
    7. '[' → logprob: -15.007606506347656
    8. '
' → logprob: -15.257606506347656
    9. 'T' → logprob: -15.445106506347656
    10. '２' → logprob: -15.695106506347656

Token 484: '[i' (ID: 1768)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.08638086915016174
    2. '[i' → logprob: -2.836380958557129
    3. 'p' → logprob: -3.961380958557129
    4. 'i' → logprob: -5.836380958557129
    5. '[' → logprob: -6.461380958557129
    6. '[P' → logprob: -8.086380958557129
    7. '[a' → logprob: -9.711380958557129
    8. '   ' → logprob: -10.273880958557129
    9. '	p' → logprob: -10.961380958557129
    10. 'a' → logprob: -10.961380958557129

Token 485: ']' (ID: 60)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.5954760909080505
    2. ']' → logprob: -0.8454760909080505
    3. '[' → logprob: -4.720476150512695
    4. 'p' → logprob: -5.220476150512695
    5. '-' → logprob: -5.970476150512695
    6. '[i' → logprob: -6.720476150512695
    7. ']-' → logprob: -8.345476150512695
    8. '   ' → logprob: -8.345476150512695
    9. ')' → logprob: -8.720476150512695
    10. ' -' → logprob: -8.970476150512695

Token 486: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005240037105977535
    2. ' -' → logprob: -5.255239963531494
    3. '+' → logprob: -13.755240440368652
    4. 'if' → logprob: -13.880240440368652
    5. '   ' → logprob: -14.005240440368652
    6. '
' → logprob: -14.380240440368652
    7. ' ' → logprob: -14.505240440368652
    8. '-
' → logprob: -14.755240440368652
    9. '[' → logprob: -15.005240440368652
    10. '-k' → logprob: -15.005240440368652

Token 487: ' ET' (ID: 23345)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.012255324982106686
    2. 'ORG' → logprob: -4.8872551918029785
    3. ' ET' → logprob: -5.6372551918029785
    4. 'OR' → logprob: -7.5122551918029785
    5. '   ' → logprob: -8.512255668640137
    6. '_ET' → logprob: -9.387255668640137
    7. 'max' → logprob: -10.137255668640137
    8. 'OT' → logprob: -10.512255668640137
    9. '  ' → logprob: -10.762255668640137
    10. ' ' → logprob: -10.887255668640137

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '2' → logprob: -13.62500286102295
    3. 'ORG' → logprob: -14.87500286102295
    4. '```' → logprob: -15.62500286102295
    5. '' → logprob: -15.68750286102295
    6. '[' → logprob: -15.81250286102295
    7. '۱' → logprob: -15.81250286102295
    8. '１' → logprob: -16.187503814697266
    9. 'T' → logprob: -16.375003814697266
    10. 'org' → logprob: -16.687503814697266

Token 489: '[i' (ID: 1768)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0009898189455270767
    2. 'p' → logprob: -7.12598991394043
    3. '[i' → logprob: -8.87598991394043
    4. '[' → logprob: -11.12598991394043
    5. 'i' → logprob: -11.75098991394043
    6. '][' → logprob: -12.50098991394043
    7. '1' → logprob: -12.75098991394043
    8. ' [' → logprob: -13.25098991394043
    9. '	p' → logprob: -13.37598991394043
    10. '```' → logprob: -13.37598991394043

Token 490: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2389562427997589
    2. '-' → logprob: -2.8639562129974365
    3. '[p' → logprob: -2.9889562129974365
    4. ']
' → logprob: -3.4889562129974365
    5. ' -' → logprob: -3.6139562129974365
    6. ']+' → logprob: -3.7389562129974365
    7. '+' → logprob: -4.988956451416016
    8. '[' → logprob: -5.238956451416016
    9. '
' → logprob: -5.863956451416016
    10. ' +' → logprob: -6.363956451416016

Token 491: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06473005563020706
    2. '-' → logprob: -3.689730167388916
    3. 'p' → logprob: -4.189730167388916
    4. '
' → logprob: -4.814730167388916
    5. 'if' → logprob: -5.189730167388916
    6. ' +' → logprob: -5.689730167388916
    7. '       ' → logprob: -6.564730167388916
    8. 'for' → logprob: -7.314730167388916
    9. '[' → logprob: -7.689730167388916
    10. '+p' → logprob: -8.189729690551758

Token 492: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1946520358324051
    2. 'ET' → logprob: -2.4446520805358887
    3. 'f' → logprob: -3.4446520805358887
    4. ' ' → logprob: -4.194652080535889
    5. 'ORG' → logprob: -4.194652080535889
    6. 'ANS' → logprob: -5.069652080535889
    7. ' ET' → logprob: -5.319652080535889
    8. ' f' → logprob: -5.319652080535889
    9. '(' → logprob: -5.569652080535889
    10. 'USED' → logprob: -5.569652080535889

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13908781111240387
    2. 'ET' → logprob: -2.3890879154205322
    3. 'f' → logprob: -3.6390879154205322
    4. 'ORG' → logprob: -5.264087677001953
    5. 'ANS' → logprob: -6.389087677001953
    6. '(' → logprob: -6.639087677001953
    7. 'USED' → logprob: -7.014087677001953
    8. ' ' → logprob: -7.389087677001953
    9. ' f' → logprob: -8.514087677001953
    10. 'TMP' → logprob: -8.764087677001953

Token 494: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25963374972343445
    2. '       ' → logprob: -1.5096337795257568
    3. '
' → logprob: -5.634633541107178
    4. '<|end|>' → logprob: -6.259633541107178
    5. '        
' → logprob: -6.759633541107178
    6. '+' → logprob: -9.384634017944336
    7. '    
' → logprob: -9.384634017944336
    8. ')
' → logprob: -9.509634017944336
    9. 'if' → logprob: -9.634634017944336
    10. '  
' → logprob: -9.634634017944336

Token 495: ' USED' (ID: 129384)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06990697979927063
    2. '(T' → logprob: -3.4449069499969482
    3. 'ORG' → logprob: -4.819907188415527
    4. 'USED' → logprob: -5.319907188415527
    5. ' (' → logprob: -5.319907188415527
    6. 'ANS' → logprob: -5.444907188415527
    7. 'TMP' → logprob: -5.444907188415527
    8. '(U' → logprob: -6.444907188415527
    9. 'f' → logprob: -6.694907188415527
    10. 'T' → logprob: -7.444907188415527

Token 496: '[C' (ID: 107876)
  Prédit: '[C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.00012308525037951767
    2. '[' → logprob: -9.375123023986816
    3. 'C' → logprob: -10.500123023986816
    4. '[c' → logprob: -11.625123023986816
    5. '=C' → logprob: -15.000123023986816
    6. '[
' → logprob: -15.250123023986816
    7. '	C' → logprob: -15.625123023986816
    8. '(C' → logprob: -15.625123023986816
    9. '<C' → logprob: -15.750123023986816
    10. '[P' → logprob: -16.375123977661133

Token 497: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.041205812245607376
    2. '[i' → logprob: -3.916205883026123
    3. 'p' → logprob: -4.041205883026123
    4. 'i' → logprob: -6.916205883026123
    5. '[P' → logprob: -7.041205883026123
    6. '[' → logprob: -7.166205883026123
    7. '[a' → logprob: -9.541205406188965
    8. 'a' → logprob: -9.916205406188965
    9. 'P' → logprob: -11.166205406188965
    10. '[
' → logprob: -11.416205406188965

Token 498: ']]' (ID: 8928)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.005059656221419573
    2. '[i' → logprob: -5.880059719085693
    3. ']' → logprob: -6.630059719085693
    4. '[' → logprob: -8.005059242248535
    5. ']]' → logprob: -8.130059242248535
    6. 'p' → logprob: -9.130059242248535
    7. '])' → logprob: -9.380059242248535
    8. '][' → logprob: -10.755059242248535
    9. ']])' → logprob: -10.755059242248535
    10. '[P' → logprob: -11.005059242248535

Token 499: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012265690602362156
    2. '<|end|>' → logprob: -5.012265682220459
    3. '<|end|>' → logprob: -6.637265682220459
    4. '+' → logprob: -7.387265682220459
    5. ' 
' → logprob: -7.512265682220459
    6. '
' → logprob: -7.637265682220459
    7. '    
' → logprob: -7.762265682220459
    8. '   ' → logprob: -7.887265682220459
    9. ' if' → logprob: -8.012266159057617
    10. '  
' → logprob: -8.012266159057617

Token 500: ' OR' (ID: 4917)
  Prédit: 'ORG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ORG' → logprob: -0.0034512223210185766
    2. 'TMP' → logprob: -5.753451347351074
    3. 'ORM' → logprob: -9.753451347351074
    4. '1' → logprob: -10.128451347351074
    5. 'ORT' → logprob: -10.753451347351074
    6. 'ORI' → logprob: -11.003451347351074
    7. 'ORD' → logprob: -11.253451347351074
    8. ' ' → logprob: -11.378451347351074
    9. '   ' → logprob: -11.503451347351074
    10. 'OR' → logprob: -11.503451347351074

Token 501: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -7.465036105713807e-06
    2. 'Gp' → logprob: -13.125007629394531
    3. '[G' → logprob: -13.250007629394531
    4. '[' → logprob: -14.250007629394531
    5. ' G' → logprob: -14.875007629394531
    6. 'Gin' → logprob: -15.062507629394531
    7. '
' → logprob: -15.062507629394531
    8. 'GP' → logprob: -15.375007629394531
    9. '	G' → logprob: -16.06250762939453
    10. '<G' → logprob: -16.37500762939453

Token 502: '[i' (ID: 1768)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0009762406698428094
    2. '[i' → logprob: -7.000976085662842
    3. 'p' → logprob: -10.5009765625
    4. '[k' → logprob: -11.2509765625
    5. '[' → logprob: -11.7509765625
    6. '[c' → logprob: -12.3759765625
    7. '[P' → logprob: -12.6259765625
    8. '[parent' → logprob: -13.2509765625
    9. '[a' → logprob: -13.7509765625
    10. 'i' → logprob: -13.8759765625

Token 503: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44693896174430847
    2. ']
' → logprob: -1.0719389915466309
    3. '[i' → logprob: -4.196938991546631
    4. '   ' → logprob: -6.696938991546631
    5. ']
' → logprob: -7.446938991546631
    6. '[' → logprob: -7.446938991546631
    7. '[p' → logprob: -8.071938514709473
    8. '       ' → logprob: -9.071938514709473
    9. '])' → logprob: -10.321938514709473
    10. '[
' → logprob: -10.446938514709473

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9868793487548828
    2. 'if' → logprob: -1.3618793487548828
    3. ' if' → logprob: -1.8618793487548828
    4. '   ' → logprob: -1.9868793487548828
    5. '
' → logprob: -3.736879348754883
    6. '<|end|>' → logprob: -4.236879348754883
    7. '+' → logprob: -4.986879348754883
    8. 'ANS' → logprob: -5.361879348754883
    9. '           ' → logprob: -5.486879348754883
    10. 'ans' → logprob: -5.861879348754883

Token 505: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.07691235095262527
    2. 'if' → logprob: -2.8269124031066895
    3. ' if' → logprob: -4.8269124031066895
    4. '   ' → logprob: -5.8269124031066895
    5. 'ans' → logprob: -7.2019124031066895
    6. 'TMP' → logprob: -7.5769124031066895
    7. 'tmp' → logprob: -7.7019124031066895
    8. '       ' → logprob: -7.8269124031066895
    9. ' AN' → logprob: -7.9519124031066895
    10. 'k' → logprob: -8.451911926269531

Token 506: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.816093228830141e-06
    2. ' S' → logprob: -13.25000286102295
    3. '
' → logprob: -14.87500286102295
    4. '[' → logprob: -15.62500286102295
    5. '[S' → logprob: -15.87500286102295
    6. '```' → logprob: -16.250001907348633
    7. '[
' → logprob: -16.500001907348633
    8. '	S' → logprob: -17.000001907348633
    9. 'Ѕ' → logprob: -17.250001907348633
    10. '(S' → logprob: -17.375001907348633

Token 507: '[C' (ID: 107876)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.04316075146198273
    2. '[i' → logprob: -3.1681606769561768
    3. '[P' → logprob: -9.543160438537598
    4. '[k' → logprob: -9.793160438537598
    5. '[' → logprob: -10.793160438537598
    6. 'p' → logprob: -12.793160438537598
    7. '[
' → logprob: -13.043160438537598
    8. '[a' → logprob: -13.293160438537598
    9. '[parent' → logprob: -13.293160438537598
    10. '[ip' → logprob: -14.168160438537598

Token 508: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.017854314297437668
    2. '[i' → logprob: -4.2678542137146
    3. 'p' → logprob: -5.7678542137146
    4. '[' → logprob: -8.392854690551758
    5. '[P' → logprob: -8.767854690551758
    6. 'i' → logprob: -9.517854690551758
    7. '[
' → logprob: -10.392854690551758
    8. '][' → logprob: -10.892854690551758
    9. ')[' → logprob: -11.517854690551758
    10. '(p' → logprob: -11.517854690551758

Token 509: ']]' (ID: 8928)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.025303294882178307
    2. ']' → logprob: -3.775303363800049
    3. '[i' → logprob: -6.900303363800049
    4. '[p' → logprob: -7.900303363800049
    5. ']][' → logprob: -8.15030288696289
    6. '[' → logprob: -9.52530288696289
    7. ']
' → logprob: -9.65030288696289
    8. ')][' → logprob: -9.65030288696289
    9. ' ][' → logprob: -10.27530288696289
    10. '])[' → logprob: -10.77530288696289

Token 510: ' -=' (ID: 12583)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9056157469749451
    2. '=' → logprob: -1.2806158065795898
    3. '[k' → logprob: -1.4056158065795898
    4. '[p' → logprob: -3.15561580657959
    5. ' =' → logprob: -3.65561580657959
    6. '[c' → logprob: -6.90561580657959
    7. '+=' → logprob: -7.65561580657959
    8. '[max' → logprob: -7.78061580657959
    9. '[min' → logprob: -7.78061580657959
    10. '[i' → logprob: -8.03061580657959

Token 511: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03834371268749237
    2. ' f' → logprob: -3.288343667984009
    3. 'k' → logprob: -8.16334342956543
    4. ' k' → logprob: -11.53834342956543
    5. '	f' → logprob: -12.53834342956543
    6. '   ' → logprob: -13.53834342956543
    7. ' ' → logprob: -14.53834342956543
    8. '1' → logprob: -14.66334342956543
    9. '       ' → logprob: -14.91334342956543
    10. '
' → logprob: -14.91334342956543

Token 512: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -3.249780638725497e-05
    2. '(' → logprob: -10.375032424926758
    3. '(
' → logprob: -14.375032424926758
    4. 'k' → logprob: -14.875032424926758
    5. '((' → logprob: -15.500032424926758
    6. ' (' → logprob: -15.875032424926758
    7. ')(' → logprob: -17.750032424926758
    8. '(len' → logprob: -19.250032424926758
    9. '(int' → logprob: -19.750032424926758
    10. '(abs' → logprob: -19.750032424926758

Token 513: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022976152831688523
    2. ')
' → logprob: -8.625229835510254
    3. ' )' → logprob: -11.125229835510254
    4. '   ' → logprob: -12.125229835510254
    5. '))' → logprob: -12.500229835510254
    6. '(' → logprob: -12.625229835510254
    7. ')
' → logprob: -13.125229835510254
    8. '()' → logprob: -13.375229835510254
    9. ')}' → logprob: -13.500229835510254
    10. ')`' → logprob: -13.500229835510254

Token 514: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: ' TMP' (ID: 121022)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: '[p' (ID: 23234)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04896486550569534
    2. '[p' → logprob: -3.0489649772644043
    3. '[C' → logprob: -8.173964500427246
    4. '[c' → logprob: -10.173964500427246
    5. '[k' → logprob: -10.798964500427246
    6. '[P' → logprob: -11.423964500427246
    7. '[' → logprob: -11.673964500427246
    8. '[a' → logprob: -12.298964500427246
    9. '[I' → logprob: -12.673964500427246
    10. 'i' → logprob: -12.923964500427246

Token 517: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5248677730560303
    2. ']' → logprob: -1.0248677730560303
    3. ']+=' → logprob: -3.5248677730560303
    4. '[i' → logprob: -4.274868011474609
    5. '[' → logprob: -5.399868011474609
    6. '[p' → logprob: -7.649868011474609
    7. ']=' → logprob: -8.02486801147461
    8. ']+' → logprob: -8.77486801147461
    9. '[
' → logprob: -9.02486801147461
    10. '<|end|>' → logprob: -9.52486801147461

Token 518: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09968922287225723
    2. '[' → logprob: -3.349689245223999
    3. '=' → logprob: -3.599689245223999
    4. ' +=' → logprob: -3.974689245223999
    5. '[i' → logprob: -4.84968900680542
    6. '+' → logprob: -6.09968900680542
    7. '-=' → logprob: -6.72468900680542
    8. '[p' → logprob: -7.47468900680542
    9. ']+=' → logprob: -7.47468900680542
    10. '[k' → logprob: -7.97468900680542

Token 519: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2947552800178528
    2. 'k' → logprob: -1.419755220413208
    3. 'TMP' → logprob: -4.669755458831787
    4. ' ' → logprob: -6.169755458831787
    5. ' k' → logprob: -7.544755458831787
    6. '   ' → logprob: -8.294754981994629
    7. 'USED' → logprob: -8.794754981994629
    8. 'T' → logprob: -8.794754981994629
    9. ' TMP' → logprob: -8.794754981994629
    10. '-' → logprob: -9.044754981994629

Token 520: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 521: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 522: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1300162523984909
    2. 'main' → logprob: -2.880016326904297
    3. 'read' → logprob: -3.755016326904297
    4. ' main' → logprob: -4.755016326904297
    5. 'dfs' → logprob: -5.005016326904297
    6. 'visit' → logprob: -5.130016326904297
    7. ' def' → logprob: -5.130016326904297
    8. 'solve' → logprob: -5.755016326904297
    9. 'process' → logprob: -6.130016326904297
    10. 'make' → logprob: -6.380016326904297

Token 523: '_child' (ID: 40474)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.8781543970108032
    2. '_nodes' → logprob: -2.3781542778015137
    3. '_node' → logprob: -2.7531542778015137
    4. '_tree' → logprob: -2.8781542778015137
    5. '(X' → logprob: -3.0031542778015137
    6. '(' → logprob: -3.0031542778015137
    7. '_children' → logprob: -3.1281542778015137
    8. '_first' → logprob: -3.1281542778015137
    9. '(i' → logprob: -4.003154277801514
    10. '_edges' → logprob: -4.128154277801514

Token 524: '(X' (ID: 17061)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08402402698993683
    2. '(a' → logprob: -2.959023952484131
    3. '(' → logprob: -4.209023952484131
    4. '(X' → logprob: -4.334023952484131
    5. '(parent' → logprob: -8.584024429321289
    6. '(child' → logprob: -8.959024429321289
    7. '(I' → logprob: -9.209024429321289
    8. 'def' → logprob: -9.209024429321289
    9. ' (' → logprob: -10.084024429321289
    10. '(A' → logprob: -10.334024429321289

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002230667509138584
    2. ',a' → logprob: -6.877230644226074
    3. '[a' → logprob: -7.127230644226074
    4. 'a' → logprob: -8.877230644226074
    5. '<|end|>' → logprob: -9.877230644226074
    6. '[i' → logprob: -10.127230644226074
    7. '[' → logprob: -10.252230644226074
    8. ',i' → logprob: -10.252230644226074
    9. '):' → logprob: -11.252230644226074
    10. ' ,' → logprob: -11.252230644226074

Token 526: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6024063229560852
    2. 'a' → logprob: -1.7274062633514404
    3. 'C' → logprob: -2.2274062633514404
    4. ' i' → logprob: -2.2274062633514404
    5. ' a' → logprob: -3.4774062633514404
    6. ' C' → logprob: -3.8524062633514404
    7. ')' → logprob: -6.1024065017700195
    8. 'P' → logprob: -7.2274065017700195
    9. 'A' → logprob: -7.4774065017700195
    10. ' ' → logprob: -7.7274065017700195

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.584861744660884e-05
    2. '[' → logprob: -11.000045776367188
    3. '   ' → logprob: -11.500045776367188
    4. ' ,' → logprob: -11.875045776367188
    5. '[],' → logprob: -12.375045776367188
    6. 'def' → logprob: -13.250045776367188
    7. ',k' → logprob: -13.375045776367188
    8. '):
' → logprob: -14.375045776367188
    9. ',a' → logprob: -14.500045776367188
    10. '):' → logprob: -14.500045776367188

Token 528: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.6001593470573425
    2. 'C' → logprob: -1.9751594066619873
    3. 'ET' → logprob: -2.2251594066619873
    4. 'ct' → logprob: -2.6001594066619873
    5. 'USED' → logprob: -3.4751594066619873
    6. 'CT' → logprob: -3.7251594066619873
    7. 'a' → logprob: -4.350159168243408
    8. 'child' → logprob: -4.350159168243408
    9. 'j' → logprob: -4.850159168243408
    10. 'parent' → logprob: -4.975159168243408

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016556596383452415
    2. '):' → logprob: -6.626655578613281
    3. '):
' → logprob: -8.376655578613281
    4. '[i' → logprob: -10.876655578613281
    5. ',i' → logprob: -11.126655578613281
    6. '   ' → logprob: -11.126655578613281
    7. ')' → logprob: -11.376655578613281
    8. ' ,' → logprob: -11.501655578613281
    9. 'def' → logprob: -12.126655578613281
    10. ',
' → logprob: -12.876655578613281

Token 530: ' Q' (ID: 1486)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.9965600967407227
    2. 'ET' → logprob: -0.9965600967407227
    3. 'USED' → logprob: -2.2465600967407227
    4. 'CT' → logprob: -2.8715600967407227
    5. 'ANS' → logprob: -2.9965600967407227
    6. 'i' → logprob: -4.246560096740723
    7. 'ct' → logprob: -4.746560096740723
    8. ' USED' → logprob: -4.996560096740723
    9. 'AN' → logprob: -5.246560096740723
    10. 'used' → logprob: -5.746560096740723

Token 531: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10298453271389008
    2. '):' → logprob: -2.3529844284057617
    3. '):
' → logprob: -6.102984428405762
    4. ')' → logprob: -8.727984428405762
    5. '   ' → logprob: -8.977984428405762
    6. ',i' → logprob: -9.727984428405762
    7. '[' → logprob: -10.477984428405762
    8. '[i' → logprob: -10.602984428405762
    9. ' ,' → logprob: -10.852984428405762
    10. ' ):' → logprob: -10.852984428405762

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3043803572654724
    2. 'for' → logprob: -2.054380416870117
    3. ' for' → logprob: -2.179380416870117
    4. '       ' → logprob: -5.429380416870117
    5. 'q' → logprob: -5.804380416870117
    6. 'p' → logprob: -6.429380416870117
    7. 'j' → logprob: -6.554380416870117
    8. 'Q' → logprob: -6.679380416870117
    9. 'if' → logprob: -6.804380416870117
    10. 'k' → logprob: -7.054380416870117

Token 533: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5705134868621826
    2. 'j' → logprob: -2.1955134868621826
    3. 'x' → logprob: -3.0705134868621826
    4. 'c' → logprob: -3.1955134868621826
    5. 'q' → logprob: -3.3205134868621826
    6. 'v' → logprob: -3.3205134868621826
    7. 'child' → logprob: -3.4455134868621826
    8. 'a' → logprob: -3.8205134868621826
    9. 'k' → logprob: -3.9455134868621826
    10. 'while' → logprob: -4.070513725280762

Token 534: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9160770177841187
    2. 'c' → logprob: -2.041077136993408
    3. 'x' → logprob: -2.416077136993408
    4. ' j' → logprob: -2.666077136993408
    5. 'child' → logprob: -2.916077136993408
    6. 'a' → logprob: -3.291077136993408
    7. 'v' → logprob: -3.291077136993408
    8. 'k' → logprob: -3.416077136993408
    9. 'e' → logprob: -3.541077136993408
    10. ' c' → logprob: -3.916077136993408

Token 535: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4288768172264099
    2. 'in' → logprob: -1.0538768768310547
    3. ' ' → logprob: -9.553876876831055
    4. 'n' → logprob: -9.928876876831055
    5. '	in' → logprob: -10.803876876831055
    6. '  ' → logprob: -11.803876876831055
    7. '   ' → logprob: -11.928876876831055
    8. 'a' → logprob: -12.553876876831055
    9. 's' → logprob: -12.928876876831055
    10. ',' → logprob: -13.053876876831055

Token 536: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.12801845371723175
    2. ' X' → logprob: -2.128018379211426
    3. ' range' → logprob: -7.503018379211426
    4. 'range' → logprob: -7.628018379211426
    5. ' ' → logprob: -10.378018379211426
    6. '(X' → logprob: -12.003018379211426
    7. '   ' → logprob: -12.503018379211426
    8. '  ' → logprob: -12.878018379211426
    9. '	X' → logprob: -13.253018379211426
    10. '[X' → logprob: -13.503018379211426

Token 537: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.375015258789062
    3. '[a' → logprob: -13.250015258789062
    4. '[
' → logprob: -13.875015258789062
    5. 'i' → logprob: -14.875015258789062
    6. '   ' → logprob: -15.875015258789062
    7. ' [' → logprob: -16.000015258789062
    8. '[I' → logprob: -16.125015258789062
    9. '```' → logprob: -16.250015258789062
    10. '{i' → logprob: -17.500015258789062

Token 538: '][' (ID: 2696)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004821580369025469
    2. ']:
' → logprob: -5.37982177734375
    3. ']' → logprob: -9.75482177734375
    4. ']:
' → logprob: -9.87982177734375
    5. '[' → logprob: -10.25482177734375
    6. '[i' → logprob: -10.62982177734375
    7. ':' → logprob: -11.50482177734375
    8. '][' → logprob: -12.12982177734375
    9. '][:' → logprob: -12.12982177734375
    10. '[:' → logprob: -13.12982177734375

Token 539: '::-' (ID: 96612)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03064962849020958
    2. ']:' → logprob: -3.7806496620178223
    3. ':]' → logprob: -5.030649662017822
    4. ':
' → logprob: -7.780649662017822
    5. ' :' → logprob: -8.905649185180664
    6. ']:
' → logprob: -9.155649185180664
    7. '):' → logprob: -10.030649185180664
    8. '[:]' → logprob: -10.155649185180664
    9. ']' → logprob: -10.905649185180664
    10. '0' → logprob: -11.030649185180664

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010866894444916397
    2. '-' → logprob: -9.75010871887207
    3. ']:' → logprob: -11.12510871887207
    4. '::-' → logprob: -11.12510871887207
    5. ' ' → logprob: -11.87510871887207
    6. ':' → logprob: -12.25010871887207
    7. '):' → logprob: -13.25010871887207
    8. ']):' → logprob: -13.75010871887207
    9. ']:
' → logprob: -14.00010871887207
    10. '```' → logprob: -14.12510871887207

Token 541: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.048676278442144394
    2. ':' → logprob: -3.1736762523651123
    3. ']:
' → logprob: -5.798676490783691
    4. ']' → logprob: -6.798676490783691
    5. '):' → logprob: -7.173676490783691
    6. '}:' → logprob: -8.673676490783691
    7. '       ' → logprob: -9.048676490783691
    8. '   ' → logprob: -9.298676490783691
    9. ':
' → logprob: -9.673676490783691
    10. ' ]' → logprob: -9.798676490783691

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008238423615694046
    2. '   ' → logprob: -5.133238315582275
    3. ' if' → logprob: -7.258238315582275
    4. '<|end|>' → logprob: -7.508238315582275
    5. ',' → logprob: -8.633238792419434
    6. '[' → logprob: -8.883238792419434
    7. '	' → logprob: -9.133238792419434
    8. '#' → logprob: -9.258238792419434
    9. 'if' → logprob: -9.633238792419434
    10. '           ' → logprob: -9.758238792419434

Token 543: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7147085666656494
    2. 'if' (adapté à ' if') → logprob: -0.9647085666656494
    3. ' if' → logprob: -2.3397085666656494
    4. '   ' → logprob: -3.8397085666656494
    5. 'Q' → logprob: -4.58970832824707
    6. ' Q' → logprob: -7.21470832824707
    7. '	if' → logprob: -8.46470832824707
    8. ' ' → logprob: -8.46470832824707
    9. 'P' → logprob: -8.71470832824707
    10. '	Q' → logprob: -9.71470832824707

Token 544: ' a' (ID: 261)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.3941381573677063
    2. 'a' → logprob: -1.1441380977630615
    3. ' should' → logprob: -5.394138336181641
    4. ' a' → logprob: -6.394138336181641
    5. '   ' → logprob: -7.769138336181641
    6. 'i' → logprob: -8.64413833618164
    7. 'not' → logprob: -8.76913833618164
    8. ' ' → logprob: -10.51913833618164
    9. '  ' → logprob: -10.70663833618164
    10. 'len' → logprob: -11.01913833618164

Token 545: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.202699214220047
    2. ' !=' → logprob: -1.7026991844177246
    3. '==' → logprob: -6.952699184417725
    4. ' ==' → logprob: -8.702699661254883
    5. ' not' → logprob: -9.077699661254883
    6. 'not' → logprob: -11.202699661254883
    7. '[' → logprob: -11.327699661254883
    8. ' ' → logprob: -11.827699661254883
    9. '=' → logprob: -12.327699661254883
    10. ')' → logprob: -13.077699661254883

Token 546: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.009835069999098778
    2. ' P' → logprob: -4.634835243225098
    3. ' ' → logprob: -10.509835243225098
    4. 'p' → logprob: -11.259835243225098
    5. 'Q' → logprob: -11.259835243225098
    6. '   ' → logprob: -11.384835243225098
    7. 'i' → logprob: -12.509835243225098
    8. '	P' → logprob: -12.509835243225098
    9. '  ' → logprob: -13.009835243225098
    10. '-' → logprob: -13.884835243225098

Token 547: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.244413766078651e-05
    2. 'i' → logprob: -9.625082015991211
    3. '[' → logprob: -11.375082015991211
    4. ' i' → logprob: -13.500082015991211
    5. '[a' → logprob: -13.625082015991211
    6. '[
' → logprob: -14.500082015991211
    7. 'a' → logprob: -14.625082015991211
    8. '[I' → logprob: -15.125082015991211
    9. '   ' → logprob: -15.500082015991211
    10. ' [' → logprob: -15.625082015991211

Token 548: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4031888246536255
    2. ']:' → logprob: -1.2781888246536255
    3. ']' → logprob: -3.028188705444336
    4. '[i' → logprob: -6.153188705444336
    5. ' and' → logprob: -6.903188705444336
    6. ']:
' → logprob: -7.403188705444336
    7. ']:

' → logprob: -7.778188705444336
    8. ' ]' → logprob: -9.153188705444336
    9. 'and' → logprob: -9.153188705444336
    10. '       ' → logprob: -9.278188705444336

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017664548940956593
    2. 'Q' → logprob: -7.126766681671143
    3. ',' → logprob: -8.876766204833984
    4. ' Q' → logprob: -9.126766204833984
    5. '	       ' → logprob: -9.126766204833984
    6. '          ' → logprob: -9.251766204833984
    7. '[' → logprob: -9.501766204833984
    8. '               ' → logprob: -10.376766204833984
    9. '       ' → logprob: -10.376766204833984
    10. ' and' → logprob: -10.501766204833984

Token 550: ' P' (ID: 398)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.14732851088047028
    2. ' Q' → logprob: -2.6473286151885986
    3. '       ' → logprob: -3.3973286151885986
    4. '               ' → logprob: -4.1473283767700195
    5. '           ' → logprob: -4.7723283767700195
    6. '   ' → logprob: -5.2723283767700195
    7. 'P' (adapté à ' P') → logprob: -6.3973283767700195
    8. '	Q' → logprob: -7.3973283767700195
    9. ' ' → logprob: -8.02232837677002
    10. ' P' → logprob: -8.64732837677002

Token 551: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00012987985974177718
    2. 'a' → logprob: -9.125129699707031
    3. '[' → logprob: -11.625129699707031
    4. '           ' → logprob: -12.625129699707031
    5. '[
' → logprob: -13.125129699707031
    6. '[i' → logprob: -13.500129699707031
    7. '```' → logprob: -13.500129699707031
    8. ' a' → logprob: -14.500129699707031
    9. '
' → logprob: -14.750129699707031
    10. ' [' → logprob: -15.125129699707031

Token 552: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005890041124075651
    2. ']=' → logprob: -5.255889892578125
    3. '=' → logprob: -8.005889892578125
    4. ' =' → logprob: -8.755889892578125
    5. ' ]' → logprob: -8.755889892578125
    6. '       ' → logprob: -13.755889892578125
    7. '   ' → logprob: -14.005889892578125
    8. '    ' → logprob: -14.630889892578125
    9. '<|end|>' → logprob: -14.630889892578125
    10. ')' → logprob: -14.880889892578125

Token 553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869026005268097
    2. ' =' → logprob: -1.1369025707244873
    3. '=a' → logprob: -11.136902809143066
    4. '=i' → logprob: -11.386902809143066
    5. ' ' → logprob: -13.761902809143066
    6. '[' → logprob: -14.011902809143066
    7. ',' → logprob: -14.136902809143066
    8. ')' → logprob: -14.761902809143066
    9. ')=' → logprob: -15.011902809143066
    10. ' a' → logprob: -15.011902809143066

Token 554: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001234428636962548
    2. ' i' → logprob: -9.000123023986816
    3. '	i' → logprob: -18.250123977661133
    4. 'a' → logprob: -19.250123977661133
    5. '   ' → logprob: -19.625123977661133
    6. '{i' → logprob: -20.250123977661133
    7. '
' → logprob: -20.625123977661133
    8. '[i' → logprob: -20.750123977661133
    9. '*i' → logprob: -21.000123977661133
    10. ' ' → logprob: -21.250123977661133

Token 555: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001847062085289508
    2. '		' → logprob: -9.625185012817383
    3. 'Q' → logprob: -10.250185012817383
    4. '
' → logprob: -10.375185012817383
    5. ',' → logprob: -10.500185012817383
    6. '       ' → logprob: -12.625185012817383
    7. '               ' → logprob: -12.625185012817383
    8. ',Q' → logprob: -12.750185012817383
    9. ' Q' → logprob: -13.125185012817383
    10. ';' → logprob: -13.125185012817383

Token 556: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0045051309280097485
    2. 'Q' → logprob: -5.504505157470703
    3. ' Q' → logprob: -8.629505157470703
    4. '       ' → logprob: -9.254505157470703
    5. ',' → logprob: -10.004505157470703
    6. '   ' → logprob: -10.379505157470703
    7. ',Q' → logprob: -10.629505157470703
    8. '
' → logprob: -11.379505157470703
    9. '               ' → logprob: -11.629505157470703
    10. ' and' → logprob: -12.379505157470703

Token 557: ' remove' (ID: 6234)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0007752045057713985
    2. '           ' → logprob: -7.500775337219238
    3. ' Q' → logprob: -9.625775337219238
    4. '   ' → logprob: -9.625775337219238
    5. '               ' → logprob: -9.625775337219238
    6. '	Q' → logprob: -12.500775337219238
    7. '       ' → logprob: -12.625775337219238
    8. 'if' → logprob: -12.750775337219238
    9. '                   ' → logprob: -13.500775337219238
    10. '```' → logprob: -13.750775337219238

Token 558: '_back' (ID: 8715)
  Prédit: '_back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_back' → logprob: -8.93579563125968e-05
    2. '_' → logprob: -9.750089645385742
    3. ' _' → logprob: -12.250089645385742
    4. '_child' → logprob: -12.375089645385742
    5. '`' → logprob: -12.625089645385742
    6. '_Back' → logprob: -12.875089645385742
    7. '```' → logprob: -13.250089645385742
    8. 'Back' → logprob: -13.625089645385742
    9. '_out' → logprob: -14.000089645385742
    10. '_b' → logprob: -14.000089645385742

Token 559: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.2352385965641588e-05
    2. 'edge' → logprob: -12.125012397766113
    3. '_edges' → logprob: -12.875012397766113
    4. '_' → logprob: -13.000012397766113
    5. 'Edge' → logprob: -14.625012397766113
    6. '```' → logprob: -15.000012397766113
    7. ' _' → logprob: -15.375012397766113
    8. ' edge' → logprob: -15.375012397766113
    9. '_EDGE' → logprob: -15.750012397766113
    10. '_space' → logprob: -16.000011444091797

Token 560: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.375017166137695
    3. '(Q' → logprob: -12.250017166137695
    4. '(
' → logprob: -14.625017166137695
    5. 'X' → logprob: -16.000017166137695
    6. ' (' → logprob: -16.625017166137695
    7. '```' → logprob: -16.750017166137695
    8. '(A' → logprob: -18.250017166137695
    9. '(P' → logprob: -19.125017166137695
    10. '(I' → logprob: -19.500017166137695

Token 561: ',' (ID: 11)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0014793867012485862
    2. '(Q' → logprob: -7.626479148864746
    3. '(' → logprob: -7.876479148864746
    4. ',' → logprob: -8.251479148864746
    5. ')' → logprob: -8.876479148864746
    6. '(i' → logprob: -10.126479148864746
    7. ',X' → logprob: -10.376479148864746
    8. 'X' → logprob: -10.501479148864746
    9. '(
' → logprob: -10.626479148864746
    10. ')(' → logprob: -10.751479148864746

Token 562: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013515453319996595
    2. ' a' → logprob: -6.626351356506348
    3. 'i' → logprob: -11.251351356506348
    4. 'X' → logprob: -12.001351356506348
    5. '[a' → logprob: -13.501351356506348
    6. 'x' → logprob: -13.626351356506348
    7. '   ' → logprob: -13.626351356506348
    8. '	a' → logprob: -13.751351356506348
    9. 'A' → logprob: -15.126351356506348
    10. '(a' → logprob: -15.438851356506348

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001033999491482973
    2. ',i' → logprob: -7.376033782958984
    3. 'a' → logprob: -8.501033782958984
    4. 'i' → logprob: -8.876033782958984
    5. ' ,' → logprob: -10.001033782958984
    6. 's' → logprob: -12.001033782958984
    7. ' i' → logprob: -12.626033782958984
    8. '           ' → logprob: -12.876033782958984
    9. '```' → logprob: -13.126033782958984
    10. '   ' → logprob: -13.751033782958984

Token 564: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019286326132714748
    2. ' i' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.251928329467773
    4. '	i' → logprob: -18.626928329467773
    5. ' ' → logprob: -19.376928329467773
    6. 'a' → logprob: -19.376928329467773
    7. '
' → logprob: -19.751928329467773
    8. ')i' → logprob: -20.876928329467773
    9. '           ' → logprob: -21.001928329467773
    10. ',i' → logprob: -21.126928329467773

Token 565: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03019218146800995
    2. ')' → logprob: -3.7801921367645264
    3. '           ' → logprob: -5.0301923751831055
    4. ')
' → logprob: -7.9051923751831055
    5. '       ' → logprob: -11.780192375183105
    6. ')

' → logprob: -12.280192375183105
    7. '          ' → logprob: -13.905192375183105
    8. ' )
' → logprob: -14.030192375183105
    9. '   ' → logprob: -14.655192375183105
    10. '               ' → logprob: -14.780192375183105

Token 566: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010664248111424968
    2. '		' → logprob: -9.875106811523438
    3. 'Q' → logprob: -10.375106811523438
    4. '       ' → logprob: -11.625106811523438
    5. ' Q' → logprob: -12.625106811523438
    6. '   ' → logprob: -12.875106811523438
    7. '               ' → logprob: -13.250106811523438
    8. '	       ' → logprob: -13.625106811523438
    9. '```' → logprob: -13.750106811523438
    10. '          ' → logprob: -14.000106811523438

Token 567: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.0014280942268669605
    2. '           ' → logprob: -7.251428127288818
    3. 'process' → logprob: -8.62642765045166
    4. '   ' → logprob: -8.75142765045166
    5. 'if' → logprob: -9.00142765045166
    6. '               ' → logprob: -9.62642765045166
    7. ' Q' → logprob: -9.75142765045166
    8. 'remove' → logprob: -10.50142765045166
    9. 'P' → logprob: -10.87642765045166
    10. '       ' → logprob: -11.37642765045166

Token 568: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00027218335890211165
    2. '.' → logprob: -8.750271797180176
    3. '.pop' → logprob: -10.000271797180176
    4. '.insert' → logprob: -10.375271797180176
    5. '.extend' → logprob: -10.500271797180176
    6. '[' → logprob: -12.625271797180176
    7. ' .' → logprob: -13.500271797180176
    8. '.push' → logprob: -13.625271797180176
    9. 'append' → logprob: -13.875271797180176
    10. '.ap' → logprob: -14.250271797180176

Token 569: '(~' (ID: 114991)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00018113377154804766
    2. 'a' → logprob: -8.625181198120117
    3. '(' → logprob: -13.625181198120117
    4. ' a' → logprob: -16.125181198120117
    5. '(
' → logprob: -16.500181198120117
    6. '((' → logprob: -16.500181198120117
    7. '(-' → logprob: -17.625181198120117
    8. '	a' → logprob: -17.750181198120117
    9. ' (' → logprob: -18.125181198120117
    10. '(A' → logprob: -18.750181198120117

Token 570: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1472419600977446e-06
    2. ' a' → logprob: -13.750000953674316
    3. '	a' → logprob: -19.250001907348633
    4. '(a' → logprob: -20.125001907348633
    5. ')a' → logprob: -20.125001907348633
    6. ''a' → logprob: -20.500001907348633
    7. '_a' → logprob: -22.125001907348633
    8. 'i' → logprob: -22.250001907348633
    9. 'ai' → logprob: -22.625001907348633
    10. '
' → logprob: -22.750001907348633

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5237496495246887
    2. ')
' → logprob: -0.8987496495246887
    3. ' )' → logprob: -8.523749351501465
    4. ' )
' → logprob: -8.523749351501465
    5. ')
' → logprob: -10.023749351501465
    6. ')\' → logprob: -10.148749351501465
    7. ',' → logprob: -10.273749351501465
    8. ');
' → logprob: -10.648749351501465
    9. '),' → logprob: -11.398749351501465
    10. ')

' → logprob: -11.523749351501465

Token 572: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: ' Q' (ID: 1486)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008061755215749145
    2. ' a' → logprob: -7.1258063316345215
    3. '   ' → logprob: -14.750805854797363
    4. 'i' → logprob: -14.875805854797363
    5. '	a' → logprob: -14.875805854797363
    6. 'Q' (adapté à ' Q') → logprob: -15.250805854797363
    7. ' ' → logprob: -16.12580680847168
    8. '    ' → logprob: -16.25080680847168
    9. ' ' → logprob: -16.62580680847168
    10. '  ' → logprob: -17.75080680847168

Token 574: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3869918882846832
    2. '.' → logprob: -1.1369918584823608
    3. ' .' → logprob: -10.261991500854492
    4. '.app' → logprob: -10.511991500854492
    5. '.pop' → logprob: -10.636991500854492
    6. '.extend' → logprob: -11.136991500854492
    7. 'append' → logprob: -12.136991500854492
    8. '.ap' → logprob: -12.136991500854492
    9. '.Append' → logprob: -13.261991500854492
    10. '.
' → logprob: -13.511991500854492

Token 575: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004307884373702109
    2. ' a' → logprob: -7.750430583953857
    3. '	a' → logprob: -15.875431060791016
    4. '(a' → logprob: -16.750431060791016
    5. '[a' → logprob: -19.125431060791016
    6. ''a' → logprob: -19.250431060791016
    7. '   ' → logprob: -19.875431060791016
    8. ' ' → logprob: -19.875431060791016
    9. '>a' → logprob: -19.875431060791016
    10. ',a' → logprob: -20.250431060791016

Token 576: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007376811117865145
    2. ')
' → logprob: -7.50073766708374
    3. ' )' → logprob: -9.000738143920898
    4. '<|end|>' → logprob: -10.000738143920898
    5. ')return' → logprob: -11.750738143920898
    6. '
' → logprob: -13.625738143920898
    7. '<|end|>' → logprob: -13.875738143920898
    8. '	' → logprob: -14.125738143920898
    9. ')n' → logprob: -14.375738143920898
    10. ')
' → logprob: -14.625738143920898

Token 577: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7299039363861084
    2. '<|end|>' → logprob: -0.8549039363861084
    3. ')' → logprob: -2.9799039363861084
    4. '   ' → logprob: -4.1049041748046875
    5. '[' → logprob: -4.9799041748046875
    6. '```' → logprob: -5.2299041748046875
    7. '
' → logprob: -5.9799041748046875
    8. ']' → logprob: -6.1049041748046875
    9. '<|end|>' → logprob: -6.4799041748046875
    10. '\' → logprob: -6.7299041748046875

Token 578: ' finalize' (ID: 97196)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31923484802246094
    2. 'main' → logprob: -1.819234848022461
    3. 'process' → logprob: -2.944234848022461
    4. 'solve' → logprob: -3.694234848022461
    5. 'dfs' → logprob: -4.194234848022461
    6. ' main' → logprob: -5.069234848022461
    7. ' def' → logprob: -5.569234848022461
    8. ' process' → logprob: -6.819234848022461
    9. 'tr' → logprob: -7.069234848022461
    10. 'run' → logprob: -7.194234848022461

Token 579: '_' (ID: 62)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.3115463256835938
    2. '_results' → logprob: -1.4365463256835938
    3. '_' → logprob: -1.6865463256835938
    4. '(' → logprob: -2.0615463256835938
    5. '_answer' → logprob: -2.4365463256835938
    6. '_answers' → logprob: -4.061546325683594
    7. '()' → logprob: -4.936546325683594
    8. '(Q' → logprob: -5.061546325683594
    9. '_output' → logprob: -5.186546325683594
    10. '_ans' → logprob: -5.311546325683594

Token 580: 'ANS' (ID: 18850)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.0611588954925537
    2. 'answers' → logprob: -1.6861588954925537
    3. 'result' → logprob: -2.0611588954925537
    4. 'results' → logprob: -2.9361588954925537
    5. 'ans' → logprob: -2.9361588954925537
    6. 'output' → logprob: -3.0611588954925537
    7. 'process' → logprob: -3.3111588954925537
    8. 'ANS' → logprob: -3.4361588954925537
    9. 'processing' → logprob: -3.5611588954925537
    10. 'visit' → logprob: -4.061159133911133

Token 581: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005575713701546192
    2. '(n' → logprob: -5.880575656890869
    3. '(C' → logprob: -6.755575656890869
    4. '():' → logprob: -7.630575656890869
    5. '()' → logprob: -7.880575656890869
    6. '(N' → logprob: -8.505576133728027
    7. '(X' → logprob: -9.255576133728027
    8. '(Q' → logprob: -9.380576133728027
    9. '(
' → logprob: -9.380576133728027
    10. 'def' → logprob: -10.130576133728027

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011617878044489771
    2. ' ,' → logprob: -9.500116348266602
    3. ',
' → logprob: -10.750116348266602
    4. '):' → logprob: -11.750116348266602
    5. ',f' → logprob: -12.625116348266602
    6. '   ' → logprob: -12.750116348266602
    7. '):
' → logprob: -13.625116348266602
    8. '_,' → logprob: -14.250116348266602
    9. ')' → logprob: -14.625116348266602
    10. ',
' → logprob: -14.750116348266602

Token 583: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.16324958205223083
    2. 'C' → logprob: -2.2882494926452637
    3. 'f' → logprob: -4.038249492645264
    4. 'Q' → logprob: -4.413249492645264
    5. ' AN' → logprob: -5.038249492645264
    6. ' C' → logprob: -5.913249492645264
    7. 'AN' → logprob: -6.163249492645264
    8. 'X' → logprob: -6.663249492645264
    9. 'USED' → logprob: -6.663249492645264
    10. ' f' → logprob: -6.913249492645264

Token 584: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00028171599842607975
    2. '[n' → logprob: -8.75028133392334
    3. ',' → logprob: -9.62528133392334
    4. '(n' → logprob: -10.37528133392334
    5. 'n' → logprob: -11.87528133392334
    6. ',n' → logprob: -12.50028133392334
    7. 's' → logprob: -12.62528133392334
    8. 'def' → logprob: -13.25028133392334
    9. ' S' → logprob: -13.37528133392334
    10. ',S' → logprob: -13.50028133392334

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002932775765657425
    2. '):
' → logprob: -6.252932548522949
    3. '):' → logprob: -7.627932548522949
    4. ',C' → logprob: -7.877932548522949
    5. ' ,' → logprob: -10.00293254852295
    6. '   ' → logprob: -10.50293254852295
    7. ',
' → logprob: -10.87793254852295
    8. '):
' → logprob: -11.25293254852295
    9. ')' → logprob: -11.25293254852295
    10. ')
' → logprob: -12.87793254852295

Token 586: ' USED' (ID: 129384)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01966712810099125
    2. 'make' → logprob: -4.894667148590088
    3. ' f' → logprob: -5.269667148590088
    4. 'C' → logprob: -5.894667148590088
    5. ')' → logprob: -6.394667148590088
    6. 'P' → logprob: -7.644667148590088
    7. 'read' → logprob: -7.769667148590088
    8. 'Q' → logprob: -8.14466667175293
    9. 'range' → logprob: -8.39466667175293
    10. 'print' → logprob: -9.14466667175293

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4115113615989685
    2. '):
' → logprob: -1.1615114212036133
    3. '):' → logprob: -3.7865114212036133
    4. '):
' → logprob: -7.036511421203613
    5. ',C' → logprob: -8.036511421203613
    6. '   ' → logprob: -8.536511421203613
    7. ',
' → logprob: -9.661511421203613
    8. '):

' → logprob: -9.911511421203613
    9. 'def' → logprob: -10.286511421203613
    10. ')' → logprob: -10.536511421203613

Token 588: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.26962554454803467
    2. 'C' → logprob: -2.144625663757324
    3. ' f' → logprob: -2.769625663757324
    4. 'make' → logprob: -3.894625663757324
    5. 'TMP' → logprob: -4.644625663757324
    6. ' C' → logprob: -4.644625663757324
    7. 'P' → logprob: -5.394625663757324
    8. ')' → logprob: -5.644625663757324
    9. ' make' → logprob: -6.394625663757324
    10. ' TMP' → logprob: -6.394625663757324

Token 589: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5962539315223694
    2. '):' → logprob: -0.8462539315223694
    3. ',' → logprob: -3.9712538719177246
    4. '):
' → logprob: -6.971253871917725
    5. ')' → logprob: -8.846254348754883
    6. '):

' → logprob: -9.971254348754883
    7. ',n' → logprob: -10.221254348754883
    8. '   ' → logprob: -10.471254348754883
    9. 'def' → logprob: -11.221254348754883
    10. ' ):' → logprob: -11.971254348754883

Token 590: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1605052947998047
    2. '   ' → logprob: -1.9105052947998047
    3. ' for' → logprob: -8.285505294799805
    4. '	for' → logprob: -11.785505294799805
    5. 'def' → logprob: -12.035505294799805
    6. '```' → logprob: -12.535505294799805
    7. 'f' → logprob: -12.785505294799805
    8. 'return' → logprob: -13.535505294799805
    9. 'i' → logprob: -13.910505294799805
    10. '``' → logprob: -14.160505294799805

Token 591: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006460758158937097
    2. 'return' → logprob: -7.875646114349365
    3. '   ' → logprob: -9.250645637512207
    4. 'f' → logprob: -9.875645637512207
    5. ' for' → logprob: -10.125645637512207
    6. 'ANS' → logprob: -10.375645637512207
    7. 'used' → logprob: -11.625645637512207
    8. 'def' → logprob: -11.750645637512207
    9. 'k' → logprob: -11.750645637512207
    10. 'ans' → logprob: -12.125645637512207

Token 592: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5223444104194641
    2. 'k' → logprob: -1.6473443508148193
    3. 'c' → logprob: -1.8973443508148193
    4. 'a' → logprob: -3.7723443508148193
    5. ' i' → logprob: -4.272344589233398
    6. 'x' → logprob: -4.772344589233398
    7. 'j' → logprob: -5.022344589233398
    8. ' c' → logprob: -5.397344589233398
    9. ' k' → logprob: -5.647344589233398
    10. 'color' → logprob: -6.647344589233398

Token 593: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12749001383781433
    2. 'in' → logprob: -2.1274900436401367
    3. ' ' → logprob: -8.002490043640137
    4. '  ' → logprob: -8.877490043640137
    5. 'range' → logprob: -10.502490043640137
    6. '   ' → logprob: -10.752490043640137
    7. 'n' → logprob: -11.752490043640137
    8. '_' → logprob: -11.752490043640137
    9. ' range' → logprob: -11.752490043640137
    10. ',' → logprob: -12.127490043640137

Token 594: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003452368837315589
    2. ' range' → logprob: -8.000345230102539
    3. 'C' → logprob: -12.875345230102539
    4. '   ' → logprob: -13.000345230102539
    5. '
' → logprob: -14.250345230102539
    6. '(range' → logprob: -14.500345230102539
    7. ' ' → logprob: -14.625345230102539
    8. 'r' → logprob: -14.625345230102539
    9. '	range' → logprob: -14.750345230102539
    10. '  ' → logprob: -15.000345230102539

Token 595: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.013580618426203728
    2. '(len' → logprob: -4.888580799102783
    3. '(' → logprob: -5.138580799102783
    4. 'n' → logprob: -9.513580322265625
    5. '(f' → logprob: -12.388580322265625
    6. '(
' → logprob: -13.138580322265625
    7. 'len' → logprob: -13.388580322265625
    8. '(max' → logprob: -13.513580322265625
    9. ' (' → logprob: -13.763580322265625
    10. '
' → logprob: -13.888580322265625

Token 596: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05584189295768738
    2. '):' → logprob: -2.9308419227600098
    3. '   ' → logprob: -7.30584192276001
    4. '):
' → logprob: -8.680841445922852
    5. '-' → logprob: -9.305841445922852
    6. ' ):
' → logprob: -12.055841445922852
    7. ' ' → logprob: -12.180841445922852
    8. ' -' → logprob: -12.555841445922852
    9. '  ' → logprob: -12.680841445922852
    10. ')' → logprob: -13.180841445922852

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11464260518550873
    2. '   ' → logprob: -2.23964262008667
    3. ':' → logprob: -7.73964262008667
    4. ' ' → logprob: -8.239642143249512
    5. ',' → logprob: -8.364642143249512
    6. '):
' → logprob: -8.864642143249512
    7. ')' → logprob: -9.239642143249512
    8. '	   ' → logprob: -9.739642143249512
    9. '	' → logprob: -9.864642143249512
    10. ' AN' → logprob: -9.989642143249512

Token 598: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.018436124548316002
    2. 'k' → logprob: -4.768435955047607
    3. '   ' → logprob: -4.768435955047607
    4. 'if' → logprob: -7.393435955047607
    5. ' k' → logprob: -8.643436431884766
    6. ' AN' → logprob: -8.893436431884766
    7. 'ans' → logprob: -9.018436431884766
    8. '       ' → logprob: -10.268436431884766
    9. ' ' → logprob: -10.268436431884766
    10. '  ' → logprob: -10.268436431884766

Token 599: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.750004768371582
    3. '[i' → logprob: -13.875004768371582
    4. '   ' → logprob: -15.125004768371582
    5. 'SOR' → logprob: -15.125004768371582
    6. '[S' → logprob: -16.125003814697266
    7. '=' → logprob: -16.500003814697266
    8. '(S' → logprob: -16.875003814697266
    9. '(i' → logprob: -17.000003814697266
    10. ' S' → logprob: -17.125003814697266

Token 600: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006938552018254995
    2. '[C' → logprob: -5.006938457489014
    3. '[' → logprob: -8.881938934326172
    4. '[I' → logprob: -10.381938934326172
    5. '[c' → logprob: -10.506938934326172
    6. '
' → logprob: -11.256938934326172
    7. '[
' → logprob: -12.381938934326172
    8. '```' → logprob: -13.256938934326172
    9. ' [' → logprob: -13.381938934326172
    10. 'i' → logprob: -13.506938934326172

Token 601: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1519586592912674
    2. ']' → logprob: -2.651958703994751
    3. ']+=' → logprob: -3.026958703994751
    4. ' +=' → logprob: -4.901958465576172
    5. '+=' → logprob: -4.901958465576172
    6. ' )' → logprob: -6.026958465576172
    7. ' -=' → logprob: -6.401958465576172
    8. ' ]' → logprob: -7.276958465576172
    9. ')=' → logprob: -7.276958465576172
    10. ',' → logprob: -8.026958465576172

Token 602: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03218216821551323
    2. '=' → logprob: -3.907182216644287
    3. ' +=' → logprob: -4.657182216644287
    4. '-=' → logprob: -6.407182216644287
    5. '*=' → logprob: -8.782181739807129
    6. ' -=' → logprob: -8.907181739807129
    7. ' =' → logprob: -9.407181739807129
    8. '+=(' → logprob: -11.282181739807129
    9. '%=' → logprob: -11.782181739807129
    10. '-' → logprob: -11.907181739807129

Token 603: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007601958932355046
    2. ' f' → logprob: -7.250760078430176
    3. '1' → logprob: -10.750760078430176
    4. 'USED' → logprob: -11.250760078430176
    5. ' USED' → logprob: -12.500760078430176
    6. '   ' → logprob: -12.875760078430176
    7. '0' → logprob: -13.125760078430176
    8. '	f' → logprob: -13.500760078430176
    9. 'ANS' → logprob: -14.000760078430176
    10. 'used' → logprob: -14.125760078430176

Token 604: '(n' (ID: 2406)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.6472232341766357
    2. '(' → logprob: -0.7722232341766357
    3. '(len' → logprob: -4.897223472595215
    4. '(n' → logprob: -5.522223472595215
    5. '((' → logprob: -6.397223472595215
    6. '(i' → logprob: -7.147223472595215
    7. '(-' → logprob: -8.647223472595215
    8. '(A' → logprob: -9.397223472595215
    9. '([' → logprob: -9.522223472595215
    10. '(N' → logprob: -9.772223472595215

Token 605: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44208523631095886
    2. '())' → logprob: -1.4420852661132812
    3. '(i' → logprob: -3.0670852661132812
    4. '(' → logprob: -3.3170852661132812
    5. '()' → logprob: -3.5670852661132812
    6. '[i' → logprob: -6.442085266113281
    7. ')
' → logprob: -6.442085266113281
    8. ' -' → logprob: -6.567085266113281
    9. '-' → logprob: -6.817085266113281
    10. '())
' → logprob: -6.942085266113281

Token 606: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.0026357071474194527
    2. ' USED' → logprob: -6.127635478973389
    3. '1' → logprob: -8.627635955810547
    4. 'i' → logprob: -9.127635955810547
    5. '_USED' → logprob: -10.002635955810547
    6. '   ' → logprob: -10.127635955810547
    7. 'used' → logprob: -10.502635955810547
    8. 'USE' → logprob: -10.752635955810547
    9. '0' → logprob: -12.002635955810547
    10. '  ' → logprob: -12.252635955810547

Token 607: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2821202576160431
    2. '(i' → logprob: -1.4071202278137207
    3. '(' → logprob: -7.907120227813721
    4. '[' → logprob: -8.407120704650879
    5. '([' → logprob: -9.032120704650879
    6. '(n' → logprob: -9.282120704650879
    7. '()[' → logprob: -9.407120704650879
    8. '[n' → logprob: -10.782120704650879
    9. ' (' → logprob: -11.407120704650879
    10. '()' → logprob: -11.407120704650879

Token 608: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.029626667499542236
    2. ')' → logprob: -3.6546266078948975
    3. '])
' → logprob: -6.779626846313477
    4. ')])' → logprob: -7.404626846313477
    5. ']' → logprob: -7.904626846313477
    6. ')]' → logprob: -8.154626846313477
    7. '   ' → logprob: -8.654626846313477
    8. '[i' → logprob: -8.654626846313477
    9. ' ])' → logprob: -8.654626846313477
    10. ')
' → logprob: -9.154626846313477

Token 609: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 610: ' Euler' (ID: 167577)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33001747727394104
    2. ' def' → logprob: -1.4550174474716187
    3. ' __' → logprob: -3.705017566680908
    4. '__' → logprob: -5.330017566680908
    5. ' read' → logprob: -5.330017566680908
    6. ' sys' → logprob: -5.830017566680908
    7. ' main' → logprob: -6.080017566680908
    8. '_' → logprob: -6.205017566680908
    9. 'read' → logprob: -6.455017566680908
    10. ' ' → logprob: -6.580017566680908

Token 611: 'Tour' (ID: 48485)
  Prédit: 'Tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tour' → logprob: -0.0028279386460781097
    2. '_t' → logprob: -6.627828121185303
    3. '_T' → logprob: -7.127828121185303
    4. 'ian' → logprob: -8.502827644348145
    5. 'Tours' → logprob: -9.252827644348145
    6. ' Tour' → logprob: -9.377827644348145
    7. 'Tree' → logprob: -9.377827644348145
    8. 'Traversal' → logprob: -9.502827644348145
    9. 'tour' → logprob: -9.877827644348145
    10. 'Trail' → logprob: -10.127827644348145

Token 612: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9613927006721497
    2. ':' → logprob: -2.211392641067505
    3. 'Traversal' → logprob: -2.336392641067505
    4. '(N' → logprob: -2.586392641067505
    5. '(Tree' → logprob: -2.586392641067505
    6. '():' → logprob: -2.711392641067505
    7. '(n' → logprob: -3.586392641067505
    8. '(X' → logprob: -3.711392641067505
    9. '(T' → logprob: -3.711392641067505
    10. '(
' → logprob: -3.836392641067505

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017159747949335724
    2. ' ,' → logprob: -10.125171661376953
    3. ',
' → logprob: -10.250171661376953
    4. ',n' → logprob: -10.500171661376953
    5. ',X' → logprob: -10.875171661376953
    6. '):' → logprob: -11.000171661376953
    7. '   ' → logprob: -11.625171661376953
    8. ',Q' → logprob: -12.250171661376953
    9. ',C' → logprob: -12.750171661376953
    10. '):
' → logprob: -12.750171661376953

Token 614: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0003398726985324174
    2. ' X' → logprob: -9.12533950805664
    3. 'C' → logprob: -9.37533950805664
    4. ')' → logprob: -10.12533950805664
    5. 'n' → logprob: -10.62533950805664
    6. 'Q' → logprob: -10.62533950805664
    7. 'N' → logprob: -10.62533950805664
    8. 'f' → logprob: -11.25033950805664
    9. '):' → logprob: -13.00033950805664
    10. '   ' → logprob: -13.12533950805664

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4034345187828876e-05
    2. ' ,' → logprob: -11.87502384185791
    3. ',
' → logprob: -12.00002384185791
    4. ',n' → logprob: -12.62502384185791
    5. '):' → logprob: -12.87502384185791
    6. ',X' → logprob: -13.37502384185791
    7. '):
' → logprob: -14.00002384185791
    8. '   ' → logprob: -14.50002384185791
    9. ',Q' → logprob: -15.00002384185791
    10. 'n' → logprob: -15.50002384185791

Token 616: ' i' (ID: 575)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.003323507495224476
    2. 'P' → logprob: -6.253323554992676
    3. ' C' → logprob: -7.378323554992676
    4. 'f' → logprob: -8.128323554992676
    5. 'Q' → logprob: -8.503323554992676
    6. 'ET' → logprob: -8.878323554992676
    7. 'CT' → logprob: -10.503323554992676
    8. '   ' → logprob: -10.753323554992676
    9. ')' → logprob: -11.628323554992676
    10. 'X' → logprob: -12.003323554992676

Token 617: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002669384120963514
    2. ' ,' → logprob: -8.625267028808594
    3. ',
' → logprob: -10.375267028808594
    4. '):
' → logprob: -10.500267028808594
    5. '):' → logprob: -11.750267028808594
    6. '   ' → logprob: -12.125267028808594
    7. '=' → logprob: -12.750267028808594
    8. ',P' → logprob: -13.000267028808594
    9. '_,' → logprob: -13.250267028808594
    10. '```' → logprob: -13.875267028808594

Token 618: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.333223139634356e-05
    2. '):' → logprob: -10.500033378601074
    3. ' ,' → logprob: -12.625033378601074
    4. ',i' → logprob: -14.250033378601074
    5. '):
' → logprob: -14.375033378601074
    6. '   ' → logprob: -14.500033378601074
    7. ',
' → logprob: -15.000033378601074
    8. '_,' → logprob: -16.750032424926758
    9. ',n' → logprob: -16.750032424926758
    10. ')' → logprob: -17.000032424926758

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017784725641831756
    2. 'Q' → logprob: -6.501778602600098
    3. '	Q' → logprob: -8.501778602600098
    4. ' Q' → logprob: -10.126778602600098
    5. '   ' → logprob: -11.501778602600098
    6. 'ct' → logprob: -12.001778602600098
    7. '```' → logprob: -12.001778602600098
    8. '	ct' → logprob: -12.751778602600098
    9. ',Q' → logprob: -13.876778602600098
    10. 'import' → logprob: -14.126778602600098

Token 620: ' f' (ID: 285)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.9815832376480103
    2. 'f' (adapté à ' f') → logprob: -1.8565832376480103
    3. 'ET' → logprob: -1.8565832376480103
    4. 'Q' → logprob: -1.9815832376480103
    5. 'ct' → logprob: -2.4815831184387207
    6. 'CT' → logprob: -2.6065831184387207
    7. 'C' → logprob: -4.856583118438721
    8. 'from' → logprob: -4.981583118438721
    9. 'import' → logprob: -7.231583118438721
    10. 'OR' → logprob: -7.731583118438721

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326150894165039
    2. ' =' → logprob: -0.7576150894165039
    3. ' ' → logprob: -12.257615089416504
    4. '   ' → logprob: -12.632615089416504
    5. '  ' → logprob: -13.257615089416504
    6. 'make' → logprob: -13.507615089416504
    7. ',' → logprob: -14.007615089416504
    8. '=lambda' → logprob: -14.132615089416504
    9. 'f' → logprob: -14.507615089416504
    10. '
' → logprob: -15.132615089416504

Token 622: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.023692864924669266
    2. 'lambda' → logprob: -4.023693084716797
    3. ' make' → logprob: -5.398693084716797
    4. ' lambda' → logprob: -7.023693084716797
    5. '(lambda' → logprob: -9.773693084716797
    6. '(make' → logprob: -10.023693084716797
    7. '   ' → logprob: -12.398693084716797
    8. ' ' → logprob: -12.773693084716797
    9. '	make' → logprob: -13.023693084716797
    10. '  ' → logprob: -13.773693084716797

Token 623: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.0015048631466925144
    2. 'function' → logprob: -6.501504898071289
    3. 'f' → logprob: -13.251504898071289
    4. '_f' → logprob: -15.001504898071289
    5. ' function' → logprob: -16.37650489807129
    6. 'Function' → logprob: -16.50150489807129
    7. '_' → logprob: -16.75150489807129
    8. '_Function' → logprob: -16.87650489807129
    9. '_FUNCTION' → logprob: -17.12650489807129
    10. '_func' → logprob: -17.12650489807129

Token 624: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -3.869639476761222e-05
    2. 'f' → logprob: -10.250039100646973
    3. 'F' → logprob: -13.500039100646973
    4. '```' → logprob: -13.500039100646973
    5. '`' → logprob: -15.125039100646973
    6. '(f' → logprob: -16.875038146972656
    7. '_' → logprob: -17.000038146972656
    8. '(' → logprob: -17.250038146972656
    9. '_F' → logprob: -17.250038146972656
    10. '\' → logprob: -17.625038146972656

Token 625: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16034547984600067
    2. '()
' → logprob: -1.910345435142517
    3. '()
' → logprob: -9.660345077514648
    4. '()

' → logprob: -9.785345077514648
    5. '()"' → logprob: -15.035345077514648
    6. '()\' → logprob: -15.035345077514648
    7. '()`' → logprob: -15.785345077514648
    8. ' ()' → logprob: -15.910345077514648
    9. '()

' → logprob: -16.78534507751465
    10. '())' → logprob: -17.03534507751465

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2883204519748688
    2. 'Q' → logprob: -1.9133204221725464
    3. 'USED' → logprob: -2.413320541381836
    4. 'P' → logprob: -4.538320541381836
    5. 'ct' → logprob: -7.038320541381836
    6. 'CT' → logprob: -8.288320541381836
    7. 'ET' → logprob: -8.788320541381836
    8. '    
' → logprob: -8.913320541381836
    9. 'used' → logprob: -8.913320541381836
    10. 'QU' → logprob: -8.913320541381836

Token 627: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' (adapté à ' USED') → logprob: -0.6318387389183044
    2. 'Q' → logprob: -1.8818387985229492
    3. 'ct' → logprob: -1.8818387985229492
    4. 'C' → logprob: -2.881838798522949
    5. 'CT' → logprob: -3.006838798522949
    6. 'P' → logprob: -3.006838798522949
    7. 'ET' → logprob: -5.381838798522949
    8. 'used' → logprob: -7.006838798522949
    9. 'ANS' → logprob: -7.006838798522949
    10. 'ORG' → logprob: -7.381838798522949

Token 628: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233846306800842
    2. '=' → logprob: -0.8983846306800842
    3. ',' → logprob: -8.398385047912598
    4. '(n' → logprob: -11.523385047912598
    5. '(' → logprob: -11.648385047912598
    6. '=n' → logprob: -12.398385047912598
    7. '=[' → logprob: -12.898385047912598
    8. '[' → logprob: -13.273385047912598
    9. '<|end|>' → logprob: -13.273385047912598
    10. ')' → logprob: -13.523385047912598

Token 629: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.00010330478107789531
    2. ' make' → logprob: -9.250102996826172
    3. '[' → logprob: -11.875102996826172
    4. '	make' → logprob: -16.625102996826172
    5. '(make' → logprob: -16.750102996826172
    6. ' [' → logprob: -16.875102996826172
    7. ' ' → logprob: -19.250102996826172
    8. '   ' → logprob: -20.875102996826172
    9. '.make' → logprob: -21.000102996826172
    10. '  ' → logprob: -21.375102996826172

Token 630: '_USED' (ID: 198909)
  Prédit: '_USED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_USED' → logprob: -1.4259644558478612e-05
    2. 'USED' → logprob: -11.375014305114746
    3. '_USE' → logprob: -13.875014305114746
    4. '_UNUSED' → logprob: -14.250014305114746
    5. '_used' → logprob: -14.875014305114746
    6. '_USAGE' → logprob: -15.375014305114746
    7. '_' → logprob: -15.625014305114746
    8. '[' → logprob: -15.750014305114746
    9. '```' → logprob: -16.25001335144043
    10. 'used' → logprob: -17.62501335144043

Token 631: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012332366895861924
    2. '(' → logprob: -9.375123023986816
    3. 'n' → logprob: -10.250123023986816
    4. '<|end|>' → logprob: -13.375123023986816
    5. '(
' → logprob: -15.125123023986816
    6. ' (' → logprob: -15.125123023986816
    7. '
' → logprob: -15.375123023986816
    8. ' n' → logprob: -16.250123977661133
    9. ')n' → logprob: -16.250123977661133
    10. ',n' → logprob: -16.375123977661133

Token 632: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5770769715309143
    2. ')
' → logprob: -0.8270769715309143
    3. '(n' → logprob: -7.5770769119262695
    4. ')
' → logprob: -8.07707691192627
    5. '()' → logprob: -9.20207691192627
    6. '())
' → logprob: -9.57707691192627
    7. ')n' → logprob: -10.07707691192627
    8. '(' → logprob: -10.57707691192627
    9. ' )
' → logprob: -11.20207691192627
    10. '())' → logprob: -11.45207691192627

Token 633: '   ' (ID: 271)
  Prédit: 'ORG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ORG' → logprob: -0.2814026474952698
    2. '   ' → logprob: -1.406402587890625
    3. 'P' → logprob: -9.281402587890625
    4. 'OR' → logprob: -9.781402587890625
    5. ' ' → logprob: -11.531402587890625
    6. 'ORM' → logprob: -11.656402587890625
    7. 'org' → logprob: -11.781402587890625
    8. 'ORN' → logprob: -11.781402587890625
    9. 'ORI' → logprob: -11.781402587890625
    10. 'ORD' → logprob: -12.156402587890625

Token 634: ' OR' (ID: 4917)
  Prédit: 'ORG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ORG' → logprob: -7.862962229410186e-05
    2. 'TMP' → logprob: -9.750078201293945
    3. 'C' → logprob: -11.500078201293945
    4. 'P' → logprob: -12.375078201293945
    5. 'ORM' → logprob: -12.750078201293945
    6. 'ORD' → logprob: -14.250078201293945
    7. 'ORN' → logprob: -15.000078201293945
    8. 'org' → logprob: -15.125078201293945
    9. 'ORT' → logprob: -15.250078201293945
    10. 'Q' → logprob: -15.375078201293945

Token 635: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -6.704273118884885e-07
    2. ' G' → logprob: -16.0
    3. '[' → logprob: -16.625
    4. '(' → logprob: -17.125
    5. 'Org' → logprob: -17.125
    6. 'def' → logprob: -17.125
    7. '[
' → logprob: -17.25
    8. '```' → logprob: -17.25
    9. '[G' → logprob: -17.375
    10. 'GIN' → logprob: -17.5

Token 636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869136571884155
    2. ' =' → logprob: -1.1369136571884155
    3. '=n' → logprob: -11.386913299560547
    4. '(n' → logprob: -11.511913299560547
    5. '(' → logprob: -11.636913299560547
    6. ',' → logprob: -12.011913299560547
    7. '=
' → logprob: -13.511913299560547
    8. '=[' → logprob: -13.761913299560547
    9. '   ' → logprob: -13.761913299560547
    10. ' ' → logprob: -14.886913299560547

Token 637: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.0003850325592793524
    2. ' make' → logprob: -8.125385284423828
    3. '[' → logprob: -9.375385284423828
    4. ' [' → logprob: -12.875385284423828
    5. '   ' → logprob: -14.625385284423828
    6. '[-' → logprob: -15.250385284423828
    7. '	make' → logprob: -15.250385284423828
    8. '(make' → logprob: -15.375385284423828
    9. ' ' → logprob: -15.625385284423828
    10. '[n' → logprob: -15.750385284423828

Token 638: '_OR' (ID: 41497)
  Prédit: '_OR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_OR' → logprob: -0.00045545989996753633
    2. '_' → logprob: -8.000455856323242
    3. 'ORG' → logprob: -10.125455856323242
    4. '_USED' → logprob: -10.125455856323242
    5. '_org' → logprob: -10.875455856323242
    6. '[' → logprob: -12.500455856323242
    7. '
' → logprob: -12.625455856323242
    8. '_TMP' → logprob: -12.750455856323242
    9. 'org' → logprob: -12.875455856323242
    10. '`' → logprob: -13.125455856323242

Token 639: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.024349965155124664
    2. '(n' → logprob: -4.274350166320801
    3. '[n' → logprob: -4.774350166320801
    4. '[i' → logprob: -7.649350166320801
    5. '[' → logprob: -8.2743501663208
    6. '(' → logprob: -8.3993501663208
    7. '[G' → logprob: -8.7743501663208
    8. 'n' → logprob: -8.8993501663208
    9. '(i' → logprob: -9.3993501663208
    10. '[size' → logprob: -10.5243501663208

Token 640: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2961512513575144e-05
    2. 'n' → logprob: -10.750022888183594
    3. '(' → logprob: -13.875022888183594
    4. ' (' → logprob: -15.000022888183594
    5. 'def' → logprob: -17.250022888183594
    6. '(len' → logprob: -17.375022888183594
    7. ',' → logprob: -18.125022888183594
    8. '[n' → logprob: -18.250022888183594
    9. ',n' → logprob: -18.375022888183594
    10. '```' → logprob: -18.375022888183594

Token 641: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16042843461036682
    2. ')' → logprob: -1.9104284048080444
    3. ')
' → logprob: -8.535428047180176
    4. ')n' → logprob: -12.660428047180176
    5. ')

' → logprob: -13.535428047180176
    6. 'n' → logprob: -13.785428047180176
    7. ' )
' → logprob: -13.910428047180176
    8. '   ' → logprob: -14.660428047180176
    9. '(n' → logprob: -14.910428047180176
    10. '())
' → logprob: -15.410428047180176

Token 642: '   ' (ID: 271)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TMP' → logprob: -0.16043807566165924
    2. '   ' → logprob: -1.910438060760498
    3. ' TMP' → logprob: -8.785438537597656
    4. '_TMP' → logprob: -10.785438537597656
    5. ' ' → logprob: -11.660438537597656
    6. 'TM' → logprob: -11.910438537597656
    7. '
' → logprob: -12.035438537597656
    8. '```' → logprob: -12.160438537597656
    9. '  ' → logprob: -12.410438537597656
    10. 'T' → logprob: -13.160438537597656

Token 643: ' TMP' (ID: 121022)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TMP' (adapté à ' TMP') → logprob: -6.511406809295295e-06
    2. '   ' → logprob: -12.250006675720215
    3. 'tmp' → logprob: -14.750006675720215
    4. 'ET' → logprob: -15.000006675720215
    5. '_TMP' → logprob: -15.250006675720215
    6. 'ct' → logprob: -15.625006675720215
    7. 'CT' → logprob: -15.875006675720215
    8. 'TEMP' → logprob: -16.1250057220459
    9. '```' → logprob: -16.5000057220459
    10. 'TM' → logprob: -16.8750057220459

Token 644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42279529571533203
    2. ' =' → logprob: -1.422795295715332
    3. '(n' → logprob: -2.297795295715332
    4. '=n' → logprob: -5.922795295715332
    5. '(' → logprob: -7.797795295715332
    6. 'n' → logprob: -10.047795295715332
    7. '```' → logprob: -10.172795295715332
    8. '<|end|>' → logprob: -10.422795295715332
    9. '=(' → logprob: -11.672795295715332
    10. '=
' → logprob: -11.922795295715332

Token 645: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.0035141913685947657
    2. '(n' → logprob: -5.753514289855957
    3. 'n' → logprob: -8.503514289855957
    4. ' make' → logprob: -9.003514289855957
    5. '(make' → logprob: -11.628514289855957
    6. '[n' → logprob: -13.878514289855957
    7. '.make' → logprob: -14.628514289855957
    8. ' n' → logprob: -16.00351333618164
    9. '	make' → logprob: -16.00351333618164
    10. '_make' → logprob: -16.50351333618164

Token 646: '_TMP' (ID: 190160)
  Prédit: '_TMP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_TMP' → logprob: -1.3663626305060461e-05
    2. '_tmp' → logprob: -11.75001335144043
    3. 'TMP' → logprob: -12.37501335144043
    4. '_' → logprob: -14.25001335144043
    5. '_TEMP' → logprob: -15.00001335144043
    6. 'tmp' → logprob: -16.37501335144043
    7. '##_' → logprob: -16.62501335144043
    8. '_TM' → logprob: -16.62501335144043
    9. '$tmp' → logprob: -17.12501335144043
    10. '
' → logprob: -17.50001335144043

Token 647: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.5107177862082608e-05
    2. 'n' → logprob: -10.625024795532227
    3. '(' → logprob: -14.625024795532227
    4. '(len' → logprob: -16.000024795532227
    5. ' (' → logprob: -16.375024795532227
    6. '<|end|>' → logprob: -17.375024795532227
    7. ' n' → logprob: -18.500024795532227
    8. '[n' → logprob: -18.750024795532227
    9. '(
' → logprob: -19.125024795532227
    10. ',n' → logprob: -19.250024795532227

Token 648: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3808797299861908
    2. '(n' → logprob: -1.3808797597885132
    3. ')
' → logprob: -2.7558796405792236
    4. 'n' → logprob: -6.630879878997803
    5. ')
' → logprob: -8.255879402160645
    6. ')n' → logprob: -8.880879402160645
    7. '(' → logprob: -9.755879402160645
    8. '[n' → logprob: -11.005879402160645
    9. ')(' → logprob: -11.755879402160645
    10. '   ' → logprob: -12.255879402160645

Token 649: '   ' (ID: 271)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0005206239875406027
    2. '   ' → logprob: -7.625520706176758
    3. ' P' → logprob: -11.500520706176758
    4. '[' → logprob: -11.875520706176758
    5. 'n' → logprob: -12.375520706176758
    6. '```' → logprob: -12.625520706176758
    7. '(' → logprob: -12.750520706176758
    8. '
' → logprob: -13.875520706176758
    9. ',' → logprob: -14.500520706176758
    10. 'def' → logprob: -14.625520706176758

Token 650: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -1.27099974633893e-05
    2. '   ' → logprob: -12.625012397766113
    3. ' P' → logprob: -12.625012397766113
    4. 'ANS' → logprob: -12.875012397766113
    5. '
' → logprob: -14.000012397766113
    6. 'ET' → logprob: -14.375012397766113
    7. 'def' → logprob: -14.625012397766113
    8. 'ans' → logprob: -15.625012397766113
    9. 'AN' → logprob: -15.750012397766113
    10. 'import' → logprob: -15.750012397766113

Token 651: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693282961845398
    2. ' =' → logprob: -2.1269328594207764
    3. '[' → logprob: -13.251933097839355
    4. '=[' → logprob: -14.251933097839355
    5. '=
' → logprob: -14.376933097839355
    6. ',' → logprob: -14.501933097839355
    7. '=n' → logprob: -14.876933097839355
    8. '=[]' → logprob: -15.376933097839355
    9. '   ' → logprob: -15.876933097839355
    10. '```' → logprob: -16.12693214416504

Token 652: ' make' (ID: 1520)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00014406509581021965
    2. 'make' → logprob: -9.125144004821777
    3. ' [-' → logprob: -10.750144004821777
    4. '[' → logprob: -11.625144004821777
    5. '[i' → logprob: -12.875144004821777
    6. '   ' → logprob: -13.625144004821777
    7. '([-' → logprob: -14.875144004821777
    8. ' make' → logprob: -16.000144958496094
    9. '[n' → logprob: -16.000144958496094
    10. '[P' → logprob: -16.250144958496094

Token 653: '_P' (ID: 2008)
  Prédit: '_P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_P' → logprob: 0.0
    2. '[-' → logprob: -17.125
    3. '```' → logprob: -18.625
    4. '	P' → logprob: -19.875
    5. '[P' → logprob: -19.875
    6. '
' → logprob: -20.25
    7. 'P' → logprob: -20.375
    8. '`' → logprob: -20.5
    9. '_[' → logprob: -20.625
    10. '\' → logprob: -20.75

Token 654: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002973280206788331
    2. 'n' → logprob: -8.125297546386719
    3. '(' → logprob: -14.375297546386719
    4. ' (' → logprob: -14.500297546386719
    5. '
' → logprob: -16.87529754638672
    6. ' n' → logprob: -17.00029754638672
    7. ',n' → logprob: -17.25029754638672
    8. '[n' → logprob: -18.62529754638672
    9. '(
' → logprob: -18.75029754638672
    10. ')n' → logprob: -18.75029754638672

Token 655: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023303363472223282
    2. ')' → logprob: -3.773303270339966
    3. ')
' → logprob: -9.773303031921387
    4. ' )
' → logprob: -14.648303031921387
    5. '   ' → logprob: -15.273303031921387
    6. '')
' → logprob: -16.523303985595703
    7. ')n' → logprob: -16.773303985595703
    8. ' ' → logprob: -17.273303985595703
    9. ')

' → logprob: -17.523303985595703
    10. ')`
' → logprob: -17.898303985595703

Token 656: '   ' (ID: 271)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.005967780947685242
    2. '   ' → logprob: -5.130967617034912
    3. ' ET' → logprob: -11.63096809387207
    4. 'Q' → logprob: -11.88096809387207
    5. 'def' → logprob: -11.88096809387207
    6. 'CT' → logprob: -11.88096809387207
    7. 'ct' → logprob: -12.63096809387207
    8. '```' → logprob: -12.88096809387207
    9. 'import' → logprob: -13.88096809387207
    10. 'from' → logprob: -14.38096809387207

Token 657: ' Q' (ID: 1486)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.000356199947418645
    2. 'Q' (adapté à ' Q') → logprob: -8.000356674194336
    3. 'ct' → logprob: -11.000356674194336
    4. 'CT' → logprob: -13.000356674194336
    5. ' ET' → logprob: -14.875356674194336
    6. 'et' → logprob: -14.875356674194336
    7. '   ' → logprob: -15.000356674194336
    8. 'from' → logprob: -15.375356674194336
    9. 'import' → logprob: -15.375356674194336
    10. 'def' → logprob: -15.750356674194336

Token 658: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519322335720062
    2. ' =' → logprob: -1.5019322633743286
    3. '=[' → logprob: -14.126932144165039
    4. '＝' → logprob: -14.751932144165039
    5. '=
' → logprob: -14.751932144165039
    6. ' =[' → logprob: -14.751932144165039
    7. ',' → logprob: -15.251932144165039
    8. '=[]' → logprob: -15.376932144165039
    9. '<|end|>' → logprob: -16.00193214416504
    10. '=}' → logprob: -16.00193214416504

Token 659: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.007444532122462988
    2. '[' → logprob: -5.007444381713867
    3. ' make' → logprob: -7.507444381713867
    4. '[i' → logprob: -9.507444381713867
    5. ' [' → logprob: -9.882444381713867
    6. '(make' → logprob: -10.882444381713867
    7. '[-' → logprob: -10.882444381713867
    8. '	make' → logprob: -12.382444381713867
    9. '[get' → logprob: -12.632444381713867
    10. '[m' → logprob: -13.132444381713867

Token 660: '_Q' (ID: 28618)
  Prédit: '_Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Q' → logprob: -1.0087516784551553e-05
    2. '```' → logprob: -12.75001049041748
    3. '[' → logprob: -12.87501049041748
    4. '_[' → logprob: -13.25001049041748
    5. 'Q' → logprob: -13.50001049041748
    6. '_P' → logprob: -14.25001049041748
    7. '_' → logprob: -15.50001049041748
    8. 'function' → logprob: -15.50001049041748
    9. '`' → logprob: -16.500009536743164
    10. '[]' → logprob: -16.875009536743164

Token 661: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. '(I' → logprob: -17.375001907348633
    4. 'i' → logprob: -18.125001907348633
    5. '(int' → logprob: -18.750001907348633
    6. '(
' → logprob: -19.000001907348633
    7. ',i' → logprob: -19.250001907348633
    8. '(ierr' → logprob: -19.250001907348633
    9. '(n' → logprob: -19.500001907348633
    10. ' (' → logprob: -20.125001907348633

Token 662: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3902033970225602e-05
    2. '(' → logprob: -11.375014305114746
    3. '_' → logprob: -14.000014305114746
    4. '```' → logprob: -14.375014305114746
    5. ')' → logprob: -15.000014305114746
    6. '(i' → logprob: -15.750014305114746
    7. '[' → logprob: -15.875014305114746
    8. '۰' → logprob: -16.37501335144043
    9. 'i' → logprob: -16.50001335144043
    10. '\xe2\x82' → logprob: -16.75001335144043

Token 663: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000570667558349669
    2. ')
' → logprob: -7.500570774078369
    3. '   ' → logprob: -11.125570297241211
    4. ')i' → logprob: -14.500570297241211
    5. ')
' → logprob: -14.500570297241211
    6. ' )' → logprob: -14.875570297241211
    7. ')#' → logprob: -15.625570297241211
    8. ')

' → logprob: -15.750570297241211
    9. ')return' → logprob: -15.875570297241211
    10. '))' → logprob: -15.875570297241211

Token 664: '   ' (ID: 271)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.18212942779064178
    2. '   ' → logprob: -1.8071293830871582
    3. 'while' → logprob: -6.807129383087158
    4. 'import' → logprob: -7.807129383087158
    5. ' ET' → logprob: -8.057129859924316
    6. 'ct' → logprob: -8.557129859924316
    7. 'CT' → logprob: -8.932129859924316
    8. '
' → logprob: -10.182129859924316
    9. 'from' → logprob: -10.682129859924316
    10. 'i' → logprob: -10.807129859924316

Token 665: ' ct' (ID: 40541)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.011981274001300335
    2. 'ct' (adapté à ' ct') → logprob: -4.51198148727417
    3. 'while' → logprob: -8.261981010437012
    4. 'import' → logprob: -8.511981010437012
    5. 'ANS' → logprob: -9.136981010437012
    6. 'i' → logprob: -9.511981010437012
    7. 'CT' → logprob: -9.511981010437012
    8. 'from' → logprob: -9.761981010437012
    9. 'idx' → logprob: -10.386981010437012
    10. 'count' → logprob: -11.011981010437012

Token 666: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932041049003601
    2. ' =' → logprob: -0.6932041049003601
    3. ',' → logprob: -10.693203926086426
    4. '=[' → logprob: -10.943203926086426
    5. '[' → logprob: -12.068203926086426
    6. '   ' → logprob: -12.443203926086426
    7. ' =[' → logprob: -12.443203926086426
    8. ' ' → logprob: -14.693203926086426
    9. '  ' → logprob: -14.693203926086426
    10. '=[]' → logprob: -15.568203926086426

Token 667: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -8.2994620242971e-06
    2. ' [' → logprob: -12.000008583068848
    3. '[-' → logprob: -13.125008583068848
    4. '0' → logprob: -17.87500762939453
    5. ' ' → logprob: -18.62500762939453
    6. '   ' → logprob: -19.50000762939453
    7. '[
' → logprob: -19.75000762939453
    8. '=[' → logprob: -19.87500762939453
    9. '[i' → logprob: -20.25000762939453
    10. '[int' → logprob: -20.25000762939453

Token 668: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.625000953674316
    3. '2' → logprob: -15.875000953674316
    4. '999' → logprob: -17.0
    5. '-' → logprob: -17.25
    6. '100' → logprob: -17.625
    7. '10' → logprob: -18.125
    8. '   ' → logprob: -18.875
    9. '99' → logprob: -19.0
    10. '0' → logprob: -19.0

Token 669: ']' (ID: 60)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 670: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01147299911826849
    2. '<|end|>' → logprob: -5.011473178863525
    3. '   ' → logprob: -6.011473178863525
    4. 'while' → logprob: -7.886473178863525
    5. ' while' → logprob: -8.011472702026367
    6. '  
' → logprob: -8.011472702026367
    7. '    
' → logprob: -8.261472702026367
    8. ' 
' → logprob: -8.386472702026367
    9. '
' → logprob: -8.511472702026367
    10. '	while' → logprob: -9.011472702026367

Token 671: ' to' (ID: 316)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.25529012084007263
    2. '0' → logprob: -2.1302900314331055
    3. ' ct' → logprob: -2.7552900314331055
    4. '
' → logprob: -4.2552900314331055
    5. ' ' → logprob: -4.6302900314331055
    6. '1' → logprob: -5.1302900314331055
    7. 'Q' → logprob: -6.6302900314331055
    8. '    ' → logprob: -6.7552900314331055
    9. '<|end|>' → logprob: -6.7552900314331055
    10. 'for' → logprob: -6.8802900314331055

Token 672: ' allow' (ID: 3763)
  Prédit: ' allow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allow' → logprob: -1.2391211986541748
    2. 'allow' → logprob: -2.114121198654175
    3. 'ct' → logprob: -2.239121198654175
    4. '0' → logprob: -2.614121198654175
    5. ' provide' → logprob: -2.739121198654175
    6. 'continue' → logprob: -3.114121198654175
    7. ' ' → logprob: -3.239121198654175
    8. ' range' → logprob: -3.239121198654175
    9. '[' → logprob: -3.489121198654175
    10. 'simulate' → logprob: -3.614121198654175

Token 673: ' pass' (ID: 1853)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.5733345150947571
    2. 'Q' → logprob: -1.4483344554901123
    3. 'increment' → logprob: -2.3233344554901123
    4. 'pass' → logprob: -3.0733344554901123
    5. ' ct' → logprob: -3.3233344554901123
    6. '0' → logprob: -4.698334693908691
    7. ' Q' → logprob: -5.948334693908691
    8. 'passing' → logprob: -6.073334693908691
    9. ' increment' → logprob: -7.073334693908691
    10. '1' → logprob: -7.198334693908691

Token 674: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.5364482998847961
    2. 'by' → logprob: -1.0364482402801514
    3. '-by' → logprob: -3.1614482402801514
    4. '<|end|>' → logprob: -4.9114484786987305
    5. '[' → logprob: -5.2864484786987305
    6. '_by' → logprob: -5.5364484786987305
    7. ' ' → logprob: -7.0364484786987305
    8. '
' → logprob: -9.03644847869873
    9. '<|end|>' → logprob: -9.41144847869873
    10. '#' → logprob: -9.41144847869873

Token 675: ' reference' (ID: 9682)
  Prédit: 'reference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reference' → logprob: -3.128163257315464e-07
    2. 'value' → logprob: -16.5
    3. '-reference' → logprob: -16.75
    4. 'refer' → logprob: -16.875
    5. 'list' → logprob: -17.125
    6. ' reference' → logprob: -17.125
    7. '_reference' → logprob: -18.0
    8. ' ' → logprob: -18.375
    9. '   ' → logprob: -19.125
    10. '
' → logprob: -19.25

Token 676: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38746339082717896
    2. '   ' → logprob: -1.3874633312225342
    3. '<|end|>' → logprob: -2.762463331222534
    4. 'while' → logprob: -6.387463569641113
    5. ' while' → logprob: -6.512463569641113
    6. ')' → logprob: -6.637463569641113
    7. '    
' → logprob: -6.637463569641113
    8. '<|end|>' → logprob: -6.887463569641113
    9. 'def' → logprob: -7.137463569641113
    10. '	while' → logprob: -8.387463569641113

Token 677: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.48850518465042114
    2. '   ' → logprob: -1.1135051250457764
    3. ' while' → logprob: -2.8635051250457764
    4. '	while' → logprob: -7.3635053634643555
    5. '
' → logprob: -9.113505363464355
    6. '<|end|>' → logprob: -9.238505363464355
    7. '```' → logprob: -10.363505363464355
    8. '    
' → logprob: -10.488505363464355
    9. 'def' → logprob: -10.988505363464355
    10. '  ' → logprob: -11.238505363464355

Token 678: ' ET' (ID: 23345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009998662397265434
    2. ' while' → logprob: -4.759998798370361
    3. '   ' → logprob: -7.509998798370361
    4. 'ET' (adapté à ' ET') → logprob: -7.759998798370361
    5. 'ANS' → logprob: -8.634998321533203
    6. '	while' → logprob: -9.509998321533203
    7. 'ans' → logprob: -9.509998321533203
    8. 'for' → logprob: -11.259998321533203
    9. '```' → logprob: -11.509998321533203
    10. 'result' → logprob: -11.634998321533203

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.625004768371582
    3. '[
' → logprob: -15.000004768371582
    4. '_' → logprob: -15.375004768371582
    5. '```' → logprob: -15.500004768371582
    6. '' → logprob: -15.625004768371582
    7. '=' → logprob: -15.750004768371582
    8. '(' → logprob: -15.750004768371582
    9. '۱' → logprob: -16.2500057220459
    10. 'def' → logprob: -17.0000057220459

Token 680: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3609495162963867
    2. '=' → logprob: -1.9859495162963867
    3. '[i' → logprob: -2.6109495162963867
    4. ',' → logprob: -2.6109495162963867
    5. '[' → logprob: -4.235949516296387
    6. '=[' → logprob: -6.110949516296387
    7. '<|end|>' → logprob: -6.860949516296387
    8. '[I' → logprob: -8.360949516296387
    9. ',i' → logprob: -8.485949516296387
    10. '<|end|>' → logprob: -8.985949516296387

Token 681: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.043118059635162354
    2. '[' → logprob: -3.4181180000305176
    3. ' make' → logprob: -4.793118000030518
    4. ' [' → logprob: -6.793118000030518
    5. '(make' → logprob: -11.793118476867676
    6. '[-' → logprob: -12.543118476867676
    7. '	make' → logprob: -12.793118476867676
    8. '   ' → logprob: -13.168118476867676
    9. ' ' → logprob: -13.418118476867676
    10. '.make' → logprob: -13.668118476867676

Token 682: '_ET' (ID: 176185)
  Prédit: '_ET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ET' → logprob: -1.4855663721391466e-05
    2. 'ET' → logprob: -11.125015258789062
    3. ' ET' → logprob: -16.750015258789062
    4. '_et' → logprob: -18.250015258789062
    5. '_ETH' → logprob: -18.875015258789062
    6. '
' → logprob: -20.500015258789062
    7. '_OT' → logprob: -20.875015258789062
    8. '[' → logprob: -21.000015258789062
    9. 'et' → logprob: -21.000015258789062
    10. '_ED' → logprob: -21.250015258789062

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'ET' → logprob: -18.25
    3. '```' → logprob: -18.25
    4. '[' → logprob: -18.5
    5. '１' → logprob: -19.625
    6. '_' → logprob: -19.625
    7. '[n' → logprob: -20.125
    8. '
' → logprob: -20.25
    9. 'def' → logprob: -20.375
    10. 'n' → logprob: -20.9375

Token 684: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8312570318812504e-05
    2. 'n' → logprob: -11.250018119812012
    3. '(' → logprob: -12.500018119812012
    4. '(len' → logprob: -13.500018119812012
    5. ' (' → logprob: -15.625018119812012
    6. '(
' → logprob: -17.750019073486328
    7. 'def' → logprob: -18.500019073486328
    8. '(N' → logprob: -18.625019073486328
    9. '```' → logprob: -18.875019073486328
    10. '[n' → logprob: -19.000019073486328

Token 685: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02414947748184204
    2. ')' → logprob: -3.7741494178771973
    3. ')
' → logprob: -7.024149417877197
    4. '(n' → logprob: -11.649149894714355
    5. '())
' → logprob: -13.024149894714355
    6. ')n' → logprob: -14.274149894714355
    7. ' )
' → logprob: -14.399149894714355
    8. ')

' → logprob: -14.649149894714355
    9. 'n' → logprob: -14.649149894714355
    10. '()
' → logprob: -16.27414894104004

Token 686: '   ' (ID: 271)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.023580634966492653
    2. '   ' → logprob: -3.773580551147461
    3. ' ET' → logprob: -8.023580551147461
    4. ' ' → logprob: -13.023580551147461
    5. '_ET' → logprob: -13.273580551147461
    6. '  ' → logprob: -13.523580551147461
    7. 'def' → logprob: -15.148580551147461
    8. '
' → logprob: -15.148580551147461
    9. '    
' → logprob: -15.398580551147461
    10. 'et' → logprob: -15.398580551147461

Token 687: ' ET' (ID: 23345)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' (adapté à ' ET') → logprob: -7.896309739408025e-07
    2. ' ET' → logprob: -14.375000953674316
    3. '_ET' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.625
    5. 'def' → logprob: -18.125
    6. 'CT' → logprob: -19.25
    7. 'return' → logprob: -19.375
    8. '0' → logprob: -19.875
    9. 'for' → logprob: -20.0
    10. '[' → logprob: -20.25

Token 688: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.625001907348633
    3. '₂' → logprob: -14.875001907348633
    4. 'def' → logprob: -15.000001907348633
    5. '```' → logprob: -15.500001907348633
    6. '[' → logprob: -15.875001907348633
    7. '۲' → logprob: -16.375001907348633
    8. ' ' → logprob: -16.625001907348633
    9. '1' → logprob: -16.875001907348633
    10. '`' → logprob: -17.000001907348633

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12199990451335907
    2. ' =' → logprob: -2.246999979019165
    3. '(n' → logprob: -4.746999740600586
    4. '=n' → logprob: -7.746999740600586
    5. '=[' → logprob: -11.746999740600586
    6. 'n' → logprob: -12.121999740600586
    7. '[n' → logprob: -12.621999740600586
    8. '(' → logprob: -13.246999740600586
    9. '=(' → logprob: -13.246999740600586
    10. '   ' → logprob: -13.996999740600586

Token 690: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.00013655527436640114
    2. ' make' → logprob: -9.000136375427246
    3. '(make' → logprob: -11.250136375427246
    4. '	make' → logprob: -16.375137329101562
    5. '.make' → logprob: -17.750137329101562
    6. '_make' → logprob: -18.125137329101562
    7. '[' → logprob: -18.250137329101562
    8. '   ' → logprob: -19.625137329101562
    9. ' ' → logprob: -20.125137329101562
    10. '[n' → logprob: -21.125137329101562

Token 691: '_ET' (ID: 176185)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -2.696889623621246e-06
    2. '_ET' → logprob: -12.87500286102295
    3. ' ET' → logprob: -18.000001907348633
    4. '
' → logprob: -18.375001907348633
    5. 'def' → logprob: -19.125001907348633
    6. '_et' → logprob: -19.625001907348633
    7. 'et' → logprob: -19.625001907348633
    8. 'n' → logprob: -20.000001907348633
    9. 'ETA' → logprob: -20.250001907348633
    10. 'Et' → logprob: -20.250001907348633

Token 692: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8550976164988242e-05
    2. '(n' → logprob: -11.500018119812012
    3. 'def' → logprob: -12.875018119812012
    4. '   ' → logprob: -14.000018119812012
    5. ' ' → logprob: -14.000018119812012
    6. '[n' → logprob: -14.125018119812012
    7. '1' → logprob: -14.250018119812012
    8. '```' → logprob: -14.312518119812012
    9. 'ET' → logprob: -14.750018119812012
    10. '(' → logprob: -15.000018119812012

Token 693: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1041145626222715e-05
    2. 'n' → logprob: -11.500011444091797
    3. '(' → logprob: -14.250011444091797
    4. 'def' → logprob: -16.375011444091797
    5. '[n' → logprob: -16.750011444091797
    6. ' (' → logprob: -17.000011444091797
    7. '<|end|>' → logprob: -18.000011444091797
    8. '(len' → logprob: -18.000011444091797
    9. '```' → logprob: -18.625011444091797
    10. '(
' → logprob: -18.750011444091797

Token 694: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37900474667549133
    2. ')
' → logprob: -1.504004716873169
    3. '(n' → logprob: -2.504004716873169
    4. 'n' → logprob: -4.754004955291748
    5. ')n' → logprob: -6.629004955291748
    6. ',n' → logprob: -7.879004955291748
    7. '   ' → logprob: -8.00400447845459
    8. ',' → logprob: -8.50400447845459
    9. ')(' → logprob: -8.50400447845459
    10. '[n' → logprob: -9.12900447845459

Token 695: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4551624655723572
    2. 'while' → logprob: -1.080162525177002
    3. ' while' → logprob: -3.705162525177002
    4. '	while' → logprob: -7.705162525177002
    5. '
' → logprob: -7.955162525177002
    6. '    
' → logprob: -8.705162048339844
    7. 'def' → logprob: -8.830162048339844
    8. '```' → logprob: -9.080162048339844
    9. '<|end|>' → logprob: -10.080162048339844
    10. '  ' → logprob: -10.080162048339844

Token 696: ' AN' (ID: 3473)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.008359606377780437
    2. '   ' → logprob: -4.883359432220459
    3. ' while' → logprob: -7.258359432220459
    4. 'ANS' → logprob: -11.133359909057617
    5. '	while' → logprob: -11.633359909057617
    6. 'for' → logprob: -11.883359909057617
    7. '```' → logprob: -12.508359909057617
    8. 'C' → logprob: -12.633359909057617
    9. 'P' → logprob: -12.633359909057617
    10. 'ans' → logprob: -13.383359909057617

Token 697: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.7432603272027336e-06
    2. '=' → logprob: -14.250001907348633
    3. 'def' → logprob: -14.625001907348633
    4. ' =' → logprob: -15.125001907348633
    5. ' S' → logprob: -16.500001907348633
    6. '=S' → logprob: -16.625001907348633
    7. '[' → logprob: -16.750001907348633
    8. '(S' → logprob: -16.875001907348633
    9. '[S' → logprob: -17.250001907348633
    10. 'SOR' → logprob: -17.500001907348633

Token 698: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231430530548096
    2. ' =' → logprob: -0.8981430530548096
    3. ',' → logprob: -11.64814281463623
    4. '[' → logprob: -12.77314281463623
    5. ')' → logprob: -12.89814281463623
    6. '=
' → logprob: -13.64814281463623
    7. '=[' → logprob: -14.14814281463623
    8. '<|end|>' → logprob: -14.14814281463623
    9. '```' → logprob: -14.77314281463623
    10. ' =
' → logprob: -15.02314281463623

Token 699: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.00027015688829123974
    2. ' make' → logprob: -8.250269889831543
    3. '[' → logprob: -12.125269889831543
    4. '(make' → logprob: -13.375269889831543
    5. '   ' → logprob: -13.625269889831543
    6. ' [' → logprob: -15.125269889831543
    7. '	make' → logprob: -15.250269889831543
    8. ' ' → logprob: -16.62527084350586
    9. '  ' → logprob: -16.75027084350586
    10. '[-' → logprob: -17.62527084350586

Token 700: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003187810070812702
    2. '_AN' → logprob: -8.12531852722168
    3. '_P' → logprob: -11.50031852722168
    4. '_ans' → logprob: -12.62531852722168
    5. 'ANS' → logprob: -12.75031852722168
    6. '[' → logprob: -12.75031852722168
    7. '`' → logprob: -14.37531852722168
    8. '(' → logprob: -14.62531852722168
    9. '_[' → logprob: -14.87531852722168
    10. '_AB' → logprob: -15.37531852722168

Token 701: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -8.77627644513268e-06
    2. '_' → logprob: -12.750008583068848
    3. '[' → logprob: -13.625008583068848
    4. '(' → logprob: -13.875008583068848
    5. '{' → logprob: -14.000008583068848
    6. '
' → logprob: -14.875008583068848
    7. 'A' → logprob: -15.000008583068848
    8. '`' → logprob: -15.375008583068848
    9. 'AN' → logprob: -15.375008583068848
    10. '0' → logprob: -15.750008583068848

Token 702: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -11.750012397766113
    3. 'n' → logprob: -12.625012397766113
    4. ' (' → logprob: -14.750012397766113
    5. '<|end|>' → logprob: -14.750012397766113
    6. '(
' → logprob: -15.625012397766113
    7. '(len' → logprob: -16.625011444091797
    8. 'def' → logprob: -17.375011444091797
    9. ')' → logprob: -18.125011444091797
    10. ',' → logprob: -18.250011444091797

Token 703: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00946812704205513
    2. ',' → logprob: -5.009468078613281
    3. ',n' → logprob: -6.259468078613281
    4. 'n' → logprob: -7.134468078613281
    5. '(' → logprob: -11.259468078613281
    6. ' (' → logprob: -11.884468078613281
    7. ')(' → logprob: -12.009468078613281
    8. ')' → logprob: -13.009468078613281
    9. ',
' → logprob: -13.009468078613281
    10. '```' → logprob: -13.259468078613281

Token 704: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003384422743692994
    2. 'lambda' → logprob: -8.375338554382324
    3. 'n' → logprob: -10.000338554382324
    4. 'ct' → logprob: -10.500338554382324
    5. ' f' → logprob: -10.875338554382324
    6. '   ' → logprob: -12.500338554382324
    7. '(lambda' → logprob: -12.750338554382324
    8. '0' → logprob: -13.250338554382324
    9. ' lambda' → logprob: -13.250338554382324
    10. '  ' → logprob: -13.625338554382324

Token 705: ')
' (ID: 446)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0014372545992955565
    2. ')' → logprob: -7.001437187194824
    3. '(' → logprob: -8.126437187194824
    4. 'n' → logprob: -9.001437187194824
    5. ')
' → logprob: -9.751437187194824
    6. ' (' → logprob: -11.251437187194824
    7. ',' → logprob: -11.376437187194824
    8. ')(' → logprob: -11.376437187194824
    9. ')n' → logprob: -12.751437187194824
    10. '[n' → logprob: -13.001437187194824

Token 706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5037944912910461
    2. 'while' → logprob: -1.0037944316864014
    3. ' while' → logprob: -3.6287944316864014
    4. '
' → logprob: -6.6287946701049805
    5. '	while' → logprob: -7.5037946701049805
    6. '    
' → logprob: -7.7537946701049805
    7. '<|end|>' → logprob: -8.62879467010498
    8. '```' → logprob: -9.00379467010498
    9. ')' → logprob: -9.87879467010498
    10. 'def' → logprob: -10.87879467010498

Token 707: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00011915886716451496
    2. ' while' → logprob: -9.62511920928955
    3. '   ' → logprob: -9.87511920928955
    4. '
' → logprob: -14.25011920928955
    5. '	while' → logprob: -14.87511920928955
    6. 'P' → logprob: -15.00011920928955
    7. '    
' → logprob: -16.000118255615234
    8. 'for' → logprob: -16.750118255615234
    9. '```' → logprob: -16.875118255615234
    10. 'wh' → logprob: -17.375118255615234

Token 708: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0007884251535870135
    2. ' Q' → logprob: -7.62578821182251
    3. 'len' → logprob: -8.125788688659668
    4. '   ' → logprob: -13.375788688659668
    5. ' ' → logprob: -13.500788688659668
    6. ' len' → logprob: -13.750788688659668
    7. '	Q' → logprob: -15.000788688659668
    8. '(Q' → logprob: -15.875788688659668
    9. '  ' → logprob: -16.50078773498535
    10. '(len' → logprob: -17.25078773498535

Token 709: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004883262328803539
    2. ':
' → logprob: -5.379883289337158
    3. '.pop' → logprob: -8.3798828125
    4. '[-' → logprob: -11.7548828125
    5. '):' → logprob: -11.8798828125
    6. ' and' → logprob: -12.2548828125
    7. 'pop' → logprob: -12.3798828125
    8. '):
' → logprob: -12.7548828125
    9. ':
' → logprob: -13.0048828125
    10. '!=' → logprob: -14.1298828125

Token 710: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3043990731239319
    2. ' i' → logprob: -2.679399013519287
    3. 't' → logprob: -3.054399013519287
    4. 'v' → logprob: -3.554399013519287
    5. 'q' → logprob: -3.554399013519287
    6. 'token' → logprob: -3.554399013519287
    7. '       ' → logprob: -4.054399013519287
    8. 'k' → logprob: -4.804399013519287
    9. '   ' → logprob: -4.929399013519287
    10. 'x' → logprob: -4.929399013519287

Token 711: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.08280428498983383
    2. 'a' → logprob: -3.3328042030334473
    3. 'q' → logprob: -4.207804203033447
    4. 'v' → logprob: -4.332804203033447
    5. 'x' → logprob: -5.082804203033447
    6. 't' → logprob: -5.457804203033447
    7. 'u' → logprob: -6.082804203033447
    8. 'j' → logprob: -6.957804203033447
    9. '   ' → logprob: -7.457804203033447
    10. 'c' → logprob: -8.082804679870605

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22542954981327057
    2. ' =' → logprob: -1.6004295349121094
    3. '=i' → logprob: -11.85042953491211
    4. ' ' → logprob: -12.72542953491211
    5. '	' → logprob: -13.10042953491211
    6. '=q' → logprob: -13.22542953491211
    7. '   ' → logprob: -15.10042953491211
    8. '=user' → logprob: -15.22542953491211
    9. '=int' → logprob: -15.47542953491211
    10. ' ' → logprob: -15.47542953491211

Token 713: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -3.547789674485102e-05
    2. ' Q' → logprob: -10.250035285949707
    3. '	Q' → logprob: -17.000036239624023
    4. '   ' → logprob: -17.625036239624023
    5. ' ' → logprob: -19.375036239624023
    6. 'pop' → logprob: -19.750036239624023
    7. '`' → logprob: -20.000036239624023
    8. 'Qs' → logprob: -20.750036239624023
    9. 'QString' → logprob: -21.000036239624023
    10. '    ' → logprob: -21.000036239624023

Token 714: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.250005722045898
    3. 'pop' → logprob: -14.625005722045898
    4. ' .' → logprob: -14.625005722045898
    5. '   ' → logprob: -16.3750057220459
    6. '().' → logprob: -16.6250057220459
    7. '[-' → logprob: -18.3750057220459
    8. '```' → logprob: -18.5000057220459
    9. '.p' → logprob: -19.1250057220459
    10. '.po' → logprob: -19.3750057220459

Token 715: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.463036435074173e-05
    2. '()>' → logprob: -11.750024795532227
    3. '()
' → logprob: -12.000024795532227
    4. '(' → logprob: -12.125024795532227
    5. '()}' → logprob: -14.125024795532227
    6. '()">' → logprob: -14.250024795532227
    7. ' ()' → logprob: -14.500024795532227
    8. '()]' → logprob: -14.500024795532227
    9. '()\' → logprob: -14.875024795532227
    10. '())' → logprob: -14.875024795532227

Token 716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24813978374004364
    2. 'if' → logprob: -1.62313973903656
    3. ' if' → logprob: -3.9981398582458496
    4. '   ' → logprob: -5.62313985824585
    5. '	if' → logprob: -8.998139381408691
    6. '```' → logprob: -9.123139381408691
    7. '        
' → logprob: -9.498139381408691
    8. '<|end|>' → logprob: -9.748139381408691
    9. '	' → logprob: -10.123139381408691
    10. '           ' → logprob: -10.623139381408691

Token 717: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00021438424300868064
    2. '       ' → logprob: -8.500214576721191
    3. 'i' → logprob: -12.125214576721191
    4. ' if' → logprob: -12.250214576721191
    5. '   ' → logprob: -14.875214576721191
    6. '	if' → logprob: -16.000213623046875
    7. '```' → logprob: -16.125213623046875
    8. '           ' → logprob: -16.750213623046875
    9. '
' → logprob: -17.875213623046875
    10. '        
' → logprob: -18.250213623046875

Token 718: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00048656106810085475
    2. ' i' → logprob: -8.500486373901367
    3. '0' → logprob: -9.000486373901367
    4. '~' → logprob: -9.625486373901367
    5. 'not' → logprob: -10.125486373901367
    6. 'should' → logprob: -10.875486373901367
    7. '(i' → logprob: -11.875486373901367
    8. 'type' → logprob: -12.375486373901367
    9. '   ' → logprob: -12.500486373901367
    10. '
' → logprob: -12.500486373901367

Token 719: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.04408157616853714
    2. '<' → logprob: -3.419081687927246
    3. ' >=' → logprob: -4.669081687927246
    4. ' <' → logprob: -7.169081687927246
    5. '>' → logprob: -8.919081687927246
    6. '==' → logprob: -9.669081687927246
    7. '<=' → logprob: -11.419081687927246
    8. '&' → logprob: -12.294081687927246
    9. '[' → logprob: -12.669081687927246
    10. ' ' → logprob: -13.044081687927246

Token 720: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '=' → logprob: -16.500003814697266
    4. '>' → logprob: -17.500003814697266
    5. '```' → logprob: -17.500003814697266
    6. '۰' → logprob: -17.750003814697266
    7. '(' → logprob: -18.375003814697266
    8. 'i' → logprob: -18.750003814697266
    9. '-' → logprob: -19.000003814697266
    10. '`' → logprob: -19.250003814697266

Token 721: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '
' → logprob: -16.750003814697266
    4. '۰' → logprob: -17.000003814697266
    5. '-' → logprob: -17.125003814697266
    6. '=' → logprob: -17.250003814697266
    7. '>' → logprob: -17.750003814697266
    8. 'i' → logprob: -18.000003814697266
    9. '```' → logprob: -18.000003814697266
    10. '(' → logprob: -18.375003814697266

Token 722: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3938838243484497
    2. ':
' → logprob: -1.1438838243484497
    3. '       ' → logprob: -5.14388370513916
    4. '           ' → logprob: -7.64388370513916
    5. '<|end|>' → logprob: -8.76888370513916
    6. ',' → logprob: -8.89388370513916
    7. ' and' → logprob: -9.26888370513916
    8. '):
' → logprob: -9.51888370513916
    9. '():
' → logprob: -9.76888370513916
    10. '[' → logprob: -10.39388370513916

Token 723: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4386674761772156
    2. '       ' → logprob: -1.4386675357818604
    3. 'visit' → logprob: -2.3136675357818604
    4. ' visit' → logprob: -4.813667297363281
    5. 'i' → logprob: -4.938667297363281
    6. ' i' → logprob: -6.688667297363281
    7. 'continue' → logprob: -6.938667297363281
    8. ' continue' → logprob: -8.313667297363281
    9. '```' → logprob: -8.563667297363281
    10. '#' → logprob: -8.688667297363281

Token 724: ' visit' (ID: 4030)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' (adapté à ' visit') → logprob: -0.002151569351553917
    2. 'i' → logprob: -6.3771514892578125
    3. '   ' → logprob: -8.002151489257812
    4. ' visit' → logprob: -10.127151489257812
    5. '       ' → logprob: -10.502151489257812
    6. 'visited' → logprob: -11.627151489257812
    7. 'continue' → logprob: -11.877151489257812
    8. 'if' → logprob: -12.252151489257812
    9. '
' → logprob: -12.502151489257812
    10. 'a' → logprob: -13.002151489257812

Token 725: '_second' (ID: 67724)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0006513170665130019
    2. 'first' → logprob: -7.5006513595581055
    3. '_second' → logprob: -9.250651359558105
    4. 'abs' → logprob: -14.500651359558105
    5. '_abs' → logprob: -15.000651359558105
    6. '_' → logprob: -15.000651359558105
    7. 'First' → logprob: -15.000651359558105
    8. '_FIRST' → logprob: -16.25065040588379
    9. '_last' → logprob: -16.37565040588379
    10. '_f' → logprob: -16.75065040588379

Token 726: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.10029292851686478
    2. 'time' → logprob: -2.350292921066284
    3. '_times' → logprob: -10.600293159484863
    4. 'int' → logprob: -11.225293159484863
    5. '_token' → logprob: -11.475293159484863
    6. 'ime' → logprob: -11.850293159484863
    7. 'times' → logprob: -11.850293159484863
    8. 'token' → logprob: -12.225293159484863
    9. '-time' → logprob: -12.600293159484863
    10. 'i' → logprob: -13.100293159484863

Token 727: '(~' (ID: 114991)
  Prédit: '(~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(~' → logprob: -0.0001146291324403137
    2. '(' → logprob: -9.875114440917969
    3. '(-' → logprob: -10.375114440917969
    4. '~' → logprob: -11.125114440917969
    5. '(i' → logprob: -12.000114440917969
    6. '((' → logprob: -12.250114440917969
    7. '(
' → logprob: -13.125114440917969
    8. ' (~' → logprob: -13.375114440917969
    9. '(+' → logprob: -13.375114440917969
    10. '
' → logprob: -14.875114440917969

Token 728: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.292907877039397e-06
    2. ' i' → logprob: -12.75000286102295
    3. ')i' → logprob: -16.250003814697266
    4. '
' → logprob: -16.750003814697266
    5. '<|end|>' → logprob: -17.250003814697266
    6. '	i' → logprob: -17.375003814697266
    7. '(i' → logprob: -17.875003814697266
    8. ',i' → logprob: -18.125003814697266
    9. ')' → logprob: -18.250003814697266
    10. '_i' → logprob: -18.250003814697266

Token 729: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005825805710628629
    2. ' ,' → logprob: -7.500582695007324
    3. '(' → logprob: -10.750582695007324
    4. '(),' → logprob: -12.750582695007324
    5. '   ' → logprob: -14.000582695007324
    6. '       ' → logprob: -14.250582695007324
    7. ')' → logprob: -14.375582695007324
    8. '           ' → logprob: -14.500582695007324
    9. ',
' → logprob: -14.500582695007324
    10. '(i' → logprob: -14.625582695007324

Token 730: ' ET' (ID: 23345)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.008615399710834026
    2. ' ET' → logprob: -4.758615493774414
    3. '_ET' → logprob: -14.508615493774414
    4. '   ' → logprob: -15.633615493774414
    5. ' ' → logprob: -16.258615493774414
    6. 'ETA' → logprob: -16.883615493774414
    7. 'E' → logprob: -17.258615493774414
    8. 'OT' → logprob: -18.133615493774414
    9. '	' → logprob: -18.258615493774414
    10. '  ' → logprob: -18.258615493774414

Token 731: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14273333549499512
    2. '1' → logprob: -2.017733335494995
    3. ')' → logprob: -10.642733573913574
    4. '```' → logprob: -11.830233573913574
    5. ',' → logprob: -11.892733573913574
    6. '<|end|>' → logprob: -13.517733573913574
    7. ']' → logprob: -13.580233573913574
    8. '[' → logprob: -13.642733573913574
    9. '' → logprob: -14.017733573913574
    10. '₂' → logprob: -14.080233573913574

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.727905979962088e-05
    2. ' ,' → logprob: -10.87504768371582
    3. ')' → logprob: -11.87504768371582
    4. ',Q' → logprob: -11.87504768371582
    5. '<|end|>' → logprob: -12.12504768371582
    6. ',T' → logprob: -13.25004768371582
    7. ',...' → logprob: -13.75004768371582
    8. ',
' → logprob: -14.00004768371582
    9. '...' → logprob: -14.37504768371582
    10. '[' → logprob: -14.37504768371582

Token 733: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -4.842555426876061e-06
    2. ' ct' → logprob: -12.250004768371582
    3. '	ct' → logprob: -18.6250057220459
    4. '(ct' → logprob: -22.0000057220459
    5. '   ' → logprob: -22.0000057220459
    6. 'cts' → logprob: -23.6250057220459
    7. 'ctp' → logprob: -23.6250057220459
    8. '_ct' → logprob: -23.6250057220459
    9. '.ct' → logprob: -24.1250057220459
    10. 'cnt' → logprob: -25.0000057220459

Token 734: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ' ,' → logprob: -11.375015258789062
    3. ')' → logprob: -13.125015258789062
    4. ',T' → logprob: -14.625015258789062
    5. 'T' → logprob: -15.750015258789062
    6. ',
' → logprob: -15.875015258789062
    7. ',U' → logprob: -15.875015258789062
    8. '   ' → logprob: -16.250015258789062
    9. 'used' → logprob: -16.625015258789062
    10. '[' → logprob: -16.625015258789062

Token 735: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.00043221889063715935
    2. ' USED' → logprob: -7.750432014465332
    3. '_USED' → logprob: -13.500432014465332
    4. 'USE' → logprob: -16.37543296813965
    5. 'Used' → logprob: -18.37543296813965
    6. 'US' → logprob: -19.00043296813965
    7. 'used' → logprob: -19.00043296813965
    8. ' ' → logprob: -19.87543296813965
    9. '   ' → logprob: -20.12543296813965
    10. 'USES' → logprob: -20.25043296813965

Token 736: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ',T' → logprob: -12.125006675720215
    3. ' ,' → logprob: -13.875006675720215
    4. ',
' → logprob: -16.0000057220459
    5. 'T' → logprob: -17.6250057220459
    6. ',

' → logprob: -18.6250057220459
    7. 's' → logprob: -19.1250057220459
    8. ',\
' → logprob: -19.5000057220459
    9. '‌,' → logprob: -19.6250057220459
    10. ')' → logprob: -20.0000057220459

Token 737: ' TMP' (ID: 121022)
  Prédit: 'TMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TMP' → logprob: -2.868328920158092e-05
    2. ' TMP' → logprob: -10.500028610229492
    3. '_TMP' → logprob: -14.750028610229492
    4. 'T' → logprob: -14.875028610229492
    5. 'TM' → logprob: -15.000028610229492
    6. 'tmp' → logprob: -18.750028610229492
    7. '   ' → logprob: -19.250028610229492
    8. '
' → logprob: -19.625028610229492
    9. 'TEMP' → logprob: -20.125028610229492
    10. 'Tmp' → logprob: -20.250028610229492

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009012157097458839
    2. ',C' → logprob: -7.375901222229004
    3. 'C' → logprob: -8.625901222229004
    4. ' ,' → logprob: -9.375901222229004
    5. ' C' → logprob: -12.250901222229004
    6. ',
' → logprob: -12.625901222229004
    7. ')' → logprob: -14.500901222229004
    8. ',
' → logprob: -15.438401222229004
    9. '   ' → logprob: -15.938401222229004
    10. 's' → logprob: -16.125900268554688

Token 739: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0006407116306945682
    2. ' C' → logprob: -7.375640869140625
    3. '<|end|>' → logprob: -12.000640869140625
    4. ')' → logprob: -12.125640869140625
    5. ' ' → logprob: -14.500640869140625
    6. ',' → logprob: -14.625640869140625
    7. '   ' → logprob: -15.000640869140625
    8. '...' → logprob: -15.625640869140625
    9. '>C' → logprob: -15.750640869140625
    10. '[' → logprob: -15.750640869140625

Token 740: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011154505191370845
    2. ',P' → logprob: -6.876115322113037
    3. 'P' → logprob: -9.501115798950195
    4. ' ,' → logprob: -12.376115798950195
    5. '[P' → logprob: -13.626115798950195
    6. '[' → logprob: -13.876115798950195
    7. ',
' → logprob: -15.126115798950195
    8. 's' → logprob: -15.688615798950195
    9. ')' → logprob: -15.938615798950195
    10. 'i' → logprob: -16.251115798950195

Token 741: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00015920029545668513
    2. ' P' → logprob: -8.75015926361084
    3. ',' → logprob: -15.12515926361084
    4. ',P' → logprob: -16.125158309936523
    5. '
' → logprob: -16.500158309936523
    6. ')' → logprob: -16.875158309936523
    7. '	P' → logprob: -17.375158309936523
    8. '   ' → logprob: -17.500158309936523
    9. ' ' → logprob: -17.750158309936523
    10. '\
' → logprob: -18.500158309936523

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ' ,' → logprob: -12.250006675720215
    3. ')' → logprob: -13.250006675720215
    4. '   ' → logprob: -15.000006675720215
    5. '           ' → logprob: -16.62500762939453
    6. '       ' → logprob: -17.50000762939453
    7. ',
' → logprob: -17.75000762939453
    8. '‌,' → logprob: -18.00000762939453
    9. '```' → logprob: -18.12500762939453
    10. 'ANS' → logprob: -18.12500762939453

Token 743: ' OR' (ID: 4917)
  Prédit: 'ORG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ORG' → logprob: -1.282920129597187e-05
    2. ' O' → logprob: -12.875012397766113
    3. 'OG' → logprob: -12.875012397766113
    4. ' OR' → logprob: -13.250012397766113
    5. 'ORD' → logprob: -13.500012397766113
    6. 'OR' → logprob: -13.875012397766113
    7. 'ORN' → logprob: -14.250012397766113
    8. 'O' → logprob: -14.250012397766113
    9. 'org' → logprob: -14.375012397766113
    10. 'OGR' → logprob: -14.625012397766113

Token 744: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -7.111979357432574e-05
    2. '1' → logprob: -9.62507152557373
    3. 'GIN' → logprob: -14.00007152557373
    4. 'i' → logprob: -14.62507152557373
    5. '[i' → logprob: -14.93757152557373
    6. ')' → logprob: -15.00007152557373
    7. ' G' → logprob: -15.06257152557373
    8. 'GAN' → logprob: -15.18757152557373
    9. '`' → logprob: -15.43757152557373
    10. '```' → logprob: -15.81257152557373

Token 745: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.895480277715251e-06
    2. ' ,' → logprob: -12.000008583068848
    3. ')' → logprob: -13.375008583068848
    4. 'ANS' → logprob: -15.750008583068848
    5. '[' → logprob: -16.000009536743164
    6. '   ' → logprob: -16.375009536743164
    7. ',
' → logprob: -16.500009536743164
    8. '‌,' → logprob: -16.562509536743164
    9. '),' → logprob: -16.937509536743164
    10. 'i' → logprob: -17.000009536743164

Token 746: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.00016039233014453202
    2. ' AN' → logprob: -8.750160217285156
    3. 'ANSWER' → logprob: -13.250160217285156
    4. 'AN' → logprob: -17.125160217285156
    5. 'ANTS' → logprob: -17.500160217285156
    6. '   ' → logprob: -18.000160217285156
    7. 'ANTLR' → logprob: -18.250160217285156
    8. '
' → logprob: -18.375160217285156
    9. ' ' → logprob: -18.750160217285156
    10. 'ANE' → logprob: -19.000160217285156

Token 747: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -7.465036105713807e-06
    2. ' S' → logprob: -13.750007629394531
    3. 'Ѕ' → logprob: -14.125007629394531
    4. 'Svar' → logprob: -14.312507629394531
    5. 'Sor' → logprob: -14.500007629394531
    6. 'Sz' → logprob: -14.937507629394531
    7. '[' → logprob: -15.312507629394531
    8. 'Sf' → logprob: -15.437507629394531
    9. '[S' → logprob: -15.500007629394531
    10. '	S' → logprob: -15.625007629394531

Token 748: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ',f' → logprob: -11.000027656555176
    3. 'f' → logprob: -12.125027656555176
    4. ' ,' → logprob: -12.375027656555176
    5. ')' → logprob: -14.000027656555176
    6. '   ' → logprob: -16.25002670288086
    7. ' f' → logprob: -16.62502670288086
    8. ',
' → logprob: -16.75002670288086
    9. 's' → logprob: -16.75002670288086
    10. '```' → logprob: -18.12502670288086

Token 749: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07889264822006226
    2. ' f' → logprob: -2.578892707824707
    3. ')' → logprob: -12.953892707824707
    4. '	f' → logprob: -15.578892707824707
    5. ' ' → logprob: -15.703892707824707
    6. '
' → logprob: -17.32889175415039
    7. '    ' → logprob: -17.95389175415039
    8. '  ' → logprob: -18.32889175415039
    9. ' ' → logprob: -18.32889175415039
    10. ' 
' → logprob: -18.57889175415039

Token 750: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023321842309087515
    2. ')
' → logprob: -8.37523365020752
    3. '   ' → logprob: -13.25023365020752
    4. ' )' → logprob: -14.62523365020752
    5. ')
' → logprob: -16.125232696533203
    6. ')`' → logprob: -16.500232696533203
    7. ')

' → logprob: -16.750232696533203
    8. '       ' → logprob: -17.125232696533203
    9. ')`
' → logprob: -17.750232696533203
    10. '),' → logprob: -17.875232696533203

Token 751: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3842673897743225
    2. '       ' → logprob: -1.8842673301696777
    3. ' else' → logprob: -1.8842673301696777
    4. '	else' → logprob: -5.259267330169678
    5. '<|end|>' → logprob: -5.759267330169678
    6. '   ' → logprob: -5.884267330169678
    7. '```' → logprob: -6.134267330169678
    8. ')' → logprob: -7.134267330169678
    9. '           ' → logprob: -8.384267807006836
    10. '	' → logprob: -9.009267807006836

Token 752: ' continue' (ID: 4901)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0721491128206253
    2. '       ' → logprob: -2.6971490383148193
    3. 'continue' (adapté à ' continue') → logprob: -6.322149276733398
    4. ' else' → logprob: -8.322149276733398
    5. '   ' → logprob: -9.072149276733398
    6. '           ' → logprob: -10.447149276733398
    7. 'elif' → logprob: -11.322149276733398
    8. '
' → logprob: -12.322149276733398
    9. '```' → logprob: -12.447149276733398
    10. ' continue' → logprob: -13.072149276733398

Token 753: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7449600696563721
    2. '   ' → logprob: -1.244960069656372
    3. 'visit' → logprob: -1.869960069656372
    4. ' visit' → logprob: -3.494960069656372
    5. 'if' → logprob: -3.869960069656372
    6. '
' → logprob: -4.494959831237793
    7. ' if' → logprob: -5.369959831237793
    8. 'else' → logprob: -5.494959831237793
    9. '```' → logprob: -5.619959831237793
    10. '    
' → logprob: -5.994959831237793

Token 754: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5918805599212646
    2. '   ' → logprob: -1.5918805599212646
    3. 'process' → logprob: -1.9668805599212646
    4. '       ' → logprob: -3.3418805599212646
    5. 'visit' → logprob: -3.3418805599212646
    6. ' if' → logprob: -4.341880798339844
    7. ' process' → logprob: -5.466880798339844
    8. '
' → logprob: -5.466880798339844
    9. 'else' → logprob: -5.466880798339844
    10. '```' → logprob: -6.091880798339844

Token 755: ' if' (ID: 538)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.20879293978214264
    2. 'if' (adapté à ' if') → logprob: -1.7087929248809814
    3. '   ' → logprob: -6.2087931632995605
    4. 'ET' → logprob: -6.4587931632995605
    5. ' visit' → logprob: -6.5837931632995605
    6. 'P' → logprob: -7.5837931632995605
    7. 'ORG' → logprob: -7.9587931632995605
    8. ' if' → logprob: -8.083792686462402
    9. 'process' → logprob: -8.458792686462402
    10. 'CT' → logprob: -8.458792686462402

Token 756: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18333034217357635
    2. 'should' → logprob: -2.5583302974700928
    3. 'P' → logprob: -2.9333302974700928
    4. 'not' → logprob: -4.183330535888672
    5. 'visit' → logprob: -4.808330535888672
    6. ' i' → logprob: -5.558330535888672
    7. 'ET' → logprob: -6.183330535888672
    8. 'C' → logprob: -6.558330535888672
    9. 'used' → logprob: -6.933330535888672
    10. ' not' → logprob: -6.933330535888672

Token 757: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16544440388679504
    2. ' ==' → logprob: -2.2904443740844727
    3. ':' → logprob: -4.290444374084473
    4. ' not' → logprob: -4.290444374084473
    5. '!=' → logprob: -4.290444374084473
    6. 'not' → logprob: -6.040444374084473
    7. ' !=' → logprob: -6.040444374084473
    8. 'and' → logprob: -6.040444374084473
    9. ' and' → logprob: -6.790444374084473
    10. '>=' → logprob: -7.290444374084473

Token 758: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08558465540409088
    2. 'n' → logprob: -2.7105846405029297
    3. 'len' → logprob: -4.83558464050293
    4. '1' → logprob: -5.08558464050293
    5. ' ' → logprob: -6.96058464050293
    6. 'i' → logprob: -9.08558464050293
    7. ' n' → logprob: -9.21058464050293
    8. '2' → logprob: -9.83558464050293
    9. 'N' → logprob: -10.21058464050293
    10. 'ct' → logprob: -10.58558464050293

Token 759: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36816680431365967
    2. 'n' → logprob: -1.2431668043136597
    3. 'len' → logprob: -3.993166923522949
    4. '1' → logprob: -7.243166923522949
    5. ' ' → logprob: -9.11816692352295
    6. 'N' → logprob: -9.11816692352295
    7. ' n' → logprob: -10.11816692352295
    8. '2' → logprob: -10.36816692352295
    9. 'i' → logprob: -11.24316692352295
    10. 'sys' → logprob: -11.55566692352295

Token 760: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6656097173690796
    2. 'and' → logprob: -1.2906097173690796
    3. ' and' → logprob: -1.9156097173690796
    4. ':' → logprob: -2.790609836578369
    5. '       ' → logprob: -6.540609836578369
    6. '   ' → logprob: -7.415609836578369
    7. ':

' → logprob: -8.915609359741211
    8. '           ' → logprob: -10.290609359741211
    9. ' ' → logprob: -11.290609359741211
    10. ',' → logprob: -11.290609359741211

Token 761: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7930102348327637
    2. 'visit' → logprob: -1.2930102348327637
    3. 'P' → logprob: -1.9180102348327637
    4. ' P' → logprob: -3.4180102348327637
    5. ' visit' → logprob: -3.5430102348327637
    6. 'if' → logprob: -3.7930102348327637
    7. '   ' → logprob: -3.9180102348327637
    8. ' if' → logprob: -4.668010234832764
    9. '           ' → logprob: -5.043010234832764
    10. 'remove' → logprob: -6.293010234832764

Token 762: ' visit' (ID: 4030)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' (adapté à ' visit') → logprob: -0.0023662515450268984
    2. 'if' → logprob: -6.627366065979004
    3. ' visit' → logprob: -7.752366065979004
    4. '   ' → logprob: -7.877366065979004
    5. 'P' → logprob: -9.627366065979004
    6. '
' → logprob: -9.877366065979004
    7. 'remove' → logprob: -10.002366065979004
    8. 'process' → logprob: -10.502366065979004
    9. '       ' → logprob: -11.127366065979004
    10. 'visited' → logprob: -11.752366065979004

Token 763: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.008620604872703552
    2. 'first' → logprob: -4.758620738983154
    3. 'i' → logprob: -12.633620262145996
    4. 'First' → logprob: -13.883620262145996
    5. '(i' → logprob: -14.258620262145996
    6. '
' → logprob: -14.633620262145996
    7. '_second' → logprob: -14.758620262145996
    8. '```' → logprob: -15.633620262145996
    9. ' first' → logprob: -16.758621215820312
    10. '_' → logprob: -17.133621215820312

Token 764: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.1689596148207784e-05
    2. '(i' → logprob: -11.000051498413086
    3. '_times' → logprob: -11.250051498413086
    4. '_' → logprob: -11.500051498413086
    5. '_token' → logprob: -12.625051498413086
    6. 'time' → logprob: -12.875051498413086
    7. '(' → logprob: -13.250051498413086
    8. '()' → logprob: -13.875051498413086
    9. '(_' → logprob: -14.000051498413086
    10. '```' → logprob: -14.375051498413086

Token 765: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0015142656629905105
    2. '(' → logprob: -6.501514434814453
    3. '(
' → logprob: -11.376514434814453
    4. ' (' → logprob: -15.251514434814453
    5. '(I' → logprob: -16.001514434814453
    6. '(int' → logprob: -17.126514434814453
    7. '(index' → logprob: -17.626514434814453
    8. '<|end|>' → logprob: -17.626514434814453
    9. '(ind' → logprob: -17.751514434814453
    10. '(

' → logprob: -18.001514434814453

Token 766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.431207682704553e-05
    2. ' ,' → logprob: -9.875054359436035
    3. ',
' → logprob: -13.500054359436035
    4. ')' → logprob: -14.250054359436035
    5. '(' → logprob: -14.750054359436035
    6. '‌,' → logprob: -16.37505340576172
    7. '   ' → logprob: -16.87505340576172
    8. ',

' → logprob: -17.00005340576172
    9. '(),' → logprob: -17.12505340576172
    10. '           ' → logprob: -17.12505340576172

Token 767: ' ET' (ID: 23345)
  Prédit: 'ET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ET' → logprob: -0.00033546582562848926
    2. ' ET' → logprob: -8.000335693359375
    3. '_ET' → logprob: -18.250335693359375
    4. 'CT' → logprob: -18.625335693359375
    5. 'et' → logprob: -19.875335693359375
    6. '   ' → logprob: -20.000335693359375
    7. 'EM' → logprob: -21.375335693359375
    8. 'ED' → logprob: -21.500335693359375
    9. ' ' → logprob: -21.500335693359375
    10. 'Et' → logprob: -22.000335693359375

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'ET' → logprob: -16.5
    3. '```' → logprob: -17.375
    4. '' → logprob: -19.0625
    5. '_' → logprob: -19.125
    6. '１' → logprob: -19.25
    7. '[' → logprob: -19.375
    8. '...' → logprob: -19.9375
    9. '
' → logprob: -19.9375
    10. '_ET' → logprob: -20.125

Token 769: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.644463479053229e-05
    2. ' ,' → logprob: -10.250046730041504
    3. ',
' → logprob: -12.250046730041504
    4. '<|end|>' → logprob: -13.125046730041504
    5. ')' → logprob: -13.625046730041504
    6. '‌,' → logprob: -13.625046730041504
    7. '[' → logprob: -15.125046730041504
    8. ',

' → logprob: -15.375046730041504
    9. ',)' → logprob: -15.625046730041504
    10. ',C' → logprob: -15.750046730041504

Token 770: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.00015860427811276168
    2. ' ct' → logprob: -8.750158309936523
    3. '	ct' → logprob: -15.875158309936523
    4. '(ct' → logprob: -18.875158309936523
    5. '_ct' → logprob: -19.500158309936523
    6. 'cts' → logprob: -20.250158309936523
    7. 'ctp' → logprob: -20.375158309936523
    8. '.ct' → logprob: -21.000158309936523
    9. 'cc' → logprob: -21.750158309936523
    10. 'CT' → logprob: -22.250158309936523

Token 771: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. ' ,' → logprob: -11.000018119812012
    3. ',U' → logprob: -13.875018119812012
    4. ',C' → logprob: -15.875018119812012
    5. ')' → logprob: -16.125019073486328
    6. ',
' → logprob: -16.500019073486328
    7. '‌,' → logprob: -16.500019073486328
    8. ',T' → logprob: -17.625019073486328
    9. '<|end|>' → logprob: -17.625019073486328
    10. ',None' → logprob: -17.750019073486328

Token 772: ' OR' (ID: 4917)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.12745516002178192
    2. 'ORG' → logprob: -2.377455234527588
    3. ' USED' → logprob: -3.627455234527588
    4. '   ' → logprob: -9.12745475769043
    5. ' ' → logprob: -9.37745475769043
    6. 'USR' → logprob: -10.62745475769043
    7. '  ' → logprob: -10.62745475769043
    8. '_USED' → logprob: -10.87745475769043
    9. 'USE' → logprob: -11.50245475769043
    10. 'ORD' → logprob: -12.00245475769043

Token 773: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0004474732850212604
    2. '1' → logprob: -8.375447273254395
    3. 'i' → logprob: -9.250447273254395
    4. '[i' → logprob: -10.250447273254395
    5. 'C' → logprob: -11.000447273254395
    6. '(i' → logprob: -12.187947273254395
    7. '       ' → logprob: -12.437947273254395
    8. '   ' → logprob: -12.500447273254395
    9. ',' → logprob: -12.625447273254395
    10. '[G' → logprob: -12.625447273254395

Token 774: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4153549020411447e-05
    2. ' ,' → logprob: -10.87502384185791
    3. ',U' → logprob: -12.25002384185791
    4. ',
' → logprob: -15.62502384185791
    5. '[' → logprob: -16.375024795532227
    6. '   ' → logprob: -16.750024795532227
    7. ')' → logprob: -17.250024795532227
    8. ',\
' → logprob: -17.500024795532227
    9. '<|end|>' → logprob: -17.875024795532227
    10. '```' → logprob: -18.250024795532227

Token 775: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.0003377270477358252
    2. ' USED' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.625337600708008
    4. '_USED' → logprob: -14.625337600708008
    5. 'USE' → logprob: -15.375337600708008
    6. ' ' → logprob: -15.625337600708008
    7. 'US' → logprob: -16.125337600708008
    8. '  ' → logprob: -16.375337600708008
    9. 'used' → logprob: -17.375337600708008
    10. 'Used' → logprob: -17.375337600708008

Token 776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ' ,' → logprob: -11.750012397766113
    3. ',C' → logprob: -12.500012397766113
    4. ',P' → logprob: -15.750012397766113
    5. ',
' → logprob: -16.125011444091797
    6. ')' → logprob: -16.750011444091797
    7. 'C' → logprob: -17.250011444091797
    8. '   ' → logprob: -17.375011444091797
    9. '‌,' → logprob: -18.375011444091797
    10. ' ' → logprob: -18.875011444091797

Token 777: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005841302336193621
    2. ' C' → logprob: -7.500584125518799
    3. '   ' → logprob: -11.000584602355957
    4. 'P' → logprob: -12.000584602355957
    5. '
' → logprob: -13.375584602355957
    6. ' ' → logprob: -13.500584602355957
    7. '  ' → logprob: -14.125584602355957
    8. 'i' → logprob: -14.500584602355957
    9. '       ' → logprob: -14.625584602355957
    10. ')' → logprob: -14.625584602355957

Token 778: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005172899691388011
    2. ',P' → logprob: -7.62551736831665
    3. ' ,' → logprob: -10.500516891479492
    4. 'P' → logprob: -14.000516891479492
    5. ',
' → logprob: -14.875516891479492
    6. ')' → logprob: -16.000516891479492
    7. '
' → logprob: -16.375516891479492
    8. '   ' → logprob: -16.750516891479492
    9. ',p' → logprob: -17.000516891479492
    10. '),' → logprob: -17.375516891479492

Token 779: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00038419815246015787
    2. ' P' → logprob: -7.875384330749512
    3. '   ' → logprob: -13.750384330749512
    4. ',' → logprob: -14.000384330749512
    5. ')' → logprob: -14.375384330749512
    6. ' ' → logprob: -14.875384330749512
    7. '
' → logprob: -15.125384330749512
    8. '  ' → logprob: -15.500384330749512
    9. ',P' → logprob: -15.500384330749512
    10. '	P' → logprob: -16.000383377075195

Token 780: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008699547499418259
    2. ')' → logprob: -4.758699417114258
    3. ')
' → logprob: -9.508699417114258
    4. '   ' → logprob: -12.133699417114258
    5. ')

' → logprob: -12.633699417114258
    6. ' )
' → logprob: -13.633699417114258
    7. ',' → logprob: -14.883699417114258
    8. '
' → logprob: -15.133699417114258
    9. '       ' → logprob: -16.883699417114258
    10. ',)
' → logprob: -17.008699417114258

Token 781: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08087247610092163
    2. 'process' → logprob: -3.0808725357055664
    3. '       ' → logprob: -3.7058725357055664
    4. '
' → logprob: -5.705872535705566
    5. '   ' → logprob: -5.830872535705566
    6. ' process' → logprob: -7.330872535705566
    7. '```' → logprob: -8.455872535705566
    8. '	process' → logprob: -11.080872535705566
    9. '            
' → logprob: -11.705872535705566
    10. '               ' → logprob: -12.455872535705566

Token 782: ' process' (ID: 2273)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2598237693309784
    2. 'process' (adapté à ' process') → logprob: -1.5098237991333008
    3. ' process' → logprob: -5.259823799133301
    4. '   ' → logprob: -6.634823799133301
    5. 'if' → logprob: -6.884823799133301
    6. '           ' → logprob: -9.0098237991333
    7. ' if' → logprob: -9.5098237991333
    8. '
' → logprob: -10.0098237991333
    9. '	process' → logprob: -10.3848237991333
    10. '```' → logprob: -11.1348237991333

Token 783: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.00011725161311915144
    2. '_' → logprob: -9.250117301940918
    3. 'Child' → logprob: -11.125117301940918
    4. '```' → logprob: -13.000117301940918
    5. 'child' → logprob: -13.500117301940918
    6. '_children' → logprob: -13.500117301940918
    7. '_CHILD' → logprob: -14.000117301940918
    8. '(child' → logprob: -16.8751163482666
    9. '
' → logprob: -16.8751163482666
    10. '`' → logprob: -17.0001163482666

Token 784: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -4.167648876318708e-05
    2. '(' → logprob: -10.125041961669922
    3. '(
' → logprob: -13.500041961669922
    4. '(x' → logprob: -17.625041961669922
    5. '(A' → logprob: -18.375041961669922
    6. '```' → logprob: -18.375041961669922
    7. '(Y' → logprob: -18.625041961669922
    8. '
' → logprob: -18.750041961669922
    9. '(Q' → logprob: -18.875041961669922
    10. '(N' → logprob: -19.000041961669922

Token 785: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.869017852295656e-06
    2. ',X' → logprob: -12.125006675720215
    3. ' ,' → logprob: -14.000006675720215
    4. ',
' → logprob: -14.625006675720215
    5. '
' → logprob: -17.62500762939453
    6. ',i' → logprob: -17.87500762939453
    7. '```' → logprob: -18.12500762939453
    8. '(X' → logprob: -18.50000762939453
    9. ',Q' → logprob: -18.62500762939453
    10. ')' → logprob: -18.62500762939453

Token 786: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014167149551212788
    2. ' i' → logprob: -4.264167308807373
    3. ' ' → logprob: -13.764166831970215
    4. '   ' → logprob: -14.014166831970215
    5. '	i' → logprob: -14.764166831970215
    6. ')' → logprob: -14.764166831970215
    7. '  ' → logprob: -15.514166831970215
    8. '
' → logprob: -15.889166831970215
    9. 'X' → logprob: -16.01416778564453
    10. ')i' → logprob: -16.01416778564453

Token 787: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000253591249929741
    2. ',P' → logprob: -9.125253677368164
    3. ' ,' → logprob: -9.250253677368164
    4. ',Q' → logprob: -10.000253677368164
    5. 'P' → logprob: -13.250253677368164
    6. 'Q' → logprob: -14.250253677368164
    7. '```' → logprob: -15.750253677368164
    8. ',
' → logprob: -16.125253677368164
    9. ',X' → logprob: -16.375253677368164
    10. ')' → logprob: -16.500253677368164

Token 788: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0010342379100620747
    2. ' P' → logprob: -6.876034259796143
    3. '
' → logprob: -14.126033782958984
    4. ' ' → logprob: -15.001033782958984
    5. '   ' → logprob: -15.626033782958984
    6. '	P' → logprob: -16.501033782958984
    7. '  ' → logprob: -16.876033782958984
    8. 'p' → logprob: -17.376033782958984
    9. '```' → logprob: -17.501033782958984
    10. ',' → logprob: -17.626033782958984

Token 789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010803976096212864
    2. ',Q' → logprob: -4.635804176330566
    3. 'Q' → logprob: -6.885804176330566
    4. ' ,' → logprob: -10.635804176330566
    5. ' Q' → logprob: -14.635804176330566
    6. '```' → logprob: -15.260804176330566
    7. ',
' → logprob: -15.885804176330566
    8. ')' → logprob: -16.01080322265625
    9. '[' → logprob: -16.26080322265625
    10. ' ' → logprob: -17.01080322265625

Token 790: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0009120595059357584
    2. ' Q' → logprob: -7.000912189483643
    3. '	Q' → logprob: -15.125911712646484
    4. '   ' → logprob: -15.625911712646484
    5. ')' → logprob: -16.000911712646484
    6. ' ' → logprob: -17.125911712646484
    7. '       ' → logprob: -17.625911712646484
    8. ',Q' → logprob: -18.125911712646484
    9. '  ' → logprob: -18.625911712646484
    10. '
' → logprob: -18.625911712646484

Token 791: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.019237768370658e-05
    2. ')
' → logprob: -9.500090599060059
    3. '   ' → logprob: -11.375090599060059
    4. ' )' → logprob: -13.500090599060059
    5. '<|end|>' → logprob: -13.875090599060059
    6. ')return' → logprob: -14.875090599060059
    7. '       ' → logprob: -15.500090599060059
    8. '())' → logprob: -15.875090599060059
    9. ')

' → logprob: -15.875090599060059
    10. ')
' → logprob: -16.125089645385742

Token 792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06538105756044388
    2. '<|end|>' → logprob: -3.0653810501098633
    3. 'return' → logprob: -4.315381050109863
    4. ' return' → logprob: -6.190381050109863
    5. ')' → logprob: -8.190381050109863
    6. '```' → logprob: -8.315381050109863
    7. 'def' → logprob: -8.440381050109863
    8. '<|end|>' → logprob: -9.815381050109863
    9. '	return' → logprob: -9.940381050109863
    10. '[]' → logprob: -9.940381050109863

Token 793: ' finalize' (ID: 97196)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27144762873649597
    2. 'return' → logprob: -1.6464476585388184
    3. ' return' → logprob: -3.5214476585388184
    4. '<|end|>' → logprob: -4.521447658538818
    5. '	return' → logprob: -6.146447658538818
    6. ')' → logprob: -6.521447658538818
    7. '#' → logprob: -8.52144718170166
    8. 'def' → logprob: -9.02144718170166
    9. ' ' → logprob: -9.02144718170166
    10. '```' → logprob: -9.52144718170166

Token 794: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_AN' → logprob: -16.75
    3. '‌' → logprob: -18.25
    4. '```' → logprob: -18.25
    5. '_
' → logprob: -18.5
    6. '(' → logprob: -19.5
    7. '
' → logprob: -19.625
    8. '\' → logprob: -19.75
    9. ' _' → logprob: -20.5
    10. '__' → logprob: -20.75

Token 795: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -3.128163257315464e-07
    2. 'ANSWER' → logprob: -16.5
    3. '_' → logprob: -16.625
    4. 'A' → logprob: -16.875
    5. 'AN' → logprob: -17.0
    6. 'Ans' → logprob: -18.375
    7. '`' → logprob: -18.75
    8. '
' → logprob: -19.0
    9. '_ans' → logprob: -19.125
    10. '```' → logprob: -19.375

Token 796: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006794307846575975
    2. '(' → logprob: -7.3756794929504395
    3. '(N' → logprob: -10.375679016113281
    4. ' (' → logprob: -11.000679016113281
    5. '(len' → logprob: -13.250679016113281
    6. '_' → logprob: -13.500679016113281
    7. '```' → logprob: -14.750679016113281
    8. '_(' → logprob: -14.875679016113281
    9. '(None' → logprob: -15.375679016113281
    10. '\(' → logprob: -15.875679016113281

Token 797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018439209088683128
    2. '(n' → logprob: -6.3768439292907715
    3. '(' → logprob: -9.001843452453613
    4. ',n' → logprob: -11.626843452453613
    5. '(C' → logprob: -12.501843452453613
    6. ' ,' → logprob: -12.751843452453613
    7. ',C' → logprob: -13.751843452453613
    8. ')' → logprob: -14.876843452453613
    9. '
' → logprob: -15.001843452453613
    10. '(len' → logprob: -15.251843452453613

Token 798: ' AN' (ID: 3473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015559505671262741
    2. ' n' → logprob: -5.015559673309326
    3. 'ANS' → logprob: -5.265559673309326
    4. 'C' → logprob: -5.765559673309326
    5. 'AN' → logprob: -8.390559196472168
    6. ' C' → logprob: -9.390559196472168
    7. 'N' → logprob: -10.140559196472168
    8. '   ' → logprob: -10.515559196472168
    9. 'len' → logprob: -10.640559196472168
    10. ' AN' → logprob: -11.140559196472168

Token 799: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.45848218582978e-06
    2. 'SOR' → logprob: -14.75000286102295
    3. '(S' → logprob: -15.25000286102295
    4. ' S' → logprob: -15.50000286102295
    5. 'Sor' → logprob: -16.375001907348633
    6. 's' → logprob: -16.375001907348633
    7. 'SX' → logprob: -16.500001907348633
    8. '[' → logprob: -16.625001907348633
    9. 'Sw' → logprob: -16.625001907348633
    10. '(n' → logprob: -16.625001907348633

Token 800: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -14.000001907348633
    3. '(' → logprob: -14.625001907348633
    4. ')' → logprob: -14.750001907348633
    5. ',
' → logprob: -16.500001907348633
    6. '```' → logprob: -16.875001907348633
    7. ',U' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.500001907348633
    9. 'C' → logprob: -18.625001907348633
    10. '[' → logprob: -19.000001907348633

Token 801: ' USED' (ID: 129384)
  Prédit: 'USED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USED' → logprob: -0.00014084660506341606
    2. ' USED' → logprob: -8.875141143798828
    3. 'USE' → logprob: -15.000141143798828
    4. '_USED' → logprob: -15.125141143798828
    5. '   ' → logprob: -16.000141143798828
    6. 'used' → logprob: -16.500141143798828
    7. ' ' → logprob: -16.750141143798828
    8. 'US' → logprob: -16.875141143798828
    9. 'Used' → logprob: -17.000141143798828
    10. '  ' → logprob: -17.250141143798828

Token 802: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.392824874026701e-05
    2. ',f' → logprob: -10.50003433227539
    3. ')' → logprob: -12.37503433227539
    4. 'f' → logprob: -13.87503433227539
    5. ' ,' → logprob: -14.00003433227539
    6. ')
' → logprob: -16.25003433227539
    7. '   ' → logprob: -16.25003433227539
    8. '```' → logprob: -16.75003433227539
    9. ',
' → logprob: -16.87503433227539
    10. '
' → logprob: -17.75003433227539

Token 803: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00033546582562848926
    2. ' f' → logprob: -8.000335693359375
    3. ')' → logprob: -17.125335693359375
    4. '	f' → logprob: -18.875335693359375
    5. '
' → logprob: -19.375335693359375
    6. '```' → logprob: -20.375335693359375
    7. 'ф' → logprob: -20.750335693359375
    8. ' ' → logprob: -20.750335693359375
    9. '   ' → logprob: -21.000335693359375
    10. '(f' → logprob: -21.125335693359375

Token 804: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04861484840512276
    2. ')
' → logprob: -3.048614740371704
    3. ')

' → logprob: -10.673614501953125
    4. ')
' → logprob: -13.173614501953125
    5. ')return' → logprob: -14.048614501953125
    6. '()' → logprob: -14.798614501953125
    7. ' )' → logprob: -15.298614501953125
    8. ')`' → logprob: -15.548614501953125
    9. '())' → logprob: -15.673614501953125
    10. '   ' → logprob: -15.673614501953125

Token 805: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 806: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2117602676153183
    2. '   ' → logprob: -1.7117602825164795
    3. ' return' → logprob: -4.5867600440979
    4. 'def' → logprob: -9.836760520935059
    5. '<|end|>' → logprob: -10.461760520935059
    6. '	return' → logprob: -11.211760520935059
    7. ' ' → logprob: -12.961760520935059
    8. 'import' → logprob: -12.961760520935059
    9. 'for' → logprob: -13.461760520935059
    10. '  ' → logprob: -13.461760520935059

Token 807: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.024901162832975388
    2. 'AN' → logprob: -4.024901390075684
    3. ' AN' → logprob: -5.024901390075684
    4. '[' → logprob: -9.399901390075684
    5. 'ANSWER' → logprob: -10.649901390075684
    6. 'ans' → logprob: -11.274901390075684
    7. '(' → logprob: -11.774901390075684
    8. 'ANTLR' → logprob: -12.399901390075684
    9. '(ans' → logprob: -12.524901390075684
    10. ' ' → logprob: -12.899901390075684

Token 808: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. '[n' → logprob: -18.625
    4. '[S' → logprob: -20.125
    5. 's' → logprob: -21.0
    6. '```' → logprob: -21.375
    7. '[i' → logprob: -21.875
    8. 'SOR' → logprob: -22.375
    9. 'С' → logprob: -22.5
    10. '(n' → logprob: -22.75

Token 809: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 810: 'def' (ID: 1314)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04712416231632233
    2. '#' → logprob: -3.672124147415161
    3. '<|end|>' → logprob: -4.17212438583374
    4. 'n' → logprob: -6.29712438583374
    5. '<|end|>' → logprob: -7.29712438583374
    6. 'raw' → logprob: -7.29712438583374
    7. 'def' → logprob: -7.42212438583374
    8. '```' → logprob: -7.54712438583374
    9. 'import' → logprob: -8.547123908996582
    10. ')' → logprob: -8.922123908996582

Token 811: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10021723806858063
    2. 'main' → logprob: -2.350217342376709
    3. ' solve' → logprob: -12.72521686553955
    4. '_main' → logprob: -12.72521686553955
    5. ' run' → logprob: -14.10021686553955
    6. 'def' → logprob: -14.10021686553955
    7. 'solve' → logprob: -14.10021686553955
    8. ' read' → logprob: -14.35021686553955
    9. 'read' → logprob: -14.60021686553955
    10. '	main' → logprob: -14.85021686553955

Token 812: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.787507714354433e-05
    2. '():
' → logprob: -10.00004768371582
    3. ' ():' → logprob: -13.00004768371582
    4. '():
' → logprob: -16.25004768371582
    5. '()' → logprob: -16.75004768371582
    6. '():

' → logprob: -20.00004768371582
    7. '().' → logprob: -21.25004768371582
    8. '()>' → logprob: -21.62504768371582
    9. '(n' → logprob: -22.12504768371582
    10. '(":' → logprob: -22.12504768371582

Token 813: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027924951165914536
    2. 'n' → logprob: -3.7779250144958496
    3. 'N' → logprob: -5.40292501449585
    4. ' n' → logprob: -9.027924537658691
    5. ' N' → logprob: -10.402924537658691
    6. '	n' → logprob: -12.402924537658691
    7. '```' → logprob: -12.527924537658691
    8. 'if' → logprob: -13.027924537658691
    9. '  ' → logprob: -13.277924537658691
    10. ' ' → logprob: -13.652924537658691

Token 814: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0686245784163475
    2. '   ' → logprob: -3.193624496459961
    3. 'n' → logprob: -3.693624496459961
    4. ' N' → logprob: -8.318624496459961
    5. 'if' → logprob: -8.818624496459961
    6. '#' → logprob: -11.193624496459961
    7. ' n' → logprob: -12.318624496459961
    8. ' ' → logprob: -13.568624496459961
    9. 'global' → logprob: -13.818624496459961
    10. '
' → logprob: -14.318624496459961

Token 815: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04102504998445511
    2. ' =' → logprob: -3.791025161743164
    3. '=' → logprob: -4.041025161743164
    4. ' ,' → logprob: -11.041025161743164
    5. ',X' → logprob: -11.666025161743164
    6. ' ' → logprob: -12.666025161743164
    7. ',K' → logprob: -13.291025161743164
    8. ',C' → logprob: -13.416025161743164
    9. '=int' → logprob: -13.541025161743164
    10. ',Q' → logprob: -13.791025161743164

Token 816: ' read' (ID: 1729)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.41196364164352417
    2. ' int' → logprob: -1.536963701248169
    3. 'read' → logprob: -2.411963701248169
    4. ' read' → logprob: -3.411963701248169
    5. '[int' → logprob: -14.66196346282959
    6. ' ' → logprob: -14.78696346282959
    7. '(int' → logprob: -14.91196346282959
    8. 're' → logprob: -15.28696346282959
    9. '=int' → logprob: -15.28696346282959
    10. 'r' → logprob: -15.41196346282959

Token 817: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.000612359493970871
    2. '()' → logprob: -7.750612258911133
    3. 'int' → logprob: -9.000612258911133
    4. '_input' → logprob: -9.875612258911133
    5. '_' → logprob: -12.500612258911133
    6. '()
' → logprob: -14.000612258911133
    7. '_in' → logprob: -14.750612258911133
    8. '(int' → logprob: -14.875612258911133
    9. '(' → logprob: -15.375612258911133
    10. '_integer' → logprob: -15.625612258911133

Token 818: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036056553944945335
    2. '()
' → logprob: -5.628605842590332
    3. '()
' → logprob: -13.378605842590332
    4. '()\' → logprob: -13.503605842590332
    5. '())' → logprob: -14.503605842590332
    6. ' ()' → logprob: -14.503605842590332
    7. '()<' → logprob: -14.628605842590332
    8. '   ' → logprob: -15.253605842590332
    9. '()

' → logprob: -15.378605842590332
    10. '()>' → logprob: -15.628605842590332

Token 819: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00563402846455574
    2. '   ' → logprob: -5.25563383102417
    3. 'raw' → logprob: -8.255634307861328
    4. ' C' → logprob: -9.005634307861328
    5. '	C' → logprob: -12.005634307861328
    6. '```' → logprob: -12.880634307861328
    7. ' raw' → logprob: -13.005634307861328
    8. 'X' → logprob: -13.255634307861328
    9. '  ' → logprob: -13.755634307861328
    10. '
' → logprob: -14.255634307861328

Token 820: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0032272678799927235
    2. 'raw' → logprob: -5.753227233886719
    3. ' C' → logprob: -10.628227233886719
    4. ' raw' → logprob: -11.503227233886719
    5. '   ' → logprob: -12.003227233886719
    6. '
' → logprob: -13.253227233886719
    7. 'Raw' → logprob: -13.628227233886719
    8. 'import' → logprob: -13.753227233886719
    9. 'X' → logprob: -14.003227233886719
    10. '    
' → logprob: -14.378227233886719

Token 821: '_raw' (ID: 36128)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474195271730423
    2. '=' → logprob: -0.9741952419281006
    3. 'raw' → logprob: -9.47419548034668
    4. '_raw' → logprob: -10.34919548034668
    5. '   ' → logprob: -12.22419548034668
    6. ' raw' → logprob: -12.97419548034668
    7. '_' → logprob: -14.59919548034668
    8. ' ' → logprob: -14.84919548034668
    9. ',' → logprob: -15.09919548034668
    10. 'Raw' → logprob: -15.47419548034668

Token 822: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692873179912567
    2. ' =' → logprob: -2.1269288063049316
    3. ',' → logprob: -15.126928329467773
    4. ' ' → logprob: -15.876928329467773
    5. '   ' → logprob: -15.876928329467773
    6. '＝' → logprob: -16.626928329467773
    7. '  ' → logprob: -17.501928329467773
    8. '=C' → logprob: -17.626928329467773
    9. '_' → logprob: -18.001928329467773
    10. ':' → logprob: -18.126928329467773

Token 823: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.7610454708337784e-05
    2. ' read' → logprob: -10.500027656555176
    3. '	read' → logprob: -20.50002670288086
    4. '   ' → logprob: -21.25002670288086
    5. '  ' → logprob: -21.62502670288086
    6. 'list' → logprob: -22.37502670288086
    7. 're' → logprob: -23.00002670288086
    8. '(read' → logprob: -23.00002670288086
    9. ' ' → logprob: -24.00002670288086
    10. '_read' → logprob: -24.62502670288086

Token 824: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.534558552724775e-05
    2. 'int' → logprob: -10.625025749206543
    3. '_input' → logprob: -14.625025749206543
    4. '_list' → logprob: -15.625025749206543
    5. '_' → logprob: -16.125024795532227
    6. '_raw' → logprob: -16.250024795532227
    7. '```' → logprob: -16.375024795532227
    8. '_in' → logprob: -17.000024795532227
    9. 'list' → logprob: -17.250024795532227
    10. '_line' → logprob: -17.625024795532227

Token 825: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.20245692133903503
    2. '()' → logprob: -1.7024569511413574
    3. 's' → logprob: -7.452456951141357
    4. '_' → logprob: -8.9524564743042
    5. '()
' → logprob: -9.2024564743042
    6. 'list' → logprob: -9.5774564743042
    7. ')_' → logprob: -9.8274564743042
    8. '_array' → logprob: -10.5774564743042
    9. '_line' → logprob: -11.2024564743042
    10. '_lst' → logprob: -11.4524564743042

Token 826: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004904801025986671
    2. '()
' → logprob: -7.625490665435791
    3. '()
' → logprob: -13.500490188598633
    4. ' ()' → logprob: -15.000490188598633
    5. '()\' → logprob: -15.625490188598633
    6. ')' → logprob: -15.875490188598633
    7. '(' → logprob: -16.000490188598633
    8. '()

' → logprob: -16.125490188598633
    9. '()`' → logprob: -16.125490188598633
    10. '();' → logprob: -16.500490188598633

Token 827: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15362350642681122
    2. 'C' → logprob: -2.153623580932617
    3. ' C' → logprob: -3.653623580932617
    4. '<|end|>' → logprob: -8.653623580932617
    5. ' ' → logprob: -9.028623580932617
    6. '  ' → logprob: -9.528623580932617
    7. '
' → logprob: -10.653623580932617
    8. '```' → logprob: -10.903623580932617
    9. '[' → logprob: -11.778623580932617
    10. '	C' → logprob: -11.778623580932617

Token 828: ' global' (ID: 5466)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.02514403685927391
    2. ' C' → logprob: -3.775144100189209
    3. '   ' → logprob: -6.275144100189209
    4. '
' → logprob: -11.77514362335205
    5. '	C' → logprob: -12.90014362335205
    6. ' ' → logprob: -13.15014362335205
    7. '  ' → logprob: -14.27514362335205
    8. '```' → logprob: -14.52514362335205
    9. '#' → logprob: -15.40014362335205
    10. 'import' → logprob: -15.65014362335205

Token 829: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00017982252757064998
    2. ' C' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.2501802444458
    4. '	C' → logprob: -17.000179290771484
    5. ' ' → logprob: -17.875179290771484
    6. '
' → logprob: -19.625179290771484
    7. 'raw' → logprob: -19.625179290771484
    8. '  ' → logprob: -19.875179290771484
    9. 'c' → logprob: -20.000179290771484
    10. 'user' → logprob: -20.375179290771484

Token 830: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22729048132896423
    2. '=' → logprob: -2.102290391921997
    3. '
' → logprob: -2.602290391921997
    4. '=C' → logprob: -5.977290630340576
    5. '   ' → logprob: -6.352290630340576
    6. '=
' → logprob: -7.477290630340576
    7. '    
' → logprob: -7.727290630340576
    8. 'C' → logprob: -7.727290630340576
    9. '[' → logprob: -7.852290630340576
    10. ' =
' → logprob: -8.727290153503418

Token 831: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1096552610397339
    2. '=' → logprob: -1.2346552610397339
    3. ' =' → logprob: -1.3596552610397339
    4. 'C' → logprob: -2.1096553802490234
    5. ' C' → logprob: -7.234655380249023
    6. '=C' → logprob: -7.484655380249023
    7. ' ' → logprob: -10.109655380249023
    8. '  ' → logprob: -11.609655380249023
    9. '	C' → logprob: -11.734655380249023
    10. ',' → logprob: -12.234655380249023

Token 832: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -1.5048530030981055e-06
    2. ' C' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.125001907348633
    4. ' ' → logprob: -21.375001907348633
    5. '#' → logprob: -21.875001907348633
    6. '	C' → logprob: -22.500001907348633
    7. '  ' → logprob: -22.750001907348633
    8. '_C' → logprob: -22.875001907348633
    9. 'c' → logprob: -23.000001907348633
    10. '
' → logprob: -23.250001907348633

Token 833: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007108822464942932
    2. ' =' → logprob: -7.250710964202881
    3. '=C' → logprob: -14.000710487365723
    4. '=
' → logprob: -18.25071144104004
    5. 'C' → logprob: -19.00071144104004
    6. '＝' → logprob: -19.25071144104004
    7. '=

' → logprob: -20.12571144104004
    8. ' ' → logprob: -20.25071144104004
    9. '=create' → logprob: -20.50071144104004
    10. '   ' → logprob: -20.87571144104004

Token 834: ' adjust' (ID: 10266)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -5.836499985889532e-05
    2. ' adjust' → logprob: -9.7500581741333
    3. 'adj' → logprob: -18.125059127807617
    4. '[' → logprob: -18.875059127807617
    5. '   ' → logprob: -19.250059127807617
    6. 'aj' → logprob: -20.250059127807617
    7. 'adapt' → logprob: -20.500059127807617
    8. ' ajust' → logprob: -20.625059127807617
    9. '.adjust' → logprob: -20.750059127807617
    10. '  ' → logprob: -20.875059127807617

Token 835: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.00042864278657361865
    2. '(C' → logprob: -8.375428199768066
    3. 'colors' → logprob: -9.250428199768066
    4. '_' → logprob: -9.500428199768066
    5. 'Colors' → logprob: -10.625428199768066
    6. '_C' → logprob: -14.250428199768066
    7. '_(' → logprob: -14.500428199768066
    8. '(_' → logprob: -14.750428199768066
    9. '(' → logprob: -15.375428199768066
    10. '\' → logprob: -15.875428199768066

Token 836: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.625
    3. ' (' → logprob: -21.125
    4. '((' → logprob: -21.625
    5. '(
' → logprob: -21.75
    6. '(Cs' → logprob: -21.75
    7. '(c' → logprob: -21.875
    8. 'C' → logprob: -22.625
    9. '(CC' → logprob: -22.75
    10. '(CType' → logprob: -22.875

Token 837: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -0.5072309970855713
    2. ')' → logprob: -1.5072309970855713
    3. '(C' → logprob: -1.7572309970855713
    4. 'raw' → logprob: -6.632230758666992
    5. ')
' → logprob: -7.132230758666992
    6. 'Raw' → logprob: -7.882230758666992
    7. '(R' → logprob: -8.257230758666992
    8. '_)' → logprob: -8.757230758666992
    9. '(raw' → logprob: -8.882230758666992
    10. '(' → logprob: -9.132230758666992

Token 838: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021999788004904985
    2. ')
' → logprob: -6.127200126647949
    3. '   ' → logprob: -11.25220012664795
    4. ')
' → logprob: -14.25220012664795
    5. ')

' → logprob: -14.25220012664795
    6. ' )' → logprob: -15.25220012664795
    7. '())' → logprob: -16.377199172973633
    8. ' ' → logprob: -16.752199172973633
    9. '))' → logprob: -16.877199172973633
    10. '()' → logprob: -17.127199172973633

Token 839: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1270095854997635
    2. 'X' → logprob: -2.127009630203247
    3. ' X' → logprob: -10.627009391784668
    4. '  ' → logprob: -11.002009391784668
    5. '	X' → logprob: -11.252009391784668
    6. ' ' → logprob: -11.502009391784668
    7. '
' → logprob: -12.502009391784668
    8. '```' → logprob: -12.502009391784668
    9. '   ' → logprob: -12.627009391784668
    10. '    
' → logprob: -12.752009391784668

Token 840: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -9.960946772480384e-05
    2. '   ' → logprob: -9.375099182128906
    3. ' X' → logprob: -11.250099182128906
    4. '```' → logprob: -14.500099182128906
    5. '	X' → logprob: -14.500099182128906
    6. '#' → logprob: -15.750099182128906
    7. 'N' → logprob: -15.875099182128906
    8. ' ' → logprob: -16.000099182128906
    9. 'edges' → logprob: -16.375099182128906
    10. 'def' → logprob: -16.500099182128906

Token 841: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326204538345337
    2. '=' → logprob: -1.3132619857788086
    3. ',' → logprob: -15.813261985778809
    4. '＝' → logprob: -16.813262939453125
    5. ' ' → logprob: -17.188262939453125
    6. '=[]' → logprob: -18.188262939453125
    7. '=create' → logprob: -18.188262939453125
    8. '=N' → logprob: -18.313262939453125
    9. '=X' → logprob: -18.313262939453125
    10. '	' → logprob: -18.563262939453125

Token 842: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0001584850688232109
    2. ' init' → logprob: -8.750158309936523
    3. '(init' → logprob: -17.500158309936523
    4. '_init' → logprob: -18.125158309936523
    5. '	init' → logprob: -19.000158309936523
    6. 'ini' → logprob: -19.875158309936523
    7. 'inite' → logprob: -20.250158309936523
    8. '.init' → logprob: -20.750158309936523
    9. 'import' → logprob: -21.000158309936523
    10. ')init' → logprob: -21.125158309936523

Token 843: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.002155495574697852
    2. '(N' → logprob: -7.002155303955078
    3. '_adj' → logprob: -7.252155303955078
    4. 'adj' → logprob: -7.752155303955078
    5. 'Ad' → logprob: -10.377155303955078
    6. 'ad' → logprob: -10.627155303955078
    7. 'Adj' → logprob: -10.877155303955078
    8. ' adjacency' → logprob: -12.002155303955078
    9. '_' → logprob: -12.252155303955078
    10. '(' → logprob: -12.377155303955078

Token 844: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.012544850818812847
    2. 'j' → logprob: -4.387544631958008
    3. 'J' → logprob: -11.012544631958008
    4. 'acency' → logprob: -11.387544631958008
    5. 'Jac' → logprob: -12.887544631958008
    6. 'jc' → logprob: -13.887544631958008
    7. '[j' → logprob: -14.137544631958008
    8. '
' → logprob: -14.262544631958008
    9. ' adjacency' → logprob: -14.387544631958008
    10. '(j' → logprob: -15.012544631958008

Token 845: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -3.5597102396423e-05
    2. 'acency' → logprob: -10.375035285949707
    3. 'list' → logprob: -13.250035285949707
    4. 'cy' → logprob: -13.625035285949707
    5. '_list' → logprob: -14.250035285949707
    6. 'ENCY' → logprob: -16.000036239624023
    7. 'ancy' → logprob: -16.375036239624023
    8. 'y' → logprob: -16.500036239624023
    9. 'List' → logprob: -16.750036239624023
    10. 'n' → logprob: -16.875036239624023

Token 846: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2664456789934775e-06
    2. 'list' → logprob: -13.750000953674316
    3. '_' → logprob: -16.250001907348633
    4. 'List' → logprob: -18.625001907348633
    5. '_lists' → logprob: -18.750001907348633
    6. ' list' → logprob: -20.250001907348633
    7. '```' → logprob: -20.250001907348633
    8. '_LIST' → logprob: -21.000001907348633
    9. 's' → logprob: -21.125001907348633
    10. ' _' → logprob: -21.125001907348633

Token 847: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.000000953674316
    3. 'N' → logprob: -14.875000953674316
    4. ' (' → logprob: -17.500001907348633
    5. '(n' → logprob: -18.250001907348633
    6. '(
' → logprob: -18.375001907348633
    7. '((' → logprob: -19.875001907348633
    8. '```' → logprob: -19.875001907348633
    9. '   ' → logprob: -20.250001907348633
    10. '(X' → logprob: -20.250001907348633

Token 848: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16028788685798645
    2. ')
' → logprob: -1.910287857055664
    3. '(N' → logprob: -10.285287857055664
    4. ')
' → logprob: -10.910287857055664
    5. '   ' → logprob: -12.160287857055664
    6. ')

' → logprob: -12.285287857055664
    7. ')`
' → logprob: -14.785287857055664
    8. ' )' → logprob: -15.535287857055664
    9. ' )
' → logprob: -15.535287857055664
    10. '(' → logprob: -15.785287857055664

Token 849: '   ' (ID: 271)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2046165019273758
    2. '   ' → logprob: -1.7046165466308594
    3. ' read' → logprob: -5.829616546630859
    4. 'for' → logprob: -9.70461654663086
    5. '	read' → logprob: -9.70461654663086
    6. '```' → logprob: -9.82961654663086
    7. 'edges' → logprob: -10.57961654663086
    8. 'def' → logprob: -10.57961654663086
    9. '(read' → logprob: -11.82961654663086
    10. '.read' → logprob: -12.57961654663086

Token 850: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' (adapté à ' read') → logprob: -2.868328920158092e-05
    2. ' read' → logprob: -11.125028610229492
    3. '   ' → logprob: -11.375028610229492
    4. 'def' → logprob: -13.000028610229492
    5. 'for' → logprob: -17.125028610229492
    6. '	read' → logprob: -17.375028610229492
    7. '
' → logprob: -17.625028610229492
    8. 'write' → logprob: -18.125028610229492
    9. '(read' → logprob: -18.250028610229492
    10. 'import' → logprob: -18.500028610229492

Token 851: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00017278951418120414
    2. 'edges' → logprob: -9.62517261505127
    3. 'int' → logprob: -9.87517261505127
    4. '_int' → logprob: -10.12517261505127
    5. '_edge' → logprob: -12.12517261505127
    6. '```' → logprob: -12.25017261505127
    7. '_ed' → logprob: -13.12517261505127
    8. 's' → logprob: -14.37517261505127
    9. '(N' → logprob: -14.50017261505127
    10. 'Edges' → logprob: -14.87517261505127

Token 852: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009244420798495412
    2. 'N' → logprob: -7.000924587249756
    3. '(' → logprob: -11.500924110412598
    4. '(X' → logprob: -13.875924110412598
    5. 'X' → logprob: -15.000924110412598
    6. '(
' → logprob: -15.000924110412598
    7. '```' → logprob: -15.000924110412598
    8. '<|end|>' → logprob: -15.125924110412598
    9. ',N' → logprob: -16.125925064086914
    10. '(n' → logprob: -16.500925064086914

Token 853: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032784834038466215
    2. ',X' → logprob: -5.7532782554626465
    3. ' ,' → logprob: -10.003278732299805
    4. '(X' → logprob: -10.503278732299805
    5. ',
' → logprob: -11.003278732299805
    6. '(' → logprob: -12.253278732299805
    7. ')' → logprob: -13.503278732299805
    8. ',N' → logprob: -14.253278732299805
    9. '<|end|>' → logprob: -14.503278732299805
    10. ',Y' → logprob: -14.503278732299805

Token 854: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00033546582562848926
    2. ' X' → logprob: -8.000335693359375
    3. ')' → logprob: -16.875335693359375
    4. '(X' → logprob: -17.375335693359375
    5. '[' → logprob: -18.625335693359375
    6. '[X' → logprob: -18.625335693359375
    7. '>X' → logprob: -18.875335693359375
    8. '	X' → logprob: -19.000335693359375
    9. ' ' → logprob: -20.750335693359375
    10. '<|end|>' → logprob: -20.875335693359375

Token 855: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -12.000009536743164
    3. ' )' → logprob: -13.250009536743164
    4. ',' → logprob: -14.250009536743164
    5. '   ' → logprob: -15.375009536743164
    6. '<|end|>' → logprob: -15.625009536743164
    7. ')}' → logprob: -16.250009536743164
    8. '))' → logprob: -16.375009536743164
    9. ')#' → logprob: -16.625009536743164
    10. ')

' → logprob: -16.875009536743164

Token 856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011178919114172459
    2. 'ans' → logprob: -5.511178970336914
    3. '```' → logprob: -6.511178970336914
    4. 'result' → logprob: -6.636178970336914
    5. 'ANS' → logprob: -6.636178970336914
    6. 'results' → logprob: -6.761178970336914
    7. '
' → logprob: -8.386178970336914
    8. 'answers' → logprob: -8.386178970336914
    9. '<|end|>' → logprob: -8.636178970336914
    10. '	ans' → logprob: -8.761178970336914

Token 857: ' ans' (ID: 3345)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.011292320676147938
    2. 'ans' (adapté à ' ans') → logprob: -4.511292457580566
    3. 'result' → logprob: -9.136292457580566
    4. 'res' → logprob: -9.261292457580566
    5. 'answer' → logprob: -11.261292457580566
    6. 'AN' → logprob: -11.886292457580566
    7. 'print' → logprob: -12.136292457580566
    8. '   ' → logprob: -12.386292457580566
    9. 'ANSWER' → logprob: -12.761292457580566
    10. 'answers' → logprob: -12.886292457580566

Token 858: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2863626480102539
    2. ' =' → logprob: -1.411362648010254
    3. 's' → logprob: -5.286362648010254
    4. 'or' → logprob: -11.161362648010254
    5. '=[]' → logprob: -11.536362648010254
    6. 'ors' → logprob: -11.661362648010254
    7. '[]' → logprob: -11.661362648010254
    8. '_=' → logprob: -11.786362648010254
    9. 'wer' → logprob: -11.911362648010254
    10. 'ow' → logprob: -11.911362648010254

Token 859: ' Euler' (ID: 167577)
  Prédit: 'Euler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Euler' → logprob: -0.0007100477814674377
    2. ' Euler' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.625709533691406
    4. ' ' → logprob: -18.750709533691406
    5. 'Eigen' → logprob: -18.750709533691406
    6. 'Earth' → logprob: -18.875709533691406
    7. 'Eu' → logprob: -18.875709533691406
    8. 'E' → logprob: -19.125709533691406
    9. '(E' → logprob: -19.250709533691406
    10. 'Electron' → logprob: -19.750709533691406

Token 860: 'Tour' (ID: 48485)
  Prédit: 'Tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tour' → logprob: -6.704273118884885e-07
    2. 'Tours' → logprob: -14.875000953674316
    3. 'Tou' → logprob: -16.75
    4. 'tour' → logprob: -16.875
    5. ' Tour' → logprob: -17.0
    6. 'Tor' → logprob: -18.0
    7. 'Tur' → logprob: -18.125
    8. 'To' → logprob: -18.625
    9. '(N' → logprob: -18.75
    10. 'T' → logprob: -19.0

Token 861: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.500035285949707
    3. '(len' → logprob: -12.250035285949707
    4. '(
' → logprob: -13.750035285949707
    5. ' (' → logprob: -14.000035285949707
    6. '(n' → logprob: -14.500035285949707
    7. '```' → logprob: -15.000035285949707
    8. '((' → logprob: -15.750035285949707
    9. '
' → logprob: -16.625036239624023
    10. ')(' → logprob: -16.750036239624023

Token 862: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001329791557509452
    2. ',C' → logprob: -9.12513256072998
    3. ',X' → logprob: -10.75013256072998
    4. ' ,' → logprob: -14.00013256072998
    5. ',
' → logprob: -14.50013256072998
    6. '(' → logprob: -14.75013256072998
    7. ')' → logprob: -15.62513256072998
    8. ',N' → logprob: -16.125133514404297
    9. '```' → logprob: -16.500133514404297
    10. 'C' → logprob: -16.875133514404297

Token 863: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.002446638885885477
    2. '0' → logprob: -6.12744665145874
    3. ' X' → logprob: -8.252446174621582
    4. ' ' → logprob: -14.377446174621582
    5. ')' → logprob: -16.2524471282959
    6. '
' → logprob: -17.6274471282959
    7. '```' → logprob: -17.6274471282959
    8. '	X' → logprob: -17.7524471282959
    9. 'x' → logprob: -17.7524471282959
    10. '   ' → logprob: -17.8774471282959

Token 864: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020890454470645636
    2. '0' → logprob: -8.500208854675293
    3. ' ,' → logprob: -13.000208854675293
    4. '(' → logprob: -13.375208854675293
    5. ')' → logprob: -13.750208854675293
    6. '```' → logprob: -16.00020980834961
    7. ' ' → logprob: -16.50020980834961
    8. '   ' → logprob: -16.50020980834961
    9. ',
' → logprob: -16.75020980834961
    10. '[' → logprob: -16.87520980834961

Token 865: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -18.75
    4. '۰' → logprob: -19.0
    5. '
' → logprob: -19.5
    6. '```' → logprob: -20.625
    7. ')' → logprob: -20.875
    8. '<|end|>' → logprob: -21.3125
    9. '00' → logprob: -21.375
    10. '０' → logprob: -21.8125

Token 866: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. 'C' → logprob: -16.5
    4. '   ' → logprob: -18.25
    5. '۰' → logprob: -18.5
    6. '```' → logprob: -19.5625
    7. '０' → logprob: -20.1875
    8. '
' → logprob: -20.4375
    9. ')' → logprob: -20.4375
    10. '=' → logprob: -20.9375

Token 867: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859384149312973
    2. ')
' → logprob: -3.048593759536743
    3. ')
' → logprob: -12.048593521118164
    4. ' )' → logprob: -15.298593521118164
    5. ')

' → logprob: -15.298593521118164
    6. ' )
' → logprob: -16.673593521118164
    7. ')`
' → logprob: -17.298593521118164
    8. '),' → logprob: -18.798593521118164
    9. '))' → logprob: -18.923593521118164
    10. '   ' → logprob: -18.923593521118164

Token 868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009853479452431202
    2. 'print' → logprob: -5.134853363037109
    3. '<|end|>' → logprob: -5.759853363037109
    4. 'for' → logprob: -7.634853363037109
    5. '```' → logprob: -9.25985336303711
    6. 'return' → logprob: -9.75985336303711
    7. '
' → logprob: -10.00985336303711
    8. '    
' → logprob: -10.50985336303711
    9. ' for' → logprob: -10.63485336303711
    10. ' print' → logprob: -11.75985336303711

Token 869: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10844934731721878
    2. 'for' → logprob: -2.3584494590759277
    3. '   ' → logprob: -4.858449459075928
    4. ' for' → logprob: -7.983449459075928
    5. ' print' → logprob: -9.23344898223877
    6. '
' → logprob: -12.48344898223877
    7. 'return' → logprob: -13.10844898223877
    8. '```' → logprob: -13.73344898223877
    9. '	print' → logprob: -15.35844898223877
    10. '#print' → logprob: -15.73344898223877

Token 870: '_result' (ID: 11623)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0006745471036992967
    2. '(' → logprob: -8.2506742477417
    3. '('\' → logprob: -8.7506742477417
    4. '('' → logprob: -9.5006742477417
    5. '(*(' → logprob: -9.5006742477417
    6. '(ans' → logprob: -10.2506742477417
    7. '("' → logprob: -11.0006742477417
    8. 'ans' → logprob: -11.1256742477417
    9. '(*)' → logprob: -11.6256742477417
    10. '("\' → logprob: -11.7506742477417

Token 871: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.019475175067782402
    2. '(' → logprob: -4.394474983215332
    3. 's' → logprob: -5.144474983215332
    4. '(s' → logprob: -7.644474983215332
    5. '(*' → logprob: -8.019474983215332
    6. '()' → logprob: -8.394474983215332
    7. '(len' → logprob: -11.144474983215332
    8. '("("' → logprob: -11.644474983215332
    9. '(an' → logprob: -11.644474983215332
    10. '(answer' → logprob: -12.019474983215332

Token 872: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003202114312443882
    2. '())' → logprob: -8.375320434570312
    3. '()' → logprob: -9.375320434570312
    4. ')
' → logprob: -13.125320434570312
    5. '(' → logprob: -14.125320434570312
    6. ')`' → logprob: -14.250320434570312
    7. '[])' → logprob: -15.000320434570312
    8. '))' → logprob: -15.000320434570312
    9. '   ' → logprob: -15.500320434570312
    10. ' )' → logprob: -15.625320434570312

Token 873: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008737720549106598
    2. '
' → logprob: -4.758737564086914
    3. '

' → logprob: -10.133737564086914
    4. '\' → logprob: -10.133737564086914
    5. '```' → logprob: -10.758737564086914
    6. 'ndef' → logprob: -12.133737564086914
    7. '``' → logprob: -12.258737564086914
    8. '
' → logprob: -12.633737564086914
    9. '_def' → logprob: -13.133737564086914
    10. ' def' → logprob: -13.258737564086914

Token 874: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008616461418569088
    2. ' print' → logprob: -4.7586164474487305
    3. '_print' → logprob: -13.25861644744873
    4. '(print' → logprob: -16.633617401123047
    5. '_' → logprob: -16.883617401123047
    6. '	print' → logprob: -17.258617401123047
    7. '__' → logprob: -18.258617401123047
    8. ' ' → logprob: -19.508617401123047
    9. '```' → logprob: -19.508617401123047
    10. '`' → logprob: -19.508617401123047

Token 875: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.00069778086617589
    2. '_' → logprob: -7.500697612762451
    3. '("_' → logprob: -9.75069808959961
    4. '_results' → logprob: -10.12569808959961
    5. '_res' → logprob: -12.12569808959961
    6. '(_' → logprob: -12.25069808959961
    7. '_(' → logprob: -12.37569808959961
    8. 'result' → logprob: -12.37569808959961
    9. '(' → logprob: -12.50069808959961
    10. '```' → logprob: -12.50069808959961

Token 876: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2531921863555908
    2. '(' → logprob: -1.5031921863555908
    3. '(answer' → logprob: -8.378191947937012
    4. '(def' → logprob: -8.628191947937012
    5. '(len' → logprob: -8.878191947937012
    6. '(an' → logprob: -9.003191947937012
    7. '(arr' → logprob: -9.628191947937012
    8. '((' → logprob: -9.753191947937012
    9. '(lst' → logprob: -9.878191947937012
    10. '(a' → logprob: -10.128191947937012

Token 877: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023629211355000734
    2. '):
' → logprob: -6.2523627281188965
    3. ')' → logprob: -8.127363204956055
    4. '():' → logprob: -9.002363204956055
    5. '()' → logprob: -12.127363204956055
    6. '):
' → logprob: -12.752363204956055
    7. ':' → logprob: -13.002363204956055
    8. '():
' → logprob: -13.377363204956055
    9. ' ):' → logprob: -13.877363204956055
    10. '[]):' → logprob: -14.127363204956055

Token 878: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.353066086769104
    2. '   ' → logprob: -1.353066086769104
    3. 'print' → logprob: -3.3530659675598145
    4. ' for' → logprob: -5.8530659675598145
    5. 'def' → logprob: -7.3530659675598145
    6. '```' → logprob: -7.6030659675598145
    7. ' print' → logprob: -10.353066444396973
    8. '``' → logprob: -13.353066444396973
    9. '
' → logprob: -14.728066444396973
    10. '`' → logprob: -14.978066444396973

Token 879: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0067156096920371056
    2. 'print' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.631715774536133
    4. ' for' → logprob: -16.006715774536133
    5. 'def' → logprob: -19.506715774536133
    6. '
' → logprob: -19.506715774536133
    7. 'import' → logprob: -20.506715774536133
    8. '	for' → logprob: -21.131715774536133
    9. '```' → logprob: -21.381715774536133
    10. 'sys' → logprob: -21.381715774536133

Token 880: ' v' (ID: 323)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16715645790100098
    2. 'x' → logprob: -2.042156457901001
    3. 'v' → logprob: -3.917156457901001
    4. 'k' → logprob: -6.167156219482422
    5. 'i' → logprob: -7.042156219482422
    6. 'val' → logprob: -7.792156219482422
    7. 'value' → logprob: -8.042156219482422
    8. 'e' → logprob: -9.292156219482422
    9. 'res' → logprob: -9.417156219482422
    10. 'r' → logprob: -9.417156219482422

Token 881: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009467773139476776
    2. 'in' → logprob: -5.134467601776123
    3. 'al' → logprob: -6.134467601776123
    4. 'alue' → logprob: -6.759467601776123
    5. ' ' → logprob: -10.009468078613281
    6. 'i' → logprob: -10.259468078613281
    7. 'a' → logprob: -10.634468078613281
    8. 'ALUE' → logprob: -10.759468078613281
    9. '	in' → logprob: -11.009468078613281
    10. '   ' → logprob: -11.259468078613281

Token 882: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.7432603272027336e-06
    2. '(ans' → logprob: -13.500001907348633
    3. 'range' → logprob: -15.750001907348633
    4. '	ans' → logprob: -16.750001907348633
    5. ' ans' → logprob: -17.000001907348633
    6. 'v' → logprob: -17.750001907348633
    7. '
' → logprob: -18.750001907348633
    8. 'anse' → logprob: -19.000001907348633
    9. 'ann' → logprob: -19.500001907348633
    10. '_ans' → logprob: -20.000001907348633

Token 883: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021738357841968536
    2. ':
' → logprob: -4.396738529205322
    3. '():' → logprob: -5.146738529205322
    4. 'print' → logprob: -7.021738529205322
    5. '():
' → logprob: -7.271738529205322
    6. '):' → logprob: -7.646738529205322
    7. '[' → logprob: -8.021738052368164
    8. 'in' → logprob: -8.021738052368164
    9. '   ' → logprob: -9.146738052368164
    10. '(' → logprob: -9.521738052368164

Token 884: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6913514137268066
    2. 'print' → logprob: -0.9413514137268066
    3. '       ' → logprob: -2.6913514137268066
    4. ' print' → logprob: -3.1913514137268066
    5. '```' → logprob: -9.441350936889648
    6. '	print' → logprob: -11.441350936889648
    7. '.print' → logprob: -13.816350936889648
    8. '
' → logprob: -13.941350936889648
    9. '``' → logprob: -14.316350936889648
    10. '     ' → logprob: -14.816350936889648

Token 885: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '   ' → logprob: -17.25
    4. 'pr' → logprob: -20.125
    5. 'printf' → logprob: -21.5
    6. '```' → logprob: -21.5
    7. 'prin' → logprob: -22.25
    8. '	print' → logprob: -22.875
    9. 'println' → logprob: -23.875
    10. '_print' → logprob: -24.375

Token 886: '(v' (ID: 6932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.061967797577381134
    2. '(v' → logprob: -2.8119678497314453
    3. ' v' → logprob: -16.811967849731445
    4. '(' → logprob: -16.811967849731445
    5. '	v' → logprob: -17.186967849731445
    6. 'int' → logprob: -18.186967849731445
    7. '_v' → logprob: -20.436967849731445
    8. '0' → logprob: -20.561967849731445
    9. '(int' → logprob: -20.686967849731445
    10. ')v' → logprob: -20.686967849731445

Token 887: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -15.125000953674316
    3. '())' → logprob: -15.250000953674316
    4. ' )' → logprob: -15.875000953674316
    5. '()' → logprob: -16.5
    6. '))' → logprob: -17.75
    7. ',)' → logprob: -18.125
    8. ',' → logprob: -18.625
    9. ')#' → logprob: -18.75
    10. ');' → logprob: -18.875

Token 888: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0031996930483728647
    2. '<|end|>' → logprob: -6.378199577331543
    3. '```' → logprob: -7.003199577331543
    4. '#' → logprob: -7.878199577331543
    5. 'main' → logprob: -9.378199577331543
    6. ' if' → logprob: -9.628199577331543
    7. 'If' → logprob: -11.503199577331543
    8. '<|end|>' → logprob: -11.628199577331543
    9. 'print' → logprob: -11.753199577331543
    10. '...' → logprob: -11.878199577331543

Token 889: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 887
Tokens correctement prédits (1ère position, stricte): 364
Tokens correctement prédits (1ère position, avec adaptation): 396
Tokens correctement prédits (top 10): 737
Précision stricte (1ère position): 41.04%
Précision adaptée (1ère position): 44.64%
Précision (top 10): 83.09%
================================================================================
