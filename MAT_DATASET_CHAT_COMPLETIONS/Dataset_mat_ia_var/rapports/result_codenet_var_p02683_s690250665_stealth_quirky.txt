================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 15:51:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin as __IN
from itertools import product as __P

# L'utilisateur enthousiaste du nomming cryptique et techno-nostalgique
Z = lambda : [int(w) for w in __IN.readline().split()]
(N,M,X),*O = [Z() for _ in range(int(__IN.readline())+1)]
PAPER = [o[:] for o in O]
CERTIF = [False]*N

def __PHANTOM(q):
    T = [0]*M
    for k, s in enumerate(CERTIF):
        if s:
            for j in range(M):
                T[j] += PAPER[k][j+1]
    return all(t >= X for t in T)

RES = float('inf')
def _PATH(i):
    global RES
    if i == N:
        price = sum(PAPER[w][0] for w, flag in enumerate(CERTIF) if flag)
        if __PHANTOM(CERTIF): 
            RES = min(RES, price)
        return
    for f in (0,1):
        CERTIF[i] = bool(f)
        _PATH(i+1)

_PATH(0)
print(RES if RES < float('inf') else -1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.401660680770874
    2. 'exit' → logprob: -1.776660680770874
    3. ' exit' → logprob: -2.401660680770874
    4. ' argv' → logprob: -2.901660680770874
    5. 'import' → logprob: -4.526660919189453
    6. 'stdout' → logprob: -5.901660919189453
    7. 'path' → logprob: -7.026660919189453
    8. ' import' → logprob: -7.401660919189453
    9. 'stdin' → logprob: -7.776660919189453
    10. 'version' → logprob: -8.526660919189453

Token 4: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03409421071410179
    2. '.readline' → logprob: -3.6590940952301025
    3. '\n' → logprob: -5.659094333648682
    4. '.read' → logprob: -6.909094333648682
    5. 'newline' → logprob: -7.159094333648682
    6. '\' → logprob: -7.409094333648682
    7. '```' → logprob: -7.534094333648682
    8. ',' → logprob: -8.159093856811523
    9. 'import' → logprob: -8.284093856811523
    10. 'for' → logprob: -8.784093856811523

Token 5: ' __' (ID: 2516)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17700161039829254
    2. ' input' → logprob: -2.177001714706421
    3. 'sys' → logprob: -3.802001714706421
    4. 'stdin' → logprob: -4.302001476287842
    5. ' sys' → logprob: -5.427001476287842
    6. 'f' → logprob: -6.052001476287842
    7. ' f' → logprob: -6.427001476287842
    8. 'inp' → logprob: -6.677001476287842
    9. 'in' → logprob: -6.802001476287842
    10. 's' → logprob: -7.302001476287842

Token 6: 'IN' (ID: 965)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.024140283465385437
    2. 'sys' → logprob: -4.649140357971191
    3. 'std' → logprob: -4.899140357971191
    4. 's' → logprob: -6.149140357971191
    5. 'argv' → logprob: -6.524140357971191
    6. 'st' → logprob: -6.899140357971191
    7. '__' → logprob: -7.399140357971191
    8. 'in' → logprob: -7.649140357971191
    9. '.stdin' → logprob: -8.899140357971191
    10. 'input' → logprob: -9.024140357971191

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02594120427966118
    2. ',' → logprob: -4.525941371917725
    3. '.readline' → logprob: -4.650941371917725
    4. '\n' → logprob: -7.025941371917725
    5. '.read' → logprob: -7.525941371917725
    6. '[' → logprob: -7.525941371917725
    7. '```' → logprob: -7.775941371917725
    8. 'newline' → logprob: -7.900941371917725
    9. '' → logprob: -8.150940895080566
    10. 'import' → logprob: -8.150940895080566

Token 8: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1908342838287354
    2. ',' → logprob: -1.5658342838287354
    3. '.readline' → logprob: -1.5658342838287354
    4. '\n' → logprob: -2.5658342838287354
    5. 'for' → logprob: -2.8158342838287354
    6. '
' → logprob: -3.1908342838287354
    7. '.read' → logprob: -3.9408342838287354
    8. '__' → logprob: -4.065834045410156
    9. '' → logprob: -4.690834045410156
    10. '.__' → logprob: -4.815834045410156

Token 9: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.42106330394744873
    2. 'os' → logprob: -2.2960634231567383
    3. ' sys' → logprob: -2.2960634231567383
    4. ' typing' → logprob: -2.9210634231567383
    5. 'sys' → logprob: -2.9210634231567383
    6. 'io' → logprob: -4.421063423156738
    7. ' io' → logprob: -4.671063423156738
    8. '__' → logprob: -5.171063423156738
    9. ' ' → logprob: -5.546063423156738
    10. 'typing' → logprob: -6.171063423156738

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02057996205985546
    2. 'import' → logprob: -3.8955800533294678
    3. '_import' → logprob: -11.020580291748047
    4. '	import' → logprob: -11.770580291748047
    5. ' ' → logprob: -12.395580291748047
    6. ' itertools' → logprob: -12.770580291748047
    7. '.import' → logprob: -13.770580291748047
    8. 'ertools' → logprob: -14.145580291748047
    9. '.' → logprob: -14.270580291748047
    10. '.groupby' → logprob: -14.520580291748047

Token 11: ' product' (ID: 1888)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.0396356582641602
    2. 'count' → logprob: -1.2896356582641602
    3. 'product' → logprob: -1.7896356582641602
    4. 'acc' → logprob: -3.53963565826416
    5. 'group' → logprob: -3.53963565826416
    6. 'chain' → logprob: -3.78963565826416
    7. ' permutations' → logprob: -3.78963565826416
    8. ' is' → logprob: -3.91463565826416
    9. 'com' → logprob: -3.91463565826416
    10. 'per' → logprob: -3.91463565826416

Token 12: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02799982950091362
    2. '(
' → logprob: -4.0279998779296875
    3. '\n' → logprob: -5.4029998779296875
    4. 'newline' → logprob: -6.5279998779296875
    5. '\' → logprob: -6.6529998779296875
    6. '\(' → logprob: -7.1529998779296875
    7. '(

' → logprob: -8.027999877929688
    8. '```' → logprob: -8.277999877929688
    9. '.' → logprob: -8.527999877929688
    10. 'import' → logprob: -9.027999877929688

Token 13: ' __' (ID: 2516)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.5675273537635803
    2. '__' → logprob: -2.1925272941589355
    3. 'product' → logprob: -2.1925272941589355
    4. ' prod' → logprob: -2.1925272941589355
    5. 'prod' → logprob: -2.8175272941589355
    6. ' __' → logprob: -3.6925272941589355
    7. '_product' → logprob: -4.6925272941589355
    8. '_prod' → logprob: -6.1925272941589355
    9. ' p' → logprob: -7.4425272941589355
    10. ' pr' → logprob: -8.442527770996094

Token 14: 'P' (ID: 47)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.5278584957122803
    2. 'pr' → logprob: -1.4028584957122803
    3. 'product' → logprob: -3.1528584957122803
    4. 'prd' → logprob: -3.1528584957122803
    5. 'pro' → logprob: -3.5278584957122803
    6. '_prod' → logprob: -3.7778584957122803
    7. '_pr' → logprob: -5.027858734130859
    8. 'pd' → logprob: -5.527858734130859
    9. '_product' → logprob: -5.777858734130859
    10. '_pro' → logprob: -6.402858734130859

Token 15: '

' (ID: 279)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.20253986120224
    2. 'rod' → logprob: -2.4525399208068848
    3. 'r' → logprob: -2.5775399208068848
    4. '.__' → logprob: -4.702539920806885
    5. '(' → logprob: -5.452539920806885
    6. '__' → logprob: -6.077539920806885
    7. '(__' → logprob: -6.577539920806885
    8. '.' → logprob: -6.952539920806885
    9. 'rodu' → logprob: -7.452539920806885
    10. '().__' → logprob: -7.577539920806885

Token 16: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.050850704312324524
    2. 'for' → logprob: -3.8008506298065186
    3. '_' → logprob: -4.550850868225098
    4. '__' → logprob: -5.675850868225098
    5. '(
' → logprob: -5.925850868225098
    6. 'def' → logprob: -5.925850868225098
    7. '.' → logprob: -6.300850868225098
    8. ',' → logprob: -6.675850868225098
    9. '\' → logprob: -7.300850868225098
    10. '\n' → logprob: -7.425850868225098

Token 17: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008603109046816826
    2. '#' → logprob: -5.008603096008301
    3. '_' → logprob: -7.383603096008301
    4. ' 
' → logprob: -7.633603096008301
    5. ' #' → logprob: -8.2586030960083
    6. ' 

' → logprob: -9.5086030960083
    7. ' _' → logprob: -9.7586030960083
    8. ' \' → logprob: -9.7586030960083
    9. '__' → logprob: -10.0086030960083
    10. '  ' → logprob: -10.3836030960083

Token 18: ''utilisateur' (ID: 140803)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.1931008100509644
    2. 'i' → logprob: -1.1931008100509644
    3. 'a' → logprob: -2.818100929260254
    4. 'e' → logprob: -2.818100929260254
    5. 'o' → logprob: -3.068100929260254
    6. 'ambda' → logprob: -3.068100929260254
    7. 'E' → logprob: -3.193100929260254
    8. 'O' → logprob: -3.568100929260254
    9. 'C' → logprob: -3.943100929260254
    10. 'A' → logprob: -4.630600929260254

Token 19: ' enthousiaste' (ID: 164951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8626000285148621
    2. 's' → logprob: -1.9876000881195068
    3. ''' → logprob: -3.112600088119507
    4. '#' → logprob: -3.362600088119507
    5. ' input' → logprob: -3.487600088119507
    6. ' n' → logprob: -3.612600088119507
    7. ':' → logprob: -3.737600088119507
    8. ' a' → logprob: -3.737600088119507
    9. 'input' → logprob: -3.862600088119507
    10. ')' → logprob: -3.862600088119507

Token 20: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7478516101837158
    2. '#' → logprob: -1.6228516101837158
    3. '_' → logprob: -2.247851610183716
    4. ':' → logprob: -3.622851610183716
    5. ',' → logprob: -3.622851610183716
    6. '<|end|>' → logprob: -3.622851610183716
    7. '<|end|>' → logprob: -3.747851610183716
    8. '__' → logprob: -3.872851610183716
    9. ''' → logprob: -4.122851371765137
    10. ')' → logprob: -4.372851371765137

Token 21: ' nom' (ID: 8080)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -1.2198686599731445
    2. ' code' → logprob: -1.4698686599731445
    3. 'Python' → logprob: -1.9698686599731445
    4. 'python' → logprob: -2.5948686599731445
    5. 'Code' → logprob: -3.2198686599731445
    6. '```' → logprob: -3.7823686599731445
    7. 'programme' → logprob: -4.0323686599731445
    8. '#' → logprob: -4.2198686599731445
    9. ' Python' → logprob: -4.5323686599731445
    10. 'a' → logprob: -4.8448686599731445

Token 22: 'ming' (ID: 9188)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1861027479171753
    2. ' d' → logprob: -1.6861027479171753
    3. 'd' → logprob: -2.186102867126465
    4. '__' → logprob: -2.311102867126465
    5. 'de' → logprob: -2.561102867126465
    6. '#' → logprob: -2.561102867126465
    7. '_' → logprob: -3.061102867126465
    8. ''' → logprob: -3.686102867126465
    9. '"' → logprob: -4.186102867126465
    10. '=' → logprob: -4.936102867126465

Token 23: ' crypt' (ID: 14204)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6421123147010803
    2. ' ' → logprob: -2.3921122550964355
    3. '#' → logprob: -2.6421122550964355
    4. '.' → logprob: -2.8921122550964355
    5. ',' → logprob: -3.1421122550964355
    6. '<|end|>' → logprob: -3.5171122550964355
    7. ' =' → logprob: -3.8921122550964355
    8. '=' → logprob: -3.8921122550964355
    9. 'n' → logprob: -3.8921122550964355
    10. 'u' → logprob: -4.0171122550964355

Token 24: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.054557353258132935
    2. 'ographique' → logprob: -4.4295573234558105
    3. 'e' → logprob: -4.6795573234558105
    4. 'o' → logprob: -4.8045573234558105
    5. '#' → logprob: -5.1795573234558105
    6. 'é' → logprob: -5.5545573234558105
    7. 'ic' → logprob: -5.8045573234558105
    8. 'ed' → logprob: -5.8045573234558105
    9. 'i' → logprob: -6.4295573234558105
    10. 'a' → logprob: -6.9295573234558105

Token 25: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5392232537269592
    2. '#' → logprob: -1.9142231941223145
    3. '__' → logprob: -1.9142231941223145
    4. ' ' → logprob: -3.9142231941223145
    5. ',' → logprob: -4.4142231941223145
    6. 'def' → logprob: -4.5392231941223145
    7. ':' → logprob: -4.6642231941223145
    8. '<|end|>' → logprob: -4.7892231941223145
    9. '...' → logprob: -5.0392231941223145
    10. 'a' → logprob: -5.0392231941223145

Token 26: ' techno' (ID: 138681)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.1582374572753906
    2. ' la' → logprob: -2.6582374572753906
    3. ' l' → logprob: -2.6582374572753906
    4. ' des' → logprob: -3.0957374572753906
    5. 'son' → logprob: -3.1582374572753906
    6. '_' → logprob: -3.2832374572753906
    7. 'le' → logprob: -3.2832374572753906
    8. 'des' → logprob: -3.3457374572753906
    9. '__' → logprob: -3.5957374572753906
    10. 'la' → logprob: -3.7832374572753906

Token 27: '-n' (ID: 5219)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10850432515144348
    2. '.' → logprob: -3.608504295349121
    3. ':' → logprob: -4.233504295349121
    4. '__' → logprob: -4.233504295349121
    5. '!' → logprob: -4.858504295349121
    6. '#' → logprob: -5.608504295349121
    7. 'n' → logprob: -5.608504295349121
    8. ' ' → logprob: -5.608504295349121
    9. 'import' → logprob: -6.233504295349121
    10. 'a' → logprob: -6.233504295349121

Token 28: 'ost' (ID: 564)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ique' → logprob: -1.9276649951934814
    2. 'm' → logprob: -2.3026649951934814
    3. '__' → logprob: -2.3026649951934814
    4. 'log' → logprob: -2.5526649951934814
    5. 'om' → logprob: -2.6776649951934814
    6. '_' → logprob: -2.6776649951934814
    7. 'o' → logprob: -2.9276649951934814
    8. 'um' → logprob: -3.0526649951934814
    9. 'i' → logprob: -3.1776649951934814
    10. '0' → logprob: -3.4276649951934814

Token 29: 'alg' (ID: 15258)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.05044081434607506
    2. 'ic' → logprob: -4.925440788269043
    3. 'e' → logprob: -5.050440788269043
    4. 'alg' → logprob: -5.050440788269043
    5. 'y' → logprob: -5.175440788269043
    6. 'a' → logprob: -5.550440788269043
    7. 'ale' → logprob: -5.675440788269043
    8. '#' → logprob: -6.050440788269043
    9. 'r' → logprob: -6.675440788269043
    10. 'èque' → logprob: -7.050440788269043

Token 30: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.015378267504274845
    2. 'ic' → logprob: -4.265378475189209
    3. 'iques' → logprob: -7.640378475189209
    4. 'is' → logprob: -9.76537799835205
    5. 'iq' → logprob: -9.76537799835205
    6. 'ik' → logprob: -9.76537799835205
    7. '```' → logprob: -9.76537799835205
    8. '#' → logprob: -10.07787799835205
    9. 'ïque' → logprob: -10.20287799835205
    10. 'IQUE' → logprob: -10.26537799835205

Token 31: '
' (ID: 198)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6891783475875854
    2. '#' → logprob: -1.1891783475875854
    3. '_' → logprob: -2.814178466796875
    4. ':' → logprob: -3.064178466796875
    5. '<|end|>' → logprob: -3.689178466796875
    6. '.' → logprob: -4.939178466796875
    7. 'def' → logprob: -4.939178466796875
    8. ',' → logprob: -4.939178466796875
    9. '<|end|>' → logprob: -5.064178466796875
    10. '#__' → logprob: -5.439178466796875

Token 32: 'Z' (ID: 57)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6332300901412964
    2. '#' → logprob: -1.5082300901412964
    3. '__' → logprob: -2.258230209350586
    4. 'def' → logprob: -2.758230209350586
    5. '_' → logprob: -3.383230209350586
    6. ',' → logprob: -4.383230209350586
    7. ' :' → logprob: -5.008230209350586
    8. '.' → logprob: -5.258230209350586
    9. ':
' → logprob: -5.758230209350586
    10. 'import' → logprob: -6.383230209350586

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5362937450408936
    2. '_' → logprob: -1.4112937450408936
    3. ' =' → logprob: -2.4112937450408936
    4. 'ip' → logprob: -3.6612937450408936
    5. 'Z' → logprob: -4.161293983459473
    6. 'IP' → logprob: -4.786293983459473
    7. 'I' → logprob: -5.036293983459473
    8. 'O' → logprob: -5.536293983459473
    9. '_=' → logprob: -5.661293983459473
    10. 'E' → logprob: -6.036293983459473

Token 34: ' lambda' (ID: 27871)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6875333786010742
    2. '__' → logprob: -1.1875333786010742
    3. ' ' → logprob: -3.437533378601074
    4. ' []' → logprob: -3.437533378601074
    5. '[]' → logprob: -3.562533378601074
    6. ' list' → logprob: -4.062533378601074
    7. '0' → logprob: -4.062533378601074
    8. '[' → logprob: -4.187533378601074
    9. ' [' → logprob: -4.437533378601074
    10. '1' → logprob: -5.312533378601074

Token 35: ' :' (ID: 712)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7467698454856873
    2. ' n' → logprob: -1.871769905090332
    3. ' s' → logprob: -2.496769905090332
    4. ' f' → logprob: -2.621769905090332
    5. 'x' → logprob: -3.246769905090332
    6. ' a' → logprob: -3.371769905090332
    7. ' :' → logprob: -3.996769905090332
    8. ' b' → logprob: -4.371769905090332
    9. ' p' → logprob: -4.371769905090332
    10. 'n' → logprob: -4.746769905090332

Token 36: ' [' (ID: 723)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0384052991867065
    2. ' __' → logprob: -1.7884052991867065
    3. ' map' → logprob: -1.7884052991867065
    4. 'map' → logprob: -3.038405418395996
    5. ' list' → logprob: -3.163405418395996
    6. '[' → logprob: -3.788405418395996
    7. ' int' → logprob: -3.788405418395996
    8. 'int' → logprob: -3.913405418395996
    9. '[]' → logprob: -4.163405418395996
    10. '(int' → logprob: -4.413405418395996

Token 37: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.74019855260849
    2. '__' → logprob: -1.8651986122131348
    3. 'map' → logprob: -2.1151986122131348
    4. '0' → logprob: -2.4901986122131348
    5. '[]' → logprob: -3.2401986122131348
    6. '(int' → logprob: -3.8651986122131348
    7. 'list' → logprob: -3.9901986122131348
    8. '*' → logprob: -4.240198612213135
    9. '[' → logprob: -4.240198612213135
    10. 'i' → logprob: -4.740198612213135

Token 38: '(w' (ID: 7420)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8686008453369141
    2. '(x' → logprob: -0.9936008453369141
    3. '(input' → logprob: -2.118600845336914
    4. '(' → logprob: -2.618600845336914
    5. '()]' → logprob: -5.368600845336914
    6. ']' → logprob: -5.618600845336914
    7. '(__' → logprob: -6.118600845336914
    8. '(s' → logprob: -6.368600845336914
    9. '(c' → logprob: -6.493600845336914
    10. '(_' → logprob: -6.868600845336914

Token 39: ')' (ID: 8)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.21442630887031555
    2. ')' → logprob: -1.9644262790679932
    3. '(x' → logprob: -3.589426279067993
    4. '()' → logprob: -4.214426517486572
    5. '(i' → logprob: -5.589426517486572
    6. '(input' → logprob: -6.589426517486572
    7. '(' → logprob: -6.589426517486572
    8. 'input' → logprob: -7.089426517486572
    9. '(s' → logprob: -7.339426517486572
    10. ' ())' → logprob: -8.089426040649414

Token 40: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6313045620918274
    2. '()' → logprob: -1.2563045024871826
    3. '(i' → logprob: -1.8813045024871826
    4. '()]' → logprob: -4.381304740905762
    5. '(' → logprob: -4.631304740905762
    6. 'for' → logprob: -6.381304740905762
    7. '(s' → logprob: -6.506304740905762
    8. '(input' → logprob: -6.756304740905762
    9. '(n' → logprob: -7.381304740905762
    10. '(c' → logprob: -7.631304740905762

Token 41: ' w' (ID: 286)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14437642693519592
    2. '__' → logprob: -2.019376516342163
    3. ' w' → logprob: -7.269376277923584
    4. ' input' → logprob: -7.519376277923584
    5. ' ' → logprob: -8.394376754760742
    6. '(__' → logprob: -10.519376754760742
    7. 'w' → logprob: -10.831876754760742
    8. ' stdin' → logprob: -11.019376754760742
    9. '___' → logprob: -11.081876754760742
    10. ' ' → logprob: -11.144376754760742

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02345685288310051
    2. 'in' → logprob: -3.7734568119049072
    3. ' ' → logprob: -8.898456573486328
    4. '(' → logprob: -11.523456573486328
    5. 'import' → logprob: -11.773456573486328
    6. '	in' → logprob: -11.898456573486328
    7. '  ' → logprob: -12.023456573486328
    8. '__' → logprob: -12.148456573486328
    9. '[' → logprob: -12.210956573486328
    10. ' __' → logprob: -12.710956573486328

Token 43: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04384167119860649
    2. ' __' → logprob: -3.168841600418091
    3. 'input' → logprob: -8.418841361999512
    4. '(__' → logprob: -8.793841361999512
    5. ' input' → logprob: -8.918841361999512
    6. 'str' → logprob: -9.668841361999512
    7. '#__' → logprob: -9.918841361999512
    8. '___' → logprob: -10.168841361999512
    9. '.__' → logprob: -10.543841361999512
    10. ' ' → logprob: -10.918841361999512

Token 44: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.00040886594797484577
    2. '_IN' → logprob: -8.500409126281738
    3. '__' → logprob: -9.250409126281738
    4. ' IN' → logprob: -9.625409126281738
    5. 'I' → logprob: -10.500409126281738
    6. '.IN' → logprob: -11.875409126281738
    7. '-IN' → logprob: -13.000409126281738
    8. '	IN' → logprob: -13.375409126281738
    9. ' ' → logprob: -15.062909126281738
    10. 'P' → logprob: -15.187909126281738

Token 45: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004325791262090206
    2. '.' → logprob: -5.754325866699219
    3. '().' → logprob: -7.379325866699219
    4. '.read' → logprob: -7.754325866699219
    5. '()]' → logprob: -10.379325866699219
    6. '()' → logprob: -10.754325866699219
    7. '.__' → logprob: -11.254325866699219
    8. '.readlines' → logprob: -11.754325866699219
    9. '().__' → logprob: -12.254325866699219
    10. '.]' → logprob: -12.504325866699219

Token 46: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.07547292858362198
    2. '()' → logprob: -2.825472831726074
    3. '().' → logprob: -4.325472831726074
    4. '()].' → logprob: -9.450472831726074
    5. '())' → logprob: -9.700472831726074
    6. '(' → logprob: -11.450472831726074
    7. '()][' → logprob: -11.450472831726074
    8. '()`' → logprob: -11.575472831726074
    9. ' ()' → logprob: -12.325472831726074
    10. ']()' → logprob: -12.450472831726074

Token 47: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2204897254705429
    2. 'split' → logprob: -1.720489740371704
    3. 'rstrip' → logprob: -3.970489740371704
    4. ' strip' → logprob: -11.095489501953125
    5. ' split' → logprob: -11.470489501953125
    6. '(split' → logprob: -13.595489501953125
    7. 's' → logprob: -13.595489501953125
    8. '().' → logprob: -13.845489501953125
    9. '()' → logprob: -14.220489501953125
    10. '(strip' → logprob: -14.345489501953125

Token 48: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.018050551414489746
    2. '(' → logprob: -4.268050670623779
    3. '()' → logprob: -5.893050670623779
    4. '('' → logprob: -6.893050670623779
    5. '())' → logprob: -9.518050193786621
    6. ']' → logprob: -11.518050193786621
    7. '()],' → logprob: -12.643050193786621
    8. '()]
' → logprob: -13.143050193786621
    9. '()}' → logprob: -13.143050193786621
    10. '("' → logprob: -13.268050193786621

Token 49: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4083755016326904
    2. '
' → logprob: -1.9083755016326904
    3. 'n' → logprob: -2.1583755016326904
    4. '\n' → logprob: -2.4083755016326904
    5. 'a' → logprob: -2.9083755016326904
    6. '(
' → logprob: -3.0333755016326904
    7. '#' → logprob: -3.1583755016326904
    8. 'x' → logprob: -3.4083755016326904
    9. 'def' → logprob: -3.6583755016326904
    10. '_' → logprob: -3.6583755016326904

Token 50: ',M' (ID: 54127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13626380264759064
    2. ',' → logprob: -2.136263847351074
    3. ',)' → logprob: -4.886263847351074
    4. ' )' → logprob: -7.261263847351074
    5. ',N' → logprob: -8.386263847351074
    6. ')=' → logprob: -8.636263847351074
    7. '),' → logprob: -8.886263847351074
    8. ',K' → logprob: -9.011263847351074
    9. ',M' → logprob: -9.636263847351074
    10. '=' → logprob: -9.761263847351074

Token 51: ',X' (ID: 83943)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017490806058049202
    2. ')=' → logprob: -6.751749038696289
    3. ',' → logprob: -7.876749038696289
    4. ',)' → logprob: -9.626749038696289
    5. ' )' → logprob: -9.751749038696289
    6. '=' → logprob: -10.001749038696289
    7. '),' → logprob: -11.001749038696289
    8. ' =' → logprob: -12.501749038696289
    9. '))' → logprob: -13.001749038696289
    10. ',N' → logprob: -13.626749038696289

Token 52: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01204911433160305
    2. ')=' → logprob: -5.137049198150635
    3. ',' → logprob: -5.512049198150635
    4. ',I' → logprob: -7.637049198150635
    5. ',P' → logprob: -8.387048721313477
    6. ',Q' → logprob: -8.762048721313477
    7. ',K' → logprob: -8.762048721313477
    8. ' )' → logprob: -8.887048721313477
    9. ',C' → logprob: -8.887048721313477
    10. ',R' → logprob: -9.137048721313477

Token 53: '*' (ID: 9)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.44368287920951843
    2. ' Y' → logprob: -2.568682909011841
    3. ' =' → logprob: -3.068682909011841
    4. 'A' → logprob: -3.068682909011841
    5. '=' → logprob: -3.318682909011841
    6. '*' → logprob: -3.568682909011841
    7. 'Q' → logprob: -4.068682670593262
    8. 'Z' → logprob: -4.193682670593262
    9. 'a' → logprob: -4.693682670593262
    10. ' A' → logprob: -4.818682670593262

Token 54: 'O' (ID: 46)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.9867055416107178
    2. ' Y' → logprob: -2.3617055416107178
    3. 'P' → logprob: -2.6117055416107178
    4. 'L' → logprob: -2.9867055416107178
    5. ' P' → logprob: -2.9867055416107178
    6. ' L' → logprob: -2.9867055416107178
    7. ' data' → logprob: -3.1117055416107178
    8. 'data' → logprob: -3.3617055416107178
    9. 'A' → logprob: -3.4867055416107178
    10. '__' → logprob: -3.4867055416107178

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5268364548683167
    2. ' =' → logprob: -0.9018364548683167
    3. 's' → logprob: -5.651836395263672
    4. ',' → logprob: -10.151836395263672
    5. ')' → logprob: -10.526836395263672
    6. '[' → logprob: -11.401836395263672
    7. ' ' → logprob: -11.401836395263672
    8. ']' → logprob: -11.401836395263672
    9. '=[]' → logprob: -11.401836395263672
    10. '=input' → logprob: -11.651836395263672

Token 56: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.347403347492218
    2. '__' → logprob: -1.8474032878875732
    3. ' __' → logprob: -2.9724032878875732
    4. 'map' → logprob: -3.4724032878875732
    5. ' map' → logprob: -3.5974032878875732
    6. ' [' → logprob: -4.222403526306152
    7. 'Z' → logprob: -5.347403526306152
    8. '(__' → logprob: -5.847403526306152
    9. ' Z' → logprob: -7.097403526306152
    10. '__[' → logprob: -7.347403526306152

Token 57: 'Z' (ID: 57)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.21975164115428925
    2. ' map' → logprob: -2.3447515964508057
    3. 'Z' → logprob: -3.0947515964508057
    4. '__' → logprob: -3.0947515964508057
    5. '[' → logprob: -5.094751834869385
    6. ' __' → logprob: -6.344751834869385
    7. ' Z' → logprob: -6.344751834869385
    8. 'list' → logprob: -7.969751834869385
    9. '(map' → logprob: -8.094751358032227
    10. '(__' → logprob: -8.844751358032227

Token 58: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6942004561424255
    2. '()]' → logprob: -0.6942004561424255
    3. ']()' → logprob: -7.31920051574707
    4. ' ()' → logprob: -8.69420051574707
    5. '()][' → logprob: -9.06920051574707
    6. '()]
' → logprob: -10.69420051574707
    7. '())' → logprob: -10.94420051574707
    8. ']' → logprob: -11.31920051574707
    9. '()],' → logprob: -11.69420051574707
    10. '()].' → logprob: -12.06920051574707

Token 59: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.027882056310772896
    2. '()' → logprob: -3.9028820991516113
    3. ']' → logprob: -5.152882099151611
    4. ']()' → logprob: -6.777882099151611
    5. '()][' → logprob: -8.902881622314453
    6. '()]
' → logprob: -9.277881622314453
    7. ')]' → logprob: -10.027881622314453
    8. '())' → logprob: -10.652881622314453
    9. '(' → logprob: -11.277881622314453
    10. '()],' → logprob: -11.277881622314453

Token 60: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06276143342256546
    2. ' _' → logprob: -2.9377615451812744
    3. ' range' → logprob: -4.937761306762695
    4. ' ' → logprob: -8.437761306762695
    5. ' in' → logprob: -8.437761306762695
    6. 'range' → logprob: -9.187761306762695
    7. ' i' → logprob: -9.437761306762695
    8. '0' → logprob: -11.062761306762695
    9. '__' → logprob: -11.687761306762695
    10. '_range' → logprob: -11.937761306762695

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0035550505854189396
    2. 'in' → logprob: -5.753554821014404
    3. ' ' → logprob: -8.503555297851562
    4. 'range' → logprob: -9.378555297851562
    5. ' range' → logprob: -9.378555297851562
    6. '  ' → logprob: -12.878555297851562
    7. ' _' → logprob: -13.878555297851562
    8. '(' → logprob: -15.003555297851562
    9. '<|end|>' → logprob: -15.253555297851562
    10. '_' → logprob: -15.753555297851562

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14318415522575378
    2. ' range' → logprob: -2.018184185028076
    3. '[' → logprob: -8.768183708190918
    4. ' ' → logprob: -9.393183708190918
    5. '(range' → logprob: -10.018183708190918
    6. '__' → logprob: -10.643183708190918
    7. 'r' → logprob: -10.643183708190918
    8. '	range' → logprob: -10.643183708190918
    9. '  ' → logprob: -11.268183708190918
    10. '```' → logprob: -11.518183708190918

Token 63: '(int' (ID: 2742)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.23479808866977692
    2. '(M' → logprob: -2.1097981929779053
    3. '(' → logprob: -2.4847981929779053
    4. '((' → logprob: -5.984797954559326
    5. '(int' → logprob: -7.359797954559326
    6. ' (' → logprob: -7.609797954559326
    7. '(len' → logprob: -7.609797954559326
    8. '(
' → logprob: -8.359798431396484
    9. 'M' → logprob: -9.859798431396484
    10. 'N' → logprob: -10.109798431396484

Token 64: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.531197190284729
    2. '(' → logprob: -1.156197190284729
    3. '(input' → logprob: -2.5311970710754395
    4. ' (__' → logprob: -5.0311970710754395
    5. ' (' → logprob: -5.2811970710754395
    6. '(
' → logprob: -7.0311970710754395
    7. '(stdin' → logprob: -7.0311970710754395
    8. '()' → logprob: -7.2811970710754395
    9. '('' → logprob: -7.5311970710754395
    10. ' ' → logprob: -7.9061970710754395

Token 65: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.0005972352810204029
    2. '_IN' → logprob: -8.25059700012207
    3. '(IN' → logprob: -8.75059700012207
    4. ' IN' → logprob: -9.12559700012207
    5. '__' → logprob: -10.25059700012207
    6. '.IN' → logprob: -11.75059700012207
    7. 'I' → logprob: -12.12559700012207
    8. ' ' → logprob: -12.62559700012207
    9. '	IN' → logprob: -12.75059700012207
    10. '()' → logprob: -13.12559700012207

Token 66: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0014560704585164785
    2. '()))' → logprob: -6.876456260681152
    3. '()' → logprob: -8.251456260681152
    4. '())' → logprob: -10.001456260681152
    5. ' readline' → logprob: -10.126456260681152
    6. '().' → logprob: -10.751456260681152
    7. '.' → logprob: -10.876456260681152
    8. '.read' → logprob: -11.126456260681152
    9. '())))' → logprob: -12.251456260681152
    10. '))' → logprob: -12.376456260681152

Token 67: '())' (ID: 3516)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.003936629742383957
    2. '()' → logprob: -6.128936767578125
    3. '())' → logprob: -6.878936767578125
    4. '().' → logprob: -7.753936767578125
    5. '())))' → logprob: -8.378936767578125
    6. '))' → logprob: -10.628936767578125
    7. '(' → logprob: -11.628936767578125
    8. '()
' → logprob: -11.753936767578125
    9. '()));' → logprob: -12.253936767578125
    10. '())).' → logprob: -12.628936767578125

Token 68: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0034284121356904507
    2. ')])' → logprob: -6.0034284591674805
    3. '+' → logprob: -7.5034284591674805
    4. ')' → logprob: -8.00342845916748
    5. '))' → logprob: -10.62842845916748
    6. '])]' → logprob: -11.37842845916748
    7. ')][' → logprob: -11.50342845916748
    8. ')]
' → logprob: -12.62842845916748
    9. ')],' → logprob: -12.75342845916748
    10. '):' → logprob: -13.12842845916748

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04383356496691704
    2. ' ' → logprob: -3.1688334941864014
    3. ' M' → logprob: -8.29383373260498
    4. 'M' → logprob: -8.66883373260498
    5. '0' → logprob: -8.79383373260498
    6. '(' → logprob: -9.41883373260498
    7. '  ' → logprob: -10.29383373260498
    8. ' N' → logprob: -10.66883373260498
    9. 'N' → logprob: -10.79383373260498
    10. '   ' → logprob: -10.79383373260498

Token 70: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020616286201402545
    2. ')])' → logprob: -8.750205993652344
    3. ')' → logprob: -10.625205993652344
    4. ')]
' → logprob: -12.125205993652344
    5. ']' → logprob: -12.250205993652344
    6. ' )' → logprob: -12.500205993652344
    7. '])]' → logprob: -12.625205993652344
    8. '])' → logprob: -13.375205993652344
    9. '))' → logprob: -13.750205993652344
    10. ')],' → logprob: -14.125205993652344

Token 71: 'P' (ID: 47)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07193680107593536
    2. 'for' → logprob: -4.57193660736084
    3. ')' → logprob: -4.82193660736084
    4. '#' → logprob: -4.94693660736084
    5. ' 
' → logprob: -5.19693660736084
    6. '\n' → logprob: -5.57193660736084
    7. ';' → logprob: -5.69693660736084
    8. '[
' → logprob: -5.69693660736084
    9. '[' → logprob: -6.07193660736084
    10. ']' → logprob: -6.44693660736084

Token 72: 'APER' (ID: 97170)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5784972906112671
    2. ' =' → logprob: -1.078497290611267
    3. '(' → logprob: -2.7034974098205566
    4. 'r' → logprob: -5.328497409820557
    5. ' ' → logprob: -5.703497409820557
    6. ',' → logprob: -5.953497409820557
    7. '()' → logprob: -6.078497409820557
    8. '.' → logprob: -6.203497409820557
    9. ')' → logprob: -6.203497409820557
    10. '_' → logprob: -6.203497409820557

Token 73: ' =' (ID: 314)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8851720690727234
    2. ' =' → logprob: -1.2601721286773682
    3. '=' → logprob: -1.8851721286773682
    4. '[' → logprob: -3.385172128677368
    5. '(' → logprob: -3.760172128677368
    6. ' ' → logprob: -3.885172128677368
    7. ']' → logprob: -4.135171890258789
    8. '_' → logprob: -4.135171890258789
    9. ')' → logprob: -4.260171890258789
    10. '.' → logprob: -4.885171890258789

Token 74: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8094863295555115
    2. ' [' → logprob: -1.4344863891601562
    3. '[[' → logprob: -2.3094863891601562
    4. '[]' → logprob: -2.9344863891601562
    5. 'list' → logprob: -3.5594863891601562
    6. ' [[' → logprob: -3.6844863891601562
    7. '[list' → logprob: -3.9344863891601562
    8. '__' → logprob: -4.184486389160156
    9. ' []' → logprob: -4.309486389160156
    10. ' list' → logprob: -4.309486389160156

Token 75: 'o' (ID: 78)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.3203675746917725
    2. 'Z' → logprob: -1.5703675746917725
    3. 'list' → logprob: -1.5703675746917725
    4. '[' → logprob: -1.6953675746917725
    5. ' [' → logprob: -3.8203675746917725
    6. '[*' → logprob: -3.8203675746917725
    7. ' list' → logprob: -4.320367813110352
    8. '*' → logprob: -4.820367813110352
    9. ' O' → logprob: -4.945367813110352
    10. '[int' → logprob: -5.070367813110352

Token 76: '[:]' (ID: 194237)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6955501437187195
    2. '[' → logprob: -0.9455501437187195
    3. '[:-' → logprob: -2.8205502033233643
    4. ']' → logprob: -3.9455502033233643
    5. '[:' → logprob: -4.445549964904785
    6. 'for' → logprob: -4.945549964904785
    7. '[:]' → logprob: -5.070549964904785
    8. '[::-' → logprob: -6.070549964904785
    9. ')' → logprob: -6.445549964904785
    10. '[-' → logprob: -6.945549964904785

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5876480937004089
    2. 'for' → logprob: -0.8376480937004089
    3. ']' → logprob: -4.587647914886475
    4. ')' → logprob: -7.712647914886475
    5. '[' → logprob: -7.712647914886475
    6. ' ' → logprob: -8.962648391723633
    7. '[:-' → logprob: -9.587648391723633
    8. '1' → logprob: -9.712648391723633
    9. '	for' → logprob: -9.712648391723633
    10. '  ' → logprob: -10.087648391723633

Token 78: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.07108025252819061
    2. ' o' → logprob: -2.696080207824707
    3. 'O' → logprob: -7.321080207824707
    4. '_' → logprob: -7.946080207824707
    5. '_o' → logprob: -9.696080207824707
    6. '	o' → logprob: -11.696080207824707
    7. ' O' → logprob: -11.821080207824707
    8. ' in' → logprob: -11.821080207824707
    9. '__' → logprob: -12.258580207824707
    10. ' _' → logprob: -12.321080207824707

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25202858448028564
    2. 'in' → logprob: -1.5020285844802856
    3. ' ' → logprob: -9.752028465270996
    4. 'o' → logprob: -11.627028465270996
    5. '_' → logprob: -12.002028465270996
    6. 'O' → logprob: -12.002028465270996
    7. '_in' → logprob: -12.564528465270996
    8. ')' → logprob: -13.314528465270996
    9. 's' → logprob: -13.627028465270996
    10. '  ' → logprob: -13.877028465270996

Token 80: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.008821140974760056
    2. ' O' → logprob: -4.7588210105896
    3. 'X' → logprob: -9.883821487426758
    4. 'M' → logprob: -10.008821487426758
    5. ' ' → logprob: -10.633821487426758
    6. 'Z' → logprob: -10.883821487426758
    7. 'P' → logprob: -11.258821487426758
    8. '[' → logprob: -11.258821487426758
    9. 'N' → logprob: -11.258821487426758
    10. '  ' → logprob: -12.133821487426758

Token 81: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001206423039548099
    2. ' ]' → logprob: -6.876206398010254
    3. ']
' → logprob: -8.751206398010254
    4. ']

' → logprob: -11.876206398010254
    5. ')]' → logprob: -12.626206398010254
    6. ']
' → logprob: -14.001206398010254
    7. '[' → logprob: -14.376206398010254
    8. ' ]
' → logprob: -14.376206398010254
    9. '];' → logprob: -14.751206398010254
    10. '])' → logprob: -15.001206398010254

Token 82: 'CERT' (ID: 143398)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1346544027328491
    2. 'for' → logprob: -1.6346544027328491
    3. '#' → logprob: -1.8846544027328491
    4. '[' → logprob: -1.8846544027328491
    5. '\n' → logprob: -3.5096545219421387
    6. ']' → logprob: -3.8846545219421387
    7. '.' → logprob: -4.009654521942139
    8. ')' → logprob: -4.259654521942139
    9. '<|end|>' → logprob: -4.384654521942139
    10. ' for' → logprob: -4.384654521942139

Token 83: 'IF' (ID: 4648)
  Prédit: 'AIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AIN' → logprob: -1.381273627281189
    2. 'IFY' → logprob: -1.381273627281189
    3. 'A' → logprob: -1.631273627281189
    4. 'I' → logprob: -2.3812737464904785
    5. 'IFIED' → logprob: -2.3812737464904785
    6. 'IFICATE' → logprob: -4.0062737464904785
    7. 'IFI' → logprob: -4.2562737464904785
    8. 'IF' → logprob: -4.5062737464904785
    9. '```' → logprob: -4.5062737464904785
    10. 'IFICATION' → logprob: -4.5062737464904785

Token 84: ' =' (ID: 314)
  Prédit: 'IC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IC' → logprob: -1.2780158519744873
    2. 'IES' → logprob: -1.2780158519744873
    3. 'I' → logprob: -1.7780158519744873
    4. 'IE' → logprob: -2.6530158519744873
    5. 'IER' → logprob: -2.9030158519744873
    6. '=' → logprob: -3.1530158519744873
    7. 'IED' → logprob: -3.5280158519744873
    8. 'Y' → logprob: -3.6530158519744873
    9. ' =' → logprob: -3.9030158519744873
    10. 'ICATION' → logprob: -4.653016090393066

Token 85: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5412761569023132
    2. '[]' → logprob: -1.291276216506958
    3. ' [' → logprob: -2.416276216506958
    4. ' []' → logprob: -3.416276216506958
    5. '0' → logprob: -4.916275978088379
    6. '[[' → logprob: -5.291275978088379
    7. ' ' → logprob: -6.416275978088379
    8. '[P' → logprob: -6.666275978088379
    9. ' [[' → logprob: -7.041275978088379
    10. '[o' → logprob: -7.541275978088379

Token 86: 'False' (ID: 8168)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3196102976799011
    2. '[' → logprob: -1.819610357284546
    3. 'o' → logprob: -3.194610357284546
    4. 'False' → logprob: -4.069610118865967
    5. '[o' → logprob: -4.194610118865967
    6. ' [' → logprob: -4.319610118865967
    7. '[M' → logprob: -4.819610118865967
    8. '[int' → logprob: -6.069610118865967
    9. ' ' → logprob: -6.069610118865967
    10. '[P' → logprob: -6.569610118865967

Token 87: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41473889350891113
    2. ']' → logprob: -1.2897388935089111
    3. ',' → logprob: -3.539738893508911
    4. ']*' → logprob: -4.039738655090332
    5. 'for' → logprob: -4.539738655090332
    6. ' ]' → logprob: -6.039738655090332
    7. ']+' → logprob: -6.289738655090332
    8. ')' → logprob: -6.664738655090332
    9. ')]' → logprob: -7.414738655090332
    10. ']*(' → logprob: -8.414738655090332

Token 88: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1729939579963684
    2. 'M' → logprob: -2.0479938983917236
    3. '(N' → logprob: -4.047994136810303
    4. '(M' → logprob: -5.547994136810303
    5. 'len' → logprob: -5.672994136810303
    6. ' N' → logprob: -6.172994136810303
    7. '(' → logprob: -7.047994136810303
    8. ' M' → logprob: -7.297994136810303
    9. ' (' → logprob: -7.922994136810303
    10. 'X' → logprob: -8.922993659973145

Token 89: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5787802934646606
    2. 'for' → logprob: -1.8287802934646606
    3. '
' → logprob: -2.203780174255371
    4. ')' → logprob: -2.453780174255371
    5. 'n' → logprob: -3.078780174255371
    6. ' 
' → logprob: -3.203780174255371
    7. '_' → logprob: -3.453780174255371
    8. 'i' → logprob: -3.578780174255371
    9. '<|end|>' → logprob: -3.578780174255371
    10. ' for' → logprob: -3.703780174255371

Token 90: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.048438940197229385
    2. 'for' → logprob: -3.5484390258789062
    3. '<|end|>' → logprob: -4.673439025878906
    4. ' 
' → logprob: -6.048439025878906
    5. ' for' → logprob: -6.048439025878906
    6. '\n' → logprob: -6.673439025878906
    7. '#' → logprob: -7.298439025878906
    8. '' → logprob: -7.548439025878906
    9. 'n' → logprob: -7.923439025878906
    10. ')' → logprob: -8.298439025878906

Token 91: ' __' (ID: 2516)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.2574889659881592
    2. ' check' → logprob: -1.6324889659881592
    3. ' main' → logprob: -1.6324889659881592
    4. ' solution' → logprob: -3.132488965988159
    5. ' is' → logprob: -3.382488965988159
    6. ' ' → logprob: -3.507488965988159
    7. ' find' → logprob: -3.757488965988159
    8. ' space' → logprob: -4.257489204406738
    9. ' test' → logprob: -4.382489204406738
    10. ' c' → logprob: -4.507489204406738

Token 92: 'PH' (ID: 20818)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.7742403745651245
    2. 'solve' → logprob: -2.149240493774414
    3. 'main' → logprob: -2.149240493774414
    4. 'c' → logprob: -2.649240493774414
    5. 's' → logprob: -3.149240493774414
    6. 'b' → logprob: -3.274240493774414
    7. 'f' → logprob: -3.274240493774414
    8. 'i' → logprob: -3.399240493774414
    9. 'r' → logprob: -3.649240493774414
    10. 'is' → logprob: -3.649240493774414

Token 93: 'ANT' (ID: 4769)
  Prédit: 'ON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ON' → logprob: -1.7183953523635864
    2. 'I' → logprob: -2.093395233154297
    3. 'O' → logprob: -2.218395233154297
    4. '(' → logprob: -2.218395233154297
    5. 'ASE' → logprob: -2.593395233154297
    6. '()' → logprob: -2.718395233154297
    7. 'A' → logprob: -3.343395233154297
    8. 'ONE' → logprob: -3.343395233154297
    9. 'L' → logprob: -3.718395233154297
    10. 'E' → logprob: -4.218395233154297

Token 94: 'OM' (ID: 2760)
  Prédit: 'OM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OM' → logprob: -0.010301235131919384
    2. 'O' → logprob: -4.635301113128662
    3. 'ON' → logprob: -9.01030158996582
    4. 'OMS' → logprob: -9.26030158996582
    5. 'OMEM' → logprob: -9.63530158996582
    6. 'OMB' → logprob: -10.01030158996582
    7. 'OME' → logprob: -10.26030158996582
    8. '0' → logprob: -10.38530158996582
    9. '```' → logprob: -10.51030158996582
    10. 'ОМ' → logprob: -11.01030158996582

Token 95: '(q' (ID: 21479)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3155589997768402
    2. '(' → logprob: -1.4405590295791626
    3. '()' → logprob: -4.190558910369873
    4. '(P' → logprob: -4.690558910369873
    5. '_' → logprob: -6.690558910369873
    6. ' ():' → logprob: -6.940558910369873
    7. '(N' → logprob: -7.065558910369873
    8. '(:' → logprob: -7.815558910369873
    9. '(Q' → logprob: -7.940558910369873
    10. '(C' → logprob: -8.065559387207031

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11509288847446442
    2. ',' → logprob: -2.6150929927825928
    3. ')' → logprob: -3.4900929927825928
    4. ',q' → logprob: -6.365092754364014
    5. '):
' → logprob: -8.115093231201172
    6. ':' → logprob: -8.115093231201172
    7. ',P' → logprob: -8.615093231201172
    8. ',k' → logprob: -8.615093231201172
    9. ',p' → logprob: -8.615093231201172
    10. ' ):' → logprob: -8.740093231201172

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5275067090988159
    2. ' ' → logprob: -1.152506709098816
    3. '    ' → logprob: -3.7775068283081055
    4. ' 
' → logprob: -4.5275068283081055
    5. 'r' → logprob: -4.7775068283081055
    6. ' r' → logprob: -4.9025068283081055
    7. ' return' → logprob: -5.0275068283081055
    8. ' for' → logprob: -5.2775068283081055
    9. '    
' → logprob: -5.6525068283081055
    10. ' if' → logprob: -5.9025068283081055

Token 98: ' T' (ID: 353)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.723124623298645
    2. ' r' → logprob: -1.973124623298645
    3. ' for' → logprob: -2.8481245040893555
    4. '   ' → logprob: -2.9731245040893555
    5. ' return' → logprob: -3.4731245040893555
    6. ' res' → logprob: -3.4731245040893555
    7. 'for' → logprob: -3.7231245040893555
    8. 'return' → logprob: -3.8481245040893555
    9. 'C' → logprob: -4.0981245040893555
    10. 'c' → logprob: -4.2231245040893555

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6519069075584412
    2. ' =' → logprob: -0.7769069075584412
    3. ',' → logprob: -4.901906967163086
    4. '=[]' → logprob: -5.276906967163086
    5. '=q' → logprob: -7.401906967163086
    6. '=[]
' → logprob: -7.526906967163086
    7. ')' → logprob: -7.651906967163086
    8. ' ' → logprob: -7.651906967163086
    9. '[' → logprob: -7.776906967163086
    10. '   ' → logprob: -7.901906967163086

Token 100: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3606216609477997
    2. '[' → logprob: -2.110621690750122
    3. '0' → logprob: -2.610621690750122
    4. ' []' → logprob: -3.610621690750122
    5. '[q' → logprob: -3.860621690750122
    6. ' [' → logprob: -4.610621452331543
    7. 'len' → logprob: -4.860621452331543
    8. '[]
' → logprob: -4.860621452331543
    9. 'q' → logprob: -5.110621452331543
    10. 'sum' → logprob: -5.360621452331543

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4749424159526825
    2. 'False' → logprob: -1.3499424457550049
    3. 'o' → logprob: -3.849942445755005
    4. 'q' → logprob: -4.474942207336426
    5. 'x' → logprob: -4.724942207336426
    6. 'CERT' → logprob: -4.724942207336426
    7. 'sum' → logprob: -4.974942207336426
    8. ']' → logprob: -5.099942207336426
    9. '(' → logprob: -5.349942207336426
    10. 'True' → logprob: -5.349942207336426

Token 102: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.007464524358510971
    2. ']' → logprob: -5.757464408874512
    3. ']*(' → logprob: -5.757464408874512
    4. 'for' → logprob: -7.632464408874512
    5. ' for' → logprob: -8.007464408874512
    6. ']+' → logprob: -8.257464408874512
    7. ',' → logprob: -11.132464408874512
    8. ' ]' → logprob: -11.757464408874512
    9. '0' → logprob: -12.382464408874512
    10. ']+=' → logprob: -12.382464408874512

Token 103: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.009403170086443424
    2. 'N' → logprob: -4.884403228759766
    3. 'X' → logprob: -6.759403228759766
    4. ' M' → logprob: -8.509403228759766
    5. '(M' → logprob: -8.884403228759766
    6. 'q' → logprob: -9.009403228759766
    7. 'len' → logprob: -9.509403228759766
    8. '(N' → logprob: -11.259403228759766
    9. '10' → logprob: -11.759403228759766
    10. '(' → logprob: -11.884403228759766

Token 104: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08471264690160751
    2. ' for' → logprob: -3.3347127437591553
    3. '<|end|>' → logprob: -4.209712505340576
    4. '   ' → logprob: -4.709712505340576
    5. 'for' → logprob: -4.709712505340576
    6. '	for' → logprob: -5.084712505340576
    7. '    
' → logprob: -6.459712505340576
    8. '	
' → logprob: -6.709712505340576
    9. '' → logprob: -7.084712505340576
    10. '
' → logprob: -7.459712505340576

Token 105: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7322756052017212
    2. '   ' → logprob: -1.2322756052017212
    3. '	for' → logprob: -2.3572754859924316
    4. 'for' → logprob: -2.7322754859924316
    5. '<|end|>' → logprob: -3.3572754859924316
    6. '
' → logprob: -4.607275485992432
    7. '    
' → logprob: -4.732275485992432
    8. '	
' → logprob: -4.982275485992432
    9. ' ' → logprob: -5.857275485992432
    10. ' 
' → logprob: -6.857275485992432

Token 106: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7014864087104797
    2. 'for' (adapté à ' for') → logprob: -0.7014864087104797
    3. '   ' → logprob: -5.201486587524414
    4. '	for' → logprob: -6.326486587524414
    5. '
' → logprob: -7.201486587524414
    6. ' ' → logprob: -8.951486587524414
    7. '    
' → logprob: -9.826486587524414
    8. 'd' → logprob: -11.201486587524414
    9. 'r' → logprob: -11.451486587524414
    10. '	
' → logprob: -11.451486587524414

Token 107: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6739962100982666
    2. ' i' → logprob: -0.7989962100982666
    3. 'j' → logprob: -4.9239959716796875
    4. ' j' → logprob: -5.0489959716796875
    5. 'x' → logprob: -5.1739959716796875
    6. 'k' → logprob: -5.9239959716796875
    7. 'c' → logprob: -6.0489959716796875
    8. 'q' → logprob: -6.2989959716796875
    9. ' x' → logprob: -6.2989959716796875
    10. ' c' → logprob: -6.4239959716796875

Token 108: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10174975544214249
    2. 'in' → logprob: -2.3517496585845947
    3. ',' → logprob: -7.726749897003174
    4. ',v' → logprob: -8.101749420166016
    5. ',i' → logprob: -8.101749420166016
    6. ' i' → logprob: -9.351749420166016
    7. ',q' → logprob: -9.601749420166016
    8. ' ,' → logprob: -9.726749420166016
    9. ',j' → logprob: -9.726749420166016
    10. 'i' → logprob: -9.726749420166016

Token 109: ' s' (ID: 265)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2270451784133911
    2. ' c' → logprob: -1.8520451784133911
    3. 'v' → logprob: -1.9770451784133911
    4. 'x' → logprob: -2.4770450592041016
    5. ' v' → logprob: -2.8520450592041016
    6. 'p' → logprob: -3.2270450592041016
    7. ' p' → logprob: -3.6020450592041016
    8. 'q' → logprob: -3.7270450592041016
    9. 'w' → logprob: -3.7270450592041016
    10. 'i' → logprob: -3.7270450592041016

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22626054286956787
    2. 'in' → logprob: -1.6012605428695679
    3. ',' → logprob: -8.2262601852417
    4. ' ' → logprob: -8.6012601852417
    5. 'inp' → logprob: -10.2262601852417
    6. 'ince' → logprob: -10.6012601852417
    7. 'n' → logprob: -10.6012601852417
    8. 's' → logprob: -10.7262601852417
    9. '   ' → logprob: -10.7262601852417
    10. '	in' → logprob: -10.8512601852417

Token 111: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.360296368598938
    2. 'q' → logprob: -1.610296368598938
    3. 'zip' → logprob: -2.6102962493896484
    4. ' enumerate' → logprob: -3.9852962493896484
    5. 'range' → logprob: -5.485296249389648
    6. 'O' → logprob: -6.110296249389648
    7. 'P' → logprob: -6.360296249389648
    8. '__' → logprob: -6.610296249389648
    9. ' zip' → logprob: -7.610296249389648
    10. 'filter' → logprob: -9.110296249389648

Token 112: '(C' (ID: 5559)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.7595841884613037
    2. 'q' → logprob: -1.0095841884613037
    3. '(q' → logprob: -2.7595841884613037
    4. '(O' → logprob: -3.2595841884613037
    5. 'P' → logprob: -4.384584426879883
    6. 'Q' → logprob: -4.634584426879883
    7. '(P' → logprob: -4.759584426879883
    8. 'range' → logprob: -5.009584426879883
    9. ' O' → logprob: -5.134584426879883
    10. 'CERT' → logprob: -5.259584426879883

Token 113: 'ERT' (ID: 6495)
  Prédit: 'ERT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ERT' → logprob: -0.00014799882774241269
    2. 'ER' → logprob: -10.000147819519043
    3. 'E' → logprob: -10.125147819519043
    4. '{' → logprob: -10.625147819519043
    5. '[' → logprob: -11.000147819519043
    6. '(' → logprob: -11.625147819519043
    7. ')' → logprob: -13.000147819519043
    8. '
' → logprob: -13.500147819519043
    9. '=' → logprob: -14.000147819519043
    10. 'O' → logprob: -14.250147819519043

Token 114: 'IF' (ID: 4648)
  Prédit: 'IF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IF' → logprob: -1.7432603272027336e-06
    2. 'I' → logprob: -14.625001907348633
    3. 'IFI' → logprob: -14.875001907348633
    4. 'IR' → logprob: -15.375001907348633
    5. 'IFY' → logprob: -15.750001907348633
    6. 'if' → logprob: -15.750001907348633
    7. 'IP' → logprob: -16.500001907348633
    8. '   ' → logprob: -16.750001907348633
    9. ' IF' → logprob: -17.125001907348633
    10. '
' → logprob: -17.500001907348633

Token 115: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023523930460214615
    2. '):' → logprob: -3.773524045944214
    3. ')' → logprob: -9.273524284362793
    4. '):
' → logprob: -9.398524284362793
    5. '   ' → logprob: -10.398524284362793
    6. ' ):
' → logprob: -11.023524284362793
    7. '):

' → logprob: -11.023524284362793
    8. '[:' → logprob: -11.398524284362793
    9. ':
' → logprob: -12.148524284362793
    10. '[' → logprob: -12.398524284362793

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026356272399425507
    2. ' if' → logprob: -4.026356220245361
    3. '<|end|>' → logprob: -4.901356220245361
    4. '   ' → logprob: -8.15135669708252
    5. '<|end|>' → logprob: -9.27635669708252
    6. 'if' → logprob: -9.40135669708252
    7. ' ' → logprob: -9.90135669708252
    8. '    ' → logprob: -10.15135669708252
    9. ',' → logprob: -10.27635669708252
    10. '
' → logprob: -10.77635669708252

Token 117: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1995256543159485
    2. '<|end|>' → logprob: -2.1995255947113037
    3. '       ' → logprob: -3.1995255947113037
    4. '
' → logprob: -4.699525833129883
    5. ' ' → logprob: -4.699525833129883
    6. 'if' (adapté à ' if') → logprob: -4.824525833129883
    7. '   ' → logprob: -6.574525833129883
    8. '<|end|>' → logprob: -7.699525833129883
    9. '           ' → logprob: -7.949525833129883
    10. ' 
' → logprob: -8.324525833129883

Token 118: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.020631344988942146
    2. 's' → logprob: -3.8956313133239746
    3. ' not' → logprob: -9.520631790161133
    4. '   ' → logprob: -12.395631790161133
    5. ' ' → logprob: -12.645631790161133
    6. 'not' → logprob: -12.770631790161133
    7. ' ' → logprob: -12.770631790161133
    8. '(s' → logprob: -13.895631790161133
    9. '	s' → logprob: -14.145631790161133
    10. '    ' → logprob: -14.520631790161133

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029973438009619713
    2. ':
' → logprob: -3.5299735069274902
    3. '==' → logprob: -8.904973030090332
    4. ':return' → logprob: -10.529973030090332
    5. ' :' → logprob: -10.654973030090332
    6. '):' → logprob: -12.154973030090332
    7. '   ' → logprob: -12.404973030090332
    8. ' ==' → logprob: -13.029973030090332
    9. ' and' → logprob: -13.029973030090332
    10. ':

' → logprob: -13.154973030090332

Token 120: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0184744596481323
    2. ':' → logprob: -1.2684744596481323
    3. '       ' → logprob: -1.6434744596481323
    4. '           ' → logprob: -2.143474578857422
    5. ':
' → logprob: -3.393474578857422
    6. ',' → logprob: -5.143474578857422
    7. ' :' → logprob: -6.643474578857422
    8. ' :
' → logprob: -7.143474578857422
    9. '<|end|>' → logprob: -7.268474578857422
    10. ' ' → logprob: -7.268474578857422

Token 121: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07346495240926743
    2. 'for' (adapté à ' for') → logprob: -3.198464870452881
    3. '           ' → logprob: -3.698464870452881
    4. '   ' → logprob: -6.073464870452881
    5. '       ' → logprob: -6.323464870452881
    6. ' o' → logprob: -8.448465347290039
    7. ' t' → logprob: -8.948465347290039
    8. '
' → logprob: -9.448465347290039
    9. 't' → logprob: -9.573465347290039
    10. ' ' → logprob: -9.698465347290039

Token 122: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.430768758058548
    2. 'i' → logprob: -1.6807687282562256
    3. ' j' → logprob: -2.1807687282562256
    4. ' i' → logprob: -3.0557687282562256
    5. 'l' → logprob: -7.055768966674805
    6. ' range' → logprob: -7.180768966674805
    7. 'range' → logprob: -7.805768966674805
    8. 'x' → logprob: -8.055768966674805
    9. 'm' → logprob: -8.055768966674805
    10. 'c' → logprob: -8.430768966674805

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016231782734394073
    2. 'in' → logprob: -4.141232013702393
    3. ',' → logprob: -8.641231536865234
    4. '<|end|>' → logprob: -12.016231536865234
    5. ' ' → logprob: -12.141231536865234
    6. '   ' → logprob: -12.766231536865234
    7. '	in' → logprob: -13.391231536865234
    8. ' ,' → logprob: -13.766231536865234
    9. 'In' → logprob: -14.766231536865234
    10. 'import' → logprob: -14.891231536865234

Token 124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889121770858765
    2. ' range' → logprob: -2.5788912773132324
    3. '	range' → logprob: -13.953890800476074
    4. '(range' → logprob: -15.578890800476074
    5. ' ' → logprob: -15.953890800476074
    6. '   ' → logprob: -16.32889175415039
    7. ' xrange' → logprob: -16.57889175415039
    8. '
' → logprob: -16.95389175415039
    9. '  ' → logprob: -17.95389175415039
    10. 'rang' → logprob: -18.57889175415039

Token 125: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -7.350386295001954e-05
    2. 'M' → logprob: -9.750073432922363
    3. ' M' → logprob: -12.125073432922363
    4. ' (' → logprob: -13.000073432922363
    5. '	M' → logprob: -13.000073432922363
    6. '   ' → logprob: -13.125073432922363
    7. '(' → logprob: -13.375073432922363
    8. '(len' → logprob: -14.500073432922363
    9. 'len' → logprob: -14.750073432922363
    10. '(m' → logprob: -15.125073432922363

Token 126: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06232123449444771
    2. '):' → logprob: -2.812321186065674
    3. '               ' → logprob: -8.562321662902832
    4. '           ' → logprob: -9.062321662902832
    5. '):
' → logprob: -11.062321662902832
    6. ' ):
' → logprob: -11.687321662902832
    7. '       ' → logprob: -12.062321662902832
    8. ')' → logprob: -12.187321662902832
    9. '+' → logprob: -13.187321662902832
    10. '):

' → logprob: -13.437321662902832

Token 127: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006744616664946079
    2. ' T' → logprob: -5.131744384765625
    3. '           ' → logprob: -8.631744384765625
    4. '	           ' → logprob: -8.756744384765625
    5. 'T' → logprob: -9.256744384765625
    6. '<|end|>' → logprob: -9.631744384765625
    7. ',' → logprob: -9.756744384765625
    8. ' ' → logprob: -10.131744384765625
    9. '              ' → logprob: -10.131744384765625
    10. '                ' → logprob: -10.256744384765625

Token 128: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.6618897914886475
    2. '                   ' → logprob: -0.7868897914886475
    3. '                       ' → logprob: -4.786890029907227
    4. 'T' (adapté à ' T') → logprob: -5.286890029907227
    5. '                    ' → logprob: -5.661890029907227
    6. '               ' → logprob: -5.786890029907227
    7. '                ' → logprob: -5.786890029907227
    8. ' ' → logprob: -6.411890029907227
    9. ' 
' → logprob: -6.661890029907227
    10. '                    
' → logprob: -7.161890029907227

Token 129: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0018800891702994704
    2. '[k' → logprob: -6.751880168914795
    3. '+=' → logprob: -7.376880168914795
    4. ' +=' → logprob: -9.876879692077637
    5. ']+=' → logprob: -11.126879692077637
    6. ' [' → logprob: -11.376879692077637
    7. '   ' → logprob: -13.501879692077637
    8. '[' → logprob: -13.626879692077637
    9. '[q' → logprob: -14.126879692077637
    10. '               ' → logprob: -14.376879692077637

Token 130: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2566392719745636
    2. ' +=' → logprob: -1.6316392421722412
    3. ']+=' → logprob: -3.506639242172241
    4. ')' → logprob: -7.75663948059082
    5. ']' → logprob: -8.38163948059082
    6. '+' → logprob: -9.75663948059082
    7. ' )' → logprob: -11.88163948059082
    8. '   ' → logprob: -12.38163948059082
    9. '+=(' → logprob: -12.38163948059082
    10. '    ' → logprob: -12.75663948059082

Token 131: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.061976537108421326
    2. ' +=' → logprob: -2.811976432800293
    3. ']+=' → logprob: -11.936976432800293
    4. '+=(' → logprob: -13.686976432800293
    5. '+' → logprob: -14.186976432800293
    6. '=' → logprob: -15.311976432800293
    7. '   ' → logprob: -16.06197738647461
    8. '    ' → logprob: -16.43697738647461
    9. '+='' → logprob: -16.68697738647461
    10. '+="' → logprob: -17.31197738647461

Token 132: ' PAPER' (ID: 158746)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.0236288383603096
    2. 'P' → logprob: -3.7736289501190186
    3. ' O' → logprob: -7.8986287117004395
    4. '   ' → logprob: -12.148629188537598
    5. ' P' → logprob: -13.273629188537598
    6. '	O' → logprob: -13.273629188537598
    7. 'o' → logprob: -14.023629188537598
    8. 'Q' → logprob: -14.898629188537598
    9. '  ' → logprob: -15.148629188537598
    10. ' ' → logprob: -15.273629188537598

Token 133: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.28236743807792664
    2. 'k' → logprob: -1.407367467880249
    3. '[q' → logprob: -6.90736722946167
    4. 'q' → logprob: -8.657367706298828
    5. '[' → logprob: -10.532367706298828
    6. ' k' → logprob: -11.657367706298828
    7. '	k' → logprob: -14.032367706298828
    8. 'O' → logprob: -14.157367706298828
    9. '][' → logprob: -14.282367706298828
    10. '
' → logprob: -14.532367706298828

Token 134: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00022201328829396516
    2. ' ][' → logprob: -8.625222206115723
    3. '[j' → logprob: -10.500222206115723
    4. ']' → logprob: -11.375222206115723
    5. '"][' → logprob: -13.875222206115723
    6. '   ' → logprob: -14.000222206115723
    7. ''][' → logprob: -14.750222206115723
    8. '[' → logprob: -15.750222206115723
    9. 'j' → logprob: -16.250221252441406
    10. ',j' → logprob: -16.500221252441406

Token 135: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00018244501552544534
    2. ' j' → logprob: -8.625182151794434
    3. ']' → logprob: -14.250182151794434
    4. '
' → logprob: -14.500182151794434
    5. '[j' → logprob: -14.875182151794434
    6. '   ' → logprob: -15.125182151794434
    7. 'i' → logprob: -15.250182151794434
    8. 'k' → logprob: -15.500182151794434
    9. '][' → logprob: -15.625182151794434
    10. '	j' → logprob: -16.62518310546875

Token 136: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.053153153508901596
    2. ' ]' → logprob: -3.6781530380249023
    3. '<|end|>' → logprob: -3.6781530380249023
    4. '<|end|>' → logprob: -7.303153038024902
    5. ']
' → logprob: -8.303153038024902
    6. ')' → logprob: -9.428153038024902
    7. '
' → logprob: -10.303153038024902
    8. ']>' → logprob: -10.428153038024902
    9. '   ' → logprob: -10.803153038024902
    10. ']*' → logprob: -11.178153038024902

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002933942887466401
    2. '2' → logprob: -8.875293731689453
    3. ' ' → logprob: -8.875293731689453
    4. '3' → logprob: -12.000293731689453
    5. '   ' → logprob: -13.375293731689453
    6. '4' → logprob: -13.625293731689453
    7. 'X' → logprob: -13.687793731689453
    8. '
' → logprob: -14.062793731689453
    9. '5' → logprob: -14.750293731689453
    10. '```' → logprob: -14.875293731689453

Token 138: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02896854467689991
    2. ' ]' → logprob: -3.778968572616577
    3. '<|end|>' → logprob: -5.278968334197998
    4. ')' → logprob: -8.278968811035156
    5. ']
' → logprob: -9.028968811035156
    6. '<|end|>' → logprob: -9.528968811035156
    7. ')]' → logprob: -10.028968811035156
    8. ' ' → logprob: -10.903968811035156
    9. '   ' → logprob: -11.528968811035156
    10. '
' → logprob: -11.653968811035156

Token 139: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18283212184906006
    2. '   ' → logprob: -2.0578322410583496
    3. '    
' → logprob: -4.30783224105835
    4. ' 
' → logprob: -4.80783224105835
    5. '  
' → logprob: -4.93283224105835
    6. 'return' → logprob: -5.93283224105835
    7. ' return' → logprob: -6.30783224105835
    8. '	return' → logprob: -6.55783224105835
    9. '   
' → logprob: -6.68283224105835
    10. '\n' → logprob: -6.93283224105835

Token 140: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.42552468180656433
    2. ' return' → logprob: -1.4255247116088867
    3. '   ' → logprob: -2.5505247116088867
    4. '
' → logprob: -4.550524711608887
    5. '	return' → logprob: -4.675524711608887
    6. ' ' → logprob: -5.675524711608887
    7. '       ' → logprob: -7.050524711608887
    8. '<|end|>' → logprob: -7.175524711608887
    9. ' 
' → logprob: -7.425524711608887
    10. '    
' → logprob: -7.550524711608887

Token 141: ' all' (ID: 722)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0024854077491909266
    2. ' T' → logprob: -6.002485275268555
    3. '[T' → logprob: -12.127485275268555
    4. 'tuple' → logprob: -12.877485275268555
    5. ' ' → logprob: -14.627485275268555
    6. 't' → logprob: -15.252485275268555
    7. ' tuple' → logprob: -15.377485275268555
    8. '[' → logprob: -15.502485275268555
    9. '(T' → logprob: -15.502485275268555
    10. ' ' → logprob: -15.752485275268555

Token 142: '(t' (ID: 2025)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.6901360750198364
    2. '(t' → logprob: -1.1901360750198364
    3. '(x' → logprob: -1.6901360750198364
    4. '((' → logprob: -5.815135955810547
    5. '(v' → logprob: -6.065135955810547
    6. '(' → logprob: -6.065135955810547
    7. '(c' → logprob: -7.440135955810547
    8. '([' → logprob: -7.440135955810547
    9. '(i' → logprob: -8.690135955810547
    10. '(val' → logprob: -9.065135955810547

Token 143: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.35368263721466064
    2. '>=' → logprob: -2.228682518005371
    3. ' <=' → logprob: -2.353682518005371
    4. ' >' → logprob: -2.728682518005371
    5. '>' → logprob: -4.103682518005371
    6. '<=' → logprob: -4.353682518005371
    7. '[j' → logprob: -9.228682518005371
    8. '==' → logprob: -9.353682518005371
    9. ' ==' → logprob: -9.353682518005371
    10. ' <' → logprob: -9.478682518005371

Token 144: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0022558800410479307
    2. 'x' → logprob: -6.377255916595459
    3. 'q' → logprob: -8.3772554397583
    4. 'P' → logprob: -8.8772554397583
    5. ' X' → logprob: -9.3772554397583
    6. 'v' → logprob: -10.3772554397583
    7. 'Q' → logprob: -10.8772554397583
    8. 't' → logprob: -12.0022554397583
    9. 'T' → logprob: -12.1272554397583
    10. '0' → logprob: -12.1272554397583

Token 145: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10027191042900085
    2. 'for' → logprob: -2.3502719402313232
    3. ')' → logprob: -10.100272178649902
    4. ' ' → logprob: -10.850272178649902
    5. '	for' → logprob: -13.225272178649902
    6. '   ' → logprob: -13.600272178649902
    7. '  ' → logprob: -14.475272178649902
    8. '
' → logprob: -14.850272178649902
    9. '    ' → logprob: -15.850272178649902
    10. ' )' → logprob: -15.975272178649902

Token 146: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029750484973192215
    2. ' t' → logprob: -3.5297505855560303
    3. '	t' → logprob: -17.65475082397461
    4. '

' → logprob: -18.40475082397461
    5. '
' → logprob: -18.52975082397461
    6. ')t' → logprob: -18.52975082397461
    7. ' ' → logprob: -18.65475082397461
    8. ' ' → logprob: -19.15475082397461
    9. '`t' → logprob: -19.27975082397461
    10. '(t' → logprob: -19.27975082397461

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5783486366271973
    2. 'in' → logprob: -0.8283486366271973
    3. 't' → logprob: -6.078348636627197
    4. ' t' → logprob: -9.203348159790039
    5. ')' → logprob: -12.578348159790039
    6. 'i' → logprob: -12.953348159790039
    7. ' ' → logprob: -13.078348159790039
    8. 'n' → logprob: -13.828348159790039
    9. '	in' → logprob: -14.328348159790039
    10. 's' → logprob: -14.578348159790039

Token 148: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0031777136027812958
    2. ' T' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.003177642822266
    4. '(T' → logprob: -17.628177642822266
    5. ')' → logprob: -18.753177642822266
    6. '	T' → logprob: -19.128177642822266
    7. 'range' → logprob: -19.253177642822266
    8. 't' → logprob: -19.378177642822266
    9. '[T' → logprob: -19.503177642822266
    10. ' ' → logprob: -19.753177642822266

Token 149: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010616567305987701
    2. ' )' → logprob: -9.750105857849121
    3. ')
' → logprob: -10.125105857849121
    4. '),' → logprob: -13.250105857849121
    5. ')return' → logprob: -13.250105857849121
    6. '   ' → logprob: -14.375105857849121
    7. '))' → logprob: -14.625105857849121
    8. ')

' → logprob: -14.875105857849121
    9. ')}' → logprob: -15.125105857849121
    10. ')+' → logprob: -15.125105857849121

Token 150: 'RES' (ID: 10002)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31440305709838867
    2. '
' → logprob: -2.1894030570983887
    3. '_' → logprob: -2.9394030570983887
    4. '#' → logprob: -3.0644030570983887
    5. ')' → logprob: -3.9394030570983887
    6. '<|end|>' → logprob: -4.439403057098389
    7. 'for' → logprob: -5.814403057098389
    8. ':' → logprob: -5.814403057098389
    9. '_
' → logprob: -5.939403057098389
    10. ' 
' → logprob: -6.314403057098389

Token 151: ' =' (ID: 314)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.49962761998176575
    2. 'ULT' → logprob: -1.1246275901794434
    3. 'U' → logprob: -2.8746275901794434
    4. '=' → logprob: -5.624627590179443
    5. ' =' → logprob: -5.874627590179443
    6. 'OLVE' → logprob: -6.624627590179443
    7. 'UL' → logprob: -6.749627590179443
    8. 'UM' → logprob: -6.999627590179443
    9. 'UME' → logprob: -7.374627590179443
    10. ':' → logprob: -8.124628067016602

Token 152: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9066041111946106
    2. 'False' → logprob: -0.9066041111946106
    3. '[]' → logprob: -2.031604051589966
    4. 'sum' → logprob: -3.781604051589966
    5. '[' → logprob: -3.906604051589966
    6. '[]
' → logprob: -5.781604290008545
    7. 'set' → logprob: -6.031604290008545
    8. 'lambda' → logprob: -6.281604290008545
    9. '[N' → logprob: -6.531604290008545
    10. 'len' → logprob: -6.656604290008545

Token 153: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.11526276171207428
    2. ''' → logprob: -2.240262746810913
    3. ''in' → logprob: -6.615262985229492
    4. ''s' → logprob: -7.740262985229492
    5. 'inf' → logprob: -8.740262985229492
    6. '"' → logprob: -8.865262985229492
    7. '("' → logprob: -9.115262985229492
    8. ''S' → logprob: -9.490262985229492
    9. 'INF' → logprob: -10.615262985229492
    10. '='' → logprob: -11.240262985229492

Token 154: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00035918003413826227
    2. ''' → logprob: -8.500359535217285
    3. '-inf' → logprob: -9.625359535217285
    4. '"' → logprob: -9.750359535217285
    5. 'info' → logprob: -11.500359535217285
    6. 'INF' → logprob: -12.000359535217285
    7. ''in' → logprob: -12.125359535217285
    8. 'in' → logprob: -12.375359535217285
    9. 'Inf' → logprob: -13.375359535217285
    10. '-' → logprob: -14.125359535217285

Token 155: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10057434439659119
    2. ')' → logprob: -2.350574254989624
    3. ' )
' → logprob: -8.475574493408203
    4. ')
' → logprob: -9.475574493408203
    5. ' )' → logprob: -10.475574493408203
    6. '
' → logprob: -10.600574493408203
    7. ')

' → logprob: -10.725574493408203
    8. 'def' → logprob: -13.350574493408203
    9. 'if' → logprob: -13.475574493408203
    10. 'for' → logprob: -13.725574493408203

Token 156: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002234437270089984
    2. '
' → logprob: -8.875223159790039
    3. 'def' → logprob: -9.625223159790039
    4. ' for' → logprob: -11.625223159790039
    5. 'A' → logprob: -13.875223159790039
    6. 'F' → logprob: -14.000223159790039
    7. 'C' → logprob: -14.125223159790039
    8. 'stack' → logprob: -14.125223159790039
    9. 'S' → logprob: -14.250223159790039
    10. '    
' → logprob: -14.750223159790039

Token 157: ' _' (ID: 1175)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3130490481853485
    2. '__' → logprob: -2.063049077987671
    3. ' main' → logprob: -3.063049077987671
    4. ' solve' → logprob: -3.813049077987671
    5. ' DFS' → logprob: -4.188048839569092
    6. ' dfs' → logprob: -4.438048839569092
    7. ' ' → logprob: -4.938048839569092
    8. ' back' → logprob: -5.625548839569092
    9. ' SOL' → logprob: -5.625548839569092
    10. ' D' → logprob: -5.750548839569092

Token 158: 'PATH' (ID: 30824)
  Prédit: 'PH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PH' → logprob: -0.9674996137619019
    2. 'SOL' → logprob: -1.9674996137619019
    3. 'MAIN' → logprob: -2.0924997329711914
    4. 'solve' → logprob: -2.4674997329711914
    5. 'S' → logprob: -3.0924997329711914
    6. 'main' → logprob: -3.5924997329711914
    7. 'C' → logprob: -3.7174997329711914
    8. 'P' → logprob: -3.9674997329711914
    9. 'SEARCH' → logprob: -4.342499732971191
    10. 'BR' → logprob: -4.342499732971191

Token 159: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5672848224639893
    2. '(q' → logprob: -1.5672848224639893
    3. '(P' → logprob: -1.9422848224639893
    4. '(C' → logprob: -2.5672848224639893
    5. '(PATH' → logprob: -2.9422848224639893
    6. '(s' → logprob: -3.1922848224639893
    7. '(N' → logprob: -3.5672848224639893
    8. '(_' → logprob: -3.6922848224639893
    9. '(D' → logprob: -3.8172848224639893
    10. '(Q' → logprob: -3.9422848224639893

Token 160: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025110090151429176
    2. ',n' → logprob: -3.9001100063323975
    3. ',i' → logprob: -6.525110244750977
    4. ',k' → logprob: -6.775110244750977
    5. ' ,' → logprob: -7.400110244750977
    6. ',c' → logprob: -8.025110244750977
    7. ',j' → logprob: -8.775110244750977
    8. ',q' → logprob: -8.900110244750977
    9. ',p' → logprob: -9.150110244750977
    10. ',s' → logprob: -9.150110244750977

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0839669331908226
    2. ' if' → logprob: -2.5839669704437256
    3. ' global' → logprob: -5.8339667320251465
    4. '	if' → logprob: -6.5839667320251465
    5. '	global' → logprob: -8.083967208862305
    6. 'if' → logprob: -8.208967208862305
    7. 'global' → logprob: -9.208967208862305
    8. '   ' → logprob: -10.583967208862305
    9. ' ' → logprob: -11.083967208862305
    10. '    
' → logprob: -11.833967208862305

Token 162: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.010675313882529736
    2. '   ' → logprob: -5.010675430297852
    3. 'if' → logprob: -6.010675430297852
    4. ' global' → logprob: -6.510675430297852
    5. ' if' → logprob: -11.885675430297852
    6. '	global' → logprob: -12.385675430297852
    7. ' ' → logprob: -14.385675430297852
    8. '
' → logprob: -15.385675430297852
    9. '  ' → logprob: -15.885675430297852
    10. 'gl' → logprob: -16.63567543029785

Token 163: ' RES' (ID: 21804)
  Prédit: 'RES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RES' → logprob: -0.0011827271664515138
    2. ' RES' → logprob: -6.751182556152344
    3. 'i' → logprob: -12.376182556152344
    4. ' ' → logprob: -13.001182556152344
    5. 'CERT' → logprob: -13.251182556152344
    6. 'P' → logprob: -13.876182556152344
    7. 'RESULT' → logprob: -13.876182556152344
    8. '   ' → logprob: -14.126182556152344
    9. 'R' → logprob: -14.876182556152344
    10. ' i' → logprob: -15.251182556152344

Token 164: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0069956122897565365
    2. ',' → logprob: -5.881995677947998
    3. ':' → logprob: -6.506995677947998
    4. '
' → logprob: -6.631995677947998
    5. ' if' → logprob: -7.756995677947998
    6. '    
' → logprob: -7.881995677947998
    7. ':
' → logprob: -7.881995677947998
    8. 'if' → logprob: -9.50699520111084
    9. ',
' → logprob: -9.88199520111084
    10. '<|end|>' → logprob: -11.00699520111084

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6381961703300476
    2. ' if' → logprob: -1.1381962299346924
    3. 'if' → logprob: -1.8881962299346924
    4. ' ' → logprob: -12.513195991516113
    5. '	if' → logprob: -12.763195991516113
    6. '   ' → logprob: -12.888195991516113
    7. '
' → logprob: -13.513195991516113
    8. '    
' → logprob: -13.763195991516113
    9. ' global' → logprob: -14.263195991516113
    10. '  ' → logprob: -14.263195991516113

Token 166: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00046296243090182543
    2. '   ' → logprob: -7.750463008880615
    3. ' if' → logprob: -10.375462532043457
    4. 'global' → logprob: -14.875462532043457
    5. 'for' → logprob: -15.250462532043457
    6. ' ' → logprob: -15.500462532043457
    7. 'return' → logprob: -15.875462532043457
    8. '```' → logprob: -16.625463485717773
    9. '  ' → logprob: -16.875463485717773
    10. '	if' → logprob: -17.000463485717773

Token 167: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.142756387591362
    2. 'i' → logprob: -2.017756462097168
    3. 'CERT' → logprob: -10.767756462097168
    4. '	i' → logprob: -11.017756462097168
    5. ' CERT' → logprob: -11.642756462097168
    6. ' ' → logprob: -11.642756462097168
    7. '   ' → logprob: -12.017756462097168
    8. ' ' → logprob: -12.392756462097168
    9. '(i' → logprob: -12.767756462097168
    10. '_i' → logprob: -13.017756462097168

Token 168: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43415141105651855
    2. '==' → logprob: -1.4341514110565186
    3. ' >=' → logprob: -2.4341514110565186
    4. '>=' → logprob: -3.6841514110565186
    5. ' >' → logprob: -7.059151649475098
    6. '>' → logprob: -8.934151649475098
    7. ' ' → logprob: -10.559151649475098
    8. ' <' → logprob: -10.684151649475098
    9. '=' → logprob: -11.059151649475098
    10. '<' → logprob: -12.059151649475098

Token 169: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005114490049891174
    2. 'len' → logprob: -7.625511646270752
    3. ' N' → logprob: -10.750511169433594
    4. 'n' → logprob: -13.625511169433594
    5. ' len' → logprob: -14.875511169433594
    6. '   ' → logprob: -15.250511169433594
    7. ' ' → logprob: -15.500511169433594
    8. '  ' → logprob: -17.625511169433594
    9. '	N' → logprob: -18.125511169433594
    10. '(N' → logprob: -18.375511169433594

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031116284430027008
    2. ':
' → logprob: -3.531116247177124
    3. ':return' → logprob: -6.781116485595703
    4. ' or' → logprob: -8.406116485595703
    5. '   ' → logprob: -12.906116485595703
    6. ':
' → logprob: -13.406116485595703
    7. ' :' → logprob: -13.656116485595703
    8. '):' → logprob: -15.406116485595703
    9. ' :
' → logprob: -15.406116485595703
    10. 'or' → logprob: -15.531116485595703

Token 171: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01360095851123333
    2. ' return' → logprob: -5.138600826263428
    3. '       ' → logprob: -5.388600826263428
    4. 'return' → logprob: -5.888600826263428
    5. ' if' → logprob: -9.013601303100586
    6. ':return' → logprob: -9.013601303100586
    7. 'if' → logprob: -11.013601303100586
    8. ':
' → logprob: -11.138601303100586
    9. ':' → logprob: -11.138601303100586
    10. '	return' → logprob: -12.138601303100586

Token 172: ' price' (ID: 3911)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16333453357219696
    2. '   ' → logprob: -2.538334608078003
    3. '       ' → logprob: -3.163334608078003
    4. ' if' → logprob: -3.663334608078003
    5. 'return' → logprob: -6.163334369659424
    6. '
' → logprob: -6.663334369659424
    7. ' return' → logprob: -9.038334846496582
    8. 'global' → logprob: -9.413334846496582
    9. '	if' → logprob: -10.038334846496582
    10. 'res' → logprob: -10.163334846496582

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3422706425189972
    2. '=' → logprob: -1.3422706127166748
    3. ')' → logprob: -5.592270851135254
    4. ' ' → logprob: -5.717270851135254
    5. 'return' → logprob: -5.842270851135254
    6. '   ' → logprob: -5.967270851135254
    7. '
' → logprob: -6.592270851135254
    8. ',' → logprob: -6.592270851135254
    9. 'eturn' → logprob: -6.592270851135254
    10. '  ' → logprob: -6.717270851135254

Token 174: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01696912571787834
    2. '0' → logprob: -4.266969203948975
    3. ' sum' → logprob: -5.891969203948975
    4. '   ' → logprob: -10.766968727111816
    5. ' ' → logprob: -11.141968727111816
    6. '=sum' → logprob: -13.766968727111816
    7. '(sum' → logprob: -14.266968727111816
    8. '	sum' → logprob: -14.391968727111816
    9. '  ' → logprob: -14.641968727111816
    10. '_sum' → logprob: -14.766968727111816

Token 175: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.21660619974136353
    2. '(O' → logprob: -1.9666061401367188
    3. '(C' → logprob: -3.2166061401367188
    4. '(o' → logprob: -4.716606140136719
    5. '([' → logprob: -5.716606140136719
    6. '(' → logprob: -6.591606140136719
    7. 'O' → logprob: -7.591606140136719
    8. '((' → logprob: -8.216606140136719
    9. 'P' → logprob: -9.341606140136719
    10. '(p' → logprob: -9.466606140136719

Token 176: 'APER' (ID: 97170)
  Prédit: '(O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(O' → logprob: -0.43477150797843933
    2. '([' → logprob: -1.4347715377807617
    3. '(C' → logprob: -3.3097715377807617
    4. '(o' → logprob: -3.4347715377807617
    5. 'O' → logprob: -4.059771537780762
    6. '(P' → logprob: -4.559771537780762
    7. '[' → logprob: -5.434771537780762
    8. '[C' → logprob: -5.559771537780762
    9. '(' → logprob: -6.434771537780762
    10. '[P' → logprob: -6.434771537780762

Token 177: '[w' (ID: 94341)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.005015171132981777
    2. '[j' → logprob: -5.8800153732299805
    3. '[i' → logprob: -6.1300153732299805
    4. '[_' → logprob: -11.13001537322998
    5. '[' → logprob: -12.13001537322998
    6. '[x' → logprob: -12.38001537322998
    7. '[c' → logprob: -13.50501537322998
    8. '[q' → logprob: -13.63001537322998
    9. 'k' → logprob: -14.25501537322998
    10. '[n' → logprob: -14.38001537322998

Token 178: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002558561391197145
    2. '[' → logprob: -8.625255584716797
    3. ' ][' → logprob: -10.500255584716797
    4. '0' → logprob: -11.250255584716797
    5. ']' → logprob: -11.500255584716797
    6. 'if' → logprob: -12.500255584716797
    7. 'w' → logprob: -12.750255584716797
    8. 'for' → logprob: -12.875255584716797
    9. 'and' → logprob: -13.250255584716797
    10. '   ' → logprob: -13.500255584716797

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.625003814697266
    4. '
' → logprob: -16.125003814697266
    5. '[' → logprob: -16.500003814697266
    6. '       ' → logprob: -16.750003814697266
    7. '           ' → logprob: -17.687503814697266
    8. '00' → logprob: -17.875003814697266
    9. '۰' → logprob: -18.187503814697266
    10. ']' → logprob: -18.312503814697266

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.555654105497524e-05
    2. ' ]' → logprob: -9.75009536743164
    3. 'for' → logprob: -10.75009536743164
    4. ']*' → logprob: -11.75009536743164
    5. ']
' → logprob: -12.62509536743164
    6. '])' → logprob: -14.12509536743164
    7. ' for' → logprob: -14.25009536743164
    8. '       ' → logprob: -14.75009536743164
    9. '   ' → logprob: -14.87509536743164
    10. 'if' → logprob: -15.12509536743164

Token 181: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3160109519958496
    2. 'for' → logprob: -1.3160109519958496
    3. ')' → logprob: -6.06601095199585
    4. '       ' → logprob: -8.691011428833008
    5. 'if' → logprob: -9.566011428833008
    6. '
' → logprob: -9.816011428833008
    7. '           ' → logprob: -10.316011428833008
    8. '   ' → logprob: -10.941011428833008
    9. '	for' → logprob: -10.941011428833008
    10. ' if' → logprob: -11.066011428833008

Token 182: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0036596914287656546
    2. ' w' → logprob: -5.628659725189209
    3. 'range' → logprob: -10.37865924835205
    4. ' range' → logprob: -11.25365924835205
    5. 'k' → logprob: -11.37865924835205
    6. 'i' → logprob: -13.00365924835205
    7. 'idx' → logprob: -14.75365924835205
    8. ',w' → logprob: -14.75365924835205
    9. ' ' → logprob: -15.25365924835205
    10. '
' → logprob: -16.128660202026367

Token 183: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31842556595802307
    2. 'in' → logprob: -1.4434255361557007
    3. ',' → logprob: -3.3184256553649902
    4. 'range' → logprob: -8.693425178527832
    5. ',_' → logprob: -9.318425178527832
    6. ' ' → logprob: -9.943425178527832
    7. ',s' → logprob: -11.193425178527832
    8. 'if' → logprob: -11.318425178527832
    9. ' range' → logprob: -11.818425178527832
    10. '   ' → logprob: -12.068425178527832

Token 184: ' flag' (ID: 9641)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26650241017341614
    2. ' s' → logprob: -1.5165023803710938
    3. 'v' → logprob: -5.641502380371094
    4. 'b' → logprob: -6.141502380371094
    5. 'w' → logprob: -6.641502380371094
    6. 'c' → logprob: -6.891502380371094
    7. 'x' → logprob: -6.891502380371094
    8. 'cert' → logprob: -7.516502380371094
    9. 'f' → logprob: -7.766502380371094
    10. 'p' → logprob: -8.016502380371094

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20157960057258606
    2. 'in' → logprob: -1.7015795707702637
    3. 's' → logprob: -10.201580047607422
    4. '
' → logprob: -10.451580047607422
    5. ')' → logprob: -10.951580047607422
    6. 'd' → logprob: -11.201580047607422
    7. ',' → logprob: -11.451580047607422
    8. ' ' → logprob: -11.576580047607422
    9. 'enumer' → logprob: -12.201580047607422
    10. '   ' → logprob: -12.451580047607422

Token 186: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014164448715746403
    2. ' enumerate' → logprob: -4.264164447784424
    3. 'zip' → logprob: -14.014164924621582
    4. 'enum' → logprob: -16.264163970947266
    5. 'en' → logprob: -17.514163970947266
    6. '
' → logprob: -17.514163970947266
    7. ' zip' → logprob: -17.889163970947266
    8. 'Enumer' → logprob: -18.639163970947266
    9. '```' → logprob: -19.014163970947266
    10. '(en' → logprob: -20.014163970947266

Token 187: '(C' (ID: 5559)
  Prédit: 'CERT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CERT' → logprob: -0.0023731542751193047
    2. '(C' → logprob: -7.002373218536377
    3. 'enumer' → logprob: -7.002373218536377
    4. ' CERT' → logprob: -7.877373218536377
    5. 'CER' → logprob: -9.502372741699219
    6. 'C' → logprob: -9.752372741699219
    7. ' enumerate' → logprob: -11.002372741699219
    8. '_CERT' → logprob: -11.877372741699219
    9. 'range' → logprob: -12.252372741699219
    10. ')' → logprob: -12.752372741699219

Token 188: 'ERT' (ID: 6495)
  Prédit: 'ERT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ERT' → logprob: -0.000169332604855299
    2. 'E' → logprob: -9.37516975402832
    3. 'ER' → logprob: -9.87516975402832
    4. 'RT' → logprob: -10.62516975402832
    5. '{' → logprob: -13.25016975402832
    6. 'ERTA' → logprob: -13.25016975402832
    7. 'CERT' → logprob: -13.25016975402832
    8. 'S' → logprob: -14.62516975402832
    9. ')' → logprob: -14.75016975402832
    10. 'EPT' → logprob: -15.12516975402832

Token 189: 'IF' (ID: 4648)
  Prédit: 'IF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IF' → logprob: -6.265633419388905e-05
    2. 'if' → logprob: -10.500062942504883
    3. 'flag' → logprob: -10.625062942504883
    4. 'Flag' → logprob: -13.500062942504883
    5. 'IP' → logprob: -13.625062942504883
    6. 'IR' → logprob: -14.000062942504883
    7. 'I' → logprob: -14.375062942504883
    8. 'иф' → logprob: -14.500062942504883
    9. 'IFn' → logprob: -14.500062942504883
    10. 'IFY' → logprob: -14.625062942504883

Token 190: ')' (ID: 8)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6212444305419922
    2. ' if' → logprob: -0.8712444305419922
    3. ')' → logprob: -3.121244430541992
    4. ' ' → logprob: -8.996244430541992
    5. '   ' → logprob: -10.621244430541992
    6. ' )' → logprob: -10.746244430541992
    7. '	if' → logprob: -11.996244430541992
    8. '       ' → logprob: -12.621244430541992
    9. '  ' → logprob: -12.746244430541992
    10. '           ' → logprob: -13.371244430541992

Token 191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4741531312465668
    2. ' if' → logprob: -0.9741531610488892
    3. '       ' → logprob: -10.349153518676758
    4. ')' → logprob: -10.599153518676758
    5. '           ' → logprob: -11.099153518676758
    6. '               ' → logprob: -13.849153518676758
    7. '   ' → logprob: -14.474153518676758
    8. '        ' → logprob: -14.474153518676758
    9. ' ' → logprob: -14.724153518676758
    10. '	if' → logprob: -14.974153518676758

Token 192: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0031806828919798136
    2. ' flag' → logprob: -5.753180503845215
    3. '	flag' → logprob: -13.753180503845215
    4. '   ' → logprob: -14.378180503845215
    5. '(flag' → logprob: -14.753180503845215
    6. ' ' → logprob: -14.878180503845215
    7. 'fl' → logprob: -15.503180503845215
    8. 'f' → logprob: -15.753180503845215
    9. '  ' → logprob: -16.00318145751953
    10. '
' → logprob: -17.25318145751953

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48758986592292786
    2. ' if' → logprob: -1.2375898361206055
    3. 'if' → logprob: -2.7375898361206055
    4. ')
' → logprob: -3.9875898361206055
    5. ' and' → logprob: -4.6125898361206055
    6. ');' → logprob: -6.6125898361206055
    7. 'and' → logprob: -6.9875898361206055
    8. ' )' → logprob: -8.487589836120605
    9. '):' → logprob: -10.737589836120605
    10. ' )
' → logprob: -10.862589836120605

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011410413309931755
    2. '
' → logprob: -5.386410236358643
    3. '<|end|>' → logprob: -5.761410236358643
    4. ')' → logprob: -6.136410236358643
    5. '   ' → logprob: -7.386410236358643
    6. ')
' → logprob: -8.2614107131958
    7. '<|end|>' → logprob: -8.8864107131958
    8. '):
' → logprob: -8.8864107131958
    9. ',' → logprob: -9.3864107131958
    10. ':
' → logprob: -10.1364107131958

Token 195: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009214084595441818
    2. '       ' → logprob: -4.884213924407959
    3. ' if' → logprob: -7.134213924407959
    4. '   ' → logprob: -7.259213924407959
    5. 'global' → logprob: -9.384214401245117
    6. '
' → logprob: -11.884214401245117
    7. '	if' → logprob: -12.134214401245117
    8. 'return' → logprob: -12.884214401245117
    9. ' ' → logprob: -13.134214401245117
    10. '           ' → logprob: -13.384214401245117

Token 196: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03549366444349289
    2. 'price' → logprob: -3.6604936122894287
    3. ' __' → logprob: -5.035493850708008
    4. ' price' → logprob: -6.285493850708008
    5. '_PRICE' → logprob: -8.785493850708008
    6. '_P' → logprob: -9.285493850708008
    7. 'all' → logprob: -9.410493850708008
    8. ' ' → logprob: -9.535493850708008
    9. '(price' → logprob: -9.660493850708008
    10. '_PH' → logprob: -9.660493850708008

Token 197: 'PH' (ID: 20818)
  Prédit: 'PH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PH' → logprob: -5.013994814362377e-05
    2. '_PH' → logprob: -10.00005054473877
    3. ' PH' → logprob: -13.00005054473877
    4. 'PATH' → logprob: -13.12505054473877
    5. '_P' → logprob: -16.250049591064453
    6. 'P' → logprob: -16.375049591064453
    7. '(P' → logprob: -16.625049591064453
    8. '.P' → logprob: -16.875049591064453
    9. 'PHA' → logprob: -17.625049591064453
    10. '

' → logprob: -17.750049591064453

Token 198: 'ANT' (ID: 4769)
  Prédit: 'ANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANT' → logprob: -0.00014442270912695676
    2. 'antom' → logprob: -9.125144004821777
    3. 'ONT' → logprob: -11.375144004821777
    4. 'A' → logprob: -11.625144004821777
    5. 'ANTO' → logprob: -12.500144004821777
    6. 'T' → logprob: -13.250144004821777
    7. 'AN' → logprob: -13.375144004821777
    8. '
' → logprob: -13.500144004821777
    9. 'ATOM' → logprob: -14.250144004821777
    10. '{' → logprob: -14.500144004821777

Token 199: 'OM' (ID: 2760)
  Prédit: 'OM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OM' → logprob: -3.8889261304575484e-06
    2. 'om' → logprob: -13.000003814697266
    3. 'ON' → logprob: -14.000003814697266
    4. 'T' → logprob: -15.250003814697266
    5. 'tom' → logprob: -16.000003814697266
    6. 'ОМ' → logprob: -16.000003814697266
    7. 'M' → logprob: -16.625003814697266
    8. 'OMEM' → logprob: -16.875003814697266
    9. '```' → logprob: -17.000003814697266
    10. 'def' → logprob: -17.250003814697266

Token 200: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.5977419018745422
    2. '():' → logprob: -0.8477419018745422
    3. '()' → logprob: -4.222742080688477
    4. '(' → logprob: -5.222742080688477
    5. '(True' → logprob: -6.597742080688477
    6. '():
' → logprob: -10.347742080688477
    7. '(()' → logprob: -10.597742080688477
    8. '(False' → logprob: -11.097742080688477
    9. ' ():' → logprob: -11.347742080688477
    10. '((' → logprob: -11.472742080688477

Token 201: 'ERT' (ID: 6495)
  Prédit: 'ERT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ERT' → logprob: -0.10226645320653915
    2. '):
' → logprob: -3.102266550064087
    3. ')' → logprob: -3.727266550064087
    4. '):' → logprob: -4.602266311645508
    5. 'ert' → logprob: -5.227266311645508
    6. 'E' → logprob: -5.852266311645508
    7. 'ER' → logprob: -5.977266311645508
    8. '):

' → logprob: -6.352266311645508
    9. '(' → logprob: -7.352266311645508
    10. '):
' → logprob: -8.289766311645508

Token 202: 'IF' (ID: 4648)
  Prédit: 'IF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IF' → logprob: -0.0002516839886084199
    2. 'F' → logprob: -9.125251770019531
    3. 'if' → logprob: -9.750251770019531
    4. 'IC' → logprob: -10.500251770019531
    5. ')' → logprob: -10.875251770019531
    6. 'IFY' → logprob: -12.125251770019531
    7. 'IFIER' → logprob: -12.375251770019531
    8. 'IT' → logprob: -12.500251770019531
    9. 'IFIED' → logprob: -12.875251770019531
    10. 'EF' → logprob: -13.125251770019531

Token 203: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16099639236927032
    2. '):' → logprob: -1.910996437072754
    3. '):
' → logprob: -7.785996437072754
    4. ')' → logprob: -8.035996437072754
    5. ')==' → logprob: -11.410996437072754
    6. ' ):
' → logprob: -11.410996437072754
    7. '):

' → logprob: -12.035996437072754
    8. ' ):' → logprob: -13.410996437072754
    9. '   ' → logprob: -14.035996437072754
    10. ')):
' → logprob: -14.285996437072754

Token 204: ' 
' (ID: 793)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022937096655368805
    2. ' if' → logprob: -6.127293586730957
    3. 'if' → logprob: -10.377293586730957
    4. '       ' → logprob: -10.877293586730957
    5. '
' → logprob: -11.002293586730957
    6. '   ' → logprob: -11.127293586730957
    7. '               ' → logprob: -11.252293586730957
    8. '	       ' → logprob: -12.377293586730957
    9. '          ' → logprob: -12.627293586730957
    10. ',' → logprob: -13.627293586730957

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005717843305319548
    2. ' if' → logprob: -5.380717754364014
    3. '       ' → logprob: -7.755717754364014
    4. '   ' → logprob: -8.380718231201172
    5. 'if' → logprob: -8.380718231201172
    6. '               ' → logprob: -9.255718231201172
    7. '
' → logprob: -9.505718231201172
    8. '	       ' → logprob: -11.755718231201172
    9. '          ' → logprob: -12.005718231201172
    10. ',' → logprob: -12.880718231201172

Token 206: ' RES' (ID: 21804)
  Prédit: 'RES'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RES' (adapté à ' RES') → logprob: -0.05698132514953613
    2. 'if' → logprob: -3.431981325149536
    3. '           ' → logprob: -3.931981325149536
    4. '   ' → logprob: -6.181981086730957
    5. '       ' → logprob: -7.181981086730957
    6. '               ' → logprob: -8.181981086730957
    7. ' RES' → logprob: -8.431981086730957
    8. ' if' → logprob: -9.681981086730957
    9. 'global' → logprob: -10.431981086730957
    10. '
' → logprob: -11.181981086730957

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269339919090271
    2. '=' → logprob: -2.126934051513672
    3. '=min' → logprob: -12.251934051513672
    4. '   ' → logprob: -13.751934051513672
    5. '    ' → logprob: -17.376934051513672
    6. 'min' → logprob: -17.876934051513672
    7. ' ' → logprob: -18.251934051513672
    8. '=max' → logprob: -18.376934051513672
    9. '	' → logprob: -18.751934051513672
    10. '```' → logprob: -18.876934051513672

Token 208: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0007101670489646494
    2. ' min' → logprob: -7.2507100105285645
    3. 'price' → logprob: -15.250710487365723
    4. 'max' → logprob: -19.000709533691406
    5. '   ' → logprob: -19.375709533691406
    6. '	min' → logprob: -19.500709533691406
    7. '(min' → logprob: -19.750709533691406
    8. 'mini' → logprob: -21.000709533691406
    9. '[min' → logprob: -21.250709533691406
    10. '=min' → logprob: -21.375709533691406

Token 209: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.054500666621607e-06
    2. '(price' → logprob: -13.00000286102295
    3. '(res' → logprob: -14.50000286102295
    4. '(
' → logprob: -15.62500286102295
    5. '(RE' → logprob: -17.250003814697266
    6. ' (' → logprob: -18.000003814697266
    7. 'RES' → logprob: -18.500003814697266
    8. '(

' → logprob: -18.750003814697266
    9. '((' → logprob: -18.875003814697266
    10. '(
' → logprob: -19.500003814697266

Token 210: 'RES' (ID: 10002)
  Prédit: 'RES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RES' → logprob: -0.000116655595775228
    2. 'price' → logprob: -9.125116348266602
    3. ' RES' → logprob: -12.000116348266602
    4. 'PRICE' → logprob: -14.375116348266602
    5. '   ' → logprob: -15.000116348266602
    6. '
' → logprob: -15.250116348266602
    7. '
' → logprob: -16.2501163482666
    8. '

' → logprob: -17.0001163482666
    9. ' price' → logprob: -17.0001163482666
    10. ' ' → logprob: -17.1251163482666

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029947367147542536
    2. ' ,' → logprob: -8.125299453735352
    3. 'price' → logprob: -12.750299453735352
    4. ',res' → logprob: -15.000299453735352
    5. ',
' → logprob: -17.12529945373535
    6. ' price' → logprob: -17.25029945373535
    7. '(price' → logprob: -17.75029945373535
    8. '	price' → logprob: -18.37529945373535
    9. '   ' → logprob: -18.50029945373535
    10. 'PRICE' → logprob: -18.75029945373535

Token 212: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.003177952254191041
    2. ' price' → logprob: -5.753178119659424
    3. '(price' → logprob: -16.628177642822266
    4. '	price' → logprob: -16.753177642822266
    5. '   ' → logprob: -19.753177642822266
    6. ' ' → logprob: -20.253177642822266
    7. 'PRICE' → logprob: -21.128177642822266
    8. 'score' → logprob: -21.128177642822266
    9. '_price' → logprob: -21.128177642822266
    10. '.price' → logprob: -21.253177642822266

Token 213: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.430135577917099
    2. ')' → logprob: -1.3051356077194214
    3. '       ' → logprob: -2.555135488510132
    4. ')return' → logprob: -7.930135726928711
    5. '   ' → logprob: -8.180135726928711
    6. '           ' → logprob: -9.680135726928711
    7. ')

' → logprob: -11.180135726928711
    8. ' )
' → logprob: -11.305135726928711
    9. ')
' → logprob: -11.430135726928711
    10. '
' → logprob: -11.805135726928711

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010890062898397446
    2. '   ' → logprob: -4.885890007019043
    3. 'return' → logprob: -6.010890007019043
    4. '           ' → logprob: -7.385890007019043
    5. ' return' → logprob: -8.635890007019043
    6. 'else' → logprob: -11.510890007019043
    7. '
' → logprob: -12.135890007019043
    8. ' ' → logprob: -12.385890007019043
    9. '	return' → logprob: -12.885890007019043
    10. ' else' → logprob: -13.135890007019043

Token 215: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12464038282632828
    2. 'return' (adapté à ' return') → logprob: -2.374640464782715
    3. '   ' → logprob: -3.749640464782715
    4. ' return' → logprob: -7.624640464782715
    5. '           ' → logprob: -9.999640464782715
    6. 'else' → logprob: -10.124640464782715
    7. ' ' → logprob: -10.999640464782715
    8. '
' → logprob: -11.624640464782715
    9. '	return' → logprob: -12.624640464782715
    10. '  ' → logprob: -13.124640464782715

Token 216: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2200879454612732
    2. 'CERT' → logprob: -1.845088005065918
    3. '    
' → logprob: -3.845088005065918
    4. 'for' → logprob: -5.095088005065918
    5. '
' → logprob: -5.345088005065918
    6. '_CERT' → logprob: -5.470088005065918
    7. 'if' → logprob: -6.845088005065918
    8. ' CERT' → logprob: -7.720088005065918
    9. '_C' → logprob: -8.095088005065918
    10. '	C' → logprob: -8.720088005065918

Token 217: '   ' (ID: 271)
  Prédit: 'CERT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CERT' → logprob: -0.44088980555534363
    2. '   ' → logprob: -1.065889835357666
    3. '    
' → logprob: -5.315889835357666
    4. 'for' → logprob: -5.815889835357666
    5. 'if' → logprob: -6.565889835357666
    6. '
' → logprob: -6.690889835357666
    7. '_CERT' → logprob: -7.190889835357666
    8. ' CERT' → logprob: -7.940889835357666
    9. 'else' → logprob: -9.690889358520508
    10. '```' → logprob: -9.815889358520508

Token 218: ' for' (ID: 395)
  Prédit: 'CERT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CERT' → logprob: -0.2951885759830475
    2. '_CERT' → logprob: -1.420188546180725
    3. 'for' (adapté à ' for') → logprob: -4.4201884269714355
    4. '#' → logprob: -6.9201884269714355
    5. '    
' → logprob: -8.295188903808594
    6. '_C' → logprob: -8.670188903808594
    7. 'PATH' → logprob: -9.170188903808594
    8. '_PATH' → logprob: -9.420188903808594
    9. '   ' → logprob: -9.670188903808594
    10. 'CER' → logprob: -9.795188903808594

Token 219: ' f' (ID: 285)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.39124566316604614
    2. 's' → logprob: -2.7662456035614014
    3. 'False' → logprob: -2.7662456035614014
    4. 'True' → logprob: -3.0162456035614014
    5. 'f' → logprob: -3.7662456035614014
    6. ' flag' → logprob: -3.7662456035614014
    7. 'v' → logprob: -4.1412458419799805
    8. ' s' → logprob: -4.2662458419799805
    9. '0' → logprob: -4.3912458419799805
    10. 'b' → logprob: -4.6412458419799805

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002079359255731106
    2. 'in' → logprob: -6.252079486846924
    3. 'alse' → logprob: -9.877079010009766
    4. ' ' → logprob: -10.502079010009766
    5. 'n' → logprob: -11.002079010009766
    6. ',' → logprob: -11.752079010009766
    7. 'l' → logprob: -12.127079010009766
    8. 'e' → logprob: -12.127079010009766
    9. '_' → logprob: -12.377079010009766
    10. '   ' → logprob: -12.502079010009766

Token 221: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20187939703464508
    2. 'False' → logprob: -2.2018795013427734
    3. '(False' → logprob: -2.8268795013427734
    4. '(True' → logprob: -4.701879501342773
    5. '(' → logprob: -5.826879501342773
    6. 'True' → logprob: -7.826879501342773
    7. '0' → logprob: -7.951879501342773
    8. ' False' → logprob: -9.326879501342773
    9. 'range' → logprob: -9.451879501342773
    10. ' [' → logprob: -10.451879501342773

Token 222: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.38703861832618713
    2. 'True' → logprob: -1.1370385885238647
    3. '0' → logprob: -8.762038230895996
    4. ' False' → logprob: -11.887038230895996
    5. ' True' → logprob: -12.512038230895996
    6. '(True' → logprob: -15.387038230895996
    7. '(False' → logprob: -16.137039184570312
    8. '1' → logprob: -16.637039184570312
    9. '
' → logprob: -17.262039184570312
    10. '   ' → logprob: -17.512039184570312

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',
' → logprob: -15.625001907348633
    4. ',(' → logprob: -17.375001907348633
    5. 'True' → logprob: -17.500001907348633
    6. '(True' → logprob: -17.625001907348633
    7. 'False' → logprob: -17.625001907348633
    8. ',

' → logprob: -18.125001907348633
    9. '

' → logprob: -18.250001907348633
    10. '(False' → logprob: -18.500001907348633

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. ')' → logprob: -20.125
    4. 'True' → logprob: -20.125
    5. '   ' → logprob: -20.625
    6. '  ' → logprob: -23.25
    7. ' True' → logprob: -23.375
    8. '۱' → logprob: -24.125
    9. '<|end|>' → logprob: -24.125
    10. '
' → logprob: -24.25

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25197985768318176
    2. '):
' → logprob: -1.5019798278808594
    3. ' ):' → logprob: -10.50197982788086
    4. ' ):
' → logprob: -11.62697982788086
    5. '):
' → logprob: -11.75197982788086
    6. ')' → logprob: -12.62697982788086
    7. '):

' → logprob: -13.00197982788086
    8. ':' → logprob: -14.50197982788086
    9. '   ' → logprob: -14.87697982788086
    10. '):(' → logprob: -17.25197982788086

Token 226: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032922595273703337
    2. '       ' → logprob: -6.128292083740234
    3. 'CERT' → logprob: -7.128292083740234
    4. ' CERT' → logprob: -8.253292083740234
    5. '
' → logprob: -11.378292083740234
    6. '   ' → logprob: -11.628292083740234
    7. '	C' → logprob: -11.878292083740234
    8. '    
' → logprob: -12.378292083740234
    9. '_CERT' → logprob: -12.503292083740234
    10. ' ' → logprob: -12.753292083740234

Token 227: ' CERT' (ID: 105631)
  Prédit: 'CERT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CERT' (adapté à ' CERT') → logprob: -0.005471617449074984
    2. '   ' → logprob: -5.505471706390381
    3. ' CERT' → logprob: -6.630471706390381
    4. '       ' → logprob: -9.755471229553223
    5. ' ' → logprob: -11.630471229553223
    6. 'CER' → logprob: -12.880471229553223
    7. '  ' → logprob: -13.880471229553223
    8. '_CERT' → logprob: -14.005471229553223
    9. '           ' → logprob: -14.505471229553223
    10. '     ' → logprob: -15.130471229553223

Token 228: 'IF' (ID: 4648)
  Prédit: 'IF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IF' → logprob: -1.981667537620524e-06
    2. 'IFY' → logprob: -14.000001907348633
    3. 'IFI' → logprob: -14.625001907348633
    4. 'if' → logprob: -14.750001907348633
    5. 'IC' → logprob: -16.875001907348633
    6. ' IF' → logprob: -17.250001907348633
    7. 'IFIC' → logprob: -17.375001907348633
    8. 'IFn' → logprob: -18.000001907348633
    9. 'иф' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.375001907348633

Token 229: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.875001907348633
    3. ' [' → logprob: -15.750001907348633
    4. '[I' → logprob: -16.000001907348633
    5. '[f' → logprob: -16.500001907348633
    6. '[C' → logprob: -17.125001907348633
    7. '=' → logprob: -18.875001907348633
    8. '```' → logprob: -19.375001907348633
    9. ' =' → logprob: -19.750001907348633
    10. '[s' → logprob: -19.875001907348633

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015072436071932316
    2. ']=' → logprob: -6.50150728225708
    3. ' ]' → logprob: -12.751506805419922
    4. '=' → logprob: -13.501506805419922
    5. ')' → logprob: -14.876506805419922
    6. '[i' → logprob: -16.501506805419922
    7. ' =' → logprob: -17.376506805419922
    8. '[' → logprob: -17.376506805419922
    9. ']==' → logprob: -17.376506805419922
    10. ']=(' → logprob: -17.751506805419922

Token 231: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002477200934663415
    2. ' =' → logprob: -6.002477169036865
    3. '=f' → logprob: -13.377477645874023
    4. '＝' → logprob: -18.502477645874023
    5. '=i' → logprob: -20.002477645874023
    6. ')=' → logprob: -20.377477645874023
    7. '=True' → logprob: -20.502477645874023
    8. ' ' → logprob: -20.502477645874023
    9. '[' → logprob: -20.877477645874023
    10. '.=' → logprob: -21.002477645874023

Token 232: ' bool' (ID: 3792)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007885443628765643
    2. ' f' → logprob: -7.375788688659668
    3. 'bool' → logprob: -8.750788688659668
    4. ' bool' → logprob: -12.625788688659668
    5. '	f' → logprob: -15.875788688659668
    6. '   ' → logprob: -17.37578773498535
    7. 'False' → logprob: -17.75078773498535
    8. ' ' → logprob: -17.87578773498535
    9. '_f' → logprob: -18.37578773498535
    10. ' ' → logprob: -18.50078773498535

Token 233: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.1041145626222715e-05
    2. 'f' → logprob: -11.625011444091797
    3. '(' → logprob: -13.125011444091797
    4. '	f' → logprob: -17.000011444091797
    5. ' f' → logprob: -17.500011444091797
    6. '(
' → logprob: -18.750011444091797
    7. ' (' → logprob: -19.875011444091797
    8. '[f' → logprob: -21.375011444091797
    9. '(fi' → logprob: -21.625011444091797
    10. '=f' → logprob: -21.750011444091797

Token 234: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2520449161529541
    2. ')' → logprob: -1.502044916152954
    3. ')
' → logprob: -9.627044677734375
    4. '       ' → logprob: -10.127044677734375
    5. ' )
' → logprob: -12.002044677734375
    6. ')

' → logprob: -13.627044677734375
    7. ' )' → logprob: -13.877044677734375
    8. '   ' → logprob: -14.877044677734375
    9. ');' → logprob: -15.002044677734375
    10. ');
' → logprob: -15.627044677734375

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03797468915581703
    2. '_PATH' → logprob: -3.6629745960235596
    3. '   ' → logprob: -4.662974834442139
    4. ' _' → logprob: -6.162974834442139
    5. '
' → logprob: -10.28797435760498
    6. ' PATH' → logprob: -11.78797435760498
    7. ' ' → logprob: -12.28797435760498
    8. '(PATH' → logprob: -12.41297435760498
    9. '_path' → logprob: -13.16297435760498
    10. '@Path' → logprob: -13.78797435760498

Token 236: ' _' (ID: 1175)
  Prédit: '_PATH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_PATH' → logprob: -0.0007890212000347674
    2. ' _' → logprob: -7.625789165496826
    3. '   ' → logprob: -8.250788688659668
    4. '       ' → logprob: -10.750788688659668
    5. '_path' → logprob: -11.750788688659668
    6. '_PAT' → logprob: -12.125788688659668
    7. ' PATH' → logprob: -13.625788688659668
    8. '_Path' → logprob: -13.625788688659668
    9. '
' → logprob: -14.500788688659668
    10. ' ' → logprob: -14.625788688659668

Token 237: 'PATH' (ID: 30824)
  Prédit: 'PATH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PATH' → logprob: -0.00020580526324920356
    2. '_PATH' → logprob: -8.500205993652344
    3. '_path' → logprob: -14.000205993652344
    4. 'PAT' → logprob: -14.250205993652344
    5. ' PATH' → logprob: -14.375205993652344
    6. '(PATH' → logprob: -15.625205993652344
    7. 'PH' → logprob: -17.000205993652344
    8. '_Path' → logprob: -17.625205993652344
    9. '_P' → logprob: -18.625205993652344
    10. '@Path' → logprob: -18.750205993652344

Token 238: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. '(
' → logprob: -18.375
    4. ' (' → logprob: -18.75
    5. '(I' → logprob: -19.75
    6. 'i' → logprob: -20.5
    7. '   ' → logprob: -21.25
    8. '((' → logprob: -22.125
    9. ' ' → logprob: -22.25
    10. '(ii' → logprob: -22.5

Token 239: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006716436706483364
    2. ' +' → logprob: -5.006716251373291
    3. '+i' → logprob: -14.38171672821045
    4. '+
' → logprob: -15.00671672821045
    5. '()+' → logprob: -15.88171672821045
    6. '＋' → logprob: -17.381715774536133
    7. '1' → logprob: -18.506715774536133
    8. ' ' → logprob: -18.631715774536133
    9. '+=' → logprob: -18.881715774536133
    10. ')' → logprob: -19.131715774536133

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -11.500020027160645
    3. 'i' → logprob: -11.750020027160645
    4. ')' → logprob: -13.500020027160645
    5. '```' → logprob: -15.750020027160645
    6. ' i' → logprob: -15.875020027160645
    7. '   ' → logprob: -16.125019073486328
    8. '(i' → logprob: -16.875019073486328
    9. '+' → logprob: -17.250019073486328
    10. '  ' → logprob: -18.000019073486328

Token 241: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.300083648762666e-05
    2. ')
' → logprob: -9.875053405761719
    3. '<|end|>' → logprob: -14.500053405761719
    4. ' )' → logprob: -15.000053405761719
    5. ')#' → logprob: -15.125053405761719
    6. ')return' → logprob: -15.250053405761719
    7. '   ' → logprob: -16.75005340576172
    8. '
' → logprob: -17.62505340576172
    9. '),' → logprob: -18.00005340576172
    10. '       ' → logprob: -18.50005340576172

Token 242: '_PATH' (ID: 16929)
  Prédit: '_PATH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_PATH' → logprob: -0.028136486187577248
    2. '_path' → logprob: -3.9031364917755127
    3. '
' → logprob: -5.028136253356934
    4. 'PATH' → logprob: -7.778136253356934
    5. '_RES' → logprob: -9.403136253356934
    6. '@Path' → logprob: -9.778136253356934
    7. '_Path' → logprob: -10.028136253356934
    8. '

' → logprob: -10.153136253356934
    9. '    
' → logprob: -10.153136253356934
    10. '_
' → logprob: -10.153136253356934

Token 243: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001170460251159966
    2. '0' → logprob: -6.751170635223389
    3. ' (' → logprob: -15.62617015838623
    4. '(
' → logprob: -16.751171112060547
    5. '```' → logprob: -16.751171112060547
    6. 'def' → logprob: -18.626171112060547
    7. ' ' → logprob: -18.751171112060547
    8. '
' → logprob: -18.876171112060547
    9. '()' → logprob: -20.126171112060547
    10. '#' → logprob: -20.626171112060547

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. ')' → logprob: -16.000001907348633
    4. '```' → logprob: -18.250001907348633
    5. '۰' → logprob: -18.750001907348633
    6. '   ' → logprob: -18.937501907348633
    7. '(' → logprob: -19.125001907348633
    8. '=' → logprob: -20.250001907348633
    9. '[' → logprob: -20.625001907348633
    10. '1' → logprob: -20.625001907348633

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.12500286102295
    4. ')`' → logprob: -16.000001907348633
    5. ')#' → logprob: -17.500001907348633
    6. '))' → logprob: -17.500001907348633
    7. '())' → logprob: -17.750001907348633
    8. '),' → logprob: -18.250001907348633
    9. '()' → logprob: -19.125001907348633
    10. ')}' → logprob: -19.375001907348633

Token 246: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015222413931041956
    2. '
' → logprob: -6.501522064208984
    3. 'if' → logprob: -11.501522064208984
    4. '
' → logprob: -12.876522064208984
    5. '```' → logprob: -13.251522064208984
    6. ' print' → logprob: -13.376522064208984
    7. '\n' → logprob: -13.626522064208984
    8. '\
' → logprob: -14.751522064208984
    9. '"\' → logprob: -14.751522064208984
    10. '

' → logprob: -15.126522064208984

Token 247: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.895480277715251e-06
    2. '(RE' → logprob: -12.375008583068848
    3. '(res' → logprob: -13.375008583068848
    4. '('' → logprob: -13.625008583068848
    5. '((' → logprob: -14.000008583068848
    6. '()' → logprob: -14.375008583068848
    7. ' (' → logprob: -16.250009536743164
    8. '(`' → logprob: -17.125009536743164
    9. '(REG' → logprob: -17.250009536743164
    10. '(f' → logprob: -17.250009536743164

Token 248: 'RES' (ID: 10002)
  Prédit: 'RES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RES' → logprob: -1.1637164789135568e-05
    2. ' RES' → logprob: -11.875011444091797
    3. ''' → logprob: -12.750011444091797
    4. '-' → logprob: -14.625011444091797
    5. '0' → logprob: -15.125011444091797
    6. 'int' → logprob: -15.250011444091797
    7. 'res' → logprob: -15.375011444091797
    8. '(' → logprob: -15.375011444091797
    9. '"' → logprob: -16.000011444091797
    10. '_RES' → logprob: -17.500011444091797

Token 249: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.045320235192775726
    2. 'if' → logprob: -3.5453202724456787
    3. ')' → logprob: -4.1703200340271
    4. ' )' → logprob: -14.170320510864258
    5. '	if' → logprob: -14.670320510864258
    6. '==' → logprob: -16.045320510864258
    7. '```' → logprob: -16.045320510864258
    8. ' ' → logprob: -16.295320510864258
    9. '<|end|>' → logprob: -16.420320510864258
    10. '()' → logprob: -16.545320510864258

Token 250: ' RES' (ID: 21804)
  Prédit: 'RES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RES' → logprob: -2.7610454708337784e-05
    2. ' RES' → logprob: -10.500027656555176
    3. 'res' → logprob: -19.50002670288086
    4. ' ' → logprob: -20.62502670288086
    5. '_RES' → logprob: -21.12502670288086
    6. '
' → logprob: -21.25002670288086
    7. '  ' → logprob: -21.62502670288086
    8. 'RESH' → logprob: -21.75002670288086
    9. 'RESS' → logprob: -21.75002670288086
    10. '   ' → logprob: -22.00002670288086

Token 251: ' <' (ID: 464)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0486472062766552
    2. ' !=' → logprob: -3.048647165298462
    3. '<' → logprob: -9.923646926879883
    4. '!=-' → logprob: -12.673646926879883
    5. '!=(' → logprob: -13.298646926879883
    6. '<int' → logprob: -13.423646926879883
    7. '()!=' → logprob: -13.673646926879883
    8. ' <' → logprob: -14.173646926879883
    9. ')!=' → logprob: -14.423646926879883
    10. ']!=' → logprob: -14.548646926879883

Token 252: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -5.526570384972729e-05
    2. '10' → logprob: -10.125055313110352
    3. ' float' → logprob: -11.250055313110352
    4. '999' → logprob: -14.000055313110352
    5. '100' → logprob: -14.000055313110352
    6. '1' → logprob: -15.375055313110352
    7. '(float' → logprob: -16.25005531311035
    8. 'int' → logprob: -16.25005531311035
    9. '=float' → logprob: -16.50005531311035
    10. '	float' → logprob: -17.75005531311035

Token 253: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.0280383548888494e-06
    2. ''in' → logprob: -14.125000953674316
    3. ''' → logprob: -16.000001907348633
    4. '("' → logprob: -16.500001907348633
    5. ' ('' → logprob: -17.750001907348633
    6. '(' → logprob: -17.875001907348633
    7. ''s' → logprob: -18.250001907348633
    8. '(in' → logprob: -19.750001907348633
    9. '
' → logprob: -20.125001907348633
    10. '='' → logprob: -20.250001907348633

Token 254: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.1653645783662796
    2. ''' → logprob: -2.1653645038604736
    3. 'inf' → logprob: -3.2903645038604736
    4. '('' → logprob: -8.540364265441895
    5. ''s' → logprob: -10.040364265441895
    6. ' '' → logprob: -10.165364265441895
    7. '"' → logprob: -10.165364265441895
    8. ''information' → logprob: -10.915364265441895
    9. ''ins' → logprob: -11.540364265441895
    10. ''exp' → logprob: -11.790364265441895

Token 255: '')' (ID: 1542)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.31818580627441406
    2. ' else' → logprob: -1.318185806274414
    3. ')' → logprob: -5.318185806274414
    4. '```' → logprob: -12.318185806274414
    5. ' )' → logprob: -13.068185806274414
    6. ' ' → logprob: -13.068185806274414
    7. 'e' → logprob: -14.943185806274414
    8. '_else' → logprob: -15.443185806274414
    9. '')' → logprob: -15.943185806274414
    10. '	else' → logprob: -16.068185806274414

Token 256: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4740773141384125
    2. ' else' → logprob: -0.9740773439407349
    3. ')' → logprob: -16.349077224731445
    4. '```' → logprob: -16.724077224731445
    5. ' ' → logprob: -16.849077224731445
    6. 'and' → logprob: -17.349077224731445
    7. '	else' → logprob: -17.474077224731445
    8. '_else' → logprob: -17.599077224731445
    9. '
' → logprob: -18.224077224731445
    10. ' )' → logprob: -18.474077224731445

Token 257: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.2762428822461516e-05
    2. ' -' → logprob: -9.875052452087402
    3. '(-' → logprob: -15.000052452087402
    4. '   ' → logprob: -15.750052452087402
    5. '"-' → logprob: -15.750052452087402
    6. '```' → logprob: -15.750052452087402
    7. ''-' → logprob: -15.875052452087402
    8. '
' → logprob: -16.12505340576172
    9. '-print' → logprob: -16.25005340576172
    10. '``' → logprob: -16.62505340576172

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.0
    3. ' ' → logprob: -17.875
    4. '``' → logprob: -18.0
    5. '１' → logprob: -18.25
    6. '"' → logprob: -18.25
    7. '
' → logprob: -18.25
    8. '"""' → logprob: -18.875
    9. '11' → logprob: -19.0
    10. '   ' → logprob: -19.1875

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.750000953674316
    3. ')`' → logprob: -15.500000953674316
    4. '))' → logprob: -15.750000953674316
    5. '`)' → logprob: -16.250001907348633
    6. ' )' → logprob: -16.375001907348633
    7. '')' → logprob: -17.375001907348633
    8. '```' → logprob: -18.250001907348633
    9. '())' → logprob: -18.500001907348633
    10. ')#' → logprob: -19.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 257
Tokens correctement prédits (1ère position, stricte): 96
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 191
Précision stricte (1ère position): 37.35%
Précision adaptée (1ère position): 39.69%
Précision (top 10): 74.32%
================================================================================
