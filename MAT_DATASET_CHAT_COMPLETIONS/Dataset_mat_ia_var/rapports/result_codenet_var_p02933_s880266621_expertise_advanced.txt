================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
print((s := input()) if (a := int(input())) >= 3200 else "red")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 1: '((' (ID: 2054)
  → Token d'amorce (pas de prédiction)

Token 2: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 3: ' :=' (ID: 3405)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6379967927932739
    2. ')' → logprob: -1.637996792793274
    3. '[' → logprob: -1.762996792793274
    4. '))' → logprob: -2.5129966735839844
    5. 's' → logprob: -5.512996673583984
    6. '+)' → logprob: -5.512996673583984
    7. '*' → logprob: -5.637996673583984
    8. '.' → logprob: -5.887996673583984
    9. '**' → logprob: -6.012996673583984
    10. ',' → logprob: -6.762996673583984

Token 4: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0685955286026001
    2. '"' → logprob: -3.5685954093933105
    3. ' input' → logprob: -4.1935954093933105
    4. ''' → logprob: -5.0685954093933105
    5. ''s' → logprob: -5.3185954093933105
    6. 'int' → logprob: -5.9435954093933105
    7. ''"' → logprob: -6.8185954093933105
    8. '"s' → logprob: -6.9435954093933105
    9. '(input' → logprob: -7.3185954093933105
    10. '42' → logprob: -7.4435954093933105

Token 5: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8411046862602234
    2. '(' → logprob: -0.9661046862602234
    3. '()))' → logprob: -2.216104745864868
    4. '(()' → logprob: -3.341104745864868
    5. '())' → logprob: -3.716104745864868
    6. '('' → logprob: -4.466104507446289
    7. '("("' → logprob: -6.091104507446289
    8. '((' → logprob: -6.716104507446289
    9. '()(' → logprob: -7.091104507446289
    10. '())))' → logprob: -7.216104507446289

Token 6: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10792329162359238
    2. '))' → logprob: -2.3579232692718506
    3. ').' → logprob: -4.98292350769043
    4. ')))' → logprob: -7.85792350769043
    5. ')[' → logprob: -9.10792350769043
    6. '[' → logprob: -9.48292350769043
    7. '.strip' → logprob: -9.85792350769043
    8. '`)' → logprob: -10.48292350769043
    9. ')+' → logprob: -10.73292350769043
    10. '.replace' → logprob: -11.10792350769043

Token 7: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2877641022205353
    2. ' len' → logprob: -1.662764072418213
    3. 's' → logprob: -3.662764072418213
    4. 'len' → logprob: -4.162764072418213
    5. ' not' → logprob: -4.162764072418213
    6. ''s' → logprob: -6.037764072418213
    7. ' True' → logprob: -7.662764072418213
    8. ''' → logprob: -8.912764549255371
    9. '(len' → logprob: -9.037764549255371
    10. 'not' → logprob: -9.037764549255371

Token 8: 'a' (ID: 64)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.21334518492221832
    2. 's' → logprob: -2.2133452892303467
    3. ''s' → logprob: -3.0883452892303467
    4. ' len' → logprob: -3.8383452892303467
    5. ' s' → logprob: -4.713345050811768
    6. ''' → logprob: -5.838345050811768
    7. ' not' → logprob: -7.088345050811768
    8. 'not' → logprob: -7.338345050811768
    9. '(len' → logprob: -7.338345050811768
    10. '"s' → logprob: -7.838345050811768

Token 9: ' :=' (ID: 3405)
  Prédit: ' :='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :=' → logprob: -0.17826281487941742
    2. ':=' → logprob: -1.9282628297805786
    3. ' ==' → logprob: -5.553262710571289
    4. '.startswith' → logprob: -5.803262710571289
    5. '==' → logprob: -6.303262710571289
    6. ' >' → logprob: -6.303262710571289
    7. ' in' → logprob: -6.428262710571289
    8. ' and' → logprob: -6.553262710571289
    9. ' not' → logprob: -7.178262710571289
    10. '>' → logprob: -7.428262710571289

Token 10: ' int' (ID: 677)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1372092366218567
    2. 's' → logprob: -2.887209177017212
    3. 'input' → logprob: -3.387209177017212
    4. 'int' → logprob: -4.012209415435791
    5. ' len' → logprob: -4.637209415435791
    6. ' s' → logprob: -5.637209415435791
    7. '(len' → logprob: -6.512209415435791
    8. ' int' → logprob: -6.887209415435791
    9. ' input' → logprob: -6.887209415435791
    10. '(s' → logprob: -7.012209415435791

Token 11: '(input' (ID: 10054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.48807376623153687
    2. '(' → logprob: -0.9880737662315369
    3. '(input' → logprob: -4.488073825836182
    4. '('' → logprob: -6.988073825836182
    5. '((' → logprob: -6.988073825836182
    6. '()' → logprob: -7.988073825836182
    7. '(a' → logprob: -8.988073348999023
    8. '(
' → logprob: -9.488073348999023
    9. ' (' → logprob: -10.238073348999023
    10. '(print' → logprob: -10.613073348999023

Token 12: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0723041370511055
    2. '())' → logprob: -2.8223042488098145
    3. '()' → logprob: -5.3223042488098145
    4. '(' → logprob: -5.5723042488098145
    5. '())))' → logprob: -7.5723042488098145
    6. '))' → logprob: -7.9473042488098145
    7. '('' → logprob: -8.822303771972656
    8. '())).' → logprob: -8.947303771972656
    9. ')' → logprob: -9.322303771972656
    10. '()));' → logprob: -9.572303771972656

Token 13: ' >=' (ID: 5064)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8316646814346313
    2. '>' → logprob: -1.0816646814346313
    3. ' >' → logprob: -2.456664562225342
    4. '%' → logprob: -2.706664562225342
    5. '<' → logprob: -4.456664562225342
    6. ' )' → logprob: -4.581664562225342
    7. '>=' → logprob: -4.706664562225342
    8. '==' → logprob: -4.956664562225342
    9. '>)' → logprob: -4.956664562225342
    10. ' %' → logprob: -5.081664562225342

Token 14: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4277424216270447
    2. ' ' → logprob: -1.3027424812316895
    3. '10' → logprob: -3.3027424812316895
    4. '1' → logprob: -3.8027424812316895
    5. '5' → logprob: -5.0527424812316895
    6. '3' → logprob: -5.5527424812316895
    7. '2' → logprob: -6.0527424812316895
    8. '100' → logprob: -7.0527424812316895
    9. 'a' → logprob: -7.3027424812316895
    10. '4' → logprob: -7.5527424812316895

Token 15: '320' (ID: 15415)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.044402167201042175
    2. '10' → logprob: -3.6694021224975586
    3. '1' → logprob: -5.044402122497559
    4. '5' → logprob: -5.544402122497559
    5. '3' → logprob: -5.919402122497559
    6. 'a' → logprob: -7.044402122497559
    7. '2' → logprob: -7.294402122497559
    8. ' ' → logprob: -7.419402122497559
    9. '18' → logprob: -7.419402122497559
    10. '100' → logprob: -7.544402122497559

Token 16: '0' (ID: 15)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02906256914138794
    2. 'else' → logprob: -3.654062509536743
    3. ' ' → logprob: -6.529062747955322
    4. ')' → logprob: -7.154062747955322
    5. ' and' → logprob: -8.029062271118164
    6. ' )' → logprob: -9.779062271118164
    7. '```' → logprob: -10.279062271118164
    8. ' or' → logprob: -10.654062271118164
    9. 'and' → logprob: -11.279062271118164
    10. '   ' → logprob: -11.404062271118164

Token 17: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04973691329360008
    2. 'else' → logprob: -3.049736976623535
    3. ')' → logprob: -6.924736976623535
    4. ' ' → logprob: -9.299736976623535
    5. ' )' → logprob: -10.049736976623535
    6. 'print' → logprob: -11.299736976623535
    7. '```' → logprob: -11.799736976623535
    8. '  ' → logprob: -13.299736976623535
    9. '   ' → logprob: -13.299736976623535
    10. ' ' → logprob: -13.299736976623535

Token 18: ' "' (ID: 392)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.45114144682884216
    2. 's' → logprob: -2.326141357421875
    3. ''' → logprob: -3.201141357421875
    4. ''s' → logprob: -3.201141357421875
    5. '(s' → logprob: -3.326141357421875
    6. '"' → logprob: -3.451141357421875
    7. 'print' → logprob: -3.576141357421875
    8. ' '' → logprob: -3.826141357421875
    9. ' "' → logprob: -3.951141357421875
    10. '"s' → logprob: -4.326141357421875

Token 19: 'red' (ID: 1291)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3427667021751404
    2. 's' → logprob: -2.467766761779785
    3. '""' → logprob: -2.592766761779785
    4. '")' → logprob: -2.717766761779785
    5. '"s' → logprob: -3.342766761779785
    6. ')' → logprob: -4.467766761779785
    7. 'red' → logprob: -5.717766761779785
    8. 'print' → logprob: -5.842766761779785
    9. ''' → logprob: -5.842766761779785
    10. 'a' → logprob: -6.342766761779785

Token 20: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0045065428130328655
    2. '"' → logprob: -5.504506587982178
    3. 'red' → logprob: -7.879506587982178
    4. '")
' → logprob: -11.75450611114502
    5. ')' → logprob: -12.00450611114502
    6. ' red' → logprob: -12.00450611114502
    7. '"))' → logprob: -12.12950611114502
    8. 'print' → logprob: -12.75450611114502
    9. '");' → logprob: -13.25450611114502
    10. '"){' → logprob: -13.25450611114502


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 18
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 11
Précision stricte (1ère position): 22.22%
Précision adaptée (1ère position): 22.22%
Précision (top 10): 61.11%
================================================================================
