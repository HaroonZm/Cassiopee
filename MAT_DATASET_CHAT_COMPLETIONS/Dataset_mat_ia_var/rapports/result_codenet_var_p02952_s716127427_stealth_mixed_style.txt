================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys as s
from math import gcd as g
from collections import *
import os as o

s.setrecursionlimit(10**7)

MODULO = 10**9 + 7
INFTY = float('inf')

def readi(): return int(s.stdin.buffer.readline())
def linput(): return [int(x) for x in s.stdin.buffer.readline().split()]
def sread(): return s.stdin.buffer.readline().decode().strip()
iln = lambda n: [int(s.stdin.buffer.readline()) for _ in range(n)]

get_input_integer = lambda: int(s.stdin.buffer.readline().rstrip())
input_lines = lambda n: [s.stdin.buffer.readline().decode().rstrip() for _ in range(n)]

def calc_lcm(a, b):
    return (a * b) // g(a, b)

def entry():
    if o.environ.get("LOCAL"):
        s.stdin = open("input.txt")
    # --- read number ---
    N = readi()
    result = 0
    i = 1
    while i <= N:
        sn = str(i)
        # imperative + functional
        if (lambda x: len(x)%2 == 1 and len(x) <= len(str(N)))(sn):
            result += 1
        i += 1
    print(result)

def main_func():
    entry()

if __name__=="__main__":
    main_func()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' s' (ID: 265)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.32172268629074097
    2. ' ' → logprob: -1.9467227458953857
    3. 'sys' → logprob: -2.4467227458953857
    4. '   ' → logprob: -4.071722507476807
    5. ' _' → logprob: -5.571722507476807
    6. '__' → logprob: -5.696722507476807
    7. '```' → logprob: -5.821722507476807
    8. '  ' → logprob: -5.946722507476807
    9. ' s' → logprob: -6.196722507476807
    10. 'sy' → logprob: -6.321722507476807

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00013655527436640114
    2. 't' → logprob: -10.250136375427246
    3. 'r' → logprob: -11.500136375427246
    4. '.​' → logprob: -11.625136375427246
    5. '' → logprob: -12.000136375427246
    6. '.

' → logprob: -12.125136375427246
    7. 'y' → logprob: -12.250136375427246
    8. ' .' → logprob: -12.250136375427246
    9. 'm' → logprob: -12.500136375427246
    10. 'e' → logprob: -12.500136375427246

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04487891495227814
    2. 'y' → logprob: -3.6698789596557617
    3. 'ys' → logprob: -4.044878959655762
    4. '' → logprob: -7.419878959655762
    5. '.y' → logprob: -9.794878959655762
    6. 'yste' → logprob: -10.044878959655762
    7. 'ystem' → logprob: -10.544878959655762
    8. '\' → logprob: -10.794878959655762
    9. ',' → logprob: -10.919878959655762
    10. '
' → logprob: -11.169878959655762

Token 6: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.02409175969660282
    2. 'os' → logprob: -4.399091720581055
    3. ' math' → logprob: -4.899091720581055
    4. ' collections' → logprob: -7.024091720581055
    5. ' ' → logprob: -7.399091720581055
    6. ' typing' → logprob: -7.524091720581055
    7. ' io' → logprob: -8.149091720581055
    8. 'math' → logprob: -8.524091720581055
    9. ' setuptools' → logprob: -8.774091720581055
    10. ' sys' → logprob: -8.774091720581055

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.014244012534618378
    2. 'import' → logprob: -4.264244079589844
    3. ' ' → logprob: -10.139244079589844
    4. '	import' → logprob: -11.389244079589844
    5. '.' → logprob: -11.764244079589844
    6. '_import' → logprob: -11.889244079589844
    7. '<|end|>' → logprob: -12.264244079589844
    8. ' importar' → logprob: -13.139244079589844
    9. ' imports' → logprob: -13.389244079589844
    10. ' sqrt' → logprob: -14.014244079589844

Token 8: ' gcd' (ID: 106918)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.09910132735967636
    2. 'sqrt' → logprob: -2.7241013050079346
    3. ' pi' → logprob: -4.349101543426514
    4. ' sin' → logprob: -6.099101543426514
    5. ' ceil' → logprob: -6.099101543426514
    6. 's' → logprob: -6.349101543426514
    7. ' s' → logprob: -6.474101543426514
    8. ' ' → logprob: -6.474101543426514
    9. ' pow' → logprob: -6.599101543426514
    10. 'pi' → logprob: -7.099101543426514

Token 9: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02521703764796257
    2. '(
' → logprob: -4.400217056274414
    3. '\n' → logprob: -4.900217056274414
    4. ',' → logprob: -6.150217056274414
    5. '\' → logprob: -7.275217056274414
    6. '.' → logprob: -7.400217056274414
    7. '
' → logprob: -7.900217056274414
    8. '(

' → logprob: -8.025217056274414
    9. '\(' → logprob: -8.025217056274414
    10. ' (' → logprob: -8.400217056274414

Token 10: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.05214477330446243
    2. ' g' → logprob: -3.052144765853882
    3. '_g' → logprob: -5.802145004272461
    4. ' math' → logprob: -8.427145004272461
    5. 'math' → logprob: -9.302145004272461
    6. ' gcd' → logprob: -10.177145004272461
    7. 'm' → logprob: -10.302145004272461
    8. ' ' → logprob: -10.427145004272461
    9. '	g' → logprob: -10.552145004272461
    10. '_' → logprob: -11.052145004272461

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09281697124242783
    2. ',' → logprob: -3.2178170680999756
    3. '.' → logprob: -3.5928170680999756
    4. '\n' → logprob: -5.4678168296813965
    5. ' (' → logprob: -5.8428168296813965
    6. '
' → logprob: -5.8428168296813965
    7. '(
' → logprob: -5.8428168296813965
    8. '\' → logprob: -5.8428168296813965
    9. ' ' → logprob: -6.9678168296813965
    10. '\(' → logprob: -7.0928168296813965

Token 12: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.113255262374878
    2. '\' → logprob: -1.488255262374878
    3. '
' → logprob: -1.613255262374878
    4. ',' → logprob: -2.363255262374878
    5. '' → logprob: -3.238255262374878
    6. 'def' → logprob: -3.863255262374878
    7. '.' → logprob: -3.988255262374878
    8. ',
' → logprob: -4.238255500793457
    9. '

' → logprob: -4.988255500793457
    10. '(' → logprob: -5.113255500793457

Token 13: ' collections' (ID: 22690)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.7539377808570862
    2. ' collections' → logprob: -1.8789377212524414
    3. ' os' → logprob: -2.0039377212524414
    4. ' itertools' → logprob: -2.1289377212524414
    5. ' functools' → logprob: -2.3789377212524414
    6. ' math' → logprob: -4.503937721252441
    7. 'fra' → logprob: -4.878937721252441
    8. ' ' → logprob: -5.878937721252441
    9. ' typing' → logprob: -6.128937721252441
    10. 'collections' → logprob: -6.253937721252441

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4787229597568512
    2. 'import' → logprob: -0.9787229299545288
    3. '.' → logprob: -5.478723049163818
    4. '	import' → logprob: -9.10372257232666
    5. '<|end|>' → logprob: -9.22872257232666
    6. '.Counter' → logprob: -9.35372257232666
    7. '```' → logprob: -10.35372257232666
    8. '.import' → logprob: -10.85372257232666
    9. ' ' → logprob: -10.97872257232666
    10. ' defaultdict' → logprob: -11.10372257232666

Token 15: ' *
' (ID: 2099)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.7154152989387512
    2. ' defaultdict' → logprob: -1.7154152393341064
    3. 'default' → logprob: -1.9654152393341064
    4. 'd' → logprob: -2.8404152393341064
    5. ' deque' → logprob: -2.9654152393341064
    6. 'Counter' → logprob: -3.0904152393341064
    7. 'de' → logprob: -3.4654152393341064
    8. ' Counter' → logprob: -6.3404154777526855
    9. 'abc' → logprob: -6.9654154777526855
    10. 'Deque' → logprob: -7.4654154777526855

Token 16: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.518251657485962
    2. 'import' → logprob: -1.768251657485962
    3. ' 
' → logprob: -1.893251657485962
    4. ' ' → logprob: -2.393251657485962
    5. 's' → logprob: -2.643251657485962
    6. '_' → logprob: -3.143251657485962
    7. ',' → logprob: -3.268251657485962
    8. 'a' → logprob: -3.393251657485962
    9. '  
' → logprob: -3.393251657485962
    10. 'from' → logprob: -3.893251657485962

Token 17: ' os' (ID: 1994)
  Prédit: ' os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.001972053898498416
    2. ' ' → logprob: -6.751972198486328
    3. ' re' → logprob: -8.001972198486328
    4. ' itertools' → logprob: -8.751972198486328
    5. ' sys' → logprob: -8.876972198486328
    6. ' numpy' → logprob: -10.251972198486328
    7. ' o' → logprob: -10.376972198486328
    8. ' ' → logprob: -10.376972198486328
    9. ' math' → logprob: -11.501972198486328
    10. ' random' → logprob: -11.626972198486328

Token 18: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8947806358337402
    2. '\n' → logprob: -1.3947806358337402
    3. '<|end|>' → logprob: -2.0197806358337402
    4. 'import' → logprob: -2.5197806358337402
    5. '\' → logprob: -3.2697806358337402
    6. '
' → logprob: -3.6447806358337402
    7. 'os' → logprob: -4.14478063583374
    8. ',' → logprob: -4.51978063583374
    9. '```' → logprob: -5.26978063583374
    10. ' ' → logprob: -5.39478063583374

Token 19: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.16346058249473572
    2. ' o' → logprob: -1.913460612297058
    3. ' os' → logprob: -6.288460731506348
    4. 'os' → logprob: -6.788460731506348
    5. ' sys' → logprob: -10.288460731506348
    6. 'O' → logprob: -10.538460731506348
    7. '_o' → logprob: -10.663460731506348
    8. 'oss' → logprob: -10.663460731506348
    9. '	o' → logprob: -10.663460731506348
    10. ' ' → logprob: -10.788460731506348

Token 20: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.024316688999533653
    2. '\n' → logprob: -4.899316787719727
    3. '
' → logprob: -5.274316787719727
    4. '' → logprob: -6.149316787719727
    5. '\' → logprob: -6.399316787719727
    6. '.
' → logprob: -6.524316787719727
    7. '<|end|>' → logprob: -6.899316787719727
    8. '#' → logprob: -6.899316787719727
    9. ',' → logprob: -7.024316787719727
    10. 'n' → logprob: -7.274316787719727

Token 21: 's' (ID: 82)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3995942175388336
    2. '
' → logprob: -1.7745941877365112
    3. '' → logprob: -3.649594306945801
    4. 'n' → logprob: -3.899594306945801
    5. '\n' → logprob: -4.024594306945801
    6. '#' → logprob: -4.399594306945801
    7. 'd' → logprob: -4.524594306945801
    8. '_' → logprob: -4.649594306945801
    9. 'import' → logprob: -4.774594306945801
    10. '\' → logprob: -5.149594306945801

Token 22: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.694766489090398e-05
    2. '.exit' → logprob: -11.125066757202148
    3. '.stdin' → logprob: -11.625066757202148
    4. '.s' → logprob: -11.750066757202148
    5. '.​' → logprob: -11.875066757202148
    6. '.stdout' → logprob: -12.125066757202148
    7. ' .' → logprob: -12.250066757202148
    8. '.argv' → logprob: -12.375066757202148
    9. '.write' → logprob: -13.125066757202148
    10. '.stderr' → logprob: -13.625066757202148

Token 23: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.49625447392463684
    2. 'trace' → logprob: -1.1212544441223145
    3. 's' → logprob: -3.8712544441223145
    4. 't' → logprob: -4.8712544441223145
    5. 'default' → logprob: -4.8712544441223145
    6. 'attr' → logprob: -4.9962544441223145
    7. 'v' → logprob: -5.6212544441223145
    8. 'set' → logprob: -5.6212544441223145
    9. 'ting' → logprob: -6.4962544441223145
    10. 'f' → logprob: -6.4962544441223145

Token 24: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.03729308024048805
    2. 'urs' → logprob: -3.7872931957244873
    3. 'ursive' → logprob: -4.912292957305908
    4. 'urse' → logprob: -6.662292957305908
    5. 't' → logprob: -6.787292957305908
    6. 'limit' → logprob: -6.912292957305908
    7. 'ur' → logprob: -7.162292957305908
    8. '_limit' → logprob: -7.412292957305908
    9. 'urf' → logprob: -7.537292957305908
    10. '_' → logprob: -7.912292957305908

Token 25: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -7.541112427134067e-05
    2. '_limit' → logprob: -9.500075340270996
    3. 'lim' → logprob: -15.375075340270996
    4. ' limit' → logprob: -15.875075340270996
    5. '-limit' → logprob: -16.125076293945312
    6. 'Limit' → logprob: -19.000076293945312
    7. '.limit' → logprob: -19.875076293945312
    8. '_' → logprob: -20.125076293945312
    9. '_LIMIT' → logprob: -20.250076293945312
    10. '(limit' → logprob: -20.500076293945312

Token 26: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.246537173457909e-06
    2. ' (' → logprob: -13.875003814697266
    3. '((' → logprob: -14.250003814697266
    4. '(
' → logprob: -14.500003814697266
    5. '()' → logprob: -14.625003814697266
    6. '(

' → logprob: -14.875003814697266
    7. '40' → logprob: -15.000003814697266
    8. '("("' → logprob: -15.125003814697266
    9. '(int' → logprob: -16.000003814697266
    10. '(max' → logprob: -16.500003814697266

Token 27: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023273898288607597
    2. '100' → logprob: -3.7732739448547363
    3. ' ' → logprob: -10.898273468017578
    4. '1' → logprob: -11.773273468017578
    5. '999' → logprob: -14.523273468017578
    6. '500' → logprob: -14.523273468017578
    7. '400' → logprob: -14.898273468017578
    8. '300' → logprob: -15.523273468017578
    9. '200' → logprob: -15.648273468017578
    10. '9' → logprob: -15.773273468017578

Token 28: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.13211293518543243
    2. '00' → logprob: -2.132112979888916
    3. '**' → logprob: -6.132112979888916
    4. '0' → logprob: -6.382112979888916
    5. '6' → logprob: -6.757112979888916
    6. '4' → logprob: -10.132112503051758
    7. '7' → logprob: -10.257112503051758
    8. '8' → logprob: -11.007112503051758
    9. '5' → logprob: -11.132112503051758
    10. '24' → logprob: -11.257112503051758

Token 29: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.02994324080646038
    2. '9' → logprob: -3.5299432277679443
    3. '8' → logprob: -8.654943466186523
    4. '6' → logprob: -10.904943466186523
    5. '**' → logprob: -15.779943466186523
    6. '```' → logprob: -17.904943466186523
    7. ' ' → logprob: -18.654943466186523
    8. '

' → logprob: -19.904943466186523
    9. '+' → logprob: -20.279943466186523
    10. '``' → logprob: -20.529943466186523

Token 30: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.250000953674316
    3. ' )' → logprob: -15.875000953674316
    4. ')
' → logprob: -16.0
    5. '),' → logprob: -18.125
    6. ')

' → logprob: -18.875
    7. ')))' → logprob: -19.375
    8. ')
' → logprob: -20.125
    9. ')`' → logprob: -20.25
    10. '()' → logprob: -20.375

Token 31: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4958556592464447
    2. 'd' → logprob: -0.9958556890487671
    3. 'n' → logprob: -4.495855808258057
    4. 'de' → logprob: -4.995855808258057
    5. '
' → logprob: -6.245855808258057
    6. 'class' → logprob: -6.870855808258057
    7. '#' → logprob: -8.745855331420898
    8. '

' → logprob: -8.995855331420898
    9. '\' → logprob: -9.495855331420898
    10. ' 
' → logprob: -9.745855331420898

Token 32: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.475046843290329
    2. '=' → logprob: -0.9750468730926514
    3. ' ' → logprob: -7.225046634674072
    4. '_' → logprob: -8.85004711151123
    5. '.' → logprob: -10.97504711151123
    6. ')' → logprob: -10.97504711151123
    7. ' =)' → logprob: -10.97504711151123
    8. '  ' → logprob: -11.35004711151123
    9. ',' → logprob: -11.47504711151123
    10. '<|end|>' → logprob: -12.47504711151123

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16323459148406982
    2. '=' → logprob: -1.9132345914840698
    3. ' ' → logprob: -6.038234710693359
    4. '_' → logprob: -7.663234710693359
    5. ')' → logprob: -10.16323471069336
    6. '<|end|>' → logprob: -10.53823471069336
    7. ',' → logprob: -11.16323471069336
    8. '.' → logprob: -11.41323471069336
    9. ' )' → logprob: -11.53823471069336
    10. ' =)' → logprob: -11.78823471069336

Token 34: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018421612679958344
    2. ' ' → logprob: -4.393421649932861
    3. '100' → logprob: -5.143421649932861
    4. '1' → logprob: -9.893421173095703
    5. '998' → logprob: -12.268421173095703
    6. 'int' → logprob: -13.768421173095703
    7. '(' → logprob: -15.643421173095703
    8. ' ' → logprob: -16.518421173095703
    9. ' int' → logprob: -16.518421173095703
    10. '2' → logprob: -16.643421173095703

Token 35: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12703877687454224
    2. '100' → logprob: -2.1270387172698975
    3. '1' → logprob: -9.502038955688477
    4. '998' → logprob: -10.877038955688477
    5. 'int' → logprob: -11.127038955688477
    6. '(' → logprob: -13.502038955688477
    7. ' ' → logprob: -14.502038955688477
    8. '123' → logprob: -15.752038955688477
    9. '2' → logprob: -15.877038955688477
    10. '109' → logprob: -16.627038955688477

Token 36: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.027019262313842773
    2. '00' → logprob: -4.527019500732422
    3. '0' → logprob: -4.652019500732422
    4. '000' → logprob: -5.777019500732422
    5. '9' → logprob: -6.152019500732422
    6. '7' → logprob: -7.652019500732422
    7. '07' → logprob: -8.652019500732422
    8. '09' → logprob: -9.027019500732422
    9. ' **' → logprob: -9.152019500732422
    10. '^' → logprob: -9.527019500732422

Token 37: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '09' → logprob: -14.125000953674316
    3. '```' → logprob: -18.0
    4. '10' → logprob: -18.125
    5. ' ' → logprob: -18.625
    6. '18' → logprob: -18.75
    7. '+' → logprob: -19.125
    8. '7' → logprob: -19.75
    9. '8' → logprob: -20.25
    10. '19' → logprob: -20.625

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001958371140062809
    2. '7' → logprob: -6.25195837020874
    3. ' +' → logprob: -10.501958847045898
    4. '9' → logprob: -13.751958847045898
    5. '+
' → logprob: -14.751958847045898
    6. 'plus' → logprob: -15.251958847045898
    7. '```' → logprob: -15.501958847045898
    8. '+

' → logprob: -15.876958847045898
    9. '＋' → logprob: -16.0019588470459
    10. ' plus' → logprob: -16.6269588470459

Token 39: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.5776860184123507e-06
    2. '+' → logprob: -13.25000286102295
    3. ' ' → logprob: -14.37500286102295
    4. '9' → logprob: -16.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. '07' → logprob: -18.625001907348633
    7. '   ' → logprob: -18.750001907348633
    8. ' +' → logprob: -19.562501907348633
    9. '  ' → logprob: -20.125001907348633
    10. '1' → logprob: -20.125001907348633

Token 40: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.5
    3. ' ' → logprob: -19.375
    4. '```' → logprob: -19.5
    5. '9' → logprob: -19.625
    6. '07' → logprob: -20.125
    7. '   ' → logprob: -22.25
    8. '' → logprob: -22.3125
    9. '79' → logprob: -22.4375
    10. '37' → logprob: -22.5

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04453419893980026
    2. '' → logprob: -4.044534206390381
    3. '

' → logprob: -4.294534206390381
    4. '\n' → logprob: -5.169534206390381
    5. 'newline' → logprob: -6.544534206390381
    6. ' 
' → logprob: -6.794534206390381
    7. '
' → logprob: -6.794534206390381
    8. '#' → logprob: -6.794534206390381
    9. '\' → logprob: -7.294534206390381
    10. 'def' → logprob: -8.169533729553223

Token 42: 'IN' (ID: 965)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2149992287158966
    2. 'def' → logprob: -1.9649991989135742
    3. '

' → logprob: -4.214999198913574
    4. 'd' → logprob: -4.339999198913574
    5. '\n' → logprob: -4.964999198913574
    6. '\' → logprob: -5.089999198913574
    7. '#' → logprob: -5.339999198913574
    8. '' → logprob: -5.839999198913574
    9. 'n' → logprob: -6.214999198913574
    10. ' 
' → logprob: -6.964999198913574

Token 43: 'FT' (ID: 7114)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -7.910643762443215e-05
    2. 'T' → logprob: -10.000079154968262
    3. 'FINITY' → logprob: -10.375079154968262
    4. 'FT' → logprob: -14.500079154968262
    5. '```' → logprob: -15.375079154968262
    6. 'FINITE' → logprob: -15.375079154968262
    7. '1' → logprob: -15.375079154968262
    8. '\' → logprob: -15.500079154968262
    9. '0' → logprob: -16.000078201293945
    10. '#' → logprob: -16.375078201293945

Token 44: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -7.465036105713807e-06
    2. ' Y' → logprob: -12.375007629394531
    3. 'I' → logprob: -12.875007629394531
    4. 'y' → logprob: -15.375007629394531
    5. '	Y' → logprob: -16.12500762939453
    6. '```' → logprob: -16.75000762939453
    7. 'YY' → logprob: -17.12500762939453
    8. '

' → logprob: -17.12500762939453
    9. 'E' → logprob: -17.25000762939453
    10. 'A' → logprob: -17.37500762939453

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22596263885498047
    2. '=' → logprob: -1.6009626388549805
    3. '_' → logprob: -8.72596263885498
    4. 'Y' → logprob: -8.97596263885498
    5. 'A' → logprob: -9.85096263885498
    6. '`' → logprob: -10.97596263885498
    7. ')' → logprob: -10.97596263885498
    8. '```' → logprob: -11.22596263885498
    9. ' ' → logprob: -11.35096263885498
    10. '1' → logprob: -11.35096263885498

Token 46: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44825223088264465
    2. '10' → logprob: -1.1982522010803223
    3. 'float' → logprob: -3.0732522010803223
    4. ' float' → logprob: -4.448252201080322
    5. '1' → logprob: -6.948252201080322
    6. 'int' → logprob: -8.32325267791748
    7. '100' → logprob: -8.82325267791748
    8. '9' → logprob: -9.82325267791748
    9. '2' → logprob: -10.44825267791748
    10. ' int' → logprob: -10.69825267791748

Token 47: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00014966767048463225
    2. '("' → logprob: -9.125149726867676
    3. ''' → logprob: -10.750149726867676
    4. '(' → logprob: -11.250149726867676
    5. ''in' → logprob: -12.125149726867676
    6. '"' → logprob: -15.750149726867676
    7. ''s' → logprob: -15.875149726867676
    8. ''a' → logprob: -16.37514877319336
    9. ''t' → logprob: -16.62514877319336
    10. '('+' → logprob: -16.62514877319336

Token 48: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.08385895937681198
    2. ''in' → logprob: -2.7088589668273926
    3. ''' → logprob: -4.458858966827393
    4. '"' → logprob: -7.083858966827393
    5. ''i' → logprob: -7.458858966827393
    6. 'info' → logprob: -7.833858966827393
    7. 'in' → logprob: -8.458858489990234
    8. 'i' → logprob: -9.583858489990234
    9. '"in' → logprob: -10.333858489990234
    10. '128' → logprob: -10.833858489990234

Token 49: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.020558586344122887
    2. ')' → logprob: -3.8955585956573486
    3. ''' → logprob: -11.52055835723877
    4. '')
' → logprob: -12.64555835723877
    5. '")' → logprob: -13.27055835723877
    6. ' ')' → logprob: -14.89555835723877
    7. ' )' → logprob: -15.27055835723877
    8. '.')' → logprob: -15.52055835723877
    9. '')

' → logprob: -15.89555835723877
    10. '')
' → logprob: -16.020559310913086

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024152500554919243
    2. '
' → logprob: -4.7741522789001465
    3. 'd' → logprob: -5.2741522789001465
    4. '\' → logprob: -5.7741522789001465
    5. 'class' → logprob: -5.7741522789001465
    6. 'n' → logprob: -6.1491522789001465
    7. '\n' → logprob: -7.5241522789001465
    8. '#' → logprob: -7.6491522789001465
    9. '

' → logprob: -7.7741522789001465
    10. '```' → logprob: -8.274152755737305

Token 51: ' read' (ID: 1729)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6279249787330627
    2. ' main' → logprob: -1.127924919128418
    3. ' solve' → logprob: -2.252924919128418
    4. ' factorial' → logprob: -4.252924919128418
    5. ' factor' → logprob: -5.002924919128418
    6. ' ' → logprob: -5.127924919128418
    7. ' calculate' → logprob: -6.627924919128418
    8. ' bfs' → logprob: -6.752924919128418
    9. ' solution' → logprob: -7.002924919128418
    10. ' foo' → logprob: -7.252924919128418

Token 52: 'i' (ID: 72)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5793561339378357
    2. '()' → logprob: -0.9543561339378357
    3. '_line' → logprob: -2.9543561935424805
    4. 'line' → logprob: -6.7043561935424805
    5. '():
' → logprob: -8.07935619354248
    6. '_' → logprob: -8.20435619354248
    7. '_input' → logprob: -8.57935619354248
    8. ' ()' → logprob: -8.57935619354248
    9. '()]' → logprob: -9.45435619354248
    10. '())' → logprob: -10.20435619354248

Token 53: '():' (ID: 9442)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.09075020253658295
    2. 'n' → logprob: -2.465750217437744
    3. '()' → logprob: -6.590750217437744
    4. 'ntl' → logprob: -8.590749740600586
    5. 'nty' → logprob: -9.090749740600586
    6. 'np' → logprob: -10.715749740600586
    7. '():' → logprob: -10.840749740600586
    8. 'nit' → logprob: -10.965749740600586
    9. 'ntil' → logprob: -11.215749740600586
    10. 'nte' → logprob: -11.215749740600586

Token 54: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5875483155250549
    2. 'return' → logprob: -1.0875482559204102
    3. '()' → logprob: -2.58754825592041
    4. '   ' → logprob: -3.71254825592041
    5. '	return' → logprob: -5.83754825592041
    6. ' ()' → logprob: -6.46254825592041
    7. 'n' → logprob: -7.33754825592041
    8. '()
' → logprob: -7.71254825592041
    9. ' ' → logprob: -7.83754825592041
    10. '
' → logprob: -8.08754825592041

Token 55: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5769937634468079
    2. ' int' → logprob: -0.8269937634468079
    3. ' map' → logprob: -6.951993942260742
    4. 'map' → logprob: -10.076993942260742
    5. ' ' → logprob: -10.576993942260742
    6. '(int' → logprob: -11.451993942260742
    7. ' list' → logprob: -12.326993942260742
    8. '	int' → logprob: -12.451993942260742
    9. '<int' → logprob: -12.701993942260742
    10. '[int' → logprob: -13.201993942260742

Token 56: '(s' (ID: 1858)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05003585293889046
    2. '(' → logprob: -3.0500359535217285
    3. '(s' → logprob: -6.8000359535217285
    4. '(sys' → logprob: -8.67503547668457
    5. 'input' → logprob: -9.05003547668457
    6. '()' → logprob: -10.55003547668457
    7. '(o' → logprob: -12.55003547668457
    8. '((' → logprob: -13.17503547668457
    9. '(i' → logprob: -13.30003547668457
    10. '(in' → logprob: -13.30003547668457

Token 57: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0019382734317332506
    2. '.readline' → logprob: -6.251938343048096
    3. '.input' → logprob: -12.001937866210938
    4. '.' → logprob: -13.126937866210938
    5. '.sys' → logprob: -14.751937866210938
    6. '.read' → logprob: -14.751937866210938
    7. '.argv' → logprob: -15.501937866210938
    8. 'stdin' → logprob: -15.626937866210938
    9. '.St' → logprob: -16.251937866210938
    10. '.std' → logprob: -16.626937866210938

Token 58: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.875
    3. '.read' → logprob: -15.875
    4. ' readline' → logprob: -15.875
    5. 'read' → logprob: -20.375
    6. '.readlines' → logprob: -22.375
    7. '.buffer' → logprob: -22.75
    8. ' .' → logprob: -23.5
    9. '.stdin' → logprob: -23.75
    10. '.Read' → logprob: -24.125

Token 59: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00020377879263833165
    2. '.read' → logprob: -8.500204086303711
    3. ' readline' → logprob: -15.375204086303711
    4. '.' → logprob: -17.50020408630371
    5. '.peek' → logprob: -19.00020408630371
    6. 'read' → logprob: -19.37520408630371
    7. '_read' → logprob: -20.50020408630371
    8. '.readlines' → logprob: -20.87520408630371
    9. '.recv' → logprob: -21.00020408630371
    10. ' .' → logprob: -21.12520408630371

Token 60: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008416824042797089
    2. '()' → logprob: -5.258416652679443
    3. '().' → logprob: -5.758416652679443
    4. '(' → logprob: -11.633417129516602
    5. ' ())' → logprob: -12.133417129516602
    6. '();)' → logprob: -13.258417129516602
    7. ')' → logprob: -13.383417129516602
    8. '()]' → logprob: -14.008417129516602
    9. '()[' → logprob: -14.133417129516602
    10. '()))' → logprob: -14.758417129516602

Token 61: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01462493371218443
    2. '()\' → logprob: -4.764625072479248
    3. '().' → logprob: -5.764625072479248
    4. '()
' → logprob: -6.264625072479248
    5. '()

' → logprob: -7.514625072479248
    6. 'def' → logprob: -8.38962459564209
    7. '(' → logprob: -9.13962459564209
    8. '()<' → logprob: -11.63962459564209
    9. '\' → logprob: -11.88962459564209
    10. ' ()' → logprob: -12.01462459564209

Token 62: ' l' (ID: 305)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.09547573328018188
    2. 'reads' → logprob: -2.970475673675537
    3. ' read' → logprob: -3.720475673675537
    4. ' reads' → logprob: -4.345475673675537
    5. 're' → logprob: -7.345475673675537
    6. ' readline' → logprob: -7.345475673675537
    7. '_reads' → logprob: -7.720475673675537
    8. 'r' → logprob: -7.845475673675537
    9. '_read' → logprob: -9.220476150512695
    10. 'input' → logprob: -9.595476150512695

Token 63: 'input' (ID: 2586)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.12298578768968582
    2. 'ine' → logprob: -2.37298583984375
    3. 'isti' → logprob: -4.62298583984375
    4. 'inea' → logprob: -5.12298583984375
    5. 'in' → logprob: -6.12298583984375
    6. 'ineno' → logprob: -6.37298583984375
    7. 'inei' → logprob: -7.49798583984375
    8. 'strip' → logprob: -7.99798583984375
    9. 'inet' → logprob: -8.62298583984375
    10. 'ists' → logprob: -8.87298583984375

Token 64: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20279461145401
    2. '()' → logprob: -1.7027945518493652
    3. 'ine' → logprob: -6.952794551849365
    4. '().' → logprob: -8.827795028686523
    5. 'n' → logprob: -9.452795028686523
    6. 'ne' → logprob: -10.577795028686523
    7. 'ut' → logprob: -11.077795028686523
    8. 't' → logprob: -11.327795028686523
    9. ' ():' → logprob: -11.577795028686523
    10. 'st' → logprob: -11.827795028686523

Token 65: ' return' (ID: 622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3143339455127716
    2. ' s' → logprob: -1.6893339157104492
    3. 'return' → logprob: -2.939333915710449
    4. ' return' → logprob: -3.564333915710449
    5. '(s' → logprob: -6.314333915710449
    6. ')' → logprob: -7.564333915710449
    7. 'list' → logprob: -8.06433391571045
    8. '[]' → logprob: -8.06433391571045
    9. ' list' → logprob: -8.68933391571045
    10. '()' → logprob: -8.68933391571045

Token 66: ' [' (ID: 723)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6752882599830627
    2. 'list' → logprob: -1.050288200378418
    3. ' list' → logprob: -2.050288200378418
    4. ' s' → logprob: -4.425288200378418
    5. 'map' → logprob: -8.175288200378418
    6. '[s' → logprob: -10.050288200378418
    7. ' map' → logprob: -10.050288200378418
    8. '[' → logprob: -10.425288200378418
    9. '[]' → logprob: -10.550288200378418
    10. '(s' → logprob: -11.675288200378418

Token 67: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006111674592830241
    2. '*' → logprob: -8.125611305236816
    3. ']int' → logprob: -8.875611305236816
    4. ']' → logprob: -9.250611305236816
    5. ' int' → logprob: -10.125611305236816
    6. 'i' → logprob: -11.375611305236816
    7. 'map' → logprob: -11.750611305236816
    8. 'x' → logprob: -12.750611305236816
    9. '[int' → logprob: -13.000611305236816
    10. '(int' → logprob: -13.625611305236816

Token 68: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02071799337863922
    2. '(i' → logprob: -3.8957180976867676
    3. '(s' → logprob: -9.14571762084961
    4. '(' → logprob: -10.14571762084961
    5. '(ii' → logprob: -11.39571762084961
    6. '(e' → logprob: -12.64571762084961
    7. '(a' → logprob: -12.64571762084961
    8. '(_)' → logprob: -12.77071762084961
    9. '(z' → logprob: -13.02071762084961
    10. '](' → logprob: -13.89571762084961

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011505055241286755
    2. '()' → logprob: -4.886505126953125
    3. ' for' → logprob: -5.886505126953125
    4. '(x' → logprob: -7.761505126953125
    5. 'for' → logprob: -7.761505126953125
    6. ' )' → logprob: -9.011505126953125
    7. '())' → logprob: -9.761505126953125
    8. '(s' → logprob: -11.636505126953125
    9. ' ' → logprob: -11.761505126953125
    10. ' in' → logprob: -11.886505126953125

Token 70: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.633092999458313
    2. 'for' → logprob: -0.758092999458313
    3. ')' → logprob: -8.258092880249023
    4. '()' → logprob: -9.883092880249023
    5. '(x' → logprob: -9.883092880249023
    6. ' ' → logprob: -10.008092880249023
    7. '	for' → logprob: -10.383092880249023
    8. 'in' → logprob: -11.133092880249023
    9. ' in' → logprob: -11.633092880249023
    10. 's' → logprob: -12.133092880249023

Token 71: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3718207776546478
    2. 'x' → logprob: -1.6218208074569702
    3. ' s' → logprob: -2.4968206882476807
    4. 's' → logprob: -3.4968206882476807
    5. ' ' → logprob: -8.246820449829102
    6. '  ' → logprob: -11.246820449829102
    7. '<|end|>' → logprob: -11.246820449829102
    8. ' in' → logprob: -11.621820449829102
    9. 'input' → logprob: -11.621820449829102
    10. '(x' → logprob: -11.746820449829102

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07490922510623932
    2. 's' → logprob: -2.949909210205078
    3. ' s' → logprob: -3.949909210205078
    4. 'in' → logprob: -7.949909210205078
    5. ' ' → logprob: -9.324909210205078
    6. '(s' → logprob: -11.074909210205078
    7. ' =' → logprob: -11.074909210205078
    8. '<|end|>' → logprob: -11.324909210205078
    9. ')' → logprob: -11.762409210205078
    10. '_' → logprob: -12.137409210205078

Token 73: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34875258803367615
    2. ' s' → logprob: -1.2237526178359985
    3. 'input' → logprob: -8.723752975463867
    4. ' input' → logprob: -9.473752975463867
    5. ' ' → logprob: -10.348752975463867
    6. ' o' → logprob: -11.723752975463867
    7. '(s' → logprob: -11.848752975463867
    8. 'sys' → logprob: -12.598752975463867
    9. ' sys' → logprob: -12.848752975463867
    10. '   ' → logprob: -12.848752975463867

Token 74: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.5941604690160602e-05
    2. 'stdin' → logprob: -10.750025749206543
    3. '.stdout' → logprob: -12.875025749206543
    4. '.' → logprob: -14.125025749206543
    5. '.sys' → logprob: -14.500025749206543
    6. ' .' → logprob: -14.750025749206543
    7. '.argv' → logprob: -15.875025749206543
    8. '.readline' → logprob: -16.75002670288086
    9. '(stdin' → logprob: -17.37502670288086
    10. ' stdin' → logprob: -17.37502670288086

Token 75: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.000443420372903347
    2. '.readline' → logprob: -7.750443458557129
    3. '.' → logprob: -11.875443458557129
    4. 'buffer' → logprob: -12.750443458557129
    5. '.read' → logprob: -13.625443458557129
    6. ' .' → logprob: -14.625443458557129
    7. '().' → logprob: -15.125443458557129
    8. '(buffer' → logprob: -16.000442504882812
    9. '.stdin' → logprob: -16.000442504882812
    10. '	buffer' → logprob: -16.125442504882812

Token 76: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.306760805164231e-05
    2. '.read' → logprob: -11.75001335144043
    3. '.readlines' → logprob: -12.25001335144043
    4. ' readline' → logprob: -15.62501335144043
    5. '.' → logprob: -16.37501335144043
    6. '.rstrip' → logprob: -17.12501335144043
    7. 'read' → logprob: -17.62501335144043
    8. '.decode' → logprob: -18.75001335144043
    9. '.split' → logprob: -19.00001335144043
    10. ' .' → logprob: -19.00001335144043

Token 77: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.09410952776670456
    2. '()]' → logprob: -2.469109535217285
    3. '()' → logprob: -5.344109535217285
    4. '()].' → logprob: -7.969109535217285
    5. ']' → logprob: -11.469109535217285
    6. '())' → logprob: -11.969109535217285
    7. '()][' → logprob: -12.094109535217285
    8. '()-' → logprob: -13.094109535217285
    9. ']()' → logprob: -13.469109535217285
    10. '()[' → logprob: -13.594109535217285

Token 78: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.5876184701919556
    2. 'split' → logprob: -1.5876184701919556
    3. 'decode' → logprob: -1.5876184701919556
    4. 'strip' → logprob: -3.337618350982666
    5. 'read' → logprob: -12.712618827819824
    6. 'raw' → logprob: -13.462618827819824
    7. '```' → logprob: -14.837618827819824
    8. '.rstrip' → logprob: -15.337618827819824
    9. ' decode' → logprob: -15.462618827819824
    10. 'spl' → logprob: -15.962618827819824

Token 79: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -3.2617008400848135e-05
    2. '()' → logprob: -10.500032424926758
    3. '(' → logprob: -12.500032424926758
    4. '())' → logprob: -14.750032424926758
    5. ']' → logprob: -15.375032424926758
    6. '()]
' → logprob: -15.750032424926758
    7. ']()' → logprob: -16.000032424926758
    8. '()],' → logprob: -16.125032424926758
    9. '()].' → logprob: -16.625032424926758
    10. '()][' → logprob: -16.625032424926758

Token 80: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6808205246925354
    2. '()
' → logprob: -1.4308204650878906
    3. 'def' → logprob: -1.5558204650878906
    4. '
' → logprob: -4.430820465087891
    5. '()\' → logprob: -4.805820465087891
    6. '(' → logprob: -4.930820465087891
    7. '()

' → logprob: -5.305820465087891
    8. '\' → logprob: -5.555820465087891
    9. '\n' → logprob: -5.930820465087891
    10. '(
' → logprob: -7.055820465087891

Token 81: ' s' (ID: 265)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3113569021224976
    2. 'input' → logprob: -1.5613569021224976
    3. 'r' → logprob: -2.186357021331787
    4. 's' → logprob: -2.436357021331787
    5. 'print' → logprob: -2.811357021331787
    6. 'read' → logprob: -2.936357021331787
    7. 'lin' → logprob: -2.936357021331787
    8. 'main' → logprob: -4.061357021331787
    9. 'min' → logprob: -4.186357021331787
    10. ' l' → logprob: -4.186357021331787

Token 82: 'read' (ID: 1293)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.9780035614967346
    2. 'input' → logprob: -1.2280035018920898
    3. 'td' → logprob: -1.9780035018920898
    4. 'trip' → logprob: -2.22800350189209
    5. 'trin' → logprob: -3.35300350189209
    6. 't' → logprob: -3.47800350189209
    7. 'tring' → logprob: -5.10300350189209
    8. 'tri' → logprob: -6.60300350189209
    9. 'ys' → logprob: -6.72800350189209
    10. 'trs' → logprob: -6.85300350189209

Token 83: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7026046514511108
    2. '():' → logprob: -1.0776046514511108
    3. 'line' → logprob: -1.8276046514511108
    4. 'er' → logprob: -6.2026047706604
    5. '_line' → logprob: -7.5776047706604
    6. '()]' → logprob: -8.702604293823242
    7. 'r' → logprob: -9.202604293823242
    8. '().' → logprob: -9.577604293823242
    9. 'ine' → logprob: -9.702604293823242
    10. '())' → logprob: -9.952604293823242

Token 84: ' return' (ID: 622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14878132939338684
    2. 'return' → logprob: -2.1487812995910645
    3. '()' → logprob: -4.7737812995910645
    4. ' return' → logprob: -4.8987812995910645
    5. ' s' → logprob: -5.3987812995910645
    6. '(s' → logprob: -7.1487812995910645
    7. 'r' → logprob: -9.273781776428223
    8. ')' → logprob: -10.273781776428223
    9. ' ()' → logprob: -10.523781776428223
    10. ' ' → logprob: -10.648781776428223

Token 85: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03538653627038002
    2. ' s' → logprob: -3.410386562347412
    3. 'input' → logprob: -7.285386562347412
    4. 'str' → logprob: -7.910386562347412
    5. 'int' → logprob: -8.535386085510254
    6. 'sys' → logprob: -9.035386085510254
    7. ' input' → logprob: -9.160386085510254
    8. 'list' → logprob: -9.410386085510254
    9. '(s' → logprob: -10.035386085510254
    10. ' str' → logprob: -10.410386085510254

Token 86: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005344442906789482
    2. '.stdout' → logprob: -8.375534057617188
    3. '.readline' → logprob: -9.000534057617188
    4. '.' → logprob: -9.000534057617188
    5. 'stdin' → logprob: -10.125534057617188
    6. '.s' → logprob: -12.250534057617188
    7. '.input' → logprob: -12.750534057617188
    8. '.argv' → logprob: -12.750534057617188
    9. 's' → logprob: -13.250534057617188
    10. '.sys' → logprob: -13.625534057617188

Token 87: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.6365114450454712
    2. '.buffer' → logprob: -0.7615114450454712
    3. '.read' → logprob: -5.636511325836182
    4. '.' → logprob: -8.76151180267334
    5. 'buffer' → logprob: -9.13651180267334
    6. '.readlines' → logprob: -11.26151180267334
    7. '<|end|>' → logprob: -11.51151180267334
    8. '.stdin' → logprob: -11.63651180267334
    9. '.write' → logprob: -12.01151180267334
    10. '.stdout' → logprob: -12.13651180267334

Token 88: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10111859440803528
    2. '.readline' → logprob: -2.351118564605713
    3. ' readline' → logprob: -7.101118564605713
    4. '.read' → logprob: -10.226119041442871
    5. 'decode' → logprob: -10.601119041442871
    6. 'raw' → logprob: -11.976119041442871
    7. '_read' → logprob: -11.976119041442871
    8. 'reader' → logprob: -12.351119041442871
    9. 'rstrip' → logprob: -12.726119041442871
    10. 'readonly' → logprob: -13.101119041442871

Token 89: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31331032514572144
    2. '().' → logprob: -1.3133103847503662
    3. '```' → logprob: -11.188310623168945
    4. '()<' → logprob: -12.063310623168945
    5. '()\' → logprob: -12.313310623168945
    6. '())' → logprob: -12.938310623168945
    7. ' ()' → logprob: -13.188310623168945
    8. '(' → logprob: -13.313310623168945
    9. '()<<' → logprob: -13.313310623168945
    10. '()]' → logprob: -13.438310623168945

Token 90: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.21631509065628052
    2. 'rstrip' → logprob: -1.7163150310516357
    3. 'strip' → logprob: -4.216315269470215
    4. 'read' → logprob: -10.216315269470215
    5. ' decode' → logprob: -14.591315269470215
    6. 'raw' → logprob: -14.716315269470215
    7. 'dec' → logprob: -15.091315269470215
    8. 'decoded' → logprob: -15.216315269470215
    9. 'startswith' → logprob: -15.466315269470215
    10. 'rst' → logprob: -16.9663143157959

Token 91: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2528591752052307
    2. '().' → logprob: -1.502859115600586
    3. '('' → logprob: -7.502859115600586
    4. '(' → logprob: -9.252859115600586
    5. '()[' → logprob: -9.752859115600586
    6. '().'' → logprob: -10.127859115600586
    7. '();' → logprob: -10.502859115600586
    8. '(),' → logprob: -10.627859115600586
    9. '()='' → logprob: -10.752859115600586
    10. '()['' → logprob: -10.752859115600586

Token 92: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023318851366639137
    2. 'rstrip' → logprob: -3.7733187675476074
    3. 'utf' → logprob: -9.523319244384766
    4. 'ascii' → logprob: -15.898319244384766
    5. 'decode' → logprob: -16.398319244384766
    6. ' strip' → logprob: -17.648319244384766
    7. '_strip' → logprob: -18.023319244384766
    8. '-strip' → logprob: -19.273319244384766
    9. '.strip' → logprob: -19.648319244384766
    10. 'split' → logprob: -19.773319244384766

Token 93: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11798761785030365
    2. '(' → logprob: -2.242987632751465
    3. '()
' → logprob: -5.742987632751465
    4. '(
' → logprob: -7.492987632751465
    5. '()\' → logprob: -7.742987632751465
    6. '()

' → logprob: -7.867987632751465
    7. '():' → logprob: -8.867987632751465
    8. ':' → logprob: -8.992987632751465
    9. '\n' → logprob: -9.242987632751465
    10. '\' → logprob: -10.367987632751465

Token 94: 'il' (ID: 311)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2833343744277954
    2. '<|end|>' → logprob: -1.9083343744277954
    3. 'def' → logprob: -2.658334255218506
    4. '\n' → logprob: -4.533334255218506
    5. '#' → logprob: -4.783334255218506
    6. '\' → logprob: -6.283334255218506
    7. '<|end|>' → logprob: -6.533334255218506
    8. '

' → logprob: -6.658334255218506
    9. '```' → logprob: -6.908334255218506
    10. 'n' → logprob: -7.783334255218506

Token 95: 'n' (ID: 77)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.23396089673042297
    2. 'ist' → logprob: -2.6089608669281006
    3. 'oop' → logprob: -2.9839608669281006
    4. 'ne' → logprob: -3.9839608669281006
    5. 'i' → logprob: -4.10896110534668
    6. 'n' → logprob: -4.35896110534668
    7. 'p' → logprob: -4.98396110534668
    8. ' =' → logprob: -5.23396110534668
    9. 'st' → logprob: -5.73396110534668
    10. 'o' → logprob: -5.85896110534668

Token 96: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018841439858078957
    2. '():' → logprob: -5.01884126663208
    3. ' =' → logprob: -6.14384126663208
    4. '=' → logprob: -6.14384126663208
    5. 'put' → logprob: -6.39384126663208
    6. 'o' → logprob: -6.39384126663208
    7. 'en' → logprob: -6.64384126663208
    8. '())' → logprob: -7.14384126663208
    9. 't' → logprob: -7.39384126663208
    10. 'p' → logprob: -8.018841743469238

Token 97: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8445108532905579
    2. 's' → logprob: -1.219510793685913
    3. 'lambda' → logprob: -1.969510793685913
    4. 'read' → logprob: -3.094510793685913
    5. ' lambda' → logprob: -3.344510793685913
    6. ' int' → logprob: -3.719510793685913
    7. ' s' → logprob: -3.969510793685913
    8. 'len' → logprob: -5.844511032104492
    9. ' read' → logprob: -5.844511032104492
    10. 't' → logprob: -6.094511032104492

Token 98: ' n' (ID: 297)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3164753019809723
    2. 's' → logprob: -1.69147527217865
    3. ' x' → logprob: -3.0664753913879395
    4. ':' → logprob: -3.5664753913879395
    5. 'x' → logprob: -4.5664753913879395
    6. ' f' → logprob: -8.066474914550781
    7. ' :' → logprob: -8.191474914550781
    8. ' ' → logprob: -8.316474914550781
    9. ' input' → logprob: -8.566474914550781
    10. 'f' → logprob: -9.316474914550781

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008638797327876091
    2. ':n' → logprob: -5.258638858795166
    3. ' :' → logprob: -6.008638858795166
    4. ',' → logprob: -8.008638381958008
    5. 'n' → logprob: -8.133638381958008
    6. ':int' → logprob: -9.258638381958008
    7. ',n' → logprob: -9.383638381958008
    8. '=len' → logprob: -11.008638381958008
    9. ':[' → logprob: -11.383638381958008
    10. ':list' → logprob: -11.633638381958008

Token 100: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.16763563454151154
    2. ' list' → logprob: -3.167635679244995
    3. '[int' → logprob: -3.417635679244995
    4. '[len' → logprob: -3.417635679244995
    5. '[n' → logprob: -3.917635679244995
    6. '[' → logprob: -4.917635440826416
    7. '[list' → logprob: -5.167635440826416
    8. '[s' → logprob: -5.292635440826416
    9. 'list' → logprob: -5.292635440826416
    10. ' len' → logprob: -7.542635440826416

Token 101: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.012064311653375626
    2. 'list' → logprob: -5.012064456939697
    3. 'len' → logprob: -6.137064456939697
    4. '0' → logprob: -7.012064456939697
    5. 'l' → logprob: -7.012064456939697
    6. 's' → logprob: -8.512063980102539
    7. 'n' → logprob: -8.637063980102539
    8. '[]' → logprob: -8.637063980102539
    9. 'read' → logprob: -8.637063980102539
    10. '[int' → logprob: -8.762063980102539

Token 102: '(s' (ID: 1858)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0043139224871993065
    2. '(s' → logprob: -6.129313945770264
    3. '(i' → logprob: -7.004313945770264
    4. '(' → logprob: -7.504313945770264
    5. '(_)' → logprob: -7.879313945770264
    6. ']' → logprob: -8.754313468933105
    7. '(n' → logprob: -10.379313468933105
    8. '(_' → logprob: -10.379313468933105
    9. '()' → logprob: -10.629313468933105
    10. '()]' → logprob: -11.129313468933105

Token 103: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.17059138417243958
    2. '(stdin' → logprob: -2.795591354370117
    3. '.readline' → logprob: -3.420591354370117
    4. 'd' → logprob: -3.920591354370117
    5. 'stdin' → logprob: -3.920591354370117
    6. '.read' → logprob: -5.170591354370117
    7. 'read' → logprob: -5.420591354370117
    8. 'r' → logprob: -6.045591354370117
    9. 's' → logprob: -6.170591354370117
    10. '(i' → logprob: -6.670591354370117

Token 104: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.03636537864804268
    2. 'buffer' → logprob: -3.911365270614624
    3. '.readline' → logprob: -4.161365509033203
    4. '	buffer' → logprob: -10.036365509033203
    5. ' buffer' → logprob: -11.036365509033203
    6. '(buffer' → logprob: -11.286365509033203
    7. '_buffer' → logprob: -11.536365509033203
    8. '.read' → logprob: -11.536365509033203
    9. '.decode' → logprob: -12.911365509033203
    10. '-buffer' → logprob: -12.911365509033203

Token 105: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1875571544806007e-05
    2. '.read' → logprob: -12.125011444091797
    3. 'read' → logprob: -12.875011444091797
    4. ' readline' → logprob: -13.000011444091797
    5. '().' → logprob: -13.625011444091797
    6. '.decode' → logprob: -16.125011444091797
    7. '.readlines' → logprob: -16.125011444091797
    8. '.' → logprob: -16.500011444091797
    9. '```' → logprob: -16.875011444091797
    10. ')' → logprob: -18.250011444091797

Token 106: '())' (ID: 3516)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6430869698524475
    2. '())' → logprob: -0.7680869698524475
    3. '()' → logprob: -4.643086910247803
    4. ')' → logprob: -7.268086910247803
    5. '()]' → logprob: -10.018087387084961
    6. ' ())' → logprob: -11.268087387084961
    7. '(' → logprob: -11.393087387084961
    8. '()[' → logprob: -12.643087387084961
    9. '())
' → logprob: -12.643087387084961
    10. '()).' → logprob: -12.768087387084961

Token 107: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00787621084600687
    2. '().' → logprob: -5.382876396179199
    3. 'for' → logprob: -6.382876396179199
    4. ' for' → logprob: -7.132876396179199
    5. ')' → logprob: -7.632876396179199
    6. '()]' → logprob: -8.7578763961792
    7. '())' → logprob: -10.3828763961792
    8. '.strip' → logprob: -10.7578763961792
    9. '.' → logprob: -11.2578763961792
    10. ']' → logprob: -11.3828763961792

Token 108: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0380459688603878
    2. ' _' → logprob: -3.288045883178711
    3. ' ' → logprob: -13.538045883178711
    4. 'i' → logprob: -14.288045883178711
    5. ' in' → logprob: -14.413045883178711
    6. ' i' → logprob: -14.413045883178711
    7. '_i' → logprob: -14.538045883178711
    8. ' ' → logprob: -15.288045883178711
    9. '__' → logprob: -15.538045883178711
    10. ' range' → logprob: -15.788045883178711

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4018188714981079
    2. 'in' → logprob: -1.151818871498108
    3. 'range' → logprob: -4.276818752288818
    4. ' range' → logprob: -7.651818752288818
    5. ' ' → logprob: -8.151819229125977
    6. 'i' → logprob: -8.901819229125977
    7. '  ' → logprob: -10.401819229125977
    8. '_' → logprob: -11.151819229125977
    9. 'n' → logprob: -13.526819229125977
    10. '   ' → logprob: -13.651819229125977

Token 110: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078997299075127
    2. ' range' → logprob: -5.5040788650512695
    3. '	range' → logprob: -14.75407886505127
    4. '(range' → logprob: -16.004079818725586
    5. ' ' → logprob: -17.004079818725586
    6. '   ' → logprob: -17.879079818725586
    7. '
' → logprob: -18.129079818725586
    8. '  ' → logprob: -18.129079818725586
    9. 'rang' → logprob: -18.129079818725586
    10. '[' → logprob: -19.004079818725586

Token 111: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.636475493200123e-05
    2. '(' → logprob: -9.500076293945312
    3. 'n' → logprob: -13.750076293945312
    4. ' n' → logprob: -15.875076293945312
    5. ' (' → logprob: -15.875076293945312
    6. '(
' → logprob: -16.750076293945312
    7. ')n' → logprob: -18.000076293945312
    8. '	n' → logprob: -18.125076293945312
    9. '((' → logprob: -19.625076293945312
    10. '(s' → logprob: -19.625076293945312

Token 112: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0020086953882128
    2. ']' → logprob: -6.25200891494751
    3. ')' → logprob: -9.877008438110352
    4. '()]' → logprob: -10.877008438110352
    5. '])' → logprob: -11.877008438110352
    6. ')])' → logprob: -13.752008438110352
    7. ')],' → logprob: -14.752008438110352
    8. '])]' → logprob: -14.877008438110352
    9. '(' → logprob: -15.502008438110352
    10. ']()' → logprob: -15.752008438110352

Token 113: 'get' (ID: 522)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13432323932647705
    2. '
' → logprob: -3.0093231201171875
    3. '#' → logprob: -3.5093231201171875
    4. '\n' → logprob: -4.1343231201171875
    5. '\' → logprob: -4.7593231201171875
    6. 'd' → logprob: -5.0093231201171875
    7. 'n' → logprob: -5.1343231201171875
    8. '(' → logprob: -6.0093231201171875
    9. ':' → logprob: -7.0093231201171875
    10. '

' → logprob: -7.2593231201171875

Token 114: '_input' (ID: 12507)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.3868342638015747
    2. 's' → logprob: -1.2618342638015747
    3. '<|end|>' → logprob: -4.761834144592285
    4. 'def' → logprob: -5.011834144592285
    5. ' =' → logprob: -6.386834144592285
    6. '()' → logprob: -6.386834144592285
    7. 'timeofday' → logprob: -6.511834144592285
    8. '_' → logprob: -6.511834144592285
    9. ' ' → logprob: -6.636834144592285
    10. '_input' → logprob: -6.636834144592285

Token 115: '_integer' (ID: 82911)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011276054196059704
    2. ' =' → logprob: -5.8862762451171875
    3. '_line' → logprob: -6.1362762451171875
    4. 's' → logprob: -6.3862762451171875
    5. '=' → logprob: -6.6362762451171875
    6. 'data' → logprob: -7.0112762451171875
    7. '_data' → logprob: -7.5112762451171875
    8. '(' → logprob: -7.6362762451171875
    9. 'line' → logprob: -8.011276245117188
    10. '_' → logprob: -8.011276245117188

Token 116: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6209721565246582
    2. '():' → logprob: -1.3709721565246582
    3. '(' → logprob: -2.620972156524658
    4. ' =' → logprob: -2.745972156524658
    5. 's' → logprob: -2.870972156524658
    6. '=' → logprob: -4.870972156524658
    7. 'def' → logprob: -5.870972156524658
    8. ':' → logprob: -6.745972156524658
    9. '(s' → logprob: -7.620972156524658
    10. ' ()' → logprob: -7.745972156524658

Token 117: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7733568549156189
    2. ' read' → logprob: -1.2733569145202637
    3. 'lambda' → logprob: -2.3983569145202637
    4. 'read' → logprob: -2.5233569145202637
    5. ' int' → logprob: -3.2733569145202637
    6. 'int' → logprob: -4.023356914520264
    7. ' il' → logprob: -4.773356914520264
    8. 's' → logprob: -4.898356914520264
    9. ' s' → logprob: -5.023356914520264
    10. '(lambda' → logprob: -5.523356914520264

Token 118: ':' (ID: 25)
  Prédit: ':int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':int' → logprob: -0.8412286639213562
    2. ':' → logprob: -0.9662286639213562
    3. ' s' → logprob: -2.841228723526001
    4. 's' → logprob: -3.091228723526001
    5. 'int' → logprob: -4.091228485107422
    6. ' :' → logprob: -4.091228485107422
    7. '():' → logprob: -4.091228485107422
    8. ' int' → logprob: -4.341228485107422
    9. ':s' → logprob: -5.091228485107422
    10. ' read' → logprob: -5.341228485107422

Token 119: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0010431708069518209
    2. ' int' → logprob: -6.876043319702148
    3. 'il' → logprob: -13.251043319702148
    4. '0' → logprob: -13.501043319702148
    5. 's' → logprob: -13.501043319702148
    6. '(int' → logprob: -13.626043319702148
    7. 'read' → logprob: -13.751043319702148
    8. ' il' → logprob: -14.251043319702148
    9. 'ints' → logprob: -14.501043319702148
    10. ' ' → logprob: -14.876043319702148

Token 120: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00935286283493042
    2. '(' → logprob: -5.634352684020996
    3. '(input' → logprob: -5.884352684020996
    4. '(o' → logprob: -6.009352684020996
    5. '()' → logprob: -8.009352684020996
    6. 's' → logprob: -9.384352684020996
    7. '((' → logprob: -10.634352684020996
    8. 'input' → logprob: -10.884352684020996
    9. '(sys' → logprob: -11.509352684020996
    10. '(open' → logprob: -11.634352684020996

Token 121: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.91732100979425e-05
    2. 'stdin' → logprob: -10.375039100646973
    3. '.stdout' → logprob: -12.125039100646973
    4. '.readline' → logprob: -13.875039100646973
    5. '.' → logprob: -14.125039100646973
    6. '(stdin' → logprob: -14.875039100646973
    7. ' .' → logprob: -16.00004005432129
    8. '.std' → logprob: -16.37504005432129
    9. '.argv' → logprob: -16.37504005432129
    10. '.sys' → logprob: -16.75004005432129

Token 122: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.008249425329267979
    2. 'buffer' → logprob: -5.383249282836914
    3. '.readline' → logprob: -5.633249282836914
    4. '.stdin' → logprob: -11.133249282836914
    5. '().' → logprob: -12.008249282836914
    6. '(buffer' → logprob: -12.133249282836914
    7. 'BUFFER' → logprob: -12.258249282836914
    8. '_buffer' → logprob: -12.508249282836914
    9. '	buffer' → logprob: -12.883249282836914
    10. '.stdout' → logprob: -13.258249282836914

Token 123: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.8961017202818766e-05
    2. 'buffer' → logprob: -10.125059127807617
    3. '.read' → logprob: -11.375059127807617
    4. '.buffer' → logprob: -12.125059127807617
    5. '.' → logprob: -14.375059127807617
    6. '().' → logprob: -14.375059127807617
    7. 'read' → logprob: -15.000059127807617
    8. ')' → logprob: -15.875059127807617
    9. '_buffer' → logprob: -16.125059127807617
    10. '.decode' → logprob: -16.875059127807617

Token 124: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007136239437386394
    2. '().' → logprob: -7.87571382522583
    3. '()' → logprob: -8.375713348388672
    4. ')' → logprob: -9.250713348388672
    5. '.readline' → logprob: -12.500713348388672
    6. ' ())' → logprob: -13.750713348388672
    7. '())
' → logprob: -14.125713348388672
    8. 'line' → logprob: -14.625713348388672
    9. '();)' → logprob: -15.500713348388672
    10. '(' → logprob: -15.625713348388672

Token 125: 'rstrip' (ID: 180429)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.08292542397975922
    2. 'strip' → logprob: -3.082925319671631
    3. ')' → logprob: -4.457925319671631
    4. 'rstrip' → logprob: -4.457925319671631
    5. 'read' → logprob: -4.582925319671631
    6. '())' → logprob: -8.207925796508789
    7. 'buffer' → logprob: -10.082925796508789
    8. '.readline' → logprob: -11.207925796508789
    9. ' readline' → logprob: -11.457925796508789
    10. 'raw' → logprob: -12.582925796508789

Token 126: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01742786169052124
    2. 'b' → logprob: -5.017427921295166
    3. '(b' → logprob: -5.142427921295166
    4. '()' → logprob: -5.517427921295166
    5. '().' → logprob: -8.017427444458008
    6. '())
' → logprob: -8.517427444458008
    7. '()\' → logprob: -8.892427444458008
    8. ' b' → logprob: -10.392427444458008
    9. '(' → logprob: -10.392427444458008
    10. ')' → logprob: -10.642427444458008

Token 127: 'input' (ID: 2586)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5134509205818176
    2. '
' → logprob: -2.013450860977173
    3. '()' → logprob: -2.388450860977173
    4. '(
' → logprob: -2.388450860977173
    5. '<|end|>' → logprob: -3.763450860977173
    6. ')' → logprob: -3.888450860977173
    7. '\n' → logprob: -3.888450860977173
    8. '#' → logprob: -5.263451099395752
    9. '\' → logprob: -5.638451099395752
    10. 'def' → logprob: -6.013451099395752

Token 128: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03838077560067177
    2. '=' → logprob: -3.4133808612823486
    3. ' =' → logprob: -5.6633806228637695
    4. '(' → logprob: -8.16338062286377
    5. '_' → logprob: -9.03838062286377
    6. '().' → logprob: -9.03838062286377
    7. '_data' → logprob: -9.28838062286377
    8. ')' → logprob: -9.41338062286377
    9. '.readline' → logprob: -9.41338062286377
    10. '<|end|>' → logprob: -9.78838062286377

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11300448328256607
    2. ' =' → logprob: -2.238004446029663
    3. '=lambda' → logprob: -9.363004684448242
    4. '()' → logprob: -10.488004684448242
    5. '=[]' → logprob: -10.863004684448242
    6. 's' → logprob: -11.113004684448242
    7. '_' → logprob: -11.238004684448242
    8. ')' → logprob: -12.113004684448242
    9. '＝' → logprob: -12.988004684448242
    10. 'def' → logprob: -13.238004684448242

Token 130: ' lambda' (ID: 27871)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4664456844329834
    2. ' []' → logprob: -1.8414456844329834
    3. 's' → logprob: -2.2164456844329834
    4. ' s' → logprob: -2.8414456844329834
    5. '[s' → logprob: -3.8414456844329834
    6. '[' → logprob: -4.8414459228515625
    7. ' [' → logprob: -5.0914459228515625
    8. 'lambda' → logprob: -5.4664459228515625
    9. ' lambda' → logprob: -5.8414459228515625
    10. 'list' → logprob: -5.9664459228515625

Token 131: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.529146134853363
    2. 'n' → logprob: -1.6541461944580078
    3. ' n' → logprob: -2.029146194458008
    4. '[n' → logprob: -3.279146194458008
    5. 's' → logprob: -3.529146194458008
    6. ' s' → logprob: -4.404146194458008
    7. ' :' → logprob: -5.779146194458008
    8. ' [' → logprob: -6.154146194458008
    9. '[' → logprob: -6.654146194458008
    10. '[s' → logprob: -7.404146194458008

Token 132: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010252383537590504
    2. '(n' → logprob: -4.635252475738525
    3. ' :' → logprob: -8.510251998901367
    4. ':n' → logprob: -9.135251998901367
    5. 'n' → logprob: -9.510251998901367
    6. ' n' → logprob: -10.135251998901367
    7. '=lambda' → logprob: -11.260251998901367
    8. '=' → logprob: -11.635251998901367
    9. '=n' → logprob: -11.635251998901367
    10. 'def' → logprob: -11.635251998901367

Token 133: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.014286790043115616
    2. ' [' → logprob: -4.389286994934082
    3. '[' → logprob: -6.764286994934082
    4. '[list' → logprob: -7.764286994934082
    5. '[line' → logprob: -10.139286994934082
    6. '[l' → logprob: -10.139286994934082
    7. '[i' → logprob: -10.764286994934082
    8. '[str' → logprob: -10.889286994934082
    9. '[int' → logprob: -11.514286994934082
    10. '[o' → logprob: -11.639286994934082

Token 134: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001475220051361248
    2. 'sys' → logprob: -9.625147819519043
    3. 'get' → logprob: -10.750147819519043
    4. 'list' → logprob: -11.125147819519043
    5. '(s' → logprob: -11.250147819519043
    6. 'read' → logprob: -11.875147819519043
    7. 'tuple' → logprob: -12.000147819519043
    8. 'input' → logprob: -12.250147819519043
    9. 'str' → logprob: -12.875147819519043
    10. 'int' → logprob: -13.000147819519043

Token 135: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.007669325452297926
    2. 'stdin' → logprob: -4.882669448852539
    3. '.readline' → logprob: -10.382669448852539
    4. '.stdout' → logprob: -10.757669448852539
    5. 's' → logprob: -12.382669448852539
    6. '(stdin' → logprob: -12.382669448852539
    7. 'import' → logprob: -14.007669448852539
    8. 'r' → logprob: -14.757669448852539
    9. '```' → logprob: -15.132669448852539
    10. 'sys' → logprob: -15.507669448852539

Token 136: '.buffer' (ID: 48964)
  Prédit: 'buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -0.004341937135905027
    2. '.buffer' → logprob: -5.504342079162598
    3. 'stdin' → logprob: -8.504342079162598
    4. 'stdout' → logprob: -10.379342079162598
    5. '.stdin' → logprob: -11.629342079162598
    6. '.readline' → logprob: -12.129342079162598
    7. '_buffer' → logprob: -12.504342079162598
    8. '	buffer' → logprob: -12.754342079162598
    9. '.stdout' → logprob: -13.129342079162598
    10. 'BUFFER' → logprob: -13.629342079162598

Token 137: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004182633012533188
    2. 'buffer' → logprob: -5.504182815551758
    3. 'read' → logprob: -9.254182815551758
    4. ' readline' → logprob: -12.254182815551758
    5. 'reader' → logprob: -13.629182815551758
    6. '.readlines' → logprob: -14.004182815551758
    7. '```' → logprob: -14.504182815551758
    8. '.buffer' → logprob: -15.004182815551758
    9. 'rstrip' → logprob: -15.254182815551758
    10. '_buffer' → logprob: -15.504182815551758

Token 138: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00219118339009583
    2. '()' → logprob: -6.127191066741943
    3. '.rstrip' → logprob: -13.377191543579102
    4. 'rstrip' → logprob: -13.502191543579102
    5. '(' → logprob: -13.752191543579102
    6. ' ().' → logprob: -14.127191543579102
    7. '.' → logprob: -15.252191543579102
    8. '()[' → logprob: -15.502191543579102
    9. '.readline' → logprob: -15.877191543579102
    10. '```' → logprob: -16.2521915435791

Token 139: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.16027307510375977
    2. 'rstrip' → logprob: -1.9102730751037598
    3. 'strip' → logprob: -10.535272598266602
    4. 'read' → logprob: -10.910272598266602
    5. ' decode' → logprob: -12.785272598266602
    6. '.decode' → logprob: -14.535272598266602
    7. '```' → logprob: -15.535272598266602
    8. '.rstrip' → logprob: -15.535272598266602
    9. 'split' → logprob: -15.660272598266602
    10. 'dec' → logprob: -16.2852725982666

Token 140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004624153021723032
    2. '()' → logprob: -5.379624366760254
    3. '()[' → logprob: -13.629624366760254
    4. '()]' → logprob: -14.754624366760254
    5. '()).' → logprob: -14.879624366760254
    6. '().'' → logprob: -15.129624366760254
    7. '()].' → logprob: -15.129624366760254
    8. '(' → logprob: -15.254624366760254
    9. 'rstrip' → logprob: -15.504624366760254
    10. '('' → logprob: -15.754624366760254

Token 141: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0032196608372032642
    2. 'rstrip' → logprob: -5.7532196044921875
    3. ' strip' → logprob: -10.378219604492188
    4. '(strip' → logprob: -12.003219604492188
    5. '().' → logprob: -13.128219604492188
    6. 'decode' → logprob: -13.503219604492188
    7. '```' → logprob: -13.878219604492188
    8. ')' → logprob: -15.503219604492188
    9. '.strip' → logprob: -16.503219604492188
    10. 'split' → logprob: -16.503219604492188

Token 142: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010115911572938785
    2. '()]' → logprob: -10.375101089477539
    3. '())' → logprob: -10.375101089477539
    4. '()\' → logprob: -10.625101089477539
    5. ')' → logprob: -11.500101089477539
    6. '()
' → logprob: -13.125101089477539
    7. ' ()' → logprob: -13.625101089477539
    8. '().' → logprob: -15.125101089477539
    9. '(),' → logprob: -15.250101089477539
    10. '(' → logprob: -15.750101089477539

Token 143: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48029375076293945
    2. ')' → logprob: -0.9802937507629395
    3. '())' → logprob: -5.1052937507629395
    4. '(n' → logprob: -9.605293273925781
    5. 'for' → logprob: -10.605293273925781
    6. '()]' → logprob: -11.105293273925781
    7. ' for' → logprob: -11.855293273925781
    8. '(' → logprob: -12.480293273925781
    9. ' ()' → logprob: -12.730293273925781
    10. ')]' → logprob: -12.855293273925781

Token 144: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003948744386434555
    2. ' _' → logprob: -6.25394868850708
    3. '_range' → logprob: -6.25394868850708
    4. ' range' → logprob: -9.378949165344238
    5. 'range' → logprob: -11.628949165344238
    6. '_i' → logprob: -13.378949165344238
    7. '_in' → logprob: -15.128949165344238
    8. '_
' → logprob: -17.503948211669922
    9. ' ' → logprob: -17.628948211669922
    10. ' in' → logprob: -17.753948211669922

Token 145: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002403720049187541
    2. ' range' → logprob: -6.252403736114502
    3. '_' → logprob: -7.752403736114502
    4. 'in' → logprob: -10.127403259277344
    5. ' in' → logprob: -12.502403259277344
    6. '_range' → logprob: -13.502403259277344
    7. '(range' → logprob: -15.627403259277344
    8. '	range' → logprob: -16.252403259277344
    9. ' _' → logprob: -18.127403259277344
    10. ']' → logprob: -18.752403259277344

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003177952254191041
    2. ' range' → logprob: -5.753178119659424
    3. '	range' → logprob: -16.253177642822266
    4. ' ' → logprob: -16.878177642822266
    5. '   ' → logprob: -16.878177642822266
    6. '(range' → logprob: -17.253177642822266
    7. '  ' → logprob: -18.378177642822266
    8. '
' → logprob: -19.628177642822266
    9. '_range' → logprob: -19.753177642822266
    10. '    ' → logprob: -19.878177642822266

Token 147: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007129086880013347
    2. 'n' → logprob: -7.250712871551514
    3. ' n' → logprob: -13.375713348388672
    4. '(' → logprob: -13.500713348388672
    5. ' (' → logprob: -17.125713348388672
    6. ')n' → logprob: -18.250713348388672
    7. '	n' → logprob: -18.250713348388672
    8. ')' → logprob: -19.375713348388672
    9. ',n' → logprob: -20.000713348388672
    10. '   ' → logprob: -20.625713348388672

Token 148: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005836130119860172
    2. ']' → logprob: -5.630836009979248
    3. ')' → logprob: -6.130836009979248
    4. '()]' → logprob: -10.255836486816406
    5. '])' → logprob: -11.380836486816406
    6. ')])' → logprob: -12.130836486816406
    7. '])]' → logprob: -12.505836486816406
    8. ')],' → logprob: -14.005836486816406
    9. '())' → logprob: -14.380836486816406
    10. '))' → logprob: -14.880836486816406

Token 149: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0047226338647305965
    2. '#' → logprob: -5.879722595214844
    3. 'class' → logprob: -7.379722595214844
    4. 'd' → logprob: -7.379722595214844
    5. 'n' → logprob: -8.129722595214844
    6. '\' → logprob: -9.004722595214844
    7. '\n' → logprob: -9.879722595214844
    8. '
' → logprob: -10.629722595214844
    9. 'print' → logprob: -11.004722595214844
    10. 'x' → logprob: -11.004722595214844

Token 150: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03327978402376175
    2. ' solve' → logprob: -4.158279895782471
    3. 'main' → logprob: -4.283279895782471
    4. 'solve' → logprob: -6.408279895782471
    5. ' factorial' → logprob: -7.158279895782471
    6. ' dfs' → logprob: -8.408279418945312
    7. ' factor' → logprob: -8.658279418945312
    8. 'dfs' → logprob: -9.283279418945312
    9. 'factor' → logprob: -9.408279418945312
    10. ' pow' → logprob: -10.033279418945312

Token 151: '_l' (ID: 1478)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.09741071611642838
    2. '(' → logprob: -3.0974106788635254
    3. '_sum' → logprob: -3.5974106788635254
    4. '(a' → logprob: -4.347410678863525
    5. '(x' → logprob: -6.222410678863525
    6. '_' → logprob: -7.097410678863525
    7. '_f' → logprob: -7.597410678863525
    8. '_area' → logprob: -7.722410678863525
    9. '():' → logprob: -8.097411155700684
    10. '_g' → logprob: -8.097411155700684

Token 152: 'cm' (ID: 7871)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.2605423629283905
    2. 'cm' → logprob: -2.135542392730713
    3. 'ist' → logprob: -2.885542392730713
    4. 'ength' → logprob: -3.510542392730713
    5. 'e' → logprob: -5.010542392730713
    6. 'ine' → logprob: -5.635542392730713
    7. 'ast' → logprob: -5.635542392730713
    8. 'eft' → logprob: -6.135542392730713
    9. 'n' → logprob: -6.635542392730713
    10. 'oop' → logprob: -7.135542392730713

Token 153: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00529340747743845
    2. '(' → logprob: -5.880293369293213
    3. '(x' → logprob: -6.005293369293213
    4. ' (' → logprob: -11.380293846130371
    5. '(*' → logprob: -13.005293846130371
    6. '(n' → logprob: -13.380293846130371
    7. '(num' → logprob: -14.130293846130371
    8. '(nums' → logprob: -14.255293846130371
    9. '(numbers' → logprob: -14.505293846130371
    10. 'a' → logprob: -14.505293846130371

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020194053649902344
    2. ',b' → logprob: -6.25201940536499
    3. ' ,' → logprob: -9.502019882202148
    4. ',a' → logprob: -11.502019882202148
    5. ',
' → logprob: -12.752019882202148
    6. 'b' → logprob: -13.502019882202148
    7. ',

' → logprob: -14.377019882202148
    8. 'a' → logprob: -15.252019882202148
    9. '_,' → logprob: -15.502019882202148
    10. ',
' → logprob: -16.50201988220215

Token 155: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11282965540885925
    2. ' b' → logprob: -2.2378296852111816
    3. ' ' → logprob: -12.237829208374023
    4. '   ' → logprob: -14.612829208374023
    5. '	b' → logprob: -14.612829208374023
    6. 'def' → logprob: -15.612829208374023
    7. ',b' → logprob: -15.612829208374023
    8. '  ' → logprob: -15.612829208374023
    9. '    ' → logprob: -15.737829208374023
    10. ' ' → logprob: -15.862829208374023

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012570773833431304
    2. ')' → logprob: -9.125125885009766
    3. ' ):' → logprob: -11.625125885009766
    4. '):
' → logprob: -11.875125885009766
    5. ':' → logprob: -14.750125885009766
    6. ',' → logprob: -16.000125885009766
    7. '   ' → logprob: -16.000125885009766
    8. '):
' → logprob: -16.250125885009766
    9. ' ' → logprob: -16.375125885009766
    10. '):

' → logprob: -17.750125885009766

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018510786816477776
    2. ' return' → logprob: -4.018510818481445
    3. '	return' → logprob: -8.768510818481445
    4. 'return' → logprob: -9.768510818481445
    5. ' ' → logprob: -9.893510818481445
    6. ':' → logprob: -10.518510818481445
    7. '    ' → logprob: -10.768510818481445
    8. '  ' → logprob: -11.018510818481445
    9. '    
' → logprob: -11.393510818481445
    10. '   ' → logprob: -12.518510818481445

Token 158: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5947489738464355
    2. 'return' (adapté à ' return') → logprob: -0.8447489738464355
    3. '   ' → logprob: -4.0947489738464355
    4. ' a' → logprob: -7.2197489738464355
    5. 'a' → logprob: -7.4697489738464355
    6. ' (' → logprob: -7.9697489738464355
    7. '    ' → logprob: -9.094749450683594
    8. 'abs' → logprob: -9.594749450683594
    9. ' abs' → logprob: -10.344749450683594
    10. ' ' → logprob: -10.469749450683594

Token 159: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09637230634689331
    2. ' a' → logprob: -2.596372365951538
    3. '(a' → logprob: -4.221372127532959
    4. ' (' → logprob: -6.096372127532959
    5. ' abs' → logprob: -8.721372604370117
    6. 'abs' → logprob: -8.721372604370117
    7. '(abs' → logprob: -10.471372604370117
    8. ' ' → logprob: -10.846372604370117
    9. '(' → logprob: -11.471372604370117
    10. '   ' → logprob: -11.596372604370117

Token 160: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.7697225252486533e-06
    2. ' a' → logprob: -12.625003814697266
    3. '(a' → logprob: -15.000003814697266
    4. '   ' → logprob: -17.250003814697266
    5. '	a' → logprob: -17.250003814697266
    6. 'abs' → logprob: -17.750003814697266
    7. ')a' → logprob: -19.500003814697266
    8. 'а' → logprob: -20.125003814697266
    9. '```' → logprob: -20.125003814697266
    10. ' ' → logprob: -20.125003814697266

Token 161: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.32067278027534485
    2. '*b' → logprob: -1.3206727504730225
    3. ' //' → logprob: -5.695672988891602
    4. '*' → logprob: -6.070672988891602
    5. '//' → logprob: -6.445672988891602
    6. '*a' → logprob: -9.195672988891602
    7. ' ' → logprob: -11.445672988891602
    8. '*g' → logprob: -11.695672988891602
    9. '*l' → logprob: -13.320672988891602
    10. 'b' → logprob: -14.320672988891602

Token 162: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011705794604495168
    2. ' b' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.50117015838623
    4. '   ' → logprob: -16.751171112060547
    5. '  ' → logprob: -18.626171112060547
    6. ')b' → logprob: -18.626171112060547
    7. ')' → logprob: -19.376171112060547
    8. '//' → logprob: -20.876171112060547
    9. '	b' → logprob: -21.001171112060547
    10. '    ' → logprob: -21.376171112060547

Token 163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010200119577348232
    2. ')//' → logprob: -4.760200023651123
    3. ' //' → logprob: -7.260200023651123
    4. '//' → logprob: -7.260200023651123
    5. ' )' → logprob: -8.635200500488281
    6. '   ' → logprob: -15.635200500488281
    7. '#' → logprob: -16.01020050048828
    8. ' ' → logprob: -16.38520050048828
    9. ')#' → logprob: -16.38520050048828
    10. ' ' → logprob: -16.76020050048828

Token 164: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.47414445877075195
    2. ' //' → logprob: -0.974144458770752
    3. ' ' → logprob: -10.224143981933594
    4. ' ' → logprob: -11.224143981933594
    5. '#' → logprob: -11.474143981933594
    6. '...' → logprob: -13.224143981933594
    7. '```' → logprob: -13.349143981933594
    8. ')' → logprob: -13.849143981933594
    9. '
' → logprob: -14.474143981933594
    10. '/' → logprob: -14.849143981933594

Token 165: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -9.13388703338569e-06
    2. ' g' → logprob: -11.625009536743164
    3. '   ' → logprob: -17.125009536743164
    4. ' ' → logprob: -18.625009536743164
    5. '  ' → logprob: -18.750009536743164
    6. '	g' → logprob: -18.750009536743164
    7. '(g' → logprob: -19.000009536743164
    8. '_g' → logprob: -19.250009536743164
    9. '    ' → logprob: -20.000009536743164
    10. '[g' → logprob: -20.375009536743164

Token 166: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. 'a' → logprob: -15.375008583068848
    4. ' (' → logprob: -16.37500762939453
    5. '(abs' → logprob: -17.00000762939453
    6. '(ab' → logprob: -17.37500762939453
    7. '((' → logprob: -18.37500762939453
    8. '(b' → logprob: -18.37500762939453
    9. 'def' → logprob: -19.00000762939453
    10. '(A' → logprob: -19.12500762939453

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045922908931970596
    2. ',b' → logprob: -3.1709229946136475
    3. 'b' → logprob: -6.420922756195068
    4. ' ,' → logprob: -6.670922756195068
    5. ' b' → logprob: -10.795923233032227
    6. ')' → logprob: -13.295923233032227
    7. ' ' → logprob: -13.920923233032227
    8. ',
' → logprob: -14.420923233032227
    9. ')b' → logprob: -14.920923233032227
    10. '(b' → logprob: -15.170923233032227

Token 168: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004081959370523691
    2. ' b' → logprob: -5.504081726074219
    3. ' ' → logprob: -13.254081726074219
    4. '   ' → logprob: -13.629081726074219
    5. '  ' → logprob: -15.754081726074219
    6. '    ' → logprob: -15.754081726074219
    7. ')b' → logprob: -16.00408172607422
    8. ')' → logprob: -16.12908172607422
    9. '	b' → logprob: -17.12908172607422
    10. ' ' → logprob: -19.00408172607422

Token 169: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ' )' → logprob: -12.125009536743164
    3. '))' → logprob: -13.500009536743164
    4. ')b' → logprob: -14.375009536743164
    5. ')a' → logprob: -14.750009536743164
    6. ')
' → logprob: -14.750009536743164
    7. ')}' → logprob: -15.500009536743164
    8. ')return' → logprob: -15.625009536743164
    9. 'a' → logprob: -16.375009536743164
    10. 'b' → logprob: -16.500009536743164

Token 170: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.396757089532912e-05
    2. '#' → logprob: -10.0000638961792
    3. 'n' → logprob: -11.8750638961792
    4. 'class' → logprob: -12.5000638961792
    5. 'd' → logprob: -13.1250638961792
    6. '\' → logprob: -13.2500638961792
    7. 'de' → logprob: -14.3750638961792
    8. 'for' → logprob: -14.7500638961792
    9. 'a' → logprob: -15.1250638961792
    10. '.' → logprob: -15.1250638961792

Token 171: ' entry' (ID: 7251)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.4830751419067383
    2. ' main' → logprob: -1.4830751419067383
    3. 'calc' → logprob: -2.3580751419067383
    4. 'main' → logprob: -3.6080751419067383
    5. ' solve' → logprob: -3.7330751419067383
    6. 'solve' → logprob: -5.483075141906738
    7. 'pow' → logprob: -6.608075141906738
    8. ' factorial' → logprob: -6.858075141906738
    9. ' pow' → logprob: -7.358075141906738
    10. 'factor' → logprob: -7.483075141906738

Token 172: '():
' (ID: 8595)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.5156074166297913
    2. 'point' → logprob: -1.2656073570251465
    3. '():' → logprob: -2.1406073570251465
    4. '_' → logprob: -6.0156073570251465
    5. '()' → logprob: -7.5156073570251465
    6. '_points' → logprob: -9.765607833862305
    7. 'pt' → logprob: -9.890607833862305
    8. 'Point' → logprob: -10.765607833862305
    9. '():
' → logprob: -10.890607833862305
    10. '_pt' → logprob: -10.890607833862305

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017681238241493702
    2. '    
' → logprob: -7.001768112182617
    3. '    ' → logprob: -7.751768112182617
    4. 'n' → logprob: -8.876768112182617
    5. '<|end|>' → logprob: -9.626768112182617
    6. '(n' → logprob: -11.001768112182617
    7. '
' → logprob: -11.001768112182617
    8. '(s' → logprob: -11.001768112182617
    9. ' 
' → logprob: -11.001768112182617
    10. ' readline' → logprob: -11.126768112182617

Token 174: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017273694276809692
    2. ' n' → logprob: -4.642273902893066
    3. '   ' → logprob: -5.142273902893066
    4. 'N' → logprob: -7.142273902893066
    5. 't' → logprob: -8.017273902893066
    6. '	n' → logprob: -8.392273902893066
    7. 'a' → logprob: -8.642273902893066
    8. ' ' → logprob: -10.767273902893066
    9. ' N' → logprob: -11.517273902893066
    10. ' t' → logprob: -11.517273902893066

Token 175: ' o' (ID: 293)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1002284586429596
    2. '__' → logprob: -2.3502285480499268
    3. ' ' → logprob: -11.100228309631348
    4. 'name' → logprob: -13.350228309631348
    5. ' name' → logprob: -13.975228309631348
    6. '___' → logprob: -14.225228309631348
    7. '_' → logprob: -14.475228309631348
    8. ' True' → logprob: -14.475228309631348
    9. '_name' → logprob: -14.850228309631348
    10. ' len' → logprob: -14.850228309631348

Token 176: '.environ' (ID: 52020)
  Prédit: '.name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.782281219959259
    2. '.path' → logprob: -1.0322811603546143
    3. '.getcwd' → logprob: -1.7822811603546143
    4. '.environ' → logprob: -4.532281398773193
    5. '.listdir' → logprob: -5.657281398773193
    6. '.getenv' → logprob: -5.907281398773193
    7. '.get' → logprob: -7.282281398773193
    8. ' .' → logprob: -8.657280921936035
    9. '.chdir' → logprob: -9.907280921936035
    10. '.sep' → logprob: -9.907280921936035

Token 177: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.004548199940472841
    2. 't' → logprob: -6.004548072814941
    3. 'get' → logprob: -6.254548072814941
    4. '.' → logprob: -9.254548072814941
    5. '.setdefault' → logprob: -10.254548072814941
    6. ' .' → logprob: -12.504548072814941
    7. '   ' → logprob: -12.754548072814941
    8. 'n' → logprob: -13.129548072814941
    9. '['' → logprob: -13.504548072814941
    10. '```' → logprob: -13.879548072814941

Token 178: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.009772616438567638
    2. '("' → logprob: -4.634772777557373
    3. '(' → logprob: -11.134772300720215
    4. '('__' → logprob: -14.009772300720215
    5. '(('' → logprob: -15.009772300720215
    6. ' ('' → logprob: -15.884772300720215
    7. '('_' → logprob: -15.884772300720215
    8. '('"' → logprob: -16.00977325439453
    9. '__('' → logprob: -16.13477325439453
    10. '("__' → logprob: -16.50977325439453

Token 179: 'LOCAL' (ID: 90515)
  Prédit: 'LOCAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOCAL' → logprob: -0.30695414543151855
    2. '"' → logprob: -2.4319541454315186
    3. 'USER' → logprob: -2.9319541454315186
    4. 'DEBUG' → logprob: -3.1819541454315186
    5. 'HOME' → logprob: -3.4319541454315186
    6. 'ONLINE' → logprob: -3.9319541454315186
    7. 'PY' → logprob: -4.806954383850098
    8. ''' → logprob: -5.556954383850098
    9. 'USERNAME' → logprob: -5.806954383850098
    10. 'TEST' → logprob: -5.806954383850098

Token 180: '"):
' (ID: 33645)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0922711119055748
    2. '"):
' → logprob: -2.967271089553833
    3. '"):' → logprob: -3.592271089553833
    4. '")==' → logprob: -5.967271327972412
    5. '_ENV' → logprob: -6.092271327972412
    6. '",' → logprob: -6.717271327972412
    7. '_RUN' → logprob: -7.342271327972412
    8. '"):
' → logprob: -7.717271327972412
    9. 'RUN' → logprob: -8.342270851135254
    10. 'ENV' → logprob: -8.467270851135254

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007586271967738867
    2. ':' → logprob: -5.132586479187012
    3. ',' → logprob: -6.882586479187012
    4. '   ' → logprob: -9.132586479187012
    5. '(' → logprob: -9.757586479187012
    6. '        
' → logprob: -9.757586479187012
    7. ':
' → logprob: -9.882586479187012
    8. '():' → logprob: -10.132586479187012
    9. '      ' → logprob: -10.257586479187012
    10. ' (' → logprob: -10.507586479187012

Token 182: ' s' (ID: 265)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.8206535577774048
    2. '   ' → logprob: -1.1956535577774048
    3. ' sys' → logprob: -2.6956534385681152
    4. 'with' → logprob: -3.0706534385681152
    5. 'import' → logprob: -3.4456534385681152
    6. ' s' → logprob: -3.9456534385681152
    7. ' import' → logprob: -4.195653438568115
    8. ' f' → logprob: -4.445653438568115
    9. '       ' → logprob: -4.570653438568115
    10. 'sys' → logprob: -4.570653438568115

Token 183: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004412197507917881
    2. '.stdout' → logprob: -5.5044121742248535
    3. '.stderr' → logprob: -8.129412651062012
    4. '.argv' → logprob: -11.129412651062012
    5. '.st' → logprob: -11.504412651062012
    6. '.' → logprob: -12.754412651062012
    7. '.input' → logprob: -12.754412651062012
    8. 'stdin' → logprob: -13.129412651062012
    9. '.set' → logprob: -13.254412651062012
    10. '.std' → logprob: -13.379412651062012

Token 184: ' =' (ID: 314)
  Prédit: '=open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=open' → logprob: -0.45181703567504883
    2. '=' → logprob: -1.4518170356750488
    3. ' =' → logprob: -2.076817035675049
    4. '=sys' → logprob: -5.826817035675049
    5. '.readline' → logprob: -8.07681655883789
    6. '.buffer' → logprob: -8.82681655883789
    7. '=f' → logprob: -9.32681655883789
    8. '.close' → logprob: -9.57681655883789
    9. '=input' → logprob: -9.70181655883789
    10. '=file' → logprob: -9.70181655883789

Token 185: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.04860304668545723
    2. ' open' → logprob: -3.048603057861328
    3. 'o' → logprob: -11.298603057861328
    4. '	open' → logprob: -13.673603057861328
    5. 'sys' → logprob: -13.923603057861328
    6. ' o' → logprob: -14.423603057861328
    7. 'os' → logprob: -15.298603057861328
    8. '(open' → logprob: -15.923603057861328
    9. '=open' → logprob: -16.173603057861328
    10. '   ' → logprob: -16.298603057861328

Token 186: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16166795790195465
    2. '('' → logprob: -1.9116679430007935
    3. '(' → logprob: -7.161667823791504
    4. '("./' → logprob: -8.161667823791504
    5. '("../' → logprob: -8.786667823791504
    6. '('./' → logprob: -9.161667823791504
    7. ' ("' → logprob: -10.411667823791504
    8. '("/' → logprob: -10.661667823791504
    9. '("__' → logprob: -10.786667823791504
    10. '('../' → logprob: -11.286667823791504

Token 187: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5795624256134033
    2. '"' → logprob: -1.2045624256134033
    3. ''' → logprob: -2.4545624256134033
    4. 'local' → logprob: -4.204562187194824
    5. ''in' → logprob: -4.579562187194824
    6. ''t' → logprob: -4.704562187194824
    7. '"in' → logprob: -4.829562187194824
    8. 'in' → logprob: -5.954562187194824
    9. 'test' → logprob: -6.329562187194824
    10. 'data' → logprob: -6.954562187194824

Token 188: '.txt' (ID: 7186)
  Prédit: '.txt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.txt' → logprob: -0.001015183632262051
    2. '.' → logprob: -7.1260151863098145
    3. '")' → logprob: -9.126014709472656
    4. '".' → logprob: -9.376014709472656
    5. '.py' → logprob: -12.376014709472656
    6. '.in' → logprob: -12.626014709472656
    7. 'txt' → logprob: -13.501014709472656
    8. ')' → logprob: -13.501014709472656
    9. '.tsv' → logprob: -13.626014709472656
    10. '").' → logprob: -13.751014709472656

Token 189: '")
' (ID: 1896)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18510077893733978
    2. ')' → logprob: -1.810100793838501
    3. ',"' → logprob: -5.685100555419922
    4. '")' → logprob: -6.435100555419922
    5. '",' → logprob: -9.185100555419922
    6. ' ,' → logprob: -9.685100555419922
    7. '"' → logprob: -10.060100555419922
    8. ','' → logprob: -10.310100555419922
    9. '","' → logprob: -10.435100555419922
    10. '')' → logprob: -11.060100555419922

Token 190: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24020272493362427
    2. '   ' → logprob: -1.7402026653289795
    3. '<|end|>' → logprob: -3.4902026653289795
    4. '
' → logprob: -5.990202903747559
    5. '<|end|>' → logprob: -6.490202903747559
    6. '    
' → logprob: -6.990202903747559
    7. '        
' → logprob: -7.740202903747559
    8. ',' → logprob: -8.115202903747559
    9. ' ' → logprob: -8.240202903747559
    10. 's' → logprob: -8.365202903747559

Token 191: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04711427167057991
    2. 'data' → logprob: -3.922114372253418
    3. 'line' → logprob: -4.547114372253418
    4. 'else' → logprob: -6.047114372253418
    5. 'input' → logprob: -6.172114372253418
    6. 'n' → logprob: -6.172114372253418
    7. '    
' → logprob: -6.297114372253418
    8. 'for' → logprob: -6.297114372253418
    9. ' for' → logprob: -7.547114372253418
    10. 'import' → logprob: -7.797114372253418

Token 192: ' ---' (ID: 26691)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03282652422785759
    2. ' n' → logprob: -4.2828264236450195
    3. '   ' → logprob: -4.6578264236450195
    4. 't' → logprob: -5.4078264236450195
    5. 'N' → logprob: -6.2828264236450195
    6. '#' → logprob: -6.7828264236450195
    7. 'data' → logprob: -7.6578264236450195
    8. 'num' → logprob: -8.03282642364502
    9. ' t' → logprob: -8.78282642364502
    10. 'q' → logprob: -9.40782642364502

Token 193: ' read' (ID: 1729)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.47050946950912476
    2. '#' → logprob: -2.5955095291137695
    3. '   ' → logprob: -2.5955095291137695
    4. 'pass' → logprob: -3.2205095291137695
    5. 'rest' → logprob: -3.2205095291137695
    6. '...' → logprob: -3.3455095291137695
    7. 'n' → logprob: -3.9705095291137695
    8. 'line' → logprob: -3.9705095291137695
    9. 'input' → logprob: -4.2205095291137695
    10. 'lines' → logprob: -4.2205095291137695

Token 194: ' number' (ID: 2086)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.37629348039627075
    2. 'n' → logprob: -1.376293420791626
    3. '   ' → logprob: -2.876293420791626
    4. 'data' → logprob: -6.251293659210205
    5. ' data' → logprob: -6.751293659210205
    6. ' t' → logprob: -8.126293182373047
    7. '	n' → logprob: -8.376293182373047
    8. 't' → logprob: -8.751293182373047
    9. '()' → logprob: -8.876293182373047
    10. 'num' → logprob: -9.626293182373047

Token 195: ' ---
' (ID: 128468)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.040792465209961
    2. '_of' → logprob: -1.290792465209961
    3. '   ' → logprob: -1.540792465209961
    4. ' =' → logprob: -2.540792465209961
    5. ' of' → logprob: -2.790792465209961
    6. 's' → logprob: -4.915792465209961
    7. '=' → logprob: -5.540792465209961
    8. 'n' → logprob: -6.165792465209961
    9. '_n' → logprob: -6.540792465209961
    10. '  ' → logprob: -7.790792465209961

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07991744577884674
    2. 'n' → logprob: -2.9549174308776855
    3. ' n' → logprob: -3.7049174308776855
    4. '	n' → logprob: -9.579917907714844
    5. 'num' → logprob: -10.579917907714844
    6. ' num' → logprob: -12.204917907714844
    7. 't' → logprob: -12.329917907714844
    8. '   ' → logprob: -12.579917907714844
    9. '    ' → logprob: -13.204917907714844
    10. 'N' → logprob: -13.204917907714844

Token 197: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05237150937318802
    2. '   ' → logprob: -3.3023715019226074
    3. 'N' (adapté à ' N') → logprob: -4.552371501922607
    4. ' n' → logprob: -6.052371501922607
    5. 'num' → logprob: -7.177371501922607
    6. 't' → logprob: -7.802371501922607
    7. '	n' → logprob: -9.677371978759766
    8. 'x' → logprob: -10.802371978759766
    9. ' N' → logprob: -10.927371978759766
    10. 'a' → logprob: -11.677371978759766

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38702866435050964
    2. ' =' → logprob: -1.137028694152832
    3. ',' → logprob: -8.887028694152832
    4. '=int' → logprob: -11.012028694152832
    5. '=N' → logprob: -14.012028694152832
    6. '   ' → logprob: -14.637028694152832
    7. ' ' → logprob: -14.637028694152832
    8. '=input' → logprob: -15.262028694152832
    9. ' ,' → logprob: -15.387028694152832
    10. ')' → logprob: -15.762028694152832

Token 199: ' read' (ID: 1729)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6563315391540527
    2. 'get' → logprob: -0.7813315391540527
    3. ' read' → logprob: -4.781331539154053
    4. 'read' → logprob: -5.156331539154053
    5. 'int' → logprob: -5.281331539154053
    6. ' int' → logprob: -5.531331539154053
    7. ' geti' → logprob: -8.781332015991211
    8. 'l' → logprob: -10.906332015991211
    9. '	get' → logprob: -11.031332015991211
    10. ' l' → logprob: -11.031332015991211

Token 200: 'i' (ID: 72)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20148350298404694
    2. 'i' → logprob: -1.7014834880828857
    3. '())' → logprob: -10.326483726501465
    4. ' ()' → logprob: -10.951483726501465
    5. '()
' → logprob: -12.076483726501465
    6. '(' → logprob: -12.326483726501465
    7. 'int' → logprob: -13.201483726501465
    8. ')' → logprob: -13.326483726501465
    9. '()

' → logprob: -13.826483726501465
    10. '();' → logprob: -14.076483726501465

Token 201: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012451570364646614
    2. '()
' → logprob: -9.00012493133545
    3. '())' → logprob: -14.87512493133545
    4. '()

' → logprob: -15.00012493133545
    5. ' ()' → logprob: -15.75012493133545
    6. '()\' → logprob: -16.250123977661133
    7. '()<' → logprob: -17.250123977661133
    8. '()]' → logprob: -17.375123977661133
    9. '();' → logprob: -17.500123977661133
    10. '()`' → logprob: -18.375123977661133

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022233637049794197
    2. '<|end|>' → logprob: -3.897233724594116
    3. '    
' → logprob: -6.897233486175537
    4. '    ' → logprob: -8.897233963012695
    5. '<|end|>' → logprob: -9.522233963012695
    6. 'data' → logprob: -9.772233963012695
    7. '
' → logprob: -10.147233963012695
    8. ' ' → logprob: -10.397233963012695
    9. ' A' → logprob: -10.522233963012695
    10. 'n' → logprob: -10.522233963012695

Token 203: ' result' (ID: 1534)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8888574838638306
    2. 'arr' → logprob: -1.2638574838638306
    3. ' A' → logprob: -1.8888574838638306
    4. ' arr' → logprob: -3.138857364654541
    5. '   ' → logprob: -3.388857364654541
    6. 'a' → logprob: -3.763857364654541
    7. 'data' → logprob: -4.763857364654541
    8. 'lst' → logprob: -4.763857364654541
    9. ' numbers' → logprob: -5.388857364654541
    10. ' a' → logprob: -5.388857364654541

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023555243387818336
    2. '=' → logprob: -3.773555278778076
    3. ' ' → logprob: -8.148554801940918
    4. ',' → logprob: -12.648554801940918
    5. '_' → logprob: -12.898554801940918
    6. '   ' → logprob: -13.023554801940918
    7. ' =
' → logprob: -13.148554801940918
    8. ' =)' → logprob: -13.148554801940918
    9. '  ' → logprob: -13.398554801940918
    10. 's' → logprob: -13.773554801940918

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6079505681991577
    2. ' ' → logprob: -0.8579505681991577
    3. '1' → logprob: -3.4829506874084473
    4. ' N' → logprob: -7.857950687408447
    5. '[]' → logprob: -8.982950210571289
    6. 'N' → logprob: -8.982950210571289
    7. ' []' → logprob: -9.357950210571289
    8. '[' → logprob: -10.857950210571289
    9. ' [' → logprob: -11.107950210571289
    10. '[]
' → logprob: -12.357950210571289

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1301516890525818
    2. '1' → logprob: -2.1301517486572266
    3. '[]' → logprob: -5.880151748657227
    4. '[' → logprob: -9.255151748657227
    5. 'N' → logprob: -9.505151748657227
    6. 'calc' → logprob: -9.630151748657227
    7. 'sum' → logprob: -10.130151748657227
    8. '[]
' → logprob: -10.380151748657227
    9. ' ' → logprob: -10.630151748657227
    10. '"' → logprob: -10.630151748657227

Token 207: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16043899953365326
    2. '<|end|>' → logprob: -2.6604390144348145
    3. '
' → logprob: -3.2854390144348145
    4. '    
' → logprob: -3.9104390144348145
    5. ' for' → logprob: -5.0354390144348145
    6. ' 
' → logprob: -5.7854390144348145
    7. ' ' → logprob: -6.0354390144348145
    8. 'for' → logprob: -6.1604390144348145
    9. '<|end|>' → logprob: -6.5354390144348145
    10. '    ' → logprob: -6.7854390144348145

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42739519476890564
    2. '<|end|>' → logprob: -1.177395224571228
    3. ' for' → logprob: -4.177395343780518
    4. 'for' → logprob: -4.802395343780518
    5. '    
' → logprob: -5.052395343780518
    6. '
' → logprob: -5.177395343780518
    7. ' ' → logprob: -6.927395343780518
    8. '<|end|>' → logprob: -7.177395343780518
    9. ' 
' → logprob: -7.427395343780518
    10. '    ' → logprob: -8.05239486694336

Token 209: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24184536933898926
    2. ' for' → logprob: -1.6168453693389893
    3. '   ' → logprob: -4.86684513092041
    4. 'arr' → logprob: -6.24184513092041
    5. 'a' → logprob: -6.61684513092041
    6. 'factor' → logprob: -6.99184513092041
    7. 'current' → logprob: -7.49184513092041
    8. 'l' → logprob: -8.11684513092041
    9. ' l' → logprob: -8.36684513092041
    10. 'freq' → logprob: -8.49184513092041

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6359449625015259
    2. ' =' → logprob: -0.7609449625015259
    3. 'n' → logprob: -6.010944843292236
    4. ' +=' → logprob: -8.635945320129395
    5. ' ' → logprob: -8.760945320129395
    6. ' n' → logprob: -8.760945320129395
    7. ' in' → logprob: -8.760945320129395
    8. '+=' → logprob: -8.885945320129395
    9. 'nt' → logprob: -10.635945320129395
    10. 'for' → logprob: -10.885945320129395

Token 211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.331259161233902
    2. ' ' → logprob: -1.5812591314315796
    3. '0' → logprob: -2.581259250640869
    4. '2' → logprob: -7.581259250640869
    5. 'N' → logprob: -10.206258773803711
    6. ' N' → logprob: -10.581258773803711
    7. '   ' → logprob: -12.331258773803711
    8. '  ' → logprob: -12.956258773803711
    9. '    ' → logprob: -13.956258773803711
    10. '(' → logprob: -14.018758773803711

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10139651596546173
    2. '0' → logprob: -2.3513965606689453
    3. ' ' → logprob: -7.226396560668945
    4. '2' → logprob: -7.851396560668945
    5. 'N' → logprob: -9.726396560668945
    6. '```' → logprob: -12.601396560668945
    7. '   ' → logprob: -12.726396560668945
    8. '(' → logprob: -13.851396560668945
    9. '  ' → logprob: -14.226396560668945
    10. ' N' → logprob: -14.226396560668945

Token 213: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2782312333583832
    2. '<|end|>' → logprob: -1.5282312631607056
    3. '<|end|>' → logprob: -4.903231143951416
    4. '   ' → logprob: -5.528231143951416
    5. ' 
' → logprob: -5.653231143951416
    6. ' while' → logprob: -5.778231143951416
    7. ' ' → logprob: -6.153231143951416
    8. 'while' → logprob: -6.778231143951416
    9. ',' → logprob: -6.903231143951416
    10. '  
' → logprob: -7.028231143951416

Token 214: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5316823124885559
    2. '<|end|>' → logprob: -1.2816822528839111
    3. '   ' → logprob: -2.781682252883911
    4. ' while' → logprob: -3.281682252883911
    5. ' 
' → logprob: -4.90668249130249
    6. ' ' → logprob: -5.03168249130249
    7. 'while' → logprob: -5.15668249130249
    8. '<|end|>' → logprob: -5.40668249130249
    9. ',' → logprob: -5.78168249130249
    10. '    
' → logprob: -5.90668249130249

Token 215: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.20481815934181213
    2. ' while' → logprob: -1.8298181295394897
    3. '   ' → logprob: -3.7048182487487793
    4. '  ' → logprob: -10.579817771911621
    5. '    ' → logprob: -10.579817771911621
    6. '
' → logprob: -10.704817771911621
    7. '	while' → logprob: -10.829817771911621
    8. '    
' → logprob: -11.204817771911621
    9. ' ' → logprob: -11.454817771911621
    10. ',' → logprob: -11.454817771911621

Token 216: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004103335086256266
    2. 'i' → logprob: -5.504103183746338
    3. '(i' → logprob: -11.254103660583496
    4. ' ' → logprob: -12.254103660583496
    5. ' True' → logprob: -13.129103660583496
    6. 'True' → logprob: -13.254103660583496
    7. '	i' → logprob: -13.754103660583496
    8. ' (' → logprob: -14.379103660583496
    9. '   ' → logprob: -14.504103660583496
    10. ' ' → logprob: -15.004103660583496

Token 217: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16045443713665009
    2. '<=' → logprob: -1.9104543924331665
    3. '<' → logprob: -9.285454750061035
    4. ' <' → logprob: -9.285454750061035
    5. ' <<=' → logprob: -10.785454750061035
    6. ' ' → logprob: -11.535454750061035
    7. ' *' → logprob: -12.910454750061035
    8. '<N' → logprob: -13.035454750061035
    9. '*' → logprob: -13.285454750061035
    10. '+' → logprob: -13.410454750061035

Token 218: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.016042932868003845
    2. ' N' → logprob: -4.141042709350586
    3. '   ' → logprob: -12.516042709350586
    4. ' ' → logprob: -12.891042709350586
    5. '10' → logprob: -14.016042709350586
    6. '100' → logprob: -14.516042709350586
    7. '	N' → logprob: -14.641042709350586
    8. '  ' → logprob: -15.891042709350586
    9. 'n' → logprob: -16.016042709350586
    10. ' ' → logprob: -16.641042709350586

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0791764035820961
    2. ':
' → logprob: -2.579176425933838
    3. ' and' → logprob: -8.95417594909668
    4. '   ' → logprob: -9.45417594909668
    5. ' :' → logprob: -10.07917594909668
    6. ' :
' → logprob: -10.95417594909668
    7. 'and' → logprob: -12.07917594909668
    8. '       ' → logprob: -12.57917594909668
    9. '):
' → logprob: -13.07917594909668
    10. '):' → logprob: -13.20417594909668

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07549702376127243
    2. '    ' → logprob: -3.4504969120025635
    3. '   ' → logprob: -3.4504969120025635
    4. ',' → logprob: -5.825497150421143
    5. 'n' → logprob: -7.075497150421143
    6. '    
' → logprob: -7.450497150421143
    7. '     ' → logprob: -7.700497150421143
    8. '        
' → logprob: -7.700497150421143
    9. '<|end|>' → logprob: -8.200496673583984
    10. ' n' → logprob: -8.200496673583984

Token 221: ' sn' (ID: 3967)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07181111723184586
    2. '   ' → logprob: -3.5718111991882324
    3. 'q' → logprob: -4.571811199188232
    4. ' j' → logprob: -4.696811199188232
    5. '       ' → logprob: -4.821811199188232
    6. 'next' → logprob: -5.196811199188232
    7. 'div' → logprob: -5.821811199188232
    8. ' nxt' → logprob: -7.446811199188232
    9. 'val' → logprob: -7.571811199188232
    10. 'n' → logprob: -7.571811199188232

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15422497689723969
    2. '=str' → logprob: -2.6542248725891113
    3. '=' → logprob: -3.0292248725891113
    4. 'r' → logprob: -4.529224872589111
    5. 'str' → logprob: -5.529224872589111
    6. 'um' → logprob: -5.779224872589111
    7. 'tr' → logprob: -6.029224872589111
    8. 'ext' → logprob: -7.154224872589111
    9. '   ' → logprob: -7.404224872589111
    10. '=int' → logprob: -7.654224872589111

Token 223: ' str' (ID: 989)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006026200018823147
    2. ' N' → logprob: -5.256026268005371
    3. 'str' → logprob: -7.881026268005371
    4. 'int' → logprob: -8.631026268005371
    5. 's' → logprob: -9.256026268005371
    6. 'n' → logprob: -10.131026268005371
    7. '   ' → logprob: -10.506026268005371
    8. 'calc' → logprob: -10.881026268005371
    9. ' ' → logprob: -11.256026268005371
    10. '(N' → logprob: -11.506026268005371

Token 224: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005319446790963411
    2. '(N' → logprob: -7.625532150268555
    3. 'i' → logprob: -10.500532150268555
    4. '(' → logprob: -11.250532150268555
    5. '(n' → logprob: -13.750532150268555
    6. '(s' → logprob: -14.000532150268555
    7. 'N' → logprob: -15.000532150268555
    8. ' i' → logprob: -15.250532150268555
    9. '(
' → logprob: -15.250532150268555
    10. '(int' → logprob: -15.375532150268555

Token 225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2814880311489105
    2. ')
' → logprob: -1.406488060951233
    3. ' )' → logprob: -9.281488418579102
    4. '   ' → logprob: -9.531488418579102
    5. ' )
' → logprob: -9.906488418579102
    6. '       ' → logprob: -10.156488418579102
    7. ')
' → logprob: -11.406488418579102
    8. ')`
' → logprob: -11.406488418579102
    9. ').' → logprob: -11.531488418579102
    10. ')

' → logprob: -11.531488418579102

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021709592547267675
    2. ',' → logprob: -7.002171039581299
    3. '<|end|>' → logprob: -7.752171039581299
    4. '        
' → logprob: -8.50217056274414
    5. '   ' → logprob: -8.75217056274414
    6. '#' → logprob: -9.62717056274414
    7. ')' → logprob: -10.12717056274414
    8. '...' → logprob: -10.50217056274414
    9. 'length' → logprob: -10.50217056274414
    10. ' if' → logprob: -10.75217056274414

Token 227: ' #' (ID: 1069)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9392194747924805
    2. 'l' → logprob: -1.6892194747924805
    3. 'len' → logprob: -1.9392194747924805
    4. 'd' → logprob: -2.0642194747924805
    5. 'cnt' → logprob: -3.0642194747924805
    6. '       ' → logprob: -3.9392194747924805
    7. 'digit' → logprob: -3.9392194747924805
    8. 'j' → logprob: -4.3142194747924805
    9. 'k' → logprob: -4.8142194747924805
    10. 'count' → logprob: -4.9392194747924805

Token 228: ' imperative' (ID: 73047)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9093146920204163
    2. 'len' → logprob: -1.6593146324157715
    3. 'l' → logprob: -2.1593146324157715
    4. 'j' → logprob: -2.5343146324157715
    5. 'cnt' → logprob: -2.9093146324157715
    6. 'digit' → logprob: -3.1593146324157715
    7. 'd' → logprob: -3.4093146324157715
    8. 'if' → logprob: -3.6593146324157715
    9. 'count' → logprob: -4.2843146324157715
    10. '   ' → logprob: -5.0343146324157715

Token 229: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042585160583257675
    2. 'length' → logprob: -4.917585372924805
    3. 'if' → logprob: -5.167585372924805
    4. 'len' → logprob: -5.417585372924805
    5. 'for' → logprob: -5.542585372924805
    6. ' if' → logprob: -5.792585372924805
    7. ' for' → logprob: -5.917585372924805
    8. 'n' → logprob: -6.042585372924805
    9. 'count' → logprob: -6.042585372924805
    10. 'while' → logprob: -6.292585372924805

Token 230: ' functional' (ID: 20483)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.3439841270446777
    2. 'if' → logprob: -1.7189841270446777
    3. '       ' → logprob: -1.8439841270446777
    4. ' if' → logprob: -2.8439841270446777
    5. 'length' → logprob: -2.8439841270446777
    6. 'digit' → logprob: -3.3439841270446777
    7. 'while' → logprob: -3.4689841270446777
    8. 'for' → logprob: -3.4689841270446777
    9. 'digits' → logprob: -3.7189841270446777
    10. ' for' → logprob: -4.218984127044678

Token 231: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012916672974824905
    2. ' for' → logprob: -5.887916564941406
    3. 'for' → logprob: -6.637916564941406
    4. 'count' → logprob: -6.762916564941406
    5. ' if' → logprob: -6.887916564941406
    6. '<|end|>' → logprob: -7.012916564941406
    7. ',' → logprob: -7.137916564941406
    8. 'length' → logprob: -7.262916564941406
    9. 'if' → logprob: -7.387916564941406
    10. '        
' → logprob: -7.887916564941406

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006560363341122866
    2. '<|end|>' → logprob: -7.256560325622559
    3. ' for' → logprob: -7.381560325622559
    4. ',' → logprob: -7.381560325622559
    5. '        
' → logprob: -7.756560325622559
    6. '        ' → logprob: -8.006560325622559
    7. '#' → logprob: -8.256560325622559
    8. 'result' → logprob: -8.256560325622559
    9. 'count' → logprob: -8.381560325622559
    10. 'sum' → logprob: -8.506560325622559

Token 233: ' if' (ID: 538)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.3987494707107544
    2. '       ' → logprob: -2.148749351501465
    3. 'result' → logprob: -2.273749351501465
    4. 'len' → logprob: -2.273749351501465
    5. 'cnt' → logprob: -2.523749351501465
    6. 'l' → logprob: -2.773749351501465
    7. 'd' → logprob: -3.398749351501465
    8. 'count' → logprob: -3.523749351501465
    9. 'j' → logprob: -3.523749351501465
    10. 'digit' → logprob: -3.648749351501465

Token 234: ' (' (ID: 350)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3099079728126526
    2. 'len' → logprob: -1.6849079132080078
    3. ' sn' → logprob: -3.059907913208008
    4. ' int' → logprob: -4.434907913208008
    5. ' i' → logprob: -4.434907913208008
    6. 'sn' → logprob: -5.559907913208008
    7. ' s' → logprob: -6.434907913208008
    8. 'int' → logprob: -7.184907913208008
    9. '(len' → logprob: -7.309907913208008
    10. ' (' → logprob: -7.559907913208008

Token 235: 'lambda' (ID: 35280)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0740436241030693
    2. 'int' → logprob: -3.6990435123443604
    3. 'i' → logprob: -3.8240435123443604
    4. 'sn' → logprob: -4.0740437507629395
    5. ' len' → logprob: -6.8240437507629395
    6. 'sum' → logprob: -6.9490437507629395
    7. 's' → logprob: -7.0740437507629395
    8. '(len' → logprob: -7.3240437507629395
    9. '1' → logprob: -7.8240437507629395
    10. 'all' → logprob: -8.074043273925781

Token 236: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.45179662108421326
    2. 'x' → logprob: -1.0767966508865356
    3. ' n' → logprob: -5.576796531677246
    4. 'n' → logprob: -5.951796531677246
    5. 'k' → logprob: -6.201796531677246
    6. ' k' → logprob: -6.201796531677246
    7. ' s' → logprob: -6.451796531677246
    8. 's' → logprob: -6.576796531677246
    9. ' c' → logprob: -6.576796531677246
    10. ' sn' → logprob: -6.701796531677246

Token 237: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03812698647379875
    2. ':x' → logprob: -3.6631269454956055
    3. ' :' → logprob: -4.5381269454956055
    4. ':n' → logprob: -7.7881269454956055
    5. ':s' → logprob: -8.788126945495605
    6. ':i' → logprob: -9.288126945495605
    7. '(x' → logprob: -9.663126945495605
    8. ' x' → logprob: -10.038126945495605
    9. 'x' → logprob: -10.038126945495605
    10. '=x' → logprob: -10.288126945495605

Token 238: ' len' (ID: 4631)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9467257261276245
    2. 'len' → logprob: -1.1967257261276245
    3. 'x' → logprob: -1.5717257261276245
    4. ' len' → logprob: -2.946725845336914
    5. 'int' → logprob: -4.071725845336914
    6. ' int' → logprob: -4.196725845336914
    7. ' all' → logprob: -4.446725845336914
    8. 'all' → logprob: -6.696725845336914
    9. ' any' → logprob: -7.321725845336914
    10. '(len' → logprob: -7.696725845336914

Token 239: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0017882289830595255
    2. 'x' → logprob: -7.126788139343262
    3. '(' → logprob: -7.501788139343262
    4. '(s' → logprob: -8.501788139343262
    5. ')' → logprob: -9.376788139343262
    6. ' (' → logprob: -9.626788139343262
    7. '(sn' → logprob: -10.501788139343262
    8. ')x' → logprob: -10.876788139343262
    9. ')(' → logprob: -11.376788139343262
    10. ' x' → logprob: -11.501788139343262

Token 240: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1413191854953766
    2. ')==' → logprob: -2.1413192749023438
    3. ')>' → logprob: -4.891319274902344
    4. '(x' → logprob: -5.891319274902344
    5. '==' → logprob: -7.016319274902344
    6. ')x' → logprob: -7.016319274902344
    7. ')<=' → logprob: -7.141319274902344
    8. ' )' → logprob: -7.766319274902344
    9. ')>=' → logprob: -7.891319274902344
    10. ')!=' → logprob: -8.516319274902344

Token 241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014969674870371819
    2. '3' → logprob: -4.764969825744629
    3. ' ' → logprob: -5.889969825744629
    4. '10' → logprob: -6.014969825744629
    5. '9' → logprob: -7.639969825744629
    6. '4' → logprob: -8.514969825744629
    7. '5' → logprob: -8.639969825744629
    8. '7' → logprob: -9.514969825744629
    9. '6' → logprob: -9.764969825744629
    10. 'd' → logprob: -10.889969825744629

Token 242: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1396578699350357
    2. ' ==' → logprob: -2.139657974243164
    3. ')==' → logprob: -4.764657974243164
    4. ')' → logprob: -5.764657974243164
    5. '()==' → logprob: -7.639657974243164
    6. '!=' → logprob: -8.139657974243164
    7. ' !=' → logprob: -8.889657974243164
    8. ' )' → logprob: -10.764657974243164
    9. '=' → logprob: -11.514657974243164
    10. ' ' → logprob: -11.639657974243164

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.057930365204811096
    2. '2' → logprob: -2.9329304695129395
    3. ' ' → logprob: -6.1829304695129395
    4. '1' → logprob: -6.9329304695129395
    5. '
' → logprob: -14.057929992675781
    6. '```' → logprob: -14.182929992675781
    7. '==' → logprob: -14.682929992675781
    8. ')' → logprob: -14.995429992675781
    9. '   ' → logprob: -15.807929992675781
    10. 'zero' → logprob: -16.05792999267578

Token 244: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4429778456687927
    2. '2' → logprob: -1.0679779052734375
    3. '1' → logprob: -4.3179779052734375
    4. ' ' → logprob: -7.1929779052734375
    5. '
' → logprob: -10.880477905273438
    6. '10' → logprob: -11.442977905273438
    7. ')' → logprob: -11.505477905273438
    8. '20' → logprob: -11.567977905273438
    9. '01' → logprob: -12.130477905273438
    10. '```' → logprob: -12.567977905273438

Token 245: ' and' (ID: 326)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.00043984793592244387
    2. ')' → logprob: -9.125439643859863
    3. ' )(' → logprob: -9.125439643859863
    4. ')("' → logprob: -9.750439643859863
    5. ')((' → logprob: -9.875439643859863
    6. '(sn' → logprob: -10.125439643859863
    7. '(s' → logprob: -10.375439643859863
    8. '))(' → logprob: -11.375439643859863
    9. ')(
' → logprob: -11.500439643859863
    10. '   ' → logprob: -13.000439643859863

Token 246: ' len' (ID: 4631)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.8424584269523621
    2. 'int' → logprob: -1.4674584865570068
    3. 'all' → logprob: -1.9674584865570068
    4. 'x' → logprob: -2.467458486557007
    5. ' x' → logprob: -3.217458486557007
    6. ' int' → logprob: -3.217458486557007
    7. 'any' → logprob: -4.717458248138428
    8. 'sum' → logprob: -5.092458248138428
    9. ' any' → logprob: -5.342458248138428
    10. 'g' → logprob: -6.092458248138428

Token 247: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.054770901799201965
    2. '(set' → logprob: -3.8047709465026855
    3. '(sn' → logprob: -4.0547709465026855
    4. '(s' → logprob: -5.0547709465026855
    5. 'x' → logprob: -5.8047709465026855
    6. '(list' → logprob: -6.5547709465026855
    7. '(str' → logprob: -7.0547709465026855
    8. '([' → logprob: -7.0547709465026855
    9. '({' → logprob: -7.8047709465026855
    10. 'sn' → logprob: -8.429770469665527

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3634772002696991
    2. '(x' → logprob: -1.7384772300720215
    3. ')%' → logprob: -2.6134772300720215
    4. ')>' → logprob: -3.6134772300720215
    5. ')x' → logprob: -4.3634772300720215
    6. ')==' → logprob: -4.9884772300720215
    7. '%' → logprob: -6.1134772300720215
    8. 'x' → logprob: -6.7384772300720215
    9. ')>=' → logprob: -6.7384772300720215
    10. '%x' → logprob: -6.8634772300720215

Token 249: ' <=' (ID: 5017)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.9708083868026733
    2. ')' → logprob: -1.0958083868026733
    3. ')>' → logprob: -2.345808506011963
    4. '%' → logprob: -2.845808506011963
    5. ')%' → logprob: -3.845808506011963
    6. ')x' → logprob: -3.845808506011963
    7. '%x' → logprob: -4.095808506011963
    8. '>=' → logprob: -4.595808506011963
    9. '>x' → logprob: -4.595808506011963
    10. '>' → logprob: -4.720808506011963

Token 250: ' len' (ID: 4631)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7027614712715149
    2. '9' → logprob: -0.9527614712715149
    3. '7' → logprob: -3.07776141166687
    4. '11' → logprob: -3.82776141166687
    5. '3' → logprob: -3.95276141166687
    6. ' ' → logprob: -4.452761650085449
    7. '10' → logprob: -4.952761650085449
    8. '19' → logprob: -5.077761650085449
    9. '17' → logprob: -6.577761650085449
    10. '15' → logprob: -6.702761650085449

Token 251: '(str' (ID: 7946)
  Prédit: '(sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sn' → logprob: -0.040362462401390076
    2. '(s' → logprob: -4.165362358093262
    3. '("' → logprob: -4.540362358093262
    4. '('' → logprob: -5.290362358093262
    5. 'sn' → logprob: -5.915362358093262
    6. '(str' → logprob: -6.165362358093262
    7. '(x' → logprob: -6.540362358093262
    8. '(' → logprob: -6.915362358093262
    9. ' sn' → logprob: -8.040362358093262
    10. ' ' → logprob: -9.415362358093262

Token 252: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.010429243557155132
    2. 'N' → logprob: -4.635429382324219
    3. '(i' → logprob: -8.510429382324219
    4. '(' → logprob: -8.635429382324219
    5. '(n' → logprob: -9.135429382324219
    6. 'i' → logprob: -10.385429382324219
    7. '(s' → logprob: -10.510429382324219
    8. '((' → logprob: -11.010429382324219
    9. '(
' → logprob: -11.260429382324219
    10. '	N' → logprob: -11.385429382324219

Token 253: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.21867117285728455
    2. ')))' → logprob: -1.718671202659607
    3. '))))' → logprob: -5.0936713218688965
    4. '       ' → logprob: -5.3436713218688965
    5. ')):' → logprob: -5.7186713218688965
    6. '   ' → logprob: -6.5936713218688965
    7. '           ' → logprob: -8.593670845031738
    8. ')' → logprob: -8.593670845031738
    9. '()))' → logprob: -8.718670845031738
    10. ')):
' → logprob: -9.218670845031738

Token 254: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.4375914931297302
    2. ' and' → logprob: -1.312591552734375
    3. 'and' → logprob: -2.687591552734375
    4. '       ' → logprob: -4.687591552734375
    5. ')' → logprob: -5.687591552734375
    6. '):' → logprob: -6.687591552734375
    7. ' )(' → logprob: -6.937591552734375
    8. '   ' → logprob: -7.562591552734375
    9. '))(' → logprob: -7.562591552734375
    10. '           ' → logprob: -8.312591552734375

Token 255: 'sn' (ID: 22095)
  Prédit: 'sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -9.603335638530552e-05
    2. ' sn' → logprob: -9.375096321105957
    3. '(sn' → logprob: -11.875096321105957
    4. 's' → logprob: -12.625096321105957
    5. ')' → logprob: -14.875096321105957
    6. '   ' → logprob: -15.250096321105957
    7. '           ' → logprob: -16.62509536743164
    8. '
' → logprob: -16.87509536743164
    9. 'sns' → logprob: -17.37509536743164
    10. ' ' → logprob: -17.62509536743164

Token 256: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012284528464078903
    2. ')' → logprob: -4.637284755706787
    3. '):
' → logprob: -6.137284755706787
    4. ' ):' → logprob: -8.512284278869629
    5. ')):' → logprob: -9.012284278869629
    6. '       ' → logprob: -12.012284278869629
    7. ' )' → logprob: -12.262284278869629
    8. '   ' → logprob: -12.262284278869629
    9. '))' → logprob: -12.387284278869629
    10. ':' → logprob: -12.637284278869629

Token 257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07799472659826279
    2. ':' → logprob: -2.9529948234558105
    3. ':
' → logprob: -4.2029948234558105
    4. ' and' → logprob: -5.9529948234558105
    5. '):' → logprob: -6.3279948234558105
    6. ' :' → logprob: -7.2029948234558105
    7. '):
' → logprob: -7.2029948234558105
    8. ',' → logprob: -7.4529948234558105
    9. '       ' → logprob: -7.5779948234558105
    10. ')' → logprob: -7.9529948234558105

Token 258: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.20524108409881592
    2. ' result' → logprob: -1.955241084098816
    3. '           ' → logprob: -3.4552412033081055
    4. '       ' → logprob: -4.5802412033081055
    5. 'if' → logprob: -7.0802412033081055
    6. ' if' → logprob: -7.3302412033081055
    7. 'count' → logprob: -7.8302412033081055
    8. '   ' → logprob: -9.580241203308105
    9. '               ' → logprob: -9.830241203308105
    10. ' count' → logprob: -10.205241203308105

Token 259: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20142298936843872
    2. '+=' → logprob: -1.701422929763794
    3. '   ' → logprob: -12.701422691345215
    4. '=' → logprob: -12.951422691345215
    5. ' =' → logprob: -13.451422691345215
    6. '+' → logprob: -13.576422691345215
    7. '+=(' → logprob: -14.201422691345215
    8. ']+=' → logprob: -14.576422691345215
    9. ' ' → logprob: -15.451422691345215
    10. '    ' → logprob: -16.82642364501953

Token 260: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0662354901432991
    2. 'i' → logprob: -2.8162355422973633
    3. 'calc' → logprob: -6.191235542297363
    4. ' ' → logprob: -6.941235542297363
    5. 'int' → logprob: -7.691235542297363
    6. ' i' → logprob: -8.066235542297363
    7. 'sn' → logprob: -8.316235542297363
    8. '   ' → logprob: -10.191235542297363
    9. 'n' → logprob: -10.566235542297363
    10. '(' → logprob: -10.816235542297363

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04417363181710243
    2. 'i' → logprob: -3.1691737174987793
    3. 'calc' → logprob: -7.669173717498779
    4. 'int' → logprob: -7.794173717498779
    5. 'sn' → logprob: -8.794173240661621
    6. ' ' → logprob: -10.544173240661621
    7. '(' → logprob: -10.544173240661621
    8. '(i' → logprob: -10.669173240661621
    9. 'g' → logprob: -11.294173240661621
    10. 'len' → logprob: -11.669173240661621

Token 262: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35000377893447876
    2. '
' → logprob: -1.225003719329834
    3. '        
' → logprob: -7.850003719329834
    4. '<|end|>' → logprob: -7.975003719329834
    5. '\n' → logprob: -8.100004196166992
    6. '
' → logprob: -9.225004196166992
    7. '   ' → logprob: -9.225004196166992
    8. ' 
' → logprob: -9.350004196166992
    9. '<|end|>' → logprob: -9.475004196166992
    10. '  
' → logprob: -10.350004196166992

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019230410689488053
    2. '
' → logprob: -6.376923084259033
    3. '   ' → logprob: -8.751922607421875
    4. '        
' → logprob: -10.001922607421875
    5. '           ' → logprob: -12.376922607421875
    6. '    
' → logprob: -12.751922607421875
    7. ',' → logprob: -12.876922607421875
    8. '<|end|>' → logprob: -12.876922607421875
    9. '            
' → logprob: -14.376922607421875
    10. ' 
' → logprob: -14.376922607421875

Token 264: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.205840066075325
    2. '   ' → logprob: -1.7058401107788086
    3. 'i' (adapté à ' i') → logprob: -5.830840110778809
    4. ' i' → logprob: -6.830840110778809
    5. '
' → logprob: -8.580840110778809
    6. '    
' → logprob: -9.705840110778809
    7. '        
' → logprob: -10.330840110778809
    8. '  ' → logprob: -10.830840110778809
    9. '	i' → logprob: -10.955840110778809
    10. ' ' → logprob: -11.080840110778809

Token 265: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0008747781976126134
    2. ' +=' → logprob: -7.250874996185303
    3. '+' → logprob: -8.750874519348145
    4. '=' → logprob: -12.000874519348145
    5. '++' → logprob: -15.125874519348145
    6. '+="' → logprob: -16.87587547302246
    7. '*=' → logprob: -17.12587547302246
    8. ']+=' → logprob: -18.25087547302246
    9. '+=(' → logprob: -18.87587547302246
    10. '+='' → logprob: -18.87587547302246

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018220659694634378
    2. ' ' → logprob: -8.625182151794434
    3. '2' → logprob: -12.875182151794434
    4. '   ' → logprob: -16.50018310546875
    5. '  ' → logprob: -17.00018310546875
    6. '10' → logprob: -17.18768310546875
    7. 's' → logprob: -17.43768310546875
    8. '```' → logprob: -18.12518310546875
    9. '9' → logprob: -18.31268310546875
    10. '
' → logprob: -18.31268310546875

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.555654105497524e-05
    2. ' ' → logprob: -9.50009536743164
    3. '2' → logprob: -10.87509536743164
    4. '10' → logprob: -13.75009536743164
    5. '100' → logprob: -16.06259536743164
    6. '9' → logprob: -16.37509536743164
    7. '```' → logprob: -17.25009536743164
    8. '   ' → logprob: -17.31259536743164
    9. '１' → logprob: -17.68759536743164
    10. '  ' → logprob: -17.81259536743164

Token 268: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20673225820064545
    2. '
' → logprob: -1.7067322731018066
    3. '<|end|>' → logprob: -5.456732273101807
    4. 'return' → logprob: -7.956732273101807
    5. '    
' → logprob: -8.331731796264648
    6. '\n' → logprob: -8.581731796264648
    7. ' return' → logprob: -9.081731796264648
    8. '<|end|>' → logprob: -10.581731796264648
    9. '	return' → logprob: -10.831731796264648
    10. '
' → logprob: -10.956731796264648

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009549835696816444
    2. 'return' → logprob: -5.009549617767334
    3. '<|end|>' → logprob: -6.884549617767334
    4. 'if' → logprob: -7.509549617767334
    5. 'print' → logprob: -7.759549617767334
    6. ' return' → logprob: -7.884549617767334
    7. '
' → logprob: -8.009550094604492
    8. '	return' → logprob: -10.009550094604492
    9. '    
' → logprob: -10.259550094604492
    10. ' if' → logprob: -11.634550094604492

Token 270: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013894917443394661
    2. 'return' → logprob: -4.763895034790039
    3. 'print' (adapté à ' print') → logprob: -5.263895034790039
    4. ' return' → logprob: -9.513895034790039
    5. '	return' → logprob: -11.638895034790039
    6. ' print' → logprob: -13.013895034790039
    7. 'if' → logprob: -13.388895034790039
    8. '<|end|>' → logprob: -13.388895034790039
    9. '    
' → logprob: -13.513895034790039
    10. '
' → logprob: -14.888895034790039

Token 271: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0024861192796379328
    2. '(' → logprob: -6.002486228942871
    3. 'result' → logprob: -11.627486228942871
    4. '()' → logprob: -13.627486228942871
    5. ' (' → logprob: -16.752485275268555
    6. '(
' → logprob: -16.877485275268555
    7. '(results' → logprob: -17.127485275268555
    8. '('' → logprob: -17.127485275268555
    9. '(res' → logprob: -18.377485275268555
    10. '=result' → logprob: -18.377485275268555

Token 272: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.750000953674316
    4. ')`' → logprob: -17.25
    5. '))' → logprob: -17.75
    6. '`)' → logprob: -18.5
    7. '）' → logprob: -18.75
    8. '')' → logprob: -18.75
    9. '")' → logprob: -19.125
    10. '())' → logprob: -19.25

Token 273: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18245407938957214
    2. 'entry' → logprob: -1.8074541091918945
    3. '
' → logprob: -6.5574541091918945
    4. '<|end|>' → logprob: -7.3074541091918945
    5. '(entry' → logprob: -8.807454109191895
    6. ' entry' → logprob: -9.057454109191895
    7. '#' → logprob: -9.807454109191895
    8. ' if' → logprob: -9.807454109191895
    9. '\n' → logprob: -10.182454109191895
    10. '[' → logprob: -10.307454109191895

Token 274: ' main' (ID: 2758)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2726534903049469
    2. ' main' → logprob: -1.8976534605026245
    3. '__' → logprob: -2.522653579711914
    4. 'main' → logprob: -5.647653579711914
    5. '_' → logprob: -6.147653579711914
    6. '_main' → logprob: -6.897653579711914
    7. ' entry' → logprob: -7.022653579711914
    8. ' ' → logprob: -8.272653579711914
    9. ' _' → logprob: -8.397653579711914
    10. '_entry' → logprob: -9.022653579711914

Token 275: '_func' (ID: 22252)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -1.3544423381972592e-05
    2. '():
' → logprob: -11.75001335144043
    3. ' ():' → logprob: -12.12501335144043
    4. '()' → logprob: -15.75001335144043
    5. '(' → logprob: -18.12501335144043
    6. '():
' → logprob: -18.37501335144043
    7. ':' → logprob: -18.87501335144043
    8. '():

' → logprob: -19.50001335144043
    9. '_' → logprob: -19.75001335144043
    10. '().' → logprob: -20.00001335144043

Token 276: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.7697225252486533e-06
    2. ' ():' → logprob: -13.000003814697266
    3. '():
' → logprob: -13.500003814697266
    4. '()' → logprob: -16.125003814697266
    5. '():
' → logprob: -18.500003814697266
    6. '(' → logprob: -19.250003814697266
    7. '():

' → logprob: -20.875003814697266
    8. ':' → logprob: -21.000003814697266
    9. '();' → logprob: -22.000003814697266
    10. '().' → logprob: -22.125003814697266

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24447442591190338
    2. 'entry' → logprob: -1.8694744110107422
    3. 'if' → logprob: -3.119474411010742
    4. ' entry' → logprob: -4.119474411010742
    5. '	entry' → logprob: -6.994474411010742
    6. ' if' → logprob: -7.869474411010742
    7. '(entry' → logprob: -8.119474411010742
    8. '    
' → logprob: -8.744474411010742
    9. '
' → logprob: -8.744474411010742
    10. 'import' → logprob: -9.119474411010742

Token 278: ' entry' (ID: 7251)
  Prédit: 'entry'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entry' (adapté à ' entry') → logprob: -0.005964226555079222
    2. 'if' → logprob: -5.130964279174805
    3. 'import' → logprob: -10.755964279174805
    4. ' entry' → logprob: -11.630964279174805
    5. 'try' → logprob: -13.505964279174805
    6. 's' → logprob: -13.630964279174805
    7. '   ' → logprob: -13.880964279174805
    8. 'for' → logprob: -14.505964279174805
    9. 'return' → logprob: -15.005964279174805
    10. 'o' → logprob: -15.380964279174805

Token 279: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.673547563375905e-05
    2. '()
' → logprob: -9.500086784362793
    3. '()

' → logprob: -12.250086784362793
    4. '();' → logprob: -13.250086784362793
    5. '(' → logprob: -13.375086784362793
    6. '()`' → logprob: -13.875086784362793
    7. ' ()' → logprob: -14.250086784362793
    8. '()\' → logprob: -14.625086784362793
    9. '()]' → logprob: -14.750086784362793
    10. '()<' → logprob: -15.375086784362793

Token 280: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00034821697045117617
    2. '<|end|>' → logprob: -8.750348091125488
    3. '
' → logprob: -9.500348091125488
    4. '\n' → logprob: -9.625348091125488
    5. ' if' → logprob: -11.000348091125488
    6. 'main' → logprob: -11.000348091125488
    7. '\' → logprob: -11.750348091125488
    8. '```' → logprob: -13.000348091125488
    9. 'i' → logprob: -13.750348091125488
    10. '#' → logprob: -13.875348091125488

Token 281: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.029753848910331726
    2. '__' → logprob: -3.5297539234161377
    3. 'name' → logprob: -12.779753684997559
    4. ' "__' → logprob: -15.404753684997559
    5. ' ' → logprob: -15.904753684997559
    6. '_name' → logprob: -16.154754638671875
    7. ' '__' → logprob: -16.904754638671875
    8. '___' → logprob: -17.279754638671875
    9. ' True' → logprob: -17.779754638671875
    10. ' ' → logprob: -17.779754638671875

Token 282: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3141309916973114
    2. ' ==' → logprob: -1.4391310214996338
    3. '==' → logprob: -3.939131021499634
    4. 'name' → logprob: -4.564130783081055
    5. ' __' → logprob: -6.314130783081055
    6. '.name' → logprob: -8.189130783081055
    7. '.__' → logprob: -8.939130783081055
    8. '=="' → logprob: -9.189130783081055
    9. '__.__' → logprob: -9.439130783081055
    10. '__.' → logprob: -10.439130783081055

Token 283: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001725511101540178
    2. '==' → logprob: -8.75017261505127
    3. ' ==' → logprob: -11.62517261505127
    4. '_' → logprob: -12.75017261505127
    5. ' __' → logprob: -14.37517261505127
    6. '___' → logprob: -14.37517261505127
    7. '__.__' → logprob: -15.00017261505127
    8. '__.' → logprob: -15.37517261505127
    9. '=="' → logprob: -16.000171661376953
    10. '=' → logprob: -16.125171661376953

Token 284: '=="' (ID: 24027)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5373479127883911
    2. '==' → logprob: -0.9123479127883911
    3. '=="' → logprob: -4.537347793579102
    4. '__' → logprob: -5.787347793579102
    5. '=='' → logprob: -8.037347793579102
    6. ' =="' → logprob: -11.412347793579102
    7. '=' → logprob: -11.787347793579102
    8. '[' → logprob: -12.662347793579102
    9. '===' → logprob: -12.662347793579102
    10. '==
' → logprob: -13.162347793579102

Token 285: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2840876877307892
    2. '"' → logprob: -1.7840876579284668
    3. ''' → logprob: -2.534087657928467
    4. 'main' → logprob: -11.909088134765625
    5. ' "__' → logprob: -12.034088134765625
    6. ' __' → logprob: -14.284088134765625
    7. '_main' → logprob: -14.409088134765625
    8. ' '__' → logprob: -15.409088134765625
    9. '   ' → logprob: -15.534088134765625
    10. '___' → logprob: -15.534088134765625

Token 286: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003398726985324174
    2. 'name' → logprob: -8.00033950805664
    3. '_main' → logprob: -12.62533950805664
    4. '__' → logprob: -14.12533950805664
    5. ' main' → logprob: -15.62533950805664
    6. '"' → logprob: -16.50033950805664
    7. 'built' → logprob: -17.87533950805664
    8. '-main' → logprob: -18.12533950805664
    9. '_MAIN' → logprob: -18.37533950805664
    10. '"name' → logprob: -18.50033950805664

Token 287: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.31550076603889465
    2. '__' → logprob: -1.3155007362365723
    3. '__':
' → logprob: -6.815500736236572
    4. '__:' → logprob: -6.815500736236572
    5. ':' → logprob: -10.31550121307373
    6. '__
' → logprob: -12.31550121307373
    7. '__["' → logprob: -13.31550121307373
    8. ':
' → logprob: -13.44050121307373
    9. '_' → logprob: -14.31550121307373
    10. '```' → logprob: -15.19050121307373

Token 288: '   ' (ID: 271)
  Prédit: '	main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	main' → logprob: -0.07163479179143906
    2. '   ' → logprob: -3.0716347694396973
    3. 'main' → logprob: -3.8216347694396973
    4. ' main' → logprob: -7.071634769439697
    5. '\t' → logprob: -10.821635246276855
    6. '_main' → logprob: -11.321635246276855
    7. '	Main' → logprob: -12.071635246276855
    8. '   ' → logprob: -13.196635246276855
    9. '(main' → logprob: -14.321635246276855
    10. ' ' → logprob: -14.571635246276855

Token 289: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -21.0
    4. '(main' → logprob: -24.375
    5. '_main' → logprob: -25.0
    6. '   ' → logprob: -25.125
    7. '.main' → logprob: -25.375
    8. '/main' → logprob: -28.625
    9. '
' → logprob: -28.875
    10. '__' → logprob: -28.875

Token 290: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00011403311509639025
    2. '_' → logprob: -10.250114440917969
    3. '__' → logprob: -10.500114440917969
    4. '()' → logprob: -11.000114440917969
    5. 'func' → logprob: -11.125114440917969
    6. '_fun' → logprob: -11.375114440917969
    7. '_function' → logprob: -12.625114440917969
    8. '_f' → logprob: -13.125114440917969
    9. '_FUNC' → logprob: -13.750114440917969
    10. '_funcs' → logprob: -14.375114440917969

Token 291: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 289
Tokens correctement prédits (1ère position, stricte): 117
Tokens correctement prédits (1ère position, avec adaptation): 121
Tokens correctement prédits (top 10): 228
Précision stricte (1ère position): 40.48%
Précision adaptée (1ère position): 41.87%
Précision (top 10): 78.89%
================================================================================
