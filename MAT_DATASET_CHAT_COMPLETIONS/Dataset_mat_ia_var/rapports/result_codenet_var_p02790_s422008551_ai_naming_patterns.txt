================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_str_1, input_str_2 = input().split()

str1_mult_int2 = input_str_1 * int(input_str_2)
str2_mult_int1 = input_str_2 * int(input_str_1)

if str1_mult_int2 < str2_mult_int1:
    print(str1_mult_int2)
else:
    print(str2_mult_int1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_str' (ID: 6182)
  → Token d'amorce (pas de prédiction)

Token 2: '_' (ID: 62)
  → Token d'amorce (pas de prédiction)

Token 3: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07073522359132767
    2. '=' → logprob: -2.945735216140747
    3. '.' → logprob: -4.820735454559326
    4. '[]' → logprob: -6.320735454559326
    5. '+' → logprob: -6.570735454559326
    6. ' =' → logprob: -6.820735454559326
    7. '[:' → logprob: -7.195735454559326
    8. '```' → logprob: -7.445735454559326
    9. '[:]' → logprob: -8.195734977722168
    10. ')' → logprob: -8.320734977722168

Token 4: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9454209804534912
    2. '_' → logprob: -1.0704209804534912
    3. '.' → logprob: -2.320420980453491
    4. '=' → logprob: -2.695420980453491
    5. ':' → logprob: -2.695420980453491
    6. '+' → logprob: -4.44542121887207
    7. ' =' → logprob: -4.94542121887207
    8. '```' → logprob: -5.82042121887207
    9. ''' → logprob: -6.57042121887207
    10. ',' → logprob: -6.82042121887207

Token 5: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4429187774658203
    2. '=' → logprob: -2.0679187774658203
    3. ' ' → logprob: -3.1929187774658203
    4. ',' → logprob: -3.3179187774658203
    5. '_' → logprob: -3.5679187774658203
    6. '.' → logprob: -3.6929187774658203
    7. ' =' → logprob: -3.8179187774658203
    8. '[' → logprob: -3.9429187774658203
    9. '`' → logprob: -4.69291877746582
    10. ''' → logprob: -4.94291877746582

Token 6: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29282110929489136
    2. '[' → logprob: -1.6678211688995361
    3. '.' → logprob: -3.792821168899536
    4. '_str' → logprob: -4.167820930480957
    5. ')' → logprob: -4.292820930480957
    6. '=' → logprob: -5.667820930480957
    7. '```' → logprob: -6.292820930480957
    8. '._' → logprob: -6.417820930480957
    9. ' =' → logprob: -6.667820930480957
    10. '(' → logprob: -6.792820930480957

Token 7: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.264137327671051
    2. '[' → logprob: -1.5141372680664062
    3. '.' → logprob: -5.514137268066406
    4. '1' → logprob: -6.014137268066406
    5. '=' → logprob: -6.264137268066406
    6. ' =' → logprob: -7.389137268066406
    7. ')' → logprob: -7.639137268066406
    8. '._' → logprob: -7.764137268066406
    9. '2' → logprob: -8.139137268066406
    10. '+' → logprob: -8.139137268066406

Token 8: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003025840735062957
    2. '0' → logprob: -6.253026008605957
    3. '3' → logprob: -7.378026008605957
    4. '1' → logprob: -8.378026008605957
    5. '4' → logprob: -8.503026008605957
    6. '5' → logprob: -11.253026008605957
    7. '`' → logprob: -11.878026008605957
    8. '```' → logprob: -12.128026008605957
    9. '_' → logprob: -12.253026008605957
    10. '9' → logprob: -12.503026008605957

Token 9: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.461525022983551
    2. '=' → logprob: -1.7115249633789062
    3. '(' → logprob: -2.9615249633789062
    4. '[' → logprob: -3.3365249633789062
    5. '```' → logprob: -3.4615249633789062
    6. ',' → logprob: -3.5865249633789062
    7. ')' → logprob: -4.461524963378906
    8. ':' → logprob: -4.586524963378906
    9. '.' → logprob: -4.961524963378906
    10. ' =' → logprob: -5.461524963378906

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5934761762619019
    2. ' input' → logprob: -0.8434761762619019
    3. '"' → logprob: -4.468476295471191
    4. ''' → logprob: -6.218476295471191
    5. ' map' → logprob: -7.343476295471191
    6. 'map' → logprob: -7.593476295471191
    7. ' ' → logprob: -7.593476295471191
    8. ' "' → logprob: -7.843476295471191
    9. ' '' → logprob: -7.968476295471191
    10. '''' → logprob: -8.093476295471191

Token 11: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3695465624332428
    2. '().' → logprob: -2.24454665184021
    3. '()' → logprob: -2.49454665184021
    4. '.split' → logprob: -3.49454665184021
    5. '[' → logprob: -3.74454665184021
    6. ',' → logprob: -4.119546413421631
    7. 'split' → logprob: -4.994546413421631
    8. 's' → logprob: -4.994546413421631
    9. '```' → logprob: -5.244546413421631
    10. '("("' → logprob: -5.619546413421631

Token 12: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.03821980580687523
    2. '.' → logprob: -4.038219928741455
    3. '().' → logprob: -4.288219928741455
    4. '.strip' → logprob: -5.788219928741455
    5. 'split' → logprob: -6.663219928741455
    6. '()' → logprob: -7.038219928741455
    7. ',' → logprob: -7.663219928741455
    8. '(' → logprob: -8.788219451904297
    9. '.replace' → logprob: -9.288219451904297
    10. ')' → logprob: -9.788219451904297

Token 13: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02391648292541504
    2. '()' → logprob: -3.773916482925415
    3. '('' → logprob: -8.023916244506836
    4. '("("' → logprob: -9.648916244506836
    5. '(
' → logprob: -9.773916244506836
    6. '```' → logprob: -9.898916244506836
    7. '(()' → logprob: -10.648916244506836
    8. '(`' → logprob: -10.648916244506836
    9. '(

' → logprob: -10.648916244506836
    10. '`' → logprob: -10.648916244506836

Token 14: 'str' (ID: 689)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0240379571914673
    2. '.' → logprob: -1.5240379571914673
    3. '#' → logprob: -1.8990379571914673
    4. '*' → logprob: -2.8990378379821777
    5. '_' → logprob: -3.0240378379821777
    6. ',' → logprob: -3.2740378379821777
    7. 'if' → logprob: -3.3990378379821777
    8. '[' → logprob: -3.3990378379821777
    9. '```' → logprob: -4.274037837982178
    10. '=' → logprob: -4.524037837982178

Token 15: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8134877681732178
    2. 'ing' → logprob: -0.9384877681732178
    3. '(' → logprob: -2.4384877681732178
    4. '()' → logprob: -3.6884877681732178
    5. '1' → logprob: -3.8134877681732178
    6. '.' → logprob: -4.063488006591797
    7. 's' → logprob: -4.938488006591797
    8. '._' → logprob: -6.188488006591797
    9. '[' → logprob: -7.438488006591797
    10. '_ing' → logprob: -7.563488006591797

Token 16: '_mult' (ID: 44050)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7688888311386108
    2. '_' → logprob: -0.7688888311386108
    3. '.' → logprob: -3.3938889503479004
    4. '1' → logprob: -3.8938889503479004
    5. '(' → logprob: -4.6438889503479
    6. 's' → logprob: -5.3938889503479
    7. '[:]' → logprob: -6.8938889503479
    8. ')' → logprob: -7.2688889503479
    9. '_str' → logprob: -7.2688889503479
    10. '._' → logprob: -8.018888473510742

Token 17: '_int' (ID: 12285)
  Prédit: 'iplier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iplier' → logprob: -0.48140907287597656
    2. 'ip' → logprob: -2.1064090728759766
    3. '=' → logprob: -2.4814090728759766
    4. ' =' → logprob: -2.8564090728759766
    5. 'ipl' → logprob: -2.8564090728759766
    6. 'iple' → logprob: -3.1064090728759766
    7. '*' → logprob: -5.106409072875977
    8. 'i' → logprob: -5.856409072875977
    9. 'iplayer' → logprob: -6.481409072875977
    10. ' *=' → logprob: -6.856409072875977

Token 18: '2' (ID: 17)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.36019426584243774
    2. 'iplier' → logprob: -1.485194206237793
    3. 'ipl' → logprob: -3.485194206237793
    4. ' =' → logprob: -3.735194206237793
    5. '=' → logprob: -4.610194206237793
    6. 'iple' → logprob: -5.735194206237793
    7. '[' → logprob: -6.110194206237793
    8. '*' → logprob: -6.860194206237793
    9. 's' → logprob: -7.360194206237793
    10. '_ip' → logprob: -7.485194206237793

Token 19: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4447169899940491
    2. 'ip' → logprob: -1.5697169303894043
    3. ' *' → logprob: -2.1947169303894043
    4. '[' → logprob: -4.694716930389404
    5. ' =' → logprob: -4.944716930389404
    6. '(' → logprob: -5.319716930389404
    7. '[:]' → logprob: -5.319716930389404
    8. '=' → logprob: -6.069716930389404
    9. 's' → logprob: -6.194716930389404
    10. 'iplier' → logprob: -6.444716930389404

Token 20: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2563052475452423
    2. 'input' → logprob: -2.00630521774292
    3. ' int' → logprob: -3.13130521774292
    4. 'str' → logprob: -3.63130521774292
    5. ' input' → logprob: -4.38130521774292
    6. ' str' → logprob: -5.50630521774292
    7. 'len' → logprob: -5.50630521774292
    8. ' len' → logprob: -7.63130521774292
    9. ' ' → logprob: -9.506305694580078
    10. '"' → logprob: -9.506305694580078

Token 21: '_str' (ID: 6182)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2645268142223358
    2. '_str' → logprob: -1.8895268440246582
    3. '(' → logprob: -2.764526844024658
    4. '().' → logprob: -4.264526844024658
    5. 'str' → logprob: -6.014526844024658
    6. '_' → logprob: -7.514526844024658
    7. '```' → logprob: -8.7645263671875
    8. '().__' → logprob: -8.8895263671875
    9. 'Str' → logprob: -9.1395263671875
    10. '"' → logprob: -9.1395263671875

Token 22: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.8444881536415778e-05
    2. '1' → logprob: -10.750028610229492
    3. '2' → logprob: -12.375028610229492
    4. '_
' → logprob: -13.750028610229492
    5. 's' → logprob: -14.125028610229492
    6. '_

' → logprob: -15.000028610229492
    7. ' _' → logprob: -15.500028610229492
    8. '\' → logprob: -16.625028610229492
    9. '__' → logprob: -16.875028610229492
    10. '"_' → logprob: -17.250028610229492

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033645812422037125
    2. '2' → logprob: -3.4086458683013916
    3. '3' → logprob: -16.533645629882812
    4. ' ' → logprob: -17.971145629882812
    5. '6' → logprob: -18.158645629882812
    6. '```' → logprob: -18.158645629882812
    7. 'str' → logprob: -18.658645629882812
    8. '0' → logprob: -18.971145629882812
    9. '１' → logprob: -19.096145629882812
    10. '5' → logprob: -19.346145629882812

Token 24: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5774871110916138
    2. ' *' → logprob: -0.8274871110916138
    3. '[:]' → logprob: -7.077486991882324
    4. '[' → logprob: -7.952486991882324
    5. '.count' → logprob: -8.827486991882324
    6. ' ' → logprob: -10.077486991882324
    7. '[:' → logprob: -10.577486991882324
    8. 'count' → logprob: -10.702486991882324
    9. '[::-' → logprob: -11.577486991882324
    10. '[:-' → logprob: -11.577486991882324

Token 25: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01841786876320839
    2. ' int' → logprob: -4.018417835235596
    3. 'input' → logprob: -8.643418312072754
    4. '2' → logprob: -9.518418312072754
    5. ' input' → logprob: -11.768418312072754
    6. ' ' → logprob: -12.393418312072754
    7. 'len' → logprob: -12.518418312072754
    8. '(int' → logprob: -13.643418312072754
    9. '<int' → logprob: -15.268418312072754
    10. '   ' → logprob: -15.768418312072754

Token 26: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16032586991786957
    2. '(input' → logprob: -1.9103258848190308
    3. 'input' → logprob: -9.66032600402832
    4. '(`' → logprob: -11.78532600402832
    5. '(str' → logprob: -12.16032600402832
    6. '('' → logprob: -12.16032600402832
    7. '(
' → logprob: -12.28532600402832
    8. '_' → logprob: -12.78532600402832
    9. ' ' → logprob: -13.53532600402832
    10. '(_' → logprob: -13.66032600402832

Token 27: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.2378600735682994e-05
    2. '(' → logprob: -10.750032424926758
    3. 'str' → logprob: -12.000032424926758
    4. 'Str' → logprob: -13.625032424926758
    5. '(_' → logprob: -13.875032424926758
    6. '_' → logprob: -14.000032424926758
    7. '```' → logprob: -14.125032424926758
    8. '_s' → logprob: -15.000032424926758
    9. ')' → logprob: -15.375032424926758
    10. '_STR' → logprob: -16.250032424926758

Token 28: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.1008713702030946e-06
    2. '2' → logprob: -13.375001907348633
    3. '_str' → logprob: -14.500001907348633
    4. '__' → logprob: -18.250001907348633
    5. ' _' → logprob: -18.750001907348633
    6. '```' → logprob: -19.875001907348633
    7. ')_' → logprob: -21.000001907348633
    8. '_
' → logprob: -21.875001907348633
    9. '-' → logprob: -21.875001907348633
    10. '₂' → logprob: -22.125001907348633

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.125
    3. ' ' → logprob: -15.75
    4. '۲' → logprob: -17.375
    5. '₂' → logprob: -18.375
    6. '２' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '1' → logprob: -19.125
    9. '২' → logprob: -19.75
    10. '٢' → logprob: -19.75

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '))' → logprob: -14.750001907348633
    3. ' )' → logprob: -15.000001907348633
    4. '*' → logprob: -15.625001907348633
    5. '')' → logprob: -15.875001907348633
    6. '),' → logprob: -16.625001907348633
    7. ')`' → logprob: -16.625001907348633
    8. ')
' → logprob: -16.750001907348633
    9. '```' → logprob: -17.125001907348633
    10. '[' → logprob: -17.250001907348633

Token 31: 'str' (ID: 689)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.811348480870947e-05
    2. '2' → logprob: -10.12504768371582
    3. '_' → logprob: -11.75004768371582
    4. '```' → logprob: -16.12504768371582
    5. '_str' → logprob: -16.75004768371582
    6. '１' → logprob: -17.87504768371582
    7. ' ' → logprob: -18.37504768371582
    8. 'str' → logprob: -18.81254768371582
    9. '`' → logprob: -19.06254768371582
    10. '[' → logprob: -19.68754768371582

Token 33: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.3869692385196686
    2. '_' → logprob: -1.1369692087173462
    3. ' _' → logprob: -10.386969566345215
    4. '_mul' → logprob: -10.511969566345215
    5. ' =' → logprob: -11.136969566345215
    6. '_m' → logprob: -11.886969566345215
    7. '_MULT' → logprob: -12.886969566345215
    8. 'mult' → logprob: -13.136969566345215
    9. '_multi' → logprob: -13.386969566345215
    10. '_multiplier' → logprob: -13.386969566345215

Token 34: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.5785657167434692
    2. '_' → logprob: -0.8285657167434692
    3. ' _' → logprob: -6.70356559753418
    4. 'int' → logprob: -7.32856559753418
    5. ' =' → logprob: -7.95356559753418
    6. '_str' → logprob: -8.82856559753418
    7. '=int' → logprob: -10.45356559753418
    8. '_INT' → logprob: -10.57856559753418
    9. 'Int' → logprob: -10.57856559753418
    10. '<int' → logprob: -10.82856559753418

Token 35: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16029459238052368
    2. '2' → logprob: -1.910294532775879
    3. '1' → logprob: -9.660294532775879
    4. '₂' → logprob: -12.910294532775879
    5. ' ' → logprob: -13.160294532775879
    6. '(' → logprob: -14.535294532775879
    7. '```' → logprob: -14.785294532775879
    8. ' _' → logprob: -14.785294532775879
    9. '_=' → logprob: -15.660294532775879
    10. '_
' → logprob: -15.785294532775879

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00025907461531460285
    2. '=' → logprob: -8.375259399414062
    3. '_' → logprob: -10.625259399414062
    4. ' ' → logprob: -13.000259399414062
    5. ' +=' → logprob: -14.625259399414062
    6. ' _' → logprob: -14.875259399414062
    7. 's' → logprob: -15.500259399414062
    8. '[' → logprob: -15.875259399414062
    9. ',' → logprob: -16.000259399414062
    10. ' =)' → logprob: -16.125259399414062

Token 37: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4748227596282959
    2. 'input' → logprob: -0.9748227596282959
    3. 'int' → logprob: -7.349822998046875
    4. ' int' → logprob: -9.224822998046875
    5. '(input' → logprob: -12.974822998046875
    6. '<input' → logprob: -14.349822998046875
    7. ' ' → logprob: -15.099822998046875
    8. '[input' → logprob: -15.849822998046875
    9. '=input' → logprob: -15.849822998046875
    10. 'str' → logprob: -15.974822998046875

Token 38: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00015419373812619597
    2. '_' → logprob: -9.000154495239258
    3. 'str' → logprob: -10.500154495239258
    4. 'Str' → logprob: -13.125154495239258
    5. '_STR' → logprob: -14.875154495239258
    6. '_s' → logprob: -15.750154495239258
    7. ' _' → logprob: -16.000154495239258
    8. '_Str' → logprob: -16.000154495239258
    9. '```' → logprob: -16.375154495239258
    10. '_f' → logprob: -16.500154495239258

Token 39: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00020509003661572933
    2. '_str' → logprob: -8.500205039978027
    3. '2' → logprob: -13.875205039978027
    4. '__' → logprob: -15.500205039978027
    5. 'Str' → logprob: -16.000205993652344
    6. 'str' → logprob: -16.125205993652344
    7. ' _' → logprob: -16.125205993652344
    8. '1' → logprob: -16.750205993652344
    9. '_STR' → logprob: -17.750205993652344
    10. '_Str' → logprob: -17.750205993652344

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07889264822006226
    2. '1' → logprob: -2.578892707824707
    3. 'str' → logprob: -12.953892707824707
    4. '_' → logprob: -15.578892707824707
    5. '```' → logprob: -16.07889175415039
    6. ' ' → logprob: -17.20389175415039
    7. 'input' → logprob: -17.32889175415039
    8. 'int' → logprob: -17.45389175415039
    9. '3' → logprob: -17.51639175415039
    10. '_str' → logprob: -17.64139175415039

Token 41: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023250950500369072
    2. '*' → logprob: -3.7732510566711426
    3. ' +' → logprob: -13.273250579833984
    4. ' ' → logprob: -13.523250579833984
    5. '+' → logprob: -13.773250579833984
    6. ' ' → logprob: -15.273250579833984
    7. '*object' → logprob: -15.398250579833984
    8. '#' → logprob: -15.648250579833984
    9. '**' → logprob: -16.273250579833984
    10. ' **' → logprob: -16.398250579833984

Token 42: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001502598519437015
    2. ' int' → logprob: -6.501502513885498
    3. '<int' → logprob: -16.251502990722656
    4. '(int' → logprob: -16.626502990722656
    5. '[int' → logprob: -17.501502990722656
    6. '1' → logprob: -20.376502990722656
    7. '=int' → logprob: -20.626502990722656
    8. ' ' → logprob: -20.626502990722656
    9. ':int' → logprob: -21.251502990722656
    10. 'len' → logprob: -22.001502990722656

Token 43: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07890113443136215
    2. '(' → logprob: -2.5789010524749756
    3. ' (' → logprob: -12.078901290893555
    4. '(
' → logprob: -12.703901290893555
    5. 'input' → logprob: -13.328901290893555
    6. '(open' → logprob: -15.703901290893555
    7. '(in' → logprob: -15.703901290893555
    8. '('' → logprob: -16.078901290893555
    9. ' input' → logprob: -16.203901290893555
    10. '("("' → logprob: -16.203901290893555

Token 44: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0002338144404347986
    2. 'str' → logprob: -8.37523365020752
    3. 'Str' → logprob: -13.12523365020752
    4. '_' → logprob: -14.37523365020752
    5. '_STR' → logprob: -15.25023365020752
    6. ')' → logprob: -15.37523365020752
    7. '```' → logprob: -16.375234603881836
    8. '_Str' → logprob: -17.000234603881836
    9. ''_' → logprob: -17.500234603881836
    10. '_s' → logprob: -18.125234603881836

Token 45: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013946419348940253
    2. '1' → logprob: -6.626394748687744
    3. '_str' → logprob: -9.751394271850586
    4. '2' → logprob: -11.751394271850586
    5. '[' → logprob: -13.751394271850586
    6. 'str' → logprob: -14.751394271850586
    7. ' _' → logprob: -15.126394271850586
    8. '‌' → logprob: -15.501394271850586
    9. '```' → logprob: -15.876394271850586
    10. ')' → logprob: -16.251394271850586

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -12.875003814697266
    3. '2' → logprob: -14.750003814697266
    4. '```' → logprob: -15.125003814697266
    5. '0' → logprob: -15.750003814697266
    6. ' ' → logprob: -16.875003814697266
    7. '۱' → logprob: -16.875003814697266
    8. '[' → logprob: -17.750003814697266
    9. '１' → logprob: -17.875003814697266
    10. '`' → logprob: -18.250003814697266

Token 47: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. '')' → logprob: -13.625003814697266
    3. '`)' → logprob: -13.750003814697266
    4. ' )' → logprob: -14.750003814697266
    5. '")' → logprob: -15.375003814697266
    6. ')
' → logprob: -15.500003814697266
    7. '))' → logprob: -15.500003814697266
    8. ')`' → logprob: -16.125003814697266
    9. '#' → logprob: -17.250003814697266
    10. '```' → logprob: -17.625003814697266

Token 48: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7469332814216614
    2. '<|end|>' → logprob: -1.8719332218170166
    3. 'print' → logprob: -1.9969332218170166
    4. '#' → logprob: -3.1219332218170166
    5. ' if' → logprob: -3.1219332218170166
    6. '[' → logprob: -3.4969332218170166
    7. '_' → logprob: -4.371933460235596
    8. '==' → logprob: -4.371933460235596
    9. '
' → logprob: -4.496933460235596
    10. ')' → logprob: -4.746933460235596

Token 49: ' str' (ID: 989)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20212982594966888
    2. ' str' → logprob: -1.82712984085083
    3. 'len' → logprob: -4.45212984085083
    4. 'str' → logprob: -4.95212984085083
    5. ' ' → logprob: -6.32712984085083
    6. ' int' → logprob: -7.82712984085083
    7. ' '' → logprob: -8.077129364013672
    8. ' ' → logprob: -8.202129364013672
    9. ' input' → logprob: -8.702129364013672
    10. '(len' → logprob: -8.952129364013672

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.500001907348633
    3. '_str' → logprob: -15.375001907348633
    4. 'str' → logprob: -17.250001907348633
    5. '(str' → logprob: -17.500001907348633
    6. 'input' → logprob: -18.125001907348633
    7. '```' → logprob: -18.375001907348633
    8. '_input' → logprob: -18.500001907348633
    9. 's' → logprob: -18.750001907348633
    10. '[str' → logprob: -19.375001907348633

Token 51: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.0011757015017792583
    2. '_' → logprob: -6.751175880432129
    3. '_mul' → logprob: -12.876175880432129
    4. '_m' → logprob: -13.751175880432129
    5. ' _' → logprob: -14.501175880432129
    6. '_multi' → logprob: -15.251175880432129
    7. '__' → logprob: -15.751175880432129
    8. 'Mult' → logprob: -15.876175880432129
    9. '._' → logprob: -16.001174926757812
    10. 'mult' → logprob: -16.126174926757812

Token 52: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.22614425420761108
    2. '_' → logprob: -1.6011443138122559
    3. '_in' → logprob: -7.851144313812256
    4. 'int' → logprob: -9.351143836975098
    5. '_str' → logprob: -10.226143836975098
    6. '_uint' → logprob: -10.351143836975098
    7. ' _' → logprob: -10.726143836975098
    8. '_i' → logprob: -10.851143836975098
    9. '_char' → logprob: -11.101143836975098
    10. '_ip' → logprob: -11.351143836975098

Token 53: '2' (ID: 17)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0003476209531072527
    2. 'int' → logprob: -8.125348091125488
    3. 'nt' → logprob: -10.875348091125488
    4. '_' → logprob: -10.875348091125488
    5. '_in' → logprob: -12.125348091125488
    6. '2' → logprob: -13.125348091125488
    7. '_ent' → logprob: -13.750348091125488
    8. '_nt' → logprob: -13.750348091125488
    9. 'ent' → logprob: -14.125348091125488
    10. '_INT' → logprob: -14.125348091125488

Token 54: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04294072836637497
    2. ' >' → logprob: -3.792940616607666
    3. '==' → logprob: -4.417940616607666
    4. ' !=' → logprob: -5.792940616607666
    5. ' <' → logprob: -6.042940616607666
    6. '>' → logprob: -6.292940616607666
    7. '<' → logprob: -10.417941093444824
    8. '[' → logprob: -10.667941093444824
    9. '.' → logprob: -10.667941093444824
    10. ' ' → logprob: -10.917941093444824

Token 55: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.030006639659404755
    2. 'str' → logprob: -3.5300066471099854
    3. '"' → logprob: -9.280006408691406
    4. ' ' → logprob: -9.280006408691406
    5. ''' → logprob: -10.280006408691406
    6. ' '' → logprob: -11.405006408691406
    7. ' "' → logprob: -11.530006408691406
    8. '	str' → logprob: -12.280006408691406
    9. '(str' → logprob: -13.155006408691406
    10. ' ' → logprob: -13.155006408691406

Token 56: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026753971353173256
    2. '_' → logprob: -4.776753902435303
    3. 'r' → logprob: -4.901753902435303
    4. '_str' → logprob: -5.026753902435303
    5. '2' → logprob: -5.776753902435303
    6. 'str' → logprob: -8.401754379272461
    7. '_r' → logprob: -8.901754379272461
    8. 's' → logprob: -9.526754379272461
    9. 't' → logprob: -9.776754379272461
    10. 'p' → logprob: -9.776754379272461

Token 57: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.0006384541047737002
    2. '_' → logprob: -7.375638484954834
    3. '_mul' → logprob: -12.125638008117676
    4. '_m' → logprob: -13.250638008117676
    5. 'mult' → logprob: -13.500638008117676
    6. '_str' → logprob: -13.625638008117676
    7. '_multiplier' → logprob: -14.375638008117676
    8. '_MULT' → logprob: -14.750638008117676
    9. '_multi' → logprob: -14.875638008117676
    10. 'Mult' → logprob: -15.500638008117676

Token 58: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.1279824674129486
    2. 'int' → logprob: -2.1279823780059814
    3. '_str' → logprob: -7.6279826164245605
    4. 'ent' → logprob: -8.627982139587402
    5. 't' → logprob: -9.127982139587402
    6. '_' → logprob: -9.877982139587402
    7. 'str' → logprob: -10.377982139587402
    8. '_t' → logprob: -10.502982139587402
    9. 'Int' → logprob: -11.002982139587402
    10. 'nt' → logprob: -11.002982139587402

Token 59: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005295606097206473
    2. 'int' → logprob: -8.125529289245605
    3. '1' → logprob: -8.500529289245605
    4. '_' → logprob: -11.500529289245605
    5. '```' → logprob: -12.125529289245605
    6. '_int' → logprob: -12.250529289245605
    7. 'str' → logprob: -12.625529289245605
    8. '_str' → logprob: -13.125529289245605
    9. ' ' → logprob: -13.375529289245605
    10. '`' → logprob: -14.375529289245605

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.873571692267433e-05
    2. ' :' → logprob: -9.750068664550781
    3. ':
' → logprob: -11.625068664550781
    4. '):' → logprob: -15.125068664550781
    5. ':**' → logprob: -15.125068664550781
    6. '>:' → logprob: -15.750068664550781
    7. ':return' → logprob: -15.875068664550781
    8. '':' → logprob: -16.37506866455078
    9. ':
' → logprob: -16.50006866455078
    10. ',' → logprob: -17.12506866455078

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5805377960205078
    2. 'print' → logprob: -0.8305377960205078
    3. ' print' → logprob: -5.455537796020508
    4. ''' → logprob: -9.580537796020508
    5. '	print' → logprob: -9.580537796020508
    6. 'output' → logprob: -10.080537796020508
    7. '"' → logprob: -10.205537796020508
    8. 'input' → logprob: -11.205537796020508
    9. ' ' → logprob: -11.330537796020508
    10. '       ' → logprob: -11.455537796020508

Token 62: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0012298731599003077
    2. '   ' → logprob: -6.876229763031006
    3. ' print' → logprob: -8.626230239868164
    4. 'pr' → logprob: -12.376230239868164
    5. 'output' → logprob: -12.376230239868164
    6. 'input' → logprob: -12.751230239868164
    7. 'str' → logprob: -13.251230239868164
    8. '```' → logprob: -13.376230239868164
    9. '	print' → logprob: -14.626230239868164
    10. 'prin' → logprob: -14.751230239868164

Token 63: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01820952817797661
    2. '(str' → logprob: -4.143209457397461
    3. '('' → logprob: -7.018209457397461
    4. '("' → logprob: -7.143209457397461
    5. '("("' → logprob: -7.768209457397461
    6. '()' → logprob: -11.143209457397461
    7. '(input' → logprob: -11.268209457397461
    8. 'str' → logprob: -12.018209457397461
    9. '(False' → logprob: -12.518209457397461
    10. '(True' → logprob: -12.643209457397461

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020567698404192924
    2. '2' → logprob: -3.8955676555633545
    3. '_str' → logprob: -10.770567893981934
    4. '_' → logprob: -13.145567893981934
    5. '(' → logprob: -13.895567893981934
    6. 'str' → logprob: -14.395567893981934
    7. '(str' → logprob: -14.645567893981934
    8. ')' → logprob: -15.145567893981934
    9. '１' → logprob: -16.145566940307617
    10. '```' → logprob: -16.270566940307617

Token 65: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -1.8789383830153383e-05
    2. '_str' → logprob: -11.875019073486328
    3. '_' → logprob: -12.125019073486328
    4. 'mult' → logprob: -12.875019073486328
    5. '1' → logprob: -13.000019073486328
    6. '_mul' → logprob: -14.500019073486328
    7. 'Mult' → logprob: -15.125019073486328
    8. '2' → logprob: -15.875019073486328
    9. ')' → logprob: -15.875019073486328
    10. '_m' → logprob: -15.875019073486328

Token 66: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.004729634150862694
    2. 'int' → logprob: -5.379729747772217
    3. '_str' → logprob: -9.254729270935059
    4. 'str' → logprob: -12.129729270935059
    5. 'Int' → logprob: -12.504729270935059
    6. '2' → logprob: -12.754729270935059
    7. '```' → logprob: -15.004729270935059
    8. '_in' → logprob: -15.379729270935059
    9. 'nt' → logprob: -15.379729270935059
    10. '-int' → logprob: -15.504729270935059

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010013706050813198
    2. 'int' → logprob: -7.751001358032227
    3. '_int' → logprob: -8.126001358032227
    4. '_str' → logprob: -8.376001358032227
    5. '_' → logprob: -10.626001358032227
    6. 'str' → logprob: -11.001001358032227
    7. '1' → logprob: -12.876001358032227
    8. 'nt' → logprob: -15.501001358032227
    9. '```' → logprob: -16.126001358032227
    10. '_i' → logprob: -16.126001358032227

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.794061770662665e-05
    2. ')
' → logprob: -9.25009822845459
    3. '')' → logprob: -14.62509822845459
    4. ' )' → logprob: -14.62509822845459
    5. 'else' → logprob: -15.00009822845459
    6. '   ' → logprob: -16.000097274780273
    7. ')
' → logprob: -16.250097274780273
    8. '))' → logprob: -16.750097274780273
    9. ' ' → logprob: -17.000097274780273
    10. ' else' → logprob: -17.375097274780273

Token 69: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.026367761194705963
    2. 'elif' → logprob: -3.651367664337158
    3. ' else' → logprob: -9.776368141174316
    4. '<|end|>' → logprob: -12.526368141174316
    5. ')' → logprob: -13.151368141174316
    6. 'elser' → logprob: -13.901368141174316
    7. '```' → logprob: -14.151368141174316
    8. '_else' → logprob: -14.151368141174316
    9. '   ' → logprob: -14.276368141174316
    10. ' elif' → logprob: -14.526368141174316

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3306015716807451e-05
    2. ':
' → logprob: -11.50001335144043
    3. ' :' → logprob: -13.00001335144043
    4. '   ' → logprob: -14.00001335144043
    5. ':
' → logprob: -17.50001335144043
    6. '):' → logprob: -17.87501335144043
    7. ':

' → logprob: -18.12501335144043
    8. '():' → logprob: -18.37501335144043
    9. '：' → logprob: -18.37501335144043
    10. ':return' → logprob: -18.37501335144043

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004383486229926348
    2. 'print' → logprob: -5.504383563995361
    3. ' print' → logprob: -8.129383087158203
    4. '   ' → logprob: -12.379383087158203
    5. '	print' → logprob: -13.754383087158203
    6. '       ' → logprob: -14.004383087158203
    7. '```' → logprob: -14.004383087158203
    8. '    ' → logprob: -14.254383087158203
    9. '    
' → logprob: -14.504383087158203
    10. '(print' → logprob: -14.504383087158203

Token 72: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019326817709952593
    2. '   ' → logprob: -6.501932621002197
    3. ' print' → logprob: -7.751932621002197
    4. '	print' → logprob: -15.001933097839355
    5. '.print' → logprob: -17.75193214416504
    6. '(print' → logprob: -18.25193214416504
    7. 'str' → logprob: -18.75193214416504
    8. '  ' → logprob: -19.25193214416504
    9. '```' → logprob: -19.50193214416504
    10. '       ' → logprob: -19.50193214416504

Token 73: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.2519731819629669
    2. '(' → logprob: -1.5019731521606445
    3. 'str' → logprob: -10.376973152160645
    4. '(
' → logprob: -11.376973152160645
    5. '(

' → logprob: -14.626973152160645
    6. '('' → logprob: -15.126973152160645
    7. '(s' → logprob: -15.751973152160645
    8. '(string' → logprob: -16.25197410583496
    9. '(Str' → logprob: -16.50197410583496
    10. ' str' → logprob: -16.62697410583496

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.125000953674316
    3. '1' → logprob: -15.875000953674316
    4. '_str' → logprob: -16.500001907348633
    5. '₂' → logprob: -19.250001907348633
    6. ')' → logprob: -20.125001907348633
    7. '２' → logprob: -20.375001907348633
    8. '۲' → logprob: -20.500001907348633
    9. '(' → logprob: -20.625001907348633
    10. ')_' → logprob: -20.750001907348633

Token 75: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.00019305046589579433
    2. '_' → logprob: -8.625192642211914
    3. 'mult' → logprob: -11.875192642211914
    4. '_str' → logprob: -12.625192642211914
    5. 'Mult' → logprob: -13.625192642211914
    6. '_)' → logprob: -14.000192642211914
    7. ')' → logprob: -14.750192642211914
    8. '_m' → logprob: -15.250192642211914
    9. '_mul' → logprob: -15.250192642211914
    10. ')_' → logprob: -16.125192642211914

Token 76: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00041327282087877393
    2. '_str' → logprob: -8.125412940979004
    3. '2' → logprob: -9.875412940979004
    4. '1' → logprob: -10.500412940979004
    5. '_' → logprob: -11.250412940979004
    6. 'Int' → logprob: -11.375412940979004
    7. '_mult' → logprob: -11.875412940979004
    8. '_i' → logprob: -12.875412940979004
    9. 'int' → logprob: -13.250412940979004
    10. '_in' → logprob: -14.000412940979004

Token 77: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004180140793323517
    2. '1' → logprob: -5.629179954528809
    3. '_' → logprob: -8.004179954528809
    4. '_str' → logprob: -8.629179954528809
    5. ')' → logprob: -9.879179954528809
    6. 'str' → logprob: -12.504179954528809
    7. '```' → logprob: -12.754179954528809
    8. 'put' → logprob: -12.879179954528809
    9. '_int' → logprob: -13.129179954528809
    10. '_)' → logprob: -14.504179954528809

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -16.5
    4. '))' → logprob: -18.0
    5. ')`' → logprob: -18.25
    6. '')' → logprob: -18.375
    7. '()' → logprob: -19.375
    8. '(' → logprob: -20.25
    9. '```' → logprob: -20.625
    10. '`)' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 76
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 52.63%
Précision (top 10): 88.16%
================================================================================
