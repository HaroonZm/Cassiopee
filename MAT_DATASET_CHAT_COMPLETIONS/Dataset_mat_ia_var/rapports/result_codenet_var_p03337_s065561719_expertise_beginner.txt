================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a_b = input().split()
a = int(a_b[0])
b = int(a_b[1])

somme = a + b
difference = a - b
produit = a * b

if somme >= difference and somme >= produit:
    print(somme)
elif difference >= somme and difference >= produit:
    print(difference)
else:
    print(produit)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: '_b' (ID: 1535)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00727472547441721
    2. '1' → logprob: -5.507274627685547
    3. '"' → logprob: -7.132274627685547
    4. '42' → logprob: -7.507274627685547
    5. ''' → logprob: -7.757274627685547
    6. '0' → logprob: -7.757274627685547
    7. '5' → logprob: -8.257274627685547
    8. '10' → logprob: -9.007274627685547
    9. ' "' → logprob: -9.132274627685547
    10. '3' → logprob: -9.507274627685547

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021146931685507298
    2. '('' → logprob: -6.627114772796631
    3. ''' → logprob: -7.627114772796631
    4. '("("' → logprob: -9.252114295959473
    5. '(
' → logprob: -9.752114295959473
    6. '"' → logprob: -9.877114295959473
    7. '()' → logprob: -10.502114295959473
    8. '.' → logprob: -11.252114295959473
    9. ' (' → logprob: -11.502114295959473
    10. '[' → logprob: -11.877114295959473

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5423476696014404
    2. '+' → logprob: -1.0423476696014404
    3. '(' → logprob: -4.1673479080200195
    4. '*' → logprob: -4.2923479080200195
    5. '()' → logprob: -4.9173479080200195
    6. '.strip' → logprob: -4.9173479080200195
    7. '```' → logprob: -5.9173479080200195
    8. ' ' → logprob: -6.1673479080200195
    9. '\' → logprob: -6.2923479080200195
    10. '.split' → logprob: -6.4173479080200195

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000936951139010489
    2. '()' → logprob: -7.125936985015869
    3. '('' → logprob: -10.250936508178711
    4. '(
' → logprob: -10.375936508178711
    5. '"' → logprob: -10.875936508178711
    6. '("("' → logprob: -10.875936508178711
    7. '(

' → logprob: -11.750936508178711
    8. '`' → logprob: -12.625936508178711
    9. ''' → logprob: -12.750936508178711
    10. '((' → logprob: -13.125936508178711

Token 7: 'a' (ID: 64)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028750114142894745
    2. '.' → logprob: -6.752874851226807
    3. '#' → logprob: -8.002875328063965
    4. 'for' → logprob: -8.127875328063965
    5. 'a' → logprob: -8.127875328063965
    6. 'print' → logprob: -8.252875328063965
    7. 'if' → logprob: -9.252875328063965
    8. '=' → logprob: -9.502875328063965
    9. '[a' → logprob: -9.502875328063965
    10. '(' → logprob: -9.752875328063965

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9466037750244141
    2. '_b' → logprob: -1.071603775024414
    3. '[' → logprob: -1.321603775024414
    4. '[_' → logprob: -6.321603775024414
    5. '_[' → logprob: -7.821603775024414
    6. '[]' → logprob: -8.821603775024414
    7. '\[' → logprob: -9.196603775024414
    8. '_a' → logprob: -9.321603775024414
    9. 'b' → logprob: -9.696603775024414
    10. '[a' → logprob: -10.196603775024414

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.028672967106103897
    2. ' int' → logprob: -3.778672933578491
    3. 'a' → logprob: -5.27867317199707
    4. ' a' → logprob: -8.40367317199707
    5. 'list' → logprob: -10.52867317199707
    6. '[int' → logprob: -10.65367317199707
    7. 'float' → logprob: -10.65367317199707
    8. 'len' → logprob: -11.77867317199707
    9. ' list' → logprob: -13.27867317199707
    10. '(int' → logprob: -13.40367317199707

Token 10: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012818991672247648
    2. '(a' → logprob: -6.87628173828125
    3. 'a' → logprob: -8.37628173828125
    4. ' (' → logprob: -12.50128173828125
    5. '('' → logprob: -12.87628173828125
    6. '("("' → logprob: -13.00128173828125
    7. '```' → logprob: -13.12628173828125
    8. '(
' → logprob: -13.75128173828125
    9. '_a' → logprob: -13.87628173828125
    10. '()' → logprob: -13.87628173828125

Token 11: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0006065295310690999
    2. '[' → logprob: -7.750606536865234
    3. '_a' → logprob: -9.125606536865234
    4. 'b' → logprob: -10.500606536865234
    5. ')' → logprob: -11.000606536865234
    6. '_' → logprob: -12.000606536865234
    7. 'a' → logprob: -12.500606536865234
    8. '_)' → logprob: -12.625606536865234
    9. '[_' → logprob: -13.250606536865234
    10. ' _' → logprob: -13.375606536865234

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '[a' → logprob: -13.875001907348633
    3. ')' → logprob: -14.750001907348633
    4. ' [' → logprob: -15.500001907348633
    5. '\[' → logprob: -16.000001907348633
    6. '0' → logprob: -16.125001907348633
    7. ''[' → logprob: -16.875001907348633
    8. '[
' → logprob: -17.125001907348633
    9. 'a' → logprob: -17.125001907348633
    10. '(' → logprob: -17.125001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '1' → logprob: -16.25
    4. ')' → logprob: -20.0
    5. ''' → logprob: -20.125
    6. '۰' → logprob: -20.625
    7. '```' → logprob: -21.5
    8. '2' → logprob: -21.5
    9. '   ' → logprob: -21.75
    10. '０' → logprob: -21.75

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06288580596446991
    2. '])' → logprob: -2.8128857612609863
    3. ']' → logprob: -7.187885761260986
    4. ')]' → logprob: -9.687886238098145
    5. ')])' → logprob: -9.937886238098145
    6. '))' → logprob: -11.312886238098145
    7. ')a' → logprob: -11.687886238098145
    8. ''])' → logprob: -12.062886238098145
    9. ' )' → logprob: -12.187886238098145
    10. ')
' → logprob: -12.812886238098145

Token 15: 'b' (ID: 65)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8899158239364624
    2. '[' → logprob: -1.5149158239364624
    3. ')' → logprob: -1.8899158239364624
    4. ' ' → logprob: -2.264915943145752
    5. ' =' → logprob: -3.264915943145752
    6. '<|end|>' → logprob: -3.264915943145752
    7. '=' → logprob: -4.139915943145752
    8. '  ' → logprob: -5.389915943145752
    9. '<|end|>' → logprob: -6.014915943145752
    10. ' )' → logprob: -6.264915943145752

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804263845086098
    2. ' int' → logprob: -3.2880425453186035
    3. 'a' → logprob: -14.538043022155762
    4. ' ' → logprob: -14.913043022155762
    5. '(int' → logprob: -16.038042068481445
    6. ' a' → logprob: -16.038042068481445
    7. '=int' → logprob: -16.288042068481445
    8. '  ' → logprob: -17.538042068481445
    9. '<int' → logprob: -17.788042068481445
    10. '   ' → logprob: -17.788042068481445

Token 18: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47495871782302856
    2. '(a' → logprob: -0.9749587178230286
    3. '(b' → logprob: -7.099958896636963
    4. ' (' → logprob: -10.974958419799805
    5. '((' → logprob: -10.974958419799805
    6. '(ab' → logprob: -12.474958419799805
    7. '('' → logprob: -12.724958419799805
    8. '(
' → logprob: -13.099958419799805
    9. '(

' → logprob: -13.849958419799805
    10. ')(' → logprob: -13.849958419799805

Token 19: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00011319868644932285
    2. '[' → logprob: -9.125113487243652
    3. '[_' → logprob: -13.250113487243652
    4. ')_' → logprob: -14.500113487243652
    5. ')' → logprob: -14.625113487243652
    6. '_a' → logprob: -14.750113487243652
    7. 'b' → logprob: -15.625113487243652
    8. ' _' → logprob: -15.750113487243652
    9. '```' → logprob: -15.875113487243652
    10. '])' → logprob: -15.875113487243652

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. ')' → logprob: -13.875001907348633
    3. ' [' → logprob: -14.500001907348633
    4. '1' → logprob: -15.750001907348633
    5. ')[' → logprob: -15.875001907348633
    6. '```' → logprob: -16.000001907348633
    7. '[
' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.750001907348633
    9. '\[' → logprob: -17.250001907348633
    10. '][' → logprob: -17.625001907348633

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '0' → logprob: -13.50000286102295
    3. '])' → logprob: -13.87500286102295
    4. ' ' → logprob: -14.25000286102295
    5. '```' → logprob: -16.125003814697266
    6. ']' → logprob: -17.125003814697266
    7. '2' → logprob: -17.500003814697266
    8. '   ' → logprob: -17.500003814697266
    9. ')' → logprob: -17.500003814697266
    10. '１' → logprob: -18.000003814697266

Token 22: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6776029699249193e-05
    2. ']' → logprob: -11.25002670288086
    3. '])' → logprob: -11.37502670288086
    4. '))' → logprob: -14.25002670288086
    5. ')])' → logprob: -14.62502670288086
    6. ' )' → logprob: -15.00002670288086
    7. '）' → logprob: -15.12502670288086
    8. '[' → logprob: -15.62502670288086
    9. ')]' → logprob: -16.12502670288086
    10. '`)' → logprob: -16.50002670288086

Token 23: 's' (ID: 82)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004456228110939264
    2. '*' → logprob: -7.004456043243408
    3. 'c' → logprob: -7.004456043243408
    4. '+
' → logprob: -7.379456043243408
    5. 'if' → logprob: -7.504456043243408
    6. '+c' → logprob: -7.754456043243408
    7. '#' → logprob: -8.254456520080566
    8. 'i' → logprob: -8.254456520080566
    9. '=' → logprob: -8.754456520080566
    10. '>' → logprob: -9.004456520080566

Token 24: 'omme' (ID: 30420)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1855875253677368
    2. 'um' → logprob: -1.3105875253677368
    3. 'u' → logprob: -1.5605875253677368
    4. '+' → logprob: -2.0605874061584473
    5. ' =' → logprob: -3.4355874061584473
    6. 'r' → logprob: -4.435587406158447
    7. 't' → logprob: -5.185587406158447
    8. 'a' → logprob: -5.560587406158447
    9. 'tr' → logprob: -5.560587406158447
    10. '+=' → logprob: -5.560587406158447

Token 25: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009549126960337162
    2. '_' → logprob: -5.134549140930176
    3. '+' → logprob: -5.884549140930176
    4. ')' → logprob: -7.884549140930176
    5. '(a' → logprob: -9.134549140930176
    6. ' (' → logprob: -9.259549140930176
    7. 's' → logprob: -9.884549140930176
    8. '=' → logprob: -9.884549140930176
    9. ' ' → logprob: -10.009549140930176
    10. ' +' → logprob: -10.634549140930176

Token 26: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024779161904007196
    2. ' a' → logprob: -6.002478122711182
    3. '0' → logprob: -13.002477645874023
    4. ' ' → logprob: -17.252477645874023
    5. '	a' → logprob: -20.127477645874023
    6. '(a' → logprob: -20.502477645874023
    7. 'b' → logprob: -21.627477645874023
    8. '_a' → logprob: -22.002477645874023
    9. 's' → logprob: -22.377477645874023
    10. 'а' → logprob: -22.502477645874023

Token 27: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012523430399596691
    2. ' +' → logprob: -4.387523651123047
    3. '+b' → logprob: -12.137523651123047
    4. '<|end|>' → logprob: -13.137523651123047
    5. ' ' → logprob: -13.262523651123047
    6. '_' → logprob: -13.762523651123047
    7. '>' → logprob: -14.262523651123047
    8. '[' → logprob: -14.512523651123047
    9. '-' → logprob: -15.012523651123047
    10. ')' → logprob: -15.512523651123047

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196824833750725
    2. ' b' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.311967849731445
    4. '	b' → logprob: -17.311967849731445
    5. '1' → logprob: -17.561967849731445
    6. ' ' → logprob: -18.311967849731445
    7. '_b' → logprob: -19.061967849731445
    8. ' б' → logprob: -20.186967849731445
    9. '  ' → logprob: -20.311967849731445
    10. '```' → logprob: -20.436967849731445

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.106248140335083
    2. '\n' → logprob: -1.481248140335083
    3. 'print' → logprob: -1.981248140335083
    4. '\' → logprob: -2.606248140335083
    5. '<|end|>' → logprob: -2.606248140335083
    6. '*' → logprob: -2.731248140335083
    7. '.' → logprob: -3.981248140335083
    8. '' → logprob: -4.481247901916504
    9. '```' → logprob: -4.606247901916504
    10. '#' → logprob: -4.731247901916504

Token 30: 'difference' (ID: 133489)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16997112333774567
    2. 'p' → logprob: -1.9199711084365845
    3. '\n' → logprob: -6.294970989227295
    4. 'pr' → logprob: -6.294970989227295
    5. '#' → logprob: -6.419970989227295
    6. 'prin' → logprob: -6.794970989227295
    7. '
' → logprob: -7.294970989227295
    8. '\' → logprob: -7.419970989227295
    9. '.' → logprob: -8.294971466064453
    10. 'r' → logprob: -8.419971466064453

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1824009269475937
    2. ' ' → logprob: -1.9324009418487549
    3. '_' → logprob: -4.682400703430176
    4. '=' → logprob: -4.807400703430176
    5. '<|end|>' → logprob: -5.557400703430176
    6. 's' → logprob: -8.807400703430176
    7. '<|end|>' → logprob: -9.307400703430176
    8. '  ' → logprob: -9.432400703430176
    9. ')' → logprob: -9.557400703430176
    10. ' _' → logprob: -9.682400703430176

Token 32: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07971779257059097
    2. 'a' → logprob: -2.5797178745269775
    3. ' b' → logprob: -7.204717636108398
    4. ' ' → logprob: -9.829717636108398
    5. 'b' → logprob: -10.579717636108398
    6. ' ' → logprob: -12.704717636108398
    7. '	a' → logprob: -13.579717636108398
    8. ' s' → logprob: -15.329717636108398
    9. 's' → logprob: -15.329717636108398
    10. '  ' → logprob: -16.3297176361084

Token 33: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005197705700993538
    2. '-' → logprob: -6.005197525024414
    3. ' ' → logprob: -6.005197525024414
    4. '<|end|>' → logprob: -9.505197525024414
    5. ' ' → logprob: -9.755197525024414
    6. '_' → logprob: -9.880197525024414
    7. ')' → logprob: -10.630197525024414
    8. ' +' → logprob: -11.130197525024414
    9. '  ' → logprob: -12.505197525024414
    10. ' _' → logprob: -12.630197525024414

Token 34: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. ' ' → logprob: -19.750553131103516
    4. '	b' → logprob: -20.375553131103516
    5. '>b' → logprob: -22.000553131103516
    6. '<|end|>' → logprob: -22.000553131103516
    7. ' б' → logprob: -23.125553131103516
    8. ')b' → logprob: -23.125553131103516
    9. '_b' → logprob: -24.250553131103516
    10. '  ' → logprob: -24.625553131103516

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29238471388816833
    2. '\n' → logprob: -2.042384624481201
    3. '<|end|>' → logprob: -2.792384624481201
    4. '*' → logprob: -3.667384624481201
    5. ' 
' → logprob: -4.792384624481201
    6. ' ' → logprob: -4.917384624481201
    7. '#' → logprob: -5.167384624481201
    8. '\' → logprob: -5.417384624481201
    9. '```' → logprob: -6.042384624481201
    10. '+' → logprob: -6.417384624481201

Token 36: 'produ' (ID: 11634)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.4182428121566772
    2. 'p' → logprob: -1.6682428121566772
    3. '\n' → logprob: -1.7932428121566772
    4. 'print' → logprob: -2.418242931365967
    5. '
' → logprob: -2.543242931365967
    6. ' 
' → logprob: -2.918242931365967
    7. 'if' → logprob: -3.418242931365967
    8. 'c' → logprob: -3.793242931365967
    9. '#' → logprob: -3.793242931365967
    10. 'r' → logprob: -4.043242931365967

Token 37: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0551801435649395
    2. 'ct' → logprob: -2.930180072784424
    3. '```' → logprob: -8.430180549621582
    4. '

' → logprob: -10.180180549621582
    5. '
' → logprob: -11.430180549621582
    6. 'kt' → logprob: -12.180180549621582
    7. '``' → logprob: -12.180180549621582
    8. '   ' → logprob: -13.305180549621582
    9. ' 

' → logprob: -13.305180549621582
    10. '**' → logprob: -13.680180549621582

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007305599283427
    2. ' ' → logprob: -5.13230562210083
    3. '=' → logprob: -6.75730562210083
    4. '<|end|>' → logprob: -9.257305145263672
    5. '_' → logprob: -9.632305145263672
    6. 's' → logprob: -10.382305145263672
    7. '  ' → logprob: -12.632305145263672
    8. ')' → logprob: -12.757305145263672
    9. '<|end|>' → logprob: -12.882305145263672
    10. '[' → logprob: -12.882305145263672

Token 39: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47407880425453186
    2. 'a' → logprob: -0.9740787744522095
    3. '	a' → logprob: -14.099079132080078
    4. ' ' → logprob: -14.349079132080078
    5. ' ' → logprob: -14.849079132080078
    6. '_a' → logprob: -17.724079132080078
    7. '(a' → logprob: -17.974079132080078
    8. '  ' → logprob: -18.599079132080078
    9. ' а' → logprob: -18.849079132080078
    10. ' ' → logprob: -19.349079132080078

Token 40: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023274481296539307
    2. '*' → logprob: -3.7732744216918945
    3. ' ' → logprob: -11.023274421691895
    4. ' ' → logprob: -11.648274421691895
    5. '<|end|>' → logprob: -13.773274421691895
    6. '*b' → logprob: -14.023274421691895
    7. ' **' → logprob: -14.273274421691895
    8. ')' → logprob: -15.023274421691895
    9. '**' → logprob: -15.523274421691895
    10. '_' → logprob: -15.648274421691895

Token 41: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6933385729789734
    2. ' b' → logprob: -0.6933385729789734
    3. ' ' → logprob: -8.568338394165039
    4. ' ' → logprob: -14.818338394165039
    5. '	b' → logprob: -15.443338394165039
    6. ' б' → logprob: -15.693338394165039
    7. '<|end|>' → logprob: -16.44333839416504
    8. '_b' → logprob: -16.69333839416504
    9. ' ```' → logprob: -16.69333839416504
    10. 'space' → logprob: -16.81833839416504

Token 42: '

' (ID: 279)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.6785982847213745
    2. '\' → logprob: -1.8035982847213745
    3. ' 
' → logprob: -2.178598403930664
    4. '' → logprob: -2.303598403930664
    5. '#' → logprob: -2.678598403930664
    6. 'c' → logprob: -2.803598403930664
    7. 'print' → logprob: -2.928598403930664
    8. '/' → logprob: -3.053598403930664
    9. 'd' → logprob: -3.178598403930664
    10. '\n' → logprob: -3.428598403930664

Token 43: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3983604907989502
    2. 'if' → logprob: -1.2733604907989502
    3. 'p' → logprob: -3.89836049079895
    4. '#' → logprob: -5.148360252380371
    5. 'quot' → logprob: -5.273360252380371
    6. 'i' → logprob: -5.773360252380371
    7. 'c' → logprob: -5.773360252380371
    8. 'q' → logprob: -6.273360252380371
    9. 'div' → logprob: -6.523360252380371
    10. 'division' → logprob: -6.773360252380371

Token 44: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.45616868138313293
    2. ' ' → logprob: -1.3311686515808105
    3. ' a' → logprob: -2.4561686515808105
    4. 's' → logprob: -4.4561686515808105
    5. ' ' → logprob: -6.4561686515808105
    6. 'a' → logprob: -6.7061686515808105
    7. '  ' → logprob: -7.4561686515808105
    8. ' s' → logprob: -8.081169128417969
    9. ' difference' → logprob: -8.831169128417969
    10. ' produit' → logprob: -8.831169128417969

Token 45: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0880047082901001
    2. ' >=' → logprob: -3.3380045890808105
    3. ' <=' → logprob: -3.9630045890808105
    4. ' ==' → logprob: -4.3380045890808105
    5. ' ' → logprob: -5.0880045890808105
    6. ' <' → logprob: -5.2130045890808105
    7. '>' → logprob: -5.4630045890808105
    8. ' !=' → logprob: -7.8380045890808105
    9. '==' → logprob: -9.213005065917969
    10. ' %' → logprob: -9.588005065917969

Token 46: ' difference' (ID: 9809)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06059599667787552
    2. '10' → logprob: -3.560595989227295
    3. ' ' → logprob: -4.060595989227295
    4. '100' → logprob: -4.935595989227295
    5. 'b' → logprob: -5.310595989227295
    6. '20' → logprob: -7.435595989227295
    7. ' b' → logprob: -8.685596466064453
    8. '50' → logprob: -9.310596466064453
    9. '1' → logprob: -9.560596466064453
    10. '15' → logprob: -10.685596466064453

Token 47: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03245731070637703
    2. ' :' → logprob: -4.15745735168457
    3. ' and' → logprob: -4.15745735168457
    4. 'and' → logprob: -7.40745735168457
    5. ':
' → logprob: -11.65745735168457
    6. '+:' → logprob: -11.90745735168457
    7. ' ' → logprob: -12.28245735168457
    8. ':**' → logprob: -12.78245735168457
    9. '+' → logprob: -13.53245735168457
    10. '>' → logprob: -13.78245735168457

Token 48: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.6736103892326355
    2. ' produit' → logprob: -1.2986104488372803
    3. 's' → logprob: -1.9236104488372803
    4. 'produ' → logprob: -2.9236104488372803
    5. ' difference' → logprob: -5.048610210418701
    6. 'difference' → logprob: -6.298610210418701
    7. 'sum' → logprob: -6.548610210418701
    8. ' ' → logprob: -6.673610210418701
    9. ' a' → logprob: -7.298610210418701
    10. ' sum' → logprob: -7.548610210418701

Token 49: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2656315565109253
    2. ' <=' → logprob: -1.5156315565109253
    3. '>=' → logprob: -5.140631675720215
    4. ' >' → logprob: -5.265631675720215
    5. '<=' → logprob: -6.640631675720215
    6. ' ' → logprob: -7.140631675720215
    7. '>' → logprob: -8.265631675720215
    8. ' <' → logprob: -8.640631675720215
    9. ' !=' → logprob: -11.390631675720215
    10. '```' → logprob: -11.953131675720215

Token 50: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.14270387589931488
    2. ' produit' → logprob: -2.0177037715911865
    3. 'prod' → logprob: -11.267704010009766
    4. 'product' → logprob: -12.517704010009766
    5. 'pro' → logprob: -12.767704010009766
    6. 'Produit' → logprob: -13.392704010009766
    7. ' ' → logprob: -13.517704010009766
    8. ' produ' → logprob: -13.642704010009766
    9. '	pro' → logprob: -13.892704010009766
    10. ' produs' → logprob: -14.392704010009766

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011909411987289786
    2. ' :' → logprob: -6.751191139221191
    3. ':
' → logprob: -11.251191139221191
    4. ' and' → logprob: -12.251191139221191
    5. ':**' → logprob: -13.626191139221191
    6. '):' → logprob: -14.376191139221191
    7. 'and' → logprob: -15.501191139221191
    8. ' :
' → logprob: -15.626191139221191
    9. '>:' → logprob: -15.751191139221191
    10. ',' → logprob: -16.001190185546875

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9464057087898254
    2. 'print' → logprob: -0.9464057087898254
    3. ' print' → logprob: -2.1964056491851807
    4. ':' → logprob: -2.3214056491851807
    5. '    
' → logprob: -5.57140588760376
    6. '\n' → logprob: -6.32140588760376
    7. ' 
' → logprob: -6.44640588760376
    8. ' ' → logprob: -6.57140588760376
    9. ':
' → logprob: -6.57140588760376
    10. '
' → logprob: -6.94640588760376

Token 53: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05830896645784378
    2. ' print' → logprob: -2.9333090782165527
    3. '   ' → logprob: -5.683309078216553
    4. 'prin' → logprob: -11.808308601379395
    5. '```' → logprob: -12.933308601379395
    6. ' ' → logprob: -12.933308601379395
    7. '	print' → logprob: -13.433308601379395
    8. 'prit' → logprob: -13.683308601379395
    9. 'pr' → logprob: -14.058308601379395
    10. ' prin' → logprob: -14.308308601379395

Token 54: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11807680875062943
    2. '(s' → logprob: -2.243076801300049
    3. '("' → logprob: -5.618076801300049
    4. '('' → logprob: -6.618076801300049
    5. 's' → logprob: -9.243077278137207
    6. '("("' → logprob: -9.743077278137207
    7. '()' → logprob: -10.118077278137207
    8. ' (' → logprob: -10.493077278137207
    9. '(sum' → logprob: -11.243077278137207
    10. '(a' → logprob: -11.368077278137207

Token 55: 'omme' (ID: 30420)
  Prédit: 'omme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -6.158350151963532e-05
    2. 'om' → logprob: -10.625061988830566
    3. 'onne' → logprob: -11.625061988830566
    4. 'omm' → logprob: -11.750061988830566
    5. 's' → logprob: -12.250061988830566
    6. 'ome' → logprob: -12.250061988830566
    7. ')' → logprob: -13.625061988830566
    8. '(' → logprob: -14.000061988830566
    9. 'ommen' → logprob: -14.000061988830566
    10. 'omne' → logprob: -14.125061988830566

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.697387966094539e-05
    2. ')
' → logprob: -9.375086784362793
    3. ' )' → logprob: -13.500086784362793
    4. '')' → logprob: -14.750086784362793
    5. '")' → logprob: -16.75008773803711
    6. ')

' → logprob: -17.12508773803711
    7. ' ' → logprob: -17.12508773803711
    8. 'elif' → logprob: -17.12508773803711
    9. '   ' → logprob: -17.37508773803711
    10. '）' → logprob: -17.50008773803711

Token 57: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.08721491694450378
    2. 'e' → logprob: -2.712214946746826
    3. 'else' → logprob: -4.837214946746826
    4. '
' → logprob: -5.212214946746826
    5. '\n' → logprob: -6.337214946746826
    6. ' elif' → logprob: -7.337214946746826
    7. 'el' → logprob: -7.712214946746826
    8. '' → logprob: -8.587214469909668
    9. '    
' → logprob: -9.212214469909668
    10. '```' → logprob: -9.462214469909668

Token 58: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.1131574884057045
    2. 'difference' → logprob: -2.9881575107574463
    3. ' somme' → logprob: -3.7381575107574463
    4. ' produit' → logprob: -3.7381575107574463
    5. ' product' → logprob: -5.738157272338867
    6. ' différence' → logprob: -6.113157272338867
    7. 's' → logprob: -6.613157272338867
    8. 'produ' → logprob: -7.363157272338867
    9. ' ' → logprob: -7.488157272338867
    10. ' diff' → logprob: -8.613157272338867

Token 59: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6344385743141174
    2. ' >' → logprob: -0.7594385743141174
    3. '>' → logprob: -7.009438514709473
    4. ' ' → logprob: -7.759438514709473
    5. ' <=' → logprob: -8.384438514709473
    6. '>=' → logprob: -8.509438514709473
    7. ' <' → logprob: -9.634438514709473
    8. ' ' → logprob: -13.009438514709473
    9. '  ' → logprob: -13.134438514709473
    10. '   ' → logprob: -13.259438514709473

Token 60: ' somme' (ID: 64484)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.07929006218910217
    2. ' produit' → logprob: -2.5792901515960693
    3. 's' → logprob: -8.454290390014648
    4. 'prod' → logprob: -8.954290390014648
    5. 'pro' → logprob: -10.954290390014648
    6. 'product' → logprob: -11.204290390014648
    7. ' somme' → logprob: -11.829290390014648
    8. 'produce' → logprob: -12.079290390014648
    9. ' produ' → logprob: -12.704290390014648
    10. '	pro' → logprob: -13.329290390014648

Token 61: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007625795900821686
    2. 'and' → logprob: -4.882625579833984
    3. ' ' → logprob: -11.007625579833984
    4. '   ' → logprob: -14.257625579833984
    5. ':' → logprob: -14.632625579833984
    6. ' et' → logprob: -14.882625579833984
    7. ' ' → logprob: -15.132625579833984
    8. ' a' → logprob: -15.257625579833984
    9. '    ' → logprob: -15.382625579833984
    10. ' an' → logprob: -15.507625579833984

Token 62: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.061985500156879425
    2. 'difference' → logprob: -2.811985492706299
    3. 'd' → logprob: -12.436985969543457
    4. ' diferencia' → logprob: -13.061985969543457
    5. 'diff' → logprob: -13.311985969543457
    6. ' difer' → logprob: -13.311985969543457
    7. '   ' → logprob: -13.311985969543457
    8. ' differ' → logprob: -13.561985969543457
    9. ' différence' → logprob: -13.561985969543457
    10. ' ' → logprob: -14.186985969543457

Token 63: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.012527893297374249
    2. '>=' → logprob: -4.387527942657471
    3. ' ' → logprob: -11.012527465820312
    4. ' >' → logprob: -14.012527465820312
    5. '>' → logprob: -15.137527465820312
    6. '   ' → logprob: -15.262527465820312
    7. '  ' → logprob: -16.012527465820312
    8. ')>=' → logprob: -16.262527465820312
    9. ']>=' → logprob: -16.512527465820312
    10. ' <=' → logprob: -16.762527465820312

Token 64: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.523241400718689
    2. 'produ' → logprob: -0.898241400718689
    3. 'prod' → logprob: -10.14824104309082
    4. ' ' → logprob: -10.77324104309082
    5. 'pro' → logprob: -11.02324104309082
    6. 'product' → logprob: -11.64824104309082
    7. ' produs' → logprob: -12.39824104309082
    8. '	pro' → logprob: -12.39824104309082
    9. ' produ' → logprob: -12.52324104309082
    10. '   ' → logprob: -12.52324104309082

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.975612187583465e-05
    2. ':
' → logprob: -10.500029563903809
    3. ' :' → logprob: -13.250029563903809
    4. '):' → logprob: -15.125029563903809
    5. ':**' → logprob: -16.375030517578125
    6. ':

' → logprob: -17.750030517578125
    7. '>:' → logprob: -18.625030517578125
    8. ':
' → logprob: -18.750030517578125
    9. '   ' → logprob: -19.000030517578125
    10. '：' → logprob: -19.000030517578125

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004517646157182753
    2. 'print' → logprob: -8.375452041625977
    3. '       ' → logprob: -8.750452041625977
    4. '	print' → logprob: -10.500452041625977
    5. ' print' → logprob: -10.750452041625977
    6. '   ' → logprob: -11.875452041625977
    7. '```' → logprob: -13.250452041625977
    8. ':' → logprob: -13.500452041625977
    9. '    
' → logprob: -13.875452041625977
    10. '    ' → logprob: -15.000452041625977

Token 67: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01509355753660202
    2. '   ' → logprob: -4.5150933265686035
    3. ' print' → logprob: -5.5150933265686035
    4. '```' → logprob: -12.015093803405762
    5. '	print' → logprob: -12.515093803405762
    6. '       ' → logprob: -14.015093803405762
    7. ' ' → logprob: -14.765093803405762
    8. '  ' → logprob: -15.265093803405762
    9. '.print' → logprob: -15.640093803405762
    10. '    
' → logprob: -15.765093803405762

Token 68: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -9.901345038088039e-05
    2. '(' → logprob: -9.250099182128906
    3. ' (' → logprob: -13.125099182128906
    4. 'difference' → logprob: -14.750099182128906
    5. '(diff' → logprob: -15.000099182128906
    6. 'd' → logprob: -16.875099182128906
    7. '((' → logprob: -17.000099182128906
    8. '(de' → logprob: -17.375099182128906
    9. '(
' → logprob: -18.125099182128906
    10. '(distance' → logprob: -18.500099182128906

Token 69: 'ifference' (ID: 30083)
  Prédit: 'ifference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifference' → logprob: -0.00021557629224844277
    2. 'difference' → logprob: -9.000215530395508
    3. 'iffer' → logprob: -10.125215530395508
    4. 'iff' → logprob: -10.500215530395508
    5. 'if' → logprob: -11.125215530395508
    6. 'iffe' → logprob: -12.000215530395508
    7. 'ifferent' → logprob: -12.875215530395508
    8. 'i' → logprob: -14.250215530395508
    9. '_difference' → logprob: -15.625215530395508
    10. 'ifer' → logprob: -15.875215530395508

Token 70: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38692811131477356
    2. ')' → logprob: -1.1369280815124512
    3. 'elif' → logprob: -10.01192855834961
    4. ')
' → logprob: -12.01192855834961
    5. '   ' → logprob: -13.26192855834961
    6. 'else' → logprob: -14.01192855834961
    7. ')

' → logprob: -14.01192855834961
    8. '):
' → logprob: -14.38692855834961
    9. ' )
' → logprob: -14.51192855834961
    10. '')
' → logprob: -14.76192855834961

Token 71: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.029754776507616043
    2. 'elif' → logprob: -3.529754877090454
    3. ' else' → logprob: -13.404754638671875
    4. 'el' → logprob: -14.404754638671875
    5. '```' → logprob: -14.779754638671875
    6. 'els' → logprob: -14.904754638671875
    7. 'elses' → logprob: -14.904754638671875
    8. 'e' → logprob: -14.904754638671875
    9. 'elseif' → logprob: -15.029754638671875
    10. 'elsif' → logprob: -15.154754638671875

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012702319072559476
    2. ':
' → logprob: -6.751270294189453
    3. ' :' → logprob: -9.251270294189453
    4. ' :
' → logprob: -12.751270294189453
    5. '   ' → logprob: -14.126270294189453
    6. ':

' → logprob: -15.626270294189453
    7. ':
' → logprob: -16.126270294189453
    8. 'print' → logprob: -16.876270294189453
    9. '：' → logprob: -17.626270294189453
    10. '():' → logprob: -18.001270294189453

Token 73: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005705483490601182
    2. ' print' → logprob: -7.500570774078369
    3. '   ' → logprob: -11.250570297241211
    4. 'produ' → logprob: -12.500570297241211
    5. 'prod' → logprob: -14.500570297241211
    6. '(print' → logprob: -16.25057029724121
    7. '	print' → logprob: -16.75057029724121
    8. 'pro' → logprob: -16.87557029724121
    9. 'product' → logprob: -17.25057029724121
    10. ' produit' → logprob: -17.75057029724121

Token 74: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0206720617134124e-05
    2. 'produ' → logprob: -11.75001049041748
    3. ' print' → logprob: -13.12501049041748
    4. 'prod' → logprob: -15.25001049041748
    5. 'prin' → logprob: -17.250009536743164
    6. 'pr' → logprob: -18.000009536743164
    7. '   ' → logprob: -18.000009536743164
    8. 'product' → logprob: -18.125009536743164
    9. 'produce' → logprob: -18.750009536743164
    10. 'pro' → logprob: -18.875009536743164

Token 75: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.00010700009443098679
    2. '(' → logprob: -9.250106811523438
    3. '(prod' → logprob: -11.500106811523438
    4. '(product' → logprob: -14.750106811523438
    5. '(p' → logprob: -16.250106811523438
    6. 'produ' → logprob: -16.500106811523438
    7. '(pr' → logprob: -16.750106811523438
    8. ' (' → logprob: -17.250106811523438
    9. '('' → logprob: -17.750106811523438
    10. '("("' → logprob: -18.000106811523438

Token 76: 'duit' (ID: 90246)
  Prédit: 'duit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duit' → logprob: -0.09417971968650818
    2. 'it' → logprob: -2.594179630279541
    3. 'uit' → logprob: -4.219179630279541
    4. 'dit' → logprob: -7.969179630279541
    5. 'du' → logprob: -9.3441801071167
    6. 'd' → logprob: -10.8441801071167
    7. 'ruit' → logprob: -12.9691801071167
    8. '

' → logprob: -13.2191801071167
    9. 'dut' → logprob: -14.0941801071167
    10. '
' → logprob: -14.3441801071167

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.0
    3. '))' → logprob: -18.25
    4. ')
' → logprob: -18.75
    5. '')' → logprob: -19.25
    6. ')`' → logprob: -19.75
    7. '）' → logprob: -20.5
    8. '`)' → logprob: -20.875
    9. '")' → logprob: -21.125
    10. '()' → logprob: -21.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 46.67%
Précision adaptée (1ère position): 50.67%
Précision (top 10): 80.00%
================================================================================
