================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition de la fonction principale du programme
def main():
    # Lecture d'une ligne de l'entrée standard, découpage en deux valeurs séparées par un espace,
    # conversion de ces deux valeurs en entiers et assignation à n et m.
    n, m = map(int, input().split())
    
    # Initialisation d'une liste 'st' contenant m sous-listes,
    # chaque sous-liste correspondant à une entrée (arête) lue sur une ligne,
    # transformée en deux entiers (a et b).
    # L'utilisation de [0]*m permet de répéter la saisie m fois à l'aide d'une liste factice de taille m.
    st = [list(map(int, input().split())) for _ in [0]*m]
    
    # Création d'une liste de n listes vides pour représenter les arcs sortants de chaque sommet (graphe orienté)
    g = [[] for _ in [0]*n]
    
    # Pour chaque couple (a, b) dans st, on ajoute b-1 à la liste des voisins du sommet a-1
    # (indices ramenés à zéro pour l'indexation Python)
    [g[a-1].append(b-1) for a, b in st]
    
    # Initialisation de trois listes de taille n remplies de zéros.
    # toP pour stocker le nombre de façons d'atteindre le sommet i depuis la source
    # toE pour conserver la somme des longueurs de chemins accumulées vers i
    # fromE pour le calcul rétrograde des espérances depuis chaque sommet
    toP = [0]*n
    toE = [0]*n
    fromE = [0]*n
    
    # On met à 1 le nombre de façons d'atteindre le point de départ (sommet 0)
    toP[0] = 1
    
    # Boucle pour propager de gauche à droite (du sommet 0 au n-2) les valeurs de toP et toE
    for i in range(n-1):
        # p est le nombre de façons d'arriver à i
        p = toP[i]
        # Si p > 0, c'est-à-dire s'il y a au moins un chemin vers i
        if p > 0:
            # On divise toE[i] (la somme accumulée des longueurs pour arriver à i) par p
            toE[i] /= toP[i]
        # e est maintenant l'espérance depuis la racine jusqu'à i
        e = toE[i]
        # l est le nombre de voisins directs de i (nombre de sorties de i)
        l = len(g[i])
        # Pour chaque voisin j du sommet i
        for j in g[i]:
            # On ajoute à toP[j] la fraction p/l (répartition équitable entre voisins)
            toP[j] += p/l
            # On ajoute à toE[j] la valeur de l'espérance totale du prédecesseur + 1 (coût d'un pas), pondérée par p/l
            toE[j] += (e+1)*p/l
    
    # Deuxième passage, cette fois à rebours, pour calculer l'espérance du sous-graphe à partir de chaque sommet
    for i in range(n-2, -1, -1):
        # l est le nombre d'arcs sortants de i
        l = len(g[i])
        # Pour chaque voisin j du sommet i
        for j in g[i]:
            # On ajoute à fromE[i] la contribution moyenne résultant du voisin (fromE[j]) + 1 (coût du pas),
            # le tout divisé par l pour l'espérance
            fromE[i] += (fromE[j]+1)/l
    
    # On récupère l'espérance totale depuis la racine, stockée dans fromE[0]
    allE = fromE[0]
    # On initialise la réponse avec cette espérance de base
    ans = fromE[0]
    
    # On construit une liste tf, où chaque élément correspond à une "contribution totale d'une arête"
    # pour chaque sommet i, impliquant le nombre de façons d'atteindre i, le coût pour y arriver,
    # et la somme de toutes les espérances pour ses voisins
    tf = [
        toP[i]*(
            (toE[i]+1)*len(g[i])+            # Somme des coûts des chemins sortants du sommet i
            sum([fromE[j] for j in g[i]])    # Somme des espérances vers tous les voisins j de i
        )
        for i in range(n)
    ]
    
    # Pour chaque arête (s, t) dans la liste st
    for s, t in st:
        # Si le sommet d'origine (s-1) a au moins un voisin
        if g[s-1]:
            # l est le nombre de voisins du sommet s-1
            l = len(g[s-1])
            # Si ce sommet a plus d'un voisin (l > 1), on considère la possibilité d'enlever l'arête
            if l > 1:
                # Calcul d'une candidate pour la réponse en tenant compte du retrait d'une arête sortante spécifique,
                # en recalculant l'espérance dans ce cas et en mettant à jour ans si on trouve mieux.
                ans = min(
                    allE + tf[s-1]*(1/(l-1) - 1/l) - toP[s-1]*(toE[s-1]+1+fromE[t-1])/(l-1),
                    ans
                )
    # On affiche la réponse finale, qui est l'espérance minimale trouvée
    print(ans)

# Appel de la fonction principale pour exécuter le programme lors de l'exécution du script
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.20061489939689636
    2. 'ition' → logprob: -1.8256149291992188
    3. 't' → logprob: -4.200614929199219
    4. 'it' → logprob: -6.700614929199219
    5. 'i' → logprob: -7.325614929199219
    6. 'tion' → logprob: -7.325614929199219
    7. 'er' → logprob: -7.825614929199219
    8. '#' → logprob: -7.950614929199219
    9. 'ation' → logprob: -7.950614929199219
    10. 'ine' → logprob: -8.575614929199219

Token 4: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23234444856643677
    2. ' :' → logprob: -2.982344388961792
    3. 's' → logprob: -3.107344388961792
    4. '_' → logprob: -3.482344388961792
    5. ' ' → logprob: -3.607344388961792
    6. '```' → logprob: -4.107344627380371
    7. ' d' → logprob: -4.857344627380371
    8. '=' → logprob: -4.982344627380371
    9. '(' → logprob: -5.107344627380371
    10. ' de' → logprob: -5.357344627380371

Token 5: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.137817844748497
    2. 'la' → logprob: -2.887817859649658
    3. 'class' → logprob: -4.262817859649658
    4. 'l' → logprob: -4.637817859649658
    5. 'une' → logprob: -4.637817859649658
    6. ' ' → logprob: -4.762817859649658
    7. ' l' → logprob: -5.137817859649658
    8. '```' → logprob: -5.387817859649658
    9. ' class' → logprob: -5.512817859649658
    10. ' ' → logprob: -5.512817859649658

Token 6: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.3119939863681793
    2. 'classe' → logprob: -1.436993956565857
    3. 'class' → logprob: -3.9369940757751465
    4. 'function' → logprob: -5.3119940757751465
    5. ' fonction' → logprob: -6.1869940757751465
    6. 'f' → logprob: -6.5619940757751465
    7. 'fon' → logprob: -7.5619940757751465
    8. 'variable' → logprob: -7.6869940757751465
    9. ' classe' → logprob: -8.061993598937988
    10. ' ' → logprob: -8.436993598937988

Token 7: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.523201048374176
    2. 'd' → logprob: -1.0232009887695312
    3. ' ' → logprob: -4.023200988769531
    4. '_' → logprob: -5.023200988769531
    5. ' d' → logprob: -5.273200988769531
    6. 's' → logprob: -5.273200988769531
    7. ' ' → logprob: -5.523200988769531
    8. 'de' → logprob: -6.273200988769531
    9. '```' → logprob: -6.648200988769531
    10. ' def' → logprob: -6.648200988769531

Token 8: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007572157774120569
    2. '```' → logprob: -7.625757217407227
    3. '\' → logprob: -8.625757217407227
    4. ':' → logprob: -9.875757217407227
    5. 'd' → logprob: -11.125757217407227
    6. 'de' → logprob: -12.125757217407227
    7. ':def' → logprob: -12.250757217407227
    8. '``' → logprob: -12.250757217407227
    9. '\n' → logprob: -12.375757217407227
    10. ' def' → logprob: -13.500757217407227

Token 9: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.25882235169410706
    2. ' programme' → logprob: -1.6338223218917847
    3. 'program' → logprob: -4.008822441101074
    4. ' script' → logprob: -4.633822441101074
    5. 'script' → logprob: -6.008822441101074
    6. ' program' → logprob: -7.758822441101074
    7. 'code' → logprob: -7.883822441101074
    8. ' code' → logprob: -8.133822441101074
    9. '#' → logprob: -8.258822441101074
    10. '```' → logprob: -8.383822441101074

Token 10: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31410765647888184
    2. 'd' → logprob: -1.3141076564788818
    3. '```' → logprob: -7.689107894897461
    4. '\' → logprob: -7.939107894897461
    5. 'de' → logprob: -11.439107894897461
    6. '``' → logprob: -11.564107894897461
    7. '`' → logprob: -12.814107894897461
    8. ':' → logprob: -13.439107894897461
    9. '#' → logprob: -13.564107894897461
    10. '\n' → logprob: -13.814107894897461

Token 11: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029998542740941048
    2. '```' → logprob: -3.904998540878296
    3. '\' → logprob: -5.029998779296875
    4. '\n' → logprob: -6.279998779296875
    5. '``' → logprob: -7.779998779296875
    6. 'd' → logprob: -8.154998779296875
    7. '
' → logprob: -8.529998779296875
    8. ' 
' → logprob: -10.404998779296875
    9. '`' → logprob: -10.904998779296875
    10. 'de' → logprob: -11.279998779296875

Token 12: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.036805663257837296
    2. ' ' → logprob: -3.4118056297302246
    3. ' ma' → logprob: -6.661805629730225
    4. ' principale' → logprob: -7.161805629730225
    5. ' ' → logprob: -7.786805629730225
    6. ' hello' → logprob: -8.911806106567383
    7. ' espace' → logprob: -9.161806106567383
    8. ' principal' → logprob: -9.161806106567383
    9. ' programme' → logprob: -9.411806106567383
    10. ' program' → logprob: -9.536806106567383

Token 13: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.062287408858537674
    2. '(' → logprob: -2.8122873306274414
    3. '(:' → logprob: -8.937287330627441
    4. ':' → logprob: -9.562287330627441
    5. '()' → logprob: -10.062287330627441
    6. ' ():' → logprob: -10.437287330627441
    7. '(":' → logprob: -10.937287330627441
    8. '```' → logprob: -11.937287330627441
    9. '(
' → logprob: -12.187287330627441
    10. ' (' → logprob: -12.937287330627441

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018411191180348396
    2. '    
' → logprob: -4.893411159515381
    3. '\' → logprob: -5.143411159515381
    4. ' ' → logprob: -6.518411159515381
    5. '\n' → logprob: -7.268411159515381
    6. ' 
' → logprob: -7.393411159515381
    7. '<|end|>' → logprob: -7.393411159515381
    8. '    ' → logprob: -7.518411159515381
    9. '
' → logprob: -8.268411636352539
    10. ':' → logprob: -9.268411636352539

Token 15: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1298846006393433
    2. ' pass' → logprob: -1.5048846006393433
    3. 'pass' → logprob: -1.8798846006393433
    4. 'print' → logprob: -2.254884719848633
    5. '    ' → logprob: -2.254884719848633
    6. ' ' → logprob: -2.754884719848633
    7. '#' (adapté à ' #') → logprob: -4.379884719848633
    8. ' print' → logprob: -4.504884719848633
    9. '  ' → logprob: -6.754884719848633
    10. 'p' → logprob: -6.879884719848633

Token 16: ' Lecture' (ID: 106534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5104599595069885
    2. ' print' → logprob: -1.7604598999023438
    3. 'print' → logprob: -1.8854598999023438
    4. '#' → logprob: -3.8854598999023438
    5. ' #' → logprob: -4.135459899902344
    6. 'pass' → logprob: -4.510459899902344
    7. ' pass' → logprob: -4.885459899902344
    8. ' ' → logprob: -5.385459899902344
    9. '    ' → logprob: -5.385459899902344
    10. 'n' → logprob: -5.510459899902344

Token 17: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2575844526290894
    2. ' ' → logprob: -1.3825844526290894
    3. ' des' → logprob: -1.6325844526290894
    4. '    ' → logprob: -2.257584571838379
    5. '()' → logprob: -2.507584571838379
    6. '(' → logprob: -2.882584571838379
    7. ' de' → logprob: -5.257584571838379
    8. ' )' → logprob: -5.382584571838379
    9. '_' → logprob: -5.632584571838379
    10. 'des' → logprob: -5.882584571838379

Token 18: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.43562957644462585
    2. ' ' → logprob: -1.3106296062469482
    3. ''' → logprob: -3.0606296062469482
    4. 'es' → logprob: -3.9356296062469482
    5. ' e' → logprob: -5.310629367828369
    6. 'u' → logprob: -5.685629367828369
    7. '_' → logprob: -5.935629367828369
    8. '()' → logprob: -6.185629367828369
    9. '   ' → logprob: -7.560629367828369
    10. ''une' → logprob: -7.560629367828369

Token 19: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.3246272802352905
    2. ' chaine' → logprob: -2.44962739944458
    3. 'entrée' → logprob: -2.69962739944458
    4. 'chaine' → logprob: -2.82462739944458
    5. ' ' → logprob: -3.69962739944458
    6. ' entrée' → logprob: -4.07462739944458
    7. ' ligne' → logprob: -4.94962739944458
    8. ' phrase' → logprob: -5.07462739944458
    9. ' input' → logprob: -6.44962739944458
    10. 'cha' → logprob: -6.94962739944458

Token 20: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5045859217643738
    2. '   ' → logprob: -1.6295859813690186
    3. '    ' → logprob: -2.5045859813690186
    4. 's' → logprob: -3.8795859813690186
    5. ' ' → logprob: -3.8795859813690186
    6. ' =' → logprob: -4.3795857429504395
    7. ' input' → logprob: -4.3795857429504395
    8. 'de' → logprob: -4.7545857429504395
    9. ' d' → logprob: -5.2545857429504395
    10. '()' → logprob: -5.3795857429504395

Token 21: ' l' (ID: 305)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.2781991958618164
    2. 'code' → logprob: -2.0281991958618164
    3. 'texte' → logprob: -3.4031991958618164
    4. ' input' → logprob: -3.5281991958618164
    5. 'entrée' → logprob: -4.653199195861816
    6. ' texte' → logprob: -4.653199195861816
    7. 'l' → logprob: -4.903199195861816
    8. 's' → logprob: -4.903199195861816
    9. 'input' → logprob: -5.528199195861816
    10. ' l' → logprob: -5.653199195861816

Token 22: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.10867638885974884
    2. 'input' → logprob: -3.4836764335632324
    3. ''utilisateur' → logprob: -3.8586764335632324
    4. 'a' → logprob: -3.8586764335632324
    5. ''' → logprob: -4.358676433563232
    6. 'e' → logprob: -4.858676433563232
    7. 'entrée' → logprob: -4.983676433563232
    8. ''ex' → logprob: -7.108676433563232
    9. ' input' → logprob: -7.733676433563232
    10. '_input' → logprob: -8.733675956726074

Token 23: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3375846147537231
    2. ' input' → logprob: -1.3375846147537231
    3. 'user' → logprob: -1.8375846147537231
    4. ' user' → logprob: -1.9625846147537231
    5. ' utilisateur' → logprob: -2.4625844955444336
    6. 'input' → logprob: -2.8375844955444336
    7. 's' → logprob: -4.587584495544434
    8. ' ' → logprob: -4.712584495544434
    9. ' de' → logprob: -7.212584495544434
    10. 'd' → logprob: -7.212584495544434

Token 24: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071382587775588036
    2. '    ' → logprob: -5.507138252258301
    3. 'input' → logprob: -6.882138252258301
    4. ' input' → logprob: -7.132138252258301
    5. '    
' → logprob: -8.0071382522583
    6. 'user' → logprob: -9.1321382522583
    7. '```' → logprob: -9.2571382522583
    8. ' ' → logprob: -9.3821382522583
    9. '\' → logprob: -9.5071382522583
    10. ' line' → logprob: -9.6321382522583

Token 25: ' décou' (ID: 68302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07013072073459625
    2. '    ' → logprob: -3.4451308250427246
    3. ' input' → logprob: -4.445130825042725
    4. ' line' → logprob: -4.570130825042725
    5. ' ligne' → logprob: -5.195130825042725
    6. ' data' → logprob: -7.195130825042725
    7. ' )' → logprob: -7.445130825042725
    8. ' ' → logprob: -7.820130825042725
    9. 'input' → logprob: -7.820130825042725
    10. ' s' → logprob: -7.820130825042725

Token 26: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.6193137764930725
    2. 'p' → logprob: -0.9943137764930725
    3. 'pe' → logprob: -2.8693137168884277
    4. 'per' → logprob: -3.4943137168884277
    5. 'pé' → logprob: -6.369313716888428
    6. 'pant' → logprob: -6.494313716888428
    7. 'pa' → logprob: -7.744313716888428
    8. 'Page' → logprob: -9.869314193725586
    9. 'п' → logprob: -9.994314193725586
    10. '\' → logprob: -9.994314193725586

Token 27: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6050041913986206
    2. ' en' → logprob: -1.6050041913986206
    3. 's' → logprob: -2.85500431060791
    4. ' ' → logprob: -3.23000431060791
    5. ' de' → logprob: -3.23000431060791
    6. '[' → logprob: -3.73000431060791
    7. '    ' → logprob: -4.23000431060791
    8. ' )' → logprob: -4.23000431060791
    9. 'de' → logprob: -4.73000431060791
    10. ' des' → logprob: -4.73000431060791

Token 28: ' deux' (ID: 10301)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.3458695411682129
    2. 'm' → logprob: -1.720869541168213
    3. 'tokens' → logprob: -2.845869541168213
    4. ' tokens' → logprob: -3.470869541168213
    5. '   ' → logprob: -5.095869541168213
    6. ' ' → logprob: -5.345869541168213
    7. 'liste' → logprob: -5.595869541168213
    8. ' liste' → logprob: -5.845869541168213
    9. 'mot' → logprob: -5.970869541168213
    10. '```' → logprob: -6.595869541168213

Token 29: ' valeurs' (ID: 73668)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.7010976076126099
    2. 'variables' → logprob: -1.8260976076126099
    3. ' mots' → logprob: -2.4510974884033203
    4. ' parts' → logprob: -2.9510974884033203
    5. 'tokens' → logprob: -2.9510974884033203
    6. ' parties' → logprob: -3.8260974884033203
    7. 'part' → logprob: -4.07609748840332
    8. ' chain' → logprob: -4.20109748840332
    9. ' chaînes' → logprob: -4.20109748840332
    10. ' tokens' → logprob: -4.32609748840332

Token 30: ' sépar' (ID: 97160)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9263351559638977
    2. ' input' → logprob: -1.551335096359253
    3. '   ' → logprob: -2.301335096359253
    4. ' user' → logprob: -2.301335096359253
    5. ',' → logprob: -3.051335096359253
    6. ' ,' → logprob: -3.801335096359253
    7. ' val' → logprob: -4.301335334777832
    8. ' ligne' → logprob: -4.301335334777832
    9. 'input' → logprob: -4.551335334777832
    10. 's' → logprob: -4.676335334777832

Token 31: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.03844708204269409
    2. 'é' → logprob: -3.538447141647339
    3. 'ée' → logprob: -4.78844690322876
    4. 'és' → logprob: -8.163447380065918
    5. 'par' → logprob: -11.413447380065918
    6. '```' → logprob: -11.663447380065918
    7. 'É' → logprob: -11.788447380065918
    8. 'è' → logprob: -12.663447380065918
    9. 'e' → logprob: -12.788447380065918
    10. 'er' → logprob: -13.163447380065918

Token 32: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.17792271077632904
    2. ' =' → logprob: -2.3029227256774902
    3. 'par' → logprob: -3.1779227256774902
    4. ',' → logprob: -5.17792272567749
    5. '=' → logprob: -5.42792272567749
    6. ' ' → logprob: -5.67792272567749
    7. ' by' → logprob: -5.80292272567749
    8. '   ' → logprob: -6.55292272567749
    9. ' )' → logprob: -7.05292272567749
    10. ' ,' → logprob: -7.30292272567749

Token 33: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7662726044654846
    2. ''un' → logprob: -1.5162725448608398
    3. ''' → logprob: -2.01627254486084
    4. ' un' → logprob: -2.14127254486084
    5. ' ' → logprob: -4.14127254486084
    6. 'une' → logprob: -4.64127254486084
    7. ''espace' → logprob: -5.01627254486084
    8. '"' → logprob: -5.51627254486084
    9. 'es' → logprob: -5.64127254486084
    10. ''une' → logprob: -5.76627254486084

Token 34: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.3618561029434204
    2. 'es' → logprob: -1.9868561029434204
    3. ''espace' → logprob: -2.861855983734131
    4. 'space' → logprob: -3.236855983734131
    5. ' ' → logprob: -3.486855983734131
    6. ''' → logprob: -4.236855983734131
    7. '_' → logprob: -5.111855983734131
    8. 'esp' → logprob: -5.111855983734131
    9. ' espaces' → logprob: -6.111855983734131
    10. '  ' → logprob: -6.111855983734131

Token 35: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.920909583568573
    2. 'n' → logprob: -2.4209096431732178
    3. 's' → logprob: -2.4209096431732178
    4. '    
' → logprob: -2.5459096431732178
    5. 'user' → logprob: -2.6709096431732178
    6. 'input' → logprob: -3.0459096431732178
    7. '   
' → logprob: -3.4209096431732178
    8. 'a' → logprob: -3.6709096431732178
    9. ' ' → logprob: -3.7959096431732178
    10. '    ' → logprob: -3.7959096431732178

Token 36: '   ' (ID: 271)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.5428928136825562
    2. ' et' → logprob: -1.7928928136825562
    3. '   ' → logprob: -2.7928929328918457
    4. ' and' → logprob: -2.7928929328918457
    5. 'et' → logprob: -4.167892932891846
    6. ',' → logprob: -4.542892932891846
    7. '    ' → logprob: -4.542892932891846
    8. 'result' → logprob: -4.667892932891846
    9. ' ' → logprob: -4.792892932891846
    10. ' la' → logprob: -4.917892932891846

Token 37: ' #' (ID: 1069)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.38556838035583496
    2. ' et' → logprob: -1.885568380355835
    3. ' and' → logprob: -3.135568380355835
    4. '   ' → logprob: -3.135568380355835
    5. 'et' → logprob: -3.760568380355835
    6. '    ' → logprob: -4.760568618774414
    7. ',' → logprob: -5.135568618774414
    8. '#' (adapté à ' #') → logprob: -5.260568618774414
    9. ' ' → logprob: -5.760568618774414
    10. ')' → logprob: -5.885568618774414

Token 38: ' conversion' (ID: 22165)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.584144949913025
    2. ' val' → logprob: -1.709144949913025
    3. ' puis' → logprob: -1.834144949913025
    4. ' valeurs' → logprob: -2.7091450691223145
    5. ' et' → logprob: -2.8341450691223145
    6. ' conversion' → logprob: -3.0841450691223145
    7. ' vals' → logprob: -3.8341450691223145
    8. ' values' → logprob: -3.8341450691223145
    9. 'a' → logprob: -3.9591450691223145
    10. ' stock' → logprob: -4.0841450691223145

Token 39: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.01997940056025982
    2. ' des' → logprob: -4.019979476928711
    3. 'en' → logprob: -6.894979476928711
    4. ' ' → logprob: -7.894979476928711
    5. ' de' → logprob: -8.769979476928711
    6. ' int' → logprob: -9.269979476928711
    7. 's' → logprob: -10.519979476928711
    8. 'int' → logprob: -10.519979476928711
    9. ' et' → logprob: -10.769979476928711
    10. ' into' → logprob: -11.144979476928711

Token 40: ' ces' (ID: 10532)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.817541241645813
    2. 'int' → logprob: -1.317541241645813
    3. ' ent' → logprob: -2.4425411224365234
    4. ' ' → logprob: -2.5675411224365234
    5. ' integers' → logprob: -3.6925411224365234
    6. 'ent' → logprob: -3.9425411224365234
    7. ' float' → logprob: -3.9425411224365234
    8. ' ces' → logprob: -4.942541122436523
    9. ' deux' → logprob: -4.942541122436523
    10. 's' → logprob: -5.192541122436523

Token 41: ' deux' (ID: 10301)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.11919617652893066
    2. ' ' → logprob: -3.2441961765289307
    3. 'val' → logprob: -3.6191961765289307
    4. ' deux' → logprob: -4.244195938110352
    5. ' chaînes' → logprob: -4.244195938110352
    6. ' val' → logprob: -5.119195938110352
    7. ' en' → logprob: -5.869195938110352
    8. ' nombres' → logprob: -5.994195938110352
    9. ' dernières' → logprob: -6.744195938110352
    10. ' chain' → logprob: -6.869195938110352

Token 42: ' valeurs' (ID: 73668)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.7960488796234131
    2. ' valeurs' → logprob: -1.171048879623413
    3. ' nombres' → logprob: -2.421048879623413
    4. ' integers' → logprob: -3.046048879623413
    5. ' val' → logprob: -3.546048879623413
    6. ' espaces' → logprob: -4.171049118041992
    7. 'val' → logprob: -4.796049118041992
    8. ' int' → logprob: -5.421049118041992
    9. '_' → logprob: -5.546049118041992
    10. ' ' → logprob: -5.671049118041992

Token 43: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0024659058544784784
    2. ' ' → logprob: -6.252465724945068
    3. 's' → logprob: -8.252466201782227
    4. 'en' → logprob: -9.252466201782227
    5. ',' → logprob: -10.752466201782227
    6. ' au' → logprob: -10.752466201782227
    7. ' des' → logprob: -10.877466201782227
    8. ' et' → logprob: -11.377466201782227
    9. ' ,' → logprob: -11.502466201782227
    10. '   ' → logprob: -11.502466201782227

Token 44: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.9743101000785828
    2. 'ent' → logprob: -1.7243101596832275
    3. ' nombres' → logprob: -2.0993101596832275
    4. ' float' → logprob: -2.4743101596832275
    5. ' int' → logprob: -2.7243101596832275
    6. ' integers' → logprob: -2.8493101596832275
    7. 'int' → logprob: -2.9743101596832275
    8. ' des' → logprob: -3.8493101596832275
    9. ' ' → logprob: -5.099309921264648
    10. ' floats' → logprob: -5.099309921264648

Token 45: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.004876858089119196
    2. 'i' → logprob: -5.504877090454102
    3. 'ier' → logprob: -8.004877090454102
    4. 'ières' → logprob: -8.879877090454102
    5. '```' → logprob: -9.004877090454102
    6. '   ' → logprob: -9.379877090454102
    7. ' i' → logprob: -10.379877090454102
    8. 'ié' → logprob: -10.629877090454102
    9. '_i' → logprob: -12.004877090454102
    10. '  ' → logprob: -12.129877090454102

Token 46: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2987848222255707
    2. '    
' → logprob: -3.0487847328186035
    3. ',' → logprob: -3.1737847328186035
    4. 'a' → logprob: -3.2987847328186035
    5. 'n' → logprob: -3.9237847328186035
    6. 's' → logprob: -3.9237847328186035
    7. ' line' → logprob: -4.6737847328186035
    8. ' a' → logprob: -4.9237847328186035
    9. ' ,' → logprob: -5.0487847328186035
    10. ' 
' → logprob: -5.1737847328186035

Token 47: ' assign' (ID: 14975)
  Prédit: ' stockage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stockage' → logprob: -0.4183906316757202
    2. 'assign' → logprob: -2.6683907508850098
    3. ' assign' → logprob: -2.6683907508850098
    4. ' affect' → logprob: -2.7933907508850098
    5. ' leur' → logprob: -3.0433907508850098
    6. ' stock' → logprob: -3.9183907508850098
    7. 'aff' → logprob: -4.16839075088501
    8. ' attribution' → logprob: -4.29339075088501
    9. ' assignment' → logprob: -4.66839075088501
    10. ' l' → logprob: -5.29339075088501

Token 48: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.1572752743959427
    2. 'ement' → logprob: -2.0322751998901367
    3. 'ment' → logprob: -5.532275199890137
    4. 'a' → logprob: -5.782275199890137
    5. 'er' → logprob: -6.032275199890137
    6. 'em' → logprob: -6.407275199890137
    7. ' at' → logprob: -7.782275199890137
    8. 'm' → logprob: -7.907275199890137
    9. 'at' → logprob: -7.907275199890137
    10. 'ati' → logprob: -8.282275199890137

Token 49: ' à' (ID: 1221)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5695970058441162
    2. ' a' → logprob: -1.3195970058441162
    3. '   ' → logprob: -3.194597005844116
    4. ' à' → logprob: -3.319597005844116
    5. ' ' → logprob: -3.444597005844116
    6. ' aux' → logprob: -4.194597244262695
    7. ' au' → logprob: -4.194597244262695
    8. ' de' → logprob: -5.069597244262695
    9. ' to' → logprob: -5.194597244262695
    10. ' x' → logprob: -6.444597244262695

Token 50: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3541887700557709
    2. 'a' → logprob: -1.7291887998580933
    3. ' x' → logprob: -2.3541886806488037
    4. 'x' → logprob: -5.229188919067383
    5. ' nombre' → logprob: -5.729188919067383
    6. ' ' → logprob: -5.729188919067383
    7. ' base' → logprob: -5.854188919067383
    8. ' la' → logprob: -6.229188919067383
    9. ' val' → logprob: -6.354188919067383
    10. ' `' → logprob: -6.729188919067383

Token 51: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002160018077120185
    2. '1' → logprob: -7.00216007232666
    3. ' ,' → logprob: -7.75216007232666
    4. 's' → logprob: -8.00216007232666
    5. ',n' → logprob: -8.00216007232666
    6. 'et' → logprob: -11.12716007232666
    7. '0' → logprob: -11.25216007232666
    8. ' et' → logprob: -11.37716007232666
    9. 'n' → logprob: -11.37716007232666
    10. 'a' → logprob: -11.62716007232666

Token 52: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.23021802306175232
    2. ' k' → logprob: -2.480217933654785
    3. 'm' → logprob: -2.855217933654785
    4. ' p' → logprob: -3.480217933654785
    5. ' ' → logprob: -4.230217933654785
    6. 'k' → logprob: -4.730217933654785
    7. ' t' → logprob: -5.855217933654785
    8. ' d' → logprob: -6.855217933654785
    9. ' a' → logprob: -6.980217933654785
    10. 'p' → logprob: -6.980217933654785

Token 53: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1720324009656906
    2. '   ' → logprob: -2.047032356262207
    3. ' n' → logprob: -5.047032356262207
    4. '    
' → logprob: -5.047032356262207
    5. ',' → logprob: -5.547032356262207
    6. '[n' → logprob: -6.172032356262207
    7. '
' → logprob: -6.422032356262207
    8. '(n' → logprob: -6.547032356262207
    9. 's' → logprob: -6.922032356262207
    10. '[' → logprob: -7.297032356262207

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.402229905128479
    2. 'n' → logprob: -1.152229905128479
    3. ' n' → logprob: -4.2772297859191895
    4. '    
' → logprob: -7.5272297859191895
    5. '[n' → logprob: -8.027230262756348
    6. '	n' → logprob: -9.402230262756348
    7. '(n' → logprob: -9.527230262756348
    8. '\n' → logprob: -9.902230262756348
    9. '    ' → logprob: -10.277230262756348
    10. '  ' → logprob: -10.527230262756348

Token 55: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.06705775111913681
    2. ' n' → logprob: -2.8170578479766846
    3. '   ' → logprob: -5.4420576095581055
    4. '[n' → logprob: -8.567057609558105
    5. '(n' → logprob: -8.817057609558105
    6. '    
' → logprob: -9.067057609558105
    7. ' (' → logprob: -9.692057609558105
    8. ' 
' → logprob: -10.317057609558105
    9. ' ' → logprob: -10.317057609558105
    10. '[' → logprob: -10.692057609558105

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003044802288059145
    2. ' ,' → logprob: -8.125304222106934
    3. ',m' → logprob: -12.500304222106934
    4. ',n' → logprob: -12.625304222106934
    5. ',s' → logprob: -15.375304222106934
    6. ',v' → logprob: -15.500304222106934
    7. ',int' → logprob: -16.00030517578125
    8. '=' → logprob: -16.50030517578125
    9. 's' → logprob: -16.50030517578125
    10. '1' → logprob: -16.62530517578125

Token 57: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.04437537118792534
    2. 'm' → logprob: -3.419375419616699
    3. ' ' → logprob: -4.544375419616699
    4. ' ' → logprob: -11.0443754196167
    5. '<|end|>' → logprob: -11.5443754196167
    6. '    ' → logprob: -12.6693754196167
    7. '	m' → logprob: -12.7943754196167
    8. '  ' → logprob: -13.0443754196167
    9. ' =' → logprob: -13.0443754196167
    10. ' ‌' → logprob: -13.6693754196167

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018161294981837273
    2. '=' → logprob: -4.018161296844482
    3. ',' → logprob: -11.768160820007324
    4. ' =
' → logprob: -13.893160820007324
    5. '=input' → logprob: -14.393160820007324
    6. ')' → logprob: -14.518160820007324
    7. ' ' → logprob: -14.518160820007324
    8. ' ' → logprob: -15.268160820007324
    9. ' =
' → logprob: -15.768160820007324
    10. '=int' → logprob: -16.14316177368164

Token 59: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11383058875799179
    2. 'map' → logprob: -2.23883056640625
    3. ' input' → logprob: -7.36383056640625
    4. 'input' → logprob: -7.98883056640625
    5. ' list' → logprob: -11.98883056640625
    6. ' ' → logprob: -11.98883056640625
    7. 'int' → logprob: -12.11383056640625
    8. ' ' → logprob: -12.11383056640625
    9. '	map' → logprob: -12.73883056640625
    10. 'list' → logprob: -13.36383056640625

Token 60: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07900281250476837
    2. '(' → logprob: -2.579002857208252
    3. '(str' → logprob: -9.329002380371094
    4. '(input' → logprob: -11.829002380371094
    5. '(
' → logprob: -12.204002380371094
    6. 'int' → logprob: -12.704002380371094
    7. '(lambda' → logprob: -12.829002380371094
    8. '[int' → logprob: -13.454002380371094
    9. '<int' → logprob: -13.454002380371094
    10. '(in' → logprob: -13.579002380371094

Token 61: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09351551532745361
    2. '(' → logprob: -2.843515396118164
    3. 'input' → logprob: -4.093515396118164
    4. ')' → logprob: -5.093515396118164
    5. ',input' → logprob: -5.343515396118164
    6. ',' → logprob: -6.093515396118164
    7. ' (' → logprob: -7.718515396118164
    8. '   ' → logprob: -8.218515396118164
    9. ' input' → logprob: -8.468515396118164
    10. ')(' → logprob: -9.718515396118164

Token 62: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3485552668571472
    2. ' input' → logprob: -1.223555326461792
    3. '   ' → logprob: -10.098555564880371
    4. ')' → logprob: -10.598555564880371
    5. ' ' → logprob: -10.973555564880371
    6. '(input' → logprob: -11.223555564880371
    7. '	input' → logprob: -12.473555564880371
    8. '```' → logprob: -13.223555564880371
    9. '=input' → logprob: -13.348555564880371
    10. ',input' → logprob: -13.598555564880371

Token 63: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009132515988312662
    2. '()' → logprob: -7.000913143157959
    3. '())' → logprob: -13.875913619995117
    4. ' ().' → logprob: -14.875913619995117
    5. '()).' → logprob: -16.125913619995117
    6. '(' → logprob: -16.125913619995117
    7. '()
' → logprob: -17.125913619995117
    8. ')' → logprob: -17.875913619995117
    9. '()

' → logprob: -18.000913619995117
    10. '()`' → logprob: -18.500913619995117

Token 64: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024774393532425165
    2. 'strip' → logprob: -6.002477645874023
    3. ' split' → logprob: -14.002477645874023
    4. 'rstrip' → logprob: -14.127477645874023
    5. '(split' → logprob: -15.877477645874023
    6. 'spl' → logprob: -17.127477645874023
    7. 'read' → logprob: -19.252477645874023
    8. '.split' → logprob: -19.377477645874023
    9. '```' → logprob: -19.502477645874023
    10. ' strip' → logprob: -19.627477645874023

Token 65: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03711919113993645
    2. '()))' → logprob: -3.412119150161743
    3. '()' → logprob: -5.912119388580322
    4. ')' → logprob: -7.662119388580322
    5. '('' → logprob: -8.787118911743164
    6. '))' → logprob: -9.412118911743164
    7. '(' → logprob: -10.412118911743164
    8. ' ())' → logprob: -11.662118911743164
    9. '()))
' → logprob: -12.662118911743164
    10. '())
' → logprob: -12.787118911743164

Token 66: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9816949963569641
    2. '<|end|>' → logprob: -1.1066949367523193
    3. ':' → logprob: -1.6066949367523193
    4. ')' → logprob: -2.7316949367523193
    5. '<|end|>' → logprob: -5.231695175170898
    6. '\n' → logprob: -5.606695175170898
    7. ':
' → logprob: -5.606695175170898
    8. '  
' → logprob: -5.981695175170898
    9. '   ' → logprob: -6.106695175170898
    10. '```' → logprob: -6.606695175170898

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14254242181777954
    2. '<|end|>' → logprob: -3.2675423622131348
    3. '
' → logprob: -3.3925423622131348
    4. ' ' → logprob: -3.8925423622131348
    5. '    
' → logprob: -4.017542362213135
    6. '#' → logprob: -5.517542362213135
    7. ')' → logprob: -6.017542362213135
    8. 'for' → logprob: -6.142542362213135
    9. 'n' → logprob: -6.267542362213135
    10. '  ' → logprob: -6.392542362213135

Token 68: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5015097260475159
    2. '#' (adapté à ' #') → logprob: -1.376509666442871
    3. 'for' → logprob: -2.751509666442871
    4. 's' → logprob: -3.876509666442871
    5. 'r' → logprob: -4.751509666442871
    6. 'grid' → logprob: -5.001509666442871
    7. 'graph' → logprob: -5.126509666442871
    8. 'matrix' → logprob: -5.251509666442871
    9. 'a' → logprob: -5.501509666442871
    10. 'f' → logprob: -6.001509666442871

Token 69: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5585201382637024
    2. ' for' → logprob: -1.4335200786590576
    3. 'result' → logprob: -2.3085200786590576
    4. ' result' → logprob: -3.3085200786590576
    5. '#' → logprob: -3.5585200786590576
    6. 'f' → logprob: -5.183520317077637
    7. ' #' → logprob: -5.433520317077637
    8. 'if' → logprob: -5.933520317077637
    9. ' if' → logprob: -6.183520317077637
    10. 's' → logprob: -6.308520317077637

Token 70: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.0337759405374527
    2. 'ization' → logprob: -3.783776044845581
    3. 'iser' → logprob: -4.908775806427002
    4. '#' → logprob: -7.283775806427002
    5. 'is' → logprob: -7.783775806427002
    6. 'izer' → logprob: -7.908775806427002
    7. 'ize' → logprob: -8.53377628326416
    8. 'isations' → logprob: -8.65877628326416
    9. 'e' → logprob: -8.78377628326416
    10. 'er' → logprob: -8.90877628326416

Token 71: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07870358973741531
    2. 'd' → logprob: -3.9537036418914795
    3. ' d' → logprob: -4.0787034034729
    4. '<|end|>' → logprob: -4.3287034034729
    5. ' ' → logprob: -5.3287034034729
    6. ' des' → logprob: -5.7037034034729
    7. ' du' → logprob: -5.8287034034729
    8. ')' → logprob: -6.3287034034729
    9. '```' → logprob: -6.5787034034729
    10. '    ' → logprob: -6.8287034034729

Token 72: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.995839536190033
    2. ''une' → logprob: -1.2458395957946777
    3. ''' → logprob: -1.7458395957946777
    4. '_' → logprob: -2.6208395957946777
    5. 'e' → logprob: -3.2458395957946777
    6. ' '' → logprob: -4.245839595794678
    7. 'a' → logprob: -4.495839595794678
    8. 'u' → logprob: -5.120839595794678
    9. '[]' → logprob: -5.495839595794678
    10. ' ' → logprob: -5.495839595794678

Token 73: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6958914995193481
    2. 'liste' → logprob: -1.0708914995193481
    3. ' matr' → logprob: -3.8208913803100586
    4. 'list' → logprob: -3.8208913803100586
    5. ' variable' → logprob: -4.070891380310059
    6. ' list' → logprob: -4.320891380310059
    7. ' ' → logprob: -4.695891380310059
    8. ' matrix' → logprob: -5.195891380310059
    9. 'mat' → logprob: -5.445891380310059
    10. 'lst' → logprob: -5.570891380310059

Token 74: ' '' (ID: 461)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7626502513885498
    2. ' des' → logprob: -1.7626502513885498
    3. ' d' → logprob: -2.13765025138855
    4. 'des' → logprob: -3.26265025138855
    5. 'dp' → logprob: -3.63765025138855
    6. 'd' → logprob: -3.63765025138855
    7. '[' → logprob: -3.76265025138855
    8. ' de' → logprob: -3.76265025138855
    9. '<|end|>' → logprob: -4.012650489807129
    10. 'de' → logprob: -4.512650489807129

Token 75: 'st' (ID: 302)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21617268025875092
    2. 'result' → logprob: -3.216172695159912
    3. ' dp' → logprob: -4.216172695159912
    4. 'lst' → logprob: -4.216172695159912
    5. 'graph' → logprob: -4.341172695159912
    6. 'dist' → logprob: -4.591172695159912
    7. 'counts' → logprob: -4.591172695159912
    8. 'res' → logprob: -4.591172695159912
    9. 's' → logprob: -4.841172695159912
    10. 'd' → logprob: -5.091172695159912

Token 76: ''' (ID: 6)
  Prédit: 'rings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rings' → logprob: -1.028497338294983
    2. 'ack' → logprob: -1.403497338294983
    3. 'acks' → logprob: -2.6534972190856934
    4. 'r' → logprob: -2.6534972190856934
    5. 'ring' → logprob: -2.6534972190856934
    6. 'ates' → logprob: -3.0284972190856934
    7. 'ate' → logprob: -3.1534972190856934
    8. 'udents' → logprob: -3.6534972190856934
    9. 'ars' → logprob: -5.028497219085693
    10. 'ocks' → logprob: -5.028497219085693

Token 77: ' contenant' (ID: 131049)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01315317116677761
    2. '[]' → logprob: -5.513153076171875
    3. '=[]' → logprob: -5.638153076171875
    4. '[' → logprob: -6.138153076171875
    5. '=' → logprob: -6.388153076171875
    6. 's' → logprob: -8.013153076171875
    7. ',' → logprob: -8.513153076171875
    8. '=[' → logprob: -8.763153076171875
    9. 'st' → logprob: -8.888153076171875
    10. ' ' → logprob: -9.013153076171875

Token 78: ' m' (ID: 284)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.9025592803955078
    2. '[m' → logprob: -1.6525592803955078
    3. '[' → logprob: -1.7775592803955078
    4. 'n' → logprob: -2.402559280395508
    5. 'm' → logprob: -3.402559280395508
    6. ' [' → logprob: -3.527559280395508
    7. '[]' → logprob: -4.152559280395508
    8. 'False' → logprob: -4.402559280395508
    9. ' n' → logprob: -4.777559280395508
    10. '['' → logprob: -4.902559280395508

Token 79: ' sous' (ID: 14487)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.35356274247169495
    2. '[' → logprob: -1.9785627126693726
    3. ' zeros' → logprob: -2.103562831878662
    4. ' ' → logprob: -4.728562831878662
    5. ' elements' → logprob: -4.853562831878662
    6. ' integers' → logprob: -5.978562831878662
    7. ' spaces' → logprob: -6.103562831878662
    8. '0' → logprob: -6.228562831878662
    9. ' False' → logprob: -6.353562831878662
    10. ' True' → logprob: -6.603562831878662

Token 80: '-list' (ID: 18463)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.9724807143211365
    2. '-' → logprob: -1.4724807739257812
    3. '[]' → logprob: -2.3474807739257812
    4. 'list' → logprob: -2.9724807739257812
    5. 'ense' → logprob: -3.5974807739257812
    6. '[' → logprob: -3.5974807739257812
    7. '_list' → logprob: -3.8474807739257812
    8. '=[]' → logprob: -3.8474807739257812
    9. 's' → logprob: -4.347480773925781
    10. 'set' → logprob: -4.472480773925781

Token 81: 'es' (ID: 268)
  Prédit: 'istes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istes' → logprob: -0.016531169414520264
    2. 'ists' → logprob: -5.266530990600586
    3. 'es' → logprob: -6.016530990600586
    4. 'ist' → logprob: -6.016530990600586
    5. 'iste' → logprob: -6.141530990600586
    6. '=[]' → logprob: -7.266530990600586
    7. '```' → logprob: -7.266530990600586
    8. 'tes' → logprob: -7.391530990600586
    9. 'stes' → logprob: -7.391530990600586
    10. '[' → logprob: -7.766530990600586

Token 82: ',
' (ID: 412)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8140278458595276
    2. '=[]' → logprob: -1.9390277862548828
    3. '[' → logprob: -2.064027786254883
    4. '[]' → logprob: -2.314027786254883
    5. '=' → logprob: -2.814027786254883
    6. '   ' → logprob: -3.189027786254883
    7. ',' → logprob: -4.189027786254883
    8. '[:]' → logprob: -4.439027786254883
    9. ' []' → logprob: -4.814027786254883
    10. ' ' → logprob: -4.814027786254883

Token 83: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5890223383903503
    2. ' chacune' → logprob: -0.8390223383903503
    3. '[' → logprob: -5.464022159576416
    4. 'each' → logprob: -5.839022159576416
    5. ' each' → logprob: -6.214022159576416
    6. ' []' → logprob: -6.214022159576416
    7. '   ' → logprob: -8.339022636413574
    8. '<|end|>' → logprob: -8.589022636413574
    9. ' chacun' → logprob: -8.964022636413574
    10. '    ' → logprob: -8.964022636413574

Token 84: ' #' (ID: 1069)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12931858003139496
    2. ' chacune' → logprob: -2.8793184757232666
    3. ' []' → logprob: -3.0043184757232666
    4. ' each' → logprob: -4.879318714141846
    5. 'each' → logprob: -5.504318714141846
    6. '[' → logprob: -6.504318714141846
    7. ' chacun' → logprob: -7.504318714141846
    8. '   ' → logprob: -7.629318714141846
    9. ' ' → logprob: -8.254318237304688
    10. '    ' → logprob: -8.504318237304688

Token 85: ' chaque' (ID: 21194)
  Prédit: ' chacune'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chacune' → logprob: -0.29075124859809875
    2. '[]' → logprob: -1.4157512187957764
    3. ' []' → logprob: -5.4157514572143555
    4. 'each' → logprob: -6.6657514572143555
    5. 'cha' → logprob: -7.4157514572143555
    6. ' each' → logprob: -7.6657514572143555
    7. ' chacun' → logprob: -7.7907514572143555
    8. 'vide' → logprob: -7.7907514572143555
    9. 'ch' → logprob: -8.540751457214355
    10. ' vide' → logprob: -8.665751457214355

Token 86: ' sous' (ID: 14487)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06299953162670135
    2. ' []' → logprob: -3.3129994869232178
    3. 's' → logprob: -4.062999725341797
    4. ' sous' → logprob: -5.562999725341797
    5. ' ' → logprob: -7.187999725341797
    6. 'st' → logprob: -7.812999725341797
    7. ' contenant' → logprob: -7.812999725341797
    8. '=[]' → logprob: -7.937999725341797
    9. '[' → logprob: -8.312999725341797
    10. 'cont' → logprob: -8.687999725341797

Token 87: '-l' (ID: 2887)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.750671148300171
    2. '[]' → logprob: -1.750671148300171
    3. '_list' → logprob: -1.875671148300171
    4. 'liste' → logprob: -2.000671148300171
    5. '_' → logprob: -2.125671148300171
    6. '-l' → logprob: -2.375671148300171
    7. '-' → logprob: -2.750671148300171
    8. '_l' → logprob: -3.750671148300171
    9. '=[]' → logprob: -4.25067138671875
    10. '   ' → logprob: -4.25067138671875

Token 88: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.00558661762624979
    2. 'i' → logprob: -6.505586624145508
    3. 'ist' → logprob: -6.505586624145508
    4. 'e' → logprob: -7.255586624145508
    5. '[' → logprob: -8.130586624145508
    6. '   ' → logprob: -8.505586624145508
    7. '=[]' → logprob: -8.630586624145508
    8. 'is' → logprob: -8.755586624145508
    9. '```' → logprob: -8.880586624145508
    10. '#' → logprob: -8.880586624145508

Token 89: ' correspondant' (ID: 146058)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8275192379951477
    2. ' est' → logprob: -2.202519178390503
    3. '=[]' → logprob: -2.327519178390503
    4. ' étant' → logprob: -2.577519178390503
    5. ' contenant' → logprob: -2.702519178390503
    6. ' []' → logprob: -3.202519178390503
    7. ' vide' → logprob: -3.452519178390503
    8. ' cont' → logprob: -3.577519178390503
    9. ' représentant' → logprob: -3.827519178390503
    10. ' ' → logprob: -4.077519416809082

Token 90: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.25290989875793457
    2. '<|end|>' → logprob: -1.7529098987579346
    3. 'à' → logprob: -4.0029096603393555
    4. ' to' → logprob: -4.1279096603393555
    5. 'to' → logprob: -6.0029096603393555
    6. ' au' → logprob: -6.1279096603393555
    7. ' a' → logprob: -6.2529096603393555
    8. ' ' → logprob: -6.3779096603393555
    9. '```' → logprob: -6.5029096603393555
    10. '[]' → logprob: -6.6279096603393555

Token 91: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.027569107711315155
    2. ' []' → logprob: -3.777569055557251
    3. '[' → logprob: -6.02756929397583
    4. 'une' → logprob: -6.90256929397583
    5. ' une' → logprob: -8.152568817138672
    6. ' ' → logprob: -8.652568817138672
    7. 'un' → logprob: -9.027568817138672
    8. ' un' → logprob: -9.277568817138672
    9. '[]}' → logprob: -10.152568817138672
    10. ' [' → logprob: -10.402568817138672

Token 92: ' entrée' (ID: 95590)
  Prédit: ' tâche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tâche' → logprob: -0.6090492010116577
    2. ' station' → logprob: -2.3590493202209473
    3. ' liste' → logprob: -2.8590493202209473
    4. ' étape' → logprob: -3.2340493202209473
    5. ' structure' → logprob: -3.3590493202209473
    6. ' journée' → logprob: -3.8590493202209473
    7. ' plage' → logprob: -4.109049320220947
    8. ' ligne' → logprob: -4.484049320220947
    9. ' chaîne' → logprob: -4.609049320220947
    10. ' sé' → logprob: -4.609049320220947

Token 93: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2915034294128418
    2. ' de' → logprob: -2.541503429412842
    3. '   ' → logprob: -2.916503429412842
    4. ' []' → logprob: -3.916503429412842
    5. ' pour' → logprob: -4.166503429412842
    6. '=[]' → logprob: -4.291503429412842
    7. '[' → logprob: -4.541503429412842
    8. ' vide' → logprob: -4.541503429412842
    9. 'vide' → logprob: -4.791503429412842
    10. ' =' → logprob: -5.291503429412842

Token 94: 'ar' (ID: 277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7797818779945374
    2. ' )' → logprob: -1.4047818183898926
    3. '[]' → logprob: -2.5297818183898926
    4. ' [])' → logprob: -3.2797818183898926
    5. '[])' → logprob: -3.6547818183898926
    6. ' ' → logprob: -3.7797818183898926
    7. ' []' → logprob: -3.9047818183898926
    8. ' de' → logprob: -4.029781818389893
    9. ' des' → logprob: -4.404781818389893
    10. 's' → logprob: -5.154781818389893

Token 95: 'ête' (ID: 16808)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4352068305015564
    2. 'ray' → logprob: -1.8102068901062012
    3. 'gs' → logprob: -2.685206890106201
    4. 'g' → logprob: -2.935206890106201
    5. 'e' → logprob: -3.560206890106201
    6. 'cs' → logprob: -4.560206890106201
    7. 'bre' → logprob: -5.310206890106201
    8. 'c' → logprob: -5.435206890106201
    9. 'ch' → logprob: -5.435206890106201
    10. 'ea' → logprob: -5.560206890106201

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04555898904800415
    2. ',' → logprob: -3.6705589294433594
    3. 's' → logprob: -5.420558929443359
    4. '[])' → logprob: -5.920558929443359
    5. ' )' → logprob: -6.420558929443359
    6. '   ' → logprob: -6.420558929443359
    7. '[]' → logprob: -6.545558929443359
    8. ').' → logprob: -7.045558929443359
    9. ' dans' → logprob: -7.170558929443359
    10. ' de' → logprob: -7.170558929443359

Token 97: ' l' (ID: 305)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7892910838127136
    2. '=' → logprob: -1.9142911434173584
    3. '=[]' → logprob: -2.1642911434173584
    4. '[]' → logprob: -2.5392911434173584
    5. '[' → logprob: -2.6642911434173584
    6. '   ' → logprob: -3.1642911434173584
    7. '=[' → logprob: -3.6642911434173584
    8. ' de' → logprob: -4.289290904998779
    9. '=[]
' → logprob: -4.789290904998779
    10. ' des' → logprob: -5.039290904998779

Token 98: 'ue' (ID: 466)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.4150046110153198
    2. 'ist' → logprob: -1.6650046110153198
    3. 'e' → logprob: -2.6650047302246094
    4. 'es' → logprob: -2.9150047302246094
    5. 'ue' → logprob: -5.540004730224609
    6. 'i' → logprob: -5.790004730224609
    7. '   ' → logprob: -5.915004730224609
    8. 'is' → logprob: -6.290004730224609
    9. 'ie' → logprob: -6.415004730224609
    10. '```' → logprob: -6.415004730224609

Token 99: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07312861829996109
    2. ' for' → logprob: -2.9481287002563477
    3. '=' → logprob: -4.823128700256348
    4. ' =' → logprob: -5.573128700256348
    5. '()' → logprob: -5.823128700256348
    6. '   ' → logprob: -6.073128700256348
    7. '[]' → logprob: -8.323128700256348
    8. '[' → logprob: -8.448128700256348
    9. '()
' → logprob: -8.698128700256348
    10. '=[]
' → logprob: -9.448128700256348

Token 100: ' une' (ID: 2463)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.1038474440574646
    2. ' une' → logprob: -3.6038475036621094
    3. ' la' → logprob: -3.9788475036621094
    4. ' input' → logprob: -3.9788475036621094
    5. 'm' → logprob: -4.353847503662109
    6. ' n' → logprob: -4.853847503662109
    7. ' ' → logprob: -5.353847503662109
    8. ' les' → logprob: -5.978847503662109
    9. 'n' → logprob: -6.853847503662109
    10. ' l' → logprob: -6.978847503662109

Token 101: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6080652475357056
    2. 'ligne' → logprob: -1.4830652475357056
    3. 'range' → logprob: -2.608065128326416
    4. 'entrée' → logprob: -2.983065128326416
    5. ' line' → logprob: -4.608065128326416
    6. ' range' → logprob: -4.608065128326416
    7. 'for' → logprob: -4.733065128326416
    8. 'input' → logprob: -4.733065128326416
    9. 'line' → logprob: -4.858065128326416
    10. ' input' → logprob: -4.983065128326416

Token 102: ',
' (ID: 412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46461519598960876
    2. '   ' → logprob: -1.4646152257919312
    3. ' for' → logprob: -2.2146151065826416
    4. ' =' → logprob: -4.714615345001221
    5. '
' → logprob: -4.839615345001221
    6. '[]
' → logprob: -5.589615345001221
    7. '[]' → logprob: -5.839615345001221
    8. '[
' → logprob: -5.839615345001221
    9. '[' → logprob: -6.214615345001221
    10. 'range' → logprob: -7.464615345001221

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09661304205656052
    2. '[]' → logprob: -2.5966129302978516
    3. ' each' → logprob: -5.096612930297852
    4. '    ' → logprob: -5.596612930297852
    5. '[' → logprob: -6.096612930297852
    6. ' []' → logprob: -6.596612930297852
    7. 'each' → logprob: -6.971612930297852
    8. ' for' → logprob: -7.596612930297852
    9. ' and' → logprob: -7.971612930297852
    10. ' [' → logprob: -8.096612930297852

Token 104: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4296989440917969
    2. '[]' → logprob: -1.1796989440917969
    3. '    ' → logprob: -4.429698944091797
    4. '[' → logprob: -4.429698944091797
    5. ' []' → logprob: -5.304698944091797
    6. '  ' → logprob: -5.804698944091797
    7. ' for' → logprob: -6.429698944091797
    8. 'for' → logprob: -6.554698944091797
    9. '[
' → logprob: -6.804698944091797
    10. ' [' → logprob: -6.929698944091797

Token 105: ' transform' (ID: 7118)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.18283003568649292
    2. '   ' → logprob: -2.4328300952911377
    3. ' []' → logprob: -2.9328300952911377
    4. ' for' → logprob: -5.057829856872559
    5. '[' → logprob: -5.182829856872559
    6. 'for' → logprob: -5.932829856872559
    7. ' [' → logprob: -6.432829856872559
    8. '    ' → logprob: -6.557829856872559
    9. 'st' → logprob: -6.557829856872559
    10. '[
' → logprob: -7.182829856872559

Token 106: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.023082057014107704
    2. 'ées' → logprob: -3.8980820178985596
    3. 'é' → logprob: -6.023082256317139
    4. 'ant' → logprob: -9.89808177947998
    5. 'ation' → logprob: -11.14808177947998
    6. 'er' → logprob: -11.52308177947998
    7. 'ee' → logprob: -11.52308177947998
    8. 'és' → logprob: -11.89808177947998
    9. '#' → logprob: -12.27308177947998
    10. 'ed' → logprob: -12.77308177947998

Token 107: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2967618703842163
    2. '[]' → logprob: -2.546761989593506
    3. '[' → logprob: -3.296761989593506
    4. 'en' → logprob: -3.421761989593506
    5. ' ' → logprob: -3.921761989593506
    6. '   ' → logprob: -4.546761989593506
    7. '()' → logprob: -4.671761989593506
    8. ' into' → logprob: -4.796761989593506
    9. 'e' → logprob: -5.046761989593506
    10. '[:]' → logprob: -5.046761989593506

Token 108: ' deux' (ID: 10301)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.400671124458313
    2. 'liste' → logprob: -2.2756710052490234
    3. '[' → logprob: -2.5256710052490234
    4. ' list' → logprob: -3.0256710052490234
    5. '[]' → logprob: -3.4006710052490234
    6. ' des' → logprob: -4.275671005249023
    7. 'une' → logprob: -4.400671005249023
    8. ' une' → logprob: -4.900671005249023
    9. '[int' → logprob: -5.150671005249023
    10. 'des' → logprob: -5.400671005249023

Token 109: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.21213792264461517
    2. ' integers' → logprob: -2.3371379375457764
    3. 'ent' → logprob: -2.4621379375457764
    4. 'int' → logprob: -5.962137699127197
    5. ' int' → logprob: -6.337137699127197
    6. ' éléments' → logprob: -6.962137699127197
    7. 'ints' → logprob: -7.087137699127197
    8. '_ent' → logprob: -7.212137699127197
    9. ' nombres' → logprob: -7.712137699127197
    10. ' valeurs' → logprob: -7.712137699127197

Token 110: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.016933269798755646
    2. 'ières' → logprob: -4.766933441162109
    3. '   ' → logprob: -6.016933441162109
    4. 'ires' → logprob: -6.266933441162109
    5. 'ers' → logprob: -6.891933441162109
    6. 'ier' → logprob: -6.891933441162109
    7. 'er' → logprob: -7.766933441162109
    8. 'es' → logprob: -7.891933441162109
    9. 't' → logprob: -9.01693344116211
    10. 'res' → logprob: -9.14193344116211

Token 111: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17922061681747437
    2. '   ' → logprob: -2.929220676422119
    3. 'for' → logprob: -3.179220676422119
    4. '[]' → logprob: -3.304220676422119
    5. ' for' → logprob: -5.179220676422119
    6. ' =' → logprob: -5.429220676422119
    7. '[' → logprob: -5.554220676422119
    8. '()
' → logprob: -5.804220676422119
    9. '=' → logprob: -6.054220676422119
    10. 's' → logprob: -6.179220676422119

Token 112: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1741616427898407
    2. 'input' → logprob: -3.299161672592163
    3. ' )' → logprob: -3.299161672592163
    4. ' input' → logprob: -3.424161672592163
    5. ' n' → logprob: -4.799161434173584
    6. 'int' → logprob: -5.174161434173584
    7. ' map' → logprob: -5.299161434173584
    8. 'map' → logprob: -5.299161434173584
    9. '   ' → logprob: -5.424161434173584
    10. ' u' → logprob: -6.174161434173584

Token 113: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012430864153429866
    2. ' ,' → logprob: -6.8762431144714355
    3. ',b' → logprob: -8.626242637634277
    4. 's' → logprob: -12.001242637634277
    5. 'r' → logprob: -12.126242637634277
    6. ' and' → logprob: -12.126242637634277
    7. 'b' → logprob: -12.126242637634277
    8. 'rray' → logprob: -13.501242637634277
    9. '<|end|>' → logprob: -13.751242637634277
    10. 'a' → logprob: -13.876242637634277

Token 114: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868785798549652
    2. 'b' → logprob: -1.1368786096572876
    3. ' ' → logprob: -12.136878967285156
    4. ')' → logprob: -14.386878967285156
    5. ' ' → logprob: -14.386878967285156
    6. '  ' → logprob: -15.636878967285156
    7. 's' → logprob: -15.761878967285156
    8. '<|end|>' → logprob: -15.761878967285156
    9. ')b' → logprob: -15.761878967285156
    10. ',' → logprob: -16.136878967285156

Token 115: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006475552450865507
    2. '   ' → logprob: -5.631475448608398
    3. ')
' → logprob: -6.881475448608398
    4. '),' → logprob: -7.506475448608398
    5. '))' → logprob: -7.631475448608398
    6. ').' → logprob: -7.881475448608398
    7. ',' → logprob: -9.131475448608398
    8. ' )' → logprob: -9.131475448608398
    9. 'def' → logprob: -10.256475448608398
    10. '):' → logprob: -10.381475448608398

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2281988561153412
    2. 'st' → logprob: -1.9781988859176636
    3. '
' → logprob: -3.228198766708374
    4. 'for' → logprob: -4.353199005126953
    5. ' for' → logprob: -4.853199005126953
    6. ' st' → logprob: -6.103199005126953
    7. '    
' → logprob: -6.728199005126953
    8. '	st' → logprob: -6.978199005126953
    9. 's' → logprob: -7.603199005126953
    10. '  ' → logprob: -9.103199005126953

Token 117: ' #' (ID: 1069)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.012416759505867958
    2. ' st' → logprob: -4.887416839599609
    3. '   ' → logprob: -5.387416839599609
    4. '
' → logprob: -8.51241683959961
    5. '	st' → logprob: -11.88741683959961
    6. '    
' → logprob: -12.01241683959961
    7. '```' → logprob: -12.26241683959961
    8. 's' → logprob: -12.63741683959961
    9. 'sts' → logprob: -13.88741683959961
    10. ' 
' → logprob: -14.76241683959961

Token 118: ' L' (ID: 451)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.04364723712205887
    2. ' st' → logprob: -3.168647289276123
    3. '   ' → logprob: -8.168646812438965
    4. 'for' → logprob: -8.293646812438965
    5. ' for' → logprob: -9.293646812438965
    6. '	st' → logprob: -12.043646812438965
    7. 's' → logprob: -12.543646812438965
    8. '```' → logprob: -12.918646812438965
    9. 'sts' → logprob: -13.293646812438965
    10. '
' → logprob: -13.418646812438965

Token 119: ''utilisation' (ID: 73991)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013272935524582863
    2. ' for' → logprob: -5.138272762298584
    3. 'e' → logprob: -5.263272762298584
    4. 'ine' → logprob: -7.513272762298584
    5. 'st' → logprob: -7.638272762298584
    6. 'es' → logprob: -7.638272762298584
    7. '   ' → logprob: -8.888273239135742
    8. 'or' → logprob: -9.263273239135742
    9. 'ines' → logprob: -9.388273239135742
    10. '#' → logprob: -9.763273239135742

Token 120: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5551050901412964
    2. ' d' → logprob: -0.9301050901412964
    3. ' of' → logprob: -4.680105209350586
    4. ' st' → logprob: -4.930105209350586
    5. ' des' → logprob: -5.430105209350586
    6. ' for' → logprob: -5.805105209350586
    7. 'de' → logprob: -6.430105209350586
    8. 'd' → logprob: -6.680105209350586
    9. ' =' → logprob: -6.805105209350586
    10. '=' → logprob: -7.180105209350586

Token 121: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2266584187746048
    2. '[list' → logprob: -2.726658344268799
    3. ' [' → logprob: -2.851658344268799
    4. '[n' → logprob: -3.101658344268799
    5. '[a' → logprob: -4.726658344268799
    6. '[m' → logprob: -5.476658344268799
    7. '[input' → logprob: -6.101658344268799
    8. '[l' → logprob: -6.226658344268799
    9. '[int' → logprob: -6.351658344268799
    10. '[s' → logprob: -6.351658344268799

Token 122: '0' (ID: 15)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.039886970072984695
    2. '[' → logprob: -3.664886951446533
    3. '[list' → logprob: -4.789886951446533
    4. 'map' → logprob: -6.539886951446533
    5. ' [' → logprob: -6.664886951446533
    6. ' list' → logprob: -6.914886951446533
    7. '[]' → logprob: -7.289886951446533
    8. '[input' → logprob: -8.289887428283691
    9. '[int' → logprob: -8.789887428283691
    10. '[m' → logprob: -9.539887428283691

Token 123: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7818743586540222
    2. ']*' → logprob: -1.406874418258667
    3. ' for' → logprob: -1.656874418258667
    4. 'for' → logprob: -2.281874418258667
    5. ' ]' → logprob: -6.406874179840088
    6. '][' → logprob: -7.531874179840088
    7. ']*(' → logprob: -8.031874656677246
    8. ']+' → logprob: -8.156874656677246
    9. '
' → logprob: -8.281874656677246
    10. ',' → logprob: -8.281874656677246

Token 124: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.038147639483213425
    2. '2' → logprob: -3.5381476879119873
    3. ' m' → logprob: -5.038147449493408
    4. 'n' → logprob: -6.413147449493408
    5. ' ' → logprob: -9.538147926330566
    6. ' n' → logprob: -10.038147926330566
    7. '3' → logprob: -10.538147926330566
    8. '1' → logprob: -10.663147926330566
    9. '(' → logprob: -10.788147926330566
    10. '(m' → logprob: -11.413147926330566

Token 125: ' permet' (ID: 11798)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18699418008327484
    2. ' for' → logprob: -2.4369940757751465
    3. ')' → logprob: -3.1869940757751465
    4. ' ]' → logprob: -3.9369940757751465
    5. 'for' → logprob: -4.6869940757751465
    6. '[' → logprob: -5.3119940757751465
    7. '[]' → logprob: -6.0619940757751465
    8. ',' → logprob: -6.3119940757751465
    9. '])' → logprob: -6.8119940757751465
    10. ' )' → logprob: -7.1869940757751465

Token 126: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7467023730278015
    2. 'd' → logprob: -0.9967023730278015
    3. 'de' → logprob: -2.4967024326324463
    4. ' de' → logprob: -2.6217024326324463
    5. '   ' → logprob: -7.871702194213867
    6. ' la' → logprob: -8.496702194213867
    7. '#' → logprob: -8.496702194213867
    8. '    ' → logprob: -8.621702194213867
    9. 't' → logprob: -8.996702194213867
    10. 'def' → logprob: -9.121702194213867

Token 127: ' rép' (ID: 64372)
  Prédit: ' créer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' créer' → logprob: -0.4418690800666809
    2. '[' → logprob: -1.5668690204620361
    3. 'initial' → logprob: -2.816869020462036
    4. 'cr' → logprob: -3.441869020462036
    5. 'create' → logprob: -4.691869258880615
    6. 'st' → logprob: -4.816869258880615
    7. 'cré' → logprob: -4.816869258880615
    8. 'initialize' → logprob: -5.191869258880615
    9. ' crée' → logprob: -5.441869258880615
    10. ' [' → logprob: -5.691869258880615

Token 128: 'éter' (ID: 73737)
  Prédit: 'éter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éter' → logprob: -0.022009292617440224
    2. 'ter' → logprob: -4.647009372711182
    3. 'l' → logprob: -5.647009372711182
    4. 'eter' → logprob: -5.897009372711182
    5. 't' → logprob: -6.522009372711182
    6. 'érer' → logprob: -7.147009372711182
    7. 'arer' → logprob: -7.647009372711182
    8. 'to' → logprob: -8.022008895874023
    9. 'r' → logprob: -8.022008895874023
    10. 'reter' → logprob: -8.022008895874023

Token 129: ' la' (ID: 557)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.6098234057426453
    2. '[' → logprob: -1.10982346534729
    3. 'm' → logprob: -3.10982346534729
    4. ' [' → logprob: -3.85982346534729
    5. '[[' → logprob: -4.234823226928711
    6. 'range' → logprob: -4.359823226928711
    7. '[]' → logprob: -4.609823226928711
    8. '[input' → logprob: -5.109823226928711
    9. '[n' → logprob: -5.484823226928711
    10. 'input' → logprob: -6.109823226928711

Token 130: ' sais' (ID: 30010)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8012995719909668
    2. '[m' → logprob: -1.6762995719909668
    3. '[' → logprob: -2.426299571990967
    4. '2' → logprob: -2.551299571990967
    5. '0' → logprob: -2.926299571990967
    6. 'liste' → logprob: -3.051299571990967
    7. 'list' → logprob: -4.051299571990967
    8. ' m' → logprob: -4.551299571990967
    9. 'lst' → logprob: -4.801299571990967
    10. ' ' → logprob: -4.926299571990967

Token 131: 'ie' (ID: 396)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.8531224727630615
    2. 'rie' → logprob: -1.8531224727630615
    3. 'l' → logprob: -2.2281224727630615
    4. '[' → logprob: -2.2281224727630615
    5. '[m' → logprob: -2.3531224727630615
    6. 'e' → logprob: -2.4781224727630615
    7. 'lie' → logprob: -2.9781224727630615
    8. 'ie' → logprob: -3.3531224727630615
    9. 'lle' → logprob: -3.3531224727630615
    10. 'ne' → logprob: -4.228122711181641

Token 132: ' m' (ID: 284)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.8614480495452881
    2. '[' → logprob: -1.736448049545288
    3. ' [' → logprob: -2.486448049545288
    4. '[]' → logprob: -2.486448049545288
    5. ' m' → logprob: -2.986448049545288
    6. ' for' → logprob: -2.986448049545288
    7. 'm' → logprob: -3.236448049545288
    8. ' de' → logprob: -3.986448049545288
    9. 'for' → logprob: -4.111448287963867
    10. ',' → logprob: -4.986448287963867

Token 133: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.15661582350730896
    2. 'fois' → logprob: -2.406615734100342
    3. '<|end|>' → logprob: -3.781615734100342
    4. ' times' → logprob: -4.781615734100342
    5. 'times' → logprob: -4.781615734100342
    6. ')' → logprob: -5.281615734100342
    7. ']' → logprob: -6.031615734100342
    8. ',' → logprob: -6.031615734100342
    9. '[' → logprob: -7.031615734100342
    10. 'x' → logprob: -7.531615734100342

Token 134: ' à' (ID: 1221)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20840133726596832
    2. ')' → logprob: -2.8334014415740967
    3. ',' → logprob: -3.3334014415740967
    4. 'for' → logprob: -3.5834014415740967
    5. '[' → logprob: -3.8334014415740967
    6. ' for' → logprob: -3.9584014415740967
    7. 'st' → logprob: -5.208401203155518
    8. ' st' → logprob: -5.458401203155518
    9. '
' → logprob: -5.708401203155518
    10. ',
' → logprob: -6.583401203155518

Token 135: ' l' (ID: 305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5351169109344482
    2. 'l' → logprob: -1.4101169109344482
    3. 'st' → logprob: -3.2851169109344482
    4. '[]' → logprob: -3.9101169109344482
    5. ' lire' → logprob: -4.160117149353027
    6. 'initial' → logprob: -4.535117149353027
    7. ' [' → logprob: -4.785117149353027
    8. ' créer' → logprob: -4.910117149353027
    9. 'n' → logprob: -5.035117149353027
    10. 'a' → logprob: -5.535117149353027

Token 136: ''aide' (ID: 75684)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.074763536453247
    2. 'n' → logprob: -2.699763536453247
    3. 'compr' → logprob: -2.699763536453247
    4. '#' → logprob: -3.074763536453247
    5. 'com' → logprob: -3.074763536453247
    6. 'range' → logprob: -3.074763536453247
    7. 'int' → logprob: -3.324763536453247
    8. 'a' → logprob: -3.324763536453247
    9. 'for' → logprob: -3.574763536453247
    10. 'len' → logprob: -3.699763536453247

Token 137: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.28323227167129517
    2. 'd' → logprob: -2.2832322120666504
    3. ' de' → logprob: -2.2832322120666504
    4. 'de' → logprob: -3.5332322120666504
    5. '[' → logprob: -4.53323221206665
    6. ' of' → logprob: -6.65823221206665
    7. 'for' → logprob: -7.78323221206665
    8. ' for' → logprob: -8.283232688903809
    9. 'of' → logprob: -8.533232688903809
    10. 'range' → logprob: -9.408232688903809

Token 138: ''une' (ID: 13337)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3277397155761719
    2. ' [' → logprob: -2.202739715576172
    3. 'range' → logprob: -3.077739715576172
    4. 'une' → logprob: -4.077739715576172
    5. 'e' → logprob: -4.577739715576172
    6. ''une' → logprob: -4.827739715576172
    7. ' une' → logprob: -4.827739715576172
    8. 'l' → logprob: -4.952739715576172
    9. '[input' → logprob: -4.952739715576172
    10. 'a' → logprob: -4.952739715576172

Token 139: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15020723640918732
    2. 'list' → logprob: -2.525207281112671
    3. ' for' → logprob: -3.900207281112671
    4. '[' → logprob: -4.025207042694092
    5. ' list' → logprob: -5.400207042694092
    6. ' comprehension' → logprob: -5.650207042694092
    7. 'liste' → logprob: -5.900207042694092
    8. ' compréhension' → logprob: -6.025207042694092
    9. 'range' → logprob: -6.150207042694092
    10. ' liste' → logprob: -6.650207042694092

Token 140: ' fact' (ID: 2840)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5159820318222046
    2. '[' → logprob: -1.7659820318222046
    3. 'st' → logprob: -2.640982151031494
    4. ' for' → logprob: -2.640982151031494
    5. ' comprehension' → logprob: -3.890982151031494
    6. ' =' → logprob: -4.390982151031494
    7. '[:]' → logprob: -4.390982151031494
    8. 's' → logprob: -4.515982151031494
    9. '[]' → logprob: -5.640982151031494
    10. '=[' → logprob: -6.015982151031494

Token 141: 'ice' (ID: 603)
  Prédit: 'ory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ory' → logprob: -0.8726184964179993
    2. '[' → logprob: -1.8726184368133545
    3. 'orie' → logprob: -1.8726184368133545
    4. '[]' → logprob: -2.4976184368133545
    5. 'eur' → logprob: -3.1226184368133545
    6. 'ored' → logprob: -3.3726184368133545
    7. 'urée' → logprob: -3.9976184368133545
    8. 'ori' → logprob: -4.122618675231934
    9. 'oria' → logprob: -4.497618675231934
    10. 'or' → logprob: -4.747618675231934

Token 142: ' de' (ID: 334)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.27422523498535156
    2. 'for' → logprob: -1.8992252349853516
    3. ' for' → logprob: -3.3992252349853516
    4. 's' → logprob: -3.7742252349853516
    5. '
' → logprob: -4.774225234985352
    6. '   ' → logprob: -5.024225234985352
    7. ' st' → logprob: -5.399225234985352
    8. '[' → logprob: -5.649225234985352
    9. ')' → logprob: -5.774225234985352
    10. ']' → logprob: -6.399225234985352

Token 143: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1654062122106552
    2. 'range' → logprob: -2.6654062271118164
    3. '_' → logprob: -3.6654062271118164
    4. 'm' → logprob: -3.6654062271118164
    5. '0' → logprob: -4.540406227111816
    6. 'None' → logprob: -5.665406227111816
    7. ' [' → logprob: -5.790406227111816
    8. ' range' → logprob: -5.790406227111816
    9. ' ' → logprob: -6.290406227111816
    10. '1' → logprob: -6.915406227111816

Token 144: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.32849353551864624
    2. '2' → logprob: -1.578493595123291
    3. '1' → logprob: -2.953493595123291
    4. '0' → logprob: -4.078493595123291
    5. ' m' → logprob: -5.578493595123291
    6. ' ' → logprob: -7.328493595123291
    7. '   ' → logprob: -9.578493118286133
    8. 'n' → logprob: -10.453493118286133
    9. '[m' → logprob: -11.015993118286133
    10. '  ' → logprob: -11.265993118286133

Token 145: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8412244319915771
    2. 'for' → logprob: -1.3412244319915771
    3. ']' → logprob: -1.4662244319915771
    4. ' for' → logprob: -3.091224431991577
    5. '
' → logprob: -4.591224670410156
    6. '[' → logprob: -5.091224670410156
    7. ',' → logprob: -5.716224670410156
    8. '])' → logprob: -5.966224670410156
    9. ')
' → logprob: -6.091224670410156
    10. ',
' → logprob: -6.591224670410156

Token 146: '   ' (ID: 271)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5202777981758118
    2. '   ' → logprob: -1.895277738571167
    3. ' for' → logprob: -2.520277738571167
    4. 'for' → logprob: -2.645277738571167
    5. ' st' → logprob: -2.895277738571167
    6. '
' → logprob: -3.645277738571167
    7. '[' → logprob: -4.770277976989746
    8. '[
' → logprob: -6.020277976989746
    9. 's' → logprob: -6.145277976989746
    10. '    
' → logprob: -6.145277976989746

Token 147: ' st' (ID: 420)
  Prédit: ' st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' st' → logprob: -0.5668950080871582
    2. 'st' (adapté à ' st') → logprob: -0.9418950080871582
    3. ' for' → logprob: -4.316895008087158
    4. '[' → logprob: -4.441895008087158
    5. 'for' → logprob: -4.941895008087158
    6. '   ' → logprob: -5.941895008087158
    7. ' [' → logprob: -6.441895008087158
    8. 'edges' → logprob: -6.441895008087158
    9. ' edges' → logprob: -6.691895008087158
    10. 's' → logprob: -6.691895008087158

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4301292896270752
    2. ' =' → logprob: -1.0551292896270752
    3. '=[]' → logprob: -6.680129051208496
    4. '=[' → logprob: -9.305129051208496
    5. '=[]
' → logprob: -9.930129051208496
    6. '=[[' → logprob: -11.430129051208496
    7. '[]' → logprob: -11.805129051208496
    8. '[' → logprob: -12.680129051208496
    9. '=[]
' → logprob: -13.055129051208496
    10. ' =[' → logprob: -13.430129051208496

Token 149: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17848891019821167
    2. '[list' → logprob: -1.9284889698028564
    3. ' [' → logprob: -5.178488731384277
    4. '[input' → logprob: -5.428488731384277
    5. '[a' → logprob: -5.678488731384277
    6. '[int' → logprob: -6.053488731384277
    7. '[array' → logprob: -6.553488731384277
    8. '[List' → logprob: -8.928488731384277
    9. '[[' → logprob: -9.428488731384277
    10. '[start' → logprob: -9.553488731384277

Token 150: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0005790081340819597
    2. '[list' → logprob: -7.875578880310059
    3. ' list' → logprob: -8.750578880310059
    4. '[' → logprob: -10.750578880310059
    5. 'tuple' → logprob: -11.625578880310059
    6. 'map' → logprob: -12.375578880310059
    7. '(list' → logprob: -12.875578880310059
    8. '[int' → logprob: -13.750578880310059
    9. '[]' → logprob: -14.375578880310059
    10. '=list' → logprob: -15.000578880310059

Token 151: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.2576454335358e-05
    2. 'map' → logprob: -9.750092506408691
    3. '(' → logprob: -10.375092506408691
    4. '(int' → logprob: -13.750092506408691
    5. '()' → logprob: -14.125092506408691
    6. '(
' → logprob: -14.875092506408691
    7. '	map' → logprob: -15.250092506408691
    8. ']' → logprob: -15.500092506408691
    9. ' map' → logprob: -15.625092506408691
    10. '```' → logprob: -16.375093460083008

Token 152: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004878723411820829
    2. 'int' → logprob: -8.00048828125
    3. '(' → logprob: -9.25048828125
    4. ']int' → logprob: -10.87548828125
    5. '(lambda' → logprob: -11.25048828125
    6. '[int' → logprob: -11.75048828125
    7. '<int' → logprob: -11.75048828125
    8. '(
' → logprob: -12.62548828125
    9. ')' → logprob: -13.25048828125
    10. '<|end|>' → logprob: -13.75048828125

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011072466149926186
    2. ',input' → logprob: -4.511072635650635
    3. 'input' → logprob: -11.386072158813477
    4. '(input' → logprob: -11.761072158813477
    5. ' ,' → logprob: -12.636072158813477
    6. '(),' → logprob: -13.636072158813477
    7. '```' → logprob: -15.011072158813477
    8. ',
' → logprob: -15.261072158813477
    9. '   ' → logprob: -16.136072158813477
    10. '(' → logprob: -16.136072158813477

Token 154: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021152347326279
    2. ' input' → logprob: -2.3502116203308105
    3. ')' → logprob: -13.475211143493652
    4. '(input' → logprob: -13.475211143493652
    5. '	input' → logprob: -14.725211143493652
    6. ',input' → logprob: -14.850211143493652
    7. '   ' → logprob: -15.100211143493652
    8. ' ' → logprob: -15.225211143493652
    9. '=input' → logprob: -15.350211143493652
    10. '<input' → logprob: -15.600211143493652

Token 155: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4259644558478612e-05
    2. '()' → logprob: -11.375014305114746
    3. ' ().' → logprob: -13.750014305114746
    4. ')' → logprob: -14.500014305114746
    5. '()
' → logprob: -14.625014305114746
    6. '
' → logprob: -14.875014305114746
    7. '   ' → logprob: -16.75001335144043
    8. '))' → logprob: -16.75001335144043
    9. ').' → logprob: -17.00001335144043
    10. '.' → logprob: -17.25001335144043

Token 156: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.60414821645827e-06
    2. ' split' → logprob: -12.750004768371582
    3. 'strip' → logprob: -13.375004768371582
    4. 'rstrip' → logprob: -17.125003814697266
    5. '(split' → logprob: -17.500003814697266
    6. ')' → logprob: -17.750003814697266
    7. '.split' → logprob: -18.500003814697266
    8. 'plit' → logprob: -18.500003814697266
    9. ' ' → logprob: -19.500003814697266
    10. '```' → logprob: -19.875003814697266

Token 157: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008833196945488453
    2. '))' → logprob: -4.883833408355713
    3. '()' → logprob: -7.133833408355713
    4. '()))
' → logprob: -7.883833408355713
    5. '())' → logprob: -11.258832931518555
    6. '()
' → logprob: -11.633832931518555
    7. '())))' → logprob: -12.008832931518555
    8. '())).' → logprob: -12.133832931518555
    9. '(' → logprob: -12.633832931518555
    10. '()));' → logprob: -12.758832931518555

Token 158: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.695910632610321
    2. 'for' → logprob: -0.695910632610321
    3. ')' → logprob: -6.445910453796387
    4. '   ' → logprob: -7.320910453796387
    5. '()' → logprob: -7.945910453796387
    6. '	for' → logprob: -9.820910453796387
    7. ' ' → logprob: -9.945910453796387
    8. ']' → logprob: -11.070910453796387
    9. '    ' → logprob: -11.695910453796387
    10. '  ' → logprob: -11.820910453796387

Token 159: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6492611765861511
    2. ' range' → logprob: -1.024261236190796
    3. ' _' → logprob: -2.274261236190796
    4. 'range' → logprob: -4.399260997772217
    5. '_range' → logprob: -5.899260997772217
    6. ' in' → logprob: -8.524261474609375
    7. ' ' → logprob: -8.649261474609375
    8. ' i' → logprob: -8.774261474609375
    9. 'm' → logprob: -10.524261474609375
    10. '_m' → logprob: -11.149261474609375

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06142524629831314
    2. 'range' → logprob: -3.43642520904541
    3. 'in' → logprob: -3.93642520904541
    4. ' range' → logprob: -5.06142520904541
    5. 'm' → logprob: -7.06142520904541
    6. ' ' → logprob: -7.43642520904541
    7. ' m' → logprob: -10.06142520904541
    8. '(' → logprob: -11.18642520904541
    9. '  ' → logprob: -11.18642520904541
    10. '(range' → logprob: -12.06142520904541

Token 161: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002478508511558175
    2. ' range' → logprob: -6.00247859954834
    3. 'm' → logprob: -13.00247859954834
    4. '(range' → logprob: -14.62747859954834
    5. '	range' → logprob: -16.877477645874023
    6. '(' → logprob: -18.502477645874023
    7. ' xrange' → logprob: -18.877477645874023
    8. 'x' → logprob: -19.502477645874023
    9. 'rang' → logprob: -19.752477645874023
    10. '.range' → logprob: -20.127477645874023

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.375041007995605
    4. '
' → logprob: -15.375041007995605
    5. 'range' → logprob: -16.37504005432129
    6. '  ' → logprob: -17.25004005432129
    7. '    ' → logprob: -17.75004005432129
    8. '(' → logprob: -17.87504005432129
    9. ''' → logprob: -18.00004005432129
    10. 'None' → logprob: -18.50004005432129

Token 163: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.018151583150029182
    2. ']' → logprob: -4.018151760101318
    3. '*m' → logprob: -13.76815128326416
    4. ']+' → logprob: -15.64315128326416
    5. ' ]' → logprob: -15.64315128326416
    6. ']*(' → logprob: -15.76815128326416
    7. '*' → logprob: -16.143152236938477
    8. 'm' → logprob: -17.393152236938477
    9. 'for' → logprob: -18.268152236938477
    10. ']int' → logprob: -18.643152236938477

Token 164: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.4391956685576588e-05
    2. ' m' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.125024795532227
    4. '	m' → logprob: -19.375024795532227
    5. ' ' → logprob: -19.875024795532227
    6. 'м' → logprob: -20.125024795532227
    7. ')m' → logprob: -20.375024795532227
    8. '
' → logprob: -20.500024795532227
    9. '(m' → logprob: -20.500024795532227
    10. '  ' → logprob: -21.000024795532227

Token 165: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03806937485933304
    2. ')]' → logprob: -3.288069486618042
    3. ')' → logprob: -11.163069725036621
    4. ' ]' → logprob: -11.913069725036621
    5. '])' → logprob: -12.163069725036621
    6. '()]' → logprob: -14.038069725036621
    7. ']
' → logprob: -14.538069725036621
    8. ']]' → logprob: -15.913069725036621
    9. '}]' → logprob: -16.413068771362305
    10. '])]' → logprob: -16.413068771362305

Token 166: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42558836936950684
    2. '
' → logprob: -1.3005883693695068
    3. '    
' → logprob: -2.925588369369507
    4. '<|end|>' → logprob: -3.925588369369507
    5. ')' → logprob: -7.925588607788086
    6. '#' → logprob: -9.175588607788086
    7. '  
' → logprob: -9.300588607788086
    8. '<|end|>' → logprob: -10.175588607788086
    9. '```' → logprob: -10.300588607788086
    10. 'n' → logprob: -10.425588607788086

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0339500717818737
    2. '    
' → logprob: -3.658950090408325
    3. '#' → logprob: -5.783949851989746
    4. 'for' → logprob: -6.533949851989746
    5. '
' → logprob: -7.283949851989746
    6. 'graph' → logprob: -7.283949851989746
    7. 'print' → logprob: -7.408949851989746
    8. '<|end|>' → logprob: -8.908949851989746
    9. ')' → logprob: -9.033949851989746
    10. ' for' → logprob: -9.283949851989746

Token 168: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.06465362012386322
    2. 'for' → logprob: -3.6896536350250244
    3. 'graph' → logprob: -4.189653396606445
    4. '   ' → logprob: -4.939653396606445
    5. 'result' → logprob: -5.189653396606445
    6. 'print' → logprob: -5.439653396606445
    7. 'adj' → logprob: -6.939653396606445
    8. 'edges' → logprob: -7.064653396606445
    9. 'visited' → logprob: -7.314653396606445
    10. 'return' → logprob: -7.939653396606445

Token 169: ' Cré' (ID: 109203)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1321452111005783
    2. 'for' → logprob: -2.8821451663970947
    3. 'result' → logprob: -3.3821451663970947
    4. 'print' → logprob: -4.632145404815674
    5. 'adj' → logprob: -4.882145404815674
    6. 'graph' → logprob: -5.632145404815674
    7. 'visited' → logprob: -6.007145404815674
    8. 'res' → logprob: -6.507145404815674
    9. 'rés' → logprob: -7.132145404815674
    10. 'comp' → logprob: -7.257145404815674

Token 170: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.08050595968961716
    2. '#' → logprob: -2.830505847930908
    3. 'er' → logprob: -5.205505847930908
    4. 'ption' → logprob: -5.830505847930908
    5. 'tion' → logprob: -5.830505847930908
    6. 'mentation' → logprob: -6.205505847930908
    7. 'd' → logprob: -7.580505847930908
    8. 'ment' → logprob: -7.830505847930908
    9. 'vation' → logprob: -7.830505847930908
    10. 'atement' → logprob: -8.205506324768066

Token 171: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14291450381278992
    2. 'd' → logprob: -2.0179145336151123
    3. '#' → logprob: -9.392914772033691
    4. ' de' → logprob: -10.017914772033691
    5. ' of' → logprob: -10.517914772033691
    6. '   ' → logprob: -10.642914772033691
    7. ' du' → logprob: -11.142914772033691
    8. 'de' → logprob: -11.767914772033691
    9. 'du' → logprob: -12.142914772033691
    10. ' des' → logprob: -12.517914772033691

Token 172: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.09653478860855103
    2. ''une' → logprob: -2.5965347290039062
    3. 'a' → logprob: -5.221534729003906
    4. '[]' → logprob: -5.721534729003906
    5. ' un' → logprob: -6.096534729003906
    6. ''' → logprob: -6.096534729003906
    7. '[' → logprob: -7.096534729003906
    8. 'une' → logprob: -7.596534729003906
    9. 'un' → logprob: -7.596534729003906
    10. 'e' → logprob: -7.596534729003906

Token 173: ' liste' (ID: 31719)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0533490180969238
    2. 'graph' → logprob: -1.4283490180969238
    3. 'default' → logprob: -1.8033490180969238
    4. 'dict' → logprob: -2.178349018096924
    5. 'adj' → logprob: -2.928349018096924
    6. 'liste' → logprob: -3.303349018096924
    7. 'gr' → logprob: -4.303349018096924
    8. 'list' → logprob: -4.928349018096924
    9. 'dictionary' → logprob: -5.303349018096924
    10. '#' → logprob: -5.428349018096924

Token 174: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4856383204460144
    2. 'adj' → logprob: -1.8606383800506592
    3. 'd' → logprob: -2.985638380050659
    4. ' de' → logprob: -3.235638380050659
    5. ' des' → logprob: -3.235638380050659
    6. ' adj' → logprob: -3.360638380050659
    7. '[]' → logprob: -3.860638380050659
    8. ' adjacency' → logprob: -4.23563814163208
    9. 'de' → logprob: -4.61063814163208
    10. 'des' → logprob: -5.61063814163208

Token 175: ' n' (ID: 297)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.318292260169983
    2. 'list' → logprob: -1.443292260169983
    3. 'bool' → logprob: -2.3182921409606934
    4. 'n' → logprob: -2.4432921409606934
    5. 'sets' → logprob: -2.5682921409606934
    6. 'liste' → logprob: -2.8182921409606934
    7. 'm' → logprob: -2.9432921409606934
    8. 'adj' → logprob: -3.3182921409606934
    9. '0' → logprob: -3.6932921409606934
    10. 'lists' → logprob: -4.193292140960693

Token 176: ' listes' (ID: 179198)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2881031036376953
    2. '[' → logprob: -1.4131031036376953
    3. '0' → logprob: -2.0381031036376953
    4. ' []' → logprob: -2.4131031036376953
    5. ' listes' → logprob: -2.5381031036376953
    6. ' lists' → logprob: -3.4131031036376953
    7. '+' → logprob: -3.6631031036376953
    8. ' éléments' → logprob: -4.038103103637695
    9. '_' → logprob: -4.288103103637695
    10. ' zeros' → logprob: -4.413103103637695

Token 177: ' v' (ID: 323)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.49198588728904724
    2. 'adj' → logprob: -1.1169859170913696
    3. 'v' → logprob: -3.49198579788208
    4. ',' → logprob: -4.49198579788208
    5. '[]' → logprob: -4.86698579788208
    6. ' vide' → logprob: -5.99198579788208
    7. 'vid' → logprob: -5.99198579788208
    8. ' adj' → logprob: -6.36698579788208
    9. '[' → logprob: -7.24198579788208
    10. 'd' → logprob: -7.61698579788208

Token 178: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.0017985886661335826
    2. 'ide' → logprob: -6.751798629760742
    3. 'id' → logprob: -8.376798629760742
    4. 'al' → logprob: -9.376798629760742
    5. 'a' → logprob: -9.751798629760742
    6. 'i' → logprob: -9.876798629760742
    7. '```' → logprob: -10.001798629760742
    8. 'ïdes' → logprob: -10.001798629760742
    9. '空' → logprob: -11.626798629760742
    10. '[' → logprob: -11.626798629760742

Token 179: ' pour' (ID: 1930)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.547512948513031
    2. 'graph' → logprob: -1.0475130081176758
    3. ',' → logprob: -3.797513008117676
    4. ' graph' → logprob: -3.797513008117676
    5. ' adj' → logprob: -5.047513008117676
    6. ' adjacency' → logprob: -5.297513008117676
    7. '   ' → logprob: -6.172513008117676
    8. 'neighbors' → logprob: -6.297513008117676
    9. '_graph' → logprob: -6.547513008117676
    10. '=' → logprob: -6.672513008117676

Token 180: ' représ' (ID: 31534)
  Prédit: ' représ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représ' → logprob: -0.40314415097236633
    2. 're' → logprob: -1.403144121170044
    3. ' stock' → logprob: -3.278144121170044
    4. 'repr' → logprob: -4.028144359588623
    5. 'represent' → logprob: -4.153144359588623
    6. 'stock' → logprob: -5.653144359588623
    7. '_re' → logprob: -5.778144359588623
    8. '_' → logprob: -6.153144359588623
    9. ' represent' → logprob: -6.403144359588623
    10. 'rep' → logprob: -7.028144359588623

Token 181: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.00023929782037157565
    2. 'anter' → logprob: -8.875239372253418
    3. 'er' → logprob: -9.750239372253418
    4. 'ent' → logprob: -10.500239372253418
    5. 'ater' → logprob: -11.375239372253418
    6. '#' → logprob: -14.500239372253418
    7. 'entation' → logprob: -15.125239372253418
    8. 'inter' → logprob: -15.500239372253418
    9. 'ENTER' → logprob: -15.875239372253418
    10. '   ' → logprob: -16.0002384185791

Token 182: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4096122086048126
    2. 'le' → logprob: -1.9096121788024902
    3. ' les' → logprob: -2.1596121788024902
    4. ' un' → logprob: -3.0346121788024902
    5. 'les' → logprob: -4.65961217880249
    6. 'l' → logprob: -4.90961217880249
    7. ' l' → logprob: -5.78461217880249
    8. 'adj' → logprob: -6.78461217880249
    9. ' la' → logprob: -7.03461217880249
    10. 'un' → logprob: -7.15961217880249

Token 183: ' arcs' (ID: 150448)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.8577126860618591
    2. ' graph' → logprob: -1.607712745666504
    3. ' relations' → logprob: -2.232712745666504
    4. 'graph' → logprob: -2.482712745666504
    5. ' adj' → logprob: -2.982712745666504
    6. 'adj' → logprob: -3.232712745666504
    7. ' somm' → logprob: -3.482712745666504
    8. ' adjacency' → logprob: -3.607712745666504
    9. ' liens' → logprob: -4.982712745666504
    10. ' voisin' → logprob: -5.232712745666504

Token 184: ' sort' (ID: 4506)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.193161129951477
    2. 'adj' → logprob: -1.193161129951477
    3. ',' → logprob: -2.1931610107421875
    4. ' des' → logprob: -2.8181610107421875
    5. 'd' → logprob: -2.9431610107421875
    6. ' sort' → logprob: -3.5681610107421875
    7. ' adj' → logprob: -4.0681610107421875
    8. ' du' → logprob: -4.0681610107421875
    9. ' de' → logprob: -4.0681610107421875
    10. ' dirig' → logprob: -4.4431610107421875

Token 185: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.003406682051718235
    2. 'antes' → logprob: -5.878406524658203
    3. 'ant' → logprob: -7.503406524658203
    4. 's' → logprob: -10.253406524658203
    5. 'is' → logprob: -11.753406524658203
    6. '[]' → logprob: -13.503406524658203
    7. 'i' → logprob: -14.128406524658203
    8. 'issants' → logprob: -14.128406524658203
    9. ' des' → logprob: -14.378406524658203
    10. '```' → logprob: -14.503406524658203

Token 186: ' de' (ID: 334)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5880243182182312
    2. ' des' → logprob: -1.963024377822876
    3. ' du' → logprob: -2.088024377822876
    4. 'graph' → logprob: -3.338024377822876
    5. 'du' → logprob: -3.463024377822876
    6. ',' → logprob: -3.588024377822876
    7. 'de' → logprob: -3.713024377822876
    8. 'des' → logprob: -4.213024139404297
    9. ' de' → logprob: -4.213024139404297
    10. ' adj' → logprob: -4.588024139404297

Token 187: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.07351069897413254
    2. ' chaque' → logprob: -2.8235106468200684
    3. 'ch' → logprob: -4.823510646820068
    4. 'adj' → logprob: -6.823510646820068
    5. 'each' → logprob: -6.948510646820068
    6. 's' → logprob: -8.323511123657227
    7. ' chacun' → logprob: -8.448511123657227
    8. 'graph' → logprob: -8.823511123657227
    9. ' each' → logprob: -8.948511123657227
    10. '#' → logprob: -9.198511123657227

Token 188: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.5323137640953064
    2. ' noe' → logprob: -1.2823138236999512
    3. 's' → logprob: -2.532313823699951
    4. 'som' → logprob: -3.407313823699951
    5. 'n' → logprob: -4.282313823699951
    6. 'node' → logprob: -5.782313823699951
    7. '```' → logprob: -6.032313823699951
    8. 'no' → logprob: -6.532313823699951
    9. ' somm' → logprob: -7.032313823699951
    10. ' node' → logprob: -7.782313823699951

Token 189: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0634456872940063
    2. 'graph' → logprob: -1.5634456872940063
    3. ',' → logprob: -1.6884456872940063
    4. 'adj' → logprob: -2.188445568084717
    5. ' graph' → logprob: -2.438445568084717
    6. ' adj' → logprob: -3.938445568084717
    7. '.' → logprob: -4.938445568084717
    8. 'out' → logprob: -5.188445568084717
    9. ' ,' → logprob: -5.188445568084717
    10. ':' → logprob: -5.563445568084717

Token 190: 'gr' (ID: 896)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.0628560781478882
    2. 'graph' → logprob: -1.0628560781478882
    3. ')' → logprob: -1.3128560781478882
    4. ' adjacency' → logprob: -4.937856197357178
    5. 'adj' → logprob: -5.062856197357178
    6. 'le' → logprob: -5.312856197357178
    7. ' la' → logprob: -5.687856197357178
    8. ' grap' → logprob: -5.937856197357178
    9. ' )' → logprob: -5.937856197357178
    10. 's' → logprob: -6.687856197357178

Token 191: 'aphe' (ID: 98856)
  Prédit: 'aphe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.203170508146286
    2. 'aph' → logprob: -1.7031705379486084
    3. 'ap' → logprob: -7.203170299530029
    4. 'apho' → logprob: -8.078170776367188
    5. '```' → logprob: -9.203170776367188
    6. ']' → logprob: -9.453170776367188
    7. 'phe' → logprob: -9.578170776367188
    8. '   ' → logprob: -9.578170776367188
    9. '#' → logprob: -9.828170776367188
    10. ')' → logprob: -9.953170776367188

Token 192: ' orient' (ID: 13198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2761089503765106
    2. ').' → logprob: -2.526108980178833
    3. 'orient' → logprob: -2.776108980178833
    4. ' orient' → logprob: -3.526108980178833
    5. 'direct' → logprob: -3.651108980178833
    6. ' dirig' → logprob: -4.276108741760254
    7. 'or' → logprob: -5.151108741760254
    8. '   ' → logprob: -5.401108741760254
    9. 'adj' → logprob: -5.526108741760254
    10. ' directed' → logprob: -5.776108741760254

Token 193: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00014060820103622973
    2. 'ed' → logprob: -9.250140190124512
    3. 'és' → logprob: -10.625140190124512
    4. 'e' → logprob: -11.625140190124512
    5. '```' → logprob: -11.875140190124512
    6. 'ée' → logprob: -13.750140190124512
    7. ')' → logprob: -13.875140190124512
    8. 'è' → logprob: -14.250140190124512
    9. 'É' → logprob: -14.625140190124512
    10. '[' → logprob: -15.125140190124512

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09608190506696701
    2. ').' → logprob: -2.4710819721221924
    3. ' )' → logprob: -5.471081733703613
    4. ')
' → logprob: -6.346081733703613
    5. ',' → logprob: -8.096081733703613
    6. '),' → logprob: -8.471081733703613
    7. '.)' → logprob: -8.971081733703613
    8. 'graph' → logprob: -9.221081733703613
    9. ').
' → logprob: -9.471081733703613
    10. ' ).' → logprob: -9.596081733703613

Token 195: '   ' (ID: 271)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6945664882659912
    2. '   ' → logprob: -1.6945664882659912
    3. 'graph' → logprob: -1.6945664882659912
    4. 'adj' → logprob: -3.194566488265991
    5. 'out' → logprob: -3.569566488265991
    6. ' adj' → logprob: -4.19456672668457
    7. ' out' → logprob: -4.56956672668457
    8. ':' → logprob: -5.19456672668457
    9. 'g' → logprob: -5.31956672668457
    10. 'G' → logprob: -5.31956672668457

Token 196: ' g' (ID: 329)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.11162589490413666
    2. ' graph' → logprob: -2.486625909805298
    3. 'adj' → logprob: -4.236625671386719
    4. 'edges' → logprob: -6.111625671386719
    5. '   ' → logprob: -6.361625671386719
    6. 'g' (adapté à ' g') → logprob: -6.986625671386719
    7. 'out' → logprob: -6.986625671386719
    8. 'gr' → logprob: -7.111625671386719
    9. ' adj' → logprob: -7.986625671386719
    10. ' edges' → logprob: -8.236625671386719

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04903218150138855
    2. '=' → logprob: -3.049032211303711
    3. 'raph' → logprob: -7.799032211303711
    4. '=g' → logprob: -11.174032211303711
    5. '=[]' → logprob: -11.924032211303711
    6. '=[' → logprob: -12.049032211303711
    7. 'g' → logprob: -12.424032211303711
    8. '=[]
' → logprob: -13.549032211303711
    9. ' ' → logprob: -14.299032211303711
    10. ' =[' → logprob: -14.549032211303711

Token 198: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023245712742209435
    2. ' [[]' → logprob: -3.7732458114624023
    3. '[]' → logprob: -15.898245811462402
    4. '[[' → logprob: -16.148244857788086
    5. '   ' → logprob: -17.148244857788086
    6. ' [' → logprob: -17.648244857788086
    7. ' ' → logprob: -17.648244857788086
    8. '[:]' → logprob: -17.773244857788086
    9. '[['' → logprob: -18.648244857788086
    10. '[n' → logprob: -19.148244857788086

Token 199: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759555101394653
    2. 'for' → logprob: -0.8259555101394653
    3. '   ' → logprob: -11.950955390930176
    4. ' ' → logprob: -12.450955390930176
    5. ')' → logprob: -13.200955390930176
    6. '	for' → logprob: -13.200955390930176
    7. 'n' → logprob: -13.575955390930176
    8. ']' → logprob: -14.950955390930176
    9. 'in' → logprob: -16.325956344604492
    10. ' ' → logprob: -16.325956344604492

Token 200: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20521332323551178
    2. ' range' → logprob: -1.9552133083343506
    3. 'range' → logprob: -3.4552133083343506
    4. ' _' → logprob: -4.45521354675293
    5. ' i' → logprob: -7.33021354675293
    6. 'i' → logprob: -9.08021354675293
    7. ' ' → logprob: -11.58021354675293
    8. '(range' → logprob: -11.83021354675293
    9. '_range' → logprob: -12.58021354675293
    10. '_i' → logprob: -13.45521354675293

Token 201: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0041174618527293205
    2. ' range' → logprob: -5.504117488861084
    3. 'in' → logprob: -10.379117012023926
    4. '(range' → logprob: -12.754117012023926
    5. 'ange' → logprob: -12.879117012023926
    6. ' in' → logprob: -13.254117012023926
    7. 'n' → logprob: -14.504117012023926
    8. ' ' → logprob: -16.629117965698242
    9. 'rang' → logprob: -16.754117965698242
    10. 'ran' → logprob: -16.754117965698242

Token 202: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196768581867218
    2. ' range' → logprob: -2.811967611312866
    3. '(range' → logprob: -17.436967849731445
    4. ' ' → logprob: -19.061967849731445
    5. '   ' → logprob: -19.186967849731445
    6. '	range' → logprob: -19.561967849731445
    7. '  ' → logprob: -21.186967849731445
    8. ')' → logprob: -22.311967849731445
    9. 'rang' → logprob: -22.311967849731445
    10. ' ' → logprob: -22.811967849731445

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008858494111336768
    2. ' ' → logprob: -7.375885963439941
    3. 'range' → logprob: -8.500885963439941
    4. ' range' → logprob: -10.375885963439941
    5. '
' → logprob: -11.750885963439941
    6. 'None' → logprob: -12.125885963439941
    7. '   ' → logprob: -12.750885963439941
    8. '_' → logprob: -13.000885963439941
    9. ' None' → logprob: -13.813385963439941
    10. '  ' → logprob: -13.875885963439941

Token 204: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0007123126997612417
    2. ']' → logprob: -7.2507123947143555
    3. ']+' → logprob: -14.375712394714355
    4. '*n' → logprob: -14.500712394714355
    5. ']*(' → logprob: -14.625712394714355
    6. 'n' → logprob: -15.000712394714355
    7. ' ]' → logprob: -15.125712394714355
    8. 'range' → logprob: -16.62571144104004
    9. '   ' → logprob: -16.62571144104004
    10. '(n' → logprob: -17.62571144104004

Token 205: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004306692280806601
    2. ' n' → logprob: -7.750430583953857
    3. '	n' → logprob: -20.000431060791016
    4. '(n' → logprob: -21.125431060791016
    5. '   ' → logprob: -22.875431060791016
    6. ')n' → logprob: -23.625431060791016
    7. ' ' → logprob: -24.250431060791016
    8. '_n' → logprob: -24.625431060791016
    9. ',n' → logprob: -25.000431060791016
    10. '(' → logprob: -25.375431060791016

Token 206: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011801084037870169
    2. ')]' → logprob: -6.751180171966553
    3. ' ]' → logprob: -11.876179695129395
    4. '()]' → logprob: -13.001179695129395
    5. ']]' → logprob: -15.376179695129395
    6. ']
' → logprob: -15.626179695129395
    7. ')' → logprob: -16.00118064880371
    8. '])' → logprob: -16.75118064880371
    9. ']

' → logprob: -17.75118064880371
    10. '   ' → logprob: -18.00118064880371

Token 207: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3297230303287506
    2. '
' → logprob: -1.5797230005264282
    3. '<|end|>' → logprob: -3.2047231197357178
    4. '    
' → logprob: -4.454722881317139
    5. ' for' → logprob: -4.704722881317139
    6. '  
' → logprob: -5.329722881317139
    7. ' 
' → logprob: -6.204722881317139
    8. 'for' → logprob: -6.204722881317139
    9. '  ' → logprob: -6.329722881317139
    10. ' ' → logprob: -6.454722881317139

Token 208: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25782403349876404
    2. ' for' → logprob: -2.007823944091797
    3. '   ' → logprob: -2.382823944091797
    4. '	for' → logprob: -8.632823944091797
    5. '
' → logprob: -8.757823944091797
    6. '<|end|>' → logprob: -8.882823944091797
    7. '    
' → logprob: -9.132823944091797
    8. ' ' → logprob: -10.007823944091797
    9. '  ' → logprob: -10.507823944091797
    10. '  
' → logprob: -11.007823944091797

Token 209: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005577972042374313
    2. ' for' → logprob: -7.500557899475098
    3. '   ' → logprob: -12.375557899475098
    4. '<|end|>' → logprob: -15.000557899475098
    5. '	for' → logprob: -15.750557899475098
    6. ')' → logprob: -17.00055694580078
    7. ' ' → logprob: -17.75055694580078
    8. '    
' → logprob: -18.25055694580078
    9. 'range' → logprob: -18.25055694580078
    10. '
' → logprob: -18.37555694580078

Token 210: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004307884373702109
    2. ' for' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.500431060791016
    4. '#' → logprob: -18.250431060791016
    5. '
' → logprob: -19.750431060791016
    6. 'For' → logprob: -20.250431060791016
    7. '	for' → logprob: -20.375431060791016
    8. 'pour' → logprob: -20.625431060791016
    9. '```' → logprob: -20.750431060791016
    10. 'i' → logprob: -21.125431060791016

Token 211: ' chaque' (ID: 21194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4734169840812683
    2. ' a' → logprob: -1.098417043685913
    3. 's' → logprob: -4.098416805267334
    4. ' s' → logprob: -4.473416805267334
    5. 'i' → logprob: -4.723416805267334
    6. ' i' → logprob: -5.723416805267334
    7. 'u' → logprob: -6.473416805267334
    8. ' u' → logprob: -6.848416805267334
    9. ' edge' → logprob: -7.973416805267334
    10. 'e' → logprob: -9.098417282104492

Token 212: ' couple' (ID: 7167)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06933878362178802
    2. ' a' → logprob: -2.819338798522949
    3. 's' → logprob: -5.194338798522949
    4. ' s' → logprob: -7.069338798522949
    5. 'i' → logprob: -7.819338798522949
    6. '[a' → logprob: -8.69433879852295
    7. ' edge' → logprob: -9.19433879852295
    8. ' i' → logprob: -9.56933879852295
    9. '(a' → logprob: -9.81933879852295
    10. 'edge' → logprob: -9.94433879852295

Token 213: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1305396854877472
    2. ' a' → logprob: -2.130539655685425
    3. 's' → logprob: -6.380539894104004
    4. ' (' → logprob: -7.130539894104004
    5. '(a' → logprob: -7.130539894104004
    6. ' s' → logprob: -9.380539894104004
    7. '(s' → logprob: -9.505539894104004
    8. '[a' → logprob: -9.630539894104004
    9. '   ' → logprob: -10.380539894104004
    10. ',' → logprob: -11.130539894104004

Token 214: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002243631286546588
    2. 's' → logprob: -6.252243518829346
    3. ' a' → logprob: -8.252243995666504
    4. '(a' → logprob: -10.377243995666504
    5. '   ' → logprob: -11.502243995666504
    6. '[a' → logprob: -12.002243995666504
    7. '(s' → logprob: -13.502243995666504
    8. 'i' → logprob: -13.627243995666504
    9. 'u' → logprob: -13.627243995666504
    10. ' s' → logprob: -13.877243995666504

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003650675993412733
    2. ',b' → logprob: -5.628650665283203
    3. ' ,' → logprob: -10.003650665283203
    4. 'b' → logprob: -13.253650665283203
    5. ',_' → logprob: -13.253650665283203
    6. '_,' → logprob: -14.628650665283203
    7. ',
' → logprob: -14.628650665283203
    8. ',s' → logprob: -15.003650665283203
    9. 's' → logprob: -15.503650665283203
    10. 'et' → logprob: -17.128650665283203

Token 216: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023245826363563538
    2. ' b' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.398245811462402
    4. '   ' → logprob: -16.02324676513672
    5. ',b' → logprob: -17.64824676513672
    6. '	b' → logprob: -17.77324676513672
    7. '(b' → logprob: -18.02324676513672
    8. '    ' → logprob: -18.14824676513672
    9. ',' → logprob: -18.14824676513672
    10. '```' → logprob: -18.64824676513672

Token 217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018854460213333368
    2. ',' → logprob: -7.001885414123535
    3. '),' → logprob: -7.751885414123535
    4. 'in' → logprob: -8.251885414123535
    5. ' )' → logprob: -9.251885414123535
    6. ' in' → logprob: -9.376885414123535
    7. ',)' → logprob: -9.626885414123535
    8. 'a' → logprob: -12.001885414123535
    9. 'dans' → logprob: -12.376885414123535
    10. ']' → logprob: -12.626885414123535

Token 218: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6429744362831116
    2. 'in' → logprob: -0.7679744362831116
    3. ',' → logprob: -4.642974376678467
    4. ' dans' → logprob: -8.892974853515625
    5. '   ' → logprob: -9.017974853515625
    6. 'dans' → logprob: -9.142974853515625
    7. ' ' → logprob: -9.392974853515625
    8. 'a' → logprob: -9.642974853515625
    9. '  ' → logprob: -10.017974853515625
    10. ' ,' → logprob: -10.392974853515625

Token 219: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.002806894714012742
    2. ' st' → logprob: -5.877806663513184
    3. '   ' → logprob: -13.752806663513184
    4. ' ' → logprob: -15.252806663513184
    5. '	st' → logprob: -15.502806663513184
    6. '(st' → logprob: -15.752806663513184
    7. 's' → logprob: -16.0028076171875
    8. '    ' → logprob: -16.7528076171875
    9. '[' → logprob: -17.3778076171875
    10. '  ' → logprob: -17.5028076171875

Token 220: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004988207365386188
    2. ':
' → logprob: -7.7504987716674805
    3. ',' → logprob: -10.25049877166748
    4. ' :' → logprob: -10.50049877166748
    5. '   ' → logprob: -13.12549877166748
    6. '):' → logprob: -13.37549877166748
    7. ',:' → logprob: -14.75049877166748
    8. ':**' → logprob: -15.00049877166748
    9. ']:' → logprob: -16.125499725341797
    10. ' :
' → logprob: -16.125499725341797

Token 221: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9117406010627747
    2. '   ' → logprob: -1.1617405414581299
    3. 'for' → logprob: -1.2867405414581299
    4. 'a' → logprob: -5.786740779876709
    5. ':' → logprob: -6.411740779876709
    6. ' a' → logprob: -6.911740779876709
    7. '       ' → logprob: -7.036740779876709
    8. '    ' → logprob: -7.161740779876709
    9. '    
' → logprob: -7.411740779876709
    10. '
' → logprob: -8.53674030303955

Token 222: ' ajoute' (ID: 91611)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01135372556746006
    2. 'for' → logprob: -5.011353492736816
    3. ' :' → logprob: -5.761353492736816
    4. ':
' → logprob: -7.386353492736816
    5. '   ' → logprob: -7.761353492736816
    6. ' for' → logprob: -8.386353492736816
    7. 'in' → logprob: -9.886353492736816
    8. 'a' → logprob: -10.511353492736816
    9. '):' → logprob: -10.761353492736816
    10. '    ' → logprob: -11.261353492736816

Token 223: ' b' (ID: 287)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2088843584060669
    2. ' b' → logprob: -2.4588842391967773
    3. 'b' → logprob: -3.3338842391967773
    4. '(a' → logprob: -3.5838842391967773
    5. ' a' → logprob: -4.208884239196777
    6. 'a' → logprob: -4.708884239196777
    7. ' g' → logprob: -5.208884239196777
    8. '(b' → logprob: -5.333884239196777
    9. 'g' → logprob: -5.708884239196777
    10. '   ' → logprob: -6.958884239196777

Token 224: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05145169049501419
    2. ' à' → logprob: -4.051451683044434
    3. ' to' → logprob: -4.301451683044434
    4. ',' → logprob: -5.426451683044434
    5. 'to' → logprob: -5.551451683044434
    6. ' )' → logprob: -5.801451683044434
    7. ']' → logprob: -6.176451683044434
    8. '<|end|>' → logprob: -6.676451683044434
    9. ' au' → logprob: -7.426451683044434
    10. ' a' → logprob: -7.551451683044434

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -16.25037956237793
    4. '```' → logprob: -16.50037956237793
    5. ',' → logprob: -17.50037956237793
    6. ')' → logprob: -18.12537956237793
    7. 'to' → logprob: -18.62537956237793
    8. ' a' → logprob: -18.75037956237793
    9. ' [' → logprob: -18.75037956237793
    10. '[' → logprob: -18.87537956237793

Token 226: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7110707759857178
    2. ')' → logprob: -1.0860707759857178
    3. ' à' → logprob: -2.0860707759857178
    4. 'to' → logprob: -4.586071014404297
    5. ' to' → logprob: -4.836071014404297
    6. ']' → logprob: -5.211071014404297
    7. ' ,' → logprob: -5.336071014404297
    8. 'à' → logprob: -5.336071014404297
    9. ' dans' → logprob: -6.086071014404297
    10. ' ' → logprob: -6.336071014404297

Token 227: ' la' (ID: 557)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3869461715221405
    2. ' g' → logprob: -1.136946201324463
    3. ' ' → logprob: -10.136945724487305
    4. ' la' → logprob: -10.886945724487305
    5. ' ' → logprob: -12.261945724487305
    6. 'l' → logprob: -12.511945724487305
    7. ' the' → logprob: -12.886945724487305
    8. 'the' → logprob: -14.011945724487305
    9. '	g' → logprob: -14.011945724487305
    10. ' l' → logprob: -14.136945724487305

Token 228: ' liste' (ID: 31719)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.018677061423659325
    2. ' g' → logprob: -4.018677234649658
    3. ' range' → logprob: -8.1436767578125
    4. 'range' → logprob: -8.7686767578125
    5. 'adj' → logprob: -11.2686767578125
    6. ' liste' → logprob: -11.3936767578125
    7. ' adjacency' → logprob: -11.3936767578125
    8. 's' → logprob: -11.5186767578125
    9. ' ' → logprob: -12.2686767578125
    10. 'liste' → logprob: -12.8936767578125

Token 229: ' des' (ID: 731)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.5735336542129517
    2. 'g' → logprob: -1.1985336542129517
    3. '[g' → logprob: -2.198533535003662
    4. ' de' → logprob: -4.823533535003662
    5. '[a' → logprob: -5.573533535003662
    6. '   ' → logprob: -5.573533535003662
    7. 'a' → logprob: -5.948533535003662
    8. ' correspond' → logprob: -6.323533535003662
    9. '[' → logprob: -6.573533535003662
    10. 's' → logprob: -7.823533535003662

Token 230: ' voisins' (ID: 166720)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.22716888785362244
    2. ' voisins' → logprob: -2.3521687984466553
    3. 'adj' → logprob: -2.8521687984466553
    4. ' g' → logprob: -3.6021687984466553
    5. 'succ' → logprob: -4.352169036865234
    6. ' successors' → logprob: -5.977169036865234
    7. ' succ' → logprob: -6.102169036865234
    8. 'sort' → logprob: -6.852169036865234
    9. 'neighbors' → logprob: -7.102169036865234
    10. 'vo' → logprob: -7.477169036865234

Token 231: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2068265825510025
    2. '[a' → logprob: -2.331826686859131
    3. ' a' → logprob: -3.706826686859131
    4. 'a' → logprob: -3.706826686859131
    5. '   ' → logprob: -4.706826686859131
    6. '[' → logprob: -4.956826686859131
    7. 'de' → logprob: -5.331826686859131
    8. ',' → logprob: -5.456826686859131
    9. ' of' → logprob: -5.581826686859131
    10. 's' → logprob: -6.081826686859131

Token 232: ' sommet' (ID: 130502)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018324127420783043
    2. ' a' → logprob: -4.01832389831543
    3. 'g' → logprob: -9.01832389831543
    4. '[a' → logprob: -10.89332389831543
    5. ' g' → logprob: -11.51832389831543
    6. ' ' → logprob: -12.01832389831543
    7. '   ' → logprob: -12.26832389831543
    8. '(a' → logprob: -12.89332389831543
    9. ' (' → logprob: -13.14332389831543
    10. '    ' → logprob: -13.26832389831543

Token 233: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3485685884952545
    2. ' a' → logprob: -1.2235685586929321
    3. '[a' → logprob: -9.4735689163208
    4. '   ' → logprob: -10.9735689163208
    5. '	a' → logprob: -11.4735689163208
    6. '(a' → logprob: -12.3485689163208
    7. '[' → logprob: -12.5985689163208
    8. 's' → logprob: -12.7235689163208
    9. ' (' → logprob: -13.0985689163208
    10. '    ' → logprob: -13.7235689163208

Token 234: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21312980353832245
    2. ' -' → logprob: -1.8381297588348389
    3. '   ' → logprob: -3.463129758834839
    4. '[' → logprob: -7.713129997253418
    5. '[i' → logprob: -7.963129997253418
    6. ' ' → logprob: -8.338129997253418
    7. '  ' → logprob: -9.588129997253418
    8. ' for' → logprob: -9.838129997253418
    9. ',' → logprob: -9.963129997253418
    10. ']' → logprob: -9.963129997253418

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003034074034076184
    2. ' ' → logprob: -8.125303268432617
    3. '   ' → logprob: -13.250303268432617
    4. 'a' → logprob: -13.250303268432617
    5. ',' → logprob: -13.875303268432617
    6. '```' → logprob: -13.875303268432617
    7. 's' → logprob: -15.000303268432617
    8. '-' → logprob: -15.625303268432617
    9. ' g' → logprob: -15.750303268432617
    10. '0' → logprob: -15.875303268432617

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02086883969604969
    2. ':' → logprob: -4.52086877822876
    3. ' for' → logprob: -5.27086877822876
    4. ',' → logprob: -6.64586877822876
    5. 'for' → logprob: -6.64586877822876
    6. '    
' → logprob: -6.77086877822876
    7. ':
' → logprob: -8.145869255065918
    8. '.' → logprob: -8.395869255065918
    9. '  ' → logprob: -9.520869255065918
    10. ' :' → logprob: -9.520869255065918

Token 237: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45751428604125977
    2. '   ' → logprob: -1.0825142860412598
    3. ':
' → logprob: -4.45751428604126
    4. ' for' → logprob: -4.83251428604126
    5. 'for' → logprob: -4.83251428604126
    6. ',' → logprob: -8.207513809204102
    7. ' :' → logprob: -8.582513809204102
    8. '    
' → logprob: -8.957513809204102
    9. ' :
' → logprob: -9.707513809204102
    10. '```' → logprob: -9.707513809204102

Token 238: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2159537971019745
    2. ' for' → logprob: -1.9659538269042969
    3. '   ' → logprob: -2.965953826904297
    4. ':' → logprob: -6.465953826904297
    5. '
' → logprob: -7.465953826904297
    6. ':
' → logprob: -7.840953826904297
    7. '    
' → logprob: -9.215953826904297
    8. ' 
' → logprob: -11.215953826904297
    9. '	for' → logprob: -11.590953826904297
    10. '  
' → logprob: -11.590953826904297

Token 239: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5010765194892883
    2. ' for' → logprob: -1.0010764598846436
    3. '   ' → logprob: -3.6260764598846436
    4. '	for' → logprob: -11.876076698303223
    5. '
' → logprob: -12.126076698303223
    6. '    
' → logprob: -13.251076698303223
    7. ' ' → logprob: -13.251076698303223
    8. '  ' → logprob: -14.626076698303223
    9. ' ' → logprob: -14.876076698303223
    10. ' pour' → logprob: -15.376076698303223

Token 240: 'indices' (ID: 30992)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9177954792976379
    2. ' for' → logprob: -1.5427954196929932
    3. 'for' → logprob: -1.5427954196929932
    4. ' a' → logprob: -2.292795419692993
    5. ' i' → logprob: -3.792795419692993
    6. ')' → logprob: -3.917795419692993
    7. 'i' → logprob: -4.667795658111572
    8. '   ' → logprob: -4.667795658111572
    9. 'range' → logprob: -6.542795658111572
    10. ' ' → logprob: -6.792795658111572

Token 241: ' ramen' (ID: 90938)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.047638051211833954
    2. ' de' → logprob: -4.922637939453125
    3. ')' → logprob: -5.047637939453125
    4. 'a' → logprob: -5.047637939453125
    5. ' a' → logprob: -5.297637939453125
    6. '0' → logprob: -5.547637939453125
    7. ' )' → logprob: -5.922637939453125
    8. ' ' → logprob: -6.422637939453125
    9. 's' → logprob: -6.422637939453125
    10. '<|end|>' → logprob: -6.922637939453125

Token 242: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.030812209472060204
    2. 'g' → logprob: -4.2808122634887695
    3. 'nés' → logprob: -4.5308122634887695
    4. 'ant' → logprob: -6.4058122634887695
    5. 'agés' → logprob: -6.4058122634887695
    6. 'geant' → logprob: -7.7808122634887695
    7. 'à' → logprob: -8.03081226348877
    8. 't' → logprob: -8.28081226348877
    9. 'dés' → logprob: -8.65581226348877
    10. 'u' → logprob: -8.90581226348877

Token 243: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1341593712568283
    2. 'à' → logprob: -2.1341593265533447
    3. ' ' → logprob: -5.884159564971924
    4. 'au' → logprob: -6.884159564971924
    5. 'de' → logprob: -7.009159564971924
    6. ' au' → logprob: -7.259159564971924
    7. ' de' → logprob: -8.009159088134766
    8. '0' → logprob: -8.259159088134766
    9. '```' → logprob: -8.259159088134766
    10. ''à' → logprob: -8.759159088134766

Token 244: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014594515785574913
    2. 'z' → logprob: -5.264594554901123
    3. ' zéro' → logprob: -5.389594554901123
    4. ' ' → logprob: -5.889594554901123
    5. 'zero' → logprob: -6.764594554901123
    6. '```' → logprob: -8.014594078063965
    7. 'l' → logprob: -8.139594078063965
    8. ' ' → logprob: -9.639594078063965
    9. ' z' → logprob: -10.139594078063965
    10. ' zero' → logprob: -10.264594078063965

Token 245: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1357065886259079
    2. '   ' → logprob: -2.260706663131714
    3. ')
' → logprob: -5.010706424713135
    4. ').' → logprob: -5.010706424713135
    5. '):' → logprob: -5.885706424713135
    6. '):
' → logprob: -6.510706424713135
    7. ' pour' → logprob: -6.510706424713135
    8. ' par' → logprob: -7.135706424713135
    9. ' )' → logprob: -7.760706424713135
    10. ',' → logprob: -7.885706424713135

Token 246: ' l' (ID: 305)
  Prédit: ' correspond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.8928245306015015
    2. 'cor' → logprob: -1.6428245306015015
    3. 'l' → logprob: -2.392824649810791
    4. 'respect' → logprob: -2.517824649810791
    5. 'con' → logprob: -2.642824649810791
    6. 's' → logprob: -3.142824649810791
    7. ' s' → logprob: -3.642824649810791
    8. ' respecter' → logprob: -3.642824649810791
    9. 'adapter' → logprob: -4.642824649810791
    10. ' l' → logprob: -5.267824649810791

Token 247: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4976791739463806
    2. ''' → logprob: -1.2476792335510254
    3. 'e' → logprob: -3.4976792335510254
    4. ''utilisation' → logprob: -3.7476792335510254
    5. ''ad' → logprob: -4.372679233551025
    6. ''utilisateur' → logprob: -4.747679233551025
    7. ''aj' → logprob: -5.622679233551025
    8. ''ex' → logprob: -5.747679233551025
    9. ''ind' → logprob: -5.872679233551025
    10. 'align' → logprob: -5.872679233551025

Token 248: 'index' (ID: 2257)
  Prédit: 'align'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'align' → logprob: -0.7723976373672485
    2. ''' → logprob: -1.2723976373672485
    3. 'util' → logprob: -2.897397518157959
    4. 'index' → logprob: -3.147397518157959
    5. ''utilisation' → logprob: -3.272397518157959
    6. 'usage' → logprob: -4.022397518157959
    7. 'a' → logprob: -4.022397518157959
    8. 'python' → logprob: -4.772397518157959
    9. 'ordinateur' → logprob: -4.772397518157959
    10. ''ad' → logprob: -5.272397518157959

Token 249: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.015293153934180737
    2. 'age' → logprob: -4.640293121337891
    3. 'ing' → logprob: -5.390293121337891
    4. '0' → logprob: -8.14029312133789
    5. ')' → logprob: -8.89029312133789
    6. 'de' → logprob: -9.01529312133789
    7. ' de' → logprob: -9.39029312133789
    8. '   ' → logprob: -9.64029312133789
    9. ' des' → logprob: -10.01529312133789
    10. 'a' → logprob: -10.26529312133789

Token 250: ' Python' (ID: 26534)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23189908266067505
    2. ')' → logprob: -1.8568990230560303
    3. ' en' → logprob: -4.856899261474609
    4. ' Python' → logprob: -4.981899261474609
    5. '0' → logprob: -5.231899261474609
    6. ' python' → logprob: -5.356899261474609
    7. 'des' → logprob: -5.481899261474609
    8. '[' → logprob: -5.606899261474609
    9. ' du' → logprob: -5.731899261474609
    10. ' de' → logprob: -5.856899261474609

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15309695899486542
    2. ')]' → logprob: -2.028096914291382
    3. '):' → logprob: -5.903097152709961
    4. ')
' → logprob: -6.028097152709961
    5. '   ' → logprob: -6.028097152709961
    6. ').' → logprob: -6.653097152709961
    7. ')]
' → logprob: -7.528097152709961
    8. '):
' → logprob: -8.028097152709961
    9. ' )' → logprob: -8.278097152709961
    10. ')])' → logprob: -8.903097152709961

Token 252: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16718974709510803
    2. ' for' → logprob: -1.9171897172927856
    3. '   ' → logprob: -5.042189598083496
    4. '    
' → logprob: -8.667189598083496
    5. '
' → logprob: -8.792189598083496
    6. ' 
' → logprob: -9.917189598083496
    7. '  
' → logprob: -10.167189598083496
    8. ':' → logprob: -11.042189598083496
    9. '```' → logprob: -11.167189598083496
    10. '	for' → logprob: -11.917189598083496

Token 253: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018184944987297058
    2. ' for' → logprob: -4.018185138702393
    3. '   ' → logprob: -10.268184661865234
    4. '
' → logprob: -15.768184661865234
    5. '	for' → logprob: -16.018184661865234
    6. '    
' → logprob: -16.518184661865234
    7. ' 
' → logprob: -18.518184661865234
    8. '```' → logprob: -19.518184661865234
    9. '  
' → logprob: -20.768184661865234
    10. ' ' → logprob: -20.893184661865234

Token 254: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.015100834891200066
    2. ' g' → logprob: -4.640100955963135
    3. '(g' → logprob: -5.390100955963135
    4. ' (' → logprob: -7.765100955963135
    5. 'for' → logprob: -9.265100479125977
    6. '   ' → logprob: -9.515100479125977
    7. '(
' → logprob: -9.765100479125977
    8. '[g' → logprob: -10.015100479125977
    9. ' ' → logprob: -11.390100479125977
    10. 'a' → logprob: -11.890100479125977

Token 255: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.013069993816316128
    2. '[' → logprob: -5.013070106506348
    3. '[s' → logprob: -5.263070106506348
    4. 'a' → logprob: -7.638070106506348
    5. '[u' → logprob: -8.263070106506348
    6. '[x' → logprob: -8.888070106506348
    7. '[i' → logprob: -9.263070106506348
    8. '[int' → logprob: -10.138070106506348
    9. '[_' → logprob: -10.263070106506348
    10. 's' → logprob: -10.763070106506348

Token 256: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.161125048995018
    2. '[' → logprob: -1.9111250638961792
    3. ' -' → logprob: -7.786125183105469
    4. 'a' → logprob: -8.161125183105469
    5. '1' → logprob: -9.286125183105469
    6. '[-' → logprob: -9.411125183105469
    7. '0' → logprob: -11.536125183105469
    8. '[a' → logprob: -13.161125183105469
    9. '   ' → logprob: -13.286125183105469
    10. '```' → logprob: -13.536125183105469

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -17.25
    4. '   ' → logprob: -17.875
    5. '１' → logprob: -18.125
    6. '۱' → logprob: -19.1875
    7. ']' → logprob: -19.3125
    8. '2' → logprob: -19.4375
    9. '-' → logprob: -19.9375
    10. '१' → logprob: -20.125

Token 258: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00011236425780225545
    2. '.append' → logprob: -9.125112533569336
    3. '.' → logprob: -13.875112533569336
    4. ' ].' → logprob: -14.000112533569336
    5. ').' → logprob: -14.125112533569336
    6. ']' → logprob: -14.750112533569336
    7. 'append' → logprob: -15.625112533569336
    8. '.app' → logprob: -16.750112533569336
    9. '}.' → logprob: -16.875112533569336
    10. '   ' → logprob: -17.625112533569336

Token 259: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. ' append' → logprob: -14.250000953674316
    3. '.append' → logprob: -15.875000953674316
    4. 'appen' → logprob: -17.25
    5. 'app' → logprob: -19.625
    6. '_append' → logprob: -19.875
    7. '	append' → logprob: -20.125
    8. 'Append' → logprob: -21.625
    9. 'push' → logprob: -21.75
    10. 'extend' → logprob: -22.0

Token 260: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.45848218582978e-06
    2. 'b' → logprob: -13.50000286102295
    3. ' (' → logprob: -14.12500286102295
    4. '(' → logprob: -15.62500286102295
    5. ' b' → logprob: -16.625001907348633
    6. '(
' → logprob: -18.250001907348633
    7. '((' → logprob: -19.375001907348633
    8. ')b' → logprob: -19.500001907348633
    9. '	b' → logprob: -19.625001907348633
    10. '(B' → logprob: -20.750001907348633

Token 261: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.627176768844947e-05
    2. ' -' → logprob: -9.250096321105957
    3. '1' → logprob: -16.12509536743164
    4. '[' → logprob: -17.12509536743164
    5. ' ' → logprob: -17.62509536743164
    6. '   ' → logprob: -17.75009536743164
    7. ')' → logprob: -17.87509536743164
    8. '<|end|>' → logprob: -18.00009536743164
    9. ']' → logprob: -18.12509536743164
    10. ']-' → logprob: -18.62509536743164

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -15.750004768371582
    4. ')' → logprob: -15.937504768371582
    5. '```' → logprob: -16.062503814697266
    6. ']' → logprob: -16.375003814697266
    7. '2' → logprob: -16.687503814697266
    8. '])' → logprob: -17.250003814697266
    9. '
' → logprob: -17.437503814697266
    10. '<|end|>' → logprob: -17.875003814697266

Token 263: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.337155355140567e-05
    2. ' )' → logprob: -10.500062942504883
    3. 'for' → logprob: -11.250062942504883
    4. ' for' → logprob: -11.250062942504883
    5. '   ' → logprob: -11.750062942504883
    6. ')
' → logprob: -14.000062942504883
    7. ')]' → logprob: -14.875062942504883
    8. ' ' → logprob: -15.125062942504883
    9. '    ' → logprob: -16.250062942504883
    10. ']' → logprob: -16.375062942504883

Token 264: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.062436483800411224
    2. 'for' → logprob: -2.812436580657959
    3. '	for' → logprob: -8.1874361038208
    4. '   ' → logprob: -8.8124361038208
    5. ' ' → logprob: -10.9374361038208
    6. ')' → logprob: -11.5624361038208
    7. ']' → logprob: -11.9374361038208
    8. '    ' → logprob: -12.5624361038208
    9. '
' → logprob: -13.4374361038208
    10. '  ' → logprob: -13.5624361038208

Token 265: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014187601394951344
    2. ' a' → logprob: -4.264187812805176
    3. '_,' → logprob: -11.389187812805176
    4. '(a' → logprob: -12.139187812805176
    5. ' ' → logprob: -13.889187812805176
    6. 's' → logprob: -14.014187812805176
    7. '	a' → logprob: -14.014187812805176
    8. '[a' → logprob: -14.139187812805176
    9. ' st' → logprob: -14.514187812805176
    10. ' _,' → logprob: -14.514187812805176

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029845017939805984
    2. ',b' → logprob: -3.5298449993133545
    3. ',_' → logprob: -9.529845237731934
    4. ' ,' → logprob: -10.904845237731934
    5. 'b' → logprob: -13.154845237731934
    6. ',
' → logprob: -14.779845237731934
    7. ',g' → logprob: -15.779845237731934
    8. '_,' → logprob: -15.779845237731934
    9. ',n' → logprob: -15.904845237731934
    10. ',s' → logprob: -15.904845237731934

Token 267: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.27975082397461
    4. 'st' → logprob: -19.02975082397461
    5. ' ' → logprob: -19.40475082397461
    6. '(b' → logprob: -19.65475082397461
    7. '	b' → logprob: -19.90475082397461
    8. '  ' → logprob: -20.15475082397461
    9. '   ' → logprob: -20.40475082397461
    10. ')b' → logprob: -20.65475082397461

Token 268: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759634971618652
    2. ' in' → logprob: -0.8259634971618652
    3. ']' → logprob: -11.075963973999023
    4. ')' → logprob: -12.700963973999023
    5. ' ' → logprob: -13.575963973999023
    6. 's' → logprob: -13.700963973999023
    7. '	in' → logprob: -14.075963973999023
    8. ',' → logprob: -14.325963973999023
    9. 'en' → logprob: -15.325963973999023
    10. 'g' → logprob: -15.575963973999023

Token 269: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.004079112783074379
    2. ' st' → logprob: -5.504079341888428
    3. '(st' → logprob: -14.87907886505127
    4. ']' → logprob: -15.87907886505127
    5. 's' → logprob: -16.004079818725586
    6. '	st' → logprob: -17.754079818725586
    7. '_st' → logprob: -18.254079818725586
    8. ')' → logprob: -18.379079818725586
    9. ',' → logprob: -18.629079818725586
    10. 't' → logprob: -19.254079818725586

Token 270: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0683535037969705e-05
    2. ')]' → logprob: -12.00001049041748
    3. ' ]' → logprob: -12.50001049041748
    4. ']
' → logprob: -15.25001049041748
    5. '()]' → logprob: -15.62501049041748
    6. ')' → logprob: -16.250011444091797
    7. '];' → logprob: -17.125011444091797
    8. ':]' → logprob: -17.250011444091797
    9. ']

' → logprob: -17.500011444091797
    10. '])' → logprob: -17.750011444091797

Token 271: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23243845999240875
    2. '    
' → logprob: -1.6074384450912476
    3. '    ' → logprob: -5.982438564300537
    4. '
' → logprob: -6.232438564300537
    5. '    
    
' → logprob: -6.857438564300537
    6. ' 
' → logprob: -7.982438564300537
    7. '#' → logprob: -8.857438087463379
    8. '        
' → logprob: -8.982438087463379
    9. '```' → logprob: -9.357438087463379
    10. 'print' → logprob: -9.482438087463379

Token 273: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.12927919626235962
    2. '#' (adapté à ' #') → logprob: -2.754279136657715
    3. '   ' → logprob: -4.129279136657715
    4. 'print' → logprob: -4.629279136657715
    5. 'dist' → logprob: -5.004279136657715
    6. 'vis' → logprob: -5.379279136657715
    7. '    
' → logprob: -6.004279136657715
    8. 'for' → logprob: -6.254279136657715
    9. 'q' → logprob: -6.379279136657715
    10. 'distance' → logprob: -6.504279136657715

Token 274: ' Initial' (ID: 9209)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3872731924057007
    2. '#' → logprob: -1.6372731924057007
    3. 'from' → logprob: -2.7622733116149902
    4. 'print' → logprob: -4.63727331161499
    5. 'vis' → logprob: -4.76227331161499
    6. 'import' → logprob: -4.76227331161499
    7. 'q' → logprob: -4.88727331161499
    8. ' visited' → logprob: -5.26227331161499
    9. 'dist' → logprob: -5.38727331161499
    10. 'dp' → logprob: -5.88727331161499

Token 275: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.042841024696826935
    2. 'visited' → logprob: -3.6678409576416016
    3. 'is' → logprob: -5.417840957641602
    4. 'iser' → logprob: -6.042840957641602
    5. 'isé' → logprob: -6.167840957641602
    6. '#' → logprob: -6.292840957641602
    7. 'ization' → logprob: -6.542840957641602
    8. 'ise' → logprob: -7.042840957641602
    9. ' visited' → logprob: -7.042840957641602
    10. 'ized' → logprob: -8.042840957641602

Token 276: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8066732287406921
    2. ' des' → logprob: -1.181673288345337
    3. '(' → logprob: -2.181673288345337
    4. ' d' → logprob: -3.556673288345337
    5. 'des' → logprob: -4.431673049926758
    6. 'visited' → logprob: -4.431673049926758
    7. ':' → logprob: -4.556673049926758
    8. 'd' → logprob: -4.556673049926758
    9. ' de' → logprob: -4.806673049926758
    10. 'def' → logprob: -4.806673049926758

Token 277: ' trois' (ID: 25564)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6336690783500671
    2. 'une' → logprob: -2.383669137954712
    3. 'dist' → logprob: -2.383669137954712
    4. ' une' → logprob: -2.633669137954712
    5. ' visited' → logprob: -3.133669137954712
    6. 'la' → logprob: -3.633669137954712
    7. 'res' → logprob: -3.883669137954712
    8. ' la' → logprob: -3.883669137954712
    9. 'vis' → logprob: -4.008668899536133
    10. 'd' → logprob: -4.133668899536133

Token 278: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.04430580139160156
    2. ' lists' → logprob: -3.7943058013916016
    3. ' états' → logprob: -5.169305801391602
    4. ' espaces' → logprob: -5.419305801391602
    5. ' variables' → logprob: -5.544305801391602
    6. 'lists' → logprob: -6.419305801391602
    7. 'list' → logprob: -6.669305801391602
    8. ' tableaux' → logprob: -6.794305801391602
    9. '_list' → logprob: -7.294305801391602
    10. ' lignes' → logprob: -7.419305801391602

Token 279: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7703915238380432
    2. ':' → logprob: -1.6453914642333984
    3. 'visited' → logprob: -1.6453914642333984
    4. ' d' → logprob: -3.5203914642333984
    5. ' visited' → logprob: -4.020391464233398
    6. 'vis' → logprob: -4.145391464233398
    7. 'de' → logprob: -4.145391464233398
    8. 'd' → logprob: -4.145391464233398
    9. ' =' → logprob: -4.395391464233398
    10. 'dist' → logprob: -4.520391464233398

Token 280: ' taille' (ID: 41644)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.7671260833740234
    2. 'tail' → logprob: -1.2671260833740234
    3. ' taille' → logprob: -1.6421260833740234
    4. 'n' → logprob: -3.7671260833740234
    5. 'bo' → logprob: -4.642126083374023
    6. 'size' → logprob: -5.267126083374023
    7. '[' → logprob: -5.642126083374023
    8. 'long' → logprob: -5.767126083374023
    9. 'int' → logprob: -5.767126083374023
    10. '[n' → logprob: -5.892126083374023

Token 281: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01815333589911461
    2. ' n' → logprob: -4.018153190612793
    3. '   ' → logprob: -13.643153190612793
    4. '(n' → logprob: -14.393153190612793
    5. '[n' → logprob: -14.518153190612793
    6. ' ' → logprob: -14.768153190612793
    7. '```' → logprob: -15.393153190612793
    8. '  ' → logprob: -15.643153190612793
    9. '[' → logprob: -15.768153190612793
    10. '	n' → logprob: -16.39315414428711

Token 282: ' rem' (ID: 1662)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5526654720306396
    2. '   ' → logprob: -1.6776654720306396
    3. ',' → logprob: -2.0526654720306396
    4. 'visited' → logprob: -2.8026654720306396
    5. ' :' → logprob: -4.177665710449219
    6. ' =' → logprob: -4.552665710449219
    7. 'dist' → logprob: -5.177665710449219
    8. 'vis' → logprob: -5.302665710449219
    9. '=' → logprob: -6.302665710449219
    10. ' visited' → logprob: -6.427665710449219

Token 283: 'plies' (ID: 9773)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.009063351899385452
    2. 'plies' → logprob: -4.884063243865967
    3. 'p' → logprob: -6.884063243865967
    4. '[' → logprob: -8.884063720703125
    5. 'plit' → logprob: -8.884063720703125
    6. 'pli' → logprob: -9.384063720703125
    7. '=' → logprob: -11.009063720703125
    8. 'place' → logprob: -11.509063720703125
    9. '   ' → logprob: -11.634063720703125
    10. 'ple' → logprob: -12.259063720703125

Token 284: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5058995485305786
    2. 'de' → logprob: -1.0058995485305786
    3. '   ' → logprob: -3.630899429321289
    4. 'False' → logprob: -6.755899429321289
    5. '[' → logprob: -7.380899429321289
    6. '  ' → logprob: -7.630899429321289
    7. 'à' → logprob: -8.005899429321289
    8. ' avec' → logprob: -8.130899429321289
    9. '```' → logprob: -8.255899429321289
    10. 'd' → logprob: -8.505899429321289

Token 285: ' z' (ID: 579)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07219402492046356
    2. '0' → logprob: -2.6971940994262695
    3. ' False' → logprob: -6.3221940994262695
    4. 'F' → logprob: -9.07219409942627
    5. '[' → logprob: -9.44719409942627
    6. '-' → logprob: -9.57219409942627
    7. 'None' → logprob: -10.32219409942627
    8. ' ' → logprob: -10.44719409942627
    9. 'zeros' → logprob: -10.57219409942627
    10. 'z' → logprob: -10.57219409942627

Token 286: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.050731051713228226
    2. 'eros' → logprob: -3.3007309436798096
    3. 'éro' → logprob: -4.675731182098389
    4. 'ero' → logprob: -5.800731182098389
    5. '"' → logprob: -10.17573070526123
    6. 'e' → logprob: -10.17573070526123
    7. '0' → logprob: -10.30073070526123
    8. ''' → logprob: -10.67573070526123
    9. '[' → logprob: -10.67573070526123
    10. 'é' → logprob: -10.67573070526123

Token 287: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9567756056785583
    2. ':' → logprob: -1.4567756652832031
    3. 'visited' → logprob: -1.7067756652832031
    4. 'vis' → logprob: -2.706775665283203
    5. ',' → logprob: -2.831775665283203
    6. ' visited' → logprob: -3.831775665283203
    7. 'v' → logprob: -4.581775665283203
    8. 'dist' → logprob: -4.831775665283203
    9. 'd' → logprob: -4.956775665283203
    10. 'visit' → logprob: -5.456775665283203

Token 288: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4139399528503418
    2. 'vis' → logprob: -2.288939952850342
    3. 'used' → logprob: -2.788939952850342
    4. ' visited' → logprob: -3.663939952850342
    5. '   ' → logprob: -3.788939952850342
    6. 'seen' → logprob: -3.913939952850342
    7. 'v' → logprob: -4.163939952850342
    8. 'color' → logprob: -4.163939952850342
    9. 'dist' → logprob: -4.288939952850342
    10. 'd' → logprob: -4.288939952850342

Token 289: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6868296265602112
    2. 'used' → logprob: -1.6868295669555664
    3. 'color' → logprob: -2.9368295669555664
    4. 'seen' → logprob: -3.0618295669555664
    5. 'vis' → logprob: -3.1868295669555664
    6. 'd' → logprob: -3.4368295669555664
    7. 'v' → logprob: -3.8118295669555664
    8. ' visited' → logprob: -3.8118295669555664
    9. ' used' → logprob: -4.186829566955566
    10. 'visit' → logprob: -4.936829566955566

Token 290: ' to' (ID: 316)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5832523703575134
    2. 'used' → logprob: -1.9582524299621582
    3. 'color' → logprob: -2.583252429962158
    4. 'vis' → logprob: -2.833252429962158
    5. 'd' → logprob: -3.208252429962158
    6. 'v' → logprob: -3.333252429962158
    7. 'seen' → logprob: -3.958252429962158
    8. 'dis' → logprob: -5.208252429962158
    9. 'white' → logprob: -5.208252429962158
    10. 'dp' → logprob: -5.458252429962158

Token 291: 'P' (ID: 47)
  Prédit: '_visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_visit' → logprob: -0.2516133487224579
    2. 'do' → logprob: -2.5016133785247803
    3. 'visit' → logprob: -2.7516133785247803
    4. '_' → logprob: -3.7516133785247803
    5. 'p' → logprob: -4.376613140106201
    6. '_do' → logprob: -5.126613140106201
    7. 'visited' → logprob: -5.501613140106201
    8. '_vis' → logprob: -5.626613140106201
    9. '_process' → logprob: -5.876613140106201
    10. 'v' → logprob: -6.251613140106201

Token 292: ' pour' (ID: 1930)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.29129543900489807
    2. '_visit' → logprob: -2.5412955284118652
    3. 'pos' → logprob: -3.0412955284118652
    4. 'visit' → logprob: -3.2912955284118652
    5. 'P' → logprob: -3.9162955284118652
    6. 'do' → logprob: -4.541295528411865
    7. '_process' → logprob: -4.666295528411865
    8. 'Visit' → logprob: -5.041295528411865
    9. 'o' → logprob: -5.166295528411865
    10. 'rocess' → logprob: -5.416295528411865

Token 293: ' stock' (ID: 6546)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.4945969581604004
    2. 'mar' → logprob: -1.2445969581604004
    3. 'tr' → logprob: -4.3695969581604
    4. '0' → logprob: -4.4945969581604
    5. 'su' → logprob: -4.4945969581604
    6. 'True' → logprob: -4.9945969581604
    7. 'st' → logprob: -4.9945969581604
    8. 'stock' → logprob: -5.2445969581604
    9. ' stock' → logprob: -5.3695969581604
    10. 'ind' → logprob: -5.9945969581604

Token 294: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.039770469069480896
    2. '   ' → logprob: -4.664770603179932
    3. 'age' → logprob: -4.664770603179932
    4. 'u' → logprob: -5.039770603179932
    5. 'e' → logprob: -5.539770603179932
    6. 'r' → logprob: -6.789770603179932
    7. 'rès' → logprob: -6.789770603179932
    8. 'é' → logprob: -7.289770603179932
    9. 'uer' → logprob: -7.539770603179932
    10. 'os' → logprob: -7.664770603179932

Token 295: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.3410861492156982
    2. ' les' → logprob: -1.5910861492156982
    3. ' l' → logprob: -1.7160861492156982
    4. ' la' → logprob: -2.0910861492156982
    5. 'les' → logprob: -2.3410861492156982
    6. 'le' → logprob: -2.4660861492156982
    7. 'l' → logprob: -3.4660861492156982
    8. 'la' → logprob: -4.716086387634277
    9. ' des' → logprob: -6.216086387634277
    10. ' to' → logprob: -7.341086387634277

Token 296: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.385125070810318
    2. ' nombre' → logprob: -2.635125160217285
    3. 'plus' → logprob: -2.760125160217285
    4. ' degré' → logprob: -3.010125160217285
    5. 'temps' → logprob: -3.260125160217285
    6. 'parent' → logprob: -3.635125160217285
    7. 'de' → logprob: -4.135125160217285
    8. 'stat' → logprob: -4.385125160217285
    9. 'ordre' → logprob: -5.510125160217285
    10. ' statut' → logprob: -5.635125160217285

Token 297: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.1028861999511719
    2. ' de' → logprob: -1.3528861999511719
    3. '   ' → logprob: -2.227886199951172
    4. ' des' → logprob: -2.352886199951172
    5. ' d' → logprob: -2.602886199951172
    6. 'des' → logprob: -3.227886199951172
    7. 'd' → logprob: -3.227886199951172
    8. ' ' → logprob: -3.977886199951172
    9. '  ' → logprob: -4.227886199951172
    10. '_de' → logprob: -5.227886199951172

Token 298: ' façons' (ID: 165958)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.077622413635254
    2. 'parents' → logprob: -1.577622413635254
    3. 'pré' → logprob: -1.702622413635254
    4. 'ar' → logprob: -2.577622413635254
    5. 'pre' → logprob: -2.702622413635254
    6. 'in' → logprob: -3.577622413635254
    7. ' visites' → logprob: -4.327622413635254
    8. 'vis' → logprob: -4.577622413635254
    9. ' parents' → logprob: -4.702622413635254
    10. ' pré' → logprob: -4.952622413635254

Token 299: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1968497335910797
    2. 'de' → logprob: -2.321849822998047
    3. ' d' → logprob: -3.321849822998047
    4. ' ' → logprob: -4.196849822998047
    5. ' to' → logprob: -4.321849822998047
    6. '<|end|>' → logprob: -5.071849822998047
    7. '   ' → logprob: -6.196849822998047
    8. 'd' → logprob: -6.321849822998047
    9. ' ' → logprob: -6.821849822998047
    10. ',' → logprob: -7.196849822998047

Token 300: ''' (ID: 6)
  Prédit: ''arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arr' → logprob: -1.173329472541809
    2. ' atteindre' → logprob: -1.548329472541809
    3. 'arr' → logprob: -2.0483293533325195
    4. ''aller' → logprob: -2.4233293533325195
    5. ' arriver' → logprob: -2.5483293533325195
    6. ' parvenir' → logprob: -3.0483293533325195
    7. 'e' → logprob: -4.0483293533325195
    8. ''' → logprob: -4.0483293533325195
    9. ' aller' → logprob: -4.5483293533325195
    10. 'atte' → logprob: -4.5483293533325195

Token 301: 'atte' (ID: 23975)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.30915457010269165
    2. 're' → logprob: -1.6841545104980469
    3. 'atte' → logprob: -2.809154510498047
    4. ' arriver' → logprob: -5.934154510498047
    5. 'aller' → logprob: -6.434154510498047
    6. ' atteindre' → logprob: -6.434154510498047
    7. 'atter' → logprob: -6.684154510498047
    8. 'ré' → logprob: -6.684154510498047
    9. ' parvenir' → logprob: -6.684154510498047
    10. '
' → logprob: -6.809154510498047

Token 302: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.12074967473745346
    2. 'r' → logprob: -2.3707497119903564
    3. 'ind' → logprob: -5.245749473571777
    4. 'n' → logprob: -5.245749473571777
    5. 'in' → logprob: -5.870749473571777
    6. 'tre' → logprob: -6.745749473571777
    7. 'iner' → logprob: -6.870749473571777
    8. 'inder' → logprob: -6.995749473571777
    9. 're' → logprob: -7.120749473571777
    10. 'i' → logprob: -7.995749473571777

Token 303: ' le' (ID: 505)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.09860673546791077
    2. 'cha' → logprob: -3.598606824874878
    3. ' each' → logprob: -4.223606586456299
    4. ' un' → logprob: -4.473606586456299
    5. ' le' → logprob: -4.598606586456299
    6. 'each' → logprob: -4.723606586456299
    7. 'le' → logprob: -5.098606586456299
    8. 'ch' → logprob: -5.098606586456299
    9. 'un' → logprob: -5.723606586456299
    10. '   ' → logprob: -6.973606586456299

Token 304: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.33188021183013916
    2. ' sommet' → logprob: -1.3318802118301392
    3. 'i' → logprob: -4.83188009262085
    4. 's' → logprob: -5.33188009262085
    5. 'n' → logprob: -6.33188009262085
    6. 'point' → logprob: -6.45688009262085
    7. ' i' → logprob: -7.70688009262085
    8. ' som' → logprob: -7.83188009262085
    9. 'c' → logprob: -8.706880569458008
    10. 'each' → logprob: -8.956880569458008

Token 305: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15749812126159668
    2. 'i' → logprob: -2.4074981212615967
    3. 's' → logprob: -4.282498359680176
    4. ' s' → logprob: -4.782498359680176
    5. ' p' → logprob: -5.282498359680176
    6. '[i' → logprob: -5.532498359680176
    7. ' ' → logprob: -5.657498359680176
    8. ',' → logprob: -5.782498359680176
    9. ' de' → logprob: -5.907498359680176
    10. '[]' → logprob: -6.407498359680176

Token 306: ' depuis' (ID: 16277)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10612265765666962
    2. ',
' → logprob: -3.1061227321624756
    3. '   ' → logprob: -3.8561227321624756
    4. 'to' → logprob: -4.4811224937438965
    5. ' to' → logprob: -4.6061224937438965
    6. ' =' → logprob: -5.7311224937438965
    7. ' ,' → logprob: -5.8561224937438965
    8. '
' → logprob: -6.6061224937438965
    9. '.' → logprob: -6.8561224937438965
    10. 'dp' → logprob: -6.8561224937438965

Token 307: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5636792182922363
    2. ' la' → logprob: -2.4386792182922363
    3. 'le' → logprob: -2.4386792182922363
    4. 'l' → logprob: -2.9386792182922363
    5. '#' → logprob: -3.3136792182922363
    6. 'la' → logprob: -3.3136792182922363
    7. ' ' → logprob: -3.5636792182922363
    8. 'i' → logprob: -3.8136792182922363
    9. 's' → logprob: -3.8136792182922363
    10. ' le' → logprob: -4.563679218292236

Token 308: ' source' (ID: 4256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44577378034591675
    2. 'source' → logprob: -1.9457738399505615
    3. ' source' → logprob: -2.0707738399505615
    4. 'dé' → logprob: -3.6957738399505615
    5. 's' → logprob: -3.8207738399505615
    6. ' ' → logprob: -3.9457738399505615
    7. '1' → logprob: -4.695773601531982
    8. '#' → logprob: -5.195773601531982
    9. ' #' → logprob: -5.570773601531982
    10. 'start' → logprob: -6.195773601531982

Token 309: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05655086040496826
    2. ',
' → logprob: -4.056550979614258
    3. ' ,' → logprob: -4.306550979614258
    4. ' to' → logprob: -4.806550979614258
    5. ' de' → logprob: -5.806550979614258
    6. 'to' → logprob: -5.931550979614258
    7. ' =' → logprob: -5.931550979614258
    8. 'de' → logprob: -6.306550979614258
    9. ' (' → logprob: -6.431550979614258
    10. '.' → logprob: -6.556550979614258

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8737105131149292
    2. ',' → logprob: -1.1237105131149292
    3. 'to' → logprob: -2.2487106323242188
    4. ' to' → logprob: -2.3737106323242188
    5. ',
' → logprob: -3.2487106323242188
    6. '
' → logprob: -4.623710632324219
    7. ' ' → logprob: -5.248710632324219
    8. ' ,' → logprob: -6.123710632324219
    9. ',to' → logprob: -7.373710632324219
    10. '#' → logprob: -8.123710632324219

Token 311: ' #' (ID: 1069)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.01888764649629593
    2. ' to' → logprob: -4.143887519836426
    3. '   ' → logprob: -6.393887519836426
    4. '#' (adapté à ' #') → logprob: -7.893887519836426
    5. 'dp' → logprob: -7.893887519836426
    6. ',' → logprob: -9.518887519836426
    7. 't' → logprob: -9.643887519836426
    8. ' #' → logprob: -9.893887519836426
    9. ' ' → logprob: -10.143887519836426
    10. '
' → logprob: -10.268887519836426

Token 312: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8148649334907532
    2. 'dp' → logprob: -1.5648648738861084
    3. 'to' → logprob: -1.6898648738861084
    4. 'visited' → logprob: -2.8148648738861084
    5. 'used' → logprob: -4.5648651123046875
    6. 'vis' → logprob: -4.5648651123046875
    7. 'top' → logprob: -4.6898651123046875
    8. 'f' → logprob: -4.8148651123046875
    9. 'ways' → logprob: -5.0648651123046875
    10. 'cost' → logprob: -5.6898651123046875

Token 313: 'E' (ID: 36)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.08964470773935318
    2. 'D' → logprob: -4.089644908905029
    3. 'p' → logprob: -4.214644908905029
    4. 'C' → logprob: -5.089644908905029
    5. 'F' → logprob: -5.214644908905029
    6. 'S' → logprob: -5.464644908905029
    7. 'V' → logprob: -5.464644908905029
    8. 'visit' → logprob: -5.589644908905029
    9. 'E' → logprob: -5.964644908905029
    10. 'o' → logprob: -6.089644908905029

Token 314: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.0827227458357811
    2. 'pour' → logprob: -2.8327226638793945
    3. ' for' → logprob: -4.8327226638793945
    4. 'for' → logprob: -5.5827226638793945
    5. 'Pour' → logprob: -5.8327226638793945
    6. ' =' → logprob: -5.8327226638793945
    7. ' ' → logprob: -6.5827226638793945
    8. ' ' → logprob: -8.207722663879395
    9. '[' → logprob: -8.457722663879395
    10. 'P' → logprob: -8.582722663879395

Token 315: ' conserver' (ID: 116877)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.9806174635887146
    2. ' stock' → logprob: -1.1056175231933594
    3. 'st' → logprob: -1.3556175231933594
    4. 'comp' → logprob: -3.8556175231933594
    5. ' compter' → logprob: -5.730617523193359
    6. 'stor' → logprob: -6.230617523193359
    7. ' mar' → logprob: -6.730617523193359
    8. 'store' → logprob: -6.730617523193359
    9. 'su' → logprob: -6.980617523193359
    10. 'calcul' → logprob: -6.980617523193359

Token 316: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3199915885925293
    2. 'le' → logprob: -1.3199915885925293
    3. 'l' → logprob: -5.819991588592529
    4. ' les' → logprob: -6.944991588592529
    5. ' l' → logprob: -7.194991588592529
    6. 'les' → logprob: -7.319991588592529
    7. ' la' → logprob: -7.819991588592529
    8. 'la' → logprob: -8.444992065429688
    9. 'nombre' → logprob: -8.694992065429688
    10. 'e' → logprob: -9.444992065429688

Token 317: ' somme' (ID: 64484)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6396244764328003
    2. '0' → logprob: -2.01462459564209
    3. 'distance' → logprob: -2.76462459564209
    4. '#' → logprob: -3.38962459564209
    5. '1' → logprob: -3.63962459564209
    6. 's' → logprob: -3.76462459564209
    7. 'val' → logprob: -3.88962459564209
    8. '   ' → logprob: -4.01462459564209
    9. ' ' → logprob: -4.63962459564209
    10. 'place' → logprob: -4.76462459564209

Token 318: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7100934386253357
    2. 'des' → logprob: -0.7100934386253357
    3. '   ' → logprob: -4.5850934982299805
    4. 'de' → logprob: -5.5850934982299805
    5. ' de' → logprob: -6.7100934982299805
    6. '  ' → logprob: -7.7100934982299805
    7. ' ' → logprob: -7.8350934982299805
    8. '    ' → logprob: -8.83509349822998
    9. 'd' → logprob: -8.96009349822998
    10. '_des' → logprob: -8.96009349822998

Token 319: ' longue' (ID: 59564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0075520277023315
    2. 'po' → logprob: -1.1325520277023315
    3. 'long' → logprob: -3.007552146911621
    4. 'val' → logprob: -3.757552146911621
    5. ' distances' → logprob: -4.132552146911621
    6. 'scores' → logprob: -4.382552146911621
    7. 'che' → logprob: -4.507552146911621
    8. 'temps' → logprob: -4.632552146911621
    9. 'coeff' → logprob: -4.632552146911621
    10. 'dp' → logprob: -4.757552146911621

Token 320: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.002472920576110482
    2. 'ur' → logprob: -6.627472877502441
    3. 'eurs' → logprob: -7.627472877502441
    4. 'rs' → logprob: -8.002472877502441
    5. '#' → logprob: -9.502472877502441
    6. '```' → logprob: -9.877472877502441
    7. 'r' → logprob: -10.377472877502441
    8. '[' → logprob: -11.002472877502441
    9. 'reurs' → logprob: -11.002472877502441
    10. '...' → logprob: -11.314972877502441

Token 321: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.20894743502140045
    2. 'des' → logprob: -1.8339474201202393
    3. ' de' → logprob: -4.583947658538818
    4. '   ' → logprob: -4.958947658538818
    5. 'de' → logprob: -5.083947658538818
    6. '_des' → logprob: -6.583947658538818
    7. ' ' → logprob: -7.083947658538818
    8. ',' → logprob: -7.333947658538818
    9. ' d' → logprob: -7.958947658538818
    10. ' to' → logprob: -7.958947658538818

Token 322: ' chemins' (ID: 192063)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10597041249275208
    2. 'che' → logprob: -3.3559703826904297
    3. ' chemins' → logprob: -3.7309703826904297
    4. ' toutes' → logprob: -5.10597038269043
    5. 'plus' → logprob: -5.10597038269043
    6. 'paths' → logprob: -5.23097038269043
    7. 'to' → logprob: -5.23097038269043
    8. 's' → logprob: -5.23097038269043
    9. ' tous' → logprob: -5.73097038269043
    10. 'les' → logprob: -6.48097038269043

Token 323: ' accum' (ID: 23148)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5927499532699585
    2. ' pour' → logprob: -2.342750072479248
    3. ' to' → logprob: -2.467750072479248
    4. 'pour' → logprob: -2.967750072479248
    5. ' à' → logprob: -3.467750072479248
    6. ' des' → logprob: -3.467750072479248
    7. 'to' → logprob: -3.717750072479248
    8. ' ' → logprob: -3.967750072479248
    9. 's' → logprob: -4.092750072479248
    10. 'de' → logprob: -4.217750072479248

Token 324: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.0063720326870679855
    2. 'umul' → logprob: -5.506371974945068
    3. 'um' → logprob: -6.256371974945068
    4. 'ulé' → logprob: -8.756372451782227
    5. 'u' → logprob: -9.381372451782227
    6. 'ur' → logprob: -10.006372451782227
    7. 'uml' → logprob: -10.756372451782227
    8. 'r' → logprob: -11.131372451782227
    9. 'us' → logprob: -11.756372451782227
    10. 'ulum' → logprob: -11.881372451782227

Token 325: 'ées' (ID: 5161)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.007289985194802284
    2. 'ées' → logprob: -5.007289886474609
    3. 'es' → logprob: -7.882289886474609
    4. '#' → logprob: -9.25728988647461
    5. 'ée' → logprob: -9.88228988647461
    6. 'é' → logprob: -11.00728988647461
    7. 's' → logprob: -12.13228988647461
    8. '[' → logprob: -12.13228988647461
    9. '```' → logprob: -12.13228988647461
    10. '   ' → logprob: -12.38228988647461

Token 326: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6064531207084656
    2. 'to' → logprob: -1.6064531803131104
    3. ' to' → logprob: -1.9814531803131104
    4. ',' → logprob: -3.3564531803131104
    5. '#' → logprob: -3.9814531803131104
    6. ' pour' → logprob: -4.231452941894531
    7. ' de' → logprob: -4.731452941894531
    8. 'pour' → logprob: -4.856452941894531
    9. 'de' → logprob: -4.981452941894531
    10. ' à' → logprob: -5.231452941894531

Token 327: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4552425742149353
    2. ' chaque' → logprob: -1.83024263381958
    3. ' i' → logprob: -2.45524263381958
    4. 'cha' → logprob: -2.83024263381958
    5. 'each' → logprob: -3.95524263381958
    6. 'ch' → logprob: -4.83024263381958
    7. ' each' → logprob: -4.83024263381958
    8. 'l' → logprob: -5.20524263381958
    9. 'to' → logprob: -5.33024263381958
    10. 'le' → logprob: -5.45524263381958

Token 328: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5109868049621582
    2. 'to' → logprob: -1.7609868049621582
    3. ',' → logprob: -2.260986804962158
    4. ' to' → logprob: -2.510986804962158
    5. '#' → logprob: -3.385986804962158
    6. '
' → logprob: -5.260986804962158
    7. ',
' → logprob: -6.135986804962158
    8. ' ' → logprob: -7.260986804962158
    9. '.' → logprob: -8.510986328125
    10. ' #' → logprob: -9.135986328125

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6339511275291443
    2. 'to' → logprob: -1.008951187133789
    3. ' to' → logprob: -2.258951187133789
    4. ' ' → logprob: -8.633951187133789
    5. '#' → logprob: -9.633951187133789
    6. ',' → logprob: -9.758951187133789
    7. '	to' → logprob: -10.008951187133789
    8. 't' → logprob: -10.508951187133789
    9. '  ' → logprob: -10.508951187133789
    10. ' #' → logprob: -11.758951187133789

Token 330: ' #' (ID: 1069)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.06056515499949455
    2. '   ' → logprob: -3.435565233230591
    3. ' to' → logprob: -3.685565233230591
    4. ' ' → logprob: -7.435564994812012
    5. '#' (adapté à ' #') → logprob: -7.935564994812012
    6. 'dp' → logprob: -8.810564994812012
    7. '  ' → logprob: -10.060564994812012
    8. 't' → logprob: -10.185564994812012
    9. ' #' → logprob: -10.373064994812012
    10. 'dist' → logprob: -10.498064994812012

Token 331: ' from' (ID: 591)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.13431259989738464
    2. 'dp' → logprob: -3.509312629699707
    3. 'from' → logprob: -3.634312629699707
    4. 'dist' → logprob: -4.259312629699707
    5. ' to' → logprob: -4.634312629699707
    6. 'res' → logprob: -5.259312629699707
    7. 'ans' → logprob: -5.759312629699707
    8. 'len' → logprob: -5.759312629699707
    9. 'd' → logprob: -5.884312629699707
    10. 'cost' → logprob: -5.884312629699707

Token 332: 'E' (ID: 36)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.10599540174007416
    2. 'E' → logprob: -2.7309954166412354
    3. 'L' → logprob: -3.8559954166412354
    4. '_' → logprob: -4.480995178222656
    5. 'to' → logprob: -6.855995178222656
    6. '_lengths' → logprob: -7.980995178222656
    7. 'S' → logprob: -8.355995178222656
    8. '_length' → logprob: -8.480995178222656
    9. 's' → logprob: -8.605995178222656
    10. '_len' → logprob: -8.855995178222656

Token 333: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5256010293960571
    2. '=' → logprob: -0.9006010293960571
    3. 'for' → logprob: -7.025600910186768
    4. ' for' → logprob: -7.150600910186768
    5. ' pour' → logprob: -7.775600910186768
    6. '=[]' → logprob: -9.150601387023926
    7. '=[' → logprob: -9.275601387023926
    8. 'pour' → logprob: -9.525601387023926
    9. '[' → logprob: -10.025601387023926
    10. ' ' → logprob: -10.650601387023926

Token 334: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017863252433016896
    2. '[n' → logprob: -6.876786231994629
    3. ' [' → logprob: -7.376786231994629
    4. '[i' → logprob: -10.376786231994629
    5. '[s' → logprob: -10.626786231994629
    6. '[-' → logprob: -11.126786231994629
    7. '0' → logprob: -11.376786231994629
    8. 'n' → logprob: -11.501786231994629
    9. '[to' → logprob: -12.126786231994629
    10. '[]' → logprob: -12.251786231994629

Token 335: ' calcul' (ID: 7559)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.08869492262601852
    2. 's' → logprob: -2.7136948108673096
    3. 'n' → logprob: -4.713695049285889
    4. ' nombre' → logprob: -5.213695049285889
    5. 'som' → logprob: -6.338695049285889
    6. '0' → logprob: -6.588695049285889
    7. 'sum' → logprob: -8.46369457244873
    8. 'max' → logprob: -8.96369457244873
    9. '[' → logprob: -9.21369457244873
    10. '#' → logprob: -9.33869457244873

Token 336: ' rétro' (ID: 198846)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5968388319015503
    2. 'des' → logprob: -0.9718388319015503
    3. 'from' → logprob: -4.22183895111084
    4. '   ' → logprob: -4.47183895111084
    5. ' de' → logprob: -4.84683895111084
    6. '[]' → logprob: -4.84683895111084
    7. 'de' → logprob: -5.22183895111084
    8. ' of' → logprob: -5.34683895111084
    9. ' for' → logprob: -5.97183895111084
    10. 'for' → logprob: -6.09683895111084

Token 337: 'grade' (ID: 9013)
  Prédit: 'grad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grad' → logprob: -0.2736673057079315
    2. 'grade' → logprob: -2.148667335510254
    3. 'gress' → logprob: -2.773667335510254
    4. 'gr' → logprob: -4.523667335510254
    5. 'gn' → logprob: -4.773667335510254
    6. 'gression' → logprob: -4.773667335510254
    7. 's' → logprob: -5.273667335510254
    8. 'gressive' → logprob: -5.773667335510254
    9. 'prop' → logprob: -5.898667335510254
    10. 'cess' → logprob: -5.898667335510254

Token 338: ' des' (ID: 731)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10590136796236038
    2. ' to' → logprob: -2.4809014797210693
    3. '   ' → logprob: -4.10590124130249
    4. '
' → logprob: -8.730901718139648
    5. ' ' → logprob: -9.105901718139648
    6. '	to' → logprob: -10.730901718139648
    7. 't' → logprob: -11.355901718139648
    8. '  ' → logprob: -11.855901718139648
    9. ' =' → logprob: -12.605901718139648
    10. ',' → logprob: -12.605901718139648

Token 339: ' esp' (ID: 7461)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.03461437672376633
    2. 'che' → logprob: -3.909614324569702
    3. ' longue' → logprob: -5.409614562988281
    4. 's' → logprob: -5.909614562988281
    5. 'val' → logprob: -6.284614562988281
    6. 'dist' → logprob: -6.659614562988281
    7. ' chemins' → logprob: -7.409614562988281
    8. ' distances' → logprob: -7.909614562988281
    9. 'scores' → logprob: -7.909614562988281
    10. ' ' → logprob: -7.909614562988281

Token 340: 'ér' (ID: 2156)
  Prédit: 'ér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.4097221791744232
    2. 'érance' → logprob: -1.4097222089767456
    3. 'er' → logprob: -3.284722089767456
    4. 'é' → logprob: -4.534722328186035
    5. 'oir' → logprob: -4.659722328186035
    6. 'érons' → logprob: -5.159722328186035
    7. 'érés' → logprob: -5.409722328186035
    8. 'aces' → logprob: -5.534722328186035
    9. 'érences' → logprob: -5.659722328186035
    10. 'érations' → logprob: -6.159722328186035

Token 341: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.17067037522792816
    2. 'ences' → logprob: -2.0456702709198
    3. 'er' → logprob: -4.545670509338379
    4. 'ance' → logprob: -5.420670509338379
    5. '#' → logprob: -6.295670509338379
    6. 'ces' → logprob: -6.420670509338379
    7. 'ées' → logprob: -6.795670509338379
    8. 'ér' → logprob: -6.795670509338379
    9. 'es' → logprob: -6.920670509338379
    10. '```' → logprob: -7.420670509338379

Token 342: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1308598816394806
    2. 'to' → logprob: -2.505859851837158
    3. ' to' → logprob: -3.255859851837158
    4. '
' → logprob: -6.380859851837158
    5. '    
' → logprob: -7.630859851837158
    6. ' ' → logprob: -9.005860328674316
    7. '  ' → logprob: -9.880860328674316
    8. '	to' → logprob: -9.880860328674316
    9. ',' → logprob: -10.755860328674316
    10. '   
' → logprob: -11.255860328674316

Token 343: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6584845781326294
    2. 'n' → logprob: -1.1584845781326294
    3. 'l' → logprob: -2.15848445892334
    4. ']' → logprob: -4.03348445892334
    5. 'la' → logprob: -4.65848445892334
    6. '0' → logprob: -5.15848445892334
    7. ' i' → logprob: -5.28348445892334
    8. ' n' → logprob: -6.15848445892334
    9. '[i' → logprob: -6.28348445892334
    10. 'g' → logprob: -6.65848445892334

Token 344: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.40844306349754333
    2. 'som' → logprob: -1.1584430932998657
    3. 'i' → logprob: -5.408442974090576
    4. 'n' → logprob: -5.658442974090576
    5. 'no' → logprob: -6.033442974090576
    6. 'node' → logprob: -6.033442974090576
    7. 's' → logprob: -6.283442974090576
    8. ' noe' → logprob: -6.283442974090576
    9. ' i' → logprob: -7.158442974090576
    10. '```' → logprob: -7.158442974090576

Token 345: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21992789208889008
    2. 'to' → logprob: -2.0949277877807617
    3. ' to' → logprob: -2.8449277877807617
    4. '
' → logprob: -4.469927787780762
    5. '    
' → logprob: -6.094927787780762
    6. ' ' → logprob: -6.969927787780762
    7. '	to' → logprob: -7.594927787780762
    8. '  
' → logprob: -8.219927787780762
    9. '  ' → logprob: -8.344927787780762
    10. '   
' → logprob: -8.594927787780762

Token 346: '   ' (ID: 271)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4560813307762146
    2. '   ' → logprob: -1.2060813903808594
    3. ' to' → logprob: -2.7060813903808594
    4. ' ' → logprob: -10.08108139038086
    5. '	to' → logprob: -11.45608139038086
    6. '
' → logprob: -11.70608139038086
    7. '  ' → logprob: -12.33108139038086
    8. '```' → logprob: -12.70608139038086
    9. '    ' → logprob: -13.83108139038086
    10. '    
' → logprob: -13.95608139038086

Token 347: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.00036216014996171
    2. ' to' → logprob: -8.500362396240234
    3. '   ' → logprob: -8.750362396240234
    4. ' ' → logprob: -15.500362396240234
    5. '
' → logprob: -18.250362396240234
    6. '	to' → logprob: -18.375362396240234
    7. '  ' → logprob: -19.625362396240234
    8. 't' → logprob: -19.625362396240234
    9. '```' → logprob: -19.625362396240234
    10. 'from' → logprob: -20.375362396240234

Token 348: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.696889623621246e-06
    2. 'p' → logprob: -13.12500286102295
    3. ' P' → logprob: -14.62500286102295
    4. ',' → logprob: -16.125001907348633
    5. '
' → logprob: -17.125001907348633
    6. 'П' → logprob: -17.750001907348633
    7. 'E' → logprob: -18.312501907348633
    8. '	P' → logprob: -18.312501907348633
    9. '```' → logprob: -18.437501907348633
    10. '_P' → logprob: -18.625001907348633

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005030352156609297
    2. '=' → logprob: -5.880030155181885
    3. ',' → logprob: -6.130030155181885
    4. ' ,' → logprob: -10.255030632019043
    5. ' ' → logprob: -11.505030632019043
    6. ' ' → logprob: -15.255030632019043
    7. ' =[' → logprob: -15.505030632019043
    8. ',to' → logprob: -15.630030632019043
    9. '=[' → logprob: -15.755030632019043
    10. '  ' → logprob: -16.380029678344727

Token 350: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029751179739832878
    2. ' [' → logprob: -3.5297510623931885
    3. '[n' → logprob: -14.15475082397461
    4. '0' → logprob: -16.77975082397461
    5. ' ' → logprob: -16.77975082397461
    6. '   ' → logprob: -18.52975082397461
    7. ' ' → logprob: -18.90475082397461
    8. 'n' → logprob: -20.02975082397461
    9. '[m' → logprob: -20.02975082397461
    10. '  ' → logprob: -20.27975082397461

Token 351: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006295174825936556
    2. '1' → logprob: -7.375629425048828
    3. ' ' → logprob: -12.750629425048828
    4. '   ' → logprob: -17.750629425048828
    5. 'int' → logprob: -18.063129425048828
    6. '۰' → logprob: -18.625629425048828
    7. '[' → logprob: -18.750629425048828
    8. '```' → logprob: -19.000629425048828
    9. '
' → logprob: -19.125629425048828
    10. ']' → logprob: -19.313129425048828

Token 352: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00623887637630105
    2. ']*' → logprob: -5.13123893737793
    3. ' ]' → logprob: -8.25623893737793
    4. ' for' → logprob: -10.13123893737793
    5. ']*(' → logprob: -11.75623893737793
    6. ']+' → logprob: -13.63123893737793
    7. 'for' → logprob: -14.13123893737793
    8. ',' → logprob: -14.75623893737793
    9. ')' → logprob: -15.25623893737793
    10. '0' → logprob: -16.38123893737793

Token 353: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ' n' → logprob: -14.75
    3. '	n' → logprob: -20.25
    4. '(n' → logprob: -21.75
    5. ')n' → logprob: -22.125
    6. '
' → logprob: -22.5
    7. '   ' → logprob: -22.75
    8. '_n' → logprob: -23.875
    9. '```' → logprob: -23.875
    10. '$n' → logprob: -24.125

Token 354: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17011703550815582
    2. 'to' → logprob: -2.045117139816284
    3. ' to' → logprob: -4.045116901397705
    4. '   ' → logprob: -4.920116901397705
    5. '    
' → logprob: -7.420116901397705
    6. 'from' → logprob: -7.545116901397705
    7. '  
' → logprob: -7.670116901397705
    8. ' 
' → logprob: -8.920117378234863
    9. '
' → logprob: -9.045117378234863
    10. '<|end|>' → logprob: -9.295117378234863

Token 355: '   ' (ID: 271)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4262365996837616
    2. ' to' → logprob: -1.176236629486084
    3. '   ' → logprob: -3.426236629486084
    4. 'from' → logprob: -5.426236629486084
    5. ' from' → logprob: -6.426236629486084
    6. '	to' → logprob: -9.926236152648926
    7. '
' → logprob: -11.676236152648926
    8. '	from' → logprob: -12.051236152648926
    9. '    
' → logprob: -12.176236152648926
    10. ' ' → logprob: -13.426236152648926

Token 356: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.0011541512794792652
    2. ' to' → logprob: -7.001153945922852
    3. '   ' → logprob: -8.626153945922852
    4. 'from' → logprob: -9.751153945922852
    5. '
' → logprob: -13.751153945922852
    6. ' ' → logprob: -13.751153945922852
    7. '	to' → logprob: -14.126153945922852
    8. 't' → logprob: -14.751153945922852
    9. '0' → logprob: -15.376153945922852
    10. '#' → logprob: -15.501153945922852

Token 357: 'E' (ID: 36)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.0206720617134124e-05
    2. 'n' → logprob: -12.37501049041748
    3. 'E' → logprob: -13.37501049041748
    4. '=' → logprob: -14.37501049041748
    5. '[' → logprob: -14.37501049041748
    6. 'to' → logprob: -14.62501049041748
    7. ' P' → logprob: -14.62501049041748
    8. '0' → logprob: -15.00001049041748
    9. '.' → logprob: -15.37501049041748
    10. 'from' → logprob: -15.62501049041748

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47531697154045105
    2. '=' → logprob: -0.9753170013427734
    3. '=[' → logprob: -7.100317001342773
    4. '[' → logprob: -7.850317001342773
    5. ' =[' → logprob: -10.975317001342773
    6. ']' → logprob: -13.350317001342773
    7. '=[]' → logprob: -13.475317001342773
    8. '   ' → logprob: -13.475317001342773
    9. ' [' → logprob: -13.975317001342773
    10. ' ' → logprob: -14.100317001342773

Token 359: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007347009377554059
    2. ' [' → logprob: -7.250734806060791
    3. '0' → logprob: -11.250734329223633
    4. '[n' → logprob: -11.375734329223633
    5. 'n' → logprob: -15.500734329223633
    6. '   ' → logprob: -16.500734329223633
    7. ' ' → logprob: -16.875734329223633
    8. '(' → logprob: -20.000734329223633
    9. ' ' → logprob: -20.250734329223633
    10. '[m' → logprob: -20.625734329223633

Token 360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'n' → logprob: -15.625001907348633
    4. '1' → logprob: -16.625001907348633
    5. '
' → logprob: -17.000001907348633
    6. '[' → logprob: -17.375001907348633
    7. ']' → logprob: -17.500001907348633
    8. '-' → logprob: -17.937501907348633
    9. '   ' → logprob: -18.562501907348633
    10. '۰' → logprob: -18.750001907348633

Token 361: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0002491807099431753
    2. ']' → logprob: -8.625248908996582
    3. '*n' → logprob: -9.625248908996582
    4. ' ]' → logprob: -13.125248908996582
    5. 'n' → logprob: -13.875248908996582
    6. '*' → logprob: -15.250248908996582
    7. ']+' → logprob: -16.0002498626709
    8. ']*(' → logprob: -16.0002498626709
    9. ')*' → logprob: -17.1252498626709
    10. '```' → logprob: -17.2502498626709

Token 362: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.704273118884885e-07
    2. ' n' → logprob: -14.750000953674316
    3. '
' → logprob: -16.625
    4. '	n' → logprob: -17.25
    5. '(n' → logprob: -17.25
    6. '   ' → logprob: -18.375
    7. '_n' → logprob: -18.5
    8. 'm' → logprob: -18.625
    9. '<|end|>' → logprob: -18.75
    10. '```' → logprob: -19.375

Token 363: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08567623794078827
    2. 'to' → logprob: -2.9606761932373047
    3. '
' → logprob: -3.9606761932373047
    4. ' to' → logprob: -4.585676193237305
    5. '    
' → logprob: -7.085676193237305
    6. 'from' → logprob: -9.085676193237305
    7. '	to' → logprob: -9.710676193237305
    8. '
' → logprob: -11.710676193237305
    9. '<|end|>' → logprob: -11.710676193237305
    10. '  
' → logprob: -11.835676193237305

Token 364: '   ' (ID: 271)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5797967314720154
    2. '   ' → logprob: -0.9547967314720154
    3. ' to' → logprob: -2.95479679107666
    4. '
' → logprob: -5.95479679107666
    5. '    
' → logprob: -8.32979679107666
    6. '```' → logprob: -9.32979679107666
    7. '	to' → logprob: -10.07979679107666
    8. '\t' → logprob: -11.95479679107666
    9. 'from' → logprob: -12.07979679107666
    10. '  
' → logprob: -12.32979679107666

Token 365: ' from' (ID: 591)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.005827710963785648
    2. '   ' → logprob: -5.380827903747559
    3. ' to' → logprob: -6.755827903747559
    4. 'from' (adapté à ' from') → logprob: -11.005827903747559
    5. '
' → logprob: -11.130827903747559
    6. '	to' → logprob: -12.505827903747559
    7. ' ' → logprob: -13.130827903747559
    8. '```' → logprob: -13.505827903747559
    9. 't' → logprob: -14.005827903747559
    10. '\t' → logprob: -14.130827903747559

Token 366: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00015872348740231246
    2. 'P' → logprob: -8.750158309936523
    3. '_' → logprob: -16.750158309936523
    4. ' E' → logprob: -16.750158309936523
    5. 'from' → logprob: -17.250158309936523
    6. '=' → logprob: -18.000158309936523
    7. '_E' → logprob: -18.312658309936523
    8. ' =' → logprob: -18.625158309936523
    9. 'Е' → logprob: -18.812658309936523
    10. 'e' → logprob: -18.875158309936523

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31420430541038513
    2. ' =' → logprob: -1.3142043352127075
    3. '=[' → logprob: -7.064204216003418
    4. '[' → logprob: -9.689204216003418
    5. ' =[' → logprob: -11.189204216003418
    6. ']' → logprob: -12.689204216003418
    7. '```' → logprob: -12.939204216003418
    8. ' ' → logprob: -13.564204216003418
    9. '=[]' → logprob: -13.814204216003418
    10. '   ' → logprob: -14.314204216003418

Token 368: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011833232128992677
    2. ' [' → logprob: -6.75118350982666
    3. '[n' → logprob: -11.62618350982666
    4. '0' → logprob: -13.00118350982666
    5. '[-' → logprob: -13.87618350982666
    6. 'n' → logprob: -14.25118350982666
    7. '   ' → logprob: -15.50118350982666
    8. ' ' → logprob: -16.126182556152344
    9. ' ' → logprob: -17.626182556152344
    10. '([' → logprob: -18.376182556152344

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019464874640107155
    2. '[' → logprob: -6.251946449279785
    3. '[n' → logprob: -11.751946449279785
    4. 'n' → logprob: -12.126946449279785
    5. ' ' → logprob: -12.876946449279785
    6. ' [' → logprob: -13.876946449279785
    7. ']' → logprob: -14.751946449279785
    8. '1' → logprob: -15.876946449279785
    9. '[-' → logprob: -16.3769474029541
    10. '-' → logprob: -16.5019474029541

Token 370: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -4.060365608893335e-05
    2. ']' → logprob: -10.125041007995605
    3. ' ]' → logprob: -15.125041007995605
    4. '*n' → logprob: -15.625041007995605
    5. ']+' → logprob: -18.12504005432129
    6. ']*(' → logprob: -18.37504005432129
    7. 'n' → logprob: -18.75004005432129
    8. '*' → logprob: -18.87504005432129
    9. ']int' → logprob: -19.62504005432129
    10. '```' → logprob: -19.62504005432129

Token 371: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.704273118884885e-07
    2. ' n' → logprob: -14.750000953674316
    3. '(n' → logprob: -15.875000953674316
    4. 'm' → logprob: -16.875
    5. '_n' → logprob: -18.125
    6. '
' → logprob: -18.375
    7. '	n' → logprob: -18.75
    8. '-n' → logprob: -19.25
    9. '   ' → logprob: -19.375
    10. '[n' → logprob: -20.0

Token 372: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41558828949928284
    2. '
' → logprob: -1.5405882596969604
    3. '<|end|>' → logprob: -2.29058837890625
    4. '    
' → logprob: -4.29058837890625
    5. 'to' → logprob: -5.54058837890625
    6. ' to' → logprob: -6.29058837890625
    7. '  
' → logprob: -6.29058837890625
    8. 'from' → logprob: -7.04058837890625
    9. '   
' → logprob: -7.79058837890625
    10. '<|end|>' → logprob: -8.04058837890625

Token 373: '   ' (ID: 271)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.019142745062708855
    2. '   ' → logprob: -4.2691426277160645
    3. '
' → logprob: -5.5191426277160645
    4. ' to' → logprob: -7.1441426277160645
    5. 'from' → logprob: -9.019143104553223
    6. '    
' → logprob: -10.894143104553223
    7. '```' → logprob: -11.019143104553223
    8. '	to' → logprob: -12.644143104553223
    9. 'import' → logprob: -12.769143104553223
    10. '#' → logprob: -13.144143104553223

Token 374: ' #' (ID: 1069)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0048823123797774315
    2. '   ' → logprob: -6.004882335662842
    3. 'from' → logprob: -6.129882335662842
    4. '
' → logprob: -8.754881858825684
    5. ' to' → logprob: -9.879881858825684
    6. 'import' → logprob: -12.004881858825684
    7. '#' (adapté à ' #') → logprob: -12.129881858825684
    8. '    
' → logprob: -12.754881858825684
    9. 'queue' → logprob: -13.504881858825684
    10. ' from' → logprob: -14.129881858825684

Token 375: ' On' (ID: 2160)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.04174882546067238
    2. 'from' → logprob: -3.2917487621307373
    3. '#' → logprob: -5.666749000549316
    4. 'queue' → logprob: -9.041749000549316
    5. 'import' → logprob: -9.416749000549316
    6. '   ' → logprob: -11.666749000549316
    7. 'def' → logprob: -11.916749000549316
    8. ' to' → logprob: -12.291749000549316
    9. '
' → logprob: -12.791749000549316
    10. '```' → logprob: -12.791749000549316

Token 376: ' met' (ID: 1421)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0014467834262177348
    2. '   ' → logprob: -7.251446723937988
    3. ' to' → logprob: -7.251446723937988
    4. '#' → logprob: -11.251446723937988
    5. 'from' → logprob: -11.751446723937988
    6. ']' → logprob: -13.251446723937988
    7. 't' → logprob: -13.501446723937988
    8. 'def' → logprob: -13.876446723937988
    9. '[to' → logprob: -14.626446723937988
    10. ' ' → logprob: -14.626446723937988

Token 377: ' à' (ID: 1221)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.006723302416503429
    2. ' to' → logprob: -5.006723403930664
    3. 'à' → logprob: -12.506723403930664
    4. ' à' → logprob: -13.131723403930664
    5. ' ' → logprob: -13.631723403930664
    6. '#' → logprob: -14.631723403930664
    7. '0' → logprob: -15.256723403930664
    8. ' #' → logprob: -15.881723403930664
    9. '  ' → logprob: -17.006723403930664
    10. ' ' → logprob: -17.131723403930664

Token 378: ' ' (ID: 220)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0034932810813188553
    2. '0' → logprob: -6.378493309020996
    3. 'jour' → logprob: -6.628493309020996
    4. '1' → logprob: -8.003493309020996
    5. ' jour' → logprob: -9.503493309020996
    6. 'place' → logprob: -10.503493309020996
    7. 'jours' → logprob: -11.378493309020996
    8. 'true' → logprob: -12.378493309020996
    9. ' to' → logprob: -12.378493309020996
    10. 'toc' → logprob: -12.753493309020996

Token 379: '1' (ID: 16)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.012320680543780327
    2. '1' → logprob: -4.887320518493652
    3. '0' → logprob: -5.387320518493652
    4. 'jour' → logprob: -9.512320518493652
    5. 'place' → logprob: -10.262320518493652
    6. 'point' → logprob: -12.762320518493652
    7. 'true' → logprob: -12.762320518493652
    8. ' to' → logprob: -13.137320518493652
    9. '[' → logprob: -13.262320518493652
    10. '
' → logprob: -13.512320518493652

Token 380: ' le' (ID: 505)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2219393253326416
    2. ' to' → logprob: -2.0969393253326416
    3. '   ' → logprob: -2.7219393253326416
    4. '[to' → logprob: -4.5969390869140625
    5. ' ' → logprob: -9.221939086914062
    6. '[' → logprob: -9.596939086914062
    7. '  ' → logprob: -9.721939086914062
    8. '	to' → logprob: -10.096939086914062
    9. '(to' → logprob: -10.596939086914062
    10. '
' → logprob: -10.721939086914062

Token 381: ' nombre' (ID: 9733)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -4.191489642835222e-05
    2. ' to' → logprob: -10.250041961669922
    3. 'from' → logprob: -12.750041961669922
    4. '0' → logprob: -14.000041961669922
    5. 's' → logprob: -14.375041961669922
    6. 'point' → logprob: -14.625041961669922
    7. 'prem' → logprob: -15.375041961669922
    8. '   ' → logprob: -15.750041961669922
    9. 'start' → logprob: -15.750041961669922
    10. '#' → logprob: -15.875041961669922

Token 382: ' de' (ID: 334)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.019246239215135574
    2. '   ' → logprob: -4.1442461013793945
    3. ' to' → logprob: -6.1442461013793945
    4. 'de' → logprob: -7.3942461013793945
    5. '[to' → logprob: -8.269246101379395
    6. ' de' → logprob: -8.769246101379395
    7. '  ' → logprob: -11.019246101379395
    8. ' ' → logprob: -12.019246101379395
    9. '	to' → logprob: -12.894246101379395
    10. '[' → logprob: -13.269246101379395

Token 383: ' façons' (ID: 165958)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4345591068267822
    2. 'che' → logprob: -1.1845591068267822
    3. 'fa' → logprob: -3.3095591068267822
    4. ' façons' → logprob: -5.934558868408203
    5. 'man' → logprob: -6.309558868408203
    6. 'vo' → logprob: -6.309558868408203
    7. ' chemins' → logprob: -6.684558868408203
    8. 'ways' → logprob: -7.184558868408203
    9. ' to' → logprob: -7.809558868408203
    10. 'paths' → logprob: -8.184558868408203

Token 384: ' d' (ID: 272)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.020176637917757034
    2. 'de' → logprob: -4.770176410675049
    3. ' to' → logprob: -4.895176410675049
    4. '[' → logprob: -6.895176410675049
    5. '[to' → logprob: -6.895176410675049
    6. '   ' → logprob: -7.145176410675049
    7. ' de' → logprob: -7.270176410675049
    8. 'd' → logprob: -8.395176887512207
    9. 'for' → logprob: -9.645176887512207
    10. ' ' → logprob: -10.020176887512207

Token 385: ''' (ID: 6)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9624032974243164
    2. ''' → logprob: -1.7124032974243164
    3. ''arr' → logprob: -1.9624032974243164
    4. 'atte' → logprob: -1.9624032974243164
    5. 'e' → logprob: -2.7124032974243164
    6. ''arrivée' → logprob: -3.7124032974243164
    7. ''arrive' → logprob: -4.712403297424316
    8. 'a' → logprob: -4.837403297424316
    9. ''aller' → logprob: -4.837403297424316
    10. '0' → logprob: -4.962403297424316

Token 386: 'atte' (ID: 23975)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.31402039527893066
    2. 'atte' → logprob: -1.3140203952789307
    3. ''arr' → logprob: -8.939020156860352
    4. ''' → logprob: -9.064020156860352
    5. 'part' → logprob: -9.064020156860352
    6. '0' → logprob: -9.314020156860352
    7. 'aller' → logprob: -9.814020156860352
    8. ' atteindre' → logprob: -10.314020156860352
    9. 'at' → logprob: -10.564020156860352
    10. 'acc' → logprob: -10.814020156860352

Token 387: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.807733416557312
    2. 'te' → logprob: -0.932733416557312
    3. 'inte' → logprob: -1.932733416557312
    4. 'nte' → logprob: -4.807733535766602
    5. 'int' → logprob: -6.307733535766602
    6. 'in' → logprob: -6.682733535766602
    7. 'tre' → logprob: -7.057733535766602
    8. '#' → logprob: -7.557733535766602
    9. 'i' → logprob: -7.682733535766602
    10. 'inde' → logprob: -7.807733535766602

Token 388: ' le' (ID: 505)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0006385732558555901
    2. '0' → logprob: -7.750638484954834
    3. ' to' → logprob: -8.625638961791992
    4. '(' → logprob: -11.125638961791992
    5. '(to' → logprob: -11.625638961791992
    6. ' ' → logprob: -13.250638961791992
    7. '[' → logprob: -13.375638961791992
    8. '[to' → logprob: -14.125638961791992
    9. '   ' → logprob: -15.000638961791992
    10. '	to' → logprob: -16.625638961791992

Token 389: ' point' (ID: 2438)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022992705926299095
    2. 'som' → logprob: -4.1479926109313965
    3. 'to' → logprob: -5.6479926109313965
    4. 'source' → logprob: -6.0229926109313965
    5. 's' → logprob: -7.5229926109313965
    6. ' sommet' → logprob: -8.272993087768555
    7. 'point' → logprob: -9.022993087768555
    8. 'dé' → logprob: -10.272993087768555
    9. '1' → logprob: -11.897993087768555
    10. ' ' → logprob: -12.022993087768555

Token 390: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2410094738006592
    2. ' de' → logprob: -1.3660094738006592
    3. ' ' → logprob: -1.4910094738006592
    4. ' d' → logprob: -2.366009473800659
    5. 'de' → logprob: -2.491009473800659
    6. 'd' → logprob: -3.241009473800659
    7. 'source' → logprob: -5.491009712219238
    8. ' ' → logprob: -5.741009712219238
    9. ' source' → logprob: -5.866009712219238
    10. '[' → logprob: -6.616009712219238

Token 391: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.04448004066944122
    2. '0' → logprob: -3.294480085372925
    3. 'depart' → logprob: -5.544479846954346
    4. ' départ' → logprob: -6.169479846954346
    5. 'vue' → logprob: -8.919480323791504
    6. '1' → logprob: -9.544480323791504
    7. ' ' → logprob: -9.794480323791504
    8. 'part' → logprob: -9.794480323791504
    9. 'd' → logprob: -10.294480323791504
    10. '
' → logprob: -10.919480323791504

Token 392: ' (' (ID: 350)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.013140935450792313
    2. ' to' → logprob: -4.51314115524292
    3. '   ' → logprob: -6.51314115524292
    4. '[' → logprob: -7.63814115524292
    5. '[to' → logprob: -9.388140678405762
    6. '(to' → logprob: -10.888140678405762
    7. '0' → logprob: -12.263140678405762
    8. ' ' → logprob: -12.388140678405762
    9. ',' → logprob: -12.388140678405762
    10. ' (' → logprob: -13.138140678405762

Token 393: 'som' (ID: 35641)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031508569372817874
    2. ' ' → logprob: -8.125314712524414
    3. 'to' → logprob: -11.000314712524414
    4. ' to' → logprob: -13.375314712524414
    5. '   ' → logprob: -14.250314712524414
    6. '
' → logprob: -17.875314712524414
    7. ' ' → logprob: -18.000314712524414
    8. ')' → logprob: -18.375314712524414
    9. '  ' → logprob: -18.500314712524414
    10. '[' → logprob: -19.125314712524414

Token 394: 'met' (ID: 3001)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.5304401516914368
    2. 'art' → logprob: -1.780440092086792
    3. 'u' → logprob: -3.280440092086792
    4. 'e' → logprob: -3.405440092086792
    5. 'ut' → logprob: -3.780440092086792
    6. '1' → logprob: -3.905440092086792
    7. 'p' → logprob: -4.155440330505371
    8. 'it' → logprob: -4.530440330505371
    9. 'ar' → logprob: -4.530440330505371
    10. ')' → logprob: -4.780440330505371

Token 395: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001177012687548995
    2. ' ' → logprob: -6.751176834106445
    3. '[' → logprob: -12.001176834106445
    4. '(' → logprob: -15.251176834106445
    5. ' ' → logprob: -16.126176834106445
    6. '   ' → logprob: -16.251176834106445
    7. ' [' → logprob: -16.376176834106445
    8. ' zero' → logprob: -17.001176834106445
    9. ' (' → logprob: -17.626176834106445
    10. '
' → logprob: -18.126176834106445

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '[' → logprob: -18.25
    4. '```' → logprob: -20.0
    5. '   ' → logprob: -20.625
    6. 's' → logprob: -20.875
    7. '
' → logprob: -21.0
    8. '(' → logprob: -21.5
    9. ' ' → logprob: -21.625
    10. '۰' → logprob: -21.75

Token 397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02394709922373295
    2. '   ' → logprob: -3.89894700050354
    3. ' )' → logprob: -6.398947238922119
    4. ']' → logprob: -6.898947238922119
    5. ')
' → logprob: -7.398947238922119
    6. '
' → logprob: -10.398946762084961
    7. ' ' → logprob: -10.523946762084961
    8. ' ]' → logprob: -11.898946762084961
    9. ').' → logprob: -12.023946762084961
    10. '  ' → logprob: -12.023946762084961

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48547640442848206
    2. 'to' → logprob: -0.9854763746261597
    3. ' to' → logprob: -4.485476493835449
    4. '
' → logprob: -10.48547649383545
    5. '    
' → logprob: -11.98547649383545
    6. '  ' → logprob: -12.23547649383545
    7. '(to' → logprob: -12.36047649383545
    8. '.' → logprob: -12.36047649383545
    9. ',' → logprob: -12.61047649383545
    10. '	to' → logprob: -12.73547649383545

Token 399: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.08384328335523605
    2. ' to' → logprob: -2.833843231201172
    3. '   ' → logprob: -3.833843231201172
    4. '
' → logprob: -11.583843231201172
    5. '    
' → logprob: -13.833843231201172
    6. '	to' → logprob: -14.208843231201172
    7. ' ' → logprob: -14.583843231201172
    8. '  ' → logprob: -16.583843231201172
    9. 't' → logprob: -16.833843231201172
    10. '   ' → logprob: -16.958843231201172

Token 400: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. ' P' → logprob: -17.25
    4. '_P' → logprob: -21.375
    5. '```' → logprob: -21.75
    6. '[P' → logprob: -22.0
    7. '
' → logprob: -22.875
    8. 'П' → logprob: -23.125
    9. 'p' → logprob: -23.125
    10. ',' → logprob: -23.375

Token 401: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -13.875000953674316
    3. '```' → logprob: -19.500001907348633
    4. ' ' → logprob: -20.375001907348633
    5. '][' → logprob: -20.750001907348633
    6. '   ' → logprob: -20.875001907348633
    7. '\[' → logprob: -21.000001907348633
    8. '0' → logprob: -21.125001907348633
    9. ' =' → logprob: -21.250001907348633
    10. '
' → logprob: -21.750001907348633

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -21.5
    4. '
' → logprob: -22.0
    5. '۰' → logprob: -22.625
    6. '０' → logprob: -23.0
    7. '```' → logprob: -23.125
    8. ']' → logprob: -23.125
    9. ')' → logprob: -24.5
    10. '00' → logprob: -24.5

Token 403: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.392202976712724e-06
    2. ']=' → logprob: -12.000006675720215
    3. ' ]' → logprob: -15.375006675720215
    4. ']+=' → logprob: -19.1250057220459
    5. ')' → logprob: -19.8750057220459
    6. '=' → logprob: -20.0000057220459
    7. ']
' → logprob: -21.6250057220459
    8. ']

' → logprob: -21.7500057220459
    9. '']' → logprob: -22.5000057220459
    10. '   ' → logprob: -22.8750057220459

Token 404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. ',' → logprob: -18.63604736328125
    4. '.=' → logprob: -19.01104736328125
    5. '＝' → logprob: -19.63604736328125
    6. '+=' → logprob: -20.01104736328125
    7. '=

' → logprob: -20.26104736328125
    8. '=}' → logprob: -20.63604736328125
    9. ' ' → logprob: -21.38604736328125
    10. ')=' → logprob: -21.38604736328125

Token 405: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.125
    4. '  ' → logprob: -20.625
    5. '۱' → logprob: -21.125
    6. '
' → logprob: -21.25
    7. '```' → logprob: -21.25
    8. '１' → logprob: -21.75
    9. '১' → logprob: -22.5625
    10. '' → logprob: -22.6875

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.625
    4. '0' → logprob: -19.625
    5. '```' → logprob: -20.625
    6. '۱' → logprob: -21.3125
    7. '  ' → logprob: -21.5
    8. '
' → logprob: -21.8125
    9. '[' → logprob: -21.875
    10. '' → logprob: -21.9375

Token 407: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5678868293762207
    2. 'for' → logprob: -1.3178868293762207
    3. 'from' → logprob: -2.1928868293762207
    4. 'import' → logprob: -3.1928868293762207
    5. 'queue' → logprob: -4.817886829376221
    6. ' for' → logprob: -6.817886829376221
    7. '```' → logprob: -6.817886829376221
    8. '    
' → logprob: -7.317886829376221
    9. '#' → logprob: -7.442886829376221
    10. '
' → logprob: -7.817886829376221

Token 409: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6536218523979187
    2. 'for' → logprob: -0.7786218523979187
    3. 'import' → logprob: -4.403621673583984
    4. 'queue' → logprob: -5.153621673583984
    5. '#' (adapté à ' #') → logprob: -6.653621673583984
    6. 'order' → logprob: -7.403621673583984
    7. 'q' → logprob: -7.778621673583984
    8. '   ' → logprob: -8.528621673583984
    9. 'stack' → logprob: -8.778621673583984
    10. 'que' → logprob: -10.028621673583984

Token 410: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3066543638706207
    2. 'from' → logprob: -1.5566543340682983
    3. 'queue' → logprob: -3.306654453277588
    4. 'import' → logprob: -5.056654453277588
    5. '#' → logprob: -5.431654453277588
    6. '   ' → logprob: -6.181654453277588
    7. 'q' → logprob: -6.431654453277588
    8. 'stack' → logprob: -7.306654453277588
    9. 'order' → logprob: -7.556654453277588
    10. 'que' → logprob: -8.18165397644043

Token 411: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.02374688722193241
    2. 'cles' → logprob: -4.523746967315674
    3. 'cl' → logprob: -5.273746967315674
    4. '   ' → logprob: -5.398746967315674
    5. 'c' → logprob: -6.148746967315674
    6. 'for' → logprob: -8.273746490478516
    7. 't' → logprob: -8.898746490478516
    8. 'clé' → logprob: -9.023746490478516
    9. 'le' → logprob: -9.273746490478516
    10. '
' → logprob: -9.398746490478516

Token 412: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18314939737319946
    2. '   ' → logprob: -1.9331493377685547
    3. 'for' → logprob: -3.8081493377685547
    4. ' i' → logprob: -8.933149337768555
    5. '    ' → logprob: -9.683149337768555
    6. ':' → logprob: -9.808149337768555
    7. ' ' → logprob: -10.433149337768555
    8. '    
' → logprob: -10.558149337768555
    9. '	for' → logprob: -10.683149337768555
    10. ' ' → logprob: -10.933149337768555

Token 413: ' prop' (ID: 5892)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6347603797912598
    2. 'i' → logprob: -2.0097603797912598
    3. ' _' → logprob: -2.2597603797912598
    4. ' sommet' → logprob: -2.5097603797912598
    5. '_' → logprob: -2.7597603797912598
    6. ' u' → logprob: -3.2597603797912598
    7. ' v' → logprob: -4.38476037979126
    8. 'v' → logprob: -4.75976037979126
    9. ' node' → logprob: -4.75976037979126
    10. 'u' → logprob: -4.75976037979126

Token 414: 'ager' (ID: 1790)
  Prédit: 'ager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -0.0010457895696163177
    2. 'oser' → logprob: -8.001046180725098
    3. 'érer' → logprob: -8.126046180725098
    4. 'ag' → logprob: -9.001046180725098
    5. 'er' → logprob: -9.251046180725098
    6. 'agate' → logprob: -10.001046180725098
    7. 'agir' → logprob: -10.126046180725098
    8. 'ose' → logprob: -10.626046180725098
    9. 'agation' → logprob: -11.876046180725098
    10. 'r' → logprob: -11.876046180725098

Token 415: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2399986982345581
    2. 'i' → logprob: -1.989998698234558
    3. ' u' → logprob: -3.7399988174438477
    4. '_' → logprob: -3.8649988174438477
    5. ' _' → logprob: -4.489998817443848
    6. 'u' → logprob: -5.739998817443848
    7. ' to' → logprob: -5.864998817443848
    8. ' sommet' → logprob: -5.864998817443848
    9. ' v' → logprob: -6.114998817443848
    10. ' for' → logprob: -6.114998817443848

Token 416: ' gauche' (ID: 58367)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5922548770904541
    2. ' i' → logprob: -1.342254877090454
    3. ' ' → logprob: -1.842254877090454
    4. 'i' → logprob: -4.342254638671875
    5. 's' → logprob: -4.717254638671875
    6. '1' → logprob: -6.467254638671875
    7. 'n' → logprob: -7.717254638671875
    8. ' sommet' → logprob: -7.717254638671875
    9. ' range' → logprob: -7.842254638671875
    10. ' l' → logprob: -7.967254638671875

Token 417: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.38491198420524597
    2. 'à' → logprob: -1.3849120140075684
    3. ' to' → logprob: -3.7599120140075684
    4. 'to' → logprob: -4.384912014007568
    5. ',' → logprob: -4.884912014007568
    6. 'a' → logprob: -5.134912014007568
    7. ' a' → logprob: -5.259912014007568
    8. '   ' → logprob: -5.384912014007568
    9. 's' → logprob: -6.759912014007568
    10. ' ' → logprob: -6.759912014007568

Token 418: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -8.864272967912257e-05
    2. ' droite' → logprob: -9.375088691711426
    3. 'Dro' → logprob: -13.750088691711426
    4. 'right' → logprob: -14.125088691711426
    5. '```' → logprob: -14.125088691711426
    6. 'd' → logprob: -14.500088691711426
    7. 'dre' → logprob: -15.625088691711426
    8. '
' → logprob: -15.750088691711426
    9. '-dro' → logprob: -15.750088691711426
    10. 'dere' → logprob: -16.87508773803711

Token 419: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2652759253978729
    2. '   ' → logprob: -1.6402759552001953
    3. 'for' → logprob: -3.2652759552001953
    4. ' in' → logprob: -7.390275955200195
    5. ' i' → logprob: -8.515275955200195
    6. '	for' → logprob: -11.015275955200195
    7. '    
' → logprob: -11.640275955200195
    8. '
' → logprob: -12.140275955200195
    9. 'in' → logprob: -12.265275955200195
    10. '  ' → logprob: -12.390275955200195

Token 420: 'du' (ID: 698)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.43275558948516846
    2. 'i' → logprob: -1.9327555894851685
    3. ' range' → logprob: -2.182755470275879
    4. ' for' → logprob: -3.182755470275879
    5. '_' → logprob: -3.932755470275879
    6. ' _' → logprob: -4.307755470275879
    7. 'range' → logprob: -4.807755470275879
    8. 'for' → logprob: -5.057755470275879
    9. ')' → logprob: -6.057755470275879
    10. ' n' → logprob: -7.557755470275879

Token 421: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00928293913602829
    2. ' sommet' → logprob: -5.009283065795898
    3. ' ' → logprob: -6.634283065795898
    4. 'som' → logprob: -6.884283065795898
    5. 'i' → logprob: -10.009283065795898
    6. ' i' → logprob: -10.634283065795898
    7. 'dé' → logprob: -10.759283065795898
    8. 'prem' → logprob: -10.759283065795898
    9. '```' → logprob: -10.884283065795898
    10. '1' → logprob: -10.884283065795898

Token 422: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01876949518918991
    2. ' for' → logprob: -4.393769264221191
    3. 'for' → logprob: -6.143769264221191
    4. ' i' → logprob: -6.393769264221191
    5. 'def' → logprob: -7.393769264221191
    6. ' in' → logprob: -8.018769264221191
    7. ' ' → logprob: -8.018769264221191
    8. ')' → logprob: -8.268769264221191
    9. 'i' → logprob: -8.518769264221191
    10. 's' → logprob: -8.643769264221191

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001514557225164026
    2. 'for' → logprob: -9.625151634216309
    3. ' ' → logprob: -9.875151634216309
    4. 'i' → logprob: -11.125151634216309
    5. ' for' → logprob: -11.375151634216309
    6. 'à' → logprob: -13.250151634216309
    7. ' i' → logprob: -13.625151634216309
    8. '```' → logprob: -13.750151634216309
    9. ')' → logprob: -14.125151634216309
    10. '
' → logprob: -14.375151634216309

Token 424: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.9669954776763916
    2. ' à' → logprob: -1.3419954776763916
    3. ' to' → logprob: -1.5919954776763916
    4. ' vers' → logprob: -3.2169954776763916
    5. '   ' → logprob: -3.4669954776763916
    6. ')' → logprob: -3.4669954776763916
    7. ' jusqu' → logprob: -3.9669954776763916
    8. 'to' → logprob: -4.4669952392578125
    9. ' )' → logprob: -5.0919952392578125
    10. 'à' → logprob: -5.3419952392578125

Token 425: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027759503573179245
    2. ' n' → logprob: -3.652759552001953
    3. 'som' → logprob: -7.027759552001953
    4. ' sommet' → logprob: -7.527759552001953
    5. ' som' → logprob: -11.527759552001953
    6. '   ' → logprob: -11.527759552001953
    7. ' ' → logprob: -12.152759552001953
    8. 'dern' → logprob: -12.902759552001953
    9. '(n' → logprob: -13.152759552001953
    10. '
' → logprob: -13.902759552001953

Token 426: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008119829930365086
    2. ' -' → logprob: -5.008120059967041
    3. ')' → logprob: -6.758120059967041
    4. '1' → logprob: -8.633119583129883
    5. '):
' → logprob: -11.008119583129883
    6. '   ' → logprob: -11.258119583129883
    7. ' ' → logprob: -11.383119583129883
    8. '):' → logprob: -12.508119583129883
    9. ' )' → logprob: -12.508119583129883
    10. '-)' → logprob: -12.883119583129883

Token 427: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '-' → logprob: -15.625015258789062
    4. '2' → logprob: -17.750015258789062
    5. ')' → logprob: -17.875015258789062
    6. ' ' → logprob: -17.875015258789062
    7. '
' → logprob: -18.250015258789062
    8. '   ' → logprob: -18.250015258789062
    9. '```' → logprob: -18.750015258789062
    10. '...' → logprob: -18.750015258789062

Token 428: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7097914218902588
    2. '):
' → logprob: -0.9597914218902588
    3. ')' → logprob: -2.209791421890259
    4. ' ):
' → logprob: -4.95979118347168
    5. ' ):' → logprob: -5.08479118347168
    6. ' )' → logprob: -6.33479118347168
    7. 'n' → logprob: -9.20979118347168
    8. '):

' → logprob: -9.20979118347168
    9. '
' → logprob: -9.45979118347168
    10. '   ' → logprob: -9.95979118347168

Token 429: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012905837967991829
    2. ' for' → logprob: -4.387906074523926
    3. 'for' → logprob: -8.012906074523926
    4. '
' → logprob: -10.012906074523926
    5. '    
' → logprob: -11.137906074523926
    6. '	for' → logprob: -13.012906074523926
    7. ':' → logprob: -13.137906074523926
    8. '```' → logprob: -14.887906074523926
    9. '  
' → logprob: -15.887906074523926
    10. ':
' → logprob: -15.887906074523926

Token 430: ' valeurs' (ID: 73668)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0204191207885742
    2. 'prob' → logprob: -1.6454191207885742
    3. 'che' → logprob: -1.8954191207885742
    4. ' for' → logprob: -2.020419120788574
    5. ' probabil' → logprob: -3.145419120788574
    6. ' chemins' → logprob: -3.270419120788574
    7. '   ' → logprob: -3.770419120788574
    8. 'i' → logprob: -4.645419120788574
    9. ' ways' → logprob: -4.645419120788574
    10. 'poss' → logprob: -4.895419120788574

Token 431: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7442299723625183
    2. ' for' → logprob: -0.9942299723625183
    3. 'for' → logprob: -1.869230031967163
    4. ' range' → logprob: -7.619229793548584
    5. 'range' → logprob: -9.744230270385742
    6. ':' → logprob: -10.619230270385742
    7. ' in' → logprob: -10.744230270385742
    8. '	for' → logprob: -11.119230270385742
    9. ' ' → logprob: -11.119230270385742
    10. '  ' → logprob: -11.994230270385742

Token 432: ' to' (ID: 316)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12025808542966843
    2. 'i' → logprob: -2.245258092880249
    3. 'to' → logprob: -5.62025785446167
    4. ' range' → logprob: -6.24525785446167
    5. 'g' → logprob: -6.37025785446167
    6. ' i' → logprob: -9.620258331298828
    7. 'for' → logprob: -11.120258331298828
    8. 'r' → logprob: -11.495258331298828
    9. ' to' → logprob: -11.620258331298828
    10. '0' → logprob: -11.745258331298828

Token 433: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.0280383548888494e-06
    2. 'for' → logprob: -14.375000953674316
    3. ' P' → logprob: -15.375000953674316
    4. 'E' → logprob: -16.625001907348633
    5. '_' → logprob: -17.000001907348633
    6. '-' → logprob: -17.125001907348633
    7. ',' → logprob: -17.375001907348633
    8. '[' → logprob: -17.875001907348633
    9. ')' → logprob: -18.000001907348633
    10. '.' → logprob: -18.000001907348633

Token 434: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37626558542251587
    2. ' for' → logprob: -1.376265525817871
    3. 'for' → logprob: -2.876265525817871
    4. '
' → logprob: -6.251265525817871
    5. ' and' → logprob: -6.876265525817871
    6. '    
' → logprob: -6.876265525817871
    7. ',' → logprob: -7.876265525817871
    8. '	for' → logprob: -9.126265525817871
    9. ':' → logprob: -9.751265525817871
    10. ' ' → logprob: -10.251265525817871

Token 435: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.018152514472603798
    2. ' to' → logprob: -4.018152713775635
    3. '   ' → logprob: -13.143152236938477
    4. ' ' → logprob: -14.518152236938477
    5. ' ' → logprob: -16.393152236938477
    6. '  ' → logprob: -16.518152236938477
    7. 'from' → logprob: -17.393152236938477
    8. '	to' → logprob: -18.268152236938477
    9. 't' → logprob: -18.893152236938477
    10. '```' → logprob: -19.393152236938477

Token 436: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -2.2246291337069124e-05
    2. 'P' → logprob: -10.750021934509277
    3. ' E' → logprob: -15.125021934509277
    4. 'to' → logprob: -15.625021934509277
    5. '[' → logprob: -16.375022888183594
    6. 'for' → logprob: -17.250022888183594
    7. '[E' → logprob: -17.375022888183594
    8. '```' → logprob: -17.875022888183594
    9. '[to' → logprob: -18.625022888183594
    10. '_E' → logprob: -18.875022888183594

Token 437: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0798465758562088
    2. ' for' → logprob: -2.9548466205596924
    3. 'for' → logprob: -3.7048466205596924
    4. '
' → logprob: -10.329846382141113
    5. '    
' → logprob: -11.329846382141113
    6. '	for' → logprob: -12.079846382141113
    7. ':' → logprob: -15.704846382141113
    8. ',' → logprob: -15.829846382141113
    9. '    ' → logprob: -16.57984733581543
    10. '  ' → logprob: -16.57984733581543

Token 438: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4246179759502411
    2. 'for' → logprob: -1.1746180057525635
    3. '   ' → logprob: -3.2996180057525635
    4. '
' → logprob: -8.924617767333984
    5. '	for' → logprob: -12.174617767333984
    6. ':' → logprob: -12.674617767333984
    7. '```' → logprob: -12.799617767333984
    8. '    
' → logprob: -13.799617767333984
    9. ':
' → logprob: -15.174617767333984
    10. ' ' → logprob: -15.924617767333984

Token 439: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006762025412172079
    2. ' for' → logprob: -5.0067620277404785
    3. '   ' → logprob: -10.00676155090332
    4. '
' → logprob: -13.38176155090332
    5. '```' → logprob: -17.00676155090332
    6. '	for' → logprob: -18.00676155090332
    7. '    
' → logprob: -19.25676155090332
    8. ' 
' → logprob: -20.50676155090332
    9. 'i' → logprob: -21.50676155090332
    10. '``' → logprob: -21.88176155090332

Token 440: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014582413248717785
    2. ' i' → logprob: -4.514582633972168
    3. 'u' → logprob: -6.139582633972168
    4. 'v' → logprob: -7.264582633972168
    5. 'x' → logprob: -7.639582633972168
    6. ' u' → logprob: -9.764582633972168
    7. ' v' → logprob: -10.764582633972168
    8. 'k' → logprob: -11.139582633972168
    9. 'a' → logprob: -11.264582633972168
    10. '   ' → logprob: -11.264582633972168

Token 441: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007630534935742617
    2. 'in' → logprob: -4.882630348205566
    3. ' ' → logprob: -11.257630348205566
    4. '	in' → logprob: -12.007630348205566
    5. ',' → logprob: -13.007630348205566
    6. ' ' → logprob: -14.632630348205566
    7. '+' → logprob: -15.007630348205566
    8. '   ' → logprob: -15.007630348205566
    9. '  ' → logprob: -15.257630348205566
    10. '```' → logprob: -15.757630348205566

Token 442: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003177952254191041
    2. ' range' → logprob: -5.753178119659424
    3. '(range' → logprob: -16.003177642822266
    4. ' ' → logprob: -16.253177642822266
    5. '   ' → logprob: -16.878177642822266
    6. '	range' → logprob: -18.128177642822266
    7. '  ' → logprob: -18.753177642822266
    8. '0' → logprob: -19.753177642822266
    9. 'ran' → logprob: -19.753177642822266
    10. 'rang' → logprob: -20.128177642822266

Token 443: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0486801378428936
    2. '(' → logprob: -3.048680067062378
    3. '1' → logprob: -9.548680305480957
    4. 'n' → logprob: -10.923680305480957
    5. ' (' → logprob: -13.298680305480957
    6. '(
' → logprob: -13.673680305480957
    7. ' n' → logprob: -14.923680305480957
    8. '(i' → logprob: -16.42367935180664
    9. '0' → logprob: -16.92367935180664
    10. '   ' → logprob: -17.17367935180664

Token 444: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132782578468323
    2. ' -' → logprob: -1.3132781982421875
    3. '   ' → logprob: -11.188278198242188
    4. '):
' → logprob: -13.688278198242188
    5. '1' → logprob: -13.938278198242188
    6. '):' → logprob: -15.563278198242188
    7. ')' → logprob: -15.563278198242188
    8. ' ' → logprob: -15.563278198242188
    9. '
' → logprob: -16.313278198242188
    10. '  ' → logprob: -17.563278198242188

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.875011444091797
    4. '```' → logprob: -16.750011444091797
    5. '2' → logprob: -17.000011444091797
    6. '１' → logprob: -17.125011444091797
    7. '
' → logprob: -19.000011444091797
    8. '۱' → logprob: -19.062511444091797
    9. '  ' → logprob: -19.312511444091797
    10. '``' → logprob: -19.812511444091797

Token 446: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3875187039375305
    2. '):
' → logprob: -1.1375186443328857
    3. ' ):' → logprob: -8.137518882751465
    4. ')' → logprob: -8.512518882751465
    5. ' ):
' → logprob: -9.512518882751465
    6. ':' → logprob: -10.012518882751465
    7. '):
' → logprob: -10.887518882751465
    8. '   ' → logprob: -11.262518882751465
    9. '):

' → logprob: -13.762518882751465
    10. ' :' → logprob: -14.137518882751465

Token 447: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02843349613249302
    2. ' for' → logprob: -4.403433322906494
    3. 'for' → logprob: -4.528433322906494
    4. '       ' → logprob: -5.403433322906494
    5. '    
' → logprob: -8.528433799743652
    6. '    ' → logprob: -8.653433799743652
    7. '	for' → logprob: -10.028433799743652
    8. ' if' → logprob: -10.403433799743652
    9. 'if' → logprob: -11.403433799743652
    10. '   ' → logprob: -11.778433799743652

Token 448: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2925616204738617
    2. 'if' → logprob: -2.4175615310668945
    3. 'c' → logprob: -2.6675615310668945
    4. 'cnt' → logprob: -3.7925615310668945
    5. 'deg' → logprob: -4.1675615310668945
    6. 'sz' → logprob: -4.4175615310668945
    7. 'nb' → logprob: -4.9175615310668945
    8. 'd' → logprob: -5.2925615310668945
    9. '   ' → logprob: -5.2925615310668945
    10. 'l' → logprob: -5.7925615310668945

Token 449: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8365518450737
    2. 'if' → logprob: -1.7115519046783447
    3. 'deg' → logprob: -2.0865519046783447
    4. 'c' → logprob: -2.4615519046783447
    5. 'l' → logprob: -3.2115519046783447
    6. 'sz' → logprob: -3.7115519046783447
    7. 'd' → logprob: -3.7115519046783447
    8. 'cnt' → logprob: -4.086551666259766
    9. 'nb' → logprob: -4.336551666259766
    10. 'x' → logprob: -4.586551666259766

Token 450: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04618098586797714
    2. '=' → logprob: -3.2961809635162354
    3. '=len' → logprob: -5.2961812019348145
    4. 'len' → logprob: -6.5461812019348145
    5. 'for' → logprob: -7.4211812019348145
    6. 'p' → logprob: -8.921180725097656
    7. 'v' → logprob: -8.921180725097656
    8. 'l' → logprob: -9.296180725097656
    9. 'c' → logprob: -9.296180725097656
    10. 'r' → logprob: -9.421180725097656

Token 451: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10055622458457947
    2. 'to' → logprob: -2.3505561351776123
    3. ' len' → logprob: -8.600556373596191
    4. ' to' → logprob: -9.225556373596191
    5. '       ' → logprob: -10.475556373596191
    6. '   ' → logprob: -11.350556373596191
    7. '=len' → logprob: -11.725556373596191
    8. '           ' → logprob: -11.850556373596191
    9. 'float' → logprob: -12.350556373596191
    10. '=' → logprob: -12.600556373596191

Token 452: ' nombre' (ID: 9733)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.016053490340709686
    2. 'len' → logprob: -4.141053676605225
    3. ' to' → logprob: -11.391053199768066
    4. 'sum' → logprob: -12.141053199768066
    5. ' len' → logprob: -13.641053199768066
    6. '0' → logprob: -14.891053199768066
    7. '   ' → logprob: -15.391053199768066
    8. 'max' → logprob: -15.766053199768066
    9. '(len' → logprob: -16.016054153442383
    10. '       ' → logprob: -16.641054153442383

Token 453: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.701405942440033
    2. ' =' → logprob: -0.701405942440033
    3. ' de' → logprob: -5.326406002044678
    4. 'de' → logprob: -6.326406002044678
    5. '=len' → logprob: -6.951406002044678
    6. 'd' → logprob: -9.20140552520752
    7. '_de' → logprob: -9.57640552520752
    8. '   ' → logprob: -9.82640552520752
    9. '    ' → logprob: -9.95140552520752
    10. 'total' → logprob: -10.07640552520752

Token 454: ' façons' (ID: 165958)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001481174840591848
    2. ' len' → logprob: -6.876481056213379
    3. 'g' → logprob: -8.001481056213379
    4. '(len' → logprob: -9.126481056213379
    5. '=len' → logprob: -13.126481056213379
    6. ' g' → logprob: -13.751481056213379
    7. '[len' → logprob: -14.876481056213379
    8. '   ' → logprob: -15.376481056213379
    9. '	len' → logprob: -15.376481056213379
    10. ',len' → logprob: -15.626481056213379

Token 455: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8787153959274292
    2. '=' → logprob: -1.2537153959274292
    3. '=len' → logprob: -1.6287153959274292
    4. 'len' → logprob: -3.0037155151367188
    5. 'de' → logprob: -3.3787155151367188
    6. '       ' → logprob: -4.378715515136719
    7. ' de' → logprob: -5.503715515136719
    8. '   ' → logprob: -8.003715515136719
    9. 'd' → logprob: -8.128715515136719
    10. ',' → logprob: -8.128715515136719

Token 456: ''arr' (ID: 49695)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03048359975218773
    2. 'len' → logprob: -3.6554834842681885
    3. '[g' → logprob: -6.905483722686768
    4. 'at' → logprob: -7.405483722686768
    5. '   ' → logprob: -7.780483722686768
    6. ' g' → logprob: -7.905483722686768
    7. 'atte' → logprob: -7.905483722686768
    8. 'val' → logprob: -8.15548324584961
    9. '(g' → logprob: -8.53048324584961
    10. ' at' → logprob: -9.15548324584961

Token 457: 'iver' (ID: 1788)
  Prédit: 'iver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iver' → logprob: -4.656383680412546e-05
    2. 'iv' → logprob: -10.875046730041504
    3. 'ive' → logprob: -10.875046730041504
    4. 'ivée' → logprob: -12.875046730041504
    5. ' ' → logprob: -14.125046730041504
    6. 'i' → logprob: -14.125046730041504
    7. 'ived' → logprob: -14.500046730041504
    8. 'ivers' → logprob: -14.875046730041504
    9. 'river' → logprob: -15.000046730041504
    10. 'ivé' → logprob: -15.000046730041504

Token 458: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.932252049446106
    2. ' à' → logprob: -2.0572519302368164
    3. '=' → logprob: -2.1822519302368164
    4. 'g' → logprob: -2.4322519302368164
    5. '   ' → logprob: -2.5572519302368164
    6. 'à' → logprob: -2.5572519302368164
    7. ' =' → logprob: -3.1822519302368164
    8. '(g' → logprob: -3.4322519302368164
    9. 'to' → logprob: -4.557251930236816
    10. '           ' → logprob: -4.932251930236816

Token 459: ' i' (ID: 575)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1645316481590271
    2. 'len' → logprob: -2.039531707763672
    3. ' g' → logprob: -4.039531707763672
    4. ' len' → logprob: -5.789531707763672
    5. '   ' → logprob: -7.414531707763672
    6. 'i' → logprob: -8.664531707763672
    7. ' ' → logprob: -9.914531707763672
    8. '[i' → logprob: -10.664531707763672
    9. ' i' → logprob: -10.789531707763672
    10. '[g' → logprob: -11.289531707763672

Token 460: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04349636659026146
    2. '=' → logprob: -3.1684963703155518
    3. ',' → logprob: -8.293496131896973
    4. '       ' → logprob: -8.918496131896973
    5. '   ' → logprob: -9.668496131896973
    6. '=len' → logprob: -10.668496131896973
    7. 'p' → logprob: -12.418496131896973
    8. '=p' → logprob: -12.793496131896973
    9. ' ,' → logprob: -13.043496131896973
    10. '    ' → logprob: -13.168496131896973

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08316206932067871
    2. ' if' → logprob: -3.4581620693206787
    3. ' p' → logprob: -4.083162307739258
    4. ' for' → logprob: -4.833162307739258
    5. ',' → logprob: -5.208162307739258
    6. 'p' → logprob: -5.333162307739258
    7. 'if' → logprob: -5.708162307739258
    8. 'for' → logprob: -6.208162307739258
    9. ' k' → logprob: -6.833162307739258
    10. ' =' → logprob: -7.083162307739258

Token 462: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.023541506379842758
    2. 'for' → logprob: -3.8985414505004883
    3. 'if' → logprob: -6.648541450500488
    4. '       ' → logprob: -7.148541450500488
    5. ' p' → logprob: -8.648541450500488
    6. 'c' → logprob: -8.898541450500488
    7. 'k' → logprob: -9.398541450500488
    8. 'x' → logprob: -9.773541450500488
    9. 'q' → logprob: -9.898541450500488
    10. 'ways' → logprob: -9.898541450500488

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20146527886390686
    2. '=' → logprob: -1.7014652490615845
    3. ',' → logprob: -10.076465606689453
    4. '   ' → logprob: -12.326465606689453
    5. '    ' → logprob: -12.951465606689453
    6. '       ' → logprob: -14.076465606689453
    7. '=p' → logprob: -14.201465606689453
    8. ' ' → logprob: -14.826465606689453
    9. ' ' → logprob: -15.076465606689453
    10. 'p' → logprob: -15.701465606689453

Token 464: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -3.5954712075181305e-05
    2. ' to' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.750036239624023
    4. '       ' → logprob: -16.000036239624023
    5. '           ' → logprob: -18.125036239624023
    6. ' ' → logprob: -18.500036239624023
    7. '  ' → logprob: -19.375036239624023
    8. '     ' → logprob: -19.875036239624023
    9. '
' → logprob: -20.125036239624023
    10. '    ' → logprob: -20.500036239624023

Token 465: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.320199877838604e-07
    2. ' P' → logprob: -15.5
    3. '[i' → logprob: -16.25
    4. 'p' → logprob: -17.25
    5. 'i' → logprob: -19.125
    6. '[' → logprob: -19.375
    7. '   ' → logprob: -19.375
    8. '
' → logprob: -19.75
    9. '[P' → logprob: -19.875
    10. ' ' → logprob: -20.375

Token 466: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. ' [' → logprob: -12.875005722045898
    3. '[' → logprob: -13.125005722045898
    4. '   ' → logprob: -14.375005722045898
    5. 'i' → logprob: -14.750005722045898
    6. '       ' → logprob: -16.0000057220459
    7. '
' → logprob: -17.3750057220459
    8. '```' → logprob: -18.0000057220459
    9. ' i' → logprob: -18.5000057220459
    10. '[j' → logprob: -18.5000057220459

Token 467: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10330033302307129
    2. ')' → logprob: -2.9783003330230713
    3. ']
' → logprob: -3.2283003330230713
    4. ')
' → logprob: -5.478300094604492
    5. '   ' → logprob: -6.228300094604492
    6. '       ' → logprob: -6.978300094604492
    7. ' ]' → logprob: -9.103300094604492
    8. '])' → logprob: -9.228300094604492
    9. '
' → logprob: -9.853300094604492
    10. '    
' → logprob: -10.228300094604492

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003785704728215933
    2. 'next' → logprob: -6.628785610198975
    3. ',' → logprob: -8.253786087036133
    4. 'for' → logprob: -8.378786087036133
    5. ' for' → logprob: -8.503786087036133
    6. '#' → logprob: -8.503786087036133
    7. 'c' → logprob: -8.628786087036133
    8. 's' → logprob: -8.753786087036133
    9. 'k' → logprob: -8.753786087036133
    10. '   ' → logprob: -8.878786087036133

Token 469: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0963252782821655
    2. 'c' → logprob: -1.3463252782821655
    3. 'q' → logprob: -2.346325397491455
    4. 'l' → logprob: -2.846325397491455
    5. '#' (adapté à ' #') → logprob: -2.971325397491455
    6. 'd' → logprob: -3.221325397491455
    7. '       ' → logprob: -3.346325397491455
    8. 's' → logprob: -3.346325397491455
    9. 'k' → logprob: -4.096325397491455
    10. 'neighbors' → logprob: -4.346325397491455

Token 470: ' Si' (ID: 7832)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7956934571266174
    2. 'd' → logprob: -2.1706933975219727
    3. 'l' → logprob: -2.2956933975219727
    4. 'for' → logprob: -2.4206933975219727
    5. 'q' → logprob: -2.5456933975219727
    6. 's' → logprob: -3.6706933975219727
    7. 'deg' → logprob: -3.7956933975219727
    8. 'sz' → logprob: -4.045693397521973
    9. 'x' → logprob: -4.170693397521973
    10. 'k' → logprob: -4.170693397521973

Token 471: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03968672454357147
    2. ' p' → logprob: -3.539686679840088
    3. 'g' → logprob: -5.539686679840088
    4. ' not' → logprob: -5.664686679840088
    5. 'not' → logprob: -6.164686679840088
    6. ' g' → logprob: -8.539687156677246
    7. 'len' → logprob: -8.789687156677246
    8. ' len' → logprob: -10.914687156677246
    9. 'to' → logprob: -11.039687156677246
    10. '   ' → logprob: -12.539687156677246

Token 472: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7021986842155457
    2. ' >' → logprob: -0.7021986842155457
    3. ' !=' → logprob: -5.952198505401611
    4. ':' → logprob: -6.077198505401611
    5. '!=' → logprob: -6.202198505401611
    6. ' ==' → logprob: -6.702198505401611
    7. '==' → logprob: -7.077198505401611
    8. ' ' → logprob: -12.45219898223877
    9. ' :' → logprob: -12.95219898223877
    10. '>:' → logprob: -12.95219898223877

Token 473: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023246407508850098
    2. ' ' → logprob: -3.7732462882995605
    3. '=' → logprob: -14.898246765136719
    4. '>' → logprob: -15.148246765136719
    5. ' ' → logprob: -15.773246765136719
    6. '   ' → logprob: -16.77324676513672
    7. 'p' → logprob: -16.89824676513672
    8. ' p' → logprob: -17.27324676513672
    9. '  ' → logprob: -17.89824676513672
    10. '1' → logprob: -18.02324676513672

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -18.87510871887207
    4. '>' → logprob: -20.50010871887207
    5. '```' → logprob: -20.62510871887207
    6. '  ' → logprob: -20.87510871887207
    7. ' ' → logprob: -21.00010871887207
    8. '    ' → logprob: -21.50010871887207
    9. '۰' → logprob: -21.62510871887207
    10. '=' → logprob: -22.00010871887207

Token 475: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018154975026845932
    2. ':
' → logprob: -4.768155097961426
    3. ' and' → logprob: -5.143155097961426
    4. ',' → logprob: -6.268155097961426
    5. '       ' → logprob: -6.518155097961426
    6. ' :' → logprob: -8.518155097961426
    7. 'and' → logprob: -10.393155097961426
    8. '           ' → logprob: -10.643155097961426
    9. ' :
' → logprob: -11.393155097961426
    10. '   ' → logprob: -11.768155097961426

Token 476: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16065199673175812
    2. 'for' → logprob: -2.785651922225952
    3. '       ' → logprob: -4.035652160644531
    4. ' neighbors' → logprob: -4.035652160644531
    5. ' if' → logprob: -4.160652160644531
    6. 'neighbors' → logprob: -5.410652160644531
    7. ' s' → logprob: -5.910652160644531
    8. 'v' → logprob: -6.035652160644531
    9. ' q' → logprob: -6.035652160644531
    10. ' c' → logprob: -6.285652160644531

Token 477: ''est' (ID: 6616)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8504757881164551
    2. ':' → logprob: -0.9754757881164551
    3. 'ont' → logprob: -1.975475788116455
    4. '      ' → logprob: -3.600475788116455
    5. 'on' → logprob: -4.600475788116455
    6. '   ' → logprob: -5.475475788116455
    7. ':
' → logprob: -5.725475788116455
    8. '=' → logprob: -5.975475788116455
    9. '     ' → logprob: -5.975475788116455
    10. '           ' → logprob: -6.850475788116455

Token 478: '-à' (ID: 56297)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.008240196853876114
    2. '           ' → logprob: -5.008240222930908
    3. 'que' → logprob: -7.508240222930908
    4. '       ' → logprob: -8.00823974609375
    5. ':' → logprob: -8.88323974609375
    6. '   ' → logprob: -9.00823974609375
    7. '    ' → logprob: -10.25823974609375
    8. ' ' → logprob: -10.25823974609375
    9. '            ' → logprob: -10.38323974609375
    10. ' that' → logprob: -10.50823974609375

Token 479: '-dire' (ID: 76064)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1720572710037231
    2. ' ce' → logprob: -1.5470572710037231
    3. '       ' → logprob: -1.7970572710037231
    4. 'None' → logprob: -3.0470571517944336
    5. 'True' → logprob: -3.5470571517944336
    6. 'v' → logprob: -3.5470571517944336
    7. ' True' → logprob: -3.6720571517944336
    8. ' ' → logprob: -3.9220571517944336
    9. 'ce' → logprob: -4.047057151794434
    10. ' None' → logprob: -4.172057151794434

Token 480: ' s' (ID: 265)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3472100496292114
    2. 'len' → logprob: -1.5972100496292114
    3. ' g' → logprob: -2.597209930419922
    4. 'g' → logprob: -4.972209930419922
    5. ' not' → logprob: -5.847209930419922
    6. ' p' → logprob: -6.222209930419922
    7. ' for' → logprob: -6.847209930419922
    8. '   ' → logprob: -6.972209930419922
    9. '       ' → logprob: -7.222209930419922
    10. '           ' → logprob: -7.472209930419922

Token 481: ''il' (ID: 14683)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3144225478172302
    2. 'p' → logprob: -1.689422607421875
    3. 'i' → logprob: -3.439422607421875
    4. 'u' → logprob: -3.564422607421875
    5. '(p' → logprob: -4.814422607421875
    6. 't' → logprob: -4.939422607421875
    7. ''il' → logprob: -5.814422607421875
    8. 'e' → logprob: -6.689422607421875
    9. 'o' → logprob: -7.064422607421875
    10. 'ur' → logprob: -7.064422607421875

Token 482: ' y' (ID: 342)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0779756307601929
    2. 't' → logprob: -1.0779756307601929
    3. ' p' → logprob: -1.2029756307601929
    4. '>' → logprob: -4.327975749969482
    5. 'ont' → logprob: -6.702975749969482
    6. ' there' → logprob: -6.827975749969482
    7. 'y' → logprob: -7.077975749969482
    8. 'n' → logprob: -7.577975749969482
    9. '(p' → logprob: -8.077975273132324
    10. 'u' → logprob: -8.577975273132324

Token 483: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03210412710905075
    2. ' a' → logprob: -3.532104015350342
    3. ''a' → logprob: -6.157104015350342
    4. 'is' → logprob: -9.9071044921875
    5. 'has' → logprob: -10.2821044921875
    6. '   ' → logprob: -10.4071044921875
    7. '#a' → logprob: -10.7821044921875
    8. '#' → logprob: -11.1571044921875
    9. 'est' → logprob: -11.5321044921875
    10. 'p' → logprob: -11.6571044921875

Token 484: ' au' (ID: 2791)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3337819576263428
    2. 'des' → logprob: -1.3337819576263428
    3. ' des' → logprob: -1.5837819576263428
    4. ' p' → logprob: -2.0837819576263428
    5. ' au' → logprob: -2.9587819576263428
    6. 'une' → logprob: -3.7087819576263428
    7. 'to' → logprob: -3.9587819576263428
    8. 'au' → logprob: -4.708782196044922
    9. ' to' → logprob: -4.958782196044922
    10. 'un' → logprob: -5.083782196044922

Token 485: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0021064826287329197
    2. ' moins' → logprob: -6.502106666564941
    3. '   ' → logprob: -8.627106666564941
    4. '```' → logprob: -8.752106666564941
    5. 'menos' → logprob: -9.002106666564941
    6. 'mo' → logprob: -9.627106666564941
    7. '#' → logprob: -10.377106666564941
    8. '  ' → logprob: -11.502106666564941
    9. '-' → logprob: -12.502106666564941
    10. 'plus' → logprob: -12.752106666564941

Token 486: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.8559909462928772
    2. 'des' → logprob: -1.6059908866882324
    3. 'une' → logprob: -2.1059908866882324
    4. ' des' → logprob: -2.1059908866882324
    5. ' un' → logprob: -2.8559908866882324
    6. '1' → logprob: -3.2309908866882324
    7. ' une' → logprob: -3.7309908866882324
    8. ' ' → logprob: -5.230990886688232
    9. 'au' → logprob: -6.605990886688232
    10. 'quel' → logprob: -6.730990886688232

Token 487: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.03441549837589264
    2. 'vo' → logprob: -4.1594157218933105
    3. ' voisin' → logprob: -4.2844157218933105
    4. ' chemin' → logprob: -5.7844157218933105
    5. 'neighbor' → logprob: -7.7844157218933105
    6. 'voie' → logprob: -8.284415245056152
    7. ' ' → logprob: -8.909415245056152
    8. '_che' → logprob: -9.534415245056152
    9. '```' → logprob: -9.534415245056152
    10. '   ' → logprob: -9.909415245056152

Token 488: ' vers' (ID: 3640)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17525193095207214
    2. '       ' → logprob: -2.8002519607543945
    3. '   ' → logprob: -3.1752519607543945
    4. ' vers' → logprob: -3.6752519607543945
    5. ',' → logprob: -4.1752519607543945
    6. ' :' → logprob: -4.8002519607543945
    7. ' to' → logprob: -5.5502519607543945
    8. ' and' → logprob: -6.4252519607543945
    9. ':
' → logprob: -7.3002519607543945
    10. 'to' → logprob: -7.6752519607543945

Token 489: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009616543538868427
    2. 'g' → logprob: -4.884616374969482
    3. ' i' → logprob: -6.259616374969482
    4. '[i' → logprob: -10.38461685180664
    5. '   ' → logprob: -11.13461685180664
    6. ' g' → logprob: -11.13461685180664
    7. 'le' → logprob: -11.38461685180664
    8. 'len' → logprob: -11.50961685180664
    9. 'l' → logprob: -13.13461685180664
    10. 'les' → logprob: -13.25961685180664

Token 490: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.725642740726471
    2. ':' → logprob: -0.850642740726471
    3. ',' → logprob: -2.475642681121826
    4. ':
' → logprob: -5.600642681121826
    5. ' :' → logprob: -7.725642681121826
    6. '   ' → logprob: -8.600643157958984
    7. ',
' → logprob: -9.350643157958984
    8. '           ' → logprob: -9.475643157958984
    9. ' ,' → logprob: -10.100643157958984
    10. ' and' → logprob: -10.100643157958984

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005257497541606426
    2. ',' → logprob: -8.12552547454834
    3. '        
' → logprob: -8.87552547454834
    4. ' if' → logprob: -10.62552547454834
    5. '<|end|>' → logprob: -11.00052547454834
    6. '   ' → logprob: -11.37552547454834
    7. '           ' → logprob: -12.00052547454834
    8. '
' → logprob: -12.37552547454834
    9. ':' → logprob: -12.50052547454834
    10. ' for' → logprob: -12.75052547454834

Token 492: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8187820911407471
    2. '       ' → logprob: -1.568782091140747
    3. 'if' (adapté à ' if') → logprob: -1.943782091140747
    4. ' for' → logprob: -2.068782091140747
    5. 'for' → logprob: -2.568782091140747
    6. 'next' → logprob: -6.943781852722168
    7. 'c' → logprob: -7.818781852722168
    8. ' next' → logprob: -7.943781852722168
    9. 'q' → logprob: -8.443781852722168
    10. 'v' → logprob: -8.568781852722168

Token 493: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31327468156814575
    2. ' p' → logprob: -1.313274621963501
    3. 'to' → logprob: -11.938274383544922
    4. '   ' → logprob: -12.563274383544922
    5. ' to' → logprob: -13.313274383544922
    6. ' ' → logprob: -14.938274383544922
    7. 'len' → logprob: -15.313274383544922
    8. '(p' → logprob: -15.938274383544922
    9. '       ' → logprob: -16.188274383544922
    10. '    ' → logprob: -16.313274383544922

Token 494: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16112160682678223
    2. ' >' → logprob: -1.9111216068267822
    3. ':' → logprob: -7.036121368408203
    4. '>:' → logprob: -11.536121368408203
    5. '!=' → logprob: -13.286121368408203
    6. '&gt' → logprob: -13.786121368408203
    7. ' !=' → logprob: -13.786121368408203
    8. ')>' → logprob: -14.036121368408203
    9. ' ' → logprob: -14.286121368408203
    10. '   ' → logprob: -14.536121368408203

Token 495: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -20.375059127807617
    4. '  ' → logprob: -21.875059127807617
    5. '۰' → logprob: -21.875059127807617
    6. '<|end|>' → logprob: -22.625059127807617
    7. '```' → logprob: -23.000059127807617
    8. '
' → logprob: -23.500059127807617
    9. '    ' → logprob: -23.625059127807617
    10. ' ' → logprob: -23.875059127807617

Token 496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '۰' → logprob: -17.750030517578125
    4. '<|end|>' → logprob: -19.625030517578125
    5. '０' → logprob: -20.250030517578125
    6. '
' → logprob: -20.750030517578125
    7. 'zero' → logprob: -20.750030517578125
    8. '٠' → logprob: -20.875030517578125
    9. '00' → logprob: -21.250030517578125
    10. '০' → logprob: -21.375030517578125

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10107538104057312
    2. ':
' → logprob: -2.3510754108428955
    3. '       ' → logprob: -7.601075172424316
    4. '           ' → logprob: -9.226075172424316
    5. ' :' → logprob: -9.226075172424316
    6. ' and' → logprob: -9.476075172424316
    7. ' :
' → logprob: -9.851075172424316
    8. ',' → logprob: -10.976075172424316
    9. '):
' → logprob: -11.476075172424316
    10. ':

' → logprob: -12.476075172424316

Token 498: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013759002089500427
    2. ':' → logprob: -5.263759136199951
    3. ',' → logprob: -5.388759136199951
    4. ' for' → logprob: -6.638759136199951
    5. '           ' → logprob: -7.638759136199951
    6. '        
' → logprob: -8.013758659362793
    7. ' s' → logprob: -8.263758659362793
    8. ' k' → logprob: -8.263758659362793
    9. 'n' → logprob: -8.638758659362793
    10. 's' → logprob: -9.013758659362793

Token 499: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2837892770767212
    2. 'd' → logprob: -1.5337892770767212
    3. 'x' → logprob: -1.9087892770767212
    4. 'c' → logprob: -2.2837891578674316
    5. 'k' → logprob: -2.4087891578674316
    6. 's' → logprob: -3.4087891578674316
    7. 'for' → logprob: -3.9087891578674316
    8. 'l' → logprob: -4.033789157867432
    9. ' c' → logprob: -4.283789157867432
    10. 'v' → logprob: -4.533789157867432

Token 500: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.319608449935913
    2. 'l' → logprob: -1.694608449935913
    3. 'c' → logprob: -1.819608449935913
    4. 'x' → logprob: -2.319608449935913
    5. 'k' → logprob: -2.569608449935913
    6. 'd' → logprob: -2.569608449935913
    7. 'q' → logprob: -2.944608449935913
    8. 's' → logprob: -3.944608449935913
    9. '           ' → logprob: -3.944608449935913
    10. 'nb' → logprob: -5.319608688354492

Token 501: ' div' (ID: 4223)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5148988366127014
    2. ' for' → logprob: -1.1398987770080566
    3. 'n' → logprob: -3.1398987770080566
    4. '           ' → logprob: -3.5148987770080566
    5. ' n' → logprob: -6.014898777008057
    6. ' =' → logprob: -6.139898777008057
    7. '=' → logprob: -6.639898777008057
    8. 'd' → logprob: -7.139898777008057
    9. 'c' → logprob: -7.389898777008057
    10. 'len' → logprob: -7.764898777008057

Token 502: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0018805658910423517
    2. 'ide' → logprob: -6.376880645751953
    3. 'erse' → logprob: -9.751880645751953
    4. 'e' → logprob: -10.251880645751953
    5. 'iser' → logprob: -11.126880645751953
    6. '       ' → logprob: -11.251880645751953
    7. 't' → logprob: -11.626880645751953
    8. 'ize' → logprob: -11.751880645751953
    9. 'ert' → logprob: -12.001880645751953
    10. 'erge' → logprob: -12.376880645751953

Token 503: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.311043918132782
    2. ' p' → logprob: -1.4360439777374268
    3. ' le' → logprob: -4.186043739318848
    4. 'le' → logprob: -5.436043739318848
    5. ' len' → logprob: -5.686043739318848
    6. ' la' → logprob: -5.811043739318848
    7. 'len' → logprob: -6.561043739318848
    8. 'la' → logprob: -6.686043739318848
    9. ' equally' → logprob: -8.686043739318848
    10. '           ' → logprob: -8.936043739318848

Token 504: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.012524022720754147
    2. 'P' → logprob: -4.387524127960205
    3. '[i' → logprob: -11.637523651123047
    4. 'p' → logprob: -12.887523651123047
    5. ' E' → logprob: -14.637523651123047
    6. '   ' → logprob: -15.012523651123047
    7. 'for' → logprob: -15.137523651123047
    8. ' =' → logprob: -15.262523651123047
    9. 'i' → logprob: -15.262523651123047
    10. '[' → logprob: -15.262523651123047

Token 505: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -14.000001907348633
    3. ' [' → logprob: -14.375001907348633
    4. '[' → logprob: -14.375001907348633
    5. '       ' → logprob: -16.125001907348633
    6. '           ' → logprob: -17.000001907348633
    7. 'i' → logprob: -17.250001907348633
    8. '```' → logprob: -18.375001907348633
    9. '[j' → logprob: -18.500001907348633
    10. '               ' → logprob: -19.250001907348633

Token 506: ']' (ID: 60)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.03502160310745239
    2. '[i' → logprob: -4.035021781921387
    3. 'by' → logprob: -4.660021781921387
    4. ']' → logprob: -6.035021781921387
    5. ')' → logprob: -6.160021781921387
    6. '           ' → logprob: -7.035021781921387
    7. ',' → logprob: -7.785021781921387
    8. 'p' → logprob: -7.785021781921387
    9. ' p' → logprob: -8.285021781921387
    10. '+' → logprob: -9.035021781921387

Token 507: ' (' (ID: 350)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.2592012882232666
    2. 'by' → logprob: -1.7592012882232666
    3. '+=' → logprob: -3.1342012882232666
    4. ',' → logprob: -5.7592010498046875
    5. ' +=' → logprob: -5.7592010498046875
    6. '+' → logprob: -6.2592010498046875
    7. 'p' → logprob: -6.8842010498046875
    8. 'len' → logprob: -6.8842010498046875
    9. '           ' → logprob: -7.5092010498046875
    10. '=' → logprob: -7.5092010498046875

Token 508: 'la' (ID: 1675)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.013226698152720928
    2. ' p' → logprob: -4.513226509094238
    3. 'to' → logprob: -6.888226509094238
    4. ')' → logprob: -7.513226509094238
    5. '           ' → logprob: -7.888226509094238
    6. 'len' → logprob: -9.263226509094238
    7. ' to' → logprob: -10.388226509094238
    8. '               ' → logprob: -10.513226509094238
    9. ',' → logprob: -11.388226509094238
    10. '+' → logprob: -11.513226509094238

Token 509: ' somme' (ID: 64484)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.41180601716041565
    2. 'to' → logprob: -1.1618059873580933
    3. ' p' → logprob: -4.161806106567383
    4. ' to' → logprob: -4.911806106567383
    5. '*p' → logprob: -7.161806106567383
    6. '           ' → logprob: -8.286806106567383
    7. '*' → logprob: -9.036806106567383
    8. 'len' → logprob: -9.161806106567383
    9. '#' → logprob: -9.786806106567383
    10. 'length' → logprob: -10.411806106567383

Token 510: ' accum' (ID: 23148)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.27547717094421387
    2. ' de' → logprob: -1.9004771709442139
    3. '           ' → logprob: -3.275477170944214
    4. 'des' → logprob: -3.650477170944214
    5. 'de' → logprob: -4.650477409362793
    6. '   ' → logprob: -4.775477409362793
    7. ' /' → logprob: -5.900477409362793
    8. '               ' → logprob: -6.150477409362793
    9. ' of' → logprob: -7.275477409362793
    10. 'of' → logprob: -7.775477409362793

Token 511: 'ul' (ID: 361)
  Prédit: 'érée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.30731168389320374
    2. 'uée' → logprob: -2.557311773300171
    3. 'ut' → logprob: -2.682311773300171
    4. 'rée' → logprob: -3.682311773300171
    5. 'urée' → logprob: -3.682311773300171
    6. '   ' → logprob: -4.182311534881592
    7. 'érées' → logprob: -4.307311534881592
    8. '       ' → logprob: -5.182311534881592
    9. 'u' → logprob: -5.432311534881592
    10. '           ' → logprob: -5.557311534881592

Token 512: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.030457014217972755
    2. 'ées' → logprob: -3.530457019805908
    3. 'é' → logprob: -8.40545654296875
    4. 'lée' → logprob: -8.78045654296875
    5. '#' → logprob: -8.90545654296875
    6. 'és' → logprob: -10.03045654296875
    7. 'ee' → logprob: -10.28045654296875
    8. 'e' → logprob: -10.65545654296875
    9. '[' → logprob: -10.78045654296875
    10. 'ated' → logprob: -11.15545654296875

Token 513: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6021973490715027
    2. ' par' → logprob: -2.2271974086761475
    3. ',' → logprob: -2.6021974086761475
    4. ' de' → logprob: -2.6021974086761475
    5. '   ' → logprob: -2.8521974086761475
    6. ' by' → logprob: -3.7271974086761475
    7. 'des' → logprob: -4.102197170257568
    8. '+' → logprob: -4.477197170257568
    9. 'de' → logprob: -4.852197170257568
    10. ' +' → logprob: -4.852197170257568

Token 514: ' longue' (ID: 59564)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4432012140750885
    2. ' to' → logprob: -2.0682013034820557
    3. ' p' → logprob: -2.4432013034820557
    4. 'p' → logprob: -2.9432013034820557
    5. 'paths' → logprob: -3.1932013034820557
    6. ' chemins' → logprob: -4.193201065063477
    7. 'che' → logprob: -5.193201065063477
    8. ' distances' → logprob: -5.193201065063477
    9. ' paths' → logprob: -5.693201065063477
    10. 'path' → logprob: -6.068201065063477

Token 515: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.0024058620911091566
    2. 'rs' → logprob: -6.502405643463135
    3. 'eurs' → logprob: -7.752405643463135
    4. 'r' → logprob: -8.502406120300293
    5. 'es' → logprob: -8.752406120300293
    6. 'ur' → logprob: -10.002406120300293
    7. '```' → logprob: -10.627406120300293
    8. 'urses' → logprob: -12.252406120300293
    9. 'e' → logprob: -12.377406120300293
    10. '
' → logprob: -12.377406120300293

Token 516: ' pour' (ID: 1930)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6540971398353577
    2. ' des' → logprob: -1.154097080230713
    3. ' de' → logprob: -2.779097080230713
    4. 'de' → logprob: -2.779097080230713
    5. '           ' → logprob: -4.029097080230713
    6. '   ' → logprob: -5.154097080230713
    7. '+' → logprob: -5.529097080230713
    8. ' +' → logprob: -5.904097080230713
    9. ')' → logprob: -6.029097080230713
    10. ',' → logprob: -6.779097080230713

Token 517: ' arriver' (ID: 78302)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04327206313610077
    2. ' p' → logprob: -3.293272018432617
    3. 'to' → logprob: -5.668272018432617
    4. ' to' → logprob: -6.793272018432617
    5. '           ' → logprob: -7.918272018432617
    6. 'i' → logprob: -9.668272018432617
    7. ')' → logprob: -9.918272018432617
    8. '   ' → logprob: -10.418272018432617
    9. ' i' → logprob: -11.043272018432617
    10. '(p' → logprob: -11.293272018432617

Token 518: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.15880393981933594
    2. ' i' → logprob: -3.033803939819336
    3. ' aux' → logprob: -3.158803939819336
    4. 'à' → logprob: -3.658803939819336
    5. '[i' → logprob: -3.908803939819336
    6. 'i' → logprob: -6.033803939819336
    7. ' au' → logprob: -6.158803939819336
    8. ')' → logprob: -6.408803939819336
    9. ' ' → logprob: -7.158803939819336
    10. 'aux' → logprob: -7.408803939819336

Token 519: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759842395782471
    2. 'i' → logprob: -0.8259842395782471
    3. ')' → logprob: -11.325984001159668
    4. '   ' → logprob: -11.575984001159668
    5. ' ' → logprob: -12.450984001159668
    6. '	i' → logprob: -13.450984001159668
    7. ' ' → logprob: -13.450984001159668
    8. '[i' → logprob: -13.575984001159668
    9. 'j' → logprob: -13.700984001159668
    10. 'neighbors' → logprob: -13.700984001159668

Token 520: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11714687198400497
    2. ' )' → logprob: -2.2421469688415527
    3. ' +' → logprob: -5.992146968841553
    4. '+' → logprob: -6.867146968841553
    5. ' /' → logprob: -8.867146492004395
    6. ',' → logprob: -9.242146492004395
    7. ' *' → logprob: -9.617146492004395
    8. '           ' → logprob: -9.742146492004395
    9. ')+' → logprob: -9.742146492004395
    10. ' by' → logprob: -9.992146492004395

Token 521: ' par' (ID: 686)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.36936357617378235
    2. 'by' → logprob: -2.11936354637146
    3. '           ' → logprob: -2.24436354637146
    4. 'for' → logprob: -3.49436354637146
    5. ' for' → logprob: -4.744363784790039
    6. ' /' → logprob: -4.869363784790039
    7. '/' → logprob: -5.244363784790039
    8. ',' → logprob: -5.744363784790039
    9. 'len' → logprob: -5.744363784790039
    10. ' /=' → logprob: -5.744363784790039

Token 522: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10170033574104309
    2. 'len' → logprob: -2.3517003059387207
    3. 'to' → logprob: -6.601700305938721
    4. '(len' → logprob: -10.226700782775879
    5. ' p' → logprob: -10.351700782775879
    6. '   ' → logprob: -10.976700782775879
    7. ' len' → logprob: -11.226700782775879
    8. 'g' → logprob: -11.851700782775879
    9. 'sum' → logprob: -12.351700782775879
    10. '       ' → logprob: -12.601700782775879

Token 523: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10593181848526001
    2. ' /' → logprob: -3.2309317588806152
    3. ',' → logprob: -3.6059317588806152
    4. '            ' → logprob: -4.605931758880615
    5. '               ' → logprob: -4.730931758880615
    6. ' to' → logprob: -5.605931758880615
    7. 'to' → logprob: -6.230931758880615
    8. ')' → logprob: -6.730931758880615
    9. '/' → logprob: -7.105931758880615
    10. ' and' → logprob: -7.355931758880615

Token 524: '           ' (ID: 352)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.43481218814849854
    2. '           ' → logprob: -1.0598121881484985
    3. '/' → logprob: -6.184812068939209
    4. '               ' → logprob: -7.309812068939209
    5. ',' → logprob: -7.434812068939209
    6. '            ' → logprob: -7.559812068939209
    7. '            
' → logprob: -8.309812545776367
    8. ' /
' → logprob: -8.559812545776367
    9. ' ' → logprob: -8.809812545776367
    10. ' +' → logprob: -8.934812545776367

Token 525: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.7635467052459717
    2. ' d' → logprob: -1.8885467052459717
    3. ' for' → logprob: -2.2635467052459717
    4. 'd' → logprob: -2.2635467052459717
    5. ' e' → logprob: -2.5135467052459717
    6. 'e' → logprob: -2.8885467052459717
    7. ' l' → logprob: -3.5135467052459717
    8. ' to' → logprob: -3.7635467052459717
    9. ' val' → logprob: -3.8885467052459717
    10. 'to' (adapté à ' to') → logprob: -3.8885467052459717

Token 526: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.03589694947004318
    2. 'P' → logprob: -3.4108970165252686
    3. '[i' → logprob: -6.1608967781066895
    4. 'i' → logprob: -9.410897254943848
    5. '_E' → logprob: -11.535897254943848
    6. '_' → logprob: -11.910897254943848
    7. 'p' → logprob: -12.035897254943848
    8. '[' → logprob: -12.160897254943848
    9. ' E' → logprob: -12.660897254943848
    10. ',' → logprob: -12.785897254943848

Token 527: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011808603449026123
    2. '[' → logprob: -9.250118255615234
    3. ' [' → logprob: -10.875118255615234
    4. '   ' → logprob: -14.000118255615234
    5. 'i' → logprob: -14.875118255615234
    6. '[e' → logprob: -15.500118255615234
    7. '=' → logprob: -15.500118255615234
    8. '```' → logprob: -15.750118255615234
    9. '[I' → logprob: -15.750118255615234
    10. '\[' → logprob: -16.250118255615234

Token 528: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012583587318658829
    2. ' /=' → logprob: -5.0125837326049805
    3. '/=' → logprob: -6.1375837326049805
    4. ')' → logprob: -6.6375837326049805
    5. ']/' → logprob: -7.0125837326049805
    6. ' ]' → logprob: -7.5125837326049805
    7. '/' → logprob: -8.26258373260498
    8. ']=' → logprob: -9.01258373260498
    9. '=' → logprob: -9.13758373260498
    10. ' //' → logprob: -9.26258373260498

Token 529: ' /=' (ID: 37808)
  Prédit: ' /='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /=' → logprob: -0.42032599449157715
    2. '/=' → logprob: -1.1703259944915771
    3. '=' → logprob: -3.670325994491577
    4. ' =' → logprob: -5.670326232910156
    5. '//=' → logprob: -5.670326232910156
    6. ' //' → logprob: -8.795326232910156
    7. '*=' → logprob: -9.170326232910156
    8. '/' → logprob: -9.545326232910156
    9. '+=' → logprob: -10.045326232910156
    10. ' ' → logprob: -10.545326232910156

Token 530: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.15310683415737e-05
    2. ' p' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.62502098083496
    4. 'to' → logprob: -18.87502098083496
    5. 'float' → logprob: -19.62502098083496
    6. ' ' → logprob: -19.87502098083496
    7. ' to' → logprob: -22.62502098083496
    8. '
' → logprob: -22.62502098083496
    9. '1' → logprob: -22.62502098083496
    10. '       ' → logprob: -22.75002098083496

Token 531: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.9795445849886164e-05
    2. '[' → logprob: -10.875060081481934
    3. 'i' → logprob: -11.125060081481934
    4. 'p' → logprob: -11.250060081481934
    5. '<|end|>' → logprob: -12.750060081481934
    6. '[i' → logprob: -13.250060081481934
    7. '.' → logprob: -13.500060081481934
    8. '(' → logprob: -14.250060081481934
    9. 'float' → logprob: -14.625060081481934
    10. 'E' → logprob: -14.625060081481934

Token 532: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004329341172706336
    2. 'i' → logprob: -7.750432968139648
    3. '[' → logprob: -13.500432968139648
    4. ' i' → logprob: -15.000432968139648
    5. '(i' → logprob: -16.37543296813965
    6. '```' → logprob: -16.50043296813965
    7. 'a' → logprob: -16.87543296813965
    8. '{i' → logprob: -17.00043296813965
    9. 's' → logprob: -17.12543296813965
    10. '[a' → logprob: -17.25043296813965

Token 533: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011400405317544937
    2. ']
' → logprob: -4.88640022277832
    3. ' ]' → logprob: -6.01140022277832
    4. '       ' → logprob: -7.63640022277832
    5. '[i' → logprob: -8.13640022277832
    6. '[' → logprob: -8.26140022277832
    7. '   ' → logprob: -10.26140022277832
    8. ']+' → logprob: -10.26140022277832
    9. '+' → logprob: -10.63640022277832
    10. '           ' → logprob: -10.63640022277832

Token 534: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32338565587997437
    2. '            
' → logprob: -2.573385715484619
    3. ' 
' → logprob: -2.823385715484619
    4. '
' → logprob: -2.823385715484619
    5. '    
' → logprob: -3.823385715484619
    6. '<|end|>' → logprob: -3.823385715484619
    7. '        
' → logprob: -4.198385715484619
    8. '       ' → logprob: -4.698385715484619
    9. '  
' → logprob: -5.073385715484619
    10. '   
' → logprob: -6.823385715484619

Token 535: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00921136885881424
    2. '        
' → logprob: -5.759211540222168
    3. ' for' → logprob: -5.884211540222168
    4. '           ' → logprob: -6.384211540222168
    5. 'for' → logprob: -7.384211540222168
    6. '   ' → logprob: -8.009211540222168
    7. '	' → logprob: -9.259211540222168
    8. '            
' → logprob: -9.384211540222168
    9. '<|end|>' → logprob: -9.509211540222168
    10. '	   ' → logprob: -10.134211540222168

Token 536: ' e' (ID: 319)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2599153220653534
    2. ' for' → logprob: -1.6349153518676758
    3. '       ' → logprob: -3.509915351867676
    4. '   ' → logprob: -6.884915351867676
    5. 'p' → logprob: -8.009915351867676
    6. 'k' → logprob: -8.259915351867676
    7. 'next' → logprob: -8.259915351867676
    8. 'c' → logprob: -8.509915351867676
    9. 'q' → logprob: -8.884915351867676
    10. 'if' → logprob: -8.884915351867676

Token 537: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12079479545354843
    2. '=' → logprob: -2.8707947731018066
    3. ' for' → logprob: -3.8707947731018066
    4. '   ' → logprob: -4.745794773101807
    5. 'for' → logprob: -4.745794773101807
    6. ' +=' → logprob: -4.870794773101807
    7. '       ' → logprob: -5.995794773101807
    8. '[i' → logprob: -5.995794773101807
    9. 'lse' → logprob: -6.745794773101807
    10. '    ' → logprob: -7.495794773101807

Token 538: ' maintenant' (ID: 35735)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.019733630120754242
    2. 'to' → logprob: -4.144733428955078
    3. ' from' → logprob: -5.894733428955078
    4. 'from' → logprob: -7.769733428955078
    5. ' len' → logprob: -8.644733428955078
    6. 'len' → logprob: -9.019733428955078
    7. ' int' → logprob: -9.644733428955078
    8. '0' → logprob: -10.394733428955078
    9. 'int' → logprob: -10.519733428955078
    10. ' ' → logprob: -10.769733428955078

Token 539: ' l' (ID: 305)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11285904794931412
    2. ' to' → logprob: -2.237859010696411
    3. '   ' → logprob: -11.612858772277832
    4. 'int' → logprob: -11.612858772277832
    5. ' int' → logprob: -11.987858772277832
    6. 'from' → logprob: -12.487858772277832
    7. ' ' → logprob: -12.862858772277832
    8. ' a' → logprob: -13.987858772277832
    9. ' from' → logprob: -14.112858772277832
    10. ' ' → logprob: -14.362858772277832

Token 540: ''esp' (ID: 73244)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.07158098369836807
    2. ' to' → logprob: -2.6965808868408203
    3. 'E' → logprob: -6.94658088684082
    4. 'int' → logprob: -9.19658088684082
    5. '       ' → logprob: -9.32158088684082
    6. '   ' → logprob: -9.69658088684082
    7. 'e' → logprob: -9.94658088684082
    8. 'o' → logprob: -9.94658088684082
    9. ' E' → logprob: -10.07158088684082
    10. ' int' → logprob: -10.07158088684082

Token 541: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.32249656319618225
    2. 'ér' → logprob: -2.4474966526031494
    3. 'er' → logprob: -2.5724966526031494
    4. 'ect' → logprob: -3.1974966526031494
    5. '   ' → logprob: -3.8224966526031494
    6. 'é' → logprob: -4.57249641418457
    7. 'ected' → logprob: -4.82249641418457
    8. 'érence' → logprob: -5.07249641418457
    9. 'érience' → logprob: -5.19749641418457
    10. 'to' → logprob: -5.19749641418457

Token 542: ' depuis' (ID: 16277)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2523688077926636
    2. 'to' → logprob: -1.3773688077926636
    3. ' =' → logprob: -1.6273688077926636
    4. ' to' → logprob: -2.002368927001953
    5. '   ' → logprob: -2.252368927001953
    6. '=' → logprob: -4.627368927001953
    7. ' de' → logprob: -5.127368927001953
    8. 'de' → logprob: -5.627368927001953
    9. '(to' → logprob: -6.002368927001953
    10. ' of' → logprob: -6.627368927001953

Token 543: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3481658101081848
    2. ' i' → logprob: -1.59816575050354
    3. 'to' → logprob: -3.09816575050354
    4. ' to' → logprob: -3.22316575050354
    5. 'g' → logprob: -5.348165988922119
    6. ' g' → logprob: -6.723165988922119
    7. '   ' → logprob: -7.473165988922119
    8. '[i' → logprob: -9.348165512084961
    9. 'from' → logprob: -10.223165512084961
    10. '```' → logprob: -10.223165512084961

Token 544: ' rac' (ID: 12334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3181418478488922
    2. 'som' → logprob: -1.8181418180465698
    3. 'to' → logprob: -2.9431419372558594
    4. ' sommet' → logprob: -3.5681419372558594
    5. ' i' → logprob: -4.193141937255859
    6. '[i' → logprob: -5.318141937255859
    7. ' to' → logprob: -6.318141937255859
    8. 'point' → logprob: -6.943141937255859
    9. 'node' → logprob: -7.193141937255859
    10. 'from' → logprob: -7.193141937255859

Token 545: 'ine' (ID: 514)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.50938481092453
    2. 'ect' → logprob: -1.2593848705291748
    3. 'érance' → logprob: -2.759384870529175
    4. 'er' → logprob: -3.884384870529175
    5. 'to' → logprob: -4.134384632110596
    6. '[i' → logprob: -5.509384632110596
    7. '   ' → logprob: -6.134384632110596
    8. 'oir' → logprob: -6.634384632110596
    9. 'é' → logprob: -6.634384632110596
    10. 'ection' → logprob: -6.884384632110596

Token 546: ' jusqu' (ID: 21961)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1425108015537262
    2. '       ' → logprob: -2.5175108909606934
    3. '=' → logprob: -3.8925108909606934
    4. '   ' → logprob: -4.142510890960693
    5. '        
' → logprob: -5.142510890960693
    6. '    
' → logprob: -5.517510890960693
    7. '
' → logprob: -6.392510890960693
    8. ',' → logprob: -7.517510890960693
    9. ' to' → logprob: -7.517510890960693
    10. '    ' → logprob: -7.642510890960693

Token 547: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.6239300966262817
    2. 'à' → logprob: -1.7489300966262817
    3. 'i' → logprob: -2.498929977416992
    4. 'au' → logprob: -2.998929977416992
    5. ''au' → logprob: -3.123929977416992
    6. ' à' → logprob: -3.373929977416992
    7. ' i' → logprob: -3.498929977416992
    8. '[i' → logprob: -3.873929977416992
    9. '’à' → logprob: -4.623929977416992
    10. '   ' → logprob: -5.123929977416992

Token 548: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04865208640694618
    2. ' i' → logprob: -3.048652172088623
    3. 'g' → logprob: -9.923651695251465
    4. ' ' → logprob: -12.298651695251465
    5. '[i' → logprob: -13.173651695251465
    6. ' g' → logprob: -13.298651695251465
    7. 'le' → logprob: -13.423651695251465
    8. '   ' → logprob: -13.548651695251465
    9. ' le' → logprob: -13.673651695251465
    10. 'l' → logprob: -14.423651695251465

Token 549: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2757086455821991
    2. '        
' → logprob: -2.4007086753845215
    3. '
' → logprob: -2.9007086753845215
    4. '    
' → logprob: -3.1507086753845215
    5. '   ' → logprob: -3.4007086753845215
    6. ' 
' → logprob: -5.5257086753845215
    7. ' =' → logprob: -5.9007086753845215
    8. '	' → logprob: -6.1507086753845215
    9. '   
' → logprob: -6.5257086753845215
    10. ' ' → logprob: -7.0257086753845215

Token 550: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8187633752822876
    2. '       ' → logprob: -1.3187633752822876
    3. ' e' → logprob: -1.8187633752822876
    4. '	e' → logprob: -2.193763256072998
    5. 'e' → logprob: -4.193763256072998
    6. '    
' → logprob: -7.318763256072998
    7. '        
' → logprob: -7.818763256072998
    8. '	' → logprob: -8.193763732910156
    9. '
' → logprob: -8.568763732910156
    10. ',' → logprob: -8.693763732910156

Token 551: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.42324790358543396
    2. '       ' → logprob: -1.5482479333877563
    3. 'e' (adapté à ' e') → logprob: -2.048247814178467
    4. '   ' → logprob: -6.923247814178467
    5. ' ' → logprob: -6.923247814178467
    6. ' for' → logprob: -7.673247814178467
    7. '	e' → logprob: -7.673247814178467
    8. 'for' → logprob: -8.923248291015625
    9. '	' → logprob: -9.173248291015625
    10. '        
' → logprob: -9.298248291015625

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804286941885948
    2. '=' → logprob: -3.2880427837371826
    3. '   ' → logprob: -14.288043022155762
    4. ' ' → logprob: -14.913043022155762
    5. ',' → logprob: -15.663043022155762
    6. ' ' → logprob: -16.288042068481445
    7. '	' → logprob: -16.663042068481445
    8. '    ' → logprob: -16.913042068481445
    9. ' ,' → logprob: -17.788042068481445
    10. '       ' → logprob: -17.788042068481445

Token 553: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03371934965252876
    2. ' to' → logprob: -3.408719301223755
    3. '   ' → logprob: -9.658719062805176
    4. '       ' → logprob: -12.408719062805176
    5. ' ' → logprob: -12.908719062805176
    6. '  ' → logprob: -13.783719062805176
    7. '	to' → logprob: -14.283719062805176
    8. ' ' → logprob: -14.658719062805176
    9. '    ' → logprob: -14.783719062805176
    10. 'from' → logprob: -16.033720016479492

Token 554: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -6.988221684878226e-06
    2. ' E' → logprob: -12.750006675720215
    3. '[i' → logprob: -13.250006675720215
    4. 'P' → logprob: -13.625006675720215
    5. 'i' → logprob: -14.875006675720215
    6. '_E' → logprob: -15.375006675720215
    7. 'e' → logprob: -15.500006675720215
    8. '
' → logprob: -16.87500762939453
    9. ' ' → logprob: -17.50000762939453
    10. '(i' → logprob: -17.56250762939453

Token 555: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. ' [' → logprob: -13.875000953674316
    3. '[' → logprob: -15.125000953674316
    4. '   ' → logprob: -17.750001907348633
    5. '```' → logprob: -18.625001907348633
    6. 'i' → logprob: -18.875001907348633
    7. '\[' → logprob: -20.250001907348633
    8. '       ' → logprob: -20.375001907348633
    9. '[I' → logprob: -20.375001907348633
    10. '[j' → logprob: -20.500001907348633

Token 556: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16971059143543243
    2. ')
' → logprob: -2.044710636138916
    3. '   ' → logprob: -4.919710636138916
    4. ']' → logprob: -4.919710636138916
    5. '       ' → logprob: -5.169710636138916
    6. '
' → logprob: -6.044710636138916
    7. ']
' → logprob: -7.044710636138916
    8. ' )' → logprob: -7.044710636138916
    9. '+' → logprob: -7.169710636138916
    10. '    
' → logprob: -7.919710636138916

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06202661618590355
    2. 'for' → logprob: -3.4370265007019043
    3. ' for' → logprob: -3.9370265007019043
    4. '   ' → logprob: -5.562026500701904
    5. 'next' → logprob: -5.812026500701904
    6. 'count' → logprob: -8.437026977539062
    7. '```' → logprob: -8.562026977539062
    8. 'n' → logprob: -8.937026977539062
    9. '	for' → logprob: -9.187026977539062
    10. 'neighbors' → logprob: -9.187026977539062

Token 558: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.431182861328125
    2. '       ' → logprob: -1.181182861328125
    3. ' for' → logprob: -3.806182861328125
    4. 'c' → logprob: -4.806182861328125
    5. 'k' → logprob: -6.181182861328125
    6. 'l' → logprob: -6.556182861328125
    7. 'q' → logprob: -6.556182861328125
    8. 'cnt' → logprob: -6.681182861328125
    9. 'next' → logprob: -6.681182861328125
    10. 'd' → logprob: -6.806182861328125

Token 559: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6444715261459351
    2. 'c' → logprob: -1.144471526145935
    3. 'deg' → logprob: -3.2694716453552246
    4. 'l' → logprob: -3.6444716453552246
    5. 'd' → logprob: -3.8944716453552246
    6. 'k' → logprob: -4.019471645355225
    7. 'out' → logprob: -4.394471645355225
    8. 'neighbors' → logprob: -4.519471645355225
    9. 'sz' → logprob: -5.144471645355225
    10. 'cnt' → logprob: -5.394471645355225

Token 560: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6153579950332642
    2. 'en' → logprob: -1.7403579950332642
    3. ' for' → logprob: -2.1153578758239746
    4. 'for' → logprob: -2.6153578758239746
    5. '=' → logprob: -2.8653578758239746
    6. '=len' → logprob: -4.615357875823975
    7. 'ist' → logprob: -5.365357875823975
    8. '=[]' → logprob: -5.365357875823975
    9. 'e' → logprob: -5.615357875823975
    10. ' neighbors' → logprob: -6.490357875823975

Token 561: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029790766537189484
    2. ' len' → logprob: -3.5297908782958984
    3. '(len' → logprob: -10.529790878295898
    4. '=len' → logprob: -12.154790878295898
    5. '   ' → logprob: -12.529790878295898
    6. '	len' → logprob: -13.029790878295898
    7. '[len' → logprob: -13.654790878295898
    8. 'g' → logprob: -15.279790878295898
    9. 'en' → logprob: -15.279790878295898
    10. '       ' → logprob: -15.529790878295898

Token 562: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.73446003627032e-05
    2. ' len' → logprob: -9.250097274780273
    3. 'float' → logprob: -14.750097274780273
    4. '(len' → logprob: -15.250097274780273
    5. '0' → logprob: -16.250097274780273
    6. ' ' → logprob: -16.375097274780273
    7. 'l' → logprob: -16.875097274780273
    8. 'sum' → logprob: -17.000097274780273
    9. '[len' → logprob: -17.125097274780273
    10. '1' → logprob: -17.250097274780273

Token 563: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6752223372459412
    2. 'des' → logprob: -1.175222396850586
    3. 'de' → logprob: -2.800222396850586
    4. ' de' → logprob: -3.175222396850586
    5. '       ' → logprob: -3.800222396850586
    6. '   ' → logprob: -4.300222396850586
    7. '=len' → logprob: -4.675222396850586
    8. '_des' → logprob: -5.175222396850586
    9. ' =' → logprob: -5.300222396850586
    10. 'len' → logprob: -5.300222396850586

Token 564: ' voisins' (ID: 166720)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0003012617235071957
    2. ' len' → logprob: -8.750301361083984
    3. 'g' → logprob: -9.000301361083984
    4. '(len' → logprob: -10.875301361083984
    5. 'l' → logprob: -16.125301361083984
    6. '=len' → logprob: -16.125301361083984
    7. ' g' → logprob: -16.875301361083984
    8. 'le' → logprob: -17.500301361083984
    9. '	len' → logprob: -17.500301361083984
    10. ',len' → logprob: -17.875301361083984

Token 565: ' directs' (ID: 104758)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006204057484865189
    2. '=' → logprob: -5.381204128265381
    3. ' len' → logprob: -7.131204128265381
    4. '=len' → logprob: -7.506204128265381
    5. 'len' → logprob: -8.506203651428223
    6. '   ' → logprob: -11.631203651428223
    7. '(len' → logprob: -11.756203651428223
    8. ' g' → logprob: -13.006203651428223
    9. '       ' → logprob: -13.131203651428223
    10. ' ' → logprob: -13.131203651428223

Token 566: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022425765171647072
    2. '=' → logprob: -3.897425651550293
    3. '=len' → logprob: -6.897425651550293
    4. '   ' → logprob: -8.272425651550293
    5. 'len' → logprob: -8.647425651550293
    6. '       ' → logprob: -8.897425651550293
    7. 'l' → logprob: -9.397425651550293
    8. '=g' → logprob: -9.647425651550293
    9. 'g' → logprob: -10.147425651550293
    10. ' len' → logprob: -10.272425651550293

Token 567: ' i' (ID: 575)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.029768195003271103
    2. ' g' → logprob: -3.529768228530884
    3. 'i' → logprob: -11.154767990112305
    4. ' i' → logprob: -13.904767990112305
    5. '	g' → logprob: -14.279767990112305
    6. 'len' → logprob: -14.279767990112305
    7. '[g' → logprob: -15.154767990112305
    8. '   ' → logprob: -15.279767990112305
    9. ' ' → logprob: -15.404767990112305
    10. ' ' → logprob: -16.029767990112305

Token 568: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16204656660556793
    2. ' l' → logprob: -2.0370466709136963
    3. 'l' → logprob: -4.287046432495117
    4. '       ' → logprob: -5.787046432495117
    5. '=' → logprob: -6.412046432495117
    6. '
' → logprob: -7.912046432495117
    7. '   ' → logprob: -8.287046432495117
    8. '	l' → logprob: -10.287046432495117
    9. '=l' → logprob: -10.662046432495117
    10. ' 
' → logprob: -11.287046432495117

Token 569: 'nombre' (ID: 28576)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02324780821800232
    2. ' len' → logprob: -3.773247718811035
    3. 'l' → logprob: -13.273247718811035
    4. '   ' → logprob: -15.023247718811035
    5. '	len' → logprob: -16.39824867248535
    6. '(len' → logprob: -17.02324867248535
    7. '=len' → logprob: -17.27324867248535
    8. ' l' → logprob: -17.52324867248535
    9. ')' → logprob: -18.02324867248535
    10. 'length' → logprob: -18.02324867248535

Token 570: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8431857228279114
    2. '=' → logprob: -0.9681857228279114
    3. '(g' → logprob: -2.8431856632232666
    4. ' de' → logprob: -3.3431856632232666
    5. 'de' → logprob: -3.4681856632232666
    6. 'len' → logprob: -4.093185901641846
    7. ' des' → logprob: -4.218185901641846
    8. '=g' → logprob: -4.593185901641846
    9. '=len' → logprob: -5.093185901641846
    10. ' of' → logprob: -5.718185901641846

Token 571: ' sorties' (ID: 138519)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.10900410264730453
    2. 'len' → logprob: -2.359004020690918
    3. ' g' → logprob: -5.234004020690918
    4. ' len' → logprob: -5.859004020690918
    5. 'neighbors' → logprob: -7.609004020690918
    6. ' neighbors' → logprob: -10.734004020690918
    7. ' voisins' → logprob: -10.859004020690918
    8. '(g' → logprob: -12.484004020690918
    9. '```' → logprob: -12.734004020690918
    10. 'vertices' → logprob: -12.859004020690918

Token 572: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4254048466682434
    2. '[i' → logprob: -2.0504047870635986
    3. ')' → logprob: -2.4254047870635986
    4. 'g' → logprob: -3.1754047870635986
    5. ' de' → logprob: -4.175405025482178
    6. ' g' → logprob: -4.175405025482178
    7. '=' → logprob: -4.300405025482178
    8. '[' → logprob: -4.925405025482178
    9. '(i' → logprob: -5.300405025482178
    10. ' i' → logprob: -5.425405025482178

Token 573: ' i' (ID: 575)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3147929608821869
    2. ' g' → logprob: -1.3147929906845093
    3. ' i' → logprob: -7.189793109893799
    4. 'i' → logprob: -7.189793109893799
    5. ' ' → logprob: -11.93979263305664
    6. ' la' → logprob: -12.56479263305664
    7. '[i' → logprob: -13.06479263305664
    8. '	g' → logprob: -13.56479263305664
    9. ')' → logprob: -13.68979263305664
    10. '[g' → logprob: -14.06479263305664

Token 574: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01575126126408577
    2. ')
' → logprob: -4.640751361846924
    3. ' =' → logprob: -5.640751361846924
    4. '       ' → logprob: -6.890751361846924
    5. '   ' → logprob: -7.515751361846924
    6. ' )' → logprob: -8.390750885009766
    7. '=' → logprob: -8.640750885009766
    8. ']' → logprob: -9.265750885009766
    9. '```' → logprob: -9.640750885009766
    10. '[i' → logprob: -10.015750885009766

Token 575: '       ' (ID: 309)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5984510183334351
    2. '       ' → logprob: -1.348451018333435
    3. 'l' → logprob: -1.848451018333435
    4. '   ' → logprob: -3.4734511375427246
    5. '	l' → logprob: -6.223451137542725
    6. '```' → logprob: -9.348450660705566
    7. ',l' → logprob: -10.723450660705566
    8. '      ' → logprob: -10.848450660705566
    9. ' ' → logprob: -11.223450660705566
    10. '    ' → logprob: -11.223450660705566

Token 576: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0007150543970055878
    2. ' l' → logprob: -7.250715255737305
    3. '       ' → logprob: -12.250715255737305
    4. '   ' → logprob: -14.875715255737305
    5. '	l' → logprob: -18.125715255737305
    6. ' ' → logprob: -19.750715255737305
    7. ' ' → logprob: -19.875715255737305
    8. '           ' → logprob: -20.000715255737305
    9. '```' → logprob: -20.000715255737305
    10. '    ' → logprob: -20.875715255737305

Token 577: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759618878364563
    2. '=' → logprob: -0.8259618878364563
    3. '=len' → logprob: -10.70096206665039
    4. '=g' → logprob: -17.57596206665039
    5. '＝' → logprob: -18.07596206665039
    6. ' ' → logprob: -18.20096206665039
    7. ' ' → logprob: -18.70096206665039
    8. '	' → logprob: -18.82596206665039
    9. 'len' → logprob: -19.32596206665039
    10. ',' → logprob: -19.45096206665039

Token 578: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02975071594119072
    2. ' len' → logprob: -3.5297508239746094
    3. '(len' → logprob: -16.15475082397461
    4. '	len' → logprob: -16.77975082397461
    5. '   ' → logprob: -18.27975082397461
    6. ' ' → logprob: -18.52975082397461
    7. ' ' → logprob: -19.90475082397461
    8. '[len' → logprob: -20.52975082397461
    9. '=len' → logprob: -20.52975082397461
    10. ',len' → logprob: -21.02975082397461

Token 579: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.50001049041748
    3. 'g' → logprob: -14.87501049041748
    4. ' (' → logprob: -16.500011444091797
    5. '(s' → logprob: -18.875011444091797
    6. '(
' → logprob: -19.500011444091797
    7. '[g' → logprob: -20.000011444091797
    8. '(G' → logprob: -20.750011444091797
    9. ' g' → logprob: -20.875011444091797
    10. '(gl' → logprob: -21.125011444091797

Token 580: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.75
    3. '[' → logprob: -16.625
    4. ')' → logprob: -16.75
    5. 'i' → logprob: -17.875
    6. '[g' → logprob: -19.125
    7. ' i' → logprob: -19.5
    8. '(i' → logprob: -19.5
    9. ')i' → logprob: -20.875
    10. ')[' → logprob: -21.0

Token 581: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0389387384057045
    2. ')' → logprob: -3.2889387607574463
    3. '[i' → logprob: -7.288938522338867
    4. '])
' → logprob: -10.038938522338867
    5. ')])' → logprob: -10.288938522338867
    6. '))' → logprob: -10.538938522338867
    7. ' ])' → logprob: -10.538938522338867
    8. ')
' → logprob: -10.913938522338867
    9. '   ' → logprob: -11.538938522338867
    10. ']' → logprob: -11.538938522338867

Token 582: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7182037830352783
    2. '   ' → logprob: -1.7182037830352783
    3. 'for' → logprob: -2.3432037830352783
    4. ' 
' → logprob: -2.4682037830352783
    5. '    
' → logprob: -2.7182037830352783
    6. '
' → logprob: -2.9682037830352783
    7. '<|end|>' → logprob: -4.593203544616699
    8. '  
' → logprob: -4.843203544616699
    9. '   
' → logprob: -5.343203544616699
    10. '       ' → logprob: -5.843203544616699

Token 583: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6672546863555908
    2. 'for' → logprob: -1.6672546863555908
    3. ' for' → logprob: -1.7922546863555908
    4. 'if' → logprob: -3.417254686355591
    5. ' if' → logprob: -3.542254686355591
    6. '    
' → logprob: -3.792254686355591
    7. '
' → logprob: -3.792254686355591
    8. '       ' → logprob: -4.792254447937012
    9. ' 
' → logprob: -4.917254447937012
    10. '	for' → logprob: -5.667254447937012

Token 584: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029769811779260635
    2. 'for' → logprob: -3.5297698974609375
    3. ' if' → logprob: -11.029769897460938
    4. 'p' → logprob: -13.529769897460938
    5. ' for' → logprob: -13.779769897460938
    6. 'e' → logprob: -15.529769897460938
    7. 'i' → logprob: -15.904769897460938
    8. '   ' → logprob: -16.154769897460938
    9. 'import' → logprob: -17.029769897460938
    10. 'from' → logprob: -17.529769897460938

Token 585: ' chaque' (ID: 21194)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.3618665933609009
    2. ' j' → logprob: -1.3618665933609009
    3. 'j' → logprob: -1.7368665933609009
    4. 'v' → logprob: -1.9868665933609009
    5. ' b' → logprob: -2.6118664741516113
    6. 'b' → logprob: -2.9868664741516113
    7. 'a' → logprob: -4.736866474151611
    8. ' voisin' → logprob: -4.861866474151611
    9. 'neighbor' → logprob: -5.611866474151611
    10. ' a' → logprob: -5.736866474151611

Token 586: ' voisin' (ID: 145411)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7432882189750671
    2. 'j' → logprob: -0.8682882189750671
    3. ' v' → logprob: -3.368288278579712
    4. ' j' → logprob: -3.618288278579712
    5. 'x' → logprob: -3.743288278579712
    6. 'b' → logprob: -4.743288040161133
    7. 'u' → logprob: -5.868288040161133
    8. 'w' → logprob: -6.493288040161133
    9. 'c' → logprob: -6.993288040161133
    10. ' x' → logprob: -7.243288040161133

Token 587: ' j' (ID: 441)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19686885178089142
    2. ' j' → logprob: -2.696868896484375
    3. 'in' → logprob: -3.071868896484375
    4. 'j' → logprob: -3.946868896484375
    5. 'v' → logprob: -4.071868896484375
    6. ' v' → logprob: -4.196868896484375
    7. 'b' → logprob: -5.321868896484375
    8. ' b' → logprob: -5.571868896484375
    9. ' u' → logprob: -7.196868896484375
    10. 'x' → logprob: -7.196868896484375

Token 588: ' du' (ID: 1462)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04322800785303116
    2. 'in' → logprob: -3.1682279109954834
    3. ' ' → logprob: -9.418228149414062
    4. '	in' → logprob: -9.543228149414062
    5. ',' → logprob: -10.293228149414062
    6. ' ' → logprob: -11.668228149414062
    7. '  ' → logprob: -11.793228149414062
    8. '<|end|>' → logprob: -11.918228149414062
    9. ' ,' → logprob: -12.793228149414062
    10. ' j' → logprob: -13.043228149414062

Token 589: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6413505673408508
    2. 'g' → logprob: -1.391350507736206
    3. ' i' → logprob: -2.016350507736206
    4. ' g' → logprob: -2.391350507736206
    5. ' ' → logprob: -11.141350746154785
    6. ' voisin' → logprob: -12.016350746154785
    7. ' ' → logprob: -13.141350746154785
    8. '	g' → logprob: -13.141350746154785
    9. '[i' → logprob: -13.266350746154785
    10. '   ' → logprob: -13.391350746154785

Token 590: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868824541568756
    2. 'i' → logprob: -1.1368824243545532
    3. 'g' → logprob: -12.636882781982422
    4. '	i' → logprob: -13.011882781982422
    5. ' g' → logprob: -13.011882781982422
    6. '   ' → logprob: -13.511882781982422
    7. '[i' → logprob: -14.011882781982422
    8. ' ' → logprob: -14.386882781982422
    9. '```' → logprob: -15.261882781982422
    10. '_i' → logprob: -15.761882781982422

Token 591: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03091311641037464
    2. ':
' → logprob: -3.7809131145477295
    3. '   ' → logprob: -5.405913352966309
    4. '       ' → logprob: -6.530913352966309
    5. ',' → logprob: -6.530913352966309
    6. ' :' → logprob: -8.905913352966309
    7. ' :
' → logprob: -10.655913352966309
    8. '```' → logprob: -10.780913352966309
    9. '):
' → logprob: -11.780913352966309
    10. ' for' → logprob: -11.905913352966309

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2215689718723297
    2. '   ' → logprob: -2.221569061279297
    3. ':' → logprob: -2.596569061279297
    4. ' for' → logprob: -4.971569061279297
    5. ':
' → logprob: -5.346569061279297
    6. '        
' → logprob: -7.221569061279297
    7. '	for' → logprob: -7.721569061279297
    8. '	' → logprob: -7.846569061279297
    9. ',' → logprob: -7.971569061279297
    10. '```' → logprob: -8.096569061279297

Token 593: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2527332603931427
    2. 'for' (adapté à ' for') → logprob: -1.5027332305908203
    3. '	for' → logprob: -7.37773323059082
    4. '   ' → logprob: -8.75273323059082
    5. '       ' → logprob: -11.25273323059082
    6. '```' → logprob: -12.62773323059082
    7. ' 
' → logprob: -13.25273323059082
    8. '    
' → logprob: -14.50273323059082
    9. ' ' → logprob: -14.75273323059082
    10. '
' → logprob: -14.75273323059082

Token 594: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06196858361363411
    2. 'j' → logprob: -2.8119685649871826
    3. '	j' → logprob: -14.061968803405762
    4. ' ' → logprob: -16.061967849731445
    5. ' ' → logprob: -17.811967849731445
    6. '_j' → logprob: -18.936967849731445
    7. '$j' → logprob: -19.061967849731445
    8. '```' → logprob: -19.186967849731445
    9. '[j' → logprob: -19.936967849731445
    10. ',j' → logprob: -20.186967849731445

Token 595: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805502876639366
    2. 'in' → logprob: -3.288054943084717
    3. ' ' → logprob: -11.413055419921875
    4. '	in' → logprob: -13.663055419921875
    5. ')' → logprob: -15.038055419921875
    6. '_in' → logprob: -15.663055419921875
    7. ',' → logprob: -15.788055419921875
    8. '  ' → logprob: -15.788055419921875
    9. ' ' → logprob: -15.788055419921875
    10. 's' → logprob: -16.038055419921875

Token 596: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2519325911998749
    2. ' g' → logprob: -1.5019326210021973
    3. '	g' → logprob: -13.376932144165039
    4. ' ' → logprob: -14.126932144165039
    5. 'range' → logprob: -14.876932144165039
    6. ' ' → logprob: -15.751932144165039
    7. 's' → logprob: -15.876932144165039
    8. ')' → logprob: -16.50193214416504
    9. '   ' → logprob: -16.62693214416504
    10. 'in' → logprob: -16.62693214416504

Token 597: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[j' → logprob: -15.25
    3. ' [' → logprob: -17.375
    4. '[' → logprob: -18.0
    5. 'i' → logprob: -18.375
    6. '[
' → logprob: -20.5
    7. '```' → logprob: -20.625
    8. '{i' → logprob: -20.75
    9. '[g' → logprob: -20.75
    10. '   ' → logprob: -20.875

Token 598: ']:
' (ID: 22152)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008357713930308819
    2. ']:' → logprob: -5.133357524871826
    3. '][' → logprob: -6.508357524871826
    4. '):' → logprob: -8.383358001708984
    5. ']' → logprob: -8.383358001708984
    6. '].' → logprob: -8.883358001708984
    7. ']):' → logprob: -9.008358001708984
    8. ']:
' → logprob: -9.633358001708984
    9. '   ' → logprob: -9.758358001708984
    10. 'i' → logprob: -10.883358001708984

Token 599: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6935343146324158
    2. '           ' → logprob: -0.6935343146324158
    3. 'to' → logprob: -7.9435343742370605
    4. '   ' → logprob: -11.443533897399902
    5. ' to' → logprob: -11.693533897399902
    6. '```' → logprob: -12.193533897399902
    7. '               ' → logprob: -12.818533897399902
    8. '		' → logprob: -14.068533897399902
    9. 'if' → logprob: -14.193533897399902
    10. '	   ' → logprob: -14.443533897399902

Token 600: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2038823366165161
    2. 'to' → logprob: -2.0788822174072266
    3. ' to' → logprob: -3.2038822174072266
    4. '       ' → logprob: -4.078882217407227
    5. '               ' → logprob: -6.578882217407227
    6. ' if' → logprob: -9.078882217407227
    7. 'if' → logprob: -9.578882217407227
    8. '   ' → logprob: -9.703882217407227
    9. '	       ' → logprob: -10.703882217407227
    10. '            
' → logprob: -10.953882217407227

Token 601: ' On' (ID: 2160)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.014205586165189743
    2. '           ' → logprob: -4.264205455780029
    3. ' to' → logprob: -10.764205932617188
    4. 'from' → logprob: -11.264205932617188
    5. '   ' → logprob: -12.764205932617188
    6. 'if' → logprob: -13.389205932617188
    7. '       ' → logprob: -13.764205932617188
    8. 'p' → logprob: -14.014205932617188
    9. '               ' → logprob: -14.264205932617188
    10. 't' → logprob: -14.514205932617188

Token 602: ' ajoute' (ID: 91611)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0124563192948699
    2. ' to' → logprob: -4.76245641708374
    3. '           ' → logprob: -5.88745641708374
    4. 'from' → logprob: -7.51245641708374
    5. '       ' → logprob: -9.512455940246582
    6. ' +=' → logprob: -9.512455940246582
    7. ' from' → logprob: -9.762455940246582
    8. '   ' → logprob: -10.262455940246582
    9. '[to' → logprob: -10.262455940246582
    10. '.append' → logprob: -10.512455940246582

Token 603: ' à' (ID: 1221)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14013370871543884
    2. 'to' → logprob: -2.5151336193084717
    3. ' p' → logprob: -3.6401336193084717
    4. '1' → logprob: -4.265133857727051
    5. ' to' → logprob: -5.015133857727051
    6. 'e' → logprob: -6.390133857727051
    7. '(p' → logprob: -7.890133857727051
    8. ' (' → logprob: -8.51513385772705
    9. '           ' → logprob: -8.76513385772705
    10. '   ' → logprob: -8.76513385772705

Token 604: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.006099192891269922
    2. ' to' → logprob: -5.131099224090576
    3. 'p' → logprob: -9.381098747253418
    4. '   ' → logprob: -10.006098747253418
    5. ' p' → logprob: -10.756098747253418
    6. '           ' → logprob: -11.756098747253418
    7. 'from' → logprob: -12.131098747253418
    8. ' ' → logprob: -13.256098747253418
    9. '       ' → logprob: -13.756098747253418
    10. 'e' → logprob: -14.256098747253418

Token 605: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -3.128163257315464e-07
    2. ' P' → logprob: -16.0
    3. 'E' → logprob: -16.5
    4. '```' → logprob: -20.0
    5. 'p' → logprob: -20.5
    6. '`' → logprob: -20.5
    7. '[P' → logprob: -21.0
    8. '
' → logprob: -21.125
    9. 'to' → logprob: -21.125
    10. '   ' → logprob: -21.25

Token 606: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.4617256056226324e-05
    2. '[' → logprob: -12.375014305114746
    3. ' [' → logprob: -12.500014305114746
    4. '[i' → logprob: -13.000014305114746
    5. '           ' → logprob: -13.125014305114746
    6. 'j' → logprob: -14.000014305114746
    7. ' j' → logprob: -14.375014305114746
    8. '   ' → logprob: -14.625014305114746
    9. '```' → logprob: -15.500014305114746
    10. '	j' → logprob: -16.500015258789062

Token 607: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0656929016113281
    2. ']+=' → logprob: -1.5656929016113281
    3. '[to' → logprob: -1.6906929016113281
    4. ' +=' → logprob: -2.065692901611328
    5. 'to' → logprob: -3.065692901611328
    6. ' to' → logprob: -3.440692901611328
    7. ' ]' → logprob: -3.815692901611328
    8. '[i' → logprob: -4.940692901611328
    9. ')' → logprob: -5.065692901611328
    10. '[j' → logprob: -5.065692901611328

Token 608: ' la' (ID: 557)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06200297176837921
    2. '+=' → logprob: -2.8120028972625732
    3. ']+=' → logprob: -11.437003135681152
    4. 'to' → logprob: -11.562003135681152
    5. '           ' → logprob: -11.812003135681152
    6. ' to' → logprob: -13.062003135681152
    7. '+' → logprob: -13.437003135681152
    8. '               ' → logprob: -13.937003135681152
    9. '            ' → logprob: -14.187003135681152
    10. ' p' → logprob: -14.687003135681152

Token 609: ' fraction' (ID: 33763)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.015002907253801823
    2. 'to' → logprob: -4.890002727508545
    3. ' p' → logprob: -5.015002727508545
    4. ' to' → logprob: -7.265002727508545
    5. '   ' → logprob: -10.890003204345703
    6. '           ' → logprob: -12.515003204345703
    7. ' ' → logprob: -12.765003204345703
    8. '  ' → logprob: -13.390003204345703
    9. '    ' → logprob: -13.640003204345703
    10. '```' → logprob: -14.015003204345703

Token 610: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3888339400291443
    2. 'p' → logprob: -1.138833999633789
    3. '1' → logprob: -7.638833999633789
    4. 'to' → logprob: -7.638833999633789
    5. '(p' → logprob: -7.888833999633789
    6. ' to' → logprob: -8.388833999633789
    7. ' ' → logprob: -9.013833999633789
    8. ' (' → logprob: -9.138833999633789
    9. '           ' → logprob: -9.763833999633789
    10. '   ' → logprob: -10.138833999633789

Token 611: '/l' (ID: 16347)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.006805126089602709
    2. '/l' → logprob: -5.381804943084717
    3. ' /' → logprob: -6.131804943084717
    4. '/li' → logprob: -12.381805419921875
    5. '           ' → logprob: -13.381805419921875
    6. '/le' → logprob: -13.631805419921875
    7. 'l' → logprob: -14.881805419921875
    8. '/div' → logprob: -15.131805419921875
    9. '/(' → logprob: -15.256805419921875
    10. '*' → logprob: -15.506805419921875

Token 612: ' (' (ID: 350)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.024129927158355713
    2. '/l' → logprob: -4.774129867553711
    3. ' *' → logprob: -4.774129867553711
    4. '/' → logprob: -5.024129867553711
    5. '/p' → logprob: -9.399129867553711
    6. ' ' → logprob: -9.774129867553711
    7. '           ' → logprob: -9.774129867553711
    8. '*' → logprob: -9.899129867553711
    9. '/j' → logprob: -10.399129867553711
    10. ')' → logprob: -11.524129867553711

Token 613: 'ré' (ID: 22830)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6326391696929932
    2. 'p' → logprob: -0.7576391696929932
    3. ')' → logprob: -11.007638931274414
    4. '           ' → logprob: -12.382638931274414
    5. ' (' → logprob: -13.382638931274414
    6. ' )' → logprob: -13.507638931274414
    7. 'to' → logprob: -13.507638931274414
    8. '```' → logprob: -13.507638931274414
    9. '(p' → logprob: -13.632638931274414
    10. '   ' → logprob: -13.632638931274414

Token 614: 'partition' (ID: 67655)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.024914884939789772
    2. 'p' → logprob: -4.274914741516113
    3. 'partition' → logprob: -4.774914741516113
    4. '_part' → logprob: -7.524914741516113
    5. 'ponse' → logprob: -8.024914741516113
    6. 'par' → logprob: -8.149914741516113
    7. 'serv' → logprob: -8.274914741516113
    8. 'pand' → logprob: -9.024914741516113
    9. 'PART' → logprob: -9.399914741516113
    10. '/' → logprob: -9.899914741516113

Token 615: ' équ' (ID: 18899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.125317931175232
    2. ' du' → logprob: -1.375317931175232
    3. ' des' → logprob: -2.1253180503845215
    4. ' de' → logprob: -2.3753180503845215
    5. ' /' → logprob: -2.8753180503845215
    6. ' )' → logprob: -3.8753180503845215
    7. '           ' → logprob: -3.8753180503845215
    8. ' proportion' → logprob: -3.8753180503845215
    9. ' équ' → logprob: -4.0003180503845215
    10. ' ég' → logprob: -4.6253180503845215

Token 616: 'itable' (ID: 8375)
  Prédit: 'itable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itable' → logprob: -0.0008143932209350169
    2. 'ally' → logprob: -8.375814437866211
    3. 'ilibr' → logprob: -8.500814437866211
    4. 'ival' → logprob: -8.750814437866211
    5. '[' → logprob: -10.000814437866211
    6. 'a' → logprob: -10.250814437866211
    7. 'al' → logprob: -10.750814437866211
    8. '   ' → logprob: -10.875814437866211
    9. 'it' → logprob: -11.000814437866211
    10. 'ale' → logprob: -11.250814437866211

Token 617: ' entre' (ID: 3853)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5293552875518799
    2. ')' → logprob: -0.9043552875518799
    3. ' of' → logprob: -6.029355049133301
    4. ' de' → logprob: -6.404355049133301
    5. '           ' → logprob: -7.279355049133301
    6. ' des' → logprob: -7.404355049133301
    7. ' /' → logprob: -8.5293550491333
    8. '   ' → logprob: -8.9043550491333
    9. ' )
' → logprob: -9.4043550491333
    10. ' du' → logprob: -9.4043550491333

Token 618: ' voisins' (ID: 166720)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.534440279006958
    2. ' p' → logprob: -2.034440279006958
    3. ' l' → logprob: -2.534440279006958
    4. 'les' → logprob: -2.909440279006958
    5. 'l' → logprob: -3.034440279006958
    6. 'neighbors' → logprob: -3.159440279006958
    7. ' neighbors' → logprob: -3.784440279006958
    8. ' voisins' → logprob: -4.159440040588379
    9. 'p' → logprob: -4.659440040588379
    10. ' le' → logprob: -6.159440040588379

Token 619: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3883505165576935
    2. ' )' → logprob: -1.138350486755371
    3. ' *' → logprob: -7.263350486755371
    4. ' )
' → logprob: -8.263350486755371
    5. '           ' → logprob: -8.388350486755371
    6. ' /' → logprob: -8.763350486755371
    7. ')
' → logprob: -9.638350486755371
    8. '*' → logprob: -11.388350486755371
    9. '   ' → logprob: -11.513350486755371
    10. ' ' → logprob: -11.763350486755371

Token 620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09156288206577301
    2. ' to' → logprob: -3.2165629863739014
    3. ' *' → logprob: -4.091562747955322
    4. ' /' → logprob: -4.091562747955322
    5. 'to' → logprob: -4.716562747955322
    6. '               ' → logprob: -6.466562747955322
    7. '*' → logprob: -6.966562747955322
    8. '(to' → logprob: -7.216562747955322
    9. '            ' → logprob: -8.21656322479248
    10. '/to' → logprob: -8.46656322479248

Token 621: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.13217152655124664
    2. ' to' → logprob: -2.132171630859375
    3. '           ' → logprob: -5.257171630859375
    4. '               ' → logprob: -11.382171630859375
    5. '   ' → logprob: -12.632171630859375
    6. '            ' → logprob: -13.257171630859375
    7. '                   ' → logprob: -13.757171630859375
    8. '       ' → logprob: -14.132171630859375
    9. '            
' → logprob: -15.382171630859375
    10. '                       ' → logprob: -15.632171630859375

Token 622: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: 0.0
    2. ' P' → logprob: -17.375
    3. 'p' → logprob: -17.625
    4. '_P' → logprob: -19.375
    5. '	P' → logprob: -21.0
    6. '[P' → logprob: -21.25
    7. 'П' → logprob: -21.625
    8. '`' → logprob: -21.625
    9. '[' → logprob: -21.8125
    10. '.P' → logprob: -22.1875

Token 623: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. ' [' → logprob: -17.625
    4. '[i' → logprob: -19.125
    5. '[js' → logprob: -19.5
    6. '```' → logprob: -19.5
    7. '[
' → logprob: -20.875
    8. '	j' → logprob: -21.125
    9. 'j' → logprob: -21.125
    10. ')[' → logprob: -21.625

Token 624: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3934295177459717
    2. ']+=' → logprob: -1.1434295177459717
    3. '+=' → logprob: -5.268429756164551
    4. ']+' → logprob: -7.518429756164551
    5. ')' → logprob: -7.768429756164551
    6. ' +=' → logprob: -8.26842975616455
    7. ' ]' → logprob: -9.01842975616455
    8. '+' → logprob: -10.39342975616455
    9. '   ' → logprob: -12.76842975616455
    10. '+]' → logprob: -13.26842975616455

Token 625: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011752246646210551
    2. ' +=' → logprob: -6.751175403594971
    3. '+=(' → logprob: -12.876174926757812
    4. ']+=' → logprob: -13.501174926757812
    5. '+' → logprob: -14.376174926757812
    6. '=' → logprob: -14.626174926757812
    7. '+='' → logprob: -17.751174926757812
    8. '+="' → logprob: -18.001174926757812
    9. '   ' → logprob: -18.126174926757812
    10. '    ' → logprob: -18.751174926757812

Token 626: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06196802109479904
    2. ' p' → logprob: -2.8119680881500244
    3. '   ' → logprob: -15.561967849731445
    4. '	p' → logprob: -16.186967849731445
    5. '(p' → logprob: -16.561967849731445
    6. ' ' → logprob: -17.311967849731445
    7. ' ' → logprob: -17.561967849731445
    8. '0' → logprob: -17.561967849731445
    9. ' (' → logprob: -18.311967849731445
    10. '1' → logprob: -18.686967849731445

Token 627: '/l' (ID: 16347)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.39923611283302307
    2. ' /' → logprob: -1.1492360830307007
    3. '/l' → logprob: -4.39923620223999
    4. '/li' → logprob: -14.024235725402832
    5. '/j' → logprob: -14.524235725402832
    6. ' ' → logprob: -15.024235725402832
    7. '/L' → logprob: -16.02423667907715
    8. '/
' → logprob: -16.02423667907715
    9. '/k' → logprob: -16.39923667907715
    10. '/div' → logprob: -16.39923667907715

Token 628: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010592726175673306
    2. '            
' → logprob: -9.875105857849121
    3. '       ' → logprob: -11.500105857849121
    4. '          ' → logprob: -11.750105857849121
    5. '
' → logprob: -12.000105857849121
    6. 'to' → logprob: -12.250105857849121
    7. '               ' → logprob: -12.250105857849121
    8. ' 
' → logprob: -12.750105857849121
    9. ' to' → logprob: -12.875105857849121
    10. '            ' → logprob: -13.000105857849121

Token 629: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015129582025110722
    2. 'to' → logprob: -6.5015130043029785
    3. ' to' → logprob: -11.75151252746582
    4. '       ' → logprob: -13.37651252746582
    5. '#' → logprob: -14.87651252746582
    6. '          ' → logprob: -15.12651252746582
    7. '               ' → logprob: -15.50151252746582
    8. '   ' → logprob: -15.62651252746582
    9. '		' → logprob: -15.87651252746582
    10. '            
' → logprob: -16.87651252746582

Token 630: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.576854407787323
    2. 'to' → logprob: -0.826854407787323
    3. ' to' → logprob: -7.076854228973389
    4. '       ' → logprob: -9.951854705810547
    5. '   ' → logprob: -11.326854705810547
    6. '               ' → logprob: -12.451854705810547
    7. '          ' → logprob: -13.076854705810547
    8. ' ' → logprob: -13.451854705810547
    9. '            ' → logprob: -14.076854705810547
    10. '        ' → logprob: -14.576854705810547

Token 631: ' On' (ID: 2160)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -3.128163257315464e-07
    2. ' to' → logprob: -15.625
    3. '           ' → logprob: -18.625
    4. '   ' → logprob: -18.625
    5. '               ' → logprob: -21.25
    6. '```' → logprob: -21.75
    7. ' ' → logprob: -21.875
    8. '  ' → logprob: -22.125
    9. '       ' → logprob: -22.375
    10. 'from' → logprob: -23.125

Token 632: ' ajoute' (ID: 91611)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00545584736391902
    2. ' to' → logprob: -5.25545597076416
    3. '[to' → logprob: -9.75545597076416
    4. '+=' → logprob: -10.00545597076416
    5. ' +=' → logprob: -10.25545597076416
    6. '
' → logprob: -11.63045597076416
    7. '+' → logprob: -11.75545597076416
    8. '.' → logprob: -11.88045597076416
    9. '           ' → logprob: -12.00545597076416
    10. '   ' → logprob: -12.13045597076416

Token 633: ' à' (ID: 1221)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.094732366502285
    2. ' to' → logprob: -3.2197322845458984
    3. 'e' → logprob: -3.3447322845458984
    4. '(e' → logprob: -5.469732284545898
    5. ' (' → logprob: -5.594732284545898
    6. '(to' → logprob: -5.719732284545898
    7. ' e' → logprob: -6.094732284545898
    8. '(p' → logprob: -7.094732284545898
    9. '(' → logprob: -7.844732284545898
    10. 'p' → logprob: -8.844732284545898

Token 634: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -9.662937372922897e-05
    2. ' to' → logprob: -9.250096321105957
    3. 'e' → logprob: -14.875096321105957
    4. '(to' → logprob: -16.875097274780273
    5. 'from' → logprob: -17.750097274780273
    6. '   ' → logprob: -18.000097274780273
    7. ' ' → logprob: -18.250097274780273
    8. ' e' → logprob: -18.875097274780273
    9. '  ' → logprob: -19.625097274780273
    10. 't' → logprob: -19.750097274780273

Token 635: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -3.292907877039397e-06
    2. 'P' → logprob: -13.00000286102295
    3. ' E' → logprob: -14.12500286102295
    4. 'e' → logprob: -15.87500286102295
    5. 'to' → logprob: -17.125003814697266
    6. '[E' → logprob: -17.375003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '_E' → logprob: -18.875003814697266
    9. '(E' → logprob: -19.000003814697266
    10. ' ' → logprob: -19.125003814697266

Token 636: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2664456789934775e-06
    2. ' [' → logprob: -14.375000953674316
    3. 'j' → logprob: -16.125001907348633
    4. '[i' → logprob: -16.125001907348633
    5. 'to' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '
' → logprob: -16.750001907348633
    8. '```' → logprob: -16.875001907348633
    9. '[' → logprob: -17.125001907348633
    10. 'import' → logprob: -18.500001907348633

Token 637: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19375400245189667
    2. '+=' → logprob: -1.943753957748413
    3. '+=(' → logprob: -4.318754196166992
    4. ']+=' → logprob: -4.568754196166992
    5. ']' → logprob: -5.693754196166992
    6. ')' → logprob: -6.818754196166992
    7. ',' → logprob: -6.943754196166992
    8. ' (' → logprob: -6.943754196166992
    9. '=' → logprob: -7.443754196166992
    10. '(to' → logprob: -7.443754196166992

Token 638: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1788197755813599
    2. 'to' → logprob: -1.1788197755813599
    3. ' to' → logprob: -1.6788197755813599
    4. 'e' → logprob: -2.5538196563720703
    5. ' e' → logprob: -3.1788196563720703
    6. '(e' → logprob: -3.6788196563720703
    7. '(to' → logprob: -3.8038196563720703
    8. '(p' → logprob: -3.9288196563720703
    9. ' +=' → logprob: -5.55381965637207
    10. ' p' → logprob: -6.30381965637207

Token 639: ' valeur' (ID: 41664)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5667614936828613
    2. 'p' → logprob: -1.6917614936828613
    3. '(p' → logprob: -1.9417614936828613
    4. 'to' → logprob: -2.8167614936828613
    5. '(e' → logprob: -3.1917614936828613
    6. '(' → logprob: -6.566761493682861
    7. '(to' → logprob: -6.566761493682861
    8. ' (' → logprob: -7.441761493682861
    9. ' e' → logprob: -7.941761493682861
    10. ' p' → logprob: -9.316761016845703

Token 640: ' de' (ID: 334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0379735231399536
    2. '(e' → logprob: -1.2879735231399536
    3. ' (' → logprob: -1.6629735231399536
    4. 'to' → logprob: -2.537973403930664
    5. '(p' → logprob: -2.912973403930664
    6. ' e' → logprob: -3.412973403930664
    7. '(to' → logprob: -5.412973403930664
    8. 'p' → logprob: -5.662973403930664
    9. ' to' → logprob: -5.662973403930664
    10. '(' → logprob: -6.662973403930664

Token 641: ' l' (ID: 305)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07203364372253418
    2. '(e' → logprob: -2.822033643722534
    3. 'to' → logprob: -5.072033882141113
    4. ' e' → logprob: -6.447033882141113
    5. '(to' → logprob: -7.322033882141113
    6. ' (' → logprob: -7.447033882141113
    7. '(p' → logprob: -7.822033882141113
    8. 'p' → logprob: -8.697033882141113
    9. '(' → logprob: -8.947033882141113
    10. ' to' → logprob: -10.322033882141113

Token 642: ''esp' (ID: 73244)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.503445565700531
    2. 'e' → logprob: -1.5034456253051758
    3. '*(' → logprob: -2.378445625305176
    4. '*' → logprob: -4.128445625305176
    5. '[i' → logprob: -4.128445625305176
    6. ' +' → logprob: -4.128445625305176
    7. 'en' → logprob: -4.628445625305176
    8. 'to' → logprob: -5.128445625305176
    9. '[e' → logprob: -5.878445625305176
    10. '(e' → logprob: -6.003445625305176

Token 643: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.008538812398910522
    2. 'ér' → logprob: -6.133538722991943
    3. '+' → logprob: -6.258538722991943
    4. 'acement' → logprob: -6.883538722991943
    5. 'er' → logprob: -7.008538722991943
    6. 'érence' → logprob: -7.633538722991943
    7. 'ace' → logprob: -7.758538722991943
    8. 'o' → logprob: -8.008539199829102
    9. 'èce' → logprob: -8.383539199829102
    10. 'a' → logprob: -9.008539199829102

Token 644: ' totale' (ID: 52898)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2038811892271042
    2. '+' → logprob: -2.70388126373291
    3. 'to' → logprob: -3.32888126373291
    4. ' e' → logprob: -3.57888126373291
    5. ' +' → logprob: -3.70388126373291
    6. '[i' → logprob: -4.57888126373291
    7. '[j' → logprob: -4.82888126373291
    8. ' to' → logprob: -6.07888126373291
    9. '(e' → logprob: -6.20388126373291
    10. ' (' → logprob: -6.45388126373291

Token 645: ' du' (ID: 1462)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4366438090801239
    2. ' +' → logprob: -2.0616438388824463
    3. '*' → logprob: -2.4366438388824463
    4. '*(' → logprob: -2.9366438388824463
    5. '(e' → logprob: -3.5616438388824463
    6. ' *' → logprob: -3.6866438388824463
    7. 'e' → logprob: -3.9366438388824463
    8. 'to' → logprob: -5.061643600463867
    9. ' e' → logprob: -6.186643600463867
    10. ' (' → logprob: -6.936643600463867

Token 646: ' pré' (ID: 9424)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.695809006690979
    2. 'e' → logprob: -0.945809006690979
    3. 'che' → logprob: -2.3208088874816895
    4. 'i' → logprob: -4.6958088874816895
    5. 'path' → logprob: -7.0708088874816895
    6. '[i' → logprob: -7.3208088874816895
    7. 'som' → logprob: -7.3208088874816895
    8. 'node' → logprob: -7.4458088874816895
    9. '(i' → logprob: -7.5708088874816895
    10. 'from' → logprob: -7.6958088874816895

Token 647: 'de' (ID: 613)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.893265962600708
    2. 'oint' → logprob: -1.643265962600708
    3. 'som' → logprob: -2.143265962600708
    4. 'che' → logprob: -3.268265962600708
    5. 's' → logprob: -3.393265962600708
    6. 'sent' → logprob: -3.518265962600708
    7. 'énom' → logprob: -3.643265962600708
    8. 'mier' → logprob: -3.893265962600708
    9. 'os' → logprob: -4.143265724182129
    10. 'édé' → logprob: -4.643265724182129

Token 648: 'cesse' (ID: 120787)
  Prédit: 'cesse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cesse' → logprob: -0.030971022322773933
    2. 'cess' → logprob: -4.155971050262451
    3. 'c' → logprob: -4.405971050262451
    4. 'ss' → logprob: -7.155971050262451
    5. 'cesso' → logprob: -8.155970573425293
    6. 'j' → logprob: -8.530970573425293
    7. 'ces' → logprob: -8.530970573425293
    8. 'i' → logprob: -9.030970573425293
    9. 'cession' → logprob: -9.030970573425293
    10. 'placement' → logprob: -9.155970573425293

Token 649: 'ur' (ID: 330)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18279299139976501
    2. 'cesse' → logprob: -1.8077930212020874
    3. 'ss' → logprob: -6.307793140411377
    4. 'c' → logprob: -6.932793140411377
    5. 'cess' → logprob: -9.682792663574219
    6. '(s' → logprob: -10.057792663574219
    7. '\s' → logprob: -10.432792663574219
    8. 'ccess' → logprob: -11.182792663574219
    9. 'ces' → logprob: -11.307792663574219
    10. '1' → logprob: -11.557792663574219

Token 650: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6350274085998535
    2. 'e' → logprob: -1.2600274085998535
    3. '(i' → logprob: -2.7600274085998535
    4. '+' → logprob: -2.7600274085998535
    5. ' +' → logprob: -4.2600274085998535
    6. 'to' → logprob: -4.5100274085998535
    7. ' plus' → logprob: -4.6350274085998535
    8. 'i' → logprob: -4.7600274085998535
    9. 'plus' → logprob: -5.2600274085998535
    10. ' e' → logprob: -6.1350274085998535

Token 651: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034238334745168686
    2. 'e' → logprob: -3.409238338470459
    3. ' ' → logprob: -8.1592378616333
    4. ' e' → logprob: -8.2842378616333
    5. '   ' → logprob: -11.1592378616333
    6. '(e' → logprob: -11.6592378616333
    7. '(' → logprob: -12.0342378616333
    8. '+' → logprob: -12.1592378616333
    9. '```' → logprob: -12.6592378616333
    10. '       ' → logprob: -13.2842378616333

Token 652: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004290064796805382
    2. 'e' → logprob: -5.5042901039123535
    3. ' ' → logprob: -9.504289627075195
    4. 'to' → logprob: -9.879289627075195
    5. '(' → logprob: -11.004289627075195
    6. '   ' → logprob: -11.129289627075195
    7. '+' → logprob: -11.754289627075195
    8. ' e' → logprob: -11.754289627075195
    9. '(e' → logprob: -12.254289627075195
    10. 'from' → logprob: -12.629289627075195

Token 653: ' (' (ID: 350)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8134469985961914
    2. '*' → logprob: -1.4384469985961914
    3. '<|end|>' → logprob: -2.3134469985961914
    4. ' +' → logprob: -2.6884469985961914
    5. '+' → logprob: -2.6884469985961914
    6. '           ' → logprob: -2.9384469985961914
    7. 'to' → logprob: -4.563446998596191
    8. '<|end|>' → logprob: -5.688446998596191
    9. '            ' → logprob: -6.063446998596191
    10. '          ' → logprob: -6.313446998596191

Token 654: 'co' (ID: 1191)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3206009864807129
    2. '1' → logprob: -1.570600986480713
    3. ' e' → logprob: -2.820600986480713
    4. ' ' → logprob: -6.070600986480713
    5. ')' → logprob: -6.320600986480713
    6. '+' → logprob: -7.445600986480713
    7. 'to' → logprob: -7.445600986480713
    8. ' )' → logprob: -7.695600986480713
    9. ' +' → logprob: -8.320600509643555
    10. ' (' → logprob: -8.945600509643555

Token 655: 'ût' (ID: 24581)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13292503356933594
    2. ' +' → logprob: -3.257925033569336
    3. ')' → logprob: -3.632925033569336
    4. ' +=' → logprob: -4.382925033569336
    5. '+l' → logprob: -4.632925033569336
    6. 'n' → logprob: -5.132925033569336
    7. '+)' → logprob: -5.132925033569336
    8. 'ur' → logprob: -5.507925033569336
    9. ' )' → logprob: -5.757925033569336
    10. 'space' → logprob: -6.382925033569336

Token 656: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04309259355068207
    2. ' )' → logprob: -3.7930924892425537
    3. '<|end|>' → logprob: -4.418092727661133
    4. '           ' → logprob: -5.668092727661133
    5. '')' → logprob: -7.418092727661133
    6. '<|end|>' → logprob: -7.543092727661133
    7. '```' → logprob: -7.668092727661133
    8. '   ' → logprob: -8.043092727661133
    9. '")' → logprob: -8.418092727661133
    10. '`)' → logprob: -8.793092727661133

Token 657: ''un' (ID: 9788)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.32964372634887695
    2. ''un' → logprob: -2.329643726348877
    3. 'ét' → logprob: -2.704643726348877
    4. 'che' → logprob: -3.579643726348877
    5. 'une' → logprob: -3.829643726348877
    6. ''ét' → logprob: -3.829643726348877
    7. ' déplacement' → logprob: -4.829643726348877
    8. 'pas' → logprob: -5.579643726348877
    9. 'e' → logprob: -5.829643726348877
    10. '   ' → logprob: -5.954643726348877

Token 658: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.07420357316732407
    2. 'che' → logprob: -3.3242034912109375
    3. 'traj' → logprob: -4.6992034912109375
    4. ')' → logprob: -5.1992034912109375
    5. ' pas' → logprob: -5.3242034912109375
    6. 'arc' → logprob: -5.5742034912109375
    7. 'ar' → logprob: -5.5742034912109375
    8. ' déplacement' → logprob: -6.6992034912109375
    9. ' trajet' → logprob: -6.8242034912109375
    10. '+' → logprob: -7.3242034912109375

Token 659: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07038351893424988
    2. ' )' → logprob: -2.6953835487365723
    3. '`)' → logprob: -9.195383071899414
    4. '           ' → logprob: -9.570383071899414
    5. ' ' → logprob: -10.320383071899414
    6. '')' → logprob: -10.445383071899414
    7. '+' → logprob: -10.820383071899414
    8. ')
' → logprob: -10.820383071899414
    9. ' +' → logprob: -10.820383071899414
    10. ')*' → logprob: -10.945383071899414

Token 660: ' pond' (ID: 42367)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6608055233955383
    2. 'e' → logprob: -1.4108054637908936
    3. ' e' → logprob: -2.2858054637908936
    4. ' to' → logprob: -2.4108054637908936
    5. '           ' → logprob: -3.6608054637908936
    6. '+' → logprob: -4.910805702209473
    7. 'p' → logprob: -5.410805702209473
    8. ' p' → logprob: -5.910805702209473
    9. ' +' → logprob: -6.160805702209473
    10. '            ' → logprob: -7.285805702209473

Token 661: 'érée' (ID: 113219)
  Prédit: 'éré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.005308704450726509
    2. 'érée' → logprob: -5.630308628082275
    3. 'ération' → logprob: -6.755308628082275
    4. 'érant' → logprob: -7.880308628082275
    5. 'ér' → logprob: -10.255309104919434
    6. 'érés' → logprob: -10.755309104919434
    7. '=' → logprob: -11.255309104919434
    8. 'érer' → logprob: -11.255309104919434
    9. 'ré' → logprob: -11.255309104919434
    10. '[' → logprob: -12.005309104919434

Token 662: ' par' (ID: 686)
  Prédit: '*p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*p' → logprob: -0.8873596787452698
    2. ' *' → logprob: -1.137359619140625
    3. '*' → logprob: -1.887359619140625
    4. '           ' → logprob: -2.887359619140625
    5. ' p' → logprob: -4.262359619140625
    6. '(p' → logprob: -4.387359619140625
    7. ' /' → logprob: -4.887359619140625
    8. 'p' → logprob: -5.137359619140625
    9. ' par' → logprob: -5.137359619140625
    10. 'par' → logprob: -6.137359619140625

Token 663: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004089085850864649
    2. ' p' → logprob: -5.504088878631592
    3. '           ' → logprob: -12.62908935546875
    4. '(p' → logprob: -12.62908935546875
    5. '   ' → logprob: -13.87908935546875
    6. ' (' → logprob: -14.37908935546875
    7. '          ' → logprob: -15.50408935546875
    8. ' ' → logprob: -15.50408935546875
    9. '1' → logprob: -15.62908935546875
    10. 'to' → logprob: -15.75408935546875

Token 664: '/l' (ID: 16347)
  Prédit: '/l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/l' → logprob: -0.004857884719967842
    2. '/' → logprob: -5.504858016967773
    3. ' /' → logprob: -7.254858016967773
    4. '/j' → logprob: -9.879858016967773
    5. '/li' → logprob: -12.004858016967773
    6. '/(' → logprob: -12.129858016967773
    7. '*' → logprob: -13.129858016967773
    8. '*l' → logprob: -14.004858016967773
    9. '           ' → logprob: -14.129858016967773
    10. '   ' → logprob: -14.254858016967773

Token 665: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5290976166725159
    2. 'to' → logprob: -1.154097557067871
    3. ' *' → logprob: -2.779097557067871
    4. '*(' → logprob: -4.279097557067871
    5. '           ' → logprob: -4.404097557067871
    6. '(to' → logprob: -5.404097557067871
    7. '+' → logprob: -6.654097557067871
    8. '*p' → logprob: -7.404097557067871
    9. ' to' → logprob: -7.779097557067871
    10. '```' → logprob: -9.279097557067871

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6792668700218201
    2. 'to' → logprob: -0.9292668700218201
    3. ' to' → logprob: -2.679266929626465
    4. ' *' → logprob: -3.804266929626465
    5. '*' → logprob: -5.179266929626465
    6. ' +' → logprob: -6.929266929626465
    7. '+' → logprob: -8.429266929626465
    8. '   ' → logprob: -9.054266929626465
    9. '(to' → logprob: -9.054266929626465
    10. '       ' → logprob: -10.054266929626465

Token 667: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -5.512236498361744e-07
    2. ' to' → logprob: -14.875000953674316
    3. '           ' → logprob: -15.625000953674316
    4. '               ' → logprob: -18.0
    5. '   ' → logprob: -19.875
    6. '                   ' → logprob: -20.0
    7. '```' → logprob: -20.625
    8. '       ' → logprob: -21.0
    9. '(to' → logprob: -21.5
    10. '                       ' → logprob: -22.375

Token 668: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.000111768240458332
    2. 'P' → logprob: -9.12511157989502
    3. '_E' → logprob: -14.37511157989502
    4. '[j' → logprob: -14.37511157989502
    5. ' E' → logprob: -14.50011157989502
    6. 'e' → logprob: -15.50011157989502
    7. 'p' → logprob: -16.187612533569336
    8. 'j' → logprob: -16.437612533569336
    9. 'Е' → logprob: -16.500112533569336
    10. '[E' → logprob: -16.625112533569336

Token 669: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.070975071750581e-05
    2. '[' → logprob: -10.750030517578125
    3. '[i' → logprob: -11.750030517578125
    4. 'j' → logprob: -14.500030517578125
    5. ' [' → logprob: -14.875030517578125
    6. '   ' → logprob: -15.375030517578125
    7. '```' → logprob: -16.500030517578125
    8. '
' → logprob: -16.875030517578125
    9. ',j' → logprob: -17.750030517578125
    10. '           ' → logprob: -17.750030517578125

Token 670: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4146386682987213
    2. ']+=' → logprob: -1.164638638496399
    3. ' +=' → logprob: -4.039638519287109
    4. '           ' → logprob: -5.789638519287109
    5. '+=(' → logprob: -5.789638519287109
    6. ']' → logprob: -5.914638519287109
    7. ']+' → logprob: -8.16463851928711
    8. '+' → logprob: -8.28963851928711
    9. '   ' → logprob: -8.78963851928711
    10. '[j' → logprob: -9.03963851928711

Token 671: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001719923340715468
    2. ' +=' → logprob: -6.501719951629639
    3. '+=(' → logprob: -8.50171947479248
    4. ']+=' → logprob: -11.75171947479248
    5. '+' → logprob: -12.25171947479248
    6. '   ' → logprob: -14.37671947479248
    7. '=' → logprob: -14.62671947479248
    8. '           ' → logprob: -15.00171947479248
    9. '+='' → logprob: -15.50171947479248
    10. '       ' → logprob: -16.626720428466797

Token 672: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.023698803037405014
    2. '(e' → logprob: -4.398698806762695
    3. ' (' → logprob: -5.398698806762695
    4. 'e' → logprob: -5.648698806762695
    5. 'p' → logprob: -5.898698806762695
    6. '(' → logprob: -8.273698806762695
    7. '((' → logprob: -10.398698806762695
    8. ' e' → logprob: -11.273698806762695
    9. ' p' → logprob: -11.648698806762695
    10. '   ' → logprob: -11.773698806762695

Token 673: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0014728414826095104
    2. '(e' → logprob: -6.6264729499816895
    3. 'p' → logprob: -9.376472473144531
    4. ' e' → logprob: -10.001472473144531
    5. ' (' → logprob: -12.126472473144531
    6. '(p' → logprob: -12.501472473144531
    7. '(' → logprob: -13.126472473144531
    8. '1' → logprob: -13.251472473144531
    9. '   ' → logprob: -13.376472473144531
    10. 'to' → logprob: -13.626472473144531

Token 674: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006086157634854317
    2. ' +' → logprob: -5.631086349487305
    3. '+p' → logprob: -6.006086349487305
    4. '+l' → logprob: -11.881086349487305
    5. 'p' → logprob: -12.006086349487305
    6. '+j' → logprob: -13.631086349487305
    7. '   ' → logprob: -14.131086349487305
    8. '+
' → logprob: -14.256086349487305
    9. '+(' → logprob: -14.631086349487305
    10. '+c' → logprob: -15.131086349487305

Token 675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.125017166137695
    3. '(' → logprob: -13.875017166137695
    4. 'p' → logprob: -14.375017166137695
    5. '   ' → logprob: -14.500017166137695
    6. '```' → logprob: -16.500017166137695
    7. '  ' → logprob: -16.750017166137695
    8. '           ' → logprob: -16.875017166137695
    9. 'l' → logprob: -17.000017166137695
    10. ' (' → logprob: -17.125017166137695

Token 676: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.42938920855522156
    2. ')' → logprob: -1.179389238357544
    3. ')*(' → logprob: -3.179389238357544
    4. '*p' → logprob: -11.179388999938965
    5. ')p' → logprob: -14.554388999938965
    6. ' )' → logprob: -15.054388999938965
    7. '   ' → logprob: -15.179388999938965
    8. '*)' → logprob: -15.429388999938965
    9. '*(' → logprob: -15.554388999938965
    10. ')**' → logprob: -15.554388999938965

Token 677: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011085312813520432
    2. '(p' → logprob: -4.511085510253906
    3. ' p' → logprob: -10.511085510253906
    4. '(' → logprob: -12.261085510253906
    5. ' (' → logprob: -12.261085510253906
    6. '   ' → logprob: -15.011085510253906
    7. '	p' → logprob: -15.761085510253906
    8. '```' → logprob: -16.511085510253906
    9. '\' → logprob: -16.761085510253906
    10. '(
' → logprob: -16.886085510253906

Token 678: '/l' (ID: 16347)
  Prédit: '/l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/l' → logprob: -0.023434262722730637
    2. '/' → logprob: -3.7734341621398926
    3. ' /' → logprob: -8.64843463897705
    4. '/li' → logprob: -11.64843463897705
    5. '/j' → logprob: -12.77343463897705
    6. '/L' → logprob: -15.02343463897705
    7. '/le' → logprob: -15.14843463897705
    8. '/n' → logprob: -15.77343463897705
    9. '/sl' → logprob: -15.89843463897705
    10. '/(' → logprob: -16.023433685302734

Token 679: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 680: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11615289002656937
    2. 'from' → logprob: -2.6161530017852783
    3. '#' → logprob: -3.4911530017852783
    4. '    
' → logprob: -6.366152763366699
    5. '```' → logprob: -6.741152763366699
    6. 'print' → logprob: -6.866152763366699
    7. '
' → logprob: -7.366152763366699
    8. 'for' → logprob: -7.616152763366699
    9. 'if' → logprob: -8.7411527633667
    10. ' #' → logprob: -8.7411527633667

Token 681: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02338593825697899
    2. '#' (adapté à ' #') → logprob: -3.773386001586914
    3. '   ' → logprob: -9.023386001586914
    4. ' for' → logprob: -11.523386001586914
    5. '```' → logprob: -11.773386001586914
    6. '
' → logprob: -14.023386001586914
    7. 'from' → logprob: -14.523386001586914
    8. '    
' → logprob: -14.898386001586914
    9. '``' → logprob: -15.898386001586914
    10. ' #' → logprob: -16.398386001586914

Token 682: ' Deux' (ID: 92086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023701714351773262
    2. '#' → logprob: -4.1487016677856445
    3. 'from' → logprob: -4.8987016677856445
    4. 'to' → logprob: -9.898701667785645
    5. 'res' → logprob: -10.023701667785645
    6. '
' → logprob: -11.898701667785645
    7. 'e' → logprob: -11.898701667785645
    8. 'rev' → logprob: -11.898701667785645
    9. 'pour' → logprob: -12.148701667785645
    10. 'result' → logprob: -12.148701667785645

Token 683: 'ième' (ID: 41126)
  Prédit: 'ième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ième' → logprob: -0.07209819555282593
    2. 'e' → logprob: -3.8220982551574707
    3. 'ème' → logprob: -4.197098255157471
    4. '#' → logprob: -4.197098255157471
    5. 'i' → logprob: -5.072098255157471
    6. 'for' → logprob: -5.197098255157471
    7. 'ieme' → logprob: -6.197098255157471
    8. 'ié' → logprob: -6.322098255157471
    9. 'nd' → logprob: -8.072097778320312
    10. ' for' → logprob: -8.072097778320312

Token 684: ' passage' (ID: 26368)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08438477665185928
    2. ' boucle' → logprob: -2.8343846797943115
    3. ' for' → logprob: -4.459384918212891
    4. 'bou' → logprob: -4.834384918212891
    5. '#' → logprob: -6.334384918212891
    6. 'part' → logprob: -8.70938491821289
    7. 'loop' → logprob: -8.83438491821289
    8. 'pass' → logprob: -8.83438491821289
    9. ' bou' → logprob: -8.83438491821289
    10. 'phase' → logprob: -9.58438491821289

Token 685: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004657256882637739
    2. ' for' → logprob: -5.50465726852417
    3. '   ' → logprob: -7.62965726852417
    4. '
' → logprob: -9.879656791687012
    5. 'pour' → logprob: -10.754656791687012
    6. '#' → logprob: -11.004656791687012
    7. ' pour' → logprob: -13.879656791687012
    8. '    
' → logprob: -14.004656791687012
    9. ':' → logprob: -14.629656791687012
    10. 'from' → logprob: -15.254656791687012

Token 686: ' cette' (ID: 7696)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005081483628600836
    2. '#' → logprob: -5.380081653594971
    3. ' for' → logprob: -8.505081176757812
    4. 'from' → logprob: -9.255081176757812
    5. 'range' → logprob: -9.380081176757812
    6. 'pour' → logprob: -10.005081176757812
    7. '
' → logprob: -10.880081176757812
    8. '   ' → logprob: -12.130081176757812
    9. ' #' → logprob: -12.630081176757812
    10. 'de' → logprob: -13.255081176757812

Token 687: ' fois' (ID: 14697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13596905767917633
    2. ' fois' → logprob: -2.8859691619873047
    3. '#' → logprob: -3.5109691619873047
    4. 'fois' → logprob: -3.8859691619873047
    5. ' for' → logprob: -4.010969161987305
    6. 'fo' → logprob: -7.760969161987305
    7. ' #' → logprob: -8.010969161987305
    8. ' boucle' → logprob: -8.010969161987305
    9. 'part' → logprob: -8.260969161987305
    10. '   ' → logprob: -8.385969161987305

Token 688: ' à' (ID: 1221)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7399073243141174
    2. 'en' → logprob: -1.2399072647094727
    3. 'pour' → logprob: -2.2399072647094727
    4. 'for' → logprob: -2.7399072647094727
    5. ' en' → logprob: -4.114907264709473
    6. ' de' → logprob: -4.614907264709473
    7. ' pour' → logprob: -4.739907264709473
    8. '#' → logprob: -4.864907264709473
    9. 'à' → logprob: -5.364907264709473
    10. 'range' → logprob: -5.489907264709473

Token 689: ' reb' (ID: 16286)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7741460800170898
    2. 're' → logprob: -1.6491460800170898
    3. 'range' → logprob: -1.6491460800170898
    4. 'reverse' → logprob: -2.39914608001709
    5. 'reb' → logprob: -3.02414608001709
    6. '#' → logprob: -5.39914608001709
    7. 'rev' → logprob: -5.39914608001709
    8. 'n' → logprob: -6.64914608001709
    9. ' recul' → logprob: -7.27414608001709
    10. 'part' → logprob: -7.27414608001709

Token 690: 'ours' (ID: 2327)
  Prédit: 'ours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.007591956295073032
    2. 'our' → logprob: -5.507591724395752
    3. 'rous' → logprob: -5.757591724395752
    4. 'bours' → logprob: -10.13259220123291
    5. '(' → logprob: -10.13259220123291
    6. 'rose' → logprob: -10.50759220123291
    7. 'ourse' → logprob: -10.50759220123291
    8. 'ou' → logprob: -10.63259220123291
    9. 'ois' → logprob: -10.88259220123291
    10. 'r' → logprob: -10.88259220123291

Token 691: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011132476851344109
    2. ' for' → logprob: -4.51113224029541
    3. '
' → logprob: -9.88613224029541
    4. '   ' → logprob: -11.01113224029541
    5. ':' → logprob: -12.26113224029541
    6. 'pour' → logprob: -12.51113224029541
    7. 'from' → logprob: -12.76113224029541
    8. ',' → logprob: -12.88613224029541
    9. '#' → logprob: -13.88613224029541
    10. '    
' → logprob: -14.26113224029541

Token 692: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011141546070575714
    2. ' for' → logprob: -4.511141777038574
    3. '
' → logprob: -9.886141777038574
    4. '   ' → logprob: -10.761141777038574
    5. 'range' → logprob: -11.261141777038574
    6. 'from' → logprob: -12.261141777038574
    7. '```' → logprob: -13.261141777038574
    8. '#' → logprob: -13.386141777038574
    9. ' range' → logprob: -14.886141777038574
    10. 'pour' → logprob: -15.761141777038574

Token 693: ' calcul' (ID: 7559)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2074661254882812
    2. 'i' → logprob: -1.5824661254882812
    3. ' i' → logprob: -1.7074661254882812
    4. 'range' → logprob: -2.0824661254882812
    5. ' for' → logprob: -2.4574661254882812
    6. ' range' → logprob: -3.0824661254882812
    7. ' calcul' → logprob: -3.4574661254882812
    8. 'calcul' → logprob: -3.8324661254882812
    9. '#' → logprob: -6.582466125488281
    10. '_' → logprob: -7.082466125488281

Token 694: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00012773419439326972
    2. '#' → logprob: -9.125127792358398
    3. '_er' → logprob: -12.250127792358398
    4. 'ler' → logprob: -12.875127792358398
    5. 'uer' → logprob: -13.500127792358398
    6. 'e' → logprob: -13.625127792358398
    7. 'uler' → logprob: -13.625127792358398
    8. '
' → logprob: -14.125127792358398
    9. 'r' → logprob: -14.125127792358398
    10. '```' → logprob: -14.250127792358398

Token 695: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.389592170715332
    2. 'range' → logprob: -1.639592170715332
    3. ' i' → logprob: -2.139592170715332
    4. 'l' → logprob: -2.139592170715332
    5. ' range' → logprob: -2.639592170715332
    6. ' la' → logprob: -2.764592170715332
    7. ' l' → logprob: -3.014592170715332
    8. 'la' → logprob: -3.014592170715332
    9. 'for' → logprob: -3.514592170715332
    10. 'from' → logprob: -4.014592170715332

Token 696: ''esp' (ID: 73244)
  Prédit: ''esp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''esp' → logprob: -0.10911836475133896
    2. 'es' → logprob: -2.8591184616088867
    3. 'a' → logprob: -4.109118461608887
    4. 'esp' → logprob: -4.609118461608887
    5. ''' → logprob: -4.984118461608887
    6. 'e' → logprob: -4.984118461608887
    7. 'from' → logprob: -5.859118461608887
    8. ''es' → logprob: -6.859118461608887
    9. '’esp' → logprob: -7.609118461608887
    10. ''att' → logprob: -8.359118461608887

Token 697: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.5952035188674927
    2. 'ér' → logprob: -0.8452035188674927
    3. 'érences' → logprob: -4.595203399658203
    4. 'érence' → logprob: -6.220203399658203
    5. 'é' → logprob: -6.345203399658203
    6. 'érience' → logprob: -6.970203399658203
    7. 'érer' → logprob: -7.595203399658203
    8. '#' → logprob: -7.657703399658203
    9. 'er' → logprob: -7.782703399658203
    10. 'oir' → logprob: -8.470203399658203

Token 698: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0023054813500493765
    2. 'from' → logprob: -6.752305507659912
    3. ' for' → logprob: -7.127305507659912
    4. 'pour' → logprob: -9.002305030822754
    5. 'de' → logprob: -9.252305030822754
    6. 'range' → logprob: -9.627305030822754
    7. '(range' → logprob: -11.377305030822754
    8. '   ' → logprob: -11.627305030822754
    9. '(' → logprob: -11.877305030822754
    10. '
' → logprob: -12.252305030822754

Token 699: ' sous' (ID: 14487)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4244548976421356
    2. 'che' → logprob: -2.174454927444458
    3. 'nombre' → logprob: -2.424454927444458
    4. 'som' → logprob: -2.674454927444458
    5. ' sommet' → logprob: -3.424454927444458
    6. 'temps' → logprob: -4.549454689025879
    7. 'for' → logprob: -4.799454689025879
    8. 'plus' → logprob: -5.549454689025879
    9. 'point' → logprob: -5.549454689025879
    10. ' from' → logprob: -5.924454689025879

Token 700: '-gr' (ID: 18511)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.576687216758728
    2. 'graph' → logprob: -0.951687216758728
    3. 'ar' → logprob: -3.2016873359680176
    4. 'che' → logprob: -5.326687335968018
    5. '_gr' → logprob: -5.951687335968018
    6. 'g' → logprob: -6.451687335968018
    7. 'graphs' → logprob: -7.201687335968018
    8. 'gra' → logprob: -7.826687335968018
    9. 'som' → logprob: -8.32668685913086
    10. '_graph' → logprob: -8.45168685913086

Token 701: 'aphe' (ID: 98856)
  Prédit: 'aphe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.009934457018971443
    2. 'aph' → logprob: -4.634934425354004
    3. 'ap' → logprob: -8.884934425354004
    4. 'phe' → logprob: -11.759934425354004
    5. 'apho' → logprob: -11.759934425354004
    6. 'afe' → logprob: -11.884934425354004
    7. 'ade' → logprob: -12.884934425354004
    8. 'af' → logprob: -13.134934425354004
    9. 'ophe' → logprob: -13.134934425354004
    10. '#' → logprob: -13.384934425354004

Token 702: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018131057731807232
    2. ' for' → logprob: -6.626812934875488
    3. 'from' → logprob: -8.751812934875488
    4. 'pour' → logprob: -8.751812934875488
    5. '   ' → logprob: -9.126812934875488
    6. 'de' → logprob: -10.251812934875488
    7. '
' → logprob: -11.126812934875488
    8. ' pour' → logprob: -13.251812934875488
    9. 'range' → logprob: -13.251812934875488
    10. ',' → logprob: -13.251812934875488

Token 703: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.011748610995709896
    2. ' partir' → logprob: -4.636748790740967
    3. 'sens' → logprob: -7.386748790740967
    4. '#' → logprob: -7.761748790740967
    5. 'l' → logprob: -8.011748313903809
    6. 'termin' → logprob: -9.761748313903809
    7. 'i' → logprob: -9.886748313903809
    8. 'reb' → logprob: -9.886748313903809
    9. 'from' → logprob: -9.886748313903809
    10. 'dep' → logprob: -10.386748313903809

Token 704: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5996384620666504
    2. '(n' → logprob: -1.7246384620666504
    3. '   ' → logprob: -2.7246384620666504
    4. 'des' → logprob: -2.9746384620666504
    5. 'range' → logprob: -2.9746384620666504
    6. ' de' → logprob: -3.5996384620666504
    7. 'du' → logprob: -3.5996384620666504
    8. ' du' → logprob: -3.8496384620666504
    9. ' des' → logprob: -4.72463846206665
    10. ' range' → logprob: -5.34963846206665

Token 705: ' chaque' (ID: 21194)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15802223980426788
    2. 'i' → logprob: -2.408022165298462
    3. 'range' → logprob: -3.908022165298462
    4. 'from' → logprob: -4.408022403717041
    5. '#' → logprob: -5.158022403717041
    6. 'for' → logprob: -5.533022403717041
    7. 'j' → logprob: -5.658022403717041
    8. '(n' → logprob: -6.408022403717041
    9. 'l' → logprob: -6.533022403717041
    10. '[n' → logprob: -6.658022403717041

Token 706: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.2034033089876175
    2. 'i' → logprob: -1.828403353691101
    3. ' sommet' → logprob: -4.953403472900391
    4. 'no' → logprob: -5.078403472900391
    5. '```' → logprob: -5.828403472900391
    6. 'n' → logprob: -5.953403472900391
    7. 's' → logprob: -5.953403472900391
    8. 'for' → logprob: -7.328403472900391
    9. '#' → logprob: -7.828403472900391
    10. 'indice' → logprob: -8.45340347290039

Token 707: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04163951426744461
    2. ' for' → logprob: -3.291639566421509
    3. '   ' → logprob: -5.66663932800293
    4. '
' → logprob: -9.04163932800293
    5. '```' → logprob: -11.91663932800293
    6. ',' → logprob: -13.16663932800293
    7. '	for' → logprob: -13.29163932800293
    8. '    
' → logprob: -13.66663932800293
    9. 'from' → logprob: -14.29163932800293
    10. '``' → logprob: -14.79163932800293

Token 708: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.93710636976175e-05
    2. ' for' → logprob: -9.250099182128906
    3. 'range' → logprob: -13.500099182128906
    4. '```' → logprob: -13.500099182128906
    5. 'from' → logprob: -15.750099182128906
    6. ')' → logprob: -16.125099182128906
    7. '
' → logprob: -16.125099182128906
    8. '   ' → logprob: -16.500099182128906
    9. '#' → logprob: -17.500099182128906
    10. ']' → logprob: -18.375099182128906

Token 709: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.45848218582978e-06
    2. '```' → logprob: -13.50000286102295
    3. ' for' → logprob: -13.87500286102295
    4. '   ' → logprob: -16.750001907348633
    5. 'from' → logprob: -16.750001907348633
    6. '
' → logprob: -17.250001907348633
    7. 'range' → logprob: -17.875001907348633
    8. '``' → logprob: -19.875001907348633
    9. '    
' → logprob: -20.250001907348633
    10. '#' → logprob: -20.375001907348633

Token 710: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004000396002084017
    2. ' i' → logprob: -5.629000186920166
    3. 'k' → logprob: -8.879000663757324
    4. 'v' → logprob: -9.504000663757324
    5. 'u' → logprob: -9.629000663757324
    6. 'j' → logprob: -9.754000663757324
    7. 'x' → logprob: -10.504000663757324
    8. 's' → logprob: -11.879000663757324
    9. 'rev' → logprob: -12.004000663757324
    10. 'r' → logprob: -12.254000663757324

Token 711: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03365030884742737
    2. 'in' → logprob: -3.4086503982543945
    3. 'd' → logprob: -13.783650398254395
    4. 'reverse' → logprob: -14.283650398254395
    5. '	in' → logprob: -14.408650398254395
    6. ' ' → logprob: -14.408650398254395
    7. 'range' → logprob: -14.658650398254395
    8. 'de' → logprob: -14.908650398254395
    9. 'n' → logprob: -15.283650398254395
    10. 'In' → logprob: -15.408650398254395

Token 712: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012980925384908915
    2. ' range' → logprob: -7.126297950744629
    3. 're' → logprob: -7.626297950744629
    4. ' reversed' → logprob: -12.251297950744629
    5. 'reverse' → logprob: -14.126297950744629
    6. 'n' → logprob: -15.001297950744629
    7. '   ' → logprob: -16.251298904418945
    8. '(range' → logprob: -17.126298904418945
    9. ' ' → logprob: -17.626298904418945
    10. 'r' → logprob: -17.626298904418945

Token 713: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012201975914649665
    2. '(range' → logprob: -9.3751220703125
    3. 'range' → logprob: -11.0001220703125
    4. '(' → logprob: -11.0001220703125
    5. 'n' → logprob: -12.7501220703125
    6. ' (' → logprob: -15.6251220703125
    7. ' range' → logprob: -15.6251220703125
    8. '(re' → logprob: -15.7501220703125
    9. '(reverse' → logprob: -16.0001220703125
    10. '((' → logprob: -16.1251220703125

Token 714: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.5649528298527e-05
    2. ' -' → logprob: -9.500075340270996
    3. '(n' → logprob: -14.875075340270996
    4. '1' → logprob: -15.750075340270996
    5. 'n' → logprob: -16.250076293945312
    6. '()-' → logprob: -17.000076293945312
    7. '2' → logprob: -17.625076293945312
    8. '-n' → logprob: -17.750076293945312
    9. ')-' → logprob: -18.250076293945312
    10. '   ' → logprob: -18.500076293945312

Token 715: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0699549987912178
    2. '1' → logprob: -2.6949551105499268
    3. '3' → logprob: -11.694954872131348
    4. ' ' → logprob: -12.194954872131348
    5. '0' → logprob: -13.569954872131348
    6. '   ' → logprob: -13.632454872131348
    7. '```' → logprob: -13.757454872131348
    8. '-' → logprob: -14.819954872131348
    9. '
' → logprob: -15.069954872131348
    10. '  ' → logprob: -16.569955825805664

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043233807082287967
    2. ',-' → logprob: -8.125432014465332
    3. ' ,' → logprob: -9.250432014465332
    4. '-' → logprob: -10.375432014465332
    5. '   ' → logprob: -12.250432014465332
    6. ' -' → logprob: -13.250432014465332
    7. 'in' → logprob: -14.000432014465332
    8. '```' → logprob: -15.000432014465332
    9. ' ,-' → logprob: -15.625432014465332
    10. ',
' → logprob: -15.750432014465332

Token 717: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.176947600673884e-05
    2. ' -' → logprob: -10.750021934509277
    3. '0' → logprob: -16.12502098083496
    4. '   ' → logprob: -16.50002098083496
    5. '	' → logprob: -19.62502098083496
    6. '  ' → logprob: -19.75002098083496
    7. '-
' → logprob: -20.00002098083496
    8. '    ' → logprob: -20.87502098083496
    9. '
' → logprob: -21.00002098083496
    10. '     ' → logprob: -21.12502098083496

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -14.375000953674316
    3. ' ' → logprob: -16.625
    4. '   ' → logprob: -18.0
    5. '-' → logprob: -18.625
    6. '0' → logprob: -18.875
    7. ' -' → logprob: -19.25
    8. '```' → logprob: -19.25
    9. '１' → logprob: -19.8125
    10. '
' → logprob: -19.8125

Token 719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046296243090182543
    2. '-' → logprob: -8.000462532043457
    3. ',-' → logprob: -9.000462532043457
    4. ' ,' → logprob: -13.000462532043457
    5. '   ' → logprob: -14.125462532043457
    6. ' -' → logprob: -14.500462532043457
    7. '```' → logprob: -14.750462532043457
    8. '-,' → logprob: -16.000463485717773
    9. ',
' → logprob: -16.625463485717773
    10. ' ,-' → logprob: -16.625463485717773

Token 720: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003357006062287837
    2. ' -' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.750335693359375
    4. '```' → logprob: -17.375335693359375
    5. ' ' → logprob: -18.375335693359375
    6. '	' → logprob: -19.000335693359375
    7. '  ' → logprob: -19.000335693359375
    8. '-
' → logprob: -19.500335693359375
    9. '−' → logprob: -19.875335693359375
    10. '):
' → logprob: -20.000335693359375

Token 721: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -19.625
    3. ' ' → logprob: -19.625
    4. '-' → logprob: -20.0
    5. '１' → logprob: -21.625
    6. '   ' → logprob: -21.625
    7. '```' → logprob: -21.625
    8. '
' → logprob: -21.75
    9. '3' → logprob: -23.25
    10. '۱' → logprob: -23.375

Token 722: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47462284564971924
    2. '):
' → logprob: -0.9746228456497192
    3. '):
' → logprob: -7.59962272644043
    4. '-' → logprob: -10.97462272644043
    5. ':' → logprob: -11.22462272644043
    6. '   ' → logprob: -11.47462272644043
    7. '```' → logprob: -14.34962272644043
    8. '}:' → logprob: -14.47462272644043
    9. ',' → logprob: -14.59962272644043
    10. ']:' → logprob: -14.84962272644043

Token 723: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5359182953834534
    2. '       ' → logprob: -0.9109182953834534
    3. 'l' → logprob: -5.035918235778809
    4. '```' → logprob: -5.910918235778809
    5. ' l' → logprob: -6.285918235778809
    6. ' if' → logprob: -7.285918235778809
    7. 'if' → logprob: -7.535918235778809
    8. '	l' → logprob: -9.535918235778809
    9. '#' → logprob: -9.785918235778809
    10. 's' → logprob: -10.035918235778809

Token 724: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001242017257027328
    2. 'if' → logprob: -7.001242160797119
    3. 'for' → logprob: -8.751241683959961
    4. 'k' → logprob: -10.001241683959961
    5. 'li' → logprob: -10.626241683959961
    6. 'c' → logprob: -11.001241683959961
    7. '#' (adapté à ' #') → logprob: -11.376241683959961
    8. 'lc' → logprob: -11.501241683959961
    9. 'from' → logprob: -11.751241683959961
    10. '   ' → logprob: -12.126241683959961

Token 725: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0014399961801245809
    2. 'if' → logprob: -7.251440048217773
    3. 'li' → logprob: -8.251440048217773
    4. 'for' → logprob: -9.376440048217773
    5. 'c' → logprob: -9.751440048217773
    6. 'k' → logprob: -9.876440048217773
    7. 'out' → logprob: -10.001440048217773
    8. 's' → logprob: -10.001440048217773
    9. 'e' → logprob: -10.501440048217773
    10. 'neighbors' → logprob: -10.876440048217773

Token 726: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759596228599548
    2. ' =' → logprob: -0.8259596228599548
    3. '=len' → logprob: -10.825959205627441
    4. '=l' → logprob: -15.575959205627441
    5. '=
' → logprob: -16.450960159301758
    6. '=int' → logprob: -16.700960159301758
    7. '	' → logprob: -17.700960159301758
    8. ' ' → logprob: -17.950960159301758
    9. '＝' → logprob: -17.950960159301758
    10. '   ' → logprob: -18.075960159301758

Token 727: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014166799373924732
    2. ' len' → logprob: -4.264166831970215
    3. '   ' → logprob: -13.514166831970215
    4. '=len' → logprob: -14.264166831970215
    5. '(len' → logprob: -14.514166831970215
    6. '	len' → logprob: -15.514166831970215
    7. ' ' → logprob: -15.889166831970215
    8. '       ' → logprob: -16.1391658782959
    9. '[len' → logprob: -16.2641658782959
    10. 'l' → logprob: -16.6391658782959

Token 728: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.339278580620885e-06
    2. ' len' → logprob: -13.000001907348633
    3. 'l' → logprob: -17.125001907348633
    4. 'le' → logprob: -17.625001907348633
    5. 'length' → logprob: -18.250001907348633
    6. 'leng' → logprob: -18.500001907348633
    7. '(len' → logprob: -18.750001907348633
    8. '[len' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.000001907348633
    10. '	len' → logprob: -19.250001907348633

Token 729: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019420109689235687
    2. ' =' → logprob: -4.019420146942139
    3. '=len' → logprob: -7.519420146942139
    4. '=g' → logprob: -8.14441967010498
    5. 'len' → logprob: -8.26941967010498
    6. '(g' → logprob: -9.39441967010498
    7. 'g' → logprob: -10.01941967010498
    8. 'd' → logprob: -11.39441967010498
    9. 'of' → logprob: -11.64441967010498
    10. 's' → logprob: -11.64441967010498

Token 730: ''ar' (ID: 54307)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.17137767374515533
    2. 'g' → logprob: -1.9213776588439941
    3. 'len' → logprob: -5.421377658843994
    4. 'neighbors' → logprob: -6.421377658843994
    5. 'out' → logprob: -6.546377658843994
    6. ' g' → logprob: -6.796377658843994
    7. 'sort' → logprob: -6.796377658843994
    8. '[g' → logprob: -7.796377658843994
    9. 's' → logprob: -7.921377658843994
    10. ' voisins' → logprob: -9.046378135681152

Token 731: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.014330034144222736
    2. 'êtes' → logprob: -4.38932991027832
    3. 'c' → logprob: -6.38932991027832
    4. 'g' → logprob: -9.88932991027832
    5. 'ètes' → logprob: -11.01432991027832
    6. 'gs' → logprob: -11.63932991027832
    7. 'êts' → logprob: -11.76432991027832
    8. 'tes' → logprob: -12.01432991027832
    9. 'r' → logprob: -12.13932991027832
    10. 'etes' → logprob: -12.13932991027832

Token 732: ' sort' (ID: 4506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0264952182769775
    2. '(g' → logprob: -1.0264952182769775
    3. '=' → logprob: -1.5264952182769775
    4. 'sort' → logprob: -3.2764952182769775
    5. '=g' → logprob: -4.401494979858398
    6. 'out' → logprob: -5.276494979858398
    7. 'g' → logprob: -5.276494979858398
    8. 'l' → logprob: -6.151494979858398
    9. 'de' → logprob: -6.401494979858398
    10. '=len' → logprob: -7.651494979858398

Token 733: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.00047106825513765216
    2. 'ents' → logprob: -8.250471115112305
    3. '[' → logprob: -9.625471115112305
    4. 'ant' → logprob: -10.125471115112305
    5. 'issants' → logprob: -10.500471115112305
    6. 's' → logprob: -11.375471115112305
    7. '
' → logprob: -11.625471115112305
    8. '[i' → logprob: -11.750471115112305
    9. 'g' → logprob: -11.750471115112305
    10. '(i' → logprob: -12.375471115112305

Token 734: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2530826926231384
    2. '=' → logprob: -1.5030827522277832
    3. '       ' → logprob: -6.878082752227783
    4. 'l' → logprob: -9.878082275390625
    5. '   ' → logprob: -10.503082275390625
    6. 'g' → logprob: -11.128082275390625
    7. '           ' → logprob: -11.378082275390625
    8. '=len' → logprob: -12.753082275390625
    9. '```' → logprob: -12.878082275390625
    10. '=g' → logprob: -13.253082275390625

Token 735: ' i' (ID: 575)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0011442647082731128
    2. ' g' → logprob: -7.0011444091796875
    3. 'i' → logprob: -8.501144409179688
    4. '(g' → logprob: -10.626144409179688
    5. ' i' → logprob: -14.126144409179688
    6. 'len' → logprob: -14.126144409179688
    7. '	g' → logprob: -14.126144409179688
    8. '(i' → logprob: -14.251144409179688
    9. '[i' → logprob: -14.626144409179688
    10. 'l' → logprob: -14.876144409179688

Token 736: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9467521905899048
    2. ' l' → logprob: -1.1967521905899048
    3. 'l' → logprob: -1.4467521905899048
    4. ' =' → logprob: -3.0717520713806152
    5. '   ' → logprob: -4.071752071380615
    6. '	l' → logprob: -5.321752071380615
    7. '=' → logprob: -5.696752071380615
    8. '           ' → logprob: -6.821752071380615
    9. '```' → logprob: -7.446752071380615
    10. '        ' → logprob: -8.821752548217773

Token 737: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17769218981266022
    2. 'l' → logprob: -2.052692174911499
    3. '   ' → logprob: -3.677692174911499
    4. ' l' → logprob: -4.802692413330078
    5. '```' → logprob: -8.427692413330078
    6. '	l' → logprob: -8.927692413330078
    7. ' =' → logprob: -9.052692413330078
    8. '=' → logprob: -9.302692413330078
    9. ',' → logprob: -9.302692413330078
    10. ',l' → logprob: -9.427692413330078

Token 738: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -8.756989700486884e-05
    2. ' l' → logprob: -9.50008773803711
    3. '       ' → logprob: -11.37508773803711
    4. '	l' → logprob: -14.00008773803711
    5. '   ' → logprob: -15.12508773803711
    6. '```' → logprob: -17.37508773803711
    7. '           ' → logprob: -17.87508773803711
    8. 'len' → logprob: -19.25008773803711
    9. ',l' → logprob: -19.50008773803711
    10. '_l' → logprob: -20.12508773803711

Token 739: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326422095298767
    2. ' =' → logprob: -1.31326425075531
    3. '=len' → logprob: -12.938263893127441
    4. '   ' → logprob: -16.563264846801758
    5. '=l' → logprob: -18.313264846801758
    6. '	' → logprob: -18.313264846801758
    7. ' ' → logprob: -18.563264846801758
    8. '＝' → logprob: -19.313264846801758
    9. ' ' → logprob: -19.563264846801758
    10. '=
' → logprob: -19.813264846801758

Token 740: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0024758970830589533
    2. ' len' → logprob: -6.002475738525391
    3. '(len' → logprob: -15.50247573852539
    4. '   ' → logprob: -17.25247573852539
    5. '	len' → logprob: -17.37747573852539
    6. '[len' → logprob: -17.50247573852539
    7. '=len' → logprob: -18.25247573852539
    8. ' ' → logprob: -19.87747573852539
    9. ',len' → logprob: -20.37747573852539
    10. '.len' → logprob: -20.50247573852539

Token 741: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.1472419600977446e-06
    2. 'g' → logprob: -13.750000953674316
    3. '(' → logprob: -17.500001907348633
    4. '[g' → logprob: -17.750001907348633
    5. ' (' → logprob: -19.875001907348633
    6. ' g' → logprob: -20.500001907348633
    7. '	g' → logprob: -21.375001907348633
    8. '(G' → logprob: -22.250001907348633
    9. '=g' → logprob: -22.375001907348633
    10. '(s' → logprob: -22.625001907348633

Token 742: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[g' → logprob: -15.875
    3. 'i' → logprob: -17.75
    4. ' [' → logprob: -18.375
    5. '(i' → logprob: -18.5
    6. ')' → logprob: -18.5
    7. 'g' → logprob: -18.5
    8. ')[' → logprob: -18.625
    9. '[' → logprob: -18.75
    10. '[I' → logprob: -19.875

Token 743: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030378960072994232
    2. ')
' → logprob: -3.530379056930542
    3. '])' → logprob: -7.405378818511963
    4. '])
' → logprob: -11.780379295349121
    5. ']' → logprob: -12.780379295349121
    6. ')]' → logprob: -13.030379295349121
    7. ' )' → logprob: -13.155379295349121
    8. ')])' → logprob: -13.905379295349121
    9. ')
' → logprob: -14.155379295349121
    10. '))' → logprob: -14.280379295349121

Token 744: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14484341442584991
    2. ' if' → logprob: -2.644843339920044
    3. '       ' → logprob: -2.769843339920044
    4. 'for' → logprob: -7.019843578338623
    5. '   ' → logprob: -9.019843101501465
    6. '```' → logprob: -9.644843101501465
    7. '	if' → logprob: -10.144843101501465
    8. ' for' → logprob: -10.519843101501465
    9. '           ' → logprob: -13.644843101501465
    10. ' ' → logprob: -13.894843101501465

Token 745: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31085607409477234
    2. ' if' → logprob: -1.5608561038970947
    3. '   ' → logprob: -2.9358561038970947
    4. '       ' → logprob: -5.810855865478516
    5. '	if' → logprob: -7.185855865478516
    6. '```' → logprob: -8.560855865478516
    7. 'for' → logprob: -9.685855865478516
    8. ' ' → logprob: -10.310855865478516
    9. '+' → logprob: -10.435855865478516
    10. '    
' → logprob: -11.435855865478516

Token 746: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001367977005429566
    2. 'from' → logprob: -6.876368045806885
    3. 'for' → logprob: -8.126367568969727
    4. 'e' → logprob: -10.751367568969727
    5. 's' → logprob: -11.876367568969727
    6. '   ' → logprob: -12.126367568969727
    7. ' if' → logprob: -13.001367568969727
    8. 'sum' → logprob: -13.251367568969727
    9. '```' → logprob: -14.251367568969727
    10. '       ' → logprob: -15.376367568969727

Token 747: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007950837723910809
    2. ' j' → logprob: -4.882950782775879
    3. 'v' → logprob: -8.632950782775879
    4. 'k' → logprob: -10.007950782775879
    5. 'neighbor' → logprob: -10.257950782775879
    6. '_j' → logprob: -11.007950782775879
    7. 'e' → logprob: -11.382950782775879
    8. 'c' → logprob: -11.632950782775879
    9. 's' → logprob: -11.757950782775879
    10. 'each' → logprob: -11.882950782775879

Token 748: ' voisin' (ID: 145411)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012548504397273064
    2. ' j' → logprob: -4.387548446655273
    3. 'v' → logprob: -10.512548446655273
    4. 'x' → logprob: -13.012548446655273
    5. 'k' → logprob: -13.512548446655273
    6. 's' → logprob: -13.887548446655273
    7. 'e' → logprob: -14.137548446655273
    8. '```' → logprob: -14.137548446655273
    9. ' v' → logprob: -14.512548446655273
    10. 'c' → logprob: -14.512548446655273

Token 749: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.28236252069473267
    2. 'j' → logprob: -1.407362461090088
    3. ' in' → logprob: -7.032362461090088
    4. 'in' → logprob: -8.032362937927246
    5. 's' → logprob: -14.407362937927246
    6. ' ' → logprob: -14.532362937927246
    7. '	j' → logprob: -15.032362937927246
    8. '[j' → logprob: -15.032362937927246
    9. '_j' → logprob: -15.032362937927246
    10. 'i' → logprob: -15.157362937927246

Token 750: ' du' (ID: 1462)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759620070457458
    2. 'in' → logprob: -0.8259620070457458
    3. 's' → logprob: -11.70096206665039
    4. 'import' → logprob: -12.45096206665039
    5. 'for' → logprob: -13.45096206665039
    6. '	in' → logprob: -13.57596206665039
    7. 'd' → logprob: -13.82596206665039
    8. '```' → logprob: -13.95096206665039
    9. 'dans' → logprob: -14.07596206665039
    10. 'n' → logprob: -14.32596206665039

Token 751: ' sommet' (ID: 130502)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -5.157039049663581e-05
    2. ' g' → logprob: -9.875051498413086
    3. '	g' → logprob: -17.750051498413086
    4. 'j' → logprob: -18.375051498413086
    5. '[g' → logprob: -18.750051498413086
    6. 'i' → logprob: -18.750051498413086
    7. ' ' → logprob: -19.125051498413086
    8. '   ' → logprob: -19.250051498413086
    9. 's' → logprob: -19.312551498413086
    10. '#g' → logprob: -19.812551498413086

Token 752: ' i' (ID: 575)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.014529787003993988
    2. 'j' → logprob: -4.764529705047607
    3. ' g' → logprob: -5.264529705047607
    4. 'i' → logprob: -7.889529705047607
    5. ' in' → logprob: -8.514530181884766
    6. ' j' → logprob: -9.514530181884766
    7. 'in' → logprob: -9.889530181884766
    8. 's' → logprob: -12.014530181884766
    9. ' i' → logprob: -12.014530181884766
    10. '	g' → logprob: -12.639530181884766

Token 753: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32534316182136536
    2. ':
' → logprob: -1.950343132019043
    3. '       ' → logprob: -2.450343132019043
    4. 'for' → logprob: -3.575343132019043
    5. ' for' → logprob: -4.575343132019043
    6. ' in' → logprob: -5.575343132019043
    7. '   ' → logprob: -5.700343132019043
    8. '           ' → logprob: -6.575343132019043
    9. '```' → logprob: -7.075343132019043
    10. ',' → logprob: -7.575343132019043

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2586355209350586
    2. 'from' → logprob: -1.3836355209350586
    3. '           ' → logprob: -1.8836355209350586
    4. ':' → logprob: -2.2586355209350586
    5. ':
' → logprob: -2.3836355209350586
    6. 'for' → logprob: -2.6336355209350586
    7. ' for' → logprob: -3.6336355209350586
    8. '```' → logprob: -5.008635520935059
    9. ' from' → logprob: -5.133635520935059
    10. '):
' → logprob: -6.008635520935059

Token 755: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000553151941858232
    2. ' for' → logprob: -7.500553131103516
    3. '	for' → logprob: -16.375553131103516
    4. '   ' → logprob: -17.250553131103516
    5. 'from' → logprob: -17.375553131103516
    6. '```' → logprob: -17.375553131103516
    7. 'if' → logprob: -17.625553131103516
    8. '       ' → logprob: -18.625553131103516
    9. ' ' → logprob: -19.875553131103516
    10. 'j' → logprob: -20.875553131103516

Token 756: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003651860635727644
    2. ' j' → logprob: -5.628652095794678
    3. 'g' → logprob: -9.87865161895752
    4. ' g' → logprob: -15.37865161895752
    5. '	j' → logprob: -16.128652572631836
    6. '_j' → logprob: -17.128652572631836
    7. ' ' → logprob: -17.253652572631836
    8. '$j' → logprob: -17.878652572631836
    9. 's' → logprob: -18.128652572631836
    10. '   ' → logprob: -18.253652572631836

Token 757: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014511525630951
    2. 'in' → logprob: -1.7014511823654175
    3. 'g' → logprob: -10.951451301574707
    4. 's' → logprob: -11.451451301574707
    5. 'import' → logprob: -13.201451301574707
    6. 'n' → logprob: -13.576451301574707
    7. '	in' → logprob: -13.701451301574707
    8. 'In' → logprob: -13.951451301574707
    9. 'd' → logprob: -14.076451301574707
    10. '   ' → logprob: -14.826451301574707

Token 758: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0019288709154352546
    2. ' g' → logprob: -6.251928806304932
    3. '	g' → logprob: -16.626928329467773
    4. ' ' → logprob: -16.626928329467773
    5. ' ' → logprob: -17.001928329467773
    6. '   ' → logprob: -18.001928329467773
    7. '
' → logprob: -18.751928329467773
    8. 'j' → logprob: -19.126928329467773
    9. 's' → logprob: -19.251928329467773
    10. 'range' → logprob: -19.251928329467773

Token 759: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019295861711725593
    2. '[j' → logprob: -6.251929759979248
    3. '[' → logprob: -15.00192928314209
    4. 'g' → logprob: -15.12692928314209
    5. '[g' → logprob: -15.37692928314209
    6. 'i' → logprob: -16.251930236816406
    7. 'j' → logprob: -16.376930236816406
    8. '```' → logprob: -17.751930236816406
    9. 's' → logprob: -17.876930236816406
    10. ']' → logprob: -18.751930236816406

Token 760: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.010069242678582668
    2. ']:
' → logprob: -4.760069370269775
    3. '):' → logprob: -7.260069370269775
    4. ':' → logprob: -7.885069370269775
    5. ']' → logprob: -8.135068893432617
    6. '].' → logprob: -11.010068893432617
    7. '):
' → logprob: -11.135068893432617
    8. ']:
' → logprob: -11.385068893432617
    9. 'g' → logprob: -11.635068893432617
    10. ']:

' → logprob: -11.760068893432617

Token 761: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09380871802568436
    2. 'from' → logprob: -2.468808650970459
    3. ' from' → logprob: -5.468808650970459
    4. '```' → logprob: -7.718808650970459
    5. '       ' → logprob: -9.468809127807617
    6. '               ' → logprob: -9.718809127807617
    7. '   ' → logprob: -10.218809127807617
    8. '		' → logprob: -11.968809127807617
    9. '	from' → logprob: -12.218809127807617
    10. '          ' → logprob: -12.968809127807617

Token 762: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.004734853282570839
    2. '           ' → logprob: -5.379734992980957
    3. ' from' → logprob: -9.254734992980957
    4. '               ' → logprob: -12.004734992980957
    5. '	from' → logprob: -12.129734992980957
    6. '   ' → logprob: -12.504734992980957
    7. '       ' → logprob: -13.004734992980957
    8. ' ' → logprob: -14.504734992980957
    9. '	       ' → logprob: -15.879734992980957
    10. '```' → logprob: -15.879734992980957

Token 763: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -6.153795766294934e-06
    2. '           ' → logprob: -12.375005722045898
    3. 'if' → logprob: -13.875005722045898
    4. ' from' → logprob: -14.125005722045898
    5. '   ' → logprob: -15.750005722045898
    6. '       ' → logprob: -18.3750057220459
    7. '               ' → logprob: -18.5000057220459
    8. '#' → logprob: -19.1250057220459
    9. 'From' → logprob: -19.5000057220459
    10. '
' → logprob: -19.6250057220459

Token 764: ' ajoute' (ID: 91611)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0007800845778547227
    2. '+=' → logprob: -7.25078010559082
    3. ' +=' → logprob: -10.25078010559082
    4. ' from' → logprob: -10.87578010559082
    5. '[from' → logprob: -12.00078010559082
    6. '           ' → logprob: -12.75078010559082
    7. 'to' → logprob: -13.00078010559082
    8. '```' → logprob: -13.62578010559082
    9. ':' → logprob: -14.12578010559082
    10. ']+=' → logprob: -14.50078010559082

Token 765: ' à' (ID: 1221)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08575862646102905
    2. ' from' → logprob: -2.710758686065674
    3. ' (' → logprob: -5.335758686065674
    4. '(from' → logprob: -5.460758686065674
    5. ' to' → logprob: -5.960758686065674
    6. 'to' → logprob: -6.210758686065674
    7. '(p' → logprob: -7.210758686065674
    8. ' p' → logprob: -7.585758686065674
    9. '(' → logprob: -7.835758686065674
    10. '   ' → logprob: -9.085758209228516

Token 766: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -8.53050296427682e-05
    2. ' from' → logprob: -9.37508487701416
    3. '(from' → logprob: -16.000085830688477
    4. '   ' → logprob: -16.250085830688477
    5. 'to' → logprob: -16.625085830688477
    6. '```' → logprob: -16.875085830688477
    7. 'From' → logprob: -17.375085830688477
    8. '[from' → logprob: -17.625085830688477
    9. '	from' → logprob: -17.875085830688477
    10. '           ' → logprob: -18.375085830688477

Token 767: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.3306015716807451e-05
    2. 'from' → logprob: -11.25001335144043
    3. '[' → logprob: -16.12501335144043
    4. '[from' → logprob: -17.12501335144043
    5. '```' → logprob: -17.62501335144043
    6. '(from' → logprob: -18.00001335144043
    7. 'e' → logprob: -19.12501335144043
    8. '
' → logprob: -19.37501335144043
    9. '`' → logprob: -19.37501335144043
    10. '[j' → logprob: -20.12501335144043

Token 768: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023542087525129318
    2. 'i' → logprob: -4.0235419273376465
    3. '[j' → logprob: -5.8985419273376465
    4. 'from' → logprob: -6.1485419273376465
    5. 'j' → logprob: -8.898542404174805
    6. '(i' → logprob: -9.398542404174805
    7. '[from' → logprob: -9.648542404174805
    8. ' i' → logprob: -9.773542404174805
    9. '[' → logprob: -9.898542404174805
    10. 'to' → logprob: -10.273542404174805

Token 769: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.8001930713653564
    2. ']' → logprob: -0.9251930713653564
    3. ' +=' → logprob: -2.1751930713653564
    4. '+=' → logprob: -3.9251930713653564
    5. '[j' → logprob: -4.175192832946777
    6. '[' → logprob: -6.300192832946777
    7. ']+' → logprob: -6.425192832946777
    8. ' ]' → logprob: -7.925192832946777
    9. '+=(' → logprob: -8.175192832946777
    10. '```' → logprob: -8.175192832946777

Token 770: ' la' (ID: 557)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.19516059756278992
    2. ' +=' → logprob: -1.8201606273651123
    3. '+=(' → logprob: -4.320160388946533
    4. ' (' → logprob: -6.945160388946533
    5. 'from' → logprob: -7.195160388946533
    6. '+(' → logprob: -9.945160865783691
    7. ']+=' → logprob: -10.195160865783691
    8. '```' → logprob: -10.195160865783691
    9. '+' → logprob: -10.320160865783691
    10. '(' → logprob: -10.445160865783691

Token 771: ' contribution' (ID: 26735)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.01528211310505867
    2. '(' → logprob: -4.515282154083252
    3. '(from' → logprob: -5.640282154083252
    4. '1' → logprob: -8.140281677246094
    5. ' from' → logprob: -8.765281677246094
    6. 'to' → logprob: -9.265281677246094
    7. ' (' → logprob: -9.515281677246094
    8. '   ' → logprob: -10.390281677246094
    9. '(p' → logprob: -11.890281677246094
    10. '((' → logprob: -12.265281677246094

Token 772: ' moyenne' (ID: 57480)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3087202310562134
    2. ' (' → logprob: -1.8087202310562134
    3. ' from' → logprob: -3.058720111846924
    4. '(' → logprob: -3.183720111846924
    5. '(from' → logprob: -4.433720111846924
    6. 'to' → logprob: -7.558720111846924
    7. '1' → logprob: -8.683720588684082
    8. '(p' → logprob: -8.808720588684082
    9. ' to' → logprob: -8.808720588684082
    10. '+' → logprob: -9.058720588684082

Token 773: ' résult' (ID: 31657)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18443632125854492
    2. ' from' → logprob: -2.684436321258545
    3. ' (' → logprob: -2.934436321258545
    4. ' de' → logprob: -4.559436321258545
    5. ' +=' → logprob: -5.059436321258545
    6. '=' → logprob: -5.059436321258545
    7. '(' → logprob: -5.434436321258545
    8. '(from' → logprob: -5.434436321258545
    9. ' of' → logprob: -5.809436321258545
    10. '+' → logprob: -6.059436321258545

Token 774: 'ant' (ID: 493)
  Prédit: 'ante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.33752578496932983
    2. 'de' → logprob: -1.9625258445739746
    3. 'from' → logprob: -2.0875258445739746
    4. 'e' → logprob: -4.712525844573975
    5. '   ' → logprob: -5.337525844573975
    6. 'ant' → logprob: -5.962525844573975
    7. 'd' → logprob: -6.212525844573975
    8. 'du' → logprob: -7.337525844573975
    9. 'des' → logprob: -7.587525844573975
    10. 'del' → logprob: -7.837525844573975

Token 775: ' du' (ID: 1462)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2912743091583252
    2. ' de' → logprob: -1.7912743091583252
    3. ' from' → logprob: -3.166274309158325
    4. 'de' → logprob: -3.166274309158325
    5. ' du' → logprob: -8.166274070739746
    6. 'd' → logprob: -8.666274070739746
    7. '+' → logprob: -8.916274070739746
    8. 'e' → logprob: -9.041274070739746
    9. '(' → logprob: -9.291274070739746
    10. ' +=' → logprob: -9.416274070739746

Token 776: ' voisin' (ID: 145411)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03611256927251816
    2. '(from' → logprob: -3.9111125469207764
    3. ' from' → logprob: -5.4111127853393555
    4. '(' → logprob: -5.5361127853393555
    5. ' (' → logprob: -5.6611127853393555
    6. 'to' → logprob: -6.2861127853393555
    7. '(e' → logprob: -6.9111127853393555
    8. '1' → logprob: -8.911112785339355
    9. 'e' → logprob: -9.036112785339355
    10. '+' → logprob: -9.411112785339355

Token 777: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.25614649057388306
    2. '+' → logprob: -2.6311464309692383
    3. ' from' → logprob: -2.7561464309692383
    4. ' (' → logprob: -3.2561464309692383
    5. ' de' → logprob: -4.631146430969238
    6. 's' → logprob: -4.631146430969238
    7. '(' → logprob: -4.756146430969238
    8. ' +' → logprob: -5.256146430969238
    9. '```' → logprob: -5.631146430969238
    10. 'de' → logprob: -6.131146430969238

Token 778: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.039927754551172256
    2. '(from' → logprob: -3.9149277210235596
    3. '(' → logprob: -4.289927959442139
    4. '1' → logprob: -5.414927959442139
    5. ' from' → logprob: -7.664927959442139
    6. ' (' → logprob: -7.664927959442139
    7. '   ' → logprob: -10.53992748260498
    8. 'to' → logprob: -10.66492748260498
    9. '((' → logprob: -11.78992748260498
    10. ' ' → logprob: -11.78992748260498

Token 779: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.1472419600977446e-06
    2. '[j' → logprob: -14.750000953674316
    3. 'j' → logprob: -15.000000953674316
    4. 'from' → logprob: -15.625000953674316
    5. '_E' → logprob: -16.625001907348633
    6. '```' → logprob: -16.750001907348633
    7. ' E' → logprob: -18.000001907348633
    8. 'e' → logprob: -18.375001907348633
    9. '
' → logprob: -18.500001907348633
    10. ')' → logprob: -19.125001907348633

Token 780: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.8624639324116288e-06
    2. '[i' → logprob: -13.625001907348633
    3. ' [' → logprob: -15.500001907348633
    4. '[' → logprob: -15.875001907348633
    5. '```' → logprob: -16.000001907348633
    6. 'j' → logprob: -16.250001907348633
    7. '][' → logprob: -17.500001907348633
    8. '   ' → logprob: -19.125001907348633
    9. ' ' → logprob: -19.125001907348633
    10. ')[' → logprob: -19.625001907348633

Token 781: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6426312327384949
    2. ']+' → logprob: -0.8926312327384949
    3. '+' → logprob: -2.7676312923431396
    4. ' +' → logprob: -7.1426310539245605
    5. ']/' → logprob: -7.6426310539245605
    6. ')+' → logprob: -9.392631530761719
    7. ')' → logprob: -9.642631530761719
    8. ' ]' → logprob: -10.017631530761719
    9. '}+' → logprob: -10.017631530761719
    10. '])' → logprob: -10.392631530761719

Token 782: ' +' (ID: 659)
  Prédit: '/l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/l' → logprob: -1.0340787172317505
    2. '           ' → logprob: -1.1590787172317505
    3. '+' → logprob: -1.9090787172317505
    4. ' +' → logprob: -2.284078598022461
    5. ' +=' → logprob: -3.534078598022461
    6. ' /' → logprob: -3.784078598022461
    7. '+=' → logprob: -4.659078598022461
    8. '+l' → logprob: -5.284078598022461
    9. '/' → logprob: -5.409078598022461
    10. '/p' → logprob: -5.909078598022461

Token 783: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04212387278676033
    2. ' ' → logprob: -4.167123794555664
    3. 'e' → logprob: -4.667123794555664
    4. ' (' → logprob: -5.167123794555664
    5. ' e' → logprob: -5.292123794555664
    6. '(' → logprob: -6.417123794555664
    7. '(e' → logprob: -6.542123794555664
    8. 'to' → logprob: -6.542123794555664
    9. ' to' → logprob: -7.917123794555664
    10. 'from' → logprob: -8.292123794555664

Token 784: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000708501785993576
    2. 'e' → logprob: -7.62570858001709
    3. ' ' → logprob: -9.25070858001709
    4. 'from' → logprob: -9.50070858001709
    5. '   ' → logprob: -11.25070858001709
    6. '(' → logprob: -11.37570858001709
    7. '+' → logprob: -12.00070858001709
    8. '(e' → logprob: -12.00070858001709
    9. 'to' → logprob: -12.87570858001709
    10. ' e' → logprob: -13.12570858001709

Token 785: ' (' (ID: 350)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4908602833747864
    2. '/l' → logprob: -0.9908602833747864
    3. ')/' → logprob: -5.115860462188721
    4. ')' → logprob: -5.365860462188721
    5. '           ' → logprob: -5.490860462188721
    6. '   ' → logprob: -7.490860462188721
    7. '/' → logprob: -7.990860462188721
    8. ' *' → logprob: -8.365859985351562
    9. '```' → logprob: -9.240859985351562
    10. '               ' → logprob: -9.490859985351562

Token 786: 'co' (ID: 1191)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8926665782928467
    2. '1' → logprob: -1.1426665782928467
    3. 'e' → logprob: -2.6426665782928467
    4. ')/' → logprob: -2.8926665782928467
    5. 'from' → logprob: -3.0176665782928467
    6. ' ' → logprob: -4.017666816711426
    7. '/l' → logprob: -4.267666816711426
    8. ' )' → logprob: -4.267666816711426
    9. ' from' → logprob: -4.892666816711426
    10. ' (' → logprob: -4.892666816711426

Token 787: 'ût' (ID: 24581)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12168392539024353
    2. ' )' → logprob: -3.3716838359832764
    3. 'pas' → logprob: -3.6216838359832764
    4. ' step' → logprob: -3.7466838359832764
    5. ' pas' → logprob: -3.8716838359832764
    6. 'step' → logprob: -6.8716840744018555
    7. '+' → logprob: -7.1216840744018555
    8. ' token' → logprob: -7.2466840744018555
    9. ' for' → logprob: -7.3716840744018555
    10. ' steps' → logprob: -7.6216840744018555

Token 788: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0910891592502594
    2. ')/' → logprob: -3.4660892486572266
    3. ')/(' → logprob: -3.9660892486572266
    4. '/l' → logprob: -4.216089248657227
    5. ' )' → logprob: -4.466089248657227
    6. ' /' → logprob: -5.591089248657227
    7. '           ' → logprob: -6.591089248657227
    8. '/' → logprob: -7.091089248657227
    9. 'div' → logprob: -7.716089248657227
    10. '   ' → logprob: -7.966089248657227

Token 789: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.9623898267745972
    2. 'step' → logprob: -1.8373898267745972
    3. '1' → logprob: -1.9623898267745972
    4. ' step' → logprob: -2.3373899459838867
    5. ' pas' → logprob: -2.5873899459838867
    6. 'from' → logprob: -2.8373899459838867
    7. ')' → logprob: -3.7123899459838867
    8. ' passage' → logprob: -4.337389945983887
    9. ' from' → logprob: -4.462389945983887
    10. 'pass' → logprob: -5.212389945983887

Token 790: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7695251107215881
    2. ')/' → logprob: -0.7695251107215881
    3. ' )' → logprob: -3.2695250511169434
    4. '/l' → logprob: -3.8945250511169434
    5. ')/(' → logprob: -4.519525051116943
    6. ' /' → logprob: -6.144525051116943
    7. ')*' → logprob: -7.144525051116943
    8. '           ' → logprob: -8.519525527954102
    9. ')*(' → logprob: -8.519525527954102
    10. '   ' → logprob: -8.769525527954102

Token 791: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8961068391799927
    2. 'from' → logprob: -1.6461068391799927
    3. '(l' → logprob: -2.646106719970703
    4. '(' → logprob: -2.771106719970703
    5. '/l' → logprob: -2.771106719970703
    6. '1' → logprob: -2.896106719970703
    7. 'l' → logprob: -3.396106719970703
    8. '           ' → logprob: -3.646106719970703
    9. ' /' → logprob: -4.021106719970703
    10. ' from' → logprob: -4.146106719970703

Token 792: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5234560966491699
    2. 'l' → logprob: -2.14845609664917
    3. '1' → logprob: -2.52345609664917
    4. '+' → logprob: -3.02345609664917
    5. ' (' → logprob: -3.02345609664917
    6. '(l' → logprob: -3.64845609664917
    7. ' from' → logprob: -3.77345609664917
    8. ' l' → logprob: -4.27345609664917
    9. '           ' → logprob: -4.64845609664917
    10. '(' → logprob: -5.02345609664917

Token 793: ' le' (ID: 505)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05508504807949066
    2. ' from' → logprob: -3.4300849437713623
    3. '           ' → logprob: -4.430085182189941
    4. '+' → logprob: -5.305085182189941
    5. '1' → logprob: -7.305085182189941
    6. 'l' → logprob: -7.305085182189941
    7. ' (' → logprob: -8.180085182189941
    8. '               ' → logprob: -8.180085182189941
    9. ' +' → logprob: -8.180085182189941
    10. ' l' → logprob: -8.430085182189941

Token 794: ' tout' (ID: 5501)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5099229216575623
    2. ' from' → logprob: -1.259922981262207
    3. '/' → logprob: -3.009922981262207
    4. ' /' → logprob: -3.509922981262207
    5. '/l' → logprob: -3.884922981262207
    6. '+' → logprob: -5.509922981262207
    7. '1' → logprob: -5.759922981262207
    8. '           ' → logprob: -5.759922981262207
    9. ' if' → logprob: -7.259922981262207
    10. 'l' → logprob: -7.384922981262207

Token 795: ' div' (ID: 4223)
  Prédit: '/l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/l' → logprob: -0.10790542513132095
    2. ' /' → logprob: -2.732905387878418
    3. '/' → logprob: -4.607905387878418
    4. 'div' → logprob: -4.732905387878418
    5. ' divided' → logprob: -4.857905387878418
    6. '/div' → logprob: -4.982905387878418
    7. '+=' → logprob: -7.732905387878418
    8. ' +=' → logprob: -7.732905387878418
    9. '/p' → logprob: -7.857905387878418
    10. '/li' → logprob: -7.857905387878418

Token 796: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -7.941850526549388e-06
    2. 'isée' → logprob: -12.625007629394531
    3. 'isés' → logprob: -12.750007629394531
    4. 'idé' → logprob: -14.250007629394531
    5. 'isées' → logprob: -14.750007629394531
    6. 'id' → logprob: -15.125007629394531
    7. 'ise' → logprob: -15.875007629394531
    8. '#' → logprob: -16.87500762939453
    9. 'isible' → logprob: -16.87500762939453
    10. 'is' → logprob: -17.00000762939453

Token 797: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.18662284314632416
    2. ' par' → logprob: -1.9366228580474854
    3. 'l' → logprob: -4.311622619628906
    4. '/l' → logprob: -4.811622619628906
    5. '/' → logprob: -6.061622619628906
    6. '/par' → logprob: -7.061622619628906
    7. 'by' → logprob: -7.186622619628906
    8. ' l' → logprob: -8.811622619628906
    9. '(l' → logprob: -9.311622619628906
    10. ' by' → logprob: -9.436622619628906

Token 798: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.961759259458631e-06
    2. ' l' → logprob: -12.250004768371582
    3. 'len' → logprob: -16.0000057220459
    4. '   ' → logprob: -19.1250057220459
    5. '_l' → logprob: -19.6250057220459
    6. '	l' → logprob: -20.1250057220459
    7. 'length' → logprob: -20.5000057220459
    8. 'la' → logprob: -21.2500057220459
    9. '           ' → logprob: -21.6250057220459
    10. '*l' → logprob: -21.7500057220459

Token 799: ' pour' (ID: 1930)
  Prédit: '/l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/l' → logprob: -0.781049370765686
    2. ' /' → logprob: -1.156049370765686
    3. '           ' → logprob: -2.0310492515563965
    4. 'l' → logprob: -2.5310492515563965
    5. '/' → logprob: -4.9060492515563965
    6. ' l' → logprob: -6.1560492515563965
    7. '   ' → logprob: -6.2810492515563965
    8. '       ' → logprob: -7.0310492515563965
    9. '```' → logprob: -7.4060492515563965
    10. '(l' → logprob: -7.4060492515563965

Token 800: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.062046218663454056
    2. ' l' → logprob: -2.8120462894439697
    3. '           ' → logprob: -10.18704605102539
    4. '       ' → logprob: -10.56204605102539
    5. '	l' → logprob: -12.43704605102539
    6. '   ' → logprob: -13.06204605102539
    7. '```' → logprob: -13.31204605102539
    8. '         ' → logprob: -13.93704605102539
    9. '        ' → logprob: -14.06204605102539
    10. '                   ' → logprob: -14.18704605102539

Token 801: ''esp' (ID: 73244)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8309269547462463
    2. '/' → logprob: -1.4559268951416016
    3. '```' → logprob: -2.5809268951416016
    4. '[i' → logprob: -2.7059268951416016
    5. '/i' → logprob: -2.7059268951416016
    6. 'l' → logprob: -3.3309268951416016
    7. '/l' → logprob: -4.080926895141602
    8. '   ' → logprob: -4.080926895141602
    9. ' l' → logprob: -4.205926895141602
    10. ' i' → logprob: -4.830926895141602

Token 802: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.0029633231461048126
    2. 'érence' → logprob: -6.252963542938232
    3. 'acement' → logprob: -7.377963542938232
    4. 'èce' → logprob: -8.502963066101074
    5. 'érience' → logprob: -9.377963066101074
    6. 'er' → logprob: -10.502963066101074
    7. 'ération' → logprob: -11.252963066101074
    8. '```' → logprob: -11.502963066101074
    9. 'erce' → logprob: -11.627963066101074
    10. 'ér' → logprob: -12.002963066101074

Token 803: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03477189689874649
    2. 'l' → logprob: -4.534771919250488
    3. '/l' → logprob: -4.784771919250488
    4. '   ' → logprob: -5.784771919250488
    5. ' +=' → logprob: -6.034771919250488
    6. '       ' → logprob: -6.409771919250488
    7. '(l' → logprob: -6.534771919250488
    8. ' /' → logprob: -7.034771919250488
    9. '          ' → logprob: -7.034771919250488
    10. ' l' → logprob: -7.284771919250488

Token 804: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007185830734670162
    2. 'from' → logprob: -5.257185935974121
    3. ' from' → logprob: -6.257185935974121
    4. '          ' → logprob: -11.507185935974121
    5. '               ' → logprob: -11.757185935974121
    6. '       ' → logprob: -12.007185935974121
    7. '   ' → logprob: -12.132185935974121
    8. '            ' → logprob: -13.882185935974121
    9. '		' → logprob: -14.632185935974121
    10. '+' → logprob: -14.882185935974121

Token 805: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.00015050210640765727
    2. '           ' → logprob: -9.250150680541992
    3. ' from' → logprob: -10.250150680541992
    4. '   ' → logprob: -11.000150680541992
    5. '               ' → logprob: -13.125150680541992
    6. '       ' → logprob: -15.125150680541992
    7. '                   ' → logprob: -17.500150680541992
    8. '	from' → logprob: -18.125150680541992
    9. '(from' → logprob: -18.500150680541992
    10. ' ' → logprob: -19.125150680541992

Token 806: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -6.511406809295295e-06
    2. 'from' → logprob: -12.125006675720215
    3. '_E' → logprob: -14.750006675720215
    4. '
' → logprob: -15.750006675720215
    5. ' E' → logprob: -15.750006675720215
    6. 'for' → logprob: -16.3750057220459
    7. '```' → logprob: -17.2500057220459
    8. '

' → logprob: -17.7500057220459
    9. '[E' → logprob: -18.0000057220459
    10. '`' → logprob: -18.0625057220459

Token 807: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.137130498653278e-05
    2. '[j' → logprob: -9.500081062316895
    3. '[' → logprob: -12.875081062316895
    4. ' [' → logprob: -13.125081062316895
    5. 'i' → logprob: -14.625081062316895
    6. '```' → logprob: -14.750081062316895
    7. 'import' → logprob: -15.625081062316895
    8. '
' → logprob: -16.37508201599121
    9. '[I' → logprob: -16.37508201599121
    10. 'def' → logprob: -16.37508201599121

Token 808: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.28222984075546265
    2. '+=' → logprob: -1.5322299003601074
    3. ']+=' → logprob: -3.5322299003601074
    4. ')' → logprob: -8.40722942352295
    5. ']' → logprob: -8.40722942352295
    6. '```' → logprob: -10.28222942352295
    7. '   ' → logprob: -10.53222942352295
    8. '+' → logprob: -10.65722942352295
    9. '    ' → logprob: -11.03222942352295
    10. ']+' → logprob: -11.53222942352295

Token 809: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07894795387983322
    2. ' +=' → logprob: -2.5789480209350586
    3. '+=(' → logprob: -9.828948020935059
    4. ']+=' → logprob: -12.578948020935059
    5. '+' → logprob: -14.828948020935059
    6. '=' → logprob: -15.828948020935059
    7. '+='' → logprob: -15.953948020935059
    8. '   ' → logprob: -16.203947067260742
    9. '+="' → logprob: -16.453947067260742
    10. '    ' → logprob: -17.828947067260742

Token 810: ' (' (ID: 350)
  Prédit: '(from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(from' → logprob: -0.001540450262837112
    2. '(' → logprob: -6.501540660858154
    3. ' (' → logprob: -10.501540184020996
    4. '1' → logprob: -12.251540184020996
    5. 'from' → logprob: -12.876540184020996
    6. '((' → logprob: -13.251540184020996
    7. '(to' → logprob: -13.876540184020996
    8. '(for' → logprob: -16.251541137695312
    9. '   ' → logprob: -16.501541137695312
    10. '(f' → logprob: -16.876541137695312

Token 811: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.029305247589945793
    2. '1' → logprob: -3.6543052196502686
    3. '(from' → logprob: -5.904305458068848
    4. '(' → logprob: -8.404305458068848
    5. ' from' → logprob: -10.279305458068848
    6. '   ' → logprob: -12.529305458068848
    7. ' ' → logprob: -12.904305458068848
    8. ' (' → logprob: -12.904305458068848
    9. '[from' → logprob: -13.404305458068848
    10. '	from' → logprob: -14.529305458068848

Token 812: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.9361264946837764e-07
    2. ' E' → logprob: -17.125
    3. '[j' → logprob: -17.25
    4. '
' → logprob: -17.375
    5. 'j' → logprob: -17.625
    6. 'e' → logprob: -17.625
    7. 'from' → logprob: -17.75
    8. '=' → logprob: -18.625
    9. '_E' → logprob: -18.6875
    10. '```' → logprob: -18.875

Token 813: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.512236498361744e-07
    2. 'j' → logprob: -14.625000953674316
    3. '[' → logprob: -16.625
    4. ' [' → logprob: -18.125
    5. '[
' → logprob: -19.375
    6. '[i' → logprob: -19.375
    7. '   ' → logprob: -20.0
    8. '[js' → logprob: -20.25
    9. ' ' → logprob: -20.5
    10. '(j' → logprob: -20.875

Token 814: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018161294981837273
    2. ' +' → logprob: -4.018161296844482
    3. '()+' → logprob: -12.393160820007324
    4. ']+' → logprob: -13.018160820007324
    5. '   ' → logprob: -13.893160820007324
    6. '```' → logprob: -13.893160820007324
    7. '[' → logprob: -14.018160820007324
    8. 'import' → logprob: -14.643160820007324
    9. 's' → logprob: -14.768160820007324
    10. ' ' → logprob: -15.143160820007324

Token 815: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -17.875
    4. '```' → logprob: -18.125
    5. '
' → logprob: -19.5
    6. '+' → logprob: -20.375
    7. ')' → logprob: -20.5
    8. '           ' → logprob: -20.75
    9. '１' → logprob: -21.125
    10. '`' → logprob: -21.125

Token 816: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.11283113807439804
    2. ')' → logprob: -2.2378311157226562
    3. ' )' → logprob: -11.862831115722656
    4. ')/(' → logprob: -13.987831115722656
    5. '   ' → logprob: -14.737831115722656
    6. ']/' → logprob: -16.112831115722656
    7. ')*' → logprob: -16.612831115722656
    8. '")' → logprob: -17.112831115722656
    9. '```' → logprob: -17.237831115722656
    10. '）' → logprob: -17.362831115722656

Token 817: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.512236498361744e-07
    2. ' l' → logprob: -14.500000953674316
    3. 'len' → logprob: -18.75
    4. '	l' → logprob: -20.625
    5. '```' → logprob: -21.875
    6. '   ' → logprob: -22.25
    7. '`' → logprob: -22.875
    8. '_l' → logprob: -23.0
    9. '$l' → logprob: -23.25
    10. 'length' → logprob: -23.25

Token 818: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14073507487773895
    2. '<|end|>' → logprob: -2.640735149383545
    3. 'from' → logprob: -3.140735149383545
    4. 'return' → logprob: -4.640735149383545
    5. '    
' → logprob: -5.765735149383545
    6. ')' → logprob: -6.265735149383545
    7. ' return' → logprob: -7.640735149383545
    8. 'print' → logprob: -8.015734672546387
    9. '
' → logprob: -8.265734672546387
    10. ' from' → logprob: -8.390734672546387

Token 819: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024517599493265152
    2. '   ' → logprob: -3.77451753616333
    3. 'from' → logprob: -7.89951753616333
    4. 'if' → logprob: -7.89951753616333
    5. 'return' → logprob: -8.274518013000488
    6. '```' → logprob: -9.149518013000488
    7. ' print' → logprob: -9.399518013000488
    8. '    
' → logprob: -10.649518013000488
    9. '<|end|>' → logprob: -10.899518013000488
    10. ')' → logprob: -11.524518013000488

Token 820: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014325093477964401
    2. '   ' → logprob: -4.264325141906738
    3. ' print' → logprob: -9.389325141906738
    4. 'return' → logprob: -9.639325141906738
    5. '```' → logprob: -11.389325141906738
    6. 'if' → logprob: -14.139325141906738
    7. '    
' → logprob: -14.889325141906738
    8. '
' → logprob: -16.139324188232422
    9. '#print' → logprob: -16.139324188232422
    10. '	print' → logprob: -16.514324188232422

Token 821: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.978233846486546e-05
    2. 'return' → logprob: -10.500049591064453
    3. '   ' → logprob: -11.250049591064453
    4. ' print' → logprob: -11.625049591064453
    5. 'if' → logprob: -16.250049591064453
    6. '#' → logprob: -16.250049591064453
    7. '#print' → logprob: -17.750049591064453
    8. 'import' → logprob: -19.000049591064453
    9. '	print' → logprob: -20.250049591064453
    10. 'for' → logprob: -20.625049591064453

Token 822: ' récup' (ID: 62856)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010303078452125192
    2. ' print' → logprob: -7.126030445098877
    3. 'return' → logprob: -8.501029968261719
    4. '   ' → logprob: -11.126029968261719
    5. 'pr' → logprob: -13.126029968261719
    6. ' return' → logprob: -13.501029968261719
    7. '#' → logprob: -13.876029968261719
    8. '
' → logprob: -14.001029968261719
    9. 'import' → logprob: -14.876029968261719
    10. '#print' → logprob: -15.001029968261719

Token 823: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.00012011249782517552
    2. 'è' → logprob: -9.750120162963867
    3. 'ére' → logprob: -10.750120162963867
    4. 'ere' → logprob: -11.125120162963867
    5. 'èr' → logprob: -11.750120162963867
    6. '#' → logprob: -12.250120162963867
    7. '`' → logprob: -12.625120162963867
    8. '\' → logprob: -12.875120162963867
    9. 'èra' → logprob: -13.625120162963867
    10. '[' → logprob: -13.625120162963867

Token 824: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.058285798877477646
    2. 'from' → logprob: -2.933285713195801
    3. ' print' → logprob: -6.683285713195801
    4. '   ' → logprob: -7.058285713195801
    5. 'le' → logprob: -7.808285713195801
    6. ' from' → logprob: -8.0582857131958
    7. ' le' → logprob: -8.8082857131958
    8. 'return' → logprob: -9.4332857131958
    9. ' la' → logprob: -9.8082857131958
    10. 'la' → logprob: -9.9332857131958

Token 825: ''esp' (ID: 73244)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5555074214935303
    2. 'print' → logprob: -1.0555074214935303
    3. 'e' → logprob: -4.430507659912109
    4. 'es' → logprob: -4.430507659912109
    5. 'esp' → logprob: -4.555507659912109
    6. ''esp' → logprob: -4.805507659912109
    7. ''' → logprob: -5.055507659912109
    8. ''impression' → logprob: -5.055507659912109
    9. 'from' → logprob: -5.930507659912109
    10. '#' → logprob: -6.555507659912109

Token 826: 'érance' (ID: 122504)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.3271450698375702
    2. 'érance' → logprob: -1.5771450996398926
    3. 'ect' → logprob: -3.2021450996398926
    4. 'érence' → logprob: -4.577145099639893
    5. 'ort' → logprob: -5.327145099639893
    6. 'ér' → logprob: -5.952145099639893
    7. 'ection' → logprob: -6.077145099639893
    8. 'r' → logprob: -6.202145099639893
    9. 'érience' → logprob: -6.327145099639893
    10. 'rés' → logprob: -6.702145099639893

Token 827: ' totale' (ID: 52898)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19396592676639557
    2. 'result' → logprob: -2.4439659118652344
    3. ' =' → logprob: -3.6939659118652344
    4. 'final' → logprob: -4.068965911865234
    5. '   ' → logprob: -4.193965911865234
    6. 'from' → logprob: -4.443965911865234
    7. 'de' → logprob: -5.193965911865234
    8. ' print' → logprob: -5.693965911865234
    9. '=' → logprob: -5.818965911865234
    10. '[' → logprob: -5.943965911865234

Token 828: ' depuis' (ID: 16277)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01167166605591774
    2. 'result' → logprob: -4.886671543121338
    3. '   ' → logprob: -5.761671543121338
    4. 'res' → logprob: -7.886671543121338
    5. 'return' → logprob: -8.261672019958496
    6. 'expected' → logprob: -9.136672019958496
    7. 'expect' → logprob: -10.386672019958496
    8. 'exp' → logprob: -10.511672019958496
    9. 'esp' → logprob: -10.636672019958496
    10. 'esper' → logprob: -10.761672019958496

Token 829: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5119937062263489
    2. 'from' → logprob: -1.011993646621704
    3. 'print' → logprob: -3.386993646621704
    4. 'le' → logprob: -6.386993885040283
    5. 'la' → logprob: -7.386993885040283
    6. ' ' → logprob: -7.636993885040283
    7. 'to' → logprob: -8.886993408203125
    8. '1' → logprob: -9.261993408203125
    9. ' from' → logprob: -9.261993408203125
    10. ' le' → logprob: -10.136993408203125

Token 830: ' rac' (ID: 12334)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.7643213272094727
    2. 'som' → logprob: -1.5143213272094727
    3. '0' → logprob: -1.8893213272094727
    4. 'dé' → logprob: -2.1393213272094727
    5. 'print' → logprob: -3.8893213272094727
    6. 'prem' → logprob: -4.639321327209473
    7. 'rac' → logprob: -4.889321327209473
    8. 'point' → logprob: -5.389321327209473
    9. 's' → logprob: -7.264321327209473
    10. '#' → logprob: -7.389321327209473

Token 831: 'ine' (ID: 514)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.16816334426403046
    2. '`' → logprob: -3.668163299560547
    3. 'é' → logprob: -4.168163299560547
    4. '[' → logprob: -4.168163299560547
    5. 'c' → logprob: -4.418163299560547
    6. 'a' → logprob: -4.668163299560547
    7. 'o' → logprob: -4.793163299560547
    8. '#' → logprob: -4.918163299560547
    9. '=' → logprob: -4.918163299560547
    10. '(' → logprob: -5.043163299560547

Token 832: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006332583259791136
    2. '   ' → logprob: -5.2563323974609375
    3. 'result' → logprob: -7.7563323974609375
    4. 'return' → logprob: -7.7563323974609375
    5. ' print' → logprob: -8.381332397460938
    6. ',' → logprob: -12.256332397460938
    7. 'expected' → logprob: -12.631332397460938
    8. 'res' → logprob: -13.881332397460938
    9. ' =' → logprob: -14.631332397460938
    10. ' return' → logprob: -14.756332397460938

Token 833: ' stock' (ID: 6546)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005799580831080675
    2. '   ' → logprob: -7.750579833984375
    3. ' print' → logprob: -8.875579833984375
    4. 'return' → logprob: -11.875579833984375
    5. 'result' → logprob: -13.375579833984375
    6. 'from' → logprob: -14.375579833984375
    7. '
' → logprob: -16.000579833984375
    8. '```' → logprob: -16.125579833984375
    9. '#print' → logprob: -16.625579833984375
    10. '	print' → logprob: -16.875579833984375

Token 834: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0005649457452818751
    2. 'é' → logprob: -7.500565052032471
    3. 'ee' → logprob: -12.500564575195312
    4. '[' → logprob: -12.750564575195312
    5. 'e' → logprob: -13.250564575195312
    6. 'ed' → logprob: -13.875564575195312
    7. 'er' → logprob: -13.875564575195312
    8. '#' → logprob: -14.375564575195312
    9. '=' → logprob: -14.875564575195312
    10. 'è' → logprob: -14.875564575195312

Token 835: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16034618020057678
    2. 'dans' → logprob: -2.285346269607544
    3. ' =' → logprob: -4.285346031188965
    4. ' dans' → logprob: -4.535346031188965
    5. '=' → logprob: -4.910346031188965
    6. '   ' → logprob: -5.160346031188965
    7. '[' → logprob: -5.785346031188965
    8. ' print' → logprob: -5.910346031188965
    9. '(print' → logprob: -7.160346031188965
    10. '(' → logprob: -7.785346031188965

Token 836: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.008615988306701183
    2. 'print' → logprob: -4.758615970611572
    3. 'to' → logprob: -13.88361644744873
    4. ' from' → logprob: -15.13361644744873
    5. '   ' → logprob: -16.258615493774414
    6. '```' → logprob: -16.258615493774414
    7. '(from' → logprob: -18.258615493774414
    8. 'stdout' → logprob: -18.383615493774414
    9. '0' → logprob: -18.633615493774414
    10. '`' → logprob: -19.258615493774414

Token 837: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -3.619311974034645e-05
    2. 'from' → logprob: -10.250036239624023
    3. '_E' → logprob: -14.875036239624023
    4. ' E' → logprob: -16.000036239624023
    5. '`' → logprob: -16.125036239624023
    6. '(from' → logprob: -17.000036239624023
    7. '[from' → logprob: -17.125036239624023
    8. '[' → logprob: -17.250036239624023
    9. '```' → logprob: -17.375036239624023
    10. '
' → logprob: -17.375036239624023

Token 838: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06520215421915054
    2. 'print' → logprob: -3.940202236175537
    3. '   ' → logprob: -4.065202236175537
    4. 'return' → logprob: -4.440202236175537
    5. '0' → logprob: -4.690202236175537
    6. 'result' → logprob: -5.440202236175537
    7. ' =' → logprob: -7.440202236175537
    8. '=' → logprob: -8.315201759338379
    9. 'from' → logprob: -9.315201759338379
    10. 'res' → logprob: -9.940201759338379

Token 839: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -19.375
    4. '[' → logprob: -20.125
    5. '
' → logprob: -20.375
    6. '   ' → logprob: -21.125
    7. '０' → logprob: -21.25
    8. '۰' → logprob: -21.5
    9. ']' → logprob: -23.25
    10. '  ' → logprob: -23.5

Token 840: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054855093359947205
    2. ']
' → logprob: -3.5548551082611084
    3. ')' → logprob: -4.429854869842529
    4. '   ' → logprob: -4.679854869842529
    5. ')
' → logprob: -6.054854869842529
    6. 'print' → logprob: -7.304854869842529
    7. '])' → logprob: -8.554855346679688
    8. ' ]' → logprob: -8.929855346679688
    9. '[' → logprob: -9.304855346679688
    10. '
' → logprob: -9.679855346679688

Token 841: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5930830240249634
    2. 'print' → logprob: -0.8430830240249634
    3. 'return' → logprob: -4.093082904815674
    4. ' print' → logprob: -8.343083381652832
    5. ' return' → logprob: -9.968083381652832
    6. '```' → logprob: -11.468083381652832
    7. '    
' → logprob: -11.718083381652832
    8. '	print' → logprob: -12.468083381652832
    9. '	return' → logprob: -14.093083381652832
    10. '#print' → logprob: -14.468083381652832

Token 842: ' all' (ID: 722)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07942009717226028
    2. '   ' → logprob: -2.8294200897216797
    3. 'return' → logprob: -4.07942008972168
    4. ' print' → logprob: -7.95442008972168
    5. ' return' → logprob: -10.70442008972168
    6. '```' → logprob: -11.57942008972168
    7. '	print' → logprob: -14.45442008972168
    8. '#print' → logprob: -16.32942008972168
    9. '  ' → logprob: -16.45442008972168
    10. '    
' → logprob: -16.95442008972168

Token 843: 'E' (ID: 36)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2760934829711914
    2. 'E' → logprob: -2.4010934829711914
    3. ' =' → logprob: -3.2760934829711914
    4. '=' → logprob: -3.4010934829711914
    5. '_' → logprob: -4.151093482971191
    6. '(' → logprob: -4.401093482971191
    7. '_expected' → logprob: -4.651093482971191
    8. '_expect' → logprob: -4.651093482971191
    9. '_time' → logprob: -4.901093482971191
    10. '()[' → logprob: -5.526093482971191

Token 844: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6415817141532898
    2. ' =' → logprob: -0.7665817141532898
    3. 'x' → logprob: -5.0165815353393555
    4. '[' → logprob: -7.0165815353393555
    5. 'xp' → logprob: -7.5165815353393555
    6. 'pect' → logprob: -7.7665815353393555
    7. 'pected' → logprob: -8.891581535339355
    8. '_' → logprob: -9.141581535339355
    9. 'ect' → logprob: -10.016581535339355
    10. '[]' → logprob: -10.766581535339355

Token 845: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0008055794751271605
    2. ' from' → logprob: -7.125805377960205
    3. '(from' → logprob: -14.250805854797363
    4. '0' → logprob: -15.250805854797363
    5. ' ' → logprob: -17.000804901123047
    6. '   ' → logprob: -17.500804901123047
    7. '	from' → logprob: -17.750804901123047
    8. 'float' → logprob: -17.750804901123047
    9. 'to' → logprob: -17.875804901123047
    10. '[from' → logprob: -17.875804901123047

Token 846: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.625
    3. 'from' → logprob: -16.625
    4. '_E' → logprob: -18.125
    5. 'e' → logprob: -19.125
    6. ' E' → logprob: -19.375
    7. '_' → logprob: -20.375
    8. '0' → logprob: -20.625
    9. '
' → logprob: -20.875
    10. '`' → logprob: -21.125

Token 847: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.438573680294212e-06
    2. '0' → logprob: -13.125005722045898
    3. '<|end|>' → logprob: -13.375005722045898
    4. '```' → logprob: -14.250005722045898
    5. 'def' → logprob: -15.125005722045898
    6. '
' → logprob: -15.500005722045898
    7. ' [' → logprob: -15.625005722045898
    8. '\[' → logprob: -15.750005722045898
    9. '#' → logprob: -16.2500057220459
    10. '[
' → logprob: -16.6250057220459

Token 848: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '[' → logprob: -19.875
    4. '۰' → logprob: -20.625
    5. '```' → logprob: -20.875
    6. '   ' → logprob: -22.0
    7. '０' → logprob: -22.125
    8. '
' → logprob: -22.5
    9. '<|end|>' → logprob: -22.625
    10. '1' → logprob: -22.75

Token 849: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13192427158355713
    2. ')
' → logprob: -2.1319241523742676
    3. ']' → logprob: -5.881924152374268
    4. '   ' → logprob: -6.256924152374268
    5. ']
' → logprob: -8.756924629211426
    6. 'print' → logprob: -9.631924629211426
    7. ')
' → logprob: -10.881924629211426
    8. '
' → logprob: -11.881924629211426
    9. '+' → logprob: -12.131924629211426
    10. ' )' → logprob: -12.131924629211426

Token 850: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003976292908191681
    2. 'print' → logprob: -5.753976345062256
    3. '    
' → logprob: -8.128975868225098
    4. 'return' → logprob: -8.253975868225098
    5. '
' → logprob: -9.253975868225098
    6. '<|end|>' → logprob: -9.503975868225098
    7. '```' → logprob: -10.378975868225098
    8. 'if' → logprob: -10.628975868225098
    9. '	return' → logprob: -12.503975868225098
    10. '	print' → logprob: -13.378975868225098

Token 851: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16465947031974792
    2. 'print' → logprob: -1.9146595001220703
    3. 'return' → logprob: -5.66465950012207
    4. '
' → logprob: -7.78965950012207
    5. '    
' → logprob: -7.78965950012207
    6. '```' → logprob: -9.78965950012207
    7. '<|end|>' → logprob: -10.66465950012207
    8. ' print' → logprob: -10.66465950012207
    9. 'if' → logprob: -11.53965950012207
    10. ' return' → logprob: -12.28965950012207

Token 852: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.0126840758603066e-05
    2. '   ' → logprob: -10.750040054321289
    3. 'return' → logprob: -11.125040054321289
    4. ' print' → logprob: -12.500040054321289
    5. 'if' → logprob: -16.25004005432129
    6. '#print' → logprob: -17.37504005432129
    7. '```' → logprob: -17.75004005432129
    8. '#' → logprob: -18.25004005432129
    9. 'import' → logprob: -19.00004005432129
    10. 'for' → logprob: -19.37504005432129

Token 853: ' initialise' (ID: 145250)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004397598095238209
    2. ' print' → logprob: -5.629397392272949
    3. '   ' → logprob: -7.879397392272949
    4. '#' → logprob: -8.50439739227295
    5. 'return' → logprob: -9.00439739227295
    6. 'for' → logprob: -10.62939739227295
    7. '#print' → logprob: -10.87939739227295
    8. 'def' → logprob: -11.12939739227295
    9. '.print' → logprob: -12.12939739227295
    10. 'import' → logprob: -12.12939739227295

Token 854: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2654011249542236
    2. 'best' → logprob: -1.6404011249542236
    3. 'ans' → logprob: -1.7654011249542236
    4. 'answer' → logprob: -2.6404011249542236
    5. 'min' → logprob: -2.8904011249542236
    6. 'result' → logprob: -3.0154011249542236
    7. 'max' → logprob: -3.7654011249542236
    8. ' res' → logprob: -4.0154008865356445
    9. 'total' → logprob: -4.5154008865356445
    10. 'ret' → logprob: -4.5154008865356445

Token 855: ' réponse' (ID: 50332)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.940199613571167
    2. 'best' → logprob: -1.690199613571167
    3. 'ans' → logprob: -2.190199613571167
    4. 'min' → logprob: -2.315199613571167
    5. 'max' → logprob: -2.440199613571167
    6. 'result' → logprob: -3.690199613571167
    7. 'answer' → logprob: -4.065199851989746
    8. 'print' → logprob: -4.065199851989746
    9. 'ret' → logprob: -4.190199851989746
    10. 'mx' → logprob: -5.065199851989746

Token 856: ' avec' (ID: 3937)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9231740832328796
    2. '   ' → logprob: -1.1731741428375244
    3. 'answer' → logprob: -1.6731741428375244
    4. 'res' → logprob: -2.6731741428375244
    5. ' ans' → logprob: -3.9231741428375244
    6. ' =' → logprob: -4.673173904418945
    7. 'result' → logprob: -6.048173904418945
    8. '=' → logprob: -6.548173904418945
    9. ' answer' → logprob: -6.673173904418945
    10. 'best' → logprob: -7.798173904418945

Token 857: ' cette' (ID: 7696)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5061100125312805
    2. '0' → logprob: -1.6311099529266357
    3. 'to' → logprob: -2.5061099529266357
    4. 'float' → logprob: -2.5061099529266357
    5. '1' → logprob: -4.131110191345215
    6. 'n' → logprob: -4.881110191345215
    7. 'max' → logprob: -5.381110191345215
    8. '100' → logprob: -6.006110191345215
    9. 'int' → logprob: -6.131110191345215
    10. 'from' → logprob: -7.006110191345215

Token 858: ' esp' (ID: 7461)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.10184266418218613
    2. ' valeur' → logprob: -2.3518426418304443
    3. 'all' → logprob: -7.226842880249023
    4. ' val' → logprob: -7.726842880249023
    5. 'value' → logprob: -8.851842880249023
    6. 'variable' → logprob: -9.351842880249023
    7. ' all' → logprob: -9.976842880249023
    8. '#' → logprob: -9.976842880249023
    9. ' variable' → logprob: -10.101842880249023
    10. '_val' → logprob: -10.851842880249023

Token 859: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.010494951158761978
    2. 'er' → logprob: -5.510495185852051
    3. 'érence' → logprob: -6.135495185852051
    4. 'rance' → logprob: -6.760495185852051
    5. 'érience' → logprob: -6.885495185852051
    6. 'all' → logprob: -6.885495185852051
    7. 'ér' → logprob: -8.38549518585205
    8. '=' → logprob: -8.63549518585205
    9. 'èce' → logprob: -9.51049518585205
    10. 'é' → logprob: -9.76049518585205

Token 860: ' de' (ID: 334)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.5612361431121826
    2. 'res' → logprob: -1.5612361431121826
    3. 'ans' → logprob: -1.6862361431121826
    4. 'result' → logprob: -3.9362361431121826
    5. '   ' → logprob: -4.936236381530762
    6. 'r' → logprob: -6.186236381530762
    7. ' answer' → logprob: -6.436236381530762
    8. ' ans' → logprob: -6.436236381530762
    9. ' =' → logprob: -7.186236381530762
    10. 're' → logprob: -7.811236381530762

Token 861: ' base' (ID: 3611)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.052226465195417404
    2. 'all' → logprob: -3.4272265434265137
    3. 'depart' → logprob: -5.302226543426514
    4. 'base' → logprob: -5.427226543426514
    5. '0' → logprob: -5.677226543426514
    6. 'from' → logprob: -6.677226543426514
    7. ' départ' → logprob: -7.177226543426514
    8. 'part' → logprob: -7.677226543426514
    9. 'arr' → logprob: -8.052226066589355
    10. 'tout' → logprob: -8.177226066589355

Token 862: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7390161752700806
    2. 'ans' → logprob: -0.9890161752700806
    3. 'answer' → logprob: -1.9890161752700806
    4. 'result' → logprob: -5.114016056060791
    5. '   ' → logprob: -5.614016056060791
    6. ' ans' → logprob: -6.114016056060791
    7. 'ret' → logprob: -7.739016056060791
    8. 'r' → logprob: -7.739016056060791
    9. ' answer' → logprob: -7.989016056060791
    10. ' res' → logprob: -8.73901653289795

Token 863: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6181004047393799
    2. 'res' → logprob: -0.9931004047393799
    3. 'answer' → logprob: -2.49310040473938
    4. '   ' → logprob: -5.618100166320801
    5. ' ans' → logprob: -6.243100166320801
    6. 'result' → logprob: -6.618100166320801
    7. 'r' → logprob: -8.3681001663208
    8. ' res' → logprob: -8.6181001663208
    9. '
' → logprob: -8.6181001663208
    10. 'ret' → logprob: -8.9931001663208

Token 864: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3603832721710205
    2. 'res' → logprob: -1.3603832721710205
    3. 'answer' → logprob: -3.2353832721710205
    4. 'ret' → logprob: -5.610383033752441
    5. 'best' → logprob: -6.235383033752441
    6. 'result' → logprob: -7.985383033752441
    7. 'r' → logprob: -8.235383033752441
    8. 're' → logprob: -9.110383033752441
    9. 'an' → logprob: -9.860383033752441
    10. 'resp' → logprob: -10.110383033752441

Token 865: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687217235565186
    2. ' =' → logprob: -1.1368721723556519
    3. ',' → logprob: -14.636872291564941
    4. ' ' → logprob: -15.511872291564941
    5. '＝' → logprob: -15.636872291564941
    6. '=int' → logprob: -16.136871337890625
    7. ' ' → logprob: -16.636871337890625
    8. '   ' → logprob: -16.761871337890625
    9. '  ' → logprob: -18.011871337890625
    10. '=float' → logprob: -18.136871337890625

Token 866: ' from' (ID: 591)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00976494513452053
    2. ' all' → logprob: -4.634765148162842
    3. 'from' → logprob: -11.884764671325684
    4. 'int' → logprob: -14.384764671325684
    5. '   ' → logprob: -14.759764671325684
    6. '	all' → logprob: -15.259764671325684
    7. ' from' → logprob: -15.759764671325684
    8. '0' → logprob: -15.759764671325684
    9. ' ' → logprob: -16.134765625
    10. '_all' → logprob: -16.384765625

Token 867: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.25
    3. '_E' → logprob: -17.125
    4. ' E' → logprob: -17.75
    5. '[' → logprob: -18.0
    6. '_' → logprob: -18.5
    7. 'all' → logprob: -18.75
    8. 'Е' → logprob: -19.125
    9. 'from' → logprob: -20.125
    10. '_e' → logprob: -20.75

Token 868: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003541734768077731
    2. '0' → logprob: -8.750353813171387
    3. '<|end|>' → logprob: -8.750353813171387
    4. '[:]' → logprob: -11.125353813171387
    5. '.copy' → logprob: -12.125353813171387
    6. '```' → logprob: -13.000353813171387
    7. '**' → logprob: -13.750353813171387
    8. ' [' → logprob: -13.875353813171387
    9. '[:' → logprob: -14.000353813171387
    10. '+' → logprob: -14.000353813171387

Token 869: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. ' ' → logprob: -16.25
    4. '```' → logprob: -16.625
    5. '1' → logprob: -17.375
    6. '
' → logprob: -18.0
    7. '۰' → logprob: -18.3125
    8. 'from' → logprob: -18.6875
    9. '   ' → logprob: -19.25
    10. '０' → logprob: -19.5625

Token 870: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18124821782112122
    2. ']' → logprob: -1.8062481880187988
    3. ')
' → logprob: -7.556248188018799
    4. '   ' → logprob: -8.431248664855957
    5. '])' → logprob: -8.806248664855957
    6. '#' → logprob: -9.181248664855957
    7. '+' → logprob: -9.306248664855957
    8. ' )' → logprob: -9.306248664855957
    9. '
' → logprob: -9.806248664855957
    10. ']
' → logprob: -9.931248664855957

Token 871: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027045253664255142
    2. '    
' → logprob: -3.777045249938965
    3. '
' → logprob: -6.027045249938965
    4. 'for' → logprob: -6.902045249938965
    5. ' for' → logprob: -8.777045249938965
    6. '  
' → logprob: -10.152045249938965
    7. '```' → logprob: -10.277045249938965
    8. '   
' → logprob: -10.402045249938965
    9. '        
' → logprob: -10.527045249938965
    10. '<|end|>' → logprob: -10.777045249938965

Token 872: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027281226590275764
    2. 'for' → logprob: -4.027281284332275
    3. '    
' → logprob: -4.902281284332275
    4. '
' → logprob: -6.652281284332275
    5. ' for' → logprob: -9.027280807495117
    6. '#' → logprob: -9.277280807495117
    7. 'if' → logprob: -10.152280807495117
    8. '   
' → logprob: -10.652280807495117
    9. '  
' → logprob: -10.902280807495117
    10. 'max' → logprob: -11.527280807495117

Token 873: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.058777909725904465
    2. '   ' → logprob: -3.1837778091430664
    3. '#' (adapté à ' #') → logprob: -4.308777809143066
    4. 'max' → logprob: -6.433777809143066
    5. ' for' → logprob: -8.308777809143066
    6. 'best' → logprob: -9.183777809143066
    7. 'change' → logprob: -9.808777809143066
    8. 'count' → logprob: -10.308777809143066
    9. 'min' → logprob: -11.058777809143066
    10. 'visited' → logprob: -11.058777809143066

Token 874: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005613999906927347
    2. '#' → logprob: -6.130613803863525
    3. 'max' → logprob: -6.880613803863525
    4. 'cnt' → logprob: -8.130614280700684
    5. 'change' → logprob: -9.005614280700684
    6. 'ans' → logprob: -9.005614280700684
    7. 'count' → logprob: -9.130614280700684
    8. 'best' → logprob: -9.130614280700684
    9. 'visited' → logprob: -9.255614280700684
    10. 'c' → logprob: -9.255614280700684

Token 875: ' construit' (ID: 119882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017371822614222765
    2. ' for' → logprob: -6.376737117767334
    3. '#' → logprob: -10.501737594604492
    4. '   ' → logprob: -12.626737594604492
    5. 'range' → logprob: -12.876737594604492
    6. '=' → logprob: -14.376737594604492
    7. '
' → logprob: -15.501737594604492
    8. ':' → logprob: -15.626737594604492
    9. '_' → logprob: -16.001737594604492
    10. ' =' → logprob: -16.376737594604492

Token 876: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8434565663337708
    2. ' for' → logprob: -1.343456506729126
    3. ' une' → logprob: -2.343456506729126
    4. 'une' → logprob: -2.343456506729126
    5. ' un' → logprob: -3.093456506729126
    6. 'range' → logprob: -4.093456745147705
    7. 'un' → logprob: -4.218456745147705
    8. '#' → logprob: -4.468456745147705
    9. ' a' → logprob: -5.218456745147705
    10. ' range' → logprob: -5.593456745147705

Token 877: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013585673877969384
    2. '#' → logprob: -7.501358509063721
    3. 'range' → logprob: -7.626358509063721
    4. 'bou' → logprob: -8.876358985900879
    5. 'queue' → logprob: -10.001358985900879
    6. '```' → logprob: -10.126358985900879
    7. 'path' → logprob: -10.876358985900879
    8. 'che' → logprob: -10.876358985900879
    9. ' for' → logprob: -10.876358985900879
    10. 'liste' → logprob: -12.001358985900879

Token 878: ' tf' (ID: 14191)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.008257269859314
    2. 'd' → logprob: -2.5082573890686035
    3. 'diff' → logprob: -2.5082573890686035
    4. '   ' → logprob: -2.6332573890686035
    5. 'changes' → logprob: -3.8832573890686035
    6. 'val' → logprob: -3.8832573890686035
    7. 'cand' → logprob: -3.8832573890686035
    8. 'delta' → logprob: -4.0082573890686035
    9. 'change' → logprob: -4.1332573890686035
    10. 'res' → logprob: -4.2582573890686035

Token 879: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35865163803100586
    2. ' =' → logprob: -1.2336516380310059
    3. '=[' → logprob: -5.608651638031006
    4. '=[]' → logprob: -5.858651638031006
    5. '=[]
' → logprob: -5.858651638031006
    6. 'f' → logprob: -8.233652114868164
    7. 'or' → logprob: -9.108652114868164
    8. 'o' → logprob: -9.483652114868164
    9. '=tf' → logprob: -10.108652114868164
    10. ',' → logprob: -10.358652114868164

Token 880: ' où' (ID: 15113)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.031009962782263756
    2. '[' → logprob: -3.6560099124908447
    3. ' tf' → logprob: -5.781010150909424
    4. '[]' → logprob: -7.906010150909424
    5. ' [' → logprob: -8.281009674072266
    6. '[to' → logprob: -8.906009674072266
    7. '[t' → logprob: -9.031009674072266
    8. '[i' → logprob: -9.031009674072266
    9. 'to' → logprob: -9.281009674072266
    10. '[(' → logprob: -9.406009674072266

Token 881: ' chaque' (ID: 21194)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.006434576120227575
    2. 'i' → logprob: -6.381434440612793
    3. '[i' → logprob: -6.506434440612793
    4. 'len' → logprob: -7.631434440612793
    5. 'True' → logprob: -7.756434440612793
    6. 'f' → logprob: -7.881434440612793
    7. '_tf' → logprob: -7.881434440612793
    8. ' tf' → logprob: -8.006434440612793
    9. 'to' → logprob: -8.006434440612793
    10. 'for' → logprob: -8.256434440612793

Token 882: ' élément' (ID: 99627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15176673233509064
    2. 'tf' → logprob: -3.026766777038574
    3. 'f' → logprob: -3.776766777038574
    4. 'elem' → logprob: -4.776766777038574
    5. '[i' → logprob: -4.901766777038574
    6. ' i' → logprob: -5.026766777038574
    7. '_' → logprob: -5.151766777038574
    8. 'x' → logprob: -5.276766777038574
    9. '(i' → logprob: -5.401766777038574
    10. 'k' → logprob: -6.026766777038574

Token 883: ' correspond' (ID: 11095)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019414497539401054
    2. ' =' → logprob: -4.14441442489624
    3. '=[' → logprob: -6.51941442489624
    4. '=tf' → logprob: -7.76941442489624
    5. '=[]' → logprob: -7.89441442489624
    6. ' est' → logprob: -8.269414901733398
    7. '=(' → logprob: -8.394414901733398
    8. 'is' → logprob: -8.394414901733398
    9. 'est' → logprob: -9.394414901733398
    10. 'f' → logprob: -10.019414901733398

Token 884: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5297079086303711
    2. ' à' → logprob: -1.279707908630371
    3. '=' → logprob: -2.529707908630371
    4. 'to' → logprob: -4.029707908630371
    5. ' =' → logprob: -4.529707908630371
    6. 'aux' → logprob: -5.154707908630371
    7. ' aux' → logprob: -5.279707908630371
    8. ''à' → logprob: -5.779707908630371
    9. ' to' → logprob: -5.904707908630371
    10. ')' → logprob: -6.779707908630371

Token 885: ' une' (ID: 2463)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0844018459320068
    2. 'len' → logprob: -1.7094018459320068
    3. '0' → logprob: -2.209401845932007
    4. '[]' → logprob: -3.084401845932007
    5. '(i' → logprob: -3.209401845932007
    6. '[' → logprob: -3.209401845932007
    7. 'i' → logprob: -3.334401845932007
    8. 'to' → logprob: -3.334401845932007
    9. 'False' → logprob: -3.334401845932007
    10. 'range' → logprob: -3.459401845932007

Token 886: ' "' (ID: 392)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.44374793767929077
    2. 'tuple' → logprob: -2.9437479972839355
    3. 'prob' → logprob: -3.0687479972839355
    4. '[' → logprob: -3.6937479972839355
    5. '[i' → logprob: -3.6937479972839355
    6. 'len' → logprob: -3.8187479972839355
    7. 'list' → logprob: -4.0687479972839355
    8. '[]' → logprob: -4.0687479972839355
    9. 'range' → logprob: -4.0687479972839355
    10. ' liste' → logprob: -4.4437479972839355

Token 887: 'con' (ID: 542)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.4048329591751099
    2. 'to' → logprob: -2.0298328399658203
    3. 'len' → logprob: -2.1548328399658203
    4. 'tuple' → logprob: -2.4048328399658203
    5. 'float' → logprob: -2.9048328399658203
    6. '[]' → logprob: -3.4048328399658203
    7. 'prob' → logprob: -3.5298328399658203
    8. 'transition' → logprob: -3.6548328399658203
    9. '[i' → logprob: -3.9048328399658203
    10. '[' → logprob: -4.02983283996582

Token 888: 'tribution' (ID: 7090)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3164347410202026
    2. 't' → logprob: -1.5664347410202026
    3. 'nection' → logprob: -2.066434860229492
    4. 'd' → logprob: -2.066434860229492
    5. 'f' → logprob: -2.566434860229492
    6. 'n' → logprob: -2.816434860229492
    7. 'nect' → logprob: -3.066434860229492
    8. 'tin' → logprob: -3.816434860229492
    9. 'cat' → logprob: -4.816434860229492
    10. 'st' → logprob: -4.941434860229492

Token 889: ' totale' (ID: 52898)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6395504474639893
    2. '[i' → logprob: -1.6395504474639893
    3. '=' → logprob: -2.3895504474639893
    4. 'f' → logprob: -2.6395504474639893
    5. '   ' → logprob: -2.7645504474639893
    6. ']' → logprob: -2.8895504474639893
    7. 'tf' → logprob: -2.8895504474639893
    8. '[]' → logprob: -3.5145504474639893
    9. ' des' → logprob: -3.5145504474639893
    10. ',' → logprob: -3.5145504474639893

Token 890: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2563846111297607
    2. 'f' → logprob: -2.2563846111297607
    3. 'from' → logprob: -2.3813846111297607
    4. ']' → logprob: -2.5063846111297607
    5. 'to' → logprob: -2.5063846111297607
    6. ' des' → logprob: -2.6313846111297607
    7. ' =' → logprob: -2.6313846111297607
    8. '   ' → logprob: -3.0063846111297607
    9. 'tf' → logprob: -3.1313846111297607
    10. '=' → logprob: -3.2563846111297607

Token 891: ''une' (ID: 13337)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.7690433859825134
    2. 'e' → logprob: -1.0190434455871582
    3. 'f' → logprob: -3.269043445587158
    4. 'es' → logprob: -3.519043445587158
    5. 'i' → logprob: -4.019043445587158
    6. '[i' → logprob: -4.144043445587158
    7. 'from' → logprob: -4.394043445587158
    8. 'g' → logprob: -4.519043445587158
    9. ' to' → logprob: -4.519043445587158
    10. '[to' → logprob: -4.769043445587158

Token 892: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.9241722226142883
    2. 'are' → logprob: -1.4241721630096436
    3. 'liste' → logprob: -3.4241721630096436
    4. '[i' → logprob: -3.5491721630096436
    5. 'node' → logprob: -3.5491721630096436
    6. 'arr' → logprob: -3.6741721630096436
    7. '```' → logprob: -3.9241721630096436
    8. 's' → logprob: -3.9241721630096436
    9. '[' → logprob: -4.049172401428223
    10. 'for' → logprob: -4.049172401428223

Token 893: 'ête' (ID: 16808)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12238549441099167
    2. 'r' → logprob: -3.1223855018615723
    3. 'g' → logprob: -3.1223855018615723
    4. 'ête' → logprob: -4.622385501861572
    5. 't' → logprob: -5.747385501861572
    6. 'ch' → logprob: -5.997385501861572
    7. 'e' → logprob: -5.997385501861572
    8. 'rc' → logprob: -6.247385501861572
    9. '[' → logprob: -6.872385501861572
    10. 'cs' → logprob: -7.122385501861572

Token 894: '"
' (ID: 1092)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7469677925109863
    2. 'f' → logprob: -0.9969677925109863
    3. '"' → logprob: -2.8719677925109863
    4. '=' → logprob: -3.8719677925109863
    5. ']' → logprob: -4.121967792510986
    6. ')' → logprob: -4.496967792510986
    7. 'tf' → logprob: -4.496967792510986
    8. 't' → logprob: -4.996967792510986
    9. ',' → logprob: -4.996967792510986
    10. '   ' → logprob: -5.496967792510986

Token 895: '   ' (ID: 271)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.055054809898138046
    2. ' =' → logprob: -3.4300549030303955
    3. '=tf' → logprob: -4.680054664611816
    4. '   ' → logprob: -5.305054664611816
    5. ' tf' → logprob: -5.305054664611816
    6. '=' → logprob: -6.430054664611816
    7. '_tf' → logprob: -9.305054664611816
    8. ',' → logprob: -9.305054664611816
    9. '	tf' → logprob: -9.305054664611816
    10. '(tf' → logprob: -10.180054664611816

Token 896: ' #' (ID: 1069)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tf' → logprob: -5.796184723294573e-06
    2. ' tf' → logprob: -12.750005722045898
    3. '=tf' → logprob: -13.500005722045898
    4. ' =' → logprob: -14.250005722045898
    5. '=' → logprob: -15.000005722045898
    6. '   ' → logprob: -15.500005722045898
    7. '_tf' → logprob: -16.1250057220459
    8. '(tf' → logprob: -16.6250057220459
    9. '
' → logprob: -17.1250057220459
    10. '	tf' → logprob: -17.7500057220459

Token 897: ' pour' (ID: 1930)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tf' → logprob: -3.054500666621607e-06
    2. '   ' → logprob: -13.87500286102295
    3. '#' → logprob: -14.12500286102295
    4. '
' → logprob: -14.25000286102295
    5. ' tf' → logprob: -15.50000286102295
    6. '(tf' → logprob: -16.000003814697266
    7. '=tf' → logprob: -16.625003814697266
    8. 't' → logprob: -16.625003814697266
    9. '_tf' → logprob: -16.875003814697266
    10. 'TF' → logprob: -17.125003814697266

Token 898: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04555397853255272
    2. 'tf' → logprob: -3.7955539226531982
    3. 'a' → logprob: -4.295554161071777
    4. 'j' → logprob: -6.295554161071777
    5. '(i' → logprob: -7.170554161071777
    6. 'f' → logprob: -7.295554161071777
    7. 'p' → logprob: -7.420554161071777
    8. 'ans' → logprob: -7.670554161071777
    9. '_i' → logprob: -7.795554161071777
    10. 'u' → logprob: -7.920554161071777

Token 899: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39097312092781067
    2. 'a' → logprob: -1.2659730911254883
    3. '(a' → logprob: -3.8909730911254883
    4. 'edge' → logprob: -5.140973091125488
    5. 'j' → logprob: -5.515973091125488
    6. '[a' → logprob: -6.015973091125488
    7. '(i' → logprob: -6.390973091125488
    8. 'p' → logprob: -6.515973091125488
    9. 'e' → logprob: -7.015973091125488
    10. 'k' → logprob: -7.390973091125488

Token 900: ' i' (ID: 575)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.01204911433160305
    2. ' =' → logprob: -5.012049198150635
    3. '=tf' → logprob: -5.762049198150635
    4. '=' → logprob: -6.637049198150635
    5. ' tf' → logprob: -7.387049198150635
    6. '   ' → logprob: -9.012048721313477
    7. '_tf' → logprob: -10.387048721313477
    8. '(tf' → logprob: -10.637048721313477
    9. ',' → logprob: -10.762048721313477
    10. '
' → logprob: -11.137048721313477

Token 901: ',' (ID: 11)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.0287318117916584
    2. '=tf' → logprob: -4.778731822967529
    3. '   ' → logprob: -4.903731822967529
    4. ' tf' → logprob: -4.903731822967529
    5. ' =' → logprob: -5.653731822967529
    6. '=' → logprob: -7.528731822967529
    7. '
' → logprob: -7.653731822967529
    8. ',' → logprob: -8.778731346130371
    9. '	tf' → logprob: -8.903731346130371
    10. '_tf' → logprob: -9.278731346130371

Token 902: ' impli' (ID: 122177)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tf' → logprob: -6.20603168499656e-05
    2. ' tf' → logprob: -10.125061988830566
    3. '   ' → logprob: -11.875061988830566
    4. '=tf' → logprob: -12.000061988830566
    5. '_tf' → logprob: -12.375061988830566
    6. '	tf' → logprob: -13.625061988830566
    7. 'TF' → logprob: -14.000061988830566
    8. '(tf' → logprob: -14.500061988830566
    9. '
' → logprob: -14.625061988830566
    10. 'Tf' → logprob: -14.750061988830566

Token 903: 'quant' (ID: 39719)
  Prédit: 'quant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.1741413027048111
    2. 'quée' → logprob: -2.2991414070129395
    3. 'qué' → logprob: -4.1741414070129395
    4. 'qués' → logprob: -4.5491414070129395
    5. 'que' → logprob: -4.9241414070129395
    6. 't' → logprob: -5.0491414070129395
    7. 'qu' → logprob: -5.0491414070129395
    8. 'q' → logprob: -6.2991414070129395
    9. 'c' → logprob: -6.6741414070129395
    10. 'cant' → logprob: -6.6741414070129395

Token 904: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02681409753859043
    2. 'g' → logprob: -5.151813983917236
    3. '(i' → logprob: -5.151813983917236
    4. ' i' → logprob: -5.401813983917236
    5. 'l' → logprob: -6.651813983917236
    6. 'range' → logprob: -6.776813983917236
    7. 'e' → logprob: -7.151813983917236
    8. '[i' → logprob: -7.151813983917236
    9. 'tf' → logprob: -7.276813983917236
    10. 'len' → logprob: -7.276813983917236

Token 905: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5260052680969238
    2. 'g' → logprob: -2.026005268096924
    3. 'len' → logprob: -2.276005268096924
    4. 'for' → logprob: -2.401005268096924
    5. 'range' → logprob: -3.526005268096924
    6. 'sum' → logprob: -4.401005268096924
    7. '(i' → logprob: -4.526005268096924
    8. 'enumer' → logprob: -5.026005268096924
    9. 'neighbor' → logprob: -5.776005268096924
    10. '[i' → logprob: -6.401005268096924

Token 906: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.239501714706421
    2. '   ' → logprob: -1.364501714706421
    3. 'for' → logprob: -2.489501714706421
    4. ' =' → logprob: -2.614501714706421
    5. '=' → logprob: -2.614501714706421
    6. ' de' → logprob: -3.114501714706421
    7. 's' → logprob: -3.489501714706421
    8. 'des' → logprob: -3.864501714706421
    9. '[i' → logprob: -4.114501953125
    10. 'def' → logprob: -4.489501953125

Token 907: ' façons' (ID: 165958)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6541818976402283
    2. 'ways' → logprob: -2.154181957244873
    3. 'fa' → logprob: -2.529181957244873
    4. 'for' → logprob: -2.529181957244873
    5. 'g' → logprob: -3.154181957244873
    6. 'i' → logprob: -3.279181957244873
    7. 'che' → logprob: -3.404181957244873
    8. '[i' → logprob: -4.529181957244873
    9. 'vo' → logprob: -4.654181957244873
    10. 'range' → logprob: -4.654181957244873

Token 908: ' d' (ID: 272)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6163204908370972
    2. 'de' → logprob: -1.4913204908370972
    3. 'd' → logprob: -2.4913206100463867
    4. 'for' → logprob: -2.6163206100463867
    5. 'et' → logprob: -3.7413206100463867
    6. 'à' → logprob: -4.991320610046387
    7. '[i' → logprob: -5.241320610046387
    8. 'of' → logprob: -5.366320610046387
    9. 'pour' → logprob: -5.366320610046387
    10. '   ' → logprob: -5.491320610046387

Token 909: ''' (ID: 6)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4822324812412262
    2. 'i' → logprob: -1.4822324514389038
    3. ''arr' → logprob: -2.7322325706481934
    4. 'to' → logprob: -3.8572325706481934
    5. ''arrive' → logprob: -4.107232570648193
    6. 'reach' → logprob: -4.357232570648193
    7. 'range' → logprob: -4.982232570648193
    8. 'o' → logprob: -5.232232570648193
    9. ''aller' → logprob: -5.857232570648193
    10. 'e' → logprob: -6.232232570648193

Token 910: 'atte' (ID: 23975)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.24383072555065155
    2. 'atte' → logprob: -1.618830680847168
    3. 'i' → logprob: -4.243830680847168
    4. 'atter' → logprob: -6.993830680847168
    5. 'at' → logprob: -7.868830680847168
    6. 'part' → logprob: -7.993830680847168
    7. 're' → logprob: -8.118830680847168
    8. 'reach' → logprob: -8.493830680847168
    9. 'par' → logprob: -8.743830680847168
    10. 'range' → logprob: -8.868830680847168

Token 911: 'indre' (ID: 28945)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.7788988351821899
    2. 'nde' → logprob: -2.1538987159729004
    3. 'i' → logprob: -2.5288987159729004
    4. 'ach' → logprob: -2.9038987159729004
    5. '[i' → logprob: -3.0288987159729004
    6. 'nd' → logprob: -3.1538987159729004
    7. 'r' → logprob: -3.4038987159729004
    8. 'n' → logprob: -4.0288987159729
    9. '[' → logprob: -4.2788987159729
    10. 'de' → logprob: -4.2788987159729

Token 912: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1031462624669075
    2. '[i' → logprob: -2.9781463146209717
    3. ' i' → logprob: -3.4781463146209717
    4. '(i' → logprob: -5.103146076202393
    5. 'g' → logprob: -5.728146076202393
    6. 'each' → logprob: -6.728146076202393
    7. 'j' → logprob: -7.103146076202393
    8. 'to' → logprob: -7.478146076202393
    9. '```' → logprob: -7.728146076202393
    10. 's' → logprob: -7.978146076202393

Token 913: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9709015488624573
    2. '=' → logprob: -1.2209014892578125
    3. 'tf' → logprob: -1.5959014892578125
    4. ',' → logprob: -3.0959014892578125
    5. 'f' → logprob: -3.3459014892578125
    6. 'for' → logprob: -4.7209014892578125
    7. '=[]' → logprob: -5.0959014892578125
    8. ']' → logprob: -5.4709014892578125
    9. '=tf' → logprob: -5.5959014892578125
    10. '[i' → logprob: -5.8459014892578125

Token 914: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5356395840644836
    2. ' for' → logprob: -1.4106395244598389
    3. 'tf' → logprob: -3.160639524459839
    4. '#' → logprob: -4.410639762878418
    5. ' tf' → logprob: -4.410639762878418
    6. '   ' → logprob: -4.410639762878418
    7. 'l' → logprob: -4.660639762878418
    8. 'i' → logprob: -4.785639762878418
    9. ' =' → logprob: -5.035639762878418
    10. ' l' → logprob: -5.160639762878418

Token 915: ' coût' (ID: 73109)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018343083560466766
    2. 'l' → logprob: -4.768342971801758
    3. 'from' → logprob: -6.143342971801758
    4. ' len' → logprob: -6.393342971801758
    5. 'length' → logprob: -6.518342971801758
    6. 'nombre' → logprob: -6.643342971801758
    7. '#' → logprob: -7.393342971801758
    8. 'for' → logprob: -7.518342971801758
    9. 'to' → logprob: -7.893342971801758
    10. 'leng' → logprob: -8.018342971801758

Token 916: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9102285504341125
    2. '+' → logprob: -1.5352284908294678
    3. '[i' → logprob: -2.1602284908294678
    4. 'i' → logprob: -3.1602284908294678
    5. 'et' → logprob: -3.4102284908294678
    6. ')' → logprob: -3.4102284908294678
    7. 'for' → logprob: -4.285228729248047
    8. '*i' → logprob: -4.285228729248047
    9. 's' → logprob: -4.410228729248047
    10. '(i' → logprob: -4.535228729248047

Token 917: ' y' (ID: 342)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.4102383852005005
    2. 'j' → logprob: -1.6602383852005005
    3. 'i' → logprob: -1.7852383852005005
    4. 'each' → logprob: -2.285238265991211
    5. 'arr' → logprob: -3.285238265991211
    6. 'un' → logprob: -3.285238265991211
    7. 'les' → logprob: -3.535238265991211
    8. 'le' → logprob: -3.785238265991211
    9. ' chaque' → logprob: -3.910238265991211
    10. 'l' → logprob: -4.035238265991211

Token 918: ' arriver' (ID: 78302)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49877306818962097
    2. 'j' → logprob: -2.6237730979919434
    3. 'i' → logprob: -2.6237730979919434
    4. ' j' → logprob: -2.8737730979919434
    5. 'plus' → logprob: -2.9987730979919434
    6. 'arr' → logprob: -3.3737730979919434
    7. ' arriver' → logprob: -3.7487730979919434
    8. 'être' → logprob: -4.748773097991943
    9. ' +' → logprob: -4.873773097991943
    10. ' aller' → logprob: -5.123773097991943

Token 919: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2116323560476303
    2. ' =' → logprob: -3.086632251739502
    3. '[i' → logprob: -3.461632251739502
    4. '=' → logprob: -3.586632251739502
    5. 'for' → logprob: -3.836632251739502
    6. '*' → logprob: -4.836632251739502
    7. 'from' → logprob: -4.836632251739502
    8. ']' → logprob: -5.086632251739502
    9. ')' → logprob: -5.211632251739502
    10. '   ' → logprob: -5.461632251739502

Token 920: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7700282335281372
    2. '   ' → logprob: -1.6450282335281372
    3. 'for' → logprob: -2.1450281143188477
    4. ',' → logprob: -2.5200281143188477
    5. ' i' → logprob: -3.5200281143188477
    6. ' #' → logprob: -3.6450281143188477
    7. 'i' → logprob: -3.7700281143188477
    8. ' for' → logprob: -4.020028114318848
    9. ']' → logprob: -4.645028114318848
    10. '
' → logprob: -5.145028114318848

Token 921: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.692643940448761
    2. 'i' → logprob: -1.8176438808441162
    3. 'for' → logprob: -2.192643880844116
    4. '   ' → logprob: -3.067643880844116
    5. ' i' → logprob: -3.692643880844116
    6. ' and' → logprob: -3.817643880844116
    7. 'l' → logprob: -4.067644119262695
    8. ' for' → logprob: -4.317644119262695
    9. ']' → logprob: -4.567644119262695
    10. 'j' → logprob: -4.567644119262695

Token 922: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4423989951610565
    2. 'for' → logprob: -1.817399024963379
    3. 'l' → logprob: -2.317399024963379
    4. 'tf' → logprob: -3.442399024963379
    5. 'i' → logprob: -4.192399024963379
    6. 'len' → logprob: -5.067399024963379
    7. '   ' → logprob: -5.692399024963379
    8. ' #' → logprob: -5.817399024963379
    9. 'to' → logprob: -6.067399024963379
    10. 'f' → logprob: -6.067399024963379

Token 923: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1435558795928955
    2. 'l' → logprob: -2.5185558795928955
    3. 'le' → logprob: -4.268555641174316
    4. 'la' → logprob: -4.643555641174316
    5. 'g' → logprob: -5.018555641174316
    6. '#' → logprob: -5.018555641174316
    7. 'the' → logprob: -5.143555641174316
    8. ' la' → logprob: -6.393555641174316
    9. ' len' → logprob: -6.393555641174316
    10. 'i' → logprob: -6.518555641174316

Token 924: ' somme' (ID: 64484)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.45010173320770264
    2. 'for' → logprob: -1.5751017332077026
    3. '#' → logprob: -3.075101852416992
    4. 'from' → logprob: -3.325101852416992
    5. 'out' → logprob: -4.200101852416992
    6. 'l' → logprob: -4.575101852416992
    7. 'nombre' → logprob: -4.700101852416992
    8. 'sum' → logprob: -4.950101852416992
    9. 'g' → logprob: -5.200101852416992
    10. 'prob' → logprob: -5.450101852416992

Token 925: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3393547534942627
    2. 'of' → logprob: -1.7143547534942627
    3. '   ' → logprob: -2.4643547534942627
    4. '([' → logprob: -2.5893547534942627
    5. 'to' → logprob: -2.7143547534942627
    6. '=' → logprob: -2.7143547534942627
    7. ' =' → logprob: -2.9643547534942627
    8. '[i' → logprob: -3.3393547534942627
    9. '(' → logprob: -3.4643547534942627
    10. '(
' → logprob: -3.8393547534942627

Token 926: ' toutes' (ID: 17502)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.35101279616355896
    2. 'from' → logprob: -2.226012706756592
    3. 'len' → logprob: -2.851012706756592
    4. '[to' → logprob: -2.851012706756592
    5. '[g' → logprob: -3.601012706756592
    6. 'g' → logprob: -4.476012706756592
    7. 'l' → logprob: -5.101012706756592
    8. '(to' → logprob: -5.101012706756592
    9. '[(' → logprob: -5.726012706756592
    10. '[i' → logprob: -5.726012706756592

Token 927: ' les' (ID: 1341)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.1599311828613281
    2. '[to' → logprob: -1.5349311828613281
    3. '(to' → logprob: -2.284931182861328
    4. 'len' → logprob: -2.909931182861328
    5. '[i' → logprob: -2.909931182861328
    6. 'from' → logprob: -3.159931182861328
    7. '[len' → logprob: -3.534931182861328
    8. '[g' → logprob: -3.659931182861328
    9. ' to' → logprob: -3.909931182861328
    10. '[j' → logprob: -3.909931182861328

Token 928: ' esp' (ID: 7461)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13279978930950165
    2. 'to' → logprob: -3.6327998638153076
    3. '(from' → logprob: -4.1327996253967285
    4. '[from' → logprob: -4.3827996253967285
    5. 'long' → logprob: -4.6327996253967285
    6. '[to' → logprob: -5.1327996253967285
    7. 'esp' → logprob: -5.2577996253967285
    8. '(to' → logprob: -5.3827996253967285
    9. 'att' → logprob: -5.8827996253967285
    10. 'dist' → logprob: -5.8827996253967285

Token 929: 'ér' (ID: 2156)
  Prédit: 'ér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.10945093631744385
    2. 'érences' → logprob: -2.7344508171081543
    3. 'èces' → logprob: -4.109450817108154
    4. 'érations' → logprob: -5.359450817108154
    5. 'aces' → logprob: -5.734450817108154
    6. 'érons' → logprob: -6.109450817108154
    7. 'érance' → logprob: -6.109450817108154
    8. 'é' → logprob: -6.234450817108154
    9. 'r' → logprob: -6.609450817108154
    10. 'oir' → logprob: -6.734450817108154

Token 930: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.07317128032445908
    2. 'ences' → logprob: -3.448171377182007
    3. 'n' → logprob: -4.448171138763428
    4. 'es' → logprob: -4.823171138763428
    5. 'r' → logprob: -5.698171138763428
    6. 't' → logprob: -6.198171138763428
    7. '```' → logprob: -6.198171138763428
    8. 'ér' → logprob: -6.323171138763428
    9. 'an' → logprob: -7.198171138763428
    10. 'érences' → logprob: -7.323171138763428

Token 931: ' pour' (ID: 1930)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.1176353394985199
    2. ' =' → logprob: -2.4926352500915527
    3. 'f' → logprob: -4.617635250091553
    4. '=' → logprob: -4.742635250091553
    5. '=tf' → logprob: -6.367635250091553
    6. ']' → logprob: -6.617635250091553
    7. ',' → logprob: -6.617635250091553
    8. ' tf' → logprob: -6.742635250091553
    9. 'for' → logprob: -6.867635250091553
    10. '#' → logprob: -7.117635250091553

Token 932: ' ses' (ID: 6707)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.049507539719343185
    2. 'g' → logprob: -3.9245076179504395
    3. 'j' → logprob: -3.9245076179504395
    4. '[i' → logprob: -6.0495076179504395
    5. 'l' → logprob: -6.6745076179504395
    6. 's' → logprob: -6.9245076179504395
    7. ' i' → logprob: -6.9245076179504395
    8. ']' → logprob: -7.5495076179504395
    9. 'all' → logprob: -8.549507141113281
    10. '[' → logprob: -8.674507141113281

Token 933: ' voisins' (ID: 166720)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.618873119354248
    2. 'ar' → logprob: -0.993873119354248
    3. 'succ' → logprob: -2.743873119354248
    4. 'sort' → logprob: -3.868873119354248
    5. 'arr' → logprob: -6.118873119354248
    6. ' voisins' → logprob: -6.868873119354248
    7. 'are' → logprob: -7.618873119354248
    8. 'arri' → logprob: -7.993873119354248
    9. 's' → logprob: -7.993873119354248
    10. 'f' → logprob: -8.118873596191406

Token 934: '
' (ID: 198)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.053222887217998505
    2. ' =' → logprob: -3.803222894668579
    3. '
' → logprob: -4.05322265625
    4. ' tf' → logprob: -5.42822265625
    5. '=tf' → logprob: -6.17822265625
    6. 'f' → logprob: -6.42822265625
    7. '=' → logprob: -6.80322265625
    8. '#' → logprob: -7.67822265625
    9. '=
' → logprob: -8.05322265625
    10. 't' → logprob: -8.05322265625

Token 935: '   ' (ID: 271)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.0005942588322795928
    2. '=tf' → logprob: -8.000594139099121
    3. ' =' → logprob: -9.250594139099121
    4. ' tf' → logprob: -9.250594139099121
    5. '=' → logprob: -10.375594139099121
    6. '(tf' → logprob: -11.500594139099121
    7. '_tf' → logprob: -11.750594139099121
    8. '
' → logprob: -12.000594139099121
    9. '.tf' → logprob: -13.125594139099121
    10. '	tf' → logprob: -13.375594139099121

Token 936: ' tf' (ID: 14191)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tf' (adapté à ' tf') → logprob: -1.1160349458805285e-05
    2. '
' → logprob: -12.125011444091797
    3. ' tf' → logprob: -12.750011444091797
    4. '(tf' → logprob: -14.375011444091797
    5. '=tf' → logprob: -14.375011444091797
    6. 't' → logprob: -14.625011444091797
    7. '_tf' → logprob: -15.250011444091797
    8. '   ' → logprob: -15.375011444091797
    9. '	tf' → logprob: -16.125011444091797
    10. '#' → logprob: -16.625011444091797

Token 937: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688933849334717
    2. '=' → logprob: -1.1368893384933472
    3. '=[]' → logprob: -11.511889457702637
    4. '=[' → logprob: -11.761889457702637
    5. '=[]
' → logprob: -15.136889457702637
    6. '=[[' → logprob: -16.63688850402832
    7. ',' → logprob: -16.88688850402832
    8. '[' → logprob: -16.88688850402832
    9. ' =[' → logprob: -16.88688850402832
    10. '＝' → logprob: -17.38688850402832

Token 938: ' [
' (ID: 4240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011475241743028164
    2. '[]' → logprob: -5.511475086212158
    3. '[n' → logprob: -6.261475086212158
    4. '[p' → logprob: -6.761475086212158
    5. '[i' → logprob: -6.886475086212158
    6. '[to' → logprob: -6.886475086212158
    7. '[(' → logprob: -7.011475086212158
    8. '[[' → logprob: -7.261475086212158
    9. '[x' → logprob: -8.136475563049316
    10. '[m' → logprob: -9.761475563049316

Token 939: '       ' (ID: 309)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.28340011835098267
    2. '(to' → logprob: -1.658400058746338
    3. 'sum' → logprob: -3.783400058746338
    4. '(p' → logprob: -4.408400058746338
    5. '(sum' → logprob: -5.283400058746338
    6. ' to' → logprob: -6.033400058746338
    7. '(
' → logprob: -6.033400058746338
    8. '(' → logprob: -6.033400058746338
    9. '[to' → logprob: -6.033400058746338
    10. 'p' → logprob: -6.283400058746338

Token 940: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.27089470624923706
    2. '(to' → logprob: -1.7708947658538818
    3. '(p' → logprob: -3.645894765853882
    4. 'sum' → logprob: -4.270894527435303
    5. 'p' → logprob: -4.645894527435303
    6. '(
' → logprob: -5.020894527435303
    7. '[to' → logprob: -5.770894527435303
    8. '(sum' → logprob: -6.145894527435303
    9. '(' → logprob: -6.395894527435303
    10. ' to' → logprob: -6.520894527435303

Token 941: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.5094070477061905e-05
    2. 'E' → logprob: -12.000015258789062
    3. '[i' → logprob: -12.750015258789062
    4. '[' → logprob: -13.250015258789062
    5. ' P' → logprob: -14.125015258789062
    6. '[P' → logprob: -14.250015258789062
    7. 'p' → logprob: -14.375015258789062
    8. 'Ｐ' → logprob: -15.125015258789062
    9. '[j' → logprob: -15.250015258789062
    10. '```' → logprob: -15.250015258789062

Token 942: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012422556756064296
    2. '[a' → logprob: -7.251242160797119
    3. '[j' → logprob: -7.876242160797119
    4. ']' → logprob: -10.251242637634277
    5. '][' → logprob: -10.251242637634277
    6. 'i' → logprob: -10.251242637634277
    7. '[' → logprob: -11.501242637634277
    8. '[g' → logprob: -11.751242637634277
    9. '(i' → logprob: -12.626242637634277
    10. ' [' → logprob: -12.626242637634277

Token 943: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7102624177932739
    2. ']*' → logprob: -0.7102624177932739
    3. ']*(' → logprob: -4.085262298583984
    4. ']+' → logprob: -9.710262298583984
    5. '],' → logprob: -10.585262298583984
    6. '*' → logprob: -11.210262298583984
    7. ' ]' → logprob: -11.710262298583984
    8. '][' → logprob: -11.835262298583984
    9. ']
' → logprob: -12.335262298583984
    10. '   ' → logprob: -12.710262298583984

Token 944: '(
' (ID: 1607)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.3736824989318848
    2. '(l' → logprob: -1.6236824989318848
    3. 'len' → logprob: -1.7486824989318848
    4. '(' → logprob: -1.9986824989318848
    5. 'from' → logprob: -2.8736824989318848
    6. '(from' → logprob: -2.8736824989318848
    7. '((' → logprob: -3.3736824989318848
    8. '(to' → logprob: -3.6236824989318848
    9. 'to' → logprob: -3.7486824989318848
    10. 'l' → logprob: -4.373682498931885

Token 945: '           ' (ID: 352)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1265767216682434
    2. 'from' → logprob: -3.5015766620635986
    3. '(to' → logprob: -3.8765766620635986
    4. '1' → logprob: -4.001576900482178
    5. '(' → logprob: -4.251576900482178
    6. '(e' → logprob: -4.376576900482178
    7. 'e' → logprob: -4.626576900482178
    8. 'len' → logprob: -6.251576900482178
    9. 'ans' → logprob: -6.376576900482178
    10. 'sum' → logprob: -6.376576900482178

Token 946: ' (' (ID: 350)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2652188837528229
    2. '1' → logprob: -3.01521897315979
    3. '(e' → logprob: -3.01521897315979
    4. '(' (adapté à ' (') → logprob: -3.26521897315979
    5. '(to' → logprob: -3.26521897315979
    6. 'from' → logprob: -3.89021897315979
    7. 'e' → logprob: -4.265218734741211
    8. 'sum' → logprob: -5.390218734741211
    9. '-' → logprob: -5.890218734741211
    10. 'ans' → logprob: -5.890218734741211

Token 947: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.26217347383499146
    2. 'from' → logprob: -2.5121734142303467
    3. '1' → logprob: -2.6371734142303467
    4. 'e' → logprob: -2.8871734142303467
    5. 'all' → logprob: -5.137173652648926
    6. 'ans' → logprob: -5.262173652648926
    7. '(' → logprob: -5.512173652648926
    8. '(e' → logprob: -6.012173652648926
    9. 'len' → logprob: -6.637173652648926
    10. '(to' → logprob: -6.762173652648926

Token 948: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -3.173704271830502e-06
    2. 'e' → logprob: -14.12500286102295
    3. ' E' → logprob: -14.12500286102295
    4. 'i' → logprob: -14.87500286102295
    5. 'P' → logprob: -15.12500286102295
    6. '   ' → logprob: -15.87500286102295
    7. '```' → logprob: -16.000003814697266
    8. '
' → logprob: -16.375003814697266
    9. '...' → logprob: -16.375003814697266
    10. 'from' → logprob: -16.625003814697266

Token 949: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.251091377227567e-05
    2. '[j' → logprob: -10.625042915344238
    3. ')[' → logprob: -11.875042915344238
    4. '[' → logprob: -12.500042915344238
    5. '][' → logprob: -12.625042915344238
    6. 'i' → logprob: -13.000042915344238
    7. ')' → logprob: -15.000042915344238
    8. ' [' → logprob: -15.000042915344238
    9. ']' → logprob: -15.500042915344238
    10. '```' → logprob: -16.000041961669922

Token 950: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3799862265586853
    2. '[i' → logprob: -1.75498628616333
    3. '-' → logprob: -3.12998628616333
    4. ' +' → logprob: -3.37998628616333
    5. ' -' → logprob: -3.87998628616333
    6. ')+' → logprob: -4.25498628616333
    7. ')' → logprob: -4.75498628616333
    8. ']+' → logprob: -5.00498628616333
    9. '           ' → logprob: -5.25498628616333
    10. '+i' → logprob: -6.37998628616333

Token 951: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07839281111955643
    2. 'from' → logprob: -2.703392744064331
    3. 'all' → logprob: -5.45339298248291
    4. 'ans' → logprob: -5.70339298248291
    5. '0' → logprob: -8.32839298248291
    6. 'to' → logprob: -9.07839298248291
    7. ' ' → logprob: -9.32839298248291
    8. 'e' → logprob: -9.95339298248291
    9. '(from' → logprob: -10.07839298248291
    10. '   ' → logprob: -10.20339298248291

Token 952: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5041397213935852
    2. ')+' → logprob: -1.6291396617889404
    3. ')*' → logprob: -2.3791396617889404
    4. '+' → logprob: -2.3791396617889404
    5. ')-' → logprob: -5.5041399002075195
    6. ' -' → logprob: -6.2541399002075195
    7. '-' → logprob: -6.2541399002075195
    8. ' +' → logprob: -6.3791399002075195
    9. '           ' → logprob: -6.5041399002075195
    10. ' )' → logprob: -6.7541399002075195

Token 953: 'len' (ID: 3303)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5298394560813904
    2. 'len' → logprob: -1.4048395156860352
    3. 'from' → logprob: -2.029839515686035
    4. 'ans' → logprob: -4.154839515686035
    5. '+' → logprob: -5.779839515686035
    6. '(l' → logprob: -5.904839515686035
    7. '1' → logprob: -6.029839515686035
    8. '(len' → logprob: -6.029839515686035
    9. 'to' → logprob: -6.404839515686035
    10. '(' → logprob: -6.404839515686035

Token 954: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -11.000021934509277
    3. ' (' → logprob: -12.625021934509277
    4. '(
' → logprob: -14.000021934509277
    5. 'g' → logprob: -14.125021934509277
    6. '[g' → logprob: -15.750021934509277
    7. ')' → logprob: -16.75002098083496
    8. ' g' → logprob: -18.75002098083496
    9. 's' → logprob: -19.12502098083496
    10. '(gl' → logprob: -19.12502098083496

Token 955: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.217951886355877e-05
    2. '(i' → logprob: -10.250061988830566
    3. 'g' → logprob: -11.375061988830566
    4. ')' → logprob: -11.500061988830566
    5. ')[' → logprob: -13.125061988830566
    6. '[g' → logprob: -13.250061988830566
    7. '[' → logprob: -14.750061988830566
    8. ' [' → logprob: -14.875061988830566
    9. 'i' → logprob: -15.625061988830566
    10. ')i' → logprob: -15.875061988830566

Token 956: '])+' (ID: 119485)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14818152785301208
    2. '])' → logprob: -2.023181438446045
    3. ')' → logprob: -5.273181438446045
    4. '[' → logprob: -9.523181915283203
    5. '(i' → logprob: -9.773181915283203
    6. ']' → logprob: -9.773181915283203
    7. '])+' → logprob: -10.398181915283203
    8. '])-' → logprob: -10.648181915283203
    9. '])
' → logprob: -10.898181915283203
    10. ''])' → logprob: -11.273181915283203

Token 957: '           ' (ID: 352)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16768422722816467
    2. 'from' → logprob: -1.9176841974258423
    3. '-s' → logprob: -5.542684078216553
    4. '           ' → logprob: -6.542684078216553
    5. ' sum' → logprob: -6.917684078216553
    6. '(sum' → logprob: -8.417684555053711
    7. '-' → logprob: -8.667684555053711
    8. 'all' → logprob: -9.167684555053711
    9. 'to' → logprob: -9.292684555053711
    10. '-from' → logprob: -9.292684555053711

Token 958: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.34888556599617004
    2. 'from' → logprob: -1.2238855361938477
    3. ' sum' → logprob: -8.223885536193848
    4. '(sum' → logprob: -9.848885536193848
    5. 'to' → logprob: -10.348885536193848
    6. '(from' → logprob: -10.598885536193848
    7. ' from' → logprob: -10.598885536193848
    8. '   ' → logprob: -11.473885536193848
    9. '           ' → logprob: -11.598885536193848
    10. '(' → logprob: -12.848885536193848

Token 959: ' Som' (ID: 12116)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.14365719258785248
    2. 'from' → logprob: -2.0186572074890137
    3. ' sum' → logprob: -8.018656730651855
    4. 'all' → logprob: -8.018656730651855
    5. '(sum' → logprob: -9.018656730651855
    6. 'to' → logprob: -10.018656730651855
    7. '(from' → logprob: -10.268656730651855
    8. 'ans' → logprob: -10.643656730651855
    9. 'len' → logprob: -11.143656730651855
    10. '   ' → logprob: -11.143656730651855

Token 960: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0007819918682798743
    2. '([' → logprob: -8.500782012939453
    3. 'ma' → logprob: -9.000782012939453
    4. '(to' → logprob: -9.875782012939453
    5. '(len' → logprob: -10.125782012939453
    6. 'e' → logprob: -10.125782012939453
    7. '(me' → logprob: -10.375782012939453
    8. 'g' → logprob: -10.500782012939453
    9. '(g' → logprob: -10.500782012939453
    10. '[(' → logprob: -10.500782012939453

Token 961: ' des' (ID: 731)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19598113000392914
    2. 'sum' → logprob: -1.8209811449050903
    3. '(sum' → logprob: -5.070981025695801
    4. 'to' → logprob: -5.445981025695801
    5. '(from' → logprob: -5.945981025695801
    6. ' from' → logprob: -6.820981025695801
    7. ' sum' → logprob: -7.070981025695801
    8. '(' → logprob: -8.0709810256958
    9. ' (' → logprob: -8.8209810256958
    10. 'len' → logprob: -8.9459810256958

Token 962: ' coûts' (ID: 116912)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.008177882991731167
    2. 'to' → logprob: -5.508177757263184
    3. '[from' → logprob: -6.258177757263184
    4. ' from' → logprob: -7.258177757263184
    5. '(from' → logprob: -7.383177757263184
    6. 'sum' → logprob: -8.383177757263184
    7. 'g' → logprob: -9.133177757263184
    8. '[to' → logprob: -9.133177757263184
    9. '[g' → logprob: -9.758177757263184
    10. '[' → logprob: -10.133177757263184

Token 963: ' des' (ID: 731)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3649595081806183
    2. ' from' → logprob: -1.989959478378296
    3. 'sum' → logprob: -2.614959478378296
    4. ' sum' → logprob: -2.739959478378296
    5. ' to' → logprob: -4.614959716796875
    6. 'to' → logprob: -4.739959716796875
    7. ' for' → logprob: -6.114959716796875
    8. ' -' → logprob: -6.114959716796875
    9. ' (' → logprob: -6.364959716796875
    10. '+' → logprob: -6.614959716796875

Token 964: ' chemins' (ID: 192063)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.10790734738111496
    2. 'from' → logprob: -2.482907295227051
    3. 'neighbors' → logprob: -4.982907295227051
    4. ' g' → logprob: -5.232907295227051
    5. '[g' → logprob: -5.607907295227051
    6. ' from' → logprob: -7.357907295227051
    7. 'to' → logprob: -7.357907295227051
    8. '[from' → logprob: -7.482907295227051
    9. '[i' → logprob: -8.85790729522705
    10. '[j' → logprob: -8.85790729522705

Token 965: ' sort' (ID: 4506)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8035920262336731
    2. ' -' → logprob: -1.0535919666290283
    3. '-' → logprob: -2.4285919666290283
    4. '*' → logprob: -2.8035919666290283
    5. '-from' → logprob: -4.053592205047607
    6. 'to' → logprob: -4.803592205047607
    7. ' from' → logprob: -5.053592205047607
    8. 'sum' → logprob: -5.178592205047607
    9. '+' → logprob: -5.303592205047607
    10. ' *' → logprob: -5.553592205047607

Token 966: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.002262663561850786
    2. 'antes' → logprob: -6.877262592315674
    3. '[' → logprob: -7.377262592315674
    4. 'ies' → logprob: -9.252263069152832
    5. 's' → logprob: -9.252263069152832
    6. 'ant' → logprob: -9.377263069152832
    7. '[i' → logprob: -9.627263069152832
    8. 'i' → logprob: -9.752263069152832
    9. '
' → logprob: -10.377263069152832
    10. '(' → logprob: -10.752263069152832

Token 967: ' du' (ID: 1462)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5370045900344849
    2. 'sum' → logprob: -1.6620045900344849
    3. ' sum' → logprob: -2.1620044708251953
    4. ' from' → logprob: -2.6620044708251953
    5. 'to' → logprob: -3.9120044708251953
    6. ' to' → logprob: -4.412004470825195
    7. '+' → logprob: -5.537004470825195
    8. ' (' → logprob: -6.787004470825195
    9. ' +' → logprob: -7.037004470825195
    10. '(from' → logprob: -7.537004470825195

Token 968: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03918075934052467
    2. 'g' → logprob: -3.2891807556152344
    3. ' i' → logprob: -7.039180755615234
    4. '[i' → logprob: -8.789180755615234
    5. ' g' → logprob: -9.664180755615234
    6. '```' → logprob: -10.664180755615234
    7. 'j' → logprob: -11.914180755615234
    8. '(i' → logprob: -13.039180755615234
    9. 's' → logprob: -13.164180755615234
    10. '   ' → logprob: -13.289180755615234

Token 969: ' i' (ID: 575)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3711155652999878
    2. ' g' → logprob: -2.8711156845092773
    3. 'len' → logprob: -2.8711156845092773
    4. ' (' → logprob: -3.2461156845092773
    5. 'i' → logprob: -3.4961156845092773
    6. ' len' → logprob: -4.246115684509277
    7. 'j' → logprob: -4.246115684509277
    8. '[i' → logprob: -4.496115684509277
    9. '(i' → logprob: -4.496115684509277
    10. ' i' → logprob: -4.496115684509277

Token 970: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8330280184745789
    2. '+' → logprob: -1.8330280780792236
    3. 'sum' → logprob: -2.0830280780792236
    4. ' sum' → logprob: -2.4580280780792236
    5. ' from' → logprob: -2.9580280780792236
    6. ' +' → logprob: -2.9580280780792236
    7. 'to' → logprob: -3.9580280780792236
    8. ' (' → logprob: -4.2080278396606445
    9. ' -' → logprob: -4.2080278396606445
    10. ' to' → logprob: -4.4580278396606445

Token 971: '           ' (ID: 352)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13926973938941956
    2. 'sum' → logprob: -2.6392698287963867
    3. ' from' → logprob: -3.6392698287963867
    4. ' sum' → logprob: -4.264269828796387
    5. 'to' → logprob: -4.389269828796387
    6. ' to' → logprob: -6.389269828796387
    7. ' (' → logprob: -6.639269828796387
    8. '(from' → logprob: -6.889269828796387
    9. '(sum' → logprob: -7.889269828796387
    10. '   ' → logprob: -8.014269828796387

Token 972: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.07048717141151428
    2. 'from' → logprob: -2.6954872608184814
    3. ' sum' → logprob: -7.945487022399902
    4. '(sum' → logprob: -9.320487022399902
    5. 'to' → logprob: -10.195487022399902
    6. '           ' → logprob: -10.695487022399902
    7. '   ' → logprob: -11.320487022399902
    8. '(from' → logprob: -11.695487022399902
    9. ' from' → logprob: -11.820487022399902
    10. '               ' → logprob: -12.695487022399902

Token 973: '([' (ID: 5194)
  Prédit: '(from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(from' → logprob: -0.001985140610486269
    2. '([' → logprob: -6.2519850730896
    3. 'from' → logprob: -10.751985549926758
    4. '(' → logprob: -10.876985549926758
    5. '[from' → logprob: -11.876985549926758
    6. '((' → logprob: -12.001985549926758
    7. '(
' → logprob: -13.626985549926758
    8. '(to' → logprob: -14.126985549926758
    9. '([(' → logprob: -14.751985549926758
    10. '([
' → logprob: -15.251985549926758

Token 974: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.00024275471514556557
    2. ' from' → logprob: -8.500243186950684
    3. '(from' → logprob: -10.625243186950684
    4. 'to' → logprob: -11.500243186950684
    5. '   ' → logprob: -13.375243186950684
    6. '[from' → logprob: -14.250243186950684
    7. '(' → logprob: -14.375243186950684
    8. ' ' → logprob: -15.125243186950684
    9. ' (' → logprob: -15.375243186950684
    10. '           ' → logprob: -15.500243186950684

Token 975: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -6.869017852295656e-06
    2. '[j' → logprob: -12.125006675720215
    3. ' E' → logprob: -14.875006675720215
    4. 'g' → logprob: -15.500006675720215
    5. 'from' → logprob: -15.500006675720215
    6. '```' → logprob: -16.00000762939453
    7. '[E' → logprob: -16.37500762939453
    8. '[g' → logprob: -16.62500762939453
    9. 'e' → logprob: -16.75000762939453
    10. '(j' → logprob: -16.87500762939453

Token 976: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.180258191714529e-06
    2. 'j' → logprob: -12.625008583068848
    3. '[' → logprob: -13.000008583068848
    4. '(j' → logprob: -13.500008583068848
    5. ' [' → logprob: -15.500008583068848
    6. '[
' → logprob: -15.500008583068848
    7. '```' → logprob: -15.625008583068848
    8. '[g' → logprob: -15.875008583068848
    9. '[i' → logprob: -16.00000762939453
    10. '   ' → logprob: -16.37500762939453

Token 977: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48434382677078247
    2. 'for' → logprob: -1.1093437671661377
    3. ']+' → logprob: -3.4843437671661377
    4. ' for' → logprob: -3.8593437671661377
    5. '+' → logprob: -7.359344005584717
    6. '()' → logprob: -8.234343528747559
    7. ')' → logprob: -8.234343528747559
    8. '[j' → logprob: -8.359343528747559
    9. ']*' → logprob: -8.734343528747559
    10. '```' → logprob: -8.734343528747559

Token 978: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10340718179941177
    2. ' for' → logprob: -2.353407144546509
    3. '+' → logprob: -5.853407382965088
    4. ')' → logprob: -9.35340690612793
    5. ']+' → logprob: -10.10340690612793
    6. ']' → logprob: -10.47840690612793
    7. '   ' → logprob: -10.72840690612793
    8. '```' → logprob: -10.85340690612793
    9. '       ' → logprob: -10.97840690612793
    10. '           ' → logprob: -10.97840690612793

Token 979: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014164102263748646
    2. ' j' → logprob: -4.264163970947266
    3. '	j' → logprob: -14.889163970947266
    4. ' ' → logprob: -15.389163970947266
    5. ' ' → logprob: -17.014163970947266
    6. '[j' → logprob: -18.014163970947266
    7. '   ' → logprob: -18.139163970947266
    8. '  ' → logprob: -18.639163970947266
    9. ',j' → logprob: -18.639163970947266
    10. '$j' → logprob: -18.639163970947266

Token 980: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4862203896045685
    2. ' in' → logprob: -1.111220359802246
    3. 'j' → logprob: -3.361220359802246
    4. ' j' → logprob: -3.861220359802246
    5. ' ' → logprob: -10.361220359802246
    6. ']' → logprob: -10.736220359802246
    7. 'g' → logprob: -10.736220359802246
    8. ',j' → logprob: -10.861220359802246
    9. 's' → logprob: -11.361220359802246
    10. ')' → logprob: -11.611220359802246

Token 981: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.004080658778548241
    2. ' g' → logprob: -5.504080772399902
    3. '   ' → logprob: -15.004080772399902
    4. 'j' → logprob: -15.129080772399902
    5. '
' → logprob: -15.254080772399902
    6. ' ' → logprob: -15.379080772399902
    7. '	g' → logprob: -15.504080772399902
    8. '(g' → logprob: -15.879080772399902
    9. 'range' → logprob: -15.879080772399902
    10. ')' → logprob: -16.004079818725586

Token 982: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1279553291387856e-05
    2. 'i' → logprob: -12.250011444091797
    3. '[j' → logprob: -12.375011444091797
    4. '(i' → logprob: -14.125011444091797
    5. 'g' → logprob: -14.750011444091797
    6. '
' → logprob: -15.625011444091797
    7. '[' → logprob: -15.625011444091797
    8. '[g' → logprob: -15.750011444091797
    9. '[
' → logprob: -16.125011444091797
    10. ']' → logprob: -16.125011444091797

Token 983: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03757177293300629
    2. ']])' → logprob: -3.412571668624878
    3. '])]' → logprob: -6.412571907043457
    4. '])
' → logprob: -7.162571907043457
    5. ')])' → logprob: -8.037571907043457
    6. ']' → logprob: -8.287571907043457
    7. ' ])' → logprob: -8.787571907043457
    8. '       ' → logprob: -8.912571907043457
    9. ']))' → logprob: -8.912571907043457
    10. ']])
' → logprob: -9.162571907043457

Token 984: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35473504662513733
    2. ')' → logprob: -1.229735016822815
    3. ')
' → logprob: -5.354734897613525
    4. '           ' → logprob: -7.479734897613525
    5. '   ' → logprob: -7.479734897613525
    6. ' )' → logprob: -8.604735374450684
    7. '
' → logprob: -10.229735374450684
    8. '      ' → logprob: -10.354735374450684
    9. '        ' → logprob: -10.479735374450684
    10. ')]' → logprob: -10.854735374450684

Token 985: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8343741297721863
    2. '       ' → logprob: -1.209374189376831
    3. ')
' → logprob: -1.334374189376831
    4. '   ' → logprob: -7.209373950958252
    5. '])' → logprob: -7.209373950958252
    6. '))' → logprob: -7.459373950958252
    7. ')
' → logprob: -7.709373950958252
    8. ' )' → logprob: -8.08437442779541
    9. '      ' → logprob: -8.20937442779541
    10. '           ' → logprob: -8.45937442779541

Token 986: ' Som' (ID: 12116)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9030554890632629
    2. 'sum' → logprob: -1.1530554294586182
    3. ' sum' → logprob: -2.278055429458618
    4. ' from' → logprob: -2.653055429458618
    5. '+' → logprob: -3.028055429458618
    6. ')' → logprob: -3.778055429458618
    7. ' +' → logprob: -4.528055667877197
    8. ' )' → logprob: -5.528055667877197
    9. ' j' → logprob: -5.778055667877197
    10. '           ' → logprob: -5.903055667877197

Token 987: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.034546904265880585
    2. '[' → logprob: -4.159546852111816
    3. '#' → logprob: -4.659546852111816
    4. '([' → logprob: -6.409546852111816
    5. '(' → logprob: -6.534546852111816
    6. ']' → logprob: -6.659546852111816
    7. '[j' → logprob: -7.159546852111816
    8. ')' → logprob: -7.909546852111816
    9. 'e' → logprob: -7.909546852111816
    10. 'mé' → logprob: -8.034546852111816

Token 988: ' des' (ID: 731)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.10963514447212219
    2. '(from' → logprob: -3.7346351146698
    3. '(j' → logprob: -3.8596351146698
    4. '[j' → logprob: -3.9846351146698
    5. 'des' → logprob: -4.234635353088379
    6. '(for' → logprob: -4.734635353088379
    7. ' des' → logprob: -5.109635353088379
    8. 'from' → logprob: -5.734635353088379
    9. '[from' → logprob: -6.109635353088379
    10. 'for' → logprob: -6.359635353088379

Token 989: ' esp' (ID: 7461)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0005423080874606967
    2. '[from' → logprob: -7.625542163848877
    3. '[j' → logprob: -10.375542640686035
    4. ' from' → logprob: -11.000542640686035
    5. '(from' → logprob: -12.625542640686035
    6. 'j' → logprob: -13.750542640686035
    7. 'to' → logprob: -14.250542640686035
    8. '[' → logprob: -14.750542640686035
    9. 'for' → logprob: -15.500542640686035
    10. '[i' → logprob: -15.500542640686035

Token 990: 'ér' (ID: 2156)
  Prédit: 'èces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'èces' → logprob: -0.058647286146879196
    2. 'c' → logprob: -4.058647155761719
    3. 'è' → logprob: -4.308647155761719
    4. '[' → logprob: -4.808647155761719
    5. 'E' → logprob: -6.308647155761719
    6. 'e' → logprob: -6.683647155761719
    7. 'ec' → logprob: -6.808647155761719
    8. '`' → logprob: -6.808647155761719
    9. 'r' → logprob: -6.808647155761719
    10. '[j' → logprob: -7.183647155761719

Token 991: 'ances' (ID: 3528)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.45280036330223083
    2. 'ances' → logprob: -1.4528003931045532
    3. 'èces' → logprob: -4.327800273895264
    4. 'ences' → logprob: -4.452800273895264
    5. 'ces' → logprob: -4.452800273895264
    6. 'E' → logprob: -4.577800273895264
    7. '[' → logprob: -4.827800273895264
    8. 'eurs' → logprob: -4.952800273895264
    9. 'g' → logprob: -5.202800273895264
    10. 'e' → logprob: -5.202800273895264

Token 992: ' vers' (ID: 3640)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6456881165504456
    2. 'for' → logprob: -1.0206880569458008
    3. '[j' → logprob: -2.645688056945801
    4. ')' → logprob: -4.395688056945801
    5. ' pour' → logprob: -4.520688056945801
    6. 'pour' → logprob: -5.270688056945801
    7. '   ' → logprob: -5.520688056945801
    8. '       ' → logprob: -5.895688056945801
    9. '])' → logprob: -6.270688056945801
    10. '           ' → logprob: -6.395688056945801

Token 993: ' tous' (ID: 10688)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3601958155632019
    2. 'g' → logprob: -1.7351958751678467
    3. ' j' → logprob: -2.6101958751678467
    4. ' g' → logprob: -3.4851958751678467
    5. 'les' → logprob: -4.235195636749268
    6. ' les' → logprob: -5.235195636749268
    7. '[j' → logprob: -7.985195636749268
    8. ' ses' → logprob: -8.110196113586426
    9. ' tous' → logprob: -8.235196113586426
    10. '   ' → logprob: -8.360196113586426

Token 994: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006644679233431816
    2. ' j' → logprob: -5.2566447257995605
    3. 'g' → logprob: -6.6316447257995605
    4. 'les' → logprob: -10.131644248962402
    5. ' g' → logprob: -11.006644248962402
    6. '[j' → logprob: -11.256644248962402
    7. '   ' → logprob: -11.881644248962402
    8. ' les' → logprob: -12.631644248962402
    9. '(j' → logprob: -13.006644248962402
    10. ' ' → logprob: -13.131644248962402

Token 995: ' voisins' (ID: 166720)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9904719591140747
    2. ' voisins' → logprob: -1.1154719591140747
    3. 'vo' → logprob: -1.2404719591140747
    4. 'neighbors' → logprob: -4.615471839904785
    5. ' j' → logprob: -6.740471839904785
    6. 'g' → logprob: -8.115471839904785
    7. ' voisin' → logprob: -9.240471839904785
    8. ' neighbors' → logprob: -10.115471839904785
    9. ' vois' → logprob: -11.115471839904785
    10. 'adj' → logprob: -11.615471839904785

Token 996: ' j' (ID: 441)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9135703444480896
    2. '       ' → logprob: -0.9135703444480896
    3. ')
' → logprob: -2.4135704040527344
    4. '])' → logprob: -2.4135704040527344
    5. 'for' → logprob: -5.538570404052734
    6. '   ' → logprob: -5.663570404052734
    7. '])
' → logprob: -5.913570404052734
    8. '           ' → logprob: -6.163570404052734
    9. ' )' → logprob: -6.413570404052734
    10. ' for' → logprob: -6.538570404052734

Token 997: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17108647525310516
    2. '])' → logprob: -2.546086549758911
    3. 'for' → logprob: -3.421086549758911
    4. ')' → logprob: -3.421086549758911
    5. ' for' → logprob: -5.046086311340332
    6. '           ' → logprob: -5.546086311340332
    7. '   ' → logprob: -6.921086311340332
    8. ')
' → logprob: -7.671086311340332
    9. '        ' → logprob: -7.796086311340332
    10. '])
' → logprob: -8.046086311340332

Token 998: ' i' (ID: 575)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.020696038380265236
    2. 'i' → logprob: -4.02069616317749
    3. ' g' → logprob: -6.02069616317749
    4. ' i' → logprob: -9.145695686340332
    5. '[i' → logprob: -12.645695686340332
    6. 'j' → logprob: -13.770695686340332
    7. '   ' → logprob: -14.270695686340332
    8. '```' → logprob: -14.395695686340332
    9. '
' → logprob: -14.895695686340332
    10. ')' → logprob: -14.895695686340332

Token 999: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37633293867111206
    2. ')' → logprob: -1.3763329982757568
    3. ')
' → logprob: -2.876332998275757
    4. '   ' → logprob: -6.376332759857178
    5. '           ' → logprob: -7.001332759857178
    6. '])' → logprob: -7.126332759857178
    7. 'for' → logprob: -8.251333236694336
    8. ')
' → logprob: -8.376333236694336
    9. ' )' → logprob: -9.001333236694336
    10. ']' → logprob: -9.001333236694336

Token 1000: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5062319040298462
    2. '       ' → logprob: -1.1312319040298462
    3. ')
' → logprob: -2.6312317848205566
    4. '   ' → logprob: -7.006231784820557
    5. '           ' → logprob: -7.381231784820557
    6. 'for' → logprob: -8.131232261657715
    7. ' )' → logprob: -8.131232261657715
    8. '```' → logprob: -9.006232261657715
    9. ' for' → logprob: -9.131232261657715
    10. ')+' → logprob: -9.631232261657715

Token 1001: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45521458983421326
    2. '       ' → logprob: -1.0802146196365356
    3. ')
' (adapté à ' )
') → logprob: -4.080214500427246
    4. '   ' → logprob: -4.705214500427246
    5. 'for' → logprob: -8.955214500427246
    6. '           ' → logprob: -10.580214500427246
    7. ' )' → logprob: -10.955214500427246
    8. 'if' → logprob: -11.830214500427246
    9. ']' → logprob: -11.955214500427246
    10. ')
' → logprob: -12.080214500427246

Token 1002: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6724695563316345
    2. '       ' → logprob: -0.9224695563316345
    3. '   ' → logprob: -2.9224696159362793
    4. ' for' → logprob: -3.2974696159362793
    5. '           ' → logprob: -7.047469615936279
    6. ')' → logprob: -8.672469139099121
    7. ']' → logprob: -9.797469139099121
    8. '	for' → logprob: -10.172469139099121
    9. '+' → logprob: -10.797469139099121
    10. '               ' → logprob: -10.922469139099121

Token 1003: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03940746560692787
    2. ' for' → logprob: -3.28940749168396
    3. '   ' → logprob: -6.664407253265381
    4. '       ' → logprob: -9.539407730102539
    5. ')' → logprob: -11.914407730102539
    6. '	for' → logprob: -12.539407730102539
    7. '
' → logprob: -13.039407730102539
    8. 'if' → logprob: -13.164407730102539
    9. '           ' → logprob: -13.414407730102539
    10. ' ' → logprob: -14.789407730102539

Token 1004: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01815006136894226
    2. ' i' → logprob: -4.0181498527526855
    3. '	i' → logprob: -16.893150329589844
    4. '
' → logprob: -17.143150329589844
    5. '_i' → logprob: -17.893150329589844
    6. ' ' → logprob: -18.768150329589844
    7. '```' → logprob: -18.768150329589844
    8. '(i' → logprob: -19.518150329589844
    9. ',i' → logprob: -19.768150329589844
    10. '...' → logprob: -19.893150329589844

Token 1005: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3885308802127838
    2. ' in' → logprob: -1.1385308504104614
    3. 'range' → logprob: -6.763530731201172
    4. 'i' → logprob: -7.763530731201172
    5. ' range' → logprob: -10.013530731201172
    6. ' i' → logprob: -10.888530731201172
    7. ' ' → logprob: -12.513530731201172
    8. 'n' → logprob: -13.138530731201172
    9. 'g' → logprob: -13.763530731201172
    10. ',' → logprob: -13.888530731201172

Token 1006: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.925185440806672e-05
    2. ' range' → logprob: -9.250099182128906
    3. '[' → logprob: -12.750099182128906
    4. '(range' → logprob: -16.625099182128906
    5. '
' → logprob: -19.125099182128906
    6. '	range' → logprob: -19.250099182128906
    7. 'r' → logprob: -19.625099182128906
    8. 'n' → logprob: -20.000099182128906
    9. 'rang' → logprob: -20.125099182128906
    10. '```' → logprob: -20.500099182128906

Token 1007: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0110669219866395
    2. 'n' → logprob: -4.511066913604736
    3. '(' → logprob: -11.011067390441895
    4. '(len' → logprob: -13.511067390441895
    5. '(
' → logprob: -14.511067390441895
    6. ' (' → logprob: -15.386067390441895
    7. 'len' → logprob: -15.511067390441895
    8. '
' → logprob: -16.511066436767578
    9. ' n' → logprob: -16.511066436767578
    10. ')n' → logprob: -16.636066436767578

Token 1008: ')
' (ID: 446)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.38716864585876465
    2. ')' → logprob: -1.1371686458587646
    3. ')n' → logprob: -9.387168884277344
    4. ')
' → logprob: -9.887168884277344
    5. '):' → logprob: -10.012168884277344
    6. ']' → logprob: -10.512168884277344
    7. ')])' → logprob: -10.887168884277344
    8. ' )' → logprob: -11.137168884277344
    9. 'n' → logprob: -11.637168884277344
    10. '):
' → logprob: -11.887168884277344

Token 1009: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01607108674943447
    2. '   ' → logprob: -4.141071319580078
    3. ' ]' → logprob: -11.266071319580078
    4. '       ' → logprob: -11.516071319580078
    5. ']
' → logprob: -12.141071319580078
    6. '}' → logprob: -12.641071319580078
    7. ')' → logprob: -12.891071319580078
    8. ' if' → logprob: -14.391071319580078
    9. 'if' → logprob: -14.766071319580078
    10. ']

' → logprob: -14.891071319580078

Token 1010: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02546135149896145
    2. '   ' → logprob: -3.775461435317993
    3. ']
' (adapté à ' ]
') → logprob: -6.150461196899414
    4. ')' → logprob: -10.150461196899414
    5. ']

' → logprob: -10.275461196899414
    6. ' ]' → logprob: -12.650461196899414
    7. 'if' → logprob: -13.150461196899414
    8. '}' → logprob: -14.400461196899414
    9. ']
' → logprob: -14.900461196899414
    10. '    
' → logprob: -14.900461196899414

Token 1011: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6358097791671753
    2. 'for' → logprob: -0.8858097791671753
    3. 'max' → logprob: -4.260809898376465
    4. '#' → logprob: -4.260809898376465
    5. '
' → logprob: -4.760809898376465
    6. '    
' → logprob: -4.760809898376465
    7. '```' → logprob: -5.010809898376465
    8. ' for' → logprob: -6.260809898376465
    9. 'tf' → logprob: -7.010809898376465
    10. 'print' → logprob: -7.135809898376465

Token 1012: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.045997027307748795
    2. 'max' → logprob: -4.295997142791748
    3. 'best' → logprob: -4.795997142791748
    4. 'tf' → logprob: -4.920997142791748
    5. '   ' → logprob: -5.295997142791748
    6. 'ans' → logprob: -5.420997142791748
    7. '#' → logprob: -6.420997142791748
    8. 'min' → logprob: -6.795997142791748
    9. 'diff' → logprob: -7.170997142791748
    10. '
' → logprob: -7.295997142791748

Token 1013: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01187808346003294
    2. 'max' → logprob: -5.51187801361084
    3. 'best' → logprob: -6.01187801361084
    4. 'tf' → logprob: -6.13687801361084
    5. 'ans' → logprob: -6.51187801361084
    6. '#' (adapté à ' #') → logprob: -7.51187801361084
    7. 'diff' → logprob: -8.38687801361084
    8. 'm' → logprob: -8.76187801361084
    9. 'res' → logprob: -9.38687801361084
    10. 'mx' → logprob: -9.51187801361084

Token 1014: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06864316761493683
    2. 'max' → logprob: -3.693643093109131
    3. 'tf' → logprob: -3.943643093109131
    4. 'best' → logprob: -4.443643093109131
    5. 'ans' → logprob: -6.318643093109131
    6. '#' → logprob: -6.818643093109131
    7. 'm' → logprob: -6.943643093109131
    8. 'mx' → logprob: -6.943643093109131
    9. 'min' → logprob: -7.318643093109131
    10. 'diff' → logprob: -7.443643093109131

Token 1015: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00026574634830467403
    2. ' i' → logprob: -8.375266075134277
    3. 'ans' → logprob: -11.500266075134277
    4. 'k' → logprob: -12.500266075134277
    5. '_i' → logprob: -12.500266075134277
    6. '_' → logprob: -12.750266075134277
    7. 'j' → logprob: -12.875266075134277
    8. '```' → logprob: -12.875266075134277
    9. 'x' → logprob: -13.375266075134277
    10. 'edge' → logprob: -13.500266075134277

Token 1016: ' ar' (ID: 646)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012558852904476225
    2. ' i' → logprob: -9.375125885009766
    3. 'x' → logprob: -11.750125885009766
    4. 'k' → logprob: -11.750125885009766
    5. '_i' → logprob: -12.000125885009766
    6. 'u' → logprob: -12.750125885009766
    7. '_' → logprob: -12.750125885009766
    8. 'e' → logprob: -13.125125885009766
    9. '(i' → logprob: -13.375125885009766
    10. '```' → logprob: -13.375125885009766

Token 1017: 'ête' (ID: 16808)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024214372970163822
    2. 'g' → logprob: -6.8774213790893555
    3. ' i' → logprob: -7.2524213790893555
    4. 'r' → logprob: -8.127421379089355
    5. '_i' → logprob: -8.627421379089355
    6. 'rg' → logprob: -9.002421379089355
    7. 'e' → logprob: -11.627421379089355
    8. '```' → logprob: -11.627421379089355
    9. '#' → logprob: -11.752421379089355
    10. '	i' → logprob: -12.252421379089355

Token 1018: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36780062317848206
    2. 'in' → logprob: -1.8678005933761597
    3. 'for' → logprob: -2.117800712585449
    4. ' in' → logprob: -3.617800712585449
    5. ' i' → logprob: -5.742800712585449
    6. ' for' → logprob: -6.617800712585449
    7. 'a' → logprob: -7.492800712585449
    8. '```' → logprob: -7.992800712585449
    9. '   ' → logprob: -8.36780071258545
    10. ',' → logprob: -8.49280071258545

Token 1019: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10352391004562378
    2. 'i' → logprob: -2.3535239696502686
    3. ' a' → logprob: -6.2285237312316895
    4. ' i' → logprob: -7.6035237312316895
    5. '_,' → logprob: -7.8535237312316895
    6. '   ' → logprob: -8.728524208068848
    7. '(a' → logprob: -9.728524208068848
    8. 'u' → logprob: -10.478524208068848
    9. '_i' → logprob: -10.478524208068848
    10. '_' → logprob: -10.478524208068848

Token 1020: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15298126637935638
    2. ',a' → logprob: -2.4029812812805176
    3. 'a' → logprob: -3.1529812812805176
    4. 't' → logprob: -5.527981281280518
    5. ',i' → logprob: -6.652981281280518
    6. ',t' → logprob: -6.777981281280518
    7. 'for' → logprob: -7.152981281280518
    8. 'i' → logprob: -7.277981281280518
    9. '_,' → logprob: -7.527981281280518
    10. ' ,' → logprob: -9.77798080444336

Token 1021: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00604398176074028
    2. ' t' → logprob: -5.506043910980225
    3. ',' → logprob: -6.631043910980225
    4. 'a' → logprob: -8.631044387817383
    5. 'i' → logprob: -8.881044387817383
    6. 'e' → logprob: -9.131044387817383
    7. '   ' → logprob: -9.506044387817383
    8. '_,' → logprob: -10.381044387817383
    9. ',t' → logprob: -10.631044387817383
    10. 'd' → logprob: -10.756044387817383

Token 1022: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7076823115348816
    2. 'in' → logprob: -0.7076823115348816
    3. '),' → logprob: -4.582682132720947
    4. ' in' → logprob: -6.207682132720947
    5. ',' → logprob: -6.207682132720947
    6. 's' → logprob: -10.082682609558105
    7. ',)' → logprob: -10.707682609558105
    8. 'for' → logprob: -10.832682609558105
    9. '
' → logprob: -10.957682609558105
    10. 'i' → logprob: -11.582682609558105

Token 1023: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3189147710800171
    2. ' in' → logprob: -1.943914771080017
    3. ',' → logprob: -2.0689148902893066
    4. ':' → logprob: -6.068914890289307
    5. 'for' → logprob: -8.443914413452148
    6. '   ' → logprob: -8.568914413452148
    7. ':
' → logprob: -8.568914413452148
    8. 's' → logprob: -8.568914413452148
    9. ',s' → logprob: -8.693914413452148
    10. '```' → logprob: -9.693914413452148

Token 1024: ' la' (ID: 557)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.9623810658231378e-05
    2. 'range' → logprob: -11.375020027160645
    3. ' st' → logprob: -11.750020027160645
    4. 'g' → logprob: -16.000019073486328
    5. '[[' → logprob: -17.250019073486328
    6. '[(' → logprob: -17.250019073486328
    7. '(st' → logprob: -18.000019073486328
    8. ' range' → logprob: -18.500019073486328
    9. '[' → logprob: -19.125019073486328
    10. '	st' → logprob: -19.125019073486328

Token 1025: ' liste' (ID: 31719)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0006298751104623079
    2. 'range' → logprob: -7.375629901885986
    3. 'g' → logprob: -14.125629425048828
    4. 's' → logprob: -14.375629425048828
    5. '[[' → logprob: -14.375629425048828
    6. '[(' → logprob: -14.625629425048828
    7. '[' → logprob: -15.000629425048828
    8. ' st' → logprob: -15.500629425048828
    9. 'enumer' → logprob: -15.500629425048828
    10. ' range' → logprob: -16.500629425048828

Token 1026: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.00015943869948387146
    2. ' st' → logprob: -9.00015926361084
    3. 'range' → logprob: -10.37515926361084
    4. '(st' → logprob: -12.62515926361084
    5. 'for' → logprob: -14.87515926361084
    6. ' range' → logprob: -14.87515926361084
    7. '   ' → logprob: -15.75015926361084
    8. 's' → logprob: -16.000160217285156
    9. '	st' → logprob: -16.250160217285156
    10. '[(' → logprob: -16.250160217285156

Token 1027: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00673905061557889
    2. ':
' → logprob: -5.006739139556885
    3. '   ' → logprob: -11.381738662719727
    4. ',' → logprob: -11.756738662719727
    5. 'in' → logprob: -14.006738662719727
    6. 'for' → logprob: -14.381738662719727
    7. ' :' → logprob: -14.631738662719727
    8. '):' → logprob: -14.756738662719727
    9. '[' → logprob: -15.006738662719727
    10. '[:-' → logprob: -15.131738662719727

Token 1028: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24233600497245789
    2. '   ' → logprob: -1.6173360347747803
    3. ':' → logprob: -4.867335796356201
    4. ' for' → logprob: -4.867335796356201
    5. ':
' → logprob: -6.617335796356201
    6. '	for' → logprob: -10.24233627319336
    7. ',' → logprob: -11.61733627319336
    8. '```' → logprob: -13.11733627319336
    9. '[' → logprob: -13.24233627319336
    10. '
' → logprob: -13.49233627319336

Token 1029: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1756367712223437e-05
    2. '   ' → logprob: -12.000011444091797
    3. ' for' → logprob: -12.250011444091797
    4. '
' → logprob: -14.875011444091797
    5. '```' → logprob: -15.000011444091797
    6. '	for' → logprob: -16.500011444091797
    7. 'fora' → logprob: -20.250011444091797
    8. '    
' → logprob: -20.625011444091797
    9. '``' → logprob: -20.750011444091797
    10. ':' → logprob: -21.125011444091797

Token 1030: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0018253617454320192
    2. ' s' → logprob: -7.376825332641602
    3. '(s' → logprob: -7.751825332641602
    4. 'i' → logprob: -7.876825332641602
    5. 'a' → logprob: -8.001825332641602
    6. '(i' → logprob: -11.126825332641602
    7. '   ' → logprob: -11.376825332641602
    8. '(a' → logprob: -11.501825332641602
    9. ' (' → logprob: -11.876825332641602
    10. '_s' → logprob: -12.501825332641602

Token 1031: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021542372182011604
    2. ',t' → logprob: -3.8965423107147217
    3. ',_' → logprob: -8.0215425491333
    4. ',b' → logprob: -8.3965425491333
    5. ' ,' → logprob: -9.0215425491333
    6. ',s' → logprob: -9.6465425491333
    7. ',i' → logprob: -9.7715425491333
    8. 'in' → logprob: -10.2715425491333
    9. ',in' → logprob: -10.5215425491333
    10. ',r' → logprob: -10.8965425491333

Token 1032: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.306760805164231e-05
    2. ' t' → logprob: -11.25001335144043
    3. '	t' → logprob: -20.00001335144043
    4. '   ' → logprob: -21.12501335144043
    5. '```' → logprob: -21.25001335144043
    6. '`t' → logprob: -21.87501335144043
    7. '(t' → logprob: -22.50001335144043
    8. '...' → logprob: -22.62501335144043
    9. ' ' → logprob: -23.25001335144043
    10. ' ' → logprob: -23.37501335144043

Token 1033: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2836958169937134
    2. ' in' → logprob: -1.4086958169937134
    3. ',' → logprob: -6.033695697784424
    4. 's' → logprob: -10.283696174621582
    5. '
' → logprob: -10.533696174621582
    6. '=' → logprob: -10.658696174621582
    7. ' ,' → logprob: -11.533696174621582
    8. ',in' → logprob: -12.158696174621582
    9. '_in' → logprob: -12.408696174621582
    10. ' ' → logprob: -12.533696174621582

Token 1034: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0002615742268972099
    2. ' st' → logprob: -8.250261306762695
    3. '	st' → logprob: -16.250261306762695
    4. '
' → logprob: -16.375261306762695
    5. '(st' → logprob: -17.250261306762695
    6. '_st' → logprob: -17.250261306762695
    7. ' ' → logprob: -17.250261306762695
    8. '   ' → logprob: -17.250261306762695
    9. 's' → logprob: -17.750261306762695
    10. 'ст' → logprob: -18.125261306762695

Token 1035: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1322977989912033
    2. ':
' → logprob: -2.1322977542877197
    3. '       ' → logprob: -5.882297992706299
    4. '   ' → logprob: -6.257297992706299
    5. ',' → logprob: -8.25729751586914
    6. '=' → logprob: -9.00729751586914
    7. '):
' → logprob: -9.13229751586914
    8. '[' → logprob: -10.13229751586914
    9. ' =' → logprob: -10.50729751586914
    10. '<|end|>' → logprob: -11.38229751586914

Token 1036: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3524293899536133
    2. '   ' → logprob: -1.2274293899536133
    3. ' if' → logprob: -6.477429389953613
    4. '```' → logprob: -6.602429389953613
    5. 'if' → logprob: -7.477429389953613
    6. '
' → logprob: -8.102429389953613
    7. '    
' → logprob: -10.352429389953613
    8. '        
' → logprob: -10.602429389953613
    9. ',' → logprob: -10.602429389953613
    10. '#' → logprob: -10.977429389953613

Token 1037: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1160443127155304
    2. 'ans' → logprob: -2.366044282913208
    3. 'val' → logprob: -5.491044521331787
    4. 'if' → logprob: -5.741044521331787
    5. 'x' → logprob: -6.241044521331787
    6. 'i' → logprob: -6.741044521331787
    7. 'temp' → logprob: -6.866044521331787
    8. 'diff' → logprob: -6.991044521331787
    9. 'tmp' → logprob: -7.366044521331787
    10. '       ' → logprob: -7.741044521331787

Token 1038: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33507779240608215
    2. 'val' → logprob: -1.9600777626037598
    3. 'tmp' → logprob: -3.4600777626037598
    4. 'diff' → logprob: -3.5850777626037598
    5. 'delta' → logprob: -4.08507776260376
    6. 'x' → logprob: -4.46007776260376
    7. 'temp' → logprob: -4.58507776260376
    8. '   ' → logprob: -4.83507776260376
    9. 'c' → logprob: -5.21007776260376
    10. 'v' → logprob: -5.58507776260376

Token 1039: ' le' (ID: 505)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8214883804321289
    2. 't' → logprob: -0.8214883804321289
    3. 'to' → logprob: -3.071488380432129
    4. 's' → logprob: -3.446488380432129
    5. 'len' → logprob: -3.446488380432129
    6. '(g' → logprob: -6.196488380432129
    7. '(t' → logprob: -6.446488380432129
    8. ' t' → logprob: -6.571488380432129
    9. ' g' → logprob: -6.696488380432129
    10. '   ' → logprob: -6.946488380432129

Token 1040: ' sommet' (ID: 130502)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6089627742767334
    2. 't' → logprob: -1.4839627742767334
    3. 's' → logprob: -1.6089627742767334
    4. 'to' → logprob: -3.7339627742767334
    5. 'from' → logprob: -6.2339630126953125
    6. '0' → logprob: -7.2339630126953125
    7. '(g' → logprob: -7.4839630126953125
    8. 'st' → logprob: -7.6089630126953125
    9. '(t' → logprob: -7.6089630126953125
    10. '(s' → logprob: -8.358963012695312

Token 1041: ' d' (ID: 272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030716445297002792
    2. 't' → logprob: -3.5307164192199707
    3. ' s' → logprob: -7.780716419219971
    4. '[s' → logprob: -8.030716896057129
    5. ' t' → logprob: -10.280716896057129
    6. 'a' → logprob: -10.405716896057129
    7. '[t' → logprob: -10.405716896057129
    8. '```' → logprob: -10.530716896057129
    9. '(s' → logprob: -10.655716896057129
    10. '1' → logprob: -11.030716896057129

Token 1042: ''origine' (ID: 89355)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.718781054019928
    2. 'e' → logprob: -1.0937809944152832
    3. '-' → logprob: -2.093780994415283
    4. 't' → logprob: -3.718780994415283
    5. 'es' → logprob: -4.968780994415283
    6. '1' → logprob: -5.468780994415283
    7. 'est' → logprob: -5.718780994415283
    8. '=' → logprob: -5.968780994415283
    9. 'i' → logprob: -6.343780994415283
    10. 'ans' → logprob: -6.343780994415283

Token 1043: ' (' (ID: 350)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13975811004638672
    2. 's' → logprob: -2.6397581100463867
    3. ' ==' → logprob: -3.0147581100463867
    4. '!=' → logprob: -5.389758110046387
    5. ' s' → logprob: -5.889758110046387
    6. '=' → logprob: -7.514758110046387
    7. '[s' → logprob: -7.764758110046387
    8. '[' → logprob: -7.764758110046387
    9. ' !=' → logprob: -8.014758110046387
    10. '==(' → logprob: -8.639758110046387

Token 1044: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004821505572181195
    2. ' s' → logprob: -7.875482082366943
    3. 't' → logprob: -9.375482559204102
    4. ')' → logprob: -12.000482559204102
    5. '(s' → logprob: -12.125482559204102
    6. '_s' → logprob: -14.375482559204102
    7. 'st' → logprob: -14.500482559204102
    8. '(t' → logprob: -14.625482559204102
    9. ')s' → logprob: -14.750482559204102
    10. '   ' → logprob: -14.750482559204102

Token 1045: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012614198960363865
    2. ' -' → logprob: -5.1376142501831055
    3. ')' → logprob: -5.5126142501831055
    4. '[' → logprob: -6.8876142501831055
    5. '!=' → logprob: -7.3876142501831055
    6. ' !=' → logprob: -7.7626142501831055
    7. ')-' → logprob: -9.012614250183105
    8. '==' → logprob: -9.137614250183105
    9. '-)' → logprob: -9.262614250183105
    10. ')!=' → logprob: -9.262614250183105

Token 1046: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. '```' → logprob: -11.000027656555176
    3. ')' → logprob: -11.875027656555176
    4. ' ' → logprob: -12.625027656555176
    5. '#' → logprob: -15.500027656555176
    6. '-' → logprob: -15.875027656555176
    7. '``' → logprob: -16.000028610229492
    8. '>' → logprob: -16.000028610229492
    9. '=' → logprob: -16.000028610229492
    10. ')>' → logprob: -16.750028610229492

Token 1047: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17981114983558655
    2. ').' → logprob: -2.1798112392425537
    3. ')!=' → logprob: -3.6798112392425537
    4. ')==' → logprob: -4.679811000823975
    5. ']' → logprob: -5.304811000823975
    6. '].' → logprob: -5.679811000823975
    7. ']!=' → logprob: -6.054811000823975
    8. ']==' → logprob: -6.179811000823975
    9. ' !=' → logprob: -6.679811000823975
    10. '   ' → logprob: -7.304811000823975

Token 1048: ' a' (ID: 261)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8501905798912048
    2. '!=' → logprob: -1.1001906394958496
    3. ' !=' → logprob: -2.2251906394958496
    4. ' ==' → logprob: -2.6001906394958496
    5. 'in' → logprob: -3.9751906394958496
    6. ']==' → logprob: -4.47519063949585
    7. ']!=' → logprob: -5.10019063949585
    8. ']' → logprob: -5.22519063949585
    9. 'is' → logprob: -5.60019063949585
    10. '```' → logprob: -6.10019063949585

Token 1049: ' au' (ID: 2791)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.039579592645168304
    2. 'to' → logprob: -3.5395796298980713
    3. 'g' → logprob: -5.164579391479492
    4. '0' → logprob: -6.414579391479492
    5. 'tf' → logprob: -7.164579391479492
    6. ' len' → logprob: -7.414579391479492
    7. '(len' → logprob: -7.914579391479492
    8. ' to' → logprob: -8.789579391479492
    9. '[to' → logprob: -8.914579391479492
    10. '[len' → logprob: -9.789579391479492

Token 1050: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.16261857748031616
    2. ' moins' → logprob: -2.287618637084961
    3. 'least' → logprob: -4.537618637084961
    4. 'g' → logprob: -4.787618637084961
    5. 'mo' → logprob: -5.037618637084961
    6. '1' → logprob: -5.037618637084961
    7. '```' → logprob: -6.037618637084961
    8. 'len' → logprob: -6.162618637084961
    9. ' least' → logprob: -6.162618637084961
    10. 'menos' → logprob: -6.412618637084961

Token 1051: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01970721408724785
    2. 'une' → logprob: -5.144707202911377
    3. '0' → logprob: -5.269707202911377
    4. 'des' → logprob: -6.019707202911377
    5. 'au' → logprob: -6.519707202911377
    6. 'len' → logprob: -6.894707202911377
    7. 'un' → logprob: -7.019707202911377
    8. '   ' → logprob: -7.144707202911377
    9. 'g' → logprob: -8.394707679748535
    10. '```' → logprob: -8.519707679748535

Token 1052: ' voisin' (ID: 145411)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.002479700604453683
    2. ' voisin' → logprob: -6.752479553222656
    3. 'arc' → logprob: -7.502479553222656
    4. 'ar' → logprob: -8.002479553222656
    5. 'succ' → logprob: -8.002479553222656
    6. 'voie' → logprob: -10.252479553222656
    7. 'neighbor' → logprob: -11.002479553222656
    8. 'sort' → logprob: -11.502479553222656
    9. '```' → logprob: -12.127479553222656
    10. 'out' → logprob: -12.252479553222656

Token 1053: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5372177362442017
    2. ':' → logprob: -2.037217617034912
    3. ':
' → logprob: -2.787217617034912
    4. ' ==' → logprob: -3.162217617034912
    5. 'and' → logprob: -3.412217617034912
    6. '   ' → logprob: -3.662217617034912
    7. ',' → logprob: -3.912217617034912
    8. '==' → logprob: -4.162217617034912
    9. ' (' → logprob: -4.287217617034912
    10. 'if' → logprob: -4.412217617034912

Token 1054: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8636624217033386
    2. ' and' → logprob: -1.6136624813079834
    3. ' if' → logprob: -1.7386624813079834
    4. 'if' → logprob: -2.6136624813079834
    5. ':' → logprob: -3.4886624813079834
    6. ':
' → logprob: -3.6136624813079834
    7. '       ' → logprob: -3.7386624813079834
    8. '```' → logprob: -4.238662242889404
    9. '           ' → logprob: -4.738662242889404
    10. '[' → logprob: -5.113662242889404

Token 1055: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1313399076461792
    2. ' if' → logprob: -2.1313400268554688
    3. 'len' → logprob: -5.631340026855469
    4. ' len' → logprob: -7.131340026855469
    5. '   ' → logprob: -11.131340026855469
    6. '       ' → logprob: -12.881340026855469
    7. '           ' → logprob: -14.006340026855469
    8. 'g' → logprob: -15.631340026855469
    9. '(len' → logprob: -15.631340026855469
    10. ' l' → logprob: -16.00634002685547

Token 1056: ' g' (ID: 329)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1002226322889328
    2. ' len' → logprob: -2.350222587585449
    3. '   ' → logprob: -12.10022258758545
    4. '(len' → logprob: -12.10022258758545
    5. '	len' → logprob: -12.97522258758545
    6. 'l' → logprob: -14.97522258758545
    7. '           ' → logprob: -14.97522258758545
    8. '0' → logprob: -14.97522258758545
    9. 't' → logprob: -15.35022258758545
    10. 'g' → logprob: -15.47522258758545

Token 1057: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.014169150963425636
    2. 's' → logprob: -4.264169216156006
    3. '       ' → logprob: -13.639168739318848
    4. '   ' → logprob: -13.889168739318848
    5. ' [' → logprob: -14.014168739318848
    6. ' s' → logprob: -14.139168739318848
    7. '[t' → logprob: -14.639168739318848
    8. '[' → logprob: -14.764168739318848
    9. '{s' → logprob: -14.889168739318848
    10. '(s' → logprob: -15.764168739318848

Token 1058: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018911980092525482
    2. 's' → logprob: -4.018911838531494
    3. '[s' → logprob: -7.518911838531494
    4. '[' → logprob: -9.018912315368652
    5. '   ' → logprob: -11.018912315368652
    6. '       ' → logprob: -11.018912315368652
    7. '1' → logprob: -11.143912315368652
    8. 't' → logprob: -11.268912315368652
    9. ' -' → logprob: -11.268912315368652
    10. '(s' → logprob: -12.268912315368652

Token 1059: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.625005722045898
    3. '-' → logprob: -13.000005722045898
    4. '   ' → logprob: -16.2500057220459
    5. '...' → logprob: -16.6250057220459
    6. '[' → logprob: -17.0000057220459
    7. '```' → logprob: -17.5000057220459
    8. ' -' → logprob: -17.7500057220459
    9. '0' → logprob: -17.8750057220459
    10. 's' → logprob: -17.8750057220459

Token 1060: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.7102579474449158
    2. '):' → logprob: -1.5852580070495605
    3. ']:
' → logprob: -2.3352580070495605
    4. ']):' → logprob: -2.5852580070495605
    5. '):
' → logprob: -2.8352580070495605
    6. '[s' → logprob: -3.7102580070495605
    7. ']):
' → logprob: -3.9602580070495605
    8. ':' → logprob: -4.8352580070495605
    9. ']' → logprob: -5.7102580070495605
    10. ']>' → logprob: -5.9602580070495605

Token 1061: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005570820067077875
    2. ' ans' → logprob: -8.250556945800781
    3. 'ans' → logprob: -9.625556945800781
    4. '#' → logprob: -9.875556945800781
    5. ':' → logprob: -10.500556945800781
    6. '               ' → logprob: -10.750556945800781
    7. '       ' → logprob: -10.875556945800781
    8. '```' → logprob: -10.875556945800781
    9. '            
' → logprob: -11.250556945800781
    10. '   ' → logprob: -11.625556945800781

Token 1062: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08052564412355423
    2. '           ' → logprob: -2.8305256366729736
    3. ' ans' → logprob: -5.580525875091553
    4. 'tf' → logprob: -5.955525875091553
    5. 'temp' → logprob: -5.955525875091553
    6. 'tmp' → logprob: -6.080525875091553
    7. 'val' → logprob: -6.455525875091553
    8. '               ' → logprob: -6.830525875091553
    9. 'diff' → logprob: -7.205525875091553
    10. 'current' → logprob: -7.455525875091553

Token 1063: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7968189716339111
    2. 'val' → logprob: -1.4218189716339111
    3. '           ' → logprob: -2.171818971633911
    4. 'tmp' → logprob: -2.921818971633911
    5. 'x' → logprob: -3.421818971633911
    6. 'temp' → logprob: -3.671818971633911
    7. 'delta' → logprob: -4.046818733215332
    8. 'diff' → logprob: -4.421818733215332
    9. 'cost' → logprob: -5.046818733215332
    10. 'cur' → logprob: -5.046818733215332

Token 1064: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38707447052001953
    2. ' =' → logprob: -1.1370744705200195
    3. '=len' → logprob: -9.01207447052002
    4. 'en' → logprob: -9.76207447052002
    5. '           ' → logprob: -11.76207447052002
    6. 'l' → logprob: -12.76207447052002
    7. '=l' → logprob: -13.01207447052002
    8. 'ength' → logprob: -13.38707447052002
    9. 'e' → logprob: -13.51207447052002
    10. '   ' → logprob: -13.63707447052002

Token 1065: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16023163497447968
    2. ' len' → logprob: -1.910231590270996
    3. '           ' → logprob: -12.160231590270996
    4. '=len' → logprob: -13.910231590270996
    5. '(len' → logprob: -14.160231590270996
    6. '	len' → logprob: -15.035231590270996
    7. '   ' → logprob: -15.535231590270996
    8. '               ' → logprob: -17.285232543945312
    9. '            ' → logprob: -17.660232543945312
    10. ' ' → logprob: -17.785232543945312

Token 1066: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005532711511477828
    2. ' len' → logprob: -7.500553131103516
    3. 'l' → logprob: -15.375553131103516
    4. '(len' → logprob: -17.375553131103516
    5. 'length' → logprob: -17.625553131103516
    6. '	len' → logprob: -17.875553131103516
    7. '=len' → logprob: -18.500553131103516
    8. '   ' → logprob: -18.625553131103516
    9. '```' → logprob: -18.750553131103516
    10. '           ' → logprob: -19.125553131103516

Token 1067: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6388987898826599
    2. ' =' → logprob: -0.7638987898826599
    3. '=len' → logprob: -5.638898849487305
    4. '           ' → logprob: -6.013898849487305
    5. ' de' → logprob: -9.263898849487305
    6. 'len' → logprob: -9.513898849487305
    7. '            ' → logprob: -11.013898849487305
    8. '               ' → logprob: -11.138898849487305
    9. 'd' → logprob: -11.638898849487305
    10. 'de' → logprob: -11.763898849487305

Token 1068: ' voisins' (ID: 166720)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005953280488029122
    2. ' len' → logprob: -7.5005950927734375
    3. 'l' → logprob: -11.125595092773438
    4. 'neighbors' → logprob: -11.250595092773438
    5. '(len' → logprob: -12.000595092773438
    6. '=len' → logprob: -12.750595092773438
    7. 'g' → logprob: -12.875595092773438
    8. '```' → logprob: -14.000595092773438
    9. '[len' → logprob: -14.375595092773438
    10. '	len' → logprob: -14.875595092773438

Token 1069: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23879243433475494
    2. '=' → logprob: -1.6137924194335938
    3. '=len' → logprob: -4.363792419433594
    4. '           ' → logprob: -7.738792419433594
    5. '(len' → logprob: -10.113792419433594
    6. 'len' → logprob: -10.238792419433594
    7. '```' → logprob: -11.113792419433594
    8. '=g' → logprob: -11.988792419433594
    9. ' len' → logprob: -12.363792419433594
    10. 'g' → logprob: -12.488792419433594

Token 1070: ' sommet' (ID: 130502)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.024182641878724098
    2. 'g' → logprob: -3.7741825580596924
    3. '(s' → logprob: -7.3991827964782715
    4. ' s' → logprob: -8.274182319641113
    5. ' g' → logprob: -10.274182319641113
    6. '[s' → logprob: -10.399182319641113
    7. '```' → logprob: -13.024182319641113
    8. '`s' → logprob: -13.899182319641113
    9. '{s' → logprob: -14.774182319641113
    10. '_s' → logprob: -15.399182319641113

Token 1071: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00015062130114529282
    2. '(s' → logprob: -9.500150680541992
    3. ' s' → logprob: -9.625150680541992
    4. '[s' → logprob: -11.875150680541992
    5. '{s' → logprob: -12.875150680541992
    6. 'g' → logprob: -16.000150680541992
    7. '_s' → logprob: -18.000150680541992
    8. '	s' → logprob: -18.375150680541992
    9. '   ' → logprob: -18.500150680541992
    10. '
' → logprob: -18.500150680541992

Token 1072: '-' (ID: 12)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00991734117269516
    2. '-' → logprob: -4.759917259216309
    3. '(s' → logprob: -7.134917259216309
    4. '           ' → logprob: -9.509917259216309
    5. '```' → logprob: -9.509917259216309
    6. '   ' → logprob: -9.509917259216309
    7. '
' → logprob: -9.759917259216309
    8. '[' → logprob: -10.009917259216309
    9. '=' → logprob: -10.134917259216309
    10. 's' → logprob: -10.384917259216309

Token 1073: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.090760431718081e-05
    2. '-' → logprob: -9.375090599060059
    3. ' ' → logprob: -12.375090599060059
    4. '```' → logprob: -13.500090599060059
    5. '   ' → logprob: -15.500090599060059
    6. 's' → logprob: -16.750091552734375
    7. ' -' → logprob: -17.125091552734375
    8. '[' → logprob: -17.250091552734375
    9. '`' → logprob: -17.625091552734375
    10. '``' → logprob: -17.875091552734375

Token 1074: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003537470940500498
    2. '=' → logprob: -5.753537654876709
    3. '           ' → logprob: -8.00353717803955
    4. '=l' → logprob: -11.50353717803955
    5. '=len' → logprob: -12.12853717803955
    6. '               ' → logprob: -12.12853717803955
    7. ' l' → logprob: -13.62853717803955
    8. '```' → logprob: -14.00353717803955
    9. '            ' → logprob: -14.50353717803955
    10. ' =
' → logprob: -14.62853717803955

Token 1075: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003375672735273838
    2. '=' → logprob: -5.87837553024292
    3. '           ' → logprob: -7.75337553024292
    4. '               ' → logprob: -9.128376007080078
    5. '            ' → logprob: -11.003376007080078
    6. '```' → logprob: -12.003376007080078
    7. ' l' → logprob: -12.503376007080078
    8. '=l' → logprob: -12.878376007080078
    9. '=len' → logprob: -13.878376007080078
    10. '                   ' → logprob: -14.128376007080078

Token 1076: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0015911540249362588
    2. ' l' → logprob: -6.626591205596924
    3. '           ' → logprob: -8.251590728759766
    4. '	l' → logprob: -13.501590728759766
    5. '                   ' → logprob: -13.751590728759766
    6. '               ' → logprob: -14.001590728759766
    7. '```' → logprob: -15.001590728759766
    8. '   ' → logprob: -15.126590728759766
    9. '       ' → logprob: -15.501590728759766
    10. 'len' → logprob: -16.376590728759766

Token 1077: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269553005695343
    2. ' =' → logprob: -2.126955270767212
    3. '=len' → logprob: -10.626955032348633
    4. '           ' → logprob: -13.126955032348633
    5. '=l' → logprob: -14.251955032348633
    6. '=int' → logprob: -16.251955032348633
    7. '            ' → logprob: -16.626955032348633
    8. '=
' → logprob: -16.876955032348633
    9. '   ' → logprob: -17.501955032348633
    10. ' l' → logprob: -17.876955032348633

Token 1078: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0015023599844425917
    2. ' len' → logprob: -6.501502513885498
    3. '(len' → logprob: -18.876502990722656
    4. '	len' → logprob: -20.626502990722656
    5. '[len' → logprob: -21.626502990722656
    6. '=len' → logprob: -22.251502990722656
    7. '   ' → logprob: -22.501502990722656
    8. ',len' → logprob: -23.001502990722656
    9. 'l' → logprob: -23.626502990722656
    10. '           ' → logprob: -23.876502990722656

Token 1079: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.7120533811976202e-05
    2. 'g' → logprob: -11.000017166137695
    3. '[g' → logprob: -16.125017166137695
    4. '(' → logprob: -16.375017166137695
    5. '(
' → logprob: -16.750017166137695
    6. ' g' → logprob: -17.000017166137695
    7. ' (' → logprob: -17.375017166137695
    8. '	g' → logprob: -20.250017166137695
    9. '#g' → logprob: -20.375017166137695
    10. '           ' → logprob: -20.625017166137695

Token 1080: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.7432603272027336e-06
    2. 's' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.875001907348633
    4. ')' → logprob: -17.875001907348633
    5. '
' → logprob: -18.000001907348633
    6. ' [' → logprob: -18.125001907348633
    7. '(s' → logprob: -18.500001907348633
    8. '{s' → logprob: -18.625001907348633
    9. '[
' → logprob: -19.125001907348633
    10. ')[' → logprob: -19.125001907348633

Token 1081: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05188414454460144
    2. '[s' → logprob: -3.301884174346924
    3. '[' → logprob: -4.801884174346924
    4. 's' → logprob: -5.301884174346924
    5. '   ' → logprob: -8.051883697509766
    6. ')-' → logprob: -8.926883697509766
    7. ']-' → logprob: -10.301883697509766
    8. ' -' → logprob: -10.926883697509766
    9. '[-' → logprob: -10.926883697509766
    10. '(s' → logprob: -11.926883697509766

Token 1082: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01106562465429306
    2. '-' → logprob: -4.511065483093262
    3. 's' → logprob: -11.261065483093262
    4. '[' → logprob: -13.636065483093262
    5. ' ' → logprob: -13.761065483093262
    6. '0' → logprob: -13.761065483093262
    7. '   ' → logprob: -14.511065483093262
    8. ' -' → logprob: -14.636065483093262
    9. '(' → logprob: -15.261065483093262
    10. ' s' → logprob: -16.011066436767578

Token 1083: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5004011392593384
    2. '])' → logprob: -1.2504011392593384
    3. ')
' → logprob: -2.625401020050049
    4. '])
' → logprob: -3.375401020050049
    5. ')]' → logprob: -7.875401020050049
    6. ']' → logprob: -9.250401496887207
    7. '   ' → logprob: -9.375401496887207
    8. ')])' → logprob: -9.875401496887207
    9. '           ' → logprob: -10.125401496887207
    10. '       ' → logprob: -10.875401496887207

Token 1084: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011835080571472645
    2. '       ' → logprob: -4.886835098266602
    3. 'ans' → logprob: -5.636835098266602
    4. ' ans' → logprob: -7.761835098266602
    5. '   ' → logprob: -9.261835098266602
    6. '               ' → logprob: -10.261835098266602
    7. '#' → logprob: -11.011835098266602
    8. 'if' → logprob: -11.261835098266602
    9. '	ans' → logprob: -11.386835098266602
    10. '```' → logprob: -11.636835098266602

Token 1085: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2696622312068939
    2. '           ' → logprob: -1.6446622610092163
    3. 'delta' → logprob: -4.894662380218506
    4. 'val' → logprob: -5.269662380218506
    5. 'diff' → logprob: -5.269662380218506
    6. 'if' → logprob: -5.394662380218506
    7. '#' (adapté à ' #') → logprob: -5.519662380218506
    8. 'tmp' → logprob: -5.769662380218506
    9. 'tf' → logprob: -5.769662380218506
    10. 'temp' → logprob: -6.019662380218506

Token 1086: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.869846761226654
    2. 'cur' → logprob: -1.9948468208312988
    3. 'val' → logprob: -2.119846820831299
    4. 'tmp' → logprob: -2.744846820831299
    5. 'x' → logprob: -2.994846820831299
    6. '           ' → logprob: -3.369846820831299
    7. 'new' → logprob: -3.619846820831299
    8. 'curr' → logprob: -3.744846820831299
    9. 'temp' → logprob: -3.869846820831299
    10. 'cand' → logprob: -4.244846820831299

Token 1087: ' ce' (ID: 2357)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.9383152723312378
    2. 'l' → logprob: -1.0633152723312378
    3. ' to' → logprob: -2.5633153915405273
    4. ' l' → logprob: -3.1883153915405273
    5. 'tf' → logprob: -3.3133153915405273
    6. 'from' → logprob: -3.5633153915405273
    7. 'len' → logprob: -3.8133153915405273
    8. 'ans' → logprob: -4.438315391540527
    9. ' tf' → logprob: -4.563315391540527
    10. 'g' → logprob: -4.813315391540527

Token 1088: ' sommet' (ID: 130502)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1360446959733963
    2. ' g' → logprob: -2.88604474067688
    3. 'tf' → logprob: -3.51104474067688
    4. 's' → logprob: -4.511044502258301
    5. ' tf' → logprob: -4.886044502258301
    6. 'l' → logprob: -5.386044502258301
    7. ' s' → logprob: -5.511044502258301
    8. 't' → logprob: -6.011044502258301
    9. '(g' → logprob: -6.136044502258301
    10. '(tf' → logprob: -7.011044502258301

Token 1089: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3228040933609009
    2. ' a' → logprob: -2.5728039741516113
    3. 's' → logprob: -2.9478039741516113
    4. '#' → logprob: -3.3228039741516113
    5. '           ' → logprob: -3.4478039741516113
    6. 'g' → logprob: -4.197803974151611
    7. ' has' → logprob: -4.447803974151611
    8. 'has' → logprob: -4.572803974151611
    9. 'n' → logprob: -4.822803974151611
    10. '#a' → logprob: -5.322803974151611

Token 1090: ' plus' (ID: 2932)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013380567543208599
    2. ' l' → logprob: -4.763380527496338
    3. 'plus' → logprob: -6.513380527496338
    4. ' plus' → logprob: -6.638380527496338
    5. '>' → logprob: -6.888380527496338
    6. 'len' → logprob: -7.638380527496338
    7. '1' → logprob: -9.388381004333496
    8. 'g' → logprob: -9.638381004333496
    9. ' more' → logprob: -9.888381004333496
    10. ' au' → logprob: -10.013381004333496

Token 1091: ' d' (ID: 272)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7926138043403625
    2. '1' → logprob: -1.6676137447357178
    3. 'd' → logprob: -1.6676137447357178
    4. 'de' → logprob: -3.1676137447357178
    5. ' que' → logprob: -3.4176137447357178
    6. '           ' → logprob: -3.4176137447357178
    7. ' d' → logprob: -3.7926137447357178
    8. 'que' → logprob: -3.9176137447357178
    9. ' de' → logprob: -4.667613983154297
    10. '   ' → logprob: -6.167613983154297

Token 1092: ''un' (ID: 9788)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4391491711139679
    2. ''un' → logprob: -1.4391491413116455
    3. 'un' → logprob: -2.6891491413116455
    4. '>' → logprob: -4.564149379730225
    5. ''une' → logprob: -4.689149379730225
    6. '0' → logprob: -5.064149379730225
    7. 'e' → logprob: -5.189149379730225
    8. '=' → logprob: -5.314149379730225
    9. ''au' → logprob: -6.189149379730225
    10. ' than' → logprob: -6.689149379730225

Token 1093: ' voisin' (ID: 145411)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.017034176737070084
    2. ' voisin' → logprob: -4.14203405380249
    3. 'ar' → logprob: -7.64203405380249
    4. '```' → logprob: -7.76703405380249
    5. 'neighbor' → logprob: -10.142034530639648
    6. 'voie' → logprob: -10.892034530639648
    7. ' vo' → logprob: -11.767034530639648
    8. ' vois' → logprob: -12.142034530639648
    9. ' voisins' → logprob: -12.142034530639648
    10. 'voit' → logprob: -12.392034530639648

Token 1094: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14442646503448486
    2. ' >' → logprob: -2.6444263458251953
    3. '>' → logprob: -3.2694263458251953
    4. '               ' → logprob: -4.769426345825195
    5. '           ' → logprob: -4.769426345825195
    6. 'and' → logprob: -4.894426345825195
    7. ',' → logprob: -8.394426345825195
    8. ':' → logprob: -8.769426345825195
    9. ' ==' → logprob: -8.894426345825195
    10. ' !=' → logprob: -9.269426345825195

Token 1095: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03317185118794441
    2. ' l' → logprob: -3.5331718921661377
    3. '>' → logprob: -5.783171653747559
    4. ' >' → logprob: -9.033171653747559
    5. '           ' → logprob: -9.283171653747559
    6. ')' → logprob: -10.158171653747559
    7. '2' → logprob: -10.283171653747559
    8. 'len' → logprob: -11.533171653747559
    9. '```' → logprob: -11.658171653747559
    10. ')>' → logprob: -12.033171653747559

Token 1096: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11294848471879959
    2. ' >' → logprob: -2.237948417663574
    3. ')' → logprob: -9.612948417663574
    4. ')>' → logprob: -10.362948417663574
    5. '>=' → logprob: -11.862948417663574
    6. '()>' → logprob: -12.737948417663574
    7. '==' → logprob: -13.112948417663574
    8. ' >=' → logprob: -13.237948417663574
    9. '>
' → logprob: -13.237948417663574
    10. '```' → logprob: -13.362948417663574

Token 1097: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '>' → logprob: -16.125015258789062
    4. '   ' → logprob: -16.375015258789062
    5. '0' → logprob: -17.000015258789062
    6. '```' → logprob: -17.875015258789062
    7. '
' → logprob: -18.750015258789062
    8. '=' → logprob: -19.375015258789062
    9. ' ' → logprob: -19.375015258789062
    10. '  ' → logprob: -19.500015258789062

Token 1098: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. ' ' → logprob: -12.37501049041748
    3. '>' → logprob: -12.50001049041748
    4. '
' → logprob: -14.12501049041748
    5. '   ' → logprob: -14.75001049041748
    6. '```' → logprob: -14.87501049041748
    7. '0' → logprob: -15.75001049041748
    8. '=' → logprob: -16.250009536743164
    9. '           ' → logprob: -16.500009536743164
    10. '#' → logprob: -16.625009536743164

Token 1099: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9657408595085144
    2. '           ' → logprob: -1.3407409191131592
    3. ':
' → logprob: -1.7157409191131592
    4. ':' → logprob: -2.340740919113159
    5. '               ' → logprob: -3.090740919113159
    6. ' and' → logprob: -3.715740919113159
    7. '):' → logprob: -4.96574068069458
    8. ')' → logprob: -6.34074068069458
    9. ',' → logprob: -6.46574068069458
    10. ' or' → logprob: -8.215741157531738

Token 1100: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03695514053106308
    2. '           ' → logprob: -3.5369551181793213
    3. ' ans' → logprob: -5.2869553565979
    4. '   ' → logprob: -7.4119553565979
    5. ' continue' → logprob: -8.161954879760742
    6. '                   ' → logprob: -8.411954879760742
    7. '#' → logprob: -8.411954879760742
    8. '       ' → logprob: -8.786954879760742
    9. ' #' → logprob: -8.911954879760742
    10. ' if' → logprob: -9.161954879760742

Token 1101: ' considère' (ID: 176437)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1051466166973114
    2. '               ' → logprob: -3.730146646499634
    3. ' continue' → logprob: -4.230146408081055
    4. 'continue' → logprob: -4.480146408081055
    5. '   ' → logprob: -4.605146408081055
    6. ':' → logprob: -4.605146408081055
    7. '#' → logprob: -4.855146408081055
    8. '       ' → logprob: -5.230146408081055
    9. 'ans' → logprob: -5.605146408081055
    10. 'for' → logprob: -5.980146408081055

Token 1102: ' la' (ID: 557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11968491226434708
    2. ' ans' → logprob: -3.244684934616089
    3. 'ans' → logprob: -3.619684934616089
    4. '               ' → logprob: -3.869684934616089
    5. '   ' → logprob: -4.86968469619751
    6. 'tf' → logprob: -5.36968469619751
    7. '(ans' → logprob: -5.49468469619751
    8. ' l' → logprob: -6.36968469619751
    9. '       ' → logprob: -6.61968469619751
    10. '            ' → logprob: -6.86968469619751

Token 1103: ' possibilité' (ID: 58463)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.8200467824935913
    2. 'poss' → logprob: -1.4450467824935913
    3. ' tf' → logprob: -2.070046901702881
    4. ' contribution' → logprob: -2.445046901702881
    5. ' possibilité' → logprob: -3.695046901702881
    6. 'ans' → logprob: -3.945046901702881
    7. 'diff' → logprob: -3.945046901702881
    8. 'for' → logprob: -4.820046901702881
    9. 'possible' → logprob: -4.820046901702881
    10. '   ' → logprob: -5.445046901702881

Token 1104: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057623542845249176
    2. ' de' → logprob: -3.1826236248016357
    3. ' d' → logprob: -5.182623386383057
    4. '       ' → logprob: -5.932623386383057
    5. 'de' → logprob: -6.307623386383057
    6. 'd' → logprob: -6.432623386383057
    7. ' que' → logprob: -6.932623386383057
    8. '   ' → logprob: -7.307623386383057
    9. '               ' → logprob: -7.807623386383057
    10. '#' → logprob: -8.307623863220215

Token 1105: ''en' (ID: 16740)
  Prédit: ' remplacer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remplacer' → logprob: -1.0825903415679932
    2. ' retirer' → logprob: -1.4575903415679932
    3. ' modifier' → logprob: -2.457590341567993
    4. ' supprimer' → logprob: -2.832590341567993
    5. ' recal' → logprob: -2.832590341567993
    6. ' réduire' → logprob: -2.957590341567993
    7. '   ' → logprob: -3.582590341567993
    8. ' enlever' → logprob: -3.832590341567993
    9. 'rem' → logprob: -4.082590103149414
    10. 'modifier' → logprob: -4.207590103149414

Token 1106: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.0015017713885754347
    2. 'rem' → logprob: -7.626501560211182
    3. ' retirer' → logprob: -8.25150203704834
    4. '```' → logprob: -8.25150203704834
    5. ' supprimer' → logprob: -9.25150203704834
    6. 'ret' → logprob: -9.50150203704834
    7. 'sup' → logprob: -9.62650203704834
    8. 't' → logprob: -10.25150203704834
    9. '
' → logprob: -10.37650203704834
    10. 'le' → logprob: -10.62650203704834

Token 1107: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5282338857650757
    2. ' l' → logprob: -2.2782340049743652
    3. ' cette' → logprob: -2.9032340049743652
    4. 'l' → logprob: -3.0282340049743652
    5. 'g' → logprob: -3.1532340049743652
    6. ' une' → logprob: -3.4032340049743652
    7. ' s' → logprob: -3.7782340049743652
    8. ' g' → logprob: -3.9032340049743652
    9. '           ' → logprob: -3.9032340049743652
    10. 's' → logprob: -4.903234004974365

Token 1108: ''ar' (ID: 54307)
  Prédit: ' ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.39413076639175415
    2. 'e' → logprob: -2.0191307067871094
    3. 'ar' → logprob: -2.6441307067871094
    4. '```' → logprob: -2.7691307067871094
    5. ''' → logprob: -4.394130706787109
    6. ''ar' → logprob: -4.644130706787109
    7. ' edge' → logprob: -5.144130706787109
    8. '`' → logprob: -5.644130706787109
    9. '1' → logprob: -5.769130706787109
    10. '+' → logprob: -5.894130706787109

Token 1109: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.00684466864913702
    2. 'ê' → logprob: -5.506844520568848
    3. 'êt' → logprob: -7.131844520568848
    4. 'g' → logprob: -7.756844520568848
    5. 'ète' → logprob: -8.006844520568848
    6. 'e' → logprob: -8.381844520568848
    7. 'c' → logprob: -8.381844520568848
    8. 'te' → logprob: -9.256844520568848
    9. 'ete' → logprob: -9.381844520568848
    10. 't' → logprob: -9.631844520568848

Token 1110: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003926179837435484
    2. '       ' → logprob: -6.3789262771606445
    3. '               ' → logprob: -6.5039262771606445
    4. ',' → logprob: -8.628926277160645
    5. ' (' → logprob: -8.753926277160645
    6. '```' → logprob: -9.503926277160645
    7. ':' → logprob: -9.878926277160645
    8. ' if' → logprob: -10.003926277160645
    9. 'if' → logprob: -10.628926277160645
    10. ')' → logprob: -10.753926277160645

Token 1111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012659386731684208
    2. '               ' → logprob: -5.262659549713135
    3. '       ' → logprob: -5.387659549713135
    4. '```' → logprob: -6.137659549713135
    5. ',' → logprob: -8.387659072875977
    6. ' (' → logprob: -9.387659072875977
    7. ':' → logprob: -9.637659072875977
    8. '                   ' → logprob: -10.137659072875977
    9. '``' → logprob: -10.387659072875977
    10. '.' → logprob: -10.512659072875977

Token 1112: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6410386562347412
    2. '               ' → logprob: -0.7660386562347412
    3. ' if' → logprob: -5.26603889465332
    4. 'if' (adapté à ' if') → logprob: -6.64103889465332
    5. '       ' → logprob: -6.76603889465332
    6. '                   ' → logprob: -7.89103889465332
    7. ':' → logprob: -9.39103889465332
    8. '   ' → logprob: -9.51603889465332
    9. ',' → logprob: -9.64103889465332
    10. ')' → logprob: -10.76603889465332

Token 1113: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.25195837020874023
    2. 'l' → logprob: -1.5019583702087402
    3. '           ' → logprob: -10.626958847045898
    4. '	l' → logprob: -13.626958847045898
    5. '   ' → logprob: -14.376958847045898
    6. '(l' → logprob: -14.501958847045898
    7. '               ' → logprob: -14.626958847045898
    8. 'True' → logprob: -14.876958847045898
    9. 'len' → logprob: -15.001958847045898
    10. '       ' → logprob: -15.251958847045898

Token 1114: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4741610288619995
    2. '>' → logprob: -0.9741610288619995
    3. ' >
' → logprob: -10.599161148071289
    4. '[' → logprob: -11.224161148071289
    5. '>
' → logprob: -11.599161148071289
    6. '<|end|>' → logprob: -11.724161148071289
    7. ' ' → logprob: -12.099161148071289
    8. ' ' → logprob: -12.599161148071289
    9. '&gt' → logprob: -12.724161148071289
    10. ')>' → logprob: -12.974161148071289

Token 1115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '0' → logprob: -16.375009536743164
    4. '   ' → logprob: -16.750009536743164
    5. '
' → logprob: -17.750009536743164
    6. '=' → logprob: -18.875009536743164
    7. '１' → logprob: -18.875009536743164
    8. '۱' → logprob: -19.375009536743164
    9. '  ' → logprob: -19.500009536743164
    10. '>' → logprob: -20.125009536743164

Token 1116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -15.50000286102295
    4. '   ' → logprob: -16.500003814697266
    5. '１' → logprob: -18.875003814697266
    6. '  ' → logprob: -19.125003814697266
    7. '۱' → logprob: -19.187503814697266
    8. '2' → logprob: -19.875003814697266
    9. '	' → logprob: -20.125003814697266
    10. '     ' → logprob: -20.562503814697266

Token 1117: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2877408564090729
    2. '               ' → logprob: -1.7877408266067505
    3. ':' → logprob: -2.53774094581604
    4. '           ' → logprob: -5.787740707397461
    5. '):
' → logprob: -7.912740707397461
    6. ',' → logprob: -9.662740707397461
    7. ' :
' → logprob: -10.162740707397461
    8. ' and' → logprob: -10.537740707397461
    9. '():
' → logprob: -10.787740707397461
    10. '       ' → logprob: -11.037740707397461

Token 1118: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01861260086297989
    2. '           ' → logprob: -4.018612384796143
    3. '```' → logprob: -8.2686128616333
    4. '       ' → logprob: -10.1436128616333
    5. '                   ' → logprob: -10.5186128616333
    6. '	           ' → logprob: -10.8936128616333
    7. ':' → logprob: -11.1436128616333
    8. ',' → logprob: -11.2686128616333
    9. ' ans' → logprob: -11.2686128616333
    10. ':
' → logprob: -11.5186128616333

Token 1119: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07171868532896042
    2. '           ' → logprob: -4.446718692779541
    3. 'temp' → logprob: -4.696718692779541
    4. 'val' → logprob: -4.821718692779541
    5. ' ans' → logprob: -5.071718692779541
    6. 'new' → logprob: -5.071718692779541
    7. 'ans' → logprob: -5.071718692779541
    8. 'tmp' → logprob: -5.071718692779541
    9. ' new' → logprob: -6.196718692779541
    10. 'x' → logprob: -6.196718692779541

Token 1120: ' Calcul' (ID: 57243)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3702399730682373
    2. 'val' → logprob: -1.3702399730682373
    3. 'diff' → logprob: -1.8702399730682373
    4. 'ans' → logprob: -2.3702399730682373
    5. 'tmp' → logprob: -3.1202399730682373
    6. '   ' → logprob: -3.2452399730682373
    7. 'new' → logprob: -3.6202399730682373
    8. 'x' → logprob: -3.7452399730682373
    9. 'temp' → logprob: -3.7452399730682373
    10. 'delta' → logprob: -4.120240211486816

Token 1121: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15927420556545258
    2. ' =' → logprob: -2.909274101257324
    3. '=' → logprob: -3.284274101257324
    4. 'tmp' → logprob: -4.159274101257324
    5. 'temp' → logprob: -4.284274101257324
    6. '           ' → logprob: -5.534274101257324
    7. 'd' → logprob: -5.909274101257324
    8. ' tmp' → logprob: -6.159274101257324
    9. 'diff' → logprob: -6.284274101257324
    10. 'new' → logprob: -6.409274101257324

Token 1122: ''une' (ID: 13337)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2096243053674698
    2. 'ans' → logprob: -2.2096242904663086
    3. ' tf' → logprob: -2.9596242904663086
    4. 'tf' → logprob: -4.334624290466309
    5. '(ans' → logprob: -5.334624290466309
    6. 'f' → logprob: -5.709624290466309
    7. '           ' → logprob: -7.084624290466309
    8. '               ' → logprob: -7.084624290466309
    9. ' la' → logprob: -7.209624290466309
    10. '(tf' → logprob: -7.334624290466309

Token 1123: ' candidate' (ID: 17098)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4644448459148407
    2. 'diff' → logprob: -1.964444875717163
    3. 'delta' → logprob: -2.464444875717163
    4. 'new' → logprob: -3.464444875717163
    5. 'nou' → logprob: -3.464444875717163
    6. 'tmp' → logprob: -3.464444875717163
    7. 'temp' → logprob: -3.964444875717163
    8. 'candidate' → logprob: -4.464444637298584
    9. 'possible' → logprob: -5.339444637298584
    10. 'value' → logprob: -5.839444637298584

Token 1124: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5792719721794128
    2. '=' → logprob: -0.8292719721794128
    3. 'candidate' → logprob: -6.0792717933654785
    4. '_candidate' → logprob: -7.7042717933654785
    5. '               ' → logprob: -8.204272270202637
    6. '           ' → logprob: -9.579272270202637
    7. 'tmp' → logprob: -10.204272270202637
    8. ' candidate' → logprob: -10.204272270202637
    9. 'possible' → logprob: -10.204272270202637
    10. '   ' → logprob: -10.704272270202637

Token 1125: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0015678303316235542
    2. ' ans' → logprob: -6.501567840576172
    3. 'max' → logprob: -10.251567840576172
    4. '(ans' → logprob: -11.751567840576172
    5. 'min' → logprob: -12.001567840576172
    6. '	ans' → logprob: -12.251567840576172
    7. '   ' → logprob: -12.626567840576172
    8. 'answer' → logprob: -13.001567840576172
    9. 'tmp' → logprob: -14.626567840576172
    10. '_ans' → logprob: -14.626567840576172

Token 1126: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0018712825840339065
    2. 'answer' → logprob: -7.001871109008789
    3. 'max' → logprob: -7.626871109008789
    4. 'possible' → logprob: -8.501871109008789
    5. 'min' → logprob: -9.751871109008789
    6. 'tmp' → logprob: -10.126871109008789
    7. 'ré' → logprob: -10.376871109008789
    8. ' ans' → logprob: -10.501871109008789
    9. 'new' → logprob: -10.876871109008789
    10. 'val' → logprob: -11.251871109008789

Token 1127: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07667312026023865
    2. '               ' → logprob: -2.8266730308532715
    3. '=' → logprob: -4.5766730308532715
    4. '                   ' → logprob: -5.7016730308532715
    5. ' ans' → logprob: -8.32667350769043
    6. '           ' → logprob: -8.57667350769043
    7. '                
' → logprob: -9.20167350769043
    8. ':' → logprob: -10.20167350769043
    9. '                    
' → logprob: -10.45167350769043
    10. '   ' → logprob: -10.57667350769043

Token 1128: ' tenant' (ID: 38634)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06472077965736389
    2. 'min' → logprob: -2.814720869064331
    3. ' max' → logprob: -6.064720630645752
    4. '=max' → logprob: -9.06472110748291
    5. 'ans' → logprob: -9.18972110748291
    6. ' min' → logprob: -9.56472110748291
    7. 'int' → logprob: -10.56472110748291
    8. '(max' → logprob: -10.56472110748291
    9. '=' → logprob: -10.93972110748291
    10. 't' → logprob: -11.18972110748291

Token 1129: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.3760684132575989
    2. ' compte' → logprob: -1.251068353652954
    3. 'account' → logprob: -3.876068353652954
    4. '   ' → logprob: -6.126068592071533
    5. '       ' → logprob: -6.251068592071533
    6. '           ' → logprob: -7.751068592071533
    7. '=' → logprob: -8.501068115234375
    8. '```' → logprob: -8.501068115234375
    9. '        ' → logprob: -8.751068115234375
    10. '     ' → logprob: -8.751068115234375

Token 1130: ' du' (ID: 1462)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5225287675857544
    2. '                   ' → logprob: -1.7725287675857544
    3. '           ' → logprob: -2.272528648376465
    4. '   ' → logprob: -3.647528648376465
    5. '-' → logprob: -3.772528648376465
    6. ' la' → logprob: -5.147528648376465
    7. '              ' → logprob: -5.147528648376465
    8. '                ' → logprob: -5.272528648376465
    9. 'tf' → logprob: -5.272528648376465
    10. '                  ' → logprob: -5.397528648376465

Token 1131: ' retrait' (ID: 121092)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.07912089675664902
    2. '-' → logprob: -3.3291208744049072
    3. ' tf' → logprob: -3.8291208744049072
    4. '(tf' → logprob: -5.329121112823486
    5. '-t' → logprob: -5.704121112823486
    6. ' -' → logprob: -6.329121112823486
    7. 'to' → logprob: -6.454121112823486
    8. 'ans' → logprob: -6.579121112823486
    9. '-(' → logprob: -6.954121112823486
    10. ' ans' → logprob: -7.204121112823486

Token 1132: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4614775478839874
    2. ' de' → logprob: -1.336477518081665
    3. 'de' → logprob: -2.961477518081665
    4. '                   ' → logprob: -3.711477518081665
    5. ' d' → logprob: -4.836477756500244
    6. '           ' → logprob: -5.211477756500244
    7. ' du' → logprob: -5.336477756500244
    8. 'd' → logprob: -5.711477756500244
    9. '   ' → logprob: -6.086477756500244
    10. '       ' → logprob: -6.711477756500244

Token 1133: ''une' (ID: 13337)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.4396404027938843
    2. 'l' → logprob: -1.6896404027938843
    3. 'tf' → logprob: -1.8146404027938843
    4. ' cette' → logprob: -1.9396404027938843
    5. ' tf' → logprob: -3.064640522003174
    6. ' l' → logprob: -3.439640522003174
    7. ' (' → logprob: -3.564640522003174
    8. '(tf' → logprob: -3.564640522003174
    9. ' g' → logprob: -3.689640522003174
    10. '1' → logprob: -3.814640522003174

Token 1134: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.04356861114501953
    2. 'are' → logprob: -3.7935686111450195
    3. 'arr' → logprob: -4.7935686111450195
    4. ' ar' → logprob: -5.2935686111450195
    5. 'arre' → logprob: -5.5435686111450195
    6. ' are' → logprob: -7.4185686111450195
    7. '```' → logprob: -7.6685686111450195
    8. 'aré' → logprob: -7.7935686111450195
    9. 'edge' → logprob: -8.54356861114502
    10. ' ' → logprob: -8.66856861114502

Token 1135: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.15666086971759796
    2. 'ê' → logprob: -2.781660795211792
    3. 'c' → logprob: -3.281660795211792
    4. 'ç' → logprob: -3.906660795211792
    5. 'êt' → logprob: -4.906661033630371
    6. 'te' → logprob: -5.656661033630371
    7. 'î' → logprob: -6.281661033630371
    8. 't' → logprob: -6.406661033630371
    9. 'ète' → logprob: -6.906661033630371
    10. 'g' → logprob: -6.906661033630371

Token 1136: ' sort' (ID: 4506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9968502521514893
    2. '=' → logprob: -1.2468502521514893
    3. 'candidate' → logprob: -1.6218502521514893
    4. '               ' → logprob: -2.3718502521514893
    5. 'tmp' → logprob: -4.49685001373291
    6. ' candidate' → logprob: -4.62185001373291
    7. '-' → logprob: -5.24685001373291
    8. 'new' → logprob: -5.37185001373291
    9. 'temp' → logprob: -5.49685001373291
    10. '_candidate' → logprob: -5.99685001373291

Token 1137: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.4062733054161072
    2. 'ente' → logprob: -1.156273365020752
    3. 'g' → logprob: -5.156273365020752
    4. '       ' → logprob: -5.281273365020752
    5. '   ' → logprob: -5.531273365020752
    6. 'ant' → logprob: -6.906273365020752
    7. '               ' → logprob: -7.031273365020752
    8. '           ' → logprob: -7.406273365020752
    9. '         ' → logprob: -8.156272888183594
    10. '          ' → logprob: -8.406272888183594

Token 1138: ' spécifique' (ID: 113170)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13774588704109192
    2. '=' → logprob: -3.0127458572387695
    3. '               ' → logprob: -3.0127458572387695
    4. ' ans' → logprob: -4.5127458572387695
    5. 'candidate' → logprob: -5.5127458572387695
    6. '                   ' → logprob: -6.2627458572387695
    7. '   ' → logprob: -6.7627458572387695
    8. 'tmp' → logprob: -6.7627458572387695
    9. ' candidate' → logprob: -6.7627458572387695
    10. 'token' → logprob: -6.7627458572387695

Token 1139: ',
' (ID: 412)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -1.058442234992981
    2. '               ' → logprob: -1.308442234992981
    3. ' =' → logprob: -1.933442234992981
    4. 'tmp' → logprob: -2.6834421157836914
    5. '=' → logprob: -3.1834421157836914
    6. ' candidate' → logprob: -3.5584421157836914
    7. 'cand' → logprob: -3.8084421157836914
    8. 'temp' → logprob: -4.058442115783691
    9. 'new' → logprob: -4.433442115783691
    10. 'val' → logprob: -4.683442115783691

Token 1140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30441656708717346
    2. ' ans' → logprob: -2.1794166564941406
    3. '                   ' → logprob: -2.4294166564941406
    4. '                       ' → logprob: -4.054416656494141
    5. '           ' → logprob: -4.804416656494141
    6. 'ans' → logprob: -5.054416656494141
    7. '                ' → logprob: -5.304416656494141
    8. '                               ' → logprob: -5.304416656494141
    9. '                           ' → logprob: -5.679416656494141
    10. ' ' → logprob: -6.179416656494141

Token 1141: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0617531538009644
    2. 'val' → logprob: -1.4367531538009644
    3. 'candidate' → logprob: -1.9367531538009644
    4. 'tmp' → logprob: -2.686753273010254
    5. 'cand' → logprob: -3.061753273010254
    6. 'temp' → logprob: -3.561753273010254
    7. 'new' → logprob: -3.811753273010254
    8. 'x' → logprob: -4.061753273010254
    9. 'ans' → logprob: -4.311753273010254
    10. 'res' → logprob: -4.561753273010254

Token 1142: ' en' (ID: 469)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.6767386198043823
    2. 'val' → logprob: -1.0517386198043823
    3. 'cand' → logprob: -2.301738739013672
    4. '               ' → logprob: -4.676738739013672
    5. 'value' → logprob: -4.801738739013672
    6. 'tmp' → logprob: -5.551738739013672
    7. 'temp' → logprob: -5.801738739013672
    8. 'delta' → logprob: -5.801738739013672
    9. 'new' → logprob: -5.801738739013672
    10. 'possible' → logprob: -5.926738739013672

Token 1143: ' recal' (ID: 147248)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.016928112134337425
    2. ' ans' → logprob: -5.391928195953369
    3. '           ' → logprob: -5.516928195953369
    4. '(ans' → logprob: -6.391928195953369
    5. '#' → logprob: -6.641928195953369
    6. '   ' → logprob: -6.891928195953369
    7. 'subtract' → logprob: -7.266928195953369
    8. '               ' → logprob: -7.641928195953369
    9. '       ' → logprob: -8.016927719116211
    10. 'diff' → logprob: -8.141927719116211

Token 1144: 'cul' (ID: 2885)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6293198466300964
    2. 'cul' → logprob: -1.3793199062347412
    3. 'aj' → logprob: -2.129319906234741
    4. 'du' → logprob: -3.004319906234741
    5. 'calcul' → logprob: -4.004319667816162
    6. 'cal' → logprob: -4.879319667816162
    7. 's' → logprob: -5.629319667816162
    8. 'val' → logprob: -6.254319667816162
    9. 'evalu' → logprob: -6.379319667816162
    10. 'égr' → logprob: -6.504319667816162

Token 1145: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0034915003925561905
    2. 'er' → logprob: -6.253491401672363
    3. '#' → logprob: -8.128491401672363
    4. 'ating' → logprob: -8.378491401672363
    5. 'érant' → logprob: -8.378491401672363
    6. '   ' → logprob: -9.128491401672363
    7. 'e' → logprob: -9.253491401672363
    8. 't' → logprob: -9.378491401672363
    9. 'ation' → logprob: -9.753491401672363
    10. 'é' → logprob: -10.128491401672363

Token 1146: ' l' (ID: 305)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.20167089998722076
    2. 'ans' → logprob: -1.7016708850860596
    3. '(ans' → logprob: -8.82667064666748
    4. 'tf' → logprob: -10.20167064666748
    5. ' tf' → logprob: -10.82667064666748
    6. '           ' → logprob: -10.95167064666748
    7. '
' → logprob: -11.32667064666748
    8. '	ans' → logprob: -11.95167064666748
    9. '   ' → logprob: -12.07667064666748
    10. '               ' → logprob: -12.95167064666748

Token 1147: ''esp' (ID: 73244)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2907284200191498
    2. '=' → logprob: -2.7907283306121826
    3. 'tf' → logprob: -3.6657283306121826
    4. 'val' → logprob: -4.040728569030762
    5. '   ' → logprob: -4.290728569030762
    6. '#' → logprob: -4.415728569030762
    7. '(ans' → logprob: -4.415728569030762
    8. ')' → logprob: -4.540728569030762
    9. ' =' → logprob: -4.540728569030762
    10. 'arg' → logprob: -5.040728569030762

Token 1148: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.00041851779678836465
    2. 'érence' → logprob: -8.250418663024902
    3. 'érience' → logprob: -9.875418663024902
    4. 'ér' → logprob: -10.375418663024902
    5. 'èce' → logprob: -10.875418663024902
    6. 'ération' → logprob: -11.125418663024902
    7. 'é' → logprob: -11.375418663024902
    8. '   ' → logprob: -12.000418663024902
    9. 'rance' → logprob: -13.250418663024902
    10. '```' → logprob: -13.500418663024902

Token 1149: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6580504179000854
    2. '=' → logprob: -0.7830504179000854
    3. 'ans' → logprob: -4.533050537109375
    4. 'tmp' → logprob: -6.408050537109375
    5. 'possible' → logprob: -6.533050537109375
    6. ' ans' → logprob: -6.658050537109375
    7. 'candidate' → logprob: -6.658050537109375
    8. '   ' → logprob: -6.783050537109375
    9. '-=' → logprob: -6.783050537109375
    10. '_candidate' → logprob: -6.783050537109375

Token 1150: ' ce' (ID: 2357)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0024978946894407272
    2. ' ans' → logprob: -6.127497673034668
    3. '(ans' → logprob: -9.627497673034668
    4. '           ' → logprob: -10.002497673034668
    5. 'l' → logprob: -10.377497673034668
    6. 'g' → logprob: -10.627497673034668
    7. 'la' → logprob: -11.127497673034668
    8. '   ' → logprob: -11.252497673034668
    9. 'le' → logprob: -11.377497673034668
    10. 'tmp' → logprob: -11.627497673034668

Token 1151: ' cas' (ID: 2108)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3359187841415405
    2. 'tf' → logprob: -2.21091890335083
    3. 'for' → logprob: -3.46091890335083
    4. ']' → logprob: -4.21091890335083
    5. ' ans' → logprob: -4.46091890335083
    6. 'code' → logprob: -4.58591890335083
    7. '
' → logprob: -4.58591890335083
    8. '#' → logprob: -4.58591890335083
    9. '```' → logprob: -4.83591890335083
    10. '+' → logprob: -4.83591890335083

Token 1152: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025247497484087944
    2. ' ans' → logprob: -4.775247573852539
    3. '=' → logprob: -5.150247573852539
    4. '               ' → logprob: -5.400247573852539
    5. '                   ' → logprob: -6.150247573852539
    6. '           ' → logprob: -6.775247573852539
    7. 'ans' → logprob: -7.150247573852539
    8. '   ' → logprob: -7.775247573852539
    9. '(ans' → logprob: -8.150247573852539
    10. ',' → logprob: -8.900247573852539

Token 1153: ' en' (ID: 469)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5022345781326294
    2. '           ' → logprob: -2.50223445892334
    3. '               ' → logprob: -2.50223445892334
    4. ' ans' → logprob: -2.87723445892334
    5. 'min' → logprob: -3.00223445892334
    6. 'max' → logprob: -3.25223445892334
    7. '                   ' → logprob: -3.62723445892334
    8. '   ' → logprob: -5.00223445892334
    9. '       ' → logprob: -5.00223445892334
    10. '
' → logprob: -5.25223445892334

Token 1154: ' mettant' (ID: 139614)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.028629647567868233
    2. '#' → logprob: -5.028629779815674
    3. '           ' → logprob: -5.403629779815674
    4. ' ans' → logprob: -5.403629779815674
    5. 'max' → logprob: -5.403629779815674
    6. 'min' → logprob: -5.653629779815674
    7. '               ' → logprob: -6.903629779815674
    8. '   ' → logprob: -7.028629779815674
    9. '       ' → logprob: -7.153629779815674
    10. '                   ' → logprob: -7.653629779815674

Token 1155: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.052011583000421524
    2. '```' → logprob: -3.802011489868164
    3. '   ' → logprob: -4.177011489868164
    4. ' à' → logprob: -5.552011489868164
    5. '           ' → logprob: -5.927011489868164
    6. 'a' → logprob: -6.427011489868164
    7. 'aj' → logprob: -6.802011489868164
    8. ' ' → logprob: -6.802011489868164
    9. 'ans' → logprob: -7.427011489868164
    10. '`' → logprob: -7.802011489868164

Token 1156: ' jour' (ID: 8379)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12832561135292053
    2. 'jour' → logprob: -2.5033257007598877
    3. 'min' → logprob: -4.003325462341309
    4. ' jour' → logprob: -4.003325462341309
    5. 'ans' → logprob: -7.003325462341309
    6. 'jours' → logprob: -7.503325462341309
    7. 'day' → logprob: -8.253325462341309
    8. ' jours' → logprob: -9.753325462341309
    9. 'Jour' → logprob: -9.753325462341309
    10. 'balance' → logprob: -9.878325462341309

Token 1157: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0016250719781965017
    2. ' ans' → logprob: -6.751625061035156
    3. '(ans' → logprob: -8.126625061035156
    4. '           ' → logprob: -9.626625061035156
    5. '   ' → logprob: -10.126625061035156
    6. '               ' → logprob: -10.251625061035156
    7. 'if' → logprob: -12.376625061035156
    8. '                   ' → logprob: -12.501625061035156
    9. '
' → logprob: -12.751625061035156
    10. '       ' → logprob: -13.126625061035156

Token 1158: ' si' (ID: 1784)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049148861318826675
    2. '=' → logprob: -3.0491487979888916
    3. '                   ' → logprob: -8.799148559570312
    4. '           ' → logprob: -9.049148559570312
    5. '               ' → logprob: -9.299148559570312
    6. '   ' → logprob: -9.424148559570312
    7. ',' → logprob: -10.174148559570312
    8. '=max' → logprob: -10.799148559570312
    9. '                       ' → logprob: -10.924148559570312
    10. '=min' → logprob: -11.674148559570312

Token 1159: ' on' (ID: 402)
  Prédit: ' tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tf' → logprob: -0.5899319648742676
    2. 'tf' → logprob: -1.5899319648742676
    3. ' ans' → logprob: -2.0899319648742676
    4. 'ans' → logprob: -2.2149319648742676
    5. '(tf' → logprob: -5.589931964874268
    6. '(ans' → logprob: -5.964931964874268
    7. ' (' → logprob: -7.714931964874268
    8. ' from' → logprob: -8.40243148803711
    9. 'from' → logprob: -8.46493148803711
    10. 'max' → logprob: -8.71493148803711

Token 1160: ' trouve' (ID: 30913)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5845120549201965
    2. ' >' → logprob: -1.3345119953155518
    3. ' <' → logprob: -2.8345119953155518
    4. ' améli' → logprob: -4.084512233734131
    5. ' trouve' → logprob: -4.459512233734131
    6. '<' → logprob: -5.084512233734131
    7. ' est' → logprob: -5.084512233734131
    8. 'est' → logprob: -5.209512233734131
    9. 's' → logprob: -5.209512233734131
    10. 'ans' → logprob: -5.334512233734131

Token 1161: ' mieux' (ID: 26345)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7071558833122253
    2. 'max' → logprob: -0.8321558833122253
    3. 'ans' → logprob: -4.207155704498291
    4. ' min' → logprob: -4.332155704498291
    5. 'min' → logprob: -4.582155704498291
    6. ' ans' → logprob: -4.707155704498291
    7. ' une' → logprob: -4.832155704498291
    8. '           ' → logprob: -5.207155704498291
    9. '               ' → logprob: -6.082155704498291
    10. ' un' → logprob: -6.332155704498291

Token 1162: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15582750737667084
    2. '=' → logprob: -2.905827522277832
    3. '(ans' → logprob: -3.155827522277832
    4. '(
' → logprob: -4.280827522277832
    5. '               ' → logprob: -4.405827522277832
    6. '           ' → logprob: -5.280827522277832
    7. ' ans' → logprob: -5.780827522277832
    8. '                   ' → logprob: -6.155827522277832
    9. '   ' → logprob: -6.280827522277832
    10. 'ans' → logprob: -6.530827522277832

Token 1163: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03360479325056076
    2. ' ans' → logprob: -4.033604621887207
    3. '                   ' → logprob: -4.658604621887207
    4. '           ' → logprob: -6.158604621887207
    5. '```' → logprob: -7.283604621887207
    6. '                       ' → logprob: -7.408604621887207
    7. 'ans' → logprob: -7.658604621887207
    8. '   ' → logprob: -8.283604621887207
    9. '                           ' → logprob: -8.658604621887207
    10. ' if' → logprob: -8.658604621887207

Token 1164: ' ans' (ID: 3345)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.8011455535888672
    2. 'ans' (adapté à ' ans') → logprob: -1.4261455535888672
    3. 'candidate' → logprob: -2.301145553588867
    4. ' cand' → logprob: -2.926145553588867
    5. ' ans' → logprob: -3.176145553588867
    6. 'val' → logprob: -3.676145553588867
    7. '               ' → logprob: -3.801145553588867
    8. 'tmp' → logprob: -4.176145553588867
    9. 'new' → logprob: -4.551145553588867
    10. ' candidate' → logprob: -4.676145553588867

Token 1165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760966539382935
    2. '=' → logprob: -0.8260966539382935
    3. '=max' → logprob: -9.076096534729004
    4. '   ' → logprob: -10.826096534729004
    5. '=min' → logprob: -11.451096534729004
    6. 'max' → logprob: -13.076096534729004
    7. '+=' → logprob: -13.326096534729004
    8. '       ' → logprob: -13.451096534729004
    9. '           ' → logprob: -13.826096534729004
    10. '<' → logprob: -13.826096534729004

Token 1166: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.32048940658569336
    2. 'min' → logprob: -1.3204894065856934
    3. ' max' → logprob: -5.320489406585693
    4. ' min' → logprob: -6.070489406585693
    5. '   ' → logprob: -14.445489883422852
    6. '	max' → logprob: -14.820489883422852
    7. '	min' → logprob: -15.695489883422852
    8. '(max' → logprob: -16.19548988342285
    9. '(min' → logprob: -16.94548988342285
    10. '           ' → logprob: -17.82048988342285

Token 1167: '(
' (ID: 1607)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0020411754958331585
    2. '(' → logprob: -6.377041339874268
    3. '(
' → logprob: -8.00204086303711
    4. 'ans' → logprob: -12.87704086303711
    5. '(

' → logprob: -14.62704086303711
    6. '(
' → logprob: -15.12704086303711
    7. ' (' → logprob: -15.62704086303711
    8. '(answer' → logprob: -15.87704086303711
    9. '(abs' → logprob: -16.12704086303711
    10. '((' → logprob: -16.12704086303711

Token 1168: '                   ' (ID: 699)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6999721527099609
    2. '(ans' → logprob: -0.6999721527099609
    3. ' ans' → logprob: -5.449972152709961
    4. '(
' → logprob: -6.074972152709961
    5. '(' → logprob: -9.449972152709961
    6. '	ans' → logprob: -9.699972152709961
    7. '           ' → logprob: -10.574972152709961
    8. '               ' → logprob: -10.574972152709961
    9. '   ' → logprob: -11.824972152709961
    10. '                   ' → logprob: -13.074972152709961

Token 1169: ' all' (ID: 722)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007218453683890402
    2. ' ans' → logprob: -7.2507219314575195
    3. '(ans' → logprob: -12.00072193145752
    4. '                   ' → logprob: -12.75072193145752
    5. '
' → logprob: -13.75072193145752
    6. '               ' → logprob: -14.00072193145752
    7. '	ans' → logprob: -14.62572193145752
    8. '           ' → logprob: -15.25072193145752
    9. '   ' → logprob: -16.250720977783203
    10. 'ann' → logprob: -16.875720977783203

Token 1170: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6055446863174438
    2. '(ans' → logprob: -1.1055446863174438
    3. 'ans' → logprob: -3.3555445671081543
    4. '-' → logprob: -3.4805445671081543
    5. '(
' → logprob: -3.8555445671081543
    6. ' ans' → logprob: -4.105544567108154
    7. '+' → logprob: -5.105544567108154
    8. '(' → logprob: -5.980544567108154
    9. ' -' → logprob: -6.230544567108154
    10. ',' → logprob: -6.230544567108154

Token 1171: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027730748057365417
    2. ',
' → logprob: -3.652730703353882
    3. '                   ' → logprob: -7.402730941772461
    4. ' ,' → logprob: -7.652730941772461
    5. ' ans' → logprob: -8.652730941772461
    6. ',
' → logprob: -10.277730941772461
    7. ' ,
' → logprob: -10.527730941772461
    8. '           ' → logprob: -10.652730941772461
    9. '               ' → logprob: -10.902730941772461
    10. ',

' → logprob: -11.527730941772461

Token 1172: ' tf' (ID: 14191)
  Prédit: 'tf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tf' → logprob: -0.1755809187889099
    2. '(tf' → logprob: -2.6755809783935547
    3. 'to' → logprob: -3.5505809783935547
    4. '1' → logprob: -3.9255809783935547
    5. '(' → logprob: -4.300580978393555
    6. '-' → logprob: -5.300580978393555
    7. '(to' → logprob: -5.550580978393555
    8. ' tf' → logprob: -5.925580978393555
    9. '(-' → logprob: -6.050580978393555
    10. '           ' → logprob: -6.050580978393555

Token 1173: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0001499060745118186
    2. '[' → logprob: -10.375149726867676
    3. '[(' → logprob: -10.375149726867676
    4. '           ' → logprob: -11.125149726867676
    5. '(s' → logprob: -11.125149726867676
    6. '[
' → logprob: -11.875149726867676
    7. '   ' → logprob: -11.875149726867676
    8. '[i' → logprob: -12.125149726867676
    9. '[int' → logprob: -12.125149726867676
    10. '                   ' → logprob: -12.375149726867676

Token 1174: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000508591765537858
    2. '[' → logprob: -7.625508785247803
    3. 's' → logprob: -11.125508308410645
    4. ' -' → logprob: -12.500508308410645
    5. '[i' → logprob: -14.750508308410645
    6. '```' → logprob: -14.875508308410645
    7. '   ' → logprob: -15.000508308410645
    8. '[s' → logprob: -15.375508308410645
    9. 'i' → logprob: -15.625508308410645
    10. '1' → logprob: -15.750508308410645

Token 1175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.250000953674316
    3. '2' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.125
    5. '```' → logprob: -16.125
    6. '           ' → logprob: -19.0
    7. 's' → logprob: -19.0625
    8. '-' → logprob: -19.0625
    9. '[' → logprob: -19.1875
    10. '`' → logprob: -19.5

Token 1176: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34602612257003784
    2. '[s' → logprob: -1.7210261821746826
    3. ']-' → logprob: -3.7210261821746826
    4. '-' → logprob: -3.7210261821746826
    5. '                   ' → logprob: -3.9710261821746826
    6. '[i' → logprob: -4.2210259437561035
    7. '           ' → logprob: -4.9710259437561035
    8. '][' → logprob: -5.0960259437561035
    9. '[' → logprob: -5.2210259437561035
    10. '       ' → logprob: -5.7210259437561035

Token 1177: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17177781462669373
    2. '-l' → logprob: -2.1717777252197266
    3. '(-' → logprob: -3.7967777252197266
    4. '(l' → logprob: -5.171777725219727
    5. '-(' → logprob: -5.171777725219727
    6. '1' → logprob: -5.296777725219727
    7. 'l' → logprob: -6.171777725219727
    8. '(' → logprob: -6.421777725219727
    9. ' -' → logprob: -7.671777725219727
    10. '   ' → logprob: -9.171777725219727

Token 1178: '/(' (ID: 27334)
  Prédit: '/l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/l' → logprob: -0.30522751808166504
    2. '/' → logprob: -1.930227518081665
    3. '-' → logprob: -2.930227518081665
    4. ' /' → logprob: -3.055227518081665
    5. ' -' → logprob: -4.930227279663086
    6. '           ' → logprob: -5.930227279663086
    7. '   ' → logprob: -6.680227279663086
    8. ')/' → logprob: -6.680227279663086
    9. '                   ' → logprob: -6.805227279663086
    10. ')' → logprob: -7.055227279663086

Token 1179: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00030852947384119034
    2. '(l' → logprob: -8.125308990478516
    3. 'len' → logprob: -12.875308990478516
    4. '1' → logprob: -12.875308990478516
    5. '           ' → logprob: -13.125308990478516
    6. '   ' → logprob: -13.375308990478516
    7. '
' → logprob: -13.750308990478516
    8. '(' → logprob: -14.375308990478516
    9. '       ' → logprob: -15.000308990478516
    10. ' l' → logprob: -15.375308990478516

Token 1180: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02042088471353054
    2. ' -' → logprob: -4.145421028137207
    3. ')' → logprob: -5.520421028137207
    4. '-l' → logprob: -9.145421028137207
    5. '           ' → logprob: -9.395421028137207
    6. ')-' → logprob: -9.395421028137207
    7. '   ' → logprob: -10.645421028137207
    8. 'l' → logprob: -10.645421028137207
    9. '       ' → logprob: -11.770421028137207
    10. ' ' → logprob: -11.895421028137207

Token 1181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '2' → logprob: -16.250001907348633
    5. 'l' → logprob: -16.375001907348633
    6. ')' → logprob: -16.375001907348633
    7. '...' → logprob: -17.375001907348633
    8. '0' → logprob: -17.375001907348633
    9. 's' → logprob: -17.687501907348633
    10. '(' → logprob: -17.937501907348633

Token 1182: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011548778042197227
    2. ')-' → logprob: -4.51154899597168
    3. ' )' → logprob: -8.51154899597168
    4. '))' → logprob: -9.01154899597168
    5. '-' → logprob: -9.51154899597168
    6. ')+' → logprob: -10.38654899597168
    7. ')
' → logprob: -10.63654899597168
    8. ')-(' → logprob: -11.38654899597168
    9. ' -' → logprob: -11.76154899597168
    10. '),' → logprob: -11.88654899597168

Token 1183: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25265780091285706
    2. '-' → logprob: -1.5026577711105347
    3. ')' → logprob: -8.002657890319824
    4. '           ' → logprob: -9.002657890319824
    5. '                   ' → logprob: -9.002657890319824
    6. '               ' → logprob: -10.252657890319824
    7. '*(' → logprob: -11.002657890319824
    8. '-(' → logprob: -11.127657890319824
    9. '   ' → logprob: -11.377657890319824
    10. '```' → logprob: -12.002657890319824

Token 1184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '(' → logprob: -16.25
    5. '           ' → logprob: -17.625
    6. '                   ' → logprob: -17.875
    7. '               ' → logprob: -18.125
    8. '```' → logprob: -18.75
    9. '
' → logprob: -19.25
    10. '  ' → logprob: -19.375

Token 1185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.75
    3. '(' → logprob: -16.25
    4. '   ' → logprob: -16.5
    5. '```' → logprob: -18.875
    6. '           ' → logprob: -19.125
    7. '
' → logprob: -19.125
    8. '               ' → logprob: -19.875
    9. '                   ' → logprob: -20.5
    10. '  ' → logprob: -20.625

Token 1186: '/l' (ID: 16347)
  Prédit: '/l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/l' → logprob: -0.25217851996421814
    2. '/' → logprob: -1.5021785497665405
    3. ' /' → logprob: -9.502178192138672
    4. '/li' → logprob: -9.752178192138672
    5. ')/' → logprob: -10.252178192138672
    6. ')' → logprob: -10.752178192138672
    7. 'l' → logprob: -10.752178192138672
    8. '/(' → logprob: -11.252178192138672
    9. '/k' → logprob: -12.252178192138672
    10. '/f' → logprob: -12.627178192138672

Token 1187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011624845210462809
    2. ')+' → logprob: -7.376162528991699
    3. '),' → logprob: -8.2511625289917
    4. ')
' → logprob: -8.3761625289917
    5. ' )' → logprob: -11.3761625289917
    6. '),
' → logprob: -12.1261625289917
    7. '               ' → logprob: -12.2511625289917
    8. '))' → logprob: -12.5011625289917
    9. '       ' → logprob: -12.6261625289917
    10. '           ' → logprob: -12.8761625289917

Token 1188: ' -' (ID: 533)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4662168025970459
    2. '+' → logprob: -1.216216802597046
    3. ' +' → logprob: -2.841216802597046
    4. '                       ' → logprob: -4.966217041015625
    5. '               ' → logprob: -5.341217041015625
    6. ',' → logprob: -6.841217041015625
    7. '           ' → logprob: -6.966217041015625
    8. '                           ' → logprob: -7.091217041015625
    9. '                  ' → logprob: -7.466217041015625
    10. '                    ' → logprob: -7.591217041015625

Token 1189: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3397112190723419
    2. '(from' → logprob: -1.5897111892700195
    3. 'to' → logprob: -3.4647111892700195
    4. '(' → logprob: -4.0897111892700195
    5. '(to' → logprob: -4.0897111892700195
    6. '                   ' → logprob: -4.9647111892700195
    7. ' (' → logprob: -5.5897111892700195
    8. '   ' → logprob: -5.9647111892700195
    9. '((' → logprob: -6.3397111892700195
    10. '               ' → logprob: -6.8397111892700195

Token 1190: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -3.3451433409936726e-05
    2. 'E' → logprob: -10.375033378601074
    3. 'from' → logprob: -13.625033378601074
    4. ' P' → logprob: -15.125033378601074
    5. 'p' → logprob: -15.375033378601074
    6. '
' → logprob: -15.750033378601074
    7. '_P' → logprob: -16.31253433227539
    8. '```' → logprob: -16.37503433227539
    9. '   ' → logprob: -17.75003433227539
    10. '[' → logprob: -17.75003433227539

Token 1191: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.001040552044287324
    2. '[t' → logprob: -6.876040458679199
    3. ' [' → logprob: -12.3760404586792
    4. 's' → logprob: -13.5010404586792
    5. 't' → logprob: -14.2510404586792
    6. '(s' → logprob: -14.3760404586792
    7. '[' → logprob: -14.6260404586792
    8. '[(' → logprob: -15.1260404586792
    9. '[j' → logprob: -16.751041412353516
    10. '   ' → logprob: -16.751041412353516

Token 1192: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010625827126204967
    2. '[' → logprob: -6.876062393188477
    3. '[-' → logprob: -10.626062393188477
    4. ' -' → logprob: -12.751062393188477
    5. '```' → logprob: -13.251062393188477
    6. '[s' → logprob: -15.376062393188477
    7. '1' → logprob: -15.751062393188477
    8. ']-' → logprob: -15.876062393188477
    9. '   ' → logprob: -16.376062393188477
    10. ''-' → logprob: -17.001062393188477

Token 1193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. '2' → logprob: -12.875005722045898
    3. ' ' → logprob: -12.875005722045898
    4. '   ' → logprob: -15.250005722045898
    5. '```' → logprob: -16.0000057220459
    6. 's' → logprob: -16.5625057220459
    7. '0' → logprob: -17.7500057220459
    8. '-' → logprob: -17.9375057220459
    9. '           ' → logprob: -18.6250057220459
    10. '       ' → logprob: -18.6875057220459

Token 1194: ']*(' (ID: 92627)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00048167374916374683
    2. '[' → logprob: -9.000481605529785
    3. '][' → logprob: -9.625481605529785
    4. '       ' → logprob: -9.750481605529785
    5. '[j' → logprob: -9.750481605529785
    6. '   ' → logprob: -10.250481605529785
    7. 't' → logprob: -10.625481605529785
    8. '           ' → logprob: -10.625481605529785
    9. '[(' → logprob: -10.750481605529785
    10. ' [' → logprob: -11.500481605529785

Token 1195: 'to' (ID: 935)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9272400140762329
    2. '(' → logprob: -1.177240014076233
    3. '(from' → logprob: -1.802240014076233
    4. '1' → logprob: -2.0522398948669434
    5. ' (' → logprob: -6.427239894866943
    6. '   ' → logprob: -7.677239894866943
    7. 'all' → logprob: -8.677240371704102
    8. '((' → logprob: -8.802240371704102
    9. 'to' → logprob: -9.302240371704102
    10. ' from' → logprob: -9.927240371704102

Token 1196: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.4736459888808895e-05
    2. '
' → logprob: -12.750014305114746
    3. 'e' → logprob: -12.875014305114746
    4. '   ' → logprob: -13.625014305114746
    5. ' E' → logprob: -13.750014305114746
    6. '+' → logprob: -14.187514305114746
    7. '                   ' → logprob: -14.187514305114746
    8. 'P' → logprob: -15.062514305114746
    9. 'Е' → logprob: -15.125014305114746
    10. '           ' → logprob: -15.187514305114746

Token 1197: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0005669722449965775
    2. '[t' → logprob: -7.5005669593811035
    3. '[' → logprob: -12.250567436218262
    4. 's' → logprob: -13.000567436218262
    5. '           ' → logprob: -13.375567436218262
    6. '       ' → logprob: -13.500567436218262
    7. '[i' → logprob: -14.000567436218262
    8. '   ' → logprob: -14.250567436218262
    9. '               ' → logprob: -14.500567436218262
    10. '                   ' → logprob: -14.875567436218262

Token 1198: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16320300102233887
    2. '[' → logprob: -2.038203001022339
    3. '[i' → logprob: -4.538203239440918
    4. '[s' → logprob: -4.913203239440918
    5. 's' → logprob: -6.913203239440918
    6. 'i' → logprob: -6.913203239440918
    7. '[-' → logprob: -9.413203239440918
    8. '1' → logprob: -10.038203239440918
    9. '```' → logprob: -10.288203239440918
    10. '   ' → logprob: -10.913203239440918

Token 1199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015471219085156918
    2. 'i' → logprob: -6.501547336578369
    3. '[i' → logprob: -10.751546859741211
    4. '-' → logprob: -11.626546859741211
    5. ' ' → logprob: -12.751546859741211
    6. '   ' → logprob: -12.876546859741211
    7. 's' → logprob: -13.126546859741211
    8. '```' → logprob: -13.626546859741211
    9. '[' → logprob: -14.126546859741211
    10. 't' → logprob: -14.251546859741211

Token 1200: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008711130358278751
    2. ' +' → logprob: -4.883711338043213
    3. '+t' → logprob: -7.258711338043213
    4. ')+' → logprob: -8.883710861206055
    5. ']+' → logprob: -9.008710861206055
    6. '[' → logprob: -10.633710861206055
    7. '+[' → logprob: -10.758710861206055
    8. '[t' → logprob: -11.133710861206055
    9. ')' → logprob: -11.633710861206055
    10. '+(' → logprob: -11.633710861206055

Token 1201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011307948443572968
    2. '0' → logprob: -10.250113487243652
    3. '2' → logprob: -10.500113487243652
    4. 'l' → logprob: -11.000113487243652
    5. '(' → logprob: -11.625113487243652
    6. ' ' → logprob: -12.625113487243652
    7. 't' → logprob: -12.750113487243652
    8. ')' → logprob: -13.000113487243652
    9. '+' → logprob: -13.000113487243652
    10. '(t' → logprob: -13.125113487243652

Token 1202: '+' (ID: 10)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.8958879709243774
    2. ')*(' → logprob: -1.2708879709243774
    3. ')' → logprob: -1.7708879709243774
    4. ')/' → logprob: -2.645887851715088
    5. ')/(' → logprob: -3.145887851715088
    6. '+' → logprob: -4.895887851715088
    7. ' -' → logprob: -5.895887851715088
    8. ' )' → logprob: -6.020887851715088
    9. '   ' → logprob: -6.145887851715088
    10. '           ' → logprob: -6.270887851715088

Token 1203: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.00010652327910065651
    2. '(from' → logprob: -10.250106811523438
    3. 'sum' → logprob: -10.625106811523438
    4. ' from' → logprob: -10.875106811523438
    5. '   ' → logprob: -11.125106811523438
    6. 'to' → logprob: -13.000106811523438
    7. '(' → logprob: -13.125106811523438
    8. '               ' → logprob: -13.125106811523438
    9. '           ' → logprob: -13.250106811523438
    10. '                   ' → logprob: -13.875106811523438

Token 1204: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -2.339278580620885e-06
    2. '[j' → logprob: -13.750001907348633
    3. '[s' → logprob: -13.875001907348633
    4. '[' → logprob: -15.875001907348633
    5. ' E' → logprob: -16.750001907348633
    6. '[g' → logprob: -16.750001907348633
    7. '[E' → logprob: -17.000001907348633
    8. '_E' → logprob: -17.500001907348633
    9. '```' → logprob: -17.500001907348633
    10. 'Е' → logprob: -17.875001907348633

Token 1205: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -4.429896944202483e-05
    2. '[' → logprob: -10.500043869018555
    3. '[s' → logprob: -12.375043869018555
    4. '       ' → logprob: -13.375043869018555
    5. '   ' → logprob: -13.500043869018555
    6. '[(' → logprob: -13.625043869018555
    7. 't' → logprob: -13.625043869018555
    8. '           ' → logprob: -13.750043869018555
    9. '(t' → logprob: -14.000043869018555
    10. '                   ' → logprob: -14.000043869018555

Token 1206: '-' (ID: 12)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.000968987587839365
    2. '[s' → logprob: -7.375968933105469
    3. '[j' → logprob: -8.125968933105469
    4. 't' → logprob: -10.875968933105469
    5. '[' → logprob: -11.875968933105469
    6. ']' → logprob: -12.125968933105469
    7. ' [' → logprob: -12.500968933105469
    8. '[(' → logprob: -12.750968933105469
    9. '   ' → logprob: -13.500968933105469
    10. '(t' → logprob: -13.625968933105469

Token 1207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -16.25
    4. '2' → logprob: -16.75
    5. '   ' → logprob: -17.375
    6. ']' → logprob: -18.0
    7. '-' → logprob: -18.0
    8. 't' → logprob: -18.5
    9. '１' → logprob: -19.5625
    10. '           ' → logprob: -19.875

Token 1208: '])' (ID: 4636)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.6568433046340942
    2. ')' → logprob: -1.1568433046340942
    3. ')/(' → logprob: -2.2818431854248047
    4. ' )' → logprob: -3.7818431854248047
    5. ')*' → logprob: -3.9068431854248047
    6. '))' → logprob: -5.531843185424805
    7. '       ' → logprob: -5.781843185424805
    8. ')*(' → logprob: -5.906843185424805
    9. '   ' → logprob: -6.031843185424805
    10. '))/(' → logprob: -6.656843185424805

Token 1209: '/(' (ID: 27334)
  Prédit: '/l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/l' → logprob: -0.9103510975837708
    2. ',' → logprob: -1.660351037979126
    3. ')' → logprob: -2.160351037979126
    4. '/(' → logprob: -2.160351037979126
    5. ' /' → logprob: -2.660351037979126
    6. '   ' → logprob: -3.660351037979126
    7. '               ' → logprob: -4.660351276397705
    8. '/' → logprob: -4.785351276397705
    9. '                   ' → logprob: -4.785351276397705
    10. ' ,' → logprob: -4.785351276397705

Token 1210: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0009700604132376611
    2. '(l' → logprob: -7.625969886779785
    3. ' l' → logprob: -8.250969886779785
    4. '   ' → logprob: -9.500969886779785
    5. '           ' → logprob: -10.375969886779785
    6. '(' → logprob: -10.500969886779785
    7. '                   ' → logprob: -10.750969886779785
    8. '               ' → logprob: -11.500969886779785
    9. '1' → logprob: -11.750969886779785
    10. ' (' → logprob: -12.000969886779785

Token 1211: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008734415285289288
    2. ' -' → logprob: -4.758734226226807
    3. '   ' → logprob: -9.883734703063965
    4. '           ' → logprob: -10.258734703063965
    5. ')' → logprob: -11.258734703063965
    6. '       ' → logprob: -11.383734703063965
    7. '               ' → logprob: -13.008734703063965
    8. ' ' → logprob: -13.133734703063965
    9. '1' → logprob: -13.383734703063965
    10. '  ' → logprob: -14.258734703063965

Token 1212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.375014305114746
    3. ')' → logprob: -14.000014305114746
    4. '   ' → logprob: -14.500014305114746
    5. '           ' → logprob: -14.625014305114746
    6. '```' → logprob: -15.000014305114746
    7. '       ' → logprob: -15.500014305114746
    8. '2' → logprob: -16.50001335144043
    9. '0' → logprob: -16.75001335144043
    10. '<|end|>' → logprob: -16.87501335144043

Token 1213: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014867615886032581
    2. '               ' → logprob: -5.014867782592773
    3. '           ' → logprob: -5.389867782592773
    4. ')
' → logprob: -6.264867782592773
    5. '       ' → logprob: -7.764867782592773
    6. '                   ' → logprob: -7.764867782592773
    7. '+' → logprob: -8.264867782592773
    8. ' )' → logprob: -9.014867782592773
    9. '))' → logprob: -9.389867782592773
    10. '),' → logprob: -9.389867782592773

Token 1214: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5995779633522034
    2. '                   ' → logprob: -1.8495779037475586
    3. '               ' → logprob: -2.2245779037475586
    4. '           ' → logprob: -2.7245779037475586
    5. '       ' → logprob: -3.3495779037475586
    6. ' )' → logprob: -4.474577903747559
    7. '                           ' → logprob: -4.724577903747559
    8. ' ' → logprob: -4.724577903747559
    9. '                       ' → logprob: -4.849577903747559
    10. '                               ' → logprob: -5.349577903747559

Token 1215: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.16036081314086914
    2. ' ans' → logprob: -1.9103608131408691
    3. '                   ' → logprob: -9.035360336303711
    4. '(ans' → logprob: -11.910360336303711
    5. '	ans' → logprob: -12.535360336303711
    6. '               ' → logprob: -12.910360336303711
    7. '           ' → logprob: -13.035360336303711
    8. ' ' → logprob: -13.785360336303711
    9. ')' → logprob: -14.785360336303711
    10. '                    ' → logprob: -15.285360336303711

Token 1216: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0390743762254715
    2. '               ' → logprob: -3.289074420928955
    3. '       ' → logprob: -7.414074420928955
    4. '           ' → logprob: -8.539073944091797
    5. '   ' → logprob: -9.039073944091797
    6. ')
' → logprob: -9.539073944091797
    7. '                   ' → logprob: -10.414073944091797
    8. ' )' → logprob: -12.039073944091797
    9. '                       ' → logprob: -13.289073944091797
    10. '<|end|>' → logprob: -14.289073944091797

Token 1217: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6990110874176025
    2. '       ' → logprob: -0.6990110874176025
    3. '               ' → logprob: -5.824010848999023
    4. '           ' → logprob: -6.574010848999023
    5. '   ' → logprob: -6.949010848999023
    6. ')
' → logprob: -7.574010848999023
    7. '                   ' → logprob: -11.199010848999023
    8. '```' → logprob: -13.074010848999023
    9. '	' → logprob: -13.824010848999023
    10. ' )' → logprob: -14.074010848999023

Token 1218: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015091083943843842
    2. '           ' → logprob: -5.0150909423828125
    3. '       ' → logprob: -5.2650909423828125
    4. '               ' → logprob: -6.0150909423828125
    5. ')
' (adapté à ' )
') → logprob: -7.2650909423828125
    6. '   ' → logprob: -10.640090942382812
    7. '                   ' → logprob: -12.890090942382812
    8. ' )' → logprob: -13.515090942382812
    9. '```' → logprob: -14.515090942382812
    10. ')}' → logprob: -15.140090942382812

Token 1219: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1220: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1221: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025616264902055264
    2. '   ' → logprob: -6.002561569213867
    3. 'return' → logprob: -9.502561569213867
    4. ' print' → logprob: -11.627561569213867
    5. '```' → logprob: -13.002561569213867
    6. 'for' → logprob: -17.252561569213867
    7. '    
' → logprob: -17.627561569213867
    8. '
' → logprob: -18.002561569213867
    9. '	print' → logprob: -18.002561569213867
    10. '#print' → logprob: -18.502561569213867

Token 1222: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011777353473007679
    2. '   ' → logprob: -4.511777400970459
    3. ' print' → logprob: -7.261777400970459
    4. 'return' → logprob: -10.8867769241333
    5. '.print' → logprob: -12.8867769241333
    6. '	print' → logprob: -13.0117769241333
    7. '#print' → logprob: -13.3867769241333
    8. '```' → logprob: -14.1367769241333
    9. '
' → logprob: -14.7617769241333
    10. '#' → logprob: -14.8867769241333

Token 1223: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.03021218813955784
    2. 'ans' → logprob: -3.530212163925171
    3. '(round' → logprob: -8.53021240234375
    4. 'round' → logprob: -9.53021240234375
    5. 'int' → logprob: -9.65521240234375
    6. '(f' → logprob: -9.65521240234375
    7. ' ans' → logprob: -10.40521240234375
    8. '(int' → logprob: -10.53021240234375
    9. '   ' → logprob: -13.15521240234375
    10. 'f' → logprob: -13.53021240234375

Token 1224: ' réponse' (ID: 50332)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.4223363697528839
    2. 'ans' → logprob: -1.4223363399505615
    3. 'round' → logprob: -2.6723363399505615
    4. 'int' → logprob: -4.297336578369141
    5. '(round' → logprob: -4.297336578369141
    6. '("{' → logprob: -5.547336578369141
    7. '(int' → logprob: -7.297336578369141
    8. '("%.' → logprob: -7.297336578369141
    9. 'f' → logprob: -7.922336578369141
    10. '(f' → logprob: -8.04733657836914

Token 1225: ' finale' (ID: 37759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07260262221097946
    2. 'print' → logprob: -2.9476025104522705
    3. '
' → logprob: -4.07260274887085
    4. ' print' → logprob: -8.572602272033691
    5. '```' → logprob: -8.697602272033691
    6. '    
' → logprob: -8.822602272033691
    7. '\n' → logprob: -12.322602272033691
    8. '()
' → logprob: -12.572602272033691
    9. '\' → logprob: -12.947602272033691
    10. '	print' → logprob: -12.947602272033691

Token 1226: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2531439960002899
    2. 'print' → logprob: -1.5031440258026123
    3. '```' → logprob: -6.753143787384033
    4. '
' → logprob: -10.503144264221191
    5. ' print' → logprob: -11.628144264221191
    6. '    
' → logprob: -11.753144264221191
    7. '``' → logprob: -13.378144264221191
    8. '	print' → logprob: -14.753144264221191
    9. '`' → logprob: -15.503144264221191
    10. '\' → logprob: -15.503144264221191

Token 1227: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25483590364456177
    2. 'print' → logprob: -1.879835844039917
    3. 'round' → logprob: -3.254835844039917
    4. 'end' → logprob: -3.754835844039917
    5. ' round' → logprob: -5.504836082458496
    6. ' print' → logprob: -6.004836082458496
    7. ')' → logprob: -7.129836082458496
    8. 'int' → logprob: -7.379836082458496
    9. '```' → logprob: -7.379836082458496
    10. ' end' → logprob: -8.379836082458496

Token 1228: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.45757389068603516
    2. ')' → logprob: -1.9575738906860352
    3. ' print' → logprob: -2.207573890686035
    4. '   ' → logprob: -2.832573890686035
    5. '```' → logprob: -4.207573890686035
    6. '=' → logprob: -4.582573890686035
    7. ' =' → logprob: -5.332573890686035
    8. '#' → logprob: -5.332573890686035
    9. '.print' → logprob: -5.457573890686035
    10. '_print' → logprob: -5.832573890686035

Token 1229: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9653076529502869
    2. '   ' → logprob: -1.4653077125549316
    3. ' ans' → logprob: -2.3403077125549316
    4. 'round' → logprob: -2.4653077125549316
    5. 'f' → logprob: -2.4653077125549316
    6. 'print' → logprob: -2.8403077125549316
    7. '(ans' → logprob: -3.5903077125549316
    8. ' f' → logprob: -4.090307712554932
    9. '"{' → logprob: -4.590307712554932
    10. ' round' → logprob: -5.465307712554932

Token 1230: ''esp' (ID: 73244)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3707972764968872
    2. 'round' → logprob: -1.7457972764968872
    3. ' round' → logprob: -2.4957971572875977
    4. 'from' → logprob: -3.7457971572875977
    5. 'print' → logprob: -5.495797157287598
    6. ' ans' → logprob: -5.745797157287598
    7. 'int' → logprob: -5.745797157287598
    8. '   ' → logprob: -5.745797157287598
    9. ' from' → logprob: -5.870797157287598
    10. 'all' → logprob: -6.245797157287598

Token 1231: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.962344229221344
    2. 'rée' → logprob: -1.2123441696166992
    3. 'érée' → logprob: -2.587344169616699
    4. 'éc' → logprob: -2.712344169616699
    5. 'èce' → logprob: -2.712344169616699
    6. 'ée' → logprob: -3.462344169616699
    7. 'ré' → logprob: -4.837344169616699
    8. 'érence' → logprob: -4.837344169616699
    9. 'cée' → logprob: -4.837344169616699
    10. 'r' → logprob: -4.962344169616699

Token 1232: ' minimale' (ID: 143217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02630506083369255
    2. 'print' → logprob: -4.026305198669434
    3. '()' → logprob: -5.526305198669434
    4. '(' → logprob: -6.901305198669434
    5. '(print' → logprob: -7.026305198669434
    6. ')' → logprob: -7.401305198669434
    7. '(ans' → logprob: -7.776305198669434
    8. '
' → logprob: -7.901305198669434
    9. '    
' → logprob: -8.776305198669434
    10. '```' → logprob: -8.776305198669434

Token 1233: ' trouv' (ID: 40254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006265374249778688
    2. 'print' → logprob: -7.750626564025879
    3. '
' → logprob: -9.250626564025879
    4. '```' → logprob: -9.250626564025879
    5. '    
' → logprob: -13.000626564025879
    6. ' print' → logprob: -14.500626564025879
    7. '       ' → logprob: -15.125626564025879
    8. '``' → logprob: -15.750626564025879
    9. '	print' → logprob: -15.875626564025879
    10. '(' → logprob: -16.250625610351562

Token 1234: 'ée' (ID: 2894)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.02382267266511917
    2. 'e' → logprob: -5.023822784423828
    3. 'ée' → logprob: -5.398822784423828
    4. ')' → logprob: -5.648822784423828
    5. '   ' → logprob: -6.273822784423828
    6. 'ur' → logprob: -6.523822784423828
    7. 'print' → logprob: -6.773822784423828
    8. 'ie' → logprob: -7.023822784423828
    9. 'u' → logprob: -7.273822784423828
    10. 'ant' → logprob: -7.523822784423828

Token 1235: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006891316268593073
    2. 'print' → logprob: -5.006891250610352
    3. '```' → logprob: -9.006891250610352
    4. '
' → logprob: -10.006891250610352
    5. '    
' → logprob: -12.131891250610352
    6. ' print' → logprob: -13.131891250610352
    7. '	print' → logprob: -14.381891250610352
    8. '``' → logprob: -16.00689125061035
    9. '       ' → logprob: -16.13189125061035
    10. '  
' → logprob: -17.13189125061035

Token 1236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014591929502785206
    2. 'print' → logprob: -4.264591693878174
    3. '```' → logprob: -7.764591693878174
    4. ' print' → logprob: -13.389592170715332
    5. '
' → logprob: -13.639592170715332
    6. '    
' → logprob: -14.514592170715332
    7. '``' → logprob: -14.514592170715332
    8. '	print' → logprob: -17.014591217041016
    9. '       ' → logprob: -17.139591217041016
    10. '`' → logprob: -18.014591217041016

Token 1237: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00688290735706687
    2. '   ' → logprob: -5.006883144378662
    3. '```' → logprob: -8.756882667541504
    4. ' print' → logprob: -11.506882667541504
    5. '	print' → logprob: -16.88188362121582
    6. '``' → logprob: -17.38188362121582
    7. '`' → logprob: -19.13188362121582
    8. '
' → logprob: -19.38188362121582
    9. '    
' → logprob: -21.00688362121582
    10. '#print' → logprob: -21.13188362121582

Token 1238: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0048657190054655075
    2. '(round' → logprob: -5.504865646362305
    3. '(f' → logprob: -7.254865646362305
    4. '("{' → logprob: -10.004865646362305
    5. '("%.' → logprob: -11.254865646362305
    6. '(int' → logprob: -11.504865646362305
    7. 'ans' → logprob: -12.504865646362305
    8. '(' → logprob: -13.004865646362305
    9. '(abs' → logprob: -13.254865646362305
    10. '('{' → logprob: -13.879865646362305

Token 1239: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4894986785948277e-05
    2. '())' → logprob: -10.250044822692871
    3. '()' → logprob: -11.875044822692871
    4. ')
' → logprob: -13.625044822692871
    5. ' )' → logprob: -14.000044822692871
    6. '   ' → logprob: -15.750044822692871
    7. ')`' → logprob: -16.250045776367188
    8. '```' → logprob: -16.375045776367188
    9. '))' → logprob: -16.750045776367188
    10. '+' → logprob: -17.000045776367188

Token 1240: '#' (ID: 2)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5308589935302734
    2. '<|end|>' → logprob: -1.5308589935302734
    3. 'if' → logprob: -2.1558589935302734
    4. '
' → logprob: -3.1558589935302734
    5. '(main' → logprob: -4.530858993530273
    6. ')' → logprob: -4.780858993530273
    7. '```' → logprob: -4.780858993530273
    8. ' main' → logprob: -5.155858993530273
    9. '#' → logprob: -6.530858993530273
    10. '()' → logprob: -7.530858993530273

Token 1241: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18582557141780853
    2. 'main' → logprob: -2.1858255863189697
    3. '<|end|>' → logprob: -3.4358255863189697
    4. '
' → logprob: -3.8108255863189697
    5. '```' → logprob: -6.685825347900391
    6. '(main' → logprob: -7.685825347900391
    7. ' main' → logprob: -7.810825347900391
    8. '#' → logprob: -8.31082534790039
    9. ' if' → logprob: -8.68582534790039
    10. ')' → logprob: -8.81082534790039

Token 1242: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -6.885492621222511e-05
    2. 'eler' → logprob: -10.375068664550781
    3. 'le' → logprob: -11.125068664550781
    4. '#' → logprob: -11.500068664550781
    5. 'elle' → logprob: -12.500068664550781
    6. 'ell' → logprob: -12.875068664550781
    7. 'elf' → logprob: -13.500068664550781
    8. 'els' → logprob: -13.750068664550781
    9. 'elé' → logprob: -14.125068664550781
    10. 'l' → logprob: -14.500068664550781

Token 1243: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3833046853542328
    2. 'main' → logprob: -1.2583047151565552
    3. '(main' → logprob: -3.3833045959472656
    4. '```' → logprob: -9.383304595947266
    5. '()' → logprob: -9.883304595947266
    6. '()
' → logprob: -9.883304595947266
    7. '(
' → logprob: -10.258304595947266
    8. 'def' → logprob: -10.508304595947266
    9. ' main' → logprob: -10.758304595947266
    10. '_main' → logprob: -11.383304595947266

Token 1244: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3856492842023727e-06
    2. ' main' → logprob: -13.750000953674316
    3. '__' → logprob: -15.375000953674316
    4. '(main' → logprob: -18.125001907348633
    5. '_main' → logprob: -19.250001907348633
    6. 'if' → logprob: -19.500001907348633
    7. '	main' → logprob: -19.750001907348633
    8. '```' → logprob: -21.125001907348633
    9. '.main' → logprob: -22.000001907348633
    10. '#' → logprob: -22.250001907348633

Token 1245: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.027338413521647453
    2. 'if' → logprob: -3.6523385047912598
    3. '__' → logprob: -7.90233850479126
    4. ' main' → logprob: -7.90233850479126
    5. 'def' → logprob: -8.527338027954102
    6. '```' → logprob: -9.527338027954102
    7. '(main' → logprob: -11.402338027954102
    8. 'fonction' → logprob: -12.777338027954102
    9. ' if' → logprob: -12.902338027954102
    10. 'function' → logprob: -13.027338027954102

Token 1246: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0026470019947737455
    2. 'if' → logprob: -6.5026469230651855
    3. '
' → logprob: -7.5026469230651855
    4. '()
' → logprob: -8.127647399902344
    5. '(main' → logprob: -8.252647399902344
    6. ' main' → logprob: -11.127647399902344
    7. '```' → logprob: -11.627647399902344
    8. '(
' → logprob: -11.752647399902344
    9. '()' → logprob: -12.627647399902344
    10. '	main' → logprob: -14.627647399902344

Token 1247: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024813713505864143
    2. 'main' → logprob: -3.774813652038574
    3. 'if' → logprob: -6.774813652038574
    4. '```' → logprob: -8.274813652038574
    5. '(main' → logprob: -9.149813652038574
    6. ' main' → logprob: -11.149813652038574
    7. '
' → logprob: -11.274813652038574
    8. '  
' → logprob: -11.274813652038574
    9. '()
' → logprob: -12.024813652038574
    10. '

' → logprob: -12.274813652038574

Token 1248: ' ex' (ID: 513)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.19958151876926422
    2. 'if' → logprob: -1.824581503868103
    3. 'ex' → logprob: -5.199581623077393
    4. '__' → logprob: -5.324581623077393
    5. 'execut' → logprob: -5.699581623077393
    6. 'l' → logprob: -5.824581623077393
    7. ' main' → logprob: -6.699581623077393
    8. 'run' → logprob: -7.574581623077393
    9. ' lancer' → logprob: -7.949581623077393
    10. 'exec' → logprob: -8.074581146240234

Token 1249: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.35236093401908875
    2. 'écution' → logprob: -1.6023609638214111
    3. 'ecution' → logprob: -2.477360963821411
    4. 'é' → logprob: -4.977360725402832
    5. 'ec' → logprob: -5.477360725402832
    6. 'ecut' → logprob: -8.477360725402832
    7. '#' → logprob: -8.852360725402832
    8. 'écut' → logprob: -9.727360725402832
    9. 'ecute' → logprob: -10.602360725402832
    10. 'e' → logprob: -10.602360725402832

Token 1250: 'uter' (ID: 23469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07684512436389923
    2. 'ecute' → logprob: -3.701845169067383
    3. 'main' → logprob: -4.326845169067383
    4. 'ute' → logprob: -4.701845169067383
    5. 'ec' → logprob: -5.451845169067383
    6. 'cut' → logprob: -5.451845169067383
    7. 'uter' → logprob: -5.451845169067383
    8. 'éc' → logprob: -5.576845169067383
    9. 'ution' → logprob: -5.826845169067383
    10. ' if' → logprob: -6.326845169067383

Token 1251: ' le' (ID: 505)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0033173307310789824
    2. '
' → logprob: -5.753317356109619
    3. '(main' → logprob: -9.878316879272461
    4. ' main' → logprob: -10.253316879272461
    5. '```' → logprob: -10.503316879272461
    6. '()
' → logprob: -11.253316879272461
    7. 'if' → logprob: -11.503316879272461
    8. '	main' → logprob: -14.253316879272461
    9. '_main' → logprob: -14.628316879272461
    10. '``' → logprob: -14.878316879272461

Token 1252: ' programme' (ID: 18190)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023406894877552986
    2. '__' → logprob: -3.773406982421875
    3. 'if' → logprob: -9.523406982421875
    4. 'program' → logprob: -10.273406982421875
    5. 'script' → logprob: -10.398406982421875
    6. ' main' → logprob: -11.148406982421875
    7. '_main' → logprob: -12.523406982421875
    8. 'code' → logprob: -12.898406982421875
    9. '```' → logprob: -14.148406982421875
    10. '(main' → logprob: -14.523406982421875

Token 1253: ' lors' (ID: 15456)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0036437876988202333
    2. 'if' → logprob: -6.378643989562988
    3. 'main' → logprob: -6.378643989562988
    4. '```' → logprob: -9.253643989562988
    5. '

' → logprob: -9.503643989562988
    6. '
' → logprob: -10.753643989562988
    7. '(main' → logprob: -11.003643989562988
    8. '  
' → logprob: -11.378643989562988
    9. '<|end|>' → logprob: -11.878643989562988
    10. ' 
' → logprob: -12.253643989562988

Token 1254: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3254563808441162
    2. 'd' → logprob: -1.9504563808441162
    3. 'de' → logprob: -3.075456380844116
    4. ' de' → logprob: -3.700456380844116
    5. ' du' → logprob: -3.700456380844116
    6. '__' → logprob: -4.200456619262695
    7. ' d' → logprob: -4.575456619262695
    8. 'du' → logprob: -4.950456619262695
    9. '```' → logprob: -5.450456619262695
    10. ' if' → logprob: -6.325456619262695

Token 1255: ' l' (ID: 305)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10974601656198502
    2. 'if' → logprob: -2.609745979309082
    3. 'import' → logprob: -3.609745979309082
    4. '```' → logprob: -5.859745979309082
    5. 'le' → logprob: -8.984745979309082
    6. 'l' → logprob: -9.484745979309082
    7. 'la' → logprob: -9.984745979309082
    8. 'run' → logprob: -10.109745979309082
    9. 'une' → logprob: -10.109745979309082
    10. ' __' → logprob: -10.484745979309082

Token 1256: ''ex' (ID: 23472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2824418842792511
    2. '__' → logprob: -1.4074418544769287
    3. 'import' → logprob: -7.282442092895508
    4. ' __' → logprob: -8.282442092895508
    5. '```' → logprob: -8.407442092895508
    6. ' if' → logprob: -10.282442092895508
    7. '___' → logprob: -11.032442092895508
    8. 'ex' → logprob: -11.157442092895508
    9. '_' → logprob: -11.657442092895508
    10. 'name' → logprob: -11.657442092895508

Token 1257: 'écution' (ID: 122423)
  Prédit: 'écution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écution' → logprob: -0.010852559469640255
    2. 'ecution' → logprob: -4.635852336883545
    3. 'if' → logprob: -7.385852336883545
    4. '__' → logprob: -8.760852813720703
    5. 'é' → logprob: -8.885852813720703
    6. 'ploitation' → logprob: -9.510852813720703
    7. 'p' → logprob: -10.510852813720703
    8. 'éc' → logprob: -10.510852813720703
    9. 'ec' → logprob: -10.760852813720703
    10. 'c' → logprob: -11.510852813720703

Token 1258: ' du' (ID: 1462)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1746547669172287
    2. 'if' → logprob: -2.424654722213745
    3. 'main' → logprob: -2.674654722213745
    4. '

' → logprob: -6.549654960632324
    5. '```' → logprob: -6.924654960632324
    6. '(main' → logprob: -8.174654960632324
    7. ' main' → logprob: -10.549654960632324
    8. '``' → logprob: -10.674654960632324
    9. '  
' → logprob: -10.924654960632324
    10. '    
' → logprob: -11.049654960632324

Token 1259: ' script' (ID: 11713)
  Prédit: 'script'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'script' → logprob: -0.001905200770124793
    2. '__' → logprob: -6.7519049644470215
    3. ' script' → logprob: -8.00190544128418
    4. 'f' → logprob: -8.75190544128418
    5. 'programme' → logprob: -8.75190544128418
    6. 'module' → logprob: -9.75190544128418
    7. '_script' → logprob: -11.75190544128418
    8. '```' → logprob: -12.12690544128418
    9. 'program' → logprob: -12.87690544128418
    10. 'scripts' → logprob: -13.00190544128418

Token 1260: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03339208662509918
    2. 'if' → logprob: -3.5333921909332275
    3. '

' → logprob: -6.033391952514648
    4. 'main' → logprob: -6.783391952514648
    5. '```' → logprob: -9.783391952514648
    6. '(main' → logprob: -11.408391952514648
    7. '
' → logprob: -11.533391952514648
    8. '  
' → logprob: -11.783391952514648
    9. ' 
' → logprob: -12.158391952514648
    10. '    
' → logprob: -12.283391952514648

Token 1261: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011062435805797577
    2. 'if' → logprob: -4.5110626220703125
    3. '```' → logprob: -11.261062622070312
    4. ' main' → logprob: -13.886062622070312
    5. '
' → logprob: -14.261062622070312
    6. '(main' → logprob: -16.136062622070312
    7. '``' → logprob: -16.636062622070312
    8. '	main' → logprob: -17.261062622070312
    9. '_main' → logprob: -18.511062622070312
    10. ' if' → logprob: -19.136062622070312

Token 1262: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1260
Tokens correctement prédits (1ère position, stricte): 358
Tokens correctement prédits (1ère position, avec adaptation): 383
Tokens correctement prédits (top 10): 784
Précision stricte (1ère position): 28.41%
Précision adaptée (1ère position): 30.40%
Précision (top 10): 62.22%
================================================================================
