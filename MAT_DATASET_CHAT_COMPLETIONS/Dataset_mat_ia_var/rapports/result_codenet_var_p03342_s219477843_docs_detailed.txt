================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import copy
from heapq import heappush, heappop, heapify
from functools import cmp_to_key
from bisect import bisect_left, bisect_right
from collections import defaultdict, deque, Counter

# Optionally increase recursion limit if using deep recursion
# sys.setrecursionlimit(1000000)

# Input aliases for convenience and code brevity
input = sys.stdin.readline  # Fast input reading
getS = lambda: input().strip()  # Get string input and strip whitespace
getN = lambda: int(input())     # Get integer input
getList = lambda: list(map(int, input().split()))  # Get list of integers from input
getZList = lambda: [int(x) - 1 for x in input().split()]  # Get list of zero-indexed integers

INF = float("inf")         # Representation of infinity
MOD = 10**9 + 7            # Common modulus for computations
divide = lambda x: pow(x, MOD-2, MOD)  # Modular inverse using Fermat's little theorem

def solve():
    """
    For a given array, counts the number of contiguous subarrays where the sum and
    the bitwise XOR of the subarray elements are equal.
    
    The function reads input:
        - n: the length of the array
        - lis: the array of integers
    
    Logic:
        Uses a two-pointer technique to maintain a window [l, r) where the sum and XOR
        are equal. Extends r as long as the property holds, else increments l.
        For every valid window, counts the number of subarrays ending at r that start from [l, r).
    Outputs:
        Prints the count of such subarrays.
    """
    n = getN()             # Read the length of the array
    lis = getList()        # Read the array elements

    xo, su = 0, 0          # Initialize XOR and sum of the current window
    ans = 0                # Initialize the answer

    l, r = 0, 0            # Left and right pointers of the window
    forward = True         # Direction flag: True to move right pointer, False to move left

    while True:
        # Uncomment for step-by-step debug
        # print(l, r, ans, xo, su)

        if r == n:
            # All elements have been considered
            print(ans)
            return

        if forward:
            # Expand the window by moving the right pointer
            xo = xo ^ lis[r]           # Update XOR with the next element
            su += lis[r]               # Update sum with the next element

            if xo == su:
                # The window [l, r] is valid
                ans += r - l + 1       # Add the valid subarrays ending at position r
                r += 1                 # Move right pointer forward
            else:
                # Window became invalid, need to shrink from the left
                forward = False
        else:
            # Shrink the window from the left until it becomes valid
            xo = xo ^ lis[l]           # Remove the leftmost element from XOR
            su -= lis[l]               # Remove the leftmost element from sum

            if xo == su:
                # Window [l+1, r] is now valid
                forward = True         # Can move forward again
                ans += r - l           # Count valid subarrays for the new window
                r += 1                 # Advance right pointer
                l += 1                 # Advance left pointer
            else:
                l += 1                 # Continue to shrink the window

def main():
    """
    Handles multiple test cases, calling solve() for each one.
    Reads:
        - n: number of test cases
    For each test case, invokes the solve() function.
    """
    n = getN()
    for _ in range(n):
        solve()
    return

if __name__ == "__main__":
    # Entry point when executed as a script.
    # Uncomment main() if solving multiple test cases; for a single case, call solve() directly.
    # main()
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0015031944494694471
    2. 'os' → logprob: -6.501502990722656
    3. '"os' → logprob: -14.626502990722656
    4. ' re' → logprob: -16.126502990722656
    5. ' math' → logprob: -16.251502990722656
    6. '_os' → logprob: -16.251502990722656
    7. '	os' → logprob: -16.501502990722656
    8. ' json' → logprob: -17.126502990722656
    9. ' io' → logprob: -18.251502990722656
    10. ' argparse' → logprob: -19.001502990722656

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27518370747566223
    2. '\n' → logprob: -2.77518367767334
    3. 'import' → logprob: -3.02518367767334
    4. '<|end|>' → logprob: -3.27518367767334
    5. '\' → logprob: -3.40018367767334
    6. '
' → logprob: -3.65018367767334
    7. '```' → logprob: -4.40018367767334
    8. '

' → logprob: -5.27518367767334
    9. '<|end|>' → logprob: -5.27518367767334
    10. ',' → logprob: -5.90018367767334

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8090347051620483
    2. '\n' → logprob: -1.5590347051620483
    3. 'import' → logprob: -2.309034824371338
    4. '
' → logprob: -2.434034824371338
    5. '```' → logprob: -3.059034824371338
    6. '\' → logprob: -3.309034824371338
    7. '

' → logprob: -3.309034824371338
    8. '<|end|>' → logprob: -4.059034824371338
    9. ',' → logprob: -5.059034824371338
    10. '' → logprob: -5.934034824371338

Token 7: ' copy' (ID: 5150)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.4993312358856201
    2. ' os' → logprob: -0.9993312358856201
    3. 'random' → logprob: -4.124331474304199
    4. ' random' → logprob: -4.999331474304199
    5. 're' → logprob: -7.249331474304199
    6. ' re' → logprob: -7.749331474304199
    7. ' numpy' → logprob: -9.1243314743042
    8. 'collections' → logprob: -9.2493314743042
    9. 'time' → logprob: -9.3743314743042
    10. 'numpy' → logprob: -9.4993314743042

Token 8: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 9: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.438079833984375
    2. '.' → logprob: -1.563079833984375
    3. 'import' → logprob: -1.938079833984375
    4. '\' → logprob: -2.188079833984375
    5. '\n' → logprob: -2.188079833984375
    6. ',' → logprob: -2.938079833984375
    7. '#' → logprob: -3.438079833984375
    8. '```' → logprob: -3.938079833984375
    9. 'def' → logprob: -4.188079833984375
    10. '<|end|>' → logprob: -4.188079833984375

Token 10: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.37890195846557617
    2. 'collections' → logprob: -1.2539019584655762
    3. ' typing' → logprob: -4.128901958465576
    4. ' os' → logprob: -5.628901958465576
    5. ' itertools' → logprob: -5.753901958465576
    6. 'typing' → logprob: -6.003901958465576
    7. 'os' → logprob: -6.503901958465576
    8. ' datetime' → logprob: -7.003901958465576
    9. ' functools' → logprob: -7.628901958465576
    10. ' math' → logprob: -7.753901958465576

Token 11: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'import' → logprob: -15.000000953674316
    3. 'queue' → logprob: -16.25
    4. ' queue' → logprob: -16.875
    5. ' import' → logprob: -17.125
    6. '.' → logprob: -18.125
    7. 'space' → logprob: -19.75
    8. 'n' → logprob: -20.125
    9. ' ' → logprob: -20.5
    10. 'i' → logprob: -20.75

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011167946271598339
    2. 'import' → logprob: -4.511168003082275
    3. ' ' → logprob: -9.136167526245117
    4. ' space' → logprob: -13.136167526245117
    5. '	import' → logprob: -13.136167526245117
    6. '<|end|>' → logprob: -13.261167526245117
    7. '.' → logprob: -13.386167526245117
    8. ' im' → logprob: -14.011167526245117
    9. 'space' → logprob: -14.136167526245117
    10. '_import' → logprob: -14.261167526245117

Token 13: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6953601837158203
    2. ' he' → logprob: -0.6953601837158203
    3. 'heap' → logprob: -6.94536018371582
    4. ' n' → logprob: -7.32036018371582
    5. 'import' → logprob: -8.19536018371582
    6. 'n' → logprob: -8.69536018371582
    7. 'nl' → logprob: -9.69536018371582
    8. ' heap' → logprob: -10.69536018371582
    9. ' ' → logprob: -10.94536018371582
    10. ' import' → logprob: -10.94536018371582

Token 14: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.024035196751356125
    2. 'ap' → logprob: -3.7740352153778076
    3. 'a' → logprob: -7.1490349769592285
    4. 'aq' → logprob: -13.024035453796387
    5. 'apl' → logprob: -14.524035453796387
    6. 'q' → logprob: -15.149035453796387
    7. 'appa' → logprob: -15.399035453796387
    8. 'ап' → logprob: -15.524035453796387
    9. 'appen' → logprob: -16.02403450012207
    10. 'aps' → logprob: -17.02403450012207

Token 15: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00015038289711810648
    2. 'op' → logprob: -8.875150680541992
    3. 'us' → logprob: -11.875150680541992
    4. 'u' → logprob: -12.750150680541992
    5. 'o' → logprob: -14.500150680541992
    6. '```' → logprob: -17.500150680541992
    7. 'opleft' → logprob: -18.500150680541992
    8. '[' → logprob: -18.500150680541992
    9. 'osh' → logprob: -18.875150680541992
    10. '   ' → logprob: -19.000150680541992

Token 16: ',' (ID: 11)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.3498256802558899
    2. ',' → logprob: -1.3498256206512451
    3. '(' → logprob: -3.974825620651245
    4. ' ' → logprob: -4.599825859069824
    5. 'import' → logprob: -5.349825859069824
    6. ' he' → logprob: -7.349825859069824
    7. ' and' → logprob: -7.599825859069824
    8. ' ,' → logprob: -7.974825859069824
    9. '_he' → logprob: -8.974825859069824
    10. '```' → logprob: -9.099825859069824

Token 17: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.225467711687088
    2. 'he' → logprob: -1.6004676818847656
    3. 'heap' → logprob: -10.350467681884766
    4. ' ' → logprob: -11.850467681884766
    5. '.he' → logprob: -12.475467681884766
    6. ' heap' → logprob: -12.600467681884766
    7. '_he' → logprob: -13.225467681884766
    8. '<|end|>' → logprob: -13.600467681884766
    9. '```' → logprob: -13.600467681884766
    10. 'h' → logprob: -14.850467681884766

Token 18: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.5048530030981055e-06
    2. 'ap' → logprob: -13.500001907348633
    3. '_app' → logprob: -18.625001907348633
    4. 'pp' → logprob: -19.250001907348633
    5. 'appen' → logprob: -19.250001907348633
    6. 'APP' → logprob: -19.375001907348633
    7. ' app' → logprob: -19.500001907348633
    8. 'App' → logprob: -19.875001907348633
    9. 'a' → logprob: -20.000001907348633
    10. 'appt' → logprob: -20.500001907348633

Token 19: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.20143595337867737
    2. 'op' → logprob: -1.701435923576355
    3. 'o' → logprob: -10.951436042785645
    4. 'u' → logprob: -12.826436042785645
    5. 'us' → logprob: -13.201436042785645
    6. 'ut' → logprob: -16.326435089111328
    7. 'osh' → logprob: -16.326435089111328
    8. '   ' → logprob: -16.951435089111328
    9. 'opp' → logprob: -16.951435089111328
    10. 'l' → logprob: -16.951435089111328

Token 20: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7621427178382874
    2. '

' → logprob: -1.3871426582336426
    3. '\n' → logprob: -1.8871426582336426
    4. '\' → logprob: -3.0121426582336426
    5. 'def' → logprob: -3.8871426582336426
    6. '' → logprob: -4.012142658233643
    7. '(' → logprob: -4.512142658233643
    8. '```' → logprob: -5.262142658233643
    9. 'newline' → logprob: -5.387142658233643
    10. 'n' → logprob: -5.637142658233643

Token 21: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.025468558073043823
    2. 'he' → logprob: -4.275468349456787
    3. ' heap' → logprob: -4.525468349456787
    4. ' he' → logprob: -8.025468826293945
    5. 'merge' → logprob: -10.150468826293945
    6. 'n' → logprob: -10.775468826293945
    7. 'nl' → logprob: -11.400468826293945
    8. '.heap' → logprob: -12.275468826293945
    9. ' n' → logprob: -12.775468826293945
    10. '```' → logprob: -12.900468826293945

Token 22: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0794849544763565
    2. 'replace' → logprob: -2.5794849395751953
    3. 'q' → logprob: -8.329484939575195
    4. 'push' → logprob: -9.079484939575195
    5. 'ush' → logprob: -9.454484939575195
    6. 'lify' → logprob: -9.579484939575195
    7. 'queue' → logprob: -11.079484939575195
    8. 'merge' → logprob: -11.954484939575195
    9. 'fy' → logprob: -12.079484939575195
    10. 's' → logprob: -12.079484939575195

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6505547761917114
    2. '

' → logprob: -0.7755547761917114
    3. '\n' → logprob: -4.650554656982422
    4. '' → logprob: -6.275554656982422
    5. '


' → logprob: -6.400554656982422
    6. '
' → logprob: -6.900554656982422
    7. 'n' → logprob: -7.400554656982422
    8. ' 

' → logprob: -7.400554656982422
    9. '\' → logprob: -7.525554656982422
    10. '```' → logprob: -8.150554656982422

Token 24: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9550760984420776
    2. '

' → logprob: -0.9550760984420776
    3. 'def' → logprob: -2.330076217651367
    4. '\n' → logprob: -3.080076217651367
    5. '```' → logprob: -3.830076217651367
    6. '' → logprob: -4.330076217651367
    7. 'import' → logprob: -4.330076217651367
    8. '#' → logprob: -4.705076217651367
    9. ' 

' → logprob: -5.080076217651367
    10. '\' → logprob: -5.330076217651367

Token 25: ' functools' (ID: 142636)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.06423269957304001
    2. ' collections' → logprob: -2.814232587814331
    3. ' itertools' → logprob: -6.81423282623291
    4. 'queue' → logprob: -7.31423282623291
    5. ' queue' → logprob: -8.81423282623291
    6. '_' → logprob: -9.56423282623291
    7. ' ' → logprob: -9.81423282623291
    8. 'it' → logprob: -10.06423282623291
    9. '_queue' → logprob: -10.31423282623291
    10. '_col' → logprob: -10.81423282623291

Token 26: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11365663260221481
    2. 'import' → logprob: -2.238656520843506
    3. ' ' → logprob: -8.113656997680664
    4. '_import' → logprob: -8.238656997680664
    5. '.' → logprob: -8.863656997680664
    6. '	import' → logprob: -9.613656997680664
    7. '_' → logprob: -10.738656997680664
    8. ' impor' → logprob: -11.863656997680664
    9. '.import' → logprob: -12.238656997680664
    10. ' im' → logprob: -12.613656997680664

Token 27: ' cmp' (ID: 57822)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4753466844558716
    2. ' l' → logprob: -0.9753466844558716
    3. 'reduce' → logprob: -7.225346565246582
    4. ' reduce' → logprob: -8.725346565246582
    5. ' wraps' → logprob: -8.975346565246582
    6. 'partial' → logprob: -9.600346565246582
    7. 'cmp' → logprob: -9.725346565246582
    8. 'wrap' → logprob: -9.725346565246582
    9. ' partial' → logprob: -10.475346565246582
    10. ' cmp' → logprob: -11.225346565246582

Token 28: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.4271893799304962
    2. 'ut' → logprob: -1.3021893501281738
    3. 'tor' → logprob: -4.552189350128174
    4. 'to' → logprob: -4.927189350128174
    5. 'utor' → logprob: -5.052189350128174
    6. 'atch' → logprob: -5.427189350128174
    7. 'l' → logprob: -5.677189350128174
    8. 'def' → logprob: -5.677189350128174
    9. 'ute' → logprob: -6.052189350128174
    10. 'ort' → logprob: -6.302189350128174

Token 29: '_key' (ID: 6724)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.001930420519784093
    2. 'k' → logprob: -6.376930236816406
    3. '_key' → logprob: -8.876930236816406
    4. 'Key' → logprob: -10.876930236816406
    5. 'ken' → logprob: -11.001930236816406
    6. 'ker' → logprob: -11.251930236816406
    7. '```' → logprob: -11.876930236816406
    8. 'ks' → logprob: -12.001930236816406
    9. 'x' → logprob: -12.501930236816406
    10. '-key' → logprob: -13.001930236816406

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3265754282474518
    2. '

' → logprob: -1.3265753984451294
    3. '<|end|>' → logprob: -5.95157527923584
    4. '' → logprob: -6.20157527923584
    5. 'def' → logprob: -6.45157527923584
    6. '\n' → logprob: -6.57657527923584
    7. '```' → logprob: -6.82657527923584
    8. 'import' → logprob: -6.82657527923584
    9. ' 

' → logprob: -7.32657527923584
    10. '\' → logprob: -7.57657527923584

Token 31: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27278000116348267
    2. '

' → logprob: -1.772779941558838
    3. 'd' → logprob: -3.647779941558838
    4. '' → logprob: -3.897779941558838
    5. '#' → logprob: -5.022779941558838
    6. 'def' → logprob: -5.022779941558838
    7. '
' → logprob: -6.147779941558838
    8. 'n' → logprob: -6.897779941558838
    9. '\' → logprob: -7.022779941558838
    10. 'import' → logprob: -7.147779941558838

Token 32: ' bis' (ID: 7204)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5369498133659363
    2. ' collections' → logprob: -1.411949872970581
    3. ' itertools' → logprob: -1.911949872970581
    4. ' typing' → logprob: -4.286949634552002
    5. 'operator' → logprob: -5.286949634552002
    6. 'collections' → logprob: -6.036949634552002
    7. ' fractions' → logprob: -6.286949634552002
    8. ' bis' → logprob: -8.41195011138916
    9. ' math' → logprob: -8.41195011138916
    10. ' random' → logprob: -8.91195011138916

Token 33: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -9.372294698550832e-06
    2. 'e' → logprob: -12.625009536743164
    3. 'ected' → logprob: -12.875009536743164
    4. 'ec' → logprob: -13.500009536743164
    5. 'ectl' → logprob: -14.375009536743164
    6. 'ecta' → logprob: -14.500009536743164
    7. 'ector' → logprob: -14.625009536743164
    8. 'ects' → logprob: -15.875009536743164
    9. 'ectin' → logprob: -16.125009536743164
    10. '>' → logprob: -16.375009536743164

Token 34: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2842186689376831
    2. 'import' → logprob: -1.409218668937683
    3. ' ' → logprob: -6.534218788146973
    4. '_import' → logprob: -7.409218788146973
    5. '<|end|>' → logprob: -7.534218788146973
    6. '_' → logprob: -8.159218788146973
    7. '	import' → logprob: -9.034218788146973
    8. ' im' → logprob: -11.659218788146973
    9. ' importar' → logprob: -11.909218788146973
    10. ' ' → logprob: -11.909218788146973

Token 35: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.03012590855360031
    2. ' ins' → logprob: -3.530125856399536
    3. 'bis' → logprob: -8.030125617980957
    4. 'ins' → logprob: -10.405125617980957
    5. ' ' → logprob: -11.030125617980957
    6. ' b' → logprob: -13.905125617980957
    7. ' in' → logprob: -14.030125617980957
    8. '	b' → logprob: -14.030125617980957
    9. ' bi' → logprob: -15.780125617980957
    10. '_ins' → logprob: -15.780125617980957

Token 36: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.870950215263292e-05
    2. 'e' → logprob: -10.000048637390137
    3. 'ec' → logprob: -13.250048637390137
    4. 'ected' → logprob: -14.000048637390137
    5. 'ectl' → logprob: -15.875048637390137
    6. 'ects' → logprob: -16.000049591064453
    7. '6' → logprob: -16.500049591064453
    8. 'ection' → logprob: -16.625049591064453
    9. 'ecta' → logprob: -17.000049591064453
    10. 'ectin' → logprob: -17.125049591064453

Token 37: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.11700128763914108
    2. '_' → logprob: -2.7420012950897217
    3. '_right' → logprob: -3.1170012950897217
    4. '<|end|>' → logprob: -6.617001056671143
    5. ',' → logprob: -9.7420015335083
    6. '_ins' → logprob: -10.3670015335083
    7. '.b' → logprob: -10.6170015335083
    8. 'left' → logprob: -10.7420015335083
    9. '_LEFT' → logprob: -10.7420015335083
    10. ' ' → logprob: -10.7420015335083

Token 38: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5018751621246338
    2. 'import' → logprob: -1.5018751621246338
    3. '

' → logprob: -2.126875162124634
    4. ',' → logprob: -3.876875162124634
    5. '\n' → logprob: -4.876874923706055
    6. '' → logprob: -5.376874923706055
    7. ' 

' → logprob: -5.626874923706055
    8. ' 
' → logprob: -6.001874923706055
    9. '<|end|>' → logprob: -6.001874923706055
    10. 'def' → logprob: -6.376874923706055

Token 39: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.1271652728319168
    2. ' bis' → logprob: -2.1271653175354004
    3. 'ins' → logprob: -8.877164840698242
    4. 'b' → logprob: -9.502164840698242
    5. ' ins' → logprob: -11.002164840698242
    6. '	b' → logprob: -12.502164840698242
    7. '```' → logprob: -13.877164840698242
    8. ' ' → logprob: -15.127164840698242
    9. 'bi' → logprob: -15.502164840698242
    10. ' b' → logprob: -15.627164840698242

Token 40: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.077528764260933e-05
    2. 'e' → logprob: -9.750081062316895
    3. 'ec' → logprob: -11.000081062316895
    4. 'sect' → logprob: -13.250081062316895
    5. 'ected' → logprob: -13.500081062316895
    6. '```' → logprob: -13.500081062316895
    7. 'ectl' → logprob: -14.875081062316895
    8. 'ection' → logprob: -16.000080108642578
    9. 'ects' → logprob: -16.000080108642578
    10. 'ext' → logprob: -16.125080108642578

Token 41: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.2019454389810562
    2. '_' → logprob: -1.701945424079895
    3. '_

' → logprob: -8.951945304870605
    4. '__' → logprob: -9.576945304870605
    5. '<|end|>' → logprob: -9.826945304870605
    6. '_
' → logprob: -9.951945304870605
    7. '_left' → logprob: -10.076945304870605
    8. 'right' → logprob: -10.201945304870605
    9. '_RIGHT' → logprob: -10.576945304870605
    10. '_r' → logprob: -10.826945304870605

Token 42: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.28591832518577576
    2. '
' → logprob: -1.4109183549880981
    3. '<|end|>' → logprob: -6.035918235778809
    4. '\n' → logprob: -7.785918235778809
    5. '```' → logprob: -7.785918235778809
    6. '


' → logprob: -8.160918235778809
    7. '#' → logprob: -8.410918235778809
    8. '' → logprob: -8.535918235778809
    9. '
' → logprob: -8.660918235778809
    10. 'import' → logprob: -8.660918235778809

Token 43: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3168429434299469
    2. '
' → logprob: -1.3168429136276245
    3. '#' → logprob: -7.191843032836914
    4. '
' → logprob: -7.691843032836914
    5. 'import' → logprob: -7.691843032836914
    6. '<|end|>' → logprob: -7.691843032836914
    7. '```' → logprob: -7.691843032836914
    8. '' → logprob: -8.066843032836914
    9. '


' → logprob: -8.941843032836914
    10. '\n' → logprob: -9.441843032836914

Token 44: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.27531033754348755
    2. ' collections' → logprob: -1.5253102779388428
    3. ' itertools' → logprob: -3.7753102779388428
    4. 'it' → logprob: -9.025310516357422
    5. 'operator' → logprob: -10.900310516357422
    6. 'random' → logprob: -11.775310516357422
    7. ' operator' → logprob: -12.275310516357422
    8. 'math' → logprob: -12.525310516357422
    9. ' fractions' → logprob: -12.525310516357422
    10. 'typing' → logprob: -12.775310516357422

Token 45: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10101892054080963
    2. ' import' → logprob: -2.3510189056396484
    3. '<|end|>' → logprob: -7.726018905639648
    4. '.' → logprob: -8.476018905639648
    5. 'abc' → logprob: -9.851018905639648
    6. '	import' → logprob: -10.476018905639648
    7. '```' → logprob: -10.726018905639648
    8. ' ' → logprob: -11.226018905639648
    9. '_import' → logprob: -11.351018905639648
    10. ' defaultdict' → logprob: -12.226018905639648

Token 46: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5762509107589722
    2. ' deque' → logprob: -0.8262509107589722
    3. 'deque' → logprob: -8.201251029968262
    4. ' de' → logprob: -11.076251029968262
    5. ' named' → logprob: -11.826251029968262
    6. ' abc' → logprob: -12.076251029968262
    7. ' ' → logprob: -12.826251029968262
    8. ' default' → logprob: -12.951251029968262
    9. ' Counter' → logprob: -13.826251029968262
    10. ' ' → logprob: -14.076251029968262

Token 47: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.13106024265289307
    2. '
' → logprob: -2.1310601234436035
    3. 'import' → logprob: -6.3810601234436035
    4. '


' → logprob: -7.5060601234436035
    5. 'class' → logprob: -7.7560601234436035
    6. ' 

' → logprob: -8.131060600280762
    7. '```' → logprob: -8.381060600280762
    8. '
' → logprob: -8.631060600280762
    9. 'def' → logprob: -8.631060600280762
    10. ',' → logprob: -8.881060600280762

Token 48: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.38851723074913025
    2. 'deque' → logprob: -1.1385172605514526
    3. ' Counter' → logprob: -7.138517379760742
    4. 'Counter' → logprob: -7.138517379760742
    5. 'Ordered' → logprob: -10.888517379760742
    6. 'de' → logprob: -10.888517379760742
    7. 'Deque' → logprob: -11.388517379760742
    8. ' Ordered' → logprob: -12.138517379760742
    9. 'named' → logprob: -13.888517379760742
    10. ' named' → logprob: -14.013517379760742

Token 49: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.21450749039649963
    2. '
' → logprob: -1.7145074605941772
    3. '<|end|>' → logprob: -4.964507579803467
    4. 'import' → logprob: -5.839507579803467
    5. 'def' → logprob: -6.839507579803467
    6. '


' → logprob: -7.589507579803467
    7. ' 

' → logprob: -8.089507102966309
    8. 'class' → logprob: -8.214507102966309
    9. ',' → logprob: -8.589507102966309
    10. '
' → logprob: -8.839507102966309

Token 50: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.12075233459472656
    2. ' Counter' → logprob: -2.6207523345947266
    3. 'Ordered' → logprob: -3.6207523345947266
    4. 'named' → logprob: -4.620752334594727
    5. ' named' → logprob: -5.620752334594727
    6. ' Ordered' → logprob: -7.370752334594727
    7. 'Chain' → logprob: -9.370752334594727
    8. 'deque' → logprob: -10.620752334594727
    9. ' deque' → logprob: -11.870752334594727
    10. ' Chain' → logprob: -12.120752334594727

Token 51: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7491977214813232
    2. '

' → logprob: -1.2491977214813232
    3. '<|end|>' → logprob: -1.4991977214813232
    4. '\n' → logprob: -5.124197959899902
    5. 'import' → logprob: -6.249197959899902
    6. ',' → logprob: -6.624197959899902
    7. 'def' → logprob: -6.624197959899902
    8. '<|end|>' → logprob: -6.749197959899902
    9. ' 

' → logprob: -6.999197959899902
    10. '```' → logprob: -7.124197959899902

Token 52: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20045705139636993
    2. 'def' → logprob: -2.3254570960998535
    3. '
' → logprob: -3.2004570960998535
    4. '#' → logprob: -4.2004570960998535
    5. '\' → logprob: -4.2004570960998535
    6. 'class' → logprob: -5.5754570960998535
    7. 'n' → logprob: -6.0754570960998535
    8. '\n' → logprob: -6.5754570960998535
    9. '' → logprob: -6.8254570960998535
    10. '```' → logprob: -7.0754570960998535

Token 53: ' Option' (ID: 17796)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00023858259373810142
    2. 'd' → logprob: -9.375238418579102
    3. ' #' → logprob: -10.125238418579102
    4. ' d' → logprob: -10.750238418579102
    5. ' ﻿' → logprob: -11.250238418579102
    6. '#' → logprob: -11.500238418579102
    7. ' ```' → logprob: -11.625238418579102
    8. 'def' → logprob: -11.625238418579102
    9. ' `' → logprob: -11.875238418579102
    10. '_' → logprob: -12.000238418579102

Token 54: 'ally' (ID: 2146)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.08891024440526962
    2. 'a' → logprob: -2.5889103412628174
    3. ' =' → logprob: -4.963910102844238
    4. 's' → logprob: -6.088910102844238
    5. ' ' → logprob: -8.588910102844238
    6. '=' → logprob: -9.213910102844238
    7. ':' → logprob: -9.213910102844238
    8. 'A' → logprob: -9.213910102844238
    9. 'ale' → logprob: -10.088910102844238
    10. ' a' → logprob: -10.088910102844238

Token 55: ' increase' (ID: 7064)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16753290593624115
    2. ' import' → logprob: -2.9175329208374023
    3. ' ,' → logprob: -3.2925329208374023
    4. 'import' → logprob: -3.4175329208374023
    5. ' ' → logprob: -3.7925329208374023
    6. '_' → logprob: -6.417532920837402
    7. '#' → logprob: -6.792532920837402
    8. ' continue' → logprob: -7.667532920837402
    9. 'from' → logprob: -7.667532920837402
    10. ' from' → logprob: -8.042532920837402

Token 56: ' recursion' (ID: 122185)
  Prédit: ' recursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.11035536229610443
    2. ' sys' → logprob: -2.8603553771972656
    3. ' the' → logprob: -3.6103553771972656
    4. 'sys' → logprob: -4.235355377197266
    5. 'import' → logprob: -5.985355377197266
    6. 'rec' → logprob: -6.360355377197266
    7. 'the' → logprob: -7.360355377197266
    8. ' stack' → logprob: -8.235355377197266
    9. 'stack' → logprob: -8.735355377197266
    10. ' import' → logprob: -9.360355377197266

Token 57: ' limit' (ID: 5967)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15227791666984558
    2. 'limit' → logprob: -2.152277946472168
    3. '_depth' → logprob: -3.777277946472168
    4. ' limit' → logprob: -7.027277946472168
    5. '_' → logprob: -7.152277946472168
    6. 'depth' → logprob: -8.027277946472168
    7. '_stack' → logprob: -9.652277946472168
    8. '_limits' → logprob: -10.277277946472168
    9. ' depth' → logprob: -10.902277946472168
    10. '_LIMIT' → logprob: -11.527277946472168

Token 58: ' if' (ID: 538)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5896803736686707
    2. '(sys' → logprob: -0.9646803736686707
    3. '(' → logprob: -3.9646804332733154
    4. '(
' → logprob: -4.089680194854736
    5. '\' → logprob: -4.714680194854736
    6. '
' → logprob: -4.714680194854736
    7. 'import' → logprob: -5.714680194854736
    8. ' sys' → logprob: -6.214680194854736
    9. '' → logprob: -6.714680194854736
    10. '```' → logprob: -7.089680194854736

Token 59: ' using' (ID: 2360)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.09855520725250244
    2. ' needed' → logprob: -2.598555088043213
    3. ' necessary' → logprob: -4.348555088043213
    4. ' you' → logprob: -5.223555088043213
    5. ' ' → logprob: -7.973555088043213
    6. ' ' → logprob: -8.598555564880371
    7. 'needed' → logprob: -8.723555564880371
    8. ' True' → logprob: -9.598555564880371
    9. '_needed' → logprob: -9.723555564880371
    10. ' the' → logprob: -10.098555564880371

Token 60: ' deep' (ID: 8103)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5381662845611572
    2. ' DFS' → logprob: -1.6631662845611572
    3. ' dfs' → logprob: -1.7881662845611572
    4. ' recursion' → logprob: -3.0381662845611572
    5. ' recursive' → logprob: -5.663166046142578
    6. 'dfs' → logprob: -5.788166046142578
    7. ' threading' → logprob: -6.163166046142578
    8. 'DFS' → logprob: -7.413166046142578
    9. ' ' → logprob: -7.538166046142578
    10. ' depth' → logprob: -7.788166046142578

Token 61: ' recursion' (ID: 122185)
  Prédit: ' recursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.26959097385406494
    2. '_rec' → logprob: -2.2695908546447754
    3. '_' → logprob: -2.6445908546447754
    4. 'rec' → logprob: -2.8945908546447754
    5. '_recursive' → logprob: -6.269590854644775
    6. ' ' → logprob: -6.769590854644775
    7. ' _' → logprob: -7.019590854644775
    8. ' rec' → logprob: -7.269590854644775
    9. 'dfs' → logprob: -7.269590854644775
    10. ' recursive' → logprob: -7.644590854644775

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0747120380401611
    2. 'sys' → logprob: -1.1997120380401611
    3. '(sys' → logprob: -1.8247120380401611
    4. '\' → logprob: -2.699712038040161
    5. '\n' → logprob: -3.574712038040161
    6. '```' → logprob: -3.699712038040161
    7. 'import' → logprob: -3.824712038040161
    8. '(
' → logprob: -4.199711799621582
    9. '  
' → logprob: -4.324711799621582
    10. '' → logprob: -4.699711799621582

Token 63: '#' (ID: 2)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12178672850131989
    2. 'import' → logprob: -2.6217868328094482
    3. '
' → logprob: -3.6217868328094482
    4. ' sys' → logprob: -5.621786594390869
    5. '' → logprob: -5.871786594390869
    6. '(sys' → logprob: -6.246786594390869
    7. '\n' → logprob: -6.496786594390869
    8. '  
' → logprob: -6.621786594390869
    9. '\' → logprob: -6.871786594390869
    10. '```' → logprob: -6.996786594390869

Token 64: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0018892568768933415
    2. 'import' → logprob: -6.501889228820801
    3. ' sys' → logprob: -7.876889228820801
    4. '#' → logprob: -12.6268892288208
    5. '(sys' → logprob: -13.6268892288208
    6. '```' → logprob: -14.1268892288208
    7. '=sys' → logprob: -14.2518892288208
    8. '
' → logprob: -14.2518892288208
    9. '	sys' → logprob: -15.2518892288208
    10. 'python' → logprob: -16.001890182495117

Token 65: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20794926583766937
    2. '.set' → logprob: -2.207949161529541
    3. '.setdefault' → logprob: -2.582949161529541
    4. ' .' → logprob: -7.332949161529541
    5. '.exit' → logprob: -7.832949161529541
    6. '.argv' → logprob: -7.832949161529541
    7. '.stdin' → logprob: -8.3329496383667
    8. '.stdout' → logprob: -8.9579496383667
    9. '.max' → logprob: -9.7079496383667
    10. '.readline' → logprob: -9.8329496383667

Token 66: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.026989556849002838
    2. '_rec' → logprob: -3.651989459991455
    3. '_' → logprob: -8.151989936828613
    4. '_limit' → logprob: -9.151989936828613
    5. ' recursion' → logprob: -9.151989936828613
    6. '_recursive' → logprob: -9.776989936828613
    7. ' _' → logprob: -10.151989936828613
    8. '_re' → logprob: -10.776989936828613
    9. 're' → logprob: -11.526989936828613
    10. '_ref' → logprob: -11.776989936828613

Token 67: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0017439620569348335
    2. 'ur' → logprob: -7.501743793487549
    3. '_limit' → logprob: -7.626743793487549
    4. 'ursive' → logprob: -8.126744270324707
    5. 'urs' → logprob: -8.876744270324707
    6. '_' → logprob: -9.251744270324707
    7. 'limit' → logprob: -10.001744270324707
    8. '_set' → logprob: -10.251744270324707
    9. 'c' → logprob: -10.501744270324707
    10. '__' → logprob: -10.626744270324707

Token 68: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.04866287484765053
    2. 'limit' → logprob: -3.0486629009246826
    3. '_' → logprob: -9.923663139343262
    4. '_depth' → logprob: -11.048663139343262
    5. ' limit' → logprob: -13.173663139343262
    6. '_lim' → logprob: -13.173663139343262
    7. '_LIMIT' → logprob: -13.298663139343262
    8. 'lim' → logprob: -14.048663139343262
    9. '_limits' → logprob: -14.048663139343262
    10. '_li' → logprob: -14.298663139343262

Token 69: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.165027217415627e-05
    2. '(
' → logprob: -11.375021934509277
    3. '(

' → logprob: -12.500021934509277
    4. ' (' → logprob: -13.000021934509277
    5. '((' → logprob: -13.250021934509277
    6. '("("' → logprob: -13.500021934509277
    7. '()' → logprob: -14.875021934509277
    8. '(()' → logprob: -15.875021934509277
    9. '(
' → logprob: -16.50002098083496
    10. '('' → logprob: -16.50002098083496

Token 70: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07901008427143097
    2. '100' → logprob: -2.579010009765625
    3. ' ' → logprob: -9.329010009765625
    4. '500' → logprob: -10.954010009765625
    5. '300' → logprob: -12.329010009765625
    6. '200' → logprob: -12.954010009765625
    7. ')' → logprob: -13.079010009765625
    8. '   ' → logprob: -13.704010009765625
    9. '1' → logprob: -13.704010009765625
    10. '150' → logprob: -13.954010009765625

Token 71: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.5773380994796753
    2. '000' → logprob: -0.8273380994796753
    3. '0' → logprob: -6.577338218688965
    4. '_' → logprob: -12.452338218688965
    5. ')' → logprob: -13.702338218688965
    6. '   ' → logprob: -15.327338218688965
    7. '(' → logprob: -15.702338218688965
    8. '500' → logprob: -15.952338218688965
    9. '050' → logprob: -15.952338218688965
    10. '48' → logprob: -16.45233726501465

Token 72: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01817171648144722
    2. '0' → logprob: -4.018171787261963
    3. '1' → logprob: -11.518171310424805
    4. ')
' → logprob: -12.268171310424805
    5. '#' → logprob: -13.518171310424805
    6. '()' → logprob: -13.768171310424805
    7. '))' → logprob: -13.893171310424805
    8. ')

' → logprob: -14.018171310424805
    9. '```' → logprob: -14.018171310424805
    10. ' )' → logprob: -14.393171310424805

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ')
' → logprob: -11.375015258789062
    3. '#' → logprob: -13.250015258789062
    4. ')#' → logprob: -13.500015258789062
    5. '))' → logprob: -15.500015258789062
    6. ')

' → logprob: -15.750015258789062
    7. ' )' → logprob: -16.125015258789062
    8. '
' → logprob: -16.875015258789062
    9. '()' → logprob: -16.875015258789062
    10. '```' → logprob: -17.000015258789062

Token 74: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18333788216114044
    2. 'class' → logprob: -2.808337926864624
    3. '
' → logprob: -2.933337926864624
    4. '#' → logprob: -3.183337926864624
    5. 'd' → logprob: -4.558337688446045
    6. '\' → logprob: -7.433337688446045
    7. '

' → logprob: -7.808337688446045
    8. 'n' → logprob: -8.433338165283203
    9. 'de' → logprob: -8.808338165283203
    10. '\n' → logprob: -9.183338165283203

Token 75: ' Input' (ID: 10090)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7714154124259949
    2. 'd' → logprob: -1.2714154720306396
    3. '#' → logprob: -2.0214154720306396
    4. ' ' → logprob: -3.0214154720306396
    5. 'class' → logprob: -3.0214154720306396
    6. 'de' → logprob: -4.5214152336120605
    7. ' class' → logprob: -5.3964152336120605
    8. ' def' → logprob: -6.1464152336120605
    9. '\' → logprob: -6.5214152336120605
    10. ' de' → logprob: -6.5214152336120605

Token 76: ' aliases' (ID: 89610)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2357110977172852
    2. 's' → logprob: -1.7357110977172852
    3. ' =' → logprob: -1.8607110977172852
    4. '_' → logprob: -1.9857110977172852
    5. '=' → logprob: -2.485711097717285
    6. ':' → logprob: -2.735711097717285
    7. '()' → logprob: -3.110711097717285
    8. '[' → logprob: -4.860711097717285
    9. 'n' → logprob: -4.985711097717285
    10. ' ' → logprob: -5.110711097717285

Token 77: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42934343218803406
    2. ' =' → logprob: -1.5543434619903564
    3. '_' → logprob: -3.6793434619903564
    4. '(' → logprob: -4.054343223571777
    5. '=' → logprob: -4.054343223571777
    6. 's' → logprob: -4.304343223571777
    7. 'n' → logprob: -4.429343223571777
    8. 'a' → logprob: -4.554343223571777
    9. 'def' → logprob: -4.929343223571777
    10. '
' → logprob: -5.179343223571777

Token 78: ' convenience' (ID: 24582)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.13567276298999786
    2. ' sys' → logprob: -3.0106728076934814
    3. 'input' → logprob: -3.1356728076934814
    4. ' fast' → logprob: -3.7606728076934814
    5. 'fast' → logprob: -5.635672569274902
    6. 'sys' → logprob: -6.010672569274902
    7. ' standard' → logprob: -7.135672569274902
    8. ' convenience' → logprob: -7.260672569274902
    9. ' stdin' → logprob: -7.260672569274902
    10. ' faster' → logprob: -7.510672569274902

Token 79: ' and' (ID: 326)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5674928426742554
    2. '\' → logprob: -1.6924928426742554
    3. '
' → logprob: -2.942492961883545
    4. 'a' → logprob: -3.067492961883545
    5. '```' → logprob: -3.442492961883545
    6. 's' → logprob: -3.692492961883545
    7. 'input' → logprob: -3.817492961883545
    8. '\n' → logprob: -3.817492961883545
    9. 'def' → logprob: -4.567492961883545
    10. 'import' → logprob: -4.942492961883545

Token 80: ' code' (ID: 3490)
  Prédit: 'fast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fast' → logprob: -0.5094196796417236
    2. 'output' → logprob: -1.1344196796417236
    3. 'input' → logprob: -3.7594196796417236
    4. 'read' → logprob: -4.3844194412231445
    5. 'speed' → logprob: -4.3844194412231445
    6. 'f' → logprob: -4.6344194412231445
    7. ' fast' → logprob: -5.6344194412231445
    8. 'reading' → logprob: -5.7594194412231445
    9. ' readability' → logprob: -6.3844194412231445
    10. ' faster' → logprob: -6.8844194412231445

Token 81: ' brev' (ID: 133961)
  Prédit: ' readability'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' readability' → logprob: -0.4099867045879364
    2. ' clarity' → logprob: -1.4099867343902588
    3. 'completion' → logprob: -3.659986734390259
    4. ' completion' → logprob: -4.03498649597168
    5. ' style' → logprob: -4.90998649597168
    6. ' optimization' → logprob: -5.03498649597168
    7. '_read' → logprob: -5.03498649597168
    8. ' efficiency' → logprob: -5.28498649597168
    9. '```' → logprob: -6.03498649597168
    10. '_completion' → logprob: -6.15998649597168

Token 82: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.011493386700749397
    2. 'i' → logprob: -4.51149320602417
    3. '```' → logprob: -8.386493682861328
    4. 'a' → logprob: -9.886493682861328
    5. 'it' → logprob: -10.386493682861328
    6. '_' → logprob: -10.636493682861328
    7. 'y' → logprob: -10.761493682861328
    8. 'ility' → logprob: -11.136493682861328
    9. 's' → logprob: -11.886493682861328
    10. 'e' → logprob: -11.886493682861328

Token 83: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8386515378952026
    2. '\' → logprob: -1.4636515378952026
    3. 'a' → logprob: -2.338651657104492
    4. 's' → logprob: -3.088651657104492
    5. '_' → logprob: -3.463651657104492
    6. ' 
' → logprob: -3.838651657104492
    7. '`' → logprob: -3.963651657104492
    8. 'i' → logprob: -3.963651657104492
    9. '
' → logprob: -4.088651657104492
    10. 'def' → logprob: -4.213651657104492

Token 84: 'input' (ID: 2586)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7096835970878601
    2. 'i' → logprob: -1.2096836566925049
    3. 'input' → logprob: -1.7096836566925049
    4. 'I' → logprob: -4.459683418273926
    5. 'd' → logprob: -5.709683418273926
    6. 's' → logprob: -5.959683418273926
    7. 'a' → logprob: -6.209683418273926
    8. 'r' → logprob: -6.334683418273926
    9. 'def' → logprob: -6.584683418273926
    10. ' input' → logprob: -6.709683418273926

Token 85: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11173773556947708
    2. '=' → logprob: -2.8617377281188965
    3. ' =' → logprob: -3.4867377281188965
    4. '_' → logprob: -4.9867377281188965
    5. '()' → logprob: -5.3617377281188965
    6. '.' → logprob: -5.8617377281188965
    7. '```' → logprob: -7.2367377281188965
    8. '<|end|>' → logprob: -7.4867377281188965
    9. 's' → logprob: -8.111738204956055
    10. '_data' → logprob: -8.361738204956055

Token 86: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.29335758090019226
    2. ' sys' → logprob: -1.6683576107025146
    3. 'input' → logprob: -2.9183576107025146
    4. 'lambda' → logprob: -5.1683573722839355
    5. ' input' → logprob: -5.9183573722839355
    6. '(sys' → logprob: -6.9183573722839355
    7. '=sys' → logprob: -7.4183573722839355
    8. ' lambda' → logprob: -7.5433573722839355
    9. 'raw' → logprob: -8.293357849121094
    10. 'str' → logprob: -8.418357849121094

Token 87: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004010491538792849
    2. '.stdin' → logprob: -5.8790106773376465
    3. '.readline' → logprob: -6.7540106773376465
    4. '.stdout' → logprob: -11.504010200500488
    5. '.​' → logprob: -12.629010200500488
    6. 'stdin' → logprob: -12.629010200500488
    7. '.argv' → logprob: -12.754010200500488
    8. ' .' → logprob: -12.754010200500488
    9. '.read' → logprob: -13.129010200500488
    10. '.get' → logprob: -13.254010200500488

Token 88: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006801456678658724
    2. '.' → logprob: -5.006801605224609
    3. '.read' → logprob: -9.38180160522461
    4. '.stdin' → logprob: -14.00680160522461
    5. '.re' → logprob: -14.88180160522461
    6. '.buffer' → logprob: -15.25680160522461
    7. '.readlines' → logprob: -15.75680160522461
    8. 'read' → logprob: -16.13180160522461
    9. '.Read' → logprob: -16.63180160522461
    10. '.write' → logprob: -17.13180160522461

Token 89: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34631314873695374
    2. '
' → logprob: -1.4713131189346313
    3. '()

' → logprob: -3.471313238143921
    4. '

' → logprob: -4.596312999725342
    5. '(' → logprob: -4.721312999725342
    6. '()
' → logprob: -4.846312999725342
    7. '(
' → logprob: -6.346312999725342
    8. 'def' → logprob: -7.346312999725342
    9. '' → logprob: -7.721312999725342
    10. '
' → logprob: -7.971312999725342

Token 90: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3796175718307495
    2. '
' → logprob: -1.2546175718307495
    3. '(' → logprob: -4.379617691040039
    4. '()
' → logprob: -5.129617691040039
    5. '

' → logprob: -5.254617691040039
    6. '()

' → logprob: -5.879617691040039
    7. '(
' → logprob: -6.879617691040039
    8. '' → logprob: -7.504617691040039
    9. '#' → logprob: -7.754617691040039
    10. '().' → logprob: -7.879617691040039

Token 91: ' Fast' (ID: 21597)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8257171511650085
    2. '
' → logprob: -0.9507171511650085
    3. '<|end|>' → logprob: -2.3257172107696533
    4. '().' → logprob: -3.8257172107696533
    5. '

' → logprob: -4.200716972351074
    6. ' ' → logprob: -4.325716972351074
    7. '\n' → logprob: -5.700716972351074
    8. '#' → logprob: -6.075716972351074
    9. '.strip' → logprob: -6.075716972351074
    10. '  
' → logprob: -6.075716972351074

Token 92: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.444680780172348
    2. '()' → logprob: -1.0696808099746704
    3. '_' → logprob: -4.819680690765381
    4. '(
' → logprob: -6.444680690765381
    5. '\' → logprob: -6.944680690765381
    6. ' ' → logprob: -7.069680690765381
    7. ')' → logprob: -7.069680690765381
    8. '_input' → logprob: -7.444680690765381
    9. '()\' → logprob: -7.444680690765381
    10. '\n' → logprob: -7.694680690765381

Token 93: ' reading' (ID: 6085)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12384466081857681
    2. '

' → logprob: -2.248844623565674
    3. '
' → logprob: -4.998844623565674
    4. 'def' → logprob: -6.373844623565674
    5. '\n' → logprob: -7.498844623565674
    6. '' → logprob: -7.498844623565674
    7. '#' → logprob: -7.873844623565674
    8. '


' → logprob: -8.123845100402832
    9. '()

' → logprob: -8.623845100402832
    10. '\' → logprob: -9.373845100402832

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3190370500087738
    2. '

' → logprob: -1.3190370798110962
    3. '
' → logprob: -5.819036960601807
    4. 'def' → logprob: -6.444036960601807
    5. '


' → logprob: -7.694036960601807
    6. '' → logprob: -8.569037437438965
    7. '#' → logprob: -8.819037437438965
    8. '\n' → logprob: -8.819037437438965
    9. '

' → logprob: -9.944037437438965
    10. 'n' → logprob: -9.944037437438965

Token 95: 'get' (ID: 522)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1525871306657791
    2. '

' → logprob: -2.2775871753692627
    3. 'def' → logprob: -3.5275871753692627
    4. '#' → logprob: -6.027586936950684
    5. '
' → logprob: -6.277586936950684
    6. 'n' → logprob: -6.527586936950684
    7. '' → logprob: -6.777586936950684
    8. '\n' → logprob: -7.152586936950684
    9. '\' → logprob: -7.277586936950684
    10. '


' → logprob: -7.652586936950684

Token 96: 'S' (ID: 50)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.20278164744377136
    2. 'line' → logprob: -2.0777816772460938
    3. 's' → logprob: -3.0777816772460938
    4. ' ' → logprob: -6.452781677246094
    5. '_line' → logprob: -6.452781677246094
    6. 'token' → logprob: -6.702781677246094
    7. 'ter' → logprob: -6.702781677246094
    8. 'input' → logprob: -6.827781677246094
    9. 'li' → logprob: -7.577781677246094
    10. 'str' → logprob: -7.827781677246094

Token 97: ' =' (ID: 314)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.20301921665668488
    2. 'tring' → logprob: -1.7030192613601685
    3. 'tri' → logprob: -7.453019142150879
    4. 't' → logprob: -7.703019142150879
    5. 'trin' → logprob: -7.703019142150879
    6. 'trip' → logprob: -10.578019142150879
    7. 'tranger' → logprob: -11.078019142150879
    8. 'trs' → logprob: -11.203019142150879
    9. 'r' → logprob: -11.328019142150879
    10. 'trl' → logprob: -11.453019142150879

Token 98: ' lambda' (ID: 27871)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6509736776351929
    2. 'lambda' → logprob: -0.7759736776351929
    3. ' lambda' → logprob: -4.650973796844482
    4. 'str' → logprob: -5.400973796844482
    5. ' input' → logprob: -5.900973796844482
    6. 'sys' → logprob: -6.900973796844482
    7. '(lambda' → logprob: -8.900973320007324
    8. 'list' → logprob: -9.275973320007324
    9. ' str' → logprob: -10.775973320007324
    10. '=lambda' → logprob: -10.775973320007324

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14494377374649048
    2. 'str' → logprob: -2.8949437141418457
    3. ' :' → logprob: -3.3949437141418457
    4. 'input' → logprob: -4.019943714141846
    5. ' input' → logprob: -4.394943714141846
    6. ' str' → logprob: -5.144943714141846
    7. ':str' → logprob: -6.144943714141846
    8. 'lambda' → logprob: -6.269943714141846
    9. 's' → logprob: -6.519943714141846
    10. ' lambda' → logprob: -6.644943714141846

Token 100: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2120245397090912
    2. ' input' → logprob: -1.7120245695114136
    3. 'sys' → logprob: -4.712024688720703
    4. ' sys' → logprob: -6.462024688720703
    5. 'str' → logprob: -12.337024688720703
    6. 'list' → logprob: -14.087024688720703
    7. 'int' → logprob: -14.837024688720703
    8. ' ' → logprob: -15.462024688720703
    9. 'inp' → logprob: -15.462024688720703
    10. 'in' → logprob: -15.587024688720703

Token 101: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006724249105900526
    2. '()' → logprob: -5.0067243576049805
    3. ' ().' → logprob: -12.25672435760498
    4. '(' → logprob: -12.63172435760498
    5. '()
' → logprob: -15.88172435760498
    6. '()

' → logprob: -16.256723403930664
    7. '()<' → logprob: -16.256723403930664
    8. '()\' → logprob: -16.256723403930664
    9. '.strip' → logprob: -16.381723403930664
    10. '()?.' → logprob: -16.756723403930664

Token 102: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.038042064756155014
    2. 'rstrip' → logprob: -3.2880420684814453
    3. 'str' → logprob: -15.663042068481445
    4. 'decode' → logprob: -15.788042068481445
    5. 'read' → logprob: -15.788042068481445
    6. 'rst' → logprob: -16.663042068481445
    7. 'rs' → logprob: -16.788042068481445
    8. ' strip' → logprob: -17.163042068481445
    9. 'split' → logprob: -17.413042068481445
    10. 'stri' → logprob: -18.038042068481445

Token 103: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002123614540323615
    2. '(' → logprob: -8.750212669372559
    3. '()
' → logprob: -10.625212669372559
    4. '().' → logprob: -10.750212669372559
    5. '('' → logprob: -13.625212669372559
    6. '()\' → logprob: -13.625212669372559
    7. '()

' → logprob: -14.000212669372559
    8. '()`' → logprob: -14.125212669372559
    9. '()"' → logprob: -14.125212669372559
    10. '())' → logprob: -14.625212669372559

Token 104: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6253179311752319
    2. '
' → logprob: -1.625317931175232
    3. '()
' → logprob: -2.2503180503845215
    4. '<|end|>' → logprob: -2.5003180503845215
    5. '\n' → logprob: -3.1253180503845215
    6. '(
' → logprob: -4.0003180503845215
    7. '(' → logprob: -5.1253180503845215
    8. '  
' → logprob: -6.1253180503845215
    9. '()\' → logprob: -6.2503180503845215
    10. ' 
' → logprob: -6.6253180503845215

Token 105: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4237194061279297
    2. '()' → logprob: -1.2987194061279297
    3. '()
' → logprob: -3.2987194061279297
    4. '\n' → logprob: -4.42371940612793
    5. '<|end|>' → logprob: -5.54871940612793
    6. '#' → logprob: -5.67371940612793
    7. '(' → logprob: -5.79871940612793
    8. 'def' → logprob: -5.79871940612793
    9. '  
' → logprob: -5.79871940612793
    10. '(
' → logprob: -6.29871940612793

Token 106: ' Get' (ID: 2942)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2863348722457886
    2. 'input' → logprob: -1.4113348722457886
    3. 'str' → logprob: -2.036334991455078
    4. '()' → logprob: -2.661334991455078
    5. 'def' → logprob: -2.661334991455078
    6. '<|end|>' → logprob: -2.786334991455078
    7. 'get' → logprob: -3.036334991455078
    8. 'S' → logprob: -4.411334991455078
    9. ')' → logprob: -4.536334991455078
    10. ' ' → logprob: -5.036334991455078

Token 107: ' string' (ID: 1621)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16504321992397308
    2. 's' → logprob: -2.1650431156158447
    3. '<|end|>' → logprob: -4.290043354034424
    4. ' ' → logprob: -4.665043354034424
    5. 'str' → logprob: -5.040043354034424
    6. ' ()' → logprob: -6.290043354034424
    7. 'string' → logprob: -6.540043354034424
    8. 'a' → logprob: -7.415043354034424
    9. 'S' → logprob: -7.540043354034424
    10. ')' → logprob: -7.540043354034424

Token 108: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029687773436307907
    2. '()
' → logprob: -3.7796878814697266
    3. '(' → logprob: -5.779687881469727
    4. '()\' → logprob: -7.029687881469727
    5. '(
' → logprob: -7.279687881469727
    6. '
' → logprob: -7.279687881469727
    7. '<|end|>' → logprob: -7.904687881469727
    8. '()

' → logprob: -8.404687881469727
    9. '\n' → logprob: -8.779687881469727
    10. ')' → logprob: -9.279687881469727

Token 109: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09701579809188843
    2. 'def' → logprob: -2.847015857696533
    3. '\n' → logprob: -4.472015857696533
    4. '()' → logprob: -5.347015857696533
    5. ' 
' → logprob: -5.972015857696533
    6. '\' → logprob: -5.972015857696533
    7. '  
' → logprob: -6.097015857696533
    8. '<|end|>' → logprob: -6.222015857696533
    9. '' → logprob: -6.472015857696533
    10. '

' → logprob: -6.722015857696533

Token 110: ' strip' (ID: 22967)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.32053160667419434
    2. 'strip' → logprob: -1.5705316066741943
    3. ' strip' → logprob: -3.5705316066741943
    4. 'split' → logprob: -3.8205316066741943
    5. ' split' → logprob: -5.195531845092773
    6. 'remove' → logprob: -6.195531845092773
    7. 'r' → logprob: -6.445531845092773
    8. ' remove' → logprob: -6.820531845092773
    9. 'trim' → logprob: -7.445531845092773
    10. 'lower' → logprob: -7.445531845092773

Token 111: ' whitespace' (ID: 83606)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03094501607120037
    2. '()
' → logprob: -4.15594482421875
    3. '(' → logprob: -4.78094482421875
    4. '()\' → logprob: -6.53094482421875
    5. '\n' → logprob: -6.65594482421875
    6. '
' → logprob: -7.28094482421875
    7. ' ()' → logprob: -7.65594482421875
    8. '(
' → logprob: -7.78094482421875
    9. '('\' → logprob: -7.90594482421875
    10. ')' → logprob: -7.90594482421875

Token 112: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027665352448821068
    2. 'def' → logprob: -5.027665138244629
    3. ' 
' → logprob: -5.152665138244629
    4. '  
' → logprob: -5.402665138244629
    5. '\n' → logprob: -5.902665138244629
    6. '    
' → logprob: -6.402665138244629
    7. 'get' → logprob: -7.027665138244629
    8. '' → logprob: -7.277665138244629
    9. '#' → logprob: -7.402665138244629
    10. '()' → logprob: -7.402665138244629

Token 113: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.6084328293800354
    2. '
' → logprob: -0.9834328293800354
    3. 'def' → logprob: -2.7334327697753906
    4. 'g' → logprob: -4.483432769775391
    5. ' 
' → logprob: -6.608432769775391
    6. '  
' → logprob: -6.858432769775391
    7. '

' → logprob: -7.483432769775391
    8. '    
' → logprob: -7.858432769775391
    9. '#' → logprob: -8.10843276977539
    10. 'n' → logprob: -8.48343276977539

Token 114: 'N' (ID: 45)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.01603202149271965
    2. 'N' → logprob: -4.5160322189331055
    3. 'i' → logprob: -6.0160322189331055
    4. 'int' → logprob: -6.3910322189331055
    5. 'Int' → logprob: -8.391032218933105
    6. 'n' → logprob: -8.391032218933105
    7. 's' → logprob: -9.016032218933105
    8. 'A' → logprob: -9.641032218933105
    9. '()' → logprob: -10.016032218933105
    10. 'a' → logprob: -10.641032218933105

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0300065279006958
    2. '=' → logprob: -3.5300064086914062
    3. ' ' → logprob: -8.405006408691406
    4. '=lambda' → logprob: -10.780006408691406
    5. ')' → logprob: -12.780006408691406
    6. '()' → logprob: -13.155006408691406
    7. 'umber' → logprob: -13.530006408691406
    8. '=int' → logprob: -13.655006408691406
    9. 'int' → logprob: -13.905006408691406
    10. 's' → logprob: -14.405006408691406

Token 116: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3177979290485382
    2. 'lambda' → logprob: -1.3177978992462158
    3. 'int' → logprob: -5.442798137664795
    4. '(lambda' → logprob: -8.817797660827637
    5. ' int' → logprob: -10.567797660827637
    6. ' lamb' → logprob: -11.317797660827637
    7. '=lambda' → logprob: -11.817797660827637
    8. ' =' → logprob: -13.817797660827637
    9. ' ' → logprob: -13.942797660827637
    10. 'lam' → logprob: -14.192797660827637

Token 117: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.42204806208610535
    2. ':' → logprob: -1.2970480918884277
    3. '():' → logprob: -3.0470480918884277
    4. ':int' → logprob: -4.297048091888428
    5. 'int' → logprob: -5.172048091888428
    6. ' int' → logprob: -6.172048091888428
    7. ' ():' → logprob: -6.297048091888428
    8. ' ' → logprob: -8.92204761505127
    9. '()' → logprob: -9.92204761505127
    10. ' ()' → logprob: -10.17204761505127

Token 118: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2014162540435791
    2. ' int' → logprob: -1.701416254043579
    3. '(int' → logprob: -13.451416015625
    4. ' ' → logprob: -13.701416015625
    5. '	int' → logprob: -15.701416015625
    6. ' map' → logprob: -15.951416015625
    7. '=int' → logprob: -16.326416015625
    8. ':int' → logprob: -17.326416015625
    9. 'map' → logprob: -17.576416015625
    10. '  ' → logprob: -17.576416015625

Token 119: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00410143518820405
    2. '(' → logprob: -5.504101276397705
    3. 'input' → logprob: -10.754101753234863
    4. '(
' → logprob: -14.129101753234863
    5. ' (' → logprob: -14.879101753234863
    6. ' input' → logprob: -15.254101753234863
    7. '()' → logprob: -15.504101753234863
    8. '(

' → logprob: -16.754100799560547
    9. '	input' → logprob: -17.629100799560547
    10. '(int' → logprob: -17.754100799560547

Token 120: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07909302413463593
    2. '().' → logprob: -2.8290929794311523
    3. '()' → logprob: -4.079092979431152
    4. ' ())' → logprob: -10.204092979431152
    5. ')' → logprob: -11.454092979431152
    6. '()
' → logprob: -12.454092979431152
    7. ' ()' → logprob: -13.704092979431152
    8. '(' → logprob: -14.204092979431152
    9. '()]' → logprob: -14.579092979431152
    10. ' ' → logprob: -14.579092979431152

Token 121: '    ' (ID: 257)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018172669224441051
    2. '#' → logprob: -7.751817226409912
    3. '()\' → logprob: -7.751817226409912
    4. ' ' → logprob: -8.00181770324707
    5. '()
' → logprob: -8.50181770324707
    6. ' ()' → logprob: -8.50181770324707
    7. '
' → logprob: -9.62681770324707
    8. '<|end|>' → logprob: -10.37681770324707
    9. '(' → logprob: -10.62681770324707
    10. 'def' → logprob: -10.62681770324707

Token 122: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02561555802822113
    2. ' ' → logprob: -4.400615692138672
    3. '<|end|>' → logprob: -5.025615692138672
    4. '#' (adapté à ' #') → logprob: -6.025615692138672
    5. ' ()' → logprob: -6.275615692138672
    6. '()
' → logprob: -7.650615692138672
    7. '  ' → logprob: -7.900615692138672
    8. '
' → logprob: -8.025615692138672
    9. '<|end|>' → logprob: -8.400615692138672
    10. ' #' → logprob: -8.650615692138672

Token 123: ' Get' (ID: 2942)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03656204044818878
    2. ' ()' → logprob: -3.911561965942383
    3. 'input' → logprob: -4.411561965942383
    4. ' input' → logprob: -6.161561965942383
    5. 'int' → logprob: -6.911561965942383
    6. 'get' → logprob: -8.536561965942383
    7. '(input' → logprob: -9.161561965942383
    8. ' ' → logprob: -9.286561965942383
    9. '(' → logprob: -9.536561965942383
    10. '()\' → logprob: -10.161561965942383

Token 124: ' integer' (ID: 16336)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08117567747831345
    2. 'int' → logprob: -2.7061755657196045
    3. '(int' → logprob: -5.331175804138184
    4. 'input' → logprob: -5.456175804138184
    5. '(' → logprob: -6.706175804138184
    6. '(input' → logprob: -7.581175804138184
    7. ' ()' → logprob: -9.706175804138184
    8. 'n' → logprob: -9.956175804138184
    9. '())' → logprob: -10.206175804138184
    10. ')' → logprob: -10.956175804138184

Token 125: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005779353086836636
    2. '(' → logprob: -7.625577926635742
    3. ' ()' → logprob: -10.375577926635742
    4. '<|end|>' → logprob: -10.875577926635742
    5. '()
' → logprob: -11.625577926635742
    6. '()\' → logprob: -11.875577926635742
    7. '()

' → logprob: -11.875577926635742
    8. '())' → logprob: -12.750577926635742
    9. '()]' → logprob: -13.000577926635742
    10. '()<' → logprob: -13.375577926635742

Token 126: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.100624680519104
    2. '
' → logprob: -1.475624680519104
    3. 'get' → logprob: -1.850624680519104
    4. 'def' → logprob: -1.850624680519104
    5. '<|end|>' → logprob: -3.3506245613098145
    6. ' ' → logprob: -3.8506245613098145
    7. '#' → logprob: -3.8506245613098145
    8. '  
' → logprob: -3.9756245613098145
    9. '()
' → logprob: -5.3506245613098145
    10. '\' → logprob: -5.8506245613098145

Token 127: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.18589158356189728
    2. '
' → logprob: -2.560891628265381
    3. 'def' → logprob: -2.810891628265381
    4. '<|end|>' → logprob: -4.310891628265381
    5. ' ' → logprob: -5.310891628265381
    6. ' 
' → logprob: -5.435891628265381
    7. '  
' → logprob: -5.560891628265381
    8. '#' → logprob: -6.685891628265381
    9. '_get' → logprob: -7.185891628265381
    10. '    
' → logprob: -7.935891628265381

Token 128: 'List' (ID: 950)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.030402548611164093
    2. 'List' → logprob: -4.280402660369873
    3. 'Ls' → logprob: -4.655402660369873
    4. 'A' → logprob: -5.780402660369873
    5. 'Lst' → logprob: -6.530402660369873
    6. 'M' → logprob: -6.780402660369873
    7. '_list' → logprob: -8.655402183532715
    8. 'Arr' → logprob: -9.030402183532715
    9. 'list' → logprob: -9.155402183532715
    10. 'S' → logprob: -9.530402183532715

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07133270055055618
    2. '=' → logprob: -2.6963326930999756
    3. '=lambda' → logprob: -6.821332931518555
    4. '(lambda' → logprob: -8.321332931518555
    5. '(' → logprob: -9.946332931518555
    6. 's' → logprob: -12.821332931518555
    7. '<|end|>' → logprob: -13.196332931518555
    8. '＝' → logprob: -13.446332931518555
    9. ')' → logprob: -13.696332931518555
    10. 'lambda' → logprob: -13.821332931518555

Token 130: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5666018128395081
    2. '(lambda' → logprob: -1.1916017532348633
    3. ' lambda' → logprob: -2.0666017532348633
    4. '=lambda' → logprob: -6.191601753234863
    5. 'list' → logprob: -9.191601753234863
    6. ' (' → logprob: -11.316601753234863
    7. ' ' → logprob: -11.566601753234863
    8. '(' → logprob: -11.691601753234863
    9. ' list' → logprob: -12.191601753234863
    10. ' =' → logprob: -12.566601753234863

Token 131: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24066399037837982
    2. '():' → logprob: -1.865664005279541
    3. ' :' → logprob: -3.240664005279541
    4. ':list' → logprob: -4.740664005279541
    5. 'lambda' → logprob: -5.615664005279541
    6. '()' → logprob: -5.615664005279541
    7. '(lambda' → logprob: -6.740664005279541
    8. 'list' → logprob: -6.865664005279541
    9. ' ():' → logprob: -7.490664005279541
    10. ' lambda' → logprob: -7.615664005279541

Token 132: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0016259063268080354
    2. ' list' → logprob: -6.501626014709473
    3. 'map' → logprob: -9.001626014709473
    4. 'lambda' → logprob: -15.376626014709473
    5. ' map' → logprob: -16.501625061035156
    6. '	list' → logprob: -18.126625061035156
    7. '(list' → logprob: -18.376625061035156
    8. 'm' → logprob: -19.376625061035156
    9. '[list' → logprob: -19.751625061035156
    10. 'l' → logprob: -19.876625061035156

Token 133: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0004320996522437781
    2. '(' → logprob: -7.750432014465332
    3. '(int' → logprob: -14.375432014465332
    4. '(input' → logprob: -15.125432014465332
    5. 'map' → logprob: -15.750432014465332
    6. ' map' → logprob: -15.875432014465332
    7. '()' → logprob: -16.62543296813965
    8. '(
' → logprob: -17.50043296813965
    9. '	map' → logprob: -17.50043296813965
    10. '(list' → logprob: -17.87543296813965

Token 134: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003065030323341489
    2. 'int' → logprob: -8.750306129455566
    3. '(' → logprob: -9.375306129455566
    4. '<int' → logprob: -10.250306129455566
    5. '[int' → logprob: -11.875306129455566
    6. ']int' → logprob: -11.875306129455566
    7. ',int' → logprob: -12.000306129455566
    8. '=int' → logprob: -13.125306129455566
    9. ' int' → logprob: -13.250306129455566
    10. '(
' → logprob: -13.500306129455566

Token 135: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6640816926956177
    2. ',input' → logprob: -0.7890816926956177
    3. ',' → logprob: -3.664081573486328
    4. 'input' → logprob: -5.414081573486328
    5. '(' → logprob: -7.789081573486328
    6. ' input' → logprob: -8.039081573486328
    7. ' (' → logprob: -9.539081573486328
    8. ')' → logprob: -9.914081573486328
    9. '=input' → logprob: -11.039081573486328
    10. ' ,' → logprob: -11.289081573486328

Token 136: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06197149679064751
    2. ' input' → logprob: -2.811971426010132
    3. ',input' → logprob: -13.311971664428711
    4. '(input' → logprob: -14.061971664428711
    5. ')' → logprob: -15.061971664428711
    6. 'int' → logprob: -15.186971664428711
    7. '	input' → logprob: -15.311971664428711
    8. ' ' → logprob: -15.686971664428711
    9. '
' → logprob: -16.31197166442871
    10. '<input' → logprob: -16.43697166442871

Token 137: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7697225252486533e-06
    2. '()' → logprob: -12.625003814697266
    3. ')' → logprob: -15.875003814697266
    4. ' ().' → logprob: -16.375003814697266
    5. '(' → logprob: -16.500003814697266
    6. '.' → logprob: -17.250003814697266
    7. '().__' → logprob: -18.250003814697266
    8. '))' → logprob: -18.625003814697266
    9. '.split' → logprob: -19.250003814697266
    10. ' ' → logprob: -19.250003814697266

Token 138: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10033736377954483
    2. 'strip' → logprob: -2.350337266921997
    3. 'rstrip' → logprob: -8.975337028503418
    4. 'read' → logprob: -12.850337028503418
    5. ')' → logprob: -14.350337028503418
    6. ' split' → logprob: -14.850337028503418
    7. ' strip' → logprob: -14.975337028503418
    8. 'spl' → logprob: -15.600337028503418
    9. '(split' → logprob: -16.725337982177734
    10. '().' → logprob: -16.850337982177734

Token 139: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1891569048166275
    2. '))' → logprob: -1.8141568899154663
    3. '()' → logprob: -4.689157009124756
    4. '())' → logprob: -9.314156532287598
    5. '()))
' → logprob: -10.064156532287598
    6. '(' → logprob: -11.064156532287598
    7. ')' → logprob: -11.439156532287598
    8. '()));' → logprob: -12.939156532287598
    9. ')))' → logprob: -13.064156532287598
    10. ' ))' → logprob: -13.064156532287598

Token 140: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28064626455307007
    2. '<|end|>' → logprob: -1.5306463241577148
    3. '

' → logprob: -4.655646324157715
    4. '#' → logprob: -5.280646324157715
    5. '\n' → logprob: -5.530646324157715
    6. '<|end|>' → logprob: -5.655646324157715
    7. 'newline' → logprob: -6.780646324157715
    8. '```' → logprob: -6.905646324157715
    9. 'def' → logprob: -7.280646324157715
    10. '
' → logprob: -7.280646324157715

Token 141: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.41619449853897095
    2. '
' → logprob: -1.7911944389343262
    3. '<|end|>' → logprob: -1.9161944389343262
    4. ' ' → logprob: -4.416194438934326
    5. 'def' → logprob: -5.166194438934326
    6. '  
' → logprob: -6.416194438934326
    7. ')' → logprob: -6.666194438934326
    8. ' 
' → logprob: -6.666194438934326
    9. '<|end|>' → logprob: -6.916194438934326
    10. '\n' → logprob: -7.291194438934326

Token 142: ' Get' (ID: 2942)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6968798637390137
    2. 'list' → logprob: -1.0718798637390137
    3. '<|end|>' → logprob: -2.3218798637390137
    4. '_list' → logprob: -3.6968798637390137
    5. '()' → logprob: -4.446879863739014
    6. 'List' → logprob: -4.571879863739014
    7. '(int' → logprob: -5.321879863739014
    8. 'int' → logprob: -5.821879863739014
    9. '[int' → logprob: -6.446879863739014
    10. '<|end|>' → logprob: -6.571879863739014

Token 144: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6303037405014038
    2. '(' → logprob: -1.2553037405014038
    3. '<|end|>' → logprob: -1.7553037405014038
    4. '<|end|>' → logprob: -5.755303859710693
    5. '(int' → logprob: -6.255303859710693
    6. ' of' → logprob: -6.505303859710693
    7. '[int' → logprob: -7.630303859710693
    8. 'of' → logprob: -7.880303859710693
    9. '[' → logprob: -8.130303382873535
    10. 's' → logprob: -8.255303382873535

Token 145: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.7004513144493103
    2. 'int' → logprob: -1.450451374053955
    3. 'inte' → logprob: -1.825451374053955
    4. 'ints' → logprob: -2.450451374053955
    5. '(int' → logprob: -4.450451374053955
    6. 'numbers' → logprob: -5.075451374053955
    7. '<|end|>' → logprob: -6.075451374053955
    8. '<int' → logprob: -8.075450897216797
    9. ' ints' → logprob: -8.200450897216797
    10. ' int' → logprob: -8.200450897216797

Token 146: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27883380651474
    2. '

' → logprob: -1.9038338661193848
    3. '<|end|>' → logprob: -3.5288338661193848
    4. 'def' → logprob: -3.6538338661193848
    5. '#' → logprob: -3.9038338661193848
    6. '\n' → logprob: -4.778833866119385
    7. '<|end|>' → logprob: -6.028833866119385
    8. 'n' → logprob: -6.778833866119385
    9. '
' → logprob: -6.903833866119385
    10. '' → logprob: -6.903833866119385

Token 147: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04237540438771248
    2. ' input' → logprob: -3.917375326156616
    3. ')' → logprob: -4.292375564575195
    4. '()' → logprob: -5.167375564575195
    5. 'list' → logprob: -6.917375564575195
    6. '(input' → logprob: -8.167375564575195
    7. 'int' → logprob: -8.417375564575195
    8. 'line' → logprob: -8.542375564575195
    9. 'stdin' → logprob: -9.292375564575195
    10. '())' → logprob: -9.417375564575195

Token 148: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4374343156814575
    2. '

' → logprob: -1.4374343156814575
    3. '#' → logprob: -2.437434196472168
    4. 'def' → logprob: -3.937434196472168
    5. '


' → logprob: -6.437434196472168
    6. '\n' → logprob: -6.687434196472168
    7. 'class' → logprob: -6.687434196472168
    8. '' → logprob: -6.687434196472168
    9. '
' → logprob: -7.187434196472168
    10. 'n' → logprob: -7.437434196472168

Token 149: 'get' (ID: 522)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8111964464187622
    2. '

' → logprob: -1.5611964464187622
    3. 'def' → logprob: -1.8111964464187622
    4. '\n' → logprob: -2.9361963272094727
    5. '#' → logprob: -3.0611963272094727
    6. '\' → logprob: -3.6861963272094727
    7. 'class' → logprob: -4.436196327209473
    8. 'n' → logprob: -4.686196327209473
    9. '<|end|>' → logprob: -5.061196327209473
    10. '


' → logprob: -5.311196327209473

Token 150: 'Z' (ID: 57)
  Prédit: 'Arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Arr' → logprob: -0.9695068001747131
    2. 'Str' → logprob: -1.5945067405700684
    3. 'List' → logprob: -1.9695067405700684
    4. 'F' → logprob: -3.2195067405700684
    5. 'Set' → logprob: -3.4695067405700684
    6. 'Float' → logprob: -3.4695067405700684
    7. 'S' → logprob: -3.5945067405700684
    8. 'Char' → logprob: -3.5945067405700684
    9. 'Int' → logprob: -3.8445067405700684
    10. 'Map' → logprob: -3.9695067405700684

Token 151: 'List' (ID: 950)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09238046407699585
    2. '=' → logprob: -2.8423805236816406
    3. '=lambda' → logprob: -3.9673805236816406
    4. 'ero' → logprob: -5.092380523681641
    5. 'ip' → logprob: -5.842380523681641
    6. 'e' → logprob: -7.467380523681641
    7. 'a' → logprob: -7.967380523681641
    8. 'er' → logprob: -8.96738052368164
    9. 'p' → logprob: -9.09238052368164
    10. 'ipped' → logprob: -9.21738052368164

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16031867265701294
    2. '=' → logprob: -1.9103186130523682
    3. '=lambda' → logprob: -9.285318374633789
    4. 'lambda' → logprob: -14.410318374633789
    5. 'space' → logprob: -15.035318374633789
    6. 's' → logprob: -15.160318374633789
    7. ' ' → logprob: -15.535318374633789
    8. '＝' → logprob: -16.66031837463379
    9. 'a' → logprob: -17.03531837463379
    10. 'b' → logprob: -17.41031837463379

Token 153: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.4121098518371582
    2. 'lambda' → logprob: -1.4121098518371582
    3. '(lambda' → logprob: -2.412109851837158
    4. '=lambda' → logprob: -5.537109851837158
    5. 'ambda' → logprob: -7.537109851837158
    6. ' lamb' → logprob: -11.287109375
    7. ' =' → logprob: -12.037109375
    8. '_lambda' → logprob: -13.162109375
    9. 'lam' → logprob: -14.037109375
    10. ' (' → logprob: -14.162109375

Token 154: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13927005231380463
    2. '():' → logprob: -2.389270067214966
    3. '(lambda' → logprob: -4.514269828796387
    4. ' :' → logprob: -4.764269828796387
    5. 'list' → logprob: -5.139269828796387
    6. 'lambda' → logprob: -5.514269828796387
    7. ':list' → logprob: -5.889269828796387
    8. ' lambda' → logprob: -6.014269828796387
    9. '=lambda' → logprob: -6.639269828796387
    10. '(list' → logprob: -7.139269828796387

Token 155: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02351205237209797
    2. ' list' → logprob: -3.773512125015259
    3. 'lambda' → logprob: -8.89851188659668
    4. 'sorted' → logprob: -10.52351188659668
    5. '[list' → logprob: -10.89851188659668
    6. '[]' → logprob: -11.02351188659668
    7. '[' → logprob: -11.27351188659668
    8. 'get' → logprob: -11.52351188659668
    9. 'copy' → logprob: -11.52351188659668
    10. ' lambda' → logprob: -11.89851188659668

Token 156: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08584440499544144
    2. '0' → logprob: -2.5858445167541504
    3. 'ord' → logprob: -5.96084451675415
    4. ']' → logprob: -6.96084451675415
    5. 'x' → logprob: -7.33584451675415
    6. 'i' → logprob: -7.46084451675415
    7. 'get' → logprob: -7.58584451675415
    8. '*' → logprob: -7.58584451675415
    9. 'list' → logprob: -7.83584451675415
    10. 'z' → logprob: -8.835844039916992

Token 157: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008258527144789696
    2. '(i' → logprob: -5.13325834274292
    3. '(' → logprob: -7.50825834274292
    4. '(c' → logprob: -7.63325834274292
    5. '(input' → logprob: -8.008258819580078
    6. '(z' → logprob: -8.383258819580078
    7. '(_)' → logprob: -8.383258819580078
    8. '(a' → logprob: -8.758258819580078
    9. '(ch' → logprob: -8.883258819580078
    10. '(s' → logprob: -10.258258819580078

Token 158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8279419541358948
    2. ' for' → logprob: -1.20294189453125
    3. '()' → logprob: -1.70294189453125
    4. 'for' → logprob: -2.57794189453125
    5. '(x' → logprob: -6.20294189453125
    6. ' x' → logprob: -7.57794189453125
    7. 'or' → logprob: -7.57794189453125
    8. ' or' → logprob: -7.82794189453125
    9. ' )' → logprob: -7.82794189453125
    10. ' if' → logprob: -8.32794189453125

Token 159: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12813235819339752
    2. 'for' → logprob: -2.1281323432922363
    3. '()' → logprob: -6.878132343292236
    4. '(x' → logprob: -9.003132820129395
    5. ' x' → logprob: -11.253132820129395
    6. 'x' → logprob: -11.378132820129395
    7. 'or' → logprob: -12.003132820129395
    8. ' if' → logprob: -12.253132820129395
    9. ' in' → logprob: -12.628132820129395
    10. 'if' → logprob: -12.753132820129395

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02056863345205784
    2. ' ' → logprob: -3.895568609237671
    3. '<|end|>' → logprob: -11.14556884765625
    4. 'x' → logprob: -12.77056884765625
    5. ' x' → logprob: -12.77056884765625
    6. ' for' → logprob: -13.02056884765625
    7. '0' → logprob: -13.14556884765625
    8. 'input' → logprob: -13.77056884765625
    9. ' input' → logprob: -14.77056884765625
    10. 'for' → logprob: -15.64556884765625

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001843485952122137
    2. ' ' → logprob: -8.625184059143066
    3. 'int' → logprob: -12.750184059143066
    4. 'input' → logprob: -14.250184059143066
    5. 'x' → logprob: -14.375184059143066
    6. '0' → logprob: -14.500184059143066
    7. 'get' → logprob: -17.125185012817383
    8. 'for' → logprob: -17.375185012817383
    9. ' int' → logprob: -17.500185012817383
    10. '  ' → logprob: -18.000185012817383

Token 162: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5760343074798584
    2. ' for' → logprob: -0.8260343074798584
    3. '<|end|>' → logprob: -10.326034545898438
    4. ' ' → logprob: -11.076034545898438
    5. '(x' → logprob: -11.076034545898438
    6. '	for' → logprob: -11.201034545898438
    7. ')' → logprob: -11.576034545898438
    8. 'x' → logprob: -12.451034545898438
    9. '()' → logprob: -13.076034545898438
    10. ' x' → logprob: -14.326034545898438

Token 163: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2753061056137085
    2. ' x' → logprob: -1.5253061056137085
    3. 'input' → logprob: -4.400306224822998
    4. ' input' → logprob: -4.525306224822998
    5. ' ' → logprob: -15.40030574798584
    6. '(x' → logprob: -15.77530574798584
    7. 'in' → logprob: -16.275306701660156
    8. ' in' → logprob: -16.775306701660156
    9. '=input' → logprob: -16.775306701660156
    10. '	x' → logprob: -16.900306701660156

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.053362470120191574
    2. 'in' → logprob: -3.0533623695373535
    3. 'x' → logprob: -5.4283623695373535
    4. ' x' → logprob: -7.9283623695373535
    5. ' ' → logprob: -11.928362846374512
    6. 's' → logprob: -12.803362846374512
    7. '<|end|>' → logprob: -13.303362846374512
    8. 'In' → logprob: -14.678362846374512
    9. ',' → logprob: -14.928362846374512
    10. 'inx' → logprob: -15.553362846374512

Token 165: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2520351707935333
    2. ' input' → logprob: -1.502035140991211
    3. 'get' → logprob: -9.502035140991211
    4. ' get' → logprob: -10.877035140991211
    5. 'range' → logprob: -12.252035140991211
    6. ' range' → logprob: -12.377035140991211
    7. ' ' → logprob: -13.752035140991211
    8. '(input' → logprob: -14.002035140991211
    9. '<input' → logprob: -14.877035140991211
    10. '	input' → logprob: -15.127035140991211

Token 166: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.53050296427682e-05
    2. '()' → logprob: -9.37508487701416
    3. ' ().' → logprob: -15.12508487701416
    4. '(' → logprob: -18.250085830688477
    5. '()]' → logprob: -18.250085830688477
    6. '().__' → logprob: -19.375085830688477
    7. '())' → logprob: -19.375085830688477
    8. '()[' → logprob: -19.500085830688477
    9. '()
' → logprob: -19.500085830688477
    10. '()].' → logprob: -19.875085830688477

Token 167: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00408528558909893
    2. 'strip' → logprob: -5.504085063934326
    3. ' split' → logprob: -12.379085540771484
    4. 'rstrip' → logprob: -12.879085540771484
    5. ' strip' → logprob: -16.254085540771484
    6. '.split' → logprob: -16.254085540771484
    7. '(split' → logprob: -18.379085540771484
    8. 'spl' → logprob: -18.379085540771484
    9. '().' → logprob: -19.504085540771484
    10. 'read' → logprob: -19.879085540771484

Token 168: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -7.862962229410186e-05
    2. ']()' → logprob: -10.250078201293945
    3. ']' → logprob: -10.750078201293945
    4. '()' → logprob: -10.750078201293945
    5. ' ()' → logprob: -15.625078201293945
    6. '(' → logprob: -15.875078201293945
    7. ' ]' → logprob: -18.000078201293945
    8. '())' → logprob: -18.875078201293945
    9. '()][' → logprob: -18.875078201293945
    10. '()]
' → logprob: -19.000078201293945

Token 169: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' Get' (ID: 2942)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' list' (ID: 1562)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.34244173765182495
    2. 'zero' → logprob: -1.3424417972564697
    3. 'list' → logprob: -4.092441558837891
    4. ' list' → logprob: -4.842441558837891
    5. 'z' → logprob: -5.842441558837891
    6. 'Z' → logprob: -7.092441558837891
    7. '0' → logprob: -8.59244155883789
    8. ' z' → logprob: -9.84244155883789
    9. 'a' → logprob: -10.21744155883789
    10. 'Zero' → logprob: -10.59244155883789

Token 173: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.035028502345085144
    2. ' zero' → logprob: -3.9100284576416016
    3. '0' → logprob: -4.535028457641602
    4. 'inte' → logprob: -6.160028457641602
    5. 'z' → logprob: -7.660028457641602
    6. ' integers' → logprob: -7.785028457641602
    7. 'indices' → logprob: -7.910028457641602
    8. 'ints' → logprob: -9.035028457641602
    9. 'int' → logprob: -9.785028457641602
    10. 'zeros' → logprob: -10.785028457641602

Token 175: '-index' (ID: 45533)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.04143023118376732
    2. 'based' → logprob: -3.4164302349090576
    3. '-index' → logprob: -5.2914299964904785
    4. '_based' → logprob: -6.2914299964904785
    5. 'indexed' → logprob: -8.166430473327637
    6. '-' → logprob: -8.166430473327637
    7. ' based' → logprob: -9.291430473327637
    8. ' -' → logprob: -9.416430473327637
    9. 'Based' → logprob: -9.666430473327637
    10. ' indexed' → logprob: -10.791430473327637

Token 176: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -5.512236498361744e-07
    2. ']' → logprob: -16.0
    3. ' ed' → logprob: -16.5
    4. 'ing' → logprob: -17.0
    5. 'es' → logprob: -17.25
    6. '[' → logprob: -17.25
    7. ''ed' → logprob: -17.25
    8. '_ed' → logprob: -17.375
    9. 'e' → logprob: -18.25
    10. '_list' → logprob: -18.625

Token 177: ' integers' (ID: 54912)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8713482022285461
    2. '
' → logprob: -1.2463481426239014
    3. '<|end|>' → logprob: -1.7463481426239014
    4. '#' → logprob: -2.3713481426239014
    5. '<|end|>' → logprob: -5.3713483810424805
    6. '

' → logprob: -5.3713483810424805
    7. 'get' → logprob: -5.6213483810424805
    8. 'n' → logprob: -5.8713483810424805
    9. ' ' → logprob: -5.9963483810424805
    10. '\n' → logprob: -6.6213483810424805

Token 179: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06784570217132568
    2. '#' → logprob: -3.5678458213806152
    3. '
' → logprob: -4.067845821380615
    4. 'class' → logprob: -4.192845821380615
    5. '

' → logprob: -5.942845821380615
    6. 'n' → logprob: -6.692845821380615
    7. '<|end|>' → logprob: -8.192845344543457
    8. '\' → logprob: -8.317845344543457
    9. '\n' → logprob: -8.442845344543457
    10. ' ' → logprob: -9.817845344543457

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02384897693991661
    2. '=' → logprob: -3.7738490104675293
    3. ' ' → logprob: -7.523849010467529
    4. ',' → logprob: -10.898848533630371
    5. ' =
' → logprob: -11.523848533630371
    6. '_' → logprob: -11.648848533630371
    7. ')' → logprob: -11.648848533630371
    8. ' ,' → logprob: -12.648848533630371
    9. ' ' → logprob: -12.898848533630371
    10. ' )' → logprob: -13.148848533630371

Token 181: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6992519497871399
    2. ' ' → logprob: -0.8242519497871399
    3. 'float' → logprob: -3.324251890182495
    4. '10' → logprob: -3.574251890182495
    5. ' int' → logprob: -8.074252128601074
    6. ' math' → logprob: -9.949252128601074
    7. 'int' → logprob: -10.074252128601074
    8. '1' → logprob: -10.574252128601074
    9. 'math' → logprob: -12.199252128601074
    10. '	float' → logprob: -12.824252128601074

Token 182: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.847109812544659e-05
    2. '(' → logprob: -10.000048637390137
    3. '("' → logprob: -13.250048637390137
    4. '('-' → logprob: -14.625048637390137
    5. ''' → logprob: -14.875048637390137
    6. '('+' → logprob: -16.12504768371582
    7. ''in' → logprob: -16.62504768371582
    8. '(\'' → logprob: -17.25004768371582
    9. 'inf' → logprob: -17.75004768371582
    10. '('='' → logprob: -18.50004768371582

Token 183: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.17663760483264923
    2. ''in' → logprob: -1.9266376495361328
    3. ''' → logprob: -4.301637649536133
    4. '"' → logprob: -6.051637649536133
    5. ''ex' → logprob: -9.051637649536133
    6. 'in' → logprob: -10.551637649536133
    7. ''end' → logprob: -10.551637649536133
    8. ''ins' → logprob: -10.926637649536133
    9. ''im' → logprob: -11.176637649536133
    10. ''i' → logprob: -11.176637649536133

Token 184: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016873658751137555
    2. '")' → logprob: -8.750168800354004
    3. ' )' → logprob: -11.750168800354004
    4. ')
' → logprob: -13.750168800354004
    5. ')")' → logprob: -13.750168800354004
    6. ')"' → logprob: -16.875167846679688
    7. ')

' → logprob: -17.125167846679688
    8. '')' → logprob: -17.375167846679688
    9. ')#' → logprob: -17.375167846679688
    10. '()' → logprob: -17.500167846679688

Token 185: '        ' (ID: 269)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02487977035343647
    2. '<|end|>' → logprob: -4.6498799324035645
    3. 'def' → logprob: -4.8998799324035645
    4. '

' → logprob: -5.5248799324035645
    5. '\n' → logprob: -6.6498799324035645
    6. '#' → logprob: -6.8998799324035645
    7. '' → logprob: -8.149879455566406
    8. '
' → logprob: -8.149879455566406
    9. 'class' → logprob: -8.524879455566406
    10. '<|end|>' → logprob: -8.774879455566406

Token 186: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9092498421669006
    2. '<|end|>' → logprob: -0.9092498421669006
    3. '#' (adapté à ' #') → logprob: -1.7842497825622559
    4. '<|end|>' → logprob: -4.409249782562256
    5. ')' → logprob: -5.284249782562256
    6. '' → logprob: -6.409249782562256
    7. ',' → logprob: -6.659249782562256
    8. '

' → logprob: -6.659249782562256
    9. ' ' → logprob: -6.784249782562256
    10. '  
' → logprob: -7.159249782562256

Token 187: ' Representation' (ID: 155197)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2458082437515259
    2. '10' → logprob: -1.6208082437515259
    3. 'max' → logprob: -1.9958082437515259
    4. '100' → logprob: -2.4958081245422363
    5. '0' → logprob: -2.8708081245422363
    6. ' max' → logprob: -2.8708081245422363
    7. 'MAX' → logprob: -3.4958081245422363
    8. '#' → logprob: -3.8708081245422363
    9. '<|end|>' → logprob: -3.8708081245422363
    10. 'inf' → logprob: -4.245808124542236

Token 188: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' infinity' (ID: 103156)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.3155316114425659
    2. ' infinity' → logprob: -1.440531611442566
    3. 'in' → logprob: -3.6905317306518555
    4. ' inf' → logprob: -5.1905317306518555
    5. 'INF' → logprob: -6.9405317306518555
    6. 'float' → logprob: -7.4405317306518555
    7. ' infinite' → logprob: -7.9405317306518555
    8. ' float' → logprob: -8.315531730651855
    9. ' ' → logprob: -8.440531730651855
    10. ' INF' → logprob: -8.565531730651855

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3063293397426605
    2. '#' → logprob: -1.556329369544983
    3. '

' → logprob: -3.9313292503356934
    4. '\n' → logprob: -5.431329250335693
    5. '' → logprob: -5.556329250335693
    6. 'def' → logprob: -5.681329250335693
    7. 'MAX' → logprob: -5.806329250335693
    8. '
' → logprob: -5.806329250335693
    9. ',' → logprob: -5.931329250335693
    10. '  
' → logprob: -6.181329250335693

Token 191: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18297430872917175
    2. '#' → logprob: -1.9329743385314941
    3. 'MOD' → logprob: -4.807974338531494
    4. 'class' → logprob: -5.932974338531494
    5. 'DEBUG' → logprob: -6.057974338531494
    6. 'MAX' → logprob: -6.307974338531494
    7. 'n' → logprob: -6.432974338531494
    8. '\' → logprob: -6.807974338531494
    9. '
' → logprob: -7.057974338531494
    10. '\n' → logprob: -7.682974338531494

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011285603046417236
    2. '=' → logprob: -4.636285781860352
    3. ' ' → logprob: -6.511285781860352
    4. '_' → logprob: -11.136285781860352
    5. ' =
' → logprob: -11.511285781860352
    6. '  ' → logprob: -12.261285781860352
    7. ' ,' → logprob: -12.261285781860352
    8. ',' → logprob: -12.761285781860352
    9. ' _' → logprob: -13.386285781860352
    10. ' =)' → logprob: -13.761285781860352

Token 193: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38696014881134033
    2. '10' → logprob: -1.1369601488113403
    3. '100' → logprob: -9.38696002960205
    4. '1' → logprob: -13.01196002960205
    5. '998' → logprob: -13.63696002960205
    6. ' int' → logprob: -13.76196002960205
    7. 'int' → logprob: -14.38696002960205
    8. ' 
' → logprob: -15.88696002960205
    9. ' ' → logprob: -16.636960983276367
    10. ' (' → logprob: -17.261960983276367

Token 194: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012987985974177718
    2. ' ' → logprob: -9.250129699707031
    3. '100' → logprob: -10.500129699707031
    4. '998' → logprob: -12.500129699707031
    5. '1' → logprob: -13.000129699707031
    6. 'int' → logprob: -15.750129699707031
    7. '(' → logprob: -18.75012969970703
    8. '123' → logprob: -19.75012969970703
    9. '2' → logprob: -20.37512969970703
    10. '[int' → logprob: -20.75012969970703

Token 195: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.23387832939624786
    2. '**' → logprob: -1.6088783740997314
    3. '000' → logprob: -4.983878135681152
    4. '09' → logprob: -6.733878135681152
    5. ' ' → logprob: -8.358878135681152
    6. '00' → logprob: -10.233878135681152
    7. '7' → logprob: -10.358878135681152
    8. ' **' → logprob: -10.483878135681152
    9. '009' → logprob: -10.858878135681152
    10. '^' → logprob: -11.108878135681152

Token 196: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.625
    3. ' ' → logprob: -20.0
    4. '```' → logprob: -21.0
    5. '10' → logprob: -22.875
    6. '19' → logprob: -23.125
    7. '９' → logprob: -23.375
    8. '18' → logprob: -23.875
    9. '
' → logprob: -23.875
    10. '   ' → logprob: -24.75

Token 197: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.1054253011243418e-05
    2. ' +' → logprob: -11.250020980834961
    3. '7' → logprob: -11.750020980834961
    4. '+
' → logprob: -16.37502098083496
    5. 'plus' → logprob: -17.87502098083496
    6. '＋' → logprob: -18.12502098083496
    7. ' plus' → logprob: -18.50002098083496
    8. '+

' → logprob: -19.00002098083496
    9. ' ' → logprob: -19.50002098083496
    10. '+</' → logprob: -20.25002098083496

Token 198: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -19.625
    4. '+' → logprob: -19.875
    5. '   ' → logprob: -20.625
    6. '07' → logprob: -21.125
    7. '9' → logprob: -21.25
    8. '' → logprob: -21.75
    9. '  ' → logprob: -22.0625
    10. '
' → logprob: -22.0625

Token 199: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '+' → logprob: -20.125
    4. '```' → logprob: -20.375
    5. '07' → logprob: -20.875
    6. '

' → logprob: -21.25
    7. '   ' → logprob: -21.625
    8. '9' → logprob: -21.875
    9. '７' → logprob: -21.875
    10. '
' → logprob: -21.875

Token 200: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055634669959545135
    2. '<|end|>' → logprob: -3.0556347370147705
    3. '

' → logprob: -5.555634498596191
    4. '#' → logprob: -6.680634498596191
    5. '' → logprob: -7.555634498596191
    6. '<|end|>' → logprob: -7.680634498596191
    7. '
' → logprob: -8.555634498596191
    8. ' 
' → logprob: -8.805634498596191
    9. 'newline' → logprob: -8.805634498596191
    10. '\n' → logprob: -9.430634498596191

Token 201: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6858004927635193
    2. '<|end|>' → logprob: -0.8108004927635193
    3. '#' (adapté à ' #') → logprob: -3.185800552368164
    4. '<|end|>' → logprob: -5.560800552368164
    5. ' 
' → logprob: -5.685800552368164
    6. ' ' → logprob: -7.060800552368164
    7. '  
' → logprob: -7.685800552368164
    8. '```' → logprob: -7.935800552368164
    9. '

' → logprob: -8.185800552368164
    10. '' → logprob: -8.310800552368164

Token 202: ' Common' (ID: 14782)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02166054956614971
    2. '<|end|>' → logprob: -4.521660327911377
    3. ' 
' → logprob: -5.896660327911377
    4. 'MOD' → logprob: -6.646660327911377
    5. ' 

' → logprob: -7.021660327911377
    6. '  
' → logprob: -7.146660327911377
    7. '10' → logprob: -7.271660327911377
    8. '#' → logprob: -7.646660327911377
    9. '0' → logprob: -7.646660327911377
    10. ' MOD' → logprob: -7.896660327911377

Token 203: ' modulus' (ID: 149464)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' computations' (ID: 192859)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '998' → logprob: -0.8003086447715759
    2. '10' → logprob: -0.9253086447715759
    3. 'mod' → logprob: -3.3003087043762207
    4. ' modular' → logprob: -3.9253087043762207
    5. ' competitive' → logprob: -4.425308704376221
    6. 'int' → logprob: -4.550308704376221
    7. 'MOD' → logprob: -4.550308704376221
    8. ' calculations' → logprob: -4.675308704376221
    9. ' ' → logprob: -4.925308704376221
    10. '100' → logprob: -5.550308704376221

Token 206: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10595744103193283
    2. '<|end|>' → logprob: -2.730957508087158
    3. '

' → logprob: -3.855957508087158
    4. '#' → logprob: -5.355957508087158
    5. '<|end|>' → logprob: -5.605957508087158
    6. 'def' → logprob: -5.730957508087158
    7. '\n' → logprob: -7.105957508087158
    8. 'n' → logprob: -7.105957508087158
    9. '
' → logprob: -8.48095703125
    10. '```' → logprob: -8.85595703125

Token 207: 'divide' (ID: 128988)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1433513164520264
    2. '\n' → logprob: -1.2683513164520264
    3. 'def' → logprob: -1.2683513164520264
    4. '\' → logprob: -3.5183513164520264
    5. 'n' → logprob: -3.6433513164520264
    6. '#' → logprob: -3.6433513164520264
    7. '

' → logprob: -4.5183515548706055
    8. '<|end|>' → logprob: -5.2683515548706055
    9. '' → logprob: -5.8933515548706055
    10. 'class' → logprob: -6.1433515548706055

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1280670017004013
    2. '=' → logprob: -2.1280670166015625
    3. '_' → logprob: -7.7530670166015625
    4. ' ' → logprob: -8.253067016601562
    5. '_by' → logprob: -8.753067016601562
    6. 'by' → logprob: -9.378067016601562
    7. 'd' → logprob: -10.003067016601562
    8. ',' → logprob: -10.003067016601562
    9. 'def' → logprob: -10.378067016601562
    10. 'r' → logprob: -11.253067016601562

Token 209: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.06227643042802811
    2. ' lambda' → logprob: -2.8122763633728027
    3. '(lambda' → logprob: -8.437276840209961
    4. 'MOD' → logprob: -9.687276840209961
    5. '=lambda' → logprob: -11.062276840209961
    6. 'pow' → logprob: -11.562276840209961
    7. ' MOD' → logprob: -13.312276840209961
    8. '/' → logprob: -14.062276840209961
    9. ' ' → logprob: -14.187276840209961
    10. '1' → logprob: -14.437276840209961

Token 210: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1573134809732437
    2. 'x' → logprob: -2.532313585281372
    3. ' a' → logprob: -3.407313585281372
    4. ' x' → logprob: -4.157313346862793
    5. 'lambda' → logprob: -4.532313346862793
    6. ' lambda' → logprob: -5.032313346862793
    7. ' ' → logprob: -11.657313346862793
    8. '(a' → logprob: -11.907313346862793
    9. 'n' → logprob: -12.657313346862793
    10. '(lambda' → logprob: -13.157313346862793

Token 211: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001748246024362743
    2. ':' → logprob: -7.376748085021973
    3. ' ,' → logprob: -7.376748085021973
    4. ',x' → logprob: -8.501748085021973
    5. ',y' → logprob: -8.751748085021973
    6. ' x' → logprob: -10.001748085021973
    7. ' :' → logprob: -10.626748085021973
    8. 'y' → logprob: -10.876748085021973
    9. 'x' → logprob: -10.876748085021973
    10. ',n' → logprob: -11.751748085021973

Token 212: ' pow' (ID: 9779)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7305147051811218
    2. ' x' → logprob: -0.7305147051811218
    3. '(x' → logprob: -3.9805147647857666
    4. ' (' → logprob: -4.1055145263671875
    5. '(' → logprob: -7.7305145263671875
    6. 'pow' → logprob: -7.8555145263671875
    7. ' lambda' → logprob: -8.605514526367188
    8. 'lambda' → logprob: -8.605514526367188
    9. '(lambda' → logprob: -9.355514526367188
    10. '((' → logprob: -9.605514526367188

Token 213: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.31345629692077637
    2. '(' → logprob: -1.3134562969207764
    3. '(
' → logprob: -9.188456535339355
    4. 'x' → logprob: -10.313456535339355
    5. '(div' → logprob: -11.438456535339355
    6. '(pow' → logprob: -11.438456535339355
    7. ',' → logprob: -11.813456535339355
    8. '2' → logprob: -11.938456535339355
    9. 'mod' → logprob: -12.188456535339355
    10. 'div' → logprob: -12.188456535339355

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0071625192649662495
    2. '(' → logprob: -5.632162570953369
    3. ',M' → logprob: -6.257162570953369
    4. '(M' → logprob: -7.507162570953369
    5. ' ,' → logprob: -7.632162570953369
    6. '2' → logprob: -8.007162094116211
    7. 'MOD' → logprob: -9.007162094116211
    8. ')' → logprob: -10.007162094116211
    9. '10' → logprob: -10.632162094116211
    10. ',(' → logprob: -11.007162094116211

Token 215: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00035727277281694114
    2. '-' → logprob: -8.375357627868652
    3. ' MOD' → logprob: -9.000357627868652
    4. '_MOD' → logprob: -13.500357627868652
    5. ' -' → logprob: -14.125357627868652
    6. '.MOD' → logprob: -14.500357627868652
    7. 'MO' → logprob: -15.375357627868652
    8. '10' → logprob: -15.625357627868652
    9. ' ' → logprob: -15.750357627868652
    10. '-M' → logprob: -17.250356674194336

Token 216: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028374455869197845
    2. ' -' → logprob: -5.877837657928467
    3. ',' → logprob: -10.377837181091309
    4. ',-' → logprob: -14.877837181091309
    5. ' ,' → logprob: -15.252837181091309
    6. ' ' → logprob: -15.502837181091309
    7. '```' → logprob: -15.877837181091309
    8. '   ' → logprob: -16.002838134765625
    9. ')' → logprob: -16.002838134765625
    10. 'MOD' → logprob: -16.127838134765625

Token 217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. '
' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '```' → logprob: -16.250001907348633
    5. '

' → logprob: -16.500001907348633
    6. '4' → logprob: -17.562501907348633
    7. '
' → logprob: -17.812501907348633
    8. '-' → logprob: -17.937501907348633
    9. '' → logprob: -18.375001907348633
    10. '3' → logprob: -19.000001907348633

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012948813382536173
    2. ' ,' → logprob: -7.12629508972168
    3. ')' → logprob: -7.62629508972168
    4. ',
' → logprob: -13.87629508972168
    5. ' )' → logprob: -14.12629508972168
    6. ' ' → logprob: -14.87629508972168
    7. ',x' → logprob: -16.00129508972168
    8. ',input' → logprob: -16.50129508972168
    9. '}' → logprob: -16.75129508972168
    10. ',b' → logprob: -16.75129508972168

Token 219: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.627176768844947e-05
    2. ' MOD' → logprob: -9.250096321105957
    3. '_MOD' → logprob: -17.12509536743164
    4. '10' → logprob: -18.75009536743164
    5. ')' → logprob: -18.87509536743164
    6. '   ' → logprob: -19.12509536743164
    7. ' ' → logprob: -19.37509536743164
    8. 'mod' → logprob: -19.87509536743164
    9. '.MOD' → logprob: -20.37509536743164
    10. 'M' → logprob: -20.50009536743164

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ' )' → logprob: -12.500005722045898
    3. ')
' → logprob: -13.875005722045898
    4. ',' → logprob: -15.000005722045898
    5. '),' → logprob: -15.500005722045898
    6. '))' → logprob: -16.7500057220459
    7. ' ' → logprob: -16.8750057220459
    8. ')#' → logprob: -17.1250057220459
    9. '()' → logprob: -17.2500057220459
    10. ')x' → logprob: -17.5000057220459

Token 221: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7856530547142029
    2. '<|end|>' → logprob: -0.9106530547142029
    3. '
' → logprob: -2.4106531143188477
    4. '#' → logprob: -4.035653114318848
    5. '()' → logprob: -5.160653114318848
    6. '(' → logprob: -5.285653114318848
    7. ' ' → logprob: -5.285653114318848
    8. '*' → logprob: -6.035653114318848
    9. ',' → logprob: -6.160653114318848
    10. '<|end|>' → logprob: -6.410653114318848

Token 222: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' Modular' (ID: 137262)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.097114086151123
    2. ' lambda' → logprob: -1.347114086151123
    3. 'lambda' → logprob: -1.472114086151123
    4. '<|end|>' → logprob: -2.222114086151123
    5. ' pow' → logprob: -2.847114086151123
    6. '(lambda' → logprob: -5.222114086151123
    7. '(pow' → logprob: -6.972114086151123
    8. ' ' → logprob: -7.222114086151123
    9. ' x' → logprob: -7.347114086151123
    10. 'x' → logprob: -7.722114086151123

Token 224: ' inverse' (ID: 53743)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: ' using' (ID: 2360)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' Ferm' (ID: 156422)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0016561364755034447
    2. ' MOD' → logprob: -6.7516560554504395
    3. 'pow' → logprob: -7.7516560554504395
    4. 'mod' → logprob: -10.001656532287598
    5. ' modular' → logprob: -11.751656532287598
    6. '_MOD' → logprob: -14.001656532287598
    7. ' pow' → logprob: -14.501656532287598
    8. 'Mod' → logprob: -15.001656532287598
    9. ' ' → logprob: -15.251656532287598
    10. '10' → logprob: -15.626656532287598

Token 227: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -9.805981972021982e-05
    2. ' at' → logprob: -10.12509822845459
    3. 'a' → logprob: -10.87509822845459
    4. 'ат' → logprob: -11.50009822845459
    5. 'i' → logprob: -12.25009822845459
    6. '	at' → logprob: -12.75009822845459
    7. 'mat' → logprob: -12.87509822845459
    8. 'hat' → logprob: -13.37509822845459
    9. 't' → logprob: -13.37509822845459
    10. 'p' → logprob: -13.50009822845459

Token 228: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.0934448316693306
    2. '<|end|>' → logprob: -3.21844482421875
    3. '(' → logprob: -4.21844482421875
    4. 'def' → logprob: -4.46844482421875
    5. ')' → logprob: -4.84344482421875
    6. '()' → logprob: -5.59344482421875
    7. '_pow' → logprob: -6.46844482421875
    8. 'pow' → logprob: -6.96844482421875
    9. '’s' → logprob: -6.96844482421875
    10. '_' → logprob: -7.09344482421875

Token 229: ' little' (ID: 3389)
  Prédit: 'little'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'little' → logprob: -0.6912503838539124
    2. ' little' → logprob: -0.8162503838539124
    3. 'last' → logprob: -4.691250324249268
    4. ')' → logprob: -4.816250324249268
    5. 'pow' → logprob: -4.816250324249268
    6. 'Little' → logprob: -4.941250324249268
    7. ' Little' → logprob: -5.191250324249268
    8. 'mod' → logprob: -6.316250324249268
    9. '-' → logprob: -6.691250324249268
    10. 'lemma' → logprob: -6.816250324249268

Token 230: ' theorem' (ID: 177750)
  Prédit: ' principle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principle' → logprob: -0.7134891152381897
    2. ' law' → logprob: -1.088489055633545
    3. '_h' → logprob: -2.338489055633545
    4. '-h' → logprob: -3.838489055633545
    5. 'princip' → logprob: -4.338489055633545
    6. 'law' → logprob: -5.213489055633545
    7. ''s' → logprob: -5.213489055633545
    8. ' theorem' → logprob: -5.713489055633545
    9. ' ' → logprob: -5.838489055633545
    10. ' rule' → logprob: -6.088489055633545

Token 231: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016537031158804893
    2. 'class' → logprob: -4.141537189483643
    3. '#' → logprob: -8.016536712646484
    4. 'n' → logprob: -9.391536712646484
    5. 'dp' → logprob: -10.641536712646484
    6. 'from' → logprob: -11.266536712646484
    7. 'N' → logprob: -11.641536712646484
    8. 'for' → logprob: -11.891536712646484
    9. '
' → logprob: -11.891536712646484
    10. '\' → logprob: -11.891536712646484

Token 233: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18368098139762878
    2. ' solve' → logprob: -1.9336810111999512
    3. ' dfs' → logprob: -5.308681011199951
    4. '_' → logprob: -5.433681011199951
    5. ' factorial' → logprob: -5.808681011199951
    6. ' _' → logprob: -5.808681011199951
    7. ' ' → logprob: -6.683681011199951
    8. ' factor' → logprob: -6.808681011199951
    9. ' binary' → logprob: -7.308681011199951
    10. ' calculate' → logprob: -7.433681011199951

Token 234: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007697483524680138
    2. '(' → logprob: -4.882697582244873
    3. ' ():' → logprob: -9.882697105407715
    4. '(:' → logprob: -11.007697105407715
    5. '()' → logprob: -11.132697105407715
    6. '():
' → logprob: -12.882697105407715
    7. '(":' → logprob: -13.382697105407715
    8. '()(' → logprob: -13.757697105407715
    9. ':' → logprob: -14.382697105407715
    10. ' (' → logprob: -14.632697105407715

Token 235: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21061408519744873
    2. '   ' → logprob: -2.2106142044067383
    3. ':' → logprob: -3.4606142044067383
    4. '():' → logprob: -3.7106142044067383
    5. ' ' → logprob: -3.9606142044067383
    6. '    ' → logprob: -6.085614204406738
    7. '    
' → logprob: -7.335614204406738
    8. '()' → logprob: -7.960614204406738
    9. '\' → logprob: -8.210614204406738
    10. '  ' → logprob: -8.585614204406738

Token 236: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0757956504821777
    2. ' n' → logprob: -1.2007956504821777
    3. ' ' → logprob: -1.4507956504821777
    4. '    ' → logprob: -2.8257956504821777
    5. 'n' → logprob: -2.9507956504821777
    6. ' pass' → logprob: -5.575795650482178
    7. ' \' → logprob: -6.325795650482178
    8. '    
' → logprob: -6.950795650482178
    9. ' 
' → logprob: -6.950795650482178
    10. ' #' → logprob: -7.450795650482178

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19038107991218567
    2. '#' → logprob: -2.5653810501098633
    3. ')' → logprob: -3.1903810501098633
    4. 'def' → logprob: -4.190381050109863
    5. 'n' → logprob: -4.815381050109863
    6. ' ' → logprob: -4.940381050109863
    7. ' #' → logprob: -5.065381050109863
    8. ' pass' → logprob: -5.690381050109863
    9. ' )' → logprob: -5.690381050109863
    10. '    ' → logprob: -5.940381050109863

Token 238: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4218677282333374
    2. '    ' → logprob: -2.046867847442627
    3. ' """' → logprob: -2.171867847442627
    4. '#' → logprob: -3.671867847442627
    5. '"""' → logprob: -3.796867847442627
    6. 'def' → logprob: -4.546867847442627
    7. ' ' → logprob: -4.546867847442627
    8. ' pass' → logprob: -4.671867847442627
    9. ' def' → logprob: -5.796867847442627
    10. '    
' → logprob: -5.921867847442627

Token 239: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7306454181671143
    2. ' i' → logprob: -1.3556454181671143
    3. ' the' → logprob: -1.6056454181671143
    4. ' _' → logprob: -3.9806454181671143
    5. ' this' → logprob: -4.480645179748535
    6. ' a' → logprob: -5.105645179748535
    7. ' line' → logprob: -5.230645179748535
    8. ' t' → logprob: -5.605645179748535
    9. '  ' → logprob: -6.105645179748535
    10. '    ' → logprob: -6.230645179748535

Token 240: ' given' (ID: 4335)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.41265586018562317
    2. ' given' → logprob: -2.537655830383301
    3. 'll' → logprob: -2.787655830383301
    4. ' ' → logprob: -2.787655830383301
    5. ' t' → logprob: -3.162655830383301
    6. 'rray' → logprob: -4.037655830383301
    7. 'b' → logprob: -4.662655830383301
    8. 'n' → logprob: -4.787655830383301
    9. 'given' → logprob: -5.037655830383301
    10. ' string' → logprob: -5.537655830383301

Token 241: ' array' (ID: 2644)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.33837220072746277
    2. ' problem' → logprob: -2.213372230529785
    3. ' graph' → logprob: -2.838372230529785
    4. ' number' → logprob: -3.838372230529785
    5. ' sequence' → logprob: -3.838372230529785
    6. ' array' → logprob: -4.213372230529785
    7. ' tree' → logprob: -4.338372230529785
    8. ' single' → logprob: -4.338372230529785
    9. ' given' → logprob: -4.963372230529785
    10. ' directed' → logprob: -5.213372230529785

Token 242: ',' (ID: 11)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0503959655761719
    2. ',' → logprob: -1.1753959655761719
    3. ' ,' → logprob: -1.4253959655761719
    4. '   ' → logprob: -2.800395965576172
    5. ' ' → logprob: -4.925395965576172
    6. '[' → logprob: -5.050395965576172
    7. '[]' → logprob: -5.050395965576172
    8. '  ' → logprob: -5.300395965576172
    9. ':' → logprob: -5.425395965576172
    10. ' :' → logprob: -5.925395965576172

Token 243: ' counts' (ID: 28991)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.39966100454330444
    2. ' return' → logprob: -1.8996610641479492
    3. '   ' → logprob: -3.149661064147949
    4. ' calculate' → logprob: -3.399661064147949
    5. ' check' → logprob: -3.899661064147949
    6. ' compute' → logprob: -4.024661064147949
    7. '    ' → logprob: -4.524661064147949
    8. ' we' → logprob: -4.649661064147949
    9. ' process' → logprob: -4.774661064147949
    10. ' determine' → logprob: -5.149661064147949

Token 244: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0019713386427611113
    2. 'the' → logprob: -7.126971244812012
    3. ' ' → logprob: -7.751971244812012
    4. ' how' → logprob: -8.251971244812012
    5. ' tokens' → logprob: -8.376971244812012
    6. ' occurrences' → logprob: -9.376971244812012
    7. ' frequencies' → logprob: -10.626971244812012
    8. '_' → logprob: -10.751971244812012
    9. '    ' → logprob: -11.376971244812012
    10. '   ' → logprob: -11.501971244812012

Token 245: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.003981635440140963
    2. 'number' → logprob: -5.753981590270996
    3. ' maximum' → logprob: -8.378981590270996
    4. ' total' → logprob: -8.628981590270996
    5. ' next' → logprob: -8.753981590270996
    6. 's' → logprob: -9.878981590270996
    7. ' frequency' → logprob: -10.128981590270996
    8. ' occurrences' → logprob: -10.753981590270996
    9. ' unique' → logprob: -11.253981590270996
    10. 'n' → logprob: -11.378981590270996

Token 246: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25825124979019165
    2. ' of' → logprob: -2.133251190185547
    3. ')' → logprob: -3.883251190185547
    4. '[' → logprob: -4.008251190185547
    5. ' ' → logprob: -4.133251190185547
    6. '_token' → logprob: -4.133251190185547
    7. '_tokens' → logprob: -4.258251190185547
    8. '_of' → logprob: -4.883251190185547
    9. 'of' → logprob: -5.133251190185547
    10. '    ' → logprob: -6.758251190185547

Token 247: ' contiguous' (ID: 130997)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.40823864936828613
    2. ' subse' → logprob: -1.4082386493682861
    3. ' unique' → logprob: -3.533238649368286
    4. 'sub' → logprob: -3.658238649368286
    5. ' subsets' → logprob: -4.908238410949707
    6. ' pairs' → logprob: -5.408238410949707
    7. ' contiguous' → logprob: -5.533238410949707
    8. ' ways' → logprob: -5.533238410949707
    9. ' elements' → logprob: -5.908238410949707
    10. ' distinct' → logprob: -6.158238410949707

Token 248: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.12623244524002075
    2. ' subse' → logprob: -2.876232385635376
    3. ' segments' → logprob: -3.501232385635376
    4. '_sub' → logprob: -4.626232624053955
    5. ' sequences' → logprob: -4.626232624053955
    6. ' substr' → logprob: -4.751232624053955
    7. 'sub' → logprob: -6.376232624053955
    8. '_' → logprob: -6.501232624053955
    9. ' elements' → logprob: -8.751232147216797
    10. 'segments' → logprob: -9.001232147216797

Token 249: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.015087920241057873
    2. 'array' → logprob: -4.390088081359863
    3. 'strings' → logprob: -6.140088081359863
    4. ' arrays' → logprob: -8.765088081359863
    5. 'se' → logprob: -9.515088081359863
    6. '_arrays' → logprob: -10.015088081359863
    7. 'arr' → logprob: -10.265088081359863
    8. 's' → logprob: -10.390088081359863
    9. 'string' → logprob: -10.390088081359863
    10. 'sequence' → logprob: -10.890088081359863

Token 250: ' where' (ID: 1919)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.291431188583374
    2. '   ' → logprob: -2.166431188583374
    3. ' with' → logprob: -2.916431188583374
    4. ' containing' → logprob: -3.041431188583374
    5. ' where' → logprob: -4.291431427001953
    6. '<|end|>' → logprob: -5.291431427001953
    7. ' whose' → logprob: -6.041431427001953
    8. ' ' → logprob: -6.166431427001953
    9. ',' → logprob: -6.291431427001953
    10. ' such' → logprob: -6.416431427001953

Token 251: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2157253473997116
    2. ' the' → logprob: -1.840725302696228
    3. ' each' → logprob: -4.590725421905518
    4. 'all' → logprob: -4.715725421905518
    5. ' elements' → logprob: -5.215725421905518
    6. 'the' → logprob: -5.715725421905518
    7. '   ' → logprob: -6.090725421905518
    8. ' a' → logprob: -6.215725421905518
    9. 'each' → logprob: -7.090725421905518
    10. 'a' → logprob: -7.340725421905518

Token 252: ' sum' (ID: 4215)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.8123838305473328
    2. ' elements' → logprob: -1.3123838901519775
    3. 'maximum' → logprob: -2.3123838901519775
    4. ' sum' → logprob: -3.0623838901519775
    5. 'max' → logprob: -3.4373838901519775
    6. 'elements' → logprob: -3.6873838901519775
    7. ' minimum' → logprob: -3.9373838901519775
    8. ' product' → logprob: -4.187383651733398
    9. 'minimum' → logprob: -4.437383651733398
    10. 'sum' → logprob: -4.812383651733398

Token 253: ' and' (ID: 326)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.567306399345398
    2. ' is' → logprob: -1.192306399345398
    3. ' <=' → logprob: -3.0673065185546875
    4. '   ' → logprob: -4.1923065185546875
    5. '    ' → logprob: -4.4423065185546875
    6. ' ' → logprob: -4.5673065185546875
    7. '<|end|>' → logprob: -4.5673065185546875
    8. ')' → logprob: -5.4423065185546875
    9. ' equals' → logprob: -5.8173065185546875
    10. ' =' → logprob: -5.8173065185546875

Token 254: '
' (ID: 198)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17884404957294464
    2. 'the' → logprob: -2.0538439750671387
    3. ' length' → logprob: -4.178843975067139
    4. 'length' → logprob: -4.803843975067139
    5. '<|end|>' → logprob: -5.053843975067139
    6. 'max' → logprob: -5.428843975067139
    7. ' maximum' → logprob: -7.928843975067139
    8. ' max' → logprob: -8.678844451904297
    9. 'maximum' → logprob: -9.053844451904297
    10. ' average' → logprob: -9.178844451904297

Token 255: '   ' (ID: 271)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.08959317952394485
    2. ' length' → logprob: -2.9645931720733643
    3. 'the' → logprob: -3.8395931720733643
    4. 'max' → logprob: -5.589593410491943
    5. ' maximum' → logprob: -5.839593410491943
    6. ' max' → logprob: -6.214593410491943
    7. '   ' → logprob: -6.339593410491943
    8. 'length' → logprob: -6.589593410491943
    9. ' minimum' → logprob: -8.089592933654785
    10. ' product' → logprob: -8.464592933654785

Token 256: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6237814426422119
    2. ' length' → logprob: -1.998781442642212
    3. ' the' → logprob: -2.123781442642212
    4. 'length' → logprob: -2.748781442642212
    5. ' maximum' → logprob: -2.873781442642212
    6. ' max' → logprob: -3.248781442642212
    7. 'the' (adapté à ' the') → logprob: -4.248781204223633
    8. 'maximum' → logprob: -4.248781204223633
    9. ' product' → logprob: -4.998781204223633
    10. '   ' → logprob: -5.373781204223633

Token 257: ' bit' (ID: 3546)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.11353426426649094
    2. 'length' → logprob: -2.8635342121124268
    3. ' maximum' → logprob: -3.3635342121124268
    4. 'max' → logprob: -4.988534450531006
    5. ' max' → logprob: -5.863534450531006
    6. 'maximum' → logprob: -5.863534450531006
    7. ' product' → logprob: -6.238534450531006
    8. ' minimum' → logprob: -8.113533973693848
    9. 'minimum' → logprob: -8.738533973693848
    10. ' average' → logprob: -8.863533973693848

Token 258: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.04285392910242081
    2. ' count' → logprob: -4.417853832244873
    3. ' ^' → logprob: -5.167853832244873
    4. 'count' → logprob: -5.417853832244873
    5. ' wise' → logprob: -5.667853832244873
    6. '_' → logprob: -5.792853832244873
    7. '_count' → logprob: -5.917853832244873
    8. '   ' → logprob: -6.167853832244873
    9. ' ' → logprob: -6.792853832244873
    10. 's' → logprob: -6.792853832244873

Token 259: ' XOR' (ID: 147209)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25429102778434753
    2. 'and' → logprob: -1.62929105758667
    3. ' AND' → logprob: -4.37929105758667
    4. ' &' → logprob: -5.00429105758667
    5. ' ' → logprob: -5.12929105758667
    6. '&' → logprob: -6.87929105758667
    7. '_and' → logprob: -7.37929105758667
    8. 'AND' → logprob: -7.62929105758667
    9. '   ' → logprob: -8.004290580749512
    10. ' or' → logprob: -8.379290580749512

Token 260: ' of' (ID: 328)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.2178882211446762
    2. ' ' → logprob: -1.8428882360458374
    3. ' of' → logprob: -3.467888116836548
    4. ' space' → logprob: -6.092888355255127
    5. ' )' → logprob: -7.217888355255127
    6. 'are' → logprob: -7.467888355255127
    7. ' have' → logprob: -7.467888355255127
    8. '   ' → logprob: -7.967888355255127
    9. '<|end|>' → logprob: -8.342887878417969
    10. ')' → logprob: -8.592887878417969

Token 261: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07902583479881287
    2. ' elements' → logprob: -3.0790257453918457
    3. 'the' → logprob: -4.079025745391846
    4. ' all' → logprob: -4.579025745391846
    5. 'elements' → logprob: -7.079025745391846
    6. ' each' → logprob: -7.454025745391846
    7. ' sub' → logprob: -7.829025745391846
    8. ' a' → logprob: -8.204026222229004
    9. ' contiguous' → logprob: -8.579026222229004
    10. ' every' → logprob: -8.829026222229004

Token 262: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.7904291152954102
    2. ' sub' → logprob: -0.9154291152954102
    3. ' elements' → logprob: -2.41542911529541
    4. 'elements' → logprob: -2.91542911529541
    5. ' current' → logprob: -7.16542911529541
    6. ' contiguous' → logprob: -7.41542911529541
    7. 'current' → logprob: -8.29042911529541
    8. ' same' → logprob: -8.41542911529541
    9. 'array' → logprob: -8.91542911529541
    10. 'same' → logprob: -9.54042911529541

Token 263: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.001705175032839179
    2. 'arrays' → logprob: -6.501705169677734
    3. ' array' → logprob: -8.876705169677734
    4. 'arr' → logprob: -10.251705169677734
    5. 'arra' → logprob: -10.751705169677734
    6. ' arrays' → logprob: -13.126705169677734
    7. '_array' → logprob: -13.751705169677734
    8. 'arry' → logprob: -13.876705169677734
    9. 'ar' → logprob: -14.001705169677734
    10. 'a' → logprob: -14.001705169677734

Token 264: ' elements' (ID: 8632)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.056359898298978806
    2. '   ' → logprob: -3.8063600063323975
    3. ' elements' → logprob: -3.8063600063323975
    4. 'are' → logprob: -5.431359767913818
    5. 'elements' → logprob: -6.056359767913818
    6. ' is' → logprob: -6.431359767913818
    7. ' ' → logprob: -7.806359767913818
    8. 's' → logprob: -8.306360244750977
    9. ' sum' → logprob: -8.806360244750977
    10. ',' → logprob: -9.306360244750977

Token 265: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.015191365964710712
    2. '   ' → logprob: -4.640191555023193
    3. ' is' → logprob: -5.640191555023193
    4. 'are' → logprob: -6.890191555023193
    5. ' ' → logprob: -8.015191078186035
    6. '    ' → logprob: -8.515191078186035
    7. ' equal' → logprob: -9.640191078186035
    8. '  ' → logprob: -10.015191078186035
    9. ' equals' → logprob: -10.140191078186035
    10. ')' → logprob: -10.390191078186035

Token 266: ' equal' (ID: 12629)
  Prédit: ' equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.05511876940727234
    2. 'equal' → logprob: -2.9301187992095947
    3. ' the' → logprob: -8.555118560791016
    4. 'the' → logprob: -10.430118560791016
    5. ' identical' → logprob: -12.180118560791016
    6. ' ' → logprob: -13.055118560791016
    7. '_equal' → logprob: -13.055118560791016
    8. 'equ' → logprob: -14.055118560791016
    9. '   ' → logprob: -14.180118560791016
    10. 'e' → logprob: -14.805118560791016

Token 267: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09456058591604233
    2. '():' → logprob: -2.5945606231689453
    3. '   ' → logprob: -4.219560623168945
    4. ':
' → logprob: -8.469560623168945
    5. ' :' → logprob: -8.469560623168945
    6. '):' → logprob: -8.719560623168945
    7. '.' → logprob: -9.719560623168945
    8. ',' → logprob: -9.719560623168945
    9. '()' → logprob: -10.469560623168945
    10. '    
' → logprob: -10.594560623168945

Token 268: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00279323011636734
    2. '
' → logprob: -6.627793312072754
    3. '    
' → logprob: -6.877793312072754
    4. '"""' → logprob: -8.627793312072754
    5. '    ' → logprob: -9.502793312072754
    6. ':' → logprob: -10.252793312072754
    7. '```' → logprob: -10.752793312072754
    8. '\n' → logprob: -10.752793312072754
    9. '  
' → logprob: -10.877793312072754
    10. '   
' → logprob: -11.002793312072754

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005144290626049042
    2. '"""' → logprob: -8.250514030456543
    3. '```' → logprob: -9.750514030456543
    4. '    ' → logprob: -10.000514030456543
    5. '    
' → logprob: -10.125514030456543
    6. ')' → logprob: -10.375514030456543
    7. ' """' → logprob: -10.750514030456543
    8. 'def' → logprob: -10.750514030456543
    9. '
' → logprob: -11.250514030456543
    10. ' """
' → logprob: -12.750514030456543

Token 270: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04106052219867706
    2. '"""' → logprob: -3.541060447692871
    3. '"""
' → logprob: -4.541060447692871
    4. ' """
' → logprob: -8.416060447692871
    5. '    ' → logprob: -9.416060447692871
    6. '
' → logprob: -10.041060447692871
    7. '    
' → logprob: -10.166060447692871
    8. 'arr' → logprob: -10.416060447692871
    9. ' """' → logprob: -10.416060447692871
    10. 'array' → logprob: -10.541060447692871

Token 271: ' function' (ID: 1114)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.19421333074569702
    2. ' remainder' → logprob: -2.944213390350342
    3. ' array' → logprob: -3.069213390350342
    4. ' ' → logprob: -3.444213390350342
    5. '   ' → logprob: -4.944213390350342
    6. ' code' → logprob: -5.069213390350342
    7. ' remaining' → logprob: -5.319213390350342
    8. ' input' → logprob: -5.819213390350342
    9. ' following' → logprob: -6.194213390350342
    10. ' next' → logprob: -6.194213390350342

Token 272: ' reads' (ID: 31523)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036419063806533813
    2. ':' → logprob: -4.161418914794922
    3. '():' → logprob: -4.161418914794922
    4. ' continues' → logprob: -6.661418914794922
    5. ' ' → logprob: -6.786418914794922
    6. ' :' → logprob: -7.661418914794922
    7. ' completes' → logprob: -8.286418914794922
    8. '    ' → logprob: -8.411418914794922
    9. ' reads' → logprob: -8.536418914794922
    10. '()' → logprob: -8.661418914794922

Token 273: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023583196103572845
    2. 'n' → logprob: -4.14858341217041
    3. ' the' → logprob: -5.27358341217041
    4. 'the' → logprob: -6.64858341217041
    5. '()' → logprob: -8.64858341217041
    6. ' an' → logprob: -8.64858341217041
    7. '  ' → logprob: -9.02358341217041
    8. ' ' → logprob: -9.14858341217041
    9. 'def' → logprob: -9.14858341217041
    10. ' n' → logprob: -9.39858341217041

Token 274: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12553811073303223
    2. '():' → logprob: -2.2505381107330322
    3. '(' → logprob: -4.625537872314453
    4. '().' → logprob: -6.750537872314453
    5. ':' → logprob: -7.250537872314453
    6. '()
' → logprob: -7.875537872314453
    7. '(),' → logprob: -8.750537872314453
    8. '   ' → logprob: -9.125537872314453
    9. ' =' → logprob: -9.875537872314453
    10. '(
' → logprob: -10.000537872314453

Token 275: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001091639045625925
    2. '()' → logprob: -7.751091480255127
    3. ')' → logprob: -8.626091957092285
    4. '    
' → logprob: -8.751091957092285
    5. '    ' → logprob: -9.376091957092285
    6. '```' → logprob: -9.876091957092285
    7. 'n' → logprob: -10.001091957092285
    8. '(n' → logprob: -10.626091957092285
    9. '
' → logprob: -11.001091957092285
    10. ',' → logprob: -11.126091957092285

Token 276: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.499027281999588
    2. ' n' → logprob: -1.3740272521972656
    3. 'n' → logprob: -1.9990272521972656
    4. '
' → logprob: -6.624027252197266
    5. '    ' → logprob: -6.624027252197266
    6. ' N' → logprob: -8.374027252197266
    7. '       ' → logprob: -8.499027252197266
    8. ' ' → logprob: -8.499027252197266
    9. 'N' → logprob: -8.624027252197266
    10. '    
' → logprob: -8.624027252197266

Token 277: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6622028350830078
    2. ' n' → logprob: -0.7872028350830078
    3. '   ' → logprob: -4.037202835083008
    4. ' ' → logprob: -4.787202835083008
    5. ')' → logprob: -6.912202835083008
    6. '    ' → logprob: -7.787202835083008
    7. '()' → logprob: -7.787202835083008
    8. '1' → logprob: -8.412202835083008
    9. '  ' → logprob: -8.662202835083008
    10. '2' → logprob: -8.787202835083008

Token 278: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0749226063489914
    2. '=' → logprob: -2.949922561645508
    3. ',' → logprob: -4.449922561645508
    4. '=int' → logprob: -5.199922561645508
    5. '   ' → logprob: -6.449922561645508
    6. ')' → logprob: -8.199922561645508
    7. '<|end|>' → logprob: -8.699922561645508
    8. ':' → logprob: -8.699922561645508
    9. '<|end|>' → logprob: -8.949922561645508
    10. '  ' → logprob: -9.824922561645508

Token 279: ' the' (ID: 290)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9502596855163574
    2. 'n' → logprob: -1.5752596855163574
    3. '<|end|>' → logprob: -2.0752596855163574
    4. '   ' → logprob: -2.2002596855163574
    5. '<|end|>' → logprob: -3.2002596855163574
    6. ')' → logprob: -3.2002596855163574
    7. '()' → logprob: -3.5752596855163574
    8. ' ' → logprob: -3.9502596855163574
    9. '  ' → logprob: -4.325259685516357
    10. '    ' → logprob: -4.825259685516357

Token 280: ' length' (ID: 5517)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.0013696423266083002
    2. ' ' → logprob: -6.876369476318359
    3. ' array' → logprob: -9.12636947631836
    4. ' size' → logprob: -9.50136947631836
    5. ' length' → logprob: -9.75136947631836
    6. 'number' → logprob: -10.75136947631836
    7. ' first' → logprob: -11.00136947631836
    8. ' n' → logprob: -11.25136947631836
    9. ' space' → logprob: -11.87636947631836
    10. '   ' → logprob: -12.00136947631836

Token 281: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3837347626686096
    2. ' of' → logprob: -1.2587347030639648
    3. '=' → logprob: -4.258734703063965
    4. '(n' → logprob: -5.508734703063965
    5. 'of' → logprob: -5.758734703063965
    6. '()' → logprob: -5.758734703063965
    7. ' =' → logprob: -5.883734703063965
    8. '(' → logprob: -5.883734703063965
    9. '    ' → logprob: -7.133734703063965
    10. ')' → logprob: -7.258734703063965

Token 282: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4912703037261963
    2. 'the' → logprob: -0.9912703037261963
    3. ' input' → logprob: -4.616270065307617
    4. 'input' → logprob: -5.116270065307617
    5. ')' → logprob: -7.616270065307617
    6. 'n' → logprob: -8.741270065307617
    7. '(input' → logprob: -9.366270065307617
    8. '   ' → logprob: -9.491270065307617
    9. '()' → logprob: -9.991270065307617
    10. 'array' → logprob: -9.991270065307617

Token 283: ' array' (ID: 2644)
  Prédit: ' array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.002651166869327426
    2. 'array' → logprob: -6.002651214599609
    3. ' input' → logprob: -9.62765121459961
    4. ' ' → logprob: -9.87765121459961
    5. '   ' → logprob: -10.37765121459961
    6. 'arr' → logprob: -12.00265121459961
    7. 'n' → logprob: -12.75265121459961
    8. '"' → logprob: -13.00265121459961
    9. ' n' → logprob: -13.12765121459961
    10. ' list' → logprob: -13.25265121459961

Token 284: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10352413356304169
    2. '
' → logprob: -2.3535242080688477
    3. '    
' → logprob: -6.353524208068848
    4. 'n' → logprob: -7.728524208068848
    5. '  
' → logprob: -8.353524208068848
    6. '       ' → logprob: -8.603524208068848
    7. ',' → logprob: -8.728524208068848
    8. '(n' → logprob: -9.103524208068848
    9. ',
' → logprob: -9.353524208068848
    10. '\n' → logprob: -9.353524208068848

Token 285: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00630522333085537
    2. '
' → logprob: -6.25630521774292
    3. '    
' → logprob: -6.38130521774292
    4. '(n' → logprob: -6.75630521774292
    5. ')' → logprob: -7.75630521774292
    6. '       ' → logprob: -8.006305694580078
    7. ',' → logprob: -8.381305694580078
    8. 'n' → logprob: -9.006305694580078
    9. '\n' → logprob: -9.006305694580078
    10. '  
' → logprob: -9.881305694580078

Token 286: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43516820669174194
    2. '       ' → logprob: -1.0601682662963867
    3. ' s' → logprob: -6.435168266296387
    4. '    ' → logprob: -6.685168266296387
    5. 's' → logprob: -7.060168266296387
    6. ' ' → logprob: -7.560168266296387
    7. '
' → logprob: -7.685168266296387
    8. '        ' → logprob: -8.310168266296387
    9. '#' → logprob: -8.435168266296387
    10. '        
' → logprob: -8.810168266296387

Token 287: ' lis' (ID: 20784)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.28552550077438354
    2. 'arr' → logprob: -1.5355255603790283
    3. ' a' → logprob: -4.285525321960449
    4. 'a' → logprob: -4.535525321960449
    5. ' lst' → logprob: -6.035525321960449
    6. '   ' → logprob: -6.410525321960449
    7. ' array' → logprob: -6.535525321960449
    8. ' A' → logprob: -7.535525321960449
    9. ' n' → logprob: -7.660525321960449
    10. '    ' → logprob: -7.910525321960449

Token 288: ':' (ID: 25)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0011253333650529385
    2. ' =' → logprob: -6.876125335693359
    3. '=' → logprob: -10.12612533569336
    4. ' t' → logprob: -10.75112533569336
    5. '   ' → logprob: -11.37612533569336
    6. ' ' → logprob: -12.62612533569336
    7. '
' → logprob: -12.87612533569336
    8. ')' → logprob: -12.87612533569336
    9. '_t' → logprob: -13.25112533569336
    10. ',' → logprob: -13.50112533569336

Token 289: ' the' (ID: 290)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.02064034342765808
    2. 'get' → logprob: -3.8956403732299805
    3. ' list' → logprob: -9.39564037322998
    4. '[get' → logprob: -11.89564037322998
    5. 'list' → logprob: -12.77064037322998
    6. ' [' → logprob: -13.14564037322998
    7. '=get' → logprob: -14.14564037322998
    8. ' []' → logprob: -14.14564037322998
    9. ' ' → logprob: -14.64564037322998
    10. ' input' → logprob: -14.64564037322998

Token 290: ' array' (ID: 2644)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4604668617248535
    2. ' array' → logprob: -1.8354668617248535
    3. ' [' → logprob: -2.7104668617248535
    4. '[' → logprob: -2.9604668617248535
    5. ' n' → logprob: -3.3354668617248535
    6. ' ' → logprob: -3.7104668617248535
    7. '[]' → logprob: -4.3354668617248535
    8. ' []' → logprob: -5.0854668617248535
    9. ' get' → logprob: -5.4604668617248535
    10. 'n' → logprob: -6.2104668617248535

Token 291: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07705836743116379
    2. '
' → logprob: -2.9520583152770996
    3. '    
' → logprob: -4.9520583152771
    4. ' =' → logprob: -5.0770583152771
    5. ')' → logprob: -6.4520583152771
    6. ':' → logprob: -7.0770583152771
    7. '[n' → logprob: -7.0770583152771
    8. '  
' → logprob: -7.4520583152771
    9. 'def' → logprob: -7.5770583152771
    10. '```' → logprob: -7.9520583152771

Token 292: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.14424733817577362
    2. 'inte' → logprob: -2.64424729347229
    3. ' n' → logprob: -3.76924729347229
    4. 'ints' → logprob: -4.144247531890869
    5. 'n' → logprob: -4.144247531890869
    6. 'int' → logprob: -5.144247531890869
    7. 'elements' → logprob: -7.019247531890869
    8. ' elements' → logprob: -7.019247531890869
    9. ' ints' → logprob: -8.519247055053711
    10. 'numbers' → logprob: -8.769247055053711

Token 293: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30228257179260254
    2. '
' → logprob: -1.5522825717926025
    3. '    
' → logprob: -3.0522825717926025
    4. 'n' → logprob: -7.802282333374023
    5. '  
' → logprob: -8.427282333374023
    6. '\n' → logprob: -8.802282333374023
    7. '(n' → logprob: -8.927282333374023
    8. ')' → logprob: -8.927282333374023
    9. '```' → logprob: -9.052282333374023
    10. ':' → logprob: -9.177282333374023

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035520815290510654
    2. ')' → logprob: -6.503551959991455
    3. '
' → logprob: -6.878551959991455
    4. '    
' → logprob: -7.503551959991455
    5. 'def' → logprob: -8.253552436828613
    6. '"""' → logprob: -9.753552436828613
    7. '```' → logprob: -9.878552436828613
    8. '       ' → logprob: -10.378552436828613
    9. '):' → logprob: -10.503552436828613
    10. '    ' → logprob: -12.253552436828613

Token 295: ' Logic' (ID: 61151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005862309597432613
    2. '    
' → logprob: -6.255862236022949
    3. '    ' → logprob: -6.630862236022949
    4. '
' → logprob: -6.755862236022949
    5. 'def' → logprob: -7.005862236022949
    6. 'n' → logprob: -8.50586223602295
    7. ')' → logprob: -9.25586223602295
    8. 'The' → logprob: -10.00586223602295
    9. '"""' → logprob: -10.00586223602295
    10. '```' → logprob: -10.75586223602295

Token 296: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7274450659751892
    2. ':' → logprob: -1.602445125579834
    3. '   ' → logprob: -1.852445125579834
    4. '=' → logprob: -1.852445125579834
    5. ' :' → logprob: -7.727445125579834
    6. '       ' → logprob: -8.102444648742676
    7. ' ' → logprob: -8.477444648742676
    8. '    
' → logprob: -8.602444648742676
    9. '    ' → logprob: -9.102444648742676
    10. '  ' → logprob: -9.477444648742676

Token 297: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01791028305888176
    2. '    ' → logprob: -4.142910480499268
    3. '    
' → logprob: -6.767910480499268
    4. '
' → logprob: -7.642910480499268
    5. '       ' → logprob: -9.01791000366211
    6. '    
    
' → logprob: -10.89291000366211
    7. '  ' → logprob: -11.14291000366211
    8. 'def' → logprob: -11.26791000366211
    9. '     
' → logprob: -11.39291000366211
    10. '```' → logprob: -11.39291000366211

Token 298: ' Uses' (ID: 69986)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0470887422561646
    2. 'n' → logprob: -1.1720887422561646
    3. ' n' → logprob: -1.1720887422561646
    4. 'l' → logprob: -4.172088623046875
    5. ' l' → logprob: -5.297088623046875
    6. ' left' → logprob: -6.547088623046875
    7. '#' → logprob: -6.797088623046875
    8. ' #' → logprob: -6.797088623046875
    9. 'left' → logprob: -6.797088623046875
    10. '    ' → logprob: -7.547088623046875

Token 299: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6671465039253235
    2. ' two' → logprob: -0.9171465039253235
    3. 'two' → logprob: -3.0421464443206787
    4. 'a' → logprob: -3.4171464443206787
    5. ' the' → logprob: -5.292146682739258
    6. '   ' → logprob: -6.667146682739258
    7. 'the' → logprob: -8.542146682739258
    8. ' sliding' → logprob: -9.792146682739258
    9. 'sl' → logprob: -10.042146682739258
    10. '       ' → logprob: -12.167146682739258

Token 300: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.20566926896572113
    2. ' two' → logprob: -1.7056692838668823
    3. 'sl' → logprob: -6.205669403076172
    4. '   ' → logprob: -6.330669403076172
    5. ' sliding' → logprob: -8.705669403076172
    6. '
' → logprob: -10.080669403076172
    7. ' "' → logprob: -10.080669403076172
    8. '2' → logprob: -10.205669403076172
    9. '"' → logprob: -10.205669403076172
    10. 'Two' → logprob: -10.455669403076172

Token 301: '-pointer' (ID: 94894)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13726192712783813
    2. ' _' → logprob: -3.1372618675231934
    3. '_pointer' → logprob: -3.3872618675231934
    4. '-pointer' → logprob: -3.6372618675231934
    5. '_p' → logprob: -4.262261867523193
    6. ' ' → logprob: -5.512261867523193
    7. 'pointer' → logprob: -6.012261867523193
    8. '-' → logprob: -6.637261867523193
    9. ' pointer' → logprob: -7.137261867523193
    10. '_ptr' → logprob: -7.637261867523193

Token 302: ' technique' (ID: 16410)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.040083516389131546
    2. ' technique' → logprob: -3.290083408355713
    3. ' ' → logprob: -6.540083408355713
    4. ' method' → logprob: -8.290083885192871
    5. '
' → logprob: -9.665083885192871
    6. 'appro' → logprob: -9.915083885192871
    7. '   ' → logprob: -10.415083885192871
    8. ' /' → logprob: -10.540083885192871
    9. ' s' → logprob: -10.540083885192871
    10. ' sliding' → logprob: -10.665083885192871

Token 303: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6528313159942627
    2. '   ' → logprob: -0.7778313159942627
    3. '       ' → logprob: -5.402831077575684
    4. ',' → logprob: -5.652831077575684
    5. ' approach' → logprob: -6.152831077575684
    6. '    ' → logprob: -6.402831077575684
    7. ' with' → logprob: -6.527831077575684
    8. ' for' → logprob: -6.652831077575684
    9. ' ' → logprob: -6.777831077575684
    10. ' (' → logprob: -7.152831077575684

Token 304: ' maintain' (ID: 12930)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.873689591884613
    2. 'expand' → logprob: -1.3736896514892578
    3. 'extend' → logprob: -2.498689651489258
    4. ' extend' → logprob: -2.623689651489258
    5. 'find' → logprob: -2.623689651489258
    6. ' expand' → logprob: -2.873689651489258
    7. '   ' → logprob: -4.123689651489258
    8. '       ' → logprob: -4.748689651489258
    9. ' move' → logprob: -5.248689651489258
    10. ' maintain' → logprob: -5.748689651489258

Token 305: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10592709481716156
    2. ' the' → logprob: -2.605926990509033
    3. 'a' → logprob: -4.230926990509033
    4. ' two' → logprob: -5.230926990509033
    5. '   ' → logprob: -5.730926990509033
    6. 'the' → logprob: -6.355926990509033
    7. '       ' → logprob: -7.980926990509033
    8. ' an' → logprob: -8.230927467346191
    9. ' pointers' → logprob: -8.480927467346191
    10. '```' → logprob: -8.605927467346191

Token 306: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.05974610149860382
    2. 'valid' → logprob: -3.434746026992798
    3. 'sl' → logprob: -4.059746265411377
    4. ' window' → logprob: -5.559746265411377
    5. 'current' → logprob: -6.684746265411377
    6. 'running' → logprob: -7.184746265411377
    7. 'sub' → logprob: -7.684746265411377
    8. ' sliding' → logprob: -8.059745788574219
    9. ' valid' → logprob: -8.184745788574219
    10. 'continuous' → logprob: -8.434745788574219

Token 307: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7766028046607971
    2. ' ' → logprob: -2.0266027450561523
    3. ',' → logprob: -2.1516027450561523
    4. ' that' → logprob: -2.5266027450561523
    5. '=' → logprob: -2.9016027450561523
    6. ' =' → logprob: -3.2766027450561523
    7. '    ' → logprob: -3.9016027450561523
    8. '  ' → logprob: -4.026602745056152
    9. ')' → logprob: -4.026602745056152
    10. '[]' → logprob: -4.401602745056152

Token 308: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24506203830242157
    2. 'left' → logprob: -1.995061993598938
    3. 'i' → logprob: -3.3700621128082275
    4. ' l' → logprob: -3.8700621128082275
    5. ' left' → logprob: -4.120061874389648
    6. 'start' → logprob: -5.745061874389648
    7. '   ' → logprob: -6.120061874389648
    8. ' i' → logprob: -6.745061874389648
    9. 'L' → logprob: -6.995061874389648
    10. 'j' → logprob: -7.245061874389648

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47595465183258057
    2. ' ,' → logprob: -0.9759546518325806
    3. ',r' → logprob: -6.975954532623291
    4. ',right' → logprob: -7.975954532623291
    5. ',
' → logprob: -8.22595500946045
    6. ' ' → logprob: -9.22595500946045
    7. ' ,
' → logprob: -9.97595500946045
    8. ']' → logprob: -10.47595500946045
    9. '   ' → logprob: -10.60095500946045
    10. ',i' → logprob: -10.97595500946045

Token 310: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03366667777299881
    2. ' r' → logprob: -3.4086666107177734
    3. '   ' → logprob: -11.408666610717773
    4. 'l' → logprob: -13.533666610717773
    5. ' ' → logprob: -13.533666610717773
    6. '       ' → logprob: -14.033666610717773
    7. '
' → logprob: -14.033666610717773
    8. '    ' → logprob: -14.158666610717773
    9. '     ' → logprob: -14.408666610717773
    10. '	r' → logprob: -14.408666610717773

Token 311: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02246900461614132
    2. '+' → logprob: -4.1474690437316895
    3. ')' → logprob: -5.3974690437316895
    4. ']
' → logprob: -6.8974690437316895
    5. ' ]' → logprob: -8.147468566894531
    6. ' +' → logprob: -8.272468566894531
    7. '   ' → logprob: -8.897468566894531
    8. ']+' → logprob: -10.272468566894531
    9. '       ' → logprob: -10.897468566894531
    10. '],' → logprob: -11.022468566894531

Token 312: ' where' (ID: 1919)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.5197510719299316
    2. '   ' → logprob: -1.5197510719299316
    3. '       ' → logprob: -2.7697510719299316
    4. ' with' → logprob: -4.019751071929932
    5. 'that' → logprob: -4.144751071929932
    6. ' where' → logprob: -4.269751071929932
    7. ' such' → logprob: -4.394751071929932
    8. ' and' → logprob: -4.394751071929932
    9. ',' → logprob: -4.519751071929932
    10. ' to' → logprob: -4.769751071929932

Token 313: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6235744953155518
    2. 'the' → logprob: -2.4985744953155518
    3. '   ' → logprob: -2.6235744953155518
    4. 'sum' → logprob: -2.7485744953155518
    5. 'arr' → logprob: -2.8735744953155518
    6. ' arr' → logprob: -3.3735744953155518
    7. ' lis' → logprob: -3.4985744953155518
    8. 'lis' → logprob: -3.4985744953155518
    9. ' sum' → logprob: -4.123574256896973
    10. 'xor' → logprob: -4.498574256896973

Token 314: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.2088322639465332
    2. 'sum' → logprob: -1.5838322639465332
    3. ' current' → logprob: -1.7088322639465332
    4. '   ' → logprob: -2.583832263946533
    5. ' while' → logprob: -3.458832263946533
    6. 'r' → logprob: -3.708832263946533
    7. ' elements' → logprob: -3.708832263946533
    8. 's' → logprob: -4.208832263946533
    9. 'while' → logprob: -4.458832263946533
    10. 'current' → logprob: -4.458832263946533

Token 315: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.224457025527954
    2. '=' → logprob: -1.724457025527954
    3. ' and' → logprob: -1.849457025527954
    4. ' ==' → logprob: -2.599457025527954
    5. '_' → logprob: -2.849457025527954
    6. ' <=' → logprob: -2.974457025527954
    7. '   ' → logprob: -3.099457025527954
    8. ' +=' → logprob: -3.224457025527954
    9. ' +' → logprob: -4.099456787109375
    10. 'and' → logprob: -4.099456787109375

Token 316: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5429974794387817
    2. 'r' → logprob: -1.6679974794387817
    3. ' xor' → logprob: -2.292997360229492
    4. ' r' → logprob: -2.667997360229492
    5. '   ' → logprob: -4.292997360229492
    6. ')' → logprob: -4.292997360229492
    7. ' the' → logprob: -4.667997360229492
    8. ' XOR' → logprob: -4.667997360229492
    9. 'X' → logprob: -5.417997360229492
    10. ' ' → logprob: -5.917997360229492

Token 317: '
' (ID: 198)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.34301838278770447
    2. ' of' → logprob: -1.4680184125900269
    3. 'are' → logprob: -4.093018531799316
    4. '   ' → logprob: -4.468018531799316
    5. ' values' → logprob: -4.468018531799316
    6. 'of' → logprob: -4.843018531799316
    7. ')' → logprob: -5.593018531799316
    8. ' ' → logprob: -6.343018531799316
    9. 'values' → logprob: -6.468018531799316
    10. 's' → logprob: -6.593018531799316

Token 318: '       ' (ID: 309)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5209280252456665
    2. ' of' → logprob: -1.3959280252456665
    3. ')' → logprob: -3.020927906036377
    4. ' ' → logprob: -3.270927906036377
    5. '   ' → logprob: -3.520927906036377
    6. 'of' → logprob: -4.270927906036377
    7. '=' → logprob: -4.895927906036377
    8. 'are' → logprob: -5.395927906036377
    9. ' =' → logprob: -5.770927906036377
    10. '_' → logprob: -6.020927906036377

Token 319: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.14668430387973785
    2. ' of' → logprob: -2.896684408187866
    3. 'are' (adapté à ' are') → logprob: -3.021684408187866
    4. ')' → logprob: -3.771684408187866
    5. 'of' → logprob: -5.021684169769287
    6. '   ' → logprob: -6.521684169769287
    7. ' ' → logprob: -7.896684169769287
    8. ' values' → logprob: -8.271684646606445
    9. ' )' → logprob: -8.646684646606445
    10. 'values' → logprob: -8.896684646606445

Token 320: ' equal' (ID: 12629)
  Prédit: ' equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.044261105358600616
    2. 'equal' → logprob: -3.1692612171173096
    3. ' maintained' → logprob: -6.9192609786987305
    4. ' always' → logprob: -9.16926097869873
    5. ' kept' → logprob: -10.16926097869873
    6. 'maint' → logprob: -10.66926097869873
    7. ' ' → logprob: -10.91926097869873
    8. '   ' → logprob: -10.91926097869873
    9. '_equal' → logprob: -10.91926097869873
    10. '    ' → logprob: -11.41926097869873

Token 321: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19598877429962158
    2. ',' → logprob: -2.570988655090332
    3. '.' → logprob: -2.570988655090332
    4. '       ' → logprob: -4.445988655090332
    5. ',
' → logprob: -5.570988655090332
    6. ' and' → logprob: -5.695988655090332
    7. ':' → logprob: -6.445988655090332
    8. '.
' → logprob: -6.570988655090332
    9. ' at' → logprob: -7.445988655090332
    10. '    
' → logprob: -7.570988655090332

Token 322: ' Ext' (ID: 13703)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07641749083995819
    2. '    
' → logprob: -3.3264174461364746
    3. '
' → logprob: -3.4514174461364746
    4. '       ' → logprob: -5.826417446136475
    5. '        
' → logprob: -7.451417446136475
    6. '   
' → logprob: -8.201417922973633
    7. '  
' → logprob: -8.326417922973633
    8. ',' → logprob: -8.326417922973633
    9. '    ' → logprob: -8.451417922973633
    10. ' 
' → logprob: -8.451417922973633

Token 323: 'ends' (ID: 1847)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07369054108858109
    2. 'ends' → logprob: -2.82369065284729
    3. 'ended' → logprob: -4.698690414428711
    4. 'e' → logprob: -7.573690414428711
    5. '```' → logprob: -7.573690414428711
    6. '   ' → logprob: -7.948690414428711
    7. 'r' → logprob: -8.573690414428711
    8. 'ende' → logprob: -9.198690414428711
    9. '...' → logprob: -9.323690414428711
    10. 'endl' → logprob: -9.323690414428711

Token 324: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.05840454250574112
    2. 'r' → logprob: -3.4334044456481934
    3. ' the' → logprob: -4.183404445648193
    4. '   ' → logprob: -5.058404445648193
    5. '    ' → logprob: -6.433404445648193
    6. '(r' → logprob: -7.558404445648193
    7. ' ' → logprob: -8.933404922485352
    8. ')' → logprob: -9.433404922485352
    9. 'the' → logprob: -9.558404922485352
    10. '       ' → logprob: -9.558404922485352

Token 325: ' as' (ID: 472)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9281478524208069
    2. ' +' → logprob: -1.303147792816162
    3. '+' → logprob: -1.928147792816162
    4. ')' → logprob: -2.803147792816162
    5. '+=' → logprob: -3.053147792816162
    6. '    ' → logprob: -4.303147792816162
    7. ' <' → logprob: -4.303147792816162
    8. '   ' → logprob: -4.553147792816162
    9. ' <=' → logprob: -4.803147792816162
    10. 'while' → logprob: -5.303147792816162

Token 326: ' long' (ID: 1701)
  Prédit: ' long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' long' → logprob: -0.28878694772720337
    2. 'long' → logprob: -1.7887868881225586
    3. ' much' → logprob: -2.7887868881225586
    4. ' far' → logprob: -4.538786888122559
    5. 'much' → logprob: -4.663786888122559
    6. 'far' → logprob: -6.538786888122559
    7. '    ' → logprob: -8.663786888122559
    8. '	long' → logprob: -9.163786888122559
    9. '1' → logprob: -9.413786888122559
    10. ' ' → logprob: -10.163786888122559

Token 327: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.030818799510598183
    2. '    ' → logprob: -4.030818939208984
    3. 'as' → logprob: -5.655818939208984
    4. ')' → logprob: -5.780818939208984
    5. '   ' → logprob: -5.905818939208984
    6. ' ' → logprob: -7.030818939208984
    7. ' )' → logprob: -7.405818939208984
    8. '       ' → logprob: -7.905818939208984
    9. '_' → logprob: -8.030818939208984
    10. '  ' → logprob: -8.655818939208984

Token 328: ' the' (ID: 290)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6666242480278015
    2. ' r' → logprob: -1.0416243076324463
    3. ' sum' → logprob: -2.9166243076324463
    4. 'sum' → logprob: -3.1666243076324463
    5. ' lis' → logprob: -3.6666243076324463
    6. 'lis' → logprob: -5.666624069213867
    7. ' (' → logprob: -6.916624069213867
    8. '   ' → logprob: -6.916624069213867
    9. '(sum' → logprob: -6.916624069213867
    10. '(r' → logprob: -7.166624069213867

Token 329: ' property' (ID: 4322)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.40262168645858765
    2. 'sum' → logprob: -1.2776217460632324
    3. 'r' → logprob: -4.277621746063232
    4. ' current' → logprob: -4.527621746063232
    5. ' next' → logprob: -4.527621746063232
    6. ' r' → logprob: -5.652621746063232
    7. 's' → logprob: -6.277621746063232
    8. ' s' → logprob: -6.777621746063232
    9. '   ' → logprob: -6.777621746063232
    10. ' ' → logprob: -6.902621746063232

Token 330: ' holds' (ID: 18305)
  Prédit: ' holds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' holds' → logprob: -0.009788197465240955
    2. 'holds' → logprob: -5.1347880363464355
    3. ' is' → logprob: -6.0097880363464355
    4. ' ' → logprob: -7.1347880363464355
    5. '_' → logprob: -8.759788513183594
    6. ')' → logprob: -9.134788513183594
    7. '   ' → logprob: -9.384788513183594
    8. 's' → logprob: -9.384788513183594
    9. 'is' → logprob: -10.634788513183594
    10. 'hold' → logprob: -10.634788513183594

Token 331: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3609359860420227
    2. ',' → logprob: -1.985935926437378
    3. '       ' → logprob: -2.110935926437378
    4. '.' → logprob: -3.610935926437378
    5. ' and' → logprob: -4.485936164855957
    6. ' while' → logprob: -6.735936164855957
    7. ' ,' → logprob: -7.110936164855957
    8. ':' → logprob: -7.235936164855957
    9. '
' → logprob: -7.235936164855957
    10. '    ' → logprob: -7.235936164855957

Token 332: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2559409737586975
    2. ' then' → logprob: -2.2559409141540527
    3. ' and' → logprob: -2.3809409141540527
    4. '   ' → logprob: -4.255940914154053
    5. ' while' → logprob: -5.755940914154053
    6. '        
' → logprob: -6.255940914154053
    7. 'and' → logprob: -6.505940914154053
    8. '    ' → logprob: -6.755940914154053
    9. ',' → logprob: -6.880940914154053
    10. '    
' → logprob: -7.005940914154053

Token 333: ' increments' (ID: 124105)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6755051612854004
    2. ' break' → logprob: -1.3005051612854004
    3. '           ' → logprob: -2.5505051612854004
    4. ' r' → logprob: -2.9255051612854004
    5. 'r' → logprob: -3.1755051612854004
    6. 'break' → logprob: -3.4255051612854004
    7. '   ' → logprob: -5.3005051612854
    8. ' l' → logprob: -5.6755051612854
    9. '        ' → logprob: -6.3005051612854
    10. '    ' → logprob: -6.5505051612854

Token 334: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20145785808563232
    2. ' l' → logprob: -1.7014578580856323
    3. '	l' → logprob: -10.826457977294922
    4. '   ' → logprob: -10.951457977294922
    5. 'r' → logprob: -12.201457977294922
    6. ' ' → logprob: -14.201457977294922
    7. '```' → logprob: -14.826457977294922
    8. '    ' → logprob: -14.826457977294922
    9. ' r' → logprob: -15.576457977294922
    10. '	' → logprob: -16.201457977294922

Token 335: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04371524974703789
    2. ':' → logprob: -3.293715238571167
    3. '):' → logprob: -6.668715476989746
    4. '.' → logprob: -6.793715476989746
    5. '    
' → logprob: -7.043715476989746
    6. ',' → logprob: -7.293715476989746
    7. ')' → logprob: -7.918715476989746
    8. '
' → logprob: -8.043715476989746
    9. '    ' → logprob: -8.293715476989746
    10. '       ' → logprob: -8.543715476989746

Token 336: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002579343970865011
    2. '
' → logprob: -6.752579212188721
    3. '    
' → logprob: -7.002579212188721
    4. ')' → logprob: -9.127579689025879
    5. ':' → logprob: -9.627579689025879
    6. '    ' → logprob: -9.877579689025879
    7. '       ' → logprob: -10.127579689025879
    8. '):' → logprob: -10.252579689025879
    9. '  
' → logprob: -10.377579689025879
    10. '```' → logprob: -10.377579689025879

Token 337: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06599770486354828
    2. '
' → logprob: -3.19099760055542
    3. '    
' → logprob: -3.94099760055542
    4. '\n' → logprob: -6.31599760055542
    5. '       ' → logprob: -7.56599760055542
    6. '    ' → logprob: -8.315998077392578
    7. '        
' → logprob: -8.565998077392578
    8. '  
' → logprob: -8.940998077392578
    9. '"""' → logprob: -9.315998077392578
    10. ':' → logprob: -9.815998077392578

Token 338: ' every' (ID: 1753)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.024055683985352516
    2. 'r' → logprob: -3.8990557193756104
    3. ' ' → logprob: -6.274055480957031
    4. ' l' → logprob: -6.524055480957031
    5. ' _' → logprob: -9.149055480957031
    6. ' each' → logprob: -11.399055480957031
    7. 'l' → logprob: -11.649055480957031
    8. ' i' → logprob: -12.149055480957031
    9. ' ' → logprob: -12.399055480957031
    10. ' )' → logprob: -12.649055480957031

Token 339: ' valid' (ID: 4529)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04743856191635132
    2. 'r' → logprob: -3.547438621520996
    3. ' ' → logprob: -4.797438621520996
    4. ' _' → logprob: -5.922438621520996
    5. ' l' → logprob: -6.172438621520996
    6. ' valid' → logprob: -6.297438621520996
    7. '_' → logprob: -6.672438621520996
    8. ' space' → logprob: -7.172438621520996
    9. ' )' → logprob: -9.172438621520996
    10. ' position' → logprob: -9.297438621520996

Token 340: ' window' (ID: 5734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07207689434289932
    2. ' r' → logprob: -4.072076797485352
    3. 'r' → logprob: -4.197076797485352
    4. ' sub' → logprob: -4.697076797485352
    5. '_' → logprob: -4.822076797485352
    6. ' l' → logprob: -5.322076797485352
    7. ' window' → logprob: -5.947076797485352
    8. ')' → logprob: -6.072076797485352
    9. ' _' → logprob: -6.197076797485352
    10. ' )' → logprob: -6.947076797485352

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09986216574907303
    2. ':' → logprob: -2.7248620986938477
    3. '   ' → logprob: -4.224862098693848
    4. '[' → logprob: -5.974862098693848
    5. '_' → logprob: -6.224862098693848
    6. ' ,' → logprob: -6.224862098693848
    7. 's' → logprob: -6.599862098693848
    8. ' ' → logprob: -6.724862098693848
    9. '):' → logprob: -6.974862098693848
    10. '_,' → logprob: -7.099862098693848

Token 342: ' counts' (ID: 28991)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.31366434693336487
    2. ' result' → logprob: -2.563664436340332
    3. ' r' → logprob: -2.813664436340332
    4. ' res' → logprob: -3.063664436340332
    5. ' he' → logprob: -3.438664436340332
    6. ' answer' → logprob: -4.063664436340332
    7. '   ' → logprob: -4.563664436340332
    8. '    ' → logprob: -4.688664436340332
    9. 'result' → logprob: -5.188664436340332
    10. 'ans' → logprob: -5.438664436340332

Token 343: ' the' (ID: 290)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03467782214283943
    2. '+=' → logprob: -4.034677982330322
    3. '    ' → logprob: -4.909677982330322
    4. '(r' → logprob: -6.284677982330322
    5. ' ' → logprob: -6.409677982330322
    6. ' (' → logprob: -6.909677982330322
    7. ' +' → logprob: -7.159677982330322
    8. ' the' → logprob: -7.159677982330322
    9. '   ' → logprob: -7.534677982330322
    10. '(' → logprob: -7.784677982330322

Token 344: ' number' (ID: 2086)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7154546976089478
    2. ' number' → logprob: -1.2154546976089478
    3. 'number' → logprob: -1.9654546976089478
    4. ' valid' → logprob: -3.840454578399658
    5. ' +=' → logprob: -4.340454578399658
    6. ' ' → logprob: -4.465454578399658
    7. ' r' → logprob: -5.340454578399658
    8. 'length' → logprob: -5.465454578399658
    9. 'valid' → logprob: -5.965454578399658
    10. 'result' → logprob: -6.340454578399658

Token 345: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.129643201828003
    2. '_' → logprob: -1.254643201828003
    3. '_of' → logprob: -2.004643201828003
    4. 'of' → logprob: -2.004643201828003
    5. ')' → logprob: -3.004643201828003
    6. ' ' → logprob: -4.129643440246582
    7. '[' → logprob: -4.129643440246582
    8. 's' → logprob: -4.504643440246582
    9. '_tokens' → logprob: -5.004643440246582
    10. '_token' → logprob: -6.004643440246582

Token 346: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.3204827904701233
    2. ' sub' → logprob: -1.6954827308654785
    3. ' valid' → logprob: -2.8204827308654785
    4. 'valid' → logprob: -3.6954827308654785
    5. ' new' → logprob: -5.8204827308654785
    6. 'new' → logprob: -6.6954827308654785
    7. 'r' → logprob: -6.8204827308654785
    8. '```' → logprob: -8.070483207702637
    9. ' r' → logprob: -8.195483207702637
    10. ')' → logprob: -9.320483207702637

Token 347: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.08428441733121872
    2. 'array' → logprob: -2.5842843055725098
    3. 'arr' → logprob: -5.83428430557251
    4. ' arrays' → logprob: -6.58428430557251
    5. '_arrays' → logprob: -7.45928430557251
    6. '   ' → logprob: -8.584284782409668
    7. 'ar' → logprob: -9.709284782409668
    8. '_arr' → logprob: -9.834284782409668
    9. '_array' → logprob: -9.834284782409668
    10. '_' → logprob: -10.084284782409668

Token 348: ' ending' (ID: 22013)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4724498391151428
    2. ' +=' → logprob: -2.972449779510498
    3. ' that' → logprob: -2.972449779510498
    4. '       ' → logprob: -3.222449779510498
    5. ' =' → logprob: -3.222449779510498
    6. 'with' → logprob: -3.347449779510498
    7. '
' → logprob: -3.597449779510498
    8. ' with' → logprob: -3.722449779510498
    9. ')' → logprob: -4.347449779510498
    10. ' 
' → logprob: -4.597449779510498

Token 349: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.214340478181839
    2. ' at' → logprob: -1.7143404483795166
    3. 'r' → logprob: -4.839340686798096
    4. '   ' → logprob: -6.214340686798096
    5. ')' → logprob: -7.214340686798096
    6. ' ' → logprob: -7.839340686798096
    7. '_at' → logprob: -7.839340686798096
    8. '    ' → logprob: -7.964340686798096
    9. ' r' → logprob: -8.464340209960938
    10. '=' → logprob: -8.464340209960938

Token 350: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6330495476722717
    2. 'r' → logprob: -0.7580495476722717
    3. ' ' → logprob: -8.008049964904785
    4. '    ' → logprob: -11.008049964904785
    5. ' )' → logprob: -11.383049964904785
    6. '   ' → logprob: -11.508049964904785
    7. ' the' → logprob: -11.633049964904785
    8. ')' → logprob: -11.633049964904785
    9. ' `' → logprob: -11.758049964904785
    10. ' 
' → logprob: -11.758049964904785

Token 351: ' that' (ID: 484)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7718767523765564
    2. '   ' → logprob: -1.3968768119812012
    3. '+' → logprob: -1.7718768119812012
    4. ')' → logprob: -3.021876811981201
    5. '```' → logprob: -4.771876811981201
    6. ',' → logprob: -4.896876811981201
    7. ' that' → logprob: -5.146876811981201
    8. '_' → logprob: -5.396876811981201
    9. '       ' → logprob: -5.521876811981201
    10. '
' → logprob: -5.521876811981201

Token 352: ' start' (ID: 1604)
  Prédit: ' include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' include' → logprob: -0.032193589955568314
    2. ' can' → logprob: -4.407193660736084
    3. ' contain' → logprob: -4.532193660736084
    4. ' have' → logprob: -6.032193660736084
    5. 'include' → logprob: -6.032193660736084
    6. ' includes' → logprob: -6.407193660736084
    7. ' ' → logprob: -7.282193660736084
    8. ' start' → logprob: -7.407193660736084
    9. ' satisfy' → logprob: -8.282193183898926
    10. ' contains' → logprob: -8.782193183898926

Token 353: ' from' (ID: 591)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.21866467595100403
    2. 'at' → logprob: -1.9686646461486816
    3. '=' → logprob: -3.8436646461486816
    4. ')' → logprob: -4.218664646148682
    5. '    ' → logprob: -5.343664646148682
    6. ' ' → logprob: -5.843664646148682
    7. 'from' → logprob: -6.093664646148682
    8. '_' → logprob: -6.093664646148682
    9. ' =' → logprob: -6.468664646148682
    10. ' )' → logprob: -6.718664646148682

Token 354: ' [' (ID: 723)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5311676859855652
    2. 'l' → logprob: -0.9061676859855652
    3. '    ' → logprob: -5.656167507171631
    4. 'r' → logprob: -6.281167507171631
    5. ' r' → logprob: -6.656167507171631
    6. '   ' → logprob: -7.281167507171631
    7. ' the' → logprob: -8.656167984008789
    8. ' ' → logprob: -8.781167984008789
    9. '	l' → logprob: -9.281167984008789
    10. ')' → logprob: -10.406167984008789

Token 355: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.38791993260383606
    2. ' l' → logprob: -1.1379199028015137
    3. '   ' → logprob: -7.512919902801514
    4. '    ' → logprob: -9.012920379638672
    5. ' ' → logprob: -9.262920379638672
    6. ' ]' → logprob: -10.012920379638672
    7. ',' → logprob: -10.137920379638672
    8. ')' → logprob: -10.137920379638672
    9. 'r' → logprob: -10.262920379638672
    10. '	l' → logprob: -10.512920379638672

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2969501316547394
    2. ' ,' → logprob: -1.546950101852417
    3. ' ]' → logprob: -3.671950101852417
    4. ']' → logprob: -4.421950340270996
    5. '   ' → logprob: -6.546950340270996
    6. ',r' → logprob: -6.671950340270996
    7. ' +' → logprob: -6.921950340270996
    8. ' ' → logprob: -7.296950340270996
    9. ',
' → logprob: -7.921950340270996
    10. '+' → logprob: -8.171950340270996

Token 357: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11354522407054901
    2. ' r' → logprob: -2.2385451793670654
    3. ' ' → logprob: -8.238545417785645
    4. '    ' → logprob: -8.738545417785645
    5. ',' → logprob: -9.238545417785645
    6. '0' → logprob: -10.238545417785645
    7. '...' → logprob: -10.363545417785645
    8. ')' → logprob: -10.613545417785645
    9. '   ' → logprob: -10.863545417785645
    10. ']' → logprob: -11.488545417785645

Token 358: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13267138600349426
    2. ']' → logprob: -2.132671356201172
    3. ')]' → logprob: -6.007671356201172
    4. ').' → logprob: -6.757671356201172
    5. '+' → logprob: -7.382671356201172
    6. ' )' → logprob: -7.632671356201172
    7. '-' → logprob: -8.507671356201172
    8. '])' → logprob: -8.757671356201172
    9. '].' → logprob: -9.257671356201172
    10. '   ' → logprob: -9.507671356201172

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0066460915841162205
    2. '    
' → logprob: -6.006646156311035
    3. ':' → logprob: -6.256646156311035
    4. '
' → logprob: -7.256646156311035
    5. '    ' → logprob: -7.756646156311035
    6. '):' → logprob: -8.256646156311035
    7. ')' → logprob: -8.881646156311035
    8. 'def' → logprob: -9.006646156311035
    9. '       ' → logprob: -9.381646156311035
    10. '   
' → logprob: -9.631646156311035

Token 360: ' Outputs' (ID: 145641)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015330599620938301
    2. ')' → logprob: -4.765330791473389
    3. '"""' → logprob: -5.515330791473389
    4. '
' → logprob: -7.265330791473389
    5. '"' → logprob: -7.640330791473389
    6. '):' → logprob: -8.39033031463623
    7. '    
' → logprob: -8.51533031463623
    8. '    ' → logprob: -8.51533031463623
    9. ':' → logprob: -8.64033031463623
    10. ' """' → logprob: -9.01533031463623

Token 361: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.99043869972229
    2. '   ' → logprob: -1.11543869972229
    3. ':' → logprob: -1.74043869972229
    4. '(' → logprob: -2.36543869972229
    5. '(n' → logprob: -5.865438461303711
    6. '
' → logprob: -5.990438461303711
    7. '    ' → logprob: -5.990438461303711
    8. '(len' → logprob: -5.990438461303711
    9. '(
' → logprob: -6.115438461303711
    10. '():' → logprob: -6.240438461303711

Token 362: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015935122966766357
    2. ' None' → logprob: -4.890934944152832
    3. 'None' → logprob: -5.265934944152832
    4. '    ' → logprob: -6.640934944152832
    5. '    
' → logprob: -6.765934944152832
    6. 'n' → logprob: -8.015934944152832
    7. ' n' → logprob: -8.765934944152832
    8. '"' → logprob: -10.515934944152832
    9. '
' → logprob: -10.515934944152832
    10. '```' → logprob: -10.890934944152832

Token 363: ' Prints' (ID: 92195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030581999570131302
    2. 'n' → logprob: -4.405581951141357
    3. ' n' → logprob: -5.155581951141357
    4. 'print' → logprob: -5.780581951141357
    5. 'result' → logprob: -6.405581951141357
    6. ' print' → logprob: -6.905581951141357
    7. 'sum' → logprob: -6.905581951141357
    8. 'None' → logprob: -7.155581951141357
    9. ' None' → logprob: -7.405581951141357
    10. ' result' → logprob: -7.530581951141357

Token 364: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6992052793502808
    2. ' the' → logprob: -1.6992052793502808
    3. '(n' → logprob: -2.0742053985595703
    4. '(' → logprob: -2.6992053985595703
    5. '(len' → logprob: -2.6992053985595703
    6. 'n' → logprob: -3.6992053985595703
    7. 'len' → logprob: -4.69920539855957
    8. '   ' → logprob: -5.07420539855957
    9. '(sum' → logprob: -5.57420539855957
    10. '("' → logprob: -5.82420539855957

Token 365: ' count' (ID: 3605)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.17406758666038513
    2. 'total' → logprob: -2.424067497253418
    3. ' number' → logprob: -2.924067497253418
    4. 'number' → logprob: -4.799067497253418
    5. ' count' → logprob: -5.174067497253418
    6. 'count' → logprob: -5.799067497253418
    7. ' result' → logprob: -8.424067497253418
    8. 'result' → logprob: -8.799067497253418
    9. '   ' → logprob: -9.549067497253418
    10. 'answer' → logprob: -10.424067497253418

Token 366: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46240100264549255
    2. ':' → logprob: -1.087401032447815
    3. ' =' → logprob: -4.337400913238525
    4. '=' → logprob: -5.337400913238525
    5. '(n' → logprob: -5.712400913238525
    6. '
' → logprob: -5.712400913238525
    7. ':
' → logprob: -6.462400913238525
    8. '(' → logprob: -6.712400913238525
    9. '    
' → logprob: -7.087400913238525
    10. 'def' → logprob: -7.212400913238525

Token 367: ' such' (ID: 2238)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.4709640145301819
    2. 'valid' → logprob: -1.095963954925537
    3. ' all' → logprob: -4.345963954925537
    4. 'all' → logprob: -4.470963954925537
    5. 'sub' → logprob: -4.845963954925537
    6. '_valid' → logprob: -5.970963954925537
    7. 'the' → logprob: -6.095963954925537
    8. ' the' → logprob: -6.470963954925537
    9. ')' → logprob: -7.220963954925537
    10. '(valid' → logprob: -7.470963954925537

Token 368: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.09186643362045288
    2. ' contiguous' → logprob: -2.9668664932250977
    3. 'sub' → logprob: -4.341866493225098
    4. ' valid' → logprob: -4.341866493225098
    5. '   ' → logprob: -4.841866493225098
    6. ')' → logprob: -6.966866493225098
    7. '_sub' → logprob: -7.966866493225098
    8. ' ' → logprob: -8.091866493225098
    9. '  ' → logprob: -9.091866493225098
    10. 'valid' → logprob: -9.591866493225098

Token 369: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.0030404587741941214
    2. 'array' → logprob: -6.628040313720703
    3. '_arrays' → logprob: -7.253040313720703
    4. 'arr' → logprob: -7.753040313720703
    5. ' arrays' → logprob: -8.003040313720703
    6. '_' → logprob: -9.503040313720703
    7. '   ' → logprob: -10.128040313720703
    8. '_arr' → logprob: -10.253040313720703
    9. 'arra' → logprob: -10.753040313720703
    10. 'ar' → logprob: -11.128040313720703

Token 370: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2356639951467514
    2. ':' → logprob: -1.6106640100479126
    3. '():' → logprob: -5.110663890838623
    4. '
' → logprob: -6.735663890838623
    5. '    
' → logprob: -6.860663890838623
    6. '(n' → logprob: -6.860663890838623
    7. '):' → logprob: -8.610664367675781
    8. ':
' → logprob: -8.985664367675781
    9. '  
' → logprob: -9.110664367675781
    10. '```' → logprob: -9.610664367675781

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01862032525241375
    2. '
' → logprob: -5.268620491027832
    3. 'def' → logprob: -5.393620491027832
    4. '```' → logprob: -5.893620491027832
    5. ':' → logprob: -6.143620491027832
    6. '    
' → logprob: -6.393620491027832
    7. '"""' → logprob: -6.393620491027832
    8. '"""
' → logprob: -8.518620491027832
    9. '):' → logprob: -9.893620491027832
    10. '():' → logprob: -9.893620491027832

Token 372: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036382049322128296
    2. '
' → logprob: -4.53638219833374
    3. ':' → logprob: -4.91138219833374
    4. '"""' → logprob: -5.28638219833374
    5. 'def' → logprob: -5.53638219833374
    6. '```' → logprob: -5.91138219833374
    7. '    
' → logprob: -6.41138219833374
    8. '"""
' (adapté à ' """
') → logprob: -6.66138219833374
    9. '):' → logprob: -6.78638219833374
    10. ')' → logprob: -7.03638219833374

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006313162390142679
    2. 'n' → logprob: -5.256313323974609
    3. '	n' → logprob: -7.131313323974609
    4. '    
' → logprob: -8.75631332397461
    5. '
' → logprob: -9.50631332397461
    6. '    ' → logprob: -11.13131332397461
    7. '(n' → logprob: -11.25631332397461
    8. 'def' → logprob: -11.75631332397461
    9. ' n' → logprob: -12.00631332397461
    10. '   ' → logprob: -13.13131332397461

Token 374: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.018491949886083603
    2. '   ' → logprob: -4.018491744995117
    3. ' n' → logprob: -8.018491744995117
    4. '	n' → logprob: -11.518491744995117
    5. '    
' → logprob: -13.518491744995117
    6. '
' → logprob: -14.393491744995117
    7. '    ' → logprob: -15.518491744995117
    8. ' ' → logprob: -15.893491744995117
    9. 'import' → logprob: -15.893491744995117
    10. '  ' → logprob: -16.018491744995117

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1031644269824028
    2. '=' → logprob: -2.3531644344329834
    3. ',' → logprob: -5.853164196014404
    4. ' ,' → logprob: -10.478164672851562
    5. ' ' → logprob: -10.853164672851562
    6. '   ' → logprob: -11.353164672851562
    7. '=int' → logprob: -11.728164672851562
    8. ' =
' → logprob: -12.603164672851562
    9. ')' → logprob: -12.853164672851562
    10. '=n' → logprob: -13.103164672851562

Token 376: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00891153234988451
    2. ' get' → logprob: -4.758911609649658
    3. 'int' → logprob: -8.1339111328125
    4. ' int' → logprob: -12.6339111328125
    5. '   ' → logprob: -16.3839111328125
    6. '	get' → logprob: -16.7589111328125
    7. '=get' → logprob: -17.6339111328125
    8. ' ' → logprob: -17.6339111328125
    9. 'n' → logprob: -17.7589111328125
    10. '(get' → logprob: -17.8839111328125

Token 377: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -15.75
    3. '(' → logprob: -18.625
    4. 'I' → logprob: -19.0
    5. ' N' → logprob: -19.25
    6. '()' → logprob: -19.5
    7. ')' → logprob: -20.0
    8. 'int' → logprob: -20.375
    9. 'A' → logprob: -20.75
    10. '```' → logprob: -21.375

Token 378: '()' (ID: 416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012165825814008713
    2. '()' → logprob: -4.6371660232543945
    3. '
' → logprob: -7.6371660232543945
    4. '    
' → logprob: -7.6371660232543945
    5. ')' → logprob: -7.7621660232543945
    6. '<|end|>' → logprob: -9.137166023254395
    7. '```' → logprob: -9.137166023254395
    8. ' ' → logprob: -9.262166023254395
    9. '    ' → logprob: -9.262166023254395
    10. 'n' → logprob: -9.387166023254395

Token 379: '            ' (ID: 3346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004882431123405695
    2. '    
' → logprob: -5.879882335662842
    3. '<|end|>' → logprob: -7.004882335662842
    4. '  ' → logprob: -8.1298828125
    5. '    ' → logprob: -8.1298828125
    6. '
' → logprob: -8.1298828125
    7. ' ' → logprob: -9.6298828125
    8. ' 
' → logprob: -10.2548828125
    9. '  
' → logprob: -10.3798828125
    10. '   
' → logprob: -10.5048828125

Token 380: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6330366134643555
    2. '
' → logprob: -0.8830366134643555
    3. '    
' → logprob: -3.5080366134643555
    4. '<|end|>' → logprob: -4.2580366134643555
    5. ')' → logprob: -6.1330366134643555
    6. ' ' → logprob: -6.3830366134643555
    7. '    ' → logprob: -6.6330366134643555
    8. '()' → logprob: -6.8830366134643555
    9. '<|end|>' → logprob: -7.2580366134643555
    10. 'n' → logprob: -7.2580366134643555

Token 381: ' Read' (ID: 5405)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.3119455873966217
    2. ' lis' → logprob: -1.5619455575942993
    3. '   ' → logprob: -3.061945676803589
    4. 'n' → logprob: -4.93694543838501
    5. '
' → logprob: -7.18694543838501
    6. 'r' → logprob: -7.31194543838501
    7. 'l' → logprob: -7.68694543838501
    8. ' n' → logprob: -7.68694543838501
    9. 'li' → logprob: -7.93694543838501
    10. '       ' → logprob: -8.186945915222168

Token 382: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027757417410612106
    2. 'n' → logprob: -3.652757406234741
    3. ')' → logprob: -7.27775764465332
    4. ' n' → logprob: -8.40275764465332
    5. '(n' → logprob: -8.52775764465332
    6. '   ' → logprob: -9.15275764465332
    7. '())' → logprob: -9.77775764465332
    8. 'the' → logprob: -9.90275764465332
    9. ' ()' → logprob: -10.65275764465332
    10. ' )' → logprob: -11.15275764465332

Token 383: ' length' (ID: 5517)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0069520496763288975
    2. '\n' → logprob: -5.506952285766602
    3. ' n' → logprob: -6.381952285766602
    4. 'int' → logprob: -7.756952285766602
    5. '()' → logprob: -8.881952285766602
    6. 'input' → logprob: -9.631952285766602
    7. ')' → logprob: -9.631952285766602
    8. 'array' → logprob: -9.756952285766602
    9. '   ' → logprob: -9.881952285766602
    10. ' ' → logprob: -10.006952285766602

Token 384: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024922095239162445
    2. ')' → logprob: -5.774921894073486
    3. '()' → logprob: -5.774921894073486
    4. '(' → logprob: -5.899921894073486
    5. ' ' → logprob: -5.899921894073486
    6. ' of' → logprob: -5.899921894073486
    7. '=' → logprob: -6.024921894073486
    8. '(n' → logprob: -6.024921894073486
    9. '    ' → logprob: -6.274921894073486
    10. ' =' → logprob: -7.149921894073486

Token 385: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4233378469944
    2. ')' → logprob: -1.7983378171920776
    3. 'the' → logprob: -2.298337936401367
    4. 'array' → logprob: -3.423337936401367
    5. ' the' → logprob: -4.173337936401367
    6. 'lis' → logprob: -5.048337936401367
    7. 'input' → logprob: -5.298337936401367
    8. ' array' → logprob: -5.548337936401367
    9. '()' → logprob: -5.673337936401367
    10. ' ' → logprob: -6.048337936401367

Token 386: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.1374121904373169
    2. ' array' → logprob: -2.6374120712280273
    3. 'n' → logprob: -3.0124120712280273
    4. 'arr' → logprob: -5.262412071228027
    5. '\n' → logprob: -7.137412071228027
    6. ' ' → logprob: -7.887412071228027
    7. '
' → logprob: -8.512412071228027
    8. ' n' → logprob: -8.512412071228027
    9. 'list' → logprob: -8.637412071228027
    10. ')' → logprob: -8.887412071228027

Token 387: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04779386520385742
    2. '
' → logprob: -4.172793865203857
    3. '    
' → logprob: -4.547793865203857
    4. '<|end|>' → logprob: -4.547793865203857
    5. '    ' → logprob: -6.047793865203857
    6. ' ' → logprob: -6.172793865203857
    7. '  ' → logprob: -6.672793865203857
    8. '<|end|>' → logprob: -7.172793865203857
    9. ')' → logprob: -7.297793865203857
    10. ',' → logprob: -7.672793865203857

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017207576893270016
    2. 'lis' → logprob: -7.251720905303955
    3. ' lis' → logprob: -7.501720905303955
    4. '    ' → logprob: -8.126720428466797
    5. '    
' → logprob: -10.126720428466797
    6. '  ' → logprob: -10.251720428466797
    7. '	l' → logprob: -10.501720428466797
    8. ' ' → logprob: -11.501720428466797
    9. '<|end|>' → logprob: -11.501720428466797
    10. 'l' → logprob: -11.626720428466797

Token 389: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' (adapté à ' lis') → logprob: -0.0452442467212677
    2. '   ' → logprob: -3.4202442169189453
    3. ' lis' → logprob: -4.545244216918945
    4. '    ' → logprob: -8.795244216918945
    5. 'l' → logprob: -9.170244216918945
    6. '<|end|>' → logprob: -9.295244216918945
    7. 'li' → logprob: -9.545244216918945
    8. '  ' → logprob: -9.795244216918945
    9. ' ' → logprob: -9.795244216918945
    10. 'list' → logprob: -10.045244216918945

Token 390: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740803837776184
    2. ' =' → logprob: -0.9740803837776184
    3. '   ' → logprob: -13.349080085754395
    4. '=[]' → logprob: -14.224080085754395
    5. '=get' → logprob: -15.849080085754395
    6. '=list' → logprob: -15.849080085754395
    7. '＝' → logprob: -16.09908103942871
    8. '[' → logprob: -16.22408103942871
    9. ' ' → logprob: -16.34908103942871
    10. '=int' → logprob: -16.84908103942871

Token 391: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.005233763717114925
    2. ' get' → logprob: -5.2552337646484375
    3. '(get' → logprob: -19.630233764648438
    4. '	get' → logprob: -19.880233764648438
    5. '[get' → logprob: -20.005233764648438
    6. '_get' → logprob: -21.255233764648438
    7. '=get' → logprob: -21.255233764648438
    8. '.get' → logprob: -22.255233764648438
    9. 'Get' → logprob: -22.880233764648438
    10. ' ' → logprob: -23.005233764648438

Token 392: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -13.375001907348633
    3. ' List' → logprob: -16.625001907348633
    4. 'Lis' → logprob: -17.375001907348633
    5. 'L' → logprob: -17.500001907348633
    6. '_list' → logprob: -18.250001907348633
    7. 'list' → logprob: -18.375001907348633
    8. '()
' → logprob: -18.500001907348633
    9. '())' → logprob: -18.875001907348633
    10. '	List' → logprob: -19.125001907348633

Token 393: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018337000161409378
    2. '   ' → logprob: -4.018336772918701
    3. '()
' → logprob: -9.01833724975586
    4. '()\' → logprob: -11.01833724975586
    5. '();' → logprob: -11.39333724975586
    6. '    
' → logprob: -11.39333724975586
    7. ' ()' → logprob: -12.14333724975586
    8. '(' → logprob: -12.51833724975586
    9. '())' → logprob: -13.14333724975586
    10. '[]' → logprob: -13.39333724975586

Token 394: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09086058288812637
    2. '    
' → logprob: -3.090860605239868
    3. '
' → logprob: -3.215860605239868
    4. '	
' → logprob: -7.215860366821289
    5. '   
' → logprob: -8.465860366821289
    6. '  
' → logprob: -9.840860366821289
    7. '    ' → logprob: -9.840860366821289
    8. 'n' → logprob: -9.965860366821289
    9. ' 
' → logprob: -10.215860366821289
    10. '     
' → logprob: -10.965860366821289

Token 395: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08930866420269012
    2. '()' → logprob: -3.339308738708496
    3. '    
' → logprob: -3.964308738708496
    4. '
' → logprob: -4.589308738708496
    5. ' ' → logprob: -4.589308738708496
    6. '  ' → logprob: -6.089308738708496
    7. '    ' → logprob: -6.214308738708496
    8. '  
' → logprob: -6.839308738708496
    9. '   
' → logprob: -6.964308738708496
    10. '	' → logprob: -7.589308738708496

Token 396: ' Read' (ID: 5405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08994395285844803
    2. ' n' → logprob: -3.4649438858032227
    3. '    ' → logprob: -3.9649438858032227
    4. ' ' → logprob: -4.964943885803223
    5. 'n' → logprob: -5.089943885803223
    6. '
' → logprob: -5.464943885803223
    7. '[]' → logprob: -5.714943885803223
    8. '#' → logprob: -5.839943885803223
    9. '  ' → logprob: -6.214943885803223
    10. '    
' → logprob: -6.714943885803223

Token 397: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014799140393733978
    2. '(n' → logprob: -4.264799118041992
    3. 'the' → logprob: -8.264799118041992
    4. '(' → logprob: -9.264799118041992
    5. '   ' → logprob: -9.514799118041992
    6. 'n' → logprob: -9.639799118041992
    7. '())' → logprob: -10.264799118041992
    8. '()
' → logprob: -10.514799118041992
    9. '(l' → logprob: -11.139799118041992
    10. '();' → logprob: -11.264799118041992

Token 398: ' array' (ID: 2644)
  Prédit: ' array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.11148983240127563
    2. ' list' → logprob: -3.111489772796631
    3. 'n' → logprob: -3.861489772796631
    4. 'array' → logprob: -3.986489772796631
    5. ' n' → logprob: -5.236489772796631
    6. ' elements' → logprob: -5.236489772796631
    7. ' lis' → logprob: -5.486489772796631
    8. 'list' → logprob: -5.986489772796631
    9. ')' → logprob: -6.861489772796631
    10. ' ' → logprob: -7.486489772796631

Token 399: ' elements' (ID: 8632)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13892245292663574
    2. '   ' → logprob: -2.6389224529266357
    3. '    
' → logprob: -2.8889224529266357
    4. '  
' → logprob: -7.138922691345215
    5. '	
' → logprob: -7.263922691345215
    6. '   
' → logprob: -7.513922691345215
    7. 'n' → logprob: -8.638922691345215
    8. '
' → logprob: -9.138922691345215
    9. ' 
' → logprob: -9.388922691345215
    10. '     
' → logprob: -10.388922691345215

Token 400: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14567701518535614
    2. '   ' → logprob: -2.645677089691162
    3. '    
' → logprob: -2.770677089691162
    4. '   
' → logprob: -7.270677089691162
    5. '	
' → logprob: -8.145676612854004
    6. '  
' → logprob: -8.145676612854004
    7. 'n' → logprob: -8.270676612854004
    8. ' 
' → logprob: -9.020676612854004
    9. 'r' → logprob: -9.270676612854004
    10. '
' → logprob: -9.895676612854004

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009118752554059029
    2. 'l' → logprob: -4.884118556976318
    3. ' l' → logprob: -7.384118556976318
    4. 'count' → logprob: -8.384119033813477
    5. '    
' → logprob: -8.384119033813477
    6. 'ans' → logprob: -8.884119033813477
    7. '
' → logprob: -9.259119033813477
    8. 'cnt' → logprob: -10.009119033813477
    9. ' ans' → logprob: -10.134119033813477
    10. ' count' → logprob: -10.509119033813477

Token 402: ' xo' (ID: 46871)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.227284774184227
    2. 'ans' → logprob: -2.2272846698760986
    3. 'res' → logprob: -2.4772846698760986
    4. 'answer' → logprob: -5.477284908294678
    5. 'count' → logprob: -5.602284908294678
    6. 'result' → logprob: -5.977284908294678
    7. 'left' → logprob: -7.352284908294678
    8. 'cnt' → logprob: -8.47728443145752
    9. 'total' → logprob: -9.60228443145752
    10. 'r' → logprob: -9.60228443145752

Token 403: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8738917708396912
    2. ' =' → logprob: -0.9988917708396912
    3. 'r' → logprob: -1.623891830444336
    4. '   ' → logprob: -4.623891830444336
    5. ',' → logprob: -5.873891830444336
    6. 'rs' → logprob: -6.998891830444336
    7. 'sum' → logprob: -7.248891830444336
    8. 'x' → logprob: -7.623891830444336
    9. 'w' → logprob: -8.248891830444336
    10. 'p' → logprob: -8.248891830444336

Token 404: ' su' (ID: 593)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6883937120437622
    2. 'sm' → logprob: -1.6883937120437622
    3. 'su' → logprob: -1.6883937120437622
    4. ' su' → logprob: -1.9383937120437622
    5. ' sm' → logprob: -2.0633935928344727
    6. ' s' → logprob: -2.3133935928344727
    7. 'sum' → logprob: -2.8133935928344727
    8. ' sum' → logprob: -5.313393592834473
    9. '0' → logprob: -5.313393592834473
    10. ' ' → logprob: -5.938393592834473

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31486204266548157
    2. ' =' → logprob: -1.3148620128631592
    3. ',' → logprob: -6.439862251281738
    4. ' ,' → logprob: -13.564862251281738
    5. ' ' → logprob: -14.564862251281738
    6. '   ' → logprob: -15.314862251281738
    7. '=int' → logprob: -16.689861297607422
    8. ')' → logprob: -16.689861297607422
    9. ' =
' → logprob: -16.689861297607422
    10. '＝' → logprob: -16.939861297607422

Token 406: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.62502098083496
    4. '=' → logprob: -17.62502098083496
    5. ',' → logprob: -18.37502098083496
    6. '[' → logprob: -19.50002098083496
    7. '۰' → logprob: -19.62502098083496
    8. '<|end|>' → logprob: -19.75002098083496
    9. '  ' → logprob: -20.12502098083496
    10. '
' → logprob: -21.25002098083496

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '[' → logprob: -17.8750057220459
    4. '=' → logprob: -19.0000057220459
    5. '   ' → logprob: -19.0000057220459
    6. '۰' → logprob: -19.8750057220459
    7. ',' → logprob: -20.2500057220459
    8. '  ' → logprob: -20.2500057220459
    9. '(' → logprob: -20.2500057220459
    10. '
' → logprob: -21.1250057220459

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004040644969791174
    2. '   ' → logprob: -5.754040718078613
    3. '<|end|>' → logprob: -7.504040718078613
    4. ',
' → logprob: -9.004040718078613
    5. ' ,' → logprob: -9.254040718078613
    6. '  ' → logprob: -10.754040718078613
    7. '<|end|>' → logprob: -11.129040718078613
    8. ' ' → logprob: -11.379040718078613
    9. '    
' → logprob: -11.629040718078613
    10. '    ' → logprob: -11.879040718078613

Token 409: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '<|end|>' → logprob: -15.750431060791016
    4. '  ' → logprob: -17.750431060791016
    5. '   ' → logprob: -19.375431060791016
    6. ')' → logprob: -20.125431060791016
    7. '۰' → logprob: -20.250431060791016
    8. '    ' → logprob: -20.750431060791016
    9. '1' → logprob: -21.000431060791016
    10. '```' → logprob: -21.187931060791016

Token 410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -16.875015258789062
    4. '1' → logprob: -20.250015258789062
    5. '   ' → logprob: -21.000015258789062
    6. ')' → logprob: -21.125015258789062
    7. '  ' → logprob: -21.125015258789062
    8. 'sum' → logprob: -21.375015258789062
    9. '.' → logprob: -21.562515258789062
    10. 'o' → logprob: -21.687515258789062

Token 411: '         ' (ID: 983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09857670217752457
    2. '
' → logprob: -2.473576784133911
    3. '    
' → logprob: -5.348576545715332
    4. ',' → logprob: -5.973576545715332
    5. '<|end|>' → logprob: -6.973576545715332
    6. '  
' → logprob: -7.973576545715332
    7. 'r' → logprob: -8.348576545715332
    8. '	
' → logprob: -8.848576545715332
    9. '  ' → logprob: -8.973576545715332
    10. ',
' → logprob: -9.098576545715332

Token 412: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1278851330280304
    2. '<|end|>' → logprob: -2.377885103225708
    3. '    
' → logprob: -5.127885341644287
    4. ',' → logprob: -5.252885341644287
    5. 'r' → logprob: -5.252885341644287
    6. '  ' → logprob: -5.377885341644287
    7. ' ' → logprob: -5.877885341644287
    8. '<|end|>' → logprob: -7.377885341644287
    9. '    ' → logprob: -7.627885341644287
    10. '
' → logprob: -7.627885341644287

Token 413: ' Initialize' (ID: 19496)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.021266520023345947
    2. ' l' → logprob: -3.896266460418701
    3. 'ans' → logprob: -8.52126693725586
    4. 'count' → logprob: -8.89626693725586
    5. 'answer' → logprob: -9.14626693725586
    6. 'r' → logprob: -9.77126693725586
    7. '0' → logprob: -9.77126693725586
    8. ' ' → logprob: -9.89626693725586
    9. ' ans' → logprob: -10.89626693725586
    10. ' answer' → logprob: -11.02126693725586

Token 414: ' XOR' (ID: 147209)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03408695384860039
    2. ' l' → logprob: -3.4090869426727295
    3. 'answer' → logprob: -9.159087181091309
    4. 'left' → logprob: -9.409087181091309
    5. '   ' → logprob: -9.909087181091309
    6. 'count' → logprob: -10.034087181091309
    7. 'x' → logprob: -10.409087181091309
    8. 'res' → logprob: -10.534087181091309
    9. 'ans' → logprob: -10.659087181091309
    10. 'result' → logprob: -11.159087181091309

Token 415: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15410073101520538
    2. '   ' → logprob: -2.2791006565093994
    3. '<|end|>' → logprob: -3.6541006565093994
    4. ' ,' → logprob: -5.2791008949279785
    5. ' and' → logprob: -5.7791008949279785
    6. ' ' → logprob: -6.5291008949279785
    7. '    ' → logprob: -6.9041008949279785
    8. '  ' → logprob: -7.4041008949279785
    9. ' =' → logprob: -7.5291008949279785
    10. '=' → logprob: -7.5291008949279785

Token 416: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.11468257009983063
    2. ' sum' → logprob: -2.239682674407959
    3. '0' → logprob: -6.489682674407959
    4. ' ' → logprob: -8.7396821975708
    5. 'su' → logprob: -9.4896821975708
    6. 'summ' → logprob: -10.6146821975708
    7. 's' → logprob: -10.9896821975708
    8. '   ' → logprob: -11.6146821975708
    9. 'count' → logprob: -11.8646821975708
    10. ' su' → logprob: -12.2396821975708

Token 417: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13793490827083588
    2. '<|end|>' → logprob: -2.637934923171997
    3. ',' → logprob: -3.887934923171997
    4. ' =' → logprob: -4.387934684753418
    5. 'values' → logprob: -5.512934684753418
    6. '_values' → logprob: -6.012934684753418
    7. '=' → logprob: -6.262934684753418
    8. '  ' → logprob: -6.387934684753418
    9. ' ' → logprob: -6.387934684753418
    10. 'l' → logprob: -6.637934684753418

Token 418: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13050413131713867
    2. 'the' → logprob: -3.2555041313171387
    3. 'current' → logprob: -3.5055041313171387
    4. 'sub' → logprob: -3.8805041313171387
    5. 'window' → logprob: -4.130504131317139
    6. '<|end|>' → logprob: -5.005504131317139
    7. ' the' → logprob: -6.130504131317139
    8. ' ' → logprob: -6.255504131317139
    9. ' current' → logprob: -6.380504131317139
    10. 'elements' → logprob: -6.755504131317139

Token 419: ' current' (ID: 2208)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44278326630592346
    2. ' ' → logprob: -1.442783236503601
    3. ' current' → logprob: -3.4427833557128906
    4. 'current' → logprob: -3.6927833557128906
    5. 'window' → logprob: -3.8177833557128906
    6. 'sub' → logprob: -4.442783355712891
    7. ' window' → logprob: -4.942783355712891
    8. ' sub' → logprob: -5.067783355712891
    9. 'l' → logprob: -5.317783355712891
    10. 'r' → logprob: -5.442783355712891

Token 420: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.322370320558548
    2. ' window' → logprob: -1.4473702907562256
    3. 'sub' → logprob: -4.572370529174805
    4. ' sub' → logprob: -4.947370529174805
    5. '_window' → logprob: -5.072370529174805
    6. '   ' → logprob: -5.197370529174805
    7. ' ' → logprob: -5.822370529174805
    8. '_' → logprob: -6.197370529174805
    9. 'segment' → logprob: -6.572370529174805
    10. '_sub' → logprob: -6.697370529174805

Token 421: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011206500232219696
    2. ',' → logprob: -4.63620662689209
    3. '    
' → logprob: -7.63620662689209
    4. '<|end|>' → logprob: -8.01120662689209
    5. 'r' → logprob: -8.51120662689209
    6. '  ' → logprob: -9.51120662689209
    7. '	l' → logprob: -9.51120662689209
    8. '    ' → logprob: -10.13620662689209
    9. 'l' → logprob: -10.38620662689209
    10. ' ' → logprob: -10.76120662689209

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00288202241063118
    2. '	l' → logprob: -6.12788200378418
    3. ',' → logprob: -8.50288200378418
    4. '\t' → logprob: -9.12788200378418
    5. 'r' → logprob: -9.37788200378418
    6. ' l' → logprob: -9.75288200378418
    7. 'l' → logprob: -9.87788200378418
    8. '    
' → logprob: -10.00288200378418
    9. '    ' → logprob: -10.00288200378418
    10. '	r' → logprob: -10.75288200378418

Token 423: ' ans' (ID: 3345)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.010584723204374313
    2. 'ans' (adapté à ' ans') → logprob: -5.635584831237793
    3. ' l' → logprob: -6.010584831237793
    4. 'count' → logprob: -6.385584831237793
    5. 'res' → logprob: -6.635584831237793
    6. '   ' → logprob: -7.635584831237793
    7. 'r' → logprob: -7.885584831237793
    8. 'answer' → logprob: -7.885584831237793
    9. 'result' → logprob: -9.260584831237793
    10. 'cnt' → logprob: -9.635584831237793

Token 424: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47439849376678467
    2. '=' → logprob: -0.9743984937667847
    3. ',' → logprob: -8.099398612976074
    4. ' ' → logprob: -11.099398612976074
    5. ')' → logprob: -13.974398612976074
    6. ' ,' → logprob: -14.849398612976074
    7. ' +=' → logprob: -15.474398612976074
    8. '  ' → logprob: -15.724398612976074
    9. '_' → logprob: -15.849398612976074
    10. ' =
' → logprob: -16.224397659301758

Token 425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -15.876702308654785
    4. '=' → logprob: -17.0017032623291
    5. '  ' → logprob: -18.3767032623291
    6. '۰' → logprob: -19.0017032623291
    7. ' =' → logprob: -19.3767032623291
    8. '_' → logprob: -19.7517032623291
    9. '1' → logprob: -19.8142032623291
    10. '	' → logprob: -20.0642032623291

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.625009536743164
    4. '=' → logprob: -20.125009536743164
    5. '1' → logprob: -20.750009536743164
    6. '000' → logprob: -20.875009536743164
    7. 'int' → logprob: -21.000009536743164
    8. '۰' → logprob: -21.125009536743164
    9. 'n' → logprob: -21.250009536743164
    10. '00' → logprob: -21.375009536743164

Token 427: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013887154869735241
    2. '
' → logprob: -5.63888692855835
    3. '    
' → logprob: -5.63888692855835
    4. ',' → logprob: -6.01388692855835
    5. '	l' → logprob: -6.26388692855835
    6. '	
' → logprob: -6.51388692855835
    7. '  ' → logprob: -8.388887405395508
    8. '<|end|>' → logprob: -8.638887405395508
    9. '
' → logprob: -10.013887405395508
    10. '    ' → logprob: -10.013887405395508

Token 428: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026586949825286865
    2. '	l' → logprob: -3.7765870094299316
    3. ',' → logprob: -7.026587009429932
    4. '	
' → logprob: -7.151587009429932
    5. '    
' → logprob: -7.276587009429932
    6. '\t' → logprob: -7.901587009429932
    7. '
' → logprob: -8.526586532592773
    8. 'l' → logprob: -8.776586532592773
    9. '  ' → logprob: -10.151586532592773
    10. '	
' → logprob: -10.276586532592773

Token 429: ' Initialize' (ID: 19496)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08561408519744873
    2. '0' → logprob: -2.8356142044067383
    3. ' l' → logprob: -3.8356142044067383
    4. 'ans' → logprob: -6.960614204406738
    5. ' ' → logprob: -7.210614204406738
    6. ' ans' → logprob: -10.460614204406738
    7. 'r' → logprob: -10.585614204406738
    8. '   ' → logprob: -11.585614204406738
    9. '1' → logprob: -11.710614204406738
    10. '	l' → logprob: -12.210614204406738

Token 430: ' the' (ID: 290)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14286985993385315
    2. ' l' → logprob: -2.0178699493408203
    3. 'r' → logprob: -9.76786994934082
    4. 'ans' → logprob: -10.14286994934082
    5. '0' → logprob: -10.39286994934082
    6. '   ' → logprob: -10.64286994934082
    7. ' r' → logprob: -11.39286994934082
    8. 'answer' → logprob: -11.64286994934082
    9. ' ' → logprob: -11.89286994934082
    10. '```' → logprob: -12.51786994934082

Token 431: ' answer' (ID: 6052)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01006605289876461
    2. ' l' → logprob: -5.010066032409668
    3. ' ' → logprob: -6.635066032409668
    4. 'r' → logprob: -7.510066032409668
    5. 'count' → logprob: -8.010066032409668
    6. 'variable' → logprob: -8.260066032409668
    7. 'answer' → logprob: -8.635066032409668
    8. 'left' → logprob: -9.260066032409668
    9. ' variable' → logprob: -9.260066032409668
    10. 'a' → logprob: -9.510066032409668

Token 432: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013256695121526718
    2. '	l' → logprob: -4.513256549835205
    3. '    
' → logprob: -6.888256549835205
    4. '
' → logprob: -8.138257026672363
    5. '\t' → logprob: -8.388257026672363
    6. '	
' → logprob: -8.513257026672363
    7. ',' → logprob: -8.513257026672363
    8. 'l' → logprob: -8.638257026672363
    9. ' l' → logprob: -11.138257026672363
    10. '	' → logprob: -11.263257026672363

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033894989639520645
    2. 'l' → logprob: -3.6588950157165527
    3. ' l' → logprob: -4.908895015716553
    4. 'r' → logprob: -9.408894538879395
    5. '```' → logprob: -10.158894538879395
    6. '	l' → logprob: -10.533894538879395
    7. ' r' → logprob: -11.783894538879395
    8. '    
' → logprob: -11.783894538879395
    9. ',' → logprob: -12.033894538879395
    10. '   ' → logprob: -12.283894538879395

Token 434: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.012545911595225334
    2. 'r' → logprob: -4.387546062469482
    3. '   ' → logprob: -11.012545585632324
    4. ' l' → logprob: -11.137545585632324
    5. '```' → logprob: -13.137545585632324
    6. 'left' → logprob: -14.012545585632324
    7. 'L' → logprob: -15.012545585632324
    8. '    
' → logprob: -15.012545585632324
    9. '	l' → logprob: -15.137545585632324
    10. 'j' → logprob: -15.262545585632324

Token 435: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2833523452281952
    2. '=' → logprob: -1.4083523750305176
    3. ',' → logprob: -6.158352375030518
    4. ' ' → logprob: -10.03335189819336
    5. ' +=' → logprob: -11.15835189819336
    6. ' ,' → logprob: -11.28335189819336
    7. ')' → logprob: -12.90835189819336
    8. '+=' → logprob: -13.15835189819336
    9. '   ' → logprob: -13.40835189819336
    10. ' =
' → logprob: -13.65835189819336

Token 436: ' r' (ID: 428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022919781506061554
    2. 'r' → logprob: -4.522919654846191
    3. ' ' → logprob: -4.647919654846191
    4. ' r' → logprob: -6.272919654846191
    5. '=' → logprob: -8.147919654846191
    6. ' =' → logprob: -10.147919654846191
    7. 'l' → logprob: -13.647919654846191
    8. '1' → logprob: -13.897919654846191
    9. ' l' → logprob: -14.272919654846191
    10. '=r' → logprob: -14.272919654846191

Token 437: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326520442962646
    2. ' =' → logprob: -1.3132652044296265
    3. ',' → logprob: -13.438264846801758
    4. '   ' → logprob: -13.813264846801758
    5. ' ' → logprob: -14.813264846801758
    6. '+=' → logprob: -15.438264846801758
    7. ' +=' → logprob: -15.688264846801758
    8. '＝' → logprob: -17.438264846801758
    9. '<|end|>' → logprob: -17.438264846801758
    10. '=l' → logprob: -17.563264846801758

Token 438: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.250179290771484
    4. '(' → logprob: -17.375179290771484
    5. '=' → logprob: -17.875179290771484
    6. '  ' → logprob: -18.000179290771484
    7. '00' → logprob: -18.250179290771484
    8. '۰' → logprob: -19.125179290771484
    9. '[' → logprob: -19.812679290771484
    10. '    ' → logprob: -19.875179290771484

Token 439: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.250017166137695
    4. '=' → logprob: -17.375017166137695
    5. '۰' → logprob: -17.875017166137695
    6. '00' → logprob: -18.000017166137695
    7. '０' → logprob: -18.937517166137695
    8. '  ' → logprob: -19.062517166137695
    9. '1' → logprob: -19.187517166137695
    10. '[' → logprob: -19.312517166137695

Token 440: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '1' → logprob: -17.375015258789062
    4. '   ' → logprob: -17.750015258789062
    5. '۰' → logprob: -17.812515258789062
    6. '=' → logprob: -18.375015258789062
    7. '00' → logprob: -18.500015258789062
    8. '-' → logprob: -18.562515258789062
    9. '```' → logprob: -18.812515258789062
    10. '000' → logprob: -19.062515258789062

Token 442: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -15.125000953674316
    3. 'n' → logprob: -15.625000953674316
    4. '-' → logprob: -15.625000953674316
    5. '1' → logprob: -15.750000953674316
    6. '۰' → logprob: -17.312501907348633
    7. '```' → logprob: -17.812501907348633
    8. '=' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.125001907348633
    10. 'r' → logprob: -18.437501907348633

Token 443: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49228888750076294
    2. '
' → logprob: -1.1172888278961182
    3. '    
' → logprob: -3.492288827896118
    4. '<|end|>' → logprob: -4.367289066314697
    5. '  
' → logprob: -5.242289066314697
    6. 'while' → logprob: -5.367289066314697
    7. ' 
' → logprob: -6.117289066314697
    8. ' while' → logprob: -6.492289066314697
    9. '\n' → logprob: -6.617289066314697
    10. '   
' → logprob: -7.117289066314697

Token 444: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36859196424484253
    2. '   ' → logprob: -1.3685920238494873
    3. '    
' → logprob: -3.7435920238494873
    4. 'while' → logprob: -4.118591785430908
    5. ' while' → logprob: -5.493591785430908
    6. '<|end|>' → logprob: -5.743591785430908
    7. '  
' → logprob: -5.993591785430908
    8. ' 
' → logprob: -6.368591785430908
    9. '\n' → logprob: -7.493591785430908
    10. '   
' → logprob: -7.868591785430908

Token 445: ' Left' (ID: 26982)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11314481496810913
    2. ' n' → logprob: -2.488144874572754
    3. '   ' → logprob: -4.738144874572754
    4. '0' → logprob: -5.238144874572754
    5. 'while' → logprob: -5.613144874572754
    6. '
' → logprob: -5.738144874572754
    7. ' while' → logprob: -7.363144874572754
    8. 'r' → logprob: -7.738144874572754
    9. '#' → logprob: -7.738144874572754
    10. ' ' → logprob: -8.613144874572754

Token 446: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01851523481309414
    2. '<|end|>' → logprob: -4.893515110015869
    3. ' and' → logprob: -5.518515110015869
    4. ')' → logprob: -6.393515110015869
    5. 'r' → logprob: -6.518515110015869
    6. '<|end|>' → logprob: -7.393515110015869
    7. '_pointer' → logprob: -7.518515110015869
    8. '=' → logprob: -7.768515110015869
    9. 'pointer' → logprob: -8.018515586853027
    10. 'and' → logprob: -8.018515586853027

Token 447: ' right' (ID: 1849)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.033246468752622604
    2. 'right' → logprob: -3.5332465171813965
    3. ' r' → logprob: -6.0332465171813965
    4. ' right' → logprob: -7.0332465171813965
    5. '1' → logprob: -8.783246040344238
    6. '   ' → logprob: -10.033246040344238
    7. ' ' → logprob: -12.908246040344238
    8. 'n' → logprob: -13.408246040344238
    9. 'Right' → logprob: -13.408246040344238
    10. ')' → logprob: -13.533246040344238

Token 448: ' pointers' (ID: 58762)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.9548899531364441
    2. '_pointer' → logprob: -1.2048900127410889
    3. ' pointers' → logprob: -1.8298900127410889
    4. ',' → logprob: -3.079890012741089
    5. ' pointer' → logprob: -3.329890012741089
    6. '_p' → logprob: -4.32988977432251
    7. '_ptr' → logprob: -4.57988977432251
    8. '   ' → logprob: -4.82988977432251
    9. ' =' → logprob: -4.95488977432251
    10. '=' → logprob: -5.32988977432251

Token 449: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6476431488990784
    2. '<|end|>' → logprob: -1.6476430892944336
    3. '
' → logprob: -2.5226430892944336
    4. 'while' → logprob: -2.7726430892944336
    5. '    
' → logprob: -3.0226430892944336
    6. ' while' → logprob: -3.7726430892944336
    7. '<|end|>' → logprob: -3.7726430892944336
    8. '  
' → logprob: -4.147643089294434
    9. ' 
' → logprob: -4.397643089294434
    10. ' ' → logprob: -5.272643089294434

Token 450: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1603544056415558
    2. 'the' → logprob: -1.9103543758392334
    3. '   ' → logprob: -10.160354614257812
    4. ')' → logprob: -11.035354614257812
    5. 'range' → logprob: -11.035354614257812
    6. ' ' → logprob: -11.285354614257812
    7. 'n' → logprob: -11.535354614257812
    8. ' range' → logprob: -11.660354614257812
    9. '0' → logprob: -11.785354614257812
    10. 'r' → logprob: -12.410354614257812

Token 451: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.038589201867580414
    2. ' window' → logprob: -3.4135892391204834
    3. 'current' → logprob: -5.788589000701904
    4. 'while' → logprob: -7.163589000701904
    5. ' current' → logprob: -8.288589477539062
    6. 'sub' → logprob: -8.413589477539062
    7. 'array' → logprob: -9.163589477539062
    8. 'sl' → logprob: -9.288589477539062
    9. ' sliding' → logprob: -9.413589477539062
    10. 'interval' → logprob: -9.788589477539062

Token 452: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.560941755771637
    2. '
' → logprob: -1.3109416961669922
    3. 'while' → logprob: -2.435941696166992
    4. '    
' → logprob: -3.935941696166992
    5. ' while' → logprob: -3.935941696166992
    6. '<|end|>' → logprob: -3.935941696166992
    7. '  
' → logprob: -5.435941696166992
    8. ' 
' → logprob: -6.060941696166992
    9. '	while' → logprob: -6.685941696166992
    10. '<|end|>' → logprob: -6.685941696166992

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0947478637099266
    2. 'while' → logprob: -3.46974778175354
    3. ' while' → logprob: -3.71974778175354
    4. '
' → logprob: -4.094748020172119
    5. '    
' → logprob: -5.219748020172119
    6. ' 
' → logprob: -5.469748020172119
    7. '```' → logprob: -5.594748020172119
    8. '<|end|>' → logprob: -6.344748020172119
    9. '  
' → logprob: -6.719748020172119
    10. '	while' → logprob: -7.969748020172119

Token 454: ' forward' (ID: 6687)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.224673330783844
    2. '   ' → logprob: -1.7246732711791992
    3. ' while' → logprob: -3.849673271179199
    4. '	while' → logprob: -7.849673271179199
    5. '\n' → logprob: -8.2246732711792
    6. '    
' → logprob: -8.2246732711792
    7. '
' → logprob: -8.8496732711792
    8. ' 
' → logprob: -9.0996732711792
    9. 'for' → logprob: -9.4746732711792
    10. 'n' → logprob: -9.4746732711792

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16328522562980652
    2. ' =' → logprob: -2.163285255432129
    3. 'while' → logprob: -3.913285255432129
    4. ',' → logprob: -5.038285255432129
    5. '_' → logprob: -6.413285255432129
    6. ' +=' → logprob: -6.538285255432129
    7. '+=' → logprob: -6.538285255432129
    8. 'r' → logprob: -6.663285255432129
    9. '   ' → logprob: -6.913285255432129
    10. ' ' → logprob: -7.788285255432129

Token 456: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1316031813621521
    2. '1' → logprob: -2.506603240966797
    3. '0' → logprob: -4.006603240966797
    4. 'n' → logprob: -4.881603240966797
    5. 'False' → logprob: -5.381603240966797
    6. 'lambda' → logprob: -6.006603240966797
    7. 'r' → logprob: -6.256603240966797
    8. '[]' → logprob: -6.631603240966797
    9. ' True' → logprob: -6.756603240966797
    10. 'deque' → logprob: -7.006603240966797

Token 457: '        ' (ID: 269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6768983602523804
    2. ':' → logprob: -1.0518983602523804
    3. '
' → logprob: -2.80189847946167
    4. 'while' → logprob: -3.30189847946167
    5. ' while' → logprob: -4.17689847946167
    6. '<|end|>' → logprob: -4.67689847946167
    7. '    
' → logprob: -5.80189847946167
    8. ',' → logprob: -5.92689847946167
    9. ':
' → logprob: -5.92689847946167
    10. '\n' → logprob: -6.42689847946167

Token 458: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.170475721359253
    2. '   ' → logprob: -1.170475721359253
    3. ':' → logprob: -1.295475721359253
    4. '    
' → logprob: -3.670475721359253
    5. 'while' → logprob: -3.670475721359253
    6. ' ' → logprob: -4.670475959777832
    7. ':
' → logprob: -5.170475959777832
    8. 'if' → logprob: -5.295475959777832
    9. '<|end|>' → logprob: -5.295475959777832
    10. '  
' → logprob: -5.420475959777832

Token 459: ' Direction' (ID: 39049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.36311420798301697
    2. ' while' → logprob: -1.2381142377853394
    3. 'While' → logprob: -5.613114356994629
    4. '<|end|>' → logprob: -5.988114356994629
    5. '#' → logprob: -6.238114356994629
    6. '
' → logprob: -6.238114356994629
    7. ' 
' → logprob: -7.238114356994629
    8. ' True' → logprob: -7.363114356994629
    9. ' While' → logprob: -7.488114356994629
    10. ' ' → logprob: -7.488114356994629

Token 460: ' flag' (ID: 9641)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6676088571548462
    2. '<|end|>' → logprob: -1.5426088571548462
    3. '<|end|>' → logprob: -2.6676087379455566
    4. '
' → logprob: -2.6676087379455566
    5. ' ' → logprob: -2.9176087379455566
    6. '   ' → logprob: -3.5426087379455566
    7. '=' → logprob: -5.042608737945557
    8. 'while' → logprob: -5.292608737945557
    9. ')' → logprob: -5.417608737945557
    10. '  
' → logprob: -5.542608737945557

Token 461: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.516960859298706
    2. '
' → logprob: -1.891960859298706
    3. 'while' → logprob: -2.266960859298706
    4. ' while' → logprob: -2.766960859298706
    5. '<|end|>' → logprob: -3.516960859298706
    6. ':' → logprob: -3.766960859298706
    7. '    
' → logprob: -4.391961097717285
    8. '	while' → logprob: -5.391961097717285
    9. '<|end|>' → logprob: -5.891961097717285
    10. ' 
' → logprob: -6.016961097717285

Token 462: ' True' (ID: 6432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: ' move' (ID: 5275)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0393133163452148
    2. 'expand' → logprob: -1.5393133163452148
    3. 'extend' → logprob: -1.5393133163452148
    4. 'continue' → logprob: -2.164313316345215
    5. 'while' → logprob: -3.664313316345215
    6. 'move' → logprob: -3.914313316345215
    7. 'advance' → logprob: -4.289313316345215
    8. 'True' → logprob: -4.664313316345215
    9. 'increment' → logprob: -4.789313316345215
    10. ' extend' → logprob: -5.289313316345215

Token 465: ' right' (ID: 1849)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11421647667884827
    2. ' r' → logprob: -2.2392165660858154
    3. ' ' → logprob: -6.864216327667236
    4. '    ' → logprob: -8.739216804504395
    5. '   ' → logprob: -10.364216804504395
    6. 'right' → logprob: -10.614216804504395
    7. '_r' → logprob: -10.864216804504395
    8. ' forward' → logprob: -10.989216804504395
    9. ')' → logprob: -11.114216804504395
    10. '_' → logprob: -11.239216804504395

Token 466: ' pointer' (ID: 16233)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7360097765922546
    2. ',' → logprob: -0.9860097765922546
    3. ' while' → logprob: -2.6110098361968994
    4. '   ' → logprob: -3.8610098361968994
    5. 'r' → logprob: -4.11100959777832
    6. '<|end|>' → logprob: -4.48600959777832
    7. ')' → logprob: -5.23600959777832
    8. '
' → logprob: -5.61100959777832
    9. ',
' → logprob: -6.11100959777832
    10. ';' → logprob: -6.23600959777832

Token 467: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.8199736475944519
    2. 'False' → logprob: -1.0699737071990967
    3. '    ' → logprob: -2.0699737071990967
    4. ' ' → logprob: -3.9449737071990967
    5. '   ' → logprob: -3.9449737071990967
    6. ' else' → logprob: -4.319973468780518
    7. ' while' → logprob: -4.694973468780518
    8. ' True' → logprob: -5.069973468780518
    9. ' r' → logprob: -5.694973468780518
    10. 'r' → logprob: -5.819973468780518

Token 469: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8794615864753723
    2. '<|end|>' → logprob: -1.1294615268707275
    3. '   ' → logprob: -2.1294615268707275
    4. 'to' → logprob: -3.3794615268707275
    5. '<|end|>' → logprob: -3.6294615268707275
    6. '#' → logprob: -4.129461765289307
    7. ',' → logprob: -4.379461765289307
    8. '       ' → logprob: -4.629461765289307
    9. '
' → logprob: -4.754461765289307
    10. '           ' → logprob: -4.754461765289307

Token 470: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.4529038071632385
    2. 'left' → logprob: -1.7029037475585938
    3. 'increment' → logprob: -2.3279037475585938
    4. ' move' → logprob: -3.5779037475585938
    5. 'l' → logprob: -3.7029037475585938
    6. 'advance' → logprob: -4.327903747558594
    7. 'False' → logprob: -5.452903747558594
    8. 'back' → logprob: -5.702903747558594
    9. 'increase' → logprob: -6.077903747558594
    10. '<|end|>' → logprob: -6.077903747558594

Token 471: ' left' (ID: 3561)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0476382970809937
    2. 'right' → logprob: -1.2976382970809937
    3. 'left' → logprob: -1.4226382970809937
    4. 'l' → logprob: -2.422638416290283
    5. 'r' → logprob: -4.047638416290283
    6. 'False' → logprob: -4.047638416290283
    7. 'forward' → logprob: -5.672638416290283
    8. 'True' → logprob: -5.797638416290283
    9. ' right' → logprob: -6.672638416290283
    10. ' ' → logprob: -6.922638416290283

Token 472: '

' (ID: 279)
  Prédit: '_pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pointer' → logprob: -0.34551385045051575
    2. '   ' → logprob: -1.7205138206481934
    3. 'pointer' → logprob: -2.5955138206481934
    4. ')' → logprob: -4.970513820648193
    5. ' pointer' → logprob: -4.970513820648193
    6. '_' → logprob: -5.595513820648193
    7. '_ptr' → logprob: -5.720513820648193
    8. '=' → logprob: -6.095513820648193
    9. ',' → logprob: -6.470513820648193
    10. '-pointer' → logprob: -6.470513820648193

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21873335540294647
    2. ':' → logprob: -2.093733310699463
    3. 'while' → logprob: -3.343733310699463
    4. ' while' → logprob: -4.468733310699463
    5. ':
' → logprob: -4.968733310699463
    6. '
' → logprob: -5.093733310699463
    7. '    
' → logprob: -5.593733310699463
    8. '  
' → logprob: -6.093733310699463
    9. ' ' → logprob: -6.218733310699463
    10. ' 
' → logprob: -6.343733310699463

Token 474: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.011474530212581158
    2. '   ' → logprob: -4.636474609375
    3. ' while' → logprob: -6.386474609375
    4. 'r' → logprob: -11.136474609375
    5. '	while' → logprob: -11.886474609375
    6. 'While' → logprob: -13.011474609375
    7. '       ' → logprob: -13.136474609375
    8. '    ' → logprob: -13.636474609375
    9. '  ' → logprob: -13.636474609375
    10. 'for' → logprob: -13.636474609375

Token 475: ' True' (ID: 6432)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.30347585678100586
    2. ' r' → logprob: -1.4284758567810059
    3. 'l' → logprob: -4.553475856781006
    4. ' l' → logprob: -4.678475856781006
    5. 'True' → logprob: -7.428475856781006
    6. 'forward' → logprob: -7.428475856781006
    7. ' forward' → logprob: -7.553475856781006
    8. ' True' → logprob: -8.303476333618164
    9. '   ' → logprob: -9.428476333618164
    10. '(r' → logprob: -9.678476333618164

Token 476: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000530871853698045
    2. ':
' → logprob: -8.125531196594238
    3. '       ' → logprob: -8.625531196594238
    4. '):' → logprob: -10.625531196594238
    5. '   ' → logprob: -11.125531196594238
    6. ' :' → logprob: -12.000531196594238
    7. '():' → logprob: -13.000531196594238
    8. ',' → logprob: -13.125531196594238
    9. '<|end|>' → logprob: -13.375531196594238
    10. '    ' → logprob: -13.875531196594238

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006940563675016165
    2. '    ' → logprob: -5.1319403648376465
    3. '   ' → logprob: -8.006940841674805
    4. '        ' → logprob: -8.381940841674805
    5. '        
' → logprob: -9.131940841674805
    6. ':' → logprob: -9.756940841674805
    7. ' ' → logprob: -9.881940841674805
    8. ' 
' → logprob: -10.381940841674805
    9. '      ' → logprob: -10.381940841674805
    10. '     ' → logprob: -10.506940841674805

Token 478: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6943331360816956
    2. 'if' → logprob: -0.8193331360816956
    3. ' if' → logprob: -2.819333076477051
    4. 'while' → logprob: -9.81933307647705
    5. '   ' → logprob: -10.06933307647705
    6. '	if' → logprob: -10.44433307647705
    7. '        ' → logprob: -10.56933307647705
    8. '    ' → logprob: -10.81933307647705
    9. '           ' → logprob: -11.06933307647705
    10. ' while' → logprob: -11.94433307647705

Token 479: ' Uncomment' (ID: 168644)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07208643853664398
    2. 'l' → logprob: -3.4470863342285156
    3. 'if' → logprob: -3.5720863342285156
    4. 'forward' → logprob: -5.072086334228516
    5. ' r' → logprob: -6.822086334228516
    6. '   ' → logprob: -7.697086334228516
    7. ' if' → logprob: -7.822086334228516
    8. 'not' → logprob: -7.822086334228516
    9. 'while' → logprob: -7.822086334228516
    10. ' forward' → logprob: -8.322086334228516

Token 480: ' for' (ID: 395)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.9927853345870972
    2. '    ' → logprob: -1.1177853345870972
    3. ' if' → logprob: -2.1177854537963867
    4. '       ' → logprob: -3.2427854537963867
    5. ' ' → logprob: -3.4927854537963867
    6. '#' → logprob: -3.6177854537963867
    7. ' forward' → logprob: -3.6177854537963867
    8. ' #' → logprob: -4.492785453796387
    9. 'if' → logprob: -4.992785453796387
    10. 'r' → logprob: -5.117785453796387

Token 481: ' step' (ID: 5983)
  Prédit: ' debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' debug' → logprob: -0.521979808807373
    2. ' r' → logprob: -1.646979808807373
    3. ' forward' → logprob: -2.521979808807373
    4. ' l' → logprob: -3.146979808807373
    5. ' debugging' → logprob: -3.146979808807373
    6. 'r' → logprob: -3.646979808807373
    7. 'debug' → logprob: -4.396979808807373
    8. ' not' → logprob: -6.146979808807373
    9. '    ' → logprob: -6.521979808807373
    10. 'forward' → logprob: -6.521979808807373

Token 482: '-by' (ID: 23541)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0280524492263794
    2. 'by' → logprob: -1.2780524492263794
    3. 'wise' → logprob: -1.5280524492263794
    4. '-by' → logprob: -2.90305233001709
    5. '#' → logprob: -3.02805233001709
    6. ' by' → logprob: -4.15305233001709
    7. '       ' → logprob: -4.90305233001709
    8. '    ' → logprob: -5.52805233001709
    9. 'debug' → logprob: -5.52805233001709
    10. 'forward' → logprob: -6.40305233001709

Token 483: '-step' (ID: 41570)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0005672106635756791
    2. ' step' → logprob: -7.875567436218262
    3. '-step' → logprob: -9.000567436218262
    4. 'line' → logprob: -10.375567436218262
    5. '#' → logprob: -11.625567436218262
    6. '_step' → logprob: -11.750567436218262
    7. '1' → logprob: -12.750567436218262
    8. '   ' → logprob: -12.875567436218262
    9. 'while' → logprob: -13.375567436218262
    10. 'space' → logprob: -13.375567436218262

Token 484: ' debug' (ID: 15199)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.953789472579956
    2. ' debug' → logprob: -1.328789472579956
    3. ' #' → logprob: -1.578789472579956
    4. 'debug' → logprob: -2.328789472579956
    5. '       ' → logprob: -3.828789472579956
    6. ' debugging' → logprob: -4.453789710998535
    7. ' if' → logprob: -5.203789710998535
    8. '   ' → logprob: -5.828789710998535
    9. ' forward' → logprob: -6.578789710998535
    10. 'if' → logprob: -7.578789710998535

Token 485: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13458532094955444
    2. '#' → logprob: -2.134585380554199
    3. ' #' → logprob: -5.009585380554199
    4. '   ' → logprob: -8.0095853805542
    5. '<|end|>' → logprob: -8.6345853805542
    6. '        
' → logprob: -9.1345853805542
    7. '        ' → logprob: -9.3845853805542
    8. ' ' → logprob: -10.1345853805542
    9. '           ' → logprob: -10.3845853805542
    10. '      ' → logprob: -10.5095853805542

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008055731654167175
    2. '#' → logprob: -4.883055686950684
    3. ' #' → logprob: -8.133055686950684
    4. '        
' → logprob: -9.758055686950684
    5. '        ' → logprob: -10.383055686950684
    6. '   ' → logprob: -10.758055686950684
    7. '           ' → logprob: -11.133055686950684
    8. '      ' → logprob: -12.133055686950684
    9. '```' → logprob: -12.383055686950684
    10. ' if' → logprob: -12.508055686950684

Token 487: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1366221010684967
    2. '       ' → logprob: -2.261622190475464
    3. ' #' → logprob: -3.761622190475464
    4. '#if' → logprob: -8.886622428894043
    5. '   ' → logprob: -10.261622428894043
    6. ' if' → logprob: -10.511622428894043
    7. 'if' → logprob: -10.761622428894043
    8. '#print' → logprob: -11.636622428894043
    9. '```' → logprob: -12.136622428894043
    10. '#
' → logprob: -12.136622428894043

Token 488: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15506203472614288
    2. ' if' → logprob: -2.155061960220337
    3. '       ' → logprob: -4.155062198638916
    4. '#' → logprob: -5.030062198638916
    5. 'while' → logprob: -5.530062198638916
    6. ' while' → logprob: -7.655062198638916
    7. '   ' → logprob: -7.905062198638916
    8. ' #' → logprob: -8.030061721801758
    9. '#if' → logprob: -9.405061721801758
    10. '    ' → logprob: -9.530061721801758

Token 489: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.318560928106308
    2. '(l' → logprob: -1.9435609579086304
    3. '("' → logprob: -2.443560838699341
    4. '()' → logprob: -3.943560838699341
    5. '(f' → logprob: -4.06856107711792
    6. '('' → logprob: -5.69356107711792
    7. '(r' → logprob: -6.81856107711792
    8. '(x' → logprob: -6.94356107711792
    9. '("")' → logprob: -8.318560600280762
    10. '("("' → logprob: -8.818560600280762

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005533031187951565
    2. ')' → logprob: -5.630533218383789
    3. ' ,' → logprob: -6.630533218383789
    4. ',r' → logprob: -8.005533218383789
    5. ',
' → logprob: -8.755533218383789
    6. '<|end|>' → logprob: -10.130533218383789
    7. '   ' → logprob: -11.255533218383789
    8. ',)' → logprob: -11.630533218383789
    9. ' )' → logprob: -11.880533218383789
    10. ' ' → logprob: -12.380533218383789

Token 491: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.718606891809031e-05
    2. ' r' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.500066757202148
    4. ',r' → logprob: -15.625066757202148
    5. ',' → logprob: -15.875066757202148
    6. 'xo' → logprob: -16.12506675720215
    7. ')' → logprob: -16.50006675720215
    8. '"' → logprob: -16.87506675720215
    9. '```' → logprob: -16.87506675720215
    10. ' ' → logprob: -17.25006675720215

Token 492: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15477146208286285
    2. ',' → logprob: -2.029771566390991
    3. '       ' → logprob: -4.529771327972412
    4. '<|end|>' → logprob: -8.02977180480957
    5. ' if' → logprob: -8.77977180480957
    6. ' )' → logprob: -9.02977180480957
    7. '   ' → logprob: -9.77977180480957
    8. ',
' → logprob: -9.77977180480957
    9. ')
' → logprob: -9.90477180480957
    10. ' ,' → logprob: -9.90477180480957

Token 493: ' ans' (ID: 3345)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.0111493319272995
    2. ' xo' → logprob: -4.6361494064331055
    3. 'su' → logprob: -7.3861494064331055
    4. '   ' → logprob: -8.136149406433105
    5. ')' → logprob: -9.011149406433105
    6. 'xor' → logprob: -9.136149406433105
    7. '"' → logprob: -10.261149406433105
    8. 'x' → logprob: -10.511149406433105
    9. 'ans' → logprob: -11.011149406433105
    10. '")' → logprob: -11.136149406433105

Token 494: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01316894218325615
    2. '       ' → logprob: -4.763168811798096
    3. ',' → logprob: -5.763168811798096
    4. ')
' → logprob: -6.638168811798096
    5. ' )' → logprob: -10.638169288635254
    6. '   ' → logprob: -11.388169288635254
    7. '):' → logprob: -11.513169288635254
    8. '           ' → logprob: -11.638169288635254
    9. '#' → logprob: -12.138169288635254
    10. '")' → logprob: -12.513169288635254

Token 495: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.11180488765239716
    2. ' xo' → logprob: -2.861804962158203
    3. ')' → logprob: -4.111804962158203
    4. '       ' → logprob: -4.486804962158203
    5. '#' → logprob: -5.486804962158203
    6. 'su' → logprob: -5.736804962158203
    7. '"' → logprob: -6.236804962158203
    8. 'l' → logprob: -6.611804962158203
    9. '   ' → logprob: -6.736804962158203
    10. '        ' → logprob: -6.736804962158203

Token 496: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06674791127443314
    2. ',' → logprob: -2.8167479038238525
    3. '       ' → logprob: -5.441748142242432
    4. ')
' → logprob: -8.816747665405273
    5. ' )' → logprob: -9.816747665405273
    6. ',)' → logprob: -9.816747665405273
    7. ')#' → logprob: -10.191747665405273
    8. '#' → logprob: -10.191747665405273
    9. '   ' → logprob: -10.566747665405273
    10. ' ,' → logprob: -11.441747665405273

Token 497: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.016173018142580986
    2. ' su' → logprob: -4.141172885894775
    3. ')' → logprob: -9.016173362731934
    4. '"' → logprob: -12.016173362731934
    5. '    ' → logprob: -13.266173362731934
    6. ' )' → logprob: -13.891173362731934
    7. ' ' → logprob: -14.016173362731934
    8. 's' → logprob: -14.016173362731934
    9. '
' → logprob: -14.141173362731934
    10. ''' → logprob: -14.391173362731934

Token 498: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13814570009708405
    2. '       ' → logprob: -2.138145685195923
    3. ')
' → logprob: -4.638145923614502
    4. ',' → logprob: -6.888145923614502
    5. '#' → logprob: -8.888145446777344
    6. '):
' → logprob: -9.388145446777344
    7. '   ' → logprob: -10.388145446777344
    8. ')#' → logprob: -10.638145446777344
    9. '")' → logprob: -10.763145446777344
    10. ' )' → logprob: -10.763145446777344

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022070204431656748
    2. ' if' → logprob: -9.37522029876709
    3. '	' → logprob: -10.12522029876709
    4. 'if' → logprob: -10.50022029876709
    5. '        ' → logprob: -10.87522029876709
    6. '        
' → logprob: -12.00022029876709
    7. '           ' → logprob: -12.12522029876709
    8. '   ' → logprob: -12.12522029876709
    9. ' ' → logprob: -12.12522029876709
    10. '```' → logprob: -12.37522029876709

Token 500: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0025420128367841244
    2. ' if' → logprob: -6.252542018890381
    3. '       ' → logprob: -7.627542018890381
    4. 'while' → logprob: -10.002541542053223
    5. 'i' → logprob: -10.377541542053223
    6. 'r' → logprob: -10.627541542053223
    7. '   ' → logprob: -11.002541542053223
    8. '	if' → logprob: -12.752541542053223
    9. '    ' → logprob: -13.502541542053223
    10. '           ' → logprob: -13.877541542053223

Token 501: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3290422856807709
    2. 'forward' → logprob: -1.3290423154830933
    3. ' r' → logprob: -4.704042434692383
    4. ' forward' → logprob: -5.329042434692383
    5. '   ' → logprob: -6.829042434692383
    6. 'for' → logprob: -8.454042434692383
    7. ' ' → logprob: -8.704042434692383
    8. 'l' → logprob: -9.954042434692383
    9. '(for' → logprob: -10.079042434692383
    10. '     ' → logprob: -10.891542434692383

Token 502: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0949765294790268
    2. '<' → logprob: -2.5949764251708984
    3. ' <=' → logprob: -4.969976425170898
    4. ' ==' → logprob: -5.344976425170898
    5. '<=' → logprob: -6.469976425170898
    6. '==' → logprob: -6.969976425170898
    7. '<len' → logprob: -7.594976425170898
    8. '<n' → logprob: -8.094976425170898
    9. ')' → logprob: -8.594976425170898
    10. '   ' → logprob: -8.719976425170898

Token 503: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000629279064014554
    2. ' n' → logprob: -7.375629425048828
    3. '   ' → logprob: -13.375629425048828
    4. '	n' → logprob: -14.875629425048828
    5. '0' → logprob: -15.000629425048828
    6. ')n' → logprob: -15.625629425048828
    7. '=n' → logprob: -16.500629425048828
    8. '<n' → logprob: -17.125629425048828
    9. '
' → logprob: -17.500629425048828
    10. 'l' → logprob: -17.750629425048828

Token 504: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005010428838431835
    2. ' or' → logprob: -6.130010604858398
    3. ' and' → logprob: -6.630010604858398
    4. ':
' → logprob: -6.755010604858398
    5. '):' → logprob: -9.380010604858398
    6. '       ' → logprob: -9.505010604858398
    7. '           ' → logprob: -9.880010604858398
    8. ':return' → logprob: -10.005010604858398
    9. 'and' → logprob: -10.630010604858398
    10. ')' → logprob: -10.755010604858398

Token 505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007454472593963146
    2. '       ' → logprob: -6.1324543952941895
    3. ':' → logprob: -6.2574543952941895
    4. ' if' → logprob: -7.0074543952941895
    5. '<|end|>' → logprob: -7.0074543952941895
    6. '               ' → logprob: -7.8824543952941895
    7. ':
' → logprob: -8.257454872131348
    8. ',' → logprob: -8.882454872131348
    9. '        ' → logprob: -9.257454872131348
    10. '            ' → logprob: -9.632454872131348

Token 506: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7498909831047058
    2. 'if' → logprob: -0.9998909831047058
    3. '           ' → logprob: -1.8748910427093506
    4. '       ' → logprob: -5.7498908042907715
    5. ' if' → logprob: -5.8748908042907715
    6. ' break' → logprob: -8.49989128112793
    7. '   ' → logprob: -10.62489128112793
    8. '               ' → logprob: -10.62489128112793
    9. '```' → logprob: -10.74989128112793
    10. 'br' → logprob: -11.87489128112793

Token 507: ' All' (ID: 2545)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37801286578178406
    2. 'break' → logprob: -1.2530128955841064
    3. '           ' → logprob: -3.7530128955841064
    4. '       ' → logprob: -5.503012657165527
    5. ' if' → logprob: -6.628012657165527
    6. '```' → logprob: -9.878012657165527
    7. ' break' → logprob: -10.003012657165527
    8. '   ' → logprob: -10.003012657165527
    9. 'br' → logprob: -10.128012657165527
    10. 'b' → logprob: -10.253012657165527

Token 508: ' elements' (ID: 8632)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7212290167808533
    2. 'break' → logprob: -1.596229076385498
    3. ' l' → logprob: -2.596229076385498
    4. 'sub' → logprob: -3.721229076385498
    5. 's' → logprob: -3.846229076385498
    6. ')' → logprob: -3.846229076385498
    7. ' ' → logprob: -3.846229076385498
    8. '       ' → logprob: -3.971229076385498
    9. 'right' → logprob: -4.221229076385498
    10. 'r' → logprob: -4.346229076385498

Token 509: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.7308105826377869
    2. 'have' → logprob: -1.2308106422424316
    3. 'processed' → logprob: -2.7308106422424316
    4. '           ' → logprob: -2.7308106422424316
    5. ' processed' → logprob: -2.8558106422424316
    6. ' are' → logprob: -3.8558106422424316
    7. 'are' → logprob: -5.855810642242432
    8. '       ' → logprob: -5.855810642242432
    9. '=' → logprob: -5.980810642242432
    10. 'added' → logprob: -6.980810642242432

Token 510: ' been' (ID: 1339)
  Prédit: 'been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'been' → logprob: -0.428771048784256
    2. ' been' → logprob: -1.0537710189819336
    3. '```' → logprob: -11.178771018981934
    4. 'be' → logprob: -11.428771018981934
    5. 'already' → logprob: -11.428771018981934
    6. 'processed' → logprob: -12.053771018981934
    7. '#' → logprob: -12.178771018981934
    8. 'b' → logprob: -12.553771018981934
    9. '   ' → logprob: -12.553771018981934
    10. '       ' → logprob: -12.678771018981934

Token 511: ' considered' (ID: 9474)
  Prédit: 'processed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'processed' → logprob: -0.026261409744620323
    2. 'consider' → logprob: -4.026261329650879
    3. 'checked' → logprob: -6.151261329650879
    4. ' processed' → logprob: -6.151261329650879
    5. 'included' → logprob: -6.276261329650879
    6. 'visited' → logprob: -7.276261329650879
    7. 'covered' → logprob: -7.401261329650879
    8. '```' → logprob: -8.901261329650879
    9. 'expanded' → logprob: -9.026261329650879
    10. 'added' → logprob: -9.526261329650879

Token 512: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002348411362618208
    2. '       ' → logprob: -7.25234842300415
    3. ':' → logprob: -7.62734842300415
    4. ',' → logprob: -8.002347946166992
    5. ' and' → logprob: -8.252347946166992
    6. '               ' → logprob: -8.627347946166992
    7. ':
' → logprob: -9.002347946166992
    8. '\n' → logprob: -9.877347946166992
    9. '
' → logprob: -10.252347946166992
    10. '          ' → logprob: -10.627347946166992

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041435761377215385
    2. '       ' → logprob: -6.254143714904785
    3. '               ' → logprob: -6.879143714904785
    4. ':' → logprob: -7.629143714904785
    5. '\n' → logprob: -8.504143714904785
    6. ',' → logprob: -8.879143714904785
    7. '          ' → logprob: -9.879143714904785
    8. '.' → logprob: -10.004143714904785
    9. ':
' → logprob: -10.254143714904785
    10. '```' → logprob: -10.379143714904785

Token 514: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2593141794204712
    2. 'break' → logprob: -1.5093141794204712
    3. '           ' → logprob: -5.384314060211182
    4. '       ' → logprob: -6.259314060211182
    5. ' if' → logprob: -7.259314060211182
    6. '   ' → logprob: -9.63431453704834
    7. ' break' → logprob: -10.50931453704834
    8. '```' → logprob: -10.63431453704834
    9. '
' → logprob: -12.00931453704834
    10. '            
' → logprob: -12.13431453704834

Token 515: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.339278580620885e-06
    2. 'ans' → logprob: -13.375001907348633
    3. '(' → logprob: -14.125001907348633
    4. '	ans' → logprob: -17.125001907348633
    5. '(answer' → logprob: -18.500001907348633
    6. ' (' → logprob: -18.625001907348633
    7. '(
' → logprob: -19.375001907348633
    8. '(abs' → logprob: -19.875001907348633
    9. ' ans' → logprob: -20.125001907348633
    10. '((' → logprob: -21.250001907348633

Token 516: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5769978165626526
    2. ')' → logprob: -0.8269978165626526
    3. ')
' → logprob: -6.951997756958008
    4. '           ' → logprob: -10.451997756958008
    5. ')`
' → logprob: -10.701997756958008
    6. '       ' → logprob: -10.951997756958008
    7. ')return' → logprob: -11.326997756958008
    8. '               ' → logprob: -12.326997756958008
    9. ')`' → logprob: -12.326997756958008
    10. ')

' → logprob: -13.451997756958008

Token 517: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.080963092041202e-06
    2. '               ' → logprob: -13.250004768371582
    3. '       ' → logprob: -13.875004768371582
    4. '		' → logprob: -14.625004768371582
    5. '          ' → logprob: -14.625004768371582
    6. '<|end|>' → logprob: -14.875004768371582
    7. '            
' → logprob: -15.125004768371582
    8. '            ' → logprob: -15.625004768371582
    9. ')' → logprob: -15.875004768371582
    10. '```' → logprob: -16.3750057220459

Token 518: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017739903181791306
    2. 'return' (adapté à ' return') → logprob: -4.392739772796631
    3. 'break' → logprob: -5.267739772796631
    4. '            
' → logprob: -10.892740249633789
    5. '		' → logprob: -11.517740249633789
    6. ' break' → logprob: -11.642740249633789
    7. ' return' → logprob: -12.017740249633789
    8. '```' → logprob: -12.267740249633789
    9. '
' → logprob: -12.767740249633789
    10. 'b' → logprob: -13.017740249633789

Token 519: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3047167956829071
    2. '<|end|>' → logprob: -2.0547168254852295
    3. '        
' → logprob: -3.1797168254852295
    4. '
' → logprob: -3.3047168254852295
    5. ' 
' → logprob: -3.6797168254852295
    6. '\n' → logprob: -4.67971658706665
    7. '  
' → logprob: -5.05471658706665
    8. '    
' → logprob: -5.67971658706665
    9. '        ' → logprob: -6.42971658706665
    10. ' ' → logprob: -6.55471658706665

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03040509670972824
    2. ' if' → logprob: -4.405405044555664
    3. 'if' → logprob: -5.030405044555664
    4. '<|end|>' → logprob: -5.530405044555664
    5. '        ' → logprob: -6.155405044555664
    6. '        
' → logprob: -7.155405044555664
    7. ' 
' → logprob: -7.280405044555664
    8. '[' → logprob: -8.030405044555664
    9. '```' → logprob: -8.280405044555664
    10. 't' → logprob: -8.405405044555664

Token 521: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17215995490550995
    2. ' if' → logprob: -2.0471599102020264
    3. 'x' → logprob: -5.1721601486206055
    4. 'elif' → logprob: -5.2971601486206055
    5. 'while' → logprob: -5.5471601486206055
    6. 'i' → logprob: -5.9221601486206055
    7. '   ' → logprob: -6.1721601486206055
    8. '       ' → logprob: -6.2971601486206055
    9. 'c' → logprob: -6.2971601486206055
    10. '+' → logprob: -6.7971601486206055

Token 522: ' forward' (ID: 6687)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.7900448441505432
    2. 'forward' → logprob: -1.6650447845458984
    3. 'xo' → logprob: -1.6650447845458984
    4. '(x' → logprob: -2.2900447845458984
    5. '(s' → logprob: -3.2900447845458984
    6. '(r' → logprob: -5.290044784545898
    7. '(l' → logprob: -5.290044784545898
    8. 'r' → logprob: -5.290044784545898
    9. ' xo' → logprob: -5.790044784545898
    10. 'xor' → logprob: -5.915044784545898

Token 523: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005177781917154789
    2. ' and' → logprob: -5.630177974700928
    3. 'and' → logprob: -7.255177974700928
    4. '==' → logprob: -7.880177974700928
    5. ':
' → logprob: -8.25517749786377
    6. ' :' → logprob: -8.75517749786377
    7. '):' → logprob: -10.25517749786377
    8. ' ==' → logprob: -11.13017749786377
    9. '[' → logprob: -12.50517749786377
    10. '>:' → logprob: -12.50517749786377

Token 524: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0307525396347046
    2. ' and' → logprob: -1.1557525396347046
    3. '           ' → logprob: -1.5307525396347046
    4. ' if' → logprob: -3.030752658843994
    5. ':
' → logprob: -3.780752658843994
    6. 'and' → logprob: -5.155752658843994
    7. 'if' → logprob: -5.405752658843994
    8. '       ' → logprob: -5.405752658843994
    9. ',' → logprob: -5.780752658843994
    10. '=' → logprob: -6.030752658843994

Token 525: ' #' (ID: 1069)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.37434449791908264
    2. 'if' → logprob: -1.2493444681167603
    3. 'x' → logprob: -4.999344348907471
    4. '   ' → logprob: -5.999344348907471
    5. '           ' → logprob: -6.124344348907471
    6. '#' (adapté à ' #') → logprob: -6.374344348907471
    7. 'nx' → logprob: -6.499344348907471
    8. 'su' → logprob: -6.624344348907471
    9. ' xo' → logprob: -6.624344348907471
    10. 'new' → logprob: -6.749344348907471

Token 526: ' Expand' (ID: 81299)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.724179208278656
    2. 'if' → logprob: -0.974179208278656
    3. ' if' → logprob: -2.849179267883301
    4. 'x' → logprob: -3.349179267883301
    5. ' xo' → logprob: -4.474179267883301
    6. 'val' → logprob: -4.849179267883301
    7. '   ' → logprob: -5.474179267883301
    8. '#' → logprob: -5.724179267883301
    9. 'su' → logprob: -6.474179267883301
    10. 'nx' → logprob: -6.724179267883301

Token 527: ' the' (ID: 290)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6426773071289062
    2. ' r' → logprob: -0.7676773071289062
    3. '   ' → logprob: -5.267677307128906
    4. ')' → logprob: -6.517677307128906
    5. '           ' → logprob: -6.642677307128906
    6. '(r' → logprob: -6.892677307128906
    7. ' the' → logprob: -8.142677307128906
    8. '    ' → logprob: -8.767677307128906
    9. '       ' → logprob: -9.142677307128906
    10. ' ' → logprob: -9.142677307128906

Token 528: ' window' (ID: 5734)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.020927684381604195
    2. 'window' → logprob: -4.520927906036377
    3. ' r' → logprob: -5.145927906036377
    4. ' window' → logprob: -6.645927906036377
    5. 'if' → logprob: -7.145927906036377
    6. 'xo' → logprob: -7.520927906036377
    7. 'lis' → logprob: -8.645927429199219
    8. '   ' → logprob: -8.770927429199219
    9. 'right' → logprob: -9.020927429199219
    10. 'xor' → logprob: -9.020927429199219

Token 529: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2177762985229492
    2. ':' → logprob: -1.5927762985229492
    3. '<|end|>' → logprob: -1.5927762985229492
    4. '               ' → logprob: -2.217776298522949
    5. ' and' → logprob: -3.092776298522949
    6. '<|end|>' → logprob: -3.717776298522949
    7. '            ' → logprob: -4.342776298522949
    8. ' by' → logprob: -4.467776298522949
    9. '       ' → logprob: -4.592776298522949
    10. ')' → logprob: -4.592776298522949

Token 530: ' moving' (ID: 10067)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21253694593906403
    2. ' r' → logprob: -2.3375370502471924
    3. 'adding' → logprob: -2.8375370502471924
    4. '1' → logprob: -4.462536811828613
    5. ' adding' → logprob: -4.462536811828613
    6. 'including' → logprob: -5.962536811828613
    7. ')' → logprob: -6.212536811828613
    8. 'lis' → logprob: -6.337536811828613
    9. ' lis' → logprob: -6.462536811828613
    10. ' including' → logprob: -6.587536811828613

Token 531: ' the' (ID: 290)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07891656458377838
    2. ' r' → logprob: -2.578916549682617
    3. ' the' → logprob: -11.578916549682617
    4. '`' → logprob: -12.203916549682617
    5. '_r' → logprob: -12.703916549682617
    6. ')' → logprob: -13.203916549682617
    7. 'the' → logprob: -13.703916549682617
    8. '```' → logprob: -13.703916549682617
    9. '(r' → logprob: -13.953916549682617
    10. 'right' → logprob: -14.578916549682617

Token 532: ' right' (ID: 1849)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00017112065688706934
    2. ' r' → logprob: -9.000170707702637
    3. 'right' → logprob: -10.625170707702637
    4. ' ' → logprob: -11.375170707702637
    5. 'space' → logprob: -12.250170707702637
    6. ' right' → logprob: -13.125170707702637
    7. '`' → logprob: -13.250170707702637
    8. '```' → logprob: -13.750170707702637
    9. ' 
' → logprob: -14.250170707702637
    10. '_r' → logprob: -15.000170707702637

Token 533: ' pointer' (ID: 16233)
  Prédit: ' pointer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pointer' → logprob: -0.8848193883895874
    2. 'r' → logprob: -1.7598193883895874
    3. ')' → logprob: -2.009819507598877
    4. 'pointer' → logprob: -2.259819507598877
    5. ' ' → logprob: -2.884819507598877
    6. '[' → logprob: -3.009819507598877
    7. '_pointer' → logprob: -3.884819507598877
    8. ' r' → logprob: -4.259819507598877
    9. '_' → logprob: -5.009819507598877
    10. ' )' → logprob: -5.134819507598877

Token 534: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8097296953201294
    2. ':' → logprob: -1.8097296953201294
    3. ' ' → logprob: -2.68472957611084
    4. ',' → logprob: -2.93472957611084
    5. '<|end|>' → logprob: -3.05972957611084
    6. '           ' → logprob: -3.43472957611084
    7. ']' → logprob: -3.80972957611084
    8. '):' → logprob: -3.93472957611084
    9. ' and' → logprob: -4.18472957611084
    10. '=' → logprob: -4.43472957611084

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7928634881973267
    2. ':' → logprob: -1.7928634881973267
    3. ')' → logprob: -1.9178634881973267
    4. ',' → logprob: -3.292863368988037
    5. ' and' → logprob: -3.417863368988037
    6. ' ' → logprob: -3.792863368988037
    7. '            ' → logprob: -4.042863368988037
    8. ' 
' → logprob: -4.292863368988037
    9. ':
' → logprob: -4.417863368988037
    10. '):' → logprob: -4.667863368988037

Token 536: ' xo' (ID: 46871)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8389759063720703
    2. 'xo' (adapté à ' xo') → logprob: -0.9639759063720703
    3. ' if' → logprob: -2.2139759063720703
    4. ' xo' → logprob: -3.7139759063720703
    5. 'x' → logprob: -4.58897590637207
    6. 'su' → logprob: -4.96397590637207
    7. 'val' → logprob: -4.96397590637207
    8. 'new' → logprob: -5.33897590637207
    9. ' new' → logprob: -5.46397590637207
    10. ' val' → logprob: -6.08897590637207

Token 537: ' =' (ID: 314)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.25248655676841736
    2. '^' → logprob: -1.5024865865707397
    3. ' ^' → logprob: -7.627486705780029
    4. '=' → logprob: -9.752486228942871
    5. '_^' → logprob: -12.752486228942871
    6. '^)' → logprob: -13.127486228942871
    7. ' =' → logprob: -13.377486228942871
    8. '^{' → logprob: -13.502486228942871
    9. ')^' → logprob: -14.127486228942871
    10. ' ' → logprob: -14.252486228942871

Token 538: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.004300153348594904
    2. ' xo' → logprob: -5.754300117492676
    3. 'xor' → logprob: -7.254300117492676
    4. 'x' → logprob: -8.129300117492676
    5. '0' → logprob: -10.129300117492676
    6. '(x' → logprob: -10.379300117492676
    7. 'r' → logprob: -10.754300117492676
    8. 'lio' → logprob: -12.379300117492676
    9. ' ' → logprob: -12.504300117492676
    10. 'oxo' → logprob: -13.379300117492676

Token 539: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.47411397099494934
    2. '^' → logprob: -0.974113941192627
    3. ' ^=' → logprob: -10.974114418029785
    4. ' xor' → logprob: -11.724114418029785
    5. '^{' → logprob: -12.474114418029785
    6. ' ' → logprob: -12.849114418029785
    7. '^(' → logprob: -14.224114418029785
    8. '^)' → logprob: -14.474114418029785
    9. ' ^
' → logprob: -14.474114418029785
    10. ' ' → logprob: -14.474114418029785

Token 540: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.0008372656302526593
    2. ' lis' → logprob: -7.125837326049805
    3. 'li' → logprob: -10.750837326049805
    4. 'lic' → logprob: -12.125837326049805
    5. 'l' → logprob: -13.625837326049805
    6. 'ls' → logprob: -13.750837326049805
    7. 'lus' → logprob: -14.250837326049805
    8. 'list' → logprob: -14.250837326049805
    9. '   ' → logprob: -15.375837326049805
    10. 'Lis' → logprob: -15.375837326049805

Token 541: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00024215869780164212
    2. 'r' → logprob: -8.375242233276367
    3. '[' → logprob: -11.375242233276367
    4. '(r' → logprob: -16.125242233276367
    5. ' r' → logprob: -16.875242233276367
    6. '	r' → logprob: -17.250242233276367
    7. '[
' → logprob: -18.500242233276367
    8. '```' → logprob: -19.375242233276367
    9. '[t' → logprob: -19.750242233276367
    10. ' [' → logprob: -19.875242233276367

Token 542: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001061390619724989
    2. ']
' → logprob: -7.25106143951416
    3. ' ]' → logprob: -8.62606143951416
    4. ')' → logprob: -9.00106143951416
    5. '])' → logprob: -10.37606143951416
    6. '<|end|>' → logprob: -11.75106143951416
    7. ')]' → logprob: -13.12606143951416
    8. ']
' → logprob: -13.87606143951416
    9. ']

' → logprob: -13.87606143951416
    10. '[' → logprob: -14.50106143951416

Token 543: '          ' (ID: 3550)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 544: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: ' Update' (ID: 9152)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.08908472210168839
    2. 'xo' → logprob: -3.0890846252441406
    3. 'r' → logprob: -3.9640846252441406
    4. 'xor' → logprob: -4.964084625244141
    5. 'x' → logprob: -5.339084625244141
    6. '<|end|>' → logprob: -5.714084625244141
    7. 's' → logprob: -6.339084625244141
    8. ' xo' → logprob: -6.839084625244141
    9. ' ' → logprob: -7.089084625244141
    10. ' su' → logprob: -7.464084625244141

Token 546: ' XOR' (ID: 147209)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.0006855101673863828
    2. ' xo' → logprob: -7.375685691833496
    3. 'xor' → logprob: -10.250685691833496
    4. 'r' → logprob: -11.000685691833496
    5. 'su' → logprob: -13.250685691833496
    6. ' ' → logprob: -13.375685691833496
    7. 'oxo' → logprob: -14.125685691833496
    8. 'x' → logprob: -14.500685691833496
    9. 'xu' → logprob: -15.000685691833496
    10. 'lis' → logprob: -15.250685691833496

Token 547: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: ' the' (ID: 290)
  Prédit: ' lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lis' → logprob: -0.3495253622531891
    2. 'lis' → logprob: -1.2245253324508667
    3. ' a' → logprob: -7.974525451660156
    4. ' the' → logprob: -8.974525451660156
    5. 'list' → logprob: -9.349525451660156
    6. ' ' → logprob: -9.599525451660156
    7. '```' → logprob: -9.724525451660156
    8. '`' → logprob: -9.849525451660156
    9. 'r' → logprob: -10.099525451660156
    10. 'space' → logprob: -10.099525451660156

Token 549: ' next' (ID: 2613)
  Prédit: ' lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lis' → logprob: -0.5997998118400574
    2. 'lis' → logprob: -1.0997998714447021
    3. 'r' → logprob: -2.474799871444702
    4. ' ' → logprob: -5.099799633026123
    5. ' r' → logprob: -5.474799633026123
    6. ' next' → logprob: -5.599799633026123
    7. '^' → logprob: -5.724799633026123
    8. '[r' → logprob: -6.474799633026123
    9. '[' → logprob: -6.599799633026123
    10. 'list' → logprob: -6.599799633026123

Token 550: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.8751024007797241
    2. ' ' → logprob: -1.3751024007797241
    3. 'element' → logprob: -1.5001024007797241
    4. '<|end|>' → logprob: -2.5001025199890137
    5. ')' → logprob: -4.875102519989014
    6. 'token' → logprob: -5.375102519989014
    7. ' token' → logprob: -6.125102519989014
    8. '[' → logprob: -6.375102519989014
    9. '^' → logprob: -6.375102519989014
    10. '_' → logprob: -7.000102519989014

Token 551: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 553: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' (adapté à ' su') → logprob: -0.13579943776130676
    2. ' su' → logprob: -2.1357994079589844
    3. '           ' → logprob: -4.760799407958984
    4. '            ' → logprob: -8.510799407958984
    5. '               ' → logprob: -11.010799407958984
    6. '          ' → logprob: -11.135799407958984
    7. '       ' → logprob: -11.510799407958984
    8. '    ' → logprob: -11.885799407958984
    9. '        ' → logprob: -12.010799407958984
    10. ' ' → logprob: -12.510799407958984

Token 554: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.41122400760650635
    2. '+=' → logprob: -1.1612240076065063
    3. '=' → logprob: -4.161223888397217
    4. ' =' → logprob: -4.786223888397217
    5. '+' → logprob: -9.036224365234375
    6. ' +' → logprob: -12.036224365234375
    7. ']+=' → logprob: -14.911224365234375
    8. ' ' → logprob: -15.161224365234375
    9. '+='' → logprob: -15.536224365234375
    10. '.=' → logprob: -15.911224365234375

Token 555: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.00020568605395965278
    2. ' lis' → logprob: -8.500205993652344
    3. 'lic' → logprob: -14.000205993652344
    4. 'li' → logprob: -14.750205993652344
    5. 'lus' → logprob: -15.500205993652344
    6. 'ls' → logprob: -15.750205993652344
    7. 'liz' → logprob: -15.875205993652344
    8. 'list' → logprob: -16.250205993652344
    9. 'Lis' → logprob: -16.375205993652344
    10. '   ' → logprob: -16.875205993652344

Token 556: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.6087021473795176e-05
    2. 'r' → logprob: -10.125045776367188
    3. '[' → logprob: -12.125045776367188
    4. '   ' → logprob: -15.500045776367188
    5. ' [' → logprob: -15.625045776367188
    6. '[
' → logprob: -17.375045776367188
    7. '(r' → logprob: -17.875045776367188
    8. ' ' → logprob: -18.000045776367188
    9. '[s' → logprob: -18.250045776367188
    10. 's' → logprob: -18.375045776367188

Token 557: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029289720114320517
    2. '<|end|>' → logprob: -6.627928733825684
    3. ')' → logprob: -6.877928733825684
    4. ' ]' → logprob: -7.877928733825684
    5. ']
' → logprob: -9.752928733825684
    6. '       ' → logprob: -10.252928733825684
    7. '<|end|>' → logprob: -10.502928733825684
    8. ')]' → logprob: -10.502928733825684
    9. '           ' → logprob: -11.252928733825684
    10. '[r' → logprob: -11.502928733825684

Token 558: '              ' (ID: 4442)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 559: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 560: ' Update' (ID: 9152)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7119043469429016
    2. 'su' → logprob: -0.9619043469429016
    3. ' su' → logprob: -2.461904287338257
    4. ' r' → logprob: -3.461904287338257
    5. '           ' → logprob: -5.211904525756836
    6. 's' → logprob: -5.461904525756836
    7. '            ' → logprob: -7.711904525756836
    8. '          ' → logprob: -9.836904525756836
    9. '<|end|>' → logprob: -9.836904525756836
    10. '        ' → logprob: -10.461904525756836

Token 561: ' sum' (ID: 4215)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.09811557829380035
    2. ' su' → logprob: -2.4731156826019287
    3. 'lis' → logprob: -5.22311544418335
    4. ' lis' → logprob: -5.59811544418335
    5. 's' → logprob: -11.723115921020508
    6. 'li' → logprob: -11.848115921020508
    7. ' ' → logprob: -11.848115921020508
    8. '<|end|>' → logprob: -11.973115921020508
    9. 'r' → logprob: -12.598115921020508
    10. 'sum' → logprob: -13.848115921020508

Token 562: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' the' (ID: 290)
  Prédit: ' lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lis' → logprob: -0.06995988637208939
    2. 'lis' → logprob: -2.694959878921509
    3. 'list' → logprob: -12.19495964050293
    4. ' liz' → logprob: -12.31995964050293
    5. ' lst' → logprob: -13.06995964050293
    6. 'li' → logprob: -13.69495964050293
    7. 'lst' → logprob: -13.81995964050293
    8. ' Lis' → logprob: -14.06995964050293
    9. '    ' → logprob: -14.06995964050293
    10. '```' → logprob: -14.19495964050293

Token 564: ' next' (ID: 2613)
  Prédit: ' lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lis' → logprob: -0.6267720460891724
    2. 'lis' → logprob: -1.0017720460891724
    3. ' next' → logprob: -2.626771926879883
    4. 'next' → logprob: -4.126771926879883
    5. 'r' → logprob: -5.126771926879883
    6. ' r' → logprob: -6.751771926879883
    7. 'list' → logprob: -7.251771926879883
    8. ' ' → logprob: -8.251771926879883
    9. '+' → logprob: -8.376771926879883
    10. '```' → logprob: -8.501771926879883

Token 565: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.20441150665283203
    2. 'element' → logprob: -1.704411506652832
    3. '[r' → logprob: -6.829411506652832
    4. ' ' → logprob: -7.704411506652832
    5. '_element' → logprob: -7.704411506652832
    6. ')' → logprob: -8.329411506652832
    7. '[' → logprob: -8.954411506652832
    8. '<|end|>' → logprob: -9.079411506652832
    9. '[l' → logprob: -9.204411506652832
    10. '(r' → logprob: -9.329411506652832

Token 566: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5073624849319458
    2. '<|end|>' → logprob: -1.0073624849319458
    3. ' ' → logprob: -4.507362365722656
    4. '       ' → logprob: -4.632362365722656
    5. '<|end|>' → logprob: -6.132362365722656
    6. ' if' → logprob: -6.257362365722656
    7. '            
' → logprob: -6.507362365722656
    8. ' 
' → logprob: -6.632362365722656
    9. '            ' → logprob: -7.007362365722656
    10. '               ' → logprob: -7.382362365722656

Token 568: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5170160531997681
    2. 'if' (adapté à ' if') → logprob: -1.017016053199768
    3. ' if' → logprob: -3.2670159339904785
    4. ' r' → logprob: -6.0170159339904785
    5. '           ' → logprob: -6.6420159339904785
    6. '   ' → logprob: -9.267016410827637
    7. '       ' → logprob: -10.642016410827637
    8. '            ' → logprob: -11.267016410827637
    9. '            
' → logprob: -12.017016410827637
    10. '```' → logprob: -12.142016410827637

Token 569: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.2923843562602997
    2. 'su' → logprob: -1.417384386062622
    3. ' xo' → logprob: -4.792384147644043
    4. '(x' → logprob: -6.417384147644043
    5. ' su' → logprob: -7.167384147644043
    6. 'xor' → logprob: -9.292384147644043
    7. '(s' → logprob: -9.417384147644043
    8. 'x' → logprob: -9.667384147644043
    9. 'so' → logprob: -9.792384147644043
    10. '   ' → logprob: -10.167384147644043

Token 570: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.43042632937431335
    2. ' ==' → logprob: -1.0554263591766357
    3. '<=' → logprob: -7.305426120758057
    4. '=' → logprob: -7.430426120758057
    5. ' <=' → logprob: -8.555426597595215
    6. '!=' → logprob: -8.930426597595215
    7. ' !=' → logprob: -9.680426597595215
    8. '>' → logprob: -10.680426597595215
    9. ' =' → logprob: -10.680426597595215
    10. ' >' → logprob: -12.180426597595215

Token 571: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.00017994173686020076
    2. ' su' → logprob: -8.6251802444458
    3. '           ' → logprob: -15.5001802444458
    4. '               ' → logprob: -17.125179290771484
    5. '                   ' → logprob: -17.500179290771484
    6. ' ' → logprob: -17.750179290771484
    7. '          ' → logprob: -18.500179290771484
    8. 's' → logprob: -18.625179290771484
    9. '```' → logprob: -18.750179290771484
    10. 'sur' → logprob: -18.750179290771484

Token 572: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04376545548439026
    2. ':
' → logprob: -3.1687655448913574
    3. '               ' → logprob: -7.918765544891357
    4. '           ' → logprob: -8.4187650680542
    5. ' and' → logprob: -8.9187650680542
    6. '):
' → logprob: -11.4187650680542
    7. ',' → logprob: -11.4187650680542
    8. '):' → logprob: -11.7937650680542
    9. '<|end|>' → logprob: -12.1687650680542
    10. ':
' → logprob: -13.0437650680542

Token 573: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025051478296518326
    2. '<|end|>' → logprob: -6.252505302429199
    3. '           ' → logprob: -8.3775053024292
    4. ':' → logprob: -9.2525053024292
    5. '<|end|>' → logprob: -9.6275053024292
    6. ',' → logprob: -10.1275053024292
    7. ' forward' → logprob: -10.1275053024292
    8. ')' → logprob: -11.0025053024292
    9. '              ' → logprob: -11.2525053024292
    10. '```' → logprob: -11.7525053024292

Token 574: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00035846480750478804
    2. '           ' → logprob: -8.000358581542969
    3. 'r' → logprob: -11.250358581542969
    4. ' ans' → logprob: -12.125358581542969
    5. '               ' → logprob: -12.875358581542969
    6. '   ' → logprob: -13.500358581542969
    7. '	ans' → logprob: -14.625358581542969
    8. '            
' → logprob: -16.62535858154297
    9. '       ' → logprob: -16.62535858154297
    10. '(ans' → logprob: -16.75035858154297

Token 575: ' The' (ID: 623)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0013313100207597017
    2. '           ' → logprob: -6.751331329345703
    3. '   ' → logprob: -9.751331329345703
    4. 'r' → logprob: -9.876331329345703
    5. ' ans' → logprob: -10.376331329345703
    6. '               ' → logprob: -11.626331329345703
    7. 'forward' → logprob: -12.126331329345703
    8. '       ' → logprob: -13.376331329345703
    9. 'answer' → logprob: -13.751331329345703
    10. '	ans' → logprob: -14.001331329345703

Token 576: ' window' (ID: 5734)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009749002754688263
    2. 'r' → logprob: -5.134748935699463
    3. '           ' → logprob: -6.634748935699463
    4. ' ans' → logprob: -7.009748935699463
    5. '   ' → logprob: -7.509748935699463
    6. 'forward' → logprob: -7.509748935699463
    7. 'answer' → logprob: -8.259749412536621
    8. '               ' → logprob: -9.259749412536621
    9. 'count' → logprob: -10.509749412536621
    10. 'window' → logprob: -11.134749412536621

Token 577: ' [' (ID: 723)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38322556018829346
    2. ' can' → logprob: -2.258225440979004
    3. '           ' → logprob: -3.258225440979004
    4. ' size' → logprob: -3.633225440979004
    5. ' ans' → logprob: -3.758225440979004
    6. ' has' → logprob: -3.883225440979004
    7. 'size' → logprob: -4.008225440979004
    8. '                ' → logprob: -4.258225440979004
    9. ' continues' → logprob: -4.258225440979004
    10. ' is' → logprob: -4.383225440979004

Token 578: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.6789137084269896e-05
    2. ' l' → logprob: -10.50003719329834
    3. '           ' → logprob: -12.25003719329834
    4. '	l' → logprob: -13.75003719329834
    5. ',l' → logprob: -14.12503719329834
    6. ')' → logprob: -14.62503719329834
    7. '               ' → logprob: -14.75003719329834
    8. '<|end|>' → logprob: -15.12503719329834
    9. '                   ' → logprob: -15.50003719329834
    10. '   ' → logprob: -15.62503719329834

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03823127970099449
    2. ',r' → logprob: -3.413231372833252
    3. ' ,' → logprob: -5.413231372833252
    4. 'r' → logprob: -10.663230895996094
    5. ',right' → logprob: -11.163230895996094
    6. ',
' → logprob: -11.288230895996094
    7. '   ' → logprob: -11.788230895996094
    8. '           ' → logprob: -11.788230895996094
    9. ',n' → logprob: -12.038230895996094
    10. '       ' → logprob: -12.538230895996094

Token 580: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003690097713842988
    2. ' r' → logprob: -5.753690242767334
    3. ',' → logprob: -7.753690242767334
    4. ',r' → logprob: -9.503689765930176
    5. ':r' → logprob: -13.003689765930176
    6. '
' → logprob: -13.628689765930176
    7. ' ,' → logprob: -14.128689765930176
    8. '...' → logprob: -14.753689765930176
    9. '           ' → logprob: -15.003689765930176
    10. '   ' → logprob: -15.003689765930176

Token 581: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010362464003264904
    2. '+' → logprob: -5.38536262512207
    3. ')' → logprob: -5.88536262512207
    4. ' ]' → logprob: -6.26036262512207
    5. ' +' → logprob: -8.26036262512207
    6. '   ' → logprob: -8.88536262512207
    7. '       ' → logprob: -9.01036262512207
    8. ',' → logprob: -9.63536262512207
    9. '           ' → logprob: -9.76036262512207
    10. ']
' → logprob: -10.01036262512207

Token 582: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3653978407382965
    2. ' can' → logprob: -2.2403979301452637
    3. '                   ' → logprob: -3.2403979301452637
    4. ' is' → logprob: -3.3653979301452637
    5. ' has' → logprob: -3.3653979301452637
    6. '<|end|>' → logprob: -3.6153979301452637
    7. ')' → logprob: -4.490397930145264
    8. ',' → logprob: -4.865397930145264
    9. 'can' → logprob: -4.990397930145264
    10. '                ' → logprob: -4.990397930145264

Token 583: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.018203558400273323
    2. ' valid' → logprob: -4.0182037353515625
    3. 'good' → logprob: -10.518203735351562
    4. 'a' → logprob: -11.893203735351562
    5. '   ' → logprob: -11.893203735351562
    6. '	valid' → logprob: -12.143203735351562
    7. '(valid' → logprob: -13.268203735351562
    8. ' good' → logprob: -13.518203735351562
    9. '_valid' → logprob: -13.768203735351562
    10. ' a' → logprob: -13.893203735351562

Token 584: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038206733763217926
    2. ':' → logprob: -4.163206577301025
    3. '           ' → logprob: -4.788206577301025
    4. '                   ' → logprob: -5.163206577301025
    5. '<|end|>' → logprob: -5.913206577301025
    6. ':
' → logprob: -6.413206577301025
    7. ',' → logprob: -6.538206577301025
    8. '<|end|>' → logprob: -7.538206577301025
    9. '                ' → logprob: -8.163207054138184
    10. '.' → logprob: -8.663207054138184

Token 585: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009556563571095467
    2. '                   ' → logprob: -5.009556770324707
    3. '           ' → logprob: -6.509556770324707
    4. '<|end|>' → logprob: -7.634556770324707
    5. ')' → logprob: -8.509556770324707
    6. '                ' → logprob: -8.884556770324707
    7. ',' → logprob: -9.134556770324707
    8. ':' → logprob: -9.134556770324707
    9. '              ' → logprob: -9.384556770324707
    10. '+' → logprob: -10.509556770324707

Token 586: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00021140782337170094
    2. '           ' → logprob: -8.875211715698242
    3. ' ans' → logprob: -9.750211715698242
    4. 'r' → logprob: -12.250211715698242
    5. '   ' → logprob: -12.875211715698242
    6. '               ' → logprob: -13.125211715698242
    7. '	ans' → logprob: -13.375211715698242
    8. '            
' → logprob: -14.000211715698242
    9. '
' → logprob: -14.750211715698242
    10. '(ans' → logprob: -15.250211715698242

Token 587: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03805755823850632
    2. '+=' → logprob: -3.288057565689087
    3. '+' → logprob: -11.413057327270508
    4. ']+=' → logprob: -13.163057327270508
    5. '+=(' → logprob: -13.288057327270508
    6. ' ' → logprob: -14.663057327270508
    7. '=' → logprob: -15.538057327270508
    8. '	' → logprob: -15.663057327270508
    9. ' =' → logprob: -15.788057327270508
    10. '   ' → logprob: -15.913057327270508

Token 588: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0699658915400505
    2. '(r' → logprob: -2.6949658393859863
    3. ' r' → logprob: -11.444966316223145
    4. ' (' → logprob: -11.694966316223145
    5. '(' → logprob: -11.944966316223145
    6. '1' → logprob: -14.319966316223145
    7. '   ' → logprob: -14.444966316223145
    8. '(n' → logprob: -14.444966316223145
    9. '_r' → logprob: -14.569966316223145
    10. '((' → logprob: -15.319966316223145

Token 589: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17993223667144775
    2. '-' → logprob: -1.8049322366714478
    3. '+' → logprob: -8.804932594299316
    4. '-l' → logprob: -10.929932594299316
    5. ' +' → logprob: -11.054932594299316
    6. '   ' → logprob: -14.804932594299316
    7. '
' → logprob: -14.929932594299316
    8. '-
' → logprob: -14.929932594299316
    9. ' ' → logprob: -15.804932594299316
    10. ')' → logprob: -15.929932594299316

Token 590: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00020389800192788243
    2. ' l' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -15.500204086303711
    4. '	l' → logprob: -16.12520408630371
    5. '=l' → logprob: -17.75020408630371
    6. '[l' → logprob: -18.12520408630371
    7. ' ' → logprob: -18.62520408630371
    8. '_l' → logprob: -19.12520408630371
    9. '   ' → logprob: -19.37520408630371
    10. '$l' → logprob: -19.50020408630371

Token 591: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602262556552887
    2. ' +' → logprob: -1.9102262258529663
    3. '+
' → logprob: -13.910225868225098
    4. '           ' → logprob: -15.035225868225098
    5. '1' → logprob: -15.660225868225098
    6. ' +
' → logprob: -15.785225868225098
    7. '   ' → logprob: -16.160226821899414
    8. '       ' → logprob: -16.535226821899414
    9. '＋' → logprob: -16.535226821899414
    10. '
' → logprob: -17.035226821899414

Token 592: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.5
    4. '   ' → logprob: -20.125
    5. '2' → logprob: -21.125
    6. '
' → logprob: -21.625
    7. '۱' → logprob: -21.9375
    8. '0' → logprob: -22.0
    9. '' → logprob: -22.1875
    10. '+' → logprob: -22.25

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -16.375001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '
' → logprob: -18.125001907348633
    6. '0' → logprob: -19.375001907348633
    7. '۱' → logprob: -19.562501907348633
    8. '{' → logprob: -20.375001907348633
    9. '=' → logprob: -20.625001907348633
    10. '2' → logprob: -20.625001907348633

Token 594: '      ' (ID: 1699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30663564801216125
    2. '<|end|>' → logprob: -1.5566356182098389
    3. '           ' → logprob: -3.306635618209839
    4. '\n' → logprob: -4.806635856628418
    5. '               ' → logprob: -6.431635856628418
    6. '  
' → logprob: -6.431635856628418
    7. '<|end|>' → logprob: -6.431635856628418
    8. '            
' → logprob: -6.931635856628418
    9. ')' → logprob: -7.681635856628418
    10. ' 
' → logprob: -7.681635856628418

Token 595: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 596: ' Add' (ID: 4063)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0071774255484342575
    2. ' r' → logprob: -5.007177352905273
    3. '<|end|>' → logprob: -8.507177352905273
    4. ' ' → logprob: -9.507177352905273
    5. ')' → logprob: -9.882177352905273
    6. '	r' → logprob: -10.132177352905273
    7. ' 
' → logprob: -10.382177352905273
    8. '_r' → logprob: -11.757177352905273
    9. '```' → logprob: -11.757177352905273
    10. '(r' → logprob: -12.007177352905273

Token 597: ' the' (ID: 290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011458971537649632
    2. ' ' → logprob: -4.511458873748779
    3. 'r' → logprob: -8.261459350585938
    4. ' r' → logprob: -9.136459350585938
    5. '(r' → logprob: -10.636459350585938
    6. ' (' → logprob: -12.136459350585938
    7. '(' → logprob: -12.386459350585938
    8. '```' → logprob: -12.636459350585938
    9. ' +' → logprob: -13.136459350585938
    10. ')' → logprob: -13.511459350585938

Token 598: ' valid' (ID: 4529)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9521562457084656
    2. 'r' → logprob: -1.7021563053131104
    3. ' next' → logprob: -1.9521563053131104
    4. 'next' → logprob: -1.9521563053131104
    5. ' ' → logprob: -2.2021563053131104
    6. ' r' → logprob: -4.452156066894531
    7. 'token' → logprob: -5.202156066894531
    8. ')' → logprob: -5.452156066894531
    9. '`' → logprob: -5.702156066894531
    10. '```' → logprob: -5.702156066894531

Token 599: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.021778134629130363
    2. ' sub' → logprob: -3.896778106689453
    3. 'count' → logprob: -7.146778106689453
    4. 'windows' → logprob: -9.146778106689453
    5. 'window' → logprob: -9.521778106689453
    6. 'length' → logprob: -10.271778106689453
    7. ')' → logprob: -10.271778106689453
    8. '_sub' → logprob: -10.396778106689453
    9. '```' → logprob: -10.396778106689453
    10. 'token' → logprob: -11.396778106689453

Token 600: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.2932816743850708
    2. 'array' → logprob: -1.5432816743850708
    3. 'arr' → logprob: -3.9182815551757812
    4. '           ' → logprob: -4.168281555175781
    5. '       ' → logprob: -6.293281555175781
    6. 'ans' → logprob: -6.668281555175781
    7. '               ' → logprob: -6.918281555175781
    8. ' arrays' → logprob: -7.668281555175781
    9. '   ' → logprob: -8.543281555175781
    10. ')' → logprob: -9.418281555175781

Token 601: ' ending' (ID: 22013)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.07214833796024323
    2. ' at' → logprob: -2.697148323059082
    3. 'r' → logprob: -6.322148323059082
    4. 'here' → logprob: -9.197148323059082
    5. 'with' → logprob: -9.322148323059082
    6. '[r' → logprob: -9.447148323059082
    7. ' r' → logprob: -9.947148323059082
    8. '<|end|>' → logprob: -11.072148323059082
    9. '_at' → logprob: -11.322148323059082
    10. '=r' → logprob: -11.572148323059082

Token 603: ' position' (ID: 4010)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013279760023579001
    2. ' r' → logprob: -6.626327991485596
    3. ' ' → logprob: -14.626327514648438
    4. '[r' → logprob: -15.001327514648438
    5. '_r' → logprob: -15.126327514648438
    6. '
' → logprob: -15.251327514648438
    7. '	r' → logprob: -15.626327514648438
    8. '`' → logprob: -15.751327514648438
    9. '   ' → logprob: -16.251327514648438
    10. 'space' → logprob: -16.626327514648438

Token 604: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0029275414999574423
    2. ' r' → logprob: -6.002927303314209
    3. ' ' → logprob: -8.377927780151367
    4. ''' → logprob: -9.752927780151367
    5. '[r' → logprob: -10.377927780151367
    6. ''r' → logprob: -10.627927780151367
    7. ')' → logprob: -10.877927780151367
    8. '(r' → logprob: -11.127927780151367
    9. '_r' → logprob: -11.377927780151367
    10. '`' → logprob: -11.502927780151367

Token 605: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012002593837678432
    2. '
' → logprob: -5.137002468109131
    3. '\n' → logprob: -6.262002468109131
    4. '<|end|>' → logprob: -6.762002468109131
    5. '            
' → logprob: -7.262002468109131
    6. '               ' → logprob: -7.762002468109131
    7. 'r' → logprob: -7.887002468109131
    8. '  
' → logprob: -8.762002944946289
    9. ')' → logprob: -9.012002944946289
    10. '\r' → logprob: -9.012002944946289

Token 607: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.005032017827033997
    2. '           ' → logprob: -5.380032062530518
    3. ' r' → logprob: -7.880032062530518
    4. 'forward' → logprob: -11.13003158569336
    5. '               ' → logprob: -12.00503158569336
    6. '            
' → logprob: -12.25503158569336
    7. '
' → logprob: -12.75503158569336
    8. ' forward' → logprob: -14.00503158569336
    9. '            ' → logprob: -14.25503158569336
    10. '                   ' → logprob: -14.75503158569336

Token 608: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00024406595912296325
    2. ' +=' → logprob: -8.375244140625
    3. '=' → logprob: -11.750244140625
    4. '+' → logprob: -12.250244140625
    5. ']+=' → logprob: -14.250244140625
    6. '+='' → logprob: -17.125244140625
    7. '```' → logprob: -17.750244140625
    8. '+="' → logprob: -18.000244140625
    9. ')' → logprob: -19.000244140625
    10. '++' → logprob: -19.000244140625

Token 609: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.625001907348633
    4. '<|end|>' → logprob: -19.625001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '+' → logprob: -20.562501907348633
    7. '１' → logprob: -20.875001907348633
    8. '۱' → logprob: -21.062501907348633
    9. '
' → logprob: -21.562501907348633
    10. '১' → logprob: -21.625001907348633

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -17.375
    4. '<|end|>' → logprob: -17.5
    5. '۱' → logprob: -19.625
    6. '+' → logprob: -19.9375
    7. '१' → logprob: -20.0625
    8. '১' → logprob: -20.125
    9. '１' → logprob: -20.125
    10. '0' → logprob: -20.3125

Token 611: '                ' (ID: 408)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08612684160470963
    2. 'else' → logprob: -3.4611268043518066
    3. '           ' → logprob: -3.9611268043518066
    4. '<|end|>' → logprob: -3.9611268043518066
    5. ' else' → logprob: -4.711126804351807
    6. '
' → logprob: -5.711126804351807
    7. '<|end|>' → logprob: -8.961127281188965
    8. '               ' → logprob: -9.336127281188965
    9. '   ' → logprob: -9.711127281188965
    10. '#else' → logprob: -9.836127281188965

Token 612: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19845031201839447
    2. '<|end|>' → logprob: -2.3234503269195557
    3. '           ' → logprob: -3.1984503269195557
    4. 'else' → logprob: -3.8234503269195557
    5. ' else' → logprob: -4.323450088500977
    6. '
' → logprob: -5.448450088500977
    7. '<|end|>' → logprob: -7.948450088500977
    8. '               ' → logprob: -8.448450088500977
    9. '            
' → logprob: -8.573450088500977
    10. '  
' → logprob: -8.573450088500977

Token 613: ' Move' (ID: 25485)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.390418142080307
    2. '       ' → logprob: -1.5154181718826294
    3. ' continue' → logprob: -2.76541805267334
    4. 'else' → logprob: -3.64041805267334
    5. '           ' → logprob: -4.51541805267334
    6. ' else' → logprob: -6.14041805267334
    7. 'forward' → logprob: -8.14041805267334
    8. '_continue' → logprob: -8.39041805267334
    9. 'Continue' → logprob: -8.39041805267334
    10. ')' → logprob: -9.01541805267334

Token 614: ' right' (ID: 1849)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0018101292662322521
    2. 'right' → logprob: -7.501810073852539
    3. 'forward' → logprob: -7.751810073852539
    4. '<|end|>' → logprob: -7.876810073852539
    5. ' r' → logprob: -8.501810073852539
    6. ' forward' → logprob: -9.126810073852539
    7. 'the' → logprob: -9.626810073852539
    8. 'to' → logprob: -10.876810073852539
    9. ' ' → logprob: -11.501810073852539
    10. '_r' → logprob: -12.126810073852539

Token 615: ' pointer' (ID: 16233)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 616: ' forward' (ID: 6687)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17188364267349243
    2. 'else' → logprob: -2.5468835830688477
    3. '<|end|>' → logprob: -2.7968835830688477
    4. ' else' → logprob: -4.296883583068848
    5. '           ' → logprob: -5.921883583068848
    6. 'elif' → logprob: -7.546883583068848
    7. '```' → logprob: -7.796883583068848
    8. '
' → logprob: -8.296883583068848
    9. '\n' → logprob: -8.421883583068848
    10. '#else' → logprob: -8.671883583068848

Token 618: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011135781183838844
    2. 'else' → logprob: -4.761135578155518
    3. ' else' → logprob: -6.136135578155518
    4. '           ' → logprob: -8.761136054992676
    5. '<|end|>' → logprob: -9.386136054992676
    6. '   ' → logprob: -10.011136054992676
    7. '\n' → logprob: -10.636136054992676
    8. '```' → logprob: -11.261136054992676
    9. '#else' → logprob: -12.136136054992676
    10. '	else' → logprob: -12.136136054992676

Token 619: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1014232635498047
    2. 'else' (adapté à ' else') → logprob: -1.1014232635498047
    3. ' else' → logprob: -1.1014232635498047
    4. '       ' → logprob: -5.976423263549805
    5. '	else' → logprob: -9.726423263549805
    6. '
' → logprob: -10.101423263549805
    7. 'elif' → logprob: -10.601423263549805
    8. '<|end|>' → logprob: -10.601423263549805
    9. '   ' → logprob: -10.976423263549805
    10. '```' → logprob: -10.976423263549805

Token 620: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07008914649486542
    2. ':
' → logprob: -2.695089101791382
    3. '               ' → logprob: -9.570089340209961
    4. '           ' → logprob: -9.820089340209961
    5. ':
' → logprob: -11.695089340209961
    6. ',' → logprob: -11.820089340209961
    7. ':

' → logprob: -13.195089340209961
    8. '<|end|>' → logprob: -13.445089340209961
    9. ':return' → logprob: -13.570089340209961
    10. '[' → logprob: -13.695089340209961

Token 621: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6717294454574585
    2. '           ' → logprob: -1.2967294454574585
    3. ' forward' → logprob: -1.6717294454574585
    4. 'forward' → logprob: -3.671729564666748
    5. '            ' → logprob: -7.421729564666748
    6. '```' → logprob: -7.671729564666748
    7. '       ' → logprob: -8.29672908782959
    8. ')' → logprob: -9.17172908782959
    9. '   ' → logprob: -9.17172908782959
    10. ':' → logprob: -9.29672908782959

Token 622: ' #' (ID: 1069)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.002545101335272193
    2. '           ' → logprob: -6.37754487991333
    3. ' forward' → logprob: -7.87754487991333
    4. 'xo' → logprob: -8.002545356750488
    5. '   ' → logprob: -9.252545356750488
    6. '               ' → logprob: -11.127545356750488
    7. ' xo' → logprob: -12.377545356750488
    8. 'xor' → logprob: -12.752545356750488
    9. '       ' → logprob: -13.002545356750488
    10. 'Forward' → logprob: -13.627545356750488

Token 623: ' Window' (ID: 24479)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.003117941552773118
    2. '           ' → logprob: -6.50311803817749
    3. ' forward' → logprob: -6.75311803817749
    4. 'xo' → logprob: -8.128117561340332
    5. '   ' → logprob: -9.128117561340332
    6. 'l' → logprob: -11.378117561340332
    7. '               ' → logprob: -12.128117561340332
    8. ' xo' → logprob: -12.128117561340332
    9. 'xor' → logprob: -12.878117561340332
    10. '       ' → logprob: -12.878117561340332

Token 624: ' became' (ID: 10288)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1468185186386108
    2. ' =' → logprob: -1.6468185186386108
    3. '=' → logprob: -1.8968185186386108
    4. '<|end|>' → logprob: -2.2718186378479004
    5. '[' → logprob: -2.8968186378479004
    6. ')' → logprob: -3.7718186378479004
    7. ' ' → logprob: -3.8968186378479004
    8. '               ' → logprob: -4.1468186378479
    9. '       ' → logprob: -4.3968186378479
    10. '_size' → logprob: -4.7718186378479

Token 625: ' invalid' (ID: 15796)
  Prédit: 'invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'invalid' → logprob: -0.36454346776008606
    2. 'forward' → logprob: -2.1145434379577637
    3. 'back' → logprob: -2.6145434379577637
    4. 'not' → logprob: -3.1145434379577637
    5. 'False' → logprob: -3.4895434379577637
    6. 'too' → logprob: -3.9895434379577637
    7. 'sm' → logprob: -5.489543437957764
    8. ' invalid' → logprob: -5.614543437957764
    9. 'broken' → logprob: -6.239543437957764
    10. ' False' → logprob: -6.364543437957764

Token 626: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15544061362743378
    2. '           ' → logprob: -2.65544056892395
    3. ' forward' → logprob: -3.65544056892395
    4. 'forward' → logprob: -3.65544056892395
    5. ':
' → logprob: -4.780440807342529
    6. ':' → logprob: -4.905440807342529
    7. ',' → logprob: -6.405440807342529
    8. ' and' → logprob: -6.405440807342529
    9. '):
' → logprob: -7.780440807342529
    10. '.forward' → logprob: -8.280440330505371

Token 627: ' need' (ID: 1309)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.1278955191373825
    2. ' forward' → logprob: -2.5028955936431885
    3. '           ' → logprob: -3.5028955936431885
    4. '               ' → logprob: -5.627895355224609
    5. 'xo' → logprob: -5.877895355224609
    6. ' xo' → logprob: -7.502895355224609
    7. '   ' → logprob: -7.502895355224609
    8. '       ' → logprob: -9.12789535522461
    9. '#' → logprob: -9.37789535522461
    10. 'xor' → logprob: -9.37789535522461

Token 628: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20155970752239227
    2. ' to' → logprob: -1.7015596628189087
    3. 'forward' → logprob: -10.076560020446777
    4. ' forward' → logprob: -10.326560020446777
    5. '  ' → logprob: -10.951560020446777
    6. ' ' → logprob: -11.076560020446777
    7. '   ' → logprob: -11.451560020446777
    8. '    ' → logprob: -11.451560020446777
    9. '	to' → logprob: -12.201560020446777
    10. '<|end|>' → logprob: -12.701560020446777

Token 629: ' shrink' (ID: 53969)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.4126150906085968
    2. 'move' → logprob: -1.5376150608062744
    3. 'sh' → logprob: -2.9126150608062744
    4. 'remove' → logprob: -3.6626150608062744
    5. ' forward' → logprob: -4.5376152992248535
    6. ' move' → logprob: -4.9126152992248535
    7. 'l' → logprob: -4.9126152992248535
    8. 'back' → logprob: -5.2876152992248535
    9. 'increment' → logprob: -5.4126152992248535
    10. 'shift' → logprob: -5.7876152992248535

Token 630: ' from' (ID: 591)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20467129349708557
    2. ' l' → logprob: -2.5796713829040527
    3. ' forward' → logprob: -3.0796713829040527
    4. 'forward' → logprob: -3.0796713829040527
    5. '               ' → logprob: -4.579671382904053
    6. '           ' → logprob: -5.329671382904053
    7. '   ' → logprob: -6.954671382904053
    8. '	l' → logprob: -8.204670906066895
    9. '            ' → logprob: -8.329670906066895
    10. ' the' → logprob: -9.454670906066895

Token 631: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.826166033744812
    2. 'left' → logprob: -1.076166033744812
    3. 'l' → logprob: -1.951166033744812
    4. ' the' → logprob: -2.5761661529541016
    5. ' left' → logprob: -5.826166152954102
    6. ' l' → logprob: -8.576166152954102
    7. '	left' → logprob: -11.576166152954102
    8. ' ' → logprob: -11.576166152954102
    9. '_left' → logprob: -11.701166152954102
    10. '```' → logprob: -11.701166152954102

Token 632: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.011988218873739243
    2. ' left' → logprob: -4.511988162994385
    3. 'l' → logprob: -7.011988162994385
    4. '[left' → logprob: -11.886988639831543
    5. '```' → logprob: -11.886988639831543
    6. ' ' → logprob: -12.136988639831543
    7. '	left' → logprob: -12.386988639831543
    8. 'right' → logprob: -12.636988639831543
    9. '.left' → logprob: -13.011988639831543
    10. ':left' → logprob: -13.386988639831543

Token 633: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8885939717292786
    2. 'l' → logprob: -1.2635939121246338
    3. '           ' → logprob: -1.7635939121246338
    4. 'forward' → logprob: -2.638593912124634
    5. ' l' → logprob: -4.263594150543213
    6. ' forward' → logprob: -4.388594150543213
    7. 'else' → logprob: -4.513594150543213
    8. ' else' → logprob: -5.138594150543213
    9. '       ' → logprob: -5.513594150543213
    10. '   ' → logprob: -5.638594150543213

Token 634: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16119810938835144
    2. 'forward' → logprob: -2.286198139190674
    3. '           ' → logprob: -3.911198139190674
    4. '```' → logprob: -4.536198139190674
    5. ' forward' → logprob: -4.911198139190674
    6. 'else' → logprob: -5.536198139190674
    7. 'l' → logprob: -6.161198139190674
    8. '       ' → logprob: -6.661198139190674
    9. '   ' → logprob: -7.161198139190674
    10. '+' → logprob: -8.411197662353516

Token 635: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' (adapté à ' forward') → logprob: -0.003522502724081278
    2. 'xo' → logprob: -6.1285223960876465
    3. ' forward' → logprob: -6.8785223960876465
    4. '   ' → logprob: -9.003522872924805
    5. '           ' → logprob: -9.753522872924805
    6. 'l' → logprob: -10.253522872924805
    7. ' xo' → logprob: -10.253522872924805
    8. '
' → logprob: -11.628522872924805
    9. 'xor' → logprob: -11.878522872924805
    10. '       ' → logprob: -11.878522872924805

Token 636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061987970024347305
    2. ' =' → logprob: -2.81198787689209
    3. '=False' → logprob: -10.81198787689209
    4. '＝' → logprob: -16.561988830566406
    5. '=false' → logprob: -17.061988830566406
    6. '=
' → logprob: -17.186988830566406
    7. '=True' → logprob: -17.311988830566406
    8. ' ' → logprob: -18.311988830566406
    9. '<|end|>' → logprob: -18.686988830566406
    10. '_=' → logprob: -18.811988830566406

Token 637: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. 'True' → logprob: -17.250123977661133
    4. '(False' → logprob: -18.375123977661133
    5. '0' → logprob: -19.500123977661133
    6. '=False' → logprob: -19.875123977661133
    7. 'F' → logprob: -20.375123977661133
    8. 'false' → logprob: -20.375123977661133
    9. 'not' → logprob: -20.875123977661133
    10. '   ' → logprob: -21.125123977661133

Token 638: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022140948101878166
    2. '<|end|>' → logprob: -4.272140979766846
    3. 'else' → logprob: -5.522140979766846
    4. '```' → logprob: -6.397140979766846
    5. '   ' → logprob: -7.272140979766846
    6. ' else' → logprob: -7.522140979766846
    7. 'elif' → logprob: -8.147140502929688
    8. '        
' → logprob: -9.522140502929688
    9. '
' → logprob: -9.647140502929688
    10. '​' → logprob: -10.022140502929688

Token 640: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.29580074548721313
    2. '       ' → logprob: -1.4208006858825684
    3. '   ' → logprob: -4.545800685882568
    4. ' else' → logprob: -5.920800685882568
    5. 'l' → logprob: -7.045800685882568
    6. '```' → logprob: -8.420801162719727
    7. 'elif' → logprob: -9.295801162719727
    8. '           ' → logprob: -10.795801162719727
    9. '	else' → logprob: -11.295801162719727
    10. '    
' → logprob: -12.670801162719727

Token 641: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04769965261220932
    2. ':
' → logprob: -3.4226996898651123
    3. '           ' → logprob: -4.297699451446533
    4. '       ' → logprob: -8.672699928283691
    5. '   ' → logprob: -9.297699928283691
    6. '<|end|>' → logprob: -10.797699928283691
    7. '[' → logprob: -10.922699928283691
    8. ',' → logprob: -11.172699928283691
    9. ' :' → logprob: -11.672699928283691
    10. '{' → logprob: -11.797699928283691

Token 642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007728599477559328
    2. '   ' → logprob: -5.257728576660156
    3. '       ' → logprob: -6.882728576660156
    4. '```' → logprob: -7.632728576660156
    5. 'l' → logprob: -8.382728576660156
    6. '#' → logprob: -8.507728576660156
    7. 'xo' → logprob: -8.507728576660156
    8. 'x' → logprob: -9.132728576660156
    9. ' l' → logprob: -9.882728576660156
    10. ' xo' → logprob: -10.507728576660156

Token 643: ' #' (ID: 1069)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.09813395142555237
    2. '           ' → logprob: -2.4731340408325195
    3. '#' (adapté à ' #') → logprob: -5.2231340408325195
    4. '   ' → logprob: -5.8481340408325195
    5. 'xor' → logprob: -7.9731340408325195
    6. '       ' → logprob: -8.22313404083252
    7. ' xo' → logprob: -9.09813404083252
    8. '               ' → logprob: -10.47313404083252
    9. 'yo' → logprob: -10.59813404083252
    10. '```' → logprob: -10.97313404083252

Token 644: ' Shr' (ID: 83952)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.04138471186161041
    2. '           ' → logprob: -3.666384696960449
    3. ' xo' → logprob: -4.666384696960449
    4. '   ' → logprob: -5.291384696960449
    5. '       ' → logprob: -9.04138469696045
    6. 'xor' → logprob: -9.41638469696045
    7. 'su' → logprob: -9.41638469696045
    8. '#' → logprob: -9.79138469696045
    9. ' ' → logprob: -10.41638469696045
    10. 'x' → logprob: -10.54138469696045

Token 645: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.0058138407766819
    2. '           ' → logprob: -5.255814075469971
    3. 'i' → logprob: -7.880814075469971
    4. 'inking' → logprob: -9.380813598632812
    5. 'inka' → logprob: -10.630813598632812
    6. '               ' → logprob: -11.130813598632812
    7. 'inks' → logprob: -11.255813598632812
    8. 'rink' → logprob: -11.255813598632812
    9. '       ' → logprob: -11.505813598632812
    10. 'a' → logprob: -11.630813598632812

Token 646: ' the' (ID: 290)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2512246072292328
    2. 'the' → logprob: -2.3762245178222656
    3. ' the' → logprob: -2.8762245178222656
    4. 'l' → logprob: -3.5012245178222656
    5. '   ' → logprob: -4.126224517822266
    6. ' l' → logprob: -4.376224517822266
    7. 'from' → logprob: -5.251224517822266
    8. 'forward' → logprob: -6.876224517822266
    9. 'window' → logprob: -6.876224517822266
    10. '            ' → logprob: -7.126224517822266

Token 647: ' window' (ID: 5734)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5828903317451477
    2. 'left' → logprob: -1.582890272140503
    3. 'xo' → logprob: -2.207890272140503
    4. 'x' → logprob: -3.332890272140503
    5. 'window' → logprob: -3.457890272140503
    6. ' xo' → logprob: -3.832890272140503
    7. ' left' → logprob: -4.707890510559082
    8. ' l' → logprob: -4.832890510559082
    9. ' window' → logprob: -4.957890510559082
    10. 'su' → logprob: -5.457890510559082

Token 648: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05771671608090401
    2. '   ' → logprob: -3.3077166080474854
    3. '		' → logprob: -5.6827168464660645
    4. ' xo' → logprob: -6.0577168464660645
    5. '          ' → logprob: -6.1827168464660645
    6. '               ' → logprob: -6.3077168464660645
    7. '       ' → logprob: -6.5577168464660645
    8. '<|end|>' → logprob: -6.8077168464660645
    9. '            ' → logprob: -6.9327168464660645
    10. ',' → logprob: -7.1827168464660645

Token 649: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3391174376010895
    2. ' the' → logprob: -1.589117407798767
    3. 'l' → logprob: -2.5891175270080566
    4. ' l' → logprob: -5.089117527008057
    5. 'left' → logprob: -6.464117527008057
    6. '           ' → logprob: -7.839117527008057
    7. '   ' → logprob: -9.089117050170898
    8. '0' → logprob: -10.589117050170898
    9. '    ' → logprob: -10.714117050170898
    10. '	l' → logprob: -10.839117050170898

Token 650: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.05853722244501114
    2. ' left' → logprob: -2.933537244796753
    3. 'l' → logprob: -5.683537006378174
    4. '           ' → logprob: -9.308537483215332
    5. ' l' → logprob: -10.058537483215332
    6. '_left' → logprob: -10.558537483215332
    7. '	left' → logprob: -10.683537483215332
    8. '0' → logprob: -11.183537483215332
    9. '[left' → logprob: -11.433537483215332
    10. '   ' → logprob: -11.683537483215332

Token 651: ' until' (ID: 4609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04678214713931084
    2. ':' → logprob: -3.9217822551727295
    3. '   ' → logprob: -5.04678201675415
    4. ',' → logprob: -5.17178201675415
    5. '          ' → logprob: -6.29678201675415
    6. '            
' → logprob: -6.54678201675415
    7. ':
' → logprob: -6.54678201675415
    8. '            ' → logprob: -6.79678201675415
    9. ')' → logprob: -7.04678201675415
    10. '               ' → logprob: -7.04678201675415

Token 652: ' it' (ID: 480)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.5933484435081482
    2. 'l' → logprob: -1.593348503112793
    3. ' xo' → logprob: -1.843348503112793
    4. ' forward' → logprob: -3.593348503112793
    5. ' l' → logprob: -3.718348503112793
    6. 'forward' → logprob: -3.968348503112793
    7. 'True' → logprob: -5.843348503112793
    8. 'xor' → logprob: -5.968348503112793
    9. '           ' → logprob: -6.343348503112793
    10. ' True' → logprob: -6.343348503112793

Token 653: ' becomes' (ID: 14081)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0409141778945923
    2. ' becomes' → logprob: -1.4159141778945923
    3. 'be' → logprob: -2.4159140586853027
    4. ' is' → logprob: -2.6659140586853027
    5. 'is' → logprob: -2.6659140586853027
    6. ' l' → logprob: -2.7909140586853027
    7. 'can' → logprob: -3.7909140586853027
    8. '           ' → logprob: -3.7909140586853027
    9. ' can' → logprob: -4.040914058685303
    10. '```' → logprob: -4.165914058685303

Token 654: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.010035372339189053
    2. ' valid' → logprob: -4.635035514831543
    3. 'forward' → logprob: -8.510035514831543
    4. '   ' → logprob: -10.385035514831543
    5. '           ' → logprob: -10.885035514831543
    6. '       ' → logprob: -12.010035514831543
    7. '	valid' → logprob: -12.510035514831543
    8. ' forward' → logprob: -12.635035514831543
    9. 'True' → logprob: -13.010035514831543
    10. '               ' → logprob: -13.260035514831543

Token 655: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007088538259267807
    2. '   ' → logprob: -5.757088661193848
    3. ' xo' → logprob: -7.257088661193848
    4. 'xo' → logprob: -7.632088661193848
    5. ',' → logprob: -7.757088661193848
    6. '```' → logprob: -7.882088661193848
    7. '<|end|>' → logprob: -8.132088661193848
    8. '		' → logprob: -8.132088661193848
    9. '               ' → logprob: -8.257088661193848
    10. '       ' → logprob: -8.632088661193848

Token 656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00908674206584692
    2. '   ' → logprob: -5.509086608886719
    3. '```' → logprob: -6.009086608886719
    4. '               ' → logprob: -6.884086608886719
    5. '       ' → logprob: -7.759086608886719
    6. '		' → logprob: -8.509086608886719
    7. 'x' → logprob: -8.884086608886719
    8. '            
' → logprob: -9.134086608886719
    9. '[' → logprob: -9.384086608886719
    10. '          ' → logprob: -9.634086608886719

Token 657: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' (adapté à ' xo') → logprob: -0.015026269480586052
    2. ' xo' → logprob: -4.390026092529297
    3. '           ' → logprob: -6.390026092529297
    4. 'su' → logprob: -8.015026092529297
    5. '   ' → logprob: -8.015026092529297
    6. ' ' → logprob: -10.390026092529297
    7. 'xor' → logprob: -10.390026092529297
    8. '       ' → logprob: -10.890026092529297
    9. '```' → logprob: -11.140026092529297
    10. ' su' → logprob: -11.265026092529297

Token 658: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8272424936294556
    2. ' =' → logprob: -0.8272424936294556
    3. ' ^=' → logprob: -2.077242374420166
    4. '^' → logprob: -8.452242851257324
    5. ' ^' → logprob: -12.577242851257324
    6. ' ' → logprob: -14.327242851257324
    7. ' |=' → logprob: -16.077241897583008
    8. ' ' → logprob: -16.202241897583008
    9. '   ' → logprob: -16.452241897583008
    10. '```' → logprob: -16.452241897583008

Token 659: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -0.004633757285773754
    2. ' xo' → logprob: -5.379633903503418
    3. 'xor' → logprob: -11.254633903503418
    4. 'oxo' → logprob: -15.004633903503418
    5. 'x' → logprob: -16.3796329498291
    6. 'xon' → logprob: -16.5046329498291
    7. ' ' → logprob: -16.7546329498291
    8. '0' → logprob: -17.6296329498291
    9. '\x' → logprob: -18.1296329498291
    10. ' xor' → logprob: -18.2546329498291

Token 660: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.16023540496826172
    2. ' ^' → logprob: -1.9102354049682617
    3. ' ' → logprob: -11.785235404968262
    4. '1' → logprob: -14.285235404968262
    5. ' ' → logprob: -14.410235404968262
    6. ' ^=' → logprob: -14.660235404968262
    7. '^^' → logprob: -15.285235404968262
    8. ' xor' → logprob: -15.410235404968262
    9. '^{' → logprob: -15.785235404968262
    10. ' ^
' → logprob: -15.910235404968262

Token 661: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.0017361093778163195
    2. ' lis' → logprob: -6.376736164093018
    3. 'lic' → logprob: -11.50173568725586
    4. 'li' → logprob: -11.75173568725586
    5. 'lus' → logprob: -13.00173568725586
    6. 'l' → logprob: -13.12673568725586
    7. 'ls' → logprob: -13.37673568725586
    8. 'list' → logprob: -13.50173568725586
    9. '   ' → logprob: -13.75173568725586
    10. 'Lis' → logprob: -13.75173568725586

Token 662: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -4.584861744660884e-05
    2. 'l' → logprob: -10.000045776367188
    3. '[' → logprob: -15.125045776367188
    4. '[
' → logprob: -17.250045776367188
    5. '```' → logprob: -17.500045776367188
    6. '	l' → logprob: -18.000045776367188
    7. '[left' → logprob: -19.250045776367188
    8. '\[' → logprob: -19.750045776367188
    9. ' l' → logprob: -20.375045776367188
    10. '   ' → logprob: -20.375045776367188

Token 663: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002848152944352478
    2. ']
' → logprob: -8.500285148620605
    3. ' ]' → logprob: -10.000285148620605
    4. '           ' → logprob: -11.125285148620605
    5. '       ' → logprob: -12.000285148620605
    6. ')' → logprob: -12.750285148620605
    7. '+' → logprob: -12.750285148620605
    8. ']+' → logprob: -13.000285148620605
    9. ']
' → logprob: -13.750285148620605
    10. '   ' → logprob: -13.750285148620605

Token 664: '          ' (ID: 3550)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030275059398263693
    2. ' su' → logprob: -6.503027439117432
    3. '            ' → logprob: -7.503027439117432
    4. ' ' → logprob: -8.00302791595459
    5. '          ' → logprob: -8.75302791595459
    6. '<|end|>' → logprob: -9.37802791595459
    7. ' l' → logprob: -9.75302791595459
    8. '               ' → logprob: -9.87802791595459
    9. 'su' → logprob: -10.00302791595459
    10. '   ' → logprob: -10.00302791595459

Token 665: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019725270103663206
    2. ' ' → logprob: -7.876972675323486
    3. ' l' → logprob: -7.876972675323486
    4. '          ' → logprob: -8.001972198486328
    5. '            ' → logprob: -8.251972198486328
    6. 'l' → logprob: -8.376972198486328
    7. 'su' → logprob: -9.376972198486328
    8. ' su' → logprob: -9.626972198486328
    9. '               ' → logprob: -9.751972198486328
    10. '   ' → logprob: -10.251972198486328

Token 666: ' Remove' (ID: 18141)
  Prédit: ' su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' su' → logprob: -0.528613805770874
    2. 'su' → logprob: -0.903613805770874
    3. 'l' → logprob: -5.653614044189453
    4. '           ' → logprob: -7.028614044189453
    5. ' l' → logprob: -7.153614044189453
    6. 's' → logprob: -9.153614044189453
    7. ' ' → logprob: -9.903614044189453
    8. '            ' → logprob: -10.153614044189453
    9. '```' → logprob: -10.278614044189453
    10. ' ' → logprob: -11.153614044189453

Token 667: ' the' (ID: 290)
  Prédit: ' lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lis' → logprob: -0.5773046612739563
    2. 'lis' → logprob: -0.8273046612739563
    3. 'li' → logprob: -7.827304840087891
    4. 'list' → logprob: -8.45230484008789
    5. 'l' → logprob: -8.57730484008789
    6. ' ' → logprob: -8.95230484008789
    7. '```' → logprob: -9.20230484008789
    8. 'lst' → logprob: -9.32730484008789
    9. ' ' → logprob: -10.20230484008789
    10. '`' → logprob: -10.70230484008789

Token 668: ' left' (ID: 3561)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.012398628517985344
    2. ' lis' → logprob: -5.137398719787598
    3. 'l' → logprob: -5.887398719787598
    4. 'li' → logprob: -6.887398719787598
    5. 'list' → logprob: -7.012398719787598
    6. '```' → logprob: -8.137398719787598
    7. '`' → logprob: -8.387398719787598
    8. 'lst' → logprob: -8.762398719787598
    9. ' ' → logprob: -8.887398719787598
    10. '   ' → logprob: -9.012398719787598

Token 669: 'most' (ID: 5309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.408598780632019
    2. '[l' → logprob: -1.533598780632019
    3. '[' → logprob: -1.908598780632019
    4. ' ' → logprob: -2.2835988998413086
    5. '<|end|>' → logprob: -2.6585988998413086
    6. '```' → logprob: -2.9085988998413086
    7. ']' → logprob: -3.7835988998413086
    8. ')' → logprob: -3.7835988998413086
    9. 'token' → logprob: -3.9085988998413086
    10. '`' → logprob: -3.9085988998413086

Token 670: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.7621806263923645
    2. 'l' → logprob: -1.5121805667877197
    3. ' ' → logprob: -2.2621805667877197
    4. ' element' → logprob: -2.8871805667877197
    5. '```' → logprob: -3.2621805667877197
    6. 'lis' → logprob: -4.012180805206299
    7. '`' → logprob: -4.262180805206299
    8. '   ' → logprob: -4.262180805206299
    9. '	l' → logprob: -4.762180805206299
    10. ' 
' → logprob: -4.762180805206299

Token 671: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14567960798740387
    2. '<|end|>' → logprob: -2.1456797122955322
    3. ' ' → logprob: -5.145679473876953
    4. ' l' → logprob: -6.020679473876953
    5. '            ' → logprob: -6.145679473876953
    6. '          ' → logprob: -6.270679473876953
    7. '       ' → logprob: -6.520679473876953
    8. '            
' → logprob: -6.770679473876953
    9. '    ' → logprob: -7.270679473876953
    10. '               ' → logprob: -7.520679473876953

Token 672: ' XOR' (ID: 147209)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.03407255932688713
    2. ' lis' → logprob: -3.6590726375579834
    3. 'su' → logprob: -5.784072399139404
    4. 'li' → logprob: -5.909072399139404
    5. 'xo' → logprob: -7.284072399139404
    6. '```' → logprob: -8.034072875976562
    7. 'l' → logprob: -8.409072875976562
    8. 'lus' → logprob: -9.284072875976562
    9. 'xor' → logprob: -9.659072875976562
    10. '`' → logprob: -9.659072875976562

Token 673: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007591956295073032
    2. '<|end|>' → logprob: -5.382591724395752
    3. '            ' → logprob: -7.007591724395752
    4. ' ' → logprob: -7.132591724395752
    5. '          ' → logprob: -7.757591724395752
    6. ' l' → logprob: -8.25759220123291
    7. '            
' → logprob: -8.63259220123291
    8. '    ' → logprob: -9.50759220123291
    9. '               ' → logprob: -9.75759220123291
    10. '   ' → logprob: -10.25759220123291

Token 674: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030137149151414633
    2. ' l' → logprob: -6.253013610839844
    3. ' su' → logprob: -7.753013610839844
    4. '            ' → logprob: -8.253013610839844
    5. '```' → logprob: -9.128013610839844
    6. 'l' → logprob: -9.628013610839844
    7. ' ' → logprob: -9.628013610839844
    8. ' ' → logprob: -10.253013610839844
    9. '            
' → logprob: -11.003013610839844
    10. '          ' → logprob: -11.253013610839844

Token 675: ' su' (ID: 593)
  Prédit: ' su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' su' → logprob: -0.5839542746543884
    2. 'su' (adapté à ' su') → logprob: -0.8339542746543884
    3. '           ' → logprob: -4.833954334259033
    4. '            ' → logprob: -11.333953857421875
    5. '               ' → logprob: -12.458953857421875
    6. '          ' → logprob: -12.958953857421875
    7. '```' → logprob: -12.958953857421875
    8. '       ' → logprob: -12.958953857421875
    9. '   ' → logprob: -13.583953857421875
    10. 's' → logprob: -13.833953857421875

Token 676: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.2739165425300598
    2. '-=' → logprob: -1.523916482925415
    3. '=' → logprob: -3.898916482925415
    4. ' =' → logprob: -6.898916721343994
    5. '-' → logprob: -8.648916244506836
    6. ' -' → logprob: -8.898916244506836
    7. '   ' → logprob: -9.023916244506836
    8. ' ' → logprob: -10.648916244506836
    9. '    ' → logprob: -11.648916244506836
    10. '  ' → logprob: -12.273916244506836

Token 677: ' lis' (ID: 20784)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.029775023460388184
    2. ' lis' → logprob: -3.5297751426696777
    3. 'li' → logprob: -11.90477466583252
    4. 'lic' → logprob: -12.15477466583252
    5. 'list' → logprob: -13.40477466583252
    6. 'l' → logprob: -13.40477466583252
    7. '   ' → logprob: -13.65477466583252
    8. 'lus' → logprob: -13.65477466583252
    9. 'liz' → logprob: -13.65477466583252
    10. 'lit' → logprob: -13.90477466583252

Token 678: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -9.729906196298543e-06
    2. 'l' → logprob: -12.000009536743164
    3. '[' → logprob: -12.625009536743164
    4. '	l' → logprob: -16.000009536743164
    5. ' [' → logprob: -16.500009536743164
    6. '```' → logprob: -17.875009536743164
    7. '   ' → logprob: -18.375009536743164
    8. '[
' → logprob: -18.625009536743164
    9. '[left' → logprob: -18.750009536743164
    10. '(l' → logprob: -18.750009536743164

Token 679: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.9186317482963204e-05
    2. '[l' → logprob: -10.500049591064453
    3. ']
' → logprob: -11.125049591064453
    4. 'l' → logprob: -12.250049591064453
    5. ')' → logprob: -13.625049591064453
    6. ' ]' → logprob: -14.750049591064453
    7. '           ' → logprob: -15.625049591064453
    8. '   ' → logprob: -16.125049591064453
    9. '       ' → logprob: -16.500049591064453
    10. ' l' → logprob: -16.875049591064453

Token 680: '              ' (ID: 4442)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.18436741828918457
    2. 'l' → logprob: -1.9343674182891846
    3. '           ' → logprob: -3.8093674182891846
    4. '	l' → logprob: -6.8093671798706055
    5. '   ' → logprob: -7.5593671798706055
    6. ',l' → logprob: -11.184367179870605
    7. ' ' → logprob: -11.559367179870605
    8. '       ' → logprob: -11.684367179870605
    9. '```' → logprob: -12.434367179870605
    10. '          ' → logprob: -12.434367179870605

Token 681: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.48090314865112305
    2. '           ' → logprob: -0.980903148651123
    3. ' l' → logprob: -5.230903148651123
    4. '   ' → logprob: -6.730903148651123
    5. '	l' → logprob: -9.105903625488281
    6. '       ' → logprob: -9.980903625488281
    7. '          ' → logprob: -10.355903625488281
    8. '               ' → logprob: -10.855903625488281
    9. '            ' → logprob: -10.980903625488281
    10. '```' → logprob: -11.355903625488281

Token 682: ' Remove' (ID: 18141)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0622195340692997
    2. ' l' → logprob: -2.8122196197509766
    3. '           ' → logprob: -8.437219619750977
    4. '	l' → logprob: -10.437219619750977
    5. '            ' → logprob: -12.437219619750977
    6. '```' → logprob: -14.812219619750977
    7. ' ' → logprob: -15.312219619750977
    8. '               ' → logprob: -15.562219619750977
    9. '   ' → logprob: -15.562219619750977
    10. '          ' → logprob: -15.937219619750977

Token 683: ' the' (ID: 290)
  Prédit: ' lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lis' → logprob: -0.03369710594415665
    2. 'lis' → logprob: -3.4086971282958984
    3. ' ' → logprob: -11.158697128295898
    4. 'li' → logprob: -11.533697128295898
    5. ' li' → logprob: -11.783697128295898
    6. ' liz' → logprob: -11.783697128295898
    7. '```' → logprob: -12.408697128295898
    8. 'list' → logprob: -13.158697128295898
    9. ' lst' → logprob: -13.783697128295898
    10. ' ' → logprob: -14.783697128295898

Token 684: ' left' (ID: 3561)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.050690263509750366
    2. ' lis' → logprob: -3.425690174102783
    3. 'l' → logprob: -4.925690174102783
    4. '[l' → logprob: -5.300690174102783
    5. '```' → logprob: -6.425690174102783
    6. 'li' → logprob: -6.800690174102783
    7. ' l' → logprob: -8.050690650939941
    8. '           ' → logprob: -8.300690650939941
    9. 'lst' → logprob: -8.425690650939941
    10. '`' → logprob: -8.675690650939941

Token 685: 'most' (ID: 5309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.46497970819473267
    2. '[l' → logprob: -1.714979648590088
    3. '[' → logprob: -2.214979648590088
    4. '+' → logprob: -3.089979648590088
    5. 'most' → logprob: -4.839979648590088
    6. 'l' → logprob: -5.214979648590088
    7. '[
' → logprob: -5.589979648590088
    8. '```' → logprob: -5.589979648590088
    9. ']+' → logprob: -5.714979648590088
    10. '++' → logprob: -5.839979648590088

Token 686: ' element' (ID: 3577)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.16645705699920654
    2. 'l' → logprob: -2.166457176208496
    3. '[' → logprob: -4.041457176208496
    4. '```' → logprob: -5.041457176208496
    5. ' l' → logprob: -5.166457176208496
    6. '	l' → logprob: -5.916457176208496
    7. '`' → logprob: -6.041457176208496
    8. 'lis' → logprob: -6.666457176208496
    9. '   ' → logprob: -7.166457176208496
    10. ' lis' → logprob: -7.666457176208496

Token 687: ' from' (ID: 591)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0028927286621183157
    2. 'l' → logprob: -7.12789249420166
    3. '```' → logprob: -7.25289249420166
    4. '[' → logprob: -7.62789249420166
    5. ' l' → logprob: -8.37789249420166
    6. '	l' → logprob: -8.75289249420166
    7. '[
' → logprob: -8.87789249420166
    8. '           ' → logprob: -9.12789249420166
    9. '   ' → logprob: -9.37789249420166
    10. '<|end|>' → logprob: -9.50289249420166

Token 688: ' sum' (ID: 4215)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.0022833608090877533
    2. ' lis' → logprob: -7.127283573150635
    3. '```' → logprob: -7.127283573150635
    4. 'l' → logprob: -8.377283096313477
    5. 'lus' → logprob: -9.502283096313477
    6. 'li' → logprob: -9.502283096313477
    7. 'ls' → logprob: -10.002283096313477
    8. '`' → logprob: -10.127283096313477
    9. 'liz' → logprob: -10.627283096313477
    10. 'su' → logprob: -10.752283096313477

Token 689: '

' (ID: 279)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1503162831068039
    2. ' l' → logprob: -2.4003162384033203
    3. '   ' → logprob: -4.15031623840332
    4. '	l' → logprob: -4.15031623840332
    5. '```' → logprob: -4.77531623840332
    6. '           ' → logprob: -5.65031623840332
    7. '<|end|>' → logprob: -6.15031623840332
    8. ',l' → logprob: -6.40031623840332
    9. '       ' → logprob: -8.27531623840332
    10. '​' → logprob: -8.77531623840332

Token 690: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10322947800159454
    2. 'l' → logprob: -2.478229522705078
    3. ' l' → logprob: -4.728229522705078
    4. '```' → logprob: -5.853229522705078
    5. '   ' → logprob: -6.103229522705078
    6. '       ' → logprob: -8.978229522705078
    7. '	l' → logprob: -9.353229522705078
    8. '``' → logprob: -12.478229522705078
    9. '               ' → logprob: -12.478229522705078
    10. '​' → logprob: -12.728229522705078

Token 691: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.910643762443215e-05
    2. '           ' → logprob: -9.500079154968262
    3. ' l' → logprob: -12.625079154968262
    4. '   ' → logprob: -14.625079154968262
    5. '	l' → logprob: -15.000079154968262
    6. '```' → logprob: -17.125078201293945
    7. '       ' → logprob: -17.625078201293945
    8. '               ' → logprob: -19.375078201293945
    9. '
' → logprob: -19.500078201293945
    10. '[l' → logprob: -19.875078201293945

Token 692: ' xo' (ID: 46871)
  Prédit: 'xo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xo' → logprob: -2.176947600673884e-05
    2. ' xo' → logprob: -10.750021934509277
    3. 'x' → logprob: -15.750021934509277
    4. 'xor' → logprob: -15.875021934509277
    5. 'forward' → logprob: -18.12502098083496
    6. '(x' → logprob: -18.50002098083496
    7. '   ' → logprob: -20.00002098083496
    8. 'oxo' → logprob: -20.37502098083496
    9. 'su' → logprob: -20.62502098083496
    10. 'XO' → logprob: -21.37502098083496

Token 693: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02055053412914276
    2. '==' → logprob: -3.895550489425659
    3. ' =' → logprob: -12.645550727844238
    4. '=' → logprob: -12.770550727844238
    5. ' ' → logprob: -13.895550727844238
    6. ' ' → logprob: -14.520550727844238
    7. ' ==
' → logprob: -14.770550727844238
    8. '==
' → logprob: -14.895550727844238
    9. ')==' → logprob: -16.145549774169922
    10. '```' → logprob: -16.395549774169922

Token 694: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0013307139743119478
    2. ' su' → logprob: -6.626330852508545
    3. 's' → logprob: -13.376330375671387
    4. ' ' → logprob: -13.751330375671387
    5. '   ' → logprob: -14.876330375671387
    6. 'sur' → logprob: -14.876330375671387
    7. '	s' → logprob: -15.376330375671387
    8. '```' → logprob: -16.001331329345703
    9. 'si' → logprob: -16.251331329345703
    10. '       ' → logprob: -16.251331329345703

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11349573731422424
    2. ':
' → logprob: -2.2384958267211914
    3. ',' → logprob: -8.113495826721191
    4. '           ' → logprob: -9.113495826721191
    5. ' and' → logprob: -9.238495826721191
    6. '               ' → logprob: -10.113495826721191
    7. '):
' → logprob: -10.363495826721191
    8. '<|end|>' → logprob: -10.738495826721191
    9. ')' → logprob: -11.113495826721191
    10. ' or' → logprob: -11.363495826721191

Token 696: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.040346659719944
    2. ':' → logprob: -3.915346622467041
    3. '           ' → logprob: -4.790346622467041
    4. '```' → logprob: -5.290346622467041
    5. ' forward' → logprob: -5.540346622467041
    6. '       ' → logprob: -7.165346622467041
    7. 'forward' → logprob: -8.1653470993042
    8. ':
' → logprob: -8.4153470993042
    9. '   ' → logprob: -8.6653470993042
    10. '<|end|>' → logprob: -8.9153470993042

Token 697: ' #' (ID: 1069)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.8668398261070251
    2. ' forward' → logprob: -0.9918398261070251
    3. '           ' → logprob: -2.11683988571167
    4. '               ' → logprob: -2.49183988571167
    5. ' l' → logprob: -5.74183988571167
    6. 'l' → logprob: -6.86683988571167
    7. '   ' → logprob: -7.11683988571167
    8. '            ' → logprob: -8.116839408874512
    9. '#' (adapté à ' #') → logprob: -9.991839408874512
    10. '       ' → logprob: -10.116839408874512

Token 698: ' Window' (ID: 24479)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.20376576483249664
    2. ' forward' → logprob: -1.7037657499313354
    3. ' l' → logprob: -7.078765869140625
    4. 'l' → logprob: -7.203765869140625
    5. '           ' → logprob: -7.953765869140625
    6. '            ' → logprob: -8.828765869140625
    7. '               ' → logprob: -8.828765869140625
    8. '   ' → logprob: -9.453765869140625
    9. ' ans' → logprob: -11.078765869140625
    10. 'ans' → logprob: -11.328765869140625

Token 699: ' [' (ID: 723)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46449506282806396
    2. '               ' → logprob: -1.464495062828064
    3. ' +=' → logprob: -3.5894951820373535
    4. '                ' → logprob: -3.9644951820373535
    5. ' ' → logprob: -4.0894951820373535
    6. '           ' → logprob: -4.2144951820373535
    7. '            ' → logprob: -4.3394951820373535
    8. '=' → logprob: -4.3394951820373535
    9. '[' → logprob: -5.0894951820373535
    10. ')' → logprob: -5.0894951820373535

Token 700: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001438266917830333
    2. ' l' → logprob: -8.875144004821777
    3. ',l' → logprob: -13.875144004821777
    4. ',' → logprob: -14.000144004821777
    5. '[l' → logprob: -14.250144004821777
    6. '           ' → logprob: -14.625144004821777
    7. '	l' → logprob: -15.125144004821777
    8. ' ' → logprob: -15.750144004821777
    9. '   ' → logprob: -16.00014305114746
    10. '
' → logprob: -16.00014305114746

Token 701: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04272463917732239
    2. ' ,' → logprob: -4.542724609375
    3. ',l' → logprob: -4.542724609375
    4. '+' → logprob: -4.667724609375
    5. ' +' → logprob: -4.792724609375
    6. '               ' → logprob: -6.292724609375
    7. '                   ' → logprob: -8.542724609375
    8. '           ' → logprob: -8.792724609375
    9. '+l' → logprob: -9.167724609375
    10. '+,' → logprob: -9.167724609375

Token 702: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0634472668170929
    2. '1' → logprob: -3.6884472370147705
    3. '+' → logprob: -4.31344747543335
    4. ',l' → logprob: -4.81344747543335
    5. ' +' → logprob: -5.06344747543335
    6. ' ,' → logprob: -5.18844747543335
    7. 'l' → logprob: -6.81344747543335
    8. '<|end|>' → logprob: -6.81344747543335
    9. '+l' → logprob: -8.438446998596191
    10. ' ' → logprob: -8.438446998596191

Token 703: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7497560381889343
    2. ']' → logprob: -0.7497560381889343
    3. ' ,' → logprob: -3.124756097793579
    4. ' ]' → logprob: -4.874755859375
    5. ',l' → logprob: -6.874755859375
    6. ']+' → logprob: -7.749755859375
    7. '           ' → logprob: -7.999755859375
    8. ',
' → logprob: -8.124755859375
    9. ']+=' → logprob: -8.749755859375
    10. ']==' → logprob: -8.874755859375

Token 704: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12846705317497253
    2. ' r' → logprob: -2.753467082977295
    3. 'l' → logprob: -3.128467082977295
    4. ' l' → logprob: -4.378467082977295
    5. ',' → logprob: -8.128466606140137
    6. ']' → logprob: -9.878466606140137
    7. ' ' → logprob: -10.003466606140137
    8. ')' → logprob: -10.128466606140137
    9. ' ]' → logprob: -10.253466606140137
    10. '```' → logprob: -11.253466606140137

Token 705: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005730282980948687
    2. ')' → logprob: -5.505730152130127
    3. ' ]' → logprob: -6.505730152130127
    4. ']==' → logprob: -9.255730628967285
    5. '+' → logprob: -11.505730628967285
    6. ']
' → logprob: -12.005730628967285
    7. '           ' → logprob: -12.005730628967285
    8. '   ' → logprob: -12.255730628967285
    9. '```' → logprob: -12.505730628967285
    10. '-' → logprob: -12.630730628967285

Token 706: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10924993455410004
    2. ':
' → logprob: -3.3592498302459717
    3. ':' → logprob: -3.4842498302459717
    4. '                   ' → logprob: -3.9842498302459717
    5. '<|end|>' → logprob: -4.484250068664551
    6. '
' → logprob: -6.734250068664551
    7. '=' → logprob: -6.734250068664551
    8. '           ' → logprob: -7.109250068664551
    9. '```' → logprob: -7.234250068664551
    10. '   ' → logprob: -7.234250068664551

Token 707: ' now' (ID: 1954)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.03816932439804077
    2. 'valid' → logprob: -3.2881693840026855
    3. '_valid' → logprob: -9.913168907165527
    4. ' True' → logprob: -10.538168907165527
    5. 'Valid' → logprob: -10.663168907165527
    6. 'True' → logprob: -10.663168907165527
    7. '	valid' → logprob: -13.413168907165527
    8. '               ' → logprob: -13.538168907165527
    9. ' now' → logprob: -14.538168907165527
    10. '(valid' → logprob: -14.913168907165527

Token 708: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.12695573270320892
    2. 'valid' → logprob: -2.12695574760437
    3. '_valid' → logprob: -10.62695598602295
    4. '	valid' → logprob: -12.87695598602295
    5. 'Valid' → logprob: -14.62695598602295
    6. '.valid' → logprob: -15.50195598602295
    7. '(valid' → logprob: -15.62695598602295
    8. '               ' → logprob: -17.251955032348633
    9. ' valide' → logprob: -17.501955032348633
    10. ' valido' → logprob: -17.626955032348633

Token 709: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6066827774047852
    2. '               ' → logprob: -1.7316827774047852
    3. ':
' → logprob: -2.356682777404785
    4. '                   ' → logprob: -2.481682777404785
    5. '```' → logprob: -3.231682777404785
    6. '   ' → logprob: -3.356682777404785
    7. '.' → logprob: -5.106682777404785
    8. ':l' → logprob: -5.356682777404785
    9. '           ' → logprob: -5.606682777404785
    10. '\n' → logprob: -6.231682777404785

Token 710: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10129860043525696
    2. '           ' → logprob: -3.6012985706329346
    3. '   ' → logprob: -3.9762985706329346
    4. '```' → logprob: -4.101298809051514
    5. '                   ' → logprob: -4.226298809051514
    6. '       ' → logprob: -4.851298809051514
    7. '\n' → logprob: -5.226298809051514
    8. ':' → logprob: -6.226298809051514
    9. '\' → logprob: -6.726298809051514
    10. '``' → logprob: -7.226298809051514

Token 711: ' forward' (ID: 6687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0017775188898667693
    2. ' l' → logprob: -7.001777648925781
    3. 'forward' (adapté à ' forward') → logprob: -7.501777648925781
    4. 'ans' → logprob: -8.626777648925781
    5. '   ' → logprob: -9.376777648925781
    6. '           ' → logprob: -10.626777648925781
    7. ' forward' → logprob: -11.376777648925781
    8. '
' → logprob: -12.501777648925781
    9. '	l' → logprob: -12.626777648925781
    10. ' ans' → logprob: -13.251777648925781

Token 712: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031784253660589457
    2. '=' → logprob: -5.753178596496582
    3. '=True' → logprob: -14.378178596496582
    4. ' =
' → logprob: -16.753177642822266
    5. ' ' → logprob: -16.878177642822266
    6. '=False' → logprob: -18.378177642822266
    7. '[' → logprob: -18.503177642822266
    8. '   ' → logprob: -18.628177642822266
    9. '    ' → logprob: -19.378177642822266
    10. ' ==' → logprob: -19.503177642822266

Token 713: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033558503491804004
    2. ' True' → logprob: -8.000335693359375
    3. 'Tr' → logprob: -16.125335693359375
    4. 'False' → logprob: -17.000335693359375
    5. '(True' → logprob: -19.125335693359375
    6. '1' → logprob: -19.875335693359375
    7. '=True' → logprob: -20.625335693359375
    8. 'T' → logprob: -21.500335693359375
    9. '   ' → logprob: -22.500335693359375
    10. '.True' → logprob: -22.625335693359375

Token 714: '        ' (ID: 269)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8388248085975647
    2. '               ' → logprob: -1.46382474899292
    3. '           ' → logprob: -1.46382474899292
    4. '<|end|>' → logprob: -2.58882474899292
    5. '   ' → logprob: -5.08882474899292
    6. '       ' → logprob: -5.33882474899292
    7. ' l' → logprob: -5.83882474899292
    8. ';l' → logprob: -6.08882474899292
    9. 'l' → logprob: -6.21382474899292
    10. '            
' → logprob: -6.58882474899292

Token 715: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0857951641082764
    2. '               ' → logprob: -1.0857951641082764
    3. '<|end|>' → logprob: -1.7107951641082764
    4. '
' → logprob: -2.0857951641082764
    5. '   ' → logprob: -5.5857954025268555
    6. '	l' → logprob: -5.8357954025268555
    7. 'l' → logprob: -5.8357954025268555
    8. '       ' → logprob: -5.9607954025268555
    9. ' l' → logprob: -5.9607954025268555
    10. '            
' → logprob: -7.0857954025268555

Token 716: ' Can' (ID: 4101)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0011866572313010693
    2. ' l' → logprob: -6.876186847686768
    3. '   ' → logprob: -9.37618637084961
    4. '           ' → logprob: -10.00118637084961
    5. 'ans' → logprob: -11.25118637084961
    6. '	l' → logprob: -12.25118637084961
    7. '               ' → logprob: -13.25118637084961
    8. '
' → logprob: -13.75118637084961
    9. ' ans' → logprob: -14.75118637084961
    10. '       ' → logprob: -15.00118637084961

Token 717: ' move' (ID: 5275)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5419741868972778
    2. ' l' → logprob: -0.9169741868972778
    3. '   ' → logprob: -4.291974067687988
    4. '           ' → logprob: -5.791974067687988
    5. '               ' → logprob: -6.666974067687988
    6. '       ' → logprob: -8.666974067687988
    7. ' ' → logprob: -9.041974067687988
    8. '+' → logprob: -9.541974067687988
    9. '                   ' → logprob: -9.666974067687988
    10. '	l' → logprob: -9.666974067687988

Token 718: ' forward' (ID: 6687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0011860613012686372
    2. ' l' → logprob: -6.751185894012451
    3. '	l' → logprob: -11.50118637084961
    4. '```' → logprob: -12.87618637084961
    5. '   ' → logprob: -13.37618637084961
    6. '           ' → logprob: -15.00118637084961
    7. 'r' → logprob: -15.87618637084961
    8. '_l' → logprob: -15.87618637084961
    9. '
' → logprob: -16.00118637084961
    10. '`' → logprob: -16.12618637084961

Token 719: ' again' (ID: 2418)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15502366423606873
    2. 'l' → logprob: -3.1550235748291016
    3. '<|end|>' → logprob: -3.2800235748291016
    4. '
' → logprob: -3.9050235748291016
    5. ' l' → logprob: -4.280023574829102
    6. '           ' → logprob: -4.405023574829102
    7. '   ' → logprob: -4.655023574829102
    8. '       ' → logprob: -5.905023574829102
    9. ',l' → logprob: -7.030023574829102
    10. ' ' → logprob: -7.155023574829102

Token 720: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35106992721557617
    2. '               ' → logprob: -1.6010699272155762
    3. '<|end|>' → logprob: -2.851069927215576
    4. '           ' → logprob: -3.851069927215576
    5. '   ' → logprob: -5.476069927215576
    6. '  
' → logprob: -6.476069927215576
    7. '    
' → logprob: -6.601069927215576
    8. '       ' → logprob: -6.601069927215576
    9. '            
' → logprob: -6.726069927215576
    10. ' l' → logprob: -7.101069927215576

Token 721: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03222198039293289
    2. 'l' → logprob: -3.657222032546997
    3. ' l' → logprob: -5.782221794128418
    4. '               ' → logprob: -6.032221794128418
    5. '   ' → logprob: -8.657221794128418
    6. '	l' → logprob: -9.282221794128418
    7. '       ' → logprob: -9.657221794128418
    8. '<|end|>' → logprob: -10.282221794128418
    9. '```' → logprob: -10.782221794128418
    10. ',l' → logprob: -11.532221794128418

Token 722: ' ans' (ID: 3345)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0027254673186689615
    2. 'ans' (adapté à ' ans') → logprob: -6.252725601196289
    3. '   ' → logprob: -7.377725601196289
    4. '           ' → logprob: -9.502725601196289
    5. '               ' → logprob: -10.002725601196289
    6. ' l' → logprob: -10.752725601196289
    7. '                   ' → logprob: -11.252725601196289
    8. '	l' → logprob: -12.002725601196289
    9. 'a' → logprob: -13.127725601196289
    10. '       ' → logprob: -13.252725601196289

Token 723: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006721756421029568
    2. '+=' → logprob: -5.0067219734191895
    3. ' =' → logprob: -13.381721496582031
    4. ' +' → logprob: -13.381721496582031
    5. '+' → logprob: -13.631721496582031
    6. ']+=' → logprob: -14.131721496582031
    7. '=' → logprob: -15.131721496582031
    8. '<|end|>' → logprob: -15.381721496582031
    9. ')' → logprob: -15.756721496582031
    10. ' -=' → logprob: -16.00672149658203

Token 724: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0025583035312592983
    2. ' r' → logprob: -6.00255823135376
    3. '(r' → logprob: -9.877558708190918
    4. '   ' → logprob: -10.752558708190918
    5. '0' → logprob: -13.252558708190918
    6. ' ' → logprob: -13.627558708190918
    7. '	r' → logprob: -13.627558708190918
    8. '    ' → logprob: -14.002558708190918
    9. '1' → logprob: -14.127558708190918
    10. '  ' → logprob: -14.252558708190918

Token 725: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06996211409568787
    2. '-' → logprob: -2.6949620246887207
    3. '-l' → logprob: -10.944962501525879
    4. '<|end|>' → logprob: -12.069962501525879
    5. ' ' → logprob: -14.319962501525879
    6. '   ' → logprob: -14.444962501525879
    7. '```' → logprob: -15.444962501525879
    8. ',' → logprob: -15.444962501525879
    9. ')' → logprob: -15.944962501525879
    10. '  ' → logprob: -16.319961547851562

Token 726: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004671730101108551
    2. '(l' → logprob: -5.379671573638916
    3. ' l' → logprob: -10.254672050476074
    4. '(' → logprob: -12.504672050476074
    5. ' (' → logprob: -12.629672050476074
    6. '   ' → logprob: -12.754672050476074
    7. '	l' → logprob: -13.379672050476074
    8. '1' → logprob: -14.129672050476074
    9. '           ' → logprob: -14.817172050476074
    10. '_l' → logprob: -14.879672050476074

Token 727: '          ' (ID: 3550)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03430238366127014
    2. ' +' → logprob: -3.6593024730682373
    3. '1' → logprob: -5.284302234649658
    4. '-' → logprob: -6.034302234649658
    5. ' -' → logprob: -8.409302711486816
    6. '<|end|>' → logprob: -8.784302711486816
    7. ' ' → logprob: -9.659302711486816
    8. '0' → logprob: -10.534302711486816
    9. '```' → logprob: -11.659302711486816
    10. '2' → logprob: -12.284302711486816

Token 728: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14617213606834412
    2. ' +' → logprob: -2.021172046661377
    3. '1' → logprob: -5.771172046661377
    4. '<|end|>' → logprob: -8.771172523498535
    5. '```' → logprob: -8.896172523498535
    6. ' ' → logprob: -10.396172523498535
    7. '[' → logprob: -11.146172523498535
    8. '`' → logprob: -11.771172523498535
    9. ')' → logprob: -11.771172523498535
    10. '+
' → logprob: -12.396172523498535

Token 729: ' Count' (ID: 6789)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001805377542041242
    2. ' l' → logprob: -8.8751802444458
    3. '           ' → logprob: -10.2501802444458
    4. '   ' → logprob: -12.5001802444458
    5. '	l' → logprob: -15.1251802444458
    6. '1' → logprob: -15.1251802444458
    7. '               ' → logprob: -15.2501802444458
    8. '```' → logprob: -15.2501802444458
    9. '                   ' → logprob: -15.7501802444458
    10. '       ' → logprob: -15.7501802444458

Token 730: ' valid' (ID: 4529)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05068833380937576
    2. 'l' → logprob: -3.0506882667541504
    3. ' l' → logprob: -6.92568826675415
    4. '+' → logprob: -7.67568826675415
    5. ' ' → logprob: -7.67568826675415
    6. '   ' → logprob: -10.050688743591309
    7. '           ' → logprob: -10.175688743591309
    8. ' +' → logprob: -10.800688743591309
    9. '+l' → logprob: -10.925688743591309
    10. '
' → logprob: -11.550688743591309

Token 731: ' sub' (ID: 1543)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0283913612365723
    2. '+' → logprob: -1.5283913612365723
    3. '1' → logprob: -1.6533913612365723
    4. ' +' → logprob: -2.5283913612365723
    5. 'l' → logprob: -3.4033913612365723
    6. '+=' → logprob: -3.6533913612365723
    7. '   ' → logprob: -4.028391361236572
    8. '+l' → logprob: -4.028391361236572
    9. '```' → logprob: -4.528391361236572
    10. '_l' → logprob: -4.528391361236572

Token 732: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.06359337270259857
    2. '1' → logprob: -3.0635933876037598
    3. 'array' → logprob: -5.06359338760376
    4. 'arr' → logprob: -5.81359338760376
    5. '           ' → logprob: -6.18859338760376
    6. '   ' → logprob: -7.18859338760376
    7. '       ' → logprob: -7.31359338760376
    8. ' arrays' → logprob: -8.063592910766602
    9. '_arrays' → logprob: -8.063592910766602
    10. ')' → logprob: -8.313592910766602

Token 733: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7865667939186096
    2. '<|end|>' → logprob: -1.6615667343139648
    3. '           ' → logprob: -2.036566734313965
    4. '   ' → logprob: -2.786566734313965
    5. '\n' → logprob: -3.411566734313965
    6. '	l' → logprob: -3.661566734313965
    7. ' l' → logprob: -3.786566734313965
    8. '```' → logprob: -4.161566734313965
    9. 'l' → logprob: -4.286566734313965
    10. '       ' → logprob: -4.911566734313965

Token 734: ' the' (ID: 290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6415073871612549
    2. 'l' → logprob: -0.7665073871612549
    3. ' l' → logprob: -4.766507148742676
    4. ' ' → logprob: -9.016507148742676
    5. '+' → logprob: -9.141507148742676
    6. '   ' → logprob: -10.266507148742676
    7. '```' → logprob: -10.641507148742676
    8. '+l' → logprob: -11.016507148742676
    9. '(l' → logprob: -11.266507148742676
    10. 'r' → logprob: -11.266507148742676

Token 735: ' new' (ID: 620)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009845096617937088
    2. '1' → logprob: -4.75984525680542
    3. ' l' → logprob: -6.88484525680542
    4. '+' → logprob: -9.259844779968262
    5. '(l' → logprob: -10.634844779968262
    6. '```' → logprob: -10.634844779968262
    7. ' ' → logprob: -10.759844779968262
    8. '+l' → logprob: -11.259844779968262
    9. '   ' → logprob: -11.759844779968262
    10. '`' → logprob: -12.134844779968262

Token 736: ' window' (ID: 5734)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001606747624464333
    2. ' l' → logprob: -6.8766069412231445
    3. '1' → logprob: -8.251606941223145
    4. '+' → logprob: -9.001606941223145
    5. '```' → logprob: -9.501606941223145
    6. '+l' → logprob: -10.376606941223145
    7. ' ' → logprob: -11.001606941223145
    8. '`' → logprob: -11.001606941223145
    9. ' 
' → logprob: -11.626606941223145
    10. ' +' → logprob: -11.876606941223145

Token 737: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.40773898363113403
    2. '
' → logprob: -2.0327389240264893
    3. '<|end|>' → logprob: -2.2827389240264893
    4. '           ' → logprob: -3.7827389240264893
    5. '   ' → logprob: -4.157739162445068
    6. '```' → logprob: -4.282739162445068
    7. '\' → logprob: -4.407739162445068
    8. '       ' → logprob: -5.157739162445068
    9. '\t' → logprob: -5.282739162445068
    10. '[l' → logprob: -5.407739162445068

Token 738: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1227378398180008
    2. '\n' → logprob: -3.3727378845214844
    3. '
' → logprob: -3.4977378845214844
    4. '   ' → logprob: -3.9977378845214844
    5. '```' → logprob: -4.622737884521484
    6. '       ' → logprob: -5.372737884521484
    7. '               ' → logprob: -5.497737884521484
    8. ' l' → logprob: -5.622737884521484
    9. '\' → logprob: -5.622737884521484
    10. ',l' → logprob: -6.872737884521484

Token 739: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.127333340875339e-06
    2. '           ' → logprob: -12.875003814697266
    3. '               ' → logprob: -14.000003814697266
    4. '   ' → logprob: -15.500003814697266
    5. ' l' → logprob: -15.750003814697266
    6. '                   ' → logprob: -16.375003814697266
    7. '
' → logprob: -16.375003814697266
    8. '	l' → logprob: -16.500003814697266
    9. '```' → logprob: -17.000003814697266
    10. '            
' → logprob: -17.750003814697266

Token 740: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.40346208214759827
    2. '=' → logprob: -1.1534620523452759
    3. '-=' → logprob: -5.278461933135986
    4. ' +=' → logprob: -5.278461933135986
    5. '-' → logprob: -6.403461933135986
    6. ')' → logprob: -6.653461933135986
    7. '+' → logprob: -6.653461933135986
    8. '<|end|>' → logprob: -6.903461933135986
    9. ',' → logprob: -7.653461933135986
    10. '==' → logprob: -9.153462409973145

Token 741: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3487183749675751
    2. '1' → logprob: -1.2237184047698975
    3. '-' → logprob: -8.723718643188477
    4. ' ' → logprob: -9.473718643188477
    5. '<|end|>' → logprob: -11.348718643188477
    6. 'r' → logprob: -11.973718643188477
    7. ' -' → logprob: -12.598718643188477
    8. '```' → logprob: -13.473718643188477
    9. '`' → logprob: -14.536218643188477
    10. '+' → logprob: -14.536218643188477

Token 742: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027490039356052876
    2. '1' → logprob: -6.002748966217041
    3. '-' → logprob: -8.2527494430542
    4. ' ' → logprob: -12.2527494430542
    5. ' -' → logprob: -12.8777494430542
    6. 'r' → logprob: -14.1902494430542
    7. '<|end|>' → logprob: -14.2527494430542
    8. '!' → logprob: -14.6902494430542
    9. ')' → logprob: -14.8777494430542
    10. '```' → logprob: -15.1902494430542

Token 743: '                ' (ID: 408)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 744: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 745: ' Advance' (ID: 71813)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.025660181418061256
    2. 'r' → logprob: -3.900660276412964
    3. ' l' → logprob: -5.775660037994385
    4. '0' → logprob: -7.275660037994385
    5. 'continue' → logprob: -8.650660514831543
    6. 'pass' → logprob: -8.900660514831543
    7. 'False' → logprob: -9.025660514831543
    8. '           ' → logprob: -9.025660514831543
    9. 'None' → logprob: -9.150660514831543
    10. ' continue' → logprob: -9.525660514831543

Token 746: ' right' (ID: 1849)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15064866840839386
    2. ' 
' → logprob: -2.525648593902588
    3. '
' → logprob: -3.525648593902588
    4. '\n' → logprob: -4.900648593902588
    5. ' ' → logprob: -5.025648593902588
    6. '  
' → logprob: -5.775648593902588
    7. ' 

' → logprob: -6.150648593902588
    8. ' r' → logprob: -6.150648593902588
    9. 'l' → logprob: -6.400648593902588
    10. '```' → logprob: -6.400648593902588

Token 747: ' pointer' (ID: 16233)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.9161640405654907
    2. '_pointer' → logprob: -1.0411640405654907
    3. ')' → logprob: -2.416163921356201
    4. ' pointer' → logprob: -2.791163921356201
    5. 'r' → logprob: -3.291163921356201
    6. '<|end|>' → logprob: -3.791163921356201
    7. '
' → logprob: -3.916163921356201
    8. '_r' → logprob: -5.541163921356201
    9. ' ' → logprob: -5.666163921356201
    10. '_' → logprob: -6.166163921356201

Token 748: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4618847370147705
    2. '<|end|>' → logprob: -1.3368847370147705
    3. '
' → logprob: -2.7118847370147705
    4. '\' → logprob: -4.086884498596191
    5. '```' → logprob: -4.336884498596191
    6. '\t' → logprob: -6.086884498596191
    7. ' 
' → logprob: -6.836884498596191
    8. '\r' → logprob: -6.836884498596191
    9. '  
' → logprob: -7.086884498596191
    10. ')' → logprob: -7.461884498596191

Token 749: '               ' (ID: 506)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22260011732578278
    2. '```' → logprob: -1.7226001024246216
    3. '<|end|>' → logprob: -4.847599983215332
    4. ' l' → logprob: -5.347599983215332
    5. '\' → logprob: -5.847599983215332
    6. '   ' → logprob: -6.722599983215332
    7. '	l' → logprob: -6.847599983215332
    8. '\n' → logprob: -7.597599983215332
    9. '\t' → logprob: -7.722599983215332
    10. '`' → logprob: -7.972599983215332

Token 750: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.0683535037969705e-05
    2. ' l' → logprob: -12.25001049041748
    3. '       ' → logprob: -13.12501049041748
    4. '           ' → logprob: -14.25001049041748
    5. 'continue' → logprob: -14.37501049041748
    6. '   ' → logprob: -14.87501049041748
    7. '               ' → logprob: -15.25001049041748
    8. '
' → logprob: -15.37501049041748
    9. '	l' → logprob: -15.37501049041748
    10. 'break' → logprob: -15.50001049041748

Token 751: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00039385363925248384
    2. '=' → logprob: -8.500393867492676
    3. ' +=' → logprob: -8.625393867492676
    4. '+' → logprob: -11.500393867492676
    5. '1' → logprob: -14.500393867492676
    6. ']+=' → logprob: -16.25039291381836
    7. '+=(' → logprob: -17.62539291381836
    8. ')' → logprob: -17.87539291381836
    9. '+='' → logprob: -18.00039291381836
    10. '++' → logprob: -18.37539291381836

Token 752: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '0' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '+' → logprob: -18.187501907348633
    6. '
' → logprob: -19.812501907348633
    7. '１' → logprob: -20.125001907348633
    8. 'l' → logprob: -20.187501907348633
    9. '۱' → logprob: -20.312501907348633
    10. '```' → logprob: -20.312501907348633

Token 753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.125
    3. ' ' → logprob: -16.5
    4. '+' → logprob: -17.375
    5. '2' → logprob: -18.5
    6. '```' → logprob: -18.5
    7. '۱' → logprob: -18.6875
    8. '   ' → logprob: -18.75
    9. '１' → logprob: -19.25
    10. '१' → logprob: -19.4375

Token 754: '                ' (ID: 408)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 755: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 756: ' Advance' (ID: 71813)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007749183103442192
    2. 'l' → logprob: -5.007749080657959
    3. '0' → logprob: -7.382749080657959
    4. ' l' → logprob: -8.507749557495117
    5. ' ' → logprob: -8.632749557495117
    6. '+' → logprob: -11.257749557495117
    7. 'continue' → logprob: -12.757749557495117
    8. ' continue' → logprob: -12.757749557495117
    9. '           ' → logprob: -13.007749557495117
    10. '```' → logprob: -13.257749557495117

Token 757: ' left' (ID: 3561)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4906589984893799
    2. '1' → logprob: -1.4906589984893799
    3. ' l' → logprob: -2.61565899848938
    4. '```' → logprob: -2.74065899848938
    5. '<|end|>' → logprob: -4.240658760070801
    6. ' ' → logprob: -4.865658760070801
    7. ' ' → logprob: -7.490658760070801
    8. ' 
' → logprob: -7.865658760070801
    9. '	l' → logprob: -8.2406587600708
    10. '+' → logprob: -8.3656587600708

Token 758: ' pointer' (ID: 16233)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.13309764862060547
    2. '+' → logprob: -2.7580976486206055
    3. '_pointer' → logprob: -3.6330976486206055
    4. ' pointer' → logprob: -3.7580976486206055
    5. ')' → logprob: -4.8830976486206055
    6. '<|end|>' → logprob: -6.6330976486206055
    7. '1' → logprob: -7.0080976486206055
    8. '```' → logprob: -7.7580976486206055
    9. '-pointer' → logprob: -8.633097648620605
    10. ' +' → logprob: -8.633097648620605

Token 759: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8550259470939636
    2. '<|end|>' → logprob: -1.6050260066986084
    3. '```' → logprob: -2.1050260066986084
    4. '\n' → logprob: -2.1050260066986084
    5. '       ' → logprob: -3.1050260066986084
    6. ' else' → logprob: -3.6050260066986084
    7. 'else' → logprob: -3.9800260066986084
    8. '               ' → logprob: -4.355025768280029
    9. '
' → logprob: -4.605025768280029
    10. '\' → logprob: -5.480025768280029

Token 760: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.3352739810943604
    2. '           ' → logprob: -1.5852739810943604
    3. ' else' → logprob: -1.5852739810943604
    4. '<|end|>' → logprob: -1.5852739810943604
    5. '       ' → logprob: -2.7102739810943604
    6. '```' → logprob: -3.3352739810943604
    7. '   ' → logprob: -5.460273742675781
    8. '	else' → logprob: -5.585273742675781
    9. '\n' → logprob: -5.585273742675781
    10. '\' → logprob: -6.460273742675781

Token 761: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2924842834472656
    2. ' else' → logprob: -1.5424842834472656
    3. '           ' → logprob: -3.4174842834472656
    4. '       ' → logprob: -5.417484283447266
    5. '	else' → logprob: -7.542484283447266
    6. '<|end|>' → logprob: -7.542484283447266
    7. '   ' → logprob: -7.792484283447266
    8. '               ' → logprob: -7.917484283447266
    9. '```' → logprob: -8.042484283447266
    10. ' ' → logprob: -9.167484283447266

Token 762: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5041421055793762
    2. ':
' → logprob: -1.2541420459747314
    3. '               ' → logprob: -3.1291420459747314
    4. '```' → logprob: -3.7541420459747314
    5. '<|end|>' → logprob: -4.2541422843933105
    6. '           ' → logprob: -4.2541422843933105
    7. '   ' → logprob: -5.5041422843933105
    8. ' l' → logprob: -6.5041422843933105
    9. '       ' → logprob: -6.5041422843933105
    10. ':l' → logprob: -7.3791422843933105

Token 763: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7038966417312622
    2. '               ' → logprob: -1.3288966417312622
    3. 'l' → logprob: -1.8288966417312622
    4. '   ' → logprob: -3.3288965225219727
    5. ' l' → logprob: -3.5788965225219727
    6. '```' → logprob: -4.328896522521973
    7. '	l' → logprob: -6.453896522521973
    8. '       ' → logprob: -7.453896522521973
    9. '	           ' → logprob: -8.578896522521973
    10. '                   ' → logprob: -8.828896522521973

Token 764: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.004689049907028675
    2. ' l' → logprob: -5.7546892166137695
    3. '           ' → logprob: -6.7546892166137695
    4. '   ' → logprob: -8.50468921661377
    5. '	l' → logprob: -9.00468921661377
    6. '       ' → logprob: -11.75468921661377
    7. '               ' → logprob: -12.50468921661377
    8. '    ' → logprob: -12.50468921661377
    9. '                   ' → logprob: -13.75468921661377
    10. '            ' → logprob: -13.87968921661377

Token 765: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004218485672026873
    2. ' +=' → logprob: -5.504218578338623
    3. '+' → logprob: -9.004218101501465
    4. '=' → logprob: -11.004218101501465
    5. '   ' → logprob: -15.879218101501465
    6. ']+=' → logprob: -16.00421905517578
    7. '```' → logprob: -16.00421905517578
    8. ' +' → logprob: -17.25421905517578
    9. '+='' → logprob: -18.00421905517578
    10. '+
' → logprob: -18.12921905517578

Token 766: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.250001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '0' → logprob: -20.125001907348633
    6. '           ' → logprob: -20.937501907348633
    7. '=' → logprob: -20.937501907348633
    8. '１' → logprob: -21.000001907348633
    9. '+' → logprob: -21.187501907348633
    10. '  ' → logprob: -21.250001907348633

Token 767: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -16.625
    4. '0' → logprob: -18.875
    5. '   ' → logprob: -19.0
    6. '<|end|>' → logprob: -19.5
    7. '+' → logprob: -20.5625
    8. '۱' → logprob: -20.5625
    9. '           ' → logprob: -20.9375
    10. '１' → logprob: -20.9375

Token 768: '                ' (ID: 408)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 769: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 770: ' Continue' (ID: 16958)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 771: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 772: ' shrink' (ID: 53969)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2116590738296509
    2. 'increment' → logprob: -1.5866590738296509
    3. 'sh' → logprob: -1.8366590738296509
    4. 'advance' → logprob: -1.9616590738296509
    5. 'increase' → logprob: -2.2116589546203613
    6. 'remove' → logprob: -3.7116589546203613
    7. 'move' → logprob: -3.7116589546203613
    8. ' increment' → logprob: -4.461658954620361
    9. ' advance' → logprob: -5.086658954620361
    10. '<|end|>' → logprob: -5.211658954620361

Token 773: ' the' (ID: 290)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 774: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.1077025979757309
    2. 'left' → logprob: -2.6077024936676025
    3. ' window' → logprob: -3.6077024936676025
    4. ' left' → logprob: -6.857702732086182
    5. 'l' → logprob: -8.857702255249023
    6. ')' → logprob: -10.232702255249023
    7. '<|end|>' → logprob: -11.482702255249023
    8. '	window' → logprob: -11.732702255249023
    9. '```' → logprob: -11.732702255249023
    10. '[left' → logprob: -12.107702255249023

Token 775: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 777: ' main' (ID: 2758)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10221350938081741
    2. ' _' → logprob: -2.6022136211395264
    3. ' ' → logprob: -4.227213382720947
    4. '<|end|>' → logprob: -5.852213382720947
    5. '__' → logprob: -6.727213382720947
    6. 'solve' → logprob: -6.977213382720947
    7. ' solve' → logprob: -7.102213382720947
    8. '_s' → logprob: -7.602213382720947
    9. '_main' → logprob: -7.977213382720947
    10. '_
' → logprob: -8.227213859558105

Token 778: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000462366413557902
    2. '():
' → logprob: -7.875462532043457
    3. '()' → logprob: -9.500462532043457
    4. ':' → logprob: -12.875462532043457
    5. '(' → logprob: -13.375462532043457
    6. ' ():' → logprob: -13.500462532043457
    7. '():
' → logprob: -14.375462532043457
    8. '_' → logprob: -14.500462532043457
    9. '()>' → logprob: -15.375462532043457
    10. '().' → logprob: -15.875462532043457

Token 779: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011976792477071285
    2. '():' → logprob: -5.386976718902588
    3. '():
' → logprob: -5.761976718902588
    4. ':' → logprob: -5.886976718902588
    5. '```' → logprob: -7.261976718902588
    6. '()' → logprob: -8.386977195739746
    7. '    
' → logprob: -8.386977195739746
    8. ':
' → logprob: -9.511977195739746
    9. '    ' → logprob: -10.636977195739746
    10. 'if' → logprob: -11.386977195739746

Token 780: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5675066113471985
    2. 'if' → logprob: -0.9425066113471985
    3. ' if' → logprob: -4.067506790161133
    4. 'solve' → logprob: -4.067506790161133
    5. ' solve' → logprob: -4.817506790161133
    6. '    
' → logprob: -7.317506790161133
    7. '```' → logprob: -8.692506790161133
    8. '    ' → logprob: -9.817506790161133
    9. 'def' → logprob: -10.192506790161133
    10. '()' → logprob: -10.692506790161133

Token 781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7067398428916931
    2. 'if' → logprob: -0.7067398428916931
    3. 'import' → logprob: -4.456739902496338
    4. '```' → logprob: -6.581739902496338
    5. 'get' → logprob: -8.33173942565918
    6. ' if' → logprob: -8.95673942565918
    7. 'try' → logprob: -9.33173942565918
    8. '    
' → logprob: -10.70673942565918
    9. 'def' → logprob: -11.70673942565918
    10. '__' → logprob: -12.08173942565918

Token 782: ' Handles' (ID: 47620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4321364760398865
    2. '   ' → logprob: -1.3071365356445312
    3. 'def' → logprob: -2.5571365356445312
    4. ' if' → logprob: -6.307136535644531
    5. '```' → logprob: -7.807136535644531
    6. '    
' → logprob: -8.682136535644531
    7. 'import' → logprob: -9.057136535644531
    8. 'i' → logprob: -9.432136535644531
    9. 'n' → logprob: -9.682136535644531
    10. '#' → logprob: -11.057136535644531

Token 783: ' multiple' (ID: 7598)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48365822434425354
    2. 'import' → logprob: -1.2336581945419312
    3. 'def' → logprob: -3.8586583137512207
    4. '```' → logprob: -3.8586583137512207
    5. ':' → logprob: -4.233658313751221
    6. 'if' → logprob: -4.233658313751221
    7. '():' → logprob: -4.983658313751221
    8. 'input' → logprob: -5.108658313751221
    9. 'the' → logprob: -5.733658313751221
    10. ' import' → logprob: -6.858658313751221

Token 784: ' test' (ID: 1746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.596623420715332
    2. '_' → logprob: -1.971623420715332
    3. '<|end|>' → logprob: -2.471623420715332
    4. '()' → logprob: -2.846623420715332
    5. '   ' → logprob: -3.221623420715332
    6. '(space' → logprob: -3.471623420715332
    7. '<|end|>' → logprob: -4.221623420715332
    8. '(' → logprob: -4.471623420715332
    9. ' _' → logprob: -5.221623420715332
    10. ' lines' → logprob: -5.596623420715332

Token 785: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.5230574607849121
    2. '_cases' → logprob: -1.023057460784912
    3. 'case' → logprob: -4.148057460784912
    4. ' cases' → logprob: -4.398057460784912
    5. '_' → logprob: -4.898057460784912
    6. '():' → logprob: -5.898057460784912
    7. '_case' → logprob: -6.023057460784912
    8. '():
' → logprob: -6.523057460784912
    9. 's' → logprob: -6.898057460784912
    10. '   ' → logprob: -7.273057460784912

Token 786: ',' (ID: 11)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07082051783800125
    2. ':' → logprob: -3.5708205699920654
    3. '():
' → logprob: -4.195820331573486
    4. '(n' → logprob: -4.445820331573486
    5. '   ' → logprob: -4.570820331573486
    6. '(' → logprob: -6.695820331573486
    7. '()' → logprob: -8.195820808410645
    8. '```' → logprob: -8.195820808410645
    9. '(
' → logprob: -8.445820808410645
    10. 'def' → logprob: -8.445820808410645

Token 787: ' calling' (ID: 14471)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004500735085457563
    2. '    
' → logprob: -6.754500865936279
    3. ':' → logprob: -6.879500865936279
    4. 'def' → logprob: -7.254500865936279
    5. '```' → logprob: -7.504500865936279
    6. 'n' → logprob: -8.379500389099121
    7. '
' → logprob: -8.629500389099121
    8. '():' → logprob: -9.004500389099121
    9. '  ' → logprob: -9.629500389099121
    10. '    ' → logprob: -9.629500389099121

Token 788: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.005537419579923153
    2. ' solve' → logprob: -5.380537509918213
    3. '   ' → logprob: -7.380537509918213
    4. '```' → logprob: -8.630537033081055
    5. 'def' → logprob: -9.755537033081055
    6. 'the' → logprob: -10.255537033081055
    7. '`' → logprob: -11.880537033081055
    8. '
' → logprob: -12.005537033081055
    9. ' the' → logprob: -12.755537033081055
    10. '``' → logprob: -13.880537033081055

Token 789: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38873252272605896
    2. '():' → logprob: -1.1387325525283813
    3. '()
' → logprob: -6.888732433319092
    4. '():
' → logprob: -7.513732433319092
    5. ':' → logprob: -9.38873291015625
    6. '().' → logprob: -9.88873291015625
    7. '()`' → logprob: -9.88873291015625
    8. '()\' → logprob: -10.26373291015625
    9. '()

' → logprob: -11.01373291015625
    10. '```' → logprob: -11.01373291015625

Token 790: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6597225666046143
    2. '():' → logprob: -1.0347225666046143
    3. '   ' → logprob: -2.6597225666046143
    4. '()
' → logprob: -3.7847225666046143
    5. '():
' → logprob: -3.9097225666046143
    6. ':' → logprob: -5.409722328186035
    7. 'for' → logprob: -5.534722328186035
    8. '```' → logprob: -5.784722328186035
    9. 'def' → logprob: -7.284722328186035
    10. ' for' → logprob: -7.409722328186035

Token 791: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.5330214500427246
    2. 't' → logprob: -1.4080214500427246
    3. '_' → logprob: -2.0330214500427246
    4. '   ' → logprob: -5.033021450042725
    5. ' each' → logprob: -5.158021450042725
    6. '_t' → logprob: -5.283021450042725
    7. '_each' → logprob: -5.283021450042725
    8. '```' → logprob: -5.283021450042725
    9. '()' → logprob: -6.158021450042725
    10. '
' → logprob: -6.408021450042725

Token 792: ' one' (ID: 1001)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1994707584381104
    2. '():' → logprob: -1.6994707584381104
    3. 'def' → logprob: -2.0744707584381104
    4. '   ' → logprob: -2.1994707584381104
    5. '()' → logprob: -2.3244707584381104
    6. ':' → logprob: -2.6994707584381104
    7. '(
' → logprob: -3.3244707584381104
    8. '()
' → logprob: -4.199470520019531
    9. '```' → logprob: -4.699470520019531
    10. '(n' → logprob: -4.824470520019531

Token 793: '.
' (ID: 558)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.40949830412864685
    2. ':' → logprob: -2.1594982147216797
    3. '   ' → logprob: -2.1594982147216797
    4. '(' → logprob: -3.5344982147216797
    5. '():
' → logprob: -3.5344982147216797
    6. '()' → logprob: -4.40949821472168
    7. '(
' → logprob: -4.40949821472168
    8. '
' → logprob: -5.40949821472168
    9. ':
' → logprob: -5.65949821472168
    10. '    
' → logprob: -5.90949821472168

Token 794: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6701051592826843
    2. '```' → logprob: -2.170105218887329
    3. '():' → logprob: -2.295105218887329
    4. '(n' → logprob: -2.295105218887329
    5. ':' → logprob: -2.670105218887329
    6. '():
' → logprob: -3.170105218887329
    7. '(' → logprob: -3.420105218887329
    8. '
' → logprob: -4.79510498046875
    9. '    
' → logprob: -5.29510498046875
    10. 'def' → logprob: -5.42010498046875

Token 795: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3844124972820282
    2. ':' → logprob: -1.8844125270843506
    3. '():' → logprob: -2.2594125270843506
    4. '():
' → logprob: -4.0094122886657715
    5. '(n' → logprob: -4.0094122886657715
    6. '    
' → logprob: -4.6344122886657715
    7. '```' → logprob: -5.3844122886657715
    8. ':
' → logprob: -5.8844122886657715
    9. '  
' → logprob: -6.0094122886657715
    10. '(' → logprob: -6.0094122886657715

Token 796: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0634312629699707
    2. '(' → logprob: -3.3134312629699707
    3. '   ' → logprob: -4.188431262969971
    4. 'the' → logprob: -5.938431262969971
    5. 't' → logprob: -6.063431262969971
    6. 'n' → logprob: -6.563431262969971
    7. 'int' → logprob: -6.938431262969971
    8. '()
' → logprob: -7.313431262969971
    9. '():' → logprob: -8.063430786132812
    10. ':' → logprob: -8.313430786132812

Token 797: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015157783403992653
    2. '(' → logprob: -5.015157699584961
    3. '()' → logprob: -5.890157699584961
    4. ' ' → logprob: -6.890157699584961
    5. 'n' → logprob: -7.015157699584961
    6. '  ' → logprob: -7.265157699584961
    7. '```' → logprob: -7.265157699584961
    8. '`' → logprob: -8.015157699584961
    9. 't' → logprob: -8.015157699584961
    10. '    ' → logprob: -8.140157699584961

Token 798: ' -' (ID: 533)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004340037237852812
    2. 'n' → logprob: -6.129340171813965
    3. '   ' → logprob: -7.004340171813965
    4. 'T' → logprob: -7.129340171813965
    5. ' t' → logprob: -8.004340171813965
    6. 'int' → logprob: -9.254340171813965
    7. 'get' → logprob: -12.129340171813965
    8. 'q' → logprob: -13.379340171813965
    9. 'num' → logprob: -13.379340171813965
    10. '`t' → logprob: -13.754340171813965

Token 799: ' n' (ID: 297)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029241101816296577
    2. 'T' → logprob: -3.6542410850524902
    3. 'int' → logprob: -6.65424108505249
    4. 'get' → logprob: -6.65424108505249
    5. ' t' → logprob: -8.154241561889648
    6. 'n' → logprob: -10.654241561889648
    7. '   ' → logprob: -10.779241561889648
    8. ' T' → logprob: -11.529241561889648
    9. ' get' → logprob: -11.904241561889648
    10. 'q' → logprob: -12.404241561889648

Token 800: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9091882705688477
    2. ' =' → logprob: -1.2841882705688477
    3. 's' → logprob: -1.4091882705688477
    4. '_' → logprob: -3.1591882705688477
    5. ':' → logprob: -4.534188270568848
    6. '(s' → logprob: -4.909188270568848
    7. ' ' → logprob: -5.284188270568848
    8. '_s' → logprob: -5.409188270568848
    9. '   ' → logprob: -6.909188270568848
    10. '
' → logprob: -7.659188270568848

Token 801: ' number' (ID: 2086)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6596313714981079
    2. '=' → logprob: -1.784631371498108
    3. 'n' → logprob: -1.784631371498108
    4. ' ' → logprob: -2.7846312522888184
    5. '   ' → logprob: -3.4096312522888184
    6. 'int' → logprob: -4.034631252288818
    7. '()' → logprob: -4.659631252288818
    8. ')' → logprob: -4.909631252288818
    9. ' n' → logprob: -5.784631252288818
    10. '=int' → logprob: -5.784631252288818

Token 802: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.4770607054233551
    2. 'of' → logprob: -1.8520606756210327
    3. ' of' → logprob: -2.7270607948303223
    4. '=' → logprob: -3.1020607948303223
    5. ' =' → logprob: -3.2270607948303223
    6. '_' → logprob: -4.102060794830322
    7. '   ' → logprob: -4.227060794830322
    8. '()' → logprob: -4.977060794830322
    9. '_s' → logprob: -5.352060794830322
    10. 's' → logprob: -5.602060794830322

Token 803: ' test' (ID: 1746)
  Prédit: ' test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.03732006624341011
    2. ' ' → logprob: -3.787320137023926
    3. 'test' → logprob: -4.537320137023926
    4. '_test' → logprob: -7.037320137023926
    5. ' t' → logprob: -7.287320137023926
    6. 't' → logprob: -7.662320137023926
    7. '(test' → logprob: -8.537320137023926
    8. '_tests' → logprob: -8.537320137023926
    9. ')test' → logprob: -8.912320137023926
    10. ' tests' → logprob: -8.912320137023926

Token 804: ' cases' (ID: 7911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8655300736427307
    2. '_cases' → logprob: -1.115530014038086
    3. 'cases' → logprob: -2.115530014038086
    4. 's' → logprob: -2.615530014038086
    5. ')' → logprob: -3.865530014038086
    6. ' ' → logprob: -3.865530014038086
    7. 'case' → logprob: -4.865530014038086
    8. ' cases' → logprob: -5.990530014038086
    9. '_case' → logprob: -7.240530014038086
    10. '   ' → logprob: -7.490530014038086

Token 805: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3617025315761566
    2. '():' → logprob: -2.1117024421691895
    3. '=' → logprob: -2.4867024421691895
    4. '   ' → logprob: -2.7367024421691895
    5. '):' → logprob: -4.3617024421691895
    6. ' =' → logprob: -4.7367024421691895
    7. '(n' → logprob: -5.9867024421691895
    8. ':
' → logprob: -6.2367024421691895
    9. ')' → logprob: -6.2367024421691895
    10. '()' → logprob: -6.2367024421691895

Token 806: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025981277227401733
    2. ':' → logprob: -5.275981426239014
    3. ')' → logprob: -5.525981426239014
    4. 'def' → logprob: -5.525981426239014
    5. '```' → logprob: -5.900981426239014
    6. '):' → logprob: -6.150981426239014
    7. '(n' → logprob: -6.150981426239014
    8. '
' → logprob: -6.900981426239014
    9. '():' → logprob: -7.150981426239014
    10. '):
' → logprob: -7.150981426239014

Token 807: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4693683385848999
    2. ':' → logprob: -1.3443683385849
    3. '():' → logprob: -2.7193684577941895
    4. '):' → logprob: -4.3443684577941895
    5. 'def' → logprob: -4.8443684577941895
    6. '():
' → logprob: -4.9693684577941895
    7. ':
' → logprob: -5.2193684577941895
    8. ' =' → logprob: -5.4693684577941895
    9. '):
' → logprob: -5.4693684577941895
    10. '(n' → logprob: -6.2193684577941895

Token 808: ' each' (ID: 2454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10035645216703415
    2. ' _' → logprob: -2.350356340408325
    3. ' ' → logprob: -9.350356101989746
    4. '  ' → logprob: -11.225356101989746
    5. 'i' → logprob: -11.725356101989746
    6. '   ' → logprob: -11.850356101989746
    7. ' i' → logprob: -11.850356101989746
    8. '_i' → logprob: -11.975356101989746
    9. '__' → logprob: -12.475356101989746
    10. '_case' → logprob: -12.475356101989746

Token 809: ' test' (ID: 1746)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.24615834653377533
    2. '_' → logprob: -1.7461583614349365
    3. ' ' → logprob: -3.2461583614349365
    4. ' test' → logprob: -5.996158123016357
    5. ' t' → logprob: -7.246158123016357
    6. ' i' → logprob: -7.496158123016357
    7. '_test' → logprob: -8.496158599853516
    8. 'n' → logprob: -8.621158599853516
    9. '_t' → logprob: -8.871158599853516
    10. '  ' → logprob: -9.371158599853516

Token 810: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.2674769461154938
    2. 'case' → logprob: -2.017477035522461
    3. '   ' → logprob: -3.267477035522461
    4. '_' → logprob: -3.392477035522461
    5. '_case' → logprob: -5.267477035522461
    6. '
' → logprob: -5.392477035522461
    7. ')' → logprob: -5.517477035522461
    8. '```' → logprob: -5.642477035522461
    9. ' test' → logprob: -5.767477035522461
    10. ' ' → logprob: -6.517477035522461

Token 811: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5911690592765808
    2. '():' → logprob: -0.9661690592765808
    3. '   ' → logprob: -3.2161691188812256
    4. '):' → logprob: -5.0911688804626465
    5. ':
' → logprob: -5.3411688804626465
    6. '(n' → logprob: -5.4661688804626465
    7. '():
' → logprob: -5.7161688804626465
    8. ',' → logprob: -5.8411688804626465
    9. '(' → logprob: -6.7161688804626465
    10. '()' → logprob: -7.2161688804626465

Token 812: ' invokes' (ID: 144837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060430943965911865
    2. ' 
' → logprob: -4.185431003570557
    3. '       ' → logprob: -4.935431003570557
    4. 'n' → logprob: -5.310431003570557
    5. '    ' → logprob: -5.435431003570557
    6. ' input' → logprob: -5.560431003570557
    7. '```' → logprob: -5.685431003570557
    8. '
' → logprob: -5.810431003570557
    9. ':' → logprob: -5.935431003570557
    10. ' get' → logprob: -6.310431003570557

Token 813: ' the' (ID: 290)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -7.493430894101039e-05
    2. ' solve' → logprob: -9.500075340270996
    3. '
' → logprob: -17.50007438659668
    4. '   ' → logprob: -18.50007438659668
    5. '```' → logprob: -19.12507438659668
    6. 'save' → logprob: -19.25007438659668
    7. 'resolve' → logprob: -19.75007438659668
    8. '.solve' → logprob: -19.75007438659668
    9. '(s' → logprob: -19.87507438659668
    10. '()' → logprob: -21.25007438659668

Token 814: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -6.8497312895488e-05
    2. ' solve' → logprob: -9.625068664550781
    3. '()' → logprob: -13.750068664550781
    4. 's' → logprob: -14.750068664550781
    5. 'solver' → logprob: -15.625068664550781
    6. '```' → logprob: -15.750068664550781
    7. '(s' → logprob: -16.37506866455078
    8. '.solve' → logprob: -16.37506866455078
    9. '   ' → logprob: -16.62506866455078
    10. '`' → logprob: -16.75006866455078

Token 815: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031918513122946024
    2. '()
' → logprob: -5.753191947937012
    3. '()`' → logprob: -12.128191947937012
    4. '()

' → logprob: -12.878191947937012
    5. '()\' → logprob: -13.003191947937012
    6. '()
' → logprob: -13.378191947937012
    7. '(' → logprob: -13.878191947937012
    8. '()"' → logprob: -14.878191947937012
    9. '(
' → logprob: -15.003191947937012
    10. '();' → logprob: -15.628191947937012

Token 816: ' function' (ID: 1114)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01012387964874506
    2. '()
' → logprob: -4.6351237297058105
    3. '()

' → logprob: -8.510124206542969
    4. 'def' → logprob: -10.010124206542969
    5. '()`' → logprob: -10.135124206542969
    6. '```' → logprob: -10.760124206542969
    7. '();' → logprob: -11.385124206542969
    8. '()\' → logprob: -11.510124206542969
    9. '(' → logprob: -11.635124206542969
    10. '()
' → logprob: -12.010124206542969

Token 817: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9110215902328491
    2. '():' → logprob: -1.1610215902328491
    3. '():
' → logprob: -1.7860215902328491
    4. ':' → logprob: -2.7860217094421387
    5. '```' → logprob: -3.7860217094421387
    6. ':
' → logprob: -4.536021709442139
    7. '()' → logprob: -5.161021709442139
    8. '(n' → logprob: -5.536021709442139
    9. '
' → logprob: -5.786021709442139
    10. '(' → logprob: -5.786021709442139

Token 818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8137368559837341
    2. ':' → logprob: -1.063736915588379
    3. '():' → logprob: -2.188736915588379
    4. '```' → logprob: -3.063736915588379
    5. '():
' → logprob: -3.688736915588379
    6. ':
' → logprob: -4.688736915588379
    7. '(n' → logprob: -4.813736915588379
    8. '):' → logprob: -6.063736915588379
    9. '    
' → logprob: -6.313736915588379
    10. '
' → logprob: -6.438736915588379

Token 819: ' """
' (ID: 7037)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7591979503631592
    2. '   ' → logprob: -1.1341979503631592
    3. '():' → logprob: -2.384197950363159
    4. '():
' → logprob: -3.259197950363159
    5. '```' → logprob: -3.759197950363159
    6. ':
' → logprob: -3.759197950363159
    7. '(n' → logprob: -4.009198188781738
    8. 'def' → logprob: -4.759198188781738
    9. '    
' → logprob: -6.509198188781738
    10. '(' → logprob: -6.884198188781738

Token 820: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13976609706878662
    2. '   ' → logprob: -2.139766216278076
    3. 't' → logprob: -4.639766216278076
    4. 'if' → logprob: -6.764766216278076
    5. '
' → logprob: -7.139766216278076
    6. '```' → logprob: -7.139766216278076
    7. '    
' → logprob: -9.139765739440918
    8. 'def' → logprob: -9.889765739440918
    9. 'for' → logprob: -10.014765739440918
    10. ' n' → logprob: -10.014765739440918

Token 821: ' n' (ID: 297)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011064324527978897
    2. 'n' (adapté à ' n') → logprob: -5.011064529418945
    3. 'for' → logprob: -5.886064529418945
    4. 'T' → logprob: -6.511064529418945
    5. '   ' → logprob: -10.261064529418945
    6. 'num' → logprob: -11.136064529418945
    7. 'tc' → logprob: -11.261064529418945
    8. ' t' → logprob: -11.886064529418945
    9. 'test' → logprob: -14.011064529418945
    10. 'q' → logprob: -14.136064529418945

Token 822: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38690292835235596
    2. '=' → logprob: -1.136902928352356
    3. '=int' → logprob: -10.636902809143066
    4. ' ' → logprob: -13.011902809143066
    5. '_' → logprob: -13.136902809143066
    6. '   ' → logprob: -14.261902809143066
    7. '=get' → logprob: -14.261902809143066
    8. ')' → logprob: -14.886902809143066
    9. '=input' → logprob: -15.011902809143066
    10. '_=' → logprob: -15.136902809143066

Token 823: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.04906884953379631
    2. 'int' → logprob: -3.0490689277648926
    3. ' get' → logprob: -7.799068927764893
    4. ' int' → logprob: -9.549068450927734
    5. '=int' → logprob: -18.674068450927734
    6. '=get' → logprob: -18.799068450927734
    7. '   ' → logprob: -19.049068450927734
    8. '	get' → logprob: -19.424068450927734
    9. '(int' → logprob: -19.674068450927734
    10. ' ' → logprob: -19.799068450927734

Token 824: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. ' N' → logprob: -18.125
    4. 'S' → logprob: -18.625
    5. '()' → logprob: -19.0
    6. 'Z' → logprob: -19.625
    7. '=' → logprob: -19.625
    8. 'int' → logprob: -20.25
    9. 'I' → logprob: -20.375
    10. '()
' → logprob: -20.5

Token 825: '()
' (ID: 1234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13184569776058197
    2. '   ' → logprob: -3.006845712661743
    3. ' for' → logprob: -3.256845712661743
    4. '<|end|>' → logprob: -4.256845474243164
    5. '
' → logprob: -4.881845474243164
    6. ' ' → logprob: -5.881845474243164
    7. ':' → logprob: -5.881845474243164
    8. '	for' → logprob: -6.881845474243164
    9. '<|end|>' → logprob: -6.881845474243164
    10. '    
' → logprob: -7.006845474243164

Token 826: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07652351260185242
    2. ' for' → logprob: -3.076523542404175
    3. '   ' → logprob: -3.701523542404175
    4. '	for' → logprob: -5.951523303985596
    5. '
' → logprob: -9.576523780822754
    6. '\t' → logprob: -9.951523780822754
    7. '    
' → logprob: -10.201523780822754
    8. '```' → logprob: -10.826523780822754
    9. '\n' → logprob: -11.201523780822754
    10. '' → logprob: -11.326523780822754

Token 827: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.610702363715973e-06
    2. ' for' → logprob: -11.875009536743164
    3. '	for' → logprob: -13.375009536743164
    4. 'while' → logprob: -14.250009536743164
    5. '   ' → logprob: -14.625009536743164
    6. '
' → logprob: -17.750009536743164
    7. '    
' → logprob: -18.125009536743164
    8. '	
' → logprob: -19.375009536743164
    9. 'f' → logprob: -19.500009536743164
    10. '\t' → logprob: -19.875009536743164

Token 828: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20143477618694305
    2. ' _' → logprob: -1.7014347314834595
    3. ' i' → logprob: -11.326435089111328
    4. ' ' → logprob: -12.076435089111328
    5. '_i' → logprob: -13.201435089111328
    6. ' ‌' → logprob: -13.576435089111328
    7. ' ' → logprob: -15.201435089111328
    8. ' ​' → logprob: -16.451435089111328
    9. '​' → logprob: -16.701435089111328
    10. '‌' → logprob: -17.076435089111328

Token 829: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09766039252281189
    2. 'in' → logprob: -2.5976603031158447
    3. ' _' → logprob: -4.097660541534424
    4. ' ' → logprob: -6.847660541534424
    5. '_' → logprob: -7.097660541534424
    6. ' i' → logprob: -10.597660064697266
    7. 'i' → logprob: -11.472660064697266
    8. 'range' → logprob: -11.722660064697266
    9. ' ​' → logprob: -11.722660064697266
    10. '  ' → logprob: -11.972660064697266

Token 830: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003357006062287837
    2. ' range' → logprob: -8.000335693359375
    3. '_' → logprob: -16.125335693359375
    4. ' ' → logprob: -16.625335693359375
    5. '  ' → logprob: -18.375335693359375
    6. '```' → logprob: -18.500335693359375
    7. 'n' → logprob: -18.625335693359375
    8. 'r' → logprob: -19.125335693359375
    9. '	range' → logprob: -19.375335693359375
    10. ')' → logprob: -19.500335693359375

Token 831: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4355849325656891
    2. '(' → logprob: -1.5605849027633667
    3. ' n' → logprob: -2.3105850219726562
    4. ' (' → logprob: -3.3105850219726562
    5. ' ' → logprob: -5.685585021972656
    6. 'n' → logprob: -6.435585021972656
    7. '<|end|>' → logprob: -6.935585021972656
    8. '1' → logprob: -8.560585021972656
    9. ')' → logprob: -8.685585021972656
    10. '<|end|>' → logprob: -8.935585021972656

Token 832: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11309275776147842
    2. '):
' → logprob: -2.3630926609039307
    3. ':' → logprob: -4.98809289932251
    4. ')' → logprob: -5.23809289932251
    5. ':
' → logprob: -8.738092422485352
    6. '():' → logprob: -8.738092422485352
    7. '   ' → logprob: -8.988092422485352
    8. '():
' → logprob: -9.113092422485352
    9. '+' → logprob: -10.113092422485352
    10. '<|end|>' → logprob: -11.113092422485352

Token 833: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016803745180368423
    2. 'solve' → logprob: -4.766803741455078
    3. '   ' → logprob: -5.391803741455078
    4. '```' → logprob: -6.016803741455078
    5. ' solve' → logprob: -7.266803741455078
    6. '<|end|>' → logprob: -8.641803741455078
    7. '        
' → logprob: -9.016803741455078
    8. '`' → logprob: -10.641803741455078
    9. '``' → logprob: -10.766803741455078
    10. '    
' → logprob: -11.141803741455078

Token 834: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -1.2948405128554441e-05
    2. '       ' → logprob: -11.50001335144043
    3. ' solve' → logprob: -12.87501335144043
    4. '   ' → logprob: -16.87501335144043
    5. '.solve' → logprob: -17.00001335144043
    6. '```' → logprob: -17.25001335144043
    7. 'print' → logprob: -19.87501335144043
    8. 'resolve' → logprob: -19.87501335144043
    9. 'solver' → logprob: -20.12501335144043
    10. 'save' → logprob: -20.37501335144043

Token 835: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.97024549683556e-05
    2. '()
' → logprob: -9.500080108642578
    3. '()`' → logprob: -14.250080108642578
    4. '(' → logprob: -14.375080108642578
    5. '()\' → logprob: -14.375080108642578
    6. '()]' → logprob: -14.375080108642578
    7. '```' → logprob: -14.500080108642578
    8. '()

' → logprob: -14.875080108642578
    9. '())' → logprob: -15.000080108642578
    10. '()
' → logprob: -15.375080108642578

Token 836: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19078275561332703
    2. '<|end|>' → logprob: -2.4407827854156494
    3. '```' → logprob: -2.8157827854156494
    4. '
' → logprob: -3.6907827854156494
    5. '#' → logprob: -7.56578254699707
    6. ' if' → logprob: -7.81578254699707
    7. '``' → logprob: -8.94078254699707
    8. '__' → logprob: -9.19078254699707
    9. '<|end|>' → logprob: -9.19078254699707
    10. ')' → logprob: -9.56578254699707

Token 837: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 838: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 839: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05263811722397804
    2. '```' → logprob: -3.427638053894043
    3. '<|end|>' → logprob: -4.677638053894043
    4. '
' → logprob: -4.802638053894043
    5. ' if' → logprob: -7.302638053894043
    6. '\n' → logprob: -8.177638053894043
    7. '#' → logprob: -9.302638053894043
    8. '``' → logprob: -9.802638053894043
    9. '  
' → logprob: -9.927638053894043
    10. '    
' → logprob: -10.552638053894043

Token 840: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16023631393909454
    2. '__' → logprob: -1.9102363586425781
    3. '_name' → logprob: -12.535236358642578
    4. '_' → logprob: -12.660236358642578
    5. 'name' → logprob: -12.785236358642578
    6. ' ' → logprob: -14.035236358642578
    7. '___' → logprob: -14.160236358642578
    8. ' ' → logprob: -14.910236358642578
    9. 'Name' → logprob: -15.410236358642578
    10. '/__' → logprob: -15.535236358642578

Token 841: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013108810409903526
    2. '==' → logprob: -5.388108730316162
    3. ' ==' → logprob: -5.513108730316162
    4. 'if' → logprob: -6.263108730316162
    5. '.__' → logprob: -6.763108730316162
    6. '.' → logprob: -8.13810920715332
    7. '[' → logprob: -8.51310920715332
    8. '_' → logprob: -8.76310920715332
    9. 'name' → logprob: -9.01310920715332
    10. '__.__' → logprob: -9.26310920715332

Token 842: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000363590574124828
    2. '==' → logprob: -8.00036334991455
    3. '__.__' → logprob: -11.12536334991455
    4. ' ==' → logprob: -12.75036334991455
    5. '```' → logprob: -12.87536334991455
    6. '=="' → logprob: -13.25036334991455
    7. '__
' → logprob: -13.75036334991455
    8. '___' → logprob: -13.87536334991455
    9. '__":
' → logprob: -14.62536334991455
    10. '__('' → logprob: -14.62536334991455

Token 843: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2181549072265625
    2. ' ==' → logprob: -2.3431549072265625
    3. '__' → logprob: -2.9681549072265625
    4. '=="' → logprob: -3.3431549072265625
    5. '=='' → logprob: -4.4681549072265625
    6. '"' → logprob: -7.0931549072265625
    7. ''' → logprob: -8.218154907226562
    8. '=' → logprob: -8.718154907226562
    9. '===' → logprob: -9.218154907226562
    10. '==
' → logprob: -9.468154907226562

Token 844: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002498490735888481
    2. ''' → logprob: -6.002498626708984
    3. '__' → logprob: -11.002498626708984
    4. ' "__' → logprob: -12.127498626708984
    5. '"name' → logprob: -15.377498626708984
    6. '"_' → logprob: -16.127498626708984
    7. ''"' → logprob: -16.252498626708984
    8. ' '__' → logprob: -16.627498626708984
    9. '"user' → logprob: -16.752498626708984
    10. '"'' → logprob: -17.002498626708984

Token 845: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2021489143371582
    2. '__' → logprob: -1.7021489143371582
    3. '"' → logprob: -7.327148914337158
    4. '_main' → logprob: -9.9521484375
    5. ''' → logprob: -11.0771484375
    6. 'name' → logprob: -11.3271484375
    7. '__
' → logprob: -13.9521484375
    8. ' main' → logprob: -14.4521484375
    9. '__":
' → logprob: -14.4521484375
    10. '___' → logprob: -15.8271484375

Token 846: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.31510913372039795
    2. '__' → logprob: -1.315109133720398
    3. '__':
' → logprob: -6.4401092529296875
    4. '__.' → logprob: -8.940109252929688
    5. '__
' → logprob: -9.940109252929688
    6. '__["' → logprob: -10.440109252929688
    7. '__.__' → logprob: -10.690109252929688
    8. '__
' → logprob: -12.065109252929688
    9. '.' → logprob: -12.690109252929688
    10. '__:' → logprob: -12.940109252929688

Token 847: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2962358891963959
    2. '   ' → logprob: -1.5462359189987183
    3. '	main' → logprob: -3.9212357997894287
    4. '__' → logprob: -4.546236038208008
    5. '```' → logprob: -4.921236038208008
    6. ' main' → logprob: -6.171236038208008
    7. '"' → logprob: -6.671236038208008
    8. '_main' → logprob: -7.171236038208008
    9. '    
' → logprob: -7.671236038208008
    10. '__":
' → logprob: -9.046236038208008

Token 848: ' #' (ID: 1069)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -16.5
    4. '   ' → logprob: -18.125
    5. 'import' → logprob: -21.375
    6. '_main' → logprob: -21.5
    7. '(main' → logprob: -21.875
    8. '```' → logprob: -23.625
    9. '.main' → logprob: -24.75
    10. 'Main' → logprob: -24.875

Token 849: ' Entry' (ID: 28122)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.5776860184123507e-06
    2. ' main' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.000001907348633
    4. '	main' → logprob: -16.625001907348633
    5. 'import' → logprob: -17.000001907348633
    6. '__' → logprob: -18.000001907348633
    7. 'try' → logprob: -18.125001907348633
    8. '(main' → logprob: -18.750001907348633
    9. 'def' → logprob: -20.125001907348633
    10. '_main' → logprob: -20.375001907348633

Token 850: ' point' (ID: 2438)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2728276252746582
    2. '_' → logprob: -1.8978276252746582
    3. '__' → logprob: -3.522827625274658
    4. '   ' → logprob: -3.522827625274658
    5. ' if' → logprob: -4.522827625274658
    6. '=' → logprob: -4.772827625274658
    7. ' ' → logprob: -5.897827625274658
    8. '    ' → logprob: -6.522827625274658
    9. '```' → logprob: -6.522827625274658
    10. ':' → logprob: -6.772827625274658

Token 851: ' when' (ID: 1261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.045358046889305115
    2. 'def' → logprob: -4.420358180999756
    3. '():
' → logprob: -4.545358180999756
    4. '   ' → logprob: -4.920358180999756
    5. ':
' → logprob: -5.045358180999756
    6. ':' → logprob: -5.795358180999756
    7. '__":
' → logprob: -6.420358180999756
    8. '__' → logprob: -6.545358180999756
    9. 'main' → logprob: -7.795358180999756
    10. '()' → logprob: -8.420357704162598

Token 852: ' executed' (ID: 30830)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011093381908722222
    2. ' __' → logprob: -9.125110626220703
    3. 'name' → logprob: -13.250110626220703
    4. 'python' → logprob: -16.375110626220703
    5. 'import' → logprob: -16.750110626220703
    6. 'if' → logprob: -18.250110626220703
    7. '```' → logprob: -18.375110626220703
    8. '.__' → logprob: -18.500110626220703
    9. 'main' → logprob: -18.750110626220703
    10. '___' → logprob: -18.750110626220703

Token 853: ' as' (ID: 472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2339511662721634
    2. '```' → logprob: -1.983951210975647
    3. ':' → logprob: -3.7339510917663574
    4. '   ' → logprob: -4.108951091766357
    5. ':
' → logprob: -4.483951091766357
    6. '__' → logprob: -4.483951091766357
    7. 'main' → logprob: -5.108951091766357
    8. ' if' → logprob: -6.983951091766357
    9. '``' → logprob: -8.108951568603516
    10. '():
' → logprob: -8.233951568603516

Token 854: ' a' (ID: 261)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000735177774913609
    2. ' __' → logprob: -7.250735282897949
    3. 'main' → logprob: -10.87573528289795
    4. ' script' → logprob: -13.25073528289795
    5. 'a' → logprob: -13.50073528289795
    6. ' main' → logprob: -14.12573528289795
    7. '```' → logprob: -14.37573528289795
    8. 'script' → logprob: -14.62573528289795
    9. 'python' → logprob: -14.75073528289795
    10. ' a' → logprob: -15.12573528289795

Token 855: ' script' (ID: 11713)
  Prédit: 'script'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'script' → logprob: -0.07258078455924988
    2. ' script' → logprob: -2.8225808143615723
    3. '__' → logprob: -4.572580814361572
    4. 'main' → logprob: -8.697580337524414
    5. ' __' → logprob: -10.697580337524414
    6. '_script' → logprob: -11.072580337524414
    7. ' standalone' → logprob: -11.697580337524414
    8. 'stand' → logprob: -12.447580337524414
    9. '-script' → logprob: -12.947580337524414
    10. 'program' → logprob: -13.197580337524414

Token 856: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10133814811706543
    2. '```' → logprob: -3.6013381481170654
    3. 'main' → logprob: -3.8513381481170654
    4. ':' → logprob: -3.8513381481170654
    5. '	main' → logprob: -5.2263383865356445
    6. ':
' → logprob: -5.3513383865356445
    7. '    
' → logprob: -5.3513383865356445
    8. '():
' → logprob: -6.1013383865356445
    9. 'if' → logprob: -6.1013383865356445
    10. '(' → logprob: -6.2263383865356445

Token 857: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052369922399520874
    2. 'main' → logprob: -3.0523698329925537
    3. 'solve' → logprob: -5.802370071411133
    4. '	main' → logprob: -7.302370071411133
    5. '```' → logprob: -10.177370071411133
    6. ' main' → logprob: -10.552370071411133
    7. ' solve' → logprob: -12.427370071411133
    8. '__' → logprob: -12.552370071411133
    9. '   ' → logprob: -12.552370071411133
    10. '    
' → logprob: -12.802370071411133

Token 858: ' #' (ID: 1069)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.25
    3. ' main' → logprob: -15.75
    4. '	main' → logprob: -17.25
    5. '```' → logprob: -21.0
    6. '(main' → logprob: -21.25
    7. 'import' → logprob: -21.5
    8. '_main' → logprob: -21.875
    9. 'mai' → logprob: -23.125
    10. 'm' → logprob: -23.125

Token 859: ' Uncomment' (ID: 168644)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -13.625001907348633
    3. ' main' → logprob: -15.500001907348633
    4. 'import' → logprob: -16.500001907348633
    5. '	main' → logprob: -18.000001907348633
    6. '```' → logprob: -20.125001907348633
    7. '__' → logprob: -20.375001907348633
    8. '(main' → logprob: -20.375001907348633
    9. 'solve' → logprob: -20.375001907348633
    10. 'try' → logprob: -21.000001907348633

Token 860: ' main' (ID: 2758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2856408357620239
    2. '#' → logprob: -2.0356407165527344
    3. 'input' → logprob: -2.9106407165527344
    4. 'main' → logprob: -3.7856407165527344
    5. 'solve' → logprob: -3.9106407165527344
    6. 'get' → logprob: -4.785640716552734
    7. '()' → logprob: -5.410640716552734
    8. '(' → logprob: -5.535640716552734
    9. 'import' → logprob: -7.410640716552734
    10. '(input' → logprob: -7.660640716552734

Token 861: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034886106848716736
    2. '()
' → logprob: -3.409886121749878
    3. 'main' → logprob: -7.034885883331299
    4. '#' → logprob: -8.909886360168457
    5. '.main' → logprob: -10.159886360168457
    6. '().' → logprob: -10.159886360168457
    7. '()

' → logprob: -10.409886360168457
    8. '_main' → logprob: -10.534886360168457
    9. '()`' → logprob: -10.784886360168457
    10. '(main' → logprob: -11.034886360168457

Token 862: ' if' (ID: 538)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008231333456933498
    2. 'main' → logprob: -5.008231163024902
    3. '()
' → logprob: -7.008231163024902
    4. '#' → logprob: -8.383231163024902
    5. '.main' → logprob: -8.883231163024902
    6. '(' → logprob: -9.508231163024902
    7. ' main' → logprob: -10.008231163024902
    8. '(main' → logprob: -10.008231163024902
    9. '()`' → logprob: -10.258231163024902
    10. '().' → logprob: -11.383231163024902

Token 863: ' solving' (ID: 37367)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.17400768399238586
    2. '__' → logprob: -2.5490076541900635
    3. ' True' → logprob: -3.4240076541900635
    4. '#' → logprob: -3.6740076541900635
    5. 'main' → logprob: -3.9240076541900635
    6. 'False' → logprob: -6.174007892608643
    7. '1' → logprob: -6.799007892608643
    8. ' __' → logprob: -8.549007415771484
    9. ' main' → logprob: -9.049007415771484
    10. '0' → logprob: -9.549007415771484

Token 864: ' multiple' (ID: 7598)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5910161137580872
    2. '#' → logprob: -1.3410160541534424
    3. '()' → logprob: -1.7160160541534424
    4. '   ' → logprob: -6.0910162925720215
    5. '()
' → logprob: -6.4660162925720215
    6. ' main' → logprob: -8.091015815734863
    7. '(main' → logprob: -8.091015815734863
    8. '_main' → logprob: -8.966015815734863
    9. '(' → logprob: -9.841015815734863
    10. '():
' → logprob: -9.966015815734863

Token 865: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -1.0452040433883667
    2. ' test' → logprob: -1.1702040433883667
    3. '_test' → logprob: -1.1702040433883667
    4. '_cases' → logprob: -4.795204162597656
    5. 'tests' → logprob: -5.170204162597656
    6. '#' → logprob: -5.545204162597656
    7. '_tests' → logprob: -5.670204162597656
    8. 'cases' → logprob: -6.045204162597656
    9. 't' → logprob: -6.670204162597656
    10. '   ' → logprob: -6.920204162597656

Token 866: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.03830048069357872
    2. '_cases' → logprob: -3.2883005142211914
    3. '()' → logprob: -8.913300514221191
    4. '#' → logprob: -10.288300514221191
    5. '()
' → logprob: -10.413300514221191
    6. '   ' → logprob: -10.663300514221191
    7. ' cases' → logprob: -11.163300514221191
    8. '():
' → logprob: -11.663300514221191
    9. '```' → logprob: -11.913300514221191
    10. 's' → logprob: -13.413300514221191

Token 867: ';' (ID: 26)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6089539527893066
    2. '#' → logprob: -1.2339539527893066
    3. 'main' → logprob: -1.9839539527893066
    4. '()
' → logprob: -4.358953952789307
    5. '   ' → logprob: -4.858953952789307
    6. '(main' → logprob: -5.608953952789307
    7. '():
' → logprob: -6.733953952789307
    8. '(' → logprob: -7.483953952789307
    9. ' main' → logprob: -7.733953952789307
    10. '();' → logprob: -8.358953475952148

Token 868: ' for' (ID: 395)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.371587872505188
    2. 'main' → logprob: -1.371587872505188
    3. '   ' → logprob: -2.8715877532958984
    4. ' main' → logprob: -10.371587753295898
    5. ' #' → logprob: -11.871587753295898
    6. 'solve' → logprob: -12.371587753295898
    7. '```' → logprob: -13.371587753295898
    8. '	main' → logprob: -13.621587753295898
    9. '##' → logprob: -13.746587753295898
    10. '#if' → logprob: -14.871587753295898

Token 869: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5751046538352966
    2. 'solve' → logprob: -1.2001047134399414
    3. 'single' → logprob: -2.0751047134399414
    4. ' solve' → logprob: -5.450104713439941
    5. ' single' → logprob: -5.700104713439941
    6. '   ' → logprob: -7.200104713439941
    7. 'testing' → logprob: -7.700104713439941
    8. ' testing' → logprob: -8.075104713439941
    9. 'interactive' → logprob: -8.075104713439941
    10. 'main' → logprob: -8.450104713439941

Token 870: ' single' (ID: 4590)
  Prédit: ' single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.5309532284736633
    2. 'single' → logprob: -0.9059532284736633
    3. '#' → logprob: -5.530953407287598
    4. 'sing' → logprob: -5.905953407287598
    5. ' singular' → logprob: -7.655953407287598
    6. 'c' → logprob: -8.905953407287598
    7. 'ingle' → logprob: -9.155953407287598
    8. '_single' → logprob: -9.905953407287598
    9. ' #' → logprob: -10.030953407287598
    10. 'def' → logprob: -10.280953407287598

Token 871: ' case' (ID: 1890)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.253767192363739
    2. 'test' → logprob: -1.6287672519683838
    3. ' test' → logprob: -4.378767013549805
    4. ' solve' → logprob: -5.003767013549805
    5. 'case' → logprob: -5.878767013549805
    6. '   ' → logprob: -6.128767013549805
    7. '```' → logprob: -6.878767013549805
    8. '#' → logprob: -7.503767013549805
    9. ' ' → logprob: -7.628767013549805
    10. '_test' → logprob: -7.878767013549805

Token 872: ',' (ID: 11)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.19499042630195618
    2. ':' → logprob: -2.819990396499634
    3. '():
' → logprob: -3.069990396499634
    4. '()' → logprob: -3.069990396499634
    5. 'main' → logprob: -3.819990396499634
    6. 'solve' → logprob: -7.069990634918213
    7. '   ' → logprob: -7.319990634918213
    8. '()
' → logprob: -7.444990634918213
    9. ':
' → logprob: -7.819990634918213
    10. '();' → logprob: -9.569990158081055

Token 873: ' call' (ID: 2421)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.5054022073745728
    2. '#' → logprob: -1.1304022073745728
    3. '   ' → logprob: -2.755402088165283
    4. 'main' → logprob: -4.630402088165283
    5. ' solve' → logprob: -7.755402088165283
    6. ' main' → logprob: -10.505402565002441
    7. '```' → logprob: -11.255402565002441
    8. ' #' → logprob: -11.380402565002441
    9. 'input' → logprob: -12.880402565002441
    10. '  ' → logprob: -12.880402565002441

Token 874: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4748260974884033
    2. 'solve' → logprob: -0.9748260974884033
    3. '#' → logprob: -7.224825859069824
    4. '   ' → logprob: -11.599825859069824
    5. ' main' → logprob: -12.474825859069824
    6. ' solve' → logprob: -12.599825859069824
    7. '(main' → logprob: -13.349825859069824
    8. '```' → logprob: -13.474825859069824
    9. 'solution' → logprob: -14.974825859069824
    10. '	main' → logprob: -15.099825859069824

Token 875: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.349075556499884e-05
    2. '()
' → logprob: -10.0000638961792
    3. '()`' → logprob: -12.6250638961792
    4. '();' → logprob: -12.7500638961792
    5. '()<' → logprob: -13.3750638961792
    6. '())' → logprob: -13.3750638961792
    7. '()"' → logprob: -13.5000638961792
    8. '()">' → logprob: -13.5000638961792
    9. '()

' → logprob: -13.7500638961792
    10. '()\' → logprob: -14.1250638961792

Token 876: ' directly' (ID: 8516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18254207074642181
    2. '#' → logprob: -2.432542085647583
    3. '   ' → logprob: -3.307542085647583
    4. '()
' → logprob: -3.932542085647583
    5. '():
' → logprob: -4.182541847229004
    6. 'main' → logprob: -6.057541847229004
    7. '();' → logprob: -6.807541847229004
    8. '()\' → logprob: -7.057541847229004
    9. '(' → logprob: -7.432541847229004
    10. 'solve' → logprob: -7.682541847229004

Token 877: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28267812728881836
    2. '()' → logprob: -2.4076781272888184
    3. '#' → logprob: -2.9076781272888184
    4. 'main' → logprob: -2.9076781272888184
    5. '():
' → logprob: -4.157678127288818
    6. ':' → logprob: -4.657678127288818
    7. '():' → logprob: -5.032678127288818
    8. '()
' → logprob: -5.157678127288818
    9. 'solve' → logprob: -5.407678127288818
    10. ':
' → logprob: -6.657678127288818

Token 878: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5806116461753845
    2. 'main' → logprob: -0.8306116461753845
    3. '	main' → logprob: -5.705611705780029
    4. ' main' → logprob: -7.205611705780029
    5. '#' → logprob: -7.580611705780029
    6. '(main' → logprob: -9.955611228942871
    7. '```' → logprob: -11.330611228942871
    8. '\' → logprob: -11.830611228942871
    9. '\t' → logprob: -12.455611228942871
    10. '_main' → logprob: -12.955611228942871

Token 879: ' #' (ID: 1069)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.012255205772817135
    2. '   ' → logprob: -4.5122551918029785
    3. '#' (adapté à ' #') → logprob: -6.7622551918029785
    4. ' main' → logprob: -10.637255668640137
    5. '	main' → logprob: -10.637255668640137
    6. 'solve' → logprob: -13.762255668640137
    7. '(main' → logprob: -15.012255668640137
    8. '```' → logprob: -15.887255668640137
    9. '_main' → logprob: -16.13725471496582
    10. '  ' → logprob: -16.38725471496582

Token 880: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.015327775850892067
    2. 'solve' → logprob: -4.2653279304504395
    3. '#' → logprob: -6.7653279304504395
    4. '   ' → logprob: -12.140327453613281
    5. ' main' → logprob: -12.390327453613281
    6. ' solve' → logprob: -15.515327453613281
    7. '	main' → logprob: -15.765327453613281
    8. '(main' → logprob: -15.890327453613281
    9. 'print' → logprob: -16.51532745361328
    10. '```' → logprob: -17.01532745361328

Token 881: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03814832493662834
    2. '()
' → logprob: -3.2881484031677246
    3. 'solve' → logprob: -9.413147926330566
    4. '();' → logprob: -11.913147926330566
    5. '()\' → logprob: -11.913147926330566
    6. '()`' → logprob: -12.288147926330566
    7. '()

' → logprob: -13.163147926330566
    8. '   ' → logprob: -13.413147926330566
    9. '(' → logprob: -14.288147926330566
    10. '()
' → logprob: -14.538147926330566

Token 882: '   ' (ID: 271)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0009221808286383748
    2. '   ' → logprob: -7.000922203063965
    3. ' solve' → logprob: -11.500922203063965
    4. '```' → logprob: -15.500922203063965
    5. '.solve' → logprob: -15.500922203063965
    6. '\' → logprob: -17.12592124938965
    7. ' ' → logprob: -17.50092124938965
    8. '    
' → logprob: -18.12592124938965
    9. '__' → logprob: -18.12592124938965
    10. '	s' → logprob: -18.50092124938965

Token 883: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -3.128163257315464e-07
    2. ' solve' → logprob: -15.625
    3. '   ' → logprob: -16.125
    4. '.solve' → logprob: -19.625
    5. '```' → logprob: -20.25
    6. 'resolve' → logprob: -21.375
    7. 'save' → logprob: -22.0
    8. '\' → logprob: -23.5
    9. '`' → logprob: -23.75
    10. '__' → logprob: -24.125

Token 884: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007338665891438723
    2. '()
' → logprob: -7.500733852386475
    3. '
' → logprob: -9.500734329223633
    4. '<|end|>' → logprob: -9.750734329223633
    5. '```' → logprob: -10.875734329223633
    6. '()\' → logprob: -11.375734329223633
    7. '(' → logprob: -11.875734329223633
    8. ' ()' → logprob: -12.625734329223633
    9. '()<' → logprob: -13.500734329223633
    10. '())' → logprob: -13.625734329223633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 882
Tokens correctement prédits (1ère position, stricte): 227
Tokens correctement prédits (1ère position, avec adaptation): 246
Tokens correctement prédits (top 10): 553
Précision stricte (1ère position): 25.74%
Précision adaptée (1ère position): 27.89%
Précision (top 10): 62.70%
================================================================================
