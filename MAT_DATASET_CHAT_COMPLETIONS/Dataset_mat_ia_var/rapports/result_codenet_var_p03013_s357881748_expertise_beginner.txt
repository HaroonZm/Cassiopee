================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_and_m = input().split()
n = int(n_and_m[0])
m = int(n_and_m[1])
a = []
for i in range(m):
    a.append(int(input()))
dp = []
for i in range(n + 10):
    dp.append(0)
dp[0] = 1
for x in a:
    dp[x] = -1
mod = 1000000007
for i in range(n):
    if dp[i] < 0:
        continue
    if dp[i+1] >= 0:
        dp[i+1] = (dp[i+1] + dp[i]) % mod
    if dp[i+2] >= 0:
        dp[i+2] = (dp[i+2] + dp[i]) % mod
print(dp[n])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_and' (ID: 18645)
  → Token d'amorce (pas de prédiction)

Token 2: '_m' (ID: 1285)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1995949000120163
    2. ' =' → logprob: -1.8245948553085327
    3. '[' → logprob: -5.074594974517822
    4. ',' → logprob: -5.324594974517822
    5. '.' → logprob: -5.824594974517822
    6. '_' → logprob: -6.324594974517822
    7. '```' → logprob: -6.449594974517822
    8. '`' → logprob: -8.199594497680664
    9. ')' → logprob: -8.449594497680664
    10. '#' → logprob: -8.574594497680664

Token 4: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8897960186004639
    2. ' input' → logprob: -1.3897960186004639
    3. ' ' → logprob: -2.139796018600464
    4. '"' → logprob: -2.639796018600464
    5. ' int' → logprob: -3.139796018600464
    6. ''' → logprob: -4.264796257019043
    7. ' list' → logprob: -4.514796257019043
    8. ' [' → logprob: -4.514796257019043
    9. ' []' → logprob: -4.514796257019043
    10. 'int' → logprob: -4.639796257019043

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002867042785510421
    2. '('' → logprob: -6.252867221832275
    3. ''' → logprob: -7.627867221832275
    4. '("("' → logprob: -9.002866744995117
    5. '(
' → logprob: -9.127866744995117
    6. '()' → logprob: -9.377866744995117
    7. '"' → logprob: -9.752866744995117
    8. '[' → logprob: -10.377866744995117
    9. ' (' → logprob: -12.127866744995117
    10. '.' → logprob: -12.127866744995117

Token 6: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4664968252182007
    2. '.' → logprob: -1.4664968252182007
    3. 'split' → logprob: -2.8414969444274902
    4. '()' → logprob: -3.7164969444274902
    5. '_' → logprob: -4.46649694442749
    6. '().' → logprob: -4.59149694442749
    7. '.strip' → logprob: -4.59149694442749
    8. '(' → logprob: -4.71649694442749
    9. '[' → logprob: -5.34149694442749
    10. '_split' → logprob: -5.71649694442749

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007015860173851252
    2. '()' → logprob: -5.007015705108643
    3. '('' → logprob: -8.5070161819458
    4. '(
' → logprob: -10.2570161819458
    5. '("("' → logprob: -11.0070161819458
    6. '(

' → logprob: -11.3820161819458
    7. '(`' → logprob: -11.7570161819458
    8. '"' → logprob: -12.1320161819458
    9. '`' → logprob: -12.6320161819458
    10. '((' → logprob: -12.6320161819458

Token 8: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21405017375946045
    2. '[' → logprob: -1.7140501737594604
    3. '[n' → logprob: -5.58905029296875
    4. ' =' → logprob: -5.83905029296875
    5. '```' → logprob: -6.71405029296875
    6. '=' → logprob: -7.33905029296875
    7. '_n' → logprob: -7.33905029296875
    8. 'num' → logprob: -7.58905029296875
    9. ' n' → logprob: -7.83905029296875
    10. 'x' → logprob: -7.83905029296875

Token 9: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.180720716714859
    2. '[' → logprob: -1.8057206869125366
    3. '#' → logprob: -8.180720329284668
    4. ')' → logprob: -9.180720329284668
    5. ',' → logprob: -9.305720329284668
    6. '=' → logprob: -9.680720329284668
    7. 's' → logprob: -9.805720329284668
    8. '\[' → logprob: -9.805720329284668
    9. ']' → logprob: -10.055720329284668
    10. '<|end|>' → logprob: -10.180720329284668

Token 10: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4319184720516205
    2. 'int' → logprob: -1.0569185018539429
    3. ' n' → logprob: -6.056918621063232
    4. 'n' → logprob: -7.181918621063232
    5. ' ' → logprob: -9.306918144226074
    6. 'input' → logprob: -12.806918144226074
    7. ''' → logprob: -12.931918144226074
    8. '"' → logprob: -12.931918144226074
    9. ' '' → logprob: -13.181918144226074
    10. '  ' → logprob: -13.306918144226074

Token 11: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06997711211442947
    2. '(n' → logprob: -2.694977045059204
    3. '('' → logprob: -10.819976806640625
    4. '("("' → logprob: -12.069976806640625
    5. '()' → logprob: -12.694976806640625
    6. '((' → logprob: -13.319976806640625
    7. '(
' → logprob: -13.569976806640625
    8. '("' → logprob: -13.694976806640625
    9. '(

' → logprob: -13.819976806640625
    10. '(open' → logprob: -13.944976806640625

Token 12: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0001295222609769553
    2. '_)' → logprob: -9.875129699707031
    3. '_' → logprob: -10.125129699707031
    4. '[_' → logprob: -11.500129699707031
    5. '[' → logprob: -11.875129699707031
    6. ')_' → logprob: -12.000129699707031
    7. '_or' → logprob: -12.125129699707031
    8. ')' → logprob: -12.375129699707031
    9. '_[' → logprob: -13.375129699707031
    10. '_a' → logprob: -14.125129699707031

Token 13: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.35706390615087e-05
    2. '_' → logprob: -10.375033378601074
    3. ' _' → logprob: -14.625033378601074
    4. '"_' → logprob: -14.625033378601074
    5. 'm' → logprob: -15.000033378601074
    6. ''_' → logprob: -15.375033378601074
    7. '_p' → logprob: -15.875033378601074
    8. '_n' → logprob: -15.875033378601074
    9. ')_' → logprob: -16.00003433227539
    10. '_s' → logprob: -16.87503433227539

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.537868779967539e-06
    2. ')' → logprob: -11.875008583068848
    3. ' [' → logprob: -14.250008583068848
    4. '[
' → logprob: -15.500008583068848
    5. '\[' → logprob: -15.500008583068848
    6. ' )' → logprob: -16.00000762939453
    7. ')[' → logprob: -16.25000762939453
    8. '```' → logprob: -16.50000762939453
    9. '   ' → logprob: -16.50000762939453
    10. ' ' → logprob: -16.62500762939453

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021966483909636736
    2. '1' → logprob: -6.127196788787842
    3. ' ' → logprob: -11.627196311950684
    4. ''' → logprob: -14.377196311950684
    5. '])' → logprob: -14.377196311950684
    6. ')' → logprob: -14.377196311950684
    7. ']' → logprob: -14.752196311950684
    8. '```' → logprob: -15.877196311950684
    9. '`' → logprob: -16.002197265625
    10. '   ' → logprob: -17.002197265625

Token 16: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007276729680597782
    2. '])' → logprob: -5.00727653503418
    3. ']' → logprob: -7.63227653503418
    4. ' )' → logprob: -10.50727653503418
    5. ')])' → logprob: -11.13227653503418
    6. '）' → logprob: -12.13227653503418
    7. ')]' → logprob: -12.13227653503418
    8. '[' → logprob: -12.38227653503418
    9. ' ])' → logprob: -12.63227653503418
    10. ''])' → logprob: -12.63227653503418

Token 17: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2664687931537628
    2. ' m' → logprob: -2.2664687633514404
    3. 'n' → logprob: -2.2664687633514404
    4. ')' → logprob: -5.0164690017700195
    5. ' ' → logprob: -5.1414690017700195
    6. '<|end|>' → logprob: -5.3914690017700195
    7. ',' → logprob: -6.0164690017700195
    8. ' n' → logprob: -6.0164690017700195
    9. '  
' → logprob: -6.8914690017700195
    10. '```' → logprob: -7.2664690017700195

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14916691184043884
    2. '=' → logprob: -2.5241668224334717
    3. '_' → logprob: -3.1491668224334717
    4. ')' → logprob: -4.649167060852051
    5. ' ' → logprob: -5.649167060852051
    6. '_space' → logprob: -7.649167060852051
    7. '[' → logprob: -7.774167060852051
    8. '<|end|>' → logprob: -7.899167060852051
    9. '  ' → logprob: -8.39916706085205
    10. '.' → logprob: -8.64916706085205

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3132875859737396
    2. 'int' → logprob: -1.313287615776062
    3. ' n' → logprob: -10.938287734985352
    4. 'n' → logprob: -12.938287734985352
    5. ' ' → logprob: -13.188287734985352
    6. '=int' → logprob: -13.563287734985352
    7. '0' → logprob: -13.813287734985352
    8. '[int' → logprob: -14.813287734985352
    9. '(int' → logprob: -15.313287734985352
    10. '<int' → logprob: -15.438287734985352

Token 20: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.484186053276062
    2. '(n' → logprob: -0.984186053276062
    3. '(m' → logprob: -4.609186172485352
    4. ' (' → logprob: -9.609186172485352
    5. '(
' → logprob: -11.984186172485352
    6. '()' → logprob: -12.734186172485352
    7. '(s' → logprob: -12.984186172485352
    8. '((' → logprob: -13.234186172485352
    9. '(f' → logprob: -13.234186172485352
    10. ')' → logprob: -13.484186172485352

Token 21: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.002292279154062271
    2. ')' → logprob: -6.252292156219482
    3. '_)' → logprob: -8.25229263305664
    4. ')_' → logprob: -9.87729263305664
    5. '[' → logprob: -10.37729263305664
    6. '_' → logprob: -12.00229263305664
    7. '_a' → logprob: -13.00229263305664
    8. '[_' → logprob: -13.25229263305664
    9. '_AND' → logprob: -13.37729263305664
    10. '_m' → logprob: -13.37729263305664

Token 22: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -4.143808109802194e-05
    2. '_' → logprob: -10.250041007995605
    3. '_and' → logprob: -12.875041007995605
    4. 'm' → logprob: -13.250041007995605
    5. '_s' → logprob: -14.250041007995605
    6. '_f' → logprob: -15.250041007995605
    7. 'and' → logprob: -15.750041007995605
    8. ')_' → logprob: -15.875041007995605
    9. '_a' → logprob: -16.000041961669922
    10. ' _' → logprob: -16.375041961669922

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012356207298580557
    2. ')' → logprob: -9.125123977661133
    3. ')[' → logprob: -12.000123977661133
    4. '```' → logprob: -12.250123977661133
    5. ' [' → logprob: -13.625123977661133
    6. '[
' → logprob: -14.625123977661133
    7. '1' → logprob: -15.000123977661133
    8. '])' → logprob: -15.125123977661133
    9. '-' → logprob: -15.500123977661133
    10. '   ' → logprob: -15.875123977661133

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005745976231992245
    2. '0' → logprob: -7.625574588775635
    3. '])' → logprob: -9.375575065612793
    4. ')' → logprob: -13.875575065612793
    5. ' ' → logprob: -15.250575065612793
    6. ']' → logprob: -15.500575065612793
    7. '```' → logprob: -15.500575065612793
    8. ')]' → logprob: -17.750574111938477
    9. '])
' → logprob: -17.750574111938477
    10. '   ' → logprob: -17.750574111938477

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. '])' → logprob: -13.125008583068848
    3. '）' → logprob: -13.125008583068848
    4. '`)' → logprob: -13.750008583068848
    5. '))' → logprob: -13.875008583068848
    6. '')' → logprob: -14.000008583068848
    7. ']' → logprob: -14.000008583068848
    8. ')]' → logprob: -15.500008583068848
    9. '```' → logprob: -15.625008583068848
    10. ')])' → logprob: -16.250009536743164

Token 26: 'a' (ID: 64)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8628277778625488
    2. 'a' → logprob: -1.8628277778625488
    3. 'for' → logprob: -2.112827777862549
    4. 'n' → logprob: -2.362827777862549
    5. 'r' → logprob: -2.362827777862549
    6. 's' → logprob: -2.737827777862549
    7. 'i' → logprob: -2.862827777862549
    8. '\n' → logprob: -3.237827777862549
    9. '[' → logprob: -3.362827777862549
    10. ' ' → logprob: -3.987827777862549

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0627090334892273
    2. 'r' → logprob: -3.937709093093872
    3. '=' → logprob: -4.062708854675293
    4. '.' → logprob: -5.187708854675293
    5. ' =' → logprob: -5.562708854675293
    6. '_' → logprob: -5.687708854675293
    7. 'm' → logprob: -6.062708854675293
    8. '+' → logprob: -6.562708854675293
    9. ']' → logprob: -6.812708854675293
    10. 'd' → logprob: -7.062708854675293

Token 28: ' []
' (ID: 8911)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4372820258140564
    2. ' int' → logprob: -1.5622820854187012
    3. 'input' → logprob: -3.187282085418701
    4. '[int' → logprob: -3.562282085418701
    5. '[]' → logprob: -4.062282085418701
    6. ' list' → logprob: -4.187282085418701
    7. ' input' → logprob: -4.312282085418701
    8. ' []' → logprob: -4.437282085418701
    9. 'list' → logprob: -4.812282085418701
    10. ' [' → logprob: -5.312282085418701

Token 29: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0401383675634861
    2. '[' → logprob: -4.540138244628906
    3. 'n' → logprob: -4.665138244628906
    4. ' for' → logprob: -5.665138244628906
    5. 'f' → logprob: -5.790138244628906
    6. '=' → logprob: -6.040138244628906
    7. '\n' → logprob: -6.415138244628906
    8. '\' → logprob: -6.540138244628906
    9. 'i' → logprob: -6.915138244628906
    10. 'b' → logprob: -6.915138244628906

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3637501001358032
    2. ' ' → logprob: -1.4887501001358032
    3. ' _' → logprob: -2.8637499809265137
    4. '_' → logprob: -3.9887499809265137
    5. 'i' → logprob: -5.863749980926514
    6. ' ‌' → logprob: -7.613749980926514
    7. '  ' → logprob: -8.488750457763672
    8. ' ' → logprob: -10.113750457763672
    9. ' ▁' → logprob: -10.613750457763672
    10. ' )' → logprob: -10.988750457763672

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011084253899753094
    2. 'in' → logprob: -4.761084079742432
    3. ' ' → logprob: -6.136084079742432
    4. 'n' → logprob: -9.13608455657959
    5. '  ' → logprob: -9.63608455657959
    6. ' i' → logprob: -9.88608455657959
    7. ' n' → logprob: -10.38608455657959
    8. '[' → logprob: -12.13608455657959
    9. '	in' → logprob: -12.13608455657959
    10. 'range' → logprob: -12.63608455657959

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04858953505754471
    2. 'range' → logprob: -3.0485894680023193
    3. '	range' → logprob: -14.048589706420898
    4. ' ' → logprob: -14.923589706420898
    5. ' a' → logprob: -15.673589706420898
    6. ' xrange' → logprob: -15.798589706420898
    7. '(range' → logprob: -15.923589706420898
    8. 'a' → logprob: -16.0485897064209
    9. ' ran' → logprob: -16.4235897064209
    10. 'n' → logprob: -16.7985897064209

Token 33: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20564286410808563
    2. '(n' → logprob: -1.705642819404602
    3. '(m' → logprob: -5.9556427001953125
    4. ' (' → logprob: -6.4556427001953125
    5. '(a' → logprob: -10.955642700195312
    6. '(len' → logprob: -11.955642700195312
    7. '(s' → logprob: -11.955642700195312
    8. '(space' → logprob: -11.955642700195312
    9. '(range' → logprob: -12.205642700195312
    10. '(
' → logprob: -12.205642700195312

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12779775261878967
    2. ')' → logprob: -2.127797842025757
    3. ':' → logprob: -7.877797603607178
    4. ' ):' → logprob: -8.127798080444336
    5. '+' → logprob: -9.127798080444336
    6. ' )' → logprob: -10.502798080444336
    7. '):
' → logprob: -10.627798080444336
    8. ',' → logprob: -11.127798080444336
    9. ')：' → logprob: -13.127798080444336
    10. '*' → logprob: -13.502798080444336

Token 35: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7746759057044983
    2. 'a' → logprob: -1.2746758460998535
    3. ' ' → logprob: -1.5246758460998535
    4. '    ' → logprob: -3.8996758460998535
    5. '<|end|>' → logprob: -4.6496758460998535
    6. '   ' → logprob: -4.8996758460998535
    7. '     
' → logprob: -7.1496758460998535
    8. ' 
' → logprob: -7.1496758460998535
    9. ' input' → logprob: -7.3996758460998535
    10. 'input' → logprob: -8.024676322937012

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.04325220361351967
    2. ' a' → logprob: -3.1682522296905518
    3. 'n' → logprob: -8.793251991271973
    4. 'x' → logprob: -10.293251991271973
    5. '```' → logprob: -11.043251991271973
    6. 's' → logprob: -12.168251991271973
    7. 'input' → logprob: -12.168251991271973
    8. 'i' → logprob: -12.168251991271973
    9. ' 
' → logprob: -12.293251991271973
    10. '_a' → logprob: -12.668251991271973

Token 37: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6933485269546509
    2. '.append' → logprob: -0.6933485269546509
    3. '.app' → logprob: -9.81834888458252
    4. ' .' → logprob: -10.69334888458252
    5. '.ap' → logprob: -10.69334888458252
    6. '[' → logprob: -10.81834888458252
    7. '.insert' → logprob: -11.06834888458252
    8. '=' → logprob: -11.44334888458252
    9. '.=' → logprob: -11.44334888458252
    10. '.i' → logprob: -11.56834888458252

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07903894782066345
    2. '(' → logprob: -2.8290388584136963
    3. '(list' → logprob: -4.329039096832275
    4. '(input' → logprob: -5.954039096832275
    5. '([]' → logprob: -7.329039096832275
    6. '(i' → logprob: -8.454038619995117
    7. '([' → logprob: -9.204038619995117
    8. '(
' → logprob: -9.579038619995117
    9. '(tuple' → logprob: -10.829038619995117
    10. '(float' → logprob: -11.204038619995117

Token 39: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1602780520915985
    2. '(' → logprob: -1.910278081893921
    3. '(
' → logprob: -10.7852783203125
    4. '(

' → logprob: -11.2852783203125
    5. 'input' → logprob: -11.7852783203125
    6. '()' → logprob: -12.2852783203125
    7. ')' → logprob: -12.9102783203125
    8. '(a' → logprob: -13.0352783203125
    9. '(in' → logprob: -14.0352783203125
    10. ',input' → logprob: -14.5352783203125

Token 40: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.578356146812439
    2. '()))' → logprob: -0.828356146812439
    3. '()' → logprob: -6.0783562660217285
    4. '())))' → logprob: -10.32835578918457
    5. ')' → logprob: -10.82835578918457
    6. '()));' → logprob: -11.20335578918457
    7. '(' → logprob: -11.32835578918457
    8. ' ())' → logprob: -11.57835578918457
    9. '().' → logprob: -12.07835578918457
    10. '())
' → logprob: -12.07835578918457

Token 41: 'dp' (ID: 19037)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21995028853416443
    2. 's' → logprob: -2.8449501991271973
    3. 'for' → logprob: -3.5949501991271973
    4. 'b' → logprob: -3.9699501991271973
    5. 'n' → logprob: -4.219950199127197
    6. 'c' → logprob: -4.344950199127197
    7. 'k' → logprob: -4.469950199127197
    8. 'max' → logprob: -4.594950199127197
    9. 't' → logprob: -4.969950199127197
    10. 'sum' → logprob: -4.969950199127197

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3320622146129608
    2. '[' → logprob: -1.3320622444152832
    3. '=' → logprob: -4.207062244415283
    4. '_' → logprob: -5.832062244415283
    5. ' ' → logprob: -7.457062244415283
    6. ' =[' → logprob: -9.832061767578125
    7. ' [' → logprob: -9.957061767578125
    8. '=[' → logprob: -10.582061767578125
    9. '[]' → logprob: -10.832061767578125
    10. '.' → logprob: -11.332061767578125

Token 43: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05016228184103966
    2. ' [' → logprob: -3.0501623153686523
    3. '[a' → logprob: -7.175162315368652
    4. '[n' → logprob: -7.675162315368652
    5. '[-' → logprob: -8.675162315368652
    6. '[[' → logprob: -9.800162315368652
    7. '[m' → logprob: -9.800162315368652
    8. '[int' → logprob: -10.425162315368652
    9. '0' → logprob: -10.925162315368652
    10. '[len' → logprob: -12.925162315368652

Token 44: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15552030503749847
    2. 'for' → logprob: -2.03052020072937
    3. '(' → logprob: -5.155520439147949
    4. ' for' → logprob: -5.530520439147949
    5. '0' → logprob: -6.030520439147949
    6. ' [' → logprob: -8.90552043914795
    7. 'dp' → logprob: -9.15552043914795
    8. '=' → logprob: -9.40552043914795
    9. '[n' → logprob: -10.03052043914795
    10. ']' → logprob: -10.15552043914795

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02048080414533615
    2. 'i' → logprob: -4.520480632781982
    3. ' _' → logprob: -5.145480632781982
    4. '_' → logprob: -5.895480632781982
    5. ' j' → logprob: -7.770480632781982
    6. ' ' → logprob: -8.27048110961914
    7. ' n' → logprob: -10.02048110961914
    8. ' ' → logprob: -10.52048110961914
    9. '_i' → logprob: -10.77048110961914
    10. 'j' → logprob: -11.77048110961914

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016432562842965126
    2. 'in' → logprob: -4.141432762145996
    3. ' ' → logprob: -8.016432762145996
    4. '  ' → logprob: -11.016432762145996
    5. '	in' → logprob: -11.391432762145996
    6. 'range' → logprob: -11.391432762145996
    7. 'n' → logprob: -12.141432762145996
    8. '(' → logprob: -12.516432762145996
    9. ')' → logprob: -13.016432762145996
    10. '0' → logprob: -13.141432762145996

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132711946964264
    2. ' range' → logprob: -1.313271164894104
    3. '(range' → logprob: -12.813271522521973
    4. ' ' → logprob: -13.063271522521973
    5. '	range' → logprob: -13.188271522521973
    6. 'r' → logprob: -14.188271522521973
    7. ' xrange' → logprob: -14.438271522521973
    8. 'rang' → logprob: -15.188271522521973
    9. '  ' → logprob: -15.438271522521973
    10. '   ' → logprob: -15.438271522521973

Token 48: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6384522914886475
    2. '(' → logprob: -0.7634522914886475
    3. ' (' → logprob: -5.513452529907227
    4. '(m' → logprob: -6.763452529907227
    5. '(range' → logprob: -7.513452529907227
    6. ' range' → logprob: -9.888452529907227
    7. '(s' → logprob: -11.263452529907227
    8. '(
' → logprob: -11.763452529907227
    9. '(a' → logprob: -11.763452529907227
    10. ' ' → logprob: -11.888452529907227

Token 49: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014192530885338783
    2. ' +' → logprob: -4.264192581176758
    3. ')' → logprob: -10.514192581176758
    4. '+)' → logprob: -14.889192581176758
    5. '+
' → logprob: -15.014192581176758
    6. '-' → logprob: -15.014192581176758
    7. '1' → logprob: -15.514192581176758
    8. ' ' → logprob: -15.639192581176758
    9. ' )' → logprob: -16.139192581176758
    10. '+j' → logprob: -16.264192581176758

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06995176523923874
    2. ' ' → logprob: -2.6949517726898193
    3. '2' → logprob: -11.444952011108398
    4. ' m' → logprob: -14.069952011108398
    5. '  ' → logprob: -14.069952011108398
    6. 'm' → logprob: -14.319952011108398
    7. '   ' → logprob: -15.069952011108398
    8. '10' → logprob: -15.069952011108398
    9. '100' → logprob: -15.194952011108398
    10. '7' → logprob: -15.382452011108398

Token 51: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012761499965563416
    2. ' ' → logprob: -9.500127792358398
    3. '2' → logprob: -10.500127792358398
    4. 'm' → logprob: -11.625127792358398
    5. '10' → logprob: -12.375127792358398
    6. '100' → logprob: -12.375127792358398
    7. '50' → logprob: -13.250127792358398
    8. '5' → logprob: -13.625127792358398
    9. '0' → logprob: -14.125127792358398
    10. '7' → logprob: -14.250127792358398

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000636308453977108
    2. ' ):' → logprob: -8.000636100769043
    3. ')' → logprob: -8.250636100769043
    4. '):
' → logprob: -11.000636100769043
    5. '0' → logprob: -11.375636100769043
    6. '1' → logprob: -13.000636100769043
    7. ':' → logprob: -13.000636100769043
    8. ']:' → logprob: -13.250636100769043
    9. ' )' → logprob: -14.125636100769043
    10. '+' → logprob: -14.250636100769043

Token 53: '   ' (ID: 271)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.11732923984527588
    2. '[' → logprob: -2.2423291206359863
    3. '   ' → logprob: -5.992329120635986
    4. '    ' → logprob: -7.242329120635986
    5. ' ' → logprob: -7.367329120635986
    6. '0' → logprob: -7.742329120635986
    7. ' dp' → logprob: -9.242329597473145
    8. 'dp' → logprob: -10.492329597473145
    9. ' []' → logprob: -10.867329597473145
    10. ' `[' → logprob: -11.242329597473145

Token 54: ' dp' (ID: 21546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.745112955570221
    2. ' [' → logprob: -0.745112955570221
    3. '0' → logprob: -3.245112895965576
    4. ' dp' → logprob: -5.495112895965576
    5. 'dp' (adapté à ' dp') → logprob: -5.620112895965576
    6. ' ' → logprob: -5.620112895965576
    7. 'False' → logprob: -8.870113372802734
    8. '[i' → logprob: -10.120113372802734
    9. ' False' → logprob: -10.370113372802734
    10. '   ' → logprob: -10.745113372802734

Token 55: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.027333306148648262
    2. '.' → logprob: -3.7773332595825195
    3. '=' → logprob: -6.2773332595825195
    4. ' =' → logprob: -6.2773332595825195
    5. '.extend' → logprob: -9.15233325958252
    6. '[' → logprob: -9.15233325958252
    7. '.=' → logprob: -10.52733325958252
    8. 'append' → logprob: -10.90233325958252
    9. '=[' → logprob: -11.15233325958252
    10. ' .' → logprob: -11.65233325958252

Token 56: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5300843715667725
    2. '([' → logprob: -0.9050843715667725
    3. '(float' → logprob: -5.155084609985352
    4. '(-' → logprob: -7.905084609985352
    5. '(False' → logprob: -8.405084609985352
    6. '([]' → logprob: -8.655084609985352
    7. '((' → logprob: -9.280084609985352
    8. '0' → logprob: -9.530084609985352
    9. '(int' → logprob: -9.655084609985352
    10. '([-' → logprob: -9.655084609985352

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14992959797382355
    2. '[' → logprob: -2.3999295234680176
    3. 'float' → logprob: -3.6499295234680176
    4. '100' → logprob: -4.774929523468018
    5. '-' → logprob: -5.649929523468018
    6. '999' → logprob: -6.149929523468018
    7. '10' → logprob: -6.149929523468018
    8. '1' → logprob: -6.649929523468018
    9. '[int' → logprob: -7.024929523468018
    10. 'False' → logprob: -7.149929523468018

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028255043434910476
    2. ' )' → logprob: -8.250282287597656
    3. ')
' → logprob: -11.250282287597656
    4. '*' → logprob: -12.625282287597656
    5. '
' → logprob: -13.500282287597656
    6. '))' → logprob: -13.875282287597656
    7. '*)' → logprob: -15.000282287597656
    8. '+' → logprob: -15.125282287597656
    9. '}' → logprob: -15.625282287597656
    10. ']' → logprob: -15.875282287597656

Token 59: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.252164363861084
    2. ' for' → logprob: -1.752164363861084
    3. ' 
' → logprob: -1.752164363861084
    4. '
' → logprob: -2.002164363861084
    5. '<|end|>' → logprob: -2.627164363861084
    6. ' dp' → logprob: -3.127164363861084
    7. 'for' → logprob: -3.127164363861084
    8. ' ' → logprob: -3.502164363861084
    9. '\n' → logprob: -3.877164363861084
    10. '\' → logprob: -5.252164363861084

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03893839567899704
    2. '<|end|>' → logprob: -3.413938283920288
    3. '[]' → logprob: -6.538938522338867
    4. '
' → logprob: -6.663938522338867
    5. '[n' → logprob: -7.413938522338867
    6. '[:]' → logprob: -7.538938522338867
    7. '```' → logprob: -7.913938522338867
    8. '[
' → logprob: -8.413938522338867
    9. '<|end|>' → logprob: -8.788938522338867
    10. '[len' → logprob: -9.163938522338867

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015598179015796632
    2. '1' → logprob: -9.00015640258789
    3. ' ' → logprob: -10.50015640258789
    4. '3' → logprob: -13.75015640258789
    5. '5' → logprob: -14.12515640258789
    6. '2' → logprob: -14.25015640258789
    7. '10' → logprob: -14.37515640258789
    8. '4' → logprob: -14.68765640258789
    9. '9' → logprob: -15.00015640258789
    10. '6' → logprob: -15.31265640258789

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006151011912152171
    2. ']=' → logprob: -7.750615119934082
    3. ' ]' → logprob: -8.625615119934082
    4. '=' → logprob: -12.375615119934082
    5. ' =' → logprob: -15.500615119934082
    6. ']>' → logprob: -15.500615119934082
    7. ']==' → logprob: -15.625615119934082
    8. ']+=' → logprob: -16.375614166259766
    9. '[' → logprob: -17.000614166259766
    10. ' ' → logprob: -17.250614166259766

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740888774394989
    2. ' =' → logprob: -0.9740889072418213
    3. ' +=' → logprob: -12.599088668823242
    4. ' ' → logprob: -12.599088668823242
    5. '=True' → logprob: -13.349088668823242
    6. '1' → logprob: -13.474088668823242
    7. '+=' → logprob: -14.224088668823242
    8. ' =
' → logprob: -15.349088668823242
    9. ',' → logprob: -15.474088668823242
    10. '+' → logprob: -15.724088668823242

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003641407238319516
    2. '0' → logprob: -5.628641605377197
    3. ' ' → logprob: -10.503641128540039
    4. '100' → logprob: -12.003641128540039
    5. '10' → logprob: -13.378641128540039
    6. '-' → logprob: -13.503641128540039
    7. 'True' → logprob: -13.628641128540039
    8. '2' → logprob: -14.566141128540039
    9. '3' → logprob: -14.628641128540039
    10. 'n' → logprob: -14.816141128540039

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0041173421777784824
    2. '0' → logprob: -5.504117488861084
    3. '100' → logprob: -11.254117012023926
    4. '-' → logprob: -11.754117012023926
    5. 'True' → logprob: -12.129117012023926
    6. '10' → logprob: -12.504117012023926
    7. ' ' → logprob: -13.129117012023926
    8. '2' → logprob: -13.879117012023926
    9. '3' → logprob: -13.879117012023926
    10. 'n' → logprob: -14.441617012023926

Token 66: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5272495150566101
    2. 'for' → logprob: -1.2772495746612549
    3. ' for' → logprob: -2.527249574661255
    4. '\n' → logprob: -3.777249574661255
    5. '<|end|>' → logprob: -4.902249336242676
    6. ' 
' → logprob: -5.777249336242676
    7. '\' → logprob: -5.902249336242676
    8. ':' → logprob: -5.902249336242676
    9. ' ' → logprob: -6.277249336242676
    10. '.' → logprob: -6.402249336242676

Token 67: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18861959874629974
    2. ' for' → logprob: -1.938619613647461
    3. '
' → logprob: -4.188619613647461
    4. '\n' → logprob: -4.438619613647461
    5. '```' → logprob: -7.938619613647461
    6. '\' → logprob: -8.313619613647461
    7. ' 
' → logprob: -8.438619613647461
    8. '' → logprob: -10.563619613647461
    9. 'n' → logprob: -10.813619613647461
    10. ':' → logprob: -11.063619613647461

Token 68: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12483158707618713
    2. 'i' → logprob: -2.4998316764831543
    3. ' a' → logprob: -3.9998316764831543
    4. ' coin' → logprob: -4.999831676483154
    5. 'a' → logprob: -5.249831676483154
    6. ' j' → logprob: -6.499831676483154
    7. ' ' → logprob: -6.624831676483154
    8. ' _' → logprob: -6.874831676483154
    9. 'j' → logprob: -8.249831199645996
    10. 'coin' → logprob: -8.499831199645996

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07020606845617294
    2. 'in' → logprob: -2.6952061653137207
    3. ' ' → logprob: -8.695205688476562
    4. '	in' → logprob: -10.570205688476562
    5. '  ' → logprob: -10.695205688476562
    6. '_in' → logprob: -11.570205688476562
    7. 'a' → logprob: -12.070205688476562
    8. '   ' → logprob: -12.320205688476562
    9. 'In' → logprob: -12.445205688476562
    10. 's' → logprob: -12.570205688476562

Token 70: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1772448718547821
    2. ' range' → logprob: -2.0522449016571045
    3. 'a' → logprob: -3.5522449016571045
    4. 'range' → logprob: -5.302244663238525
    5. ' ' → logprob: -8.427245140075684
    6. '   ' → logprob: -10.489745140075684
    7. '  ' → logprob: -10.739745140075684
    8. ' xrange' → logprob: -11.052245140075684
    9. '	a' → logprob: -11.739745140075684
    10. '    ' → logprob: -11.802245140075684

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003392767102923244
    2. ' :' → logprob: -8.00033950805664
    3. ':
' → logprob: -13.25033950805664
    4. '):' → logprob: -13.62533950805664
    5. ':**' → logprob: -15.37533950805664
    6. '：' → logprob: -16.25033950805664
    7. ',' → logprob: -16.62533950805664
    8. '[:]' → logprob: -17.12533950805664
    9. '>:' → logprob: -17.25033950805664
    10. '[' → logprob: -17.37533950805664

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9285574555397034
    2. ' for' → logprob: -1.0535573959350586
    3. ' 
' → logprob: -1.9285573959350586
    4. ' ' → logprob: -2.5535573959350586
    5. '<|end|>' → logprob: -4.553557395935059
    6. '
' → logprob: -4.928557395935059
    7. '    
' → logprob: -5.053557395935059
    8. ' dp' → logprob: -5.303557395935059
    9. '    ' → logprob: -6.303557395935059
    10. ' if' → logprob: -7.928557395935059

Token 73: ' dp' (ID: 21546)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3132847845554352
    2. 'for' → logprob: -1.3132847547531128
    3. '   ' → logprob: -10.688284873962402
    4. '	for' → logprob: -16.438283920288086
    5. ' ' → logprob: -16.688283920288086
    6. '    ' → logprob: -16.688283920288086
    7. '```' → logprob: -18.938283920288086
    8. '  ' → logprob: -20.063283920288086
    9. '_for' → logprob: -20.313283920288086
    10. 'f' → logprob: -20.438283920288086

Token 74: '[x' (ID: 17295)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23125223815441132
    2. '=' → logprob: -2.7312521934509277
    3. '[x' → logprob: -2.8562521934509277
    4. ' =' → logprob: -3.2312521934509277
    5. '[:]' → logprob: -3.8562521934509277
    6. '=[' → logprob: -5.481252193450928
    7. '[:' → logprob: -6.106252193450928
    8. '[int' → logprob: -6.231252193450928
    9. '[len' → logprob: -6.231252193450928
    10. '[i' → logprob: -6.356252193450928

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3841460943222046
    2. ':]' → logprob: -1.2591460943222046
    3. ']+=' → logprob: -3.884146213531494
    4. ':' → logprob: -5.009146213531494
    5. ']=' → logprob: -5.009146213531494
    6. ' :]' → logprob: -7.259146213531494
    7. ' ]' → logprob: -8.634145736694336
    8. '+' → logprob: -9.884145736694336
    9. ']:' → logprob: -10.009145736694336
    10. ']+' → logprob: -10.509145736694336

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1680935174226761
    2. '+=' → logprob: -1.9180935621261597
    3. ' +=' → logprob: -5.168093681335449
    4. ' =' → logprob: -6.293093681335449
    5. ']+=' → logprob: -9.41809368133545
    6. '+' → logprob: -9.54309368133545
    7. ' |=' → logprob: -10.04309368133545
    8. '|' → logprob: -10.16809368133545
    9. '[' → logprob: -11.54309368133545
    10. ' ' → logprob: -12.16809368133545

Token 77: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008895447244867682
    2. 'dp' → logprob: -8.250889778137207
    3. '(' → logprob: -8.500889778137207
    4. '(dp' → logprob: -8.500889778137207
    5. ' ' → logprob: -9.000889778137207
    6. '0' → logprob: -9.750889778137207
    7. '+' → logprob: -11.000889778137207
    8. 'max' → logprob: -11.875889778137207
    9. ' (' → logprob: -12.875889778137207
    10. '-' → logprob: -13.125889778137207

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020017966628074646
    2. 'dp' → logprob: -4.145018100738525
    3. '-' → logprob: -6.270018100738525
    4. '100' → logprob: -7.520018100738525
    5. '(dp' → logprob: -8.145017623901367
    6. '2' → logprob: -8.520017623901367
    7. '>' → logprob: -8.770017623901367
    8. ' ' → logprob: -8.895017623901367
    9. ' dp' → logprob: -9.145017623901367
    10. '10' → logprob: -9.395017623901367

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1294720321893692
    2. '<|end|>' → logprob: -2.129472017288208
    3. '```' → logprob: -6.754472255706787
    4. '\n' → logprob: -7.379472255706787
    5. '

' → logprob: -8.629471778869629
    6. '<|end|>' → logprob: -8.879471778869629
    7. ' 
' → logprob: -9.254471778869629
    8. '
' → logprob: -9.504471778869629
    9. '\' → logprob: -9.754471778869629
    10. '' → logprob: -10.004471778869629

Token 80: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18978232145309448
    2. '<|end|>' → logprob: -2.1897823810577393
    3. ' for' → logprob: -3.4397823810577393
    4. 'for' → logprob: -4.18978214263916
    5. ' 
' → logprob: -4.81478214263916
    6. '\n' → logprob: -5.56478214263916
    7. ' ' → logprob: -6.93978214263916
    8. '  
' → logprob: -8.31478214263916
    9. '<|end|>' → logprob: -9.06478214263916
    10. '    
' → logprob: -9.31478214263916

Token 81: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7008594870567322
    2. '<|end|>' → logprob: -1.075859546661377
    3. ' =' → logprob: -2.825859546661377
    4. '_' → logprob: -4.200859546661377
    5. '=' → logprob: -4.450859546661377
    6. ' )' → logprob: -4.950859546661377
    7. '<|end|>' → logprob: -4.950859546661377
    8. ' ' → logprob: -5.200859546661377
    9. '[:]' → logprob: -5.200859546661377
    10. '  ' → logprob: -5.325859546661377

Token 82: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7005385756492615
    2. ' ' → logprob: -1.0755386352539062
    3. '10' → logprob: -1.8255386352539062
    4. '1' → logprob: -6.575538635253906
    5. '998' → logprob: -10.825538635253906
    6. ' ' → logprob: -11.700538635253906
    7. ' (' → logprob: -13.200538635253906
    8. '123' → logprob: -13.575538635253906
    9. '(' → logprob: -13.575538635253906
    10. '0' → logprob: -13.950538635253906

Token 83: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.47479280829429626
    2. '10' → logprob: -0.9747928380966187
    3. '998' → logprob: -7.974792957305908
    4. '1' → logprob: -8.22479248046875
    5. ' ' → logprob: -10.09979248046875
    6. 'int' → logprob: -10.47479248046875
    7. '(' → logprob: -11.59979248046875
    8. '123' → logprob: -11.97479248046875
    9. '2' → logprob: -12.97479248046875
    10. '0' → logprob: -13.09979248046875

Token 84: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.27549028396606445
    2. '9' → logprob: -1.5254902839660645
    3. '09' → logprob: -4.2754902839660645
    4. '009' → logprob: -5.2754902839660645
    5. '```' → logprob: -6.1504902839660645
    6. '007' → logprob: -7.7754902839660645
    7. '909' → logprob: -8.150489807128906
    8. '+' → logprob: -8.400489807128906
    9. '00' → logprob: -8.650489807128906
    10. '       ' → logprob: -8.775489807128906

Token 85: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4406648576259613
    2. '000' → logprob: -1.5656648874282837
    3. '+' → logprob: -2.440664768218994
    4. '7' → logprob: -2.940664768218994
    5. '<|end|>' → logprob: -5.815664768218994
    6. '```' → logprob: -6.565664768218994
    7. ' +' → logprob: -7.940664768218994
    8. '00' → logprob: -7.940664768218994
    9. '  
' → logprob: -7.940664768218994
    10. '\' → logprob: -8.065665245056152

Token 86: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00013810492237098515
    2. '9' → logprob: -9.250138282775879
    3. '0' → logprob: -10.625138282775879
    4. '+' → logprob: -11.375138282775879
    5. ' ' → logprob: -12.500138282775879
    6. ' +' → logprob: -14.375138282775879
    7. '```' → logprob: -14.375138282775879
    8. '6' → logprob: -14.500138282775879
    9. '07' → logprob: -15.375138282775879
    10. '8' → logprob: -16.312637329101562

Token 87: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01725013740360737
    2. '\n' → logprob: -4.767250061035156
    3. 'for' → logprob: -5.517250061035156
    4. '<|end|>' → logprob: -6.017250061035156
    5. ' for' → logprob: -7.017250061035156
    6. '
' → logprob: -7.267250061035156
    7. ' 
' → logprob: -8.267250061035156
    8. '

' → logprob: -9.142250061035156
    9. '  
' → logprob: -10.017250061035156
    10. '' → logprob: -10.017250061035156

Token 88: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011712945997714996
    2. ' for' → logprob: -6.751171112060547
    3. '```' → logprob: -14.751171112060547
    4. '<|end|>' → logprob: -15.001171112060547
    5. '
' → logprob: -15.751171112060547
    6. 'i' → logprob: -16.251171112060547
    7. 'n' → logprob: -17.001171112060547
    8. '	for' → logprob: -17.126171112060547
    9. '[' → logprob: -17.501171112060547
    10. '\n' → logprob: -18.001171112060547

Token 89: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012910190969705582
    2. 'i' → logprob: -4.88791036605835
    3. ' ' → logprob: -5.88791036605835
    4. ' range' → logprob: -6.38791036605835
    5. ' _' → logprob: -7.63791036605835
    6. '_' → logprob: -9.137909889221191
    7. ' x' → logprob: -9.262909889221191
    8. ' ' → logprob: -10.012909889221191
    9. 'range' → logprob: -10.012909889221191
    10. '_i' → logprob: -11.262909889221191

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0043062069453299046
    2. ' ' → logprob: -6.004306316375732
    3. 'in' → logprob: -6.379306316375732
    4. '  ' → logprob: -10.004305839538574
    5. 'range' → logprob: -10.504305839538574
    6. '	in' → logprob: -11.129305839538574
    7. ' range' → logprob: -11.629305839538574
    8. ' i' → logprob: -12.129305839538574
    9. '(' → logprob: -12.254305839538574
    10. '```' → logprob: -12.629305839538574

Token 91: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0012228474952280521
    2. 'range' → logprob: -6.751222610473633
    3. ' ' → logprob: -10.001222610473633
    4. ' ran' → logprob: -13.251222610473633
    5. ' ' → logprob: -13.626222610473633
    6. '	range' → logprob: -13.626222610473633
    7. ' xrange' → logprob: -14.126222610473633
    8. '(range' → logprob: -14.251222610473633
    9. '  ' → logprob: -14.876222610473633
    10. '   ' → logprob: -15.501222610473633

Token 92: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018218310549855232
    2. '(n' → logprob: -4.018218517303467
    3. '1' → logprob: -10.268218040466309
    4. ' (' → logprob: -10.893218040466309
    5. ' ' → logprob: -11.768218040466309
    6. '(
' → logprob: -12.768218040466309
    7. 'n' → logprob: -13.018218040466309
    8. ' n' → logprob: -13.643218040466309
    9. '()' → logprob: -15.518218040466309
    10. '((' → logprob: -15.643218040466309

Token 93: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1966550052165985
    2. ' +' → logprob: -1.821655035018921
    3. '):' → logprob: -4.321654796600342
    4. ' ):' → logprob: -6.196654796600342
    5. '):
' → logprob: -7.196654796600342
    6. ' ' → logprob: -8.8216552734375
    7. ')' → logprob: -8.8216552734375
    8. ' ):
' → logprob: -9.0716552734375
    9. '-' → logprob: -9.4466552734375
    10. ' )' → logprob: -9.8216552734375

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.716737687587738
    2. ' ' → logprob: -1.0917377471923828
    3. '<|end|>' → logprob: -2.966737747192383
    4. ' 
' → logprob: -3.466737747192383
    5. '    ' → logprob: -3.466737747192383
    6. ' if' → logprob: -3.591737747192383
    7. '```' → logprob: -4.591737747192383
    8. '    
' → logprob: -4.841737747192383
    9. ',' → logprob: -5.591737747192383
    10. '  ' → logprob: -6.466737747192383

Token 95: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6366502642631531
    2. ' if' → logprob: -1.0116503238677979
    3. '   ' → logprob: -2.261650323867798
    4. '```' → logprob: -7.136650085449219
    5. '    ' → logprob: -7.261650085449219
    6. '	if' → logprob: -7.511650085449219
    7. '  ' → logprob: -8.136650085449219
    8. ' ' → logprob: -8.261650085449219
    9. '    
' → logprob: -8.886650085449219
    10. '+' → logprob: -9.136650085449219

Token 96: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018758732825517654
    2. ' dp' → logprob: -4.018758773803711
    3. '   ' → logprob: -7.518758773803711
    4. '(dp' → logprob: -10.143758773803711
    5. '	dp' → logprob: -11.268758773803711
    6. ' ' → logprob: -12.768758773803711
    7. '0' → logprob: -13.018758773803711
    8. 'i' → logprob: -13.393758773803711
    9. '  ' → logprob: -13.518758773803711
    10. '    ' → logprob: -13.518758773803711

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2948405128554441e-05
    2. 'i' → logprob: -12.00001335144043
    3. '[' → logprob: -12.62501335144043
    4. '```' → logprob: -14.00001335144043
    5. '[
' → logprob: -14.37501335144043
    6. 'dp' → logprob: -14.87501335144043
    7. '[-' → logprob: -14.87501335144043
    8. '
' → logprob: -15.00001335144043
    9. '[I' → logprob: -15.50001335144043
    10. '\[' → logprob: -16.25001335144043

Token 98: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5615654587745667
    2. '==' → logprob: -1.4365653991699219
    3. '!=' → logprob: -1.6865653991699219
    4. '>=' → logprob: -6.061565399169922
    5. ' !=' → logprob: -6.686565399169922
    6. '!=-' → logprob: -6.811565399169922
    7. ' ==' → logprob: -7.186565399169922
    8. ' >' → logprob: -7.436565399169922
    9. '==-' → logprob: -8.061565399169922
    10. ')' → logprob: -9.561565399169922

Token 99: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3851250112056732
    2. '==' → logprob: -1.8851250410079956
    3. '!=' → logprob: -1.8851250410079956
    4. '>=' → logprob: -4.385125160217285
    5. '0' → logprob: -7.135125160217285
    6. ' !=' → logprob: -7.135125160217285
    7. ' >' → logprob: -7.385125160217285
    8. '!=-' → logprob: -7.510125160217285
    9. ' ==' → logprob: -7.885125160217285
    10. '1' → logprob: -8.885125160217285

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029518920928239822
    2. '1' → logprob: -3.6545188426971436
    3. ' ' → logprob: -6.404519081115723
    4. '>' → logprob: -6.654519081115723
    5. '=' → logprob: -8.279519081115723
    6. '   ' → logprob: -12.654519081115723
    7. ':' → logprob: -12.904519081115723
    8. '```' → logprob: -13.029519081115723
    9. '-' → logprob: -13.654519081115723
    10. '=>' → logprob: -13.717019081115723

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01268481183797121
    2. '1' → logprob: -4.3876848220825195
    3. ' ' → logprob: -8.76268482208252
    4. '>' → logprob: -11.26268482208252
    5. '   ' → logprob: -13.13768482208252
    6. '=' → logprob: -13.38768482208252
    7. '```' → logprob: -14.13768482208252
    8. ':' → logprob: -14.38768482208252
    9. '-' → logprob: -15.01268482208252
    10. '۰' → logprob: -15.76268482208252

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035756856203079224
    2. '       ' → logprob: -4.035757064819336
    3. ':
' → logprob: -4.535757064819336
    4. ' or' → logprob: -5.035757064819336
    5. '   ' → logprob: -8.785757064819336
    6. ' :' → logprob: -10.660757064819336
    7. ' ' → logprob: -10.910757064819336
    8. ' continue' → logprob: -11.660757064819336
    9. ',' → logprob: -12.285757064819336
    10. ' and' → logprob: -12.410757064819336

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009334942442364991
    2. 'continue' → logprob: -7.375933647155762
    3. 'dp' → logprob: -8.750933647155762
    4. ' continue' → logprob: -10.000933647155762
    5. '   ' → logprob: -10.250933647155762
    6. '```' → logprob: -10.500933647155762
    7. 'if' → logprob: -10.625933647155762
    8. '    ' → logprob: -13.000933647155762
    9. '      ' → logprob: -13.250933647155762
    10. '	continue' → logprob: -13.500933647155762

Token 104: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19648624956607819
    2. 'continue' (adapté à ' continue') → logprob: -2.571486234664917
    3. ' continue' → logprob: -2.696486234664917
    4. '   ' → logprob: -3.446486234664917
    5. '	continue' → logprob: -6.196486473083496
    6. '	   ' → logprob: -8.446486473083496
    7. '```' → logprob: -8.446486473083496
    8. ' ' → logprob: -9.821486473083496
    9. '_continue' → logprob: -10.196486473083496
    10. '    ' → logprob: -10.446486473083496

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001202254556119442
    2. '    
' → logprob: -6.87620210647583
    3. 'dp' → logprob: -9.251202583312988
    4. '
' → logprob: -10.251202583312988
    5. '   
' → logprob: -11.001202583312988
    6. '  ' → logprob: -11.876202583312988
    7. '  
' → logprob: -12.626202583312988
    8. ' dp' → logprob: -12.751202583312988
    9. 'if' → logprob: -13.001202583312988
    10. '```' → logprob: -13.626202583312988

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002876080572605133
    2. 'dp' → logprob: -6.502876281738281
    3. 'if' → logprob: -6.752876281738281
    4. '    
' → logprob: -8.877876281738281
    5. 'for' → logprob: -11.002876281738281
    6. ' dp' → logprob: -11.002876281738281
    7. ' if' → logprob: -11.127876281738281
    8. '```' → logprob: -11.877876281738281
    9. '  ' → logprob: -12.127876281738281
    10. '   
' → logprob: -13.377876281738281

Token 107: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.547242283821106
    2. '   ' → logprob: -1.047242283821106
    3. 'for' → logprob: -3.0472421646118164
    4. 'dp' → logprob: -3.7972421646118164
    5. ' if' → logprob: -7.547242164611816
    6. ' for' → logprob: -10.047242164611816
    7. '    
' → logprob: -10.297242164611816
    8. ' dp' → logprob: -11.422242164611816
    9. '  ' → logprob: -12.422242164611816
    10. ' ' → logprob: -12.672242164611816

Token 108: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07544474303722382
    2. ' dp' → logprob: -3.0754446983337402
    3. 'i' → logprob: -3.9504446983337402
    4. '0' → logprob: -5.70044469833374
    5. ' i' → logprob: -6.07544469833374
    6. '   ' → logprob: -7.07544469833374
    7. ' ' → logprob: -8.200445175170898
    8. 'not' → logprob: -8.825445175170898
    9. '(dp' → logprob: -8.950445175170898
    10. '(i' → logprob: -9.200445175170898

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.570319702499546e-05
    2. 'i' → logprob: -10.750025749206543
    3. '[' → logprob: -12.625025749206543
    4. '   ' → logprob: -16.125024795532227
    5. '(i' → logprob: -16.125024795532227
    6. '[
' → logprob: -16.375024795532227
    7. '```' → logprob: -16.375024795532227
    8. '[n' → logprob: -16.500024795532227
    9. ' [' → logprob: -16.875024795532227
    10. '[(' → logprob: -17.125024795532227

Token 110: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0442974753677845
    2. ']' → logprob: -3.794297456741333
    3. ' +' → logprob: -3.919297456741333
    4. '-' → logprob: -7.919297695159912
    5. ']!=' → logprob: -8.419297218322754
    6. ']>' → logprob: -9.669297218322754
    7. ' -' → logprob: -9.794297218322754
    8. '>' → logprob: -9.794297218322754
    9. ']+' → logprob: -9.919297218322754
    10. ' ' → logprob: -10.169297218322754

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015514022670686245
    2. ' ' → logprob: -6.501551628112793
    3. '   ' → logprob: -11.001551628112793
    4. '-' → logprob: -12.001551628112793
    5. ']' → logprob: -12.001551628112793
    6. '  ' → logprob: -12.751551628112793
    7. '2' → logprob: -12.876551628112793
    8. '0' → logprob: -13.001551628112793
    9. '
' → logprob: -13.126551628112793
    10. '

' → logprob: -13.626551628112793

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01068073883652687
    2. ']>=' → logprob: -5.010680675506592
    3. ']!=' → logprob: -5.635680675506592
    4. ']==' → logprob: -8.38568115234375
    5. ']>' → logprob: -9.51068115234375
    6. ']+=' → logprob: -9.63568115234375
    7. ' ]' → logprob: -11.26068115234375
    8. ')' → logprob: -12.88568115234375
    9. ']<' → logprob: -13.38568115234375
    10. ']+' → logprob: -14.13568115234375

Token 113: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.015607276000082493
    2. '>' → logprob: -5.3906073570251465
    3. '=' → logprob: -5.6406073570251465
    4. '+=' → logprob: -5.8906073570251465
    5. '!=' → logprob: -6.0156073570251465
    6. ']>=' → logprob: -7.5156073570251465
    7. ']+=' → logprob: -7.6406073570251465
    8. ' >=' → logprob: -8.140606880187988
    9. '==' → logprob: -8.390606880187988
    10. '≥' → logprob: -8.765606880187988

Token 114: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078639671206474
    2. ' ' → logprob: -5.5040788650512695
    3. '۰' → logprob: -15.75407886505127
    4. '  ' → logprob: -16.254077911376953
    5. '   ' → logprob: -18.004077911376953
    6. '０' → logprob: -18.129077911376953
    7. '```' → logprob: -18.379077911376953
    8. '000' → logprob: -18.629077911376953
    9. ' ' → logprob: -18.754077911376953
    10. '=' → logprob: -19.504077911376953

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.8751802444458
    4. '  ' → logprob: -16.625179290771484
    5. '۰' → logprob: -16.625179290771484
    6. 'mod' → logprob: -18.000179290771484
    7. '```' → logprob: -18.000179290771484
    8. '０' → logprob: -18.625179290771484
    9. '1' → logprob: -19.125179290771484
    10. '  ' → logprob: -19.562679290771484

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00806389469653368
    2. '       ' → logprob: -4.883063793182373
    3. ' and' → logprob: -8.383064270019531
    4. ':
' → logprob: -9.383064270019531
    5. '):' → logprob: -10.008064270019531
    6. 'and' → logprob: -10.258064270019531
    7. ' :' → logprob: -10.633064270019531
    8. '   ' → logprob: -11.758064270019531
    9. ',' → logprob: -11.758064270019531
    10. ' or' → logprob: -12.008064270019531

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0641302838921547
    2. 'dp' → logprob: -2.8141303062438965
    3. ' dp' → logprob: -6.1891303062438965
    4. '	dp' → logprob: -10.064129829406738
    5. '(dp' → logprob: -10.939129829406738
    6. '   ' → logprob: -11.064129829406738
    7. '```' → logprob: -11.564129829406738
    8. '_dp' → logprob: -12.439129829406738
    9. '[' → logprob: -12.564129829406738
    10. '      ' → logprob: -12.814129829406738

Token 118: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.023679126054048538
    2. ' dp' → logprob: -3.77367901802063
    3. '       ' → logprob: -7.773679256439209
    4. '	dp' → logprob: -11.89867877960205
    5. '(dp' → logprob: -12.39867877960205
    6. '           ' → logprob: -13.77367877960205
    7. '   ' → logprob: -14.14867877960205
    8. '_dp' → logprob: -16.773679733276367
    9. ' ' → logprob: -16.898679733276367
    10. '      ' → logprob: -17.023679733276367

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.583550642360933e-05
    2. '[' → logprob: -10.250036239624023
    3. 'i' → logprob: -16.000036239624023
    4. ' [' → logprob: -16.375036239624023
    5. '```' → logprob: -17.250036239624023
    6. 'dp' → logprob: -17.375036239624023
    7. '[ip' → logprob: -17.875036239624023
    8. '[j' → logprob: -18.125036239624023
    9. '][' → logprob: -18.250036239624023
    10. '\[' → logprob: -18.500036239624023

Token 120: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04694617912173271
    2. '[i' → logprob: -3.2969462871551514
    3. '[' → logprob: -5.296946048736572
    4. ']' → logprob: -6.546946048736572
    5. '1' → logprob: -6.671946048736572
    6. '+i' → logprob: -7.046946048736572
    7. 'i' → logprob: -9.04694652557373
    8. ']+' → logprob: -9.67194652557373
    9. ']+=' → logprob: -10.17194652557373
    10. ' +' → logprob: -10.42194652557373

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '+' → logprob: -15.750001907348633
    5. '0' → logprob: -16.750001907348633
    6. '```' → logprob: -17.125001907348633
    7. ']' → logprob: -17.500001907348633
    8. '       ' → logprob: -18.187501907348633
    9. '2' → logprob: -18.375001907348633
    10. 'dp' → logprob: -18.562501907348633

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18297052383422852
    2. ']+=' → logprob: -1.8079705238342285
    3. '+=' → logprob: -6.0579705238342285
    4. '=' → logprob: -7.5579705238342285
    5. ']=' → logprob: -8.93297004699707
    6. ']=(' → logprob: -9.05797004699707
    7. ' +=' → logprob: -10.80797004699707
    8. '(' → logprob: -10.93297004699707
    9. '```' → logprob: -11.30797004699707
    10. '=(' → logprob: -11.43297004699707

Token 123: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.39036130905151367
    2. '=' → logprob: -1.1403613090515137
    3. ' +=' → logprob: -6.265361309051514
    4. ' =' → logprob: -6.515361309051514
    5. '=(' → logprob: -9.765361785888672
    6. '+=(' → logprob: -10.640361785888672
    7. ']+=' → logprob: -11.015361785888672
    8. '(' → logprob: -12.890361785888672
    9. '+' → logprob: -14.390361785888672
    10. ' ' → logprob: -15.015361785888672

Token 124: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0008865646668709815
    2. ' (' → logprob: -7.1258864402771
    3. '(' → logprob: -9.500886917114258
    4. '   ' → logprob: -13.000886917114258
    5. '(max' → logprob: -14.000886917114258
    6. '(dd' → logprob: -14.250886917114258
    7. '(df' → logprob: -14.375886917114258
    8. '(D' → logprob: -14.500886917114258
    9. '((' → logprob: -14.875886917114258
    10. '(int' → logprob: -15.125886917114258

Token 125: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.000783899100497365
    2. '(dp' → logprob: -7.500783920288086
    3. ' dp' → logprob: -8.375783920288086
    4. '   ' → logprob: -15.750783920288086
    5. '	dp' → logprob: -15.750783920288086
    6. 'd' → logprob: -16.500783920288086
    7. ' (' → logprob: -17.125783920288086
    8. '(d' → logprob: -17.625783920288086
    9. '(' → logprob: -18.000783920288086
    10. '_dp' → logprob: -18.750783920288086

Token 126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. 'i' → logprob: -13.625001907348633
    3. '[' → logprob: -14.250001907348633
    4. '```' → logprob: -19.375001907348633
    5. '(i' → logprob: -20.250001907348633
    6. ' i' → logprob: -21.125001907348633
    7. '[
' → logprob: -21.250001907348633
    8. '[I' → logprob: -21.375001907348633
    9. ' [' → logprob: -22.000001907348633
    10. '	i' → logprob: -22.125001907348633

Token 127: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0040882546454668045
    2. ']+' → logprob: -5.504088401794434
    3. '+' → logprob: -11.629088401794434
    4. ' ]' → logprob: -15.004088401794434
    5. ']
' → logprob: -15.879088401794434
    6. '1' → logprob: -16.004087448120117
    7. '```' → logprob: -16.504087448120117
    8. '   ' → logprob: -16.754087448120117
    9. '])' → logprob: -17.004087448120117
    10. '+]' → logprob: -17.129087448120117

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015617619501426816
    2. 'i' → logprob: -7.501561641693115
    3. ']' → logprob: -7.626561641693115
    4. ' ' → logprob: -8.251562118530273
    5. '   ' → logprob: -9.876562118530273
    6. 'dp' → logprob: -9.876562118530273
    7. '```' → logprob: -10.126562118530273
    8. '])' → logprob: -10.501562118530273
    9. '0' → logprob: -10.751562118530273
    10. ']+' → logprob: -11.626562118530273

Token 129: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40158480405807495
    2. ' +' → logprob: -1.4015848636627197
    3. ']' → logprob: -2.6515848636627197
    4. ']+' → logprob: -4.276584625244141
    5. '```' → logprob: -10.02658462524414
    6. ' ' → logprob: -11.02658462524414
    7. ')' → logprob: -11.40158462524414
    8. '}' → logprob: -11.77658462524414
    9. ' ' → logprob: -12.02658462524414
    10. '>' → logprob: -12.65158462524414

Token 130: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42870789766311646
    2. ' +' → logprob: -1.0537078380584717
    3. ' ' → logprob: -12.42870807647705
    4. ' ' → logprob: -13.42870807647705
    5. '```' → logprob: -14.92870807647705
    6. '0' → logprob: -15.67870807647705
    7. ' plus' → logprob: -15.80370807647705
    8. '
' → logprob: -16.053707122802734
    9. 'if' → logprob: -16.366207122802734
    10. ']+' → logprob: -16.366207122802734

Token 131: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011048289015889168
    2. ' dp' → logprob: -4.511048316955566
    3. '	dp' → logprob: -15.511048316955566
    4. '   ' → logprob: -15.636048316955566
    5. '(dp' → logprob: -16.63604736328125
    6. ' ' → logprob: -18.26104736328125
    7. '_dp' → logprob: -18.88604736328125
    8. '  ' → logprob: -18.88604736328125
    9. '    ' → logprob: -19.26104736328125
    10. '.dp' → logprob: -20.51104736328125

Token 132: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.125
    3. 'i' → logprob: -17.5
    4. '   ' → logprob: -20.625
    5. ' [' → logprob: -20.875
    6. '```' → logprob: -21.25
    7. ' ' → logprob: -22.375
    8. '`' → logprob: -22.875
    9. '[ip' → logprob: -23.0
    10. '[int' → logprob: -23.125

Token 133: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31343144178390503
    2. ')' → logprob: -1.3134315013885498
    3. ')%' → logprob: -9.188431739807129
    4. '`)' → logprob: -11.188431739807129
    5. '})' → logprob: -11.438431739807129
    6. ']' → logprob: -11.438431739807129
    7. ' )' → logprob: -11.688431739807129
    8. '）' → logprob: -11.688431739807129
    9. ''])' → logprob: -12.438431739807129
    10. ' ])' → logprob: -12.438431739807129

Token 134: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07889430224895477
    2. ' %' → logprob: -2.5788943767547607
    3. ' ' → logprob: -13.70389461517334
    4. ')' → logprob: -14.32889461517334
    5. ')%' → logprob: -14.32889461517334
    6. '%n' → logprob: -14.57889461517334
    7. '%m' → logprob: -14.70389461517334
    8. '%d' → logprob: -14.82889461517334
    9. '%i' → logprob: -14.82889461517334
    10. '%x' → logprob: -15.95389461517334

Token 135: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.493430894101039e-05
    2. ' mod' → logprob: -9.500075340270996
    3. '(mod' → logprob: -17.37507438659668
    4. '	mod' → logprob: -21.00007438659668
    5. ' ' → logprob: -22.12507438659668
    6. 'MOD' → logprob: -23.75007438659668
    7. '100' → logprob: -24.00007438659668
    8. ' мод' → logprob: -24.00007438659668
    9. '```' → logprob: -24.50007438659668
    10. 'mo' → logprob: -25.12507438659668

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4722867012023926
    2. ' 
' → logprob: -1.4722867012023926
    3. '    
' → logprob: -2.2222867012023926
    4. '  
' → logprob: -4.472286701202393
    5. '
' → logprob: -4.722286701202393
    6. '<|end|>' → logprob: -4.847286701202393
    7. '   
' → logprob: -4.972286701202393
    8. ' ' → logprob: -6.722286701202393
    9. ' if' → logprob: -7.472286701202393
    10. '     
' → logprob: -7.847286701202393

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009532357566058636
    2. '    
' → logprob: -5.759532451629639
    3. ' 
' → logprob: -6.134532451629639
    4. '<|end|>' → logprob: -6.634532451629639
    5. ' ' → logprob: -6.759532451629639
    6. '   
' → logprob: -7.509532451629639
    7. '  
' → logprob: -7.759532451629639
    8. '
' → logprob: -8.00953197479248
    9. '  ' → logprob: -8.50953197479248
    10. ' if' → logprob: -9.50953197479248

Token 138: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.24293774366378784
    2. '   ' → logprob: -1.7429378032684326
    3. ' if' → logprob: -3.2429378032684326
    4. ' ' → logprob: -6.4929375648498535
    5. '  ' → logprob: -9.742938041687012
    6. '    
' → logprob: -11.242938041687012
    7. '```' → logprob: -11.742938041687012
    8. ' 
' → logprob: -11.867938041687012
    9. '  
' → logprob: -11.992938041687012
    10. '	if' → logprob: -12.242938041687012

Token 139: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.613037645816803
    2. ' dp' → logprob: -1.3630375862121582
    3. 'i' → logprob: -1.9880375862121582
    4. ' i' → logprob: -2.738037586212158
    5. '(i' → logprob: -8.238038063049316
    6. ' ' → logprob: -8.738038063049316
    7. ' (' → logprob: -9.238038063049316
    8. '0' → logprob: -9.738038063049316
    9. '   ' → logprob: -10.488038063049316
    10. '(dp' → logprob: -10.613038063049316

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. 'i' → logprob: -15.12500286102295
    4. '[
' → logprob: -17.625001907348633
    5. ' [' → logprob: -18.000001907348633
    6. '(i' → logprob: -18.500001907348633
    7. '```' → logprob: -18.500001907348633
    8. '{i' → logprob: -19.000001907348633
    9. '`' → logprob: -19.250001907348633
    10. ' ' → logprob: -20.000001907348633

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.77022064034827e-05
    2. ' +' → logprob: -9.250097274780273
    3. '[' → logprob: -14.000097274780273
    4. '2' → logprob: -14.500097274780273
    5. '+
' → logprob: -16.375097274780273
    6. '＋' → logprob: -17.375097274780273
    7. ' ' → logprob: -17.500097274780273
    8. ']+' → logprob: -17.625097274780273
    9. '1' → logprob: -18.125097274780273
    10. '+i' → logprob: -18.500097274780273

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.727905979962088e-05
    2. ' ' → logprob: -10.00004768371582
    3. '1' → logprob: -14.68754768371582
    4. '   ' → logprob: -15.25004768371582
    5. '+' → logprob: -15.68754768371582
    6. '6' → logprob: -15.87504768371582
    7. '  ' → logprob: -16.18754768371582
    8. '

' → logprob: -16.75004768371582
    9. '```' → logprob: -16.75004768371582
    10. '7' → logprob: -16.87504768371582

Token 143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12091173231601715
    2. ']>=' → logprob: -2.4959118366241455
    3. ' >=' → logprob: -3.8709118366241455
    4. '>=' → logprob: -4.620911598205566
    5. ' ]' → logprob: -7.370911598205566
    6. ')>=' → logprob: -9.995911598205566
    7. ')' → logprob: -10.120911598205566
    8. ' ' → logprob: -10.370911598205566
    9. '[' → logprob: -11.745911598205566
    10. '']' → logprob: -11.870911598205566

Token 144: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.12693524360656738
    2. '>=' → logprob: -2.1269352436065674
    3. ' ' → logprob: -12.751935005187988
    4. ')>=' → logprob: -13.001935005187988
    5. ']>=' → logprob: -13.626935005187988
    6. '≥' → logprob: -15.001935005187988
    7. ' ≥' → logprob: -15.251935005187988
    8. '[' → logprob: -16.126935958862305
    9. '<|end|>' → logprob: -16.501935958862305
    10. '>' → logprob: -16.876935958862305

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016034837812185287
    2. ' ' → logprob: -4.1410346031188965
    3. '   ' → logprob: -15.016035079956055
    4. '  ' → logprob: -16.891035079956055
    5. '```' → logprob: -16.891035079956055
    6. '<|end|>' → logprob: -17.141035079956055
    7. '>' → logprob: -17.766035079956055
    8. '=' → logprob: -18.141035079956055
    9. '00' → logprob: -18.203535079956055
    10. '۰' → logprob: -18.328535079956055

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -18.12502098083496
    4. '   ' → logprob: -18.87502098083496
    5. '[' → logprob: -19.25002098083496
    6. '۰' → logprob: -19.50002098083496
    7. '>=' → logprob: -19.50002098083496
    8. '00' → logprob: -19.62502098083496
    9. '<|end|>' → logprob: -19.87502098083496
    10. '=' → logprob: -20.31252098083496

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002957139164209366
    2. ':
' → logprob: -6.002957344055176
    3. '       ' → logprob: -7.752957344055176
    4. ' :' → logprob: -10.377957344055176
    5. '):' → logprob: -11.502957344055176
    6. '=' → logprob: -12.502957344055176
    7. '   ' → logprob: -12.627957344055176
    8. '):
' → logprob: -14.627957344055176
    9. ':

' → logprob: -14.877957344055176
    10. ']:' → logprob: -15.002957344055176

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03763825446367264
    2. 'dp' → logprob: -3.4126381874084473
    3. ' dp' → logprob: -5.537638187408447
    4. '(dp' → logprob: -10.662638664245605
    5. '	dp' → logprob: -11.037638664245605
    6. '      ' → logprob: -12.412638664245605
    7. '   ' → logprob: -13.412638664245605
    8. '[' → logprob: -13.537638664245605
    9. '_dp' → logprob: -14.662638664245605
    10. '        ' → logprob: -14.787638664245605

Token 149: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2326858788728714
    2. '(dp' → logprob: -1.732685923576355
    3. ' dp' → logprob: -3.4826858043670654
    4. '       ' → logprob: -10.232686042785645
    5. ' (' → logprob: -10.857686042785645
    6. '	dp' → logprob: -11.982686042785645
    7. '   ' → logprob: -13.232686042785645
    8. '           ' → logprob: -15.732686042785645
    9. '[' → logprob: -16.357685089111328
    10. '_dp' → logprob: -16.357685089111328

Token 150: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. 'i' → logprob: -13.375001907348633
    3. '[' → logprob: -14.875001907348633
    4. '\[' → logprob: -15.500001907348633
    5. '```' → logprob: -16.500001907348633
    6. '[
' → logprob: -18.375001907348633
    7. '`' → logprob: -18.625001907348633
    8. ' [' → logprob: -18.625001907348633
    9. '[I' → logprob: -19.375001907348633
    10. '(i' → logprob: -19.875001907348633

Token 151: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.968312951968983e-06
    2. '2' → logprob: -12.375009536743164
    3. ' +' → logprob: -12.500009536743164
    4. '[' → logprob: -13.625009536743164
    5. ']+' → logprob: -15.875009536743164
    6. '+
' → logprob: -15.875009536743164
    7. '   ' → logprob: -16.000009536743164
    8. '+]' → logprob: -16.000009536743164
    9. ']' → logprob: -16.375009536743164
    10. '＋' → logprob: -16.500009536743164

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.62501335144043
    4. '```' → logprob: -17.18751335144043
    5. '  ' → logprob: -17.50001335144043
    6. '1' → logprob: -17.75001335144043
    7. '２' → logprob: -18.18751335144043
    8. ']' → logprob: -18.25001335144043
    9. '

' → logprob: -18.31251335144043
    10. '۲' → logprob: -18.43751335144043

Token 153: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001562596415169537
    2. ']=' → logprob: -6.751562595367432
    3. ' ]' → logprob: -8.37656307220459
    4. '=' → logprob: -9.12656307220459
    5. ']+=' → logprob: -9.87656307220459
    6. ' =' → logprob: -13.62656307220459
    7. ')' → logprob: -15.00156307220459
    8. '   ' → logprob: -16.251562118530273
    9. ']+' → logprob: -16.376562118530273
    10. ']=(' → logprob: -16.501562118530273

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197340786457062
    2. ' =' → logprob: -2.8119733333587646
    3. '+=' → logprob: -12.561973571777344
    4. ']' → logprob: -13.811973571777344
    5. ' +=' → logprob: -14.811973571777344
    6. ']=' → logprob: -14.811973571777344
    7. '   ' → logprob: -16.311973571777344
    8. ')' → logprob: -16.436973571777344
    9. '[' → logprob: -16.436973571777344
    10. ' ' → logprob: -16.811973571777344

Token 155: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47410789132118225
    2. '(dp' → logprob: -0.9741078615188599
    3. '(' → logprob: -10.59910774230957
    4. '   ' → logprob: -12.72410774230957
    5. ' ' → logprob: -13.84910774230957
    6. '(df' → logprob: -14.97410774230957
    7. '  ' → logprob: -15.09910774230957
    8. ' ' → logprob: -15.09910774230957
    9. '(dc' → logprob: -15.47410774230957
    10. '    ' → logprob: -15.72410774230957

Token 156: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00014358828775584698
    2. ' dp' → logprob: -9.375144004821777
    3. '(dp' → logprob: -9.750144004821777
    4. '	dp' → logprob: -15.625144004821777
    5. '   ' → logprob: -16.00014305114746
    6. '       ' → logprob: -17.75014305114746
    7. '    ' → logprob: -18.62514305114746
    8. ' ' → logprob: -18.87514305114746
    9. '  ' → logprob: -19.25014305114746
    10. '_dp' → logprob: -19.37514305114746

Token 157: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.15441757265944e-05
    2. 'i' → logprob: -10.500031471252441
    3. ']' → logprob: -13.000031471252441
    4. '```' → logprob: -14.250031471252441
    5. '[' → logprob: -15.000031471252441
    6. '(i' → logprob: -15.125031471252441
    7. '{i' → logprob: -16.000032424926758
    8. '   ' → logprob: -16.875032424926758
    9. '][' → logprob: -16.875032424926758
    10. ')' → logprob: -17.000032424926758

Token 158: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29227444529533386
    2. ']' → logprob: -1.4172744750976562
    3. '[i' → logprob: -5.167274475097656
    4. ']+' → logprob: -5.292274475097656
    5. '2' → logprob: -8.667274475097656
    6. '(i' → logprob: -9.542274475097656
    7. '[' → logprob: -10.542274475097656
    8. '   ' → logprob: -10.792274475097656
    9. ')' → logprob: -11.417274475097656
    10. '+]' → logprob: -11.667274475097656

Token 159: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9695014357566833
    2. ']' → logprob: -1.0945014953613281
    3. '2' → logprob: -1.8445014953613281
    4. ')' → logprob: -3.344501495361328
    5. '1' → logprob: -3.594501495361328
    6. ' ' → logprob: -3.594501495361328
    7. '])' → logprob: -3.719501495361328
    8. '   ' → logprob: -5.469501495361328
    9. '```' → logprob: -5.844501495361328
    10. '(i' → logprob: -6.094501495361328

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02034052461385727
    2. ' +' → logprob: -4.645340442657471
    3. '+' → logprob: -4.895340442657471
    4. ']+' → logprob: -6.270340442657471
    5. ' ]' → logprob: -6.770340442657471
    6. ' ' → logprob: -12.395340919494629
    7. '+]' → logprob: -13.645340919494629
    8. ')' → logprob: -13.645340919494629
    9. '```' → logprob: -14.770340919494629
    10. ']+=' → logprob: -14.770340919494629

Token 161: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868735730648041
    2. '+' → logprob: -1.1368736028671265
    3. '[' → logprob: -13.636873245239258
    4. ' ' → logprob: -14.386873245239258
    5. ']' → logprob: -14.886873245239258
    6. ')' → logprob: -16.136873245239258
    7. ' ' → logprob: -16.386873245239258
    8. ' +
' → logprob: -17.136873245239258
    9. ' plus' → logprob: -17.261873245239258
    10. ']+' → logprob: -17.261873245239258

Token 162: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3868716359138489
    2. ' dp' → logprob: -1.136871576309204
    3. '	dp' → logprob: -15.386871337890625
    4. '(dp' → logprob: -15.511871337890625
    5. ' ' → logprob: -16.261871337890625
    6. '   ' → logprob: -17.511871337890625
    7. '_dp' → logprob: -17.511871337890625
    8. '    ' → logprob: -19.136871337890625
    9. '  ' → logprob: -19.136871337890625
    10. 'd' → logprob: -19.511871337890625

Token 163: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. 'i' → logprob: -16.75
    4. '[I' → logprob: -19.375
    5. ']' → logprob: -19.5
    6. ' [' → logprob: -20.25
    7. '][' → logprob: -20.375
    8. ')[' → logprob: -20.75
    9. '```' → logprob: -20.875
    10. ' ' → logprob: -21.25

Token 164: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.615255839889869e-05
    2. '])' → logprob: -9.625096321105957
    3. ' )' → logprob: -10.625096321105957
    4. '）' → logprob: -12.750096321105957
    5. ']' → logprob: -13.875096321105957
    6. ')%' → logprob: -14.000096321105957
    7. '   ' → logprob: -14.750096321105957
    8. '`)' → logprob: -14.875096321105957
    9. '})' → logprob: -16.25009536743164
    10. '	' → logprob: -16.62509536743164

Token 165: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25200212001800537
    2. ' %' → logprob: -1.5020021200180054
    3. ' ' → logprob: -10.127001762390137
    4. ')' → logprob: -10.752001762390137
    5. ' ' → logprob: -12.377001762390137
    6. '`' → logprob: -12.627001762390137
    7. '
' → logprob: -14.002001762390137
    8. ')%' → logprob: -14.127001762390137
    9. '```' → logprob: -14.627001762390137
    10. ' 
' → logprob: -14.877001762390137

Token 166: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.12692831456661224
    2. ' mod' → logprob: -2.1269283294677734
    3. '(mod' → logprob: -15.501928329467773
    4. '	mod' → logprob: -16.626928329467773
    5. ' ' → logprob: -16.876928329467773
    6. ' modul' → logprob: -17.501928329467773
    7. ' мод' → logprob: -17.876928329467773
    8. ' ' → logprob: -19.626928329467773
    9. '_mod' → logprob: -20.376928329467773
    10. ' modu' → logprob: -20.751928329467773

Token 167: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002947751199826598
    2. '
' → logprob: -6.127947807312012
    3. ' print' → logprob: -7.502947807312012
    4. '\n' → logprob: -9.252947807312012
    5. ')' → logprob: -9.752947807312012
    6. 'n' → logprob: -11.002947807312012
    7. '(print' → logprob: -11.502947807312012
    8. '```' → logprob: -12.127947807312012
    9. '#print' → logprob: -12.752947807312012
    10. '+' → logprob: -12.877947807312012

Token 168: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.153795766294934e-06
    2. '
' → logprob: -12.750005722045898
    3. ' print' → logprob: -12.875005722045898
    4. '```' → logprob: -15.375005722045898
    5. 'for' → logprob: -15.875005722045898
    6. '(print' → logprob: -16.0000057220459
    7. ')' → logprob: -16.6250057220459
    8. 'return' → logprob: -17.0000057220459
    9. '#print' → logprob: -17.8750057220459
    10. '\n' → logprob: -18.6250057220459

Token 169: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.10020752996206284
    2. '(' → logprob: -2.350207567214966
    3. '(df' → logprob: -15.225207328796387
    4. '()' → logprob: -16.225208282470703
    5. '(dc' → logprob: -16.350208282470703
    6. '(
' → logprob: -16.600208282470703
    7. '((' → logprob: -16.725208282470703
    8. '(n' → logprob: -16.850208282470703
    9. ' (' → logprob: -16.975208282470703
    10. '(

' → logprob: -17.100208282470703

Token 170: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.000006675720215
    3. 'n' → logprob: -17.1250057220459
    4. '(n' → logprob: -17.3750057220459
    5. '[
' → logprob: -17.8750057220459
    6. ')[' → logprob: -18.2500057220459
    7. ')' → logprob: -18.2500057220459
    8. '\[' → logprob: -18.6250057220459
    9. ')n' → logprob: -18.6250057220459
    10. ' [' → logprob: -18.8750057220459

Token 171: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008310707635246217
    2. '])' → logprob: -7.125831127166748
    3. '))' → logprob: -10.87583065032959
    4. '})' → logprob: -12.62583065032959
    5. ' )' → logprob: -13.25083065032959
    6. ')`' → logprob: -14.25083065032959
    7. ']' → logprob: -14.37583065032959
    8. ')]' → logprob: -14.37583065032959
    9. '）' → logprob: -15.12583065032959
    10. '`)' → logprob: -15.75083065032959


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 169
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 95
Tokens correctement prédits (top 10): 154
Précision stricte (1ère position): 52.66%
Précision adaptée (1ère position): 56.21%
Précision (top 10): 91.12%
================================================================================
