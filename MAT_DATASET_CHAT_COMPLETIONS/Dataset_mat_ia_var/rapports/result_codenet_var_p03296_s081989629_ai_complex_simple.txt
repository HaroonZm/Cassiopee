================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import groupby, tee, islice, chain
from operator import eq

n = int(input())
a = list(map(int, input().split()))

def pairwise(xs):
    a, b = tee(xs)
    next(b, None)
    return zip(a, b)

def tripletwise(xs):
    a, b, c = tee(xs, 3)
    next(b, None)
    next(c, None)
    next(c, None)
    return zip(a, b, c)

def check(i):
    l = a[i-1] if i > 0 else None
    m = a[i]
    r = a[i+1] if i < len(a)-1 else None
    if l is not None and r is not None:
        if l != m and m != r:
            return 2, 0
        elif l == m == r:
            return 2, 1
        elif m == r:
            return 1, 0
        elif l == m:
            return 1, 1
    return 1, 0

indices = iter(range(1, n-1))
acc = [0, 1]
S = [0]

def recursive(i):
    if i >= n-1:
        return
    step, cnt = check(i)
    S[0] += cnt
    recursive(i+step)
recursive(1)

if n > 1 and a[-1] == a[-2]:
    S[0] += 1

print(S[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01442087721079588
    2. '(
' → logprob: -5.139420986175537
    3. '(lambda' → logprob: -5.389420986175537
    4. 'def' → logprob: -6.639420986175537
    5. ',' → logprob: -7.139420986175537
    6. '\' → logprob: -8.139420509338379
    7. ' ' → logprob: -8.264420509338379
    8. ' (' → logprob: -8.389420509338379
    9. '' → logprob: -9.139420509338379
    10. '
' → logprob: -9.139420509338379

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6086577773094177
    2. 'import' → logprob: -0.8586577773094177
    3. '.' → logprob: -3.4836578369140625
    4. '.import' → logprob: -6.7336578369140625
    5. ' .' → logprob: -9.358657836914062
    6. '	import' → logprob: -9.733657836914062
    7. '.im' → logprob: -10.108657836914062
    8. '_import' → logprob: -10.483657836914062
    9. ' ' → logprob: -10.483657836914062
    10. '<|end|>' → logprob: -11.358657836914062

Token 8: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.8675806522369385
    2. 'chain' → logprob: -1.7425806522369385
    3. 'acc' → logprob: -1.8675806522369385
    4. 'count' → logprob: -1.9925806522369385
    5. 'cycle' → logprob: -2.8675806522369385
    6. 'com' → logprob: -3.3675806522369385
    7. 'is' → logprob: -4.992580413818359
    8. 'product' → logprob: -5.367580413818359
    9. ' group' → logprob: -5.492580413818359
    10. 'per' → logprob: -5.867580413818359

Token 9: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0005389740690588951
    2. 'y' → logprob: -8.25053882598877
    3. 'py' → logprob: -8.50053882598877
    4. 's' → logprob: -10.50053882598877
    5. 'r' → logprob: -11.37553882598877
    6. 'ertools' → logprob: -11.37553882598877
    7. 'from' → logprob: -12.12553882598877
    8. 'tools' → logprob: -12.37553882598877
    9. 'b' → logprob: -12.50053882598877
    10. 't' → logprob: -12.87553882598877

Token 10: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.101599931716919
    2. 'def' → logprob: -1.226599931716919
    3. '\n' → logprob: -1.976599931716919
    4. 'd' → logprob: -2.476599931716919
    5. '(' → logprob: -2.726599931716919
    6. '#' → logprob: -3.351599931716919
    7. '`' → logprob: -4.35159969329834
    8. '```' → logprob: -4.60159969329834
    9. '' → logprob: -5.10159969329834
    10. ',' → logprob: -5.47659969329834

Token 11: ' tee' (ID: 44157)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.36603397130966187
    2. 'count' → logprob: -2.3660340309143066
    3. 'chain' → logprob: -2.8660340309143066
    4. 'com' → logprob: -3.1160340309143066
    5. 'product' → logprob: -3.1160340309143066
    6. ' accumulate' → logprob: -3.6160340309143066
    7. 'filter' → logprob: -4.366034030914307
    8. 'cycle' → logprob: -4.616034030914307
    9. 'zip' → logprob: -5.241034030914307
    10. 'tee' → logprob: -5.866034030914307

Token 12: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.303223729133606
    2. 'def' → logprob: -1.303223729133606
    3. '(' → logprob: -1.678223729133606
    4. '\n' → logprob: -2.3032236099243164
    5. ',' → logprob: -2.6782236099243164
    6. '#' → logprob: -3.6782236099243164
    7. '(
' → logprob: -4.053223609924316
    8. 'd' → logprob: -4.428223609924316
    9. '
' → logprob: -4.428223609924316
    10. '```' → logprob: -5.178223609924316

Token 13: ' is' (ID: 382)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.4668331146240234
    2. 'filter' → logprob: -1.4668331146240234
    3. 'count' → logprob: -1.4668331146240234
    4. 'chain' → logprob: -2.2168331146240234
    5. 'zip' → logprob: -3.0918331146240234
    6. 'is' → logprob: -3.5918331146240234
    7. ' is' → logprob: -3.8418331146240234
    8. 'com' → logprob: -3.8418331146240234
    9. 'product' → logprob: -3.9668331146240234
    10. ' filter' → logprob: -4.216833114624023

Token 14: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -2.935296834039036e-06
    2. 'lic' → logprob: -13.75000286102295
    3. 'plit' → logprob: -14.37500286102295
    4. 'liced' → logprob: -14.75000286102295
    5. 'l' → logprob: -15.25000286102295
    6. '```' → logprob: -15.50000286102295
    7. '
' → logprob: -16.875003814697266
    8. 'close' → logprob: -17.125003814697266
    9. 'slice' → logprob: -17.250003814697266
    10. '

' → logprob: -17.375003814697266

Token 15: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13283036649227142
    2. 'def' → logprob: -3.1328303813934326
    3. '\n' → logprob: -3.6328303813934326
    4. '\' → logprob: -3.7578303813934326
    5. '(
' → logprob: -3.8828303813934326
    6. ',' → logprob: -6.0078301429748535
    7. '
' → logprob: -6.6328301429748535
    8. '_' → logprob: -6.6328301429748535
    9. '#' → logprob: -6.7578301429748535
    10. '```' → logprob: -7.1328301429748535

Token 16: ' chain' (ID: 13464)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9160692095756531
    2. 'filter' → logprob: -1.4160692691802979
    3. 'chain' → logprob: -1.6660692691802979
    4. 'zip' → logprob: -2.291069269180298
    5. 'acc' → logprob: -3.041069269180298
    6. 'com' → logprob: -5.541069030761719
    7. 'st' → logprob: -5.666069030761719
    8. 'cycle' → logprob: -6.041069030761719
    9. ' chain' → logprob: -6.166069030761719
    10. 'product' → logprob: -6.416069030761719

Token 17: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8698859810829163
    2. '(' → logprob: -1.2448859214782715
    3. '(
' → logprob: -1.9948859214782715
    4. ',' → logprob: -2.4948859214782715
    5. '
' → logprob: -3.8698859214782715
    6. '\n' → logprob: -3.8698859214782715
    7. '\' → logprob: -5.1198859214782715
    8. '#' → logprob: -5.3698859214782715
    9. ',
' → logprob: -5.4948859214782715
    10. '```' → logprob: -5.9948859214782715

Token 18: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0923304632306099
    2. 'd' → logprob: -3.9673304557800293
    3. ',' → logprob: -4.217330455780029
    4. '
' → logprob: -4.467330455780029
    5. '#' → logprob: -4.717330455780029
    6. '```' → logprob: -4.717330455780029
    7. '

' → logprob: -5.467330455780029
    8. '\' → logprob: -5.717330455780029
    9. '(
' → logprob: -5.967330455780029
    10. '(' → logprob: -5.967330455780029

Token 19: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.11201934516429901
    2. 'operator' → logprob: -2.6120193004608154
    3. ' collections' → logprob: -3.8620193004608154
    4. 'collections' → logprob: -4.7370195388793945
    5. ' math' → logprob: -6.3620195388793945
    6. ' typing' → logprob: -8.112019538879395
    7. 'math' → logprob: -8.237019538879395
    8. ' ' → logprob: -8.237019538879395
    9. '_operator' → logprob: -9.987019538879395
    10. ' more' → logprob: -10.237019538879395

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07540328800678253
    2. 'import' → logprob: -2.7004032135009766
    3. '.' → logprob: -5.450403213500977
    4. ' ' → logprob: -7.575403213500977
    5. '<|end|>' → logprob: -7.575403213500977
    6. ' .' → logprob: -9.575403213500977
    7. '	import' → logprob: -10.700403213500977
    8. '<|end|>' → logprob: -11.450403213500977
    9. ' as' → logprob: -11.700403213500977
    10. '_import' → logprob: -12.450403213500977

Token 21: ' eq' (ID: 18955)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.04522203654050827
    2. 'item' → logprob: -3.795222043991089
    3. ' add' → logprob: -4.54522180557251
    4. ' ' → logprob: -5.29522180557251
    5. ' import' → logprob: -5.92022180557251
    6. ' attr' → logprob: -6.54522180557251
    7. 'getitem' → logprob: -7.67022180557251
    8. ' method' → logprob: -8.045222282409668
    9. ' mul' → logprob: -8.170222282409668
    10. 'import' → logprob: -8.295222282409668

Token 22: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6992582082748413
    2. '\' → logprob: -1.8242582082748413
    3. '(' → logprob: -2.074258327484131
    4. ',
' → logprob: -3.199258327484131
    5. '\n' → logprob: -3.199258327484131
    6. 'def' → logprob: -3.324258327484131
    7. '.' → logprob: -3.824258327484131
    8. '(
' → logprob: -4.074258327484131
    9. '
' → logprob: -4.324258327484131
    10. '#' → logprob: -4.949258327484131

Token 23: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3863758146762848
    2. 'd' → logprob: -1.3863757848739624
    3. '(' → logprob: -3.386375904083252
    4. '#' → logprob: -4.136375904083252
    5. '\' → logprob: -5.636375904083252
    6. ',' → logprob: -5.636375904083252
    7. '(
' → logprob: -5.761375904083252
    8. '```' → logprob: -6.011375904083252
    9. '=' → logprob: -6.386375904083252
    10. '`' → logprob: -7.011375904083252

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9407641887664795
    2. '_' → logprob: -1.1907641887664795
    3. 'u' → logprob: -2.0657641887664795
    4. 'a' → logprob: -2.1907641887664795
    5. ' =' → logprob: -3.4407641887664795
    6. ',' → logprob: -4.315764427185059
    7. 'umber' → logprob: -5.315764427185059
    8. 'e' → logprob: -5.690764427185059
    9. 'o' → logprob: -5.940764427185059
    10. 'um' → logprob: -6.190764427185059

Token 25: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02862153761088848
    2. '10' → logprob: -4.153621673583984
    3. ' int' → logprob: -5.028621673583984
    4. '0' → logprob: -6.278621673583984
    5. 'int' → logprob: -6.778621673583984
    6. '5' → logprob: -6.903621673583984
    7. '100' → logprob: -7.653621673583984
    8. '20' → logprob: -7.653621673583984
    9. ' []' → logprob: -8.028621673583984
    10. '1' → logprob: -8.528621673583984

Token 26: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006754324771463871
    2. '('' → logprob: -5.131754398345947
    3. '(input' → logprob: -7.631754398345947
    4. ''' → logprob: -8.881753921508789
    5. '("' → logprob: -10.256753921508789
    6. '(n' → logprob: -10.631753921508789
    7. ' (' → logprob: -10.881753921508789
    8. '```' → logprob: -11.006753921508789
    9. '("("' → logprob: -11.006753921508789
    10. '()' → logprob: -11.131753921508789

Token 27: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3708615303039551
    2. '()' → logprob: -1.370861530303955
    3. ')' → logprob: -3.245861530303955
    4. '())' → logprob: -4.370861530303955
    5. '(()' → logprob: -6.370861530303955
    6. '('' → logprob: -6.370861530303955
    7. '(
' → logprob: -7.995861530303955
    8. '("("' → logprob: -8.870861053466797
    9. '("")' → logprob: -9.495861053466797
    10. '(

' → logprob: -9.745861053466797

Token 28: 'a' (ID: 64)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6986966729164124
    2. ')' → logprob: -0.8236966729164124
    3. 'a' → logprob: -3.4486966133117676
    4. ' ' → logprob: -5.448696613311768
    5. 's' → logprob: -5.573696613311768
    6. 'numbers' → logprob: -6.073696613311768
    7. ' data' → logprob: -6.198696613311768
    8. '
' → logprob: -6.198696613311768
    9. 'items' → logprob: -6.323696613311768
    10. 'd' → logprob: -6.323696613311768

Token 29: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7895175814628601
    2. ' =' → logprob: -0.7895175814628601
    3. '=' → logprob: -2.789517641067505
    4. '[:' → logprob: -4.664517402648926
    5. '[:]' → logprob: -4.664517402648926
    6. '[i' → logprob: -5.539517402648926
    7. '.' → logprob: -6.539517402648926
    8. 's' → logprob: -6.789517402648926
    9. ' ' → logprob: -7.039517402648926
    10. ',' → logprob: -7.539517402648926

Token 30: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07298844307661057
    2. 'list' → logprob: -2.697988510131836
    3. ' [' → logprob: -5.947988510131836
    4. '[list' → logprob: -8.572988510131836
    5. '[' → logprob: -9.072988510131836
    6. ' []' → logprob: -9.322988510131836
    7. '[]' → logprob: -11.447988510131836
    8. ' input' → logprob: -11.447988510131836
    9. 'input' → logprob: -12.072988510131836
    10. '[input' → logprob: -12.197988510131836

Token 31: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22326718270778656
    2. '(map' → logprob: -2.223267078399658
    3. '(input' → logprob: -2.723267078399658
    4. '(range' → logprob: -4.848267078399658
    5. '(int' → logprob: -4.973267078399658
    6. '(eval' → logprob: -5.473267078399658
    7. '(chain' → logprob: -5.473267078399658
    8. '(str' → logprob: -6.473267078399658
    9. '(iter' → logprob: -7.848267078399658
    10. '(filter' → logprob: -8.598267555236816

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06516104191541672
    2. '(' → logprob: -2.8151609897613525
    3. '(lambda' → logprob: -6.315161228179932
    4. '(str' → logprob: -6.940161228179932
    5. ')' → logprob: -8.440160751342773
    6. '<int' → logprob: -10.315160751342773
    7. '(input' → logprob: -10.315160751342773
    8. '[int' → logprob: -10.565160751342773
    9. '```' → logprob: -11.190160751342773
    10. 'int' → logprob: -11.440160751342773

Token 33: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.267802894115448
    2. ',' → logprob: -1.7678029537200928
    3. '(input' → logprob: -2.7678029537200928
    4. '(' → logprob: -6.892802715301514
    5. 'input' → logprob: -8.392803192138672
    6. ' ,' → logprob: -8.892803192138672
    7. '=input' → logprob: -11.267803192138672
    8. ',(' → logprob: -12.142803192138672
    9. '))' → logprob: -12.142803192138672
    10. '(),' → logprob: -12.392803192138672

Token 34: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023257939144968987
    2. ' input' → logprob: -3.7732579708099365
    3. '(input' → logprob: -11.773258209228516
    4. ',input' → logprob: -12.898258209228516
    5. ' ' → logprob: -13.773258209228516
    6. '=input' → logprob: -14.648258209228516
    7. '	input' → logprob: -14.898258209228516
    8. ')' → logprob: -15.773258209228516
    9. '<input' → logprob: -17.023258209228516
    10. '   ' → logprob: -17.148258209228516

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0036724021192640066
    2. '()))' → logprob: -6.3786725997924805
    3. '(' → logprob: -6.8786725997924805
    4. '()' → logprob: -7.2536725997924805
    5. '())' → logprob: -9.00367259979248
    6. '))' → logprob: -10.00367259979248
    7. '(),' → logprob: -10.62867259979248
    8. ')' → logprob: -11.25367259979248
    9. '()));' → logprob: -12.25367259979248
    10. ',' → logprob: -12.62867259979248

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005667338264174759
    2. 'strip' → logprob: -7.5005669593811035
    3. ' split' → logprob: -11.875566482543945
    4. 'rstrip' → logprob: -12.500566482543945
    5. '(split' → logprob: -12.875566482543945
    6. ')' → logprob: -15.250566482543945
    7. 'spl' → logprob: -15.875566482543945
    8. 'read' → logprob: -17.000566482543945
    9. ' ' → logprob: -17.500566482543945
    10. ' strip' → logprob: -17.500566482543945

Token 37: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.542574942111969
    2. ')' → logprob: -1.1675748825073242
    3. '()))' → logprob: -2.917574882507324
    4. ')))' → logprob: -3.667574882507324
    5. '(' → logprob: -4.292574882507324
    6. '())' → logprob: -4.542574882507324
    7. '()' → logprob: -5.792574882507324
    8. '())))' → logprob: -7.667574882507324
    9. '),' → logprob: -9.792574882507324
    10. ''))' → logprob: -11.042574882507324

Token 38: 'def' (ID: 1314)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -1.5908032655715942
    2. 'a' → logprob: -1.9658032655715942
    3. 'pairs' → logprob: -2.0908031463623047
    4. 'group' → logprob: -2.4658031463623047
    5. 'def' → logprob: -2.5908031463623047
    6. 'g' → logprob: -2.9658031463623047
    7. 'counts' → logprob: -3.2158031463623047
    8. 'result' → logprob: -3.3408031463623047
    9. 'diff' → logprob: -3.3408031463623047
    10. 'dp' → logprob: -3.7158031463623047

Token 39: ' pair' (ID: 10610)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.32334741950035095
    2. '_' → logprob: -1.9483474493026733
    3. ' count' → logprob: -3.948347330093384
    4. ' grou' → logprob: -3.948347330093384
    5. ' reduce' → logprob: -4.073347568511963
    6. ' ' → logprob: -5.323347568511963
    7. ' longest' → logprob: -5.323347568511963
    8. ' counter' → logprob: -5.448347568511963
    9. ' r' → logprob: -5.448347568511963
    10. ' factorial' → logprob: -5.448347568511963

Token 40: 'wise' (ID: 7480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24762491881847382
    2. 'wise' → logprob: -1.6226248741149902
    3. '(s' → logprob: -4.12262487411499
    4. '_s' → logprob: -6.24762487411499
    5. '_' → logprob: -6.37262487411499
    6. '(' → logprob: -6.87262487411499
    7. ')' → logprob: -8.622625350952148
    8. ' s' → logprob: -8.872625350952148
    9. '(a' → logprob: -8.997625350952148
    10. 'ed' → logprob: -9.497625350952148

Token 41: '(xs' (ID: 132690)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002545339521020651
    2. '(iter' → logprob: -6.127545356750488
    3. '(s' → logprob: -8.502545356750488
    4. '(a' → logprob: -9.627545356750488
    5. '(
' → logprob: -11.127545356750488
    6. '((' → logprob: -11.252545356750488
    7. 's' → logprob: -11.502545356750488
    8. '(()' → logprob: -11.877545356750488
    9. '(lst' → logprob: -11.877545356750488
    10. '(iterator' → logprob: -11.877545356750488

Token 42: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04485896974802017
    2. '):' → logprob: -3.169858932495117
    3. '   ' → logprob: -7.544858932495117
    4. ' ):' → logprob: -7.669858932495117
    5. '):
' → logprob: -7.919858932495117
    6. 's' → logprob: -8.544858932495117
    7. ' ,' → logprob: -9.419858932495117
    8. ')' → logprob: -9.669858932495117
    9. '(xs' → logprob: -10.044858932495117
    10. ' ' → logprob: -10.919858932495117

Token 43: '   ' (ID: 271)
  Prédit: '(xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.9449233412742615
    2. '(' → logprob: -1.1949234008789062
    3. '   ' → logprob: -1.1949234008789062
    4. '(iter' → logprob: -6.069923400878906
    5. ' ' → logprob: -6.944923400878906
    6. '(x' → logprob: -7.444923400878906
    7. ' xs' → logprob: -8.319923400878906
    8. '(a' → logprob: -8.819923400878906
    9. 's' → logprob: -8.819923400878906
    10. ':' → logprob: -9.069923400878906

Token 44: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5363968014717102
    2. ' xs' → logprob: -1.6613967418670654
    3. 'a' (adapté à ' a') → logprob: -2.6613967418670654
    4. ' it' → logprob: -3.2863967418670654
    5. 'xs' → logprob: -3.5363967418670654
    6. ' a' → logprob: -3.6613967418670654
    7. '(xs' → logprob: -4.0363969802856445
    8. ' return' → logprob: -4.4113969802856445
    9. ' ' → logprob: -4.4113969802856445
    10. 'it' → logprob: -5.1613969802856445

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013925714418292046
    2. 's' → logprob: -4.763925552368164
    3. ',b' → logprob: -5.263925552368164
    4. '1' → logprob: -10.138925552368164
    5. 'b' → logprob: -10.888925552368164
    6. ' =' → logprob: -11.138925552368164
    7. ' ,' → logprob: -11.513925552368164
    8. '[:-' → logprob: -11.763925552368164
    9. '_,' → logprob: -11.888925552368164
    10. '2' → logprob: -12.013925552368164

Token 46: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0076601081527769566
    2. ' b' → logprob: -4.882659912109375
    3. 's' → logprob: -9.882659912109375
    4. '_' → logprob: -14.132659912109375
    5. 'is' → logprob: -15.007659912109375
    6. '   ' → logprob: -15.132659912109375
    7. '	b' → logprob: -15.382659912109375
    8. ' =' → logprob: -15.632659912109375
    9. ' ' → logprob: -15.757659912109375
    10. '  ' → logprob: -16.007659912109375

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741021990776062
    2. '=' → logprob: -0.9741021990776062
    3. ',' → logprob: -10.724102020263672
    4. '<|end|>' → logprob: -14.349102020263672
    5. ')' → logprob: -14.599102020263672
    6. 's' → logprob: -14.849102020263672
    7. ' ' → logprob: -15.224102020263672
    8. '=cut' → logprob: -16.099102020263672
    9. '	' → logprob: -16.286602020263672
    10. '=b' → logprob: -16.349102020263672

Token 48: ' tee' (ID: 44157)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.1602344810962677
    2. ' tee' → logprob: -1.9102344512939453
    3. 'tees' → logprob: -12.285234451293945
    4. 'tei' → logprob: -12.785234451293945
    5. 'te' → logprob: -13.535234451293945
    6. ' ' → logprob: -14.785234451293945
    7. 'is' → logprob: -14.910234451293945
    8. ' Tee' → logprob: -15.410234451293945
    9. ' tees' → logprob: -16.035234451293945
    10. 'iter' → logprob: -16.160234451293945

Token 49: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -2.339278580620885e-06
    2. 'xs' → logprob: -13.500001907348633
    3. '(' → logprob: -14.625001907348633
    4. 'Xs' → logprob: -15.125001907348633
    5. 's' → logprob: -16.375001907348633
    6. ' xs' → logprob: -17.250001907348633
    7. ' ' → logprob: -19.500001907348633
    8. '(s' → logprob: -20.500001907348633
    9. '(ns' → logprob: -20.750001907348633
    10. '(
' → logprob: -21.000001907348633

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017368246335536242
    2. ',' → logprob: -6.751736640930176
    3. ')
' → logprob: -7.626736640930176
    4. ' )' → logprob: -9.751736640930176
    5. ',)' → logprob: -12.501736640930176
    6. '1' → logprob: -12.626736640930176
    7. 'a' → logprob: -12.751736640930176
    8. ')
' → logprob: -12.876736640930176
    9. '2' → logprob: -13.251736640930176
    10. '   ' → logprob: -14.251736640930176

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029685118352063
    2. ',' → logprob: -9.375296592712402
    3. 'a' → logprob: -9.375296592712402
    4. 'b' → logprob: -10.125296592712402
    5. ' a' → logprob: -10.125296592712402
    6. '<|end|>' → logprob: -10.750296592712402
    7. '  ' → logprob: -12.250296592712402
    8. '    ' → logprob: -12.375296592712402
    9. ' ' → logprob: -12.500296592712402
    10. ' b' → logprob: -12.625296592712402

Token 52: ' next' (ID: 2613)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006961877457797527
    2. '   ' → logprob: -5.381961822509766
    3. 'next' (adapté à ' next') → logprob: -6.631961822509766
    4. 'a' → logprob: -7.756961822509766
    5. '1' → logprob: -8.506961822509766
    6. ' b' → logprob: -8.756961822509766
    7. 'is' → logprob: -9.131961822509766
    8. ' ' → logprob: -9.881961822509766
    9. 'return' → logprob: -10.256961822509766
    10. ' next' → logprob: -10.631961822509766

Token 53: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001029471677611582
    2. '(' → logprob: -9.250102996826172
    3. '(a' → logprob: -12.125102996826172
    4. 'b' → logprob: -13.500102996826172
    5. ' (' → logprob: -17.625102996826172
    6. '(
' → logprob: -17.750102996826172
    7. '	b' → logprob: -18.375102996826172
    8. ' ' → logprob: -18.875102996826172
    9. 'a' → logprob: -19.750102996826172
    10. ')b' → logprob: -20.625102996826172

Token 54: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006377388490363955
    2. ')
' → logprob: -7.875637531280518
    3. ' )' → logprob: -8.750638008117676
    4. '   ' → logprob: -10.500638008117676
    5. '()' → logprob: -10.750638008117676
    6. ',' → logprob: -11.250638008117676
    7. '())' → logprob: -11.500638008117676
    8. 'a' → logprob: -12.625638008117676
    9. ')a' → logprob: -12.625638008117676
    10. ' ' → logprob: -12.750638008117676

Token 55: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07892581075429916
    2. ' None' → logprob: -2.578925848007202
    3. ')' → logprob: -10.578926086425781
    4. ' ' → logprob: -12.453926086425781
    5. '1' → logprob: -13.828926086425781
    6. ' )' → logprob: -13.828926086425781
    7. ' next' → logprob: -14.078926086425781
    8. '  ' → logprob: -14.078926086425781
    9. '(None' → logprob: -14.203926086425781
    10. '0' → logprob: -14.453926086425781

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023369167000055313
    2. ')
' → logprob: -3.773369073867798
    3. ' )' → logprob: -9.523368835449219
    4. ')
' → logprob: -10.523368835449219
    5. ' )
' → logprob: -10.898368835449219
    6. '   ' → logprob: -12.773368835449219
    7. ')

' → logprob: -14.023368835449219
    8. ')a' → logprob: -14.148368835449219
    9. ' ' → logprob: -15.148368835449219
    10. ')b' → logprob: -15.398368835449219

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010998018842656165
    2. '    
' → logprob: -9.500109672546387
    3. '
' → logprob: -10.625109672546387
    4. '<|end|>' → logprob: -11.750109672546387
    5. ',' → logprob: -14.500109672546387
    6. '       ' → logprob: -15.125109672546387
    7. 'return' → logprob: -15.375109672546387
    8. '    ' → logprob: -15.750109672546387
    9. '  
' → logprob: -15.750109672546387
    10. '	return' → logprob: -15.750109672546387

Token 58: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003774908371269703
    2. 'yield' → logprob: -5.753775119781494
    3. ' yield' → logprob: -7.628775119781494
    4. '	yield' → logprob: -9.503774642944336
    5. '    
' → logprob: -11.503774642944336
    6. 'return' (adapté à ' return') → logprob: -11.878774642944336
    7. 'while' → logprob: -12.128774642944336
    8. ',' → logprob: -12.753774642944336
    9. '  ' → logprob: -13.128774642944336
    10. '    ' → logprob: -13.128774642944336

Token 59: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.04866151511669159
    2. ' zip' → logprob: -3.048661470413208
    3. '(zip' → logprob: -10.298661231994629
    4. 'pair' → logprob: -10.423661231994629
    5. 'iz' → logprob: -12.798661231994629
    6. ' ' → logprob: -13.298661231994629
    7. 'list' → logprob: -13.548661231994629
    8. 'a' → logprob: -13.673661231994629
    9. '.zip' → logprob: -14.423661231994629
    10. 'map' → logprob: -14.548661231994629

Token 60: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9027791495318525e-05
    2. '(' → logprob: -10.875019073486328
    3. '((' → logprob: -17.250019073486328
    4. '(b' → logprob: -17.500019073486328
    5. '(ab' → logprob: -18.375019073486328
    6. '(ai' → logprob: -19.250019073486328
    7. '(pair' → logprob: -20.125019073486328
    8. 'a' → logprob: -20.500019073486328
    9. '(A' → logprob: -20.625019073486328
    10. '(
' → logprob: -21.000019073486328

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02133094146847725
    2. ',b' → logprob: -4.021330833435059
    3. ' ,' → logprob: -5.771330833435059
    4. 'b' → logprob: -9.771330833435059
    5. ' b' → logprob: -12.771330833435059
    6. ',
' → logprob: -15.271330833435059
    7. '   ' → logprob: -16.396331787109375
    8. 's' → logprob: -16.771331787109375
    9. '(b' → logprob: -17.146331787109375
    10. '`,' → logprob: -17.521331787109375

Token 62: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02054375410079956
    2. ' b' → logprob: -3.8955438137054443
    3. ')b' → logprob: -13.895544052124023
    4. '	b' → logprob: -14.520544052124023
    5. '   ' → logprob: -15.395544052124023
    6. ' ' → logprob: -15.645544052124023
    7. ')' → logprob: -16.270544052124023
    8. '    ' → logprob: -17.770544052124023
    9. '>b' → logprob: -18.270544052124023
    10. '```' → logprob: -18.583044052124023

Token 63: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -16.750001907348633
    4. '<|end|>' → logprob: -17.750001907348633
    5. ')return' → logprob: -17.875001907348633
    6. ')a' → logprob: -18.375001907348633
    7. '))' → logprob: -18.500001907348633
    8. '}' → logprob: -18.875001907348633
    9. ')

' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.375001907348633

Token 64: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6354328393936157
    2. 'for' → logprob: -2.135432720184326
    3. 'groups' → logprob: -2.260432720184326
    4. 'result' → logprob: -2.385432720184326
    5. 'pairs' → logprob: -2.885432720184326
    6. 'group' → logprob: -3.385432720184326
    7. 'counts' → logprob: -4.385432720184326
    8. 'from' → logprob: -4.510432720184326
    9. 'res' → logprob: -4.635432720184326
    10. 'count' → logprob: -5.760432720184326

Token 65: ' trip' (ID: 8831)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.09306985139846802
    2. ' grou' → logprob: -3.8430697917938232
    3. ' is' → logprob: -4.093070030212402
    4. ' count' → logprob: -4.468070030212402
    5. ' find' → logprob: -5.093070030212402
    6. '_' → logprob: -5.593070030212402
    7. ' grouped' → logprob: -5.593070030212402
    8. 'group' → logprob: -5.718070030212402
    9. ' reduce' → logprob: -6.593070030212402
    10. ' unique' → logprob: -6.593070030212402

Token 66: 'let' (ID: 1347)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.000936355150770396
    2. 'let' → logprob: -7.250936508178711
    3. 'les' → logprob: -9.250936508178711
    4. '```' → logprob: -10.750936508178711
    5. 'wise' → logprob: -11.000936508178711
    6. 'lets' → logprob: -11.125936508178711
    7. 'licate' → logprob: -11.375936508178711
    8. 'def' → logprob: -11.625936508178711
    9. '(' → logprob: -12.250936508178711
    10. 'ple' → logprob: -12.750936508178711

Token 67: 'wise' (ID: 7480)
  Prédit: '(xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.001270589418709278
    2. '(s' → logprob: -6.751270771026611
    3. 's' → logprob: -9.626270294189453
    4. '(' → logprob: -10.376270294189453
    5. '(x' → logprob: -14.376270294189453
    6. 'wise' → logprob: -14.501270294189453
    7. '(ss' → logprob: -14.501270294189453
    8. ' (' → logprob: -14.751270294189453
    9. '(pair' → logprob: -15.126270294189453
    10. 'xs' → logprob: -15.626270294189453

Token 68: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.250035285949707
    3. '(s' → logprob: -15.750035285949707
    4. '(x' → logprob: -16.750036239624023
    5. '(ss' → logprob: -17.000036239624023
    6. '(nums' → logprob: -17.750036239624023
    7. ' (' → logprob: -18.250036239624023
    8. ' xs' → logprob: -19.500036239624023
    9. '(ts' → logprob: -19.875036239624023
    10. '(ns' → logprob: -19.875036239624023

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012248736806213856
    2. '):
' → logprob: -4.512248516082764
    3. ')' → logprob: -6.887248516082764
    4. '):
' → logprob: -9.012248992919922
    5. '   ' → logprob: -10.387248992919922
    6. ' ):' → logprob: -11.387248992919922
    7. '(' → logprob: -12.262248992919922
    8. '):

' → logprob: -12.387248992919922
    9. '(xs' → logprob: -12.387248992919922
    10. ' ' → logprob: -14.012248992919922

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000835120037663728
    2. 'a' → logprob: -7.250834941864014
    3. ' a' → logprob: -9.375835418701172
    4. 's' → logprob: -10.750835418701172
    5. '(a' → logprob: -11.875835418701172
    6. ' return' → logprob: -12.875835418701172
    7. 'def' → logprob: -13.000835418701172
    8. '	a' → logprob: -13.125835418701172
    9. 'return' → logprob: -14.125835418701172
    10. ' s' → logprob: -14.250835418701172

Token 71: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.060910772532224655
    2. ' a' → logprob: -3.060910701751709
    3. '   ' → logprob: -4.435910701751709
    4. ' return' → logprob: -8.685911178588867
    5. 'return' → logprob: -8.685911178588867
    6. ' ' → logprob: -10.185911178588867
    7. '	a' → logprob: -11.185911178588867
    8. 'def' → logprob: -12.810911178588867
    9. 'x' → logprob: -12.935911178588867
    10. '  ' → logprob: -13.185911178588867

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4021237802808173e-05
    2. ',b' → logprob: -11.875014305114746
    3. ' ,' → logprob: -12.000014305114746
    4. 'a' → logprob: -15.000014305114746
    5. 's' → logprob: -15.500014305114746
    6. ',a' → logprob: -15.625014305114746
    7. 'b' → logprob: -15.625014305114746
    8. ' ' → logprob: -17.37501335144043
    9. '‌,' → logprob: -18.12501335144043
    10. ',s' → logprob: -18.50001335144043

Token 73: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132774829864502
    2. ' b' → logprob: -1.3132774829864502
    3. '<|end|>' → logprob: -12.063277244567871
    4. 's' → logprob: -12.688277244567871
    5. ' ' → logprob: -12.688277244567871
    6. 'a' → logprob: -14.313277244567871
    7. '*b' → logprob: -14.688277244567871
    8. '   ' → logprob: -14.688277244567871
    9. ' s' → logprob: -14.813277244567871
    10. '    ' → logprob: -15.063277244567871

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7765353918075562
    2. ' =' → logprob: -0.7765353918075562
    3. '=' → logprob: -2.5265355110168457
    4. ' ,' → logprob: -10.026535034179688
    5. '<|end|>' → logprob: -11.901535034179688
    6. 'b' → logprob: -12.401535034179688
    7. 'c' → logprob: -12.526535034179688
    8. ',b' → logprob: -12.776535034179688
    9. 's' → logprob: -13.026535034179688
    10. ',c' → logprob: -13.651535034179688

Token 75: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011071049608290195
    2. ' c' → logprob: -4.51107120513916
    3. ' =' → logprob: -11.01107120513916
    4. '<|end|>' → logprob: -12.38607120513916
    5. '=' → logprob: -13.76107120513916
    6. ' ' → logprob: -14.51107120513916
    7. '  ' → logprob: -15.51107120513916
    8. ',' → logprob: -16.011070251464844
    9. ',c' → logprob: -16.011070251464844
    10. '_c' → logprob: -16.136070251464844

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693482637405396
    2. '=' → logprob: -2.126934766769409
    3. ',' → logprob: -13.001935005187988
    4. 's' → logprob: -13.126935005187988
    5. '<|end|>' → logprob: -13.251935005187988
    6. ')' → logprob: -14.876935005187988
    7. ' ' → logprob: -15.876935005187988
    8. '<|end|>' → logprob: -16.501934051513672
    9. ' =)' → logprob: -17.439434051513672
    10. ' =
' → logprob: -17.876934051513672

Token 77: ' tee' (ID: 44157)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.023247575387358665
    2. ' tee' → logprob: -3.773247480392456
    3. 'tees' → logprob: -13.773247718811035
    4. ' ' → logprob: -15.273247718811035
    5. 'tea' → logprob: -15.648247718811035
    6. 'te' → logprob: -15.773247718811035
    7. 'tei' → logprob: -16.39824676513672
    8. 'tte' → logprob: -16.77324676513672
    9. 'itee' → logprob: -17.39824676513672
    10. 'ted' → logprob: -17.77324676513672

Token 78: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -3.7697225252486533e-06
    2. 'xs' → logprob: -12.750003814697266
    3. 's' → logprob: -14.500003814697266
    4. '(' → logprob: -15.750003814697266
    5. 'Xs' → logprob: -16.625003814697266
    6. '(s' → logprob: -17.000003814697266
    7. ' xs' → logprob: -17.250003814697266
    8. '(
' → logprob: -18.875003814697266
    9. '(ns' → logprob: -19.000003814697266
    10. '<|end|>' → logprob: -19.375003814697266

Token 79: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6345802545547485
    2. ')
' → logprob: -0.7595802545547485
    3. ',' → logprob: -6.384580135345459
    4. ')
' → logprob: -8.384580612182617
    5. '   ' → logprob: -10.259580612182617
    6. ')

' → logprob: -12.384580612182617
    7. '),' → logprob: -12.509580612182617
    8. 'def' → logprob: -12.884580612182617
    9. '<|end|>' → logprob: -13.009580612182617
    10. '3' → logprob: -13.009580612182617

Token 80: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.6250057220459
    4. '  ' → logprob: -18.8750057220459
    5. ' three' → logprob: -19.3750057220459
    6. '۳' → logprob: -19.6250057220459
    7. ')' → logprob: -19.6250057220459
    8. '=' → logprob: -20.5000057220459
    9. '３' → logprob: -20.8750057220459
    10. 'three' → logprob: -21.2500057220459

Token 81: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '۳' → logprob: -19.625
    4. '３' → logprob: -20.375
    5. 'three' → logprob: -20.75
    6. '৩' → logprob: -21.625
    7. '  ' → logprob: -21.625
    8. ' three' → logprob: -21.625
    9. '   ' → logprob: -21.875
    10. '=' → logprob: -21.875

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011712945997714996
    2. ')
' → logprob: -6.751171112060547
    3. ')
' → logprob: -14.626171112060547
    4. '   ' → logprob: -15.251171112060547
    5. ' )' → logprob: -16.001171112060547
    6. ')

' → logprob: -16.626171112060547
    7. '),' → logprob: -17.001171112060547
    8. ')a' → logprob: -17.251171112060547
    9. ');' → logprob: -17.501171112060547
    10. ')return' → logprob: -18.001171112060547

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000500370399095118
    2. '
' → logprob: -8.000500679016113
    3. 'next' → logprob: -10.000500679016113
    4. ' next' → logprob: -10.125500679016113
    5. ' for' → logprob: -10.750500679016113
    6. '    
' → logprob: -10.750500679016113
    7. '<|end|>' → logprob: -11.375500679016113
    8. ',' → logprob: -11.750500679016113
    9. '  ' → logprob: -12.250500679016113
    10. 'for' → logprob: -12.875500679016113

Token 84: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.00862876046448946
    2. ' next' → logprob: -4.758628845214844
    3. '   ' → logprob: -11.258628845214844
    4. '	next' → logprob: -14.008628845214844
    5. ' ' → logprob: -15.133628845214844
    6. '(next' → logprob: -17.133628845214844
    7. 'Next' → logprob: -17.258628845214844
    8. '_next' → logprob: -17.758628845214844
    9. 'b' → logprob: -17.883628845214844
    10. '  ' → logprob: -18.383628845214844

Token 85: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.6240566083070007e-06
    2. '(a' → logprob: -14.000001907348633
    3. '(' → logprob: -14.750001907348633
    4. 'b' → logprob: -15.000001907348633
    5. '()' → logprob: -19.375001907348633
    6. '(
' → logprob: -19.750001907348633
    7. '(c' → logprob: -20.375001907348633
    8. '	b' → logprob: -20.750001907348633
    9. ' ' → logprob: -21.125001907348633
    10. ')' → logprob: -21.375001907348633

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006078583188354969
    2. ')' → logprob: -5.256078720092773
    3. ' ,' → logprob: -7.506078720092773
    4. '),' → logprob: -8.881078720092773
    5. ',None' → logprob: -9.881078720092773
    6. '(None' → logprob: -10.506078720092773
    7. ')
' → logprob: -10.881078720092773
    8. 'None' → logprob: -11.131078720092773
    9. '
' → logprob: -11.506078720092773
    10. '(' → logprob: -11.756078720092773

Token 87: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.9479302763938904
    2. '1' → logprob: -1.1979303359985352
    3. 'None' → logprob: -1.1979303359985352
    4. ' ' → logprob: -4.822930335998535
    5. '0' → logprob: -7.197930335998535
    6. '(None' → logprob: -10.822930335998535
    7. '_None' → logprob: -12.822930335998535
    8. ' none' → logprob: -13.447930335998535
    9. '2' → logprob: -13.447930335998535
    10. '  ' → logprob: -13.572930335998535

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759893655776978
    2. ')
' → logprob: -0.8259893655776978
    3. ')
' → logprob: -10.075989723205566
    4. '   ' → logprob: -12.825989723205566
    5. ' )
' → logprob: -13.200989723205566
    6. ')

' → logprob: -14.200989723205566
    7. '<|end|>' → logprob: -14.450989723205566
    8. '),' → logprob: -14.575989723205566
    9. ' )' → logprob: -14.825989723205566
    10. ' ' → logprob: -15.200989723205566

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004736041650176048
    2. 'next' → logprob: -5.379735946655273
    3. ' next' → logprob: -9.254735946655273
    4. '    
' → logprob: -11.879735946655273
    5. '<|end|>' → logprob: -12.254735946655273
    6. ',' → logprob: -13.129735946655273
    7. '
' → logprob: -13.504735946655273
    8. ')' → logprob: -13.754735946655273
    9. '```' → logprob: -14.004735946655273
    10. '	next' → logprob: -14.254735946655273

Token 90: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.00026169343618676066
    2. ' next' → logprob: -8.250261306762695
    3. '	next' → logprob: -15.750261306762695
    4. '   ' → logprob: -15.875261306762695
    5. '
' → logprob: -17.125261306762695
    6. '(next' → logprob: -17.250261306762695
    7. '.next' → logprob: -18.750261306762695
    8. '[next' → logprob: -18.875261306762695
    9. ',next' → logprob: -18.875261306762695
    10. 'Next' → logprob: -19.250261306762695

Token 91: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.6789137084269896e-05
    2. '(' → logprob: -10.25003719329834
    3. ' (' → logprob: -14.12503719329834
    4. 'c' → logprob: -14.37503719329834
    5. '(
' → logprob: -16.375036239624023
    6. '(ci' → logprob: -17.250036239624023
    7. ' ' → logprob: -17.750036239624023
    8. ')c' → logprob: -18.250036239624023
    9. ' c' → logprob: -18.500036239624023
    10. '(b' → logprob: -18.625036239624023

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016230491921305656
    2. 'b' → logprob: -4.516230583190918
    3. ',b' → logprob: -5.641230583190918
    4. '(b' → logprob: -6.516230583190918
    5. ' ' → logprob: -10.516230583190918
    6. ')' → logprob: -10.641230583190918
    7. 'c' → logprob: -10.766230583190918
    8. ' ,' → logprob: -11.016230583190918
    9. 'a' → logprob: -11.266230583190918
    10. ',c' → logprob: -11.266230583190918

Token 93: ' None' (ID: 4662)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1517675668001175
    2. '2' → logprob: -2.6517674922943115
    3. ' ' → logprob: -3.4017674922943115
    4. 'None' → logprob: -3.6517674922943115
    5. ' None' → logprob: -4.526767730712891
    6. 'b' → logprob: -9.15176773071289
    7. ' b' → logprob: -10.65176773071289
    8. ' next' → logprob: -10.65176773071289
    9. 'next' → logprob: -10.77676773071289
    10. '   ' → logprob: -10.90176773071289

Token 94: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5459827184677124
    2. ')' → logprob: -0.9209827184677124
    3. ')
' → logprob: -4.795982837677002
    4. ',None' → logprob: -5.170982837677002
    5. '<|end|>' → logprob: -5.795982837677002
    6. '2' → logprob: -5.795982837677002
    7. '),' → logprob: -7.045982837677002
    8. '<|end|>' → logprob: -8.045982360839844
    9. ' ' → logprob: -8.420982360839844
    10. ');' → logprob: -8.420982360839844

Token 95: '   ' (ID: 271)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.13409151136875153
    2. 'None' → logprob: -2.38409161567688
    3. '1' → logprob: -4.634091377258301
    4. ' next' → logprob: -4.884091377258301
    5. '<|end|>' → logprob: -5.134091377258301
    6. '2' → logprob: -5.259091377258301
    7. '<|end|>' → logprob: -6.384091377258301
    8. ' None' → logprob: -6.884091377258301
    9. 'Next' → logprob: -8.3840913772583
    10. ',None' → logprob: -8.3840913772583

Token 96: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.00011152983643114567
    2. ' next' → logprob: -9.12511157989502
    3. '(next' → logprob: -14.00011157989502
    4. 'None' → logprob: -14.50011157989502
    5. '	next' → logprob: -14.75011157989502
    6. '_next' → logprob: -15.50011157989502
    7. 'none' → logprob: -15.87511157989502
    8. 'Next' → logprob: -15.87511157989502
    9. '.next' → logprob: -16.250110626220703
    10. '[next' → logprob: -16.250110626220703

Token 97: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0001246348983841017
    2. '(' → logprob: -10.00012493133545
    3. '(b' → logprob: -10.12512493133545
    4. 'c' → logprob: -10.25012493133545
    5. 'b' → logprob: -13.37512493133545
    6. ')c' → logprob: -13.87512493133545
    7. '(
' → logprob: -14.75012493133545
    8. '<|end|>' → logprob: -15.37512493133545
    9. ')' → logprob: -16.250123977661133
    10. ' (' → logprob: -16.375123977661133

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012685162015259266
    2. 'b' → logprob: -4.887685298919678
    3. ')' → logprob: -5.887685298919678
    4. ',b' → logprob: -6.387685298919678
    5. '(b' → logprob: -8.01268482208252
    6. '(None' → logprob: -9.38768482208252
    7. '<|end|>' → logprob: -9.76268482208252
    8. '),' → logprob: -10.01268482208252
    9. ',None' → logprob: -10.38768482208252
    10. '(' → logprob: -10.51268482208252

Token 99: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.015319209545850754
    2. ' None' → logprob: -4.265319347381592
    3. '1' → logprob: -7.015319347381592
    4. '2' → logprob: -8.390318870544434
    5. ' ' → logprob: -10.515318870544434
    6. '(None' → logprob: -13.890318870544434
    7. '0' → logprob: -14.390318870544434
    8. ',None' → logprob: -14.515318870544434
    9. '_None' → logprob: -15.015318870544434
    10. '=None' → logprob: -16.39031982421875

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004708276130259037
    2. '   ' → logprob: -5.504708290100098
    3. ')
' → logprob: -7.379708290100098
    4. ')return' → logprob: -12.754708290100098
    5. ' )' → logprob: -13.504708290100098
    6. 'return' → logprob: -14.629708290100098
    7. '<|end|>' → logprob: -15.629708290100098
    8. 'def' → logprob: -15.754708290100098
    9. ')
' → logprob: -15.754708290100098
    10. ')

' → logprob: -16.12970733642578

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002705145161598921
    2. 'return' → logprob: -8.25027084350586
    3. ' return' → logprob: -12.00027084350586
    4. '	return' → logprob: -13.50027084350586
    5. ')' → logprob: -14.12527084350586
    6. '    
' → logprob: -15.25027084350586
    7. ':return' → logprob: -15.62527084350586
    8. '<|end|>' → logprob: -15.62527084350586
    9. ' ' → logprob: -15.87527084350586
    10. ',' → logprob: -16.00027084350586

Token 102: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00640235748142004
    2. '   ' → logprob: -5.256402492523193
    3. ' return' → logprob: -6.756402492523193
    4. '	return' → logprob: -13.381402015686035
    5. '```' → logprob: -13.756402015686035
    6. ')' → logprob: -14.506402015686035
    7. ')return' → logprob: -15.256402015686035
    8. '  ' → logprob: -15.381402015686035
    9. ':return' → logprob: -15.381402015686035
    10. ' ' → logprob: -15.631402015686035

Token 103: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.014170562848448753
    2. ' zip' → logprob: -4.2641706466674805
    3. '(zip' → logprob: -12.38917064666748
    4. ' ' → logprob: -13.26417064666748
    5. 'trip' → logprob: -14.63917064666748
    6. '.zip' → logprob: -15.38917064666748
    7. '   ' → logprob: -15.76417064666748
    8. '  ' → logprob: -15.76417064666748
    9. 'tuple' → logprob: -16.264169692993164
    10. 'z' → logprob: -17.139169692993164

Token 104: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. '(c' → logprob: -16.00002098083496
    4. '(
' → logprob: -17.50002098083496
    5. '<|end|>' → logprob: -17.62502098083496
    6. '(ab' → logprob: -18.62502098083496
    7. '(ai' → logprob: -18.75002098083496
    8. '(b' → logprob: -19.12502098083496
    9. '((' → logprob: -19.62502098083496
    10. '(ax' → logprob: -19.75002098083496

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020914296328555793
    2. ' ,' → logprob: -9.000208854675293
    3. ',b' → logprob: -9.375208854675293
    4. 'b' → logprob: -14.750208854675293
    5. ',
' → logprob: -15.375208854675293
    6. ')' → logprob: -17.37520980834961
    7. '<|end|>' → logprob: -17.37520980834961
    8. ',c' → logprob: -17.50020980834961
    9. ' b' → logprob: -17.50020980834961
    10. 's' → logprob: -17.75020980834961

Token 106: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141547918319702
    2. ' b' → logprob: -1.7014155387878418
    3. 'c' → logprob: -13.951415061950684
    4. ' c' → logprob: -14.326415061950684
    5. ')b' → logprob: -14.951415061950684
    6. ' ' → logprob: -16.326416015625
    7. ')' → logprob: -16.326416015625
    8. '	b' → logprob: -16.326416015625
    9. ',b' → logprob: -16.451416015625
    10. '<|end|>' → logprob: -17.326416015625

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011248346709180623
    2. ',c' → logprob: -9.625112533569336
    3. ' ,' → logprob: -10.125112533569336
    4. 'c' → logprob: -12.125112533569336
    5. ')' → logprob: -14.625112533569336
    6. '   ' → logprob: -15.750112533569336
    7. ' c' → logprob: -16.750112533569336
    8. ',
' → logprob: -17.500112533569336
    9. '),' → logprob: -17.500112533569336
    10. ')c' → logprob: -17.875112533569336

Token 108: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014165744185447693
    2. ' c' → logprob: -4.264165878295898
    3. ')c' → logprob: -13.139165878295898
    4. '	c' → logprob: -15.889165878295898
    5. '<|end|>' → logprob: -16.5141658782959
    6. ' ' → logprob: -16.5141658782959
    7. ')' → logprob: -16.6391658782959
    8. '   ' → logprob: -19.5141658782959
    9. '
' → logprob: -19.5141658782959
    10. '  ' → logprob: -19.5141658782959

Token 109: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.875
    3. '))' → logprob: -17.75
    4. ')`' → logprob: -18.25
    5. ' )' → logprob: -18.625
    6. ')}' → logprob: -19.25
    7. '),' → logprob: -19.375
    8. ')#' → logprob: -19.5
    9. ')a' → logprob: -19.625
    10. '<|end|>' → logprob: -20.0

Token 110: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2618192136287689
    2. 'n' → logprob: -2.8868191242218018
    3. 'for' → logprob: -2.8868191242218018
    4. 'def' → logprob: -3.7618191242218018
    5. '#' → logprob: -4.011819362640381
    6. 'a' → logprob: -4.511819362640381
    7. ':' → logprob: -4.761819362640381
    8. '[' → logprob: -5.011819362640381
    9. ' for' → logprob: -5.011819362640381
    10. '   ' → logprob: -5.136819362640381

Token 111: ' check' (ID: 2371)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.8080308437347412
    2. ' is' → logprob: -1.9330308437347412
    3. 'count' → logprob: -2.183030843734741
    4. 'max' → logprob: -2.558030843734741
    5. ' count' → logprob: -2.558030843734741
    6. 'main' → logprob: -3.183030843734741
    7. ' run' → logprob: -3.183030843734741
    8. ' main' → logprob: -3.183030843734741
    9. ' max' → logprob: -3.308030843734741
    10. 'run' → logprob: -3.558030843734741

Token 112: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7015703320503235
    2. '(a' → logprob: -0.8265703320503235
    3. '(n' → logprob: -4.326570510864258
    4. '(s' → logprob: -4.326570510864258
    5. '(nums' → logprob: -4.451570510864258
    6. '(x' → logprob: -4.576570510864258
    7. '():' → logprob: -4.951570510864258
    8. '(xs' → logprob: -6.076570510864258
    9. '(arr' → logprob: -6.576570510864258
    10. '_' → logprob: -6.701570510864258

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05559858679771423
    2. ',' → logprob: -3.055598497390747
    3. ')' → logprob: -5.555598735809326
    4. '):
' → logprob: -6.430598735809326
    5. ' ):' → logprob: -6.930598735809326
    6. ' ,' → logprob: -8.430598258972168
    7. '   ' → logprob: -10.055598258972168
    8. ',i' → logprob: -10.180598258972168
    9. ' ' → logprob: -10.430598258972168
    10. '+' → logprob: -10.555598258972168

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009934457018971443
    2. ' return' → logprob: -5.009934425354004
    3. ' if' → logprob: -6.509934425354004
    4. ' a' → logprob: -7.759934425354004
    5. '    ' → logprob: -8.509934425354004
    6. ' for' → logprob: -8.509934425354004
    7. ':' → logprob: -8.634934425354004
    8. '    
' → logprob: -8.759934425354004
    9. 'return' → logprob: -9.009934425354004
    10. ' ' → logprob: -9.009934425354004

Token 115: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0653905868530273
    2. 'return' → logprob: -1.1903905868530273
    3. '   ' → logprob: -2.4403905868530273
    4. ' if' → logprob: -2.5653905868530273
    5. 'x' → logprob: -2.6903905868530273
    6. ' return' → logprob: -2.8153905868530273
    7. ' x' → logprob: -4.065390586853027
    8. 'for' → logprob: -4.565390586853027
    9. 'a' → logprob: -4.690390586853027
    10. 'l' (adapté à ' l') → logprob: -5.690390586853027

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2717646360397339
    2. '=' → logprob: -1.3967646360397339
    3. 'ist' → logprob: -1.8967646360397339
    4. '   ' → logprob: -2.1467647552490234
    5. 'i' → logprob: -3.2717647552490234
    6. 'st' → logprob: -3.6467647552490234
    7. 'e' → logprob: -3.6467647552490234
    8. 'ine' → logprob: -4.021764755249023
    9. 'et' → logprob: -4.146764755249023
    10. 'en' → logprob: -4.396764755249023

Token 117: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45205825567245483
    2. 'i' → logprob: -2.3270583152770996
    3. ' a' → logprob: -2.5770583152770996
    4. '[i' → logprob: -2.5770583152770996
    5. ' i' → logprob: -3.8270583152770996
    6. 'n' → logprob: -4.2020583152771
    7. '[a' → logprob: -4.2020583152771
    8. 'len' → logprob: -4.7020583152771
    9. 'trip' → logprob: -4.7020583152771
    10. ' [' → logprob: -4.7020583152771

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02967989817261696
    2. '[:' → logprob: -4.029679775238037
    3. '[max' → logprob: -4.529679775238037
    4. '[' → logprob: -8.029680252075195
    5. 'max' → logprob: -8.279680252075195
    6. '[:]' → logprob: -10.654680252075195
    7. '[
' → logprob: -11.154680252075195
    8. 'i' → logprob: -11.529680252075195
    9. '[min' → logprob: -11.904680252075195
    10. '[::-' → logprob: -12.029680252075195

Token 119: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8704782128334045
    2. ':i' → logprob: -1.3704781532287598
    3. ':' → logprob: -1.9954781532287598
    4. '-' → logprob: -1.9954781532287598
    5. ' -' → logprob: -3.8704781532287598
    6. '+' → logprob: -4.12047815322876
    7. '],' → logprob: -4.37047815322876
    8. ' :' → logprob: -6.49547815322876
    9. ' +' → logprob: -7.24547815322876
    10. '])' → logprob: -7.24547815322876

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18023313581943512
    2. '2' → logprob: -1.805233120918274
    3. '3' → logprob: -7.680233001708984
    4. ']' → logprob: -11.805233001708984
    5. '-' → logprob: -12.180233001708984
    6. '])' → logprob: -12.867733001708984
    7. '4' → logprob: -13.180233001708984
    8. 'i' → logprob: -13.367733001708984
    9. '0' → logprob: -13.680233001708984
    10. ' ' → logprob: -13.992733001708984

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5782896280288696
    2. '],' → logprob: -1.0782896280288696
    3. ':i' → logprob: -2.32828950881958
    4. ':' → logprob: -7.07828950881958
    5. '])' → logprob: -8.203289985656738
    6. ' :' → logprob: -9.453289985656738
    7. ']
' → logprob: -9.953289985656738
    8. ']+' → logprob: -10.203289985656738
    9. ']-' → logprob: -10.203289985656738
    10. '-' → logprob: -10.578289985656738

Token 122: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3709659278392792
    2. '-' → logprob: -2.1209659576416016
    3. '+' → logprob: -2.6209659576416016
    4. ' -' → logprob: -3.8709659576416016
    5. ',i' → logprob: -3.8709659576416016
    6. '[' → logprob: -4.620965957641602
    7. 'a' → logprob: -4.620965957641602
    8. 'i' → logprob: -4.745965957641602
    9. ' ' → logprob: -4.870965957641602
    10. ' +' → logprob: -5.120965957641602

Token 123: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08900491148233414
    2. 'i' → logprob: -2.4640049934387207
    3. '0' → logprob: -10.214004516601562
    4. ' ' → logprob: -11.089004516601562
    5. '(i' → logprob: -12.714004516601562
    6. ' ' → logprob: -12.839004516601562
    7. '1' → logprob: -13.089004516601562
    8. ' (' → logprob: -13.214004516601562
    9. '(' → logprob: -14.089004516601562
    10. ' isinstance' → logprob: -14.339004516601562

Token 124: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6273502111434937
    2. ' >' → logprob: -0.8773502111434937
    3. '-' → logprob: -3.377350330352783
    4. '0' → logprob: -4.377350330352783
    5. ' -' → logprob: -7.002350330352783
    6. ' ' → logprob: -7.127350330352783
    7. ')' → logprob: -7.752350330352783
    8. '<|end|>' → logprob: -8.627349853515625
    9. ' i' → logprob: -9.377349853515625
    10. ' <' → logprob: -9.377349853515625

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023258639499545097
    2. ' ' → logprob: -3.773258686065674
    3. '=' → logprob: -11.523258209228516
    4. '   ' → logprob: -13.773258209228516
    5. '  ' → logprob: -14.023258209228516
    6. '1' → logprob: -14.273258209228516
    7. '>' → logprob: -16.398258209228516
    8. '    ' → logprob: -16.523258209228516
    9. ' ' → logprob: -16.523258209228516
    10. '```' → logprob: -16.648258209228516

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031865055207163095
    2. ' ' → logprob: -5.7531867027282715
    3. '1' → logprob: -12.128186225891113
    4. '=' → logprob: -14.565686225891113
    5. '   ' → logprob: -14.628186225891113
    6. '  ' → logprob: -14.628186225891113
    7. 'i' → logprob: -14.690686225891113
    8. '-' → logprob: -15.378186225891113
    9. 'a' → logprob: -16.25318717956543
    10. '2' → logprob: -16.31568717956543

Token 127: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2519785761833191
    2. 'else' → logprob: -1.5019786357879639
    3. ' ' → logprob: -10.626978874206543
    4. '-' → logprob: -11.751978874206543
    5. '   ' → logprob: -12.376978874206543
    6. '    ' → logprob: -12.751978874206543
    7. '	else' → logprob: -13.001978874206543
    8. '[]' → logprob: -13.001978874206543
    9. ',' → logprob: -13.751978874206543
    10. ' -' → logprob: -14.376978874206543

Token 128: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.8669201135635376
    2. ' None' → logprob: -1.7419201135635376
    3. 'float' → logprob: -1.9919201135635376
    4. ' float' → logprob: -2.366919994354248
    5. '0' → logprob: -2.491919994354248
    6. '-' → logprob: -2.991919994354248
    7. ' -' → logprob: -4.116919994354248
    8. ' ' → logprob: -4.866919994354248
    9. '   ' → logprob: -5.241919994354248
    10. 'a' → logprob: -5.616919994354248

Token 129: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08745457977056503
    2. '
' → logprob: -3.5874545574188232
    3. ',' → logprob: -3.9624545574188232
    4. '    
' → logprob: -4.462454795837402
    5. ' 
' → logprob: -5.212454795837402
    6. 'a' → logprob: -5.462454795837402
    7. ' ' → logprob: -5.837454795837402
    8. 'n' → logprob: -6.337454795837402
    9. ' if' → logprob: -6.462454795837402
    10. ' return' → logprob: -7.087454795837402

Token 130: '   ' (ID: 271)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5809774994850159
    2. 'r' → logprob: -1.080977439880371
    3. '   ' → logprob: -2.455977439880371
    4. ',' → logprob: -4.455977439880371
    5. ' ' → logprob: -7.330977439880371
    6. 'n' → logprob: -7.455977439880371
    7. ' ,' → logprob: -7.455977439880371
    8. ',
' → logprob: -7.955977439880371
    9. '    
' → logprob: -7.955977439880371
    10. ' c' → logprob: -8.205977439880371

Token 131: ' m' (ID: 284)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34656378626823425
    2. 'x' → logprob: -2.2215638160705566
    3. 'r' → logprob: -2.3465638160705566
    4. 'm' (adapté à ' m') → logprob: -3.3465638160705566
    5. 'curr' → logprob: -3.9715638160705566
    6. ' c' → logprob: -4.221563816070557
    7. 'current' → logprob: -5.346563816070557
    8. 'v' → logprob: -5.471563816070557
    9. ' x' → logprob: -5.721563816070557
    10. ' r' → logprob: -6.096563816070557

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687655329704285
    2. ' =' → logprob: -1.1368765830993652
    3. ' ' → logprob: -13.011876106262207
    4. '=a' → logprob: -14.011876106262207
    5. 'a' → logprob: -14.136876106262207
    6. ',' → logprob: -14.761876106262207
    7. ' ' → logprob: -14.886876106262207
    8. ' a' → logprob: -15.136876106262207
    9. '   ' → logprob: -15.636876106262207
    10. '  ' → logprob: -16.386877059936523

Token 133: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014178436249494553
    2. ' a' → logprob: -4.264178276062012
    3. '   ' → logprob: -11.264178276062012
    4. ' ' → logprob: -13.889178276062012
    5. '  ' → logprob: -14.139178276062012
    6. '	a' → logprob: -15.514178276062012
    7. '    ' → logprob: -15.764178276062012
    8. 'None' → logprob: -17.264179229736328
    9. '(a' → logprob: -17.826679229736328
    10. 'i' → logprob: -17.951679229736328

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. 'i' → logprob: -12.500003814697266
    3. '[' → logprob: -16.125003814697266
    4. '[
' → logprob: -18.375003814697266
    5. ' [' → logprob: -18.625003814697266
    6. '{i' → logprob: -18.750003814697266
    7. '(i' → logprob: -19.000003814697266
    8. ' i' → logprob: -19.125003814697266
    9. '   ' → logprob: -19.375003814697266
    10. ',i' → logprob: -20.500003814697266

Token 135: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012740365229547024
    2. '<|end|>' → logprob: -4.637740135192871
    3. '[' → logprob: -7.012740135192871
    4. 'if' → logprob: -7.387740135192871
    5. ')' → logprob: -8.012740135192871
    6. '[i' → logprob: -8.137740135192871
    7. '<|end|>' → logprob: -8.137740135192871
    8. ' ]' → logprob: -9.262740135192871
    9. '+' → logprob: -9.387740135192871
    10. ']
' → logprob: -9.512740135192871

Token 136: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04655437916517258
    2. '   ' → logprob: -3.1715543270111084
    3. ' r' → logprob: -5.6715545654296875
    4. '    
' → logprob: -9.796554565429688
    5. '
' → logprob: -11.671554565429688
    6. '	r' → logprob: -11.671554565429688
    7. '  ' → logprob: -12.046554565429688
    8. ' ' → logprob: -12.171554565429688
    9. '    ' → logprob: -12.421554565429688
    10. '<|end|>' → logprob: -12.796554565429688

Token 137: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.8312570318812504e-05
    2. ' r' → logprob: -11.500018119812012
    3. 'u' → logprob: -12.500018119812012
    4. '
' → logprob: -13.125018119812012
    5. '   ' → logprob: -13.500018119812012
    6. '    
' → logprob: -14.125018119812012
    7. 'h' → logprob: -16.625019073486328
    8. 'if' → logprob: -16.750019073486328
    9. '_r' → logprob: -17.375019073486328
    10. '```' → logprob: -17.375019073486328

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.311967849731445
    4. 'a' → logprob: -17.561967849731445
    5. '=a' → logprob: -17.811967849731445
    6. '=
' → logprob: -19.061967849731445
    7. '=

' → logprob: -19.936967849731445
    8. ' a' → logprob: -20.061967849731445
    9. 's' → logprob: -20.311967849731445
    10. ' ' → logprob: -20.436967849731445

Token 139: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036022020503878593
    2. ' a' → logprob: -5.628602027893066
    3. '   ' → logprob: -13.378602027893066
    4. ' ' → logprob: -15.503602027893066
    5. '	a' → logprob: -16.003602981567383
    6. '(a' → logprob: -16.628602981567383
    7. 'None' → logprob: -17.628602981567383
    8. ''a' → logprob: -17.753602981567383
    9. '_a' → logprob: -17.941102981567383
    10. '  ' → logprob: -18.378602981567383

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. 'i' → logprob: -12.125008583068848
    3. ' [' → logprob: -13.000008583068848
    4. '[' → logprob: -14.000008583068848
    5. '[
' → logprob: -15.750008583068848
    6. ' i' → logprob: -15.750008583068848
    7. '   ' → logprob: -17.750009536743164
    8. '
' → logprob: -17.875009536743164
    9. ',i' → logprob: -17.875009536743164
    10. '(i' → logprob: -18.000009536743164

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011848729336634278
    2. ' +' → logprob: -7.001184940338135
    3. '-' → logprob: -8.876184463500977
    4. '1' → logprob: -9.501184463500977
    5. ']' → logprob: -9.876184463500977
    6. '+
' → logprob: -13.251184463500977
    7. ']+' → logprob: -13.251184463500977
    8. ' ' → logprob: -13.751184463500977
    9. '+]' → logprob: -14.376184463500977
    10. '   ' → logprob: -14.626184463500977

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003361774142831564
    2. ' ' → logprob: -8.000336647033691
    3. ']' → logprob: -15.062836647033691
    4. '```' → logprob: -15.937836647033691
    5. '   ' → logprob: -16.500335693359375
    6. '  ' → logprob: -16.750335693359375
    7. '2' → logprob: -16.750335693359375
    8. ')' → logprob: -17.062835693359375
    9. ' ' → logprob: -17.750335693359375
    10. '0' → logprob: -18.062835693359375

Token 143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3658190667629242
    2. ' if' → logprob: -1.3658190965652466
    3. 'if' → logprob: -3.115818977355957
    4. ')' → logprob: -4.990818977355957
    5. ' ]' → logprob: -10.740818977355957
    6. ' ' → logprob: -10.990818977355957
    7. '}' → logprob: -12.240818977355957
    8. ')]' → logprob: -12.490818977355957
    9. '<|end|>' → logprob: -12.865818977355957
    10. '   ' → logprob: -13.115818977355957

Token 144: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04858839511871338
    2. 'if' → logprob: -3.048588275909424
    3. '	if' → logprob: -15.048588752746582
    4. '   ' → logprob: -15.173588752746582
    5. ' ' → logprob: -16.173587799072266
    6. '()' → logprob: -16.548587799072266
    7. '<|end|>' → logprob: -16.548587799072266
    8. 'If' → logprob: -16.673587799072266
    9. ' ' → logprob: -17.048587799072266
    10. ')' → logprob: -17.048587799072266

Token 145: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11331246793270111
    2. 'i' → logprob: -2.2383124828338623
    3. ' (' → logprob: -7.863312244415283
    4. '(i' → logprob: -9.988312721252441
    5. ' ' → logprob: -10.238312721252441
    6. '  ' → logprob: -11.988312721252441
    7. '(' → logprob: -12.113312721252441
    8. ' len' → logprob: -12.363312721252441
    9. 'len' → logprob: -13.238312721252441
    10. ' ' → logprob: -13.363312721252441

Token 146: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5597569942474365
    2. ' <' → logprob: -0.9347569942474365
    3. '+' → logprob: -4.184757232666016
    4. '<len' → logprob: -4.684757232666016
    5. ' ' → logprob: -4.809757232666016
    6. '<n' → logprob: -6.184757232666016
    7. 'n' → logprob: -8.184757232666016
    8. '<size' → logprob: -8.434757232666016
    9. 'len' → logprob: -9.059757232666016
    10. ' +' → logprob: -9.184757232666016

Token 147: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.37295642495155334
    2. 'n' → logprob: -1.622956395149231
    3. ' len' → logprob: -2.7479565143585205
    4. ' n' → logprob: -2.9979565143585205
    5. '(len' → logprob: -10.372956275939941
    6. ' ' → logprob: -12.122956275939941
    7. '(n' → logprob: -12.372956275939941
    8. ' (' → logprob: -14.747956275939941
    9. '(' → logprob: -15.622956275939941
    10. '   ' → logprob: -15.622956275939941

Token 148: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.8206473871250637e-05
    2. 'a' → logprob: -10.500028610229492
    3. '(' → logprob: -14.500028610229492
    4. '-' → logprob: -16.250028610229492
    5. ' a' → logprob: -17.750028610229492
    6. ' (' → logprob: -17.875028610229492
    7. '(n' → logprob: -18.375028610229492
    8. ' -' → logprob: -19.250028610229492
    9. ' ' → logprob: -19.375028610229492
    10. '(ai' → logprob: -19.375028610229492

Token 149: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10196907073259354
    2. ')-' → logprob: -2.601969003677368
    3. '-' → logprob: -3.851969003677368
    4. 'a' → logprob: -6.851969242095947
    5. ' -' → logprob: -8.101968765258789
    6. ' )' → logprob: -8.851968765258789
    7. ' ' → logprob: -9.851968765258789
    8. '1' → logprob: -11.851968765258789
    9. '   ' → logprob: -12.351968765258789
    10. 'n' → logprob: -13.851968765258789

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009128939709626138
    2. ' ' → logprob: -7.000912666320801
    3. '2' → logprob: -14.3759126663208
    4. '   ' → logprob: -15.2509126663208
    5. '  ' → logprob: -15.6259126663208
    6. '```' → logprob: -16.313413619995117
    7. '3' → logprob: -17.750913619995117
    8. '
' → logprob: -17.875913619995117
    9. '0' → logprob: -17.875913619995117
    10. '

' → logprob: -18.000913619995117

Token 151: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018151583150029182
    2. 'else' → logprob: -4.018151760101318
    3. ' ' → logprob: -13.51815128326416
    4. ' ' → logprob: -16.643152236938477
    5. '	else' → logprob: -16.893152236938477
    6. '<|end|>' → logprob: -17.893152236938477
    7. '   ' → logprob: -18.018152236938477
    8. ' None' → logprob: -18.268152236938477
    9. '```' → logprob: -18.393152236938477
    10. '        ' → logprob: -18.643152236938477

Token 152: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018150178715586662
    2. ' None' → logprob: -4.018150329589844
    3. '(None' → logprob: -15.643150329589844
    4. 'a' → logprob: -16.893150329589844
    5. ' ' → logprob: -16.893150329589844
    6. '   ' → logprob: -17.393150329589844
    7. '_None' → logprob: -17.893150329589844
    8. ',None' → logprob: -18.018150329589844
    9. '0' → logprob: -18.393150329589844
    10. '=None' → logprob: -18.393150329589844

Token 153: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031822288874536753
    2. '<|end|>' → logprob: -6.128182411193848
    3. '    
' → logprob: -8.003182411193848
    4. '
' → logprob: -8.128182411193848
    5. 'return' → logprob: -9.128182411193848
    6. ')' → logprob: -9.378182411193848
    7. '<|end|>' → logprob: -9.753182411193848
    8. ' return' → logprob: -9.878182411193848
    9. '```' → logprob: -11.753182411193848
    10. '   
' → logprob: -11.878182411193848

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013980952790006995
    2. ')' → logprob: -8.001398086547852
    3. '    
' → logprob: -8.001398086547852
    4. '<|end|>' → logprob: -8.126398086547852
    5. ' 
' → logprob: -9.001398086547852
    6. ',' → logprob: -9.376398086547852
    7. ':' → logprob: -10.376398086547852
    8. '  
' → logprob: -10.626398086547852
    9. '   
' → logprob: -10.626398086547852
    10. '
' → logprob: -10.751398086547852

Token 155: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00872199796140194
    2. 'return' → logprob: -5.883721828460693
    3. 'if' (adapté à ' if') → logprob: -6.008721828460693
    4. ' if' → logprob: -6.383721828460693
    5. ' return' → logprob: -7.008721828460693
    6. ')' → logprob: -7.758721828460693
    7. '    
' → logprob: -8.883722305297852
    8. '
' → logprob: -10.133722305297852
    9. ' 
' → logprob: -10.508722305297852
    10. ',' → logprob: -10.758722305297852

Token 156: ' l' (ID: 305)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.244479775428772
    2. '(m' → logprob: -1.369479775428772
    3. '(l' → logprob: -1.619479775428772
    4. ' l' → logprob: -2.2444796562194824
    5. 'm' → logprob: -2.9944796562194824
    6. 'l' → logprob: -2.9944796562194824
    7. ' m' → logprob: -3.1194796562194824
    8. '(' → logprob: -4.994479656219482
    9. '   ' → logprob: -7.369479656219482
    10. '((' → logprob: -7.619479656219482

Token 157: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.05152302607893944
    2. 'is' → logprob: -3.051522970199585
    3. '>' → logprob: -6.926523208618164
    4. ' and' → logprob: -7.301523208618164
    5. 'and' → logprob: -7.676523208618164
    6. ' >' → logprob: -8.551523208618164
    7. ')' → logprob: -9.051523208618164
    8. '==' → logprob: -9.176523208618164
    9. ' <' → logprob: -9.301523208618164
    10. '<' → logprob: -9.426523208618164

Token 158: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.41155216097831726
    2. 'None' → logprob: -1.2865521907806396
    3. ' not' → logprob: -2.9115521907806396
    4. ' None' → logprob: -5.0365519523620605
    5. 'n' → logprob: -9.411552429199219
    6. 'm' → logprob: -9.536552429199219
    7. 'none' → logprob: -10.036552429199219
    8. 'Not' → logprob: -10.411552429199219
    9. 'N' → logprob: -11.161552429199219
    10. ' ' → logprob: -12.286552429199219

Token 159: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0046318573877215385
    2. ' None' → logprob: -5.379631996154785
    3. 'N' → logprob: -12.879631996154785
    4. 'not' → logprob: -13.254631996154785
    5. 'm' → logprob: -14.004631996154785
    6. '(None' → logprob: -14.004631996154785
    7. ' ' → logprob: -14.254631996154785
    8. 'none' → logprob: -14.254631996154785
    9. 'a' → logprob: -14.254631996154785
    10. 'n' → logprob: -14.379631996154785

Token 160: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11308679729700089
    2. 'and' → logprob: -2.238086700439453
    3. '   ' → logprob: -8.363086700439453
    4. ' ' → logprob: -10.988086700439453
    5. ':' → logprob: -12.363086700439453
    6. ')' → logprob: -12.363086700439453
    7. '	and' → logprob: -13.363086700439453
    8. '    ' → logprob: -13.988086700439453
    9. '  ' → logprob: -13.988086700439453
    10. ',' → logprob: -14.613086700439453

Token 161: ' r' (ID: 428)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.49699780344963074
    2. ' m' → logprob: -1.3719978332519531
    3. 'l' → logprob: -2.496997833251953
    4. ' l' → logprob: -3.121997833251953
    5. '(m' → logprob: -5.746997833251953
    6. 'eq' → logprob: -5.871997833251953
    7. ' (' → logprob: -6.371997833251953
    8. ' eq' → logprob: -6.746997833251953
    9. ' not' → logprob: -6.996997833251953
    10. '((' → logprob: -7.621997833251953

Token 162: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005178728140890598
    2. ' and' → logprob: -5.880178928375244
    3. 'is' → logprob: -6.755178928375244
    4. 'and' → logprob: -6.880178928375244
    5. '<|end|>' → logprob: -9.880178451538086
    6. ' ' → logprob: -10.505178451538086
    7. '<|end|>' → logprob: -10.505178451538086
    8. ')' → logprob: -10.880178451538086
    9. '>' → logprob: -10.880178451538086
    10. '   ' → logprob: -12.380178451538086

Token 163: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1825745403766632
    2. 'not' → logprob: -1.8075745105743408
    3. 'None' → logprob: -6.55757474899292
    4. ' None' → logprob: -6.68257474899292
    5. 'Not' → logprob: -10.432574272155762
    6. 'l' → logprob: -10.682574272155762
    7. '	not' → logprob: -10.807574272155762
    8. 'm' → logprob: -11.057574272155762
    9. ' ' → logprob: -11.182574272155762
    10. ' m' → logprob: -11.432574272155762

Token 164: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008630638010799885
    2. ' None' → logprob: -4.758630752563477
    3. 'not' → logprob: -12.633630752563477
    4. '(None' → logprob: -12.633630752563477
    5. '_None' → logprob: -12.883630752563477
    6. 'none' → logprob: -13.258630752563477
    7. '=None' → logprob: -13.633630752563477
    8. 'a' → logprob: -13.883630752563477
    9. '   ' → logprob: -14.008630752563477
    10. ' ' → logprob: -14.883630752563477

Token 165: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2005406618118286
    2. ':' → logprob: -2.200540542602539
    3. 'and' → logprob: -3.450540542602539
    4. '       ' → logprob: -3.950540542602539
    5. ':
' → logprob: -4.200540542602539
    6. '   ' → logprob: -5.325540542602539
    7. ',' → logprob: -10.075540542602539
    8. '):
' → logprob: -11.075540542602539
    9. '<|end|>' → logprob: -11.075540542602539
    10. ' :' → logprob: -11.700540542602539

Token 166: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4177195131778717
    2. '       ' → logprob: -1.1677194833755493
    3. ':' → logprob: -3.792719602584839
    4. ':
' → logprob: -5.66771936416626
    5. 'and' → logprob: -5.91771936416626
    6. '   ' → logprob: -6.91771936416626
    7. '<|end|>' → logprob: -8.417719841003418
    8. ',' → logprob: -8.917719841003418
    9. ' :' → logprob: -9.417719841003418
    10. '):
' → logprob: -9.792719841003418

Token 167: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0714767724275589
    2. ' return' → logprob: -3.196476697921753
    3. 'return' → logprob: -4.321476936340332
    4. ' if' → logprob: -4.696476936340332
    5. '   ' → logprob: -5.821476936340332
    6. '
' → logprob: -6.446476936340332
    7. 'if' (adapté à ' if') → logprob: -7.821476936340332
    8. '        
' → logprob: -8.571476936340332
    9. ':' → logprob: -9.071476936340332
    10. ':
' → logprob: -9.696476936340332

Token 168: ' l' (ID: 305)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.502519428730011
    2. 'l' → logprob: -2.127519369125366
    3. '(m' → logprob: -2.252519369125366
    4. ' m' → logprob: -2.502519369125366
    5. ' l' → logprob: -3.377519369125366
    6. ' not' → logprob: -4.127519607543945
    7. ' (' → logprob: -4.252519607543945
    8. '(l' → logprob: -4.252519607543945
    9. 'not' → logprob: -5.002519607543945
    10. '   ' → logprob: -6.377519607543945

Token 169: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6315157413482666
    2. ' <' → logprob: -1.1315157413482666
    3. '>' → logprob: -2.6315157413482666
    4. ' >' → logprob: -3.0065157413482666
    5. ' <=' → logprob: -4.8815155029296875
    6. '<=' → logprob: -5.3815155029296875
    7. '==' → logprob: -5.5065155029296875
    8. '[' → logprob: -5.7565155029296875
    9. ' ==' → logprob: -6.1315155029296875
    10. '+' → logprob: -7.1315155029296875

Token 170: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4316726326942444
    2. ' m' → logprob: -1.4316725730895996
    3. 'r' → logprob: -2.4316725730895996
    4. ' r' → logprob: -3.8066725730895996
    5. 'a' → logprob: -7.1816725730896
    6. ' ' → logprob: -8.056673049926758
    7. ' a' → logprob: -8.306673049926758
    8. '0' → logprob: -9.806673049926758
    9. '   ' → logprob: -10.931673049926758
    10. ')' → logprob: -11.056673049926758

Token 171: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009859737940132618
    2. 'and' → logprob: -4.759859561920166
    3. ' or' → logprob: -6.759859561920166
    4. '!=' → logprob: -10.134860038757324
    5. ' ' → logprob: -10.509860038757324
    6. ' !=' → logprob: -11.634860038757324
    7. '==' → logprob: -12.884860038757324
    8. '>' → logprob: -13.759860038757324
    9. '=' → logprob: -13.884860038757324
    10. '&&' → logprob: -14.509860038757324

Token 172: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7032431960105896
    2. ' m' → logprob: -0.7032431960105896
    3. ' r' → logprob: -5.203243255615234
    4. 'r' → logprob: -5.453243255615234
    5. ' ' → logprob: -9.328243255615234
    6. '   ' → logprob: -9.578243255615234
    7. '  ' → logprob: -11.203243255615234
    8. 'l' → logprob: -11.328243255615234
    9. '	m' → logprob: -11.390743255615234
    10. ' l' → logprob: -11.578243255615234

Token 173: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4287247061729431
    2. ' !=' → logprob: -1.053724765777588
    3. '==' → logprob: -12.05372428894043
    4. '>' → logprob: -12.55372428894043
    5. '<|end|>' → logprob: -12.67872428894043
    6. '=' → logprob: -13.42872428894043
    7. '!' → logprob: -13.42872428894043
    8. '!=(' → logprob: -13.67872428894043
    9. ')!=' → logprob: -13.92872428894043
    10. '```' → logprob: -13.92872428894043

Token 174: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.026303669437766075
    2. ' r' → logprob: -3.651303768157959
    3. ' ' → logprob: -13.0263032913208
    4. '
' → logprob: -14.4013032913208
    5. '<|end|>' → logprob: -16.026304244995117
    6. '	r' → logprob: -16.401304244995117
    7. '   ' → logprob: -16.651304244995117
    8. '

' → logprob: -16.651304244995117
    9. 'c' → logprob: -16.651304244995117
    10. ' ' → logprob: -16.776304244995117

Token 175: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.058625027537345886
    2. ':' → logprob: -3.3086249828338623
    3. 'and' → logprob: -3.9336249828338623
    4. ':
' → logprob: -7.558625221252441
    5. '   ' → logprob: -9.433625221252441
    6. '):' → logprob: -9.933625221252441
    7. ')' → logprob: -10.183625221252441
    8. ' :' → logprob: -10.433625221252441
    9. '       ' → logprob: -10.808625221252441
    10. ':return' → logprob: -11.183625221252441

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16038283705711365
    2. ' and' → logprob: -2.4103827476501465
    3. '       ' → logprob: -3.5353827476501465
    4. ':
' → logprob: -4.0353827476501465
    5. ':' → logprob: -4.6603827476501465
    6. ':return' → logprob: -7.5353827476501465
    7. 'return' → logprob: -7.6603827476501465
    8. ' return' → logprob: -7.7853827476501465
    9. 'and' → logprob: -7.9103827476501465
    10. '   ' → logprob: -9.535383224487305

Token 177: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4285134971141815
    2. ' return' → logprob: -1.553513526916504
    3. 'return' (adapté à ' return') → logprob: -2.053513526916504
    4. '           ' → logprob: -5.678513526916504
    5. '   ' → logprob: -6.178513526916504
    6. ' if' → logprob: -6.303513526916504
    7. '
' → logprob: -7.678513526916504
    8. 'if' → logprob: -8.053513526916504
    9. '               ' → logprob: -8.053513526916504
    10. ' and' → logprob: -9.053513526916504

Token 178: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6597359776496887
    2. 'True' → logprob: -1.034735918045044
    3. ' True' → logprob: -3.159735918045044
    4. 'm' → logprob: -3.409735918045044
    5. ' False' → logprob: -3.409735918045044
    6. 'r' → logprob: -4.659736156463623
    7. 'i' → logprob: -5.784736156463623
    8. ' m' → logprob: -5.909736156463623
    9. 'a' → logprob: -7.034736156463623
    10. ' r' → logprob: -7.284736156463623

Token 179: '2' (ID: 17)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.26231396198272705
    2. 'True' → logprob: -1.762313961982727
    3. 'r' → logprob: -3.2623138427734375
    4. 'l' → logprob: -4.5123138427734375
    5. 'm' → logprob: -4.7623138427734375
    6. '0' → logprob: -8.387313842773438
    7. ' False' → logprob: -8.387313842773438
    8. 'None' → logprob: -8.637313842773438
    9. 'a' → logprob: -8.762313842773438
    10. '1' → logprob: -9.512313842773438

Token 180: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040767391328699887
    2. '       ' → logprob: -9.125407218933105
    3. '<|end|>' → logprob: -9.125407218933105
    4. 'return' → logprob: -9.500407218933105
    5. '
' → logprob: -10.625407218933105
    6. ' return' → logprob: -10.750407218933105
    7. ' ' → logprob: -10.750407218933105
    8. '  ' → logprob: -11.750407218933105
    9. '    
' → logprob: -11.875407218933105
    10. ')' → logprob: -12.000407218933105

Token 181: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2691601514816284
    2. 'r' → logprob: -2.019160270690918
    3. 'True' → logprob: -3.394160270690918
    4. 'False' → logprob: -3.769160270690918
    5. 'm' → logprob: -4.769160270690918
    6. '[i' → logprob: -5.019160270690918
    7. 'a' → logprob: -5.269160270690918
    8. '(i' → logprob: -5.394160270690918
    9. 'None' → logprob: -5.644160270690918
    10. '[' → logprob: -5.769160270690918

Token 182: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3081691265106201
    2. 'r' → logprob: -1.3081691265106201
    3. 'm' → logprob: -1.9331691265106201
    4. '[i' → logprob: -2.80816912651062
    5. '[r' → logprob: -2.80816912651062
    6. 'l' → logprob: -3.68316912651062
    7. '[m' → logprob: -3.80816912651062
    8. '(i' → logprob: -4.058169364929199
    9. 'a' → logprob: -4.183169364929199
    10. 'True' → logprob: -4.308169364929199

Token 183: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02252390794456005
    2. '       ' → logprob: -4.147523880004883
    3. '<|end|>' → logprob: -5.772523880004883
    4. ',' → logprob: -6.147523880004883
    5. ' return' → logprob: -8.272523880004883
    6. 'return' → logprob: -8.272523880004883
    7. ' ' → logprob: -8.647523880004883
    8. '  ' → logprob: -9.147523880004883
    9. '    
' → logprob: -9.272523880004883
    10. '
' → logprob: -9.397523880004883

Token 184: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003933663945645094
    2. '       ' → logprob: -6.753933429718018
    3. '
' → logprob: -7.003933429718018
    4. ',' → logprob: -7.503933429718018
    5. ' ' → logprob: -8.003933906555176
    6. 'return' → logprob: -8.003933906555176
    7. ' return' → logprob: -8.503933906555176
    8. '  ' → logprob: -8.753933906555176
    9. ')' → logprob: -9.753933906555176
    10. '    
' → logprob: -9.753933906555176

Token 185: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04177545756101608
    2. 'elif' (adapté à ' elif') → logprob: -3.6667754650115967
    3. 'if' → logprob: -4.541775226593018
    4. 'return' → logprob: -5.916775226593018
    5. 'else' → logprob: -7.291775226593018
    6. '
' → logprob: -7.416775226593018
    7. ' if' → logprob: -8.041775703430176
    8. ' elif' → logprob: -8.291775703430176
    9. ' return' → logprob: -10.166775703430176
    10. '    
' → logprob: -10.416775703430176

Token 186: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4136745035648346
    2. ' l' → logprob: -1.1636744737625122
    3. 'm' → logprob: -4.038674354553223
    4. ' m' → logprob: -4.788674354553223
    5. ' (' → logprob: -9.163674354553223
    6. '(m' → logprob: -9.788674354553223
    7. 'r' → logprob: -9.788674354553223
    8. '(l' → logprob: -9.788674354553223
    9. ' ' → logprob: -9.913674354553223
    10. 'a' → logprob: -10.038674354553223

Token 187: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.41372355818748474
    2. '==' → logprob: -1.5387235879898071
    3. ' !=' → logprob: -2.2887234687805176
    4. '!=' → logprob: -3.7887234687805176
    5. ' ' → logprob: -10.163723945617676
    6. '=' → logprob: -10.413723945617676
    7. '<|end|>' → logprob: -10.663723945617676
    8. ' is' → logprob: -11.538723945617676
    9. ',' → logprob: -12.413723945617676
    10. '[' → logprob: -12.851223945617676

Token 188: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0038302370812743902
    2. ' m' → logprob: -5.753830432891846
    3. 'r' → logprob: -7.378830432891846
    4. ' ' → logprob: -11.878829956054688
    5. ' r' → logprob: -11.878829956054688
    6. 'a' → logprob: -12.128829956054688
    7. '	m' → logprob: -13.628829956054688
    8. '=' → logprob: -14.128829956054688
    9. '   ' → logprob: -14.128829956054688
    10. ')' → logprob: -14.691329956054688

Token 189: ' ==' (ID: 951)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6962106823921204
    2. 'and' → logprob: -0.6962106823921204
    3. '==' → logprob: -6.571210861206055
    4. ':' → logprob: -7.071210861206055
    5. ' or' → logprob: -8.071210861206055
    6. ' ==' → logprob: -8.321210861206055
    7. ':
' → logprob: -8.821210861206055
    8. ' ' → logprob: -10.821210861206055
    9. '   ' → logprob: -10.946210861206055
    10. 'or' → logprob: -11.446210861206055

Token 190: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001000655465759337
    2. 'm' → logprob: -7.001000881195068
    3. ' r' → logprob: -9.50100040435791
    4. 'a' → logprob: -11.75100040435791
    5. '0' → logprob: -12.75100040435791
    6. '1' → logprob: -13.87600040435791
    7. ' ' → logprob: -14.25100040435791
    8. 'n' → logprob: -14.75100040435791
    9. ' m' → logprob: -15.12600040435791
    10. '```' → logprob: -15.50100040435791

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030191950500011444
    2. ':
' → logprob: -3.5301918983459473
    3. ':return' → logprob: -8.155192375183105
    4. ' and' → logprob: -9.905192375183105
    5. ' :' → logprob: -10.405192375183105
    6. '):' → logprob: -10.530192375183105
    7. '           ' → logprob: -11.530192375183105
    8. '):
' → logprob: -11.655192375183105
    9. 'and' → logprob: -11.780192375183105
    10. ':

' → logprob: -12.780192375183105

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1021299883723259
    2. ' return' → logprob: -2.8521299362182617
    3. '1' → logprob: -4.227129936218262
    4. 'return' → logprob: -4.602129936218262
    5. ' ' → logprob: -5.727129936218262
    6. '0' → logprob: -5.977129936218262
    7. '       ' → logprob: -6.227129936218262
    8. '2' → logprob: -6.352129936218262
    9. ',' → logprob: -6.477129936218262
    10. '(' → logprob: -7.102129936218262

Token 193: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6140764355659485
    2. ' return' → logprob: -1.1140763759613037
    3. '1' → logprob: -2.7390763759613037
    4. '           ' → logprob: -3.3640763759613037
    5. '0' → logprob: -3.9890763759613037
    6. '   ' → logprob: -4.989076614379883
    7. ' ' → logprob: -6.114076614379883
    8. '3' → logprob: -6.364076614379883
    9. '2' → logprob: -6.864076614379883
    10. '       ' → logprob: -7.489076614379883

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6981233954429626
    2. '1' → logprob: -0.8231233954429626
    3. '2' → logprob: -3.4481234550476074
    4. '3' → logprob: -4.323123455047607
    5. '(' → logprob: -4.698123455047607
    6. ' ' → logprob: -4.698123455047607
    7. '-' → logprob: -9.69812297821045
    8. ' (' → logprob: -10.19812297821045
    9. '4' → logprob: -11.07312297821045
    10. '   ' → logprob: -11.94812297821045

Token 195: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19236695766448975
    2. '1' → logprob: -1.9423669576644897
    3. '3' → logprob: -3.9423670768737793
    4. '2' → logprob: -4.942367076873779
    5. '(' → logprob: -5.442367076873779
    6. '-' → logprob: -7.942367076873779
    7. ' ' → logprob: -7.942367076873779
    8. ' (' → logprob: -11.442366600036621
    9. '```' → logprob: -11.754866600036621
    10. '4' → logprob: -12.004866600036621

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001178916310891509
    2. ' ,' → logprob: -6.876178741455078
    3. '0' → logprob: -10.001178741455078
    4. '1' → logprob: -10.501178741455078
    5. ' ' → logprob: -10.876178741455078
    6. '<|end|>' → logprob: -10.876178741455078
    7. ',
' → logprob: -12.001178741455078
    8. '2' → logprob: -12.251178741455078
    9. '-' → logprob: -12.251178741455078
    10. '3' → logprob: -12.876178741455078

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13506847620010376
    2. '0' → logprob: -2.385068416595459
    3. '2' → logprob: -3.510068416595459
    4. ' ' → logprob: -6.135068416595459
    5. '-' → logprob: -6.885068416595459
    6. 'a' → logprob: -7.260068416595459
    7. '3' → logprob: -8.510068893432617
    8. '(' → logprob: -10.072568893432617
    9. 'n' → logprob: -10.572568893432617
    10. '(a' → logprob: -10.572568893432617

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20849868655204773
    2. '0' → logprob: -1.9584987163543701
    3. '2' → logprob: -3.20849871635437
    4. 'a' → logprob: -5.708498477935791
    5. '-' → logprob: -6.458498477935791
    6. '3' → logprob: -7.958498477935791
    7. '(a' → logprob: -8.20849895477295
    8. '(' → logprob: -8.45849895477295
    9. 'i' → logprob: -8.45849895477295
    10. 'm' → logprob: -9.08349895477295

Token 199: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005600620643235743
    2. '       ' → logprob: -8.37555980682373
    3. 'return' → logprob: -8.62555980682373
    4. '<|end|>' → logprob: -10.12555980682373
    5. ',' → logprob: -10.50055980682373
    6. '    
' → logprob: -10.87555980682373
    7. 'else' → logprob: -11.00055980682373
    8. ')' → logprob: -11.25055980682373
    9. 'elif' → logprob: -11.75055980682373
    10. ' return' → logprob: -12.00055980682373

Token 200: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004659425176214427
    2. 'else' → logprob: -8.000466346740723
    3. 'elif' → logprob: -9.625466346740723
    4. ' else' → logprob: -10.500466346740723
    5. '       ' → logprob: -11.250466346740723
    6. 'return' → logprob: -11.625466346740723
    7. '<|end|>' → logprob: -12.250466346740723
    8. ' elif' → logprob: -12.875466346740723
    9. ',' → logprob: -13.125466346740723
    10. ')' → logprob: -13.250466346740723

Token 201: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3313824236392975
    2. 'else' → logprob: -1.331382393836975
    3. 'elif' (adapté à ' elif') → logprob: -4.5813822746276855
    4. ' else' → logprob: -5.3313822746276855
    5. 'return' → logprob: -5.9563822746276855
    6. ' elif' → logprob: -9.206382751464844
    7. '       ' → logprob: -9.706382751464844
    8. ' ' → logprob: -9.956382751464844
    9. ' return' → logprob: -10.706382751464844
    10. '  ' → logprob: -11.206382751464844

Token 202: ' m' (ID: 284)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11041662842035294
    2. 'm' → logprob: -2.7354166507720947
    3. ' l' → logprob: -3.6104166507720947
    4. '(m' → logprob: -5.235416412353516
    5. ' m' → logprob: -5.860416412353516
    6. '(l' → logprob: -5.985416412353516
    7. ' (' → logprob: -7.235416412353516
    8. 'r' → logprob: -7.360416412353516
    9. '(' → logprob: -9.110416412353516
    10. 'abs' → logprob: -9.485416412353516

Token 203: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7445980906486511
    2. '==' → logprob: -1.244598150253296
    3. ' !=' → logprob: -1.869598150253296
    4. '!=' → logprob: -2.494598150253296
    5. ' ' → logprob: -9.119598388671875
    6. '=' → logprob: -9.744598388671875
    7. 'elif' → logprob: -10.369598388671875
    8. ' <' → logprob: -11.244598388671875
    9. '<|end|>' → logprob: -11.369598388671875
    10. ' is' → logprob: -11.869598388671875

Token 204: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09020627290010452
    2. 'r' → logprob: -2.4652063846588135
    3. 'a' → logprob: -7.215206146240234
    4. ' l' → logprob: -7.715206146240234
    5. ' r' → logprob: -9.965206146240234
    6. '1' → logprob: -11.340206146240234
    7. '0' → logprob: -11.840206146240234
    8. ' ' → logprob: -12.840206146240234
    9. '```' → logprob: -12.840206146240234
    10. '2' → logprob: -13.215206146240234

Token 205: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6892715096473694
    2. 'and' → logprob: -0.9392715096473694
    3. '==' → logprob: -2.5642714500427246
    4. ':
' → logprob: -3.9392714500427246
    5. ':' → logprob: -5.064271450042725
    6. ' ==' → logprob: -5.814271450042725
    7. ',' → logprob: -7.939271450042725
    8. '           ' → logprob: -8.564271926879883
    9. ' or' → logprob: -8.689271926879883
    10. ' ' → logprob: -8.939271926879883

Token 206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037877365946769714
    2. '       ' → logprob: -4.662877559661865
    3. ' and' → logprob: -4.912877559661865
    4. ',' → logprob: -5.537877559661865
    5. '1' → logprob: -5.787877559661865
    6. '   ' → logprob: -6.162877559661865
    7. ':' → logprob: -6.287877559661865
    8. ':
' → logprob: -6.287877559661865
    9. ' ' → logprob: -6.537877559661865
    10. '2' → logprob: -6.662877559661865

Token 207: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.437198668718338
    2. 'return' (adapté à ' return') → logprob: -1.0621986389160156
    3. '   ' → logprob: -5.937198638916016
    4. '1' → logprob: -6.312198638916016
    5. '       ' → logprob: -6.562198638916016
    6. '2' → logprob: -7.062198638916016
    7. '0' → logprob: -7.437198638916016
    8. '           ' → logprob: -7.562198638916016
    9. ' ' → logprob: -7.687198638916016
    10. '3' → logprob: -10.687198638916016

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20168180763721466
    2. ' ' → logprob: -1.9516818523406982
    3. '2' → logprob: -3.9516818523406982
    4. '0' → logprob: -4.451681613922119
    5. '(' → logprob: -4.951681613922119
    6. ' (' → logprob: -5.951681613922119
    7. '   ' → logprob: -11.076682090759277
    8. ',' → logprob: -11.701682090759277
    9. ' -' → logprob: -11.701682090759277
    10. '-' → logprob: -12.451682090759277

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11126331239938736
    2. '2' → logprob: -2.4862632751464844
    3. '0' → logprob: -4.111263275146484
    4. '(' → logprob: -5.236263275146484
    5. ' ' → logprob: -8.486263275146484
    6. '3' → logprob: -9.486263275146484
    7. '-' → logprob: -10.611263275146484
    8. ' (' → logprob: -11.423763275146484
    9. '(i' → logprob: -12.173763275146484
    10. '(a' → logprob: -12.298763275146484

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.710618905955926e-05
    2. ' ,' → logprob: -9.375097274780273
    3. '0' → logprob: -11.750097274780273
    4. '2' → logprob: -13.125097274780273
    5. ',
' → logprob: -14.000097274780273
    6. ' ' → logprob: -14.375097274780273
    7. '1' → logprob: -14.625097274780273
    8. '<|end|>' → logprob: -15.000097274780273
    9. '3' → logprob: -17.125097274780273
    10. '   ' → logprob: -17.500097274780273

Token 211: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3251224458217621
    2. '1' → logprob: -1.3251224756240845
    3. ' ' → logprob: -4.950122356414795
    4. '-' → logprob: -5.575122356414795
    5. 'a' → logprob: -8.700122833251953
    6. '2' → logprob: -8.825122833251953
    7. 'r' → logprob: -8.950122833251953
    8. 'i' → logprob: -9.075122833251953
    9. ' -' → logprob: -9.200122833251953
    10. 'm' → logprob: -9.325122833251953

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2819669544696808
    2. '1' → logprob: -1.4069669246673584
    3. '-' → logprob: -7.5319671630859375
    4. '2' → logprob: -9.281967163085938
    5. 'a' → logprob: -9.531967163085938
    6. ' ' → logprob: -9.531967163085938
    7. 'm' → logprob: -11.906967163085938
    8. 'i' → logprob: -11.969467163085938
    9. 'r' → logprob: -12.906967163085938
    10. 'len' → logprob: -12.969467163085938

Token 213: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06603464484214783
    2. '   ' → logprob: -2.8160345554351807
    3. 'elif' → logprob: -6.19103479385376
    4. 'else' → logprob: -6.31603479385376
    5. ' else' → logprob: -9.191034317016602
    6. 'return' → logprob: -9.441034317016602
    7. ' elif' → logprob: -11.691034317016602
    8. '           ' → logprob: -12.441034317016602
    9. ' return' → logprob: -13.191034317016602
    10. ' ' → logprob: -13.191034317016602

Token 214: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30345869064331055
    2. 'elif' → logprob: -1.9284586906433105
    3. 'else' → logprob: -2.9284586906433105
    4. '       ' → logprob: -3.3034586906433105
    5. ' else' → logprob: -4.1784586906433105
    6. ' elif' → logprob: -4.8034586906433105
    7. '<|end|>' → logprob: -7.4284586906433105
    8. '	elif' → logprob: -7.5534586906433105
    9. ')' → logprob: -7.6784586906433105
    10. ',' → logprob: -7.9284586906433105

Token 215: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8008953332901001
    2. 'elif' (adapté à ' elif') → logprob: -0.9258953332901001
    3. 'else' → logprob: -1.9258953332901
    4. ' else' → logprob: -5.4258952140808105
    5. ' elif' → logprob: -5.6758952140808105
    6. 'return' → logprob: -7.5508952140808105
    7. '       ' → logprob: -7.8008952140808105
    8. ' ' → logprob: -8.925895690917969
    9. '  ' → logprob: -9.425895690917969
    10. ')' → logprob: -9.550895690917969

Token 216: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.25338974595069885
    2. 'm' → logprob: -1.5033897161483765
    3. ' l' → logprob: -6.878389835357666
    4. ' m' → logprob: -8.003389358520508
    5. '   ' → logprob: -10.378389358520508
    6. 'i' → logprob: -10.878389358520508
    7. ' ' → logprob: -11.378389358520508
    8. '    ' → logprob: -11.628389358520508
    9. '  ' → logprob: -11.878389358520508
    10. '     ' → logprob: -12.628389358520508

Token 217: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9032094478607178
    2. ' !=' → logprob: -1.1532094478607178
    3. '==' → logprob: -1.5282094478607178
    4. '!=' → logprob: -2.7782094478607178
    5. ' ' → logprob: -11.278209686279297
    6. '=' → logprob: -12.153209686279297
    7. '==
' → logprob: -12.528209686279297
    8. ')' → logprob: -12.653209686279297
    9. '```' → logprob: -13.153209686279297
    10. ')==' → logprob: -13.528209686279297

Token 218: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001711709308438003
    2. ' m' → logprob: -6.376711845397949
    3. 'a' → logprob: -13.00171184539795
    4. 'r' → logprob: -13.12671184539795
    5. ' ' → logprob: -13.50171184539795
    6. 'i' → logprob: -13.87671184539795
    7. '   ' → logprob: -14.12671184539795
    8. '    ' → logprob: -14.62671184539795
    9. 'l' → logprob: -14.75171184539795
    10. '	m' → logprob: -15.37671184539795

Token 219: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4846145808696747
    2. ':' → logprob: -1.234614610671997
    3. ':
' → logprob: -2.609614610671997
    4. '           ' → logprob: -4.859614372253418
    5. '1' → logprob: -5.109614372253418
    6. ' and' → logprob: -6.359614372253418
    7. ' ,' → logprob: -6.984614372253418
    8. ' ' → logprob: -7.234614372253418
    9. '       ' → logprob: -7.609614372253418
    10. '   ' → logprob: -7.734614372253418

Token 220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.790279746055603
    2. '1' → logprob: -0.915279746055603
    3. ' ' → logprob: -2.0402798652648926
    4. '0' → logprob: -4.290279865264893
    5. ' return' → logprob: -6.415279865264893
    6. 'return' → logprob: -7.915279865264893
    7. '2' → logprob: -9.790279388427734
    8. '   ' → logprob: -9.915279388427734
    9. '       ' → logprob: -10.165279388427734
    10. '          ' → logprob: -11.790279388427734

Token 221: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08682437986135483
    2. ' ' → logprob: -2.586824417114258
    3. '0' → logprob: -5.086824417114258
    4. 'return' (adapté à ' return') → logprob: -7.086824417114258
    5. ' return' → logprob: -8.211824417114258
    6. '           ' → logprob: -8.336824417114258
    7. '2' → logprob: -8.586824417114258
    8. '   ' → logprob: -8.961824417114258
    9. '       ' → logprob: -10.711824417114258
    10. '-' → logprob: -11.211824417114258

Token 222: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3909202814102173
    2. '1' → logprob: -1.1409202814102173
    3. '0' → logprob: -5.515920162200928
    4. '(' → logprob: -11.390920639038086
    5. ' (' → logprob: -12.515920639038086
    6. '2' → logprob: -13.140920639038086
    7. ' ' → logprob: -14.515920639038086
    8. ',' → logprob: -14.640920639038086
    9. '   ' → logprob: -14.765920639038086
    10. ' -' → logprob: -16.515920639038086

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008107058703899384
    2. '0' → logprob: -5.1331071853637695
    3. ' ' → logprob: -6.1331071853637695
    4. '2' → logprob: -13.13310718536377
    5. '-' → logprob: -13.13310718536377
    6. '   ' → logprob: -14.50810718536377
    7. '(' → logprob: -14.57060718536377
    8. ' -' → logprob: -14.69560718536377
    9. ',' → logprob: -15.19560718536377
    10. '  ' → logprob: -16.445606231689453

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.861651490908116e-05
    2. ' ,' → logprob: -9.750068664550781
    3. ',
' → logprob: -12.875068664550781
    4. '```' → logprob: -13.000068664550781
    5. '`,' → logprob: -13.250068664550781
    6. '0' → logprob: -13.500068664550781
    7. '<|end|>' → logprob: -14.500068664550781
    8. '',' → logprob: -15.125068664550781
    9. '1' → logprob: -15.250068664550781
    10. ' ' → logprob: -15.750068664550781

Token 225: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03813525289297104
    2. ' ' → logprob: -3.288135290145874
    3. '1' → logprob: -9.288135528564453
    4. '   ' → logprob: -14.788135528564453
    5. '```' → logprob: -15.850635528564453
    6. ' ' → logprob: -16.038135528564453
    7. '<|end|>' → logprob: -16.288135528564453
    8. '  ' → logprob: -16.413135528564453
    9. 'def' → logprob: -16.725635528564453
    10. '-' → logprob: -16.913135528564453

Token 226: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018041854491457343
    2. '1' → logprob: -8.7501802444458
    3. ' ' → logprob: -10.7501802444458
    4. '-' → logprob: -16.187681198120117
    5. '۰' → logprob: -16.562681198120117
    6. 'None' → logprob: -17.187681198120117
    7. '   ' → logprob: -17.437681198120117
    8. '<|end|>' → logprob: -17.625181198120117
    9. '```' → logprob: -17.750181198120117
    10. '  ' → logprob: -17.750181198120117

Token 227: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044525884091854095
    2. '       ' → logprob: -3.7945258617401123
    3. 'else' → logprob: -4.419526100158691
    4. '<|end|>' → logprob: -5.294526100158691
    5. ' else' → logprob: -5.919526100158691
    6. ')' → logprob: -7.669526100158691
    7. 'return' → logprob: -8.419526100158691
    8. 'elif' → logprob: -8.544526100158691
    9. '  ' → logprob: -9.294526100158691
    10. '    ' → logprob: -9.794526100158691

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007051641005091369
    2. 'else' → logprob: -7.625705242156982
    3. ' else' → logprob: -9.250704765319824
    4. '<|end|>' → logprob: -10.375704765319824
    5. 'return' → logprob: -10.625704765319824
    6. '       ' → logprob: -10.625704765319824
    7. ')' → logprob: -11.250704765319824
    8. '    
' → logprob: -11.375704765319824
    9. ',' → logprob: -12.500704765319824
    10. ' return' → logprob: -12.750704765319824

Token 229: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7463713884353638
    2. 'else' → logprob: -1.1213713884353638
    3. 'return' (adapté à ' return') → logprob: -1.8713713884353638
    4. ' else' → logprob: -3.371371269226074
    5. ' return' → logprob: -4.621371269226074
    6. 'elif' → logprob: -6.371371269226074
    7. ' elif' → logprob: -9.246371269226074
    8. ' ' → logprob: -9.746371269226074
    9. 'if' → logprob: -10.246371269226074
    10. '       ' → logprob: -10.996371269226074

Token 230: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006883976515382528
    2. '(' → logprob: -5.6318840980529785
    3. ' ' → logprob: -6.6318840980529785
    4. 'None' → logprob: -6.6318840980529785
    5. '1' → logprob: -7.5068840980529785
    6. 'False' → logprob: -10.88188362121582
    7. ' None' → logprob: -11.00688362121582
    8. ' (' → logprob: -11.13188362121582
    9. '-' → logprob: -11.25688362121582
    10. '(None' → logprob: -11.25688362121582

Token 231: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02861863747239113
    2. '1' → logprob: -3.778618574142456
    3. '(' → logprob: -5.278618812561035
    4. 'None' → logprob: -8.903618812561035
    5. '2' → logprob: -10.028618812561035
    6. '-' → logprob: -10.028618812561035
    7. ' ' → logprob: -10.778618812561035
    8. 'False' → logprob: -12.653618812561035
    9. '(None' → logprob: -13.153618812561035
    10. '(-' → logprob: -13.278618812561035

Token 232: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007638105191290379
    2. '1' → logprob: -5.007637977600098
    3. 'None' → logprob: -7.382637977600098
    4. '-' → logprob: -8.382637977600098
    5. ' ' → logprob: -10.507637977600098
    6. '(' → logprob: -11.007637977600098
    7. '2' → logprob: -11.382637977600098
    8. 'a' → logprob: -12.257637977600098
    9. '(None' → logprob: -13.132637977600098
    10. 'False' → logprob: -13.507637977600098

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015541194938123226
    2. '1' → logprob: -4.515541076660156
    3. 'None' → logprob: -5.890541076660156
    4. '-' → logprob: -6.515541076660156
    5. '2' → logprob: -8.515541076660156
    6. ' ' → logprob: -11.640541076660156
    7. '(' → logprob: -12.078041076660156
    8. '(None' → logprob: -12.828041076660156
    9. ' None' → logprob: -12.953041076660156
    10. 'a' → logprob: -13.203041076660156

Token 235: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: 'indices' (ID: 30992)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8193070888519287
    2. 'for' → logprob: -1.4443070888519287
    3. 'result' → logprob: -2.0693070888519287
    4. 'def' → logprob: -2.8193070888519287
    5. 'i' → logprob: -3.1943070888519287
    6. 'ans' → logprob: -4.194307327270508
    7. 'changes' → logprob: -4.444307327270508
    8. 'results' → logprob: -4.694307327270508
    9. 'answer' → logprob: -4.694307327270508
    10. 'max' → logprob: -5.194307327270508

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327308416366577
    2. '=' → logprob: -0.7577308416366577
    3. '<|end|>' → logprob: -10.382730484008789
    4. '_' → logprob: -10.757730484008789
    5. '=[]' → logprob: -11.257730484008789
    6. '(' → logprob: -11.382730484008789
    7. ')' → logprob: -11.382730484008789
    8. ' ' → logprob: -11.382730484008789
    9. ',' → logprob: -12.007730484008789
    10. '[' → logprob: -12.257730484008789

Token 238: ' iter' (ID: 10621)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.27642664313316345
    2. 'range' → logprob: -2.2764265537261963
    3. 'list' → logprob: -2.5264265537261963
    4. '[' → logprob: -3.2764265537261963
    5. '[]' → logprob: -4.776426792144775
    6. '[list' → logprob: -4.776426792144775
    7. '[x' → logprob: -6.401426792144775
    8. 'set' → logprob: -7.651426792144775
    9. '[n' → logprob: -7.776426792144775
    10. '[a' → logprob: -7.901426792144775

Token 239: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -2.7014437364414334e-05
    2. '(pair' → logprob: -11.37502670288086
    3. 'range' → logprob: -11.75002670288086
    4. '(' → logprob: -12.75002670288086
    5. '(a' → logprob: -12.87502670288086
    6. '(list' → logprob: -13.75002670288086
    7. '([' → logprob: -14.87502670288086
    8. '(filter' → logprob: -15.87502670288086
    9. '(set' → logprob: -16.00002670288086
    10. '([]' → logprob: -16.12502670288086

Token 240: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.15654976665973663
    2. '(len' → logprob: -2.4065496921539307
    3. '(' → logprob: -2.9065496921539307
    4. 'len' → logprob: -9.781549453735352
    5. 'n' → logprob: -10.281549453735352
    6. '1' → logprob: -11.031549453735352
    7. '((' → logprob: -12.156549453735352
    8. ')' → logprob: -13.281549453735352
    9. ')n' → logprob: -13.281549453735352
    10. '(-' → logprob: -13.906549453735352

Token 241: '1' (ID: 16)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7642663717269897
    2. '(len' → logprob: -1.8892663717269897
    3. '(' → logprob: -2.1392664909362793
    4. 'len' → logprob: -2.1392664909362793
    5. 'n' → logprob: -2.3892664909362793
    6. '1' → logprob: -2.8892664909362793
    7. '2' → logprob: -8.639266014099121
    8. ' len' → logprob: -10.014266014099121
    9. '(-' → logprob: -10.264266014099121
    10. ' n' → logprob: -11.014266014099121

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025087302550673485
    2. ',n' → logprob: -3.900087356567383
    3. '(n' → logprob: -5.650087356567383
    4. ',len' → logprob: -7.650087356567383
    5. ' ,' → logprob: -8.025087356567383
    6. '(len' → logprob: -8.900087356567383
    7. 'n' → logprob: -10.650087356567383
    8. '(' → logprob: -10.900087356567383
    9. '+' → logprob: -11.150087356567383
    10. 'len' → logprob: -11.775087356567383

Token 243: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602507382631302
    2. 'len' → logprob: -1.9102507829666138
    3. ' n' → logprob: -11.160250663757324
    4. ' len' → logprob: -11.910250663757324
    5. '   ' → logprob: -12.910250663757324
    6. '(n' → logprob: -13.660250663757324
    7. '(len' → logprob: -14.160250663757324
    8. ' ' → logprob: -15.535250663757324
    9. '  ' → logprob: -15.660250663757324
    10. '
' → logprob: -15.910250663757324

Token 244: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0716213658452034
    2. '))' → logprob: -3.1966214179992676
    3. ' -' → logprob: -3.5716214179992676
    4. '+' → logprob: -10.07162094116211
    5. ' ))' → logprob: -10.19662094116211
    6. ')' → logprob: -12.57162094116211
    7. '))
' → logprob: -12.69662094116211
    8. ',' → logprob: -12.69662094116211
    9. ')))' → logprob: -12.82162094116211
    10. ' ' → logprob: -12.94662094116211

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. '2' → logprob: -11.500012397766113
    3. ' ' → logprob: -13.812512397766113
    4. '0' → logprob: -15.250012397766113
    5. '```' → logprob: -15.312512397766113
    6. '3' → logprob: -15.875012397766113
    7. '
' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.06251335144043
    9. ')' → logprob: -16.25001335144043
    10. '۱' → logprob: -16.56251335144043

Token 246: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.11996734328568e-05
    2. ')' → logprob: -11.000041007995605
    3. ' ))' → logprob: -11.125041007995605
    4. '))
' → logprob: -11.875041007995605
    5. ')))' → logprob: -13.875041007995605
    6. '),' → logprob: -14.625041007995605
    7. '()))' → logprob: -14.875041007995605
    8. ',' → logprob: -15.000041007995605
    9. '))

' → logprob: -15.375041007995605
    10. ' ' → logprob: -16.125041961669922

Token 247: 'acc' (ID: 3717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30779120326042175
    2. 'result' → logprob: -2.432791233062744
    3. 'res' → logprob: -3.682791233062744
    4. 'results' → logprob: -3.932791233062744
    5. 'output' → logprob: -4.182791233062744
    6. 'max' → logprob: -4.307791233062744
    7. 'changes' → logprob: -4.432791233062744
    8. 'while' → logprob: -4.432791233062744
    9. 'i' → logprob: -4.682791233062744
    10. 'answers' → logprob: -4.932791233062744

Token 248: ' =' (ID: 314)
  Prédit: 'umulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.7959527373313904
    2. '=' → logprob: -1.1709527969360352
    3. 'um' → logprob: -1.9209527969360352
    4. ' =' → logprob: -2.545952796936035
    5. 'umulate' → logprob: -4.795952796936035
    6. ',' → logprob: -5.795952796936035
    7. 'umul' → logprob: -6.045952796936035
    8. 'umulative' → logprob: -9.795952796936035
    9. '   ' → logprob: -10.170952796936035
    10. 'u' → logprob: -10.420952796936035

Token 249: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06904689222574234
    2. '[]' → logprob: -2.944046974182129
    3. '(' → logprob: -4.944046974182129
    4. '[' → logprob: -5.444046974182129
    5. '[]
' → logprob: -6.569046974182129
    6. '[(' → logprob: -7.569046974182129
    7. ' []' → logprob: -8.194046974182129
    8. ' ' → logprob: -8.944046974182129
    9. '1' → logprob: -9.569046974182129
    10. 'list' → logprob: -10.694046974182129

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2759464979171753
    2. '(' → logprob: -1.5259464979171753
    3. '1' → logprob: -4.400946617126465
    4. '(n' → logprob: -6.025946617126465
    5. 'a' → logprob: -6.150946617126465
    6. ']' → logprob: -6.275946617126465
    7. 'n' → logprob: -6.400946617126465
    8. 'check' → logprob: -6.775946617126465
    9. '[' → logprob: -7.650946617126465
    10. '()]' → logprob: -7.775946617126465

Token 251: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06262483447790146
    2. ',' → logprob: -3.187624931335449
    3. ')]' → logprob: -4.187624931335449
    4. ')' → logprob: -6.062624931335449
    5. ']
' → logprob: -6.687624931335449
    6. ',
' → logprob: -7.937624931335449
    7. ' ]' → logprob: -9.43762493133545
    8. '])' → logprob: -9.68762493133545
    9. '0' → logprob: -10.06262493133545
    10. ']

' → logprob: -10.81262493133545

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021029175259172916
    2. ' ' → logprob: -6.377102851867676
    3. '1' → logprob: -8.127102851867676
    4. 'n' → logprob: -10.252102851867676
    5. ']' → logprob: -10.377102851867676
    6. '   ' → logprob: -11.939602851867676
    7. '
' → logprob: -12.377102851867676
    8. '2' → logprob: -12.689602851867676
    9. '-' → logprob: -12.752102851867676
    10. ')' → logprob: -13.127102851867676

Token 253: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004740447038784623
    2. ' ' → logprob: -8.500473976135254
    3. '1' → logprob: -8.625473976135254
    4. ']' → logprob: -10.000473976135254
    5. 'n' → logprob: -11.125473976135254
    6. '-' → logprob: -11.375473976135254
    7. '])' → logprob: -12.812973976135254
    8. 'False' → logprob: -13.250473976135254
    9. '2' → logprob: -13.375473976135254
    10. '(' → logprob: -13.625473976135254

Token 254: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002583594177849591
    2. ']
' → logprob: -9.000258445739746
    3. ',' → logprob: -9.250258445739746
    4. ' ]' → logprob: -10.750258445739746
    5. ')]' → logprob: -11.500258445739746
    6. ']

' → logprob: -12.250258445739746
    7. ')' → logprob: -13.750258445739746
    8. '])' → logprob: -14.375258445739746
    9. '0' → logprob: -15.250258445739746
    10. '<|end|>' → logprob: -16.25025749206543

Token 255: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05082191899418831
    2. 'while' → logprob: -3.1758220195770264
    3. 'try' → logprob: -5.300821781158447
    4. 'def' → logprob: -6.800821781158447
    5. 'i' → logprob: -7.300821781158447
    6. ' for' → logprob: -8.300822257995605
    7. 'result' → logprob: -8.550822257995605
    8. 'current' → logprob: -9.175822257995605
    9. 'res' → logprob: -9.800822257995605
    10. ')' → logprob: -9.925822257995605

Token 256: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08796681463718414
    2. 'um' → logprob: -3.4629669189453125
    3. 't' → logprob: -3.5879669189453125
    4. '=' → logprob: -4.0879669189453125
    5. 'for' → logprob: -5.9629669189453125
    6. 'stack' → logprob: -5.9629669189453125
    7. '_stack' → logprob: -7.7129669189453125
    8. 'sum' → logprob: -8.087966918945312
    9. 'ums' → logprob: -8.462966918945312
    10. ' ' → logprob: -8.587966918945312

Token 257: ' [' (ID: 723)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.2182778120040894
    2. 'set' → logprob: -1.3432778120040894
    3. '0' → logprob: -1.4682778120040894
    4. '[]' → logprob: -1.9682778120040894
    5. 'a' → logprob: -4.218277931213379
    6. '[' → logprob: -4.593277931213379
    7. '{' → logprob: -4.593277931213379
    8. '1' → logprob: -5.093277931213379
    9. 'n' → logprob: -5.468277931213379
    10. '[a' → logprob: -5.468277931213379

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.463255912065506
    2. ']' → logprob: -1.9632558822631836
    3. 'a' → logprob: -2.2132558822631836
    4. '(' → logprob: -3.0882558822631836
    5. 'i' → logprob: -4.088255882263184
    6. '()]' → logprob: -4.463255882263184
    7. 'acc' → logprob: -4.838255882263184
    8. '1' → logprob: -5.088255882263184
    9. 'check' → logprob: -5.088255882263184
    10. 'n' → logprob: -5.088255882263184

Token 259: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20736028254032135
    2. ',' → logprob: -1.7073602676391602
    3. '0' → logprob: -5.95736026763916
    4. ' ]' → logprob: -6.33236026763916
    5. ' ,' → logprob: -8.08236026763916
    6. ']+' → logprob: -8.20736026763916
    7. '1' → logprob: -8.58236026763916
    8. ']*' → logprob: -8.70736026763916
    9. ',
' → logprob: -8.83236026763916
    10. ']
' → logprob: -9.08236026763916

Token 260: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.031592369079589844
    2. 'while' → logprob: -3.90659236907959
    3. ' for' → logprob: -5.28159236907959
    4. 'i' → logprob: -5.28159236907959
    5. 'def' → logprob: -7.90659236907959
    6. ' while' → logprob: -9.15659236907959
    7. ',' → logprob: -9.53159236907959
    8. ']' → logprob: -10.03159236907959
    9. ')' → logprob: -10.03159236907959
    10. 's' → logprob: -10.53159236907959

Token 261: ' recursive' (ID: 66711)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6893659234046936
    2. ' check' → logprob: -2.564365863800049
    3. ' process' → logprob: -2.689365863800049
    4. 'main' → logprob: -2.814365863800049
    5. ' solve' → logprob: -2.939365863800049
    6. ' next' → logprob: -3.314365863800049
    7. 'solve' → logprob: -3.689365863800049
    8. ' update' → logprob: -3.689365863800049
    9. 'next' → logprob: -4.564365863800049
    10. 'process' → logprob: -4.689365863800049

Token 262: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.24889911711215973
    2. '(' → logprob: -2.248899221420288
    3. '_check' → logprob: -2.498899221420288
    4. '(n' → logprob: -4.998898983001709
    5. ' (' → logprob: -4.998898983001709
    6. '(_' → logprob: -5.998898983001709
    7. '(index' → logprob: -5.998898983001709
    8. 'def' → logprob: -6.248898983001709
    9. '(indices' → logprob: -6.248898983001709
    10. '(idx' → logprob: -6.373898983001709

Token 263: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1604124903678894
    2. '):
' → logprob: -1.9104125499725342
    3. ')' → logprob: -9.410412788391113
    4. ',' → logprob: -9.785412788391113
    5. '):
' → logprob: -11.035412788391113
    6. ' ):' → logprob: -11.160412788391113
    7. ':' → logprob: -11.910412788391113
    8. '):

' → logprob: -12.785412788391113
    9. '=' → logprob: -12.785412788391113
    10. '   ' → logprob: -13.035412788391113

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2414366453886032
    2. ' if' → logprob: -1.7414366006851196
    3. 'if' → logprob: -3.241436719894409
    4. ' ' → logprob: -9.866436958312988
    5. '    
' → logprob: -11.116436958312988
    6. 's' → logprob: -11.491436958312988
    7. ' s' → logprob: -11.616436958312988
    8. '  ' → logprob: -12.116436958312988
    9. '	if' → logprob: -12.116436958312988
    10. '    ' → logprob: -12.366436958312988

Token 265: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003301293356344104
    2. 'res' → logprob: -7.25330114364624
    3. 'length' → logprob: -7.25330114364624
    4. 'count' → logprob: -7.50330114364624
    5. 'x' → logprob: -8.628301620483398
    6. ' if' → logprob: -8.753301620483398
    7. 'val' → logprob: -8.878301620483398
    8. '   ' → logprob: -9.003301620483398
    9. 'cost' → logprob: -9.253301620483398
    10. 'cnt' → logprob: -9.378301620483398

Token 266: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.078916996717453
    2. ' i' → logprob: -2.5789170265197754
    3. ' ' → logprob: -11.328916549682617
    4. '   ' → logprob: -12.453916549682617
    5. '	i' → logprob: -13.078916549682617
    6. '  ' → logprob: -13.453916549682617
    7. 'not' → logprob: -13.703916549682617
    8. 'S' → logprob: -13.828916549682617
    9. '(i' → logprob: -13.828916549682617
    10. '0' → logprob: -14.078916549682617

Token 267: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.47660309076309204
    2. '>=' → logprob: -1.1016030311584473
    3. '==' → logprob: -4.351603031158447
    4. ' >' → logprob: -4.601603031158447
    5. ' ==' → logprob: -4.601603031158447
    6. '>' → logprob: -5.101603031158447
    7. ')' → logprob: -5.726603031158447
    8. ' <' → logprob: -6.226603031158447
    9. '<' → logprob: -7.601603031158447
    10. ' is' → logprob: -7.726603031158447

Token 268: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08354747295379639
    2. 'len' → logprob: -2.583547592163086
    3. ' n' → logprob: -5.458547592163086
    4. ' len' → logprob: -7.958547592163086
    5. '(n' → logprob: -10.958547592163086
    6. '(len' → logprob: -11.833547592163086
    7. '	n' → logprob: -12.833547592163086
    8. '1' → logprob: -13.458547592163086
    9. '   ' → logprob: -13.583547592163086
    10. ' ' → logprob: -14.083547592163086

Token 269: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07240405678749084
    2. ':
' → logprob: -2.822404146194458
    3. ':return' → logprob: -5.197403907775879
    4. ' or' → logprob: -6.072403907775879
    5. '   ' → logprob: -6.572403907775879
    6. '):' → logprob: -7.322403907775879
    7. '-' → logprob: -8.822403907775879
    8. '):
' → logprob: -8.947403907775879
    9. ')' → logprob: -9.322403907775879
    10. '       ' → logprob: -9.572403907775879

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01439149770885706
    2. '2' → logprob: -4.2643914222717285
    3. '3' → logprob: -8.639391899108887
    4. ' ' → logprob: -10.264391899108887
    5. '   ' → logprob: -12.014391899108887
    6. '```' → logprob: -12.264391899108887
    7. '0' → logprob: -13.514391899108887
    8. 'i' → logprob: -14.139391899108887
    9. '...' → logprob: -14.514391899108887
    10. '-' → logprob: -14.764391899108887

Token 271: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08311699330806732
    2. ':
' → logprob: -2.5831170082092285
    3. ':return' → logprob: -6.0831170082092285
    4. '   ' → logprob: -6.7081170082092285
    5. '       ' → logprob: -7.4581170082092285
    6. ' or' → logprob: -9.20811653137207
    7. '):' → logprob: -11.08311653137207
    8. '):
' → logprob: -11.70811653137207
    9. ' :' → logprob: -12.95811653137207
    10. ' and' → logprob: -12.95811653137207

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00451698899269104
    2. 'return' → logprob: -5.504517078399658
    3. ' return' → logprob: -8.0045166015625
    4. '   ' → logprob: -9.2545166015625
    5. '
' → logprob: -12.5045166015625
    6. ',' → logprob: -13.5045166015625
    7. '           ' → logprob: -14.0045166015625
    8. '	return' → logprob: -14.5045166015625
    9. ':return' → logprob: -14.5045166015625
    10. '      ' → logprob: -15.0045166015625

Token 273: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19839155673980713
    2. '       ' → logprob: -2.1983914375305176
    3. '   ' → logprob: -3.1983914375305176
    4. ' return' → logprob: -3.5733914375305176
    5. ' ' → logprob: -9.948391914367676
    6. '	return' → logprob: -11.323391914367676
    7. '
' → logprob: -11.573391914367676
    8. '  ' → logprob: -12.698391914367676
    9. '           ' → logprob: -13.073391914367676
    10. 'for' → logprob: -14.073391914367676

Token 274: '
' (ID: 198)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.01936947926878929
    2. '0' → logprob: -5.019369602203369
    3. '
' → logprob: -5.769369602203369
    4. '1' → logprob: -5.894369602203369
    5. '[' → logprob: -6.019369602203369
    6. '(' → logprob: -6.769369602203369
    7. '(acc' → logprob: -7.019369602203369
    8. ' acc' → logprob: -7.269369602203369
    9. 'None' → logprob: -7.644369602203369
    10. 'i' → logprob: -8.019369125366211

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006533234380185604
    2. '    
' → logprob: -5.881533145904541
    3. 'a' → logprob: -7.006533145904541
    4. 's' → logprob: -7.256533145904541
    5. 'c' → logprob: -8.1315336227417
    6. 'count' → logprob: -8.2565336227417
    7. ' s' → logprob: -9.1315336227417
    8. 't' → logprob: -9.2565336227417
    9. '
' → logprob: -9.3815336227417
    10. 'l' → logprob: -9.3815336227417

Token 276: ' step' (ID: 5983)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7396180033683777
    2. '   ' → logprob: -1.3646180629730225
    3. 'c' → logprob: -3.2396180629730225
    4. 'l' → logprob: -3.2396180629730225
    5. 't' → logprob: -3.2396180629730225
    6. 'p' → logprob: -3.6146180629730225
    7. 's' → logprob: -4.114617824554443
    8. 'a' → logprob: -4.114617824554443
    9. 'd' → logprob: -4.739617824554443
    10. 'k' → logprob: -4.864617824554443

Token 277: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.674057126045227
    2. ',' → logprob: -1.424057126045227
    3. '=' → logprob: -1.549057126045227
    4. '   ' → logprob: -3.6740570068359375
    5. 's' → logprob: -5.2990570068359375
    6. '(i' → logprob: -6.0490570068359375
    7. ',i' → logprob: -7.0490570068359375
    8. '(' → logprob: -7.5490570068359375
    9. '=i' → logprob: -7.5490570068359375
    10. ' ,' → logprob: -8.049057006835938

Token 278: ' cnt' (ID: 27340)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.52739417552948
    2. 'flip' → logprob: -1.77739417552948
    3. 'offset' → logprob: -3.2773942947387695
    4. 'state' → logprob: -3.4023942947387695
    5. 'val' → logprob: -3.9023942947387695
    6. 'add' → logprob: -4.0273942947387695
    7. 'inc' → logprob: -4.4023942947387695
    8. 'mode' → logprob: -4.5273942947387695
    9. 'change' → logprob: -5.1523942947387695
    10. 'color' → logprob: -5.1523942947387695

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741380214691162
    2. ' =' → logprob: -0.9741380214691162
    3. ',' → logprob: -9.724138259887695
    4. ' ' → logprob: -14.849138259887695
    5. '   ' → logprob: -15.349138259887695
    6. ')' → logprob: -15.474138259887695
    7. ')=' → logprob: -17.099138259887695
    8. '  ' → logprob: -17.474138259887695
    9. ' ,' → logprob: -17.474138259887695
    10. ' ' → logprob: -17.599138259887695

Token 280: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0028592010494321585
    2. ' check' → logprob: -5.877859115600586
    3. '   ' → logprob: -9.877859115600586
    4. ' ' → logprob: -13.252859115600586
    5. '  ' → logprob: -14.502859115600586
    6. '	check' → logprob: -14.627859115600586
    7. '    ' → logprob: -16.377859115600586
    8. '(check' → logprob: -17.252859115600586
    9. 'chec' → logprob: -17.377859115600586
    10. '       ' → logprob: -17.752859115600586

Token 281: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.750007629394531
    3. ' (' → logprob: -16.62500762939453
    4. '(
' → logprob: -18.37500762939453
    5. '(a' → logprob: -18.50000762939453
    6. 'i' → logprob: -18.75000762939453
    7. ' ' → logprob: -19.00000762939453
    8. '((' → logprob: -19.12500762939453
    9. '(ii' → logprob: -20.00000762939453
    10. '   ' → logprob: -20.50000762939453

Token 282: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3869236707687378
    2. ')' → logprob: -1.1369236707687378
    3. ')
' → logprob: -10.136923789978027
    4. '   ' → logprob: -12.011923789978027
    5. ' )
' → logprob: -12.761923789978027
    6. ')

' → logprob: -13.261923789978027
    7. ' )' → logprob: -14.261923789978027
    8. ')`
' → logprob: -14.386923789978027
    9. ')i' → logprob: -14.886923789978027
    10. ' ' → logprob: -15.011923789978027

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038774654269218445
    2. 'acc' → logprob: -3.6637747287750244
    3. 'if' → logprob: -5.038774490356445
    4. 'S' → logprob: -5.788774490356445
    5. 'for' → logprob: -6.663774490356445
    6. ' if' → logprob: -7.413774490356445
    7. ' acc' → logprob: -8.288774490356445
    8. ' for' → logprob: -8.413774490356445
    9. '
' → logprob: -8.788774490356445
    10. '    
' → logprob: -9.163774490356445

Token 284: ' S' (ID: 336)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.36154624819755554
    2. 'if' → logprob: -1.361546277999878
    3. '   ' → logprob: -3.861546277999878
    4. 'S' (adapté à ' S') → logprob: -4.611546039581299
    5. 'for' → logprob: -4.861546039581299
    6. ' acc' → logprob: -5.486546039581299
    7. ' if' → logprob: -6.486546039581299
    8. 'global' → logprob: -7.111546039581299
    9. 'res' → logprob: -7.861546039581299
    10. 'ac' → logprob: -8.361546516418457

Token 285: '[' (ID: 58)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04877902567386627
    2. '[-' → logprob: -3.048779010772705
    3. '.extend' → logprob: -9.298779487609863
    4. '.' → logprob: -9.548779487609863
    5. '[' → logprob: -11.548779487609863
    6. '[i' → logprob: -11.798779487609863
    7. '.app' → logprob: -12.798779487609863
    8. 'append' → logprob: -12.923779487609863
    9. '_append' → logprob: -13.548779487609863
    10. '[S' → logprob: -13.548779487609863

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6327177882194519
    2. '-' → logprob: -0.7577177882194519
    3. ' ' → logprob: -10.257718086242676
    4. ' -' → logprob: -10.507718086242676
    5. ']' → logprob: -11.382718086242676
    6. '
' → logprob: -12.007718086242676
    7. '-s' → logprob: -12.570218086242676
    8. '-
' → logprob: -12.632718086242676
    9. '-S' → logprob: -12.632718086242676
    10. 'len' → logprob: -12.757718086242676

Token 287: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9785937070846558
    2. ']' → logprob: -1.1035937070846558
    3. ']+=' → logprob: -1.4785937070846558
    4. ' +=' → logprob: -2.9785938262939453
    5. '+' → logprob: -4.353593826293945
    6. ')' → logprob: -7.478593826293945
    7. '+]' → logprob: -9.603593826293945
    8. ']+' → logprob: -9.853593826293945
    9. ' ]' → logprob: -9.853593826293945
    10. '   ' → logprob: -10.853593826293945

Token 288: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006825486198067665
    2. ' +=' → logprob: -5.0068254470825195
    3. '+' → logprob: -9.38182544708252
    4. '=' → logprob: -10.63182544708252
    5. '+=(' → logprob: -13.88182544708252
    6. ']+=' → logprob: -14.50682544708252
    7. ' +' → logprob: -16.381826400756836
    8. '+='' → logprob: -16.756826400756836
    9. '+="' → logprob: -17.381826400756836
    10. ' ' → logprob: -17.631826400756836

Token 289: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0625486969947815
    2. 'step' → logprob: -2.8125486373901367
    3. ' cnt' → logprob: -8.062548637390137
    4. '1' → logprob: -9.062548637390137
    5. 'acc' → logprob: -9.562548637390137
    6. '(cnt' → logprob: -10.687548637390137
    7. ' step' → logprob: -10.937548637390137
    8. '2' → logprob: -12.312548637390137
    9. ' ' → logprob: -12.437548637390137
    10. '   ' → logprob: -12.562548637390137

Token 290: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6457772254943848
    2. '
' → logprob: -0.7707772254943848
    3. '    
' → logprob: -5.270777225494385
    4. 'recursive' → logprob: -5.395777225494385
    5. ' recursive' → logprob: -6.145777225494385
    6. '  
' → logprob: -8.270776748657227
    7. ',' → logprob: -8.645776748657227
    8. ' if' → logprob: -8.895776748657227
    9. '   
' → logprob: -8.895776748657227
    10. 'if' → logprob: -9.020776748657227

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12837058305740356
    2. 'recursive' → logprob: -3.003370523452759
    3. ' recursive' → logprob: -3.378370523452759
    4. '
' → logprob: -3.503370523452759
    5. '    
' → logprob: -5.503370761871338
    6. 'if' → logprob: -6.878370761871338
    7. ' if' → logprob: -7.378370761871338
    8. '   
' → logprob: -9.25337028503418
    9. '  
' → logprob: -9.25337028503418
    10. '```' → logprob: -9.25337028503418

Token 292: ' recursive' (ID: 66711)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.12262573838233948
    2. 'if' → logprob: -2.7476258277893066
    3. 'for' → logprob: -4.247625827789307
    4. 'res' → logprob: -4.622625827789307
    5. ' acc' → logprob: -5.122625827789307
    6. '   ' → logprob: -5.372625827789307
    7. 'step' → logprob: -5.622625827789307
    8. 'i' → logprob: -5.872625827789307
    9. 'next' → logprob: -6.372625827789307
    10. 'a' → logprob: -6.622625827789307

Token 293: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.000006675720215
    3. '((' → logprob: -14.875006675720215
    4. ' (' → logprob: -16.62500762939453
    5. '(s' → logprob: -17.00000762939453
    6. '(
' → logprob: -17.75000762939453
    7. '(next' → logprob: -19.37500762939453
    8. 'i' → logprob: -20.25000762939453
    9. '(n' → logprob: -20.37500762939453
    10. '(a' → logprob: -20.50000762939453

Token 294: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20156848430633545
    2. ' +' → logprob: -1.7015684843063354
    3. '+i' → logprob: -8.826568603515625
    4. ' ' → logprob: -13.201568603515625
    5. ' plus' → logprob: -13.701568603515625
    6. '+(' → logprob: -14.326568603515625
    7. '+=' → logprob: -14.576568603515625
    8. '()+' → logprob: -14.701568603515625
    9. '+
' → logprob: -14.826568603515625
    10. ' ' → logprob: -14.826568603515625

Token 295: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.00017481597024016082
    2. ' step' → logprob: -8.750174522399902
    3. '1' → logprob: -11.125174522399902
    4. '(step' → logprob: -14.875174522399902
    5. '   ' → logprob: -15.125174522399902
    6. '	step' → logprob: -15.250174522399902
    7. 's' → logprob: -15.875174522399902
    8. '
' → logprob: -16.00017547607422
    9. ' ' → logprob: -16.12517547607422
    10. 'steps' → logprob: -16.62517547607422

Token 296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')
' → logprob: -11.250017166137695
    3. ' )' → logprob: -13.500017166137695
    4. '   ' → logprob: -13.625017166137695
    5. ')return' → logprob: -14.375017166137695
    6. '<|end|>' → logprob: -16.125017166137695
    7. ')

' → logprob: -16.500017166137695
    8. '))' → logprob: -16.625017166137695
    9. '())' → logprob: -16.875017166137695
    10. '),' → logprob: -17.250017166137695

Token 297: 'recursive' (ID: 129128)
  Prédit: 'recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recursive' → logprob: -0.13782159984111786
    2. '   ' → logprob: -3.262821674346924
    3. '<|end|>' → logprob: -3.262821674346924
    4. '
' → logprob: -4.262821674346924
    5. ')' → logprob: -5.262821674346924
    6. 'acc' → logprob: -5.262821674346924
    7. 'return' → logprob: -5.387821674346924
    8. 'def' → logprob: -5.512821674346924
    9. '_recursive' → logprob: -5.762821674346924
    10. 'rec' → logprob: -6.012821674346924

Token 298: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016548756510019302
    2. '(next' → logprob: -4.3915486335754395
    3. '(indices' → logprob: -6.1415486335754395
    4. '(n' → logprob: -6.6415486335754395
    5. '(
' → logprob: -8.516549110412598
    6. '()' → logprob: -8.766549110412598
    7. '(i' → logprob: -9.516549110412598
    8. '((' → logprob: -9.766549110412598
    9. '(iter' → logprob: -10.391549110412598
    10. '(index' → logprob: -11.516549110412598

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36932313442230225
    2. 'next' → logprob: -1.2443231344223022
    3. '0' → logprob: -4.244323253631592
    4. '(next' → logprob: -5.494323253631592
    5. ' next' → logprob: -6.744323253631592
    6. ')' → logprob: -7.744323253631592
    7. 'indices' → logprob: -8.369322776794434
    8. '(' → logprob: -8.494322776794434
    9. ' ' → logprob: -9.244322776794434
    10. '   ' → logprob: -11.244322776794434

Token 300: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -14.000001907348633
    3. ' )' → logprob: -14.000001907348633
    4. '))' → logprob: -15.625001907348633
    5. '),' → logprob: -17.000001907348633
    6. ')`' → logprob: -17.625001907348633
    7. ')}' → logprob: -17.750001907348633
    8. ');' → logprob: -18.000001907348633
    9. ')#' → logprob: -18.250001907348633
    10. ')

' → logprob: -18.375001907348633

Token 301: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008125623688101768
    2. 'for' → logprob: -6.2581257820129395
    3. 'total' → logprob: -7.0081257820129395
    4. 'result' → logprob: -7.1331257820129395
    5. 'res' → logprob: -7.3831257820129395
    6. 'if' → logprob: -7.5081257820129395
    7. 'ans' → logprob: -7.6331257820129395
    8. 'max' → logprob: -7.7581257820129395
    9. 'answer' → logprob: -8.008125305175781
    10. 'acc' → logprob: -8.258125305175781

Token 302: ' n' (ID: 297)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.7829015851020813
    2. 'S' → logprob: -1.2829015254974365
    3. ' n' → logprob: -2.7829015254974365
    4. ' acc' → logprob: -2.7829015254974365
    5. ' len' → logprob: -3.0329015254974365
    6. 'n' → logprob: -3.1579015254974365
    7. 'acc' → logprob: -3.7829015254974365
    8. 'len' → logprob: -4.657901763916016
    9. ' ' → logprob: -5.532901763916016
    10. ' a' → logprob: -5.782901763916016

Token 303: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.43708962202072144
    2. '>' → logprob: -1.1870896816253662
    3. ' ==' → logprob: -4.062089443206787
    4. ' <' → logprob: -4.437089443206787
    5. '==' → logprob: -5.187089443206787
    6. ' >=' → logprob: -5.312089443206787
    7. '<' → logprob: -5.437089443206787
    8. ' <=' → logprob: -6.187089443206787
    9. '>=' → logprob: -6.562089443206787
    10. '<=' → logprob: -7.187089443206787

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24363809823989868
    2. '2' → logprob: -1.868638038635254
    3. '0' → logprob: -2.868638038635254
    4. ' ' → logprob: -5.743638038635254
    5. '=' → logprob: -6.868638038635254
    6. '3' → logprob: -7.118638038635254
    7. ' =' → logprob: -10.368638038635254
    8. '4' → logprob: -11.368638038635254
    9. '   ' → logprob: -11.993638038635254
    10. '```' → logprob: -12.118638038635254

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4246852397918701
    2. '2' → logprob: -1.1746852397918701
    3. '0' → logprob: -3.42468523979187
    4. '3' → logprob: -5.424685478210449
    5. '4' → logprob: -9.92468547821045
    6. ' ' → logprob: -10.04968547821045
    7. '=' → logprob: -11.04968547821045
    8. '5' → logprob: -11.79968547821045
    9. '```' → logprob: -12.11218547821045
    10. '
' → logprob: -12.23718547821045

Token 306: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7731191515922546
    2. ':' → logprob: -1.1481192111968994
    3. ' and' → logprob: -1.5231192111968994
    4. 'and' → logprob: -5.89811897277832
    5. '   ' → logprob: -8.14811897277832
    6. '):
' → logprob: -10.14811897277832
    7. ' :
' → logprob: -10.77311897277832
    8. ':

' → logprob: -11.02311897277832
    9. ' :' → logprob: -11.39811897277832
    10. ',' → logprob: -11.77311897277832

Token 307: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6350466012954712
    2. 'a' → logprob: -0.7600466012954712
    3. ' check' → logprob: -7.635046482086182
    4. ' (' → logprob: -7.760046482086182
    5. ' all' → logprob: -7.760046482086182
    6. '(a' → logprob: -7.885046482086182
    7. ' ' → logprob: -8.63504695892334
    8. 'check' → logprob: -8.76004695892334
    9. 'all' → logprob: -9.01004695892334
    10. ' len' → logprob: -10.26004695892334

Token 308: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014013137842994183
    2. '[-' → logprob: -9.750140190124512
    3. '[n' → logprob: -10.750140190124512
    4. '[:' → logprob: -10.875140190124512
    5. ' [' → logprob: -11.375140190124512
    6. '==' → logprob: -11.500140190124512
    7. '0' → logprob: -12.750140190124512
    8. ' ==' → logprob: -12.875140190124512
    9. '```' → logprob: -13.000140190124512
    10. ' ' → logprob: -13.250140190124512

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05976328253746033
    2. '-' → logprob: -2.934763193130493
    3. ']' → logprob: -5.684763431549072
    4. ']==' → logprob: -7.559763431549072
    5. '2' → logprob: -7.934763431549072
    6. '0' → logprob: -7.934763431549072
    7. ' ' → logprob: -9.184762954711914
    8. ' -' → logprob: -9.934762954711914
    9. ']!=' → logprob: -10.434762954711914
    10. '```' → logprob: -11.059762954711914

Token 310: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45176881551742554
    2. ')' → logprob: -1.7017688751220703
    3. ']==' → logprob: -2.9517688751220703
    4. '==' → logprob: -3.4517688751220703
    5. ' ==' → logprob: -3.4517688751220703
    6. ' !=' → logprob: -4.07676887512207
    7. '!=' → logprob: -4.32676887512207
    8. ' ]' → logprob: -4.70176887512207
    9. ' )' → logprob: -4.95176887512207
    10. ' ' → logprob: -5.32676887512207

Token 311: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3046455979347229
    2. ' ==' → logprob: -1.6796455383300781
    3. '!=' → logprob: -2.804645538330078
    4. ' !=' → logprob: -4.429645538330078
    5. '>' → logprob: -6.179645538330078
    6. ' a' → logprob: -8.054645538330078
    7. ' >' → logprob: -8.054645538330078
    8. '<' → logprob: -8.429645538330078
    9. ' ' → logprob: -8.804645538330078
    10. ')' → logprob: -8.804645538330078

Token 312: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015623578801751137
    2. ' a' → logprob: -6.501562595367432
    3. '1' → logprob: -10.251562118530273
    4. ' ' → logprob: -10.751562118530273
    5. '   ' → logprob: -13.501562118530273
    6. '0' → logprob: -14.501562118530273
    7. '2' → logprob: -15.001562118530273
    8. '	a' → logprob: -15.126562118530273
    9. '  ' → logprob: -15.626562118530273
    10. '     ' → logprob: -15.626562118530273

Token 313: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.388769103679806e-05
    2. '[' → logprob: -9.750093460083008
    3. '-' → logprob: -11.250093460083008
    4. ' [-' → logprob: -11.375093460083008
    5. 'a' → logprob: -11.750093460083008
    6. '   ' → logprob: -13.750093460083008
    7. ' ' → logprob: -14.250093460083008
    8. '0' → logprob: -14.625093460083008
    9. '[a' → logprob: -15.375093460083008
    10. '```' → logprob: -15.625093460083008

Token 314: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.201639324426651
    2. '1' → logprob: -1.7016392946243286
    3. '-' → logprob: -8.451639175415039
    4. ' ' → logprob: -12.076639175415039
    5. '0' → logprob: -13.326639175415039
    6. '3' → logprob: -13.576639175415039
    7. '   ' → logprob: -13.826639175415039
    8. '```' → logprob: -13.951639175415039
    9. '(-' → logprob: -14.701639175415039
    10. '(' → logprob: -15.201639175415039

Token 315: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7093940377235413
    2. ':
' → logprob: -1.0843939781188965
    3. '):
' → logprob: -2.3343939781188965
    4. '):' → logprob: -3.8343939781188965
    5. ']:
' → logprob: -3.8343939781188965
    6. ' and' → logprob: -4.0843939781188965
    7. ']:' → logprob: -4.9593939781188965
    8. '   ' → logprob: -6.5843939781188965
    9. ' ):
' → logprob: -6.9593939781188965
    10. ' ' → logprob: -7.2093939781188965

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21131926774978638
    2. 'S' → logprob: -1.7113192081451416
    3. ' S' → logprob: -4.711319446563721
    4. 'acc' → logprob: -7.586319446563721
    5. ' ' → logprob: -8.711318969726562
    6. 'print' → logprob: -9.836318969726562
    7. '  ' → logprob: -9.961318969726562
    8. '       ' → logprob: -10.086318969726562
    9. ' acc' → logprob: -10.711318969726562
    10. ' print' → logprob: -12.086318969726562

Token 317: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.04705274850130081
    2. '   ' → logprob: -3.1720528602600098
    3. ' S' → logprob: -6.17205286026001
    4. 'acc' → logprob: -6.29705286026001
    5. 'print' → logprob: -9.422052383422852
    6. ' acc' → logprob: -11.922052383422852
    7. '    ' → logprob: -11.922052383422852
    8. '       ' → logprob: -11.922052383422852
    9. '  ' → logprob: -12.297052383422852
    10. ' ' → logprob: -13.047052383422852

Token 318: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.070975071750581e-05
    2. '[-' → logprob: -10.875030517578125
    3. ' [' → logprob: -12.000030517578125
    4. '```' → logprob: -13.375030517578125
    5. '
' → logprob: -13.750030517578125
    6. '0' → logprob: -14.375030517578125
    7. '   ' → logprob: -14.625030517578125
    8. '[
' → logprob: -14.625030517578125
    9. ' ' → logprob: -14.875030517578125
    10. '.append' → logprob: -15.000030517578125

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.500005722045898
    3. '-' → logprob: -13.625005722045898
    4. '
' → logprob: -15.500005722045898
    5. '1' → logprob: -16.3750057220459
    6. '   ' → logprob: -16.3750057220459
    7. '```' → logprob: -17.1875057220459
    8. '[' → logprob: -18.0000057220459
    9. ' -' → logprob: -18.1875057220459
    10. '٠' → logprob: -19.1250057220459

Token 320: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.15381671488285065
    2. ' +=' → logprob: -2.0288166999816895
    3. '   ' → logprob: -4.7788166999816895
    4. ']+=' → logprob: -6.5288166999816895
    5. ']' → logprob: -6.9038166999816895
    6. '+' → logprob: -9.278817176818848
    7. ')' → logprob: -10.403817176818848
    8. '    ' → logprob: -10.778817176818848
    9. '  ' → logprob: -11.153817176818848
    10. '[' → logprob: -11.278817176818848

Token 321: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002944536507129669
    2. ' +=' → logprob: -5.877944469451904
    3. '=' → logprob: -9.002944946289062
    4. '+' → logprob: -11.752944946289062
    5. ',' → logprob: -12.752944946289062
    6. '   ' → logprob: -12.877944946289062
    7. ']+=' → logprob: -14.127944946289062
    8. '-=' → logprob: -14.252944946289062
    9. '>' → logprob: -15.252944946289062
    10. '[' → logprob: -15.252944946289062

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002330992283532396
    2. ' ' → logprob: -8.375232696533203
    3. '   ' → logprob: -14.000232696533203
    4. '2' → logprob: -14.125232696533203
    5. '0' → logprob: -15.000232696533203
    6. 'acc' → logprob: -15.000232696533203
    7. '  ' → logprob: -16.312732696533203
    8. '-' → logprob: -17.187732696533203
    9. 'a' → logprob: -17.437732696533203
    10. 'S' → logprob: -17.437732696533203

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.250014305114746
    3. '2' → logprob: -14.375014305114746
    4. '0' → logprob: -15.500014305114746
    5. '   ' → logprob: -15.500014305114746
    6. '-' → logprob: -17.00001335144043
    7. '```' → logprob: -17.62501335144043
    8. '  ' → logprob: -17.68751335144043
    9. '
' → logprob: -18.18751335144043
    10. 'acc' → logprob: -18.37501335144043

Token 324: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00039063513395376503
    2. 'result' → logprob: -9.250391006469727
    3. 'for' → logprob: -9.625391006469727
    4. '<|end|>' → logprob: -9.875391006469727
    5. 'if' → logprob: -10.125391006469727
    6. '
' → logprob: -10.375391006469727
    7. ')' → logprob: -10.750391006469727
    8. ' print' → logprob: -11.125391006469727
    9. '```' → logprob: -11.625391006469727
    10. '    
' → logprob: -12.000391006469727

Token 325: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017038638470694423
    2. 'for' → logprob: -6.87670373916626
    3. 'result' → logprob: -8.376704216003418
    4. 'if' → logprob: -8.626704216003418
    5. '#' → logprob: -9.501704216003418
    6. 'S' → logprob: -10.126704216003418
    7. ')' → logprob: -10.751704216003418
    8. '[' → logprob: -11.001704216003418
    9. 'output' → logprob: -11.251704216003418
    10. 'answer' → logprob: -11.876704216003418

Token 326: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.01815216802060604
    2. '(' → logprob: -4.018152236938477
    3. '(
' → logprob: -14.518152236938477
    4. '(s' → logprob: -14.518152236938477
    5. '((' → logprob: -14.893152236938477
    6. '()' → logprob: -15.143152236938477
    7. '('' → logprob: -15.893152236938477
    8. ' (' → logprob: -16.018152236938477
    9. 'S' → logprob: -16.268152236938477
    10. '(a' → logprob: -16.393152236938477

Token 327: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.153795766294934e-06
    2. ')[' → logprob: -12.250005722045898
    3. '```' → logprob: -14.500005722045898
    4. ')' → logprob: -15.000005722045898
    5. '0' → logprob: -16.1250057220459
    6. '][' → logprob: -16.2500057220459
    7. ' [' → logprob: -16.3750057220459
    8. '   ' → logprob: -17.1250057220459
    9. '()[' → logprob: -17.2500057220459
    10. '
' → logprob: -17.2500057220459

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. '[' → logprob: -15.750000953674316
    4. '
' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '```' → logprob: -17.125001907348633
    7. ')' → logprob: -18.125001907348633
    8. ']' → logprob: -18.312501907348633
    9. '])' → logprob: -18.375001907348633
    10. '۰' → logprob: -18.750001907348633

Token 329: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -14.375001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '])' → logprob: -15.375001907348633
    5. '})' → logprob: -15.500001907348633
    6. '))' → logprob: -15.750001907348633
    7. '+' → logprob: -16.250001907348633
    8. '}' → logprob: -17.000001907348633
    9. '）' → logprob: -17.750001907348633
    10. '```' → logprob: -17.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 327
Tokens correctement prédits (1ère position, stricte): 120
Tokens correctement prédits (1ère position, avec adaptation): 130
Tokens correctement prédits (top 10): 285
Précision stricte (1ère position): 36.70%
Précision adaptée (1ère position): 39.76%
Précision (top 10): 87.16%
================================================================================
