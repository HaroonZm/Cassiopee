================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
elem_count = int(input())
value_list = list(map(int, input().split()))
cost_list = list(map(int, input().split()))
total_difference_sum = 0
for idx in range(elem_count):
    difference = value_list[idx] - cost_list[idx]
    if difference > 0:
        total_difference_sum += difference
print(total_difference_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'elem' (ID: 35287)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.45675748586654663
    2. ' {}' → logprob: -1.0817575454711914
    3. '0' → logprob: -3.9567575454711914
    4. ' ' → logprob: -4.831757545471191
    5. ' defaultdict' → logprob: -8.081757545471191
    6. '1' → logprob: -9.331757545471191
    7. 'dict' → logprob: -9.581757545471191
    8. '{' → logprob: -10.456757545471191
    9. ' []' → logprob: -11.331757545471191
    10. ' dict' → logprob: -11.456757545471191

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018794931238517165
    2. '(elem' → logprob: -6.626879692077637
    3. '('' → logprob: -8.501879692077637
    4. '()' → logprob: -9.001879692077637
    5. '```' → logprob: -9.751879692077637
    6. '("("' → logprob: -10.626879692077637
    7. '(`' → logprob: -10.876879692077637
    8. ' (' → logprob: -11.126879692077637
    9. '(user' → logprob: -11.126879692077637
    10. ')' → logprob: -11.501879692077637

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07036540657281876
    2. ')' → logprob: -3.3203654289245605
    3. '()' → logprob: -3.6953654289245605
    4. '())' → logprob: -5.9453654289245605
    5. '('' → logprob: -6.8203654289245605
    6. '("("' → logprob: -7.3203654289245605
    7. '(()' → logprob: -7.4453654289245605
    8. '(
' → logprob: -7.5703654289245605
    9. '[' → logprob: -7.9453654289245605
    10. '```' → logprob: -8.195364952087402

Token 6: 'value' (ID: 1594)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19979308545589447
    2. ' for' → logprob: -2.8247931003570557
    3. ')' → logprob: -3.1997931003570557
    4. '%' → logprob: -3.5747931003570557
    5. '*' → logprob: -4.199792861938477
    6. '+' → logprob: -4.824792861938477
    7. '#' → logprob: -5.324792861938477
    8. '\n' → logprob: -5.324792861938477
    9. '\' → logprob: -5.949792861938477
    10. ' ' → logprob: -6.074792861938477

Token 7: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5391557216644287
    2. 's' → logprob: -1.6641557216644287
    3. ' =' → logprob: -2.5391557216644287
    4. ')' → logprob: -3.0391557216644287
    5. '_counts' → logprob: -3.2891557216644287
    6. '[' → logprob: -3.4141557216644287
    7. '_count' → logprob: -4.664155960083008
    8. '_s' → logprob: -4.789155960083008
    9. '=' → logprob: -6.289155960083008
    10. '.' → logprob: -6.414155960083008

Token 8: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5544446110725403
    2. '[' → logprob: -1.9294445514678955
    3. '.append' → logprob: -2.0544445514678955
    4. '=' → logprob: -2.4294445514678955
    5. ' =' → logprob: -3.1794445514678955
    6. '.setdefault' → logprob: -5.054444789886475
    7. '[:]' → logprob: -5.429444789886475
    8. ')' → logprob: -5.554444789886475
    9. '.count' → logprob: -6.429444789886475
    10. 's' → logprob: -6.554444789886475

Token 9: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.06878451257944107
    2. '[]' → logprob: -2.943784475326538
    3. '[' → logprob: -4.693784713745117
    4. ' [' → logprob: -5.568784713745117
    5. 'list' → logprob: -8.068784713745117
    6. ' ' → logprob: -8.443784713745117
    7. ' list' → logprob: -8.568784713745117
    8. '[input' → logprob: -9.693784713745117
    9. '[int' → logprob: -11.193784713745117
    10. 'input' → logprob: -11.693784713745117

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005413581384345889
    2. '(range' → logprob: -8.500541687011719
    3. '```' → logprob: -9.750541687011719
    4. '(value' → logprob: -10.125541687011719
    5. '(elem' → logprob: -10.375541687011719
    6. '[(' → logprob: -10.500541687011719
    7. '(eval' → logprob: -10.500541687011719
    8. ')' → logprob: -10.750541687011719
    9. '((' → logprob: -10.875541687011719
    10. '[' → logprob: -11.250541687011719

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08504106849431992
    2. '(' → logprob: -2.585041046142578
    3. '(lambda' → logprob: -5.585041046142578
    4. '(str' → logprob: -6.835041046142578
    5. '(input' → logprob: -7.585041046142578
    6. 'int' → logprob: -7.960041046142578
    7. '(eval' → logprob: -8.460041046142578
    8. ')' → logprob: -9.335041046142578
    9. '(
' → logprob: -10.460041046142578
    10. '<int' → logprob: -10.585041046142578

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002817597473040223
    2. ',input' → logprob: -6.627817630767822
    3. '(' → logprob: -7.377817630767822
    4. 'input' → logprob: -7.502817630767822
    5. '))' → logprob: -9.002817153930664
    6. '=input' → logprob: -9.627817153930664
    7. ')' → logprob: -10.252817153930664
    8. ',' → logprob: -10.877817153930664
    9. '<input' → logprob: -11.002817153930664
    10. ' input' → logprob: -11.127817153930664

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011057134717702866
    2. ' input' → logprob: -4.511056900024414
    3. '(input' → logprob: -11.761056900024414
    4. ',input' → logprob: -14.761056900024414
    5. '<input' → logprob: -15.011056900024414
    6. ')' → logprob: -15.136056900024414
    7. '=input' → logprob: -15.886056900024414
    8. '	input' → logprob: -16.136056900024414
    9. '[input' → logprob: -16.761056900024414
    10. '))' → logprob: -16.886056900024414

Token 14: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4036681652069092
    2. '()' → logprob: -1.2786681652069092
    3. '())' → logprob: -3.028668165206909
    4. '().' → logprob: -6.653668403625488
    5. '(' → logprob: -6.778668403625488
    6. '()));' → logprob: -6.778668403625488
    7. '()>' → logprob: -7.278668403625488
    8. '())))' → logprob: -8.403668403625488
    9. '))' → logprob: -8.528668403625488
    10. '(()' → logprob: -8.778668403625488

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007238718098960817
    2. 'strip' → logprob: -7.250723838806152
    3. 'rstrip' → logprob: -11.375723838806152
    4. ' split' → logprob: -13.125723838806152
    5. 'spl' → logprob: -15.375723838806152
    6. '(split' → logprob: -15.500723838806152
    7. 'replace' → logprob: -17.50072479248047
    8. ')' → logprob: -18.50072479248047
    9. ' strip' → logprob: -18.50072479248047
    10. '.split' → logprob: -18.87572479248047

Token 16: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08820641785860062
    2. '())' → logprob: -3.3382065296173096
    3. '))' → logprob: -3.8382065296173096
    4. '()' → logprob: -3.9632065296173096
    5. '(' → logprob: -4.9632062911987305
    6. ')' → logprob: -6.9632062911987305
    7. '('' → logprob: -8.58820629119873
    8. '())))' → logprob: -9.83820629119873
    9. ''))' → logprob: -9.83820629119873
    10. '()))
' → logprob: -10.08820629119873

Token 17: 'cost' (ID: 33457)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47665935754776
    2. 'result' → logprob: -2.4766592979431152
    3. 'sum' → logprob: -2.8516592979431152
    4. 'count' → logprob: -3.2266592979431152
    5. 's' → logprob: -3.3516592979431152
    6. 'value' → logprob: -3.6016592979431152
    7. 'total' → logprob: -3.9766592979431152
    8. '#' → logprob: -3.9766592979431152
    9. ')' → logprob: -4.351659297943115
    10. 'n' → logprob: -4.601659297943115

Token 18: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5175187587738037
    2. 's' → logprob: -1.1425187587738037
    3. '_' → logprob: -2.8925187587738037
    4. ')' → logprob: -4.767518997192383
    5. '[]' → logprob: -5.392518997192383
    6. ' =' → logprob: -5.642518997192383
    7. '_s' → logprob: -5.642518997192383
    8. '[s' → logprob: -5.767518997192383
    9. '(' → logprob: -6.392518997192383
    10. '=' → logprob: -7.142518997192383

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016895877197384834
    2. '=' → logprob: -4.141895771026611
    3. '[' → logprob: -7.141895771026611
    4. ')' → logprob: -10.14189624786377
    5. '_' → logprob: -12.01689624786377
    6. ' =[' → logprob: -12.14189624786377
    7. '.' → logprob: -12.51689624786377
    8. '[:]' → logprob: -12.76689624786377
    9. '.append' → logprob: -13.14189624786377
    10. '=[' → logprob: -13.51689624786377

Token 20: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16051311790943146
    2. 'list' → logprob: -1.910513162612915
    3. ' []' → logprob: -9.035512924194336
    4. ' [' → logprob: -9.285512924194336
    5. '[' → logprob: -9.785512924194336
    6. '[list' → logprob: -11.660512924194336
    7. '[]' → logprob: -12.660512924194336
    8. ' ' → logprob: -12.910512924194336
    9. ' map' → logprob: -13.785512924194336
    10. '(list' → logprob: -13.785512924194336

Token 21: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033317103516310453
    2. '(map' → logprob: -6.003331661224365
    3. '(int' → logprob: -8.128332138061523
    4. '((' → logprob: -9.003332138061523
    5. '(list' → logprob: -9.253332138061523
    6. '(

' → logprob: -9.753332138061523
    7. '(.' → logprob: -9.753332138061523
    8. '(range' → logprob: -9.878332138061523
    9. '(lambda' → logprob: -10.378332138061523
    10. '(
' → logprob: -10.878332138061523

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00529340747743845
    2. '(' → logprob: -5.255293369293213
    3. '(lambda' → logprob: -11.130293846130371
    4. ' (' → logprob: -11.255293846130371
    5. '<int' → logprob: -12.005293846130371
    6. '(str' → logprob: -12.005293846130371
    7. '```' → logprob: -12.505293846130371
    8. 'int' → logprob: -12.880293846130371
    9. '(float' → logprob: -12.880293846130371
    10. '(
' → logprob: -13.005293846130371

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4021433889865875
    2. '(int' → logprob: -1.1521433591842651
    3. ',input' → logprob: -4.902143478393555
    4. '```' → logprob: -6.152143478393555
    5. '(' → logprob: -6.277143478393555
    6. ',' → logprob: -6.527143478393555
    7. ',int' → logprob: -7.027143478393555
    8. ')' → logprob: -8.152143478393555
    9. 'input' → logprob: -8.527143478393555
    10. '=input' → logprob: -8.652143478393555

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.26328957080841064
    2. ' input' → logprob: -1.5132895708084106
    3. 'int' → logprob: -4.513289451599121
    4. ' int' → logprob: -8.138289451599121
    5. '(input' → logprob: -10.263289451599121
    6. '<input' → logprob: -13.388289451599121
    7. '(int' → logprob: -13.513289451599121
    8. ',input' → logprob: -13.888289451599121
    9. '=input' → logprob: -14.263289451599121
    10. 'str' → logprob: -14.513289451599121

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.464347173576243e-05
    2. '()' → logprob: -10.37503433227539
    3. ' ().' → logprob: -13.75003433227539
    4. '.' → logprob: -13.87503433227539
    5. '(.' → logprob: -14.00003433227539
    6. '(' → logprob: -14.50003433227539
    7. ' .' → logprob: -18.00003433227539
    8. '()).' → logprob: -18.50003433227539
    9. '()))' → logprob: -18.75003433227539
    10. '()].' → logprob: -19.00003433227539

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. 'strip' → logprob: -13.250001907348633
    3. ' split' → logprob: -15.125001907348633
    4. 'spl' → logprob: -16.875001907348633
    5. 'rstrip' → logprob: -17.500001907348633
    6. '(split' → logprob: -17.625001907348633
    7. ')' → logprob: -18.375001907348633
    8. 's' → logprob: -18.625001907348633
    9. 'plit' → logprob: -19.250001907348633
    10. '```' → logprob: -19.500001907348633

Token 27: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.18688659369945526
    2. '))' → logprob: -2.1868865489959717
    3. '())' → logprob: -3.1868865489959717
    4. '()' → logprob: -4.561886787414551
    5. ')' → logprob: -5.061886787414551
    6. '(' → logprob: -10.06188678741455
    7. '()))
' → logprob: -10.68688678741455
    8. '()));' → logprob: -11.18688678741455
    9. '()))

' → logprob: -12.06188678741455
    10. '()`' → logprob: -12.68688678741455

Token 28: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7160637378692627
    2. 'result' → logprob: -1.3410637378692627
    3. 'profit' → logprob: -2.7160637378692627
    4. 'max' → logprob: -2.9660637378692627
    5. 'dp' → logprob: -3.0910637378692627
    6. 'min' → logprob: -3.7160637378692627
    7. 'cost' → logprob: -4.466063499450684
    8. 'sum' → logprob: -4.591063499450684
    9. 'res' → logprob: -5.341063499450684
    10. 'sorted' → logprob: -5.466063499450684

Token 29: '_difference' (ID: 123771)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30147019028663635
    2. '_cost' → logprob: -1.426470160484314
    3. '_sum' → logprob: -5.1764702796936035
    4. '_space' → logprob: -5.4264702796936035
    5. '(' → logprob: -5.9264702796936035
    6. '_value' → logprob: -6.0514702796936035
    7. '_price' → logprob: -6.8014702796936035
    8. ')' → logprob: -6.9264702796936035
    9. '_amount' → logprob: -7.1764702796936035
    10. '_count' → logprob: -7.6764702796936035

Token 30: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010460738092660904
    2. '=' → logprob: -4.63546085357666
    3. '_' → logprob: -7.63546085357666
    4. ' ' → logprob: -9.26046085357666
    5. ' +=' → logprob: -9.63546085357666
    6. ' _' → logprob: -11.13546085357666
    7. '_space' → logprob: -11.26046085357666
    8. ')' → logprob: -12.01046085357666
    9. ' =)' → logprob: -12.26046085357666
    10. '<|end|>' → logprob: -12.63546085357666

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044017013162374496
    2. '=' → logprob: -4.0440168380737305
    3. ' +=' → logprob: -4.4190168380737305
    4. ' ' → logprob: -4.6690168380737305
    5. '_' → logprob: -5.7940168380737305
    6. ' _' → logprob: -8.29401683807373
    7. '<|end|>' → logprob: -8.29401683807373
    8. '_space' → logprob: -8.79401683807373
    9. ')' → logprob: -9.29401683807373
    10. ' =)' → logprob: -9.79401683807373

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5233346223831177
    2. ' ' → logprob: -0.8983346223831177
    3. 'sum' → logprob: -9.148334503173828
    4. ' sum' → logprob: -9.648334503173828
    5. ' ' → logprob: -11.398334503173828
    6. 'value' → logprob: -12.148334503173828
    7. ' abs' → logprob: -12.585834503173828
    8. ' value' → logprob: -12.585834503173828
    9. 'abs' → logprob: -12.773334503173828
    10. ')' → logprob: -13.023334503173828

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010736575350165367
    2. 'sum' → logprob: -7.251073837280273
    3. ' ' → logprob: -8.001073837280273
    4. 'abs' → logprob: -11.126073837280273
    5. 'value' → logprob: -12.126073837280273
    6. ' sum' → logprob: -12.251073837280273
    7. '(sum' → logprob: -14.501073837280273
    8. 'max' → logprob: -15.126073837280273
    9. 'total' → logprob: -15.251073837280273
    10. 'int' → logprob: -15.251073837280273

Token 34: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05467868968844414
    2. '\n' → logprob: -3.6796786785125732
    3. '
' → logprob: -3.8046786785125732
    4. '```' → logprob: -6.054678916931152
    5. ' for' → logprob: -6.179678916931152
    6. '<|end|>' → logprob: -7.054678916931152
    7. '\' → logprob: -8.304678916931152
    8. '' → logprob: -9.554678916931152
    9. '#' → logprob: -10.929678916931152
    10. '
' → logprob: -11.054678916931152

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011367550177965313
    2. '\n' → logprob: -10.125113487243652
    3. '```' → logprob: -10.500113487243652
    4. ' for' → logprob: -10.875113487243652
    5. '
' → logprob: -11.000113487243652
    6. '\' → logprob: -12.875113487243652
    7. 'n' → logprob: -12.875113487243652
    8. 'f' → logprob: -13.125113487243652
    9. 'i' → logprob: -14.500113487243652
    10. ')' → logprob: -14.500113487243652

Token 36: ' idx' (ID: 14016)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11490300297737122
    2. ' i' → logprob: -2.239902973175049
    3. '  ' → logprob: -7.239902973175049
    4. ' elem' → logprob: -7.364902973175049
    5. ' _' → logprob: -7.489902973175049
    6. ' value' → logprob: -9.614903450012207
    7. ' idx' → logprob: -10.739903450012207
    8. ' element' → logprob: -10.739903450012207
    9. '_' → logprob: -10.864903450012207
    10. ' item' → logprob: -11.364903450012207

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.041642140597105026
    2. 'in' → logprob: -3.416642189025879
    3. ' ' → logprob: -4.916642189025879
    4. ')' → logprob: -8.666642189025879
    5. '<|end|>' → logprob: -8.666642189025879
    6. '  ' → logprob: -8.916642189025879
    7. '_' → logprob: -10.791642189025879
    8. ' ,' → logprob: -10.791642189025879
    9. ' )' → logprob: -10.916642189025879
    10. ' i' → logprob: -11.041642189025879

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02975292131304741
    2. 'range' → logprob: -3.5297529697418213
    3. '(range' → logprob: -13.904752731323242
    4. '	range' → logprob: -13.904752731323242
    5. ' value' → logprob: -15.654752731323242
    6. '_range' → logprob: -16.029752731323242
    7. ' xrange' → logprob: -16.404752731323242
    8. ' ' → logprob: -16.404752731323242
    9. 'Range' → logprob: -16.529752731323242
    10. 'value' → logprob: -17.529752731323242

Token 39: '(elem' (ID: 61564)
  Prédit: '(elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elem' → logprob: -0.16062204539775848
    2. '(' → logprob: -1.910622000694275
    3. '(len' → logprob: -7.9106221199035645
    4. ' (' → logprob: -10.785621643066406
    5. '(ele' → logprob: -12.410621643066406
    6. '(e' → logprob: -12.535621643066406
    7. 'elem' → logprob: -13.785621643066406
    8. '(element' → logprob: -14.285621643066406
    9. '(
' → logprob: -14.910621643066406
    10. '	elem' → logprob: -15.660621643066406

Token 40: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.3557529857498594e-05
    2. 's' → logprob: -11.37502384185791
    3. '_' → logprob: -11.75002384185791
    4. ' _' → logprob: -13.87502384185791
    5. ')_' → logprob: -14.25002384185791
    6. '_cnt' → logprob: -14.37502384185791
    7. ')' → logprob: -15.00002384185791
    8. '_s' → logprob: -15.25002384185791
    9. '```' → logprob: -15.50002384185791
    10. '_c' → logprob: -15.75002384185791

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003867300460115075
    2. ')' → logprob: -6.378867149353027
    3. ' ):' → logprob: -6.503867149353027
    4. '+' → logprob: -7.628867149353027
    5. ':' → logprob: -9.003867149353027
    6. '):
' → logprob: -10.253867149353027
    7. '+:' → logprob: -12.003867149353027
    8. ' )' → logprob: -12.253867149353027
    9. ' +' → logprob: -13.128867149353027
    10. ']:' → logprob: -13.628867149353027

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33353108167648315
    2. ':' → logprob: -1.833531141281128
    3. ' ' → logprob: -2.458531141281128
    4. ' total' → logprob: -4.208530902862549
    5. ' if' → logprob: -5.208530902862549
    6. '    ' → logprob: -5.208530902862549
    7. ' :' → logprob: -5.333530902862549
    8. '  ' → logprob: -6.333530902862549
    9. '<|end|>' → logprob: -6.708530902862549
    10. 'total' → logprob: -7.583530902862549

Token 43: ' difference' (ID: 9809)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6191716194152832
    2. ' total' → logprob: -0.9941716194152832
    3. ' if' → logprob: -2.994171619415283
    4. 'total' → logprob: -3.619171619415283
    5. '    ' → logprob: -5.369171619415283
    6. '   ' → logprob: -5.994171619415283
    7. '<|end|>' → logprob: -5.994171619415283
    8. ' for' → logprob: -6.744171619415283
    9. ' value' → logprob: -7.619171619415283
    10. ' cost' → logprob: -7.619171619415283

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04147735610604286
    2. '_' → logprob: -3.5414774417877197
    3. '=' → logprob: -4.541477203369141
    4. 's' → logprob: -8.66647720336914
    5. '   ' → logprob: -8.91647720336914
    6. '_cost' → logprob: -9.04147720336914
    7. '_s' → logprob: -9.29147720336914
    8. '_value' → logprob: -9.29147720336914
    9. ' _' → logprob: -9.91647720336914
    10. '_sum' → logprob: -10.04147720336914

Token 45: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.12733647227287292
    2. 'value' → logprob: -2.8773365020751953
    3. ' abs' → logprob: -2.8773365020751953
    4. 'abs' → logprob: -5.377336502075195
    5. ' cost' → logprob: -6.127336502075195
    6. 'cost' → logprob: -9.002336502075195
    7. '(value' → logprob: -11.002336502075195
    8. ' elem' → logprob: -12.127336502075195
    9. '(abs' → logprob: -12.127336502075195
    10. ' max' → logprob: -12.502336502075195

Token 46: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.511406809295295e-06
    2. 's' → logprob: -12.500006675720215
    3. '[_' → logprob: -13.500006675720215
    4. '_lists' → logprob: -14.875006675720215
    5. '```' → logprob: -15.250006675720215
    6. '_lst' → logprob: -15.500006675720215
    7. '[' → logprob: -16.0000057220459
    8. '_count' → logprob: -16.1250057220459
    9. '_s' → logprob: -16.6250057220459
    10. '_' → logprob: -16.7500057220459

Token 47: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.16124507784843445
    2. '[' → logprob: -1.9112451076507568
    3. '```' → logprob: -7.036244869232178
    4. ' [' → logprob: -10.411245346069336
    5. '   ' → logprob: -10.411245346069336
    6. '[...]' → logprob: -10.911245346069336
    7. '[token' → logprob: -11.286245346069336
    8. '[
' → logprob: -11.661245346069336
    9. '\[' → logprob: -11.661245346069336
    10. '[val' → logprob: -12.661245346069336

Token 48: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09133605659008026
    2. ')' → logprob: -3.0913360118865967
    3. '-' → logprob: -3.2163360118865967
    4. ' )' → logprob: -7.091336250305176
    5. ' ' → logprob: -7.216336250305176
    6. '   ' → logprob: -9.966336250305176
    7. ']' → logprob: -9.966336250305176
    8. '-cost' → logprob: -10.966336250305176
    9. '[' → logprob: -11.216336250305176
    10. ',' → logprob: -11.466336250305176

Token 49: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03506740555167198
    2. '-' → logprob: -3.410067319869995
    3. ' ' → logprob: -6.660067558288574
    4. '-cost' → logprob: -9.410067558288574
    5. '<|end|>' → logprob: -11.285067558288574
    6. '[' → logprob: -11.285067558288574
    7. ' ' → logprob: -12.285067558288574
    8. ')' → logprob: -12.285067558288574
    9. '```' → logprob: -12.535067558288574
    10. ' *' → logprob: -12.785067558288574

Token 50: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3137938678264618
    2. ' cost' → logprob: -1.3137938976287842
    3. 'value' → logprob: -8.063794136047363
    4. ' value' → logprob: -9.438794136047363
    5. '   ' → logprob: -10.188794136047363
    6. '1' → logprob: -10.313794136047363
    7. '0' → logprob: -10.688794136047363
    8. '_cost' → logprob: -11.938794136047363
    9. ' ' → logprob: -12.251294136047363
    10. 'price' → logprob: -12.563794136047363

Token 51: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.897412822581828e-05
    2. '[_' → logprob: -9.750068664550781
    3. '[idx' → logprob: -12.000068664550781
    4. 's' → logprob: -13.875068664550781
    5. 'list' → logprob: -14.125068664550781
    6. '```' → logprob: -14.125068664550781
    7. '_lst' → logprob: -14.250068664550781
    8. '[' → logprob: -14.375068664550781
    9. 'List' → logprob: -15.500068664550781
    10. ' _' → logprob: -16.37506866455078

Token 52: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001502636878285557
    2. '[' → logprob: -8.875150680541992
    3. '```' → logprob: -12.750150680541992
    4. ' [' → logprob: -13.000150680541992
    5. '[_' → logprob: -13.250150680541992
    6. '_list' → logprob: -15.000150680541992
    7. 'idx' → logprob: -15.000150680541992
    8. '_idx' → logprob: -15.000150680541992
    9. '   ' → logprob: -15.250150680541992
    10. '[index' → logprob: -15.250150680541992

Token 53: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. '   ' → logprob: -11.500024795532227
    3. ')
' → logprob: -11.750024795532227
    4. ' )' → logprob: -12.875024795532227
    5. '))' → logprob: -13.750024795532227
    6. ')**' → logprob: -14.125024795532227
    7. '**' → logprob: -15.125024795532227
    8. ']' → logprob: -15.625024795532227
    9. '}' → logprob: -15.625024795532227
    10. '```' → logprob: -15.625024795532227

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04498171806335449
    2. '
' → logprob: -3.5449817180633545
    3. 'total' → logprob: -5.419981956481934
    4. '    
' → logprob: -5.669981956481934
    5. ' total' → logprob: -6.044981956481934
    6. ' if' → logprob: -6.169981956481934
    7. 'if' → logprob: -7.294981956481934
    8. ')' → logprob: -8.044981956481934
    9. '<|end|>' → logprob: -8.294981956481934
    10. '   
' → logprob: -8.419981956481934

Token 55: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16551148891448975
    2. ' total' → logprob: -2.5405116081237793
    3. '   ' → logprob: -2.6655116081237793
    4. ' ' → logprob: -6.665511608123779
    5. 'if' (adapté à ' if') → logprob: -7.415511608123779
    6. '	total' → logprob: -7.415511608123779
    7. ')' → logprob: -7.665511608123779
    8. ' if' → logprob: -8.415511131286621
    9. '    ' → logprob: -8.415511131286621
    10. '_total' → logprob: -8.790511131286621

Token 56: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.0059548718854784966
    2. 'difference' → logprob: -5.130954742431641
    3. ' ' → logprob: -11.63095474243164
    4. ' abs' → logprob: -11.88095474243164
    5. 'd' → logprob: -12.75595474243164
    6. ' different' → logprob: -13.50595474243164
    7. ' value' → logprob: -13.88095474243164
    8. 'abs' → logprob: -14.13095474243164
    9. '(d' → logprob: -14.13095474243164
    10. ' ' → logprob: -14.25595474243164

Token 57: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.007115652319043875
    2. '>' → logprob: -5.007115840911865
    3. ' <' → logprob: -8.132115364074707
    4. ' >=' → logprob: -9.757115364074707
    5. ' ' → logprob: -10.757115364074707
    6. ' <=' → logprob: -11.257115364074707
    7. '<|end|>' → logprob: -12.507115364074707
    8. ':' → logprob: -13.132115364074707
    9. '   ' → logprob: -13.132115364074707
    10. '<' → logprob: -13.632115364074707

Token 58: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42871081829071045
    2. ' ' → logprob: -1.0537108182907104
    3. '=' → logprob: -13.3037109375
    4. '<|end|>' → logprob: -13.4287109375
    5. '1' → logprob: -13.6162109375
    6. 'total' → logprob: -14.0537109375
    7. '>' → logprob: -14.3662109375
    8. '  ' → logprob: -14.5537109375
    9. ' ' → logprob: -14.6162109375
    10. '   ' → logprob: -14.8662109375

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008117707911878824
    2. ' ' → logprob: -7.125811576843262
    3. '1' → logprob: -12.750811576843262
    4. '10' → logprob: -13.875811576843262
    5. '5' → logprob: -14.375811576843262
    6. '2' → logprob: -14.625811576843262
    7. '-' → logprob: -14.750811576843262
    8. '3' → logprob: -15.375811576843262
    9. 'zero' → logprob: -15.500811576843262
    10. '9' → logprob: -15.750811576843262

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007500672363676131
    2. '       ' → logprob: -7.3757500648498535
    3. ':
' → logprob: -9.750750541687012
    4. '):' → logprob: -10.500750541687012
    5. ' :' → logprob: -10.750750541687012
    6. '   ' → logprob: -11.375750541687012
    7. '<|end|>' → logprob: -13.125750541687012
    8. ',' → logprob: -14.500750541687012
    9. ':**' → logprob: -15.125750541687012
    10. ')' → logprob: -15.125750541687012

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02422918938100338
    2. ' total' → logprob: -4.399229049682617
    3. 'total' → logprob: -4.649229049682617
    4. '   ' → logprob: -7.274229049682617
    5. '	total' → logprob: -7.524229049682617
    6. '+' → logprob: -9.024229049682617
    7. '<|end|>' → logprob: -9.149229049682617
    8. ',total' → logprob: -9.274229049682617
    9. '(total' → logprob: -9.399229049682617
    10. ' ' → logprob: -9.899229049682617

Token 62: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2832474708557129
    2. 'total' (adapté à ' total') → logprob: -1.408247470855713
    3. '           ' → logprob: -7.033247470855713
    4. '       ' → logprob: -7.408247470855713
    5. '	total' → logprob: -8.408246994018555
    6. ' ' → logprob: -9.033246994018555
    7. '   ' → logprob: -9.783246994018555
    8. '        ' → logprob: -10.408246994018555
    9. ' ' → logprob: -10.408246994018555
    10. ',total' → logprob: -10.408246994018555

Token 63: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -1.2233183042553719e-05
    2. 'difference' → logprob: -12.000012397766113
    3. '_d' → logprob: -12.625012397766113
    4. '_' → logprob: -13.000012397766113
    5. '_cost' → logprob: -16.000011444091797
    6. ' _' → logprob: -16.625011444091797
    7. ' difference' → logprob: -16.875011444091797
    8. '_div' → logprob: -17.125011444091797
    9. '_value' → logprob: -17.375011444091797
    10. '_distance' → logprob: -17.875011444091797

Token 64: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00047809764510020614
    2. '_' → logprob: -7.750478267669678
    3. '_s' → logprob: -11.00047779083252
    4. ' +=' → logprob: -11.12547779083252
    5. '+=' → logprob: -12.25047779083252
    6. '_add' → logprob: -12.62547779083252
    7. ' _' → logprob: -12.62547779083252
    8. '```' → logprob: -14.37547779083252
    9. '_count' → logprob: -14.87547779083252
    10. 'sum' → logprob: -15.12547779083252

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.002195337088778615
    2. '+=' → logprob: -6.127195358276367
    3. '+' → logprob: -12.002195358276367
    4. ' +' → logprob: -13.377195358276367
    5. '<|end|>' → logprob: -14.627195358276367
    6. ' ' → logprob: -14.877195358276367
    7. ' -=' → logprob: -15.002195358276367
    8. ' =' → logprob: -15.127195358276367
    9. '    ' → logprob: -15.252195358276367
    10. ']+=' → logprob: -15.377195358276367

Token 66: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.16023722290992737
    2. 'difference' → logprob: -1.910237193107605
    3. 'd' → logprob: -11.535237312316895
    4. ' ' → logprob: -13.785237312316895
    5. 'dif' → logprob: -15.035237312316895
    6. '   ' → logprob: -15.285237312316895
    7. ' ' → logprob: -15.285237312316895
    8. ' d' → logprob: -15.660237312316895
    9. '_difference' → logprob: -15.785237312316895
    10. 'diff' → logprob: -15.785237312316895

Token 67: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018501047743484378
    2. '<|end|>' → logprob: -6.626850128173828
    3. ' print' → logprob: -8.626850128173828
    4. '
' → logprob: -8.751850128173828
    5. '```' → logprob: -9.126850128173828
    6. ')' → logprob: -10.501850128173828
    7. '#' → logprob: -11.376850128173828
    8. '\n' → logprob: -11.501850128173828
    9. 'return' → logprob: -11.876850128173828
    10. '\' → logprob: -12.376850128173828

Token 68: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020911383908241987
    2. '
' → logprob: -6.502090930938721
    3. '<|end|>' → logprob: -8.377091407775879
    4. ' print' → logprob: -8.502091407775879
    5. '```' → logprob: -9.752091407775879
    6. '#' → logprob: -10.127091407775879
    7. '\n' → logprob: -11.127091407775879
    8. ')' → logprob: -11.377091407775879
    9. '#print' → logprob: -12.127091407775879
    10. '(print' → logprob: -12.252091407775879

Token 69: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03826616704463959
    2. '(total' → logprob: -3.288266181945801
    3. '('' → logprob: -8.7882661819458
    4. '("("' → logprob: -9.9132661819458
    5. '()' → logprob: -11.6632661819458
    6. 'total' → logprob: -12.1632661819458
    7. '(`' → logprob: -12.9132661819458
    8. ' (' → logprob: -13.1632661819458
    9. '(sum' → logprob: -14.4132661819458
    10. '(t' → logprob: -14.5382661819458

Token 70: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.750001907348633
    3. 'difference' → logprob: -14.000001907348633
    4. '_diff' → logprob: -15.625001907348633
    5. 'Difference' → logprob: -17.375001907348633
    6. '_d' → logprob: -17.875001907348633
    7. ' difference' → logprob: -18.000001907348633
    8. '__' → logprob: -18.750001907348633
    9. '_factor' → logprob: -19.000001907348633
    10. '_value' → logprob: -19.125001907348633

Token 71: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0206720617134124e-05
    2. '_s' → logprob: -11.75001049041748
    3. '_' → logprob: -13.62501049041748
    4. ')_' → logprob: -15.00001049041748
    5. '_difference' → logprob: -15.62501049041748
    6. ' _' → logprob: -16.375009536743164
    7. ')' → logprob: -16.750009536743164
    8. '_S' → logprob: -17.125009536743164
    9. '_suffix' → logprob: -17.125009536743164
    10. '_count' → logprob: -17.125009536743164

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -16.125
    3. ' )' → logprob: -16.5
    4. ')`' → logprob: -16.625
    5. ')
' → logprob: -18.125
    6. '()' → logprob: -19.875
    7. '`)' → logprob: -20.125
    8. '())' → logprob: -20.125
    9. ')}' → logprob: -20.125
    10. '）' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 58
Précision stricte (1ère position): 52.86%
Précision adaptée (1ère position): 52.86%
Précision (top 10): 82.86%
================================================================================
