================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import accumulate, product
from operator import mul

def cmb(n, r, mod):
    return (sum(map(lambda x: x[0]*x[1]*x[2], zip([g1[n]], [g2[r]], [g2[n-r]]))) * (0 if any((r<0, r>n)) else 1)) % mod if n>=0 and 0<=r<=n else 0

n = int(input())
mod = 998244353

def prod(iterable, mod):
    return reduce(lambda x, y: x * y % mod, iterable, 1)

g1 = list(accumulate(range(2), lambda x, y: x * y % mod)) + [1]
while len(g1) <= n:
    g1.append(g1[-1] * len(g1) % mod)
inverse = [0, 1]
g2 = [1, 1]
[ (inverse.append((-inverse[mod % i] * (mod // i)) % mod), g2.append(g2[-1]*inverse[-1]%mod)) for i in range(2, n+1) ]

a = 0
b = 1
lst = range(n, n//2, -1)
def exp2(i): return pow(2, n-i, mod)
for idx, i in enumerate(lst):
    a = sum([(a + cmb(n, i, mod) * b) % mod for _ in range(1)]) % mod
    b = prod([b, 2], mod)
ans = (pow(3, n, mod) - 2 * a) % mod
print((ans + mod) % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020179791375994682
    2. '(lambda' → logprob: -4.270179748535156
    3. '.' → logprob: -5.270179748535156
    4. ',' → logprob: -8.020179748535156
    5. ' (' → logprob: -8.395179748535156
    6. '```' → logprob: -9.520179748535156
    7. '(
' → logprob: -10.145179748535156
    8. '\(' → logprob: -10.270179748535156
    9. '\' → logprob: -10.395179748535156
    10. 'lambda' → logprob: -11.020179748535156

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6127365827560425
    2. 'import' → logprob: -0.8627365827560425
    3. '.' → logprob: -3.362736701965332
    4. '.import' → logprob: -6.737736701965332
    5. ' .' → logprob: -9.362736701965332
    6. '	import' → logprob: -9.737736701965332
    7. '.im' → logprob: -10.112736701965332
    8. '_import' → logprob: -10.487736701965332
    9. ' ' → logprob: -10.487736701965332
    10. '<|end|>' → logprob: -11.487736701965332

Token 8: ' accumulate' (ID: 74226)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.7541866302490234
    2. 'group' → logprob: -2.5041866302490234
    3. 'acc' → logprob: -2.5041866302490234
    4. ' cycle' → logprob: -2.6291866302490234
    5. ' accumulate' → logprob: -2.6291866302490234
    6. 'count' → logprob: -2.8791866302490234
    7. 'import' → logprob: -3.3791866302490234
    8. ' chain' → logprob: -3.7541866302490234
    9. 'cycle' → logprob: -3.8791866302490234
    10. 'com' → logprob: -3.8791866302490234

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020584287121891975
    2. '(
' → logprob: -4.7705841064453125
    3. '.' → logprob: -5.3955841064453125
    4. ',' → logprob: -6.2705841064453125
    5. '\' → logprob: -6.2705841064453125
    6. 'def' → logprob: -6.6455841064453125
    7. '```' → logprob: -7.3955841064453125
    8. '\n' → logprob: -7.6455841064453125
    9. '`' → logprob: -8.395584106445312
    10. 'import' → logprob: -8.770584106445312

Token 10: ' product' (ID: 1888)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.42709842324256897
    2. ' group' → logprob: -1.9270983934402466
    3. 'chain' → logprob: -2.302098512649536
    4. ' chain' → logprob: -3.052098512649536
    5. 'product' → logprob: -4.177098274230957
    6. 'com' → logprob: -4.302098274230957
    7. 'count' → logprob: -4.427098274230957
    8. ' product' → logprob: -5.427098274230957
    9. 'tee' → logprob: -6.177098274230957
    10. 'per' → logprob: -6.677098274230957

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04209496080875397
    2. '(
' → logprob: -3.4170949459075928
    3. ',' → logprob: -5.792095184326172
    4. 'def' → logprob: -6.167095184326172
    5. '\' → logprob: -7.167095184326172
    6. '```' → logprob: -7.667095184326172
    7. '\n' → logprob: -7.792095184326172
    8. '.' → logprob: -7.917095184326172
    9. 'import' → logprob: -8.292095184326172
    10. '`' → logprob: -8.667095184326172

Token 12: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5371007323265076
    2. '(
' → logprob: -1.9121007919311523
    3. 'def' → logprob: -2.4121007919311523
    4. ',' → logprob: -3.0371007919311523
    5. '
' → logprob: -3.2871007919311523
    6. '```' → logprob: -3.5371007919311523
    7. '\n' → logprob: -4.037100791931152
    8. '\' → logprob: -4.787100791931152
    9. 'import' → logprob: -5.037100791931152
    10. '[' → logprob: -5.037100791931152

Token 13: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.3291783332824707
    2. ' math' → logprob: -1.4541783332824707
    3. 'operator' → logprob: -3.5791783332824707
    4. 'math' → logprob: -4.204178333282471
    5. ' collections' → logprob: -5.704178333282471
    6. 'collections' → logprob: -7.579178333282471
    7. ' ' → logprob: -9.704177856445312
    8. ' typing' → logprob: -9.829177856445312
    9. ' heap' → logprob: -11.329177856445312
    10. ' random' → logprob: -11.579177856445312

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10127976536750793
    2. 'import' → logprob: -2.3512797355651855
    3. '.' → logprob: -6.9762797355651855
    4. ' as' → logprob: -9.601280212402344
    5. ' ' → logprob: -10.601280212402344
    6. '	import' → logprob: -11.101280212402344
    7. ' .' → logprob: -11.976280212402344
    8. ',' → logprob: -12.101280212402344
    9. '<|end|>' → logprob: -12.351280212402344
    10. '.import' → logprob: -12.601280212402344

Token 15: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.06624139100313187
    2. ' add' → logprob: -2.941241502761841
    3. 'mul' → logprob: -4.691241264343262
    4. ' import' → logprob: -7.316241264343262
    5. ' item' → logprob: -7.691241264343262
    6. '.mul' → logprob: -8.191241264343262
    7. ' ' → logprob: -8.191241264343262
    8. 'add' → logprob: -8.941241264343262
    9. ' icon' → logprob: -9.816241264343262
    10. '```' → logprob: -10.191241264343262

Token 16: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05955754965543747
    2. ',' → logprob: -3.6845574378967285
    3. '(
' → logprob: -4.3095574378967285
    4. '\' → logprob: -4.9345574378967285
    5. '\n' → logprob: -5.8095574378967285
    6. '[' → logprob: -6.4345574378967285
    7. '\(' → logprob: -6.6845574378967285
    8. '```' → logprob: -6.6845574378967285
    9. 'def' → logprob: -6.8095574378967285
    10. '#' → logprob: -7.3095574378967285

Token 17: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5615414381027222
    2. '#' → logprob: -1.8115414381027222
    3. '*' → logprob: -2.5615415573120117
    4. '\' → logprob: -2.5615415573120117
    5. 'def' → logprob: -2.5615415573120117
    6. 'a' → logprob: -2.8115415573120117
    7. ',' → logprob: -2.9365415573120117
    8. 'd' → logprob: -2.9365415573120117
    9. '`' → logprob: -3.3115415573120117
    10. '```' → logprob: -3.3115415573120117

Token 18: ' cmb' (ID: 78973)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4501354694366455
    2. ' factorial' → logprob: -1.7001354694366455
    3. ' reduce' → logprob: -2.4501354694366455
    4. ' calculate' → logprob: -3.9501354694366455
    5. ' factor' → logprob: -4.200135231018066
    6. ' accumulate' → logprob: -4.325135231018066
    7. ' map' → logprob: -4.825135231018066
    8. ' my' → logprob: -5.325135231018066
    9. ' product' → logprob: -5.575135231018066
    10. ' compose' → logprob: -5.700135231018066

Token 19: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4311995804309845
    2. 'ination' → logprob: -2.056199550628662
    3. 'in' → logprob: -2.806199550628662
    4. '(' → logprob: -2.931199550628662
    5. 'inator' → logprob: -3.181199550628662
    6. 'ine' → logprob: -3.931199550628662
    7. '```' → logprob: -4.306199550628662
    8. 'inations' → logprob: -4.556199550628662
    9. 'inate' → logprob: -5.306199550628662
    10. '[' → logprob: -5.931199550628662

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009829123737290502
    2. ',n' → logprob: -8.000983238220215
    3. ' ,' → logprob: -8.750983238220215
    4. 'u' → logprob: -8.750983238220215
    5. ',u' → logprob: -9.000983238220215
    6. ',k' → logprob: -9.375983238220215
    7. ',)' → logprob: -10.125983238220215
    8. ')' → logprob: -10.250983238220215
    9. ',r' → logprob: -11.875983238220215
    10. ',i' → logprob: -11.875983238220215

Token 21: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22737830877304077
    2. ' k' → logprob: -2.3523783683776855
    3. 'r' → logprob: -2.4773783683776855
    4. ' r' → logprob: -3.7273783683776855
    5. ' ' → logprob: -8.977377891540527
    6. 'm' → logprob: -11.102377891540527
    7. 'n' → logprob: -11.477377891540527
    8. '```' → logprob: -11.477377891540527
    9. '   ' → logprob: -12.039877891540527
    10. ')' → logprob: -12.289877891540527

Token 22: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08896847069263458
    2. ')' → logprob: -2.463968515396118
    3. '):
' → logprob: -11.338968276977539
    4. ':' → logprob: -12.088968276977539
    5. ',' → logprob: -12.963968276977539
    6. '),' → logprob: -13.338968276977539
    7. ' ):' → logprob: -13.338968276977539
    8. '}' → logprob: -13.588968276977539
    9. ')=' → logprob: -14.588968276977539
    10. ')}' → logprob: -14.588968276977539

Token 23: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5453445911407471
    2. ' cache' → logprob: -2.170344591140747
    3. 'mod' → logprob: -2.170344591140747
    4. ' factorial' → logprob: -2.920344591140747
    5. ' fact' → logprob: -3.170344591140747
    6. ' )' → logprob: -4.420344352722168
    7. ' ' → logprob: -4.545344352722168
    8. ' m' → logprob: -4.670344352722168
    9. ' k' → logprob: -4.795344352722168
    10. ' exact' → logprob: -5.420344352722168

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03903402015566826
    2. '=' → logprob: -3.289034128189087
    3. ')' → logprob: -7.289033889770508
    4. '=None' → logprob: -8.414033889770508
    5. ' ):' → logprob: -9.789033889770508
    6. ',' → logprob: -11.414033889770508
    7. '):
' → logprob: -11.789033889770508
    8. ')=' → logprob: -12.414033889770508
    9. ':' → logprob: -12.539033889770508
    10. ' =' → logprob: -12.789033889770508

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.608877956867218
    2. ':' → logprob: -0.983877956867218
    3. '):' → logprob: -2.6088778972625732
    4. '    ' → logprob: -6.108878135681152
    5. ' :' → logprob: -6.358878135681152
    6. ' ' → logprob: -7.233878135681152
    7. ',' → logprob: -7.233878135681152
    8. ' return' → logprob: -7.358878135681152
    9. ' ):' → logprob: -7.608878135681152
    10. ')' → logprob: -7.858878135681152

Token 26: ' return' (ID: 622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2698200941085815
    2. '   ' → logprob: -1.5198200941085815
    3. ' ' → logprob: -1.7698200941085815
    4. '    ' → logprob: -1.8948200941085815
    5. '):' → logprob: -3.269820213317871
    6. ' return' → logprob: -3.644820213317871
    7. ' 
' → logprob: -3.644820213317871
    8. ' :' → logprob: -3.644820213317871
    9. ' ):' → logprob: -4.519820213317871
    10. '    
' → logprob: -4.644820213317871

Token 27: ' (' (ID: 350)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.5790284872055054
    2. ' (' → logprob: -1.3290284872055054
    3. 'reduce' → logprob: -2.829028606414795
    4. ' ' → logprob: -2.954028606414795
    5. ' factorial' → logprob: -3.579028606414795
    6. '1' → logprob: -4.454028606414795
    7. ' pow' → logprob: -4.954028606414795
    8. '(' → logprob: -5.329028606414795
    9. 'pow' → logprob: -6.079028606414795
    10. 'factor' → logprob: -6.454028606414795

Token 28: 'sum' (ID: 12298)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.25872135162353516
    2. ' reduce' → logprob: -2.383721351623535
    3. 'factor' → logprob: -2.883721351623535
    4. '1' → logprob: -3.258721351623535
    5. ')' → logprob: -4.258721351623535
    6. ' factorial' → logprob: -4.633721351623535
    7. ' ' → logprob: -5.133721351623535
    8. 'fact' → logprob: -5.508721351623535
    9. ' (' → logprob: -6.258721351623535
    10. 'pow' → logprob: -7.383721351623535

Token 29: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19044218957424164
    2. '(acc' → logprob: -2.0654420852661133
    3. '(product' → logprob: -3.4404420852661133
    4. ')' → logprob: -5.440442085266113
    5. '(map' → logprob: -5.940442085266113
    6. '(range' → logprob: -6.690442085266113
    7. '(pow' → logprob: -6.940442085266113
    8. 'product' → logprob: -7.190442085266113
    9. '(com' → logprob: -7.315442085266113
    10. 'acc' → logprob: -7.440442085266113

Token 30: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.06304530799388885
    2. '(' → logprob: -2.9380452632904053
    3. ')' → logprob: -6.063045501708984
    4. '(int' → logprob: -6.313045501708984
    5. '(m' → logprob: -6.938045501708984
    6. ')(' → logprob: -6.938045501708984
    7. 'lambda' → logprob: -7.313045501708984
    8. '(part' → logprob: -8.313045501708984
    9. 'mul' → logprob: -8.563045501708984
    10. '(
' → logprob: -8.563045501708984

Token 31: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.659950852394104
    2. ' lambda' → logprob: -0.909950852394104
    3. ' x' → logprob: -3.7849507331848145
    4. 'mul' → logprob: -3.7849507331848145
    5. 'x' → logprob: -4.9099507331848145
    6. '(lambda' → logprob: -4.9099507331848145
    7. ':' → logprob: -5.4099507331848145
    8. '=lambda' → logprob: -6.1599507331848145
    9. ' mul' → logprob: -6.2849507331848145
    10. '   ' → logprob: -6.8474507331848145

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016843474004417658
    2. ',' → logprob: -6.626684188842773
    3. ' :' → logprob: -8.251684188842773
    4. ':x' → logprob: -11.251684188842773
    5. ':n' → logprob: -11.251684188842773
    6. ':(' → logprob: -11.376684188842773
    7. ':
' → logprob: -11.376684188842773
    8. 'x' → logprob: -11.626684188842773
    9. 'n' → logprob: -12.626684188842773
    10. ':int' → logprob: -12.751684188842773

Token 33: ' x' (ID: 1215)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.852107584476471
    2. ' (-' → logprob: -1.8521075248718262
    3. ' (' → logprob: -2.227107524871826
    4. 'mul' → logprob: -2.227107524871826
    5. ' mul' → logprob: -3.602107524871826
    6. 'pow' → logprob: -3.852107524871826
    7. '(n' → logprob: -3.852107524871826
    8. '((-' → logprob: -4.102107524871826
    9. '(' → logprob: -4.352107524871826
    10. ' x' → logprob: -4.602107524871826

Token 34: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1268337070941925
    2. '[' → logprob: -3.00183367729187
    3. '=' → logprob: -4.376833915710449
    4. '*' → logprob: -4.626833915710449
    5. ' :' → logprob: -4.876833915710449
    6. ' *' → logprob: -5.126833915710449
    7. ',' → logprob: -5.251833915710449
    8. '**' → logprob: -5.501833915710449
    9. '=lambda' → logprob: -6.251833915710449
    10. '[n' → logprob: -6.376833915710449

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3893730342388153
    2. '1' → logprob: -1.1393730640411377
    3. ' ' → logprob: -6.764372825622559
    4. ':' → logprob: -7.264372825622559
    5. '-' → logprob: -8.139372825622559
    6. '*' → logprob: -9.951872825622559
    7. ' :' → logprob: -10.326872825622559
    8. 'r' → logprob: -10.451872825622559
    9. '
' → logprob: -10.514372825622559
    10. '2' → logprob: -10.639372825622559

Token 36: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1768169403076172
    2. ']*' → logprob: -2.676816940307617
    3. ']' → logprob: -2.926816940307617
    4. ' *' → logprob: -3.801816940307617
    5. ',' → logprob: -5.801816940307617
    6. ')' → logprob: -6.301816940307617
    7. '**' → logprob: -6.426816940307617
    8. '[' → logprob: -6.551816940307617
    9. ')*' → logprob: -6.801816940307617
    10. '],' → logprob: -6.801816940307617

Token 37: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026342563331127167
    2. ' x' → logprob: -3.7763426303863525
    3. 'pow' → logprob: -6.151342391967773
    4. 'n' → logprob: -8.651342391967773
    5. '(x' → logprob: -8.776342391967773
    6. ' pow' → logprob: -9.026342391967773
    7. 'cmb' → logprob: -9.651342391967773
    8. '(' → logprob: -9.776342391967773
    9. ' cmb' → logprob: -10.026342391967773
    10. '(-' → logprob: -10.026342391967773

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016673270147293806
    2. ',' → logprob: -7.001667499542236
    3. '*' → logprob: -9.126667022705078
    4. '][' → logprob: -9.251667022705078
    5. '-' → logprob: -9.501667022705078
    6. ']' → logprob: -10.251667022705078
    7. ')' → logprob: -10.376667022705078
    8. '```' → logprob: -10.376667022705078
    9. ']*' → logprob: -10.501667022705078
    10. 'x' → logprob: -10.751667022705078

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031592994928359985
    2. '-' → logprob: -6.878159523010254
    3. '])' → logprob: -7.253159523010254
    4. ']' → logprob: -7.628159523010254
    5. '[' → logprob: -8.753159523010254
    6. 'x' → logprob: -9.003159523010254
    7. ']*' → logprob: -9.128159523010254
    8. '])*' → logprob: -9.753159523010254
    9. '],' → logprob: -10.003159523010254
    10. '0' → logprob: -10.065659523010254

Token 40: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2006479650735855
    2. '%' → logprob: -2.325648069381714
    3. ' ,' → logprob: -3.200648069381714
    4. ' %' → logprob: -3.200648069381714
    5. '%,' → logprob: -7.075647830963135
    6. ',
' → logprob: -7.200647830963135
    7. '   ' → logprob: -7.950647830963135
    8. ' ' → logprob: -8.950648307800293
    9. ')' → logprob: -9.325648307800293
    10. '%x' → logprob: -9.575648307800293

Token 41: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0534290075302124
    2. 'pow' → logprob: -1.3034290075302124
    3. '(-' → logprob: -1.3034290075302124
    4. '((-' → logprob: -3.803429126739502
    5. ' (-' → logprob: -4.553429126739502
    6. 'mul' → logprob: -4.678429126739502
    7. ' x' → logprob: -4.803429126739502
    8. '(' → logprob: -4.803429126739502
    9. '(x' → logprob: -4.928429126739502
    10. ' pow' → logprob: -5.178429126739502

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009571205824613571
    2. ',' → logprob: -5.384571075439453
    3. '-' → logprob: -5.884571075439453
    4. '],' → logprob: -8.384571075439453
    5. '[-' → logprob: -8.384571075439453
    6. '(' → logprob: -8.509571075439453
    7. '(x' → logprob: -8.884571075439453
    8. ']' → logprob: -9.259571075439453
    9. '),' → logprob: -9.384571075439453
    10. ' ,' → logprob: -9.634571075439453

Token 43: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013393030501902103
    2. '0' → logprob: -4.763392925262451
    3. '2' → logprob: -5.638392925262451
    4. '])' → logprob: -7.888392925262451
    5. '],' → logprob: -8.38839340209961
    6. '-' → logprob: -8.51339340209961
    7. 'x' → logprob: -8.88839340209961
    8. ' ' → logprob: -9.88839340209961
    9. '```' → logprob: -10.38839340209961
    10. ']))' → logprob: -10.70089340209961

Token 44: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044151677866466343
    2. ' ,' → logprob: -8.125441551208496
    3. '(x' → logprob: -10.625441551208496
    4. '(' → logprob: -11.125441551208496
    5. ',(' → logprob: -11.375441551208496
    6. ',x' → logprob: -11.375441551208496
    7. ',
' → logprob: -11.500441551208496
    8. '),' → logprob: -11.625441551208496
    9. ',[' → logprob: -11.750441551208496
    10. '   ' → logprob: -11.750441551208496

Token 45: ' zip' (ID: 16216)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.22870904207229614
    2. 'product' → logprob: -1.9787089824676514
    3. ' zip' → logprob: -2.8537089824676514
    4. 'zip' → logprob: -5.4787092208862305
    5. ' enumerate' → logprob: -6.3537092208862305
    6. 'enumer' → logprob: -7.6037092208862305
    7. '(product' → logprob: -7.7287092208862305
    8. '[' → logprob: -7.8537092208862305
    9. '[(' → logprob: -8.35370922088623
    10. ')' → logprob: -8.47870922088623

Token 46: '([' (ID: 5194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6153925657272339
    2. '(acc' → logprob: -1.1153925657272339
    3. '(' → logprob: -2.2403926849365234
    4. '(product' → logprob: -4.490392684936523
    5. '([' → logprob: -5.240392684936523
    6. '((' → logprob: -6.740392684936523
    7. '(*' → logprob: -6.865392684936523
    8. '(com' → logprob: -6.990392684936523
    9. 'acc' → logprob: -6.990392684936523
    10. '(f' → logprob: -7.115392684936523

Token 47: 'g' (ID: 70)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0834142342209816
    2. ' range' → logprob: -3.583414316177368
    3. '(range' → logprob: -3.833414316177368
    4. '[' → logprob: -3.958414316177368
    5. 'reduce' → logprob: -5.958414077758789
    6. 'acc' → logprob: -5.958414077758789
    7. ' [' → logprob: -6.708414077758789
    8. '[n' → logprob: -6.833414077758789
    9. ')' → logprob: -7.458414077758789
    10. 'list' → logprob: -8.083414077758789

Token 48: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8515345454216003
    2. '(range' → logprob: -0.8515345454216003
    3. 'amma' → logprob: -3.726534605026245
    4. '[n' → logprob: -4.351534366607666
    5. '(lambda' → logprob: -4.476534366607666
    6. '[' → logprob: -4.601534366607666
    7. '(n' → logprob: -4.601534366607666
    8. 'cd' → logprob: -5.226534366607666
    9. 'a' → logprob: -5.351534366607666
    10. '```' → logprob: -5.351534366607666

Token 49: '[n' (ID: 15433)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6280375719070435
    2. '(n' → logprob: -1.0030375719070435
    3. '(i' → logprob: -4.628037452697754
    4. '(' → logprob: -4.753037452697754
    5. '[n' → logprob: -4.878037452697754
    6. '([' → logprob: -5.003037452697754
    7. '(g' → logprob: -5.003037452697754
    8. ']' → logprob: -5.378037452697754
    9. 'amma' → logprob: -5.503037452697754
    10. '[' → logprob: -5.503037452697754

Token 50: ']],' (ID: 37171)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.08288636803627014
    2. '],' → logprob: -3.3328864574432373
    3. ']' → logprob: -3.7078864574432373
    4. '-' → logprob: -5.207886219024658
    5. '-i' → logprob: -5.332886219024658
    6. '][' → logprob: -5.332886219024658
    7. ' -' → logprob: -5.707886219024658
    8. '-k' → logprob: -8.582886695861816
    9. '-j' → logprob: -8.707886695861816
    10. '],[' → logprob: -9.707886695861816

Token 51: ' [' (ID: 723)
  Prédit: '[g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.6866316795349121
    2. ' [' → logprob: -1.061631679534912
    3. '[' → logprob: -2.686631679534912
    4. 'g' → logprob: -2.936631679534912
    5. ' g' → logprob: -3.561631679534912
    6. ' ' → logprob: -8.81163215637207
    7. '#g' → logprob: -9.43663215637207
    8. '[n' → logprob: -9.49913215637207
    9. '    ' → logprob: -9.62413215637207
    10. '<|end|>' → logprob: -9.81163215637207

Token 52: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0015211685094982386
    2. 'f' → logprob: -7.001521110534668
    3. 'c' → logprob: -9.501521110534668
    4. '[g' → logprob: -9.501521110534668
    5. ' g' → logprob: -9.626521110534668
    6. 'h' → logprob: -9.751521110534668
    7. 'r' → logprob: -10.001521110534668
    8. 'p' → logprob: -10.626521110534668
    9. 'pow' → logprob: -10.626521110534668
    10. 'm' → logprob: -10.876521110534668

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5935089588165283
    2. '1' → logprob: -1.0935089588165283
    3. 'r' → logprob: -3.0935089588165283
    4. '[r' → logprob: -3.4685089588165283
    5. '0' → logprob: -3.7185089588165283
    6. '[n' → logprob: -5.218508720397949
    7. 'n' → logprob: -6.343508720397949
    8. 'g' → logprob: -6.468508720397949
    9. 'm' → logprob: -6.593508720397949
    10. '```' → logprob: -8.46850872039795

Token 54: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.12799936532974243
    2. '[n' → logprob: -2.3779993057250977
    3. '[m' → logprob: -3.8779993057250977
    4. '[' → logprob: -5.502999305725098
    5. '[g' → logprob: -6.627999305725098
    6. '][' → logprob: -7.877999305725098
    7. ',r' → logprob: -8.377999305725098
    8. 'r' → logprob: -8.877999305725098
    9. ']' → logprob: -8.877999305725098
    10. '(r' → logprob: -10.002999305725098

Token 55: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0004565327544696629
    2. ']' → logprob: -8.375456809997559
    3. ':],' → logprob: -9.250456809997559
    4. ' ],' → logprob: -10.500456809997559
    5. ']],' → logprob: -10.750456809997559
    6. 'n' → logprob: -11.125456809997559
    7. ']),' → logprob: -11.625456809997559
    8. 'g' → logprob: -11.875456809997559
    9. ''],' → logprob: -12.000456809997559
    10. '],

' → logprob: -12.125456809997559

Token 56: ' [' (ID: 723)
  Prédit: '[g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.07054450362920761
    2. ' [' → logprob: -2.695544481277466
    3. 'g' → logprob: -8.445544242858887
    4. '[' → logprob: -9.195544242858887
    5. ' g' → logprob: -9.695544242858887
    6. ' ' → logprob: -9.820544242858887
    7. '  ' → logprob: -10.695544242858887
    8. '   ' → logprob: -10.695544242858887
    9. '[m' → logprob: -11.133044242858887
    10. '(g' → logprob: -11.820544242858887

Token 57: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.001255230512470007
    2. ' g' → logprob: -8.00125503540039
    3. 'pow' → logprob: -8.75125503540039
    4. 'h' → logprob: -9.25125503540039
    5. '    ' → logprob: -9.37625503540039
    6. '   ' → logprob: -9.37625503540039
    7. '(g' → logprob: -9.87625503540039
    8. 'f' → logprob: -10.00125503540039
    9. '1' → logprob: -10.12625503540039
    10. ']' → logprob: -10.25125503540039

Token 58: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.733134925365448
    2. '-r' → logprob: -1.4831349849700928
    3. '[r' → logprob: -1.9831349849700928
    4. '[n' → logprob: -2.8581349849700928
    5. '2' → logprob: -3.3581349849700928
    6. 'n' → logprob: -4.108134746551514
    7. '-' → logprob: -4.233134746551514
    8. '-n' → logprob: -4.733134746551514
    9. ']' → logprob: -5.483134746551514
    10. ' -' → logprob: -6.233134746551514

Token 59: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0012832103529945016
    2. '[r' → logprob: -7.126283168792725
    3. '[' → logprob: -8.626283645629883
    4. '(n' → logprob: -8.751283645629883
    5. 'n' → logprob: -10.001283645629883
    6. '[(' → logprob: -10.751283645629883
    7. '[-' → logprob: -11.376283645629883
    8. '][' → logprob: -11.751283645629883
    9. ']' → logprob: -12.001283645629883
    10. '[g' → logprob: -12.001283645629883

Token 60: '-r' (ID: 6335)
  Prédit: '-r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.017788497731089592
    2. '-' → logprob: -4.267788410186768
    3. ' -' → logprob: -5.642788410186768
    4. 'r' → logprob: -9.767788887023926
    5. '[r' → logprob: -12.017788887023926
    6. '-R' → logprob: -12.267788887023926
    7. ']' → logprob: -13.017788887023926
    8. '[' → logprob: -14.017788887023926
    9. '−' → logprob: -14.267788887023926
    10. ']]' → logprob: -14.267788887023926

Token 61: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.44671082496643066
    2. ']' → logprob: -1.6967108249664307
    3. ']))' → logprob: -1.8217108249664307
    4. '])))' → logprob: -5.321710586547852
    5. ']])' → logprob: -5.696710586547852
    6. '])]' → logprob: -5.821710586547852
    7. ']]]' → logprob: -6.696710586547852
    8. ')]' → logprob: -6.821710586547852
    9. '])' → logprob: -7.196710586547852
    10. '],' → logprob: -8.321710586547852

Token 62: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.6231969594955444
    2. '))))' → logprob: -0.8731969594955444
    3. '))' → logprob: -3.248197078704834
    4. '),' → logprob: -5.873197078704834
    5. ')' → logprob: -6.248197078704834
    6. '])))' → logprob: -6.998197078704834
    7. ')),' → logprob: -7.748197078704834
    8. ']))' → logprob: -8.623196601867676
    9. '))))
' → logprob: -8.748196601867676
    10. ')));' → logprob: -8.748196601867676

Token 63: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20354600250720978
    2. '))' → logprob: -1.7035460472106934
    3. ',' → logprob: -7.328546047210693
    4. ')))' → logprob: -7.578546047210693
    5. '),' → logprob: -7.828546047210693
    6. '[' → logprob: -8.203545570373535
    7. '(' → logprob: -9.328545570373535
    8. '(n' → logprob: -10.828545570373535
    9. '])' → logprob: -11.078545570373535
    10. ')
' → logprob: -11.578545570373535

Token 64: ' (' (ID: 350)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.24932962656021118
    2. 'g' → logprob: -2.4993295669555664
    3. ' pow' → logprob: -2.8743295669555664
    4. ' g' → logprob: -3.3743295669555664
    5. '1' → logprob: -3.9993295669555664
    6. ' ' → logprob: -5.374329566955566
    7. 'mod' → logprob: -5.499329566955566
    8. 'inv' → logprob: -5.749329566955566
    9. '(pow' → logprob: -5.999329566955566
    10. ' mod' → logprob: -6.624329566955566

Token 65: '0' (ID: 15)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.22225186228752136
    2. 'g' → logprob: -2.4722518920898438
    3. '1' → logprob: -3.4722518920898438
    4. ' pow' → logprob: -3.8472518920898438
    5. 'mod' → logprob: -4.347251892089844
    6. ' g' → logprob: -4.847251892089844
    7. 'inv' → logprob: -5.097251892089844
    8. 'reduce' → logprob: -5.597251892089844
    9. 'mul' → logprob: -5.722251892089844
    10. '(pow' → logprob: -5.847251892089844

Token 66: ' if' (ID: 538)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5223650932312012
    2. '+' → logprob: -1.7723650932312012
    3. ')' → logprob: -2.272365093231201
    4. ']' → logprob: -2.647365093231201
    5. '**' → logprob: -2.897365093231201
    6. '))' → logprob: -2.897365093231201
    7. '1' → logprob: -3.272365093231201
    8. ' -' → logprob: -3.397365093231201
    9. ',' → logprob: -3.522365093231201
    10. ']))' → logprob: -3.647365093231201

Token 67: ' any' (ID: 1062)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.9671654105186462
    2. 'r' → logprob: -1.217165470123291
    3. ' mod' → logprob: -2.592165470123291
    4. ' n' → logprob: -3.342165470123291
    5. 'mod' → logprob: -3.467165470123291
    6. ' (' → logprob: -3.592165470123291
    7. 'n' → logprob: -3.717165470123291
    8. '(n' → logprob: -3.967165470123291
    9. 'g' → logprob: -3.967165470123291
    10. '0' → logprob: -4.092165470123291

Token 68: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1441233158111572
    2. '([' → logprob: -1.3941233158111572
    3. '(lambda' → logprob: -1.7691233158111572
    4. '(n' → logprob: -2.3941233158111572
    5. '(' → logprob: -2.5191233158111572
    6. '(r' → logprob: -3.6441233158111572
    7. '(i' → logprob: -4.144123077392578
    8. '(not' → logprob: -4.644123077392578
    9. '((' → logprob: -4.894123077392578
    10. '([
' → logprob: -5.019123077392578

Token 69: 'r' (ID: 81)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5353037118911743
    2. 'r' → logprob: -1.9103037118911743
    3. '[r' → logprob: -2.9103035926818848
    4. 'i' → logprob: -3.1603035926818848
    5. '(r' → logprob: -3.2853035926818848
    6. '[x' → logprob: -4.160303592681885
    7. '[i' → logprob: -4.285303592681885
    8. '(x' → logprob: -4.285303592681885
    9. 'n' → logprob: -4.785303592681885
    10. ' x' → logprob: -4.785303592681885

Token 70: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.23735542595386505
    2. ' <' → logprob: -1.8623554706573486
    3. '>' → logprob: -3.6123554706573486
    4. ' >' → logprob: -3.7373554706573486
    5. '==' → logprob: -6.2373552322387695
    6. ' ==' → logprob: -6.2373552322387695
    7. ' ' → logprob: -7.3623552322387695
    8. ' <=' → logprob: -8.73735523223877
    9. ' not' → logprob: -8.86235523223877
    10. '<=' → logprob: -8.98735523223877

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019801776856184006
    2. ' ' → logprob: -4.394801616668701
    3. 'r' → logprob: -5.269801616668701
    4. ' r' → logprob: -7.269801616668701
    5. '<' → logprob: -7.644801616668701
    6. 'x' → logprob: -8.26980209350586
    7. ')' → logprob: -8.51980209350586
    8. 'n' → logprob: -9.14480209350586
    9. '1' → logprob: -9.64480209350586
    10. ' <' → logprob: -9.89480209350586

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2479088008403778
    2. ' or' → logprob: -1.6229088306427002
    3. 'or' → logprob: -4.747908592224121
    4. ' ,' → logprob: -4.747908592224121
    5. ',
' → logprob: -6.247908592224121
    6. ',r' → logprob: -6.497908592224121
    7. ',n' → logprob: -7.122908592224121
    8. ')' → logprob: -8.622908592224121
    9. ' ' → logprob: -8.747908592224121
    10. '),' → logprob: -9.247908592224121

Token 73: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4977055788040161
    2. ' r' → logprob: -1.1227055788040161
    3. 'n' → logprob: -3.2477054595947266
    4. ' n' → logprob: -3.6227054595947266
    5. ')' → logprob: -8.247705459594727
    6. ' ' → logprob: -8.872705459594727
    7. ' or' → logprob: -8.997705459594727
    8. '   ' → logprob: -8.997705459594727
    9. '  ' → logprob: -9.622705459594727
    10. ',' → logprob: -10.310205459594727

Token 74: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.005127972923219204
    2. '>,' → logprob: -6.255127906799316
    3. ' >' → logprob: -6.255127906799316
    4. '<' → logprob: -7.255127906799316
    5. '>=' → logprob: -7.630127906799316
    6. ' or' → logprob: -10.880127906799316
    7. '>null' → logprob: -11.755127906799316
    8. 'n' → logprob: -11.755127906799316
    9. '>
' → logprob: -12.380127906799316
    10. '>end' → logprob: -12.505127906799316

Token 75: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001278534036828205
    2. ' n' → logprob: -9.000127792358398
    3. '<|end|>' → logprob: -12.875127792358398
    4. ')n' → logprob: -14.375127792358398
    5. '0' → logprob: -15.500127792358398
    6. ')' → logprob: -15.500127792358398
    7. ' ' → logprob: -16.1251277923584
    8. '```' → logprob: -16.1251277923584
    9. '<|end|>' → logprob: -16.5001277923584
    10. '(n' → logprob: -16.6251277923584

Token 76: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.024495957419276237
    2. ',' → logprob: -4.274496078491211
    3. ')' → logprob: -4.899496078491211
    4. ')))' → logprob: -6.149496078491211
    5. ' ))' → logprob: -8.399496078491211
    6. ')),' → logprob: -9.274496078491211
    7. ',
' → logprob: -9.649496078491211
    8. '),' → logprob: -9.899496078491211
    9. ' ' → logprob: -10.524496078491211
    10. 'else' → logprob: -10.774496078491211

Token 77: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.23185597360134125
    2. 'else' → logprob: -1.6068559885025024
    3. ')' → logprob: -5.106855869293213
    4. ' )' → logprob: -9.606856346130371
    5. '+' → logprob: -9.731856346130371
    6. '==' → logprob: -9.856856346130371
    7. ' ' → logprob: -10.481856346130371
    8. '0' → logprob: -10.481856346130371
    9. '	else' → logprob: -10.606856346130371
    10. '),' → logprob: -10.856856346130371

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06835462898015976
    2. ' ' → logprob: -2.818354606628418
    3. 'pow' → logprob: -6.068354606628418
    4. '0' → logprob: -6.693354606628418
    5. 'g' → logprob: -7.193354606628418
    6. ' g' → logprob: -7.443354606628418
    7. '(' → logprob: -7.693354606628418
    8. ' pow' → logprob: -7.943354606628418
    9. '   ' → logprob: -8.818354606628418
    10. '  ' → logprob: -9.193354606628418

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027190743014216423
    2. 'pow' → logprob: -4.652190685272217
    3. ' ' → logprob: -4.902190685272217
    4. '0' → logprob: -5.152190685272217
    5. 'g' → logprob: -5.902190685272217
    6. '(' → logprob: -7.402190685272217
    7. ' pow' → logprob: -8.652191162109375
    8. ' g' → logprob: -8.902191162109375
    9. '   ' → logprob: -9.527191162109375
    10. 'mul' → logprob: -10.089691162109375

Token 80: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3631848990917206
    2. ')' → logprob: -1.238184928894043
    3. ')))' → logprob: -4.238184928894043
    4. '),' → logprob: -10.113184928894043
    5. ' ))' → logprob: -10.363184928894043
    6. '))))' → logprob: -10.863184928894043
    7. ' )' → logprob: -10.863184928894043
    8. '))*' → logprob: -11.238184928894043
    9. '))+' → logprob: -11.363184928894043
    10. ' ' → logprob: -12.113184928894043

Token 81: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6860281825065613
    2. '(' → logprob: -1.186028242111206
    3. '[' → logprob: -2.186028242111206
    4. ' ' → logprob: -3.936028242111206
    5. '(n' → logprob: -4.686028003692627
    6. '(
' → logprob: -4.686028003692627
    7. ':' → logprob: -4.811028003692627
    8. ',' → logprob: -5.061028003692627
    9. 'g' → logprob: -5.561028003692627
    10. '<|end|>' → logprob: -5.561028003692627

Token 82: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.11283976584672928
    2. ' mod' → logprob: -2.237839698791504
    3. '(mod' → logprob: -12.112839698791504
    4. ' ' → logprob: -12.237839698791504
    5. '```' → logprob: -12.612839698791504
    6. '	mod' → logprob: -13.862839698791504
    7. '10' → logprob: -14.487839698791504
    8. 'm' → logprob: -14.987839698791504
    9. ' ' → logprob: -14.987839698791504
    10. '100' → logprob: -15.612839698791504

Token 83: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4215680658817291
    2. '(' → logprob: -1.9215680360794067
    3. '[' → logprob: -2.6715681552886963
    4. 'g' → logprob: -2.7965681552886963
    5. '<|end|>' → logprob: -3.4215681552886963
    6. ' ' → logprob: -4.046567916870117
    7. ',' → logprob: -5.671567916870117
    8. '#' → logprob: -6.046567916870117
    9. '(
' → logprob: -6.171567916870117
    10. '
' → logprob: -6.546567916870117

Token 84: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4375149607658386
    2. 'n' → logprob: -1.3125150203704834
    3. ' r' → logprob: -3.3125150203704834
    4. 'r' → logprob: -4.312514781951904
    5. ' False' → logprob: -4.562514781951904
    6. 'False' → logprob: -4.812514781951904
    7. '0' → logprob: -5.187514781951904
    8. ' ' → logprob: -5.312514781951904
    9. ' (' → logprob: -6.312514781951904
    10. '(n' → logprob: -6.312514781951904

Token 85: '>=' (ID: 20974)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.23150306940078735
    2. '>=' → logprob: -1.6065030097961426
    3. ' <' → logprob: -5.981503009796143
    4. ' ' → logprob: -6.981503009796143
    5. '>' → logprob: -7.106503009796143
    6. ' >' → logprob: -8.1065034866333
    7. ' ==' → logprob: -8.4815034866333
    8. '[' → logprob: -8.7315034866333
    9. '==' → logprob: -8.7315034866333
    10. '<' → logprob: -8.9815034866333

Token 86: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.29257458448410034
    2. '0' → logprob: -1.4175746440887451
    3. ' r' → logprob: -4.792574405670166
    4. ' ' → logprob: -5.792574405670166
    5. '1' → logprob: -11.417574882507324
    6. 'n' → logprob: -13.542574882507324
    7. '	r' → logprob: -13.980074882507324
    8. '2' → logprob: -14.105074882507324
    9. '3' → logprob: -15.167574882507324
    10. '4' → logprob: -15.292574882507324

Token 87: ' and' (ID: 326)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06396278738975525
    2. 'else' → logprob: -2.813962697982788
    3. '	else' → logprob: -7.313962936401367
    4. '<|end|>' → logprob: -7.813962936401367
    5. ' ' → logprob: -7.938962936401367
    6. ':' → logprob: -8.188962936401367
    7. ')' → logprob: -9.313962936401367
    8. ' and' → logprob: -10.438962936401367
    9. ' :' → logprob: -10.688962936401367
    10. ',' → logprob: -10.688962936401367

Token 88: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09095321595668793
    2. ' r' → logprob: -2.4659531116485596
    3. 'n' → logprob: -6.590953350067139
    4. ' n' → logprob: -7.840953350067139
    5. '0' → logprob: -9.46595287322998
    6. ' ' → logprob: -9.84095287322998
    7. '(r' → logprob: -10.46595287322998
    8. ' isinstance' → logprob: -10.59095287322998
    9. 'mod' → logprob: -11.46595287322998
    10. '(n' → logprob: -11.46595287322998

Token 89: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01257086731493473
    2. ' r' → logprob: -4.512570858001709
    3. 'n' → logprob: -6.637570858001709
    4. '0' → logprob: -9.137571334838867
    5. ' n' → logprob: -10.262571334838867
    6. ' ' → logprob: -11.137571334838867
    7. ' isinstance' → logprob: -11.262571334838867
    8. 'is' → logprob: -11.512571334838867
    9. 'mod' → logprob: -11.887571334838867
    10. '(r' → logprob: -12.012571334838867

Token 90: '<=' (ID: 16672)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6680518388748169
    2. 'and' → logprob: -1.668051838874817
    3. ' <=' → logprob: -1.918051838874817
    4. '<=' → logprob: -1.918051838874817
    5. ' else' → logprob: -6.543051719665527
    6. 'else' → logprob: -6.918051719665527
    7. '>=' → logprob: -7.543051719665527
    8. ' >=' → logprob: -7.793051719665527
    9. ' ' → logprob: -7.918051719665527
    10. '<' → logprob: -8.168051719665527

Token 91: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00016074994346126914
    2. ' r' → logprob: -8.750161170959473
    3. '<|end|>' → logprob: -13.125161170959473
    4. '	r' → logprob: -15.875161170959473
    5. '<|end|>' → logprob: -16.250160217285156
    6. 'n' → logprob: -18.125160217285156
    7. ' ' → logprob: -18.500160217285156
    8. '```' → logprob: -18.875160217285156
    9. '­r' → logprob: -19.375160217285156
    10. '_r' → logprob: -19.500160217285156

Token 92: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.10833992063999176
    2. ' and' → logprob: -2.85834002494812
    3. 'and' → logprob: -3.73334002494812
    4. ' <=' → logprob: -3.85834002494812
    5. '<|end|>' → logprob: -8.8583402633667
    6. '<' → logprob: -10.7333402633667
    7. 'else' → logprob: -10.8583402633667
    8. ']<=' → logprob: -11.1083402633667
    9. 'le' → logprob: -11.3583402633667
    10. ')<=' → logprob: -11.4833402633667

Token 93: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3306015716807451e-05
    2. ' n' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -15.50001335144043
    4. '	n' → logprob: -17.12501335144043
    5. 'r' → logprob: -17.25001335144043
    6. '```' → logprob: -19.00001335144043
    7. '<|end|>' → logprob: -19.12501335144043
    8. 'user' → logprob: -19.25001335144043
    9. ')n' → logprob: -19.37501335144043
    10. ' ' → logprob: -19.75001335144043

Token 94: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.22143159806728363
    2. 'else' → logprob: -1.9714316129684448
    3. ':' → logprob: -2.8464314937591553
    4. ')' → logprob: -6.971431732177734
    5. ' :' → logprob: -8.721431732177734
    6. ' ' → logprob: -10.096431732177734
    7. ':
' → logprob: -10.596431732177734
    8. ',' → logprob: -10.846431732177734
    9. '	else' → logprob: -10.846431732177734
    10. ' and' → logprob: -11.096431732177734

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01125259604305029
    2. ' ' → logprob: -4.636252403259277
    3. 'None' → logprob: -6.636252403259277
    4. ' None' → logprob: -8.886252403259277
    5. '-' → logprob: -11.386252403259277
    6. '   ' → logprob: -11.636252403259277
    7. '  ' → logprob: -12.386252403259277
    8. '(' → logprob: -12.698752403259277
    9. ' -' → logprob: -13.136252403259277
    10. '```' → logprob: -13.261252403259277

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014364237431436777
    2. ' ' → logprob: -7.001436233520508
    3. 'None' → logprob: -7.626436233520508
    4. '-' → logprob: -10.876436233520508
    5. ' None' → logprob: -11.876436233520508
    6. '(' → logprob: -13.376436233520508
    7. 'lambda' → logprob: -13.938936233520508
    8. '```' → logprob: -14.126436233520508
    9. ' -' → logprob: -14.188936233520508
    10. '[]' → logprob: -14.313936233520508

Token 97: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36060160398483276
    2. 'g' → logprob: -2.3606016635894775
    3. ')' → logprob: -2.4856016635894775
    4. '(' → logprob: -2.6106016635894775
    5. '<|end|>' → logprob: -4.110601425170898
    6. ' ' → logprob: -4.235601425170898
    7. '[g' → logprob: -5.360601425170898
    8. ',' → logprob: -6.110601425170898
    9. 'def' → logprob: -6.360601425170898
    10. '(g' → logprob: -6.735601425170898

Token 98: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8492703437805176
    2. 'g' → logprob: -0.9742703437805176
    3. ')' → logprob: -2.5992703437805176
    4. '[g' → logprob: -3.3492703437805176
    5. '(' → logprob: -3.4742703437805176
    6. '<|end|>' → logprob: -4.474270343780518
    7. ' ' → logprob: -4.599270343780518
    8. 'def' → logprob: -5.349270343780518
    9. ' g' → logprob: -5.474270343780518
    10. ',' → logprob: -5.724270343780518

Token 99: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4091137647628784
    2. ' =' → logprob: -1.6591137647628784
    3. '<|end|>' → logprob: -2.659113883972168
    4. ' ' → logprob: -3.534113883972168
    5. '=' → logprob: -3.784113883972168
    6. ' ,' → logprob: -4.159113883972168
    7. '+' → logprob: -6.284113883972168
    8. '.' → logprob: -6.284113883972168
    9. ')' → logprob: -7.159113883972168
    10. '  ' → logprob: -7.409113883972168

Token 100: ' int' (ID: 677)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1554209142923355
    2. '0' → logprob: -2.530421018600464
    3. '5' → logprob: -3.155421018600464
    4. ' ' → logprob: -4.655420780181885
    5. '100' → logprob: -4.780420780181885
    6. 'int' → logprob: -6.030420780181885
    7. '20' → logprob: -8.030421257019043
    8. '<|end|>' → logprob: -8.280421257019043
    9. '50' → logprob: -8.280421257019043
    10. '3' → logprob: -8.655421257019043

Token 101: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31544798612594604
    2. '(' → logprob: -1.3154480457305908
    3. 'input' → logprob: -6.815447807312012
    4. '()' → logprob: -6.940447807312012
    5. '('' → logprob: -9.440447807312012
    6. '(
' → logprob: -10.940447807312012
    7. ' (' → logprob: -12.315447807312012
    8. '("' → logprob: -12.440447807312012
    9. '=input' → logprob: -12.815447807312012
    10. '(

' → logprob: -13.315447807312012

Token 102: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6233445405960083
    2. '()' → logprob: -0.8733445405960083
    3. '(' → logprob: -3.2483444213867188
    4. ')' → logprob: -5.123344421386719
    5. '('' → logprob: -7.623344421386719
    6. '(
' → logprob: -8.373344421386719
    7. '("("' → logprob: -8.873344421386719
    8. '(()' → logprob: -9.123344421386719
    9. '().' → logprob: -9.623344421386719
    10. '();)' → logprob: -9.873344421386719

Token 103: 'mod' (ID: 4847)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.16022026538848877
    2. 'mod' → logprob: -2.035220146179199
    3. '[' → logprob: -6.035220146179199
    4. '<|end|>' → logprob: -6.410220146179199
    5. 'data' → logprob: -6.535220146179199
    6. 'm' → logprob: -6.535220146179199
    7. 'MOD' → logprob: -6.660220146179199
    8. 'max' → logprob: -6.785220146179199
    9. 'for' → logprob: -7.160220146179199
    10. 'factor' → logprob: -7.285220146179199

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6333357691764832
    2. '=' → logprob: -0.7583357691764832
    3. ' ' → logprob: -7.758335590362549
    4. '<|end|>' → logprob: -8.758336067199707
    5. ' =
' → logprob: -9.633336067199707
    6. ')' → logprob: -10.508336067199707
    7. '<|end|>' → logprob: -11.008336067199707
    8. ',' → logprob: -11.383336067199707
    9. '=
' → logprob: -11.633336067199707
    10. '=

' → logprob: -12.758336067199707

Token 105: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005257714539766312
    2. '100' → logprob: -5.255257606506348
    3. '1' → logprob: -11.255257606506348
    4. ' ' → logprob: -12.005257606506348
    5. '998' → logprob: -12.380257606506348
    6. 'int' → logprob: -14.505257606506348
    7. '(' → logprob: -16.630258560180664
    8. '101' → logprob: -17.380258560180664
    9. '109' → logprob: -18.130258560180664
    10. '123' → logprob: -18.255258560180664

Token 106: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018212920054793358
    2. '100' → logprob: -4.018212795257568
    3. '998' → logprob: -9.893213272094727
    4. '1' → logprob: -11.643213272094727
    5. 'int' → logprob: -12.768213272094727
    6. ' ' → logprob: -14.768213272094727
    7. '(' → logprob: -15.143213272094727
    8. '999' → logprob: -16.893213272094727
    9. '101' → logprob: -17.268213272094727
    10. '```' → logprob: -17.893213272094727

Token 107: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -3.1424973713001236e-05
    2. '457' → logprob: -11.250031471252441
    3. '```' → logprob: -11.875031471252441
    4. '243' → logprob: -12.375031471252441
    5. '247' → logprob: -12.625031471252441
    6. '_' → logprob: -13.875031471252441
    7. '447' → logprob: -14.750031471252441
    8. '24' → logprob: -15.625031471252441
    9. '444' → logprob: -15.625031471252441
    10. '245' → logprob: -15.625031471252441

Token 108: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.017943652346730232
    2. '257' → logprob: -4.392943859100342
    3. '457' → logprob: -6.142943859100342
    4. '357' → logprob: -6.392943859100342
    5. '857' → logprob: -7.267943859100342
    6. '853' → logprob: -8.267943382263184
    7. '```' → logprob: -8.392943382263184
    8. '253' → logprob: -9.017943382263184
    9. '3' → logprob: -9.642943382263184
    10. '293' → logprob: -9.767943382263184

Token 109: '

' (ID: 279)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1634189784526825
    2. '<|end|>' → logprob: -2.038419008255005
    3. '#' → logprob: -5.288418769836426
    4. 'n' → logprob: -5.413418769836426
    5. ')' → logprob: -5.538418769836426
    6. 'def' → logprob: -5.913418769836426
    7. '
' → logprob: -6.038418769836426
    8. '#g' → logprob: -7.538418769836426
    9. '<|end|>' → logprob: -8.163418769836426
    10. 'factor' → logprob: -8.413418769836426

Token 110: 'def' (ID: 1314)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.005341905169188976
    2. 'max' → logprob: -5.88034200668335
    3. 'factor' → logprob: -7.25534200668335
    4. 'def' → logprob: -7.63034200668335
    5. '#' → logprob: -8.130341529846191
    6. 'fact' → logprob: -8.255341529846191
    7. 'p' → logprob: -9.005341529846191
    8. 'G' → logprob: -9.380341529846191
    9. 'MAX' → logprob: -9.630341529846191
    10. 'from' → logprob: -9.630341529846191

Token 111: ' prod' (ID: 10207)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.0216288566589355
    2. ' g' → logprob: -1.2716288566589355
    3. ' mod' → logprob: -2.2716288566589355
    4. 'g' → logprob: -2.3966288566589355
    5. ' fact' → logprob: -2.3966288566589355
    6. ' fac' → logprob: -3.8966288566589355
    7. ' power' → logprob: -4.8966288566589355
    8. ' pow' → logprob: -5.1466288566589355
    9. 'factor' → logprob: -5.2716288566589355
    10. ' gcd' → logprob: -5.5216288566589355

Token 112: '(iter' (ID: 61014)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uct' → logprob: -0.008273892104625702
    2. '(' → logprob: -5.758274078369141
    3. '(u' → logprob: -6.508274078369141
    4. 'uc' → logprob: -7.258274078369141
    5. 'cut' → logprob: -7.508274078369141
    6. '(x' → logprob: -7.883274078369141
    7. '(*' → logprob: -8.25827407836914
    8. 'uctor' → logprob: -8.25827407836914
    9. '(lst' → logprob: -8.25827407836914
    10. 'uction' → logprob: -8.63327407836914

Token 113: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -4.7159857786027715e-05
    2. ')' → logprob: -10.375046730041504
    3. '<|end|>' → logprob: -12.250046730041504
    4. 'actable' → logprob: -12.500046730041504
    5. 'ables' → logprob: -12.625046730041504
    6. 'ator' → logprob: -14.250046730041504
    7. 'ABLE' → logprob: -15.000046730041504
    8. 'abler' → logprob: -15.125046730041504
    9. 'abla' → logprob: -15.375046730041504
    10. 'atable' → logprob: -15.625046730041504

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6958730220794678
    2. '):' → logprob: -0.6958730220794678
    3. '):
' → logprob: -6.070873260498047
    4. ')' → logprob: -8.070873260498047
    5. '(iter' → logprob: -10.195873260498047
    6. ' iterable' → logprob: -11.570873260498047
    7. '=' → logprob: -11.945873260498047
    8. ' ,' → logprob: -12.070873260498047
    9. ' ):' → logprob: -12.320873260498047
    10. '_iter' → logprob: -12.570873260498047

Token 115: ' mod' (ID: 1812)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05053499713540077
    2. ' start' → logprob: -3.050534963607788
    3. 'initializer' → logprob: -7.550535202026367
    4. 'repeat' → logprob: -7.925535202026367
    5. 'func' → logprob: -8.300535202026367
    6. ')' → logprob: -9.050535202026367
    7. 'default' → logprob: -9.175535202026367
    8. 'mul' → logprob: -9.300535202026367
    9. 'r' → logprob: -9.425535202026367
    10. ',' → logprob: -9.675535202026367

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5468824505805969
    2. '=' → logprob: -0.9218824505805969
    3. '=None' → logprob: -3.796882390975952
    4. ' ):' → logprob: -7.671882629394531
    5. ',' → logprob: -7.796882629394531
    6. ' =' → logprob: -10.296882629394531
    7. '=:' → logprob: -10.546882629394531
    8. ')' → logprob: -10.796882629394531
    9. '):
' → logprob: -10.921882629394531
    10. '=int' → logprob: -11.296882629394531

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.058009386062622
    2. ' reduce' → logprob: -1.933009386062622
    3. 'reduce' → logprob: -2.183009386062622
    4. 'acc' → logprob: -2.183009386062622
    5. ' accumulator' → logprob: -2.683009386062622
    6. '=' → logprob: -3.308009386062622
    7. '):' → logprob: -3.683009386062622
    8. 'def' → logprob: -4.183009147644043
    9. ' acc' → logprob: -4.308009147644043
    10. ' ' → logprob: -4.308009147644043

Token 118: ' return' (ID: 622)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.12896353006362915
    2. '1' → logprob: -3.3789634704589844
    3. ' reduce' → logprob: -3.3789634704589844
    4. ' ' → logprob: -3.3789634704589844
    5. 'acc' → logprob: -4.378963470458984
    6. '   ' → logprob: -5.503963470458984
    7. 'def' → logprob: -6.628963470458984
    8. '  ' → logprob: -8.503963470458984
    9. ' accumulate' → logprob: -8.503963470458984
    10. ' acc' → logprob: -9.628963470458984

Token 119: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0017195657128468156
    2. 'acc' → logprob: -6.6267194747924805
    3. ' reduce' → logprob: -8.37671947479248
    4. '1' → logprob: -9.12671947479248
    5. 'fun' → logprob: -11.25171947479248
    6. 'pow' → logprob: -11.75171947479248
    7. '(acc' → logprob: -12.00171947479248
    8. ' ' → logprob: -12.12671947479248
    9. '(re' → logprob: -12.12671947479248
    10. '(' → logprob: -12.12671947479248

Token 120: '(lambda' (ID: 43341)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.7779765129089355
    2. '(lambda' → logprob: -0.7779765129089355
    3. '(operator' → logprob: -2.6529765129089355
    4. '(' → logprob: -4.5279765129089355
    5. '(mu' → logprob: -10.777976989746094
    6. 'operator' → logprob: -10.777976989746094
    7. '((' → logprob: -11.527976989746094
    8. '(
' → logprob: -11.652976989746094
    9. ' operator' → logprob: -12.152976989746094
    10. ' (' → logprob: -12.402976989746094

Token 121: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5305430293083191
    2. 'x' → logprob: -0.9055430293083191
    3. 'a' → logprob: -5.280542850494385
    4. ' a' → logprob: -6.905542850494385
    5. 'lambda' → logprob: -7.655542850494385
    6. 'acc' → logprob: -7.905542850494385
    7. 'mul' → logprob: -8.655543327331543
    8. ' lambda' → logprob: -9.030543327331543
    9. ' acc' → logprob: -9.530543327331543
    10. ' mul' → logprob: -9.905543327331543

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010282796574756503
    2. ',x' → logprob: -9.875102996826172
    3. ' ,' → logprob: -10.625102996826172
    4. 'a' → logprob: -11.375102996826172
    5. 'x' → logprob: -12.125102996826172
    6. ',y' → logprob: -13.000102996826172
    7. '_,' → logprob: -13.250102996826172
    8. '1' → logprob: -14.000102996826172
    9. ',
' → logprob: -14.000102996826172
    10. ',m' → logprob: -14.250102996826172

Token 123: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.010612319223582745
    2. ' y' → logprob: -4.760612487792969
    3. 'lambda' → logprob: -6.260612487792969
    4. ' lambda' → logprob: -9.760612487792969
    5. '(lambda' → logprob: -10.885612487792969
    6. 'x' → logprob: -12.635612487792969
    7. 'acc' → logprob: -13.385612487792969
    8. '   ' → logprob: -13.760612487792969
    9. ' (' → logprob: -14.010612487792969
    10. '  ' → logprob: -14.385612487792969

Token 124: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011589158093556762
    2. ',' → logprob: -7.251158714294434
    3. ' :' → logprob: -7.751158714294434
    4. ':x' → logprob: -11.626158714294434
    5. ':(' → logprob: -12.376158714294434
    6. ',x' → logprob: -13.626158714294434
    7. '   ' → logprob: -13.751158714294434
    8. 'x' → logprob: -14.251158714294434
    9. ':
' → logprob: -14.626158714294434
    10. ',:' → logprob: -14.876158714294434

Token 125: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1603519767522812
    2. ' (' → logprob: -1.9103519916534424
    3. 'x' → logprob: -9.660351753234863
    4. '(lambda' → logprob: -10.160351753234863
    5. '   ' → logprob: -11.160351753234863
    6. ' x' → logprob: -12.535351753234863
    7. 'lambda' → logprob: -12.785351753234863
    8. ' ' → logprob: -13.410351753234863
    9. '  ' → logprob: -13.410351753234863
    10. '(' → logprob: -14.285351753234863

Token 126: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47540464997291565
    2. ' *' → logprob: -0.9754046201705933
    3. ',' → logprob: -7.725404739379883
    4. '*y' → logprob: -7.850404739379883
    5. '*x' → logprob: -8.475404739379883
    6. '*(' → logprob: -9.100404739379883
    7. ':' → logprob: -9.975404739379883
    8. ' ' → logprob: -10.100404739379883
    9. '=' → logprob: -10.475404739379883
    10. '*,' → logprob: -11.225404739379883

Token 127: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.020594676956534386
    2. ' y' → logprob: -3.895594596862793
    3. '(y' → logprob: -9.895594596862793
    4. ' (' → logprob: -14.020594596862793
    5. '(' → logprob: -14.395594596862793
    6. '	y' → logprob: -14.895594596862793
    7. 'x' → logprob: -15.770594596862793
    8. ' ' → logprob: -16.14559555053711
    9. '*y' → logprob: -16.39559555053711
    10. '
' → logprob: -16.52059555053711

Token 128: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4742494225502014
    2. '%' → logprob: -0.9742494225502014
    3. '%x' → logprob: -9.224249839782715
    4. '%n' → logprob: -10.474249839782715
    5. '%m' → logprob: -10.849249839782715
    6. '%e' → logprob: -11.974249839782715
    7. ',' → logprob: -12.099249839782715
    8. '%c' → logprob: -12.224249839782715
    9. '%d' → logprob: -12.599249839782715
    10. '%s' → logprob: -13.349249839782715

Token 129: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.451116051815916e-05
    2. ' mod' → logprob: -10.625024795532227
    3. '(mod' → logprob: -16.875024795532227
    4. '	mod' → logprob: -17.500024795532227
    5. 'moder' → logprob: -19.375024795532227
    6. 'y' → logprob: -19.750024795532227
    7. ' мод' → logprob: -20.625024795532227
    8. 'mul' → logprob: -20.750024795532227
    9. '
' → logprob: -20.750024795532227
    10. 'modal' → logprob: -20.875024795532227

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024945642799139023
    2. ' ,' → logprob: -6.0024943351745605
    3. ')' → logprob: -11.252494812011719
    4. ',
' → logprob: -13.252494812011719
    5. '),' → logprob: -13.627494812011719
    6. ' ' → logprob: -14.627494812011719
    7. ',y' → logprob: -14.627494812011719
    8. 'iter' → logprob: -14.877494812011719
    9. ' iterable' → logprob: -15.252494812011719
    10. ',n' → logprob: -16.00249481201172

Token 131: ' iterable' (ID: 113880)
  Prédit: ' iterable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iterable' → logprob: -0.17979112267494202
    2. 'iter' → logprob: -1.8047910928726196
    3. ' iter' → logprob: -10.679791450500488
    4. '(iter' → logprob: -11.429791450500488
    5. 'Iterable' → logprob: -12.054791450500488
    6. '   ' → logprob: -13.179791450500488
    7. ' itertools' → logprob: -13.804791450500488
    8. 'list' → logprob: -14.179791450500488
    9. ' ' → logprob: -14.429791450500488
    10. '[' → logprob: -14.929791450500488

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01417373027652502
    2. ')' → logprob: -4.26417350769043
    3. ' ,' → logprob: -11.63917350769043
    4. ',)' → logprob: -15.01417350769043
    5. ' )' → logprob: -15.13917350769043
    6. '<|end|>' → logprob: -15.26417350769043
    7. ' ' → logprob: -15.88917350769043
    8. '),' → logprob: -16.01417350769043
    9. ',None' → logprob: -16.13917350769043
    10. ')}' → logprob: -17.63917350769043

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.523948907968588e-05
    2. ' ' → logprob: -10.375035285949707
    3. '   ' → logprob: -12.500035285949707
    4. '  ' → logprob: -15.500035285949707
    5. '    ' → logprob: -17.87503433227539
    6. ')' → logprob: -18.75003433227539
    7. '       ' → logprob: -19.12503433227539
    8. 'def' → logprob: -19.37503433227539
    9. '
' → logprob: -19.62503433227539
    10. '۱' → logprob: -19.62503433227539

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.125001907348633
    4. '  ' → logprob: -19.375001907348633
    5. '
' → logprob: -20.375001907348633
    6. '۱' → logprob: -20.625001907348633
    7. 'def' → logprob: -20.812501907348633
    8. '    ' → logprob: -21.000001907348633
    9. '```' → logprob: -21.250001907348633
    10. 'int' → logprob: -21.437501907348633

Token 135: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.500000953674316
    3. ' )' → logprob: -15.500000953674316
    4. ')

' → logprob: -18.25
    5. ')n' → logprob: -20.125
    6. '),' → logprob: -20.25
    7. ')return' → logprob: -20.375
    8. ')#' → logprob: -20.5
    9. 'def' → logprob: -20.625
    10. ' ' → logprob: -20.625

Token 136: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.09779812395572662
    2. 'def' → logprob: -2.8477981090545654
    3. '#' → logprob: -4.0977983474731445
    4. ')' → logprob: -5.5977983474731445
    5. 'max' → logprob: -5.7227983474731445
    6. 'factor' → logprob: -5.8477983474731445
    7. 'p' → logprob: -6.2227983474731445
    8. 'fact' → logprob: -6.4727983474731445
    9. 'class' → logprob: -7.2227983474731445
    10. '<|end|>' → logprob: -7.5977983474731445

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.68022444692906e-05
    2. 'f' → logprob: -10.625046730041504
    3. '_factor' → logprob: -12.250046730041504
    4. '2' → logprob: -12.625046730041504
    5. 'factor' → logprob: -13.125046730041504
    6. 'enerator' → logprob: -13.500046730041504
    7. 'g' → logprob: -14.125046730041504
    8. 'fact' → logprob: -14.562546730041504
    9. 'fac' → logprob: -14.625046730041504
    10. 'e' → logprob: -14.750046730041504

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05588608980178833
    2. '=' → logprob: -2.9308860301971436
    3. ',' → logprob: -7.055886268615723
    4. 'g' → logprob: -10.180886268615723
    5. ' ' → logprob: -10.930886268615723
    6. '[' → logprob: -10.930886268615723
    7. '_' → logprob: -11.180886268615723
    8. '=[' → logprob: -11.430886268615723
    9. '=g' → logprob: -11.805886268615723
    10. '<|end|>' → logprob: -11.805886268615723

Token 139: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00035393505822867155
    2. ' [' → logprob: -8.500353813171387
    3. '[g' → logprob: -10.375353813171387
    4. 'acc' → logprob: -10.500353813171387
    5. '(' → logprob: -11.000353813171387
    6. '[list' → logprob: -11.000353813171387
    7. 'list' → logprob: -11.250353813171387
    8. '[]' → logprob: -11.375353813171387
    9. 'range' → logprob: -11.375353813171387
    10. '[p' → logprob: -12.500353813171387

Token 140: '(acc' (ID: 82668)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.002625596709549427
    2. '(acc' → logprob: -6.502625465393066
    3. '(' → logprob: -6.877625465393066
    4. 'acc' → logprob: -10.627625465393066
    5. '(product' → logprob: -10.877625465393066
    6. '([' → logprob: -11.127625465393066
    7. '()' → logprob: -11.377625465393066
    8. 'range' → logprob: -12.627625465393066
    9. '<|end|>' → logprob: -12.627625465393066
    10. '(lambda' → logprob: -12.627625465393066

Token 141: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -2.463036435074173e-05
    2. 'om' → logprob: -12.125024795532227
    3. 'um' → logprob: -12.125024795532227
    4. '(c' → logprob: -12.250024795532227
    5. 'umul' → logprob: -13.125024795532227
    6. 'ulate' → logprob: -13.500024795532227
    7. 'umm' → logprob: -13.875024795532227
    8. '(' → logprob: -14.125024795532227
    9. '[' → logprob: -14.500024795532227
    10. '(acc' → logprob: -14.625024795532227

Token 142: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.000182921823579818
    2. '(lambda' → logprob: -9.87518310546875
    3. '([' → logprob: -10.00018310546875
    4. '(' → logprob: -10.12518310546875
    5. '(product' → logprob: -10.25018310546875
    6. 'range' → logprob: -11.62518310546875
    7. '((' → logprob: -14.25018310546875
    8. '(iter' → logprob: -14.87518310546875
    9. '(map' → logprob: -15.12518310546875
    10. '(
' → logprob: -16.87518310546875

Token 143: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029792383313179016
    2. '(n' → logprob: -3.529792308807373
    3. '1' → logprob: -10.529792785644531
    4. 'n' → logprob: -11.529792785644531
    5. ' ' → logprob: -13.279792785644531
    6. '(max' → logprob: -13.279792785644531
    7. ' (' → logprob: -14.154792785644531
    8. '(mod' → logprob: -15.029792785644531
    9. '(g' → logprob: -15.654792785644531
    10. '(len' → logprob: -16.15479278564453

Token 144: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020219504833221436
    2. 'n' → logprob: -4.270219326019287
    3. '(' → logprob: -5.270219326019287
    4. '(n' → logprob: -7.395219326019287
    5. '2' → logprob: -9.270219802856445
    6. '0' → logprob: -9.395219802856445
    7. ' ' → logprob: -10.270219802856445
    8. '100' → logprob: -11.520219802856445
    9. '[' → logprob: -11.770219802856445
    10. ' n' → logprob: -11.895219802856445

Token 145: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019617678597569466
    2. '1' → logprob: -4.269617557525635
    3. '(' → logprob: -6.144617557525635
    4. ',n' → logprob: -6.144617557525635
    5. 'n' → logprob: -7.144617557525635
    6. '(n' → logprob: -8.144618034362793
    7. '2' → logprob: -10.644618034362793
    8. ' ,' → logprob: -10.769618034362793
    9. ' ' → logprob: -12.144618034362793
    10. 'g' → logprob: -12.269618034362793

Token 146: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.08814311772584915
    2. ' lambda' → logprob: -2.7131431102752686
    3. 'mul' → logprob: -4.338143348693848
    4. ' ' → logprob: -6.213143348693848
    5. '1' → logprob: -6.463143348693848
    6. ' mul' → logprob: -7.588143348693848
    7. 'func' → logprob: -7.713143348693848
    8. '(lambda' → logprob: -8.463143348693848
    9. ' func' → logprob: -9.713143348693848
    10. 'operator' → logprob: -9.838143348693848

Token 147: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4977242946624756
    2. ' x' → logprob: -0.9977242946624756
    3. 'a' → logprob: -4.247724533081055
    4. ' a' → logprob: -5.372724533081055
    5. ' acc' → logprob: -5.747724533081055
    6. 'acc' → logprob: -6.872724533081055
    7. 'g' → logprob: -9.747724533081055
    8. ' ' → logprob: -9.997724533081055
    9. ' g' → logprob: -11.122724533081055
    10. 'n' → logprob: -11.247724533081055

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040032463148236275
    2. ',x' → logprob: -6.254003047943115
    3. 'x' → logprob: -6.504003047943115
    4. ' x' → logprob: -8.129003524780273
    5. ' ,' → logprob: -8.629003524780273
    6. ',n' → logprob: -9.629003524780273
    7. 'a' → logprob: -11.504003524780273
    8. 'n' → logprob: -12.254003524780273
    9. ',a' → logprob: -12.879003524780273
    10. ',g' → logprob: -13.129003524780273

Token 149: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014629525132477283
    2. ' x' → logprob: -4.264629364013672
    3. 'a' → logprob: -8.014629364013672
    4. 'y' → logprob: -9.389629364013672
    5. 'i' → logprob: -11.514629364013672
    6. 'acc' → logprob: -11.514629364013672
    7. ' y' → logprob: -11.639629364013672
    8. 'k' → logprob: -11.889629364013672
    9. ' a' → logprob: -12.264629364013672
    10. 'n' → logprob: -12.389629364013672

Token 150: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07978878170251846
    2. ':' → logprob: -2.5797886848449707
    3. ' :' → logprob: -7.954788684844971
    4. ',x' → logprob: -8.079789161682129
    5. ' ,' → logprob: -8.829789161682129
    6. ',
' → logprob: -10.704789161682129
    7. ',g' → logprob: -10.954789161682129
    8. ':x' → logprob: -11.204789161682129
    9. 'x' → logprob: -11.454789161682129
    10. ',m' → logprob: -11.954789161682129

Token 151: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3073608875274658
    2. 'x' → logprob: -1.4323608875274658
    3. ' x' → logprob: -4.432360649108887
    4. ' (' → logprob: -4.557360649108887
    5. '(' → logprob: -5.682360649108887
    6. ' ' → logprob: -10.557360649108887
    7. '((' → logprob: -10.682360649108887
    8. '1' → logprob: -11.932360649108887
    9. '(int' → logprob: -12.057360649108887
    10. '   ' → logprob: -12.307360649108887

Token 152: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20988167822360992
    2. '*' → logprob: -1.7098816633224487
    3. '+' → logprob: -5.084881782531738
    4. ' +' → logprob: -7.209881782531738
    5. '*x' → logprob: -7.334881782531738
    6. '*y' → logprob: -8.084881782531738
    7. '*(' → logprob: -8.209881782531738
    8. '*g' → logprob: -8.584881782531738
    9. '*n' → logprob: -10.709881782531738
    10. ' ' → logprob: -11.584881782531738

Token 153: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.027927489951252937
    2. '(y' → logprob: -3.9029273986816406
    3. ' y' → logprob: -5.152927398681641
    4. '(' → logprob: -7.652927398681641
    5. ' (' → logprob: -8.40292739868164
    6. '2' → logprob: -8.65292739868164
    7. '(x' → logprob: -8.77792739868164
    8. '10' → logprob: -9.02792739868164
    9. 'x' → logprob: -9.02792739868164
    10. '(max' → logprob: -9.27792739868164

Token 154: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9908715486526489
    2. '+' → logprob: -1.490871548652649
    3. ' if' → logprob: -1.990871548652649
    4. ' or' → logprob: -2.6158714294433594
    5. ',' → logprob: -2.6158714294433594
    6. '%' → logprob: -2.9908714294433594
    7. '))' → logprob: -3.3658714294433594
    8. ' +' → logprob: -3.4908714294433594
    9. 'if' → logprob: -6.490871429443359
    10. 'mod' → logprob: -7.490871429443359

Token 155: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.0802738870552275e-05
    2. ' mod' → logprob: -11.50001049041748
    3. '(mod' → logprob: -15.12501049041748
    4. '998' → logprob: -15.50001049041748
    5. '999' → logprob: -17.000011444091797
    6. 'moder' → logprob: -17.750011444091797
    7. '	mod' → logprob: -18.125011444091797
    8. '100' → logprob: -18.125011444091797
    9. '   ' → logprob: -18.250011444091797
    10. '
' → logprob: -18.375011444091797

Token 156: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02127445861697197
    2. ',' → logprob: -4.021274566650391
    3. ' ))' → logprob: -6.396274566650391
    4. ')' → logprob: -7.146274566650391
    5. '))
' → logprob: -7.646274566650391
    6. '))

' → logprob: -10.27127456665039
    7. ')))' → logprob: -10.39627456665039
    8. '),' → logprob: -10.52127456665039
    9. ' ,' → logprob: -10.64627456665039
    10. '));' → logprob: -11.02127456665039

Token 157: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7767820358276367
    2. '+' → logprob: -1.1517820358276367
    3. '[' → logprob: -2.1517820358276367
    4. 'g' → logprob: -3.2767820358276367
    5. '+[' → logprob: -3.6517820358276367
    6. ')' → logprob: -4.401782035827637
    7. '0' → logprob: -5.151782035827637
    8. ',' → logprob: -5.276782035827637
    9. '+
' → logprob: -5.401782035827637
    10. '[g' → logprob: -5.651782035827637

Token 158: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31517890095710754
    2. ' [' → logprob: -1.9401788711547852
    3. 'list' → logprob: -2.565178871154785
    4. '[list' → logprob: -3.815178871154785
    5. ' list' → logprob: -4.065178871154785
    6. '[g' → logprob: -5.065178871154785
    7. '[n' → logprob: -6.065178871154785
    8. '[p' → logprob: -7.815178871154785
    9. '[(' → logprob: -7.940178871154785
    10. '[len' → logprob: -8.315178871154785

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033040239941328764
    2. '0' → logprob: -5.8783040046691895
    3. ' ' → logprob: -8.503304481506348
    4. 'prod' → logprob: -9.878304481506348
    5. 'pow' → logprob: -10.003304481506348
    6. 'i' → logprob: -10.003304481506348
    7. 'g' → logprob: -10.378304481506348
    8. '*' → logprob: -10.503304481506348
    9. 'None' → logprob: -11.003304481506348
    10. '(' → logprob: -11.128304481506348

Token 160: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025774389505386353
    2. ']*(' → logprob: -4.2757744789123535
    3. ',' → logprob: -4.7757744789123535
    4. ']+' → logprob: -6.1507744789123535
    5. ']*' → logprob: -7.2757744789123535
    6. '0' → logprob: -8.900774002075195
    7. ' for' → logprob: -9.900774002075195
    8. ' *' → logprob: -10.025774002075195
    9. '*(' → logprob: -10.900774002075195
    10. ' ]' → logprob: -11.025774002075195

Token 161: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3148653507232666
    2. 'len' → logprob: -1.3148653507232666
    3. 'g' → logprob: -7.3148651123046875
    4. ' g' → logprob: -7.6898651123046875
    5. '(len' → logprob: -8.564865112304688
    6. ' n' → logprob: -8.689865112304688
    7. 'n' → logprob: -9.314865112304688
    8. ' ' → logprob: -11.064865112304688
    9. ' True' → logprob: -12.064865112304688
    10. 'True' → logprob: -12.439865112304688

Token 163: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.8789383830153383e-05
    2. 'g' → logprob: -11.125019073486328
    3. '(' → logprob: -12.875019073486328
    4. ' g' → logprob: -13.625019073486328
    5. '(n' → logprob: -16.000019073486328
    6. ' (' → logprob: -17.125019073486328
    7. '	g' → logprob: -18.750019073486328
    8. '(range' → logprob: -18.750019073486328
    9. '(
' → logprob: -19.000019073486328
    10. '[g' → logprob: -19.125019073486328

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. 'g' → logprob: -13.500001907348633
    3. 'rowth' → logprob: -15.750001907348633
    4. '(g' → logprob: -16.000001907348633
    5. 'enerated' → logprob: -16.375001907348633
    6. '```' → logprob: -16.500001907348633
    7. '_' → logprob: -16.625001907348633
    8. '१' → logprob: -17.125001907348633
    9. '_g' → logprob: -17.125001907348633
    10. '১' → logprob: -17.437501907348633

Token 165: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25814729928970337
    2. ' <' → logprob: -1.5081472396850586
    3. ')' → logprob: -5.883147239685059
    4. '<len' → logprob: -6.883147239685059
    5. '<=' → logprob: -7.133147239685059
    6. ' <=' → logprob: -7.258147239685059
    7. ')<' → logprob: -7.633147239685059
    8. '<n' → logprob: -8.383147239685059
    9. ')<=' → logprob: -10.133147239685059
    10. '<size' → logprob: -10.133147239685059

Token 166: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3875473439693451
    2. ' <' → logprob: -1.1375473737716675
    3. '<len' → logprob: -8.012547492980957
    4. '<=' → logprob: -8.887547492980957
    5. ' <=' → logprob: -9.012547492980957
    6. '<n' → logprob: -9.637547492980957
    7. '<size' → logprob: -11.387547492980957
    8. '<num' → logprob: -13.512547492980957
    9. '<class' → logprob: -13.887547492980957
    10. '<int' → logprob: -14.012547492980957

Token 167: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011844364780699834
    2. ' n' → logprob: -9.250118255615234
    3. '100' → logprob: -11.500118255615234
    4. '10' → logprob: -12.250118255615234
    5. 'max' → logprob: -12.375118255615234
    6. '2' → logprob: -13.125118255615234
    7. ' ' → logprob: -14.375118255615234
    8. '	n' → logprob: -15.750118255615234
    9. '1' → logprob: -15.875118255615234
    10. '   ' → logprob: -17.000118255615234

Token 168: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4521656036376953
    2. ':' → logprob: -1.0771656036376953
    3. ' :
' → logprob: -4.077165603637695
    4. ' :' → logprob: -5.577165603637695
    5. '   ' → logprob: -6.577165603637695
    6. 'g' → logprob: -7.327165603637695
    7. ' g' → logprob: -8.952165603637695
    8. ' or' → logprob: -9.077165603637695
    9. ':g' → logprob: -9.952165603637695
    10. '*g' → logprob: -10.702165603637695

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16302689909934998
    2. 'g' → logprob: -2.038026809692383
    3. ' g' → logprob: -3.913026809692383
    4. '	g' → logprob: -9.163026809692383
    5. ',g' → logprob: -11.288026809692383
    6. '   ' → logprob: -11.663026809692383
    7. '```' → logprob: -12.038026809692383
    8. '
' → logprob: -12.163026809692383
    9. '    ' → logprob: -12.538026809692383
    10. '_g' → logprob: -12.788026809692383

Token 170: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.0015566397923976183
    2. '   ' → logprob: -6.501556873321533
    3. ' g' → logprob: -10.001556396484375
    4. '	g' → logprob: -11.876556396484375
    5. '    ' → logprob: -15.251556396484375
    6. '```' → logprob: -15.251556396484375
    7. 'next' → logprob: -15.376556396484375
    8. '  ' → logprob: -15.751556396484375
    9. 'i' → logprob: -15.876556396484375
    10. ' ' → logprob: -16.126556396484375

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'g' → logprob: -16.5
    3. '.append' → logprob: -17.0
    4. '```' → logprob: -17.5
    5. 'rowth' → logprob: -17.5
    6. 'enerated' → logprob: -17.6875
    7. '
' → logprob: -18.6875
    8. 'enerate' → logprob: -18.8125
    9. '১' → logprob: -19.0
    10. ' =' → logprob: -19.0625

Token 172: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020091790065634996
    2. '.' → logprob: -8.875201225280762
    3. '.extend' → logprob: -10.125201225280762
    4. '+=' → logprob: -11.500201225280762
    5. ' .' → logprob: -12.375201225280762
    6. ' +=' → logprob: -13.125201225280762
    7. '=' → logprob: -13.500201225280762
    8. '.app' → logprob: -13.625201225280762
    9. '.ap' → logprob: -14.250201225280762
    10. 'append' → logprob: -14.500201225280762

Token 173: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.016322093084454536
    2. '((' → logprob: -4.391322135925293
    3. 'g' → logprob: -5.766322135925293
    4. '(' → logprob: -7.516322135925293
    5. '(prod' → logprob: -9.891322135925293
    6. '(pro' → logprob: -10.141322135925293
    7. ' (' → logprob: -11.391322135925293
    8. ' g' → logprob: -12.266322135925293
    9. 'prod' → logprob: -12.391322135925293
    10. '(len' → logprob: -12.391322135925293

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.436450636712834e-05
    2. '[-' → logprob: -9.500094413757324
    3. '[len' → logprob: -11.750094413757324
    4. '(len' → logprob: -12.250094413757324
    5. 'g' → logprob: -13.125094413757324
    6. '[n' → logprob: -13.875094413757324
    7. '(n' → logprob: -14.125094413757324
    8. '[g' → logprob: -14.500094413757324
    9. '```' → logprob: -14.750094413757324
    10. 'len' → logprob: -15.000094413757324

Token 175: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '   ' → logprob: -17.75
    3. ' [-' → logprob: -18.25
    4. '[' → logprob: -19.25
    5. '[
' → logprob: -20.0
    6. '```' → logprob: -20.25
    7. '
' → logprob: -20.5
    8. '[len' → logprob: -20.875
    9. '	' → logprob: -22.25
    10. '    ' → logprob: -22.375

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2600163221359253
    2. '-' → logprob: -1.5100163221359253
    3. '0' → logprob: -5.635016441345215
    4. 'len' → logprob: -6.385016441345215
    5. ' -' → logprob: -6.635016441345215
    6. ']' → logprob: -7.260016441345215
    7. '
' → logprob: -8.260016441345215
    8. ' ' → logprob: -8.385016441345215
    9. 'n' → logprob: -9.885016441345215
    10. '  ' → logprob: -10.260016441345215

Token 177: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6348867416381836
    2. ' *' → logprob: -0.7598867416381836
    3. '*g' → logprob: -6.134886741638184
    4. '*(' → logprob: -10.009886741638184
    5. 'g' → logprob: -11.384886741638184
    6. ')' → logprob: -11.384886741638184
    7. ' ' → logprob: -11.634886741638184
    8. '*n' → logprob: -12.259886741638184
    9. ' ' → logprob: -12.509886741638184
    10. '*i' → logprob: -12.634886741638184

Token 178: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14282925426959991
    2. ' *' → logprob: -2.017829179763794
    3. '*g' → logprob: -9.142828941345215
    4. '*(' → logprob: -11.392828941345215
    5. '*n' → logprob: -12.517828941345215
    6. '   ' → logprob: -12.517828941345215
    7. ')' → logprob: -12.642828941345215
    8. '**' → logprob: -12.892828941345215
    9. '*y' → logprob: -13.017828941345215
    10. '*i' → logprob: -13.142828941345215

Token 179: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2520765960216522
    2. '(len' → logprob: -1.5020766258239746
    3. ' len' → logprob: -9.752076148986816
    4. '[len' → logprob: -10.127076148986816
    5. '(' → logprob: -10.502076148986816
    6. ' (' → logprob: -11.502076148986816
    7. 'g' → logprob: -12.377076148986816
    8. '(g' → logprob: -13.627076148986816
    9. '(n' → logprob: -14.252076148986816
    10. '	len' → logprob: -14.502076148986816

Token 180: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -6.635164754698053e-05
    2. 'g' → logprob: -9.625066757202148
    3. '	g' → logprob: -16.25006675720215
    4. '(' → logprob: -16.75006675720215
    5. ' g' → logprob: -17.00006675720215
    6. '[g' → logprob: -17.25006675720215
    7. ',g' → logprob: -19.62506675720215
    8. '(
' → logprob: -20.00006675720215
    9. '/g' → logprob: -20.12506675720215
    10. '
' → logprob: -20.12506675720215

Token 181: '1' (ID: 16)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.049786023795604706
    2. '1' → logprob: -3.04978609085083
    3. ' g' → logprob: -7.42478609085083
    4. '(g' → logprob: -7.54978609085083
    5. '	g' → logprob: -11.174785614013672
    6. ')' → logprob: -11.424785614013672
    7. '=g' → logprob: -11.549785614013672
    8. 's' → logprob: -11.799785614013672
    9. ',g' → logprob: -12.049785614013672
    10. '[g' → logprob: -12.174785614013672

Token 182: ')' (ID: 8)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1291733980178833
    2. ')' → logprob: -2.5041732788085938
    3. '%' → logprob: -3.2541732788085938
    4. ')%' → logprob: -7.129173278808594
    5. ' )' → logprob: -11.754173278808594
    6. ' ' → logprob: -13.129173278808594
    7. ' %=' → logprob: -13.754173278808594
    8. '%s' → logprob: -13.754173278808594
    9. '%e' → logprob: -13.754173278808594
    10. '%c' → logprob: -13.879173278808594

Token 183: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06501494348049164
    2. '%' → logprob: -2.8150148391723633
    3. ')' → logprob: -5.815014839172363
    4. ')%' → logprob: -9.815014839172363
    5. ' )' → logprob: -13.565014839172363
    6. ' ' → logprob: -13.565014839172363
    7. ' %=' → logprob: -14.690014839172363
    8. '%)' → logprob: -14.815014839172363
    9. ' %)' → logprob: -14.940014839172363
    10. ' ' → logprob: -15.065014839172363

Token 184: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.15310683415737e-05
    2. ' mod' → logprob: -10.750021934509277
    3. '(mod' → logprob: -18.50002098083496
    4. ' ' → logprob: -18.87502098083496
    5. '	mod' → logprob: -19.37502098083496
    6. '   ' → logprob: -20.25002098083496
    7. '
' → logprob: -20.25002098083496
    8. 'moder' → logprob: -20.75002098083496
    9. '  ' → logprob: -22.00002098083496
    10. '```' → logprob: -22.25002098083496

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004386558721307665
    2. ' )' → logprob: -7.750438690185547
    3. ')
' → logprob: -12.000438690185547
    4. '))' → logprob: -13.750438690185547
    5. 'g' → logprob: -15.125438690185547
    6. ')`' → logprob: -16.250438690185547
    7. ')

' → logprob: -16.375438690185547
    8. '   ' → logprob: -16.625438690185547
    9. ' )
' → logprob: -17.125438690185547
    10. '),' → logprob: -17.375438690185547

Token 186: 'inverse' (ID: 153422)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0002466774603817612
    2. '<|end|>' → logprob: -8.50024700164795
    3. '
' → logprob: -11.62524700164795
    4. ')' → logprob: -11.62524700164795
    5. '[' → logprob: -11.75024700164795
    6. ' g' → logprob: -12.50024700164795
    7. ' ' → logprob: -12.75024700164795
    8. '.g' → logprob: -13.87524700164795
    9. '<|end|>' → logprob: -13.87524700164795
    10. '#g' → logprob: -14.25024700164795

Token 187: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1373676061630249
    2. ' =' → logprob: -2.7623677253723145
    3. '_g' → logprob: -3.3873677253723145
    4. '=' → logprob: -4.2623677253723145
    5. '_factor' → logprob: -5.2623677253723145
    6. 'g' → logprob: -5.2623677253723145
    7. '_s' → logprob: -5.7623677253723145
    8. '_' → logprob: -6.0123677253723145
    9. '_fact' → logprob: -8.262367248535156
    10. '_=' → logprob: -8.887367248535156

Token 188: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6002558469772339
    2. '[g' → logprob: -0.8502558469772339
    3. 'g' → logprob: -4.100255966186523
    4. ' [' → logprob: -6.100255966186523
    5. '[]' → logprob: -6.475255966186523
    6. '[p' → logprob: -7.350255966186523
    7. '[n' → logprob: -7.600255966186523
    8. '[in' → logprob: -7.725255966186523
    9. '[len' → logprob: -7.725255966186523
    10. 'lambda' → logprob: -8.225255966186523

Token 189: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038174375891685486
    2. '0' → logprob: -3.4131743907928467
    3. 'None' → logprob: -6.038174152374268
    4. 'pow' → logprob: -6.163174152374268
    5. '-' → logprob: -11.038174629211426
    6. '[' → logprob: -13.288174629211426
    7. '(' → logprob: -13.413174629211426
    8. ']' → logprob: -14.038174629211426
    9. '```' → logprob: -14.163174629211426
    10. '(pow' → logprob: -14.288174629211426

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003672282909974456
    2. ']' → logprob: -5.628672122955322
    3. ']*(' → logprob: -9.87867259979248
    4. ',
' → logprob: -12.00367259979248
    5. ']*' → logprob: -12.62867259979248
    6. ',None' → logprob: -13.12867259979248
    7. '1' → logprob: -13.50367259979248
    8. ' ,' → logprob: -13.62867259979248
    9. ' for' → logprob: -13.75367259979248
    10. 'for' → logprob: -14.12867259979248

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010361451422795653
    2. ' ' → logprob: -6.876036167144775
    3. '0' → logprob: -12.751035690307617
    4. 'inverse' → logprob: -15.751035690307617
    5. 'mod' → logprob: -17.313535690307617
    6. ']' → logprob: -17.438535690307617
    7. '۱' → logprob: -18.063535690307617
    8. ',' → logprob: -18.126035690307617
    9. '  ' → logprob: -18.188535690307617
    10. '   ' → logprob: -18.313535690307617

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -18.625003814697266
    4. 'mod' → logprob: -19.375003814697266
    5. ']' → logprob: -19.875003814697266
    6. '<|end|>' → logprob: -20.125003814697266
    7. '   ' → logprob: -20.250003814697266
    8. 'inverse' → logprob: -20.250003814697266
    9. '۱' → logprob: -20.500003814697266
    10. '  ' → logprob: -20.500003814697266

Token 193: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07052983343601227
    2. ']
' → logprob: -2.6955299377441406
    3. ']

' → logprob: -7.445529937744141
    4. ']
' → logprob: -12.44552993774414
    5. ',' → logprob: -12.57052993774414
    6. '
' → logprob: -14.94552993774414
    7. ' ]' → logprob: -15.32052993774414
    8. '```' → logprob: -15.57052993774414
    9. ']+' → logprob: -15.82052993774414
    10. 'import' → logprob: -15.82052993774414

Token 194: 'g' (ID: 70)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7447240948677063
    2. 'while' → logprob: -0.7447240948677063
    3. 'i' → logprob: -3.4947240352630615
    4. ' for' → logprob: -4.869724273681641
    5. ' while' → logprob: -5.369724273681641
    6. '<|end|>' → logprob: -5.369724273681641
    7. ',' → logprob: -6.619724273681641
    8. '```' → logprob: -7.994724273681641
    9. 'n' → logprob: -8.11972427368164
    10. 'While' → logprob: -8.74472427368164

Token 195: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011174913495779037
    2. '2' → logprob: -4.76117467880249
    3. '[' → logprob: -6.76117467880249
    4. 'inverse' → logprob: -7.38617467880249
    5. '_inverse' → logprob: -7.76117467880249
    6. '```' → logprob: -9.886175155639648
    7. '=' → logprob: -10.386175155639648
    8. 'f' → logprob: -10.761175155639648
    9. ' =' → logprob: -10.761175155639648
    10. '[]' → logprob: -11.136175155639648

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193148851394653
    2. '=' → logprob: -1.5019314289093018
    3. '=[]' → logprob: -13.376931190490723
    4. ' =[' → logprob: -15.126931190490723
    5. '=[' → logprob: -15.376931190490723
    6. ',' → logprob: -15.626931190490723
    7. '＝' → logprob: -16.25193214416504
    8. '.append' → logprob: -16.62693214416504
    9. '=list' → logprob: -17.12693214416504
    10. '=[]
' → logprob: -17.37693214416504

Token 197: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0033957520499825478
    2. ' [' → logprob: -6.5033955574035645
    3. '[]' → logprob: -7.0033955574035645
    4. '[g' → logprob: -7.0033955574035645
    5. '[n' → logprob: -10.503396034240723
    6. 'g' → logprob: -11.253396034240723
    7. '[]
' → logprob: -11.378396034240723
    8. 'list' → logprob: -11.503396034240723
    9. '[list' → logprob: -12.253396034240723
    10. '[in' → logprob: -13.003396034240723

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076276883482933044
    2. '0' → logprob: -4.882627487182617
    3. ']' → logprob: -11.382627487182617
    4. 'None' → logprob: -12.257627487182617
    5. 'inverse' → logprob: -13.257627487182617
    6. ' ' → logprob: -13.882627487182617
    7. '```' → logprob: -14.132627487182617
    8. '(' → logprob: -15.132627487182617
    9. '   ' → logprob: -15.382627487182617
    10. ')' → logprob: -15.632627487182617

Token 199: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3847441077232361
    2. ']
' → logprob: -1.2597441673278809
    3. ',' → logprob: -3.509744167327881
    4. ']

' → logprob: -5.259744167327881
    5. 'def' → logprob: -8.759743690490723
    6. ',
' → logprob: -9.384743690490723
    7. ']
' → logprob: -9.759743690490723
    8. ']*(' → logprob: -9.884743690490723
    9. ']*' → logprob: -11.009743690490723
    10. ' ,' → logprob: -11.134743690490723

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010521204239921644
    2. ' ' → logprob: -9.375104904174805
    3. '0' → logprob: -11.625104904174805
    4. ']' → logprob: -12.125104904174805
    5. 'mod' → logprob: -13.750104904174805
    6. 'inverse' → logprob: -13.875104904174805
    7. '998' → logprob: -14.500104904174805
    8. '-' → logprob: -14.562604904174805
    9. '999' → logprob: -14.875104904174805
    10. '(' → logprob: -15.000104904174805

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.375007629394531
    3. '998' → logprob: -13.125007629394531
    4. '0' → logprob: -14.000007629394531
    5. '(' → logprob: -16.25000762939453
    6. '999' → logprob: -16.25000762939453
    7. 'mod' → logprob: -16.62500762939453
    8. ']' → logprob: -16.75000762939453
    9. 'inverse' → logprob: -17.25000762939453
    10. '499' → logprob: -17.50000762939453

Token 202: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012895957566797733
    2. ']
' → logprob: -4.3878960609436035
    3. ']

' → logprob: -7.8878960609436035
    4. ',' → logprob: -12.137895584106445
    5. ' ]' → logprob: -13.012895584106445
    6. ']
' → logprob: -13.512895584106445
    7. 'def' → logprob: -14.387895584106445
    8. 'import' → logprob: -15.012895584106445
    9. ' ]
' → logprob: -15.637895584106445
    10. '
' → logprob: -15.762895584106445

Token 203: '[' (ID: 58)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8295195698738098
    2. 'for' → logprob: -1.079519510269165
    3. 'i' → logprob: -1.579519510269165
    4. ' for' → logprob: -4.579519748687744
    5. ' while' → logprob: -5.329519748687744
    6. ' i' → logprob: -6.579519748687744
    7. '```' → logprob: -7.704519748687744
    8. 'idx' → logprob: -7.829519748687744
    9. ',' → logprob: -8.454519271850586
    10. 'n' → logprob: -8.704519271850586

Token 204: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7129355072975159
    2. 'inverse' → logprob: -0.8379355072975159
    3. 'i' → logprob: -3.337935447692871
    4. ' for' → logprob: -3.962935447692871
    5. ' inverse' → logprob: -4.587935447692871
    6. 'g' → logprob: -5.837935447692871
    7. 'n' → logprob: -5.962935447692871
    8. ' i' → logprob: -6.462935447692871
    9. '   ' → logprob: -6.462935447692871
    10. 'while' → logprob: -6.962935447692871

Token 205: 'inverse' (ID: 153422)
  Prédit: 'inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.01243642345070839
    2. 'lambda' → logprob: -5.637436389923096
    3. 'g' → logprob: -6.012436389923096
    4. ' inverse' → logprob: -6.137436389923096
    5. 'len' → logprob: -6.387436389923096
    6. '   ' → logprob: -6.887436389923096
    7. 'i' → logprob: -7.637436389923096
    8. 'n' → logprob: -8.387436866760254
    9. 'a' → logprob: -9.137436866760254
    10. ' ' → logprob: -9.637436866760254

Token 206: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007018264150246978
    2. '.' → logprob: -8.375701904296875
    3. 'append' → logprob: -8.625701904296875
    4. '.extend' → logprob: -8.625701904296875
    5. ' .' → logprob: -9.375701904296875
    6. ':=' → logprob: -11.250701904296875
    7. '.__' → logprob: -12.125701904296875
    8. ' :=' → logprob: -13.000701904296875
    9. ' ' → logprob: -13.875701904296875
    10. '
' → logprob: -14.250701904296875

Token 207: '((-' (ID: 135694)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.3688877820968628
    2. 'mod' → logprob: -1.2438877820968628
    3. '(in' → logprob: -4.493887901306152
    4. 'inverse' → logprob: -5.368887901306152
    5. ' (' → logprob: -6.493887901306152
    6. ' mod' → logprob: -7.243887901306152
    7. '((' → logprob: -7.243887901306152
    8. '(' → logprob: -7.618887901306152
    9. '	mod' → logprob: -8.243887901306152
    10. '   ' → logprob: -8.993887901306152

Token 208: 'inverse' (ID: 153422)
  Prédit: 'inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.005664137192070484
    2. 'mod' → logprob: -6.005664348602295
    3. ' inverse' → logprob: -6.380664348602295
    4. '(in' → logprob: -6.880664348602295
    5. '(mod' → logprob: -7.880664348602295
    6. '   ' → logprob: -10.755663871765137
    7. 'in' → logprob: -11.005663871765137
    8. ' (' → logprob: -11.505663871765137
    9. ' mod' → logprob: -11.505663871765137
    10. '(' → logprob: -12.005663871765137

Token 209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00452909991145134
    2. '[in' → logprob: -5.504528999328613
    3. 'mod' → logprob: -7.879528999328613
    4. '[m' → logprob: -10.254528999328613
    5. '[-' → logprob: -10.379528999328613
    6. '(mod' → logprob: -13.504528999328613
    7. 'inverse' → logprob: -13.629528999328613
    8. '[module' → logprob: -13.879528999328613
    9. '[g' → logprob: -14.504528999328613
    10. '	mod' → logprob: -14.754528999328613

Token 210: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0016207880107685924
    2. '(mod' → logprob: -6.501620769500732
    3. ' mod' → logprob: -9.25162124633789
    4. '1' → logprob: -11.62662124633789
    5. '	mod' → logprob: -12.12662124633789
    6. '(' → logprob: -12.50162124633789
    7. '[' → logprob: -13.00162124633789
    8. '-mod' → logprob: -14.75162124633789
    9. ' ' → logprob: -14.75162124633789
    10. '   ' → logprob: -15.12662124633789

Token 211: ' %' (ID: 1851)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.08075042814016342
    2. '[' → logprob: -2.5807504653930664
    3. ' mod' → logprob: -6.580750465393066
    4. '(mod' → logprob: -8.705750465393066
    5. '[-' → logprob: -8.830750465393066
    6. '	mod' → logprob: -9.205750465393066
    7. '_mod' → logprob: -11.205750465393066
    8. '%' → logprob: -11.205750465393066
    9. '   ' → logprob: -11.830750465393066
    10. '.mod' → logprob: -11.955750465393066

Token 212: ' i' (ID: 575)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03410353884100914
    2. '(mod' → logprob: -3.5341036319732666
    3. 'div' → logprob: -5.7841033935546875
    4. '(' → logprob: -7.1591033935546875
    5. '   ' → logprob: -9.159103393554688
    6. ' mod' → logprob: -9.534103393554688
    7. 'int' → logprob: -9.534103393554688
    8. ' (' → logprob: -9.909103393554688
    9. '(div' → logprob: -9.909103393554688
    10. '(int' → logprob: -10.784103393554688

Token 213: ']' (ID: 60)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5207107067108154
    2. '(mod' → logprob: -1.6457107067108154
    3. ']' → logprob: -1.7707107067108154
    4. '*' → logprob: -3.3957107067108154
    5. '	mod' → logprob: -6.0207109451293945
    6. ' mod' → logprob: -6.2707109451293945
    7. '_mod' → logprob: -7.0207109451293945
    8. ' *' → logprob: -7.2707109451293945
    9. ']*' → logprob: -7.2707109451293945
    10. ' ' → logprob: -7.7707109451293945

Token 214: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.030085884034633636
    2. ' *' → logprob: -3.530085802078247
    3. '*(' → logprob: -8.030085563659668
    4. '   ' → logprob: -12.155085563659668
    5. ' ' → logprob: -13.030085563659668
    6. '  ' → logprob: -15.155085563659668
    7. ')' → logprob: -15.155085563659668
    8. '*
' → logprob: -15.280085563659668
    9. '    ' → logprob: -15.405085563659668
    10. '*i' → logprob: -15.405085563659668

Token 215: ' (' (ID: 350)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.0034186739940196276
    2. 'mod' → logprob: -6.128418445587158
    3. ' (' → logprob: -6.753418445587158
    4. '(' → logprob: -10.003418922424316
    5. '   ' → logprob: -11.378418922424316
    6. '  ' → logprob: -13.003418922424316
    7. ' mod' → logprob: -13.378418922424316
    8. 'div' → logprob: -13.628418922424316
    9. ' ' → logprob: -13.628418922424316
    10. '(div' → logprob: -13.753418922424316

Token 216: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00319482758641243
    2. '(mod' → logprob: -5.753194808959961
    3. ' mod' → logprob: -11.128194808959961
    4. '   ' → logprob: -13.753194808959961
    5. '	mod' → logprob: -14.253194808959961
    6. ' (' → logprob: -15.128194808959961
    7. '(' → logprob: -15.753194808959961
    8. 'div' → logprob: -16.12819480895996
    9. '  ' → logprob: -16.12819480895996
    10. ' ' → logprob: -16.25319480895996

Token 217: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.03194250166416168
    2. 'mod' → logprob: -4.656942367553711
    3. '#' → logprob: -4.781942367553711
    4. 'i' → logprob: -5.656942367553711
    5. 'div' → logprob: -6.031942367553711
    6. ')' → logprob: -6.281942367553711
    7. '(i' → logprob: -6.656942367553711
    8. ' //' → logprob: -7.156942367553711
    9. '%i' → logprob: -7.156942367553711
    10. ' mod' → logprob: -7.281942367553711

Token 218: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033796546631492674
    2. ' i' → logprob: -8.000337600708008
    3. '	i' → logprob: -13.375337600708008
    4. '   ' → logprob: -14.500337600708008
    5. ')' → logprob: -16.000337600708008
    6. ')i' → logprob: -16.000337600708008
    7. ' ' → logprob: -16.125337600708008
    8. '  ' → logprob: -16.375337600708008
    9. ',i' → logprob: -17.625337600708008
    10. '[i' → logprob: -18.250337600708008

Token 219: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01372161228209734
    2. '%i' → logprob: -5.138721466064453
    3. ')%' → logprob: -5.513721466064453
    4. 'i' → logprob: -6.013721466064453
    5. ' %' → logprob: -7.263721466064453
    6. '%' → logprob: -8.638721466064453
    7. ' i' → logprob: -8.763721466064453
    8. ' )' → logprob: -9.013721466064453
    9. '[i' → logprob: -9.763721466064453
    10. ')i' → logprob: -11.263721466064453

Token 220: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3471195697784424
    2. '%' → logprob: -1.5971195697784424
    3. ' %' → logprob: -2.5971195697784424
    4. ')%' → logprob: -4.222119331359863
    5. ' )' → logprob: -7.097119331359863
    6. '%i' → logprob: -7.847119331359863
    7. '   ' → logprob: -8.972119331359863
    8. '+' → logprob: -9.472119331359863
    9. ' ' → logprob: -9.597119331359863
    10. '    ' → logprob: -10.472119331359863

Token 221: ' mod' (ID: 1812)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020377879263833165
    2. ' i' → logprob: -8.500204086303711
    3. 'mod' → logprob: -15.375204086303711
    4. '   ' → logprob: -17.25020408630371
    5. ' ' → logprob: -17.75020408630371
    6. '	i' → logprob: -18.50020408630371
    7. ')' → logprob: -19.00020408630371
    8. '  ' → logprob: -19.12520408630371
    9. '(i' → logprob: -19.12520408630371
    10. '```' → logprob: -19.25020408630371

Token 222: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.32394006848335266
    2. ')' → logprob: -1.3239400386810303
    3. '),' → logprob: -5.448940277099609
    4. ')),' → logprob: -5.823940277099609
    5. ' if' → logprob: -7.073940277099609
    6. ' )' → logprob: -7.198940277099609
    7. ' ))' → logprob: -7.448940277099609
    8. 'if' → logprob: -7.948940277099609
    9. '   ' → logprob: -8.94894027709961
    10. 'for' → logprob: -9.07394027709961

Token 223: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.22225627303123474
    2. 'g' → logprob: -1.7222563028335571
    3. '    ' → logprob: -4.097256183624268
    4. '   ' → logprob: -6.472256183624268
    5. ' ' → logprob: -6.597256183624268
    6. '        ' → logprob: -7.722256183624268
    7. '  ' → logprob: -8.847256660461426
    8. '     ' → logprob: -8.972256660461426
    9. '            ' → logprob: -9.597256660461426
    10. '       ' → logprob: -9.597256660461426

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. '1' → logprob: -11.625008583068848
    3. '₂' → logprob: -17.625009536743164
    4. '_' → logprob: -18.187509536743164
    5. '
' → logprob: -18.625009536743164
    6. '۲' → logprob: -18.937509536743164
    7. '```' → logprob: -19.187509536743164
    8. 'f' → logprob: -20.062509536743164
    9. '২' → logprob: -20.187509536743164
    10. '२' → logprob: -20.375009536743164

Token 225: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.56364209135063e-05
    2. 'append' → logprob: -9.875065803527832
    3. '.' → logprob: -11.250065803527832
    4. ' .' → logprob: -13.750065803527832
    5. ' append' → logprob: -17.375064849853516
    6. '.extend' → logprob: -17.500064849853516
    7. '].' → logprob: -18.125064849853516
    8. ').' → logprob: -18.625064849853516
    9. '2' → logprob: -19.000064849853516
    10. 'g' → logprob: -19.125064849853516

Token 226: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.07077165693044662
    2. '((' → logprob: -2.6957716941833496
    3. '(' → logprob: -7.44577169418335
    4. 'g' → logprob: -8.320771217346191
    5. ' (' → logprob: -12.820771217346191
    6. '(
' → logprob: -13.320771217346191
    7. '(((' → logprob: -14.695771217346191
    8. '   ' → logprob: -15.070771217346191
    9. ' ((' → logprob: -15.445771217346191
    10. '  ' → logprob: -15.820771217346191

Token 227: '2' (ID: 17)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.11388441920280457
    2. 'g' → logprob: -2.238884449005127
    3. '2' → logprob: -7.238884449005127
    4. '(' → logprob: -9.113883972167969
    5. ' g' → logprob: -9.613883972167969
    6. ' (' → logprob: -9.863883972167969
    7. '((' → logprob: -9.988883972167969
    8. '[g' → logprob: -10.488883972167969
    9. '   ' → logprob: -11.113883972167969
    10. '	g' → logprob: -12.613883972167969

Token 228: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. ' [-' → logprob: -17.25
    3. '```' → logprob: -18.0
    4. '[' → logprob: -18.75
    5. '   ' → logprob: -18.75
    6. '
' → logprob: -18.75
    7. '[:-' → logprob: -19.875
    8. '.append' → logprob: -20.0
    9. '[i' → logprob: -20.0
    10. '][-' → logprob: -20.125

Token 229: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17289578914642334
    2. '1' → logprob: -1.9228957891464233
    3. ' -' → logprob: -4.547895908355713
    4. '-i' → logprob: -7.297895908355713
    5. '   ' → logprob: -7.422895908355713
    6. ']' → logprob: -8.172895431518555
    7. ' ' → logprob: -8.672895431518555
    8. '```' → logprob: -9.547895431518555
    9. '
' → logprob: -9.672895431518555
    10. '(-' → logprob: -10.172895431518555

Token 230: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5232342481613159
    2. '*' → logprob: -0.8982342481613159
    3. '*i' → logprob: -10.023234367370605
    4. '*g' → logprob: -10.898234367370605
    5. ' ' → logprob: -11.148234367370605
    6. '*(' → logprob: -11.273234367370605
    7. ' ' → logprob: -12.773234367370605
    8. '*n' → logprob: -12.773234367370605
    9. ')' → logprob: -13.148234367370605
    10. '*j' → logprob: -13.523234367370605

Token 231: 'inverse' (ID: 153422)
  Prédit: 'inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.005934013053774834
    2. ' inverse' → logprob: -5.130934238433838
    3. 'in' → logprob: -13.38093376159668
    4. '.inverse' → logprob: -13.63093376159668
    5. '(in' → logprob: -13.75593376159668
    6. '   ' → logprob: -14.50593376159668
    7. '_inverse' → logprob: -15.25593376159668
    8. '[in' → logprob: -15.38093376159668
    9. '  ' → logprob: -15.63093376159668
    10. ' ' → logprob: -16.13093376159668

Token 232: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.25249120593070984
    2. '[i' → logprob: -1.5024912357330322
    3. '[' → logprob: -7.502490997314453
    4. '.append' → logprob: -12.252490997314453
    5. '   ' → logprob: -13.627490997314453
    6. '[(' → logprob: -13.627490997314453
    7. '[len' → logprob: -13.877490997314453
    8. ' [-' → logprob: -15.377490997314453
    9. ')' → logprob: -15.502490997314453
    10. 'mod' → logprob: -15.752490997314453

Token 233: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5072332620620728
    2. '-' → logprob: -1.7572332620620728
    3. ']' → logprob: -1.8822332620620728
    4. '1' → logprob: -2.882233142852783
    5. '])' → logprob: -4.382233142852783
    6. '][-' → logprob: -7.007233142852783
    7. ' -' → logprob: -7.132233142852783
    8. '[-' → logprob: -7.382233142852783
    9. '%i' → logprob: -7.757233142852783
    10. '-i' → logprob: -7.757233142852783

Token 234: ']%' (ID: 158002)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1296764314174652
    2. '%' → logprob: -2.129676342010498
    3. ')' → logprob: -6.004676342010498
    4. ')%' → logprob: -8.254676818847656
    5. ']%' → logprob: -12.629676818847656
    6. '%c' → logprob: -12.879676818847656
    7. ' ' → logprob: -12.879676818847656
    8. '%d' → logprob: -13.254676818847656
    9. '%n' → logprob: -13.504676818847656
    10. ']' → logprob: -13.629676818847656

Token 235: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.505351095460355e-05
    2. ' mod' → logprob: -9.500075340270996
    3. '	mod' → logprob: -16.87507438659668
    4. '(mod' → logprob: -17.50007438659668
    5. '   ' → logprob: -17.87507438659668
    6. '```' → logprob: -17.87507438659668
    7. 'moder' → logprob: -18.50007438659668
    8. ' ' → logprob: -18.75007438659668
    9. '  ' → logprob: -19.00007438659668
    10. '
' → logprob: -19.25007438659668

Token 236: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.021468635648489
    2. ')' → logprob: -3.8964686393737793
    3. '))
' → logprob: -7.271468639373779
    4. ' ))' → logprob: -9.271468162536621
    5. '),' → logprob: -10.021468162536621
    6. ')
' → logprob: -10.521468162536621
    7. ')),' → logprob: -10.771468162536621
    8. '))[' → logprob: -11.271468162536621
    9. ')))' → logprob: -11.771468162536621
    10. ' )' → logprob: -12.021468162536621

Token 237: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023484917357563972
    2. 'for' → logprob: -3.773484945297241
    3. ')' → logprob: -8.64848518371582
    4. '   ' → logprob: -10.14848518371582
    5. ' ' → logprob: -11.64848518371582
    6. ' )' → logprob: -12.27348518371582
    7. '	for' → logprob: -12.27348518371582
    8. '    ' → logprob: -12.27348518371582
    9. '  ' → logprob: -14.02348518371582
    10. ',' → logprob: -14.89848518371582

Token 238: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009818658232688904
    2. ' i' → logprob: -4.6348185539245605
    3. 'range' → logprob: -10.009819030761719
    4. ' range' → logprob: -11.009819030761719
    5. '   ' → logprob: -14.634819030761719
    6. ' ' → logprob: -15.009819030761719
    7. '	i' → logprob: -15.759819030761719
    8. '(i' → logprob: -16.13481903076172
    9. '  ' → logprob: -16.25981903076172
    10. 'j' → logprob: -17.25981903076172

Token 239: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09591447561979294
    2. 'in' → logprob: -2.595914363861084
    3. ' range' → logprob: -4.470914363861084
    4. 'range' → logprob: -5.220914363861084
    5. ' ' → logprob: -10.720914840698242
    6. '(range' → logprob: -11.845914840698242
    7. '  ' → logprob: -12.595914840698242
    8. ' i' → logprob: -13.095914840698242
    9. '	in' → logprob: -13.095914840698242
    10. '	range' → logprob: -13.720914840698242

Token 240: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018151111900806427
    2. ' range' → logprob: -4.01815128326416
    3. '(range' → logprob: -15.01815128326416
    4. '   ' → logprob: -15.26815128326416
    5. '2' → logprob: -15.76815128326416
    6. ' ' → logprob: -15.89315128326416
    7. '	range' → logprob: -16.018150329589844
    8. '  ' → logprob: -16.393150329589844
    9. 'list' → logprob: -17.393150329589844
    10. '
' → logprob: -18.768150329589844

Token 241: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '(' → logprob: -15.250031471252441
    4. '   ' → logprob: -17.000032424926758
    5. '  ' → logprob: -18.000032424926758
    6. '3' → logprob: -19.125032424926758
    7. '
' → logprob: -19.500032424926758
    8. '２' → logprob: -20.125032424926758
    9. '۲' → logprob: -20.375032424926758
    10. '```' → logprob: -20.750032424926758

Token 242: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.875031471252441
    4. '3' → logprob: -16.875032424926758
    5. '  ' → logprob: -17.250032424926758
    6. '２' → logprob: -17.750032424926758
    7. '۲' → logprob: -18.000032424926758
    8. '    ' → logprob: -18.375032424926758
    9. '```' → logprob: -18.875032424926758
    10. '
' → logprob: -19.250032424926758

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012472548987716436
    2. ',n' → logprob: -7.001247406005859
    3. ' ,' → logprob: -8.00124740600586
    4. ',len' → logprob: -14.75124740600586
    5. 'n' → logprob: -16.50124740600586
    6. ',
' → logprob: -17.00124740600586
    7. ',i' → logprob: -18.87624740600586
    8. ',num' → logprob: -18.87624740600586
    9. ' ' → logprob: -19.00124740600586
    10. '，' → logprob: -19.12624740600586

Token 244: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00613841088488698
    2. ' n' → logprob: -5.131138324737549
    3. '   ' → logprob: -8.881138801574707
    4. '    ' → logprob: -10.256138801574707
    5. '  ' → logprob: -10.631138801574707
    6. '	n' → logprob: -12.381138801574707
    7. ' ' → logprob: -12.631138801574707
    8. '       ' → logprob: -14.131138801574707
    9. 'len' → logprob: -14.256138801574707
    10. '      ' → logprob: -14.381138801574707

Token 245: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003178071230649948
    2. ' +' → logprob: -5.753178119659424
    3. '+
' → logprob: -16.003177642822266
    4. '1' → logprob: -16.878177642822266
    5. '＋' → logprob: -17.378177642822266
    6. ')+' → logprob: -17.628177642822266
    7. '+n' → logprob: -17.878177642822266
    8. '```' → logprob: -17.878177642822266
    9. '2' → logprob: -18.003177642822266
    10. '+)' → logprob: -18.253177642822266

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -14.375020027160645
    4. '   ' → logprob: -14.750020027160645
    5. 'n' → logprob: -16.62502098083496
    6. '```' → logprob: -17.12502098083496
    7. '  ' → logprob: -18.00002098083496
    8. '
' → logprob: -18.56252098083496
    9. '+' → logprob: -18.68752098083496
    10. ')' → logprob: -18.68752098083496

Token 247: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005203855689615011
    2. ')' → logprob: -7.6255202293396
    3. ' )' → logprob: -11.000520706176758
    4. ')])' → logprob: -12.000520706176758
    5. ']' → logprob: -12.125520706176758
    6. '])]' → logprob: -13.375520706176758
    7. ')],' → logprob: -14.250520706176758
    8. '))' → logprob: -14.250520706176758
    9. '])' → logprob: -15.250520706176758
    10. ',' → logprob: -15.625520706176758

Token 248: ' ]

' (ID: 32229)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002608237089589238
    2. ']' → logprob: -6.002608299255371
    3. ')' → logprob: -9.252608299255371
    4. '])]' → logprob: -11.127608299255371
    5. ' ]' → logprob: -12.252608299255371
    6. '])' → logprob: -12.252608299255371
    7. ' )' → logprob: -12.377608299255371
    8. ')])' → logprob: -12.627608299255371
    9. ')]
' → logprob: -12.877608299255371
    10. '()]' → logprob: -14.752608299255371

Token 249: 'a' (ID: 64)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40584811568260193
    2. '=' → logprob: -1.1558481454849243
    3. ',' → logprob: -4.530848026275635
    4. '=[]' → logprob: -5.905848026275635
    5. 's' → logprob: -6.655848026275635
    6. 'g' → logprob: -7.405848026275635
    7. '=[' → logprob: -7.655848026275635
    8. '=n' → logprob: -7.905848026275635
    9. 'ns' → logprob: -8.030848503112793
    10. 'r' → logprob: -8.155848503112793

Token 251: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2806929349899292
    2. '[n' → logprob: -2.4056930541992188
    3. '[]' → logprob: -2.6556930541992188
    4. 'list' → logprob: -2.9056930541992188
    5. '[int' → logprob: -4.155693054199219
    6. '[list' → logprob: -5.780693054199219
    7. '[g' → logprob: -6.405693054199219
    8. ' [' → logprob: -6.655693054199219
    9. '[a' → logprob: -7.030693054199219
    10. '[(' → logprob: -7.155693054199219

Token 252: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6211620569229126
    2. 'list' → logprob: -1.4961620569229126
    3. '[n' → logprob: -2.246161937713623
    4. 'range' → logprob: -2.496161937713623
    5. '[]' → logprob: -3.621161937713623
    6. 'product' → logprob: -5.121161937713623
    7. '[int' → logprob: -5.371161937713623
    8. '[list' → logprob: -5.496161937713623
    9. 'n' → logprob: -6.246161937713623
    10. '[min' → logprob: -6.871161937713623

Token 253: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: 'b' (ID: 65)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.380939781665802
    2. '<|end|>' → logprob: -1.7559397220611572
    3. ' for' → logprob: -2.1309397220611572
    4. 'range' → logprob: -4.130939960479736
    5. '(range' → logprob: -6.255939960479736
    6. ')' → logprob: -6.255939960479736
    7. ' range' → logprob: -6.880939960479736
    8. '
' → logprob: -7.005939960479736
    9. 'n' → logprob: -7.005939960479736
    10. '<|end|>' → logprob: -8.255939483642578

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134635388851166
    2. '=' → logprob: -1.313463568687439
    3. ',' → logprob: -8.56346321105957
    4. 'a' → logprob: -12.81346321105957
    5. ' ,' → logprob: -13.43846321105957
    6. ' ' → logprob: -13.81346321105957
    7. '1' → logprob: -13.93846321105957
    8. '0' → logprob: -14.31346321105957
    9. 'n' → logprob: -14.93846321105957
    10. '.' → logprob: -15.18846321105957

Token 256: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.063547283411026
    2. '1' → logprob: -2.938547372817993
    3. 'n' → logprob: -5.563547134399414
    4. ' ' → logprob: -6.063547134399414
    5. '[]' → logprob: -6.813547134399414
    6. 'a' → logprob: -7.813547134399414
    7. '[' → logprob: -8.063547134399414
    8. '[n' → logprob: -9.188547134399414
    9. 'sum' → logprob: -9.313547134399414
    10. 'int' → logprob: -9.688547134399414

Token 257: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07474474608898163
    2. '1' → logprob: -2.824744701385498
    3. 'n' → logprob: -4.449744701385498
    4. 'a' → logprob: -8.074745178222656
    5. '[' → logprob: -9.199745178222656
    6. 'int' → logprob: -9.324745178222656
    7. '2' → logprob: -9.574745178222656
    8. 'sum' → logprob: -9.949745178222656
    9. '[n' → logprob: -10.074745178222656
    10. '[]' → logprob: -10.324745178222656

Token 258: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: 'lst' (ID: 65430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2733902037143707
    2. ' for' → logprob: -2.398390293121338
    3. '<|end|>' → logprob: -3.023390293121338
    4. 'while' → logprob: -3.273390293121338
    5. '
' → logprob: -3.648390293121338
    6. ')' → logprob: -5.023390293121338
    7. ',' → logprob: -5.023390293121338
    8. ' while' → logprob: -5.398390293121338
    9. ':' → logprob: -5.523390293121338
    10. 'range' → logprob: -6.398390293121338

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2287619560956955
    2. '=' → logprob: -1.603761911392212
    3. ',' → logprob: -5.978762149810791
    4. '=[]' → logprob: -8.228761672973633
    5. '[' → logprob: -8.603761672973633
    6. '<|end|>' → logprob: -9.728761672973633
    7. ')' → logprob: -9.978761672973633
    8. ' =[' → logprob: -10.103761672973633
    9. ' ,' → logprob: -10.478761672973633
    10. '=[' → logprob: -10.603761672973633

Token 261: ' range' (ID: 3352)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.23462878167629242
    2. '[' → logprob: -1.9846287965774536
    3. 'list' → logprob: -3.359628677368164
    4. '[n' → logprob: -3.984628677368164
    5. '[list' → logprob: -5.234628677368164
    6. 'range' → logprob: -5.609628677368164
    7. ' [' → logprob: -5.609628677368164
    8. ' []' → logprob: -5.609628677368164
    9. ' list' → logprob: -6.859628677368164
    10. '[input' → logprob: -8.734628677368164

Token 262: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0897364690899849
    2. '(n' → logprob: -2.4647364616394043
    3. '(a' → logprob: -7.214736461639404
    4. '1' → logprob: -10.964736938476562
    5. 'a' → logprob: -11.339736938476562
    6. '(len' → logprob: -11.339736938476562
    7. '(b' → logprob: -11.589736938476562
    8. '(l' → logprob: -13.089736938476562
    9. '((' → logprob: -13.589736938476562
    10. 'n' → logprob: -13.589736938476562

Token 263: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3235529959201813
    2. ')' → logprob: -1.5735529661178589
    3. ' +' → logprob: -3.1985530853271484
    4. ',' → logprob: -3.6985530853271484
    5. '1' → logprob: -6.573553085327148
    6. ')
' → logprob: -7.198553085327148
    7. '-' → logprob: -7.448553085327148
    8. ' )' → logprob: -8.198553085327148
    9. ' ,' → logprob: -8.948553085327148
    10. '))' → logprob: -9.323553085327148

Token 264: ' n' (ID: 297)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08862805366516113
    2. '0' → logprob: -2.588628053665161
    3. ' -' → logprob: -5.713627815246582
    4. 'n' → logprob: -6.088627815246582
    5. '2' → logprob: -6.463627815246582
    6. '1' → logprob: -6.713627815246582
    7. ' ' → logprob: -6.838627815246582
    8. 'a' → logprob: -9.588627815246582
    9. ' n' → logprob: -9.963627815246582
    10. '-n' → logprob: -10.901127815246582

Token 265: '//' (ID: 393)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2113155871629715
    2. '+' → logprob: -1.711315631866455
    3. ' -' → logprob: -5.086315631866455
    4. ',' → logprob: -6.336315631866455
    5. ' +' → logprob: -6.961315631866455
    6. '*' → logprob: -7.711315631866455
    7. '2' → logprob: -9.461315155029297
    8. '//' → logprob: -9.461315155029297
    9. '0' → logprob: -9.711315155029297
    10. ' ' → logprob: -9.836315155029297

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016231719637289643
    2. '3' → logprob: -7.126623153686523
    3. '1' → logprob: -7.626623153686523
    4. ' ' → logprob: -8.626623153686523
    5. '4' → logprob: -9.376623153686523
    6. '-' → logprob: -10.501623153686523
    7. '0' → logprob: -11.626623153686523
    8. '   ' → logprob: -11.876623153686523
    9. '5' → logprob: -12.126623153686523
    10. '6' → logprob: -12.376623153686523

Token 267: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0585312657058239
    2. ' -' → logprob: -3.3085312843322754
    3. ',' → logprob: -3.9335312843322754
    4. '+' → logprob: -7.808531284332275
    5. ',-' → logprob: -8.433530807495117
    6. ' ,' → logprob: -10.558530807495117
    7. ')' → logprob: -11.058530807495117
    8. '   ' → logprob: -11.683530807495117
    9. ' ' → logprob: -11.808530807495117
    10. ' +' → logprob: -11.808530807495117

Token 268: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03399627283215523
    2. ' -' → logprob: -3.408996343612671
    3. '0' → logprob: -8.65899658203125
    4. 'n' → logprob: -9.53399658203125
    5. ' n' → logprob: -10.28399658203125
    6. '1' → logprob: -10.53399658203125
    7. ' ' → logprob: -10.65899658203125
    8. '-n' → logprob: -11.28399658203125
    9. 'b' → logprob: -13.40899658203125
    10. '-b' → logprob: -13.78399658203125

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003485745983198285
    2. '-' → logprob: -8.000349044799805
    3. '2' → logprob: -12.500349044799805
    4. ' ' → logprob: -12.500349044799805
    5. ' -' → logprob: -13.000349044799805
    6. '0' → logprob: -14.000349044799805
    7. ')' → logprob: -14.250349044799805
    8. '```' → logprob: -14.687849044799805
    9. '   ' → logprob: -15.000349044799805
    10. ',' → logprob: -16.000349044799805

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020502179861068726
    2. ',' → logprob: -4.020502090454102
    3. ',-' → logprob: -6.770502090454102
    4. '-' → logprob: -7.145502090454102
    5. ')
' → logprob: -8.520502090454102
    6. ' )' → logprob: -10.520502090454102
    7. '1' → logprob: -11.020502090454102
    8. '),' → logprob: -11.270502090454102
    9. ' -' → logprob: -11.395502090454102
    10. ',
' → logprob: -11.395502090454102

Token 271: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08039684593677521
    2. ' for' → logprob: -2.580396890640259
    3. ')' → logprob: -6.83039665222168
    4. '[' → logprob: -9.20539665222168
    5. '*' → logprob: -9.58039665222168
    6. ',' → logprob: -9.83039665222168
    7. ' ' → logprob: -10.83039665222168
    8. 'token' → logprob: -10.95539665222168
    9. ':' → logprob: -11.08039665222168
    10. ']' → logprob: -11.20539665222168

Token 272: ' exp' (ID: 2794)
  Prédit: ' cmb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cmb' → logprob: -0.8897780179977417
    2. ' prod' → logprob: -2.0147781372070312
    3. ' main' → logprob: -2.2647781372070312
    4. ' f' → logprob: -2.6397781372070312
    5. ' solve' → logprob: -3.2647781372070312
    6. ' factorial' → logprob: -3.3897781372070312
    7. ' comb' → logprob: -3.7647781372070312
    8. ' count' → logprob: -4.264778137207031
    9. ' pow' → logprob: -4.264778137207031
    10. 'solve' → logprob: -4.389778137207031

Token 273: '2' (ID: 17)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.7907289266586304
    2. '(x' → logprob: -1.6657289266586304
    3. '(n' → logprob: -2.04072904586792
    4. '(a' → logprob: -2.41572904586792
    5. 'and' → logprob: -2.79072904586792
    6. '(' → logprob: -4.29072904586792
    7. '(val' → logprob: -4.66572904586792
    8. '(pow' → logprob: -4.66572904586792
    9. '(i' → logprob: -5.29072904586792
    10. '(l' → logprob: -5.41572904586792

Token 274: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7378384470939636
    2. '(x' → logprob: -1.8628385066986084
    3. '(k' → logprob: -2.1128385066986084
    4. '(' → logprob: -2.1128385066986084
    5. '(a' → logprob: -2.9878385066986084
    6. '(power' → logprob: -4.362838268280029
    7. '(s' → logprob: -4.487838268280029
    8. '(base' → logprob: -4.612838268280029
    9. '(i' → logprob: -4.612838268280029
    10. '(pow' → logprob: -5.612838268280029

Token 275: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021025264635682106
    2. '):
' → logprob: -3.8960251808166504
    3. ')' → logprob: -8.521025657653809
    4. ',' → logprob: -8.521025657653809
    5. ' ):' → logprob: -10.271025657653809
    6. '):
' → logprob: -11.146025657653809
    7. ':' → logprob: -11.271025657653809
    8. '=' → logprob: -11.646025657653809
    9. '   ' → logprob: -12.646025657653809
    10. '**' → logprob: -13.271025657653809

Token 276: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08559142798185349
    2. ' return' → logprob: -2.5855913162231445
    3. 'return' → logprob: -5.7105913162231445
    4. '2' → logprob: -5.9605913162231445
    5. ' i' → logprob: -7.9605913162231445
    6. '1' → logprob: -8.710591316223145
    7. ' ' → logprob: -8.960591316223145
    8. ' (' → logprob: -10.835591316223145
    9. 'b' → logprob: -11.085591316223145
    10. '   ' → logprob: -11.085591316223145

Token 277: ' pow' (ID: 9779)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5490124225616455
    2. '1' → logprob: -1.5490124225616455
    3. '(' → logprob: -2.0490124225616455
    4. 'pow' → logprob: -2.7990124225616455
    5. '(i' → logprob: -4.299012184143066
    6. 'i' → logprob: -6.299012184143066
    7. ' ' → logprob: -6.424012184143066
    8. '(pow' → logprob: -6.549012184143066
    9. ' (' → logprob: -7.674012184143066
    10. '(n' → logprob: -7.674012184143066

Token 278: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020550761371850967
    2. '2' → logprob: -3.8955507278442383
    3. '(
' → logprob: -12.395550727844238
    4. '
' → logprob: -13.520550727844238
    5. 'a' → logprob: -13.895550727844238
    6. '(i' → logprob: -14.270550727844238
    7. '```' → logprob: -14.520550727844238
    8. '(a' → logprob: -14.645550727844238
    9. '(base' → logprob: -15.770550727844238
    10. '<|end|>' → logprob: -15.770550727844238

Token 279: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015339049277827144
    2. 'a' → logprob: -7.2515339851379395
    3. '(' → logprob: -8.001533508300781
    4. 'b' → logprob: -8.626533508300781
    5. 'i' → logprob: -8.876533508300781
    6. '
' → logprob: -10.001533508300781
    7. ')' → logprob: -10.376533508300781
    8. ' ' → logprob: -10.751533508300781
    9. '3' → logprob: -10.876533508300781
    10. '10' → logprob: -11.251533508300781

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20457211136817932
    2. ',i' → logprob: -1.704572081565857
    3. 'i' → logprob: -6.0795722007751465
    4. ' ,' → logprob: -7.4545722007751465
    5. '*i' → logprob: -9.329571723937988
    6. ' i' → logprob: -9.329571723937988
    7. ',n' → logprob: -10.329571723937988
    8. '**' → logprob: -10.454571723937988
    9. '   ' → logprob: -11.079571723937988
    10. '(i' → logprob: -11.079571723937988

Token 281: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0057141659781336784
    2. ' i' → logprob: -5.380713939666748
    3. '-' → logprob: -7.880713939666748
    4. '-i' → logprob: -8.880714416503906
    5. 'mod' → logprob: -9.130714416503906
    6. 'n' → logprob: -9.380714416503906
    7. ' -' → logprob: -9.380714416503906
    8. '(i' → logprob: -10.005714416503906
    9. '   ' → logprob: -10.005714416503906
    10. '-n' → logprob: -10.380714416503906

Token 282: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19701345264911652
    2. ' -' → logprob: -1.9470134973526
    3. '-i' → logprob: -3.3220133781433105
    4. ' ' → logprob: -11.322013854980469
    5. '-n' → logprob: -11.697013854980469
    6. '-k' → logprob: -12.197013854980469
    7. ')' → logprob: -12.447013854980469
    8. ' i' → logprob: -12.947013854980469
    9. '
' → logprob: -13.072013854980469
    10. '   ' → logprob: -13.947013854980469

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031368397176265717
    2. ')' → logprob: -6.12813663482666
    3. '-' → logprob: -7.50313663482666
    4. ' ,' → logprob: -8.25313663482666
    5. ' -' → logprob: -9.12813663482666
    6. ',n' → logprob: -12.00313663482666
    7. '   ' → logprob: -12.25313663482666
    8. '))' → logprob: -12.62813663482666
    9. '-i' → logprob: -13.00313663482666
    10. '}' → logprob: -13.50313663482666

Token 284: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0013263145228847861
    2. ' mod' → logprob: -6.626326084136963
    3. '998' → logprob: -15.376326560974121
    4. '	mod' → logprob: -17.251325607299805
    5. ' ' → logprob: -17.501325607299805
    6. ')' → logprob: -17.626325607299805
    7. '
' → logprob: -18.001325607299805
    8. '   ' → logprob: -18.126325607299805
    9. 'MOD' → logprob: -18.876325607299805
    10. 'moder' → logprob: -19.001325607299805

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ')
' → logprob: -12.250006675720215
    3. ' )' → logprob: -13.375006675720215
    4. ')

' → logprob: -15.625006675720215
    5. ')return' → logprob: -15.625006675720215
    6. '))' → logprob: -15.875006675720215
    7. ')#' → logprob: -16.87500762939453
    8. ')}' → logprob: -17.12500762939453
    9. ')`' → logprob: -17.62500762939453
    10. '),' → logprob: -18.00000762939453

Token 286: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2678951919078827
    2. '<|end|>' → logprob: -1.892895221710205
    3. ' for' → logprob: -3.017895221710205
    4. ')' → logprob: -3.767895221710205
    5. 'i' → logprob: -5.517895221710205
    6. 'def' → logprob: -6.142895221710205
    7. '*' → logprob: -6.642895221710205
    8. ',' → logprob: -6.767895221710205
    9. '[' → logprob: -7.642895221710205
    10. '.' → logprob: -7.892895221710205

Token 287: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06307899951934814
    2. ' i' → logprob: -2.8130788803100586
    3. 'x' → logprob: -7.188078880310059
    4. 'k' → logprob: -9.563078880310059
    5. ' x' → logprob: -10.063078880310059
    6. 'j' → logprob: -10.188078880310059
    7. 'b' → logprob: -10.563078880310059
    8. 'c' → logprob: -10.813078880310059
    9. 'a' → logprob: -11.063078880310059
    10. '_i' → logprob: -11.063078880310059

Token 288: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1340886950492859
    2. 'in' → logprob: -2.2590887546539307
    3. ',' → logprob: -3.8840887546539307
    4. ' ,' → logprob: -7.884088516235352
    5. ' ' → logprob: -9.509088516235352
    6. ',in' → logprob: -12.134088516235352
    7. ' i' → logprob: -12.759088516235352
    8. '	in' → logprob: -13.009088516235352
    9. '  ' → logprob: -13.259088516235352
    10. 'In' → logprob: -13.384088516235352

Token 289: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1674497127532959
    2. 'x' → logprob: -2.667449712753296
    3. ' i' → logprob: -3.167449712753296
    4. 'j' → logprob: -4.917449951171875
    5. 'val' → logprob: -4.917449951171875
    6. 'k' → logprob: -5.542449951171875
    7. 'v' → logprob: -5.542449951171875
    8. ' x' → logprob: -5.792449951171875
    9. 'num' → logprob: -5.792449951171875
    10. ' val' → logprob: -6.042449951171875

Token 290: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17995324730873108
    2. 'in' → logprob: -1.8049532175064087
    3. ',' → logprob: -8.554953575134277
    4. ')' → logprob: -11.804953575134277
    5. ' ' → logprob: -12.929953575134277
    6. '	in' → logprob: -13.554953575134277
    7. '<|end|>' → logprob: -13.929953575134277
    8. ' ,' → logprob: -14.679953575134277
    9. 'enumer' → logprob: -14.929953575134277
    10. 'import' → logprob: -15.179953575134277

Token 291: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0032357019372284412
    2. ' enumerate' → logprob: -5.753235816955566
    3. 'lst' → logprob: -10.003235816955566
    4. 'product' → logprob: -11.378235816955566
    5. 'enum' → logprob: -14.003235816955566
    6. 'list' → logprob: -15.878235816955566
    7. 'en' → logprob: -16.00323486328125
    8. 'zip' → logprob: -16.12823486328125
    9. 'prod' → logprob: -17.62823486328125
    10. '(en' → logprob: -18.50323486328125

Token 292: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.00016909420082811266
    2. '(' → logprob: -9.375168800354004
    3. ' (' → logprob: -10.250168800354004
    4. '(l' → logprob: -10.625168800354004
    5. 'lst' → logprob: -11.625168800354004
    6. ' lst' → logprob: -11.875168800354004
    7. '(range' → logprob: -12.250168800354004
    8. '(n' → logprob: -13.125168800354004
    9. '(list' → logprob: -14.125168800354004
    10. '(ls' → logprob: -14.500168800354004

Token 293: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009731299243867397
    2. ',' → logprob: -5.009731292724609
    3. '):
' → logprob: -5.884731292724609
    4. ':' → logprob: -8.63473129272461
    5. ' ):' → logprob: -10.25973129272461
    6. ')' → logprob: -11.38473129272461
    7. '):
' → logprob: -12.75973129272461
    8. '):

' → logprob: -14.63473129272461
    9. '),' → logprob: -15.00973129272461
    10. ',:' → logprob: -15.00973129272461

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06826433539390564
    2. '<|end|>' → logprob: -3.4432642459869385
    3. '    ' → logprob: -4.193264484405518
    4. ' ' → logprob: -4.568264484405518
    5. ':' → logprob: -6.443264484405518
    6. ' if' → logprob: -6.568264484405518
    7. ' a' → logprob: -6.818264484405518
    8. ',' → logprob: -7.068264484405518
    9. ' b' → logprob: -7.443264484405518
    10. 'a' → logprob: -7.943264484405518

Token 295: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.14785099029541016
    2. 'b' → logprob: -3.14785099029541
    3. ' a' → logprob: -3.77285099029541
    4. 'c' → logprob: -4.27285099029541
    5. 'if' → logprob: -4.52285099029541
    6. 'temp' → logprob: -4.77285099029541
    7. 'tmp' → logprob: -4.89785099029541
    8. '   ' → logprob: -5.27285099029541
    9. 'term' → logprob: -5.27285099029541
    10. 'comb' → logprob: -5.64785099029541

Token 296: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6444122195243835
    2. ' +=' → logprob: -0.7694122195243835
    3. '=' → logprob: -4.644412040710449
    4. ' =' → logprob: -6.394412040710449
    5. ',' → logprob: -8.14441204071045
    6. '+=(' → logprob: -9.51941204071045
    7. ' ^=' → logprob: -10.51941204071045
    8. '+' → logprob: -10.76941204071045
    9. ' ,' → logprob: -11.51941204071045
    10. ' ' → logprob: -11.76941204071045

Token 297: ' sum' (ID: 4215)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009502872708253562
    2. ' (' → logprob: -7.750950336456299
    3. '(' → logprob: -7.875950336456299
    4. '   ' → logprob: -9.37594985961914
    5. '(c' → logprob: -11.12594985961914
    6. '(b' → logprob: -11.50094985961914
    7. ' ' → logprob: -12.00094985961914
    8. '((' → logprob: -12.50094985961914
    9. 'a' → logprob: -12.62594985961914
    10. '  ' → logprob: -12.87594985961914

Token 298: '([(' (ID: 156282)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7664257287979126
    2. '([' → logprob: -1.0164257287979126
    3. '((' → logprob: -2.141425609588623
    4. '(' → logprob: -3.266425609588623
    5. '([
' → logprob: -5.391425609588623
    6. '([(' → logprob: -5.391425609588623
    7. '(
' → logprob: -6.266425609588623
    8. 'a' → logprob: -6.391425609588623
    9. '[(' → logprob: -6.641425609588623
    10. '[' → logprob: -6.891425609588623

Token 299: 'a' (ID: 64)
  Prédit: 'cmb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmb' → logprob: -0.1489194929599762
    2. 'a' → logprob: -2.2739195823669434
    3. 'exp' → logprob: -4.398919582366943
    4. ' cmb' → logprob: -5.023919582366943
    5. '(a' → logprob: -5.523919582366943
    6. 'pow' → logprob: -5.773919582366943
    7. 'b' → logprob: -6.148919582366943
    8. 'prod' → logprob: -6.523919582366943
    9. '(' → logprob: -6.648919582366943
    10. '(i' → logprob: -7.273919582366943

Token 300: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5441740155220032
    2. '+' → logprob: -0.9191740155220032
    3. ' *' → logprob: -4.6691741943359375
    4. '*' → logprob: -5.1691741943359375
    5. ',' → logprob: -5.4191741943359375
    6. ' ,' → logprob: -7.7941741943359375
    7. ' ' → logprob: -9.169174194335938
    8. '%' → logprob: -9.419174194335938
    9. ')' → logprob: -9.419174194335938
    10. '+k' → logprob: -9.419174194335938

Token 301: ' cmb' (ID: 78973)
  Prédit: 'cmb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmb' → logprob: -0.5811664462089539
    2. ' cmb' → logprob: -0.9561664462089539
    3. 'b' → logprob: -4.5811662673950195
    4. 'exp' → logprob: -4.9561662673950195
    5. '(b' → logprob: -5.0811662673950195
    6. '(i' → logprob: -5.2061662673950195
    7. '(' → logprob: -5.5811662673950195
    8. 'pow' → logprob: -5.7061662673950195
    9. ' (' → logprob: -5.7061662673950195
    10. '((' → logprob: -6.0811662673950195

Token 302: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.017447074875235558
    2. '<|end|>' → logprob: -5.142446994781494
    3. 'n' → logprob: -5.267446994781494
    4. ')(' → logprob: -6.267446994781494
    5. '(' → logprob: -6.392446994781494
    6. ')' → logprob: -6.642446994781494
    7. ')n' → logprob: -7.517446994781494
    8. ' (' → logprob: -8.517447471618652
    9. '(i' → logprob: -8.767447471618652
    10. ',' → logprob: -8.892447471618652

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021708030253648758
    2. ',i' → logprob: -4.521708011627197
    3. ' ,' → logprob: -4.771708011627197
    4. ',n' → logprob: -6.771708011627197
    5. '<|end|>' → logprob: -8.271708488464355
    6. 'i' → logprob: -8.646708488464355
    7. ' i' → logprob: -9.271708488464355
    8. '   ' → logprob: -9.771708488464355
    9. '-' → logprob: -10.146708488464355
    10. ')' → logprob: -10.271708488464355

Token 304: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03311730921268463
    2. ' i' → logprob: -3.6581172943115234
    3. 'idx' → logprob: -5.783117294311523
    4. 'n' → logprob: -5.908117294311523
    5. ' idx' → logprob: -8.408117294311523
    6. ' n' → logprob: -9.033117294311523
    7. ' ' → logprob: -9.283117294311523
    8. '   ' → logprob: -9.283117294311523
    9. '
' → logprob: -9.408117294311523
    10. ')' → logprob: -9.533117294311523

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029017988592386246
    2. '+' → logprob: -4.904017925262451
    3. ' ,' → logprob: -5.154017925262451
    4. '-' → logprob: -5.279017925262451
    5. ' -' → logprob: -6.404017925262451
    6. ' +' → logprob: -6.404017925262451
    7. ')))' → logprob: -6.779017925262451
    8. ')' → logprob: -6.904017925262451
    9. '   ' → logprob: -7.029017925262451
    10. '+k' → logprob: -7.654017925262451

Token 306: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0003977800370194018
    2. ' mod' → logprob: -7.875397682189941
    3. '   ' → logprob: -12.750397682189941
    4. 'n' → logprob: -13.125397682189941
    5. 'exp' → logprob: -13.375397682189941
    6. ')' → logprob: -13.375397682189941
    7. '2' → logprob: -13.375397682189941
    8. '
' → logprob: -13.375397682189941
    9. '  ' → logprob: -13.750397682189941
    10. '```' → logprob: -14.125397682189941

Token 307: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3885229825973511
    2. ')))' → logprob: -1.763522982597351
    3. ',' → logprob: -2.2635231018066406
    4. '),' → logprob: -3.7635231018066406
    5. '))' → logprob: -4.388523101806641
    6. '+' → logprob: -5.888523101806641
    7. ')),' → logprob: -6.388523101806641
    8. ')*' → logprob: -6.513523101806641
    9. '))))' → logprob: -7.013523101806641
    10. '   ' → logprob: -7.263523101806641

Token 308: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9304173588752747
    2. ',' → logprob: -1.5554172992706299
    3. ' +' → logprob: -1.8054172992706299
    4. '+' → logprob: -2.18041729927063
    5. ')])' → logprob: -3.55541729927063
    6. ')))' → logprob: -3.68041729927063
    7. '))' → logprob: -3.80541729927063
    8. '<|end|>' → logprob: -4.805417537689209
    9. ' *' → logprob: -4.930417537689209
    10. ' ,' → logprob: -5.430417537689209

Token 309: ' b' (ID: 287)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.007817421108484268
    2. 'pow' → logprob: -6.257817268371582
    3. ' exp' → logprob: -6.257817268371582
    4. 'b' → logprob: -6.757817268371582
    5. 'cmb' → logprob: -6.757817268371582
    6. '(exp' → logprob: -7.507817268371582
    7. 'lst' → logprob: -8.132817268371582
    8. '(' → logprob: -8.632817268371582
    9. 'prod' → logprob: -9.132817268371582
    10. 'a' → logprob: -9.632817268371582

Token 310: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2648928463459015
    2. ' *' → logprob: -2.014892816543579
    3. '*' → logprob: -2.889892816543579
    4. ')%' → logprob: -3.764892816543579
    5. '%' → logprob: -5.014893054962158
    6. ' %' → logprob: -5.514893054962158
    7. ' )' → logprob: -5.764893054962158
    8. '))' → logprob: -5.889893054962158
    9. ',' → logprob: -7.139893054962158
    10. ')))' → logprob: -7.264893054962158

Token 311: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22049832344055176
    2. ' %' → logprob: -1.9704983234405518
    3. ')%' → logprob: -3.9704983234405518
    4. '%' → logprob: -4.095498085021973
    5. ' )' → logprob: -4.595498085021973
    6. ',' → logprob: -5.845498085021973
    7. ' *' → logprob: -6.095498085021973
    8. ' +' → logprob: -6.345498085021973
    9. ')])' → logprob: -6.720498085021973
    10. '])' → logprob: -7.095498085021973

Token 312: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.22553467750549316
    2. ' mod' → logprob: -1.6005346775054932
    3. '(mod' → logprob: -9.600534439086914
    4. '
' → logprob: -11.350534439086914
    5. ' ' → logprob: -11.350534439086914
    6. 'pow' → logprob: -11.725534439086914
    7. ' (' → logprob: -12.350534439086914
    8. 'exp' → logprob: -12.600534439086914
    9. ' 
' → logprob: -12.975534439086914
    10. ' ' → logprob: -13.350534439086914

Token 313: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856054544448853
    2. '])' → logprob: -1.6356054544448853
    3. ')])' → logprob: -1.8856054544448853
    4. ',' → logprob: -2.1356053352355957
    5. ' ])' → logprob: -2.2606053352355957
    6. '   ' → logprob: -2.6356053352355957
    7. ' )' → logprob: -3.3856053352355957
    8. ' for' → logprob: -3.7606053352355957
    9. ' +' → logprob: -4.385605335235596
    10. ')]' → logprob: -4.635605335235596

Token 314: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.46172297000885
    2. 'range' → logprob: -1.46172297000885
    3. ' j' → logprob: -1.58672297000885
    4. '_' → logprob: -2.0867228507995605
    5. 'j' → logprob: -2.0867228507995605
    6. ' _' → logprob: -4.5867228507995605
    7. 'i' → logprob: -4.8367228507995605
    8. 'x' → logprob: -5.0867228507995605
    9. '[' → logprob: -5.0867228507995605
    10. 'exp' → logprob: -5.2117228507995605

Token 315: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10507611930370331
    2. 'in' → logprob: -2.3550760746002197
    3. '_' → logprob: -5.855076313018799
    4. ' ' → logprob: -6.980076313018799
    5. ' _' → logprob: -8.35507583618164
    6. 'range' → logprob: -8.73007583618164
    7. ',' → logprob: -9.23007583618164
    8. '])' → logprob: -9.23007583618164
    9. ')' → logprob: -9.60507583618164
    10. 'a' → logprob: -9.73007583618164

Token 316: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05440709739923477
    2. ' range' → logprob: -3.0544071197509766
    3. '[' → logprob: -5.304407119750977
    4. 'lst' → logprob: -7.304407119750977
    5. 'list' → logprob: -10.804407119750977
    6. ' [' → logprob: -11.304407119750977
    7. ' lst' → logprob: -11.304407119750977
    8. '(' → logprob: -11.304407119750977
    9. 'n' → logprob: -11.429407119750977
    10. 'a' → logprob: -11.429407119750977

Token 317: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5031084418296814
    2. '(len' → logprob: -1.8781085014343262
    3. '(n' → logprob: -2.253108501434326
    4. '(i' → logprob: -2.628108501434326
    5. '(idx' → logprob: -3.378108501434326
    6. '1' → logprob: -4.128108501434326
    7. '2' → logprob: -5.628108501434326
    8. 'len' → logprob: -5.753108501434326
    9. '(a' → logprob: -6.003108501434326
    10. 'n' → logprob: -7.253108501434326

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14923684298992157
    2. 'idx' → logprob: -2.6492369174957275
    3. '2' → logprob: -4.149236679077148
    4. '0' → logprob: -4.274236679077148
    5. 'len' → logprob: -4.399236679077148
    6. 'n' → logprob: -5.024236679077148
    7. 'i' → logprob: -5.149236679077148
    8. '3' → logprob: -5.524236679077148
    9. 'a' → logprob: -6.399236679077148
    10. '10' → logprob: -6.774236679077148

Token 319: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0702885165810585
    2. ')]' → logprob: -2.8202884197235107
    3. ')' → logprob: -5.19528865814209
    4. ')],' → logprob: -6.19528865814209
    5. ' )' → logprob: -8.32028865814209
    6. ')])
' → logprob: -8.94528865814209
    7. '+' → logprob: -10.19528865814209
    8. ')][' → logprob: -10.32028865814209
    9. '(i' → logprob: -10.57028865814209
    10. ' ' → logprob: -10.57028865814209

Token 320: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.723352049040841e-06
    2. ' mod' → logprob: -12.875004768371582
    3. '998' → logprob: -13.125004768371582
    4. '(mod' → logprob: -16.375003814697266
    5. '```' → logprob: -17.250003814697266
    6. '
' → logprob: -17.750003814697266
    7. 'moder' → logprob: -18.625003814697266
    8. '	mod' → logprob: -19.000003814697266
    9. ' ' → logprob: -19.125003814697266
    10. '   ' → logprob: -19.750003814697266

Token 322: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49761369824409485
    2. '<|end|>' → logprob: -0.9976136684417725
    3. ']' → logprob: -5.622613906860352
    4. '[' → logprob: -5.622613906860352
    5. ':' → logprob: -5.997613906860352
    6. ' ' → logprob: -6.122613906860352
    7. '
' → logprob: -6.372613906860352
    8. '#' → logprob: -6.497613906860352
    9. ',' → logprob: -6.747613906860352
    10. 'a' → logprob: -6.997613906860352

Token 323: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24440039694309235
    2. '<|end|>' → logprob: -1.6194003820419312
    3. ':' → logprob: -5.119400501251221
    4. '[' → logprob: -5.744400501251221
    5. ']' → logprob: -5.994400501251221
    6. '#' → logprob: -6.744400501251221
    7. ' ' → logprob: -6.994400501251221
    8. ',' → logprob: -7.369400501251221
    9. '(' → logprob: -7.369400501251221
    10. '
' → logprob: -7.619400501251221

Token 324: ' b' (ID: 287)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025642416439950466
    2. ' =' → logprob: -6.752564430236816
    3. '*=' → logprob: -7.002564430236816
    4. ',' → logprob: -7.877564430236816
    5. ' *=' → logprob: -9.502564430236816
    6. '+=' → logprob: -10.627564430236816
    7. '%=' → logprob: -13.252564430236816
    8. ' +=' → logprob: -13.877564430236816
    9. ' ,' → logprob: -14.252564430236816
    10. '*' → logprob: -14.502564430236816

Token 326: ' prod' (ID: 10207)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.021047910675406456
    2. 'b' → logprob: -4.896048069000244
    3. ' (' → logprob: -5.146048069000244
    4. '(' → logprob: -6.021048069000244
    5. 'sum' → logprob: -6.396048069000244
    6. '(a' → logprob: -6.646048069000244
    7. '(sum' → logprob: -7.146048069000244
    8. 'exp' → logprob: -8.021047592163086
    9. '((' → logprob: -8.021047592163086
    10. '(c' → logprob: -8.771047592163086

Token 327: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.12769757211208344
    2. '(range' → logprob: -2.252697467803955
    3. '[' → logprob: -5.502697467803955
    4. '(c' → logprob: -5.752697467803955
    5. '[c' → logprob: -6.002697467803955
    6. '((' → logprob: -6.502697467803955
    7. '[(' → logprob: -7.002697467803955
    8. '(' → logprob: -7.252697467803955
    9. 'range' → logprob: -7.377697467803955
    10. '([(' → logprob: -7.627697467803955

Token 328: 'b' (ID: 65)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -1.4214375019073486
    2. '[c' → logprob: -1.4214375019073486
    3. '(c' → logprob: -1.7964375019073486
    4. '[' → logprob: -1.7964375019073486
    5. '(exp' → logprob: -2.4214375019073486
    6. 'exp' → logprob: -3.4214375019073486
    7. '[(' → logprob: -4.0464372634887695
    8. 'cmb' → logprob: -4.7964372634887695
    9. '(' → logprob: -5.0464372634887695
    10. '((' → logprob: -5.2964372634887695

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008524502627551556
    2. ' ,' → logprob: -5.758524417877197
    3. ',c' → logprob: -5.758524417877197
    4. ',b' → logprob: -7.383524417877197
    5. ',n' → logprob: -7.758524417877197
    6. ',
' → logprob: -8.008524894714355
    7. ',i' → logprob: -8.508524894714355
    8. '(' → logprob: -9.258524894714355
    9. '   ' → logprob: -9.383524894714355
    10. '(i' → logprob: -10.008524894714355

Token 330: ' ' (ID: 220)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.13913658261299133
    2. 'cmb' → logprob: -2.139136552810669
    3. ' cmb' → logprob: -5.764136791229248
    4. 'pow' → logprob: -6.139136791229248
    5. ' exp' → logprob: -6.139136791229248
    6. '2' → logprob: -6.639136791229248
    7. '(' → logprob: -7.264136791229248
    8. '(exp' → logprob: -7.264136791229248
    9. 'a' → logprob: -7.889136791229248
    10. 'i' → logprob: -8.26413631439209

Token 331: '2' (ID: 17)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.649890124797821
    2. 'cmb' → logprob: -0.774890124797821
    3. ' cmb' → logprob: -5.399889945983887
    4. 'pow' → logprob: -5.774889945983887
    5. '(' → logprob: -6.274889945983887
    6. '(exp' → logprob: -6.399889945983887
    7. '2' → logprob: -6.649889945983887
    8. 'i' → logprob: -7.024889945983887
    9. 'a' → logprob: -7.399889945983887
    10. ' exp' → logprob: -7.399889945983887

Token 332: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23943665623664856
    2. '])' → logprob: -1.6144366264343262
    3. ' ,' → logprob: -5.239436626434326
    4. '],' → logprob: -5.239436626434326
    5. ' ])' → logprob: -7.114436626434326
    6. '**' → logprob: -7.239436626434326
    7. ' %' → logprob: -7.364436626434326
    8. ' **' → logprob: -8.364437103271484
    9. ' ' → logprob: -8.739437103271484
    10. '   ' → logprob: -8.864437103271484

Token 333: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.023246990516781807
    2. ' mod' → logprob: -3.773247003555298
    3. '	mod' → logprob: -14.523246765136719
    4. ' ' → logprob: -15.023246765136719
    5. '998' → logprob: -15.398246765136719
    6. ' ' → logprob: -16.14824676513672
    7. '
' → logprob: -16.52324676513672
    8. '(mod' → logprob: -16.77324676513672
    9. 'moder' → logprob: -16.89824676513672
    10. '```' → logprob: -17.02324676513672

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004630816401913762
    2. ')
' → logprob: -7.750463008880615
    3. ' )' → logprob: -10.375463485717773
    4. ')

' → logprob: -14.875463485717773
    5. '   ' → logprob: -15.875463485717773
    6. '))' → logprob: -16.125463485717773
    7. ' )
' → logprob: -16.250463485717773
    8. ')
' → logprob: -16.375463485717773
    9. ' ' → logprob: -16.500463485717773
    10. ')`' → logprob: -17.000463485717773

Token 335: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.644585132598877
    2. '<|end|>' → logprob: -0.769585132598877
    3. ']' → logprob: -5.519585132598877
    4. '```' → logprob: -6.019585132598877
    5. '#' → logprob: -6.144585132598877
    6. '[' → logprob: -6.644585132598877
    7. '<|end|>' → logprob: -7.269585132598877
    8. '%' → logprob: -8.644584655761719
    9. ')]' → logprob: -8.644584655761719
    10. 'a' → logprob: -9.269584655761719

Token 336: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1303468644618988
    2. ' a' → logprob: -2.1303467750549316
    3. '(a' → logprob: -6.005346775054932
    4. ' (' → logprob: -7.130346775054932
    5. '(' → logprob: -9.50534725189209
    6. 'b' → logprob: -10.50534725189209
    7. '0' → logprob: -10.88034725189209
    8. ' b' → logprob: -11.75534725189209
    9. ' ' → logprob: -12.25534725189209
    10. '(b' → logprob: -13.25534725189209

Token 338: 'pow' (ID: 30304)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0035740535240620375
    2. 'cmb' → logprob: -6.503573894500732
    3. ' a' → logprob: -6.753573894500732
    4. '(a' → logprob: -8.00357437133789
    5. 'b' → logprob: -8.50357437133789
    6. ' cmb' → logprob: -9.00357437133789
    7. 'pow' → logprob: -9.62857437133789
    8. 'sum' → logprob: -10.12857437133789
    9. 'c' → logprob: -10.25357437133789
    10. 'g' → logprob: -10.75357437133789

Token 339: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013655527436640114
    2. '(a' → logprob: -9.375136375427246
    3. '(pow' → logprob: -11.375136375427246
    4. '2' → logprob: -11.875136375427246
    5. '(ans' → logprob: -12.000136375427246
    6. 'a' → logprob: -12.250136375427246
    7. '(b' → logprob: -12.250136375427246
    8. '(exp' → logprob: -12.500136375427246
    9. '(
' → logprob: -12.500136375427246
    10. '((' → logprob: -13.125136375427246

Token 340: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001016375608742237
    2. '3' → logprob: -8.126016616821289
    3. '(' → logprob: -8.376016616821289
    4. 'a' → logprob: -8.501016616821289
    5. '4' → logprob: -9.251016616821289
    6. 'b' → logprob: -9.626016616821289
    7. 'ans' → logprob: -10.501016616821289
    8. 'pow' → logprob: -11.001016616821289
    9. 'mod' → logprob: -11.001016616821289
    10. ' ' → logprob: -11.376016616821289

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021053753793239594
    2. ',n' → logprob: -4.271053791046143
    3. '(n' → logprob: -5.521053791046143
    4. ' ,' → logprob: -6.271053791046143
    5. 'n' → logprob: -7.021053791046143
    6. ' n' → logprob: -10.021053314208984
    7. '(' → logprob: -11.396053314208984
    8. ')' → logprob: -11.646053314208984
    9. '```' → logprob: -12.646053314208984
    10. ',
' → logprob: -12.896053314208984

Token 342: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009125363430939615
    2. ' n' → logprob: -7.000912666320801
    3. '2' → logprob: -14.8759126663208
    4. '(n' → logprob: -15.2509126663208
    5. ' ' → logprob: -16.000911712646484
    6. '
' → logprob: -16.250911712646484
    7. '	n' → logprob: -16.500911712646484
    8. '   ' → logprob: -16.625911712646484
    9. '```' → logprob: -17.000911712646484
    10. '  ' → logprob: -17.375911712646484

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01086577121168375
    2. ')' → logprob: -5.385865688323975
    3. '-' → logprob: -5.635865688323975
    4. ' ,' → logprob: -6.260865688323975
    5. ' -' → logprob: -7.260865688323975
    6. '```' → logprob: -11.510866165161133
    7. ',n' → logprob: -11.510866165161133
    8. ' )' → logprob: -11.760866165161133
    9. '),' → logprob: -12.510866165161133
    10. ' ' → logprob: -12.760866165161133

Token 344: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16022534668445587
    2. ' mod' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.660224914550781
    4. '998' → logprob: -15.660224914550781
    5. '	mod' → logprob: -15.910224914550781
    6. ')' → logprob: -16.03522491455078
    7. '(mod' → logprob: -16.53522491455078
    8. ' ' → logprob: -16.53522491455078
    9. '```' → logprob: -17.03522491455078
    10. '
' → logprob: -17.28522491455078

Token 345: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012820183765143156
    2. '-' → logprob: -7.626282215118408
    3. ',' → logprob: -7.876282215118408
    4. '))' → logprob: -8.50128173828125
    5. ' -' → logprob: -8.87628173828125
    6. ' )' → logprob: -10.37628173828125
    7. '),' → logprob: -11.37628173828125
    8. ')-' → logprob: -11.62628173828125
    9. ')
' → logprob: -12.12628173828125
    10. '```' → logprob: -13.00128173828125

Token 346: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0430297926068306
    2. '-' → logprob: -3.16802978515625
    3. ')' → logprob: -11.04302978515625
    4. ',' → logprob: -12.91802978515625
    5. '-b' → logprob: -13.04302978515625
    6. '+' → logprob: -13.29302978515625
    7. '-a' → logprob: -13.66802978515625
    8. ' +' → logprob: -13.66802978515625
    9. ' ' → logprob: -13.66802978515625
    10. '-an' → logprob: -14.04302978515625

Token 347: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00976482592523098
    2. ' a' → logprob: -4.634764671325684
    3. '(a' → logprob: -12.509764671325684
    4. 'b' → logprob: -12.884764671325684
    5. '(' → logprob: -14.134764671325684
    6. ' (' → logprob: -14.134764671325684
    7. ' b' → logprob: -14.884764671325684
    8. ' ' → logprob: -14.884764671325684
    9. '   ' → logprob: -15.384764671325684
    10. '
' → logprob: -16.259765625

Token 348: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00028624574770219624
    2. ' a' → logprob: -8.250286102294922
    3. 'b' → logprob: -11.250286102294922
    4. '(a' → logprob: -11.750286102294922
    5. '(' → logprob: -12.750286102294922
    6. 'ans' → logprob: -14.625286102294922
    7. '2' → logprob: -15.000286102294922
    8. ' (' → logprob: -15.250286102294922
    9. '1' → logprob: -16.500286102294922
    10. ' b' → logprob: -17.125286102294922

Token 349: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.46303510665893555
    2. '*a' → logprob: -1.5880351066589355
    3. '*' → logprob: -2.0880351066589355
    4. ' *' → logprob: -3.4630351066589355
    5. ' **' → logprob: -5.2130351066589355
    6. ')' → logprob: -6.0880351066589355
    7. '*b' → logprob: -6.2130351066589355
    8. '*n' → logprob: -7.3380351066589355
    9. 'a' → logprob: -8.838035583496094
    10. '*p' → logprob: -9.463035583496094

Token 350: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13048602640628815
    2. 'pow' → logprob: -2.505486011505127
    3. 'ans' → logprob: -3.630486011505127
    4. 'b' → logprob: -4.630486011505127
    5. 'exp' → logprob: -5.505486011505127
    6. '(' → logprob: -9.130486488342285
    7. 'prod' → logprob: -9.630486488342285
    8. 'sum' → logprob: -9.755486488342285
    9. '(a' → logprob: -9.755486488342285
    10. '(pow' → logprob: -10.755486488342285

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007517534773796797
    2. '%' → logprob: -5.632517337799072
    3. '*' → logprob: -6.007517337799072
    4. ')%' → logprob: -7.382517337799072
    5. '+' → logprob: -8.13251781463623
    6. ' )' → logprob: -8.88251781463623
    7. ' +' → logprob: -8.88251781463623
    8. ' *' → logprob: -9.00751781463623
    9. ' %' → logprob: -9.38251781463623
    10. ' -' → logprob: -10.63251781463623

Token 352: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06197037547826767
    2. '%' → logprob: -2.8119704723358154
    3. '
' → logprob: -14.061970710754395
    4. '%n' → logprob: -14.061970710754395
    5. ')' → logprob: -15.186970710754395
    6. '%b' → logprob: -15.811970710754395
    7. '```' → logprob: -15.936970710754395
    8. '%x' → logprob: -16.061969757080078
    9. ' ' → logprob: -16.311969757080078
    10. ' %
' → logprob: -16.436969757080078

Token 353: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0011703446507453918
    2. ' mod' → logprob: -6.7511701583862305
    3. '(mod' → logprob: -15.75117015838623
    4. '	mod' → logprob: -19.501171112060547
    5. ' ' → logprob: -21.001171112060547
    6. '```' → logprob: -21.251171112060547
    7. ' мод' → logprob: -22.501171112060547
    8. ' ' → logprob: -22.751171112060547
    9. '`' → logprob: -23.001171112060547
    10. 'modal' → logprob: -23.001171112060547

Token 354: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17338553071022034
    2. '<|end|>' → logprob: -2.1733856201171875
    3. 'print' → logprob: -3.4233856201171875
    4. '
' → logprob: -4.5483856201171875
    5. '#' → logprob: -7.2983856201171875
    6. '[' → logprob: -8.048385620117188
    7. ']' → logprob: -8.298385620117188
    8. 'a' → logprob: -9.048385620117188
    9. '```' → logprob: -9.298385620117188
    10. '%' → logprob: -9.673385620117188

Token 355: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000526938121765852
    2. ')' → logprob: -7.7505269050598145
    3. '<|end|>' → logprob: -9.500527381896973
    4. ' print' → logprob: -12.125527381896973
    5. 'ans' → logprob: -12.500527381896973
    6. '
' → logprob: -12.875527381896973
    7. '#' → logprob: -12.875527381896973
    8. '#print' → logprob: -13.250527381896973
    9. '```' → logprob: -13.500527381896973
    10. 'pr' → logprob: -14.500527381896973

Token 356: '((' (ID: 2054)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00034928982495330274
    2. 'ans' → logprob: -8.000349044799805
    3. '()' → logprob: -11.625349044799805
    4. '(' → logprob: -12.250349044799805
    5. '(answer' → logprob: -17.125349044799805
    6. '(a' → logprob: -17.375349044799805
    7. ' (' → logprob: -17.625349044799805
    8. '	ans' → logprob: -18.125349044799805
    9. ' ans' → logprob: -18.250349044799805
    10. '(
' → logprob: -18.750349044799805

Token 357: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.3676733690081164e-05
    2. ' ans' → logprob: -10.75002384185791
    3. '(ans' → logprob: -13.12502384185791
    4. '	ans' → logprob: -16.000022888183594
    5. 'answer' → logprob: -18.000022888183594
    6. '   ' → logprob: -18.750022888183594
    7. ')' → logprob: -19.000022888183594
    8. ' ' → logprob: -19.250022888183594
    9. '
' → logprob: -19.625022888183594
    10. '_ans' → logprob: -20.000022888183594

Token 358: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003248062450438738
    2. '))' → logprob: -5.75324821472168
    3. ' )' → logprob: -10.00324821472168
    4. ')))' → logprob: -11.75324821472168
    5. ')
' → logprob: -12.50324821472168
    6. ')%' → logprob: -12.75324821472168
    7. '})' → logprob: -13.12824821472168
    8. '+' → logprob: -13.37824821472168
    9. ')`' → logprob: -13.50324821472168
    10. '())' → logprob: -13.87824821472168

Token 359: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.005825940985232592
    2. ' mod' → logprob: -5.255825996398926
    3. '1' → logprob: -7.505825996398926
    4. ' ' → logprob: -11.005825996398926
    5. '(mod' → logprob: -11.005825996398926
    6. '2' → logprob: -13.130825996398926
    7. ')' → logprob: -13.130825996398926
    8. '	mod' → logprob: -13.630825996398926
    9. '   ' → logprob: -14.630825996398926
    10. '3' → logprob: -14.630825996398926

Token 360: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015126005746424198
    2. ')%' → logprob: -6.50151252746582
    3. ' )' → logprob: -11.50151252746582
    4. '))' → logprob: -16.62651252746582
    5. '%' → logprob: -17.37651252746582
    6. '   ' → logprob: -18.50151252746582
    7. '）' → logprob: -18.62651252746582
    8. ')#' → logprob: -19.12651252746582
    9. '```' → logprob: -19.50151252746582
    10. '%)' → logprob: -19.50151252746582

Token 361: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.079209104180336
    2. ')%' → logprob: -2.579209089279175
    3. '%' → logprob: -8.204209327697754
    4. ' )' → logprob: -10.079209327697754
    5. '%)' → logprob: -13.204209327697754
    6. ' %' → logprob: -14.454209327697754
    7. '```' → logprob: -14.704209327697754
    8. '))' → logprob: -15.204209327697754
    9. ')`' → logprob: -15.454209327697754
    10. '   ' → logprob: -15.954209327697754

Token 362: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.547789674485102e-05
    2. ' mod' → logprob: -10.250035285949707
    3. '(mod' → logprob: -16.750036239624023
    4. '	mod' → logprob: -19.125036239624023
    5. '```' → logprob: -20.875036239624023
    6. ' мод' → logprob: -21.750036239624023
    7. '_mod' → logprob: -22.125036239624023
    8. ' ' → logprob: -22.375036239624023
    9. '.mod' → logprob: -23.375036239624023
    10. '`' → logprob: -23.625036239624023

Token 363: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ' )' → logprob: -13.250005722045898
    3. ')`' → logprob: -13.625005722045898
    4. '))' → logprob: -13.750005722045898
    5. ')
' → logprob: -14.625005722045898
    6. '```' → logprob: -14.875005722045898
    7. '`)' → logprob: -15.125005722045898
    8. '')' → logprob: -16.7500057220459
    9. '})' → logprob: -16.7500057220459
    10. ')}' → logprob: -16.7500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 361
Tokens correctement prédits (1ère position, stricte): 142
Tokens correctement prédits (1ère position, avec adaptation): 144
Tokens correctement prédits (top 10): 289
Précision stricte (1ère position): 39.34%
Précision adaptée (1ère position): 39.89%
Précision (top 10): 80.06%
================================================================================
