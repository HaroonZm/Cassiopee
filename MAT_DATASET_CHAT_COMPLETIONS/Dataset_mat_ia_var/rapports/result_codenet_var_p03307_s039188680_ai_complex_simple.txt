================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())

print((lambda x: (lambda y: y if y%2==0 else y*2)(x))(N))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5316423177719116
    2. ')' → logprob: -0.9066423177719116
    3. '()' → logprob: -5.156642436981201
    4. '())' → logprob: -6.656642436981201
    5. '(
' → logprob: -7.656642436981201
    6. '```' → logprob: -8.781641960144043
    7. '))' → logprob: -8.906641960144043
    8. '")' → logprob: -9.406641960144043
    9. '')' → logprob: -9.531641960144043
    10. '(

' → logprob: -9.906641960144043

Token 5: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.706619381904602
    2. 'for' → logprob: -1.081619381904602
    3. 'i' → logprob: -2.2066192626953125
    4. 's' → logprob: -3.5816192626953125
    5. 'f' → logprob: -4.2066192626953125
    6. 'x' → logprob: -5.4566192626953125
    7. 'sum' → logprob: -6.2066192626953125
    8. 'total' → logprob: -6.7066192626953125
    9. 'result' → logprob: -6.8316192626953125
    10. 'factor' → logprob: -6.8316192626953125

Token 6: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005081149865873158
    2. '("("' → logprob: -8.125508308410645
    3. '('' → logprob: -8.500508308410645
    4. '("""' → logprob: -12.875508308410645
    5. '()' → logprob: -13.500508308410645
    6. '(
' → logprob: -14.000508308410645
    7. '((' → logprob: -14.500508308410645
    8. '(N' → logprob: -14.500508308410645
    9. '(f' → logprob: -14.750508308410645
    10. '(

' → logprob: -14.750508308410645

Token 7: 'lambda' (ID: 35280)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006077991332858801
    2. '2' → logprob: -6.131077766418457
    3. '(' → logprob: -6.881077766418457
    4. ''N' → logprob: -7.006077766418457
    5. ' N' → logprob: -7.131077766418457
    6. '3' → logprob: -8.881077766418457
    7. ''' → logprob: -9.006077766418457
    8. '1' → logprob: -9.006077766418457
    9. '"N' → logprob: -9.006077766418457
    10. 'n' → logprob: -9.131077766418457

Token 8: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.052493225783109665
    2. 'x' → logprob: -3.5524933338165283
    3. ' n' → logprob: -4.177493095397949
    4. ' N' → logprob: -5.677493095397949
    5. ' lambda' → logprob: -6.677493095397949
    6. 'N' → logprob: -7.427493095397949
    7. ' i' → logprob: -7.802493095397949
    8. ' a' → logprob: -8.05249309539795
    9. ' ' → logprob: -8.05249309539795
    10. 'n' → logprob: -8.55249309539795

Token 9: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0231670830398798
    2. ' :' → logprob: -4.023167133331299
    3. ' x' → logprob: -5.648167133331299
    4. 'x' → logprob: -6.898167133331299
    5. ':x' → logprob: -7.773167133331299
    6. ',' → logprob: -11.52316665649414
    7. ')' → logprob: -12.02316665649414
    8. '(x' → logprob: -12.39816665649414
    9. ':
' → logprob: -12.39816665649414
    10. ' ' → logprob: -12.64816665649414

Token 10: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5897831916809082
    2. 'x' → logprob: -0.8397831916809082
    3. ''' → logprob: -5.839783191680908
    4. ' (' → logprob: -5.964783191680908
    5. '(x' → logprob: -6.089783191680908
    6. ' ' → logprob: -6.714783191680908
    7. '(' → logprob: -7.214783191680908
    8. ' int' → logprob: -7.464783191680908
    9. 'int' → logprob: -7.589783191680908
    10. '"' → logprob: -7.839783191680908

Token 11: 'lambda' (ID: 35280)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012120728380978107
    2. ' x' → logprob: -5.512120723724365
    3. '1' → logprob: -5.762120723724365
    4. 'lambda' → logprob: -6.887120723724365
    5. '(x' → logprob: -7.137120723724365
    6. '2' → logprob: -7.262120723724365
    7. 'int' → logprob: -7.637120723724365
    8. 'sum' → logprob: -7.762120723724365
    9. '(' → logprob: -8.262121200561523
    10. '(lambda' → logprob: -8.637121200561523

Token 12: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20217210054397583
    2. 'y' → logprob: -2.202172040939331
    3. ' x' → logprob: -3.702172040939331
    4. ' n' → logprob: -3.827172040939331
    5. 'x' → logprob: -5.32717227935791
    6. ' lambda' → logprob: -5.45217227935791
    7. ' a' → logprob: -5.70217227935791
    8. 'n' → logprob: -5.95217227935791
    9. ' ' → logprob: -6.07717227935791
    10. 'a' → logprob: -6.07717227935791

Token 13: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09792805463075638
    2. ' :' → logprob: -2.722928047180176
    3. ' x' → logprob: -4.347928047180176
    4. ' y' → logprob: -4.722928047180176
    5. 'x' → logprob: -6.222928047180176
    6. ':x' → logprob: -6.222928047180176
    7. 'y' → logprob: -7.722928047180176
    8. ',' → logprob: -8.097928047180176
    9. ':y' → logprob: -8.097928047180176
    10. ' ' → logprob: -8.722928047180176

Token 14: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31189870834350586
    2. 'x' → logprob: -1.4368987083435059
    3. ' y' → logprob: -4.186898708343506
    4. ' (' → logprob: -5.186898708343506
    5. '(x' → logprob: -5.811898708343506
    6. 'y' → logprob: -6.061898708343506
    7. ' ' → logprob: -6.561898708343506
    8. ' str' → logprob: -7.811898708343506
    9. 'str' → logprob: -8.311899185180664
    10. '(' → logprob: -8.311899185180664

Token 15: ' if' (ID: 538)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.39641904830932617
    2. '(' → logprob: -2.021419048309326
    3. '**' → logprob: -3.146419048309326
    4. ' +' → logprob: -3.146419048309326
    5. '+' → logprob: -3.396419048309326
    6. ' *' → logprob: -3.771419048309326
    7. '*' → logprob: -4.271419048309326
    8. ' (' → logprob: -4.896419048309326
    9. ' x' → logprob: -5.271419048309326
    10. '*x' → logprob: -5.271419048309326

Token 16: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35686030983924866
    2. ' x' → logprob: -1.7318602800369263
    3. ' y' → logprob: -2.481860399246216
    4. 'y' → logprob: -3.231860399246216
    5. '(x' → logprob: -9.481860160827637
    6. ' (' → logprob: -12.356860160827637
    7. ' not' → logprob: -12.606860160827637
    8. ' ' → logprob: -12.606860160827637
    9. '0' → logprob: -12.981860160827637
    10. '(y' → logprob: -13.231860160827637

Token 17: '%' (ID: 4)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6136167645454407
    2. '>' → logprob: -1.363616704940796
    3. '>x' → logprob: -2.113616704940796
    4. ' else' → logprob: -3.613616704940796
    5. '==' → logprob: -4.613616943359375
    6. ' x' → logprob: -4.863616943359375
    7. '(x' → logprob: -4.863616943359375
    8. ' y' → logprob: -5.738616943359375
    9. 'else' → logprob: -5.738616943359375
    10. ' <' → logprob: -5.863616943359375

Token 18: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07104050368070602
    2. '2' → logprob: -2.821040391921997
    3. ' x' → logprob: -4.821040630340576
    4. ' ' → logprob: -7.321040630340576
    5. '1' → logprob: -8.446040153503418
    6. '3' → logprob: -9.946040153503418
    7. '(x' → logprob: -10.821040153503418
    8. '(' → logprob: -12.071040153503418
    9. '7' → logprob: -12.571040153503418
    10. '%x' → logprob: -12.946040153503418

Token 19: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1228625699877739
    2. ' ==' → logprob: -2.3728625774383545
    3. ' else' → logprob: -3.9978625774383545
    4. 'else' → logprob: -6.372862339019775
    5. ' ' → logprob: -6.997862339019775
    6. '0' → logprob: -7.122862339019775
    7. ' x' → logprob: -8.122862815856934
    8. '!=' → logprob: -8.997862815856934
    9. ' y' → logprob: -9.747862815856934
    10. 'y' → logprob: -9.997862815856934

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006384233478456736
    2. 'x' → logprob: -5.506384372711182
    3. ' ' → logprob: -6.131384372711182
    4. ' x' → logprob: -9.506383895874023
    5. '1' → logprob: -9.881383895874023
    6. '2' → logprob: -14.193883895874023
    7. '   ' → logprob: -14.256383895874023
    8. '```' → logprob: -14.631383895874023
    9. '    ' → logprob: -15.318883895874023
    10. '	x' → logprob: -15.443883895874023

Token 21: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.010007391683757305
    2. 'else' → logprob: -4.635007381439209
    3. ' ' → logprob: -8.385007858276367
    4. ' y' → logprob: -11.510007858276367
    5. 'x' → logprob: -12.760007858276367
    6. ' x' → logprob: -12.885007858276367
    7. ' or' → logprob: -13.135007858276367
    8. ' and' → logprob: -13.510007858276367
    9. '0' → logprob: -13.635007858276367
    10. 'y' → logprob: -14.510007858276367

Token 22: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3818572461605072
    2. 'x' → logprob: -1.7568572759628296
    3. ' y' → logprob: -2.00685715675354
    4. 'y' → logprob: -5.006857395172119
    5. ' ' → logprob: -6.131857395172119
    6. '(x' → logprob: -7.881857395172119
    7. ' (' → logprob: -8.131856918334961
    8. '1' → logprob: -8.381856918334961
    9. '0' → logprob: -8.506856918334961
    10. '  ' → logprob: -8.756856918334961

Token 23: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1101057305932045
    2. ' +' → logprob: -2.7351057529449463
    3. '+x' → logprob: -3.4851057529449463
    4. '*' → logprob: -5.610105514526367
    5. '*x' → logprob: -5.610105514526367
    6. ' *' → logprob: -8.235105514526367
    7. '+y' → logprob: -8.360105514526367
    8. ' x' → logprob: -8.485105514526367
    9. '(x' → logprob: -8.735105514526367
    10. ' ' → logprob: -9.110105514526367

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.32053765654563904
    2. '3' → logprob: -1.8205376863479614
    3. 'x' → logprob: -2.445537567138672
    4. ' ' → logprob: -4.070537567138672
    5. ' x' → logprob: -4.820537567138672
    6. 'y' → logprob: -8.820537567138672
    7. '(x' → logprob: -9.445537567138672
    8. ' y' → logprob: -9.445537567138672
    9. '1' → logprob: -10.320537567138672
    10. '(' → logprob: -10.320537567138672

Token 25: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.047720447182655334
    2. ' )(' → logprob: -3.672720432281494
    3. '(x' → logprob: -4.297720432281494
    4. ')' → logprob: -5.422720432281494
    5. ' )' → logprob: -6.547720432281494
    6. ')x' → logprob: -7.172720432281494
    7. ' (' → logprob: -8.297720909118652
    8. '(' → logprob: -8.672720909118652
    9. ')(
' → logprob: -8.672720909118652
    10. ')((' → logprob: -8.922720909118652

Token 26: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03807351365685463
    2. ' x' → logprob: -3.2880735397338867
    3. 'N' → logprob: -10.663073539733887
    4. '(x' → logprob: -12.788073539733887
    5. ' N' → logprob: -12.913073539733887
    6. ')x' → logprob: -13.663073539733887
    7. ' ' → logprob: -14.538073539733887
    8. 'int' → logprob: -14.788073539733887
    9. ')' → logprob: -15.538073539733887
    10. '   ' → logprob: -15.725573539733887

Token 27: '))(' (ID: 72297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40563151240348816
    2. '))' → logprob: -1.1556315422058105
    3. ')))' → logprob: -4.2806315422058105
    4. ')x' → logprob: -6.2806315422058105
    5. '))(' → logprob: -7.0306315422058105
    6. ' )' → logprob: -7.1556315422058105
    7. ')**' → logprob: -8.280631065368652
    8. ' ' → logprob: -8.405631065368652
    9. ' ))' → logprob: -8.530631065368652
    10. ')(' → logprob: -8.655631065368652

Token 28: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00018065694894175977
    2. ' N' → logprob: -8.6251802444458
    3. ')' → logprob: -14.8751802444458
    4. ' ' → logprob: -15.0001802444458
    5. 'x' → logprob: -16.000181198120117
    6. '   ' → logprob: -16.000181198120117
    7. '  ' → logprob: -16.750181198120117
    8. '`' → logprob: -17.000181198120117
    9. 'n' → logprob: -17.375181198120117
    10. '))' → logprob: -17.500181198120117

Token 29: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31328314542770386
    2. ')' → logprob: -1.3132832050323486
    3. ')))' → logprob: -10.93828296661377
    4. ')
' → logprob: -13.68828296661377
    5. ' )' → logprob: -14.43828296661377
    6. '))
' → logprob: -14.43828296661377
    7. ' ))' → logprob: -14.68828296661377
    8. ')}' → logprob: -15.06328296661377
    9. '),' → logprob: -16.063283920288086
    10. '+' → logprob: -16.188283920288086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 27
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 12
Tokens correctement prédits (top 10): 21
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 44.44%
Précision (top 10): 77.78%
================================================================================
