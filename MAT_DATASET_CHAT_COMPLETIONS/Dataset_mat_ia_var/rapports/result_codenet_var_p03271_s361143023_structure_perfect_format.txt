================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

N = int(readline())
P = [0] + list(map(int, read().split()))

intervals = []
left = 0
right = -1
for i, p in enumerate(P):
    if right < p:
        right = p
    if i == right:
        intervals.append((left, right))
        left = i + 1
        right = -1

def check(L, R):
    if L == R:
        return True
    to_left = []
    fixed = []
    to_right = []
    for i, p in enumerate(P[L:R+1], L):
        if i > p:
            to_left.append(p)
        elif i == p:
            fixed.append(p)
        else:
            to_right.append(p)
    if fixed != list(range(L + 1, R + 1, 2)):
        return False
    if any(x > y for x, y in zip(to_left, to_left[1:])):
        return False
    if any(x > y for x, y in zip(to_right, to_right[1:])):
        return False
    return True

answer = 'Yes' if all(check(L, R) for L, R in intervals) else 'No'
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009628107771277428
    2. '_' → logprob: -6.0096282958984375
    3. 'line' → logprob: -6.1346282958984375
    4. ' (' → logprob: -6.3846282958984375
    5. '.' → logprob: -6.6346282958984375
    6. ')' → logprob: -8.009628295898438
    7. '_line' → logprob: -8.134628295898438
    8. 'space' → logprob: -8.509628295898438
    9. 'er' → logprob: -8.634628295898438
    10. '(
' → logprob: -8.759628295898438

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2815498411655426
    2. 'sys' → logprob: -1.4065498113632202
    3. ' lambda' → logprob: -9.281549453735352
    4. '(sys' → logprob: -9.281549453735352
    5. ' open' → logprob: -9.906549453735352
    6. '=sys' → logprob: -9.906549453735352
    7. 'open' → logprob: -10.281549453735352
    8. 'lambda' → logprob: -10.406549453735352
    9. '	sys' → logprob: -10.906549453735352
    10. ' ' → logprob: -11.156549453735352

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.017033470794558525
    2. '.stdin' → logprob: -4.392033576965332
    3. '.readline' → logprob: -6.142033576965332
    4. '.stdout' → logprob: -7.017033576965332
    5. '.read' → logprob: -7.142033576965332
    6. ' .' → logprob: -8.392033576965332
    7. '.argv' → logprob: -8.642033576965332
    8. '.path' → logprob: -9.392033576965332
    9. '.import' → logprob: -9.642033576965332
    10. '.exit' → logprob: -10.392033576965332

Token 7: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1313103288412094
    2. '.read' → logprob: -2.256310224533081
    3. '.' → logprob: -4.00631046295166
    4. '.readlines' → logprob: -9.38131046295166
    5. 'read' → logprob: -10.75631046295166
    6. '.Read' → logprob: -12.13131046295166
    7. '.buffer' → logprob: -13.38131046295166
    8. ' .' → logprob: -13.63131046295166
    9. '.READ' → logprob: -14.25631046295166
    10. '.write' → logprob: -14.38131046295166

Token 8: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3877542018890381
    2. '.read' → logprob: -1.137754201889038
    3. '.' → logprob: -7.137754440307617
    4. 'read' → logprob: -9.637754440307617
    5. '.readlines' → logprob: -11.137754440307617
    6. '.write' → logprob: -13.012754440307617
    7. '.re' → logprob: -13.262754440307617
    8. ' readline' → logprob: -13.512754440307617
    9. ' .' → logprob: -14.012754440307617
    10. '```' → logprob: -14.512754440307617

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07182108610868454
    2. '()' → logprob: -2.6968209743499756
    3. '(
' → logprob: -6.321821212768555
    4. '()
' → logprob: -10.571821212768555
    5. '(

' → logprob: -10.571821212768555
    6. ' (' → logprob: -12.071821212768555
    7. '(\' → logprob: -12.571821212768555
    8. '().' → logprob: -12.821821212768555
    9. '```' → logprob: -12.821821212768555
    10. '(
' → logprob: -12.946821212768555

Token 10: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11648832261562347
    2. '(' → logprob: -2.241488218307495
    3. '(
' → logprob: -6.241488456726074
    4. '()
' → logprob: -7.616488456726074
    5. '_' → logprob: -8.116488456726074
    6. '\n' → logprob: -8.741488456726074
    7. ',' → logprob: -9.116488456726074
    8. ' ()' → logprob: -9.366488456726074
    9. '()

' → logprob: -9.491488456726074
    10. ')' → logprob: -9.616488456726074

Token 11: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2522525191307068
    2. '()' → logprob: -1.5022525787353516
    3. '(
' → logprob: -8.627252578735352
    4. '(

' → logprob: -10.252252578735352
    5. ' ()' → logprob: -10.752252578735352
    6. ' (' → logprob: -10.877252578735352
    7. ')' → logprob: -10.877252578735352
    8. '```' → logprob: -11.502252578735352
    9. '()
' → logprob: -12.002252578735352
    10. ' ' → logprob: -12.752252578735352

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06468457728624344
    2. '()' → logprob: -2.8146846294403076
    3. '=' → logprob: -6.1896843910217285
    4. ' =' → logprob: -8.689684867858887
    5. ' (' → logprob: -8.939684867858887
    6. ')' → logprob: -9.064684867858887
    7. '(
' → logprob: -9.689684867858887
    8. 's' → logprob: -9.814684867858887
    9. '```' → logprob: -10.314684867858887
    10. '_' → logprob: -10.689684867858887

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3132680654525757
    2. 'sys' → logprob: -1.3132680654525757
    3. '=sys' → logprob: -12.438267707824707
    4. '	sys' → logprob: -13.563267707824707
    5. '(sys' → logprob: -13.938267707824707
    6. ' ' → logprob: -16.563268661499023
    7. '_sys' → logprob: -16.563268661499023
    8. '/sys' → logprob: -16.813268661499023
    9. '.sys' → logprob: -17.313268661499023
    10. 's' → logprob: -17.813268661499023

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.6586179137229919
    2. '.readline' → logprob: -0.9086179137229919
    3. '.' → logprob: -2.6586179733276367
    4. '.stdout' → logprob: -4.783617973327637
    5. ' .' → logprob: -8.033617973327637
    6. '.argv' → logprob: -8.408617973327637
    7. '.read' → logprob: -9.408617973327637
    8. '.stderr' → logprob: -9.658617973327637
    9. '.readlines' → logprob: -10.158617973327637
    10. '.input' → logprob: -10.658617973327637

Token 15: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.016139941290020943
    2. '.buffer' → logprob: -4.141139984130859
    3. '.' → logprob: -9.39113998413086
    4. '.read' → logprob: -11.64113998413086
    5. 'buffer' → logprob: -12.26613998413086
    6. '.readlines' → logprob: -12.89113998413086
    7. '.stdin' → logprob: -13.01613998413086
    8. '.write' → logprob: -14.14113998413086
    9. ' .' → logprob: -14.39113998413086
    10. '.Buffer' → logprob: -15.14113998413086

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00016599490481894463
    2. 'read' → logprob: -9.125165939331055
    3. ' readline' → logprob: -10.000165939331055
    4. '.read' → logprob: -11.500165939331055
    5. '.readlines' → logprob: -14.125165939331055
    6. 'line' → logprob: -14.750165939331055
    7. '_read' → logprob: -16.000165939331055
    8. '.' → logprob: -16.375165939331055
    9. 'getline' → logprob: -16.750165939331055
    10. '```' → logprob: -18.625165939331055

Token 17: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20993803441524506
    2. '()' → logprob: -2.2099380493164062
    3. '
' → logprob: -3.3349380493164062
    4. 'data' → logprob: -4.709938049316406
    5. '(
' → logprob: -4.834938049316406
    6. '\n' → logprob: -4.834938049316406
    7. 'def' → logprob: -5.084938049316406
    8. '#' → logprob: -6.459938049316406
    9. 'import' → logprob: -6.959938049316406
    10. '_' → logprob: -6.959938049316406

Token 18: 'read' (ID: 1293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10792500525712967
    2. '\n' → logprob: -3.7329249382019043
    3. '()' → logprob: -3.8579249382019043
    4. '(
' → logprob: -4.357924938201904
    5. '
' → logprob: -4.857924938201904
    6. 'data' → logprob: -5.107924938201904
    7. '_' → logprob: -5.232924938201904
    8. '\' → logprob: -5.607924938201904
    9. 'import' → logprob: -5.607924938201904
    10. 'def' → logprob: -5.607924938201904

Token 19: 'lines' (ID: 10105)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012976809404790401
    2. '()' → logprob: -4.38797664642334
    3. '(
' → logprob: -8.26297664642334
    4. '(

' → logprob: -9.88797664642334
    5. ')' → logprob: -10.26297664642334
    6. ' (' → logprob: -10.88797664642334
    7. '(\' → logprob: -10.88797664642334
    8. '40' → logprob: -11.13797664642334
    9. '```' → logprob: -11.26297664642334
    10. '.' → logprob: -11.26297664642334

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19300614297389984
    2. ' =' → logprob: -2.1930060386657715
    3. '()' → logprob: -2.9430060386657715
    4. '(' → logprob: -4.9430060386657715
    5. ')' → logprob: -6.3180060386657715
    6. '.' → logprob: -6.8180060386657715
    7. '```' → logprob: -8.19300651550293
    8. ' ' → logprob: -8.94300651550293
    9. '[:]' → logprob: -9.19300651550293
    10. '\' → logprob: -9.44300651550293

Token 21: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.17976056039333344
    2. 'sys' → logprob: -1.8047605752944946
    3. '=sys' → logprob: -12.054760932922363
    4. '(sys' → logprob: -12.554760932922363
    5. '	sys' → logprob: -12.929760932922363
    6. 'read' → logprob: -13.429760932922363
    7. 's' → logprob: -13.554760932922363
    8. '.sys' → logprob: -15.054760932922363
    9. '/sys' → logprob: -15.054760932922363
    10. ' read' → logprob: -15.679760932922363

Token 22: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.012364253401756287
    2. '.' → logprob: -5.137364387512207
    3. '.stdout' → logprob: -5.387364387512207
    4. '.readline' → logprob: -7.137364387512207
    5. '.stderr' → logprob: -8.387364387512207
    6. '.argv' → logprob: -8.387364387512207
    7. ' .' → logprob: -8.512364387512207
    8. '.readlines' → logprob: -8.887364387512207
    9. 'stdin' → logprob: -9.637364387512207
    10. '​.' → logprob: -9.762364387512207

Token 23: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.1262386441230774
    2. '.readline' → logprob: -2.3762385845184326
    3. '.readlines' → logprob: -4.251238822937012
    4. '.' → logprob: -4.751238822937012
    5. 'buffer' → logprob: -6.376238822937012
    6. '.read' → logprob: -7.501238822937012
    7. ' .' → logprob: -8.626238822937012
    8. '.stdin' → logprob: -9.376238822937012
    9. '.Buffer' → logprob: -9.751238822937012
    10. '.lines' → logprob: -10.251238822937012

Token 24: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.5803262591362
    2. '.readline' → logprob: -1.0803263187408447
    3. 'read' → logprob: -2.4553263187408447
    4. '.read' → logprob: -4.205326080322266
    5. ' readline' → logprob: -10.955326080322266
    6. 'lines' → logprob: -11.455326080322266
    7. '.' → logprob: -11.455326080322266
    8. '```' → logprob: -12.830326080322266
    9. '_read' → logprob: -13.330326080322266
    10. 're' → logprob: -13.580326080322266

Token 25: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3822898864746094
    2. 'def' → logprob: -2.0072898864746094
    3. '#' → logprob: -2.5072898864746094
    4. '\n' → logprob: -3.2572898864746094
    5. '' → logprob: -4.132289886474609
    6. '```' → logprob: -4.382289886474609
    7. '

' → logprob: -4.507289886474609
    8. 'import' → logprob: -4.882289886474609
    9. '\' → logprob: -5.257289886474609
    10. '<|end|>' → logprob: -5.632289886474609

Token 26: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08844977617263794
    2. 'data' → logprob: -3.213449716567993
    3. '#' → logprob: -4.088449954986572
    4. 'd' → logprob: -5.213449954986572
    5. '\n' → logprob: -5.838449954986572
    6. '\' → logprob: -6.088449954986572
    7. '
' → logprob: -6.088449954986572
    8. 'class' → logprob: -6.213449954986572
    9. '(' → logprob: -6.213449954986572
    10. 'n' → logprob: -6.463449954986572

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19051291048526764
    2. '=' → logprob: -1.8155128955841064
    3. '.' → logprob: -5.0655131340026855
    4. ' ' → logprob: -5.6905131340026855
    5. ',' → logprob: -7.4405131340026855
    6. ')' → logprob: -8.940512657165527
    7. '_' → logprob: -9.565512657165527
    8. '[' → logprob: -9.940512657165527
    9. 's' → logprob: -10.565512657165527
    10. '  ' → logprob: -10.690512657165527

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04034082219004631
    2. 'int' → logprob: -3.4153409004211426
    3. ' ' → logprob: -5.165340900421143
    4. '10' → logprob: -7.665340900421143
    5. ' read' → logprob: -8.790340423583984
    6. '32' → logprob: -9.290340423583984
    7. '20' → logprob: -10.040340423583984
    8. '0' → logprob: -10.415340423583984
    9. '5' → logprob: -10.415340423583984
    10. '100' → logprob: -10.665340423583984

Token 29: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693182110786438
    2. '(read' → logprob: -0.693182110786438
    3. '('' → logprob: -11.693181991577148
    4. 'read' → logprob: -12.068181991577148
    5. '(sys' → logprob: -12.318181991577148
    6. '(
' → logprob: -12.568181991577148
    7. '(Read' → logprob: -12.568181991577148
    8. ' (' → logprob: -13.193181991577148
    9. '(

' → logprob: -14.193181991577148
    10. '(open' → logprob: -14.318181991577148

Token 30: 'line' (ID: 1137)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06431776285171509
    2. '()' → logprob: -2.8143177032470703
    3. '(' → logprob: -6.18931770324707
    4. '().' → logprob: -8.93931770324707
    5. ')' → logprob: -9.81431770324707
    6. ' ())' → logprob: -9.93931770324707
    7. '()[' → logprob: -10.31431770324707
    8. '();)' → logprob: -11.93931770324707
    9. ' ()' → logprob: -12.43931770324707
    10. '()]' → logprob: -12.56431770324707

Token 31: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018307851627469063
    2. '()' → logprob: -4.018307685852051
    3. '().' → logprob: -9.64330768585205
    4. '(' → logprob: -10.01830768585205
    5. ' ())' → logprob: -10.51830768585205
    6. '())
' → logprob: -11.51830768585205
    7. '();)' → logprob: -13.14330768585205
    8. '()
' → logprob: -13.51830768585205
    9. '()[' → logprob: -13.64330768585205
    10. '()]' → logprob: -13.64330768585205

Token 32: 'P' (ID: 47)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.23985400795936584
    2. ' ' → logprob: -2.114854097366333
    3. 'a' → logprob: -3.614854097366333
    4. ' data' → logprob: -3.739854097366333
    5. 'd' → logprob: -4.614853858947754
    6. 'for' → logprob: -5.114853858947754
    7. ' 
' → logprob: -5.239853858947754
    8. ')' → logprob: -5.864853858947754
    9. 's' → logprob: -6.364853858947754
    10. ' for' → logprob: -6.614853858947754

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39442792534828186
    2. '=' → logprob: -1.1444278955459595
    3. '=[]' → logprob: -7.14442777633667
    4. '[' → logprob: -7.39442777633667
    5. 's' → logprob: -7.39442777633667
    6. 'L' → logprob: -7.76942777633667
    7. '_' → logprob: -7.89442777633667
    8. 'ieces' → logprob: -7.89442777633667
    9. '[:]' → logprob: -7.89442777633667
    10. 'er' → logprob: -8.144428253173828

Token 34: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5650603175163269
    2. 'list' → logprob: -0.9400603175163269
    3. ' [' → logprob: -4.065060138702393
    4. ' []' → logprob: -5.065060138702393
    5. '[' → logprob: -5.440060138702393
    6. '[]' → logprob: -5.565060138702393
    7. '[int' → logprob: -5.565060138702393
    8. 'read' → logprob: -6.565060138702393
    9. '[list' → logprob: -6.940060138702393
    10. ' read' → logprob: -7.190060138702393

Token 35: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013687869533896446
    2. '(int' → logprob: -5.013688087463379
    3. ']int' → logprob: -5.763688087463379
    4. '*' → logprob: -6.763688087463379
    5. ']' → logprob: -6.888688087463379
    6. '0' → logprob: -7.388688087463379
    7. 'tuple' → logprob: -7.763688087463379
    8. '()]' → logprob: -8.638688087463379
    9. '()' → logprob: -9.138688087463379
    10. '[int' → logprob: -9.388688087463379

Token 36: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08696425706148148
    2. '()]' → logprob: -2.5869643688201904
    3. ']*' → logprob: -5.211964130401611
    4. ']*(' → logprob: -6.836964130401611
    5. ' ]' → logprob: -7.711964130401611
    6. '(' → logprob: -7.961964130401611
    7. '()' → logprob: -7.961964130401611
    8. ' for' → logprob: -8.96196460723877
    9. ',' → logprob: -9.71196460723877
    10. ')]' → logprob: -10.21196460723877

Token 37: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6475167870521545
    2. '+' → logprob: -0.7725167870521545
    3. ' +' → logprob: -5.02251672744751
    4. ' *' → logprob: -5.27251672744751
    5. ',' → logprob: -7.02251672744751
    6. '*(' → logprob: -7.27251672744751
    7. '0' → logprob: -8.022517204284668
    8. '[' → logprob: -8.272517204284668
    9. '+[' → logprob: -8.272517204284668
    10. 'for' → logprob: -8.897517204284668

Token 38: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0009227732080034912
    2. ' list' → logprob: -7.750922679901123
    3. '[list' → logprob: -8.125923156738281
    4. '[' → logprob: -8.625923156738281
    5. '[*' → logprob: -12.375923156738281
    6. 'read' → logprob: -12.625923156738281
    7. '[-' → logprob: -12.875923156738281
    8. ' [' → logprob: -13.375923156738281
    9. '[int' → logprob: -13.750923156738281
    10. '[]' → logprob: -14.125923156738281

Token 39: '(map' (ID: 16946)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.2743936777114868
    2. '(map' → logprob: -1.5243936777114868
    3. '(' → logprob: -3.8993935585021973
    4. '(int' → logprob: -6.274393558502197
    5. 'read' → logprob: -11.274394035339355
    6. '(range' → logprob: -11.399394035339355
    7. 'map' → logprob: -11.399394035339355
    8. '(re' → logprob: -11.649394035339355
    9. '(
' → logprob: -11.899394035339355
    10. '()' → logprob: -12.024394035339355

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002238013403257355
    2. '(' → logprob: -8.750224113464355
    3. '(lambda' → logprob: -10.250224113464355
    4. 'int' → logprob: -10.625224113464355
    5. '<int' → logprob: -13.000224113464355
    6. '[int' → logprob: -13.375224113464355
    7. ',int' → logprob: -14.000224113464355
    8. ']int' → logprob: -15.375224113464355
    9. '(
' → logprob: -15.500224113464355
    10. '(ord' → logprob: -15.625224113464355

Token 41: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.0001499060745118186
    2. '(' → logprob: -8.875149726867676
    3. 'read' → logprob: -12.125149726867676
    4. ',' → logprob: -13.250149726867676
    5. ' (' → logprob: -13.875149726867676
    6. ' readline' → logprob: -15.250149726867676
    7. ' read' → logprob: -15.500149726867676
    8. '(input' → logprob: -15.625149726867676
    9. '(
' → logprob: -15.750149726867676
    10. '(reader' → logprob: -15.875149726867676

Token 42: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.010037257336080074
    2. ' readline' → logprob: -5.260037422180176
    3. ' read' → logprob: -5.385037422180176
    4. '(read' → logprob: -8.510037422180176
    5. '	read' → logprob: -13.135037422180176
    6. ' ' → logprob: -13.510037422180176
    7. ')' → logprob: -14.260037422180176
    8. '.readline' → logprob: -14.385037422180176
    9. '.read' → logprob: -15.510037422180176
    10. '   ' → logprob: -15.510037422180176

Token 43: '().' (ID: 1454)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015271214069798589
    2. 'lines' → logprob: -7.751527309417725
    3. '.readline' → logprob: -7.876527309417725
    4. '(read' → logprob: -8.126526832580566
    5. '().' → logprob: -8.501526832580566
    6. 'read' → logprob: -9.001526832580566
    7. '(line' → logprob: -10.126526832580566
    8. '.read' → logprob: -10.501526832580566
    9. ')' → logprob: -11.251526832580566
    10. ' readline' → logprob: -13.626526832580566

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00024215869780164212
    2. 'decode' → logprob: -9.125242233276367
    3. 'rstrip' → logprob: -9.125242233276367
    4. 'strip' → logprob: -11.000242233276367
    5. 'read' → logprob: -12.625242233276367
    6. '(split' → logprob: -12.875242233276367
    7. ' split' → logprob: -14.125242233276367
    8. 'spl' → logprob: -14.875242233276367
    9. '```' → logprob: -15.375242233276367
    10. 'rs' → logprob: -16.625242233276367

Token 45: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3588007092475891
    2. '()))' → logprob: -1.3588006496429443
    3. ')' → logprob: -3.7338006496429443
    4. '())' → logprob: -4.233800888061523
    5. '()' → logprob: -5.608800888061523
    6. '(' → logprob: -6.108800888061523
    7. '(),' → logprob: -9.983800888061523
    8. ')))' → logprob: -10.108800888061523
    9. ' ))' → logprob: -10.733800888061523
    10. ''))' → logprob: -11.233800888061523

Token 46: 'interval' (ID: 37558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7013463377952576
    2. '(' → logprob: -1.0763463973999023
    3. '
' → logprob: -2.4513463973999023
    4. '(N' → logprob: -3.9513463973999023
    5. '\n' → logprob: -3.9513463973999023
    6. '0' → logprob: -5.326346397399902
    7. ' ' → logprob: -5.326346397399902
    8. 'for' → logprob: -5.826346397399902
    9. '()' → logprob: -5.951346397399902
    10. '#' → logprob: -6.201346397399902

Token 47: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013125285506248474
    2. '_s' → logprob: -4.638125419616699
    3. '_' → logprob: -6.013125419616699
    4. '(' → logprob: -7.263125419616699
    5. ' =' → logprob: -9.0131254196167
    6. '=' → logprob: -10.8881254196167
    7. '_size' → logprob: -11.1381254196167
    8. '()' → logprob: -11.6381254196167
    9. '_list' → logprob: -12.1381254196167
    10. '[' → logprob: -12.2631254196167

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19323863089084625
    2. '=' → logprob: -1.943238615989685
    3. '(' → logprob: -3.9432387351989746
    4. '_' → logprob: -5.068238735198975
    5. '[' → logprob: -5.693238735198975
    6. 's' → logprob: -6.068238735198975
    7. '<|end|>' → logprob: -8.318238258361816
    8. '[]' → logprob: -8.568238258361816
    9. '=[]' → logprob: -8.693238258361816
    10. ')' → logprob: -8.818238258361816

Token 49: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.008042252622544765
    2. '[' → logprob: -5.508042335510254
    3. ' []' → logprob: -5.633042335510254
    4. '[(' → logprob: -8.008042335510254
    5. '[]}' → logprob: -11.008042335510254
    6. '[][]' → logprob: -11.883042335510254
    7. '[]
' → logprob: -12.133042335510254
    8. '()' → logprob: -12.633042335510254
    9. ' [' → logprob: -13.008042335510254
    10. '[],' → logprob: -13.383042335510254

Token 50: 'left' (ID: 4530)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007689678110182285
    2. ' for' → logprob: -5.007689476013184
    3. '\n' → logprob: -7.507689476013184
    4. 'range' → logprob: -9.007689476013184
    5. '\' → logprob: -9.757689476013184
    6. 'current' → logprob: -9.882689476013184
    7. '<|end|>' → logprob: -10.382689476013184
    8. '(' → logprob: -10.882689476013184
    9. '```' → logprob: -11.007689476013184
    10. '[' → logprob: -11.257689476013184

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07920029759407043
    2. ' =' → logprob: -2.704200267791748
    3. ',' → logprob: -4.704200267791748
    4. '_' → logprob: -9.204200744628906
    5. ')' → logprob: -11.329200744628906
    6. '=[]' → logprob: -11.454200744628906
    7. '_=' → logprob: -11.704200744628906
    8. '_idx' → logprob: -11.954200744628906
    9. 's' → logprob: -12.079200744628906
    10. '[' → logprob: -12.204200744628906

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06403849273920059
    2. '1' → logprob: -2.8140385150909424
    3. '[]' → logprob: -7.189038276672363
    4. ' ' → logprob: -7.314038276672363
    5. '[' → logprob: -8.064038276672363
    6. '-' → logprob: -9.314038276672363
    7. 'None' → logprob: -9.564038276672363
    8. 'P' → logprob: -9.814038276672363
    9. 'N' → logprob: -10.314038276672363
    10. '2' → logprob: -10.689038276672363

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22994214296340942
    2. '1' → logprob: -1.6049420833587646
    3. '-' → logprob: -6.479942321777344
    4. '[' → logprob: -7.229942321777344
    5. 'P' → logprob: -7.479942321777344
    6. '2' → logprob: -7.729942321777344
    7. '[]' → logprob: -7.729942321777344
    8. ' ' → logprob: -7.854942321777344
    9. 'N' → logprob: -8.729942321777344
    10. 'None' → logprob: -9.604942321777344

Token 54: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9376201629638672
    2. '
' → logprob: -1.1876201629638672
    3. 'for' → logprob: -2.687620162963867
    4. 'right' → logprob: -2.687620162963867
    5. ' for' → logprob: -2.687620162963867
    6. '<|end|>' → logprob: -3.187620162963867
    7. ' 
' → logprob: -3.437620162963867
    8. ' right' → logprob: -4.187620162963867
    9. '+' → logprob: -6.062620162963867
    10. '\n' → logprob: -6.812620162963867

Token 55: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6815446615219116
    2. 'for' → logprob: -0.9315446615219116
    3. ' for' → logprob: -2.556544780731201
    4. ' right' → logprob: -4.056544780731201
    5. '
' → logprob: -6.556544780731201
    6. '<|end|>' → logprob: -6.556544780731201
    7. '+' → logprob: -7.181544780731201
    8. 'while' → logprob: -8.056544303894043
    9. 'max' → logprob: -8.681544303894043
    10. ' ' → logprob: -8.681544303894043

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128462627530098
    2. '=' → logprob: -2.2378463745117188
    3. '<|end|>' → logprob: -11.487846374511719
    4. ' ' → logprob: -12.237846374511719
    5. '+' → logprob: -12.487846374511719
    6. ' =
' → logprob: -14.112846374511719
    7. ',' → logprob: -14.237846374511719
    8. ' +=' → logprob: -14.487846374511719
    9. '0' → logprob: -14.487846374511719
    10. ')' → logprob: -14.737846374511719

Token 57: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09027358144521713
    2. '1' → logprob: -3.34027361869812
    3. 'N' → logprob: -3.59027361869812
    4. ' ' → logprob: -3.96527361869812
    5. ' N' → logprob: -5.590273380279541
    6. 'len' → logprob: -7.715273380279541
    7. ' len' → logprob: -9.7152738571167
    8. '10' → logprob: -10.0902738571167
    9. '100' → logprob: -11.5902738571167
    10. '-' → logprob: -11.8402738571167

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. '2' → logprob: -10.875031471252441
    3. ' ' → logprob: -11.500031471252441
    4. '0' → logprob: -13.750031471252441
    5. '-' → logprob: -15.375031471252441
    6. '   ' → logprob: -15.562531471252441
    7. '```' → logprob: -15.812531471252441
    8. '3' → logprob: -16.375032424926758
    9. '10' → logprob: -16.375032424926758
    10. '`' → logprob: -16.500032424926758

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7643663883209229
    2. '<|end|>' → logprob: -0.7643663883209229
    3. 'for' → logprob: -3.139366388320923
    4. ' ' → logprob: -4.514366149902344
    5. ' for' → logprob: -5.014366149902344
    6. ' 
' → logprob: -5.764366149902344
    7. 'while' → logprob: -6.264366149902344
    8. '<|end|>' → logprob: -7.264366149902344
    9. '\n' → logprob: -7.514366149902344
    10. ')' → logprob: -7.764366149902344

Token 60: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7128675580024719
    2. '<|end|>' → logprob: -1.3378674983978271
    3. '
' → logprob: -1.9628674983978271
    4. ' for' → logprob: -2.712867498397827
    5. 'while' → logprob: -4.462867736816406
    6. ' ' → logprob: -5.087867736816406
    7. ')' → logprob: -5.212867736816406
    8. '\n' → logprob: -5.712867736816406
    9. ' while' → logprob: -5.962867736816406
    10. 'max' → logprob: -5.962867736816406

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014635046944022179
    2. 'i' → logprob: -5.13963508605957
    3. ' p' → logprob: -6.13963508605957
    4. ' _' → logprob: -6.26463508605957
    5. ' P' → logprob: -6.26463508605957
    6. ' ' → logprob: -6.88963508605957
    7. '_' → logprob: -7.26463508605957
    8. ' x' → logprob: -7.63963508605957
    9. 'P' → logprob: -9.63963508605957
    10. ' in' → logprob: -10.13963508605957

Token 62: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04328474402427673
    2. 'in' → logprob: -3.1682846546173096
    3. ' ' → logprob: -8.41828441619873
    4. ',' → logprob: -10.29328441619873
    5. 'range' → logprob: -11.54328441619873
    6. '	in' → logprob: -12.16828441619873
    7. ' ,' → logprob: -12.91828441619873
    8. ' range' → logprob: -13.04328441619873
    9. 'n' → logprob: -13.29328441619873
    10. '  ' → logprob: -13.54328441619873

Token 63: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04935073480010033
    2. 'x' → logprob: -3.7993507385253906
    3. 'v' → logprob: -4.174350738525391
    4. ' p' → logprob: -5.299350738525391
    5. 'a' → logprob: -6.049350738525391
    6. 'val' → logprob: -7.049350738525391
    7. 'value' → logprob: -7.924350738525391
    8. 'pi' → logprob: -7.924350738525391
    9. 'c' → logprob: -8.54935073852539
    10. 'd' → logprob: -8.54935073852539

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07898639142513275
    2. 'in' → logprob: -2.578986406326294
    3. 'n' → logprob: -9.453986167907715
    4. ',' → logprob: -12.453986167907715
    5. 'p' → logprob: -13.078986167907715
    6. ' ' → logprob: -13.078986167907715
    7. '_in' → logprob: -13.203986167907715
    8. ')' → logprob: -13.578986167907715
    9. 'i' → logprob: -14.203986167907715
    10. 's' → logprob: -14.328986167907715

Token 65: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.20142501592636108
    2. ' enumerate' → logprob: -1.7014250755310059
    3. '(en' → logprob: -12.076424598693848
    4. 'enum' → logprob: -13.326424598693848
    5. 'en' → logprob: -13.326424598693848
    6. 'range' → logprob: -13.701424598693848
    7. '```' → logprob: -15.201424598693848
    8. 'P' → logprob: -15.576424598693848
    9. 'Enumer' → logprob: -15.826424598693848
    10. '(' → logprob: -15.951424598693848

Token 66: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.002146812155842781
    2. 'P' → logprob: -6.6271467208862305
    3. '(range' → logprob: -8.25214672088623
    4. '(en' → logprob: -8.50214672088623
    5. 'enumer' → logprob: -8.75214672088623
    6. '(' → logprob: -9.00214672088623
    7. '((' → logprob: -10.75214672088623
    8. 'range' → logprob: -10.75214672088623
    9. '(p' → logprob: -10.75214672088623
    10. ' P' → logprob: -13.00214672088623

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3141382038593292
    2. '[' → logprob: -1.3141381740570068
    3. ':' → logprob: -7.314138412475586
    4. ' ):' → logprob: -9.689138412475586
    5. '):
' → logprob: -9.814138412475586
    6. ',' → logprob: -10.564138412475586
    7. '[:' → logprob: -10.814138412475586
    8. ')' → logprob: -10.939138412475586
    9. '[]):' → logprob: -12.189138412475586
    10. ' ' → logprob: -12.314138412475586

Token 68: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4005526006221771
    2. '   ' → logprob: -1.9005526304244995
    3. '<|end|>' → logprob: -2.27555251121521
    4. ' if' → logprob: -3.27555251121521
    5. ' 
' → logprob: -4.150552749633789
    6. '  ' → logprob: -5.400552749633789
    7. ':' → logprob: -5.525552749633789
    8. '    ' → logprob: -5.900552749633789
    9. ')' → logprob: -6.025552749633789
    10. '    
' → logprob: -6.150552749633789

Token 69: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2572685778141022
    2. ' i' → logprob: -2.3822686672210693
    3. ' if' → logprob: -3.0072686672210693
    4. '   ' → logprob: -3.1322686672210693
    5. ' 
' → logprob: -4.25726842880249
    6. '0' → logprob: -5.00726842880249
    7. '    ' → logprob: -5.13226842880249
    8. '  ' → logprob: -5.88226842880249
    9. '<|end|>' → logprob: -6.00726842880249
    10. '1' → logprob: -6.25726842880249

Token 70: ' right' (ID: 1849)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.31942862272262573
    2. 'p' → logprob: -1.5694286823272705
    3. ' i' → logprob: -2.9444286823272705
    4. 'i' → logprob: -4.444428443908691
    5. ' ' → logprob: -7.819428443908691
    6. ' not' → logprob: -8.819428443908691
    7. ' right' → logprob: -9.444428443908691
    8. '   ' → logprob: -9.569428443908691
    9. 'P' → logprob: -10.069428443908691
    10. ' P' → logprob: -10.444428443908691

Token 71: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6344816088676453
    2. '<' → logprob: -1.50948166847229
    3. ' ==' → logprob: -2.38448166847229
    4. '==' → logprob: -2.88448166847229
    5. '+' → logprob: -3.88448166847229
    6. '>=' → logprob: -4.134481430053711
    7. ' ' → logprob: -4.259481430053711
    8. ' >=' → logprob: -4.384481430053711
    9. ' is' → logprob: -4.884481430053711
    10. ' !=' → logprob: -5.009481430053711

Token 72: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7284942269325256
    2. 'p' → logprob: -0.9784942269325256
    3. ' i' → logprob: -2.603494167327881
    4. ' p' → logprob: -2.728494167327881
    5. ' ' → logprob: -6.853494167327881
    6. '0' → logprob: -7.478494167327881
    7. '   ' → logprob: -8.728494644165039
    8. '=' → logprob: -9.353494644165039
    9. '  ' → logprob: -9.853494644165039
    10. '>' → logprob: -10.228494644165039

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048207905143499374
    2. ':
' → logprob: -4.298207759857178
    3. ' or' → logprob: -4.798207759857178
    4. '       ' → logprob: -5.048207759857178
    5. '<|end|>' → logprob: -5.173207759857178
    6. ' and' → logprob: -5.298207759857178
    7. '   ' → logprob: -5.673207759857178
    8. ' <=' → logprob: -6.548207759857178
    9. '<|end|>' → logprob: -6.923207759857178
    10. '):' → logprob: -7.798207759857178

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059280429035425186
    2. ':' → logprob: -3.1842803955078125
    3. ' right' → logprob: -5.6842803955078125
    4. '   ' → logprob: -5.9342803955078125
    5. ':
' → logprob: -6.0592803955078125
    6. '        
' → logprob: -6.3092803955078125
    7. ',' → logprob: -7.0592803955078125
    8. '<|end|>' → logprob: -7.0592803955078125
    9. 'right' → logprob: -7.4342803955078125
    10. ' ' → logprob: -7.8092803955078125

Token 75: ' right' (ID: 1849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41603103280067444
    2. ' right' → logprob: -1.416031002998352
    3. 'right' (adapté à ' right') → logprob: -2.7910311222076416
    4. '   ' → logprob: -4.4160308837890625
    5. ' intervals' → logprob: -4.6660308837890625
    6. ' left' → logprob: -5.6660308837890625
    7. '
' → logprob: -6.0410308837890625
    8. '        
' → logprob: -6.6660308837890625
    9. '           ' → logprob: -6.6660308837890625
    10. ' if' → logprob: -6.7910308837890625

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038089800626039505
    2. '=' → logprob: -3.2880897521972656
    3. '<|end|>' → logprob: -11.163089752197266
    4. ' +=' → logprob: -11.413089752197266
    5. ' ' → logprob: -11.413089752197266
    6. ',' → logprob: -12.413089752197266
    7. '<|end|>' → logprob: -13.913089752197266
    8. ')' → logprob: -13.913089752197266
    9. '+' → logprob: -14.038089752197266
    10. '   ' → logprob: -14.038089752197266

Token 77: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1426936537027359
    2. 'p' → logprob: -2.0176937580108643
    3. 'i' → logprob: -11.892693519592285
    4. ' i' → logprob: -12.017693519592285
    5. ' ' → logprob: -12.767693519592285
    6. '<|end|>' → logprob: -13.642693519592285
    7. '	p' → logprob: -15.517693519592285
    8. 'python' → logprob: -15.892693519592285
    9. ' п' → logprob: -16.0801944732666
    10. '   ' → logprob: -16.1426944732666

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6012772917747498
    2. '<|end|>' → logprob: -1.4762773513793945
    3. '       ' → logprob: -2.3512773513793945
    4. '
' → logprob: -2.3512773513793945
    5. '<|end|>' → logprob: -4.8512773513793945
    6. '    
' → logprob: -5.1012773513793945
    7. ' else' → logprob: -5.3512773513793945
    8. '  
' → logprob: -5.9762773513793945
    9. '        
' → logprob: -5.9762773513793945
    10. ' ' → logprob: -6.3512773513793945

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05129734426736832
    2. '<|end|>' → logprob: -3.926297426223755
    3. '       ' → logprob: -4.051297187805176
    4. '
' → logprob: -4.676297187805176
    5. ' else' → logprob: -6.926297187805176
    6. '```' → logprob: -7.676297187805176
    7. ' ' → logprob: -8.051297187805176
    8. '<|end|>' → logprob: -8.051297187805176
    9. '    
' → logprob: -8.426297187805176
    10. 'else' → logprob: -8.801297187805176

Token 80: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7099612951278687
    2. ' else' → logprob: -1.4599612951278687
    3. '<|end|>' → logprob: -2.084961414337158
    4. '
' → logprob: -2.834961414337158
    5. ' elif' → logprob: -2.959961414337158
    6. 'else' → logprob: -3.834961414337158
    7. 'elif' → logprob: -4.584961414337158
    8. ' ' → logprob: -6.084961414337158
    9. '<|end|>' → logprob: -6.459961414337158
    10. '    
' → logprob: -7.084961414337158

Token 81: ' i' (ID: 575)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6102566719055176
    2. ' i' → logprob: -0.9852566719055176
    3. 'right' → logprob: -3.6102566719055176
    4. ' ' → logprob: -3.8602566719055176
    5. 'i' → logprob: -3.9852566719055176
    6. ' p' → logprob: -4.360256671905518
    7. ' left' → logprob: -6.110256671905518
    8. '  ' → logprob: -7.985256671905518
    9. 'p' → logprob: -7.985256671905518
    10. '   ' → logprob: -8.29775619506836

Token 82: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4061744213104248
    2. ' >' → logprob: -2.031174421310425
    3. '==' → logprob: -2.406174421310425
    4. ' >=' → logprob: -2.656174421310425
    5. '>' → logprob: -3.781174421310425
    6. ' ' → logprob: -4.531174659729004
    7. '>=' → logprob: -5.156174659729004
    8. ' <=' → logprob: -6.531174659729004
    9. ' <' → logprob: -8.156174659729004
    10. '   ' → logprob: -8.156174659729004

Token 83: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.054996587336063385
    2. ' right' → logprob: -2.9299964904785156
    3. ' ' → logprob: -9.929996490478516
    4. 'N' → logprob: -10.054996490478516
    5. ' N' → logprob: -11.804996490478516
    6. ' p' → logprob: -12.429996490478516
    7. 'r' → logprob: -12.804996490478516
    8. '	right' → logprob: -13.054996490478516
    9. 'p' → logprob: -13.429996490478516
    10. 'P' → logprob: -13.804996490478516

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024001512210816145
    2. '):' → logprob: -6.752399921417236
    3. ':
' → logprob: -6.877399921417236
    4. ' :' → logprob: -9.252400398254395
    5. ' or' → logprob: -10.627400398254395
    6. ']:' → logprob: -10.877400398254395
    7. ' and' → logprob: -10.877400398254395
    8. '   ' → logprob: -11.502400398254395
    9. ')' → logprob: -12.252400398254395
    10. '):
' → logprob: -12.377400398254395

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13207407295703888
    2. '   ' → logprob: -2.2570741176605225
    3. ' intervals' → logprob: -4.132073879241943
    4. 'interval' → logprob: -6.132073879241943
    5. '<|end|>' → logprob: -8.632074356079102
    6. '
' → logprob: -8.757074356079102
    7. '```' → logprob: -8.757074356079102
    8. '    
' → logprob: -9.632074356079102
    9. '        
' → logprob: -9.882074356079102
    10. ')' → logprob: -10.632074356079102

Token 86: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.10227645933628082
    2. '   ' → logprob: -2.727276563644409
    3. 'interval' → logprob: -3.477276563644409
    4. '       ' → logprob: -7.60227632522583
    5. ' interval' → logprob: -8.727276802062988
    6. '```' → logprob: -9.727276802062988
    7. '
' → logprob: -9.852276802062988
    8. ' ' → logprob: -10.602276802062988
    9. '    
' → logprob: -10.727276802062988
    10. '           ' → logprob: -10.977276802062988

Token 87: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014178205281496048
    2. '.' → logprob: -4.264178276062012
    3. '.extend' → logprob: -11.764178276062012
    4. ' .' → logprob: -12.389178276062012
    5. '.push' → logprob: -13.889178276062012
    6. '.app' → logprob: -14.139178276062012
    7. '.Append' → logprob: -14.764178276062012
    8. 'append' → logprob: -15.764178276062012
    9. '.ap' → logprob: -16.014177322387695
    10. '.py' → logprob: -16.014177322387695

Token 88: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04483219236135483
    2. '(' → logprob: -3.294832229614258
    3. '(i' → logprob: -5.044832229614258
    4. '(p' → logprob: -9.044832229614258
    5. '(()' → logprob: -10.044832229614258
    6. '(range' → logprob: -10.169832229614258
    7. '(
' → logprob: -10.544832229614258
    8. '([' → logprob: -10.544832229614258
    9. '(left' → logprob: -10.669832229614258
    10. '(P' → logprob: -11.044832229614258

Token 89: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0028213970363140106
    2. ' left' → logprob: -5.877821445465088
    3. '	left' → logprob: -12.00282096862793
    4. 'i' → logprob: -12.62782096862793
    5. '[left' → logprob: -12.75282096862793
    6. ',left' → logprob: -13.50282096862793
    7. '   ' → logprob: -13.87782096862793
    8. '(left' → logprob: -14.00282096862793
    9. ' i' → logprob: -14.87782096862793
    10. ' ' → logprob: -15.50282096862793

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012356207298580557
    2. ' ,' → logprob: -9.750123977661133
    3. ',i' → logprob: -9.750123977661133
    4. ',
' → logprob: -12.375123977661133
    5. ',right' → logprob: -14.000123977661133
    6. '‌,' → logprob: -15.250123977661133
    7. ',p' → logprob: -15.250123977661133
    8. ' ' → logprob: -15.625123977661133
    9. '   ' → logprob: -15.750123977661133
    10. 'i' → logprob: -16.125123977661133

Token 91: ' right' (ID: 1849)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9232032895088196
    2. 'right' → logprob: -1.2982032299041748
    3. ' right' → logprob: -1.4232032299041748
    4. ' i' → logprob: -2.423203229904175
    5. '	right' → logprob: -9.423203468322754
    6. '   ' → logprob: -10.673203468322754
    7. ' ' → logprob: -10.673203468322754
    8. '	i' → logprob: -12.048203468322754
    9. '       ' → logprob: -12.298203468322754
    10. '    ' → logprob: -12.548203468322754

Token 92: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.15908662974834442
    2. ')
' → logprob: -2.1590867042541504
    3. '))' → logprob: -3.6590867042541504
    4. ')' → logprob: -5.28408670425415
    5. '+' → logprob: -7.65908670425415
    6. '))
' → logprob: -8.534086227416992
    7. ')
' → logprob: -9.409086227416992
    8. '   ' → logprob: -11.159086227416992
    9. ',' → logprob: -11.284086227416992
    10. ' ))
' → logprob: -11.659086227416992

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24785874783992767
    2. 'left' → logprob: -1.8728587627410889
    3. '   ' → logprob: -3.372858762741089
    4. ' left' → logprob: -3.747858762741089
    5. '        
' → logprob: -6.24785852432251
    6. 'right' → logprob: -6.37285852432251
    7. '	left' → logprob: -6.87285852432251
    8. '```' → logprob: -7.37285852432251
    9. '
' → logprob: -7.49785852432251
    10. '    
' → logprob: -7.99785852432251

Token 94: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0032093229237943888
    2. ' left' → logprob: -6.003209114074707
    3. 'i' → logprob: -7.628209114074707
    4. 'right' → logprob: -8.503209114074707
    5. '       ' → logprob: -10.503209114074707
    6. '	left' → logprob: -12.003209114074707
    7. '   ' → logprob: -12.753209114074707
    8. ' i' → logprob: -13.253209114074707
    9. '
' → logprob: -13.503209114074707
    10. 'if' → logprob: -14.003209114074707

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00034702493576332927
    2. ' =' → logprob: -8.000347137451172
    3. '=i' → logprob: -11.375347137451172
    4. '＝' → logprob: -16.625347137451172
    5. 'i' → logprob: -18.000347137451172
    6. '=
' → logprob: -18.125347137451172
    7. '=index' → logprob: -18.125347137451172
    8. '=}' → logprob: -18.375347137451172
    9. '=user' → logprob: -18.625347137451172
    10. '+=' → logprob: -19.000347137451172

Token 96: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42288386821746826
    2. 'right' → logprob: -1.1728838682174683
    3. ' right' → logprob: -3.547883987426758
    4. ' i' → logprob: -5.047883987426758
    5. '   ' → logprob: -9.047883987426758
    6. '	right' → logprob: -10.297883987426758
    7. ' ' → logprob: -12.422883987426758
    8. '	i' → logprob: -12.547883987426758
    9. '  ' → logprob: -13.922883987426758
    10. '(right' → logprob: -14.172883987426758

Token 97: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.810861349105835
    2. '<|end|>' → logprob: -0.810861349105835
    3. '0' → logprob: -2.310861349105835
    4. '```' → logprob: -5.435861587524414
    5. ',' → logprob: -6.560861587524414
    6. ' ' → logprob: -6.935861587524414
    7. '#' → logprob: -7.060861587524414
    8. '<|end|>' → logprob: -7.185861587524414
    9. '+' → logprob: -7.685861587524414
    10. ' )' → logprob: -7.810861587524414

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '0' → logprob: -15.750031471252441
    4. '<|end|>' → logprob: -16.000032424926758
    5. '   ' → logprob: -17.875032424926758
    6. '```' → logprob: -18.000032424926758
    7. '2' → logprob: -19.500032424926758
    8. '<|end|>' → logprob: -20.250032424926758
    9. '
' → logprob: -20.375032424926758
    10. '  ' → logprob: -20.500032424926758

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.62500286102295
    4. '```' → logprob: -18.500001907348633
    5. '<|end|>' → logprob: -19.250001907348633
    6. '2' → logprob: -20.187501907348633
    7. '-' → logprob: -20.812501907348633
    8. '   ' → logprob: -20.875001907348633
    9. '`' → logprob: -20.875001907348633
    10. '
' → logprob: -21.000001907348633

Token 100: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4005025327205658
    2. '<|end|>' → logprob: -1.1505025625228882
    3. '#' → logprob: -5.900502681732178
    4. '\n' → logprob: -6.025502681732178
    5. '
' → logprob: -6.150502681732178
    6. 'for' → logprob: -6.775502681732178
    7. '```' → logprob: -6.900502681732178
    8. ' ' → logprob: -7.025502681732178
    9. '<|end|>' → logprob: -7.150502681732178
    10. ']' → logprob: -8.02550220489502

Token 101: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20874544978141785
    2. '<|end|>' → logprob: -1.7087454795837402
    3. '#' → logprob: -5.95874547958374
    4. 'for' → logprob: -6.58374547958374
    5. '
' → logprob: -7.08374547958374
    6. '```' → logprob: -7.45874547958374
    7. ']' → logprob: -7.95874547958374
    8. 'print' → logprob: -8.083745002746582
    9. '<|end|>' → logprob: -8.333745002746582
    10. '\n' → logprob: -8.333745002746582

Token 102: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.3940494954586029
    2. '<|end|>' → logprob: -1.1440495252609253
    3. ' right' → logprob: -5.519049644470215
    4. '```' → logprob: -6.394049644470215
    5. '[right' → logprob: -7.894049644470215
    6. '       ' → logprob: -8.019049644470215
    7. ')' → logprob: -8.644049644470215
    8. ' ' → logprob: -9.019049644470215
    9. '	right' → logprob: -9.144049644470215
    10. '<|end|>' → logprob: -9.144049644470215

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002812601625919342
    2. ' =' → logprob: -5.877812385559082
    3. '=i' → logprob: -12.377812385559082
    4. '+=' → logprob: -13.752812385559082
    5. ' ' → logprob: -14.252812385559082
    6. '<|end|>' → logprob: -14.502812385559082
    7. '=-' → logprob: -15.002812385559082
    8. '=
' → logprob: -16.3778133392334
    9. '0' → logprob: -16.3778133392334
    10. '   ' → logprob: -16.5028133392334

Token 104: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024934951215982437
    2. 'i' → logprob: -6.252493381500244
    3. ' -' → logprob: -7.627493381500244
    4. '-i' → logprob: -9.877493858337402
    5. '0' → logprob: -11.127493858337402
    6. ' i' → logprob: -12.627493858337402
    7. ' ' → logprob: -12.627493858337402
    8. 'right' → logprob: -13.252493858337402
    9. '   ' → logprob: -13.627493858337402
    10. '-p' → logprob: -13.877493858337402

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.125000953674316
    3. '2' → logprob: -14.750000953674316
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -18.000001907348633
    6. '-' → logprob: -18.500001907348633
    7. '  ' → logprob: -18.750001907348633
    8. '<|end|>' → logprob: -19.312501907348633
    9. '１' → logprob: -19.437501907348633
    10. '۱' → logprob: -19.500001907348633

Token 106: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6833178400993347
    2. ')' → logprob: -1.4333178997039795
    3. '<|end|>' → logprob: -1.8083178997039795
    4. 'print' → logprob: -3.1833178997039795
    5. ' for' → logprob: -4.9333176612854
    6. 'if' → logprob: -5.0583176612854
    7. ']' → logprob: -5.3083176612854
    8. 'i' → logprob: -5.5583176612854
    9. '#' → logprob: -5.6833176612854
    10. '\n' → logprob: -5.9333176612854

Token 107: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5945853590965271
    2. ')' → logprob: -1.8445854187011719
    3. 'i' → logprob: -2.594585418701172
    4. '(' → logprob: -3.469585418701172
    5. '<|end|>' → logprob: -3.594585418701172
    6. '#' → logprob: -4.219585418701172
    7. '\n' → logprob: -4.219585418701172
    8. ' for' → logprob: -4.469585418701172
    9. '.' → logprob: -4.594585418701172
    10. 'print' → logprob: -4.594585418701172

Token 108: ' check' (ID: 2371)
  Prédit: ' longest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' longest' → logprob: -0.8719716668128967
    2. ' max' → logprob: -1.871971607208252
    3. ' intervals' → logprob: -1.996971607208252
    4. ' main' → logprob: -2.996971607208252
    5. ' merge' → logprob: -2.996971607208252
    6. ' process' → logprob: -3.496971607208252
    7. ' solve' → logprob: -3.621971607208252
    8. ' find' → logprob: -3.746971607208252
    9. ' calculate' → logprob: -3.871971607208252
    10. ' interval' → logprob: -4.496971607208252

Token 109: '(L' (ID: 11075)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.3877092599868774
    2. '(x' → logprob: -1.5127092599868774
    3. '(mid' → logprob: -1.8877092599868774
    4. '(' → logprob: -2.012709140777588
    5. '(length' → logprob: -2.262709140777588
    6. '(n' → logprob: -3.387709140777588
    7. '(interval' → logprob: -3.637709140777588
    8. '(l' → logprob: -4.512709140777588
    9. '(i' → logprob: -4.637709140777588
    10. '(size' → logprob: -5.012709140777588

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046695124357938766
    2. '):' → logprob: -3.1716952323913574
    3. ' ,' → logprob: -6.171695232391357
    4. ',L' → logprob: -8.0466947555542
    5. ',N' → logprob: -8.6716947555542
    6. ')' → logprob: -8.6716947555542
    7. ',n' → logprob: -8.9216947555542
    8. '):
' → logprob: -8.9216947555542
    9. '(L' → logprob: -9.5466947555542
    10. ',l' → logprob: -9.7966947555542

Token 111: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.13867799937725067
    2. ' R' → logprob: -2.2636780738830566
    3. 'x' → logprob: -4.888678073883057
    4. 'M' → logprob: -5.513678073883057
    5. 'mid' → logprob: -5.638678073883057
    6. ' mid' → logprob: -6.388678073883057
    7. ' x' → logprob: -6.638678073883057
    8. ')' → logprob: -7.013678073883057
    9. 'X' → logprob: -7.138678073883057
    10. 'K' → logprob: -7.138678073883057

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003663212701212615
    2. ')' → logprob: -8.2503662109375
    3. '):
' → logprob: -10.0003662109375
    4. ',' → logprob: -10.5003662109375
    5. ' ):' → logprob: -10.6253662109375
    6. ':' → logprob: -12.6253662109375
    7. '   ' → logprob: -13.0003662109375
    8. '):
' → logprob: -14.7503662109375
    9. ')):' → logprob: -15.2503662109375
    10. ')：' → logprob: -15.5003662109375

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01274919230490923
    2. '<|end|>' → logprob: -5.262749195098877
    3. ' ' → logprob: -6.637749195098877
    4. '    ' → logprob: -6.762749195098877
    5. '    
' → logprob: -7.012749195098877
    6. '	return' → logprob: -7.387749195098877
    7. ' 
' → logprob: -7.512749195098877
    8. '\n' → logprob: -7.512749195098877
    9. '\t' → logprob: -7.887749195098877
    10. ' for' → logprob: -8.012748718261719

Token 114: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4033755958080292
    2. ' for' → logprob: -1.4033756256103516
    3. ' if' → logprob: -3.5283756256103516
    4. ' return' → logprob: -3.7783756256103516
    5. 'for' → logprob: -4.403375625610352
    6. ' i' → logprob: -5.403375625610352
    7. ' max' → logprob: -5.528375625610352
    8. '    ' → logprob: -6.153375625610352
    9. '    
' → logprob: -6.653375625610352
    10. 'return' → logprob: -6.778375625610352

Token 115: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9733044505119324
    2. 'R' → logprob: -1.2233045101165771
    3. ' R' → logprob: -1.7233045101165771
    4. ' L' → logprob: -1.9733045101165771
    5. 'P' → logprob: -5.723304271697998
    6. ' P' → logprob: -5.973304271697998
    7. ' (' → logprob: -6.598304271697998
    8. '(L' → logprob: -7.348304271697998
    9. '   ' → logprob: -7.598304271697998
    10. ' not' → logprob: -7.848304271697998

Token 116: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.39451175928115845
    2. ' <=' → logprob: -2.0195116996765137
    3. '>' → logprob: -2.1445116996765137
    4. ' >=' → logprob: -3.3945116996765137
    5. '<=' → logprob: -3.8945116996765137
    6. ' ==' → logprob: -4.644511699676514
    7. '==' → logprob: -5.144511699676514
    8. '>=' → logprob: -5.269511699676514
    9. ' <' → logprob: -7.394511699676514
    10. ' ' → logprob: -8.019512176513672

Token 117: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0010607946896925569
    2. ' R' → logprob: -7.376060962677002
    3. '   ' → logprob: -8.501060485839844
    4. '0' → logprob: -8.626060485839844
    5. ' ' → logprob: -10.251060485839844
    6. '=' → logprob: -13.126060485839844
    7. 'N' → logprob: -13.251060485839844
    8. '1' → logprob: -13.376060485839844
    9. ')' → logprob: -13.376060485839844
    10. '    ' → logprob: -14.001060485839844

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06314738839864731
    2. ':
' → logprob: -3.0631473064422607
    3. ':return' → logprob: -4.31314754486084
    4. '   ' → logprob: -7.43814754486084
    5. ' :' → logprob: -8.18814754486084
    6. '       ' → logprob: -9.43814754486084
    7. ' :
' → logprob: -10.18814754486084
    8. ' or' → logprob: -10.56314754486084
    9. ')' → logprob: -11.43814754486084
    10. '):' → logprob: -11.56314754486084

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005969438701868057
    2. ' return' → logprob: -5.880969524383545
    3. '   ' → logprob: -6.630969524383545
    4. ':' → logprob: -7.380969524383545
    5. ':
' → logprob: -7.380969524383545
    6. ':return' → logprob: -9.005969047546387
    7. '
' → logprob: -9.880969047546387
    8. ',' → logprob: -9.880969047546387
    9. '	return' → logprob: -10.130969047546387
    10. ' :' → logprob: -10.380969047546387

Token 120: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6201605200767517
    2. '       ' → logprob: -0.9951605200767517
    3. 'return' (adapté à ' return') → logprob: -2.9951605796813965
    4. '   ' → logprob: -3.2451605796813965
    5. '	return' → logprob: -6.6201605796813965
    6. '
' → logprob: -7.1201605796813965
    7. ' 
' → logprob: -8.120160102844238
    8. ':return' → logprob: -8.745160102844238
    9. '    
' → logprob: -8.870160102844238
    10. '           ' → logprob: -8.995160102844238

Token 121: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5253502130508423
    2. ' True' → logprob: -1.7753502130508423
    3. 'False' → logprob: -2.4003500938415527
    4. '1' → logprob: -2.5253500938415527
    5. ' ' → logprob: -3.6503500938415527
    6. '0' → logprob: -4.400350093841553
    7. ' False' → logprob: -4.525350093841553
    8. ' P' → logprob: -5.400350093841553
    9. 'P' → logprob: -5.525350093841553
    10. '
' → logprob: -5.900350093841553

Token 122: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05938693508505821
    2. '    
' → logprob: -3.059386968612671
    3. '
' → logprob: -5.309386730194092
    4. '\n' → logprob: -6.559386730194092
    5. ' 
' → logprob: -6.559386730194092
    6. '<|end|>' → logprob: -6.684386730194092
    7. '   
' → logprob: -7.809386730194092
    8. '  
' → logprob: -8.05938720703125
    9. ')' → logprob: -8.80938720703125
    10. ' if' → logprob: -8.93438720703125

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11673836410045624
    2. '    
' → logprob: -2.9917383193969727
    3. '<|end|>' → logprob: -3.2417383193969727
    4. '
' → logprob: -4.991738319396973
    5. ' 
' → logprob: -5.366738319396973
    6. '  
' → logprob: -6.116738319396973
    7. '   
' → logprob: -6.366738319396973
    8. ' ' → logprob: -6.866738319396973
    9. '\n' → logprob: -7.116738319396973
    10. '    ' → logprob: -7.116738319396973

Token 124: ' to' (ID: 316)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4636356830596924
    2. '   ' → logprob: -1.7136356830596924
    3. 'if' → logprob: -2.0886356830596924
    4. ' for' → logprob: -2.0886356830596924
    5. ' mid' → logprob: -2.3386356830596924
    6. 'for' → logprob: -2.5886356830596924
    7. 'mid' → logprob: -2.8386356830596924
    8. '    
' → logprob: -3.8386356830596924
    9. 'max' → logprob: -4.213635444641113
    10. '
' → logprob: -5.088635444641113

Token 125: '_left' (ID: 22189)
  Prédit: '_check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_check' → logprob: -1.5514253377914429
    2. 'rch' → logprob: -2.4264254570007324
    3. 'tal' → logprob: -2.8014254570007324
    4. 'check' → logprob: -2.9264254570007324
    5. 'return' → logprob: -3.0514254570007324
    6. 'ols' → logprob: -3.0514254570007324
    7. 'max' → logprob: -3.1764254570007324
    8. '_return' → logprob: -3.1764254570007324
    9. 'r' → logprob: -3.3014254570007324
    10. 'ken' → logprob: -3.4264254570007324

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1938137263059616
    2. '=' → logprob: -2.0688138008117676
    3. ',' → logprob: -3.0688138008117676
    4. '[' → logprob: -7.318813800811768
    5. '   ' → logprob: -7.443813800811768
    6. ')' → logprob: -7.943813800811768
    7. ' ' → logprob: -8.06881332397461
    8. '  ' → logprob: -8.69381332397461
    9. 'def' → logprob: -9.06881332397461
    10. 's' → logprob: -9.19381332397461

Token 127: ' []
' (ID: 8911)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.0896974802017212
    2. 'False' → logprob: -1.4646974802017212
    3. 'R' → logprob: -1.5896974802017212
    4. 'L' → logprob: -2.4646973609924316
    5. '0' → logprob: -3.8396973609924316
    6. ' P' → logprob: -3.9646973609924316
    7. 'True' → logprob: -3.9646973609924316
    8. '[' → logprob: -4.339697360992432
    9. ' R' → logprob: -4.464697360992432
    10. ' False' → logprob: -4.714697360992432

Token 128: '   ' (ID: 271)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6249144673347473
    2. 'to' → logprob: -0.8749144673347473
    3. '   ' → logprob: -3.1249144077301025
    4. ' for' → logprob: -5.999914646148682
    5. 'for' → logprob: -7.249914646148682
    6. '	to' → logprob: -8.499914169311523
    7. ' ' → logprob: -9.499914169311523
    8. ',' → logprob: -9.999914169311523
    9. '[]' → logprob: -10.124914169311523
    10. ' and' → logprob: -10.687414169311523

Token 129: ' fixed' (ID: 13213)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.012866415083408356
    2. ' to' → logprob: -4.637866497039795
    3. 'for' → logprob: -5.887866497039795
    4. '   ' → logprob: -8.762866020202637
    5. ' for' → logprob: -9.262866020202637
    6. 'stack' → logprob: -10.387866020202637
    7. '	to' → logprob: -12.262866020202637
    8. 'while' → logprob: -12.762866020202637
    9. 'max' → logprob: -12.762866020202637
    10. 'current' → logprob: -12.887866020202637

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06267645210027695
    2. '=' → logprob: -2.937676429748535
    3. '   ' → logprob: -6.687676429748535
    4. ',' → logprob: -6.812676429748535
    5. '_positions' → logprob: -7.062676429748535
    6. '_tokens' → logprob: -7.437676429748535
    7. '_indices' → logprob: -7.937676429748535
    8. '<|end|>' → logprob: -8.062676429748535
    9. 'to' → logprob: -8.187676429748535
    10. '_' → logprob: -8.187676429748535

Token 131: ' []
' (ID: 8911)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.8422591090202332
    2. '[]' → logprob: -0.9672591090202332
    3. 'set' → logprob: -2.217259168624878
    4. '[' → logprob: -3.717259168624878
    5. '{}' → logprob: -4.092258930206299
    6. ' set' → logprob: -4.717258930206299
    7. '{' → logprob: -4.717258930206299
    8. '0' → logprob: -5.467258930206299
    9. ' []' → logprob: -5.717258930206299
    10. ' False' → logprob: -6.092258930206299

Token 132: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4041460156440735
    2. '   ' → logprob: -1.6541459560394287
    3. ' ' → logprob: -3.2791459560394287
    4. 'for' → logprob: -3.4041459560394287
    5. '<|end|>' → logprob: -3.4041459560394287
    6. '    ' → logprob: -4.154146194458008
    7. ' 
' → logprob: -4.904146194458008
    8. '[' → logprob: -6.029146194458008
    9. '    
' → logprob: -6.279146194458008
    10. '	for' → logprob: -6.779146194458008

Token 133: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2665891647338867
    2. ' for' → logprob: -1.5165891647338867
    3. '   ' → logprob: -5.391589164733887
    4. 'i' → logprob: -6.016589164733887
    5. 'mid' → logprob: -6.641589164733887
    6. 'idx' → logprob: -7.016589164733887
    7. 'stack' → logprob: -7.016589164733887
    8. ' i' → logprob: -7.016589164733887
    9. ' mid' → logprob: -8.016589164733887
    10. 'count' → logprob: -8.016589164733887

Token 134: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.028363512828946114
    2. '_right' → logprob: -3.7783634662628174
    3. 'left' → logprob: -5.4033637046813965
    4. 'Left' → logprob: -8.653363227844238
    5. 'right' → logprob: -9.778363227844238
    6. '```' → logprob: -9.903363227844238
    7. '_LEFT' → logprob: -10.153363227844238
    8. '_' → logprob: -10.653363227844238
    9. '=' → logprob: -10.903363227844238
    10. ' =' → logprob: -11.028363227844238

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47447213530540466
    2. '=' → logprob: -0.974472165107727
    3. '=[]' → logprob: -7.9744720458984375
    4. '   ' → logprob: -11.099472045898438
    5. '[]' → logprob: -11.849472045898438
    6. ']' → logprob: -11.849472045898438
    7. '=[]
' → logprob: -12.349472045898438
    8. ')' → logprob: -12.599472045898438
    9. ',' → logprob: -12.849472045898438
    10. ' ' → logprob: -13.099472045898438

Token 136: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01353099662810564
    2. '[]
' → logprob: -4.63853120803833
    3. ' []' → logprob: -5.63853120803833
    4. '[' → logprob: -9.263530731201172
    5. ' []
' → logprob: -10.138530731201172
    6. '[]

' → logprob: -10.388530731201172
    7. '   ' → logprob: -11.388530731201172
    8. '[]}' → logprob: -11.763530731201172
    9. 'False' → logprob: -12.263530731201172
    10. 'True' → logprob: -12.263530731201172

Token 137: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3645893335342407
    2. ' for' → logprob: -1.2395893335342407
    3. 'i' → logprob: -4.989589214324951
    4. '   ' → logprob: -6.114589214324951
    5. 'mid' → logprob: -6.364589214324951
    6. ' mid' → logprob: -6.489589214324951
    7. 'idx' → logprob: -6.614589214324951
    8. ' i' → logprob: -6.864589214324951
    9. 'pivot' → logprob: -8.98958969116211
    10. ' idx' → logprob: -9.23958969116211

Token 139: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18617604672908783
    2. 'x' → logprob: -1.936176061630249
    3. 'p' → logprob: -4.43617582321167
    4. ' i' → logprob: -5.18617582321167
    5. 'j' → logprob: -5.81117582321167
    6. 'v' → logprob: -6.56117582321167
    7. ' x' → logprob: -7.18617582321167
    8. 'idx' → logprob: -7.18617582321167
    9. 'k' → logprob: -7.68617582321167
    10. 'pos' → logprob: -7.81117582321167

Token 140: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01697041653096676
    2. 'in' → logprob: -4.141970634460449
    3. ',' → logprob: -7.516970634460449
    4. '    ' → logprob: -8.64197063446045
    5. ' ' → logprob: -9.39197063446045
    6. '   ' → logprob: -9.76697063446045
    7. ' L' → logprob: -10.64197063446045
    8. ' ,' → logprob: -10.76697063446045
    9. '  ' → logprob: -12.51697063446045
    10. 'range' → logprob: -12.64197063446045

Token 141: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.048534560948610306
    2. 'x' → logprob: -3.673534631729126
    3. 'v' → logprob: -4.798534393310547
    4. ' p' → logprob: -4.923534393310547
    5. 'val' → logprob: -5.548534393310547
    6. 'value' → logprob: -7.798534393310547
    7. 'num' → logprob: -8.048534393310547
    8. 'pos' → logprob: -8.173534393310547
    9. ' x' → logprob: -8.298534393310547
    10. 'a' → logprob: -8.548534393310547

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16104276478290558
    2. 'in' → logprob: -1.9110428094863892
    3. '   ' → logprob: -7.6610426902771
    4. ' ' → logprob: -9.286043167114258
    5. '	in' → logprob: -9.911043167114258
    6. '    ' → logprob: -9.911043167114258
    7. ',' → logprob: -10.161043167114258
    8. ')' → logprob: -10.536043167114258
    9. '  ' → logprob: -10.536043167114258
    10. '```' → logprob: -11.661043167114258

Token 143: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014626816846430302
    2. ' enumerate' → logprob: -4.264626979827881
    3. 'zip' → logprob: -8.264626502990723
    4. 'range' → logprob: -8.639626502990723
    5. ' zip' → logprob: -11.639626502990723
    6. 'list' → logprob: -11.889626502990723
    7. '[(' → logprob: -12.764626502990723
    8. ' ' → logprob: -13.639626502990723
    9. 'enum' → logprob: -13.764626502990723
    10. '   ' → logprob: -14.139626502990723

Token 144: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.28681591153144836
    2. '(range' → logprob: -1.411815881729126
    3. 'range' → logprob: -5.911816120147705
    4. 'P' → logprob: -6.911816120147705
    5. '(' → logprob: -7.411816120147705
    6. ')' → logprob: -7.661816120147705
    7. '(interval' → logprob: -8.286815643310547
    8. ' range' → logprob: -8.411815643310547
    9. ' P' → logprob: -8.911815643310547
    10. '((' → logprob: -9.911815643310547

Token 145: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.037852682173252106
    2. '):
' → logprob: -3.4128527641296387
    3. '):' → logprob: -6.412852764129639
    4. ',' → logprob: -6.412852764129639
    5. '   ' → logprob: -8.53785228729248
    6. '[' → logprob: -8.66285228729248
    7. '):

' → logprob: -8.78785228729248
    8. ')' → logprob: -9.28785228729248
    9. ',L' → logprob: -9.41285228729248
    10. '(L' → logprob: -9.53785228729248

Token 146: ':R' (ID: 163578)
  Prédit: ':L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':L' → logprob: -0.6024498343467712
    2. '+' → logprob: -0.9774498343467712
    3. ':' → logprob: -3.477449893951416
    4. ':R' → logprob: -3.852449893951416
    5. ' +' → logprob: -4.477449893951416
    6. '],' → logprob: -5.227449893951416
    7. ':],' → logprob: -5.727449893951416
    8. 'L' → logprob: -6.727449893951416
    9. ' :' → logprob: -6.977449893951416
    10. '[L' → logprob: -7.102449893951416

Token 147: '+' (ID: 10)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.9607911109924316
    2. '+' → logprob: -1.0857911109924316
    3. ']):
' → logprob: -1.3357911109924316
    4. ']):' → logprob: -4.585791110992432
    5. ' +' → logprob: -5.585791110992432
    6. '),' → logprob: -7.460791110992432
    7. ']),' → logprob: -7.710791110992432
    8. '   ' → logprob: -8.085790634155273
    9. '])' → logprob: -8.210790634155273
    10. '1' → logprob: -8.335790634155273

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010044389637187123
    2. ' ' → logprob: -9.375100135803223
    3. '])' → logprob: -11.500100135803223
    4. '2' → logprob: -13.750100135803223
    5. '   ' → logprob: -13.875100135803223
    6. ']):
' → logprob: -14.125100135803223
    7. 'i' → logprob: -14.250100135803223
    8. ']),' → logprob: -14.375100135803223
    9. '  ' → logprob: -15.437600135803223
    10. '```' → logprob: -15.625100135803223

Token 149: '],' (ID: 2155)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.46649542450904846
    2. ']):' → logprob: -1.341495394706726
    3. '],' → logprob: -2.2164955139160156
    4. ']' → logprob: -7.216495513916016
    5. '):
' → logprob: -7.841495513916016
    6. '   ' → logprob: -8.341495513916016
    7. '),' → logprob: -8.466495513916016
    8. '])' → logprob: -8.591495513916016
    9. ',' → logprob: -8.966495513916016
    10. ' ]' → logprob: -9.216495513916016

Token 150: ' L' (ID: 451)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7783779501914978
    2. 'L' → logprob: -1.1533780097961426
    3. '1' → logprob: -1.7783780097961426
    4. '0' → logprob: -3.7783780097961426
    5. ' start' → logprob: -4.278378009796143
    6. ' L' → logprob: -4.653378009796143
    7. 'i' → logprob: -5.403378009796143
    8. ' ' → logprob: -5.653378009796143
    9. ')' → logprob: -6.403378009796143
    10. ' i' → logprob: -8.278377532958984

Token 151: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005993967410176992
    2. '):' → logprob: -5.130993843078613
    3. '):
' → logprob: -10.380993843078613
    4. '   ' → logprob: -10.630993843078613
    5. ' ):
' → logprob: -11.755993843078613
    6. '       ' → logprob: -14.005993843078613
    7. '):

' → logprob: -14.880993843078613
    8. ':' → logprob: -15.130993843078613
    9. ')' → logprob: -15.380993843078613
    10. '():
' → logprob: -15.505993843078613

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00333420280367136
    2. ' if' → logprob: -6.503334045410156
    3. ':' → logprob: -7.378334045410156
    4. ',' → logprob: -8.003334045410156
    5. '   ' → logprob: -8.503334045410156
    6. '):
' → logprob: -8.628334045410156
    7. '        
' → logprob: -9.128334045410156
    8. ':
' → logprob: -9.253334045410156
    9. 'if' → logprob: -10.003334045410156
    10. '    ' → logprob: -10.128334045410156

Token 153: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2568745017051697
    2. '       ' → logprob: -1.6318745613098145
    3. '    ' → logprob: -4.2568745613098145
    4. 'if' (adapté à ' if') → logprob: -5.2568745613098145
    5. ' ' → logprob: -5.5068745613098145
    6. '        ' → logprob: -5.6318745613098145
    7. '   ' → logprob: -6.0068745613098145
    8. ' 
' → logprob: -7.8818745613098145
    9. ' ' → logprob: -7.8818745613098145
    10. '        
' → logprob: -9.256874084472656

Token 154: ' i' (ID: 575)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.012383438646793365
    2. ' p' → logprob: -4.637383460998535
    3. 'i' → logprob: -6.012383460998535
    4. ' i' → logprob: -9.262383460998535
    5. 'P' → logprob: -10.887383460998535
    6. '   ' → logprob: -11.012383460998535
    7. ' ' → logprob: -11.387383460998535
    8. 'left' → logprob: -11.762383460998535
    9. '  ' → logprob: -12.324883460998535
    10. 'fixed' → logprob: -12.512383460998535

Token 155: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.28727906942367554
    2. '<' → logprob: -1.4122791290283203
    3. '<p' → logprob: -6.28727912902832
    4. ' >' → logprob: -6.53727912902832
    5. '>' → logprob: -6.66227912902832
    6. ' ' → logprob: -7.41227912902832
    7. '==' → logprob: -8.28727912902832
    8. ' ==' → logprob: -8.53727912902832
    9. ')' → logprob: -9.16227912902832
    10. '   ' → logprob: -9.28727912902832

Token 156: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011086019687354565
    2. ' p' → logprob: -4.5110859870910645
    3. ' ' → logprob: -11.511086463928223
    4. 'right' → logprob: -11.886086463928223
    5. 'P' → logprob: -12.136086463928223
    6. '0' → logprob: -12.636086463928223
    7. 'i' → logprob: -12.761086463928223
    8. '   ' → logprob: -13.136086463928223
    9. ' right' → logprob: -13.636086463928223
    10. '  ' → logprob: -14.136086463928223

Token 157: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.544199526309967
    2. ':' → logprob: -1.4191994667053223
    3. ' and' → logprob: -1.9191994667053223
    4. '):
' → logprob: -4.294199466705322
    5. '           ' → logprob: -4.544199466705322
    6. '       ' → logprob: -5.669199466705322
    7. 'and' → logprob: -6.919199466705322
    8. ')' → logprob: -7.794199466705322
    9. '):' → logprob: -7.794199466705322
    10. '   ' → logprob: -7.919199466705322

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03201407939195633
    2. ':' → logprob: -4.657013893127441
    3. ':
' → logprob: -4.782013893127441
    4. ' to' → logprob: -5.282013893127441
    5. 'to' → logprob: -5.532013893127441
    6. ' and' → logprob: -5.782013893127441
    7. '       ' → logprob: -7.157013893127441
    8. ',' → logprob: -8.032013893127441
    9. '<|end|>' → logprob: -9.782013893127441
    10. '          ' → logprob: -10.032013893127441

Token 159: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14707912504673004
    2. 'to' (adapté à ' to') → logprob: -2.0220792293548584
    3. '           ' → logprob: -5.897078990936279
    4. '       ' → logprob: -7.022078990936279
    5. '               ' → logprob: -8.147079467773438
    6. ' return' → logprob: -8.522079467773438
    7. '
' → logprob: -10.147079467773438
    8. '   ' → logprob: -10.147079467773438
    9. ' if' → logprob: -10.647079467773438
    10. '	to' → logprob: -10.647079467773438

Token 160: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0019726462196558714
    2. '_right' → logprob: -6.251972675323486
    3. 'left' → logprob: -10.501972198486328
    4. '_' → logprob: -11.376972198486328
    5. '_to' → logprob: -13.876972198486328
    6. ' _' → logprob: -14.126972198486328
    7. '_LEFT' → logprob: -14.626972198486328
    8. '_le' → logprob: -14.626972198486328
    9. '```' → logprob: -14.876972198486328
    10. '   ' → logprob: -15.126972198486328

Token 161: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015059324214234948
    2. '.' → logprob: -6.5015058517456055
    3. ' .' → logprob: -12.626505851745605
    4. 'append' → logprob: -15.501505851745605
    5. '.app' → logprob: -16.251506805419922
    6. '.Append' → logprob: -18.126506805419922
    7. ').' → logprob: -18.251506805419922
    8. '.push' → logprob: -18.251506805419922
    9. '.ap' → logprob: -18.251506805419922
    10. '].' → logprob: -18.626506805419922

Token 162: '(p' (ID: 2407)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5818256139755249
    2. '(p' → logprob: -0.8318256139755249
    3. '((' → logprob: -5.4568257331848145
    4. '(' → logprob: -6.5818257331848145
    5. 'p' → logprob: -9.331825256347656
    6. 'i' → logprob: -9.456825256347656
    7. '(True' → logprob: -10.706825256347656
    8. '(P' → logprob: -11.831825256347656
    9. '(False' → logprob: -11.956825256347656
    10. '(
' → logprob: -12.331825256347656

Token 163: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.28252482414245605
    2. ')' → logprob: -1.407524824142456
    3. '       ' → logprob: -7.407525062561035
    4. ' )
' → logprob: -8.032525062561035
    5. '   ' → logprob: -8.532525062561035
    6. ' )' → logprob: -9.532525062561035
    7. ')
' → logprob: -9.657525062561035
    8. '           ' → logprob: -10.157525062561035
    9. '               ' → logprob: -11.407525062561035
    10. '+' → logprob: -11.407525062561035

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0074782599695026875
    2. '<|end|>' → logprob: -5.5074782371521
    3. 'elif' → logprob: -6.2574782371521
    4. ' elif' → logprob: -6.8824782371521
    5. ')' → logprob: -9.257478713989258
    6. '```' → logprob: -9.507478713989258
    7. '   ' → logprob: -10.007478713989258
    8. ' else' → logprob: -10.007478713989258
    9. ',' → logprob: -10.257478713989258
    10. '
' → logprob: -11.007478713989258

Token 165: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.46456366777420044
    2. ' elif' → logprob: -1.4645636081695557
    3. '       ' → logprob: -1.9645636081695557
    4. '<|end|>' → logprob: -9.339563369750977
    5. '	elif' → logprob: -10.464563369750977
    6. ' else' → logprob: -10.964563369750977
    7. ')' → logprob: -11.214563369750977
    8. '    ' → logprob: -11.714563369750977
    9. 'else' → logprob: -11.714563369750977
    10. ',' → logprob: -12.089563369750977

Token 166: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18568123877048492
    2. 'i' → logprob: -1.8106812238693237
    3. ' p' → logprob: -5.685681343078613
    4. 'p' → logprob: -6.060681343078613
    5. '   ' → logprob: -9.435681343078613
    6. ' ' → logprob: -9.935681343078613
    7. '	i' → logprob: -11.623181343078613
    8. '0' → logprob: -11.810681343078613
    9. '  ' → logprob: -11.998181343078613
    10. '    ' → logprob: -12.560681343078613

Token 167: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04838215187191963
    2. '<' → logprob: -3.173382043838501
    3. ' ==' → logprob: -5.79838228225708
    4. '==' → logprob: -6.92338228225708
    5. '<p' → logprob: -7.42338228225708
    6. ' <=' → logprob: -7.67338228225708
    7. ' ' → logprob: -8.923381805419922
    8. '<=' → logprob: -9.548381805419922
    9. '   ' → logprob: -11.298381805419922
    10. ')' → logprob: -11.298381805419922

Token 168: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03399546816945076
    2. ' p' → logprob: -3.4089953899383545
    3. 'i' → logprob: -8.158995628356934
    4. ' i' → logprob: -10.283995628356934
    5. ' ' → logprob: -11.033995628356934
    6. '   ' → logprob: -12.908995628356934
    7. '<p' → logprob: -13.158995628356934
    8. 'P' → logprob: -13.596495628356934
    9. '  ' → logprob: -13.658995628356934
    10. '<|end|>' → logprob: -13.783995628356934

Token 169: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.44601109623908997
    2. ':' → logprob: -1.3210110664367676
    3. '           ' → logprob: -3.1960110664367676
    4. '       ' → logprob: -3.3210110664367676
    5. '):
' → logprob: -4.321011066436768
    6. '):' → logprob: -6.446011066436768
    7. ')' → logprob: -8.071011543273926
    8. ' fixed' → logprob: -9.071011543273926
    9. ',' → logprob: -9.196011543273926
    10. '   ' → logprob: -9.196011543273926

Token 170: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4924878478050232
    2. 'fixed' → logprob: -1.492487907409668
    3. ' fixed' → logprob: -2.242487907409668
    4. '           ' → logprob: -2.867487907409668
    5. '```' → logprob: -8.242487907409668
    6. '   ' → logprob: -8.367487907409668
    7. '
' → logprob: -9.367487907409668
    8. ':
' → logprob: -9.492487907409668
    9. '_fixed' → logprob: -9.617487907409668
    10. '.fixed' → logprob: -9.867487907409668

Token 171: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' (adapté à ' fixed') → logprob: -0.0826372504234314
    2. ' fixed' → logprob: -2.707637310028076
    3. '           ' → logprob: -4.457637310028076
    4. '       ' → logprob: -7.332637310028076
    5. '
' → logprob: -8.332636833190918
    6. 'return' → logprob: -10.332636833190918
    7. '               ' → logprob: -10.832636833190918
    8. 'fix' → logprob: -11.082636833190918
    9. '```' → logprob: -11.082636833190918
    10. '_fixed' → logprob: -11.207636833190918

Token 172: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.045823566731997e-05
    2. '.' → logprob: -11.000020027160645
    3. 'append' → logprob: -13.375020027160645
    4. ' .' → logprob: -13.500020027160645
    5. '.add' → logprob: -14.250020027160645
    6. '<|end|>' → logprob: -17.00002098083496
    7. ').' → logprob: -17.12502098083496
    8. '.extend' → logprob: -17.87502098083496
    9. '.setdefault' → logprob: -18.00002098083496
    10. '.Append' → logprob: -18.00002098083496

Token 173: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.3329082429409027
    2. '(i' → logprob: -1.332908272743225
    3. 'p' → logprob: -4.0829081535339355
    4. 'i' → logprob: -6.0829081535339355
    5. '(' → logprob: -8.207908630371094
    6. ' p' → logprob: -11.332908630371094
    7. ' i' → logprob: -11.582908630371094
    8. ' (' → logprob: -11.707908630371094
    9. '(
' → logprob: -12.332908630371094
    10. '   ' → logprob: -13.582908630371094

Token 174: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.025194834917783737
    2. ')' → logprob: -3.7751948833465576
    3. '       ' → logprob: -6.2751946449279785
    4. ')
' → logprob: -10.275195121765137
    5. '   ' → logprob: -11.150195121765137
    6. ' )
' → logprob: -11.275195121765137
    7. ')

' → logprob: -13.775195121765137
    8. '           ' → logprob: -14.275195121765137
    9. ')`
' → logprob: -15.025195121765137
    10. ' )' → logprob: -15.650195121765137

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010512693552300334
    2. 'else' → logprob: -7.251051425933838
    3. ' else' → logprob: -8.12605094909668
    4. 'elif' → logprob: -10.25105094909668
    5. ',' → logprob: -12.87605094909668
    6. ' elif' → logprob: -13.00105094909668
    7. '```' → logprob: -13.12605094909668
    8. '   ' → logprob: -14.25105094909668
    9. ')' → logprob: -14.25105094909668
    10. '<|end|>' → logprob: -14.25105094909668

Token 176: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26022225618362427
    2. 'else' (adapté à ' else') → logprob: -1.8852221965789795
    3. ' else' → logprob: -2.6352221965789795
    4. 'elif' → logprob: -5.260222434997559
    5. ' elif' → logprob: -7.885222434997559
    6. '   ' → logprob: -11.010222434997559
    7. ',' → logprob: -11.510222434997559
    8. '```' → logprob: -12.260222434997559
    9. '	else' → logprob: -12.510222434997559
    10. ')' → logprob: -13.010222434997559

Token 177: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05680982768535614
    2. ':
' → logprob: -3.431809902191162
    3. ':' → logprob: -3.931809902191162
    4. 'to' → logprob: -6.431809902191162
    5. ' to' → logprob: -6.931809902191162
    6. '          ' → logprob: -8.181809425354004
    7. '   ' → logprob: -9.181809425354004
    8. ' :
' → logprob: -9.556809425354004
    9. '       ' → logprob: -10.056809425354004
    10. ' :' → logprob: -10.306809425354004

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8680926561355591
    2. 'to' → logprob: -1.243092656135559
    3. '       ' → logprob: -1.868092656135559
    4. ' to' → logprob: -1.993092656135559
    5. '   ' → logprob: -7.2430925369262695
    6. '          ' → logprob: -9.24309253692627
    7. ' ' → logprob: -9.86809253692627
    8. '
' → logprob: -10.49309253692627
    9. ' ' → logprob: -10.61809253692627
    10. '        ' → logprob: -10.86809253692627

Token 179: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.016326313838362694
    2. ' to' → logprob: -4.141326427459717
    3. '           ' → logprob: -8.516325950622559
    4. '       ' → logprob: -9.891325950622559
    5. '   ' → logprob: -10.391325950622559
    6. '               ' → logprob: -12.641325950622559
    7. '	to' → logprob: -12.641325950622559
    8. ' ' → logprob: -13.516325950622559
    9. '
' → logprob: -14.266325950622559
    10. '.to' → logprob: -14.391325950622559

Token 180: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0029321794863790274
    2. 'right' → logprob: -5.877932071685791
    3. '_left' → logprob: -9.00293254852295
    4. '_r' → logprob: -14.12793254852295
    5. ' right' → logprob: -14.37793254852295
    6. '_' → logprob: -14.50293254852295
    7. 'left' → logprob: -14.62793254852295
    8. '	right' → logprob: -14.62793254852295
    9. 'ight' → logprob: -15.00293254852295
    10. 'Right' → logprob: -15.25293254852295

Token 181: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00017600801947992295
    2. '.' → logprob: -9.000176429748535
    3. 'append' → logprob: -9.875176429748535
    4. ' .' → logprob: -15.000176429748535
    5. '.Append' → logprob: -15.250176429748535
    6. 'Append' → logprob: -16.12517547607422
    7. ').' → logprob: -16.75017547607422
    8. ' append' → logprob: -16.87517547607422
    9. '.app' → logprob: -16.87517547607422
    10. '<|end|>' → logprob: -16.87517547607422

Token 182: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0002481078845448792
    2. '(' → logprob: -8.375247955322266
    3. '(i' → logprob: -11.375247955322266
    4. ' (' → logprob: -12.375247955322266
    5. 'p' → logprob: -14.375247955322266
    6. '(P' → logprob: -14.625247955322266
    7. ' p' → logprob: -14.750247955322266
    8. '(
' → logprob: -15.250247955322266
    9. '<p' → logprob: -17.500247955322266
    10. '   ' → logprob: -17.875247955322266

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022010602697264403
    2. ')
' → logprob: -8.62522029876709
    3. ' )' → logprob: -10.87522029876709
    4. '       ' → logprob: -11.75022029876709
    5. '   ' → logprob: -12.25022029876709
    6. '<|end|>' → logprob: -12.25022029876709
    7. ')p' → logprob: -13.50022029876709
    8. ')}' → logprob: -14.87522029876709
    9. '`)' → logprob: -15.12522029876709
    10. '')' → logprob: -15.25022029876709

Token 184: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10082191973924637
    2. ' if' → logprob: -2.9758219718933105
    3. ' return' → logprob: -4.4758219718933105
    4. ' for' → logprob: -4.6008219718933105
    5. ' to' → logprob: -4.6008219718933105
    6. ' max' → logprob: -5.9758219718933105
    7. ' left' → logprob: -6.7258219718933105
    8. 'if' (adapté à ' if') → logprob: -6.8508219718933105
    9. '    
' → logprob: -6.9758219718933105
    10. 'return' → logprob: -6.9758219718933105

Token 186: ' fixed' (ID: 13213)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11549866944551468
    2. ' len' → logprob: -2.7404987812042236
    3. ' fixed' → logprob: -3.6154987812042236
    4. 'len' → logprob: -4.8654985427856445
    5. 'not' → logprob: -5.3654985427856445
    6. ' to' → logprob: -5.9904985427856445
    7. 'fixed' → logprob: -7.1154985427856445
    8. ' ' → logprob: -7.3654985427856445
    9. 'to' → logprob: -7.9904985427856445
    10. ' check' → logprob: -8.240498542785645

Token 187: ' !=' (ID: 1666)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11577858775854111
    2. '):' → logprob: -2.740778684616089
    3. '==' → logprob: -3.490778684616089
    4. ')' → logprob: -5.11577844619751
    5. ' ==' → logprob: -5.49077844619751
    6. ' and' → logprob: -6.11577844619751
    7. 'and' → logprob: -8.115778923034668
    8. ')==' → logprob: -8.365778923034668
    9. '>:' → logprob: -8.490778923034668
    10. '<|end|>' → logprob: -8.615778923034668

Token 188: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07718594372272491
    2. ' []' → logprob: -2.952185869216919
    3. 'to' → logprob: -4.827186107635498
    4. 'sorted' → logprob: -4.952186107635498
    5. ' sorted' → logprob: -5.952186107635498
    6. '[to' → logprob: -6.077186107635498
    7. '[' → logprob: -7.077186107635498
    8. ' to' → logprob: -7.202186107635498
    9. ' [' → logprob: -8.20218563079834
    10. '[]}' → logprob: -10.07718563079834

Token 189: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.010279756970703602
    2. '(sorted' → logprob: -4.635279655456543
    3. '(P' → logprob: -7.760279655456543
    4. '(' → logprob: -9.385279655456543
    5. 'range' → logprob: -13.010279655456543
    6. '(f' → logprob: -13.385279655456543
    7. '(sort' → logprob: -13.885279655456543
    8. '((' → logprob: -14.010279655456543
    9. 'sorted' → logprob: -14.010279655456543
    10. '(re' → logprob: -14.260279655456543

Token 190: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00030817187507636845
    2. '(to' → logprob: -8.2503080368042
    3. '(' → logprob: -11.1253080368042
    4. '(left' → logprob: -11.7503080368042
    5. '(len' → logprob: -12.1253080368042
    6. '(min' → logprob: -12.2503080368042
    7. '(P' → logprob: -12.3753080368042
    8. '(f' → logprob: -12.5003080368042
    9. 'L' → logprob: -13.0003080368042
    10. '(F' → logprob: -13.6253080368042

Token 191: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002767094410955906
    2. ' ,' → logprob: -8.375276565551758
    3. ',L' → logprob: -10.375276565551758
    4. ',R' → logprob: -11.875276565551758
    5. ',
' → logprob: -12.375276565551758
    6. '   ' → logprob: -13.625276565551758
    7. ',N' → logprob: -15.000276565551758
    8. '           ' → logprob: -15.250276565551758
    9. 'L' → logprob: -15.375276565551758
    10. '+' → logprob: -15.375276565551758

Token 192: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3826645314693451
    2. '(len' → logprob: -1.8826645612716675
    3. '1' → logprob: -2.007664442062378
    4. ' len' → logprob: -3.882664442062378
    5. '(' → logprob: -5.882664680480957
    6. '0' → logprob: -6.257664680480957
    7. ' ' → logprob: -6.507664680480957
    8. '(L' → logprob: -6.757664680480957
    9. ' (' → logprob: -7.007664680480957
    10. '(R' → logprob: -7.257664680480957

Token 193: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3241463005542755
    2. '(len' → logprob: -1.8241462707519531
    3. '1' → logprob: -2.324146270751953
    4. '0' → logprob: -4.699146270751953
    5. 'to' → logprob: -6.324146270751953
    6. '(' → logprob: -6.324146270751953
    7. '(R' → logprob: -6.574146270751953
    8. '(L' → logprob: -7.074146270751953
    9. 'right' → logprob: -7.199146270751953
    10. 'R' → logprob: -7.449146270751953

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011773703154176474
    2. ' ,' → logprob: -6.8761773109436035
    3. ',R' → logprob: -9.751177787780762
    4. ',L' → logprob: -9.751177787780762
    5. '   ' → logprob: -11.126177787780762
    6. ',
' → logprob: -13.001177787780762
    7. '       ' → logprob: -13.251177787780762
    8. 'L' → logprob: -13.501177787780762
    9. ',len' → logprob: -13.501177787780762
    10. '，' → logprob: -13.626177787780762

Token 195: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0185367651283741
    2. ' R' → logprob: -4.018536567687988
    3. '   ' → logprob: -8.018536567687988
    4. ' ' → logprob: -11.893536567687988
    5. '	R' → logprob: -12.143536567687988
    6. 'right' → logprob: -12.268536567687988
    7. '  ' → logprob: -12.393536567687988
    8. '    ' → logprob: -12.518536567687988
    9. '
' → logprob: -12.518536567687988
    10. 'L' → logprob: -12.706036567687988

Token 196: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0789119303226471
    2. ' +' → logprob: -2.5789120197296143
    3. '))' → logprob: -12.203911781311035
    4. '+
' → logprob: -12.828911781311035
    5. '```' → logprob: -13.078911781311035
    6. ')+' → logprob: -13.203911781311035
    7. '[' → logprob: -13.453911781311035
    8. '
' → logprob: -13.453911781311035
    9. '   ' → logprob: -13.703911781311035
    10. ',' → logprob: -13.828911781311035

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025583035312592983
    2. '2' → logprob: -6.00255823135376
    3. ' ' → logprob: -9.502558708190918
    4. '+' → logprob: -12.877558708190918
    5. '
' → logprob: -13.002558708190918
    6. '   ' → logprob: -13.940058708190918
    7. '```' → logprob: -14.315058708190918
    8. '(' → logprob: -15.752558708190918
    9. '``' → logprob: -15.752558708190918
    10. '

' → logprob: -16.1900577545166

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005668530357070267
    2. 'R' → logprob: -7.6255669593811035
    3. '(R' → logprob: -10.875566482543945
    4. ' ' → logprob: -11.375566482543945
    5. 'right' → logprob: -11.500566482543945
    6. '2' → logprob: -11.500566482543945
    7. '(L' → logprob: -12.125566482543945
    8. '(' → logprob: -12.375566482543945
    9. 'L' → logprob: -12.375566482543945
    10. '+' → logprob: -13.000566482543945

Token 199: ',' (ID: 11)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.09932338446378708
    2. ')):
' → logprob: -2.474323272705078
    3. '))' → logprob: -4.599323272705078
    4. ')):
' → logprob: -8.599323272705078
    5. '   ' → logprob: -10.099323272705078
    6. '       ' → logprob: -11.474323272705078
    7. ' ))' → logprob: -11.474323272705078
    8. '):' → logprob: -11.974323272705078
    9. ':' → logprob: -11.974323272705078
    10. ' ' → logprob: -12.974323272705078

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38301748037338257
    2. ')):
' → logprob: -1.7580175399780273
    3. ')):' → logprob: -2.5080175399780273
    4. '))' → logprob: -3.2580175399780273
    5. ' ' → logprob: -3.8830175399780273
    6. ' ))' → logprob: -6.258017539978027
    7. '   ' → logprob: -6.633017539978027
    8. '2' → logprob: -7.508017539978027
    9. ')):
' → logprob: -7.758017539978027
    10. '  ' → logprob: -8.945517539978027

Token 201: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026137258857488632
    2. '))' → logprob: -4.651137351989746
    3. ')):' → logprob: -4.901137351989746
    4. ')):
' → logprob: -5.026137351989746
    5. ' ' → logprob: -6.276137351989746
    6. ' ))' → logprob: -8.776137351989746
    7. '   ' → logprob: -10.026137351989746
    8. '2' → logprob: -10.276137351989746
    9. '  ' → logprob: -10.401137351989746
    10. ')):
' → logprob: -10.401137351989746

Token 202: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.1917295604944229
    2. '))' → logprob: -2.4417295455932617
    3. ')):
' → logprob: -2.4417295455932617
    4. ')):
' → logprob: -8.441729545593262
    5. ' ))' → logprob: -9.441729545593262
    6. '   ' → logprob: -10.191729545593262
    7. '()))' → logprob: -10.816729545593262
    8. ':' → logprob: -11.316729545593262
    9. '[' → logprob: -11.316729545593262
    10. '):' → logprob: -11.441729545593262

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017158392816781998
    2. ':' → logprob: -4.642158508300781
    3. ':
' → logprob: -5.017158508300781
    4. ':return' → logprob: -8.267158508300781
    5. ' :
' → logprob: -9.267158508300781
    6. ' :' → logprob: -9.517158508300781
    7. ' or' → logprob: -9.767158508300781
    8. '):
' → logprob: -10.017158508300781
    9. '   ' → logprob: -10.142158508300781
    10. ' return' → logprob: -10.142158508300781

Token 204: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.26584532856941223
    2. '       ' → logprob: -1.5158452987670898
    3. 'return' (adapté à ' return') → logprob: -4.39084529876709
    4. '   ' → logprob: -6.89084529876709
    5. '
' → logprob: -8.14084529876709
    6. '	return' → logprob: -10.51584529876709
    7. ' 
' → logprob: -10.64084529876709
    8. ' ' → logprob: -11.14084529876709
    9. '    ' → logprob: -11.26584529876709
    10. '        
' → logprob: -11.64084529876709

Token 205: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.10021152347326279
    2. 'False' → logprob: -2.3502116203308105
    3. '(False' → logprob: -12.600211143493652
    4. ' ' → logprob: -14.475211143493652
    5. ' True' → logprob: -14.725211143493652
    6. ' None' → logprob: -15.100211143493652
    7. '=False' → logprob: -16.60021209716797
    8. '_false' → logprob: -16.72521209716797
    9. 'None' → logprob: -17.10021209716797
    10. ' ' → logprob: -17.22521209716797

Token 206: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03668443486094475
    2. '<|end|>' → logprob: -3.661684513092041
    3. ')' → logprob: -5.536684513092041
    4. '    
' → logprob: -5.661684513092041
    5. '
' → logprob: -6.661684513092041
    6. '    ' → logprob: -7.786684513092041
    7. ' 
' → logprob: -8.036684036254883
    8. '  ' → logprob: -8.661684036254883
    9. ' if' → logprob: -8.786684036254883
    10. ' ' → logprob: -9.286684036254883

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022829007357358932
    2. '<|end|>' → logprob: -4.272829055786133
    3. ')' → logprob: -6.022829055786133
    4. ' if' → logprob: -6.147829055786133
    5. '    
' → logprob: -7.147829055786133
    6. ' ' → logprob: -7.397829055786133
    7. '    ' → logprob: -7.522829055786133
    8. '
' → logprob: -7.647829055786133
    9. '  ' → logprob: -7.897829055786133
    10. ' 
' → logprob: -8.022829055786133

Token 208: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0709824338555336
    2. ' if' → logprob: -2.9459824562072754
    3. ' for' → logprob: -5.570982456207275
    4. '<|end|>' → logprob: -5.570982456207275
    5. 'if' (adapté à ' if') → logprob: -6.695982456207275
    6. ' to' → logprob: -6.695982456207275
    7. ' return' → logprob: -6.820982456207275
    8. '    ' → logprob: -6.945982456207275
    9. ' ' → logprob: -7.070982456207275
    10. ' 
' → logprob: -7.445982456207275

Token 209: ' any' (ID: 1062)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7095405459403992
    2. ' check' → logprob: -1.584540605545044
    3. ' len' → logprob: -1.959540605545044
    4. ' to' → logprob: -2.084540605545044
    5. 'to' → logprob: -4.584540367126465
    6. 'len' → logprob: -4.709540367126465
    7. 'check' → logprob: -5.209540367126465
    8. ' ' → logprob: -5.834540367126465
    9. ' max' → logprob: -6.084540367126465
    10. 'not' → logprob: -6.209540367126465

Token 210: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.19216521084308624
    2. '(to' → logprob: -2.5671651363372803
    3. '(i' → logprob: -3.3171651363372803
    4. '(p' → logprob: -3.6921651363372803
    5. '(' → logprob: -4.567165374755859
    6. '(t' → logprob: -4.817165374755859
    7. '(not' → logprob: -5.192165374755859
    8. '(lambda' → logprob: -5.317165374755859
    9. '(len' → logprob: -6.192165374755859
    10. '((' → logprob: -6.192165374755859

Token 211: ' >' (ID: 1424)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7702323794364929
    2. ' >' → logprob: -1.3952324390411377
    3. ' <' → logprob: -1.6452324390411377
    4. ' not' → logprob: -3.1452324390411377
    5. 'in' → logprob: -3.7702324390411377
    6. '>' → logprob: -4.520232200622559
    7. '<' → logprob: -5.145232200622559
    8. ' ' → logprob: -5.270232200622559
    9. ' for' → logprob: -5.770232200622559
    10. 'not' → logprob: -6.145232200622559

Token 212: ' y' (ID: 342)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.0161216259002686
    2. 'R' → logprob: -2.1411216259002686
    3. 'y' → logprob: -2.2661216259002686
    4. ' L' → logprob: -2.3911216259002686
    5. ' y' → logprob: -2.8911216259002686
    6. 'left' → logprob: -2.8911216259002686
    7. ' left' → logprob: -3.2661216259002686
    8. 'to' → logprob: -3.3911216259002686
    9. ' R' → logprob: -3.6411216259002686
    10. 'right' → logprob: -3.6411216259002686

Token 213: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02635069750249386
    2. 'for' → logprob: -3.651350736618042
    3. ' ' → logprob: -10.526350975036621
    4. ' in' → logprob: -11.651350975036621
    5. '	for' → logprob: -12.151350975036621
    6. '   ' → logprob: -12.276350975036621
    7. '  ' → logprob: -13.401350975036621
    8. '    ' → logprob: -13.651350975036621
    9. '(' → logprob: -14.651350975036621
    10. '()' → logprob: -14.901350975036621

Token 214: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01842406578361988
    2. 'x' → logprob: -4.018424034118652
    3. ' to' → logprob: -9.018424034118652
    4. 'to' → logprob: -10.268424034118652
    5. ' range' → logprob: -10.393424034118652
    6. ' ' → logprob: -10.768424034118652
    7. ' in' → logprob: -11.143424034118652
    8. ' i' → logprob: -11.518424034118652
    9. ',' → logprob: -11.643424034118652
    10. ' zip' → logprob: -12.018424034118652

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15752267837524414
    2. ' in' → logprob: -2.032522678375244
    3. 'in' → logprob: -4.407522678375244
    4. ',y' → logprob: -6.157522678375244
    5. ' ,' → logprob: -8.157522201538086
    6. ',x' → logprob: -10.032522201538086
    7. ',to' → logprob: -10.157522201538086
    8. 'to' → logprob: -10.532522201538086
    9. ' ' → logprob: -11.532522201538086
    10. ',in' → logprob: -11.782522201538086

Token 216: ' y' (ID: 342)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6990573406219482
    2. 'to' → logprob: -0.6990573406219482
    3. ' zip' → logprob: -6.199057579040527
    4. ' range' → logprob: -6.449057579040527
    5. ' in' → logprob: -6.824057579040527
    6. 'range' → logprob: -7.449057579040527
    7. 'zip' → logprob: -8.074057579040527
    8. ' y' → logprob: -9.699057579040527
    9. 'y' → logprob: -9.949057579040527
    10. '(to' → logprob: -9.949057579040527

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35210371017456055
    2. ',' → logprob: -1.8521037101745605
    3. 'in' → logprob: -1.9771037101745605
    4. 'to' → logprob: -7.3521037101745605
    5. ',to' → logprob: -7.8521037101745605
    6. ' ,' → logprob: -8.852104187011719
    7. ' ' → logprob: -9.227104187011719
    8. '  ' → logprob: -9.852104187011719
    9. ' to' → logprob: -10.852104187011719
    10. '   ' → logprob: -10.852104187011719

Token 218: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.25594013929367065
    2. 'to' → logprob: -2.5059401988983154
    3. 'zip' → logprob: -2.6309401988983154
    4. ' to' → logprob: -2.6309401988983154
    5. ' ' → logprob: -10.380940437316895
    6. '(to' → logprob: -10.505940437316895
    7. ' range' → logprob: -10.505940437316895
    8. 'range' → logprob: -10.630940437316895
    9. '(zip' → logprob: -10.880940437316895
    10. ' reversed' → logprob: -11.255940437316895

Token 219: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.00039135036058723927
    2. '(sorted' → logprob: -8.250391006469727
    3. 'to' → logprob: -9.250391006469727
    4. '(' → logprob: -11.000391006469727
    5. '(f' → logprob: -11.500391006469727
    6. '   ' → logprob: -12.375391006469727
    7. '    ' → logprob: -14.750391006469727
    8. '(To' → logprob: -14.875391006469727
    9. ' to' → logprob: -15.375391006469727
    10. '(left' → logprob: -15.500391006469727

Token 220: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.00040004486800171435
    2. '_right' → logprob: -7.875400066375732
    3. 'left' → logprob: -10.875399589538574
    4. '_le' → logprob: -14.500399589538574
    5. ' _' → logprob: -15.875399589538574
    6. '_' → logprob: -16.50040054321289
    7. '_LEFT' → logprob: -17.12540054321289
    8. '```' → logprob: -17.12540054321289
    9. '   ' → logprob: -17.50040054321289
    10. 'right' → logprob: -17.75040054321289

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008348815608769655
    2. ' ,' → logprob: -7.875834941864014
    3. ',to' → logprob: -7.875834941864014
    4. ',y' → logprob: -9.625834465026855
    5. ',right' → logprob: -12.000834465026855
    6. '[:-' → logprob: -14.375834465026855
    7. 'to' → logprob: -14.750834465026855
    8. '(),' → logprob: -14.750834465026855
    9. '   ' → logprob: -15.000834465026855
    10. ',x' → logprob: -15.125834465026855

Token 222: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.08011706173419952
    2. ' to' → logprob: -2.5801169872283936
    3. '   ' → logprob: -7.705117225646973
    4. '    ' → logprob: -8.205117225646973
    5. ' ' → logprob: -8.830117225646973
    6. '        ' → logprob: -9.455117225646973
    7. '  ' → logprob: -9.455117225646973
    8. '       ' → logprob: -10.330117225646973
    9. '          ' → logprob: -10.455117225646973
    10. '            ' → logprob: -10.580117225646973

Token 223: '_left' (ID: 22189)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.815456211566925
    2. 'left' → logprob: -0.815456211566925
    3. '_left' → logprob: -2.8154561519622803
    4. '_right' → logprob: -2.9404561519622803
    5. 'eft' → logprob: -6.065456390380859
    6. 'ight' → logprob: -10.44045639038086
    7. 'to' → logprob: -11.31545639038086
    8. 'Right' → logprob: -11.94045639038086
    9. '
' → logprob: -12.69045639038086
    10. '```' → logprob: -12.69045639038086

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00025073037249967456
    2. '))' → logprob: -8.625250816345215
    3. ')):
' → logprob: -10.250250816345215
    4. ')):' → logprob: -11.125250816345215
    5. '[:-' → logprob: -11.250250816345215
    6. '   ' → logprob: -13.250250816345215
    7. ',' → logprob: -13.625250816345215
    8. ')))' → logprob: -14.000250816345215
    9. ')' → logprob: -14.250250816345215
    10. '[:' → logprob: -14.375250816345215

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '```' → logprob: -17.5
    5. '
' → logprob: -17.875
    6. '  ' → logprob: -19.75
    7. '[' → logprob: -19.875
    8. '...' → logprob: -20.0
    9. '::-' → logprob: -20.0
    10. '2' → logprob: -20.0

Token 226: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036810929304920137
    2. ':]' → logprob: -8.500368118286133
    3. ']))' → logprob: -9.250368118286133
    4. ' :' → logprob: -10.125368118286133
    5. '])):
' → logprob: -11.000368118286133
    6. '():' → logprob: -12.500368118286133
    7. '']))' → logprob: -13.250368118286133
    8. '[' → logprob: -14.125368118286133
    9. '):' → logprob: -14.125368118286133
    10. ':-' → logprob: -14.125368118286133

Token 227: '])):
' (ID: 145266)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.2991514503955841
    2. ')):' → logprob: -1.5491514205932617
    3. '))' → logprob: -3.1741514205932617
    4. ' ))' → logprob: -6.299151420593262
    5. ')):
' → logprob: -7.174151420593262
    6. '])):
' → logprob: -7.174151420593262
    7. ' ' → logprob: -7.299151420593262
    8. ')' → logprob: -9.299151420593262
    9. '()))' → logprob: -9.799151420593262
    10. '')):
' → logprob: -10.424151420593262

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1540166288614273
    2. ':
' → logprob: -2.2790167331695557
    3. '):
' → logprob: -4.529016494750977
    4. ' or' → logprob: -4.529016494750977
    5. '   ' → logprob: -4.904016494750977
    6. ':' → logprob: -4.904016494750977
    7. ':return' → logprob: -6.904016494750977
    8. ' :
' → logprob: -7.029016494750977
    9. ' return' → logprob: -7.904016494750977
    10. ')' → logprob: -7.904016494750977

Token 229: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6037079095840454
    2. '       ' → logprob: -0.8537079095840454
    3. '   ' → logprob: -4.478707790374756
    4. ' ' → logprob: -4.478707790374756
    5. '    ' → logprob: -5.978707790374756
    6. 'return' (adapté à ' return') → logprob: -7.103707790374756
    7. '           ' → logprob: -7.228707790374756
    8. ' ' → logprob: -8.228708267211914
    9. '        ' → logprob: -9.103708267211914
    10. '  ' → logprob: -9.728708267211914

Token 230: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.7697225252486533e-06
    2. ' False' → logprob: -12.500003814697266
    3. 'True' → logprob: -18.375003814697266
    4. '(False' → logprob: -21.500003814697266
    5. '_false' → logprob: -23.875003814697266
    6. '=False' → logprob: -24.000003814697266
    7. 'F' → logprob: -24.250003814697266
    8. 'false' → logprob: -24.750003814697266
    9. 'None' → logprob: -24.750003814697266
    10. 'Falsy' → logprob: -24.750003814697266

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006564391660504043
    2. '<|end|>' → logprob: -7.625656604766846
    3. '
' → logprob: -9.625656127929688
    4. '    
' → logprob: -10.375656127929688
    5. ')' → logprob: -10.625656127929688
    6. ' if' → logprob: -11.250656127929688
    7. ')
' → logprob: -11.625656127929688
    8. '  ' → logprob: -11.750656127929688
    9. '       ' → logprob: -12.625656127929688
    10. ',' → logprob: -13.000656127929688

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.660315895918757e-05
    2. '
' → logprob: -9.875076293945312
    3. '<|end|>' → logprob: -11.000076293945312
    4. '    
' → logprob: -13.125076293945312
    5. ' if' → logprob: -13.250076293945312
    6. ')' → logprob: -13.750076293945312
    7. '       ' → logprob: -13.875076293945312
    8. '<|end|>' → logprob: -14.625076293945312
    9. '  ' → logprob: -14.750076293945312
    10. 'if' → logprob: -14.875076293945312

Token 233: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1888347864151001
    2. ' if' → logprob: -2.1888346672058105
    3. 'if' (adapté à ' if') → logprob: -2.8138346672058105
    4. '
' → logprob: -10.938835144042969
    5. ' ' → logprob: -11.438835144042969
    6. '  ' → logprob: -11.813835144042969
    7. ' return' → logprob: -11.813835144042969
    8. 'return' → logprob: -12.188835144042969
    9. '```' → logprob: -13.563835144042969
    10. ' for' → logprob: -13.688835144042969

Token 234: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.07007492333650589
    2. 'any' → logprob: -2.695075035095215
    3. ' ' → logprob: -10.320075035095215
    4. ' not' → logprob: -10.445075035095215
    5. '   ' → logprob: -11.070075035095215
    6. ' to' → logprob: -11.195075035095215
    7. '  ' → logprob: -11.820075035095215
    8. 'len' → logprob: -11.820075035095215
    9. '(any' → logprob: -11.820075035095215
    10. ' len' → logprob: -12.320075035095215

Token 235: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.010813640430569649
    2. '(y' → logprob: -4.6358137130737305
    3. '(' → logprob: -6.8858137130737305
    4. '(
' → logprob: -11.13581371307373
    5. '(z' → logprob: -11.76081371307373
    6. ' (' → logprob: -13.01081371307373
    7. '(p' → logprob: -13.26081371307373
    8. 'x' → logprob: -13.38581371307373
    9. '(not' → logprob: -13.51081371307373
    10. '(to' → logprob: -13.88581371307373

Token 236: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31450986862182617
    2. ' >' → logprob: -1.3145098686218262
    3. '<' → logprob: -7.314509868621826
    4. '>' → logprob: -7.564509868621826
    5. ' ' → logprob: -9.814510345458984
    6. '   ' → logprob: -13.064510345458984
    7. '  ' → logprob: -13.439510345458984
    8. ' >=' → logprob: -13.814510345458984
    9. ' ' → logprob: -14.439510345458984
    10. '[' → logprob: -14.877010345458984

Token 237: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.007620945107191801
    2. 'y' → logprob: -4.882620811462402
    3. ' ' → logprob: -12.132620811462402
    4. ' to' → logprob: -12.382620811462402
    5. ' x' → logprob: -13.757620811462402
    6. '	y' → logprob: -13.882620811462402
    7. '    ' → logprob: -14.507620811462402
    8. '(y' → logprob: -14.882620811462402
    9. ''y' → logprob: -14.882620811462402
    10. 'to' → logprob: -15.257620811462402

Token 238: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.003603990189731121
    2. 'for' → logprob: -5.628603935241699
    3. '	for' → logprob: -13.8786039352417
    4. ')' → logprob: -14.2536039352417
    5. '   ' → logprob: -14.6286039352417
    6. ' ' → logprob: -14.6286039352417
    7. ' in' → logprob: -14.7536039352417
    8. ',' → logprob: -15.1286039352417
    9. '<|end|>' → logprob: -15.8786039352417
    10. '[' → logprob: -16.003604888916016

Token 239: ' x' (ID: 1215)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0009424308082088828
    2. 'to' → logprob: -7.000942230224609
    3. '(to' → logprob: -10.75094223022461
    4. ' ' → logprob: -12.87594223022461
    5. '  ' → logprob: -13.12594223022461
    6. '[to' → logprob: -13.75094223022461
    7. '   ' → logprob: -14.00094223022461
    8. ' right' → logprob: -14.25094223022461
    9. '	to' → logprob: -14.62594223022461
    10. ' x' → logprob: -14.87594223022461

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02679935283958912
    2. ' in' → logprob: -3.901799440383911
    3. 'to' → logprob: -6.026799201965332
    4. ' ,' → logprob: -6.276799201965332
    5. 'in' → logprob: -7.276799201965332
    6. ',to' → logprob: -7.651799201965332
    7. '_,' → logprob: -7.776799201965332
    8. ' to' → logprob: -8.276799201965332
    9. ' ' → logprob: -11.151799201965332
    10. '[' → logprob: -11.276799201965332

Token 241: ' y' (ID: 342)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10022424906492233
    2. 'to' → logprob: -2.350224256515503
    3. '(to' → logprob: -11.850224494934082
    4. '[to' → logprob: -12.225224494934082
    5. ' ' → logprob: -13.350224494934082
    6. '	to' → logprob: -14.225224494934082
    7. '   ' → logprob: -14.912724494934082
    8. '```' → logprob: -15.162724494934082
    9. '.to' → logprob: -15.287724494934082
    10. '  ' → logprob: -15.287724494934082

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.047022607177495956
    2. 'in' → logprob: -3.172022581100464
    3. ',' → logprob: -5.547022819519043
    4. 'to' → logprob: -10.297022819519043
    5. '[' → logprob: -10.547022819519043
    6. ' ' → logprob: -10.922022819519043
    7. '[:-' → logprob: -11.172022819519043
    8. '   ' → logprob: -12.672022819519043
    9. 'for' → logprob: -12.922022819519043
    10. '  ' → logprob: -12.922022819519043

Token 243: ' zip' (ID: 16216)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7399203181266785
    2. 'to' → logprob: -0.8649203181266785
    3. ' zip' → logprob: -2.4899203777313232
    4. 'zip' → logprob: -3.9899203777313232
    5. '(to' → logprob: -8.864920616149902
    6. ' ' → logprob: -10.364920616149902
    7. ' range' → logprob: -10.489920616149902
    8. '[to' → logprob: -10.739920616149902
    9. '   ' → logprob: -10.864920616149902
    10. '
' → logprob: -10.864920616149902

Token 244: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -4.4849443838757e-06
    2. 'to' → logprob: -13.000004768371582
    3. '(' → logprob: -13.125004768371582
    4. ' (' → logprob: -17.125003814697266
    5. '(To' → logprob: -17.375003814697266
    6. '(
' → logprob: -18.000003814697266
    7. '(t' → logprob: -18.125003814697266
    8. ' to' → logprob: -18.250003814697266
    9. '(right' → logprob: -18.500003814697266
    10. '[to' → logprob: -18.625003814697266

Token 245: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.047012027353048325
    2. 'right' → logprob: -3.4220120906829834
    3. '_left' → logprob: -4.547011852264404
    4. 'to' → logprob: -6.172011852264404
    5. 'left' → logprob: -7.547011852264404
    6. 'Right' → logprob: -10.172012329101562
    7. '_to' → logprob: -11.422012329101562
    8. '_RIGHT' → logprob: -12.922012329101562
    9. ' right' → logprob: -13.047012329101562
    10. '右' → logprob: -13.672012329101562

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015991552209015936
    2. ' ,' → logprob: -8.875160217285156
    3. ',to' → logprob: -11.875160217285156
    4. '[' → logprob: -12.625160217285156
    5. ',x' → logprob: -12.750160217285156
    6. '[:-' → logprob: -12.875160217285156
    7. ',p' → logprob: -13.625160217285156
    8. 'to' → logprob: -13.750160217285156
    9. '[::-' → logprob: -14.750160217285156
    10. ',right' → logprob: -15.250160217285156

Token 247: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.04860712215304375
    2. ' to' → logprob: -3.048607110977173
    3. '(to' → logprob: -11.798606872558594
    4. '   ' → logprob: -12.673606872558594
    5. ' ' → logprob: -12.923606872558594
    6. '	to' → logprob: -13.173606872558594
    7. '[to' → logprob: -13.298606872558594
    8. 'right' → logprob: -14.173606872558594
    9. '
' → logprob: -14.298606872558594
    10. '  ' → logprob: -15.173606872558594

Token 248: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0004517646157182753
    2. 'right' → logprob: -8.250452041625977
    3. 'to' → logprob: -8.875452041625977
    4. '_left' → logprob: -10.250452041625977
    5. 'Right' → logprob: -11.500452041625977
    6. '_RIGHT' → logprob: -13.000452041625977
    7. '_Right' → logprob: -14.250452041625977
    8. '
' → logprob: -15.375452041625977
    9. '(to' → logprob: -15.625452041625977
    10. '[right' → logprob: -15.625452041625977

Token 249: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002133960137143731
    2. '[' → logprob: -6.252133846282959
    3. '[:-' → logprob: -8.877134323120117
    4. ' ,' → logprob: -10.127134323120117
    5. '   ' → logprob: -11.127134323120117
    6. ' ' → logprob: -12.877134323120117
    7. ',[' → logprob: -13.127134323120117
    8. ',
' → logprob: -13.377134323120117
    9. '(' → logprob: -13.877134323120117
    10. '1' → logprob: -14.252134323120117

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001968958182260394
    2. ':-' → logprob: -6.751968860626221
    3. '0' → logprob: -7.876968860626221
    4. '[:-' → logprob: -8.751969337463379
    5. ' ' → logprob: -9.501969337463379
    6. ' :-' → logprob: -9.626969337463379
    7. ':' → logprob: -10.251969337463379
    8. '   ' → logprob: -10.376969337463379
    9. ',' → logprob: -10.876969337463379
    10. '
' → logprob: -11.501969337463379

Token 251: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019030878320336342
    2. ':]' → logprob: -9.125190734863281
    3. ']))' → logprob: -10.500190734863281
    4. '[' → logprob: -10.875190734863281
    5. '])):
' → logprob: -11.750190734863281
    6. '[:-' → logprob: -12.000190734863281
    7. '']))' → logprob: -12.125190734863281
    8. '   ' → logprob: -13.000190734863281
    9. ')):' → logprob: -13.000190734863281
    10. '```' → logprob: -13.375190734863281

Token 252: '])):
' (ID: 145266)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.6004951000213623
    2. ')):
' → logprob: -0.8504951000213623
    3. '))' → logprob: -3.8504951000213623
    4. '()))' → logprob: -6.850495338439941
    5. ')):
' → logprob: -7.225495338439941
    6. '[' → logprob: -7.725495338439941
    7. '')):
' → logprob: -8.475495338439941
    8. '()' → logprob: -8.725495338439941
    9. '])):
' → logprob: -9.225495338439941
    10. '[:-' → logprob: -9.475495338439941

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002916022902354598
    2. ':
' → logprob: -6.627915859222412
    3. '):
' → logprob: -6.752915859222412
    4. '():
' → logprob: -8.62791633605957
    5. '   ' → logprob: -9.62791633605957
    6. ':' → logprob: -9.87791633605957
    7. ')' → logprob: -9.87791633605957
    8. '):' → logprob: -11.12791633605957
    9. 'return' → logprob: -12.12791633605957
    10. ' return' → logprob: -12.25291633605957

Token 254: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.33016613125801086
    2. 'return' (adapté à ' return') → logprob: -1.3301661014556885
    3. 'False' → logprob: -4.580166339874268
    4. ' False' → logprob: -5.830166339874268
    5. '       ' → logprob: -5.955166339874268
    6. '   ' → logprob: -7.455166339874268
    7. '           ' → logprob: -8.70516586303711
    8. 'True' → logprob: -9.33016586303711
    9. ' True' → logprob: -9.83016586303711
    10. ' ' → logprob: -10.45516586303711

Token 255: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.000553151941858232
    2. ' False' → logprob: -7.500553131103516
    3. '(False' → logprob: -16.000553131103516
    4. 'True' → logprob: -18.375553131103516
    5. 'false' → logprob: -20.750553131103516
    6. '_false' → logprob: -21.125553131103516
    7. '.False' → logprob: -21.500553131103516
    8. '=False' → logprob: -21.875553131103516
    9. 'F' → logprob: -22.125553131103516
    10. 'Fa' → logprob: -22.500553131103516

Token 256: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001537169300718233
    2. '    
' → logprob: -9.375153541564941
    3. 'return' → logprob: -10.125153541564941
    4. '
' → logprob: -10.625153541564941
    5. ' return' → logprob: -13.125153541564941
    6. '<|end|>' → logprob: -14.125153541564941
    7. '       ' → logprob: -14.375153541564941
    8. '  
' → logprob: -14.750153541564941
    9. '        
' → logprob: -15.000153541564941
    10. '   
' → logprob: -16.125154495239258

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014919086243025959
    2. '    
' → logprob: -9.25014877319336
    3. 'return' → logprob: -10.37514877319336
    4. '<|end|>' → logprob: -11.25014877319336
    5. '
' → logprob: -12.62514877319336
    6. '       ' → logprob: -13.12514877319336
    7. ')' → logprob: -14.12514877319336
    8. '  
' → logprob: -14.25014877319336
    9. '        
' → logprob: -14.37514877319336
    10. ' return' → logprob: -14.50014877319336

Token 258: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06236300989985466
    2. 'return' (adapté à ' return') → logprob: -2.8123629093170166
    3. ' return' → logprob: -7.937363147735596
    4. 'for' → logprob: -10.437362670898438
    5. '    
' → logprob: -12.812362670898438
    6. 'if' → logprob: -13.187362670898438
    7. ' for' → logprob: -13.562362670898438
    8. '
' → logprob: -13.812362670898438
    9. '```' → logprob: -14.812362670898438
    10. '       ' → logprob: -15.062362670898438

Token 259: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004320691339671612
    2. ' True' → logprob: -5.5043206214904785
    3. 'False' → logprob: -8.379321098327637
    4. 'check' → logprob: -11.504321098327637
    5. '(True' → logprob: -13.629321098327637
    6. 'all' → logprob: -14.379321098327637
    7. ' False' → logprob: -15.004321098327637
    8. 'len' → logprob: -15.254321098327637
    9. 'None' → logprob: -15.879321098327637
    10. ' check' → logprob: -16.25432014465332

Token 260: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: 'answer' (ID: 17021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007218142040073872
    2. 'valid' → logprob: -6.007218360900879
    3. 'results' → logprob: -6.757218360900879
    4. 'result' → logprob: -7.007218360900879
    5. 'answer' → logprob: -7.007218360900879
    6. 'ans' → logprob: -7.132218360900879
    7. 'answers' → logprob: -7.757218360900879
    8. 'res' → logprob: -8.132218360900879
    9. 'print' → logprob: -9.132218360900879
    10. 'ok' → logprob: -10.507218360900879

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032196608372032642
    2. '=' → logprob: -5.7532196044921875
    3. '_' → logprob: -10.503219604492188
    4. ' ' → logprob: -12.378219604492188
    5. 's' → logprob: -13.628219604492188
    6. ' +=' → logprob: -14.003219604492188
    7. ',' → logprob: -14.128219604492188
    8. ')' → logprob: -14.128219604492188
    9. '=[]' → logprob: -14.128219604492188
    10. '  ' → logprob: -14.128219604492188

Token 263: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02194865606725216
    2. '[]' → logprob: -4.27194881439209
    3. 'len' → logprob: -5.27194881439209
    4. 'True' → logprob: -6.52194881439209
    5. ' ' → logprob: -7.89694881439209
    6. 'sum' → logprob: -8.64694881439209
    7. '[]
' → logprob: -8.77194881439209
    8. ' []' → logprob: -9.39694881439209
    9. '1' → logprob: -9.52194881439209
    10. '"' → logprob: -9.89694881439209

Token 264: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.2165425568819046
    2. 'Yes' → logprob: -1.9665426015853882
    3. '"' → logprob: -4.091542720794678
    4. ''' → logprob: -4.216542720794678
    5. 'NO' → logprob: -4.716542720794678
    6. 'Possible' → logprob: -5.091542720794678
    7. 'No' → logprob: -6.091542720794678
    8. 'True' → logprob: -6.591542720794678
    9. 'Impossible' → logprob: -7.466542720794678
    10. '1' → logprob: -7.716542720794678

Token 265: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.32080376148223877
    2. 'if' → logprob: -1.9458037614822388
    3. 'print' → logprob: -2.570803642272949
    4. '\n' → logprob: -3.945803642272949
    5. '<|end|>' → logprob: -4.070803642272949
    6. ')' → logprob: -5.445803642272949
    7. 'for' → logprob: -5.570803642272949
    8. '
' → logprob: -5.945803642272949
    9. '')' → logprob: -6.445803642272949
    10. ' if' → logprob: -6.445803642272949

Token 266: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14553624391555786
    2. '
' → logprob: -2.520536184310913
    3. '<|end|>' → logprob: -3.020536184310913
    4. '\n' → logprob: -5.645536422729492
    5. ' for' → logprob: -6.020536422729492
    6. 'print' → logprob: -8.770536422729492
    7. '<|end|>' → logprob: -10.395536422729492
    8. '```' → logprob: -10.895536422729492
    9. 'if' → logprob: -11.020536422729492
    10. ')' → logprob: -11.645536422729492

Token 267: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.1427755057811737
    2. ' all' → logprob: -2.017775535583496
    3. '(all' → logprob: -10.142775535583496
    4. 'check' → logprob: -10.642775535583496
    5. ' ' → logprob: -11.767775535583496
    6. ' check' → logprob: -11.767775535583496
    7. 'len' → logprob: -12.517775535583496
    8. 'interval' → logprob: -12.642775535583496
    9. 'any' → logprob: -13.017775535583496
    10. ' intervals' → logprob: -13.267775535583496

Token 268: '(check' (ID: 40506)
  Prédit: '(check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. 'check' → logprob: -16.0000057220459
    4. '(
' → logprob: -17.8750057220459
    5. '((' → logprob: -18.5000057220459
    6. '(not' → logprob: -18.8750057220459
    7. '(c' → logprob: -19.3750057220459
    8. ' (' → logprob: -19.3750057220459
    9. '(interval' → logprob: -19.7500057220459
    10. '(lambda' → logprob: -20.3750057220459

Token 269: '(L' (ID: 11075)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.6069272756576538
    2. '(*' → logprob: -1.1069272756576538
    3. '(L' → logprob: -2.1069273948669434
    4. '(a' → logprob: -6.731927394866943
    5. '(interval' → logprob: -7.481927394866943
    6. '(left' → logprob: -7.731927394866943
    7. '(i' → logprob: -8.856926918029785
    8. '(s' → logprob: -8.981926918029785
    9. 'L' → logprob: -9.356926918029785
    10. '(start' → logprob: -9.356926918029785

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023948844522237778
    2. ',R' → logprob: -3.773948907852173
    3. 'R' → logprob: -8.273948669433594
    4. '[' → logprob: -8.398948669433594
    5. ' ,' → logprob: -8.773948669433594
    6. ',right' → logprob: -10.773948669433594
    7. ',
' → logprob: -11.523948669433594
    8. '[R' → logprob: -11.648948669433594
    9. ',r' → logprob: -11.898948669433594
    10. ' R' → logprob: -12.398948669433594

Token 271: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -3.214019307051785e-05
    2. ' R' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.125032424926758
    4. ')' → logprob: -16.750032424926758
    5. '```' → logprob: -16.750032424926758
    6. ' ' → logprob: -16.875032424926758
    7. '	R' → logprob: -18.125032424926758
    8. '
' → logprob: -18.625032424926758
    9. '
' → logprob: -19.250032424926758
    10. '  ' → logprob: -19.500032424926758

Token 272: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013101210352033377
    2. ' for' → logprob: -7.251310348510742
    3. 'for' → logprob: -8.251310348510742
    4. '   ' → logprob: -8.376310348510742
    5. ' )' → logprob: -9.751310348510742
    6. '))' → logprob: -11.376310348510742
    7. '(interval' → logprob: -11.876310348510742
    8. ')
' → logprob: -12.501310348510742
    9. 'interval' → logprob: -12.751310348510742
    10. '(*' → logprob: -12.876310348510742

Token 273: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.429583340883255
    2. 'for' → logprob: -1.6795833110809326
    3. '(*' → logprob: -1.9295833110809326
    4. '(L' → logprob: -4.179583549499512
    5. '(interval' → logprob: -6.929583549499512
    6. ')' → logprob: -7.679583549499512
    7. '   ' → logprob: -7.679583549499512
    8. ' in' → logprob: -9.554583549499512
    9. '(' → logprob: -9.804583549499512
    10. '(l' → logprob: -10.054583549499512

Token 274: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.024524925276637077
    2. ' L' → logprob: -3.7745249271392822
    3. '(L' → logprob: -6.899524688720703
    4. ',' → logprob: -8.524524688720703
    5. ' (' → logprob: -10.399524688720703
    6. ',L' → logprob: -11.149524688720703
    7. 'interval' → logprob: -11.899524688720703
    8. '*' → logprob: -12.274524688720703
    9. '_,' → logprob: -12.524524688720703
    10. '   ' → logprob: -13.274524688720703

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024763107649050653
    2. ',R' → logprob: -8.375247955322266
    3. 'R' → logprob: -11.625247955322266
    4. ' ,' → logprob: -11.875247955322266
    5. ',
' → logprob: -14.750247955322266
    6. '_,' → logprob: -16.375247955322266
    7. ' in' → logprob: -16.500247955322266
    8. '```' → logprob: -16.500247955322266
    9. ',right' → logprob: -16.500247955322266
    10. ' R' → logprob: -16.625247955322266

Token 276: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.018164340406656265
    2. ' R' → logprob: -4.018164157867432
    3. 'interval' → logprob: -12.01816463470459
    4. ' intervals' → logprob: -12.39316463470459
    5. 'answer' → logprob: -13.39316463470459
    6. '(R' → logprob: -13.64316463470459
    7. ')' → logprob: -14.14316463470459
    8. ' answer' → logprob: -14.89316463470459
    9. ' ' → logprob: -15.76816463470459
    10. '[R' → logprob: -16.268163681030273

Token 277: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048624493181705475
    2. 'in' → logprob: -3.0486245155334473
    3. ')' → logprob: -11.048624038696289
    4. 'interval' → logprob: -11.548624038696289
    5. ' intervals' → logprob: -12.173624038696289
    6. '(interval' → logprob: -12.423624038696289
    7. 's' → logprob: -13.798624038696289
    8. 'inter' → logprob: -14.173624038696289
    9. ' ' → logprob: -15.798624038696289
    10. '(in' → logprob: -16.54862403869629

Token 278: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.003178306156769395
    2. ' intervals' → logprob: -5.753178119659424
    3. '(interval' → logprob: -14.378178596496582
    4. ')' → logprob: -16.753177642822266
    5. ' interval' → logprob: -17.378177642822266
    6. '
' → logprob: -18.503177642822266
    7. 'answer' → logprob: -19.128177642822266
    8. 'indices' → logprob: -19.378177642822266
    9. 'ranges' → logprob: -19.378177642822266
    10. '   ' → logprob: -19.503177642822266

Token 279: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. 'else' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.750000953674316
    4. ' else' → logprob: -15.750000953674316
    5. '))' → logprob: -16.0
    6. ')
' → logprob: -17.375
    7. '）' → logprob: -18.375
    8. '   ' → logprob: -18.5
    9. '())' → logprob: -18.625
    10. ']' → logprob: -19.25

Token 280: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.126929372549057
    2. ' else' → logprob: -2.12692928314209
    3. '
' → logprob: -13.75192928314209
    4. '	else' → logprob: -16.876930236816406
    5. '```' → logprob: -16.876930236816406
    6. '_else' → logprob: -17.126930236816406
    7. ' 
' → logprob: -17.251930236816406
    8. '+' → logprob: -18.751930236816406
    9. 'elses' → logprob: -19.501930236816406
    10. '==' → logprob: -19.626930236816406

Token 281: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001706963055767119
    2. ' '' → logprob: -6.376707077026367
    3. '"No' → logprob: -12.876707077026367
    4. ' No' → logprob: -14.251707077026367
    5. ' ' → logprob: -14.626707077026367
    6. 'No' → logprob: -14.751707077026367
    7. '   ' → logprob: -15.001707077026367
    8. ' ' → logprob: -16.001707077026367
    9. '"' → logprob: -16.001707077026367
    10. '	' → logprob: -16.751707077026367

Token 282: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.029767613857984543
    2. ''' → logprob: -3.5297675132751465
    3. '"No' → logprob: -11.029767990112305
    4. ' No' → logprob: -14.404767990112305
    5. 'NO' → logprob: -15.404767990112305
    6. '_No' → logprob: -16.779767990112305
    7. '''' → logprob: -17.779767990112305
    8. '
' → logprob: -17.904767990112305
    9. '`' → logprob: -18.154767990112305
    10. '```' → logprob: -18.279767990112305

Token 283: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4816480875015259
    2. '')' → logprob: -0.9816480875015259
    3. ')
' → logprob: -5.356647968292236
    4. '')
' → logprob: -5.981647968292236
    5. ''' → logprob: -8.856648445129395
    6. ')'' → logprob: -9.106648445129395
    7. ')'
' → logprob: -10.731648445129395
    8. '")' → logprob: -11.731648445129395
    9. ''
' → logprob: -11.731648445129395
    10. ')
' → logprob: -12.606648445129395

Token 284: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.704065213445574e-05
    2. '
' → logprob: -10.000046730041504
    3. ' print' → logprob: -13.875046730041504
    4. '```' → logprob: -14.750046730041504
    5. '\n' → logprob: -16.00004768371582
    6. '
' → logprob: -16.50004768371582
    7. '#print' → logprob: -17.62504768371582
    8. '\' → logprob: -17.75004768371582
    9. '<|end|>' → logprob: -18.00004768371582
    10. '#' → logprob: -18.75004768371582

Token 285: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.00016754455282352865
    2. '(' → logprob: -8.875167846679688
    3. '('' → logprob: -11.250167846679688
    4. 'answer' → logprob: -11.500167846679688
    5. '(ans' → logprob: -12.750167846679688
    6. '(f' → logprob: -14.875167846679688
    7. '()' → logprob: -14.875167846679688
    8. ' (' → logprob: -14.875167846679688
    9. '(print' → logprob: -15.875167846679688
    10. '(output' → logprob: -16.250167846679688

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. '()' → logprob: -13.000005722045898
    3. '())' → logprob: -13.125005722045898
    4. ')`' → logprob: -15.000005722045898
    5. '))' → logprob: -15.250005722045898
    6. '')' → logprob: -15.875005722045898
    7. ')
' → logprob: -16.0000057220459
    8. ' )' → logprob: -16.7500057220459
    9. '`)' → logprob: -16.8750057220459
    10. '(' → logprob: -18.7500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 284
Tokens correctement prédits (1ère position, stricte): 124
Tokens correctement prédits (1ère position, avec adaptation): 130
Tokens correctement prédits (top 10): 245
Précision stricte (1ère position): 43.66%
Précision adaptée (1ère position): 45.77%
Précision (top 10): 86.27%
================================================================================
