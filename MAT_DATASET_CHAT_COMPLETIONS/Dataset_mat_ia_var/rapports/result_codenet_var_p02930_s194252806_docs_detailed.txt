================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def format_binary_string(number, length=11):
    """
    Retourne la représentation binaire d'un entier 'number' sur 'length' caractères, 
    complétée avec des zéros à gauche si nécessaire.

    Args:
        number (int): L'entier à convertir en binaire.
        length (int, optional): La longueur désirée de la chaîne binaire. Par défaut à 11.

    Returns:
        str: Chaîne binaire du nombre, sous forme de 'length' caractères.
    """
    binary_str = bin(number)[2:]           # Enlever le préfixe '0b'
    padded_binary_str = '0' * (length - len(binary_str)) + binary_str
    return padded_binary_str

def compute_differences(n):
    """
    Pour chaque nombre i de 0 à n-1, calcule les positions de la première différence binaire
    (sur les 9 bits de poids fort) entre i et tous les j > i jusqu'à n-1, et affiche 
    les résultats.

    Args:
        n (int): Nombre d'itérations et borne supérieure pour i et j (exclue).
    """
    for i in range(n):
        differences = []  # Liste pour stocker les positions trouvées pour cet i
        I = format_binary_string(i)  # Binaire sur 11 bits de i
        for j in range(i + 1, n):    # Pour chaque j > i
            J = format_binary_string(j)  # Binaire sur 11 bits de j
            # On cherche la première position (des 9 premiers bits) où les chaînes diffèrent
            for k in range(9):
                if I[k] != J[k]:
                    differences.append(9 - k)  # On note la position en partant du 9 (de poids fort)
                    break                      # On arrête dès la première différence trouvée
        # On affiche les positions séparées par des espaces (chaîne vide si aucune)
        print(' '.join(map(str, differences)))

def main():
    """
    Fonction principale. Lit un entier depuis l'entrée standard, puis
    affiche les résultats des positions de premières différences binaires pour chaque i.
    """
    n = int(input())
    compute_differences(n)

# Appel du point d'entrée du script
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' format' (ID: 6011)
  → Token d'amorce (pas de prédiction)

Token 2: '_binary' (ID: 77551)
  → Token d'amorce (pas de prédiction)

Token 3: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44761666655540466
    2. '_' → logprob: -1.197616696357727
    3. '```' → logprob: -3.5726165771484375
    4. '(_' → logprob: -4.3226165771484375
    5. '(_:' → logprob: -5.1976165771484375
    6. '_:' → logprob: -5.5726165771484375
    7. '('_' → logprob: -7.1976165771484375
    8. '_token' → logprob: -7.3226165771484375
    9. '():' → logprob: -7.5726165771484375
    10. '(:' → logprob: -7.5726165771484375

Token 4: '(number' (ID: 32955)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005291038658469915
    2. '_' → logprob: -5.380290985107422
    3. '(_' → logprob: -8.755290985107422
    4. '(_:' → logprob: -8.755290985107422
    5. '```' → logprob: -8.755290985107422
    6. '(:' → logprob: -9.630290985107422
    7. '():' → logprob: -11.130290985107422
    8. ':' → logprob: -11.255290985107422
    9. '_:' → logprob: -11.380290985107422
    10. ' (' → logprob: -11.505290985107422

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04980292171239853
    2. ')' → logprob: -3.2998030185699463
    3. ',' → logprob: -5.049802780151367
    4. ':' → logprob: -5.299802780151367
    5. '):
' → logprob: -9.299802780151367
    6. '[' → logprob: -10.174802780151367
    7. '```' → logprob: -10.799802780151367
    8. '**' → logprob: -11.049802780151367
    9. '=' → logprob: -11.299802780151367
    10. ''):' → logprob: -11.424802780151367

Token 6: ' length' (ID: 5517)
  Prédit: ' width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.17604878544807434
    2. ' length' → logprob: -2.551048755645752
    3. ' bit' → logprob: -3.676048755645752
    4. ' bits' → logprob: -3.676048755645752
    5. 'width' → logprob: -3.801048755645752
    6. ' total' → logprob: -6.551048755645752
    7. 'bit' → logprob: -6.551048755645752
    8. ' digits' → logprob: -6.676048755645752
    9. 'length' → logprob: -6.801048755645752
    10. ' min' → logprob: -7.301048755645752

Token 7: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043043080950155854
    2. ')' → logprob: -7.875430583953857
    3. '):
' → logprob: -10.6254301071167
    4. ':' → logprob: -10.8754301071167
    5. ''):' → logprob: -12.6254301071167
    6. ',' → logprob: -14.2504301071167
    7. '   ' → logprob: -14.8754301071167
    8. '"):' → logprob: -15.0004301071167
    9. '):

' → logprob: -15.1254301071167
    10. '```' → logprob: -15.1254301071167

Token 8: '11' (ID: 994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4496529698371887
    2. '32' → logprob: -1.324652910232544
    3. '8' → logprob: -3.324652910232544
    4. ''' → logprob: -4.449653148651123
    5. '0' → logprob: -4.449653148651123
    6. ' ' → logprob: -4.449653148651123
    7. '4' → logprob: -4.449653148651123
    8. ' )' → logprob: -4.699653148651123
    9. '')' → logprob: -6.574653148651123
    10. '1' → logprob: -7.699653148651123

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004159602802246809
    2. ')' → logprob: -5.504159450531006
    3. '):
' → logprob: -10.379159927368164
    4. ':' → logprob: -10.629159927368164
    5. ''):' → logprob: -11.129159927368164
    6. ',' → logprob: -12.629159927368164
    7. '):

' → logprob: -13.504159927368164
    8. '**' → logprob: -13.754159927368164
    9. '"):' → logprob: -13.879159927368164
    10. ' ):' → logprob: -14.129159927368164

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0710650384426117
    2. '(' → logprob: -3.0710649490356445
    3. ''' → logprob: -4.9460649490356445
    4. '   ' → logprob: -5.0710649490356445
    5. '():' → logprob: -6.4460649490356445
    6. '```' → logprob: -6.4460649490356445
    7. '':' → logprob: -6.6960649490356445
    8. '(:' → logprob: -7.5710649490356445
    9. ':return' → logprob: -7.5710649490356445
    10. '):' → logprob: -7.5710649490356445

Token 11: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7913573384284973
    2. ''' → logprob: -1.0413572788238525
    3. '`' → logprob: -2.4163572788238525
    4. 'return' → logprob: -3.4163572788238525
    5. '```' → logprob: -3.5413572788238525
    6. ' return' → logprob: -4.541357517242432
    7. '"' → logprob: -5.041357517242432
    8. 'r' → logprob: -5.291357517242432
    9. '"""' → logprob: -5.666357517242432
    10. ''''' → logprob: -5.666357517242432

Token 12: '   ' (ID: 271)
  Prédit: 'Format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Format' → logprob: -0.9320089817047119
    2. '   ' → logprob: -1.932008981704712
    3. 'Returns' → logprob: -2.057008981704712
    4. 'Return' → logprob: -2.432008981704712
    5. 'Convert' → logprob: -2.432008981704712
    6. 'Formats' → logprob: -2.557008981704712
    7. '"""' → logprob: -3.057008981704712
    8. 'F' → logprob: -4.807008743286133
    9. '"""
' → logprob: -5.557008743286133
    10. 'return' → logprob: -5.932008743286133

Token 13: ' Retour' (ID: 146830)
  Prédit: 'Format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Format' → logprob: -1.0004384517669678
    2. 'Convert' → logprob: -1.8754384517669678
    3. 'Formats' → logprob: -1.8754384517669678
    4. 'Returns' → logprob: -2.1254384517669678
    5. '"""' → logprob: -2.3754384517669678
    6. 'Return' → logprob: -2.7504384517669678
    7. 'F' → logprob: -4.000438690185547
    8. '   ' → logprob: -4.625438690185547
    9. 'Con' → logprob: -5.250438690185547
    10. 'R' → logprob: -5.250438690185547

Token 14: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18831759691238403
    2. 'ne' → logprob: -1.8133175373077393
    3. 'ner' → logprob: -4.813317775726318
    4. ' n' → logprob: -8.31331729888916
    5. 'r' → logprob: -9.81331729888916
    6. 'nera' → logprob: -10.43831729888916
    7. 'e' → logprob: -10.56331729888916
    8. '   ' → logprob: -11.06331729888916
    9. 'u' → logprob: -11.31331729888916
    10. 'neur' → logprob: -12.31331729888916

Token 15: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1753743886947632
    2. ' ' → logprob: -1.8003743886947632
    3. ' un' → logprob: -1.8003743886947632
    4. ' le' → logprob: -2.0503745079040527
    5. ' une' → logprob: -2.4253745079040527
    6. ' la' → logprob: -2.8003745079040527
    7. '   ' → logprob: -3.8003745079040527
    8. ' l' → logprob: -4.800374507904053
    9. ''' → logprob: -5.050374507904053
    10. ' a' → logprob: -5.175374507904053

Token 16: ' représentation' (ID: 162614)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.36002427339553833
    2. ' représentation' → logprob: -1.4850242137908936
    3. ' ' → logprob: -3.7350242137908936
    4. ' chaine' → logprob: -4.235024452209473
    5. 'chaine' → logprob: -4.360024452209473
    6. 're' → logprob: -4.860024452209473
    7. 'cha' → logprob: -5.360024452209473
    8. '   ' → logprob: -5.360024452209473
    9. ' version' → logprob: -6.860024452209473
    10. ' string' → logprob: -6.860024452209473

Token 17: ' b' (ID: 287)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4559740424156189
    2. 'b' → logprob: -2.0809741020202637
    3. ' b' → logprob: -2.2059741020202637
    4. ' d' → logprob: -2.8309741020202637
    5. ' de' → logprob: -3.7059741020202637
    6. ' complète' → logprob: -4.205974102020264
    7. ' ' → logprob: -4.580974102020264
    8. 'd' → logprob: -5.830974102020264
    9. ' binary' → logprob: -5.830974102020264
    10. ' du' → logprob: -5.955974102020264

Token 18: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.0006327360169962049
    2. 'in' → logprob: -7.6256327629089355
    3. 'ina' → logprob: -9.500632286071777
    4. ''' → logprob: -10.625632286071777
    5. '```' → logprob: -11.125632286071777
    6. 'inar' → logprob: -11.750632286071777
    7. 'iné' → logprob: -12.000632286071777
    8. '\'' → logprob: -12.250632286071777
    9. 'inary' → logprob: -12.750632286071777
    10. 'inale' → logprob: -13.125632286071777

Token 19: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7143541574478149
    2. ' du' → logprob: -1.589354157447815
    3. ' complète' → logprob: -1.839354157447815
    4. ' d' → logprob: -2.2143540382385254
    5. 'de' → logprob: -4.589354038238525
    6. '   ' → logprob: -4.714354038238525
    7. ' ' → logprob: -5.964354038238525
    8. ' complet' → logprob: -5.964354038238525
    9. 'd' → logprob: -6.464354038238525
    10. 's' → logprob: -6.714354038238525

Token 20: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.5588621497154236
    2. 'e' → logprob: -1.5588622093200684
    3. ''' → logprob: -1.9338622093200684
    4. ''une' → logprob: -3.5588622093200684
    5. ' ' → logprob: -4.058862209320068
    6. 'u' → logprob: -4.683862209320068
    7. '`' → logprob: -5.433862209320068
    8. ' un' → logprob: -6.183862209320068
    9. '```' → logprob: -6.183862209320068
    10. 'a' → logprob: -6.558862209320068

Token 21: ' entier' (ID: 80473)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.27300921082496643
    2. 'nombre' → logprob: -2.1480093002319336
    3. ' ' → logprob: -2.5230093002319336
    4. ' number' → logprob: -4.023009300231934
    5. 'number' → logprob: -4.523009300231934
    6. ' entier' → logprob: -5.273009300231934
    7. 'n' → logprob: -6.023009300231934
    8. 'ent' → logprob: -7.648009300231934
    9. ' espace' → logprob: -7.648009300231934
    10. 'b' → logprob: -7.773009300231934

Token 22: ' '' (ID: 461)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.0817177295684814
    2. ' sous' → logprob: -1.0817177295684814
    3. ' au' → logprob: -2.0817177295684814
    4. ' ' → logprob: -2.2067177295684814
    5. ',' → logprob: -4.456717491149902
    6. '```' → logprob: -4.581717491149902
    7. 'au' → logprob: -4.831717491149902
    8. ' convert' → logprob: -5.206717491149902
    9. ' avec' → logprob: -5.206717491149902
    10. ' formatted' → logprob: -5.331717491149902

Token 23: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4311029016971588
    2. ' number' → logprob: -1.0561028718948364
    3. ' nombre' → logprob: -7.431102752685547
    4. ' `' → logprob: -7.556102752685547
    5. 'nombre' → logprob: -7.681102752685547
    6. ' en' → logprob: -8.556102752685547
    7. ' '' → logprob: -9.306102752685547
    8. '[number' → logprob: -9.556102752685547
    9. '```' → logprob: -9.681102752685547
    10. '`' → logprob: -9.931102752685547

Token 24: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.496211975812912
    2. ' en' → logprob: -1.2462120056152344
    3. ''' → logprob: -3.3712120056152344
    4. ')' → logprob: -3.6212120056152344
    5. '',' → logprob: -4.371212005615234
    6. 'en' → logprob: -4.371212005615234
    7. '   ' → logprob: -4.871212005615234
    8. ' ,' → logprob: -6.496212005615234
    9. '')' → logprob: -6.621212005615234
    10. ' sous' → logprob: -6.871212005615234

Token 25: ' sur' (ID: 1512)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07416637986898422
    2. '   ' → logprob: -3.4491662979125977
    3. ',' → logprob: -3.8241662979125977
    4. ' sous' → logprob: -4.824166297912598
    5. 'en' → logprob: -5.574166297912598
    6. 's' → logprob: -6.199166297912598
    7. ' au' → logprob: -6.699166297912598
    8. '```' → logprob: -7.074166297912598
    9. ' avec' → logprob: -8.324166297912598
    10. ')' → logprob: -8.324166297912598

Token 26: ' '' (ID: 461)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.7116096615791321
    2. 'length' → logprob: -1.0866096019744873
    3. ' la' → logprob: -2.2116096019744873
    4. ' `' → logprob: -4.336609840393066
    5. ' ' → logprob: -4.461609840393066
    6. ' une' → logprob: -4.586609840393066
    7. ' un' → logprob: -4.961609840393066
    8. ' '' → logprob: -5.461609840393066
    9. ' exactly' → logprob: -5.836609840393066
    10. ' le' → logprob: -6.086609840393066

Token 27: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.004629603587090969
    2. ' length' → logprob: -5.379629611968994
    3. ' ' → logprob: -13.129629135131836
    4. '{' → logprob: -13.379629135131836
    5. ' longueur' → logprob: -13.504629135131836
    6. '   ' → logprob: -13.754629135131836
    7. 'leng' → logprob: -14.254629135131836
    8. '    ' → logprob: -14.379629135131836
    9. '  ' → logprob: -14.629629135131836
    10. 'long' → logprob: -15.254629135131836

Token 28: ''' (ID: 6)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.17537148296833038
    2. ' caractères' → logprob: -2.1753714084625244
    3. 'bits' → logprob: -3.5503714084625244
    4. ')' → logprob: -5.5503716468811035
    5. '```' → logprob: -5.8003716468811035
    6. 'car' → logprob: -6.1753716468811035
    7. ''' → logprob: -6.3003716468811035
    8. ' '' → logprob: -6.4253716468811035
    9. ' caracteres' → logprob: -6.9253716468811035
    10. ' bit' → logprob: -7.1753716468811035

Token 29: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.09139720350503922
    2. ' bits' → logprob: -2.716397285461426
    3. ' caracteres' → logprob: -5.466397285461426
    4. ' car' → logprob: -5.466397285461426
    5. '   ' → logprob: -5.591397285461426
    6. 'car' → logprob: -5.841397285461426
    7. '```' → logprob: -6.591397285461426
    8. ' ' → logprob: -6.841397285461426
    9. ' espaces' → logprob: -6.966397285461426
    10. 'bits' → logprob: -7.216397285461426

Token 30: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6195599436759949
    2. ',' → logprob: -1.2445600032806396
    3. '\n' → logprob: -2.7445600032806396
    4. '.' → logprob: -2.7445600032806396
    5. ' en' → logprob: -4.1195597648620605
    6. '"""' → logprob: -4.2445597648620605
    7. '```' → logprob: -5.7445597648620605
    8. ' :' → logprob: -5.8695597648620605
    9. ' ,' → logprob: -6.1195597648620605
    10. ' ' → logprob: -6.8695597648620605

Token 31: ' 
' (ID: 793)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3055315315723419
    2. '   ' → logprob: -1.5555315017700195
    3. '```' → logprob: -4.5555315017700195
    4. 'en' → logprob: -5.0555315017700195
    5. ' rempl' → logprob: -5.3055315017700195
    6. ' avec' → logprob: -5.4305315017700195
    7. ' sous' → logprob: -5.6805315017700195
    8. ' cod' → logprob: -5.6805315017700195
    9. ' ' → logprob: -5.9305315017700195
    10. ',' → logprob: -6.1805315017700195

Token 32: '   ' (ID: 271)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.06717134267091751
    2. '   ' → logprob: -3.567171335220337
    3. ' avec' → logprob: -4.442171573638916
    4. ' sous' → logprob: -5.192171573638916
    5. ' format' → logprob: -5.192171573638916
    6. ' cod' → logprob: -5.817171573638916
    7. 'au' → logprob: -6.192171573638916
    8. ',' → logprob: -6.692171573638916
    9. ' formatted' → logprob: -6.817171573638916
    10. ' au' → logprob: -6.942171573638916

Token 33: ' compl' (ID: 8432)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.47578543424606323
    2. 'p' → logprob: -2.475785493850708
    3. 'en' → logprob: -2.475785493850708
    4. 'avec' → logprob: -2.975785493850708
    5. ' avec' → logprob: -3.100785493850708
    6. '   ' → logprob: -4.100785255432129
    7. 'rem' → logprob: -4.225785255432129
    8. 'compl' (adapté à ' compl') → logprob: -4.350785255432129
    9. ' sous' → logprob: -4.475785255432129
    10. 'au' → logprob: -4.850785255432129

Token 34: 'ét' (ID: 3913)
  Prédit: 'ète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ète' → logprob: -0.6536931991577148
    2. 'été' → logprob: -1.5286931991577148
    3. 'ét' → logprob: -2.403693199157715
    4. 'é' → logprob: -2.653693199157715
    5. 'è' → logprob: -3.903693199157715
    6. 'éter' → logprob: -3.903693199157715
    7. 'ètent' → logprob: -4.153693199157715
    8. 'èt' → logprob: -4.278693199157715
    9. 'ément' → logprob: -4.278693199157715
    10. 'ètement' → logprob: -4.403693199157715

Token 35: 'ée' (ID: 2894)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.9426082372665405
    2. 'e' → logprob: -1.5676082372665405
    3. 'ée' → logprob: -1.6926082372665405
    4. 'ent' → logprob: -1.9426082372665405
    5. 'é' → logprob: -2.69260835647583
    6. 'er' → logprob: -5.69260835647583
    7. 'ement' → logprob: -6.81760835647583
    8. '```' → logprob: -7.31760835647583
    9. '   ' → logprob: -7.94260835647583
    10. 'ént' → logprob: -8.817607879638672

Token 36: ' avec' (ID: 3937)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2940055727958679
    2. ' avec' → logprob: -1.5440056324005127
    3. ' de' → logprob: -3.6690056324005127
    4. 'e' → logprob: -5.919005393981934
    5. 'par' → logprob: -6.044005393981934
    6. 'avec' → logprob: -6.169005393981934
    7. '0' → logprob: -6.419005393981934
    8. '   ' → logprob: -6.794005393981934
    9. 'de' → logprob: -6.919005393981934
    10. ' en' → logprob: -7.044005393981934

Token 37: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.04387395828962326
    2. 'des' → logprob: -3.1688740253448486
    3. ' ' → logprob: -8.04387378692627
    4. '0' → logprob: -8.54387378692627
    5. '_des' → logprob: -8.54387378692627
    6. 'Des' → logprob: -10.29387378692627
    7. ' ' → logprob: -10.54387378692627
    8. 'z' → logprob: -10.79387378692627
    9. ' zeros' → logprob: -11.54387378692627
    10. ' z' → logprob: -11.54387378692627

Token 38: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3109540343284607
    2. ' z' → logprob: -1.6859540939331055
    3. 'z' → logprob: -2.5609540939331055
    4. ' ' → logprob: -6.0609540939331055
    5. ' zeros' → logprob: -6.6859540939331055
    6. ' espaces' → logprob: -7.6859540939331055
    7. 'zeros' → logprob: -8.435954093933105
    8. ' ' → logprob: -8.560954093933105
    9. ' '' → logprob: -9.060954093933105
    10. ''z' → logprob: -9.685954093933105

Token 39: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.018557125702500343
    2. 'é' → logprob: -4.268557071685791
    3. '0' → logprob: -6.268557071685791
    4. 'eros' → logprob: -6.768557071685791
    5. 'e' → logprob: -7.518557071685791
    6. 'è' → logprob: -8.01855754852295
    7. 'ê' → logprob: -9.01855754852295
    8. 'éro' → logprob: -9.14355754852295
    9. 'œ' → logprob: -9.39355754852295
    10. '\x' → logprob: -10.89355754852295

Token 40: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05529487133026123
    2. 'à' → logprob: -4.180294990539551
    3. ' en' → logprob: -4.680294990539551
    4. 'sur' → logprob: -4.680294990539551
    5. ' sur' → logprob: -5.555294990539551
    6. '0' → logprob: -5.555294990539551
    7. ' jusqu' → logprob: -6.305294990539551
    8. 'au' → logprob: -6.305294990539551
    9. '   ' → logprob: -6.430294990539551
    10. ' pour' → logprob: -6.930294990539551

Token 41: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.092023566365242
    2. 'g' → logprob: -2.4670236110687256
    3. ' ' → logprob: -6.8420233726501465
    4. 'l' → logprob: -7.3420233726501465
    5. '   ' → logprob: -7.8420233726501465
    6. 'dro' → logprob: -8.217023849487305
    7. ' ' → logprob: -8.467023849487305
    8. ' droite' → logprob: -8.592023849487305
    9. '```' → logprob: -8.967023849487305
    10. '	g' → logprob: -9.967023849487305

Token 42: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20086506009101868
    2. '.' → logprob: -2.0758650302886963
    3. ',' → logprob: -3.4508650302886963
    4. ')' → logprob: -5.075865268707275
    5. ' ' → logprob: -5.700865268707275
    6. ':' → logprob: -5.825865268707275
    7. ' :' → logprob: -5.825865268707275
    8. '"' → logprob: -6.075865268707275
    9. '"""' → logprob: -6.450865268707275
    10. '):' → logprob: -7.200865268707275

Token 43: ' nécessaire' (ID: 43098)
  Prédit: ' nécessaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaire' → logprob: -0.07938971370458603
    2. 'né' → logprob: -3.454389810562134
    3. ' besoin' → logprob: -3.579389810562134
    4. '   ' → logprob: -5.829389572143555
    5. '```' → logprob: -5.954389572143555
    6. 'n' → logprob: -6.079389572143555
    7. 'necess' → logprob: -6.204389572143555
    8. 'il' → logprob: -6.329389572143555
    9. ' necess' → logprob: -6.829389572143555
    10. ' nécessaires' → logprob: -6.954389572143555

Token 44: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007207725662738085
    2. '.' → logprob: -5.507207870483398
    3. ')' → logprob: -7.382207870483398
    4. '"""' → logprob: -7.507207870483398
    5. ':' → logprob: -7.882207870483398
    6. ',' → logprob: -8.007207870483398
    7. '```' → logprob: -8.007207870483398
    8. '"' → logprob: -8.382207870483398
    9. '\n' → logprob: -8.757207870483398
    10. '"""
' → logprob: -9.382207870483398

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023789726197719574
    2. '"""' → logprob: -3.773789644241333
    3. '"""
' → logprob: -8.148789405822754
    4. '```' → logprob: -8.523789405822754
    5. '"' → logprob: -10.523789405822754
    6. '""' → logprob: -11.273789405822754
    7. ' """' → logprob: -12.023789405822754
    8. '    ' → logprob: -12.648789405822754
    9. ' """
' → logprob: -13.023789405822754
    10. '`' → logprob: -13.773789405822754

Token 46: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3195289075374603
    2. '"""' → logprob: -1.3195289373397827
    3. '"""
' → logprob: -5.194529056549072
    4. 'return' → logprob: -8.069528579711914
    5. ' """' → logprob: -9.069528579711914
    6. '```' → logprob: -9.069528579711914
    7. '""' → logprob: -9.569528579711914
    8. ' """
' → logprob: -10.194528579711914
    9. 'result' → logprob: -10.694528579711914
    10. ''''' → logprob: -12.569528579711914

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.804463267326355
    2. '   ' → logprob: -1.179463267326355
    3. ',' → logprob: -2.0544633865356445
    4. '):' → logprob: -2.5544633865356445
    5. ')' → logprob: -4.5544633865356445
    6. '[number' → logprob: -4.8044633865356445
    7. ' :' → logprob: -4.9294633865356445
    8. '(number' → logprob: -4.9294633865356445
    9. '```' → logprob: -5.9294633865356445
    10. '):
' → logprob: -7.1794633865356445

Token 48: '       ' (ID: 309)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.24763348698616028
    2. 'number' → logprob: -1.997633457183838
    3. '   ' → logprob: -2.497633457183838
    4. '       ' → logprob: -6.747633457183838
    5. '    ' → logprob: -9.497633934020996
    6. '```' → logprob: -10.247633934020996
    7. '	number' → logprob: -10.247633934020996
    8. 'n' → logprob: -10.497633934020996
    9. '[number' → logprob: -10.622633934020996
    10. ' numero' → logprob: -11.747633934020996

Token 49: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -0.010006449185311794
    2. ' number' → logprob: -5.135006427764893
    3. '   ' → logprob: -5.510006427764893
    4. '       ' → logprob: -12.26000690460205
    5. 'num' → logprob: -12.63500690460205
    6. '`' → logprob: -13.13500690460205
    7. 'n' → logprob: -13.13500690460205
    8. '	number' → logprob: -13.13500690460205
    9. '```' → logprob: -13.26000690460205
    10. 'nombre' → logprob: -13.51000690460205

Token 50: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16385510563850403
    2. ':' → logprob: -2.1638550758361816
    3. '):' → logprob: -3.5388550758361816
    4. ')' → logprob: -6.288855075836182
    5. ':int' → logprob: -6.663855075836182
    6. ' (' → logprob: -7.038855075836182
    7. '   ' → logprob: -7.163855075836182
    8. ' ,' → logprob: -7.413855075836182
    9. 'int' → logprob: -8.28885555267334
    10. '=' → logprob: -8.53885555267334

Token 51: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06201070174574852
    2. ' int' → logprob: -2.8120107650756836
    3. '   ' → logprob: -10.187010765075684
    4. ':int' → logprob: -13.062010765075684
    5. ')' → logprob: -14.062010765075684
    6. '[int' → logprob: -14.062010765075684
    7. '```' → logprob: -14.562010765075684
    8. '<int' → logprob: -14.937010765075684
    9. '=int' → logprob: -15.312010765075684
    10. '(int' → logprob: -15.437010765075684

Token 52: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34928950667381287
    2. '):' → logprob: -1.2242895364761353
    3. '   ' → logprob: -7.849289417266846
    4. '):
' → logprob: -8.724289894104004
    5. ',' → logprob: -8.849289894104004
    6. ' ):' → logprob: -9.849289894104004
    7. ' )' → logprob: -10.474289894104004
    8. ' ' → logprob: -10.599289894104004
    9. '),' → logprob: -11.224289894104004
    10. '```' → logprob: -11.474289894104004

Token 53: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6971616744995117
    2. '<|end|>' → logprob: -1.0721616744995117
    3. ' Le' → logprob: -3.3221616744995117
    4. ' The' → logprob: -3.6971616744995117
    5. ' un' → logprob: -4.072161674499512
    6. ')' → logprob: -4.072161674499512
    7. '<|end|>' → logprob: -4.322161674499512
    8. ' le' → logprob: -4.697161674499512
    9. '    ' → logprob: -4.697161674499512
    10. 'the' → logprob: -5.322161674499512

Token 54: ''ent' (ID: 53422)
  Prédit: ' entier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.08335117250680923
    2. ' nombre' → logprob: -3.3333511352539062
    3. '   ' → logprob: -4.208351135253906
    4. 'e' → logprob: -4.833351135253906
    5. ''ent' → logprob: -5.083351135253906
    6. ' ' → logprob: -5.333351135253906
    7. 'ent' → logprob: -5.583351135253906
    8. 'nombre' → logprob: -5.708351135253906
    9. ' e' → logprob: -6.958351135253906
    10. ' ent' → logprob: -7.083351135253906

Token 55: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.010770955123007298
    2. '   ' → logprob: -4.635770797729492
    3. '       ' → logprob: -8.010770797729492
    4. 't' → logprob: -8.260770797729492
    5. '  ' → logprob: -9.135770797729492
    6. '```' → logprob: -9.385770797729492
    7. ' entier' → logprob: -9.760770797729492
    8. 'er' → logprob: -9.885770797729492
    9. 'ière' → logprob: -10.760770797729492
    10. 'iers' → logprob: -11.385770797729492

Token 56: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2619807720184326
    2. ' à' → logprob: -2.0119807720184326
    3. '   ' → logprob: -3.0119807720184326
    4. ' )' → logprob: -3.7619807720184326
    5. ' ' → logprob: -4.136981010437012
    6. 'à' → logprob: -5.511981010437012
    7. '```' → logprob: -6.761981010437012
    8. '  ' → logprob: -7.386981010437012
    9. '):' → logprob: -7.886981010437012
    10. '    ' → logprob: -8.386981010437012

Token 57: ' convertir' (ID: 79223)
  Prédit: ' form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' form' → logprob: -0.006404365878552198
    2. 'form' → logprob: -6.006404399871826
    3. ' convertir' → logprob: -6.381404399871826
    4. ' formatter' → logprob: -6.631404399871826
    5. 'formatter' → logprob: -7.506404399871826
    6. ' format' → logprob: -8.756403923034668
    7. ' représ' → logprob: -9.506403923034668
    8. 'format' → logprob: -9.631403923034668
    9. ' coder' → logprob: -10.506403923034668
    10. '   ' → logprob: -11.381403923034668

Token 58: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3128899335861206
    2. '   ' → logprob: -1.4378899335861206
    3. '):' → logprob: -3.68789005279541
    4. '```' → logprob: -5.81289005279541
    5. ')
' → logprob: -6.56289005279541
    6. '):
' → logprob: -6.93789005279541
    7. '"""' → logprob: -8.43789005279541
    8. '
' → logprob: -9.06289005279541
    9. ')\' → logprob: -9.81289005279541
    10. '"""
' → logprob: -9.81289005279541

Token 59: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7712647914886475
    2. 'b' → logprob: -1.1462647914886475
    3. ' ' → logprob: -1.8962647914886475
    4. '   ' → logprob: -3.5212647914886475
    5. ' binary' → logprob: -3.6462647914886475
    6. '  ' → logprob: -5.771265029907227
    7. ' format' → logprob: -5.771265029907227
    8. 'binary' → logprob: -6.271265029907227
    9. ' une' → logprob: -6.896265029907227
    10. ' chaîne' → logprob: -6.896265029907227

Token 60: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.014481144025921822
    2. 'in' → logprob: -5.139481067657471
    3. 'inary' → logprob: -5.639481067657471
    4. ''' → logprob: -6.014481067657471
    5. 'i' → logprob: -7.139481067657471
    6. 'b' → logprob: -7.889481067657471
    7. '0' → logprob: -8.264481544494629
    8. '```' → logprob: -8.514481544494629
    9. 'ina' → logprob: -8.639481544494629
    10. '#' → logprob: -8.639481544494629

Token 61: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2931387722492218
    2. '):' → logprob: -1.9181387424468994
    3. '   ' → logprob: -2.2931387424468994
    4. '```' → logprob: -5.4181389808654785
    5. '):
' → logprob: -7.6681389808654785
    6. ',' → logprob: -8.16813850402832
    7. ')
' → logprob: -8.54313850402832
    8. '\n' → logprob: -8.91813850402832
    9. '")' → logprob: -9.41813850402832
    10. ':' → logprob: -9.41813850402832

Token 62: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030869660899043083
    2. ')' → logprob: -3.655869722366333
    3. '"""' → logprob: -6.530869483947754
    4. '    
' → logprob: -7.405869483947754
    5. '\n' → logprob: -7.405869483947754
    6. '):' → logprob: -7.780869483947754
    7. '```' → logprob: -8.030869483947754
    8. '"""
' → logprob: -8.405869483947754
    9. '"' → logprob: -8.530869483947754
    10. '")' → logprob: -9.155869483947754

Token 63: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5409429669380188
    2. '"""
' → logprob: -1.665942907333374
    3. ' """
' → logprob: -1.915942907333374
    4. '"""' → logprob: -2.915942907333374
    5. '       ' → logprob: -4.165943145751953
    6. ' """' → logprob: -5.915943145751953
    7. 'n' → logprob: -6.415943145751953
    8. '```' → logprob: -6.415943145751953
    9. '    ' → logprob: -7.040943145751953
    10. 'Returns' → logprob: -7.665943145751953

Token 64: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7048680186271667
    2. '):' → logprob: -0.7048680186271667
    3. ':' → logprob: -4.954867839813232
    4. ')' → logprob: -5.454867839813232
    5. '=int' → logprob: -8.70486831665039
    6. '=None' → logprob: -9.45486831665039
    7. ':int' → logprob: -10.07986831665039
    8. ' ):' → logprob: -10.82986831665039
    9. ' :' → logprob: -12.20486831665039
    10. ' =' → logprob: -12.45486831665039

Token 65: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00043686782009899616
    2. '11' → logprob: -8.125436782836914
    3. ')' → logprob: -10.000436782836914
    4. '=int' → logprob: -10.250436782836914
    5. '):' → logprob: -10.250436782836914
    6. ':int' → logprob: -11.375436782836914
    7. '=' → logprob: -12.000436782836914
    8. ' int' → logprob: -12.125436782836914
    9. '[int' → logprob: -13.875436782836914
    10. '   ' → logprob: -15.250436782836914

Token 66: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145943760871887
    2. '):' → logprob: -1.7014594078063965
    3. ')' → logprob: -10.701459884643555
    4. '=None' → logprob: -11.201459884643555
    5. ')=' → logprob: -12.326459884643555
    6. '=int' → logprob: -13.451459884643555
    7. ' ):' → logprob: -13.576459884643555
    8. ' =' → logprob: -14.076459884643555
    9. '):
' → logprob: -14.201459884643555
    10. ':' → logprob: -14.326459884643555

Token 67: ' optional' (ID: 18297)
  Prédit: ' optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optional' → logprob: -0.20408901572227478
    2. 'optional' → logprob: -1.8290890455245972
    3. 'Optional' → logprob: -4.204089164733887
    4. 'int' → logprob: -5.204089164733887
    5. 'default' → logprob: -5.954089164733887
    6. '):' → logprob: -7.829089164733887
    7. ' default' → logprob: -8.204089164733887
    8. ' int' → logprob: -9.454089164733887
    9. '   ' → logprob: -9.954089164733887
    10. 'def' → logprob: -10.329089164733887

Token 68: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023655613767914474
    2. ')' → logprob: -8.500236511230469
    3. ' ):' → logprob: -10.500236511230469
    4. '   ' → logprob: -13.250236511230469
    5. '):
' → logprob: -13.375236511230469
    6. ''):' → logprob: -14.125236511230469
    7. '```' → logprob: -14.625236511230469
    8. '"):' → logprob: -14.750236511230469
    9. '=' → logprob: -15.000236511230469
    10. ' ' → logprob: -16.50023651123047

Token 69: ' La' (ID: 3038)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -1.3436650037765503
    2. 'Le' → logprob: -1.4686650037765503
    3. '   ' → logprob: -1.8436650037765503
    4. 'La' → logprob: -1.9686650037765503
    5. ' La' → logprob: -2.71866512298584
    6. 'int' → logprob: -2.96866512298584
    7. ' la' → logprob: -3.34366512298584
    8. ' le' → logprob: -3.71866512298584
    9. ' int' → logprob: -4.21866512298584
    10. 'la' → logprob: -5.46866512298584

Token 70: ' longueur' (ID: 104613)
  Prédit: ' longueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.23471343517303467
    2. 'long' → logprob: -2.359713554382324
    3. ' largeur' → logprob: -2.609713554382324
    4. ' longe' → logprob: -4.234713554382324
    5. ' long' → logprob: -4.484713554382324
    6. ' ' → logprob: -5.359713554382324
    7. 'tail' → logprob: -5.734713554382324
    8. 'lon' → logprob: -6.359713554382324
    9. 'l' → logprob: -6.484713554382324
    10. '   ' → logprob: -6.984713554382324

Token 71: ' désir' (ID: 92342)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34125277400016785
    2. ' du' → logprob: -1.4662528038024902
    3. ' de' → logprob: -3.8412528038024902
    4. '=' → logprob: -4.46625280380249
    5. ' ' → logprob: -5.21625280380249
    6. '   ' → logprob: -5.21625280380249
    7. ' par' → logprob: -5.34125280380249
    8. ' )' → logprob: -5.59125280380249
    9. ' maximale' → logprob: -6.96625280380249
    10. 'du' → logprob: -7.09125280380249

Token 72: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.014233322814106941
    2. 'é' → logprob: -4.264233112335205
    3. 'e' → logprob: -9.639233589172363
    4. 'ee' → logprob: -12.639233589172363
    5. ' é' → logprob: -15.139233589172363
    6. 'á' → logprob: -15.764233589172363
    7. 'a' → logprob: -16.389232635498047
    8. 'de' → logprob: -16.514232635498047
    9. 'rée' → logprob: -16.514232635498047
    10. 'lée' → logprob: -16.514232635498047

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5200148224830627
    2. ')' → logprob: -1.645014762878418
    3. ' du' → logprob: -1.645014762878418
    4. 'de' → logprob: -5.395014762878418
    5. '):' → logprob: -5.645014762878418
    6. '.' → logprob: -5.770014762878418
    7. 'du' → logprob: -5.895014762878418
    8. ',' → logprob: -6.145014762878418
    9. '   ' → logprob: -6.270014762878418
    10. ' )' → logprob: -7.395014762878418

Token 74: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.25215044617652893
    2. 'la' → logprob: -1.5021504163742065
    3. 'l' → logprob: -9.627150535583496
    4. ' ' → logprob: -10.127150535583496
    5. 'chaine' → logprob: -10.752150535583496
    6. '   ' → logprob: -11.002150535583496
    7. '```' → logprob: -11.252150535583496
    8. ' ' → logprob: -11.252150535583496
    9. ')' → logprob: -11.502150535583496
    10. 's' → logprob: -11.877150535583496

Token 75: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.055573996156454086
    2. 'cha' → logprob: -3.0555739402770996
    3. 'chaine' → logprob: -5.0555739402771
    4. ' chaine' → logprob: -8.055574417114258
    5. ' string' → logprob: -9.430574417114258
    6. '   ' → logprob: -9.930574417114258
    7. ' cha' → logprob: -9.930574417114258
    8. ' ' → logprob: -10.180574417114258
    9. 'string' → logprob: -10.430574417114258
    10. 'ch' → logprob: -12.180574417114258

Token 76: ' b' (ID: 287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5940874218940735
    2. '   ' → logprob: -1.5940873622894287
    3. '):' → logprob: -2.3440873622894287
    4. ' )' → logprob: -3.0940873622894287
    5. ',' → logprob: -3.8440873622894287
    6. ').' → logprob: -3.8440873622894287
    7. 'b' → logprob: -4.469087600708008
    8. ' de' → logprob: -4.469087600708008
    9. '.' → logprob: -4.594087600708008
    10. ' ):' → logprob: -4.969087600708008

Token 77: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.02110837958753109
    2. 'in' → logprob: -4.396108150482178
    3. 'inary' → logprob: -5.771108150482178
    4. 'i' → logprob: -6.021108150482178
    5. 'ina' → logprob: -6.646108150482178
    6. '```' → logprob: -7.771108150482178
    7. 'inar' → logprob: -8.021108627319336
    8. ''' → logprob: -8.146108627319336
    9. 'iné' → logprob: -8.396108627319336
    10. 'iner' → logprob: -9.396108627319336

Token 78: '.' (ID: 13)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4075513184070587
    2. ')' → logprob: -1.4075512886047363
    3. '   ' → logprob: -2.5325512886047363
    4. '.' → logprob: -5.532551288604736
    5. ',' → logprob: -5.657551288604736
    6. '):
' → logprob: -6.032551288604736
    7. ').' → logprob: -8.407551765441895
    8. '```' → logprob: -9.032551765441895
    9. ' ):' → logprob: -9.532551765441895
    10. ' )' → logprob: -10.157551765441895

Token 79: ' Par' (ID: 3371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24269452691078186
    2. ')' → logprob: -1.6176944971084595
    3. '):' → logprob: -4.24269437789917
    4. '```' → logprob: -7.24269437789917
    5. '"""' → logprob: -7.24269437789917
    6. '):
' → logprob: -7.49269437789917
    7. '")' → logprob: -8.117694854736328
    8. '"""
' → logprob: -9.367694854736328
    9. '    
' → logprob: -9.367694854736328
    10. '""' → logprob: -9.867694854736328

Token 80: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.1177876889705658
    2. ' défaut' → logprob: -2.3677875995635986
    3. 'default' → logprob: -4.742787837982178
    4. 'def' → logprob: -4.867787837982178
    5. '   ' → logprob: -7.367787837982178
    6. 'd' → logprob: -8.11778736114502
    7. '       ' → logprob: -10.24278736114502
    8. ' default' → logprob: -11.11778736114502
    9. ' déf' → logprob: -11.24278736114502
    10. ' ' → logprob: -12.24278736114502

Token 81: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07616433501243591
    2. ':' → logprob: -2.8261642456054688
    3. '11' → logprob: -4.951164245605469
    4. ' :' → logprob: -6.326164245605469
    5. ' =' → logprob: -6.451164245605469
    6. ',' → logprob: -6.701164245605469
    7. ' à' → logprob: -6.826164245605469
    8. ' ' → logprob: -7.326164245605469
    9. ' est' → logprob: -8.076164245605469
    10. ' is' → logprob: -9.201164245605469

Token 82: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.029753267765045166
    2. ' ' → logprob: -3.5297532081604004
    3. '1' → logprob: -12.904753684997559
    4. '111' → logprob: -15.654753684997559
    5. '10' → logprob: -16.904752731323242
    6. '12' → logprob: -16.904752731323242
    7. ' onze' → logprob: -17.529752731323242
    8. '16' → logprob: -18.029752731323242
    9. '14' → logprob: -18.279752731323242
    10. '110' → logprob: -18.654752731323242

Token 83: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. '1' → logprob: -14.625015258789062
    4. 'length' → logprob: -16.375015258789062
    5. '１１' → logprob: -17.500015258789062
    6. '`' → logprob: -17.625015258789062
    7. 'ele' → logprob: -17.625015258789062
    8. '111' → logprob: -17.625015258789062
    9. '```' → logprob: -18.000015258789062
    10. '"' → logprob: -18.375015258789062

Token 84: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.260624498128891
    2. '):
' → logprob: -1.5106245279312134
    3. ')' → logprob: -5.385624408721924
    4. '   ' → logprob: -6.260624408721924
    5. '):
' → logprob: -6.510624408721924
    6. ' ):' → logprob: -8.010624885559082
    7. ').' → logprob: -9.760624885559082
    8. '):

' → logprob: -9.760624885559082
    9. ' ):
' → logprob: -9.885624885559082
    10. '```' → logprob: -10.010624885559082

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02065318636596203
    2. ')' → logprob: -4.145653247833252
    3. '):
' → logprob: -6.270653247833252
    4. '"""' → logprob: -6.895653247833252
    5. '):' → logprob: -7.145653247833252
    6. '"""
' → logprob: -7.395653247833252
    7. '```' → logprob: -8.895652770996094
    8. '""' → logprob: -9.770652770996094
    9. '")' → logprob: -10.395652770996094
    10. '
' → logprob: -11.145652770996094

Token 86: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11469564586877823
    2. '"""' → logprob: -2.3646955490112305
    3. '"""
' → logprob: -4.6146955490112305
    4. 'Returns' (adapté à ' Returns') → logprob: -5.7396955490112305
    5. '""' → logprob: -7.7396955490112305
    6. '```' → logprob: -7.9896955490112305
    7. ')' → logprob: -8.11469554901123
    8. 'return' → logprob: -9.73969554901123
    9. ' """' → logprob: -10.61469554901123
    10. ' Returns' → logprob: -10.73969554901123

Token 87: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.16484691202640533
    2. ':' → logprob: -2.039846897125244
    3. '   ' → logprob: -4.039846897125244
    4. ' str' → logprob: -6.789846897125244
    5. ' ):' → logprob: -7.039846897125244
    6. '    ' → logprob: -7.164846897125244
    7. '):' → logprob: -7.539846897125244
    8. ':str' → logprob: -8.789847373962402
    9. ' ' → logprob: -9.164847373962402
    10. ' )' → logprob: -9.414847373962402

Token 88: '       ' (ID: 309)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.07077198475599289
    2. 'str' → logprob: -3.3207719326019287
    3. '   ' → logprob: -3.4457719326019287
    4. '       ' → logprob: -8.320772171020508
    5. '    ' → logprob: -10.195772171020508
    6. '```' → logprob: -10.570772171020508
    7. '[str' → logprob: -12.070772171020508
    8. '(str' → logprob: -13.195772171020508
    9. ')' → logprob: -13.695772171020508
    10. '	str' → logprob: -13.820772171020508

Token 89: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.049192436039447784
    2. ' str' → logprob: -3.049192428588867
    3. '   ' → logprob: -7.424192428588867
    4. '       ' → logprob: -12.674192428588867
    5. 'Str' → logprob: -13.549192428588867
    6. '    ' → logprob: -14.049192428588867
    7. 'string' → logprob: -14.174192428588867
    8. '```' → logprob: -14.924192428588867
    9. '
' → logprob: -15.049192428588867
    10. '(str' → logprob: -15.049192428588867

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39463090896606445
    2. '   ' → logprob: -1.3946309089660645
    3. ':
' → logprob: -2.6446309089660645
    4. ' :' → logprob: -5.3946309089660645
    5. '       ' → logprob: -7.8946309089660645
    6. '```' → logprob: -8.019630432128906
    7. ':return' → logprob: -8.144630432128906
    8. ' :
' → logprob: -8.394630432128906
    9. '    ' → logprob: -8.394630432128906
    10. '):' → logprob: -8.519630432128906

Token 91: ' Cha' (ID: 37219)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.19074444472789764
    2. '   ' → logprob: -2.565744400024414
    3. 'La' → logprob: -2.940744400024414
    4. ' la' → logprob: -4.440744400024414
    5. ' Le' → logprob: -4.690744400024414
    6. '    ' → logprob: -4.690744400024414
    7. ' format' → logprob: -4.940744400024414
    8. 'Le' → logprob: -6.190744400024414
    9. ' Une' → logprob: -7.190744400024414
    10. ' binary' → logprob: -7.315744400024414

Token 92: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.033668287098407745
    2. '   ' → logprob: -3.908668279647827
    3. 'î' → logprob: -4.658668518066406
    4. '    ' → logprob: -6.908668518066406
    5. 'ne' → logprob: -7.283668518066406
    6. '  ' → logprob: -7.658668518066406
    7. '```' → logprob: -7.783668518066406
    8. 'ine' → logprob: -8.408668518066406
    9. 'ı' → logprob: -9.158668518066406
    10. '       ' → logprob: -9.158668518066406

Token 93: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5486895442008972
    2. ' de' → logprob: -1.048689603805542
    3. '(binary' → logprob: -3.923689603805542
    4. ' binary' → logprob: -4.048689365386963
    5. '_binary' → logprob: -5.673689365386963
    6. 'b' → logprob: -5.923689365386963
    7. ')' → logprob: -6.173689365386963
    8. '(bin' → logprob: -6.173689365386963
    9. '    ' → logprob: -6.298689365386963
    10. 'de' → logprob: -6.298689365386963

Token 94: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.000204851632588543
    2. 'in' → logprob: -8.750205039978027
    3. 'ina' → logprob: -10.875205039978027
    4. 'inale' → logprob: -11.875205039978027
    5. 'inar' → logprob: -12.000205039978027
    6. 'inary' → logprob: -12.750205039978027
    7. 'naire' → logprob: -12.875205039978027
    8. 'iné' → logprob: -13.000205039978027
    9. '"' → logprob: -13.125205039978027
    10. '```' → logprob: -13.250205039978027

Token 95: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08979128301143646
    2. ':
' → logprob: -2.5897912979125977
    3. '
' → logprob: -5.964791297912598
    4. '       ' → logprob: -6.339791297912598
    5. '"""
' → logprob: -6.839791297912598
    6. ':' → logprob: -7.089791297912598
    7. '```' → logprob: -7.089791297912598
    8. '    
' → logprob: -7.339791297912598
    9. ' :
' → logprob: -7.714791297912598
    10. ',' → logprob: -8.339791297912598

Token 96: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.4409422278404236
    2. 'nombre' → logprob: -1.3159422874450684
    3. ' number' → logprob: -3.3159422874450684
    4. 'number' → logprob: -3.6909422874450684
    5. 'n' → logprob: -3.8159422874450684
    6. '   ' → logprob: -7.065942287445068
    7. ' numéro' → logprob: -7.065942287445068
    8. ' '' → logprob: -7.315942287445068
    9. ' format' → logprob: -7.940942287445068
    10. ' code' → logprob: -7.940942287445068

Token 97: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02269114926457405
    2. '       ' → logprob: -4.397691249847412
    3. '"""
' → logprob: -5.772691249847412
    4. '"' → logprob: -6.772691249847412
    5. '
' → logprob: -6.772691249847412
    6. ',' → logprob: -6.897691249847412
    7. '```' → logprob: -7.647691249847412
    8. '    
' → logprob: -8.022690773010254
    9. ':
' → logprob: -8.147690773010254
    10. '.' → logprob: -8.397690773010254

Token 98: ' sous' (ID: 14487)
  Prédit: ' compl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compl' → logprob: -1.4141266345977783
    2. 'p' → logprob: -2.1641266345977783
    3. ' cod' → logprob: -2.1641266345977783
    4. '   ' → logprob: -2.1641266345977783
    5. ' format' → logprob: -2.6641266345977783
    6. ' sur' → logprob: -3.0391266345977783
    7. '```' → logprob: -3.1641266345977783
    8. 'z' → logprob: -3.6641266345977783
    9. 'b' → logprob: -3.9141266345977783
    10. 'compl' → logprob: -4.039126396179199

Token 99: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.0246940515935421
    2. 'forme' → logprob: -4.524693965911865
    3. ' format' → logprob: -5.024693965911865
    4. ' la' → logprob: -5.149693965911865
    5. 'format' → logprob: -7.274693965911865
    6. ' form' → logprob: -8.774694442749023
    7. 'la' → logprob: -8.899694442749023
    8. '   ' → logprob: -10.524694442749023
    9. 'chaine' → logprob: -10.524694442749023
    10. ' sa' → logprob: -10.649694442749023

Token 100: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9494297504425049
    2. 'b' → logprob: -1.8244297504425049
    3. '   ' → logprob: -2.074429750442505
    4. ' d' → logprob: -2.324429750442505
    5. ' b' → logprob: -2.449429750442505
    6. 'de' → logprob: -2.949429750442505
    7. ''' → logprob: -3.449429750442505
    8. 'd' → logprob: -4.449429512023926
    9. ''b' → logprob: -4.449429512023926
    10. ' binary' → logprob: -5.324429512023926

Token 101: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.716308355331421
    2. 'bits' → logprob: -1.966308355331421
    3. 'chaine' → logprob: -1.966308355331421
    4. 'bit' → logprob: -2.341308355331421
    5. 'nombre' → logprob: -2.341308355331421
    6. ''' → logprob: -2.966308355331421
    7. ' bits' → logprob: -2.966308355331421
    8. ''b' → logprob: -3.341308355331421
    9. '0' → logprob: -3.466308355331421
    10. 'length' → logprob: -3.591308355331421

Token 102: 'length' (ID: 7914)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036828552838414907
    2. '{' → logprob: -6.003683090209961
    3. 'b' → logprob: -6.753683090209961
    4. ''' → logprob: -11.128683090209961
    5. 'length' → logprob: -11.878683090209961
    6. '{:' → logprob: -12.003683090209961
    7. '016' → logprob: -12.753683090209961
    8. '011' → logprob: -13.378683090209961
    9. 'format' → logprob: -13.503683090209961
    10. '010' → logprob: -13.503683090209961

Token 103: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08029134571552277
    2. ')'' → logprob: -3.080291271209717
    3. ' caractères' → logprob: -3.580291271209717
    4. 'car' → logprob: -6.580291271209717
    5. '')' → logprob: -7.455291271209717
    6. ' '' → logprob: -7.955291271209717
    7. ' caracteres' → logprob: -8.580291748046875
    8. 'chars' → logprob: -8.705291748046875
    9. 's' → logprob: -9.580291748046875
    10. ')' → logprob: -9.580291748046875

Token 104: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.04275776818394661
    2. 'car' → logprob: -3.542757749557495
    3. ' bits' → logprob: -5.667757987976074
    4. ' characters' → logprob: -5.667757987976074
    5. ' caracteres' → logprob: -6.292757987976074
    6. ' caractère' → logprob: -6.292757987976074
    7. ' car' → logprob: -7.667757987976074
    8. 'bits' → logprob: -7.792757987976074
    9. '```' → logprob: -7.917757987976074
    10. ' caract' → logprob: -8.417757987976074

Token 105: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1884487271308899
    2. ':
' → logprob: -2.938448667526245
    3. ':' → logprob: -3.188448667526245
    4. '.' → logprob: -3.813448667526245
    5. '"""' → logprob: -4.063448905944824
    6. '):' → logprob: -4.563448905944824
    7. ')' → logprob: -4.813448905944824
    8. '":' → logprob: -5.188448905944824
    9. '```' → logprob: -5.688448905944824
    10. '"' → logprob: -5.688448905944824

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004218605346977711
    2. '"""' → logprob: -5.754218578338623
    3. '"""
' → logprob: -7.129218578338623
    4. '"' → logprob: -9.879219055175781
    5. ' """
' → logprob: -10.004219055175781
    6. '""' → logprob: -10.129219055175781
    7. '
' → logprob: -10.379219055175781
    8. ')' → logprob: -10.879219055175781
    9. ' """' → logprob: -11.004219055175781
    10. '    ' → logprob: -11.379219055175781

Token 107: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08633768558502197
    2. '"""' → logprob: -2.5863375663757324
    3. '"""
' (adapté à ' """
') → logprob: -4.961337566375732
    4. '""' → logprob: -8.58633804321289
    5. '```' → logprob: -9.33633804321289
    6. ')' → logprob: -10.21133804321289
    7. '"' → logprob: -10.21133804321289
    8. ' """' → logprob: -10.71133804321289
    9. ' """
' → logprob: -11.33633804321289
    10. '    ' → logprob: -11.83633804321289

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010342398309148848
    2. 'return' → logprob: -9.625102996826172
    3. ' return' → logprob: -10.375102996826172
    4. '    
' → logprob: -13.125102996826172
    5. '   ' → logprob: -13.250102996826172
    6. '
' → logprob: -13.750102996826172
    7. '```' → logprob: -14.500102996826172
    8. '    ' → logprob: -15.000102996826172
    9. 'b' → logprob: -16.125102996826172
    10. '  ' → logprob: -16.375102996826172

Token 109: ' binary' (ID: 15600)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04768601432442665
    2. 'binary' (adapté à ' binary') → logprob: -3.2976861000061035
    3. 'bin' → logprob: -4.7976861000061035
    4. '   ' → logprob: -6.9226861000061035
    5. 'b' → logprob: -8.672685623168945
    6. ' return' → logprob: -9.422685623168945
    7. 'formatted' → logprob: -9.422685623168945
    8. 'format' → logprob: -10.922685623168945
    9. 'if' → logprob: -11.672685623168945
    10. ' binary' → logprob: -13.047685623168945

Token 110: '_str' (ID: 6182)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.7565661072731018
    2. '_str' → logprob: -0.8815661072731018
    3. '_rep' → logprob: -2.756566047668457
    4. '_repr' → logprob: -3.256566047668457
    5. ' =' → logprob: -4.631566047668457
    6. '=' → logprob: -5.881566047668457
    7. 'string' → logprob: -6.881566047668457
    8. '_' → logprob: -7.881566047668457
    9. 'str' → logprob: -8.131566047668457
    10. '_bin' → logprob: -9.631566047668457

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694060802459717
    2. '=' → logprob: -2.1269407272338867
    3. '   ' → logprob: -11.376940727233887
    4. ' ' → logprob: -14.876940727233887
    5. ' ' → logprob: -16.00193977355957
    6. '=format' → logprob: -16.25193977355957
    7. '=f' → logprob: -16.25193977355957
    8. '=b' → logprob: -16.37693977355957
    9. '    ' → logprob: -16.50193977355957
    10. 's' → logprob: -16.87693977355957

Token 112: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.7873339056968689
    2. ' format' → logprob: -1.2873339653015137
    3. ' bin' → logprob: -1.9123339653015137
    4. 'format' → logprob: -2.1623339653015137
    5. ' f' → logprob: -5.662333965301514
    6. 'f' → logprob: -6.287333965301514
    7. '   ' → logprob: -7.162333965301514
    8. ' ' → logprob: -11.287333488464355
    9. '(bin' → logprob: -11.912333488464355
    10. '  ' → logprob: -12.037333488464355

Token 113: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.029755238443613052
    2. '(' → logprob: -3.5297553539276123
    3. 'number' → logprob: -12.654755592346191
    4. ' (' → logprob: -14.404755592346191
    5. '(numero' → logprob: -14.904755592346191
    6. '(
' → logprob: -15.154755592346191
    7. '(n' → logprob: -15.654755592346191
    8. '(numbers' → logprob: -16.654754638671875
    9. '[number' → logprob: -17.654754638671875
    10. '(num' → logprob: -17.654754638671875

Token 114: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.0014269021339714527
    2. '(number' → logprob: -6.751426696777344
    3. '())[' → logprob: -8.751426696777344
    4. '[number' → logprob: -10.501426696777344
    5. ')' → logprob: -10.751426696777344
    6. 'number' → logprob: -10.751426696777344
    7. '(' → logprob: -11.626426696777344
    8. ' )[' → logprob: -11.626426696777344
    9. '   ' → logprob: -12.751426696777344
    10. ').' → logprob: -12.751426696777344

Token 115: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -16.75
    4. '
' → logprob: -17.0
    5. '3' → logprob: -17.25
    6. '２' → logprob: -18.5
    7. '۲' → logprob: -19.0
    8. '

' → logprob: -19.125
    9. 'remove' → logprob: -19.625
    10. '-' → logprob: -19.75

Token 116: ':]' (ID: 67377)
  Prédit: ':].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.0008127244072966278
    2. ':]' → logprob: -7.375812530517578
    3. '].' → logprob: -8.875812530517578
    4. ':' → logprob: -10.500812530517578
    5. ']' → logprob: -11.500812530517578
    6. ').' → logprob: -12.750812530517578
    7. ' :' → logprob: -13.000812530517578
    8. '.' → logprob: -13.500812530517578
    9. ' :]' → logprob: -13.625812530517578
    10. ' ].' → logprob: -14.875812530517578

Token 117: '          ' (ID: 3550)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014484785497188568
    2. 'binary' → logprob: -4.889484882354736
    3. '
' → logprob: -6.139484882354736
    4. '    
' → logprob: -6.389484882354736
    5. 'if' → logprob: -6.639484882354736
    6. 'while' → logprob: -7.889484882354736
    7. 'pad' → logprob: -7.889484882354736
    8. '.binary' → logprob: -8.764484405517578
    9. '.pad' → logprob: -8.889484405517578
    10. 'return' → logprob: -9.139484405517578

Token 118: ' #' (ID: 1069)
  Prédit: '.z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.7506713271141052
    2. '
' → logprob: -1.12567138671875
    3. '.r' → logprob: -2.37567138671875
    4. '.' → logprob: -3.12567138671875
    5. '   ' → logprob: -3.62567138671875
    6. 'r' → logprob: -4.12567138671875
    7. 'z' → logprob: -4.37567138671875
    8. 'if' → logprob: -5.37567138671875
    9. '.pad' → logprob: -6.12567138671875
    10. 'binary' → logprob: -7.25067138671875

Token 119: ' En' (ID: 2130)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.558365523815155
    2. 'r' → logprob: -1.3083655834197998
    3. 'binary' → logprob: -2.0583655834198
    4. '.z' → logprob: -3.6833655834198
    5. '
' → logprob: -6.308365345001221
    6. '   ' → logprob: -6.683365345001221
    7. '.r' → logprob: -7.058365345001221
    8. 'if' → logprob: -8.308365821838379
    9. ' z' → logprob: -8.683365821838379
    10. ' binary' → logprob: -8.933365821838379

Token 120: 'lever' (ID: 43558)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.530454397201538
    2. 'z' → logprob: -1.905454397201538
    3. 'code' → logprob: -2.030454397201538
    4. 'tail' → logprob: -2.780454397201538
    5. 'binary' → logprob: -2.905454397201538
    6. 's' → logprob: -2.905454397201538
    7. 'format' → logprob: -3.530454397201538
    8. 'c' → logprob: -3.655454397201538
    9. 'lever' → logprob: -3.655454397201538
    10. 'l' → logprob: -3.905454397201538

Token 121: ' le' (ID: 505)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17462213337421417
    2. '0' → logprob: -2.049622058868408
    3. '('' → logprob: -4.299622058868408
    4. '"' → logprob: -5.299622058868408
    5. ''s' → logprob: -5.799622058868408
    6. ' '' → logprob: -5.799622058868408
    7. ''l' → logprob: -6.549622058868408
    8. 'le' → logprob: -6.674622058868408
    9. '<|end|>' → logprob: -6.799622058868408
    10. 'the' → logprob: -6.924622058868408

Token 122: ' pré' (ID: 9424)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4772169589996338
    2. ''' → logprob: -0.9772169589996338
    3. 'b' → logprob: -6.102216720581055
    4. ''b' → logprob: -7.477216720581055
    5. '"' → logprob: -8.727216720581055
    6. ''s' → logprob: -10.352216720581055
    7. ''x' → logprob: -10.352216720581055
    8. ' '' → logprob: -10.727216720581055
    9. ''l' → logprob: -10.852216720581055
    10. 'ob' → logprob: -11.227216720581055

Token 123: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.00039968726923689246
    2. 'fi' → logprob: -8.375399589538574
    3. '0' → logprob: -8.750399589538574
    4. 'f' → logprob: -11.875399589538574
    5. 'fixed' → logprob: -13.750399589538574
    6. 'Fix' → logprob: -14.625399589538574
    7. 'x' → logprob: -15.000399589538574
    8. 'ix' → logprob: -15.125399589538574
    9. 'ifix' → logprob: -15.125399589538574
    10. 'if' → logprob: -15.375399589538574

Token 124: 'e' (ID: 68)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2295605093240738
    2. '0' → logprob: -1.8545604944229126
    3. '"' → logprob: -3.104560613632202
    4. ''b' → logprob: -6.354560375213623
    5. 'x' → logprob: -7.354560375213623
    6. 'b' → logprob: -7.729560375213623
    7. ' '' → logprob: -8.479560852050781
    8. '`' → logprob: -8.729560852050781
    9. ''s' → logprob: -8.729560852050781
    10. ''x' → logprob: -8.854560852050781

Token 125: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004293153528124094
    2. '0' → logprob: -5.754292964935303
    3. '"' → logprob: -7.004292964935303
    4. ' '' → logprob: -8.754293441772461
    5. ''b' → logprob: -10.129293441772461
    6. ''s' → logprob: -13.129293441772461
    7. ' ' → logprob: -13.379293441772461
    8. 'b' → logprob: -13.629293441772461
    9. ''o' → logprob: -14.004293441772461
    10. '`' → logprob: -14.129293441772461

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ''' → logprob: -13.750000953674316
    3. 'b' → logprob: -18.375001907348633
    4. ' ' → logprob: -20.875001907348633
    5. '"' → logprob: -21.125001907348633
    6. ''b' → logprob: -21.375001907348633
    7. 'ob' → logprob: -21.625001907348633
    8. '`' → logprob: -24.500001907348633
    9. 'ox' → logprob: -24.625001907348633
    10. '０' → logprob: -25.250001907348633

Token 127: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ''b' → logprob: -21.0
    3. ' b' → logprob: -22.625
    4. ''' → logprob: -22.625
    5. 'x' → logprob: -23.5
    6. '	b' → logprob: -23.75
    7. 'bin' → logprob: -24.125
    8. '')' → logprob: -24.25
    9. '
' → logprob: -24.375
    10. '0' → logprob: -24.375

Token 128: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25921952724456787
    2. ').' → logprob: -2.5092196464538574
    3. ')' → logprob: -3.5092196464538574
    4. '').' → logprob: -3.6342196464538574
    5. '')' → logprob: -3.6342196464538574
    6. ''.' → logprob: -3.7592196464538574
    7. ''
' → logprob: -4.759219646453857
    8. '   ' → logprob: -5.009219646453857
    9. 'binary' → logprob: -5.259219646453857
    10. '.' → logprob: -5.759219646453857

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18691636621952057
    2. '
' → logprob: -2.4369163513183594
    3. 'binary' → logprob: -3.1869163513183594
    4. 'if' → logprob: -4.436916351318359
    5. '    
' → logprob: -4.561916351318359
    6. '.' → logprob: -4.686916351318359
    7. '.binary' → logprob: -5.936916351318359
    8. ' if' → logprob: -6.186916351318359
    9. 'return' → logprob: -6.936916351318359
    10. '  
' → logprob: -6.936916351318359

Token 130: ' padded' (ID: 71498)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.3288520872592926
    2. 'return' → logprob: -1.7038520574569702
    3. '   ' → logprob: -2.9538521766662598
    4. 'if' → logprob: -3.2038521766662598
    5. 'formatted' → logprob: -5.95385217666626
    6. ' return' → logprob: -7.07885217666626
    7. ' binary' → logprob: -7.32885217666626
    8. ' if' → logprob: -7.70385217666626
    9. '    
' → logprob: -8.078851699829102
    10. '
' → logprob: -8.328851699829102

Token 131: '_binary' (ID: 77551)
  Prédit: '_binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_binary' → logprob: -0.07728967070579529
    2. '_' → logprob: -3.452289581298828
    3. '_string' → logprob: -3.827289581298828
    4. '_str' → logprob: -3.952289581298828
    5. '_bin' → logprob: -7.202289581298828
    6. ' =' → logprob: -8.077289581298828
    7. '_b' → logprob: -8.077289581298828
    8. '=' → logprob: -9.202289581298828
    9. ' ' → logprob: -9.577289581298828
    10. 'binary' → logprob: -9.952289581298828

Token 132: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0002342912630410865
    2. '_string' → logprob: -8.500234603881836
    3. '_' → logprob: -11.000234603881836
    4. '=' → logprob: -12.500234603881836
    5. '_s' → logprob: -12.625234603881836
    6. ' =' → logprob: -12.750234603881836
    7. 'str' → logprob: -12.750234603881836
    8. '_binary' → logprob: -15.250234603881836
    9. ' _' → logprob: -16.000234603881836
    10. '_code' → logprob: -16.125234603881836

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.751928329467773
    4. 's' → logprob: -19.501928329467773
    5. ' ' → logprob: -19.501928329467773
    6. ' =
' → logprob: -20.126928329467773
    7. ')' → logprob: -20.126928329467773
    8. ',' → logprob: -20.626928329467773
    9. '＝' → logprob: -21.001928329467773
    10. '.=' → logprob: -21.251928329467773

Token 134: ' '' (ID: 461)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.47557398676872253
    2. ' binary' → logprob: -0.9755740165710449
    3. ''' → logprob: -7.100574016571045
    4. ' '' → logprob: -8.100573539733887
    5. ''b' → logprob: -9.100573539733887
    6. ' ' → logprob: -9.725573539733887
    7. '.binary' → logprob: -10.100573539733887
    8. 'bin' → logprob: -10.225573539733887
    9. '"' → logprob: -10.350573539733887
    10. '(binary' → logprob: -10.725573539733887

Token 135: '0' (ID: 15)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.16034486889839172
    2. '0' → logprob: -1.9103448390960693
    3. '000' → logprob: -9.410345077514648
    4. ' binary' → logprob: -10.410345077514648
    5. 'bin' → logprob: -12.285345077514648
    6. '(binary' → logprob: -13.785345077514648
    7. '.binary' → logprob: -14.035345077514648
    8. 'z' → logprob: -14.035345077514648
    9. ''' → logprob: -14.410345077514648
    10. '00' → logprob: -14.785345077514648

Token 136: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00422572810202837
    2. ''.' → logprob: -5.504225730895996
    3. ''*' → logprob: -9.004225730895996
    4. '"' → logprob: -11.754225730895996
    5. '```' → logprob: -13.004225730895996
    6. '*' → logprob: -13.004225730895996
    7. ''s' → logprob: -13.129225730895996
    8. ''
' → logprob: -13.254225730895996
    9. '0' → logprob: -13.504225730895996
    10. ''''' → logprob: -13.629225730895996

Token 137: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.023969680070877075
    2. '*(' → logprob: -3.8989696502685547
    3. ' *' → logprob: -5.773969650268555
    4. '[' → logprob: -9.523969650268555
    5. '.' → logprob: -9.773969650268555
    6. '```' → logprob: -10.273969650268555
    7. '*[' → logprob: -10.523969650268555
    8. '*p' → logprob: -10.648969650268555
    9. '*.' → logprob: -11.398969650268555
    10. '**' → logprob: -11.523969650268555

Token 138: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.009265219792723656
    2. '(length' → logprob: -4.759265422821045
    3. ' (' → logprob: -7.384265422821045
    4. 'max' → logprob: -10.509264945983887
    5. ' max' → logprob: -13.509264945983887
    6. '(' → logprob: -15.259264945983887
    7. '(abs' → logprob: -15.634264945983887
    8. '   ' → logprob: -15.759264945983887
    9. '[length' → logprob: -16.134265899658203
    10. '(min' → logprob: -17.259265899658203

Token 139: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0001129602751461789
    2. ' length' → logprob: -9.250112533569336
    3. 'max' → logprob: -11.000112533569336
    4. '(length' → logprob: -16.750112533569336
    5. ' max' → logprob: -17.125112533569336
    6. 'len' → logprob: -17.375112533569336
    7. 'leng' → logprob: -17.625112533569336
    8. '   ' → logprob: -18.375112533569336
    9. '	length' → logprob: -20.250112533569336
    10. ' ' → logprob: -20.375112533569336

Token 140: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0012024929746985435
    2. '-' → logprob: -6.751202583312988
    3. '-l' → logprob: -10.751202583312988
    4. ' ' → logprob: -11.501202583312988
    5. '   ' → logprob: -14.501202583312988
    6. ')' → logprob: -16.501201629638672
    7. '  ' → logprob: -17.126201629638672
    8. 'len' → logprob: -18.001201629638672
    9. '```' → logprob: -18.251201629638672
    10. '[len' → logprob: -18.501201629638672

Token 141: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0001584850688232109
    2. ' len' → logprob: -8.750158309936523
    3. '   ' → logprob: -20.000158309936523
    4. '(len' → logprob: -20.375158309936523
    5. '	len' → logprob: -20.500158309936523
    6. '[len' → logprob: -22.375158309936523
    7. 'min' → logprob: -23.125158309936523
    8. '=len' → logprob: -23.625158309936523
    9. 'Len' → logprob: -24.125158309936523
    10. ' ' → logprob: -24.500158309936523

Token 142: '(binary' (ID: 139383)
  Prédit: '(binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(binary' → logprob: -4.429896944202483e-05
    2. '(p' → logprob: -10.750043869018555
    3. 'binary' → logprob: -10.750043869018555
    4. '(' → logprob: -13.625043869018555
    5. '(b' → logprob: -16.250043869018555
    6. 'p' → logprob: -17.625043869018555
    7. ' binary' → logprob: -18.250043869018555
    8. '_binary' → logprob: -18.750043869018555
    9. '(bin' → logprob: -19.000043869018555
    10. ' (' → logprob: -19.250043869018555

Token 143: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.6047699318733066e-05
    2. 'str' → logprob: -11.125016212463379
    3. '   ' → logprob: -14.750016212463379
    4. 'Str' → logprob: -15.250016212463379
    5. 'string' → logprob: -15.625016212463379
    6. '_' → logprob: -15.750016212463379
    7. ')' → logprob: -16.000015258789062
    8. '_s' → logprob: -17.000015258789062
    9. 'binary' → logprob: -17.000015258789062
    10. '_string' → logprob: -17.500015258789062

Token 144: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. '))' → logprob: -13.000003814697266
    3. ' )' → logprob: -13.500003814697266
    4. ')+' → logprob: -17.250003814697266
    5. ')
' → logprob: -17.375003814697266
    6. '')' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.250003814697266
    8. ')`' → logprob: -19.625003814697266
    9. '）' → logprob: -20.125003814697266
    10. '})' → logprob: -20.250003814697266

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043102685594931245
    2. ' +' → logprob: -7.750431060791016
    3. '+
' → logprob: -15.000431060791016
    4. '+p' → logprob: -16.375431060791016
    5. ')' → logprob: -19.125431060791016
    6. '+

' → logprob: -20.000431060791016
    7. '>' → logprob: -20.250431060791016
    8. '+b' → logprob: -20.375431060791016
    9. '   ' → logprob: -20.500431060791016
    10. '＋' → logprob: -20.750431060791016

Token 146: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.0040785204619169235
    2. ' binary' → logprob: -5.504078388214111
    3. 'bin' → logprob: -16.629077911376953
    4. 'b' → logprob: -18.629077911376953
    5. '(binary' → logprob: -18.879077911376953
    6. 'Binary' → logprob: -19.129077911376953
    7. ' ' → logprob: -19.379077911376953
    8. '_binary' → logprob: -20.004077911376953
    9. '.binary' → logprob: -20.254077911376953
    10. '   ' → logprob: -20.754077911376953

Token 147: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00026336227892898023
    2. 'str' → logprob: -8.250263214111328
    3. '_' → logprob: -13.875263214111328
    4. '_string' → logprob: -14.125263214111328
    5. 'string' → logprob: -15.250263214111328
    6. 'r' → logprob: -16.500263214111328
    7. 's' → logprob: -18.125263214111328
    8. '_STR' → logprob: -18.125263214111328
    9. 'Str' → logprob: -18.750263214111328
    10. '_s' → logprob: -18.875263214111328

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05413181707262993
    2. 'return' → logprob: -3.0541317462921143
    3. '
' → logprob: -5.554131984710693
    4. ' return' → logprob: -6.429131984710693
    5. '    
' → logprob: -10.679131507873535
    6. '	return' → logprob: -11.179131507873535
    7. '  ' → logprob: -12.929131507873535
    8. ' ' → logprob: -13.929131507873535
    9. ':return' → logprob: -13.929131507873535
    10. '```' → logprob: -14.429131507873535

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01146168727427721
    2. 'return' → logprob: -4.5114617347717285
    3. ' return' → logprob: -8.01146125793457
    4. '
' → logprob: -9.51146125793457
    5. '    
' → logprob: -12.63646125793457
    6. '	return' → logprob: -12.88646125793457
    7. '  ' → logprob: -13.76146125793457
    8. ' ' → logprob: -14.63646125793457
    9. ':return' → logprob: -15.38646125793457
    10. '```' → logprob: -15.88646125793457

Token 150: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002489423204679042
    2. '   ' → logprob: -8.500248908996582
    3. ' return' → logprob: -10.000248908996582
    4. '	return' → logprob: -18.2502498626709
    5. ':return' → logprob: -19.0002498626709
    6. '```' → logprob: -19.5002498626709
    7. ' ' → logprob: -20.3752498626709
    8. '    
' → logprob: -20.5002498626709
    9. '
' → logprob: -20.5002498626709
    10. 'eturn' → logprob: -20.7502498626709

Token 151: ' padded' (ID: 71498)
  Prédit: ' padded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' padded' → logprob: -0.201771542429924
    2. 'p' → logprob: -1.7017714977264404
    3. ' p' → logprob: -7.9517717361450195
    4. ' ' → logprob: -12.82677173614502
    5. 'pad' → logprob: -13.95177173614502
    6. '(p' → logprob: -14.32677173614502
    7. ' padd' → logprob: -14.57677173614502
    8. ' padding' → logprob: -14.82677173614502
    9. '_p' → logprob: -14.95177173614502
    10. ' ' → logprob: -15.07677173614502

Token 152: '_binary' (ID: 77551)
  Prédit: '_binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_binary' → logprob: -0.015234449878334999
    2. 'binary' → logprob: -4.390234470367432
    3. 'ed' → logprob: -6.015234470367432
    4. 'p' → logprob: -8.890233993530273
    5. 'd' → logprob: -9.515233993530273
    6. 'ary' → logprob: -10.390233993530273
    7. 'ned' → logprob: -12.265233993530273
    8. 'pad' → logprob: -12.515233993530273
    9. 'ad' → logprob: -12.890233993530273
    10. 'added' → logprob: -12.890233993530273

Token 153: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.000903480569832027
    2. 'str' → logprob: -7.500903606414795
    3. 'ed' → logprob: -8.375903129577637
    4. 'r' → logprob: -9.500903129577637
    5. 'd' → logprob: -10.125903129577637
    6. '_string' → logprob: -13.375903129577637
    7. 'red' → logprob: -13.875903129577637
    8. '_' → logprob: -14.250903129577637
    9. 'Str' → logprob: -15.750903129577637
    10. '_r' → logprob: -15.875903129577637

Token 154: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.504070520401001
    2. '<|end|>' → logprob: -1.754070520401001
    3. '\n' → logprob: -2.254070520401001
    4. '(' → logprob: -3.504070520401001
    5. '#' → logprob: -3.629070520401001
    6. ')' → logprob: -4.504070281982422
    7. '\' → logprob: -4.504070281982422
    8. '[' → logprob: -4.754070281982422
    9. 'def' → logprob: -4.754070281982422
    10. ' 
' → logprob: -5.879070281982422

Token 156: ' compute' (ID: 23864)
  Prédit: ' format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' format' → logprob: -0.05705520138144493
    2. ' calculate' → logprob: -3.9320552349090576
    3. ' decimal' → logprob: -4.5570549964904785
    4. ' is' → logprob: -5.4320549964904785
    5. ' convert' → logprob: -5.8070549964904785
    6. ' parse' → logprob: -6.1820549964904785
    7. 'format' → logprob: -6.1820549964904785
    8. ' compute' → logprob: -6.6820549964904785
    9. ' main' → logprob: -6.8070549964904785
    10. ' check' → logprob: -6.8070549964904785

Token 157: '_d' (ID: 1565)
  Prédit: '_par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.6433337926864624
    2. '_h' → logprob: -1.6433337926864624
    3. '_crc' → logprob: -2.518333911895752
    4. '_checksum' → logprob: -2.518333911895752
    5. '_' → logprob: -3.143333911895752
    6. '_x' → logprob: -4.018333911895752
    7. '_sum' → logprob: -4.643333911895752
    8. '_hash' → logprob: -4.893333911895752
    9. '_binary' → logprob: -5.143333911895752
    10. '_square' → logprob: -5.643333911895752

Token 158: 'if' (ID: 366)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istance' → logprob: -1.1913965940475464
    2. 'is' → logprob: -1.4413965940475464
    3. 'elta' → logprob: -1.5663965940475464
    4. 'ec' → logprob: -1.6913965940475464
    5. 'ifference' → logprob: -3.941396713256836
    6. 'ist' → logprob: -4.191396713256836
    7. 'if' → logprob: -5.941396713256836
    8. 'e' → logprob: -5.941396713256836
    9. 'iff' → logprob: -6.191396713256836
    10. 'ouble' → logprob: -6.191396713256836

Token 159: 'ferences' (ID: 10131)
  Prédit: 'ference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ference' → logprob: -0.00011677479778882116
    2. 'férence' → logprob: -10.250116348266602
    3. 'ferences' → logprob: -10.500116348266602
    4. 'fer' → logprob: -10.625116348266602
    5. 'f' → logprob: -10.750116348266602
    6. '_' → logprob: -12.500116348266602
    7. 'FERENCE' → logprob: -13.500116348266602
    8. 'fic' → logprob: -13.875116348266602
    9. '```' → logprob: -15.250116348266602
    10. '_f' → logprob: -15.500116348266602

Token 160: '(n' (ID: 2406)
  Prédit: '(numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.46172812581062317
    2. '(array' → logprob: -2.586728096008301
    3. '(arr' → logprob: -2.836728096008301
    4. '(number' → logprob: -3.336728096008301
    5. '(lst' → logprob: -3.461728096008301
    6. '(a' → logprob: -3.586728096008301
    7. '(list' → logprob: -3.586728096008301
    8. '(values' → logprob: -3.836728096008301
    9. '(strings' → logprob: -3.836728096008301
    10. '(sequence' → logprob: -4.211728096008301

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3536848723888397
    2. 'umber' → logprob: -2.103684902191162
    3. 'um' → logprob: -2.228684902191162
    4. ')' → logprob: -4.103684902191162
    5. ',' → logprob: -4.103684902191162
    6. 'umbers' → logprob: -4.228684902191162
    7. '1' → logprob: -4.603684902191162
    8. '):
' → logprob: -5.478684902191162
    9. 'a' → logprob: -6.103684902191162
    10. 'u' → logprob: -6.603684902191162

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012486852938309312
    2. 'dif' → logprob: -7.376248836517334
    3. 'diff' → logprob: -8.376248359680176
    4. '
' → logprob: -8.751248359680176
    5. 'results' → logprob: -9.501248359680176
    6. 'result' → logprob: -10.126248359680176
    7. ' results' → logprob: -10.501248359680176
    8. '    
' → logprob: -10.626248359680176
    9. '```' → logprob: -11.376248359680176
    10. ' result' → logprob: -11.751248359680176

Token 163: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49076470732688904
    2. 'dif' → logprob: -1.2407647371292114
    3. 'diff' → logprob: -3.490764617919922
    4. ' results' → logprob: -3.740764617919922
    5. 'results' → logprob: -4.240764617919922
    6. ' differences' → logprob: -4.615764617919922
    7. 'result' → logprob: -4.990764617919922
    8. ' result' → logprob: -5.115764617919922
    9. ' dif' → logprob: -5.990764617919922
    10. ' diff' → logprob: -6.865764617919922

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31794288754463196
    2. '"""
' → logprob: -1.4429428577423096
    3. '"""' → logprob: -4.567943096160889
    4. ' """
' → logprob: -5.192943096160889
    5. '"' → logprob: -5.442943096160889
    6. 'diff' → logprob: -5.692943096160889
    7. 'result' → logprob: -5.817943096160889
    8. 'Calcul' → logprob: -6.067943096160889
    9. 'dif' → logprob: -6.192943096160889
    10. 'def' → logprob: -6.817943096160889

Token 165: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43105483055114746
    2. ' result' → logprob: -2.1810548305511475
    3. ' """
' → logprob: -2.5560548305511475
    4. 'diff' → logprob: -3.4310548305511475
    5. ' results' → logprob: -3.5560548305511475
    6. 'dif' → logprob: -3.8060548305511475
    7. 'result' → logprob: -4.181055068969727
    8. ' differences' → logprob: -4.306055068969727
    9. '"""
' → logprob: -4.306055068969727
    10. ' dif' → logprob: -4.806055068969727

Token 166: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00024048985505942255
    2. 'i' → logprob: -8.500240325927734
    3. ' ' → logprob: -11.125240325927734
    4. ' n' → logprob: -11.625240325927734
    5. '  ' → logprob: -12.750240325927734
    6. ' _' → logprob: -12.875240325927734
    7. '_' → logprob: -13.375240325927734
    8. '   ' → logprob: -13.375240325927734
    9. '	i' → logprob: -13.875240325927734
    10. ' ' → logprob: -14.000240325927734

Token 167: ' nombre' (ID: 9733)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1129029169678688
    2. 'i' → logprob: -2.237902879714966
    3. 'k' → logprob: -10.737902641296387
    4. ' k' → logprob: -10.862902641296387
    5. ' number' → logprob: -10.862902641296387
    6. ' ' → logprob: -12.737902641296387
    7. 'n' → logprob: -13.237902641296387
    8. 'num' → logprob: -13.362902641296387
    9. 'number' → logprob: -13.362902641296387
    10. ' n' → logprob: -13.487902641296387

Token 168: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2507677376270294
    2. ' de' → logprob: -1.625767707824707
    3. ' from' → logprob: -4.875767707824707
    4. 'de' → logprob: -5.000767707824707
    5. ' entre' → logprob: -5.500767707824707
    6. 'i' → logprob: -5.625767707824707
    7. 'from' → logprob: -6.750767707824707
    8. ' k' → logprob: -7.750767707824707
    9. 'k' → logprob: -8.125767707824707
    10. ' n' → logprob: -8.750767707824707

Token 169: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6224132180213928
    2. 'de' → logprob: -1.122413158416748
    3. ' dans' → logprob: -3.247413158416748
    4. ' in' → logprob: -3.372413158416748
    5. ' allant' → logprob: -3.872413158416748
    6. 'dans' → logprob: -3.997413158416748
    7. ' en' → logprob: -4.122413158416748
    8. 'in' → logprob: -5.122413158416748
    9. ' entre' → logprob: -6.747413158416748
    10. ' ' → logprob: -7.747413158416748

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29722991585731506
    2. ' range' → logprob: -2.1722300052642822
    3. '1' → logprob: -2.4222300052642822
    4. 'range' → logprob: -3.5472300052642822
    5. ' ' → logprob: -3.6722300052642822
    6. 'n' → logprob: -8.797229766845703
    7. '2' → logprob: -9.672229766845703
    8. ' n' → logprob: -10.672229766845703
    9. ' i' → logprob: -13.734729766845703
    10. '`' → logprob: -13.859729766845703

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12387730926275253
    2. '1' → logprob: -2.2488772869110107
    3. 'range' → logprob: -4.99887752532959
    4. ' range' → logprob: -6.12387752532959
    5. ' ' → logprob: -6.24887752532959
    6. '2' → logprob: -9.24887752532959
    7. 'n' → logprob: -10.62387752532959
    8. ' n' → logprob: -13.74887752532959
    9. 'de' → logprob: -13.99887752532959
    10. '3' → logprob: -14.49887752532959

Token 172: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.012871124781668186
    2. 'à' → logprob: -4.637871265411377
    3. ' ' → logprob: -6.012871265411377
    4. ' a' → logprob: -8.012870788574219
    5. '   ' → logprob: -8.262870788574219
    6. ' jusqu' → logprob: -10.512870788574219
    7. '  ' → logprob: -11.512870788574219
    8. ''à' → logprob: -11.512870788574219
    9. ' ' → logprob: -11.762870788574219
    10. 'a' → logprob: -12.387870788574219

Token 173: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0619698166847229
    2. 'n' → logprob: -2.811969757080078
    3. '(n' → logprob: -13.686969757080078
    4. ' (' → logprob: -15.061969757080078
    5. '	n' → logprob: -15.061969757080078
    6. '
' → logprob: -15.811969757080078
    7. ' ' → logprob: -15.936969757080078
    8. ',n' → logprob: -16.561969757080078
    9. '<n' → logprob: -16.686969757080078
    10. ')n' → logprob: -16.936969757080078

Token 174: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024191489443182945
    2. ' ,' → logprob: -3.899191379547119
    3. ' (' → logprob: -5.774191379547119
    4. ':' → logprob: -8.149191856384277
    5. ',
' → logprob: -9.774191856384277
    6. '
' → logprob: -9.899191856384277
    7. ' :' → logprob: -10.899191856384277
    8. '(' → logprob: -11.024191856384277
    9. '-' → logprob: -11.024191856384277
    10. ' inclus' → logprob: -11.149191856384277

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040874239057302475
    2. ' ' → logprob: -5.504087448120117
    3. '-' → logprob: -11.754087448120117
    4. ')' → logprob: -15.129087448120117
    5. ' -' → logprob: -15.379087448120117
    6. '2' → logprob: -15.879087448120117
    7. 'n' → logprob: -16.129087448120117
    8. '   ' → logprob: -16.379087448120117
    9. '  ' → logprob: -16.504087448120117
    10. ' n' → logprob: -16.754087448120117

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006902746972627938
    2. ':' → logprob: -8.375690460205078
    3. '   ' → logprob: -8.375690460205078
    4. ' ,' → logprob: -8.750690460205078
    5. ' :' → logprob: -9.875690460205078
    6. ',
' → logprob: -11.500690460205078
    7. ':
' → logprob: -12.250690460205078
    8. 'def' → logprob: -13.750690460205078
    9. ' (' → logprob: -14.000690460205078
    10. ' :
' → logprob: -14.750690460205078

Token 177: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3736862242221832
    2. ' calculate' → logprob: -2.7486863136291504
    3. ' calc' → logprob: -2.8736863136291504
    4. ' calcul' → logprob: -2.9986863136291504
    5. ' retourne' → logprob: -3.2486863136291504
    6. ' calculates' → logprob: -3.3736863136291504
    7. ' returns' → logprob: -3.8736863136291504
    8. ' compute' → logprob: -4.37368631362915
    9. ' return' → logprob: -5.24868631362915
    10. '    ' → logprob: -5.49868631362915

Token 178: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00115617411211133
    2. 'ul' → logprob: -6.876156330108643
    3. 'ulé' → logprob: -9.376155853271484
    4. 'uler' → logprob: -10.501155853271484
    5. 'cule' → logprob: -12.501155853271484
    6. 'ulte' → logprob: -13.001155853271484
    7. '   ' → logprob: -13.751155853271484
    8. 'ult' → logprob: -14.001155853271484
    9. 'l' → logprob: -14.876155853271484
    10. '\' → logprob: -15.126155853271484

Token 179: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.299358606338501
    2. ' les' → logprob: -1.424358606338501
    3. '_' → logprob: -5.299358367919922
    4. ' le' → logprob: -5.924358367919922
    5. 's' → logprob: -6.424358367919922
    6. ' une' → logprob: -6.549358367919922
    7. '   ' → logprob: -6.674358367919922
    8. '(' → logprob: -7.049358367919922
    9. ' l' → logprob: -7.299358367919922
    10. ' ' → logprob: -7.549358367919922

Token 180: ' positions' (ID: 15897)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.37640130519866943
    2. 'dif' → logprob: -1.6264013051986694
    3. ' différences' → logprob: -2.751401424407959
    4. 'd' → logprob: -4.376401424407959
    5. 'i' → logprob: -5.251401424407959
    6. 'éc' → logprob: -5.376401424407959
    7. '[' → logprob: -5.501401424407959
    8. ' differences' → logprob: -5.626401424407959
    9. '[i' → logprob: -6.001401424407959
    10. 'difference' → logprob: -6.001401424407959

Token 181: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.12564408779144287
    2. ' où' → logprob: -2.6256442070007324
    3. 'où' → logprob: -4.500644207000732
    4. ' ' → logprob: -4.500644207000732
    5. 'des' → logprob: -4.875644207000732
    6. ' de' → logprob: -5.500644207000732
    7. 'de' → logprob: -5.625644207000732
    8. 'd' → logprob: -6.250644207000732
    9. ' d' → logprob: -6.750644207000732
    10. ' where' → logprob: -6.875644207000732

Token 182: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6557524800300598
    2. ' changement' → logprob: -2.155752420425415
    3. ' transition' → logprob: -2.530752420425415
    4. ' ' → logprob: -3.030752420425415
    5. ''' → logprob: -3.155752420425415
    6. ' '' → logprob: -3.280752420425415
    7. ' bits' → logprob: -3.905752420425415
    8. ' bit' → logprob: -4.155752658843994
    9. 'bit' → logprob: -4.155752658843994
    10. ''un' → logprob: -4.280752658843994

Token 183: ' première' (ID: 23423)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.40440306067466736
    2. '1' → logprob: -2.0294029712677
    3. 'prem' → logprob: -2.1544029712677
    4. ''' → logprob: -3.0294029712677
    5. ''d' → logprob: -4.654403209686279
    6. 'ch' → logprob: -5.654403209686279
    7. ' première' → logprob: -5.779403209686279
    8. 'chaine' → logprob: -5.904403209686279
    9. ' '' → logprob: -6.029403209686279
    10. ' différence' → logprob: -6.404403209686279

Token 184: ' différence' (ID: 79196)
  Prédit: ' différence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différence' → logprob: -0.05856644734740257
    2. 'diff' → logprob: -3.0585663318634033
    3. ' occurrence' → logprob: -6.558566570281982
    4. ' position' → logprob: -6.808566570281982
    5. 'difference' → logprob: -6.933566570281982
    6. ' divergence' → logprob: -6.933566570281982
    7. ' et' → logprob: -7.183566570281982
    8. 'occ' → logprob: -7.433566570281982
    9. ' difference' → logprob: -7.558566570281982
    10. 'occur' → logprob: -7.933566570281982

Token 185: ' b' (ID: 287)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.007980996742844582
    2. ' ' → logprob: -5.632980823516846
    3. 'entre' → logprob: -6.132980823516846
    4. ' between' → logprob: -7.257980823516846
    5. ' bit' → logprob: -7.757980823516846
    6. 's' → logprob: -7.757980823516846
    7. ' dans' → logprob: -9.382981300354004
    8. ' avec' → logprob: -9.507981300354004
    9. ' ' → logprob: -9.757981300354004
    10. '   ' → logprob: -10.007981300354004

Token 186: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.004330660216510296
    2. 'i' → logprob: -6.379330635070801
    3. 'in' → logprob: -6.629330635070801
    4. 'ina' → logprob: -7.254330635070801
    5. 'it' → logprob: -8.7543306350708
    6. 'inary' → logprob: -9.2543306350708
    7. 'inar' → logprob: -10.3793306350708
    8. 'iné' → logprob: -10.3793306350708
    9. '_i' → logprob: -10.5043306350708
    10. '[i' → logprob: -10.7543306350708

Token 187: '
' (ID: 198)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.011617358773946762
    2. ' ' → logprob: -5.386617183685303
    3. ' between' → logprob: -5.636617183685303
    4. 'entre' → logprob: -5.886617183685303
    5. ' avec' → logprob: -8.261617660522461
    6. '   ' → logprob: -9.511617660522461
    7. ',' → logprob: -9.636617660522461
    8. 'between' → logprob: -10.136617660522461
    9. 's' → logprob: -10.386617660522461
    10. '  ' → logprob: -10.886617660522461

Token 188: '   ' (ID: 271)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.018408268690109253
    2. ' ' → logprob: -4.518408298492432
    3. ' between' → logprob: -5.768408298492432
    4. ',' → logprob: -6.893408298492432
    5. 'entre' → logprob: -7.268408298492432
    6. ' avec' → logprob: -7.518408298492432
    7. 's' → logprob: -7.768408298492432
    8. '   ' → logprob: -8.143407821655273
    9. ' dans' → logprob: -8.518407821655273
    10. '  ' → logprob: -9.018407821655273

Token 189: ' (' (ID: 350)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.031781647354364395
    2. ' avec' → logprob: -4.1567816734313965
    3. ' ' → logprob: -5.2817816734313965
    4. ' between' → logprob: -5.4067816734313965
    5. 'entre' → logprob: -6.2817816734313965
    6. ',' → logprob: -6.6567816734313965
    7. '  ' → logprob: -7.2817816734313965
    8. '   ' → logprob: -7.5317816734313965
    9. 'avec' → logprob: -8.656781196594238
    10. ' with' → logprob: -8.656781196594238

Token 190: 'sur' (ID: 26617)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.983624279499054
    2. ' entre' → logprob: -1.3586242198944092
    3. ' i' → logprob: -1.7336242198944092
    4. ' la' → logprob: -2.608624219894409
    5. ' j' → logprob: -4.233624458312988
    6. 'i' → logprob: -4.233624458312988
    7. ' between' → logprob: -4.358624458312988
    8. 'la' → logprob: -4.733624458312988
    9. ' )' → logprob: -4.733624458312988
    10. '(i' → logprob: -5.108624458312988

Token 191: ' les' (ID: 1341)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.856230616569519
    2. ' length' → logprob: -1.356230616569519
    3. '11' → logprob: -1.981230616569519
    4. ' ' → logprob: -2.9812307357788086
    5. ' la' → logprob: -3.2312307357788086
    6. ' i' → logprob: -3.8562307357788086
    7. ' n' → logprob: -4.106230735778809
    8. 'n' → logprob: -4.231230735778809
    9. 'i' → logprob: -5.106230735778809
    10. ' les' → logprob: -5.231230735778809

Token 192: ' ' (ID: 220)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.8458170890808105
    2. 'length' → logprob: -0.9708170890808105
    3. '11' → logprob: -2.8458170890808105
    4. ' ' → logprob: -2.9708170890808105
    5. ' bits' → logprob: -3.5958170890808105
    6. ' range' → logprob: -4.5958170890808105
    7. 'n' → logprob: -4.7208170890808105
    8. ' n' → logprob: -4.9708170890808105
    9. ')' → logprob: -5.7208170890808105
    10. ' longueur' → logprob: -5.7208170890808105

Token 193: '9' (ID: 24)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6812342405319214
    2. 'length' → logprob: -1.0562342405319214
    3. '11' → logprob: -3.056234359741211
    4. ' range' → logprob: -3.056234359741211
    5. 'n' → logprob: -4.556234359741211
    6. ' length' → logprob: -4.681234359741211
    7. ' ' → logprob: -4.806234359741211
    8. 'long' → logprob: -6.056234359741211
    9. 'bits' → logprob: -6.056234359741211
    10. 'binary' → logprob: -6.056234359741211

Token 194: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.07414645701646805
    2. 'bits' → logprob: -2.9491465091705322
    3. ' caractères' → logprob: -4.574146270751953
    4. ')' → logprob: -6.199146270751953
    5. 'car' → logprob: -6.199146270751953
    6. ' premiers' → logprob: -6.324146270751953
    7. ' ' → logprob: -7.824146270751953
    8. ' digits' → logprob: -7.949146270751953
    9. ' positions' → logprob: -8.074146270751953
    10. 'positions' → logprob: -8.199146270751953

Token 195: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2074526995420456
    2. ' )' → logprob: -1.707452654838562
    3. ' de' → logprob: -6.332452774047852
    4. ' entre' → logprob: -6.332452774047852
    5. 'de' → logprob: -7.207452774047852
    6. ',' → logprob: -8.207452774047852
    7. ').' → logprob: -8.207452774047852
    8. '   ' → logprob: -8.457452774047852
    9. '),' → logprob: -8.707452774047852
    10. ' ' → logprob: -8.957452774047852

Token 196: ' poids' (ID: 56058)
  Prédit: ' format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' format' → logprob: -1.0578960180282593
    2. ' i' → logprob: -1.1828960180282593
    3. ' la' → logprob: -1.3078960180282593
    4. ' l' → logprob: -3.307896137237549
    5. 'i' → logprob: -4.432896137237549
    6. 'l' → logprob: -4.557896137237549
    7. ' ' → logprob: -5.057896137237549
    8. 'format' → logprob: -5.182896137237549
    9. 'la' → logprob: -6.057896137237549
    10. ')' → logprob: -7.432896137237549

Token 197: ' fort' (ID: 8024)
  Prédit: 'fort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fort' → logprob: -0.8612874150276184
    2. ' faible' → logprob: -1.1112873554229736
    3. ' fort' → logprob: -1.6112873554229736
    4. 'fa' → logprob: -3.6112873554229736
    5. ' forts' → logprob: -4.111287593841553
    6. ' faibles' → logprob: -5.736287593841553
    7. ' ' → logprob: -7.486287593841553
    8. '  ' → logprob: -8.611287117004395
    9. '   ' → logprob: -8.611287117004395
    10. 'f' → logprob: -8.861287117004395

Token 198: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02883605845272541
    2. ' de' → logprob: -4.903836250305176
    3. ' )' → logprob: -5.403836250305176
    4. '),' → logprob: -5.528836250305176
    5. ').' → logprob: -6.278836250305176
    6. ',' → logprob: -6.403836250305176
    7. ' à' → logprob: -6.528836250305176
    8. 'de' → logprob: -6.653836250305176
    9. ' les' → logprob: -6.653836250305176
    10. 's' → logprob: -6.778836250305176

Token 199: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.12801489233970642
    2. '   ' → logprob: -2.6280148029327393
    3. ',' → logprob: -4.128015041351318
    4. ' between' → logprob: -5.253015041351318
    5. 'entre' → logprob: -5.253015041351318
    6. ' de' → logprob: -5.628015041351318
    7. '.' → logprob: -5.753015041351318
    8. ' par' → logprob: -5.878015041351318
    9. 'def' → logprob: -6.378015041351318
    10. ' ' → logprob: -6.628015041351318

Token 200: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5287573933601379
    2. ' i' → logprob: -0.9037573933601379
    3. ' la' → logprob: -6.028757572174072
    4. 'str' → logprob: -6.653757572174072
    5. ' str' → logprob: -7.653757572174072
    6. 'l' → logprob: -8.653757095336914
    7. 'la' → logprob: -8.653757095336914
    8. '(i' → logprob: -8.653757095336914
    9. '   ' → logprob: -8.778757095336914
    10. ' bin' → logprob: -8.903757095336914

Token 201: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.023098133504390717
    2. 'et' → logprob: -4.148097991943359
    3. ' and' → logprob: -5.648097991943359
    4. ' ' → logprob: -6.273097991943359
    5. 'and' → logprob: -7.523097991943359
    6. 'def' → logprob: -8.02309799194336
    7. ',' → logprob: -8.77309799194336
    8. '   ' → logprob: -9.52309799194336
    9. '+' → logprob: -9.77309799194336
    10. 'de' → logprob: -10.27309799194336

Token 202: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07109546661376953
    2. 'i' → logprob: -3.0710954666137695
    3. ' (' → logprob: -4.1960954666137695
    4. '(i' → logprob: -5.4460954666137695
    5. ' j' → logprob: -6.5710954666137695
    6. ' ' → logprob: -8.44609546661377
    7. 'j' → logprob: -8.69609546661377
    8. ' la' → logprob: -8.82109546661377
    9. '(' → logprob: -8.82109546661377
    10. ' les' → logprob: -9.07109546661377

Token 203: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.02098231390118599
    2. ' j' → logprob: -4.395982265472412
    3. 'les' → logprob: -5.020982265472412
    4. 'j' → logprob: -7.520982265472412
    5. 's' → logprob: -7.645982265472412
    6. '   ' → logprob: -8.02098274230957
    7. 'es' → logprob: -8.64598274230957
    8. ' ' → logprob: -9.27098274230957
    9. ' ses' → logprob: -10.14598274230957
    10. '```' → logprob: -10.89598274230957

Token 204: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9464929699897766
    2. ' autres' → logprob: -0.9464929699897766
    3. 'j' → logprob: -1.5714929103851318
    4. 'aut' → logprob: -5.696493148803711
    5. ' nombres' → logprob: -5.821493148803711
    6. ' i' → logprob: -6.321493148803711
    7. ' ' → logprob: -6.321493148803711
    8. 'i' → logprob: -6.321493148803711
    9. ' other' → logprob: -7.071493148803711
    10. ' suivants' → logprob: -7.321493148803711

Token 205: ' >' (ID: 1424)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1646880954504013
    2. ' dans' → logprob: -2.4146881103515625
    3. ' in' → logprob: -4.0396881103515625
    4. 'dans' → logprob: -4.1646881103515625
    5. ' compris' → logprob: -4.9146881103515625
    6. 'de' → logprob: -5.5396881103515625
    7. ' allant' → logprob: -5.6646881103515625
    8. 's' → logprob: -6.2896881103515625
    9. ' ' → logprob: -6.2896881103515625
    10. ' suivants' → logprob: -6.2896881103515625

Token 206: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3133089244365692
    2. ' i' → logprob: -1.3133089542388916
    3. '   ' → logprob: -11.063308715820312
    4. ' ' → logprob: -11.438308715820312
    5. '=i' → logprob: -12.188308715820312
    6. '=' → logprob: -12.813308715820312
    7. '	i' → logprob: -12.813308715820312
    8. ' ' → logprob: -12.813308715820312
    9. '  ' → logprob: -12.938308715820312
    10. '```' → logprob: -13.563308715820312

Token 207: ' jusqu' (ID: 21961)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9639323949813843
    2. '   ' → logprob: -1.0889323949813843
    3. ',' → logprob: -1.4639323949813843
    4. ':' → logprob: -4.463932514190674
    5. ' ,' → logprob: -5.088932514190674
    6. '.
' → logprob: -5.213932514190674
    7. 'def' → logprob: -5.588932514190674
    8. 's' → logprob: -5.713932514190674
    9. ' (' → logprob: -5.838932514190674
    10. ' ' → logprob: -6.088932514190674

Token 208: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.05486873909831047
    2. 'à' → logprob: -3.179868698120117
    3. ' à' → logprob: -4.804868698120117
    4. '’à' → logprob: -5.929868698120117
    5. 'a' → logprob: -7.429868698120117
    6. ''au' → logprob: -8.679868698120117
    7. 'au' → logprob: -9.054868698120117
    8. '   ' → logprob: -10.179868698120117
    9. ''a' → logprob: -11.554868698120117
    10. ' a' → logprob: -12.179868698120117

Token 209: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3490687906742096
    2. ' n' → logprob: -1.2240687608718872
    3. '   ' → logprob: -7.724068641662598
    4. ' ' → logprob: -9.724068641662598
    5. 'i' → logprob: -10.099068641662598
    6. ' i' → logprob: -10.349068641662598
    7. '(n' → logprob: -11.974068641662598
    8. '    ' → logprob: -12.099068641662598
    9. ' la' → logprob: -12.224068641662598
    10. '  ' → logprob: -12.224068641662598

Token 210: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10342416167259216
    2. '):
' → logprob: -3.478424072265625
    3. '):' → logprob: -3.603424072265625
    4. ' -' → logprob: -3.978424072265625
    5. '   ' → logprob: -4.603424072265625
    6. ')' → logprob: -5.103424072265625
    7. ':' → logprob: -6.103424072265625
    8. '
' → logprob: -6.353424072265625
    9. ':
' → logprob: -7.978424072265625
    10. ' ' → logprob: -8.103424072265625

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.762356209335849e-05
    2. 'i' → logprob: -10.62503719329834
    3. 'n' → logprob: -12.12503719329834
    4. ' ' → logprob: -12.50003719329834
    5. '   ' → logprob: -13.62503719329834
    6. '0' → logprob: -13.87503719329834
    7. ')' → logprob: -14.25003719329834
    8. '2' → logprob: -14.62503719329834
    9. '```' → logprob: -15.50003719329834
    10. 'j' → logprob: -16.250038146972656

Token 212: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49717116355895996
    2. ',' → logprob: -1.74717116355896
    3. '.' → logprob: -1.99717116355896
    4. ':' → logprob: -2.62217116355896
    5. ' :' → logprob: -5.872171401977539
    6. 'def' → logprob: -6.122171401977539
    7. '
' → logprob: -7.497171401977539
    8. ':
' → logprob: -7.622171401977539
    9. '.
' → logprob: -7.622171401977539
    10. ',
' → logprob: -7.747171401977539

Token 213: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17189368605613708
    2. ' et' → logprob: -1.9218937158584595
    3. ' puis' → logprob: -5.79689359664917
    4. '
' → logprob: -6.04689359664917
    5. ',' → logprob: -6.42189359664917
    6. ' en' → logprob: -6.54689359664917
    7. '    ' → logprob: -7.42189359664917
    8. 'et' → logprob: -7.42189359664917
    9. ' and' → logprob: -8.171894073486328
    10. 'def' → logprob: -8.296894073486328

Token 214: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0290971994400024
    2. ' stock' → logprob: -1.0290971994400024
    3. 'ret' → logprob: -2.904097080230713
    4. 'les' → logprob: -2.904097080230713
    5. 'stock' → logprob: -3.154097080230713
    6. ' les' → logprob: -3.279097080230713
    7. 'ren' → logprob: -3.654097080230713
    8. ' retourne' → logprob: -3.654097080230713
    9. ' ren' → logprob: -4.529097080230713
    10. 'en' → logprob: -5.029097080230713

Token 215: ' 
' (ID: 793)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9972043037414551
    2. '   ' → logprob: -1.747204303741455
    3. ' la' → logprob: -1.872204303741455
    4. ' un' → logprob: -2.747204303741455
    5. '(i' → logprob: -2.747204303741455
    6. ' i' → logprob: -3.372204303741455
    7. '(' → logprob: -3.497204303741455
    8. ' celles' → logprob: -3.997204303741455
    9. ' ' → logprob: -4.247204303741455
    10. '()' → logprob: -4.497204303741455

Token 216: '   ' (ID: 271)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.670339822769165
    2. '   ' → logprob: -1.295339822769165
    3. ' la' → logprob: -2.170339822769165
    4. ' un' → logprob: -3.045339822769165
    5. 's' → logprob: -4.420339584350586
    6. '    ' → logprob: -4.545339584350586
    7. ' leurs' → logprob: -5.045339584350586
    8. ' une' → logprob: -5.795339584350586
    9. 'es' → logprob: -6.045339584350586
    10. 'les' → logprob: -6.170339584350586

Token 217: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' (adapté à ' les') → logprob: -0.6508876085281372
    2. ' les' → logprob: -1.2758876085281372
    3. ' la' → logprob: -2.9008874893188477
    4. 'ces' → logprob: -3.4008874893188477
    5. ' ces' → logprob: -3.7758874893188477
    6. 'la' → logprob: -3.9008874893188477
    7. 'une' → logprob: -4.025887489318848
    8. 'un' → logprob: -4.275887489318848
    9. ' un' → logprob: -4.775887489318848
    10. ' leurs' → logprob: -5.150887489318848

Token 218: ' résultats' (ID: 48985)
  Prédit: ' résultats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultats' → logprob: -0.1099783256649971
    2. ' indices' → logprob: -3.359978437423706
    3. ' différences' → logprob: -3.734978437423706
    4. ' positions' → logprob: -4.359978199005127
    5. 'rés' → logprob: -5.109978199005127
    6. 'diff' → logprob: -5.109978199005127
    7. ' distances' → logprob: -5.734978199005127
    8. 'indices' → logprob: -5.984978199005127
    9. 'dif' → logprob: -6.359978199005127
    10. 'positions' → logprob: -6.359978199005127

Token 219: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07799318432807922
    2. '.' → logprob: -2.952993154525757
    3. 'def' → logprob: -4.577993392944336
    4. ':' → logprob: -4.827993392944336
    5. ' :' → logprob: -6.577993392944336
    6. ',' → logprob: -7.452993392944336
    7. '(' → logprob: -7.577993392944336
    8. '    
' → logprob: -7.952993392944336
    9. '
' → logprob: -8.077993392944336
    10. ' ' → logprob: -8.702993392944336

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027581971138715744
    2. '
' → logprob: -3.6525819301605225
    3. '\n' → logprob: -7.527582168579102
    4. '    
' → logprob: -7.652582168579102
    5. '```' → logprob: -9.152582168579102
    6. '"""
' → logprob: -10.277582168579102
    7. 'def' → logprob: -10.402582168579102
    8. '  
' → logprob: -10.527582168579102
    9. '"""' → logprob: -11.152582168579102
    10. ')' → logprob: -11.777582168579102

Token 221: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035094454884529114
    2. '
' → logprob: -4.285094261169434
    3. 'for' → logprob: -4.535094261169434
    4. ' for' → logprob: -5.785094261169434
    5. 'result' → logprob: -6.035094261169434
    6. 'results' → logprob: -6.285094261169434
    7. 'n' → logprob: -6.910094261169434
    8. ' results' → logprob: -7.660094261169434
    9. '"""
' → logprob: -7.785094261169434
    10. ' result' → logprob: -8.535094261169434

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28757965564727783
    2. ':
' → logprob: -1.7875796556472778
    3. '   ' → logprob: -2.6625795364379883
    4. '):
' → logprob: -4.537579536437988
    5. '=' → logprob: -7.662579536437988
    6. '):' → logprob: -7.662579536437988
    7. '(n' → logprob: -8.412579536437988
    8. 'def' → logprob: -8.412579536437988
    9. ' :' → logprob: -8.662579536437988
    10. '```' → logprob: -8.662579536437988

Token 223: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016420016065239906
    2. '       ' → logprob: -4.266419887542725
    3. 'n' → logprob: -6.266419887542725
    4. ' n' → logprob: -8.016420364379883
    5. '
' → logprob: -11.766420364379883
    6. '	n' → logprob: -11.891420364379883
    7. ' ' → logprob: -12.891420364379883
    8. '    ' → logprob: -12.891420364379883
    9. '  ' → logprob: -13.391420364379883
    10. '(n' → logprob: -13.516420364379883

Token 224: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.9875325708417222e-05
    2. '   ' → logprob: -10.875029563903809
    3. ' n' → logprob: -11.500029563903809
    4. '
' → logprob: -14.500029563903809
    5. 'int' → logprob: -15.625029563903809
    6. '	n' → logprob: -16.625030517578125
    7. '```' → logprob: -17.250030517578125
    8. '       ' → logprob: -17.625030517578125
    9. '    
' → logprob: -17.875030517578125
    10. 'self' → logprob: -18.125030517578125

Token 225: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.009184197522699833
    2. '(int' → logprob: -4.75918436050415
    3. ':' → logprob: -8.259183883666992
    4. ':int' → logprob: -9.134183883666992
    5. '):' → logprob: -9.259183883666992
    6. ')' → logprob: -10.134183883666992
    7. '):
' → logprob: -10.134183883666992
    8. '   ' → logprob: -10.884183883666992
    9. ' ' → logprob: -13.134183883666992
    10. '```' → logprob: -13.134183883666992

Token 226: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.054500666621607e-06
    2. ' int' → logprob: -12.75000286102295
    3. ')' → logprob: -17.625003814697266
    4. '   ' → logprob: -20.250003814697266
    5. ':int' → logprob: -20.500003814697266
    6. '(int' → logprob: -20.750003814697266
    7. '=int' → logprob: -21.500003814697266
    8. '[int' → logprob: -21.750003814697266
    9. '       ' → logprob: -23.125003814697266
    10. '):' → logprob: -23.125003814697266

Token 227: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018518301658332348
    2. ')' → logprob: -8.750185012817383
    3. '):
' → logprob: -11.500185012817383
    4. ':' → logprob: -11.750185012817383
    5. ' ):' → logprob: -12.250185012817383
    6. '   ' → logprob: -12.875185012817383
    7. '):

' → logprob: -14.875185012817383
    8. '):
' → logprob: -15.500185012817383
    9. ',' → logprob: -15.750185012817383
    10. '),' → logprob: -15.875185012817383

Token 228: ' Nombre' (ID: 70208)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.15068486332893372
    2. 'int' → logprob: -2.9006848335266113
    3. ' La' → logprob: -3.2756848335266113
    4. ' Le' → logprob: -3.7756848335266113
    5. 'La' → logprob: -4.775684833526611
    6. ' Nombre' → logprob: -5.150684833526611
    7. 'Le' → logprob: -5.650684833526611
    8. '   ' → logprob: -6.025684833526611
    9. 'Nombre' → logprob: -6.275684833526611
    10. ' la' → logprob: -7.025684833526611

Token 229: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6709098815917969
    2. '   ' → logprob: -1.6709098815917969
    3. '):' → logprob: -2.545909881591797
    4. ' :' → logprob: -3.045909881591797
    5. ' )' → logprob: -3.045909881591797
    6. ':' → logprob: -3.295909881591797
    7. ' de' → logprob: -3.420909881591797
    8. '  ' → logprob: -4.545909881591797
    9. ' ' → logprob: -4.795909881591797
    10. '):
' → logprob: -4.920909881591797

Token 230: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3396262526512146
    2. ' ' → logprob: -2.9646263122558594
    3. ' à' → logprob: -3.2146263122558594
    4. ' caractères' → logprob: -3.3396263122558594
    5. ' éléments' → logprob: -3.7146263122558594
    6. ' )' → logprob: -3.8396263122558594
    7. 'éros' → logprob: -4.089626312255859
    8. ' de' → logprob: -4.464626312255859
    9. ' espaces' → logprob: -4.964626312255859
    10. ''à' → logprob: -5.089626312255859

Token 231: 'it' (ID: 278)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1368219405412674
    2. ''' → logprob: -3.011821985244751
    3. ' éléments' → logprob: -3.636821985244751
    4. 'iterations' → logprob: -4.386821746826172
    5. 'it' → logprob: -4.761821746826172
    6. ''ent' → logprob: -4.886821746826172
    7. ' it' → logprob: -5.386821746826172
    8. 'é' → logprob: -6.386821746826172
    9. '')' → logprob: -6.511821746826172
    10. ')' → logprob: -6.511821746826172

Token 232: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.00476368423551321
    2. 'er' → logprob: -5.379763603210449
    3. '   ' → logprob: -9.87976360321045
    4. 'ér' → logprob: -10.50476360321045
    5. 'érés' → logprob: -10.87976360321045
    6. 'ération' → logprob: -11.12976360321045
    7. 'e' → logprob: -12.37976360321045
    8. 'é' → logprob: -12.37976360321045
    9. '       ' → logprob: -12.50476360321045
    10. '
' → logprob: -12.87976360321045

Token 233: ' et' (ID: 859)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4217177629470825
    2. '):
' → logprob: -1.5467177629470825
    3. '   ' → logprob: -2.046717643737793
    4. ')' → logprob: -6.421717643737793
    5. '):
' → logprob: -8.296717643737793
    6. ' ):' → logprob: -10.296717643737793
    7. '):

' → logprob: -11.546717643737793
    8. '```' → logprob: -11.546717643737793
    9. ' ):
' → logprob: -11.671717643737793
    10. '       ' → logprob: -12.046717643737793

Token 234: ' borne' (ID: 111819)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5313196778297424
    2. 'range' → logprob: -2.4063196182250977
    3. ' plage' → logprob: -2.7813196182250977
    4. 'la' → logprob: -3.0313196182250977
    5. 'max' → logprob: -3.4063196182250977
    6. '   ' → logprob: -4.156319618225098
    7. 'le' → logprob: -4.281319618225098
    8. ' le' → logprob: -4.281319618225098
    9. 'de' → logprob: -4.656319618225098
    10. 'val' → logprob: -4.781319618225098

Token 235: ' supérieure' (ID: 106336)
  Prédit: ' supérieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieure' → logprob: -0.4237123131752014
    2. 'sup' → logprob: -1.2987122535705566
    3. ')' → logprob: -3.1737122535705566
    4. 'super' → logprob: -4.798712253570557
    5. ' de' → logprob: -4.798712253570557
    6. 'de' → logprob: -5.673712253570557
    7. '   ' → logprob: -5.673712253570557
    8. ' sup' → logprob: -6.173712253570557
    9. '):' → logprob: -7.298712253570557
    10. ' supérieur' → logprob: -7.548712253570557

Token 236: ' pour' (ID: 1930)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9208003878593445
    2. '):' → logprob: -1.0458004474639893
    3. '   ' → logprob: -1.9208004474639893
    4. ')' → logprob: -2.5458004474639893
    5. ' (' → logprob: -4.42080020904541
    6. '
' → logprob: -6.67080020904541
    7. ':' → logprob: -6.79580020904541
    8. '=' → logprob: -6.92080020904541
    9. ' inclus' → logprob: -6.92080020904541
    10. ' ' → logprob: -7.17080020904541

Token 237: ' i' (ID: 575)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3894504904747009
    2. 'la' → logprob: -2.1394505500793457
    3. 'i' → logprob: -3.0144505500793457
    4. ' i' → logprob: -3.2644505500793457
    5. 'range' → logprob: -3.3894505500793457
    6. ' les' → logprob: -3.6394505500793457
    7. 'les' → logprob: -3.7644505500793457
    8. ' range' → logprob: -3.8894505500793457
    9. 'l' → logprob: -5.014450550079346
    10. 'le' → logprob: -5.764450550079346

Token 238: ' et' (ID: 859)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23042218387126923
    2. '):
' → logprob: -1.6054221391677856
    3. '   ' → logprob: -5.480422019958496
    4. ')' → logprob: -7.230422019958496
    5. '):
' → logprob: -9.980422019958496
    6. ':' → logprob: -10.980422019958496
    7. '.' → logprob: -11.105422019958496
    8. 'def' → logprob: -12.105422019958496
    9. ' ):' → logprob: -12.355422019958496
    10. '):

' → logprob: -12.355422019958496

Token 239: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.20283624529838562
    2. 'j' → logprob: -1.702836275100708
    3. ' les' → logprob: -7.702836036682129
    4. '   ' → logprob: -8.077836036682129
    5. ' ' → logprob: -8.452836036682129
    6. ' n' → logprob: -8.952836036682129
    7. 'n' → logprob: -9.077836036682129
    8. '       ' → logprob: -10.202836036682129
    9. 'les' → logprob: -10.327836036682129
    10. ')' → logprob: -11.015336036682129

Token 240: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20660826563835144
    2. '):
' → logprob: -1.9566082954406738
    3. '   ' → logprob: -3.206608295440674
    4. ')' → logprob: -5.706608295440674
    5. '.' → logprob: -7.206608295440674
    6. ').' → logprob: -7.706608295440674
    7. '):
' → logprob: -9.081607818603516
    8. ':' → logprob: -9.706607818603516
    9. ' ):' → logprob: -10.331607818603516
    10. '):

' → logprob: -10.581607818603516

Token 241: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10608042776584625
    2. '):' → logprob: -3.3560805320739746
    3. ' )' → logprob: -3.6060805320739746
    4. ').' → logprob: -3.8560805320739746
    5. '):
' → logprob: -4.606080532073975
    6. '   ' → logprob: -5.731080532073975
    7. ' ):' → logprob: -6.356080532073975
    8. ' ):
' → logprob: -6.981080532073975
    9. ' ).' → logprob: -7.231080532073975
    10. ' en' → logprob: -8.606080055236816

Token 242: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.44176262617111206
    2. 'clus' → logprob: -1.1917626857757568
    3. 'cluded' → logprob: -4.191762447357178
    4. 'clude' → logprob: -4.316762447357178
    5. 'clusive' → logprob: -4.316762447357178
    6. ':' → logprob: -4.941762447357178
    7. 'cluding' → logprob: -7.191762447357178
    8. '   ' → logprob: -7.316762447357178
    9. 'clud' → logprob: -7.566762447357178
    10. 'clusion' → logprob: -7.816762447357178

Token 243: 'ue' (ID: 466)
  Prédit: 'cluded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cluded' → logprob: -1.0120728015899658
    2. 'cl' → logprob: -1.3870728015899658
    3. ')' → logprob: -1.7620728015899658
    4. 'clus' → logprob: -2.262072801589966
    5. 'cept' → logprob: -3.262072801589966
    6. 'clusive' → logprob: -3.512072801589966
    7. 'clude' → logprob: -3.887072801589966
    8. '):' → logprob: -5.137072563171387
    9. 'p' → logprob: -5.887072563171387
    10. 'clud' → logprob: -6.012072563171387

Token 244: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7649621367454529
    2. ')' → logprob: -1.0149621963500977
    3. '):
' → logprob: -1.7649621963500977
    4. '   ' → logprob: -7.389962196350098
    5. '):
' → logprob: -8.889962196350098
    6. ').' → logprob: -9.264962196350098
    7. '):

' → logprob: -9.264962196350098
    8. ')
' → logprob: -10.139962196350098
    9. ':' → logprob: -11.514962196350098
    10. ' ):' → logprob: -11.514962196350098

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03720268979668617
    2. '
' → logprob: -4.037202835083008
    3. '"""
' → logprob: -4.912202835083008
    4. '"""' → logprob: -5.162202835083008
    5. ')' → logprob: -5.662202835083008
    6. ')
' → logprob: -7.037202835083008
    7. '    
' → logprob: -7.287202835083008
    8. '```' → logprob: -7.787202835083008
    9. '):
' → logprob: -9.537202835083008
    10. '\n' → logprob: -9.912202835083008

Token 246: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0324803926050663
    2. '
' → logprob: -4.157480239868164
    3. '"""
' (adapté à ' """
') → logprob: -4.782480239868164
    4. '    
' → logprob: -5.657480239868164
    5. '"""' → logprob: -6.282480239868164
    6. '```' → logprob: -7.032480239868164
    7. ')' → logprob: -7.157480239868164
    8. ')
' → logprob: -8.032480239868164
    9. 'def' → logprob: -8.532480239868164
    10. ' """
' → logprob: -9.282480239868164

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007908611558377743
    2. ' for' → logprob: -5.007908821105957
    3. 'for' → logprob: -6.757908821105957
    4. '
' → logprob: -11.382908821105957
    5. '9' → logprob: -11.757908821105957
    6. '```' → logprob: -12.882908821105957
    7. 'def' → logprob: -13.007908821105957
    8. '    
' → logprob: -13.132908821105957
    9. '	for' → logprob: -13.632908821105957
    10. '   ' → logprob: -13.757908821105957

Token 248: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6005098223686218
    2. ' for' → logprob: -0.8505098223686218
    3. '   ' → logprob: -3.7255098819732666
    4. 'def' → logprob: -10.600509643554688
    5. 'max' → logprob: -10.725509643554688
    6. '
' → logprob: -11.100509643554688
    7. ' indent' → logprob: -11.100509643554688
    8. '9' → logprob: -11.475509643554688
    9. 'mask' → logprob: -11.475509643554688
    10. 'indent' → logprob: -11.725509643554688

Token 249: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0017035098280757666
    2. 'i' → logprob: -6.37670373916626
    3. ' ' → logprob: -13.751703262329102
    4. '	i' → logprob: -15.626703262329102
    5. ' ' → logprob: -17.0017032623291
    6. '   ' → logprob: -17.6267032623291
    7. '  ' → logprob: -18.2517032623291
    8. ')' → logprob: -18.3767032623291
    9. '```' → logprob: -18.3767032623291
    10. '_i' → logprob: -19.0017032623291

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01252977829426527
    2. 'in' → logprob: -4.3875298500061035
    3. ' ' → logprob: -11.137529373168945
    4. ',' → logprob: -14.012529373168945
    5. ' ' → logprob: -14.137529373168945
    6. '0' → logprob: -14.512529373168945
    7. '=' → logprob: -14.762529373168945
    8. 'range' → logprob: -14.762529373168945
    9. ')' → logprob: -15.012529373168945
    10. '	in' → logprob: -15.012529373168945

Token 251: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759978294372559
    2. ' range' → logprob: -0.8259978294372559
    3. '0' → logprob: -10.075998306274414
    4. ' ' → logprob: -11.325998306274414
    5. '   ' → logprob: -13.700998306274414
    6. ' in' → logprob: -13.825998306274414
    7. ')' → logprob: -14.325998306274414
    8. '(range' → logprob: -14.575998306274414
    9. '	range' → logprob: -15.200998306274414
    10. ' xrange' → logprob: -15.450998306274414

Token 252: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015087933279573917
    2. '(' → logprob: -6.501508712768555
    3. ' (' → logprob: -12.001508712768555
    4. 'n' → logprob: -15.376508712768555
    5. ' n' → logprob: -16.251508712768555
    6. '(i' → logprob: -16.626508712768555
    7. '(int' → logprob: -18.876508712768555
    8. '   ' → logprob: -19.501508712768555
    9. '(
' → logprob: -19.751508712768555
    10. '((' → logprob: -19.751508712768555

Token 253: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06268171966075897
    2. '):
' → logprob: -2.8126816749572754
    3. '+' → logprob: -7.437681674957275
    4. '   ' → logprob: -9.312682151794434
    5. ':' → logprob: -11.562682151794434
    6. ' ):' → logprob: -11.687682151794434
    7. ')' → logprob: -11.937682151794434
    8. ' +' → logprob: -12.437682151794434
    9. ',' → logprob: -13.562682151794434
    10. '-' → logprob: -13.812682151794434

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024204873479902744
    2. '   ' → logprob: -6.252420425415039
    3. ' for' → logprob: -7.752420425415039
    4. '    ' → logprob: -10.252420425415039
    5. 'for' → logprob: -12.252420425415039
    6. '    ' → logprob: -12.502420425415039
    7. ':' → logprob: -12.627420425415039
    8. '	   ' → logprob: -13.002420425415039
    9. '9' → logprob: -13.252420425415039
    10. '   ' → logprob: -13.502420425415039

Token 255: ' differences' (ID: 19504)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29660308361053467
    2. ' for' → logprob: -1.4216030836105347
    3. '   ' → logprob: -5.046603202819824
    4. '       ' → logprob: -5.046603202819824
    5. 'j' → logprob: -6.546603202819824
    6. 'print' → logprob: -7.671603202819824
    7. ' j' → logprob: -8.296603202819824
    8. ' ' → logprob: -9.921603202819824
    9. ' print' → logprob: -10.046603202819824
    10. 'max' → logprob: -10.921603202819824

Token 256: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023898905143141747
    2. '=' → logprob: -3.7738988399505615
    3. '   ' → logprob: -8.27389907836914
    4. '_positions' → logprob: -8.39889907836914
    5. '_found' → logprob: -10.39889907836914
    6. '       ' → logprob: -10.52389907836914
    7. '_' → logprob: -10.89889907836914
    8. 'for' → logprob: -11.14889907836914
    9. 's' → logprob: -11.39889907836914
    10. '[' → logprob: -11.64889907836914

Token 257: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03213056921958923
    2. '{}' → logprob: -3.532130479812622
    3. ' []' → logprob: -6.407130718231201
    4. '[]
' → logprob: -7.407130718231201
    5. '[' → logprob: -9.907130241394043
    6. '""' → logprob: -10.282130241394043
    7. ' {}' → logprob: -11.532130241394043
    8. '"' → logprob: -11.782130241394043
    9. '{}
' → logprob: -11.907130241394043
    10. 'set' → logprob: -13.032130241394043

Token 258: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007029473781585693
    2. '
' → logprob: -5.2570295333862305
    3. ' for' → logprob: -7.3820295333862305
    4. '        
' → logprob: -7.6320295333862305
    5. '   ' → logprob: -8.75702953338623
    6. 'for' → logprob: -8.88202953338623
    7. '  
' → logprob: -9.63202953338623
    8. '[' → logprob: -10.00702953338623
    9. ':' → logprob: -10.13202953338623
    10. '	' → logprob: -10.25702953338623

Token 259: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2822083532810211
    2. '       ' → logprob: -1.4072083234786987
    3. ' for' → logprob: -7.157208442687988
    4. '
' → logprob: -8.657208442687988
    5. '        
' → logprob: -9.907208442687988
    6. '   ' → logprob: -10.657208442687988
    7. '[' → logprob: -11.282208442687988
    8. '#' → logprob: -12.782208442687988
    9. 'def' → logprob: -13.157208442687988
    10. 'while' → logprob: -13.657208442687988

Token 260: ' Liste' (ID: 61030)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7169610857963562
    2. ' for' → logprob: -0.8419610857963562
    3. '       ' → logprob: -2.591961145401001
    4. '   ' → logprob: -6.091960906982422
    5. 'dif' → logprob: -7.341960906982422
    6. 'positions' → logprob: -7.591960906982422
    7. '[' → logprob: -7.841960906982422
    8. 'def' → logprob: -7.966960906982422
    9. '    ' → logprob: -8.216960906982422
    10. '           ' → logprob: -8.341960906982422

Token 261: ' pour' (ID: 1930)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0333797931671143
    2. 'des' → logprob: -1.2833797931671143
    3. '       ' → logprob: -1.9083797931671143
    4. '   ' → logprob: -2.5333797931671143
    5. '\t' → logprob: -3.2833797931671143
    6. 'for' → logprob: -3.4083797931671143
    7. 'def' → logprob: -3.5333797931671143
    8. ' for' → logprob: -4.908379554748535
    9. '[' → logprob: -5.033379554748535
    10. ' of' → logprob: -5.533379554748535

Token 262: ' stock' (ID: 6546)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.23034536838531494
    2. 'rec' → logprob: -2.1053452491760254
    3. 'collect' → logprob: -3.1053452491760254
    4. 'con' → logprob: -4.730345249176025
    5. 'les' → logprob: -4.730345249176025
    6. ' stock' → logprob: -4.980345249176025
    7. 'conten' → logprob: -5.980345249176025
    8. 'st' → logprob: -6.105345249176025
    9. 'en' → logprob: -6.855345249176025
    10. 'reten' → logprob: -6.980345249176025

Token 263: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0012298731599003077
    2. '       ' → logprob: -7.626229763031006
    3. '   ' → logprob: -7.751229763031006
    4. 'érer' → logprob: -8.876230239868164
    5. ' des' → logprob: -10.501230239868164
    6. 'ée' → logprob: -10.626230239868164
    7. '[' → logprob: -10.626230239868164
    8. 'é' → logprob: -11.001230239868164
    9. '[]' → logprob: -11.126230239868164
    10. 'éer' → logprob: -11.501230239868164

Token 264: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.41136494278907776
    2. ' les' → logprob: -1.1613649129867554
    3. '(' → logprob: -5.036365032196045
    4. 'des' → logprob: -5.536365032196045
    5. ' la' → logprob: -6.036365032196045
    6. 'positions' → logprob: -6.036365032196045
    7. 'diff' → logprob: -6.661365032196045
    8. 'the' → logprob: -6.661365032196045
    9. '<|end|>' → logprob: -6.661365032196045
    10. ')' → logprob: -6.911365032196045

Token 265: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.181136816740036
    2. 'diff' → logprob: -2.5561368465423584
    3. ' positions' → logprob: -2.9311368465423584
    4. 'indices' → logprob: -4.306136608123779
    5. 'dif' → logprob: -4.681136608123779
    6. ' indices' → logprob: -5.431136608123779
    7. 'pos' → logprob: -6.056136608123779
    8. ' diff' → logprob: -6.431136608123779
    9. 'prem' → logprob: -7.431136608123779
    10. ' premiers' → logprob: -7.556136608123779

Token 266: ' trouv' (ID: 40254)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0094010829925537
    2. '   ' → logprob: -1.2594010829925537
    3. '       ' → logprob: -2.1344010829925537
    4. ' des' → logprob: -2.7594010829925537
    5. 'de' → logprob: -2.8844010829925537
    6. 'diff' → logprob: -3.6344010829925537
    7. 'des' → logprob: -3.7594010829925537
    8. ' of' → logprob: -3.7594010829925537
    9. ' for' → logprob: -4.259401321411133
    10. 'of' → logprob: -4.634401321411133

Token 267: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.00011188744247192517
    2. 'ée' → logprob: -9.62511157989502
    3. 'ees' → logprob: -11.12511157989502
    4. 'es' → logprob: -11.25011157989502
    5. 'és' → logprob: -11.25011157989502
    6. 'é' → logprob: -12.62511157989502
    7. '[' → logprob: -14.75011157989502
    8. 'nées' → logprob: -15.00011157989502
    9. '   ' → logprob: -15.37511157989502
    10. 'er' → logprob: -15.62511157989502

Token 268: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007067350670695305
    2. ' for' → logprob: -5.7570672035217285
    3. '        
' → logprob: -6.6320672035217285
    4. ':' → logprob: -7.6320672035217285
    5. 'for' → logprob: -7.6320672035217285
    6. ',' → logprob: -8.382067680358887
    7. '(' → logprob: -8.632067680358887
    8. '	' → logprob: -8.632067680358887
    9. '   ' → logprob: -8.757067680358887
    10. '
' → logprob: -9.007067680358887

Token 269: ' cet' (ID: 19505)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0313723124563694
    2. ' j' → logprob: -4.031372547149658
    3. 'i' → logprob: -4.906372547149658
    4. 'les' → logprob: -6.406372547149658
    5. 'each' → logprob: -7.031372547149658
    6. 'diff' → logprob: -7.281372547149658
    7. 'dif' → logprob: -7.281372547149658
    8. ' chaque' → logprob: -7.656372547149658
    9. ' i' → logprob: -8.0313720703125
    10. 'la' → logprob: -8.4063720703125

Token 270: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22642773389816284
    2. ' i' → logprob: -1.6014277935028076
    3. '   ' → logprob: -8.601428031921387
    4. '       ' → logprob: -8.851428031921387
    5. ' ' → logprob: -9.101428031921387
    6. 'e' → logprob: -9.101428031921387
    7. ' it' → logprob: -9.351428031921387
    8. 'it' → logprob: -9.851428031921387
    9. 'interval' → logprob: -9.851428031921387
    10. ' ' → logprob: -10.226428031921387

Token 271: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003924045246094465
    2. '<|end|>' → logprob: -6.3789238929748535
    3. '        
' → logprob: -7.7539238929748535
    4. '
' → logprob: -7.7539238929748535
    5. ':' → logprob: -7.8789238929748535
    6. '   ' → logprob: -8.253924369812012
    7. '<|end|>' → logprob: -8.253924369812012
    8. ' for' → logprob: -8.878924369812012
    9. ',' → logprob: -9.128924369812012
    10. 'for' → logprob: -10.628924369812012

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007555469055660069
    2. ' for' → logprob: -7.500755310058594
    3. '        
' → logprob: -9.500755310058594
    4. 'for' → logprob: -10.000755310058594
    5. '   ' → logprob: -10.250755310058594
    6. '           ' → logprob: -11.000755310058594
    7. '
' → logprob: -11.375755310058594
    8. '	' → logprob: -12.750755310058594
    9. '<|end|>' → logprob: -13.750755310058594
    10. '\' → logprob: -13.875755310058594

Token 273: ' I' (ID: 357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06528791785240173
    2. '       ' → logprob: -3.1902878284454346
    3. ' for' → logprob: -4.065288066864014
    4. '   ' → logprob: -5.565288066864014
    5. 'binary' → logprob: -7.940288066864014
    6. 'start' → logprob: -8.565287590026855
    7. 'i' → logprob: -8.940287590026855
    8. 'j' → logprob: -9.440287590026855
    9. 'bits' → logprob: -9.815287590026855
    10. 'range' → logprob: -10.065287590026855

Token 274: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9866296052932739
    2. 'f' → logprob: -1.861629605293274
    3. 'nt' → logprob: -1.986629605293274
    4. ' =' → logprob: -2.1116294860839844
    5. '_binary' → logprob: -2.4866294860839844
    6. '_bin' → logprob: -2.7366294860839844
    7. 'for' → logprob: -4.236629486083984
    8. '_bits' → logprob: -4.486629486083984
    9. '=' → logprob: -4.736629486083984
    10. 't' → logprob: -5.361629486083984

Token 275: ' format' (ID: 6011)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5417261719703674
    2. 'format' → logprob: -1.4167261123657227
    3. ' i' → logprob: -2.4167261123657227
    4. ' format' → logprob: -2.6667261123657227
    5. '(i' → logprob: -4.541726112365723
    6. ' (' → logprob: -6.041726112365723
    7. 'int' → logprob: -6.666726112365723
    8. '(' → logprob: -6.791726112365723
    9. '(format' → logprob: -6.916726112365723
    10. ' int' → logprob: -8.666726112365723

Token 276: '_binary' (ID: 77551)
  Prédit: '_binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_binary' → logprob: -1.0280383548888494e-06
    2. 'binary' → logprob: -14.000000953674316
    3. '_BINARY' → logprob: -16.875001907348633
    4. 'Binary' → logprob: -17.000001907348633
    5. '_bin' → logprob: -17.875001907348633
    6. '_decimal' → logprob: -18.625001907348633
    7. '_' → logprob: -19.375001907348633
    8. '(binary' → logprob: -19.500001907348633
    9. ' binary' → logprob: -19.500001907348633
    10. '_basic' → logprob: -20.250001907348633

Token 277: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.000116655595775228
    2. 'string' → logprob: -9.250116348266602
    3. '_str' → logprob: -10.875116348266602
    4. 'String' → logprob: -13.875116348266602
    5. 'str' → logprob: -14.750116348266602
    6. '(i' → logprob: -17.2501163482666
    7. '```' → logprob: -17.2501163482666
    8. '_number' → logprob: -17.5001163482666
    9. '_strings' → logprob: -17.5001163482666
    10. ' string' → logprob: -17.5001163482666

Token 278: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -15.62500286102295
    4. '(I' → logprob: -16.750003814697266
    5. 'i' → logprob: -17.500003814697266
    6. '[i' → logprob: -17.625003814697266
    7. '(
' → logprob: -19.125003814697266
    8. '   ' → logprob: -19.375003814697266
    9. '(int' → logprob: -19.500003814697266
    10. ' i' → logprob: -19.750003814697266

Token 279: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007547161658294499
    2. ' ,' → logprob: -8.250754356384277
    3. '9' → logprob: -8.500754356384277
    4. ')' → logprob: -8.875754356384277
    5. '(' → logprob: -9.875754356384277
    6. '(),' → logprob: -10.000754356384277
    7. '   ' → logprob: -10.625754356384277
    8. ')[' → logprob: -11.875754356384277
    9. ')
' → logprob: -12.375754356384277
    10. '7' → logprob: -13.250754356384277

Token 280: ' ' (ID: 220)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.20468303561210632
    2. '[' → logprob: -2.7046830654144287
    3. '       ' → logprob: -2.9546830654144287
    4. '
' → logprob: -3.3296830654144287
    5. '[:-' → logprob: -4.07968282699585
    6. '   ' → logprob: -4.95468282699585
    7. '(' → logprob: -5.82968282699585
    8. 'def' → logprob: -6.70468282699585
    9. '[-' → logprob: -7.95468282699585
    10. '9' → logprob: -8.079683303833008

Token 281: ' #' (ID: 1069)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.14597776532173157
    2. '       ' → logprob: -2.645977735519409
    3. '[' → logprob: -3.520977735519409
    4. '
' → logprob: -4.145977973937988
    5. '[:-' → logprob: -5.020977973937988
    6. '(' → logprob: -5.270977973937988
    7. 'def' → logprob: -6.020977973937988
    8. '[-' → logprob: -6.895977973937988
    9. '   ' → logprob: -7.395977973937988
    10. '()' → logprob: -7.520977973937988

Token 282: ' B' (ID: 418)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2938089072704315
    2. ' for' → logprob: -1.918808937072754
    3. 'I' → logprob: -2.543808937072754
    4. 'def' → logprob: -4.418808937072754
    5. ' I' → logprob: -5.543808937072754
    6. '   ' → logprob: -5.793808937072754
    7. 'i' → logprob: -5.918808937072754
    8. '       ' → logprob: -5.918808937072754
    9. '[:' → logprob: -6.668808937072754
    10. '[' → logprob: -7.793808937072754

Token 283: 'inaire' (ID: 41465)
  Prédit: 'inary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inary' → logprob: -0.14975957572460175
    2. 'in' → logprob: -2.149759531021118
    3. 'inaire' → logprob: -4.024759769439697
    4. '[:' → logprob: -6.899759769439697
    5. 'inar' → logprob: -7.399759769439697
    6. '[' → logprob: -7.649759769439697
    7. 'iner' → logprob: -8.149759292602539
    8. 'INARY' → logprob: -8.274759292602539
    9. '[i' → logprob: -8.774759292602539
    10. 'y' → logprob: -8.899759292602539

Token 284: ' sur' (ID: 1512)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.28097909688949585
    2. '[' → logprob: -2.5309791564941406
    3. '   ' → logprob: -2.5309791564941406
    4. '[:-' → logprob: -3.1559791564941406
    5. 'def' → logprob: -4.655979156494141
    6. '(' → logprob: -5.530979156494141
    7. 'i' → logprob: -5.530979156494141
    8. '[i' → logprob: -5.905979156494141
    9. '(i' → logprob: -5.905979156494141
    10. '9' → logprob: -6.030979156494141

Token 285: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.029241450130939484
    2. '11' → logprob: -3.6542415618896484
    3. ' ' → logprob: -5.904241561889648
    4. '10' → logprob: -9.279241561889648
    5. 'length' → logprob: -9.279241561889648
    6. 'len' → logprob: -12.529241561889648
    7. ' length' → logprob: -12.654241561889648
    8. ' neuf' → logprob: -12.654241561889648
    9. '12' → logprob: -13.029241561889648
    10. '09' → logprob: -13.091741561889648

Token 286: '11' (ID: 994)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0548911988735199
    2. '11' → logprob: -2.9298911094665527
    3. ' ' → logprob: -12.054891586303711
    4. '10' → logprob: -14.054891586303711
    5. 'length' → logprob: -14.054891586303711
    6. '09' → logprob: -15.242391586303711
    7. ' neuf' → logprob: -15.242391586303711
    8. 'ele' → logprob: -15.367391586303711
    9. '12' → logprob: -15.992391586303711
    10. 'nine' → logprob: -16.11739158630371

Token 287: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2465537041425705
    2. 'chars' → logprob: -2.371553659439087
    3. 'bits' → logprob: -3.496553659439087
    4. '[' → logprob: -3.496553659439087
    5. ')
' → logprob: -3.871553659439087
    6. 'characters' → logprob: -4.621553897857666
    7. ' caractères' → logprob: -5.496553897857666
    8. 'car' → logprob: -5.496553897857666
    9. ')[' → logprob: -5.621553897857666
    10. ' caracteres' → logprob: -5.621553897857666

Token 288: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014322392642498016
    2. '
' → logprob: -4.764322280883789
    3. ' for' → logprob: -5.514322280883789
    4. 'for' → logprob: -7.014322280883789
    5. '   ' → logprob: -8.514322280883789
    6. ',' → logprob: -8.514322280883789
    7. '        
' → logprob: -9.014322280883789
    8. '9' → logprob: -10.139322280883789
    9. '
' → logprob: -10.389322280883789
    10. '[' → logprob: -10.514322280883789

Token 289: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05101089924573898
    2. ' i' → logprob: -3.176010847091675
    3. 'I' → logprob: -5.176011085510254
    4. '9' → logprob: -7.426011085510254
    5. ' I' → logprob: -7.426011085510254
    6. 'format' → logprob: -8.176011085510254
    7. 'l' → logprob: -8.426011085510254
    8. ''i' → logprob: -8.676011085510254
    9. ' ' → logprob: -8.801011085510254
    10. ' format' → logprob: -9.426011085510254

Token 290: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020404189825057983
    2. ' for' → logprob: -4.64540433883667
    3. '
' → logprob: -4.89540433883667
    4. 'for' → logprob: -6.77040433883667
    5. '   ' → logprob: -7.64540433883667
    6. '        
' → logprob: -7.77040433883667
    7. ',' → logprob: -8.020403861999512
    8. '[:' → logprob: -8.770403861999512
    9. '[' → logprob: -9.020403861999512
    10. ')' → logprob: -9.395403861999512

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013686569407582283
    2. ' for' → logprob: -4.763686656951904
    3. 'for' → logprob: -6.013686656951904
    4. '
' → logprob: -6.138686656951904
    5. '   ' → logprob: -8.138686180114746
    6. '        
' → logprob: -9.513686180114746
    7. '9' → logprob: -11.138686180114746
    8. '```' → logprob: -11.513686180114746
    9. '	for' → logprob: -12.138686180114746
    10. '
' → logprob: -12.138686180114746

Token 292: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7770556211471558
    2. 'for' (adapté à ' for') → logprob: -0.7770556211471558
    3. ' for' → logprob: -2.5270557403564453
    4. '   ' → logprob: -7.652055740356445
    5. 'j' → logprob: -10.527055740356445
    6. '```' → logprob: -10.652055740356445
    7. 'I' → logprob: -11.152055740356445
    8. '	for' → logprob: -11.152055740356445
    9. ' ' → logprob: -12.027055740356445
    10. '
' → logprob: -12.277055740356445

Token 293: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.061976756900548935
    2. 'j' → logprob: -2.811976671218872
    3. ' ' → logprob: -12.436976432800293
    4. '	j' → logprob: -12.811976432800293
    5. '    ' → logprob: -13.936976432800293
    6. '_j' → logprob: -14.811976432800293
    7. '   ' → logprob: -14.936976432800293
    8. ' ' → logprob: -15.186976432800293
    9. '       ' → logprob: -16.06197738647461
    10. '$j' → logprob: -16.31197738647461

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012532021850347519
    2. 'in' → logprob: -4.3875322341918945
    3. ' ' → logprob: -11.387532234191895
    4. 'range' → logprob: -12.762532234191895
    5. ' ' → logprob: -13.637532234191895
    6. ')' → logprob: -14.262532234191895
    7. 'dans' → logprob: -14.262532234191895
    8. '   ' → logprob: -14.387532234191895
    9. 'd' → logprob: -14.387532234191895
    10. '	in' → logprob: -14.637532234191895

Token 295: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889066636562347
    2. ' range' → logprob: -2.578890562057495
    3. '	range' → logprob: -15.453890800476074
    4. '(range' → logprob: -15.828890800476074
    5. ' ' → logprob: -15.953890800476074
    6. '   ' → logprob: -15.953890800476074
    7. 'rang' → logprob: -16.578889846801758
    8. 'r' → logprob: -16.703889846801758
    9. 'in' → logprob: -16.828889846801758
    10. 're' → logprob: -17.328889846801758

Token 296: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -11.875009536743164
    3. ' (' → logprob: -13.000009536743164
    4. '   ' → logprob: -15.500009536743164
    5. ' i' → logprob: -16.375009536743164
    6. 'i' → logprob: -16.625009536743164
    7. '(j' → logprob: -16.875009536743164
    8. '(n' → logprob: -18.000009536743164
    9. '(I' → logprob: -18.000009536743164
    10. '(
' → logprob: -18.500009536743164

Token 297: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014167606830597
    2. ' +' → logprob: -1.7014167308807373
    3. '1' → logprob: -13.201416969299316
    4. '+
' → logprob: -14.451416969299316
    5. '   ' → logprob: -14.701416969299316
    6. ',' → logprob: -15.701416969299316
    7. ' +
' → logprob: -16.201416015625
    8. ' ' → logprob: -16.201416015625
    9. '       ' → logprob: -16.951416015625
    10. '+i' → logprob: -16.951416015625

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002966127940453589
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -14.875296592712402
    4. 'n' → logprob: -16.62529754638672
    5. ' n' → logprob: -16.75029754638672
    6. '       ' → logprob: -17.00029754638672
    7. '0' → logprob: -18.50029754638672
    8. ')' → logprob: -18.93779754638672
    9. '  ' → logprob: -19.00029754638672
    10. '2' → logprob: -19.06279754638672

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -11.000036239624023
    3. 'n' → logprob: -11.000036239624023
    4. 'i' → logprob: -13.875036239624023
    5. '   ' → logprob: -14.500036239624023
    6. '2' → logprob: -14.625036239624023
    7. '0' → logprob: -14.750036239624023
    8. ' n' → logprob: -16.187536239624023
    9. '(n' → logprob: -16.437536239624023
    10. 'range' → logprob: -17.062536239624023

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000522650487255305
    2. ' ,' → logprob: -7.875522613525391
    3. ',n' → logprob: -8.87552261352539
    4. 'n' → logprob: -12.87552261352539
    5. ',
' → logprob: -16.75052261352539
    6. ' n' → logprob: -17.00052261352539
    7. '(n' → logprob: -17.12552261352539
    8. '_,' → logprob: -17.50052261352539
    9. ' ' → logprob: -17.87552261352539
    10. '1' → logprob: -18.00052261352539

Token 301: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0040785204619169235
    2. ' n' → logprob: -5.504078388214111
    3. '       ' → logprob: -17.129077911376953
    4. '	n' → logprob: -17.629077911376953
    5. ')n' → logprob: -17.629077911376953
    6. '   ' → logprob: -17.754077911376953
    7. '(n' → logprob: -18.879077911376953
    8. ')' → logprob: -20.004077911376953
    9. '           ' → logprob: -20.254077911376953
    10. '    ' → logprob: -21.379077911376953

Token 302: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029787518084049225
    2. '):
' → logprob: -3.529787540435791
    3. ':' → logprob: -10.654787063598633
    4. '):
' → logprob: -12.154787063598633
    5. '   ' → logprob: -12.404787063598633
    6. '       ' → logprob: -13.404787063598633
    7. ')' → logprob: -13.904787063598633
    8. '):

' → logprob: -14.779787063598633
    9. '():' → logprob: -14.904787063598633
    10. ' ):' → logprob: -14.904787063598633

Token 303: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2578272521495819
    2. '           ' → logprob: -1.5078272819519043
    3. '
' → logprob: -5.757827281951904
    4. '	       ' → logprob: -7.382827281951904
    5. '<|end|>' → logprob: -7.507827281951904
    6. '	' → logprob: -8.382826805114746
    7. '        
' → logprob: -8.632826805114746
    8. '		' → logprob: -8.632826805114746
    9. '   ' → logprob: -8.757826805114746
    10. '<|end|>' → logprob: -9.382826805114746

Token 304: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002931821858510375
    2. 'J' → logprob: -6.502931594848633
    3. 'I' → logprob: -7.002931594848633
    4. '
' → logprob: -8.752931594848633
    5. ':
' → logprob: -9.377931594848633
    6. '       ' → logprob: -10.127931594848633
    7. '            
' → logprob: -10.127931594848633
    8. ',' → logprob: -10.752931594848633
    9. '#' (adapté à ' #') → logprob: -10.752931594848633
    10. ' J' → logprob: -10.877931594848633

Token 305: ' Pour' (ID: 13931)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.01914602518081665
    2. '           ' → logprob: -4.019145965576172
    3. ' J' → logprob: -7.144145965576172
    4. '
' → logprob: -8.644145965576172
    5. '#' → logprob: -12.144145965576172
    6. '          ' → logprob: -12.894145965576172
    7. '         ' → logprob: -13.144145965576172
    8. '       ' → logprob: -13.144145965576172
    9. '
' → logprob: -13.144145965576172
    10. '            
' → logprob: -13.144145965576172

Token 306: ' chaque' (ID: 21194)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.21807286143302917
    2. 'j' → logprob: -1.8430728912353516
    3. ' chaque' → logprob: -3.3430728912353516
    4. ' each' → logprob: -6.968072891235352
    5. 'each' → logprob: -7.468072891235352
    6. ' ' → logprob: -7.843072891235352
    7. ' cada' → logprob: -10.593072891235352
    8. '    ' → logprob: -10.593072891235352
    9. ' la' → logprob: -10.718072891235352
    10. ' chacune' → logprob: -10.718072891235352

Token 307: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.35039007663726807
    2. 'j' → logprob: -1.225390076637268
    3. ' ' → logprob: -6.9753899574279785
    4. ' ' → logprob: -8.975390434265137
    5. ' )' → logprob: -9.100390434265137
    6. ' i' → logprob: -9.350390434265137
    7. '   ' → logprob: -9.350390434265137
    8. ')' → logprob: -9.600390434265137
    9. '    ' → logprob: -9.600390434265137
    10. '	j' → logprob: -9.600390434265137

Token 308: ' >' (ID: 1424)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5419245958328247
    2. '       ' → logprob: -1.5419245958328247
    3. '           ' → logprob: -2.541924476623535
    4. ',' → logprob: -3.166924476623535
    5. ':
' → logprob: -3.166924476623535
    6. '   ' → logprob: -3.541924476623535
    7. '):
' → logprob: -6.041924476623535
    8. '):' → logprob: -6.166924476623535
    9. ' :' → logprob: -6.291924476623535
    10. '=' → logprob: -6.666924476623535

Token 309: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11286105960607529
    2. ' i' → logprob: -2.237861156463623
    3. ' ' → logprob: -11.112860679626465
    4. '<|end|>' → logprob: -11.737860679626465
    5. 'j' → logprob: -12.112860679626465
    6. '	i' → logprob: -12.862860679626465
    7. ' ' → logprob: -13.237860679626465
    8. '<|end|>' → logprob: -13.737860679626465
    9. '   ' → logprob: -13.862860679626465
    10. ' j' → logprob: -14.237860679626465

Token 310: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9934167861938477
    2. '           ' → logprob: -1.3684167861938477
    3. '       ' → logprob: -1.7434167861938477
    4. ':
' → logprob: -1.7434167861938477
    5. ',' → logprob: -4.368416786193848
    6. '<|end|>' → logprob: -5.868416786193848
    7. '<|end|>' → logprob: -5.993416786193848
    8. '
' → logprob: -6.243416786193848
    9. ' :' → logprob: -6.493416786193848
    10. '):
' → logprob: -6.618416786193848

Token 311: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023205643519759178
    2. 'I' → logprob: -4.523205757141113
    3. '       ' → logprob: -4.773205757141113
    4. '
' → logprob: -6.148205757141113
    5. ' I' → logprob: -7.273205757141113
    6. '```' → logprob: -8.898205757141113
    7. '            
' → logprob: -9.148205757141113
    8. ',' → logprob: -9.273205757141113
    9. '        
' → logprob: -9.773205757141113
    10. ':
' → logprob: -10.023205757141113

Token 312: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' (adapté à ' J') → logprob: -0.0021726242266595364
    2. '           ' → logprob: -6.377172470092773
    3. '               ' → logprob: -8.252172470092773
    4. ' J' → logprob: -8.627172470092773
    5. '            ' → logprob: -11.002172470092773
    6. '                   ' → logprob: -12.252172470092773
    7. '
' → logprob: -12.627172470092773
    8. '             ' → logprob: -13.877172470092773
    9. '          ' → logprob: -14.127172470092773
    10. '              ' → logprob: -14.502172470092773

Token 313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489921569824219
    2. '=' → logprob: -2.929899215698242
    3. ' ' → logprob: -11.179899215698242
    4. '=format' → logprob: -13.679899215698242
    5. '   ' → logprob: -14.179899215698242
    6. '  ' → logprob: -14.554899215698242
    7. '_' → logprob: -15.804899215698242
    8. '>' → logprob: -16.304899215698242
    9. '    ' → logprob: -16.304899215698242
    10. ')' → logprob: -16.929899215698242

Token 314: ' format' (ID: 6011)
  Prédit: ' format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' format' → logprob: -0.47408682107925415
    2. 'format' → logprob: -0.9740868210792542
    3. '(format' → logprob: -12.47408676147461
    4. '	format' → logprob: -12.59908676147461
    5. '=format' → logprob: -13.34908676147461
    6. '.format' → logprob: -15.09908676147461
    7. 'form' → logprob: -15.47408676147461
    8. ' ' → logprob: -15.59908676147461
    9. '_format' → logprob: -16.34908676147461
    10. ' формат' → logprob: -16.72408676147461

Token 315: '_binary' (ID: 77551)
  Prédit: '_binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_binary' → logprob: -3.650518920039758e-06
    2. 'binary' → logprob: -12.625003814697266
    3. 'Binary' → logprob: -16.000003814697266
    4. '_' → logprob: -16.375003814697266
    5. '_BINARY' → logprob: -16.875003814697266
    6. 'format' → logprob: -18.125003814697266
    7. '(format' → logprob: -19.125003814697266
    8. ' binary' → logprob: -20.375003814697266
    9. '_b' → logprob: -20.750003814697266
    10. '_basic' → logprob: -21.000003814697266

Token 316: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.003301412332803011
    2. 'string' → logprob: -5.753301620483398
    3. 'String' → logprob: -9.003301620483398
    4. 'str' → logprob: -15.378301620483398
    5. '_str' → logprob: -16.1283016204834
    6. '_STRING' → logprob: -16.1283016204834
    7. '_binary' → logprob: -17.2533016204834
    8. 's' → logprob: -17.7533016204834
    9. '字符串' → logprob: -18.0033016204834
    10. ' string' → logprob: -18.2533016204834

Token 317: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.750003814697266
    3. 'j' → logprob: -14.750003814697266
    4. ' (' → logprob: -17.000003814697266
    5. '[j' → logprob: -17.500003814697266
    6. '(
' → logprob: -18.500003814697266
    7. '(J' → logprob: -18.500003814697266
    8. '(i' → logprob: -19.375003814697266
    9. '	j' → logprob: -19.875003814697266
    10. ',j' → logprob: -20.250003814697266

Token 318: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01612762361764908
    2. ')
' → logprob: -4.141127586364746
    3. ',' → logprob: -10.266127586364746
    4. ' )' → logprob: -10.516127586364746
    5. ')
' → logprob: -11.391127586364746
    6. '           ' → logprob: -11.891127586364746
    7. ')

' → logprob: -12.516127586364746
    8. ')[' → logprob: -13.141127586364746
    9. '   ' → logprob: -13.641127586364746
    10. '       ' → logprob: -13.891127586364746

Token 319: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018184473738074303
    2. '
' → logprob: -4.143184661865234
    3. '            
' → logprob: -6.393184661865234
    4. ' for' → logprob: -8.643184661865234
    5. '       ' → logprob: -10.143184661865234
    6. ' 
' → logprob: -10.518184661865234
    7. '           
' → logprob: -10.518184661865234
    8. '    
' → logprob: -10.643184661865234
    9. '  
' → logprob: -10.893184661865234
    10. ',' → logprob: -10.893184661865234

Token 320: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1567734032869339
    2. '
' → logprob: -2.031773328781128
    3. 'for' → logprob: -5.406773567199707
    4. ' for' → logprob: -5.656773567199707
    5. '#' → logprob: -6.281773567199707
    6. '            
' → logprob: -6.281773567199707
    7. ')
' → logprob: -8.031773567199707
    8. '
' → logprob: -8.156773567199707
    9. '[:' → logprob: -8.281773567199707
    10. 'diff' → logprob: -8.281773567199707

Token 321: ' B' (ID: 418)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'J' → logprob: -1.327597975730896
    2. 'bin' → logprob: -1.577597975730896
    3. 'format' → logprob: -1.702597975730896
    4. 'I' → logprob: -1.702597975730896
    5. '           ' → logprob: -2.4525980949401855
    6. 'j' → logprob: -3.3275980949401855
    7. ' bin' → logprob: -5.3275980949401855
    8. 'binary' → logprob: -5.5775980949401855
    9. '(bin' → logprob: -5.7025980949401855
    10. '(format' → logprob: -5.8275980949401855

Token 322: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -7.862962229410186e-05
    2. 'inary' → logprob: -9.750078201293945
    3. 'IN' → logprob: -11.750078201293945
    4. 'inar' → logprob: -12.000078201293945
    5. 'bin' → logprob: -13.375078201293945
    6. 'inaire' → logprob: -13.375078201293945
    7. '(bin' → logprob: -13.750078201293945
    8. ''' → logprob: -15.000078201293945
    9. '(in' → logprob: -15.375078201293945
    10. 'J' → logprob: -15.500078201293945

Token 323: ' sur' (ID: 1512)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6707581281661987
    2. '(' → logprob: -1.2957581281661987
    3. ')' → logprob: -2.1707582473754883
    4. '(j' → logprob: -3.4207582473754883
    5. ')[' → logprob: -3.7957582473754883
    6. '[j' → logprob: -3.7957582473754883
    7. '()[' → logprob: -5.045758247375488
    8. '           ' → logprob: -5.295758247375488
    9. '()' → logprob: -5.295758247375488
    10. '<|end|>' → logprob: -7.170758247375488

Token 324: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.002492183819413185
    2. ' ' → logprob: -6.0024919509887695
    3. '9' → logprob: -12.00249195098877
    4. ')' → logprob: -12.50249195098877
    5. 'j' → logprob: -13.25249195098877
    6. '           ' → logprob: -13.75249195098877
    7. ' j' → logprob: -14.37749195098877
    8. 'length' → logprob: -14.37749195098877
    9. ''' → logprob: -14.75249195098877
    10. ' eleven' → logprob: -14.87749195098877

Token 325: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.500028610229492
    3. 'j' → logprob: -14.375028610229492
    4. '9' → logprob: -16.250028610229492
    5. '011' → logprob: -16.250028610229492
    6. 'i' → logprob: -16.375028610229492
    7. '1' → logprob: -16.625028610229492
    8. 'length' → logprob: -17.500028610229492
    9. '           ' → logprob: -17.500028610229492
    10. '```' → logprob: -17.500028610229492

Token 326: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.5978321433067322
    2. 'bits' → logprob: -1.097832202911377
    3. '_bits' → logprob: -2.222832202911377
    4. '(bits' → logprob: -4.847832202911377
    5. ')' → logprob: -8.847831726074219
    6. '.bits' → logprob: -10.472831726074219
    7. '[' → logprob: -10.722831726074219
    8. 'tokens' → logprob: -10.972831726074219
    9. '_b' → logprob: -11.722831726074219
    10. ' tokens' → logprob: -12.222831726074219

Token 327: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008964939042925835
    2. ')' → logprob: -5.008965015411377
    3. '[' → logprob: -7.008965015411377
    4. ')
' → logprob: -7.258965015411377
    5. ')[' → logprob: -8.383964538574219
    6. '          ' → logprob: -8.758964538574219
    7. '       ' → logprob: -9.633964538574219
    8. '            
' → logprob: -10.008964538574219
    9. '
' → logprob: -10.383964538574219
    10. '   ' → logprob: -10.883964538574219

Token 328: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001468067930545658
    2. ' j' → logprob: -9.500146865844727
    3. '11' → logprob: -10.000146865844727
    4. 'J' → logprob: -11.000146865844727
    5. ')' → logprob: -11.750146865844727
    6. ' ' → logprob: -14.375146865844727
    7. '(j' → logprob: -14.375146865844727
    8. '```' → logprob: -15.125146865844727
    9. '[j' → logprob: -15.500146865844727
    10. '$j' → logprob: -16.875146865844727

Token 329: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26359498500823975
    2. '
' → logprob: -1.5135949850082397
    3. ' for' → logprob: -5.138595104217529
    4. '            
' → logprob: -5.888595104217529
    5. 'for' → logprob: -6.388595104217529
    6. '
' → logprob: -7.638595104217529
    7. '       ' → logprob: -8.513594627380371
    8. '#' → logprob: -8.513594627380371
    9. '    
' → logprob: -9.763594627380371
    10. '           
' → logprob: -10.138594627380371

Token 330: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003410647332202643
    2. ' for' → logprob: -8.625341415405273
    3. '
' → logprob: -9.500341415405273
    4. '            
' → logprob: -10.500341415405273
    5. 'diff' → logprob: -10.875341415405273
    6. 'for' → logprob: -11.375341415405273
    7. '       ' → logprob: -12.250341415405273
    8. ',' → logprob: -12.375341415405273
    9. '```' → logprob: -12.750341415405273
    10. 'dif' → logprob: -12.875341415405273

Token 331: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13699346780776978
    2. 'found' → logprob: -2.511993408203125
    3. 'diff' → logprob: -3.511993408203125
    4. '           ' → logprob: -4.761993408203125
    5. 'position' → logprob: -6.011993408203125
    6. 'pos' → logprob: -6.011993408203125
    7. 'difference' → logprob: -6.011993408203125
    8. 'first' → logprob: -7.636993408203125
    9. 'positions' → logprob: -8.886993408203125
    10. 'index' → logprob: -8.886993408203125

Token 332: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08601276576519012
    2. 'found' → logprob: -2.711012840270996
    3. 'diff' → logprob: -4.711012840270996
    4. '#' → logprob: -5.336012840270996
    5. 'difference' → logprob: -7.336012840270996
    6. 'positions' → logprob: -8.086012840270996
    7. 'position' → logprob: -8.336012840270996
    8. 'first' → logprob: -8.586012840270996
    9. 'dif' → logprob: -8.711012840270996
    10. '           ' → logprob: -8.711012840270996

Token 333: ' cherche' (ID: 52345)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.5497323274612427
    2. 'for' → logprob: -1.1747323274612427
    3. ' compare' → logprob: -2.924732208251953
    4. ' for' → logprob: -3.549732208251953
    5. ' regarde' → logprob: -4.549732208251953
    6. 'diff' → logprob: -5.924732208251953
    7. 'cherche' → logprob: -6.049732208251953
    8. 'continue' → logprob: -6.424732208251953
    9. 'limit' → logprob: -6.424732208251953
    10. 'consider' → logprob: -6.674732208251953

Token 334: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20563966035842896
    2. 'for' → logprob: -2.955639600753784
    3. 'la' → logprob: -2.955639600753784
    4. ' for' → logprob: -3.330639600753784
    5. '           ' → logprob: -4.580639839172363
    6. 'le' → logprob: -5.080639839172363
    7. 'the' → logprob: -5.330639839172363
    8. 'diff' → logprob: -5.330639839172363
    9. ' l' → logprob: -5.955639839172363
    10. 'position' → logprob: -5.955639839172363

Token 335: ' première' (ID: 23423)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.3443712294101715
    2. 'pos' → logprob: -1.9693711996078491
    3. 'diff' → logprob: -2.8443713188171387
    4. ' position' → logprob: -3.2193713188171387
    5. 'first' → logprob: -4.344371318817139
    6. 'difference' → logprob: -4.344371318817139
    7. 'prem' → logprob: -4.719371318817139
    8. ' first' → logprob: -5.094371318817139
    9. 'found' → logprob: -5.344371318817139
    10. 'for' → logprob: -6.219371318817139

Token 336: ' position' (ID: 4010)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.07577521353960037
    2. 'position' → logprob: -3.575775146484375
    3. ' différence' → logprob: -4.075775146484375
    4. 'difference' → logprob: -4.575775146484375
    5. ' diff' → logprob: -5.325775146484375
    6. 'for' → logprob: -5.700775146484375
    7. ' position' → logprob: -5.700775146484375
    8. ' for' → logprob: -6.075775146484375
    9. ' difference' → logprob: -6.700775146484375
    10. 'dif' → logprob: -7.450775146484375

Token 337: ' (' (ID: 350)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' where' → logprob: -1.6722534894943237
    2. ' of' → logprob: -1.9222534894943237
    3. ' for' → logprob: -1.9222534894943237
    4. ' de' → logprob: -2.1722536087036133
    5. 'diff' → logprob: -2.2972536087036133
    6. '           ' → logprob: -2.4222536087036133
    7. ' in' → logprob: -3.1722536087036133
    8. ' où' → logprob: -3.2972536087036133
    9. ' k' → logprob: -3.5472536087036133
    10. 'for' → logprob: -4.172253608703613

Token 338: 'des' (ID: 4117)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3714714050292969
    2. ' k' → logprob: -1.6214714050292969
    3. ' du' → logprob: -2.621471405029297
    4. 'diff' → logprob: -2.621471405029297
    5. ' de' → logprob: -2.746471405029297
    6. ' dans' → logprob: -2.871471405029297
    7. ' for' → logprob: -2.996471405029297
    8. '           ' → logprob: -2.996471405029297
    9. 'for' → logprob: -4.246471405029297
    10. ' où' → logprob: -4.246471405029297

Token 339: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9506683349609375
    2. '9' → logprob: -0.9506683349609375
    3. '1' → logprob: -1.8256683349609375
    4. ' ' → logprob: -3.4506683349609375
    5. 'bits' → logprob: -5.2006683349609375
    6. '3' → logprob: -5.5756683349609375
    7. 'indices' → logprob: -5.5756683349609375
    8. 'positions' → logprob: -5.8256683349609375
    9. ' bits' → logprob: -5.9506683349609375
    10. ' indices' → logprob: -6.2006683349609375

Token 340: '9' (ID: 24)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5904432535171509
    2. '3' → logprob: -1.4654432535171509
    3. '1' → logprob: -1.9654432535171509
    4. '2' → logprob: -3.7154431343078613
    5. '9' → logprob: -3.8404431343078613
    6. ' ' → logprob: -4.715443134307861
    7. 'plus' → logprob: -5.215443134307861
    8. 'bits' → logprob: -5.965443134307861
    9. '4' → logprob: -6.090443134307861
    10. 'positions' → logprob: -6.840443134307861

Token 341: ' premiers' (ID: 59140)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.060769885778427124
    2. ' caractères' → logprob: -3.81076979637146
    3. 'bits' → logprob: -4.810770034790039
    4. ' positions' → logprob: -5.310770034790039
    5. ' de' → logprob: -5.685770034790039
    6. ' plus' → logprob: -5.810770034790039
    7. ' espaces' → logprob: -5.935770034790039
    8. ' à' → logprob: -6.060770034790039
    9. ' poids' → logprob: -6.060770034790039
    10. 'positions' → logprob: -6.435770034790039

Token 342: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.4321081042289734
    2. 'bits' → logprob: -1.0571081638336182
    3. ' caractères' → logprob: -5.932107925415039
    4. 'car' → logprob: -8.307107925415039
    5. ')' → logprob: -9.182107925415039
    6. 'b' → logprob: -9.307107925415039
    7. 'bit' → logprob: -10.182107925415039
    8. '(bits' → logprob: -10.307107925415039
    9. ' ' → logprob: -10.557107925415039
    10. '_bits' → logprob: -10.557107925415039

Token 343: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5894330739974976
    2. ' de' → logprob: -1.9644330739974976
    3. '           ' → logprob: -2.089433193206787
    4. ' où' → logprob: -2.839433193206787
    5. ',' → logprob: -3.339433193206787
    6. 'de' → logprob: -3.589433193206787
    7. ' )' → logprob: -4.339433193206787
    8. 'où' → logprob: -4.464433193206787
    9. ' where' → logprob: -4.839433193206787
    10. '               ' → logprob: -5.339433193206787

Token 344: ' où' (ID: 15113)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7754067778587341
    2. ' where' → logprob: -1.275406837463379
    3. '           ' → logprob: -1.525406837463379
    4. ' où' → logprob: -3.775406837463379
    5. ' from' → logprob: -5.400406837463379
    6. 'où' → logprob: -6.025406837463379
    7. 'for' → logprob: -6.150406837463379
    8. ' de' → logprob: -6.275406837463379
    9. ' in' → logprob: -6.525406837463379
    10. ' of' → logprob: -6.900406837463379

Token 345: ' les' (ID: 1341)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.007619637995958328
    2. ' I' → logprob: -4.882619857788086
    3. '   ' → logprob: -12.007619857788086
    4. ' ' → logprob: -13.007619857788086
    5. '           ' → logprob: -13.007619857788086
    6. '       ' → logprob: -14.132619857788086
    7. 'i' → logprob: -14.507619857788086
    8. '  ' → logprob: -14.632619857788086
    9. '	I' → logprob: -15.132619857788086
    10. '(I' → logprob: -15.257619857788086

Token 346: ' chaînes' (ID: 179904)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0892951563000679
    2. ' I' → logprob: -2.5892951488494873
    3. ' bits' → logprob: -5.339295387268066
    4. 'i' → logprob: -5.464295387268066
    5. 'bits' → logprob: -7.339295387268066
    6. ' i' → logprob: -8.839295387268066
    7. 'car' → logprob: -9.214295387268066
    8. 'if' → logprob: -9.339295387268066
    9. 'diff' → logprob: -9.589295387268066
    10. ' caractères' → logprob: -9.714295387268066

Token 347: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.41821321845054626
    2. 'I' → logprob: -1.4182132482528687
    3. ' I' → logprob: -2.793213129043579
    4. ' differ' → logprob: -4.918213367462158
    5. '[I' → logprob: -5.168213367462158
    6. 'i' → logprob: -5.168213367462158
    7. '[i' → logprob: -5.668213367462158
    8. ' diff' → logprob: -5.918213367462158
    9. 'd' → logprob: -5.918213367462158
    10. '   ' → logprob: -6.293213367462158

Token 348: 'èrent' (ID: 55228)
  Prédit: 'èrent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èrent' → logprob: -0.0048779272474348545
    2. 'érent' → logprob: -5.379878044128418
    3. '`' → logprob: -9.879878044128418
    4. '   ' → logprob: -10.129878044128418
    5. '       ' → logprob: -10.129878044128418
    6. '           ' → logprob: -11.004878044128418
    7. 'è' → logprob: -11.254878044128418
    8. 'er' → logprob: -11.379878044128418
    9. 'èr' → logprob: -11.629878044128418
    10. '#' → logprob: -11.629878044128418

Token 349: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04837533459067345
    2. ' for' → logprob: -3.548375368118286
    3. '		' → logprob: -4.548375129699707
    4. '\t' → logprob: -6.048375129699707
    5. ',' → logprob: -7.048375129699707
    6. '	       ' → logprob: -7.048375129699707
    7. '
' → logprob: -7.548375129699707
    8. '	' → logprob: -8.048375129699707
    9. '   ' → logprob: -8.173375129699707
    10. ' in' → logprob: -8.298375129699707

Token 350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004027345683425665
    2. '		' → logprob: -6.504027366638184
    3. ' for' → logprob: -6.629027366638184
    4. '       ' → logprob: -7.629027366638184
    5. '	       ' → logprob: -8.004027366638184
    6. 'for' → logprob: -9.004027366638184
    7. '	   ' → logprob: -9.004027366638184
    8. '		   ' → logprob: -10.379027366638184
    9. '	' → logprob: -10.629027366638184
    10. '
' → logprob: -10.754027366638184

Token 351: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23678550124168396
    2. 'for' (adapté à ' for') → logprob: -1.9867855310440063
    3. '           ' → logprob: -2.611785411834717
    4. ' found' → logprob: -9.236785888671875
    5. 'found' → logprob: -9.611785888671875
    6. 'position' → logprob: -10.111785888671875
    7. '       ' → logprob: -10.486785888671875
    8. 'diff' → logprob: -10.986785888671875
    9. ' position' → logprob: -10.986785888671875
    10. ' ' → logprob: -11.736785888671875

Token 352: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15265405178070068
    2. 'pos' → logprob: -2.1526541709899902
    3. ' k' → logprob: -4.15265417098999
    4. ' pos' → logprob: -4.65265417098999
    5. 'index' → logprob: -10.277653694152832
    6. 'p' → logprob: -10.527653694152832
    7. 'idx' → logprob: -10.527653694152832
    8. 'position' → logprob: -10.777653694152832
    9. 'bit' → logprob: -11.527653694152832
    10. ' idx' → logprob: -12.027653694152832

Token 353: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011757015017792583
    2. 'in' → logprob: -6.751175880432129
    3. ' ' → logprob: -13.001175880432129
    4. 'k' → logprob: -13.251175880432129
    5. '	in' → logprob: -14.876175880432129
    6. 'd' → logprob: -15.376175880432129
    7. ' k' → logprob: -15.876175880432129
    8. '    ' → logprob: -16.126174926757812
    9. '   ' → logprob: -16.251174926757812
    10. '0' → logprob: -16.501174926757812

Token 354: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02054421976208687
    2. ' range' → logprob: -3.8955442905426025
    3. '   ' → logprob: -14.020544052124023
    4. '(range' → logprob: -14.395544052124023
    5. ' ' → logprob: -14.770544052124023
    6. '0' → logprob: -15.645544052124023
    7. '	range' → logprob: -15.645544052124023
    8. '[' → logprob: -17.020544052124023
    9. '  ' → logprob: -17.145544052124023
    10. '    ' → logprob: -18.020544052124023

Token 355: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014259408228099346
    2. '9' → logprob: -4.389259338378906
    3. '2' → logprob: -6.389259338378906
    4. '1' → logprob: -11.014259338378906
    5. '3' → logprob: -11.139259338378906
    6. '   ' → logprob: -11.139259338378906
    7. ' ' → logprob: -11.764259338378906
    8. ' (' → logprob: -11.889259338378906
    9. '(len' → logprob: -12.889259338378906
    10. '0' → logprob: -13.389259338378906

Token 356: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.35407754778862
    2. '2' → logprob: -1.2290775775909424
    3. '0' → logprob: -5.354077339172363
    4. '1' → logprob: -7.229077339172363
    5. ' ' → logprob: -9.229077339172363
    6. '3' → logprob: -10.229077339172363
    7. '11' → logprob: -11.354077339172363
    8. '   ' → logprob: -11.854077339172363
    9. ')' → logprob: -12.979077339172363
    10. 'len' → logprob: -13.479077339172363

Token 357: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006072541233152151
    2. '):
' → logprob: -5.131072521209717
    3. '   ' → logprob: -9.006072998046875
    4. '       ' → logprob: -12.381072998046875
    5. ' ):' → logprob: -12.631072998046875
    6. ':' → logprob: -12.756072998046875
    7. ',' → logprob: -12.881072998046875
    8. '):
' → logprob: -13.506072998046875
    9. ')' → logprob: -13.756072998046875
    10. '0' → logprob: -14.006072998046875

Token 358: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004643722902983427
    2. ' if' → logprob: -5.62964391708374
    3. '           ' → logprob: -8.004643440246582
    4. 'if' → logprob: -8.379643440246582
    5. '       ' → logprob: -8.379643440246582
    6. ':' → logprob: -9.254643440246582
    7. ',' → logprob: -10.504643440246582
    8. '                
' → logprob: -10.629643440246582
    9. '   ' → logprob: -10.879643440246582
    10. ' :' → logprob: -11.504643440246582

Token 359: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43975549936294556
    2. 'if' (adapté à ' if') → logprob: -1.0647554397583008
    3. '               ' → logprob: -4.564755439758301
    4. '                ' → logprob: -8.1897554397583
    5. '           ' → logprob: -9.3147554397583
    6. ' ' → logprob: -9.8147554397583
    7. '   ' → logprob: -9.9397554397583
    8. '	if' → logprob: -10.6897554397583
    9. ' ' → logprob: -10.6897554397583
    10. '                   ' → logprob: -11.1897554397583

Token 360: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.05494830012321472
    2. ' I' → logprob: -2.929948329925537
    3. '   ' → logprob: -9.804947853088379
    4. '	I' → logprob: -12.429947853088379
    5. ' ' → logprob: -12.554947853088379
    6. '(I' → logprob: -14.679947853088379
    7. '    ' → logprob: -14.804947853088379
    8. '       ' → logprob: -14.804947853088379
    9. '  ' → logprob: -14.929947853088379
    10. '_I' → logprob: -14.929947853088379

Token 361: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.2127087504486553e-05
    2. '[' → logprob: -10.750021934509277
    3. ' [' → logprob: -14.875021934509277
    4. '[j' → logprob: -16.375022888183594
    5. '[key' → logprob: -16.500022888183594
    6. 'k' → logprob: -17.625022888183594
    7. '[m' → logprob: -17.750022888183594
    8. '[i' → logprob: -17.875022888183594
    9. '[K' → logprob: -18.000022888183594
    10. '[n' → logprob: -18.250022888183594

Token 362: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1292167603969574
    2. ']!=' → logprob: -2.5042166709899902
    3. '!=' → logprob: -3.2542166709899902
    4. ' !=' → logprob: -7.25421667098999
    5. ' ]' → logprob: -9.504217147827148
    6. '']' → logprob: -10.504217147827148
    7. ')!=' → logprob: -10.754217147827148
    8. 'k' → logprob: -11.254217147827148
    9. '!==' → logprob: -12.504217147827148
    10. '"]' → logprob: -12.629217147827148

Token 363: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0019469641847535968
    2. ' !=' → logprob: -6.251946926116943
    3. '!==' → logprob: -11.626947402954102
    4. ']!=' → logprob: -12.501947402954102
    5. ')!=' → logprob: -13.501947402954102
    6. '=' → logprob: -13.626947402954102
    7. '()!=' → logprob: -14.251947402954102
    8. '!' → logprob: -14.251947402954102
    9. '==' → logprob: -14.626947402954102
    10. '```' → logprob: -15.251947402954102

Token 364: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.005233882926404476
    2. ' J' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.005233764648438
    4. '	J' → logprob: -17.505233764648438
    5. 'j' → logprob: -19.005233764648438
    6. ' ' → logprob: -19.255233764648438
    7. '`' → logprob: -19.380233764648438
    8. '<J' → logprob: -19.505233764648438
    9. '```' → logprob: -19.755233764648438
    10. ',J' → logprob: -19.880233764648438

Token 365: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.990154047845863e-05
    2. 'k' → logprob: -10.000049591064453
    3. '[' → logprob: -12.625049591064453
    4. ']' → logprob: -14.625049591064453
    5. '][' → logprob: -15.625049591064453
    6. ')' → logprob: -16.125049591064453
    7. '[
' → logprob: -16.250049591064453
    8. ' [' → logprob: -16.375049591064453
    9. '```' → logprob: -16.375049591064453
    10. '[key' → logprob: -16.625049591064453

Token 366: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02952401712536812
    2. ']:
' → logprob: -3.779524087905884
    3. ']' → logprob: -5.154523849487305
    4. '):' → logprob: -8.529523849487305
    5. '']:' → logprob: -9.154523849487305
    6. ']:
' → logprob: -9.904523849487305
    7. '"]:' → logprob: -10.154523849487305
    8. ':' → logprob: -10.779523849487305
    9. '']:
' → logprob: -11.029523849487305
    10. ']:

' → logprob: -11.154523849487305

Token 367: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06798727065324783
    2. ':' → logprob: -3.0679872035980225
    3. ':
' → logprob: -4.692987442016602
    4. '               ' → logprob: -4.817987442016602
    5. '                       ' → logprob: -8.192987442016602
    6. '):
' → logprob: -8.317987442016602
    7. ' :' → logprob: -8.317987442016602
    8. '           ' → logprob: -8.317987442016602
    9. ',' → logprob: -8.817987442016602
    10. '                           ' → logprob: -9.192987442016602

Token 368: ' differences' (ID: 19504)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.5346046686172485
    2. ' differences' → logprob: -0.9096046686172485
    3. '                   ' → logprob: -4.534604549407959
    4. 'd' → logprob: -8.409605026245117
    5. '               ' → logprob: -8.534605026245117
    6. 'diff' → logprob: -8.909605026245117
    7. 'difference' → logprob: -10.034605026245117
    8. '                       ' → logprob: -10.409605026245117
    9. 'positions' → logprob: -10.659605026245117
    10. ' positions' → logprob: -11.909605026245117

Token 369: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007110013975761831
    2. '.' → logprob: -7.250710964202881
    3. ' .' → logprob: -14.625711441040039
    4. '.app' → logprob: -15.000711441040039
    5. '.ap' → logprob: -16.12571144104004
    6. 'append' → logprob: -16.50071144104004
    7. '.Append' → logprob: -17.00071144104004
    8. '.extend' → logprob: -17.37571144104004
    9. '].' → logprob: -17.50071144104004
    10. '.setdefault' → logprob: -18.12571144104004

Token 370: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0013708343030884862
    2. '(' → logprob: -6.751370906829834
    3. '(str' → logprob: -9.251370429992676
    4. '((' → logprob: -9.626370429992676
    5. 'k' → logprob: -10.751370429992676
    6. '9' → logprob: -11.501370429992676
    7. '(i' → logprob: -13.251370429992676
    8. '(n' → logprob: -13.251370429992676
    9. '(j' → logprob: -13.501370429992676
    10. ' (' → logprob: -14.876370429992676

Token 371: '9' (ID: 24)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007318547577597201
    2. 'str' → logprob: -7.500731945037842
    3. '9' → logprob: -8.875731468200684
    4. '(k' → logprob: -10.875731468200684
    5. '(' → logprob: -11.875731468200684
    6. '8' → logprob: -12.375731468200684
    7. ' k' → logprob: -12.875731468200684
    8. '                   ' → logprob: -13.125731468200684
    9. '               ' → logprob: -13.750731468200684
    10. '(str' → logprob: -14.125731468200684

Token 372: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6362093091011047
    2. '-' → logprob: -1.38620924949646
    3. '-k' → logprob: -1.51120924949646
    4. 'k' → logprob: -10.636209487915039
    5. '                   ' → logprob: -12.136209487915039
    6. '-t' → logprob: -13.386209487915039
    7. '-j' → logprob: -13.386209487915039
    8. ' k' → logprob: -13.511209487915039
    9. '-K' → logprob: -13.636209487915039
    10. ' ' → logprob: -14.136209487915039

Token 373: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000344640837283805
    2. ' k' → logprob: -8.500344276428223
    3. '1' → logprob: -8.875344276428223
    4. '	k' → logprob: -14.000344276428223
    5. '_k' → logprob: -15.875344276428223
    6. ' ' → logprob: -16.50034523010254
    7. '-k' → logprob: -16.87534523010254
    8. '   ' → logprob: -17.00034523010254
    9. ',k' → logprob: -17.37534523010254
    10. '(k' → logprob: -17.37534523010254

Token 374: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005120023153722286
    2. ')
' → logprob: -5.380119800567627
    3. '-' → logprob: -8.380120277404785
    4. ' )' → logprob: -9.005120277404785
    5. '                   ' → logprob: -10.380120277404785
    6. '')' → logprob: -10.505120277404785
    7. '1' → logprob: -10.755120277404785
    8. ' -' → logprob: -11.005120277404785
    9. '               ' → logprob: -11.130120277404785
    10. '))' → logprob: -12.130120277404785

Token 375: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -2.4153549020411447e-05
    2. '               ' → logprob: -12.00002384185791
    3. '                    
' → logprob: -12.00002384185791
    4. '                       ' → logprob: -12.25002384185791
    5. '
' → logprob: -12.87502384185791
    6. '				' → logprob: -13.50002384185791
    7. '                    ' → logprob: -14.00002384185791
    8. 'break' → logprob: -14.37502384185791
    9. '                  ' → logprob: -14.62502384185791
    10. '           ' → logprob: -15.12502384185791

Token 376: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00011975488450843841
    2. '               ' → logprob: -9.875120162963867
    3. '                       ' → logprob: -10.500120162963867
    4. '				' → logprob: -11.375120162963867
    5. 'break' → logprob: -11.750120162963867
    6. '                    
' → logprob: -12.375120162963867
    7. '           ' → logprob: -12.750120162963867
    8. '                  ' → logprob: -13.000120162963867
    9. '```' → logprob: -13.125120162963867
    10. '                    ' → logprob: -13.250120162963867

Token 377: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.43305280804634094
    2. '                   ' → logprob: -1.4330527782440186
    3. ' break' → logprob: -2.1830527782440186
    4. '               ' → logprob: -9.183053016662598
    5. '                       ' → logprob: -10.183053016662598
    6. '	break' → logprob: -10.808053016662598
    7. '           ' → logprob: -11.683053016662598
    8. '                    ' → logprob: -11.683053016662598
    9. '                    
' → logprob: -12.933053016662598
    10. '				' → logprob: -13.058053016662598

Token 378: ' note' (ID: 7477)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.07488246262073517
    2. '                   ' → logprob: -3.3248825073242188
    3. ' break' → logprob: -3.3248825073242188
    4. '               ' → logprob: -9.449882507324219
    5. '_break' → logprob: -10.449882507324219
    6. '           ' → logprob: -10.574882507324219
    7. '                       ' → logprob: -11.199882507324219
    8. '-break' → logprob: -11.449882507324219
    9. 'br' → logprob: -11.824882507324219
    10. 'continue' → logprob: -12.199882507324219

Token 379: ' la' (ID: 557)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.011427151970565319
    2. ' ' → logprob: -4.76142692565918
    3. ' la' → logprob: -7.13642692565918
    4. '                   ' → logprob: -7.51142692565918
    5. 'la' → logprob: -8.01142692565918
    6. 'le' → logprob: -8.38642692565918
    7. 'k' → logprob: -9.01142692565918
    8. 'diff' → logprob: -9.01142692565918
    9. ' k' → logprob: -9.13642692565918
    10. ')' → logprob: -9.51142692565918

Token 380: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.00626008864492178
    2. 'diff' → logprob: -5.381259918212891
    3. 'distance' → logprob: -7.506259918212891
    4. ' position' → logprob: -7.631259918212891
    5. '9' → logprob: -8.13125991821289
    6. 'prem' → logprob: -8.75625991821289
    7. 'difference' → logprob: -9.38125991821289
    8. 'pos' → logprob: -10.00625991821289
    9. 'val' → logprob: -11.75625991821289
    10. 'place' → logprob: -12.63125991821289

Token 381: ' en' (ID: 469)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010592744685709476
    2. '				' → logprob: -5.635592937469482
    3. '                    
' → logprob: -5.885592937469482
    4. '                    ' → logprob: -7.010592937469482
    5. '               ' → logprob: -7.135592937469482
    6. '<|end|>' → logprob: -7.510592937469482
    7. '
' → logprob: -8.010592460632324
    8. '                       ' → logprob: -8.510592460632324
    9. '		           ' → logprob: -8.635592460632324
    10. ' 
' → logprob: -8.885592460632324

Token 382: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.2562450170516968
    2. 'base' → logprob: -2.3812451362609863
    3. 'com' → logprob: -3.0062451362609863
    4. 'comp' → logprob: -3.3812451362609863
    5. '1' → logprob: -4.381245136260986
    6. 'comm' → logprob: -5.006245136260986
    7. 'val' → logprob: -5.131245136260986
    8. '```' → logprob: -5.506245136260986
    9. 'bits' → logprob: -6.006245136260986
    10. 'diff' → logprob: -6.256245136260986

Token 383: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0021073133684694767
    2. 'ir' → logprob: -6.2521071434021
    3. '-' → logprob: -9.252107620239258
    4. '#' → logprob: -11.002107620239258
    5. '[' → logprob: -11.377107620239258
    6. '```' → logprob: -11.377107620239258
    7. '-ant' → logprob: -12.252107620239258
    8. 'antd' → logprob: -12.377107620239258
    9. '_' → logprob: -12.627107620239258
    10. '`' → logprob: -12.752107620239258

Token 384: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.02403903752565384
    2. 'du' → logprob: -3.7740390300750732
    3. 'from' → logprob: -7.524039268493652
    4. ' de' → logprob: -8.774039268493652
    5. ' du' → logprob: -10.399039268493652
    6. '9' → logprob: -10.774039268493652
    7. '```' → logprob: -10.774039268493652
    8. 'd' → logprob: -11.649039268493652
    9. '   ' → logprob: -12.149039268493652
    10. 'del' → logprob: -12.399039268493652

Token 385: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35722705721855164
    2. '9' → logprob: -1.232227087020874
    3. 'prem' → logprob: -5.732226848602295
    4. '8' → logprob: -6.107226848602295
    5. 'bit' → logprob: -6.982226848602295
    6. 'dro' → logprob: -6.982226848602295
    7. 'po' → logprob: -7.607226848602295
    8. 'dern' → logprob: -8.232227325439453
    9. 'plus' → logprob: -8.607227325439453
    10. 'haut' → logprob: -9.357227325439453

Token 386: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.49537867307662964
    2. '1' → logprob: -0.9953786730766296
    3. '8' → logprob: -4.495378494262695
    4. 'plus' → logprob: -6.120378494262695
    5. 'dro' → logprob: -6.370378494262695
    6. 'prem' → logprob: -6.495378494262695
    7. 'dern' → logprob: -6.870378494262695
    8. 'haut' → logprob: -6.995378494262695
    9. 'd' → logprob: -7.120378494262695
    10. 'bit' → logprob: -7.495378494262695

Token 387: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8116386532783508
    2. '-' → logprob: -1.061638593673706
    3. ' -' → logprob: -2.436638593673706
    4. '<|end|>' → logprob: -3.311638593673706
    5. '-k' → logprob: -3.686638593673706
    6. '-b' → logprob: -3.936638593673706
    7. '-bit' → logprob: -4.061638832092285
    8. '1' → logprob: -5.061638832092285
    9. 'k' → logprob: -5.436638832092285
    10. 'bit' → logprob: -6.186638832092285

Token 388: 'de' (ID: 613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09743558615446091
    2. '1' → logprob: -2.722435474395752
    3. '9' → logprob: -4.222435474395752
    4. '')' → logprob: -5.472435474395752
    5. '<|end|>' → logprob: -6.347435474395752
    6. 'k' → logprob: -6.722435474395752
    7. ' ' → logprob: -7.222435474395752
    8. ' )' → logprob: -7.847435474395752
    9. '```' → logprob: -7.847435474395752
    10. '`)' → logprob: -8.34743595123291

Token 389: ' poids' (ID: 56058)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12141040712594986
    2. '9' → logprob: -2.371410369873047
    3. ')' → logprob: -4.121410369873047
    4. '8' → logprob: -5.871410369873047
    5. '0' → logprob: -7.621410369873047
    6. 'l' → logprob: -8.371410369873047
    7. 'la' → logprob: -8.746410369873047
    8. ' droite' → logprob: -8.746410369873047
    9. ']' → logprob: -8.996410369873047
    10. '```' → logprob: -9.121410369873047

Token 390: ' fort' (ID: 8024)
  Prédit: ' fort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fort' → logprob: -0.35036587715148926
    2. 'fort' → logprob: -1.2253658771514893
    3. '9' → logprob: -6.47536563873291
    4. ' forts' → logprob: -9.22536563873291
    5. '1' → logprob: -9.47536563873291
    6. ' forte' → logprob: -9.72536563873291
    7. '```' → logprob: -10.72536563873291
    8. ' ' → logprob: -10.97536563873291
    9. 'f' → logprob: -11.22536563873291
    10. 'plus' → logprob: -11.72536563873291

Token 391: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035658854991197586
    2. ' )' → logprob: -3.410658836364746
    3. '<|end|>' → logprob: -7.035658836364746
    4. ',' → logprob: -8.285658836364746
    5. ' -' → logprob: -8.660658836364746
    6. ' ' → logprob: -9.035658836364746
    7. '...' → logprob: -9.535658836364746
    8. '-' → logprob: -9.535658836364746
    9. ' ,' → logprob: -9.785658836364746
    10. '')' → logprob: -9.910658836364746

Token 392: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.416665640543215e-05
    2. '               ' → logprob: -11.25003433227539
    3. '				' → logprob: -11.75003433227539
    4. '                       ' → logprob: -12.25003433227539
    5. '                    
' → logprob: -12.50003433227539
    6. '                    ' → logprob: -13.87503433227539
    7. '
' → logprob: -14.00003433227539
    8. '                  ' → logprob: -14.50003433227539
    9. 'break' → logprob: -14.50003433227539
    10. '           ' → logprob: -14.50003433227539

Token 393: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.007630296517163515
    2. '                   ' → logprob: -5.007630348205566
    3. ' break' → logprob: -7.007630348205566
    4. '               ' → logprob: -12.132630348205566
    5. '                       ' → logprob: -12.882630348205566
    6. '	break' → logprob: -14.257630348205566
    7. '```' → logprob: -14.257630348205566
    8. '           ' → logprob: -16.25762939453125
    9. '                    ' → logprob: -16.63262939453125
    10. '                    
' → logprob: -17.00762939453125

Token 394: '                     ' (ID: 4451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9798182845115662
    2. '           ' → logprob: -1.979818344116211
    3. 'else' → logprob: -1.979818344116211
    4. '<|end|>' → logprob: -2.729818344116211
    5. '```' → logprob: -2.729818344116211
    6. '               ' → logprob: -2.979818344116211
    7. ')' → logprob: -3.479818344116211
    8. ' else' → logprob: -3.854818344116211
    9. 'for' → logprob: -3.854818344116211
    10. 'continue' → logprob: -3.854818344116211

Token 397: ' arr' (ID: 1724)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.03866146132349968
    2. ' continue' → logprob: -3.413661479949951
    3. 'stop' → logprob: -5.788661479949951
    4. 'arr' → logprob: -6.913661479949951
    5. 'contin' → logprob: -7.788661479949951
    6. 'p' → logprob: -8.788661003112793
    7. 'continu' → logprob: -9.538661003112793
    8. 'n' → logprob: -9.913661003112793
    9. 'sort' → logprob: -10.288661003112793
    10. ' stop' → logprob: -10.538661003112793

Token 398: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.07956851273775101
    2. 'êt' → logprob: -2.57956862449646
    3. 'ive' → logprob: -8.329568862915039
    4. 'ê' → logprob: -8.579568862915039
    5. 'êter' → logprob: -8.579568862915039
    6. 'ète' → logprob: -10.579568862915039
    7. 'êts' → logprob: -11.204568862915039
    8. 'êtes' → logprob: -11.204568862915039
    9. 'ete' → logprob: -12.829568862915039
    10. 'ivée' → logprob: -13.204568862915039

Token 399: ' dès' (ID: 37926)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0024816039949655533
    2. ' la' → logprob: -6.252481460571289
    3. 'tr' → logprob: -8.877481460571289
    4. 'le' → logprob: -9.002481460571289
    5. 'prem' → logprob: -9.127481460571289
    6. 'qu' → logprob: -9.502481460571289
    7. 'l' → logprob: -10.752481460571289
    8. 'c' → logprob: -11.127481460571289
    9. 'diff' → logprob: -11.252481460571289
    10. 'une' → logprob: -11.752481460571289

Token 401: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.006155592855066061
    2. 'diff' → logprob: -5.131155490875244
    3. 'difference' → logprob: -9.131155967712402
    4. 'first' → logprob: -10.131155967712402
    5. ' première' → logprob: -10.131155967712402
    6. 'dé' → logprob: -11.131155967712402
    7. '1' → logprob: -11.756155967712402
    8. 'tr' → logprob: -12.131155967712402
    9. 'position' → logprob: -13.131155967712402
    10. ' différence' → logprob: -13.256155967712402

Token 402: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.059002120047807693
    2. ' différence' → logprob: -3.559002161026001
    3. 'difference' → logprob: -3.559002161026001
    4. ' difference' → logprob: -8.309001922607422
    5. 'dif' → logprob: -10.559001922607422
    6. ' différente' → logprob: -10.809001922607422
    7. 'position' → logprob: -10.934001922607422
    8. '   ' → logprob: -11.934001922607422
    9. ' diff' → logprob: -12.059001922607422
    10. 'occur' → logprob: -12.309001922607422

Token 403: ' trouv' (ID: 40254)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.005269803572446108
    2. 'é' → logprob: -5.255270004272461
    3. 'e' → logprob: -11.005270004272461
    4. 'ee' → logprob: -11.255270004272461
    5. 'É' → logprob: -13.130270004272461
    6. 'è' → logprob: -13.255270004272461
    7. '```' → logprob: -15.130270004272461
    8. '}' → logprob: -15.255270004272461
    9. 'ie' → logprob: -15.630270004272461
    10. '   ' → logprob: -15.630270004272461

Token 405: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01473806332796812
    2. '   ' → logprob: -4.389738082885742
    3. 'print' → logprob: -6.389738082885742
    4. '<|end|>' → logprob: -7.764738082885742
    5. 'for' → logprob: -10.389738082885742
    6. '```' → logprob: -10.639738082885742
    7. '        
' → logprob: -10.889738082885742
    8. 'return' → logprob: -12.014738082885742
    9. '<|end|>' → logprob: -12.264738082885742
    10. ')' → logprob: -12.389738082885742

Token 408: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006052635610103607
    2. ' print' → logprob: -5.506052494049072
    3. '       ' → logprob: -6.256052494049072
    4. '   ' → logprob: -10.63105297088623
    5. 'if' → logprob: -11.13105297088623
    6. 'for' → logprob: -12.13105297088623
    7. '```' → logprob: -12.13105297088623
    8. ' if' → logprob: -13.13105297088623
    9. ' for' → logprob: -14.13105297088623
    10. 'diff' → logprob: -15.13105297088623

Token 409: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03846922144293785
    2. ' print' → logprob: -3.7884693145751953
    3. '   ' → logprob: -5.413469314575195
    4. 'for' → logprob: -5.913469314575195
    5. '       ' → logprob: -6.413469314575195
    6. 'from' → logprob: -7.038469314575195
    7. 'if' → logprob: -7.163469314575195
    8. '#' → logprob: -7.413469314575195
    9. 'import' → logprob: -7.788469314575195
    10. '.print' → logprob: -8.038469314575195

Token 410: ' les' (ID: 1341)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12004200369119644
    2. ' f' → logprob: -2.995042085647583
    3. 'len' → logprob: -4.245041847229004
    4. 'f' → logprob: -4.370041847229004
    5. 'dif' → logprob: -4.370041847229004
    6. ' len' → logprob: -4.620041847229004
    7. ' i' → logprob: -5.745041847229004
    8. ' les' → logprob: -6.620041847229004
    9. '(f' → logprob: -6.620041847229004
    10. '(len' → logprob: -6.745041847229004

Token 411: ' positions' (ID: 15897)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.16236178576946259
    2. 'positions' → logprob: -3.1623618602752686
    3. 'len' → logprob: -3.5373618602752686
    4. 'diff' → logprob: -3.7873618602752686
    5. 'i' → logprob: -4.4123616218566895
    6. 'd' → logprob: -4.4123616218566895
    7. '9' → logprob: -4.9123616218566895
    8. '   ' → logprob: -5.6623616218566895
    9. 'difference' → logprob: -5.6623616218566895
    10. ' differences' → logprob: -5.9123616218566895

Token 412: ' sépar' (ID: 97160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.901345038088039e-05
    2. ' print' → logprob: -9.500099182128906
    3. 'print' → logprob: -11.000099182128906
    4. '        
' → logprob: -13.375099182128906
    5. ',' → logprob: -13.625099182128906
    6. '```' → logprob: -14.125099182128906
    7. '   ' → logprob: -14.500099182128906
    8. ':' → logprob: -14.625099182128906
    9. ' :' → logprob: -14.750099182128906
    10. '           ' → logprob: -14.750099182128906

Token 413: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0031963700894266367
    2. 'é' → logprob: -6.0031962394714355
    3. 'ée' → logprob: -8.378196716308594
    4. 'par' → logprob: -8.378196716308594
    5. ' par' → logprob: -9.253196716308594
    6. 'és' → logprob: -9.503196716308594
    7. 'e' → logprob: -10.503196716308594
    8. 'er' → logprob: -11.503196716308594
    9. 'nées' → logprob: -11.503196716308594
    10. 'es' → logprob: -11.878196716308594

Token 414: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2076493352651596
    2. 'par' → logprob: -1.7076493501663208
    3. ''' → logprob: -5.832649230957031
    4. 'by' → logprob: -6.832649230957031
    5. '"' → logprob: -7.082649230957031
    6. '('' → logprob: -7.582649230957031
    7. '   ' → logprob: -8.082649230957031
    8. ' by' → logprob: -9.457649230957031
    9. '(par' → logprob: -9.457649230957031
    10. 'join' → logprob: -9.707649230957031

Token 415: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11785613745450974
    2. '"' → logprob: -2.242856025695801
    3. ''un' → logprob: -6.492856025695801
    4. ' des' → logprob: -7.242856025695801
    5. 'des' → logprob: -7.492856025695801
    6. '',' → logprob: -7.867856025695801
    7. ''espace' → logprob: -7.867856025695801
    8. 'es' → logprob: -8.3678560256958
    9. ''une' → logprob: -8.4928560256958
    10. ''esp' → logprob: -8.6178560256958

Token 416: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.3335273265838623
    2. ''esp' → logprob: -1.5835273265838623
    3. 'es' → logprob: -3.5835273265838623
    4. ''' → logprob: -3.9585273265838623
    5. '"' → logprob: -4.333527565002441
    6. 'spaces' → logprob: -5.333527565002441
    7. ' espaces' → logprob: -5.458527565002441
    8. ''espace' → logprob: -5.833527565002441
    9. '',' → logprob: -6.458527565002441
    10. 'vir' → logprob: -7.083527565002441

Token 417: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009631502907723188
    2. 'print' → logprob: -7.12596321105957
    3. ' print' → logprob: -9.50096321105957
    4. ',' → logprob: -9.87596321105957
    5. '        
' → logprob: -11.75096321105957
    6. '           ' → logprob: -12.00096321105957
    7. '
' → logprob: -12.00096321105957
    8. '	' → logprob: -12.87596321105957
    9. ':' → logprob: -13.37596321105957
    10. '   ' → logprob: -13.62596321105957

Token 418: 'cha' (ID: 3836)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15961448848247528
    2. ''' → logprob: -2.1596145629882812
    3. '       ' → logprob: -4.284614562988281
    4. '"' → logprob: -4.784614562988281
    5. ')' → logprob: -5.659614562988281
    6. 'end' → logprob: -5.784614562988281
    7. ' print' → logprob: -6.409614562988281
    8. ' end' → logprob: -8.159614562988281
    9. 'join' → logprob: -8.284614562988281
    10. ' '' → logprob: -8.284614562988281

Token 419: 'îne' (ID: 55188)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.6910759806632996
    2. 'îne' → logprob: -1.3160760402679443
    3. '   ' → logprob: -1.8160760402679443
    4. 'r' → logprob: -3.1910760402679443
    5. 'ne' → logprob: -4.316075801849365
    6. 'aine' → logprob: -5.316075801849365
    7. 'e' → logprob: -6.316075801849365
    8. '    ' → logprob: -6.816075801849365
    9. '  ' → logprob: -6.816075801849365
    10. 'ïne' → logprob: -6.941075801849365

Token 420: ' vide' (ID: 21835)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.5491917133331299
    2. '.join' → logprob: -0.9241917133331299
    3. '=' → logprob: -5.049191474914551
    4. '.' → logprob: -5.174191474914551
    5. ' join' → logprob: -5.174191474914551
    6. ' =' → logprob: -5.799191474914551
    7. ')' → logprob: -6.799191474914551
    8. '   ' → logprob: -6.799191474914551
    9. ',' → logprob: -7.174191474914551
    10. 'print' → logprob: -7.674191474914551

Token 421: ' si' (ID: 1784)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.571968138217926
    2. ')' → logprob: -1.0719680786132812
    3. ' if' → logprob: -3.1969680786132812
    4. 'join' → logprob: -3.5719680786132812
    5. 'if' → logprob: -4.446968078613281
    6. '.' → logprob: -5.446968078613281
    7. ',' → logprob: -5.821968078613281
    8. '       ' → logprob: -6.321968078613281
    9. 'print' → logprob: -7.071968078613281
    10. ' join' → logprob: -7.446968078613281

Token 422: ' aucune' (ID: 51173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11892050504684448
    2. 'len' → logprob: -2.4939205646514893
    3. ' not' → logprob: -3.6189205646514893
    4. 'dif' → logprob: -6.49392032623291
    5. ' len' → logprob: -7.24392032623291
    6. 'pas' → logprob: -8.24392032623291
    7. 'non' → logprob: -8.99392032623291
    8. '       ' → logprob: -10.86892032623291
    9. 'diff' → logprob: -10.86892032623291
    10. '!' → logprob: -10.86892032623291

Token 423: ')
' (ID: 446)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.12653176486492157
    2. ' differences' → logprob: -2.3765318393707275
    3. 'difference' → logprob: -4.126531600952148
    4. ')' → logprob: -6.001531600952148
    5. 'diff' → logprob: -6.126531600952148
    6. 'positions' → logprob: -6.251531600952148
    7. ' différences' → logprob: -7.251531600952148
    8. ' difference' → logprob: -7.376531600952148
    9. ' positions' → logprob: -7.501531600952148
    10. 'd' → logprob: -7.626531600952148

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004166372120380402
    2. 'print' → logprob: -5.504166603088379
    3. ' print' → logprob: -9.504166603088379
    4. '   ' → logprob: -12.504166603088379
    5. '        
' → logprob: -12.629166603088379
    6. '```' → logprob: -12.629166603088379
    7. '
' → logprob: -13.129166603088379
    8. '           ' → logprob: -14.629166603088379
    9. '	' → logprob: -16.004165649414062
    10. '\' → logprob: -16.379165649414062

Token 425: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2157122939825058
    2. ' print' → logprob: -2.215712308883667
    3. '       ' → logprob: -2.465712308883667
    4. '```' → logprob: -12.215712547302246
    5. '   ' → logprob: -13.590712547302246
    6. 'if' → logprob: -13.715712547302246
    7. ' if' → logprob: -14.590712547302246
    8. '	print' → logprob: -15.090712547302246
    9. '           ' → logprob: -15.340712547302246
    10. '        
' → logprob: -16.09071159362793

Token 426: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.008532896637916565
    2. '("' → logprob: -5.008533000946045
    3. '(*' → logprob: -6.383533000946045
    4. '(' → logprob: -9.133532524108887
    5. '()' → logprob: -11.508532524108887
    6. ''' → logprob: -12.383532524108887
    7. '("")' → logprob: -13.258532524108887
    8. '('',' → logprob: -14.008532524108887
    9. '"' → logprob: -14.258532524108887
    10. '(""' → logprob: -14.508532524108887

Token 427: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008951586671173573
    2. '{}' → logprob: -5.508951663970947
    3. '')' → logprob: -5.633951663970947
    4. ''.' → logprob: -7.883951663970947
    5. '{}'.' → logprob: -8.133951187133789
    6. ' '.' → logprob: -8.508951187133789
    7. '"' → logprob: -9.133951187133789
    8. ''end' → logprob: -9.383951187133789
    9. ' '' → logprob: -9.633951187133789
    10. '{' → logprob: -10.133951187133789

Token 428: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.1637164789135568e-05
    2. ' join' → logprob: -12.125011444091797
    3. ''.' → logprob: -12.500011444091797
    4. '.join' → logprob: -13.125011444091797
    5. ')' → logprob: -15.875011444091797
    6. ''' → logprob: -16.375011444091797
    7. ' ' → logprob: -16.750011444091797
    8. '```' → logprob: -16.875011444091797
    9. '''.' → logprob: -17.750011444091797
    10. 'jo' → logprob: -18.000011444091797

Token 429: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.38687387108802795
    2. '(str' → logprob: -1.1368738412857056
    3. 'map' → logprob: -12.886874198913574
    4. 'str' → logprob: -15.136874198913574
    5. '(' → logprob: -16.511873245239258
    6. '([' → logprob: -17.261873245239258
    7. '[str' → logprob: -17.386873245239258
    8. ' map' → logprob: -17.636873245239258
    9. '(d' → logprob: -18.136873245239258
    10. '.map' → logprob: -19.136873245239258

Token 430: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.006716674659401178
    2. 'str' → logprob: -5.006716728210449
    3. ' str' → logprob: -14.50671672821045
    4. '(' → logprob: -14.75671672821045
    5. '[str' → logprob: -15.38171672821045
    6. '```' → logprob: -16.006715774536133
    7. '=str' → logprob: -16.381715774536133
    8. '   ' → logprob: -17.756715774536133
    9. '(int' → logprob: -18.006715774536133
    10. '	str' → logprob: -18.256715774536133

Token 431: ',' (ID: 11)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0024200105108320713
    2. ',d' → logprob: -6.502419948577881
    3. ',' → logprob: -7.002419948577881
    4. ' (' → logprob: -12.252420425415039
    5. 'd' → logprob: -13.502420425415039
    6. '(' → logprob: -14.252420425415039
    7. ' ,' → logprob: -14.502420425415039
    8. '   ' → logprob: -16.00242042541504
    9. ',(' → logprob: -17.50242042541504
    10. 's' → logprob: -17.87742042541504

Token 432: ' differences' (ID: 19504)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.0011783202644437551
    2. ' differences' → logprob: -6.75117826461792
    3. 'difference' → logprob: -12.626178741455078
    4. 'd' → logprob: -12.876178741455078
    5. 'diff' → logprob: -13.876178741455078
    6. '(d' → logprob: -14.251178741455078
    7. '   ' → logprob: -15.126178741455078
    8. 'Dif' → logprob: -16.001178741455078
    9. ' ' → logprob: -16.376178741455078
    10. 'sorted' → logprob: -17.376178741455078

Token 433: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.005235767923295498
    2. '))' → logprob: -5.25523567199707
    3. '))))' → logprob: -13.63023567199707
    4. ')))
' → logprob: -14.75523567199707
    5. ')' → logprob: -15.50523567199707
    6. '   ' → logprob: -16.50523567199707
    7. '')))' → logprob: -17.13023567199707
    8. ')));' → logprob: -17.25523567199707
    9. '())))' → logprob: -17.25523567199707
    10. ' ' → logprob: -17.50523567199707

Token 434: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.26769253611564636
    2. 'main' → logprob: -1.5176925659179688
    3. ' example' → logprob: -5.517692565917969
    4. 'example' → logprob: -5.767692565917969
    5. ' test' → logprob: -6.517692565917969
    6. ' run' → logprob: -6.642692565917969
    7. ' process' → logprob: -7.017692565917969
    8. ' calculate' → logprob: -7.267692565917969
    9. ' analyze' → logprob: -7.642692565917969
    10. 'process' → logprob: -7.767692565917969

Token 436: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002366753324167803
    2. '()' → logprob: -9.625236511230469
    3. '(' → logprob: -9.750236511230469
    4. ' ():' → logprob: -9.875236511230469
    5. '()>' → logprob: -10.750236511230469
    6. '():
' → logprob: -11.125236511230469
    7. '_' → logprob: -11.500236511230469
    8. 'def' → logprob: -12.125236511230469
    9. ':' → logprob: -13.375236511230469
    10. '()">' → logprob: -13.375236511230469

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5515926480293274
    2. '(n' → logprob: -1.8015925884246826
    3. ' n' → logprob: -1.9265925884246826
    4. 'n' → logprob: -2.3015925884246826
    5. ' for' → logprob: -4.676592826843262
    6. '	n' → logprob: -6.176592826843262
    7. 'def' → logprob: -7.051592826843262
    8. 'for' → logprob: -8.051592826843262
    9. '```' → logprob: -8.301592826843262
    10. '>' → logprob: -10.176592826843262

Token 438: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0073703378438949585
    2. ' n' → logprob: -5.132370471954346
    3. '   ' → logprob: -6.632370471954346
    4. 'for' → logprob: -9.382369995117188
    5. 'import' → logprob: -10.882369995117188
    6. ' for' → logprob: -11.257369995117188
    7. 'if' → logprob: -13.382369995117188
    8. 'try' → logprob: -13.507369995117188
    9. '	n' → logprob: -13.757369995117188
    10. '```' → logprob: -13.757369995117188

Token 439: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2870404124259949
    2. '   ' → logprob: -1.9120404720306396
    3. ' n' → logprob: -2.2870404720306396
    4. ' for' → logprob: -9.412040710449219
    5. 'for' → logprob: -10.287040710449219
    6. 'import' → logprob: -11.162040710449219
    7. '#' → logprob: -11.412040710449219
    8. '	n' → logprob: -11.412040710449219
    9. ' ' → logprob: -12.662040710449219
    10. '"""
' → logprob: -12.787040710449219

Token 440: ' Fonction' (ID: 189149)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10753080248832703
    2. ' n' → logprob: -2.7325308322906494
    3. '   ' → logprob: -4.48253059387207
    4. 'for' → logprob: -4.73253059387207
    5. 'Pour' → logprob: -5.73253059387207
    6. 'Dem' → logprob: -5.98253059387207
    7. 'Calcul' → logprob: -5.98253059387207
    8. '#' → logprob: -6.10753059387207
    9. 'App' → logprob: -6.85753059387207
    10. ' for' → logprob: -6.85753059387207

Token 441: ' principale' (ID: 68926)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7321068644523621
    2. ' principale' → logprob: -0.8571068644523621
    3. ' de' → logprob: -2.982106924057007
    4. 'de' → logprob: -4.857106685638428
    5. ' principal' → logprob: -4.857106685638428
    6. 'main' → logprob: -5.357106685638428
    7. ' test' → logprob: -5.357106685638428
    8. 'def' → logprob: -5.482106685638428
    9. ' ' → logprob: -5.482106685638428
    10. '   ' → logprob: -6.107106685638428

Token 442: '.' (ID: 13)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.43930163979530334
    2. '():' → logprob: -1.064301609992981
    3. ':' → logprob: -5.189301490783691
    4. '()' → logprob: -6.189301490783691
    5. ':
' → logprob: -6.439301490783691
    6. '   ' → logprob: -7.189301490783691
    7. 'def' → logprob: -7.939301490783691
    8. '):
' → logprob: -9.939301490783691
    9. '```' → logprob: -10.064301490783691
    10. '
' → logprob: -10.439301490783691

Token 443: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028622347861528397
    2. 'n' → logprob: -3.9036223888397217
    3. '
' → logprob: -5.778622150421143
    4. ' n' → logprob: -5.903622150421143
    5. '    
' → logprob: -6.653622150421143
    6. 'def' → logprob: -7.403622150421143
    7. '```' → logprob: -9.5286226272583
    8. '(n' → logprob: -9.9036226272583
    9. ' 
' → logprob: -9.9036226272583
    10. '  
' → logprob: -10.6536226272583

Token 444: ' un' (ID: 537)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14207713305950165
    2. '   ' → logprob: -2.3920772075653076
    3. 'n' → logprob: -3.7670772075653076
    4. 'la' → logprob: -5.2670769691467285
    5. ' la' → logprob: -5.6420769691467285
    6. 'int' → logprob: -6.3920769691467285
    7. 'import' → logprob: -6.6420769691467285
    8. ' une' → logprob: -7.0170769691467285
    9. ' n' → logprob: -7.2670769691467285
    10. 'une' → logprob: -7.2670769691467285

Token 445: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0440218448638916
    2. 'ent' → logprob: -1.1690218448638916
    3. 'nombre' → logprob: -1.7940218448638916
    4. ' nombre' → logprob: -2.2940218448638916
    5. ' entier' → logprob: -3.9190218448638916
    6. 'int' → logprob: -4.1690216064453125
    7. ' n' → logprob: -4.1690216064453125
    8. 'e' → logprob: -4.9190216064453125
    9. '   ' → logprob: -5.4190216064453125
    10. 'number' → logprob: -6.7940216064453125

Token 446: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23107144236564636
    2. ' n' → logprob: -2.2310714721679688
    3. '()' → logprob: -2.6060714721679688
    4. '(n' → logprob: -4.356071472167969
    5. '   ' → logprob: -4.981071472167969
    6. ',' → logprob: -7.106071472167969
    7. 'import' → logprob: -7.856071472167969
    8. 'input' → logprob: -7.981071472167969
    9. '.' → logprob: -8.106071472167969
    10. '	n' → logprob: -8.106071472167969

Token 447: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7025437355041504
    2. 'l' → logprob: -1.5775437355041504
    3. 'input' → logprob: -1.5775437355041504
    4. ' l' → logprob: -2.4525437355041504
    5. '   ' → logprob: -5.95254373550415
    6. 'entrée' → logprob: -6.57754373550415
    7. 'la' → logprob: -7.57754373550415
    8. ' la' → logprob: -8.202543258666992
    9. '=input' → logprob: -8.327543258666992
    10. '```' → logprob: -9.077543258666992

Token 448: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.018452037125825882
    2. 'input' → logprob: -4.393452167510986
    3. ''' → logprob: -5.518452167510986
    4. 'entrée' → logprob: -7.018452167510986
    5. 'a' → logprob: -7.768452167510986
    6. 'e' → logprob: -8.018451690673828
    7. 'stdin' → logprob: -9.518451690673828
    8. ''utilisateur' → logprob: -9.643451690673828
    9. 'es' → logprob: -10.393451690673828
    10. '’entrée' → logprob: -10.643451690673828

Token 449: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6661786437034607
    2. ' standard' → logprob: -1.2911787033081055
    3. '()' → logprob: -1.9161787033081055
    4. 'standard' → logprob: -3.1661787033081055
    5. '   ' → logprob: -4.7911787033081055
    6. '(),' → logprob: -5.2911787033081055
    7. ' utilisateur' → logprob: -5.7911787033081055
    8. '.' → logprob: -6.1661787033081055
    9. ' ,' → logprob: -7.4161787033081055
    10. 'n' → logprob: -7.6661787033081055

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02373780682682991
    2. '   ' → logprob: -4.023737907409668
    3. '()' → logprob: -6.148737907409668
    4. ' et' → logprob: -6.523737907409668
    5. '.' → logprob: -7.273737907409668
    6. ' ,' → logprob: -7.523737907409668
    7. '(),' → logprob: -7.648737907409668
    8. 'import' → logprob: -10.023737907409668
    9. ',
' → logprob: -10.023737907409668
    10. ' ' → logprob: -10.648737907409668

Token 451: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46200239658355713
    2. ' n' → logprob: -1.0870023965835571
    3. 'n' → logprob: -4.087002277374268
    4. '<|end|>' → logprob: -4.712002277374268
    5. ' puis' → logprob: -6.337002277374268
    6. '    
' → logprob: -7.212002277374268
    7. ' and' → logprob: -7.337002277374268
    8. '    ' → logprob: -7.462002277374268
    9. ' et' → logprob: -7.587002277374268
    10. 'def' → logprob: -8.212002754211426

Token 452: '
' (ID: 198)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5655314922332764
    2. 'n' → logprob: -1.0655314922332764
    3. '   ' → logprob: -2.4405314922332764
    4. '	n' → logprob: -8.815531730651855
    5. '    
' → logprob: -9.565531730651855
    6. '
' → logprob: -10.815531730651855
    7. '```' → logprob: -11.565531730651855
    8. '   ' → logprob: -12.065531730651855
    9. 'contin' → logprob: -12.440531730651855
    10. 'import' → logprob: -12.565531730651855

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0755532905459404
    2. ' appelle' → logprob: -2.8255531787872314
    3. ' lance' → logprob: -5.0755534172058105
    4. ' n' → logprob: -5.7005534172058105
    5. 'n' → logprob: -5.9505534172058105
    6. ' appel' → logprob: -8.700552940368652
    7. '   ' → logprob: -8.825552940368652
    8. ' continue' → logprob: -9.075552940368652
    9. 'continue' → logprob: -9.450552940368652
    10. 'appel' → logprob: -9.575552940368652

Token 454: ' affiche' (ID: 127479)
  Prédit: ' appelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' appelle' → logprob: -0.26575228571891785
    2. '   ' → logprob: -2.1407523155212402
    3. 'appel' → logprob: -3.3907523155212402
    4. 'call' → logprob: -4.39075231552124
    5. ' lance' → logprob: -4.51575231552124
    6. 'compute' → logprob: -4.64075231552124
    7. ' appel' → logprob: -4.76575231552124
    8. ' call' → logprob: -5.01575231552124
    9. 'execute' → logprob: -5.14075231552124
    10. 'l' → logprob: -5.26575231552124

Token 455: ' les' (ID: 1341)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5220619440078735
    2. '()' → logprob: -1.8970619440078735
    3. '   ' → logprob: -2.647061824798584
    4. '(' → logprob: -2.647061824798584
    5. 'n' → logprob: -3.647061824798584
    6. 'def' → logprob: -3.897061824798584
    7. 'import' → logprob: -4.272061824798584
    8. ' un' → logprob: -4.897061824798584
    9. '#' → logprob: -5.147061824798584
    10. '```' → logprob: -5.522061824798584

Token 456: ' résultats' (ID: 48985)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.21507449448108673
    2. 'diff' → logprob: -2.4650745391845703
    3. 'compute' → logprob: -2.9650745391845703
    4. ' résultats' → logprob: -3.7150745391845703
    5. 'rés' → logprob: -4.46507453918457
    6. 'result' → logprob: -5.59007453918457
    7. 'positions' → logprob: -5.59007453918457
    8. 'results' → logprob: -6.09007453918457
    9. 'd' → logprob: -6.46507453918457
    10. '_' → logprob: -6.84007453918457

Token 457: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03503160551190376
    2. '.' → logprob: -3.53503155708313
    3. ' obten' → logprob: -6.660031795501709
    4. ' de' → logprob: -7.160031795501709
    5. 'import' → logprob: -7.910031795501709
    6. ' pour' → logprob: -7.910031795501709
    7. ' du' → logprob: -8.03503131866455
    8. ' ' → logprob: -8.16003131866455
    9. ' des' → logprob: -8.28503131866455
    10. ',' → logprob: -8.28503131866455

Token 458: ' positions' (ID: 15897)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.07161858677864075
    2. ' compute' → logprob: -2.6966185569763184
    3. 'n' → logprob: -7.571618556976318
    4. 'dif' → logprob: -7.571618556976318
    5. 'calcul' → logprob: -8.321619033813477
    6. 'calculate' → logprob: -8.946619033813477
    7. 'diff' → logprob: -8.946619033813477
    8. ' n' → logprob: -9.821619033813477
    9. '
' → logprob: -10.946619033813477
    10. 'comput' → logprob: -11.196619033813477

Token 459: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.42604708671569824
    2. ' des' → logprob: -1.3010470867156982
    3. 'de' → logprob: -2.6760470867156982
    4. 'des' → logprob: -5.551047325134277
    5. 'diff' → logprob: -6.926047325134277
    6. ' où' → logprob: -7.926047325134277
    7. '   ' → logprob: -8.176047325134277
    8. 'où' → logprob: -9.301047325134277
    9. ' ' → logprob: -10.176047325134277
    10. 'd' → logprob: -10.801047325134277

Token 460: ' premières' (ID: 73562)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03435617312788963
    2. 'la' → logprob: -4.159356117248535
    3. 'prem' → logprob: -5.159356117248535
    4. 'dif' → logprob: -5.659356117248535
    5. ' différence' → logprob: -5.784356117248535
    6. ' première' → logprob: -6.159356117248535
    7. ' la' → logprob: -6.409356117248535
    8. 'difference' → logprob: -6.659356117248535
    9. ' différences' → logprob: -8.034356117248535
    10. ' ' → logprob: -8.784356117248535

Token 461: ' différences' (ID: 175718)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1346788853406906
    2. ' différence' → logprob: -2.759678840637207
    3. ' différences' → logprob: -3.384678840637207
    4. 'dif' → logprob: -3.634678840637207
    5. ' diff' → logprob: -7.009678840637207
    6. 'difference' → logprob: -7.384678840637207
    7. ' difference' → logprob: -8.259678840637207
    8. ' differences' → logprob: -8.259678840637207
    9. ' différ' → logprob: -8.384678840637207
    10. '_diff' → logprob: -9.884678840637207

Token 462: ' bin' (ID: 6958)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.1558784246444702
    2. ' entre' → logprob: -1.7808784246444702
    3. 'b' → logprob: -2.4058785438537598
    4. '   ' → logprob: -2.5308785438537598
    5. ' bin' → logprob: -2.5308785438537598
    6. ' binary' → logprob: -2.6558785438537598
    7. ' trouv' → logprob: -3.1558785438537598
    8. ' pour' → logprob: -3.2808785438537598
    9. ' détect' → logprob: -3.2808785438537598
    10. ' sur' → logprob: -3.6558785438537598

Token 463: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.006988984532654285
    2. 'aire' → logprob: -5.006989002227783
    3. 'air' → logprob: -9.381988525390625
    4. 'a' → logprob: -9.506988525390625
    5. '```' → logprob: -10.131988525390625
    6. '#' → logprob: -10.506988525390625
    7. '   ' → logprob: -11.506988525390625
    8. 'airs' → logprob: -12.256988525390625
    9. 'def' → logprob: -12.631988525390625
    10. '"""' → logprob: -13.256988525390625

Token 464: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3308623731136322
    2. ' entre' → logprob: -1.4558624029159546
    3. ' pour' → logprob: -3.705862283706665
    4. 'entre' → logprob: -4.955862522125244
    5. 'pour' → logprob: -5.330862522125244
    6. '.' → logprob: -5.705862522125244
    7. ' ' → logprob: -5.830862522125244
    8. ' des' → logprob: -6.455862522125244
    9. ' sur' → logprob: -7.580862522125244
    10. ',' → logprob: -8.080862045288086

Token 465: ' chaque' (ID: 21194)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2746935486793518
    2. 'n' → logprob: -1.649693489074707
    3. 'int' → logprob: -3.524693489074707
    4. ' int' → logprob: -4.149693489074707
    5. ' l' → logprob: -6.774693489074707
    6. 'l' → logprob: -7.274693489074707
    7. '   ' → logprob: -8.649693489074707
    8. ' ' → logprob: -8.774693489074707
    9. ' la' → logprob: -9.149693489074707
    10. ' un' → logprob: -9.274693489074707

Token 466: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1960674673318863
    2. ' i' → logprob: -1.946067452430725
    3. 'n' → logprob: -4.1960673332214355
    4. 'nombre' → logprob: -5.0710673332214355
    5. ' n' → logprob: -5.1960673332214355
    6. ' nombre' → logprob: -5.5710673332214355
    7. '   ' → logprob: -5.6960673332214355
    8. 'val' → logprob: -7.5710673332214355
    9. ' ' → logprob: -8.446067810058594
    10. '```' → logprob: -9.196067810058594

Token 467: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0827050730586052
    2. '.' → logprob: -3.457705020904541
    3. ' en' → logprob: -4.457705020904541
    4. ' n' → logprob: -4.582705020904541
    5. ' entre' → logprob: -4.832705020904541
    6. 'import' → logprob: -5.832705020904541
    7. '(n' → logprob: -6.207705020904541
    8. 'n' → logprob: -6.457705020904541
    9. ' dans' → logprob: -6.457705020904541
    10. ',' → logprob: -6.582705020904541

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007266097818501294
    2. '
' → logprob: -7.625726699829102
    3. 'n' → logprob: -8.750726699829102
    4. '```' → logprob: -10.500726699829102
    5. '    
' → logprob: -10.750726699829102
    6. 'input' → logprob: -11.875726699829102
    7. '`' → logprob: -12.125726699829102
    8. ')' → logprob: -12.125726699829102
    9. 'import' → logprob: -12.250726699829102
    10. 'def' → logprob: -13.250726699829102

Token 469: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021559724118560553
    2. '
' → logprob: -7.127155780792236
    3. 'n' → logprob: -7.752155780792236
    4. '```' → logprob: -8.377156257629395
    5. 'input' → logprob: -8.502156257629395
    6. ')' → logprob: -8.502156257629395
    7. 'import' → logprob: -9.377156257629395
    8. '    
' → logprob: -10.127156257629395
    9. '"""' → logprob: -10.752156257629395
    10. '):
' → logprob: -11.002156257629395

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03203186020255089
    2. 'n' → logprob: -3.532031774520874
    3. ' n' → logprob: -6.157032012939453
    4. 'import' → logprob: -9.407032012939453
    5. '	n' → logprob: -9.657032012939453
    6. '```' → logprob: -11.907032012939453
    7. ' import' → logprob: -12.657032012939453
    8. '    
' → logprob: -13.407032012939453
    9. 'try' → logprob: -14.032032012939453
    10. '   ' → logprob: -14.407032012939453

Token 471: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.005597053095698357
    2. ' n' → logprob: -5.505597114562988
    3. 'import' → logprob: -7.005597114562988
    4. '   ' → logprob: -7.505597114562988
    5. 'try' → logprob: -9.755597114562988
    6. ' import' → logprob: -13.255597114562988
    7. '```' → logprob: -14.505597114562988
    8. ' try' → logprob: -14.880597114562988
    9. '	n' → logprob: -16.380596160888672
    10. ' ' → logprob: -18.380596160888672

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132811486721039
    2. '=' → logprob: -1.3132811784744263
    3. '=int' → logprob: -10.938281059265137
    4. '=input' → logprob: -13.813281059265137
    5. ' ' → logprob: -16.063282012939453
    6. '	' → logprob: -16.063282012939453
    7. 'import' → logprob: -16.188282012939453
    8. 'int' → logprob: -16.188282012939453
    9. ',' → logprob: -16.813282012939453
    10. 'input' → logprob: -17.188282012939453

Token 473: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0206720617134124e-05
    2. ' int' → logprob: -11.50001049041748
    3. '=int' → logprob: -23.750009536743164
    4. '[int' → logprob: -23.875009536743164
    5. 'input' → logprob: -24.125009536743164
    6. '(int' → logprob: -24.375009536743164
    7. '	int' → logprob: -24.500009536743164
    8. '   ' → logprob: -24.625009536743164
    9. '<int' → logprob: -25.625009536743164
    10. ' ' → logprob: -26.500009536743164

Token 474: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000452241423772648
    2. '(' → logprob: -7.750452041625977
    3. 'input' → logprob: -10.750452041625977
    4. ' input' → logprob: -17.500452041625977
    5. ' (' → logprob: -17.875452041625977
    6. '()' → logprob: -17.875452041625977
    7. '=input' → logprob: -18.500452041625977
    8. '(
' → logprob: -20.125452041625977
    9. '	input' → logprob: -20.500452041625977
    10. '<input' → logprob: -20.625452041625977

Token 475: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005810309085063636
    2. '()' → logprob: -7.50058126449585
    3. '().' → logprob: -10.875580787658691
    4. '())
' → logprob: -12.375580787658691
    5. ')' → logprob: -13.125580787658691
    6. '(' → logprob: -13.375580787658691
    7. ' ())' → logprob: -13.750580787658691
    8. '())

' → logprob: -16.625581741333008
    9. '()
' → logprob: -17.000581741333008
    10. '();)' → logprob: -17.125581741333008

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008865218609571457
    2. 'compute' → logprob: -4.7588653564453125
    3. '
' → logprob: -8.508865356445312
    4. ' compute' → logprob: -10.508865356445312
    5. '    
' → logprob: -11.258865356445312
    6. 'for' → logprob: -13.008865356445312
    7. '```' → logprob: -13.008865356445312
    8. '(com' → logprob: -13.258865356445312
    9. '
' → logprob: -14.383865356445312
    10. '   ' → logprob: -14.758865356445312

Token 477: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.00026622318546287715
    2. '   ' → logprob: -8.250266075134277
    3. ' compute' → logprob: -12.250266075134277
    4. '```' → logprob: -16.500267028808594
    5. 'for' → logprob: -17.500267028808594
    6. '.compute' → logprob: -19.250267028808594
    7. '_compute' → logprob: -20.625267028808594
    8. 'calculate' → logprob: -20.875267028808594
    9. 'computer' → logprob: -21.000267028808594
    10. '``' → logprob: -21.250267028808594

Token 478: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -7.107425062713446e-06
    2. '_diff' → logprob: -12.500006675720215
    3. '_' → logprob: -13.250006675720215
    4. '_difference' → logprob: -13.750006675720215
    5. 'dif' → logprob: -15.750006675720215
    6. 'd' → logprob: -16.00000762939453
    7. '_dist' → logprob: -16.00000762939453
    8. '\' → logprob: -17.75000762939453
    9. '_des' → logprob: -18.25000762939453
    10. ' _' → logprob: -18.37500762939453

Token 479: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002490641549229622
    2. 'dif' → logprob: -6.002490520477295
    3. 'iffer' → logprob: -11.252490997314453
    4. 'is' → logprob: -14.502490997314453
    5. 'Dif' → logprob: -15.127490997314453
    6. 'iff' → logprob: -15.252490997314453
    7. 'for' → logprob: -15.502490997314453
    8. ' differences' → logprob: -15.627490997314453
    9. 'ifferent' → logprob: -15.877490997314453
    10. 'iffs' → logprob: -16.127490997314453

Token 480: 'ferences' (ID: 10131)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.000938854762353003
    2. 'ferences' → logprob: -7.000938892364502
    3. 'érences' → logprob: -10.625938415527344
    4. 'r' → logprob: -13.500938415527344
    5. 'eren' → logprob: -14.000938415527344
    6. 'or' → logprob: -15.000938415527344
    7. 'ences' → logprob: -15.125938415527344
    8. 'e' → logprob: -15.750938415527344
    9. 'fer' → logprob: -16.750938415527344
    10. 'ere' → logprob: -17.875938415527344

Token 481: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. ' (' → logprob: -17.500001907348633
    4. '(N' → logprob: -20.875001907348633
    5. '(i' → logprob: -22.250001907348633
    6. '(no' → logprob: -22.375001907348633
    7. '(noun' → logprob: -22.500001907348633
    8. '(num' → logprob: -22.500001907348633
    9. '()' → logprob: -22.750001907348633
    10. '(not' → logprob: -23.000001907348633

Token 482: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '())' → logprob: -15.625
    3. '))' → logprob: -16.0
    4. ')
' → logprob: -16.5
    5. ' )' → logprob: -16.875
    6. '()' → logprob: -18.125
    7. '   ' → logprob: -18.375
    8. ')`' → logprob: -19.0
    9. ')}' → logprob: -19.125
    10. '')' → logprob: -20.375

Token 483: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.4272752852994017e-05
    2. ' if' → logprob: -11.37502384185791
    3. 'main' → logprob: -11.50002384185791
    4. '```' → logprob: -13.12502384185791
    5. '
' → logprob: -15.00002384185791
    6. '#' → logprob: -16.000024795532227
    7. '<|end|>' → logprob: -16.125024795532227
    8. '\n' → logprob: -16.750024795532227
    9. 'print' → logprob: -17.875024795532227
    10. '\' → logprob: -18.125024795532227

Token 484: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0031879288144409657
    2. 'main' → logprob: -5.753188133239746
    3. ' if' → logprob: -11.503188133239746
    4. ' main' → logprob: -16.12818717956543
    5. '#' → logprob: -17.37818717956543
    6. '```' → logprob: -18.25318717956543
    7. '(main' → logprob: -19.00318717956543
    8. '__' → logprob: -20.00318717956543
    9. '_main' → logprob: -20.12818717956543
    10. '[' → logprob: -21.00318717956543

Token 485: 'el' (ID: 296)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.031000494956970215
    2. 'el' → logprob: -3.5310006141662598
    3. 'le' → logprob: -7.40600061416626
    4. 'elf' → logprob: -8.156000137329102
    5. 'en' → logprob: -9.406000137329102
    6. 'elif' → logprob: -9.531000137329102
    7. 'ef' → logprob: -10.156000137329102
    8. 'end' → logprob: -10.781000137329102
    9. 'ear' → logprob: -10.781000137329102
    10. 'ly' → logprob: -10.781000137329102

Token 486: ' du' (ID: 1462)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16072732210159302
    2. 'if' → logprob: -1.9107272624969482
    3. '(main' → logprob: -7.660727500915527
    4. ' main' → logprob: -10.785727500915527
    5. '_main' → logprob: -11.660727500915527
    6. ' if' → logprob: -13.535727500915527
    7. '.main' → logprob: -14.160727500915527
    8. '	main' → logprob: -15.160727500915527
    9. '/main' → logprob: -16.03572654724121
    10. 'Main' → logprob: -16.41072654724121

Token 487: ' point' (ID: 2438)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1160349458805285e-05
    2. ' main' → logprob: -11.500011444091797
    3. 'if' → logprob: -13.875011444091797
    4. 'principal' → logprob: -17.625011444091797
    5. '(main' → logprob: -18.875011444091797
    6. '	main' → logprob: -19.125011444091797
    7. '_main' → logprob: -19.625011444091797
    8. 'maine' → logprob: -20.000011444091797
    9. 'def' → logprob: -20.875011444091797
    10. 'm' → logprob: -20.875011444091797

Token 488: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2521607279777527
    2. ' d' → logprob: -1.5021607875823975
    3. '_' → logprob: -9.002161026000977
    4. '_d' → logprob: -10.127161026000977
    5. 'entrée' → logprob: -10.502161026000977
    6. ' ' → logprob: -11.502161026000977
    7. '	d' → logprob: -11.877161026000977
    8. 'ent' → logprob: -12.252161026000977
    9. 'entr' → logprob: -12.377161026000977
    10. 'def' → logprob: -12.877161026000977

Token 489: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.08203824609518051
    2. ''entrée' → logprob: -2.582038164138794
    3. 'entr' → logprob: -5.957038402557373
    4. 'entry' → logprob: -7.707038402557373
    5. '’entrée' → logprob: -10.332037925720215
    6. 'Entr' → logprob: -10.332037925720215
    7. 'entrant' → logprob: -11.457037925720215
    8. ' entrée' → logprob: -11.707037925720215
    9. 'd' → logprob: -11.957037925720215
    10. 'ent' → logprob: -11.957037925720215

Token 490: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1696593016386032
    2. 'main' → logprob: -1.9196592569351196
    3. '
' → logprob: -4.66965913772583
    4. '```' → logprob: -12.169659614562988
    5. ' if' → logprob: -12.419659614562988
    6. ' main' → logprob: -12.794659614562988
    7. '(main' → logprob: -13.669659614562988
    8. '

' → logprob: -14.544659614562988
    9. '_main' → logprob: -14.919659614562988
    10. '    
' → logprob: -15.419659614562988

Token 491: ' script' (ID: 11713)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.01016577985137701
    2. 'program' → logprob: -5.260165691375732
    3. ' programme' → logprob: -6.010165691375732
    4. 'script' → logprob: -6.010165691375732
    5. ' script' → logprob: -12.13516616821289
    6. 'programma' → logprob: -13.13516616821289
    7. 'module' → logprob: -13.63516616821289
    8. 'programm' → logprob: -13.76016616821289
    9. 'main' → logprob: -14.13516616821289
    10. ' program' → logprob: -14.63516616821289

Token 492: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5864264369010925
    2. 'if' → logprob: -0.8364264369010925
    3. 'main' → logprob: -4.586426258087158
    4. '

' → logprob: -8.836426734924316
    5. '```' → logprob: -10.211426734924316
    6. '
' → logprob: -10.836426734924316
    7. ' if' → logprob: -10.836426734924316
    8. '  
' → logprob: -12.461426734924316
    9. '(main' → logprob: -12.461426734924316
    10. '\n' → logprob: -12.711426734924316

Token 493: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20141343772411346
    2. 'main' → logprob: -1.7014133930206299
    3. ' if' → logprob: -16.451414108276367
    4. ' main' → logprob: -17.201414108276367
    5. '```' → logprob: -19.201414108276367
    6. '(main' → logprob: -20.451414108276367
    7. '
' → logprob: -20.701414108276367
    8. '_main' → logprob: -22.451414108276367
    9. '.main' → logprob: -23.076414108276367
    10. '	main' → logprob: -23.076414108276367

Token 494: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12694227695465088
    2. '__' → logprob: -2.1269421577453613
    3. ' ' → logprob: -12.12694263458252
    4. 'name' → logprob: -12.75194263458252
    5. ' ' → logprob: -13.00194263458252
    6. 'True' → logprob: -13.37694263458252
    7. ' True' → logprob: -14.00194263458252
    8. '_name' → logprob: -15.00194263458252
    9. ' name' → logprob: -15.50194263458252
    10. '```' → logprob: -15.50194263458252

Token 495: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4965885579586029
    2. '__' → logprob: -1.2465885877609253
    3. 'name' → logprob: -2.8715884685516357
    4. ' __' → logprob: -3.3715884685516357
    5. '==' → logprob: -4.371588706970215
    6. '=="' → logprob: -9.371588706970215
    7. ' name' → logprob: -9.871588706970215
    8. '_' → logprob: -10.121588706970215
    9. ' =="' → logprob: -10.746588706970215
    10. '_name' → logprob: -10.996588706970215

Token 496: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '==' → logprob: -15.125000953674316
    3. '__.__' → logprob: -16.125
    4. '____' → logprob: -17.5
    5. ' ==' → logprob: -17.875
    6. '___' → logprob: -18.0
    7. 'name' → logprob: -18.375
    8. ' __' → logprob: -18.75
    9. '_' → logprob: -18.875
    10. '__
' → logprob: -19.375

Token 497: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014441660605370998
    2. '==' → logprob: -4.38944149017334
    3. ' ==' → logprob: -6.38944149017334
    4. '=="' → logprob: -8.38944149017334
    5. '=='' → logprob: -12.01444149017334
    6. '__.__' → logprob: -12.51444149017334
    7. '"' → logprob: -12.63944149017334
    8. '___' → logprob: -13.01444149017334
    9. '===' → logprob: -13.13944149017334
    10. '_' → logprob: -14.13944149017334

Token 498: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023264696821570396
    2. ''' → logprob: -3.7732646465301514
    3. '__' → logprob: -11.27326488494873
    4. ' "__' → logprob: -12.02326488494873
    5. ' '__' → logprob: -15.39826488494873
    6. '"name' → logprob: -16.273263931274414
    7. ''"' → logprob: -18.023263931274414
    8. '"user' → logprob: -18.148263931274414
    9. '"'' → logprob: -18.273263931274414
    10. 'main' → logprob: -18.273263931274414

Token 499: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. 'name' → logprob: -15.0
    3. '__' → logprob: -18.75
    4. '_main' → logprob: -19.0
    5. ' main' → logprob: -19.375
    6. '(main' → logprob: -22.375
    7. '	main' → logprob: -22.5
    8. 'm' → logprob: -22.5
    9. 'ma' → logprob: -22.875
    10. 'built' → logprob: -23.25

Token 500: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20147044956684113
    2. '__' → logprob: -1.7014704942703247
    3. '__':
' → logprob: -9.826470375061035
    4. '__["' → logprob: -12.951470375061035
    5. '__.__' → logprob: -15.076470375061035
    6. '__("' → logprob: -15.701470375061035
    7. '__
' → logprob: -15.951470375061035
    8. '__",' → logprob: -16.45147132873535
    9. '__.' → logprob: -16.57647132873535
    10. '__:' → logprob: -17.45147132873535

Token 501: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5346049070358276
    2. 'main' → logprob: -1.2846049070358276
    3. '"' → logprob: -2.034605026245117
    4. ' main' → logprob: -5.409605026245117
    5. ''' → logprob: -6.284605026245117
    6. ' "__' → logprob: -8.909605026245117
    7. ' __' → logprob: -9.284605026245117
    8. '   ' → logprob: -11.284605026245117
    9. ' '__' → logprob: -11.659605026245117
    10. '_main' → logprob: -11.659605026245117

Token 502: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.25
    3. '	main' → logprob: -25.75
    4. '_main' → logprob: -28.75
    5. '.main' → logprob: -30.25
    6. 'Main' → logprob: -30.5
    7. '(main' → logprob: -31.25
    8. '   ' → logprob: -32.0
    9. '
' → logprob: -34.125
    10. 'mainwindow' → logprob: -34.25

Token 503: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 501
Tokens correctement prédits (1ère position, stricte): 170
Tokens correctement prédits (1ère position, avec adaptation): 182
Tokens correctement prédits (top 10): 349
Précision stricte (1ère position): 33.93%
Précision adaptée (1ère position): 36.33%
Précision (top 10): 69.66%
================================================================================
