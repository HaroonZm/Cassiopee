================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque as _wheel

_, __ = (lambda: map(int, __import__('builtins').input().split()))(), None
___ = __import__('builtins').input()
____ = sorted(___)[0]
for ___0 in range(_):
    ____1 = ___ + ___[::-1]
    _____ = _wheel()
    _____0 = 0
    _____1 = None
    for ___1 in range(len(____1)):
        if ____1[___1] is ____:
            if not _____0:
                _____1 = ___1
            _____0 += 1
        else:
            if _____0:
                _____.appendleft((_____0, _____1))
                _____0 = 0
    if _____0:
        _____.append((_____0, _____1))
    ______ = max(_____, key=lambda x: x[0])
    if ______[0] >= _:
        print(____ * _)
        quit()
    for __x, __y in _____:
        if __y <= _ and __x == ______[0]:
            ___ = min(___, ____1[__y:__y + _])
    ___ = ''.join(list(___)[::-1])
print(___[-1::-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.005216360092163
    2. 'default' → logprob: -1.380216360092163
    3. 'abc' → logprob: -1.755216360092163
    4. 'Counter' → logprob: -2.130216360092163
    5. ' defaultdict' → logprob: -2.630216360092163
    6. ' Counter' → logprob: -5.005216598510742
    7. 'named' → logprob: -5.380216598510742
    8. ' abc' → logprob: -5.755216598510742
    9. ' deque' → logprob: -6.380216598510742
    10. '```' → logprob: -6.630216598510742

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010959392413496971
    2. '.' → logprob: -5.385959625244141
    3. '\(' → logprob: -5.760959625244141
    4. '\' → logprob: -6.510959625244141
    5. '```' → logprob: -7.885959625244141
    6. '[' → logprob: -8.51095962524414
    7. '\[' → logprob: -8.51095962524414
    8. ',' → logprob: -8.63595962524414
    9. '\n' → logprob: -9.13595962524414
    10. 'newline' → logprob: -9.13595962524414

Token 5: ' _' (ID: 1175)
  Prédit: ' dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dq' → logprob: -0.8872690200805664
    2. ' deque' → logprob: -1.1372690200805664
    3. 'deque' → logprob: -1.8872690200805664
    4. 'dq' → logprob: -3.1372690200805664
    5. ' de' → logprob: -3.7622690200805664
    6. ' queue' → logprob: -4.262269020080566
    7. 'de' → logprob: -4.512269020080566
    8. '_de' → logprob: -4.512269020080566
    9. ' d' → logprob: -5.262269020080566
    10. 'd' → logprob: -6.137269020080566

Token 6: 'wheel' (ID: 67798)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.16825048625469208
    2. 'd' → logprob: -2.043250560760498
    3. '_' → logprob: -4.418250560760498
    4. 'de' → logprob: -4.418250560760498
    5. 'dq' → logprob: -7.793250560760498
    6. 'q' → logprob: -8.16825008392334
    7. 'D' → logprob: -8.54325008392334
    8. 'Deque' → logprob: -9.16825008392334
    9. '_de' → logprob: -10.79325008392334
    10. 'queue' → logprob: -11.16825008392334

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4227989614009857
    2. '.' → logprob: -1.922798991203308
    3. '_' → logprob: -2.0477988719940186
    4. ',' → logprob: -3.5477988719940186
    5. '\' → logprob: -4.422799110412598
    6. '\n' → logprob: -5.422799110412598
    7. '[' → logprob: -5.672799110412598
    8. '```' → logprob: -5.797799110412598
    9. 'newline' → logprob: -5.797799110412598
    10. ' (' → logprob: -5.922799110412598

Token 8: '_,' (ID: 14152)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03209027647972107
    2. '_' → logprob: -3.907090187072754
    3. '.' → logprob: -4.907090187072754
    4. ',' → logprob: -6.032090187072754
    5. ':' → logprob: -8.407090187072754
    6. '=' → logprob: -8.782090187072754
    7. '```' → logprob: -8.782090187072754
    8. '()' → logprob: -8.907090187072754
    9. '(
' → logprob: -8.907090187072754
    10. '[' → logprob: -9.032090187072754

Token 9: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6158146262168884
    2. 'deque' → logprob: -1.9908146858215332
    3. '_w' → logprob: -2.365814685821533
    4. 'wheel' → logprob: -2.490814685821533
    5. ' _' → logprob: -2.990814685821533
    6. ' wheel' → logprob: -3.240814685821533
    7. 'w' → logprob: -4.740814685821533
    8. ' =' → logprob: -5.615814685821533
    9. 'queue' → logprob: -5.615814685821533
    10. '_code' → logprob: -5.615814685821533

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014224034734070301
    2. ' =' → logprob: -4.264224052429199
    3. ',' → logprob: -10.2642240524292
    4. '=_' → logprob: -11.6392240524292
    5. '=

' → logprob: -12.3892240524292
    6. '=
' → logprob: -12.7642240524292
    7. ' ' → logprob: -12.7642240524292
    8. '=w' → logprob: -12.8892240524292
    9. 'wheel' → logprob: -14.3892240524292
    10. ')' → logprob: -14.8892240524292

Token 11: ' (' (ID: 350)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.281141996383667
    2. '0' → logprob: -2.406141996383667
    3. ' ' → logprob: -2.656141996383667
    4. ' _' → logprob: -3.531141996383667
    5. '_' → logprob: -4.156142234802246
    6. 'deque' → logprob: -4.781142234802246
    7. ' [],' → logprob: -5.156142234802246
    8. '_de' → logprob: -5.281142234802246
    9. '[]' → logprob: -5.406142234802246
    10. '1' → logprob: -5.531142234802246

Token 12: 'lambda' (ID: 35280)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7359468936920166
    2. '_' → logprob: -2.2359468936920166
    3. '[],' → logprob: -2.2359468936920166
    4. '1' → logprob: -2.7359468936920166
    5. '3' → logprob: -3.2359468936920166
    6. '_w' → logprob: -3.4859468936920166
    7. '[]' → logprob: -3.6109468936920166
    8. ')' → logprob: -3.6109468936920166
    9. '10' → logprob: -4.1109466552734375
    10. ' ' → logprob: -4.1109466552734375

Token 13: ':' (ID: 25)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.8094897270202637
    2. 's' → logprob: -2.0594897270202637
    3. ' n' → logprob: -2.1844897270202637
    4. ' x' → logprob: -2.4344897270202637
    5. 'x' → logprob: -2.5594897270202637
    6. 'n' → logprob: -2.8094897270202637
    7. ':' → logprob: -2.9344897270202637
    8. ' _' → logprob: -3.0594897270202637
    9. '_' → logprob: -3.3094897270202637
    10. 'a' → logprob: -3.4344897270202637

Token 14: ' map' (ID: 4014)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.6639773845672607
    2. ' ' → logprob: -2.2889773845672607
    3. ' (' → logprob: -2.4139773845672607
    4. ' _' → logprob: -2.4139773845672607
    5. '0' → logprob: -3.0389773845672607
    6. '(' → logprob: -3.0389773845672607
    7. '([],' → logprob: -3.1639773845672607
    8. 'deque' → logprob: -3.2889773845672607
    9. '(lambda' → logprob: -3.5389773845672607
    10. ' True' → logprob: -3.6639773845672607

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6327588558197021
    2. '(list' → logprob: -1.7577588558197021
    3. '(lambda' → logprob: -2.257758855819702
    4. '(' → logprob: -2.507758855819702
    5. '(iter' → logprob: -2.757758855819702
    6. '(str' → logprob: -3.757758855819702
    7. '(_' → logprob: -5.007759094238281
    8. 'list' → logprob: -5.507759094238281
    9. ')' → logprob: -5.507759094238281
    10. '(print' → logprob: -6.382759094238281

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6734408140182495
    2. '(input' → logprob: -1.0484408140182495
    3. ')' → logprob: -2.548440933227539
    4. '<|end|>' → logprob: -3.173440933227539
    5. '('' → logprob: -5.548440933227539
    6. 'input' → logprob: -6.048440933227539
    7. '(stdin' → logprob: -6.423440933227539
    8. ',' → logprob: -6.548440933227539
    9. '<|end|>' → logprob: -7.298440933227539
    10. '(range' → logprob: -7.423440933227539

Token 17: ' __' (ID: 2516)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1383792906999588
    2. ' input' → logprob: -2.1383793354034424
    3. '(input' → logprob: -5.388379096984863
    4. '_' → logprob: -5.888379096984863
    5. ')' → logprob: -6.638379096984863
    6. '_)' → logprob: -7.263379096984863
    7. 'iter' → logprob: -8.263379096984863
    8. '_input' → logprob: -8.513379096984863
    9. ' iter' → logprob: -8.513379096984863
    10. 'range' → logprob: -8.638379096984863

Token 18: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012902544811367989
    2. ' input' → logprob: -5.262902736663818
    3. '(input' → logprob: -5.762902736663818
    4. 'iter' → logprob: -6.762902736663818
    5. '_' → logprob: -7.012902736663818
    6. ')' → logprob: -7.137902736663818
    7. '_input' → logprob: -7.762902736663818
    8. 'open' → logprob: -7.762902736663818
    9. '__' → logprob: -8.63790225982666
    10. 'next' → logprob: -8.88790225982666

Token 19: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.15676972270011902
    2. '("' → logprob: -3.0317697525024414
    3. '('_' → logprob: -3.1567697525024414
    4. '__('' → logprob: -4.031769752502441
    5. '(' → logprob: -4.156769752502441
    6. '('__' → logprob: -5.031769752502441
    7. '("("' → logprob: -5.406769752502441
    8. '__("' → logprob: -5.656769752502441
    9. '("__' → logprob: -6.156769752502441
    10. '("_' → logprob: -6.656769752502441

Token 20: 'built' (ID: 81936)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.010663514956831932
    2. 'built' → logprob: -4.7606635093688965
    3. '__' → logprob: -7.0106635093688965
    4. ''s' → logprob: -8.010663986206055
    5. ' sys' → logprob: -8.010663986206055
    6. 'it' → logprob: -9.010663986206055
    7. '_sys' → logprob: -9.510663986206055
    8. ' built' → logprob: -9.635663986206055
    9. 're' → logprob: -9.885663986206055
    10. '=sys' → logprob: -9.885663986206055

Token 21: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.004928223788738251
    2. '__' → logprob: -6.129928112030029
    3. '```' → logprob: -6.254928112030029
    4. '...' → logprob: -9.004928588867188
    5. '-' → logprob: -9.129928588867188
    6. 'i' → logprob: -9.754928588867188
    7. '``' → logprob: -9.754928588867188
    8. 'in' → logprob: -10.129928588867188
    9. '_ins' → logprob: -10.129928588867188
    10. '' → logprob: -10.379928588867188

Token 22: '').' (ID: 3426)
  Prédit: ').__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').__' → logprob: -0.09700097143650055
    2. '.__' → logprob: -3.597001075744629
    3. ').' → logprob: -3.722001075744629
    4. '').' → logprob: -3.972001075744629
    5. ' ).' → logprob: -4.597001075744629
    6. '__.__' → logprob: -5.472001075744629
    7. '.' → logprob: -5.847001075744629
    8. '().__' → logprob: -7.097001075744629
    9. ')._' → logprob: -7.097001075744629
    10. ')' → logprob: -7.347001075744629

Token 23: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007480975706130266
    2. 'open' → logprob: -6.007481098175049
    3. 'argv' → logprob: -6.132481098175049
    4. ' input' → logprob: -7.132481098175049
    5. 'range' → logprob: -7.382481098175049
    6. 'stdin' → logprob: -7.507481098175049
    7. '__' → logprob: -8.63248062133789
    8. 'ascii' → logprob: -8.88248062133789
    9. 'raw' → logprob: -9.13248062133789
    10. '_input' → logprob: -9.50748062133789

Token 24: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2543392777442932
    2. '()))' → logprob: -2.1293392181396484
    3. '()' → logprob: -2.3793392181396484
    4. '()),' → logprob: -5.629339218139648
    5. '().' → logprob: -5.879339218139648
    6. ')' → logprob: -6.504339218139648
    7. '(' → logprob: -6.754339218139648
    8. '(()' → logprob: -6.879339218139648
    9. '())))' → logprob: -7.504339218139648
    10. '());' → logprob: -7.754339218139648

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08348113298416138
    2. '__' → logprob: -2.7084810733795166
    3. 'strip' → logprob: -4.458481311798096
    4. 'read' → logprob: -7.083481311798096
    5. ')' → logprob: -7.458481311798096
    6. 'rstrip' → logprob: -8.833480834960938
    7. ' split' → logprob: -9.333480834960938
    8. '().__' → logprob: -9.458480834960938
    9. '().' → logprob: -9.958480834960938
    10. '_split' → logprob: -11.208480834960938

Token 26: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16995200514793396
    2. '())' → logprob: -2.044951915740967
    3. '))' → logprob: -4.044951915740967
    4. '()' → logprob: -5.419951915740967
    5. '()),' → logprob: -5.669951915740967
    6. ')' → logprob: -7.419951915740967
    7. '())))' → logprob: -8.294952392578125
    8. '()))
' → logprob: -8.544952392578125
    9. '(' → logprob: -8.669952392578125
    10. '()));' → logprob: -9.669952392578125

Token 27: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07404395937919617
    2. '(' → logprob: -2.6990439891815186
    3. '()\' → logprob: -7.1990437507629395
    4. '()
' → logprob: -7.5740437507629395
    5. '();' → logprob: -7.5740437507629395
    6. '('\' → logprob: -7.8240437507629395
    7. '(),' → logprob: -8.324044227600098
    8. ',' → logprob: -8.449044227600098
    9. '(
' → logprob: -8.574044227600098
    10. '\' → logprob: -8.699044227600098

Token 28: ' None' (ID: 4662)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0404181070625782
    2. ' _' → logprob: -4.0404181480407715
    3. '_w' → logprob: -4.2904181480407715
    4. '(' → logprob: -6.5404181480407715
    5. '[' → logprob: -6.5404181480407715
    6. 'deque' → logprob: -7.1654181480407715
    7. '_de' → logprob: -7.2904181480407715
    8. '_,' → logprob: -7.7904181480407715
    9. ')' → logprob: -8.040417671203613
    10. ' (' → logprob: -8.415417671203613

Token 29: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8651419878005981
    2. ',' → logprob: -1.6151419878005981
    3. ')' → logprob: -1.7401419878005981
    4. '<|end|>' → logprob: -2.9901418685913086
    5. ' ' → logprob: -3.1151418685913086
    6. '.' → logprob: -3.1151418685913086
    7. '[' → logprob: -4.365141868591309
    8. '=' → logprob: -4.740141868591309
    9. '(' → logprob: -4.990141868591309
    10. 'for' → logprob: -5.490141868591309

Token 30: '___' (ID: 11935)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4540064334869385
    2. ',' → logprob: -2.7040064334869385
    3. '__' → logprob: -2.9540064334869385
    4. 'for' → logprob: -3.8290064334869385
    5. 'w' → logprob: -4.079006195068359
    6. ')' → logprob: -4.079006195068359
    7. '_w' → logprob: -4.204006195068359
    8. '_
' → logprob: -4.329006195068359
    9. 'if' → logprob: -4.454006195068359
    10. '_,' → logprob: -4.454006195068359

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4732154607772827
    2. ' =' → logprob: -1.2232154607772827
    3. '.' → logprob: -2.5982155799865723
    4. '(' → logprob: -5.848215579986572
    5. '.append' → logprob: -6.598215579986572
    6. '_' → logprob: -6.723215579986572
    7. ',' → logprob: -7.723215579986572
    8. ' .' → logprob: -7.723215579986572
    9. ')' → logprob: -8.223215103149414
    10. '=[]' → logprob: -8.223215103149414

Token 32: ' __' (ID: 2516)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.3985757827758789
    2. ' _' → logprob: -1.523575782775879
    3. '_de' → logprob: -3.023575782775879
    4. '_' → logprob: -4.023575782775879
    5. 'deque' → logprob: -4.023575782775879
    6. ' ' → logprob: -4.648575782775879
    7. ' deque' → logprob: -4.773575782775879
    8. '_lambda' → logprob: -6.523575782775879
    9. ' []' → logprob: -6.898575782775879
    10. '   ' → logprob: -7.523575782775879

Token 33: 'import' (ID: 561)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5693109035491943
    2. ')' → logprob: -1.6943109035491943
    3. '.' → logprob: -2.0693109035491943
    4. '=' → logprob: -2.0693109035491943
    5. ',' → logprob: -2.1943109035491943
    6. '<|end|>' → logprob: -2.1943109035491943
    7. ' =' → logprob: -3.0693109035491943
    8. ' ' → logprob: -3.0693109035491943
    9. '[' → logprob: -4.444311141967773
    10. '(' → logprob: -4.444311141967773

Token 34: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.09764233231544495
    2. '('_' → logprob: -2.972642421722412
    3. '(' → logprob: -3.597642421722412
    4. '_' → logprob: -4.597642421722412
    5. '__('' → logprob: -6.847642421722412
    6. '("' → logprob: -7.097642421722412
    7. '('__' → logprob: -7.472642421722412
    8. '("_' → logprob: -8.597641944885254
    9. '<|end|>' → logprob: -8.722641944885254
    10. '("("' → logprob: -8.722641944885254

Token 35: 'built' (ID: 81936)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.8977088332176208
    2. 'math' → logprob: -1.1477088928222656
    3. 'collections' → logprob: -1.6477088928222656
    4. 'heap' → logprob: -3.6477088928222656
    5. 'it' → logprob: -3.7727088928222656
    6. 'random' → logprob: -4.397708892822266
    7. 'built' → logprob: -4.897708892822266
    8. 'cmath' → logprob: -6.147708892822266
    9. 'string' → logprob: -6.397708892822266
    10. 'operator' → logprob: -6.772708892822266

Token 36: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.04045393690466881
    2. 'its' → logprob: -4.040453910827637
    3. 'ils' → logprob: -4.040453910827637
    4. '__' → logprob: -6.915453910827637
    5. 'uilt' → logprob: -7.165453910827637
    6. 'als' → logprob: -7.415453910827637
    7. 'it' → logprob: -7.665453910827637
    8. '```' → logprob: -7.790453910827637
    9. 'uls' → logprob: -8.290453910827637
    10. 'ts' → logprob: -8.790453910827637

Token 37: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.05343344435095787
    2. '')' → logprob: -3.303433418273926
    3. ').' → logprob: -4.553433418273926
    4. ')' → logprob: -6.553433418273926
    5. '.' → logprob: -6.803433418273926
    6. ').__' → logprob: -7.053433418273926
    7. '.')' → logprob: -8.053433418273926
    8. ')._' → logprob: -8.553433418273926
    9. '').'' → logprob: -9.053433418273926
    10. '')['' → logprob: -9.678433418273926

Token 38: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5302494764328003
    2. 'deque' → logprob: -1.7802494764328003
    3. 'range' → logprob: -2.40524959564209
    4. 'print' → logprob: -3.15524959564209
    5. 'int' → logprob: -3.78024959564209
    6. 'max' → logprob: -4.15524959564209
    7. 'stdin' → logprob: -4.15524959564209
    8. 'list' → logprob: -4.28024959564209
    9. 'exit' → logprob: -4.65524959564209
    10. 'exec' → logprob: -5.15524959564209

Token 39: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9561477303504944
    2. '()' → logprob: -1.3311476707458496
    3. '_' → logprob: -1.5811476707458496
    4. ')' → logprob: -3.4561476707458496
    5. ' ' → logprob: -3.8311476707458496
    6. ',' → logprob: -4.08114767074585
    7. '.' → logprob: -4.20614767074585
    8. '__' → logprob: -4.45614767074585
    9. '(
' → logprob: -4.70614767074585
    10. '[' → logprob: -5.45614767074585

Token 40: '____' (ID: 2721)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41976791620254517
    2. '.' → logprob: -2.0447678565979004
    3. ' ' → logprob: -3.0447678565979004
    4. 'for' → logprob: -3.2947678565979004
    5. '=' → logprob: -3.9197678565979004
    6. ')' → logprob: -4.2947678565979
    7. 'deque' → logprob: -4.7947678565979
    8. ';' → logprob: -4.9197678565979
    9. '_w' → logprob: -4.9197678565979
    10. '__' → logprob: -4.9197678565979

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.706174910068512
    2. ' =' → logprob: -1.7061748504638672
    3. ')' → logprob: -2.206174850463867
    4. '(' → logprob: -2.206174850463867
    5. '.' → logprob: -3.206174850463867
    6. '<|end|>' → logprob: -3.831174850463867
    7. '()' → logprob: -4.456174850463867
    8. '_' → logprob: -5.706174850463867
    9. '.readline' → logprob: -5.956174850463867
    10. '.split' → logprob: -5.956174850463867

Token 42: ' sorted' (ID: 20099)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7936230301856995
    2. '_w' → logprob: -0.7936230301856995
    3. '_' → logprob: -2.9186229705810547
    4. ' ' → logprob: -4.668622970581055
    5. '_lambda' → logprob: -5.043622970581055
    6. '_de' → logprob: -5.668622970581055
    7. ' []' → logprob: -5.793622970581055
    8. 'len' → logprob: -5.793622970581055
    9. '[]' → logprob: -6.043622970581055
    10. '__' → logprob: -6.293622970581055

Token 43: '(__' (ID: 11782)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04172343760728836
    2. '_' → logprob: -4.666723251342773
    3. '<|end|>' → logprob: -5.041723251342773
    4. '(
' → logprob: -5.541723251342773
    5. '[' → logprob: -5.666723251342773
    6. ',' → logprob: -5.791723251342773
    7. '(_' → logprob: -6.041723251342773
    8. '(lambda' → logprob: -6.041723251342773
    9. '(__' → logprob: -6.416723251342773
    10. '___' → logprob: -6.541723251342773

Token 44: '_' (ID: 62)
  Prédit: '_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.9791417121887207
    2. '(' → logprob: -1.8541417121887207
    3. '_,' → logprob: -2.3541417121887207
    4. '(_' → logprob: -2.6041417121887207
    5. '_' → logprob: -2.7291417121887207
    6. '(__' → logprob: -2.8541417121887207
    7. ')' → logprob: -3.4791417121887207
    8. '(_,' → logprob: -3.7291417121887207
    9. '___' → logprob: -3.9791417121887207
    10. '([' → logprob: -4.229141712188721

Token 45: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3929498493671417
    2. '(' → logprob: -1.3929498195648193
    3. '())' → logprob: -3.1429498195648193
    4. ',' → logprob: -4.517950057983398
    5. '()' → logprob: -4.642950057983398
    6. '(),' → logprob: -4.767950057983398
    7. '(split' → logprob: -7.392950057983398
    8. '(
' → logprob: -7.767950057983398
    9. '(lambda' → logprob: -8.017950057983398
    10. '((' → logprob: -8.142950057983398

Token 46: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3730097711086273
    2. '0' → logprob: -2.12300968170166
    3. ':]' → logprob: -2.74800968170166
    4. '(' → logprob: -3.37300968170166
    5. '-' → logprob: -3.62300968170166
    6. '1' → logprob: -3.99800968170166
    7. ')' → logprob: -4.87300968170166
    8. '()]' → logprob: -5.12300968170166
    9. ']' → logprob: -5.37300968170166
    10. '::-' → logprob: -5.49800968170166

Token 47: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018248865380883217
    2. ')' → logprob: -4.393249034881592
    3. ' ]' → logprob: -6.768249034881592
    4. '+' → logprob: -7.018249034881592
    5. ':' → logprob: -7.143249034881592
    6. '()' → logprob: -8.018248558044434
    7. '[' → logprob: -8.143248558044434
    8. '<|end|>' → logprob: -8.143248558044434
    9. ':]' → logprob: -8.518248558044434
    10. '#' → logprob: -8.643248558044434

Token 48: 'for' (ID: 1938)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.700461745262146
    2. ')' → logprob: -1.950461745262146
    3. ' ' → logprob: -2.5754618644714355
    4. '<|end|>' → logprob: -2.9504618644714355
    5. '=' → logprob: -3.3254618644714355
    6. '+' → logprob: -3.5754618644714355
    7. '[' → logprob: -3.8254618644714355
    8. '(' → logprob: -3.9504618644714355
    9. ',' → logprob: -3.9504618644714355
    10. '.' → logprob: -4.0754618644714355

Token 49: ' ___' (ID: 14092)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.02243194542825222
    2. ' i' → logprob: -4.77243185043335
    3. '_' → logprob: -4.89743185043335
    4. ' ' → logprob: -5.27243185043335
    5. 'i' → logprob: -7.89743185043335
    6. ' ___' → logprob: -8.397432327270508
    7. ' __' → logprob: -9.272432327270508
    8. ' x' → logprob: -9.397432327270508
    9. ' ____' → logprob: -10.022432327270508
    10. ' _____' → logprob: -10.147432327270508

Token 50: '0' (ID: 15)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2494242936372757
    2. '_' → logprob: -1.9994243383407593
    3. 'in' → logprob: -2.6244242191314697
    4. ' ' → logprob: -5.374424457550049
    5. ' _' → logprob: -5.624424457550049
    6. ',' → logprob: -5.874424457550049
    7. '_in' → logprob: -6.749424457550049
    8. ' i' → logprob: -8.99942398071289
    9. '_i' → logprob: -9.62442398071289
    10. 'i' → logprob: -10.24942398071289

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08979804813861847
    2. 'in' → logprob: -2.4647979736328125
    3. ',' → logprob: -7.7147979736328125
    4. ' ' → logprob: -8.464797973632812
    5. '_' → logprob: -9.089797973632812
    6. ' _' → logprob: -10.339797973632812
    7. '_in' → logprob: -10.714797973632812
    8. '0' → logprob: -12.464797973632812
    9. '  ' → logprob: -12.464797973632812
    10. ' ,' → logprob: -12.464797973632812

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1225559264421463
    2. 'range' → logprob: -2.74755597114563
    3. '___' → logprob: -3.87255597114563
    4. ' _' → logprob: -4.497555732727051
    5. ' ___' → logprob: -4.622555732727051
    6. '_' → logprob: -5.372555732727051
    7. '____' → logprob: -6.747555732727051
    8. ' __' → logprob: -7.747555732727051
    9. '_____' → logprob: -7.747555732727051
    10. ' ____' → logprob: -7.872555732727051

Token 53: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.8366586565971375
    2. '(' → logprob: -1.0866587162017822
    3. '(_)' → logprob: -1.5866587162017822
    4. '(_.' → logprob: -4.461658477783203
    5. '(__' → logprob: -4.961658477783203
    6. '(int' → logprob: -6.211658477783203
    7. '(len' → logprob: -6.336658477783203
    8. '((' → logprob: -6.586658477783203
    9. '(_,' → logprob: -7.336658477783203
    10. '_' → logprob: -8.336658477783203

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003909080754965544
    2. ' ):' → logprob: -6.753909111022949
    3. '):
' → logprob: -6.878909111022949
    4. '-' → logprob: -7.628909111022949
    5. '+' → logprob: -8.12890911102295
    6. ')' → logprob: -8.25390911102295
    7. '[' → logprob: -8.87890911102295
    8. '_' → logprob: -9.12890911102295
    9. ' -' → logprob: -9.25390911102295
    10. ',' → logprob: -9.75390911102295

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46466559171676636
    2. ' _' → logprob: -1.3396656513214111
    3. '_' → logprob: -3.339665651321411
    4. ' __' → logprob: -4.339665412902832
    5. '    ' → logprob: -4.464665412902832
    6. '	' → logprob: -4.589665412902832
    7. ' ' → logprob: -4.714665412902832
    8. ' if' → logprob: -4.964665412902832
    9. '___' → logprob: -5.339665412902832
    10. ' ___' → logprob: -5.464665412902832

Token 56: ' ____' (ID: 60861)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -1.3197875022888184
    2. ' ___' → logprob: -1.5697875022888184
    3. ' ____' → logprob: -2.3197875022888184
    4. '____' (adapté à ' ____') → logprob: -2.4447875022888184
    5. '_' → logprob: -2.6947875022888184
    6. '___' → logprob: -2.6947875022888184
    7. '__' → logprob: -2.8197875022888184
    8. ' _' → logprob: -3.0697875022888184
    9. '...' → logprob: -3.9447875022888184
    10. '   ' → logprob: -4.194787502288818

Token 57: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6869863271713257
    2. '=' → logprob: -1.5619863271713257
    3. '.append' → logprob: -2.5619864463806152
    4. ',' → logprob: -3.4369864463806152
    5. '_' → logprob: -3.4369864463806152
    6. '___' → logprob: -3.6869864463806152
    7. ' +=' → logprob: -3.8119864463806152
    8. '+=' → logprob: -3.8119864463806152
    9. '0' → logprob: -4.936986446380615
    10. '.' → logprob: -5.311986446380615

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3681124448776245
    2. '=' → logprob: -1.2431124448776245
    3. ' ' → logprob: -4.618112564086914
    4. '_' → logprob: -5.243112564086914
    5. ',' → logprob: -6.868112564086914
    6. 'for' → logprob: -7.868112564086914
    7. '=input' → logprob: -7.993112564086914
    8. ')' → logprob: -8.118112564086914
    9. '0' → logprob: -8.493112564086914
    10. '   ' → logprob: -8.618112564086914

Token 59: ' ___' (ID: 14092)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7241175174713135
    2. '___' → logprob: -1.9741175174713135
    3. 'deque' → logprob: -2.0991175174713135
    4. '0' → logprob: -2.5991175174713135
    5. '[]' → logprob: -3.0991175174713135
    6. '__' → logprob: -3.0991175174713135
    7. '_de' → logprob: -4.349117279052734
    8. '_w' → logprob: -4.599117279052734
    9. '____' → logprob: -4.724117279052734
    10. '{}' → logprob: -4.974117279052734

Token 60: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4444034993648529
    2. '0' → logprob: -1.4444035291671753
    3. '[_' → logprob: -2.9444034099578857
    4. '.split' → logprob: -3.6944034099578857
    5. '___' → logprob: -5.069403648376465
    6. '_' → logprob: -5.319403648376465
    7. '[::-' → logprob: -5.319403648376465
    8. '[-' → logprob: -5.569403648376465
    9. '.__' → logprob: -5.944403648376465
    10. '[:' → logprob: -6.194403648376465

Token 61: ' ___' (ID: 14092)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.22656099498271942
    2. '[' → logprob: -2.4765610694885254
    3. '____' → logprob: -3.3515610694885254
    4. ' ___' → logprob: -3.4765610694885254
    5. '1' → logprob: -4.726561069488525
    6. '_' → logprob: -4.976561069488525
    7. 'str' → logprob: -5.101561069488525
    8. '__' → logprob: -5.101561069488525
    9. '[_' → logprob: -5.601561069488525
    10. ' ____' → logprob: -5.976561069488525

Token 62: '[::-' (ID: 159890)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02133105881512165
    2. '___' → logprob: -3.8963310718536377
    3. '[_' → logprob: -8.271330833435059
    4. '__' → logprob: -9.396330833435059
    5. '0' → logprob: -9.521330833435059
    6. '.__' → logprob: -10.021330833435059
    7. '```' → logprob: -10.271330833435059
    8. '__[' → logprob: -10.271330833435059
    9. '[str' → logprob: -10.396330833435059
    10. '1' → logprob: -10.396330833435059

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001969673437997699
    2. '```' → logprob: -7.501969814300537
    3. '0' → logprob: -7.751969814300537
    4. '[' → logprob: -8.126969337463379
    5. '-' → logprob: -8.251969337463379
    6. '_' → logprob: -9.751969337463379
    7. '[::-' → logprob: -9.876969337463379
    8. ')' → logprob: -10.001969337463379
    9. '``' → logprob: -10.001969337463379
    10. '
' → logprob: -10.939469337463379

Token 64: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027155589312314987
    2. '[:' → logprob: -3.652155637741089
    3. '[:-' → logprob: -7.65215539932251
    4. '___' → logprob: -8.777155876159668
    5. '[len' → logprob: -10.777155876159668
    6. ')' → logprob: -10.777155876159668
    7. '[_' → logprob: -10.902155876159668
    8. ')[' → logprob: -11.027155876159668
    9. '   ' → logprob: -11.277155876159668
    10. ' [' → logprob: -11.277155876159668

Token 65: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11461380124092102
    2. '<|end|>' → logprob: -2.3646137714385986
    3. '[
' → logprob: -5.489614009857178
    4. '.' → logprob: -5.864614009857178
    5. '[:]' → logprob: -6.489614009857178
    6. ')' → logprob: -6.489614009857178
    7. '[::-' → logprob: -7.114614009857178
    8. '.split' → logprob: -7.364614009857178
    9. '
' → logprob: -7.364614009857178
    10. '<|end|>' → logprob: -8.61461353302002

Token 66: ' _____' (ID: 120091)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3686290681362152
    2. '.pop' → logprob: -2.243628978729248
    3. '<|end|>' → logprob: -2.368628978729248
    4. '.' → logprob: -3.618628978729248
    5. '.split' → logprob: -3.993628978729248
    6. '___' → logprob: -4.368628978729248
    7. '_' → logprob: -4.618628978729248
    8. '.__' → logprob: -5.493628978729248
    9. '[::-' → logprob: -5.618628978729248
    10. '[_' → logprob: -5.618628978729248

Token 67: ' =' (ID: 314)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13355135917663574
    2. '.' → logprob: -3.2585513591766357
    3. '.append' → logprob: -3.3835513591766357
    4. '_' → logprob: -4.508551597595215
    5. '_.' → logprob: -5.258551597595215
    6. ' =' → logprob: -5.383551597595215
    7. '._' → logprob: -5.508551597595215
    8. '=' → logprob: -5.633551597595215
    9. '.pop' → logprob: -5.633551597595215
    10. '.__' → logprob: -5.883551597595215

Token 68: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.24708455801010132
    2. '_w' → logprob: -2.497084617614746
    3. ' deque' → logprob: -2.497084617614746
    4. '_de' → logprob: -3.747084617614746
    5. 'deque' → logprob: -4.122084617614746
    6. '_' → logprob: -4.372084617614746
    7. ' ' → logprob: -8.122084617614746
    8. ' __' → logprob: -8.747084617614746
    9. ' list' → logprob: -9.247084617614746
    10. ' []' → logprob: -9.247084617614746

Token 69: 'wheel' (ID: 67798)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0993552207946777
    2. '_' → logprob: -1.0993552207946777
    3. '<|end|>' → logprob: -2.4743552207946777
    4. '___' → logprob: -2.8493552207946777
    5. ' _' → logprob: -3.3493552207946777
    6. 'wheel' → logprob: -3.9743552207946777
    7. '-wheel' → logprob: -3.9743552207946777
    8. '__' → logprob: -4.099355220794678
    9. '____' → logprob: -4.224355220794678
    10. '_w' → logprob: -4.474355220794678

Token 70: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05702997371554375
    2. '()' → logprob: -3.682029962539673
    3. '((' → logprob: -3.932029962539673
    4. '([]' → logprob: -5.307030200958252
    5. '([' → logprob: -5.807030200958252
    6. '(()' → logprob: -7.682030200958252
    7. '(range' → logprob: -7.932030200958252
    8. '(max' → logprob: -8.057029724121094
    9. '(['' → logprob: -8.432029724121094
    10. '(__' → logprob: -8.682029724121094

Token 71: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' _____' (ID: 120091)
  Prédit: '_____'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_____' (adapté à ' _____') → logprob: -0.06859274953603745
    2. '____' → logprob: -3.8185927867889404
    3. ' _____' → logprob: -4.068592548370361
    4. '_' → logprob: -4.943592548370361
    5. '(' → logprob: -5.068592548370361
    6. 'for' → logprob: -5.318592548370361
    7. '___' → logprob: -6.193592548370361
    8. ')' → logprob: -6.943592548370361
    9. '()' → logprob: -7.193592548370361
    10. ' for' → logprob: -7.443592548370361

Token 73: '0' (ID: 15)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7412371039390564
    2. '.append' → logprob: -1.4912371635437012
    3. '().' → logprob: -1.4912371635437012
    4. '()' → logprob: -2.991237163543701
    5. '(' → logprob: -4.241237163543701
    6. '.extend' → logprob: -5.616237163543701
    7. '().__' → logprob: -6.741237163543701
    8. '=' → logprob: -7.491237163543701
    9. '.clear' → logprob: -8.366236686706543
    10. '(.' → logprob: -8.366236686706543

Token 74: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5646957159042358
    2. '.' → logprob: -1.3146957159042358
    3. '=' → logprob: -2.3146958351135254
    4. ' =' → logprob: -2.9396958351135254
    5. '.extend' → logprob: -5.189695835113525
    6. ' .' → logprob: -5.814695835113525
    7. '().' → logprob: -7.314695835113525
    8. '.=' → logprob: -8.064695358276367
    9. '.clear' → logprob: -8.314695358276367
    10. '.push' → logprob: -8.689695358276367

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5844672322273254
    2. ' ' → logprob: -0.8344672322273254
    3. '-' → logprob: -6.95946741104126
    4. '___' → logprob: -7.08446741104126
    5. '[]' → logprob: -7.08446741104126
    6. '_____' → logprob: -7.08446741104126
    7. '____' → logprob: -7.20946741104126
    8. ' []' → logprob: -7.45946741104126
    9. '1' → logprob: -7.45946741104126
    10. ' -' → logprob: -7.58446741104126

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025529921054840088
    2. '[]' → logprob: -5.150529861450195
    3. '___' → logprob: -5.650529861450195
    4. '____' → logprob: -5.650529861450195
    5. '_____' → logprob: -5.650529861450195
    6. '-' → logprob: -5.775529861450195
    7. 'len' → logprob: -6.275529861450195
    8. '1' → logprob: -6.775529861450195
    9. '_' → logprob: -7.400529861450195
    10. '__' → logprob: -7.900529861450195

Token 77: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' _____' (ID: 120091)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '1' (ID: 16)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3028199076652527
    2. '.' → logprob: -1.5528199672698975
    3. '0' → logprob: -4.052819728851318
    4. '=' → logprob: -4.677819728851318
    5. '1' → logprob: -5.177819728851318
    6. ' =' → logprob: -5.427819728851318
    7. 'append' → logprob: -5.552819728851318
    8. '.extend' → logprob: -5.552819728851318
    9. ' .' → logprob: -7.052819728851318
    10. '.clear' → logprob: -7.177819728851318

Token 81: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5230122208595276
    2. ' =' → logprob: -1.5230121612548828
    3. '=' → logprob: -1.8980121612548828
    4. '.' → logprob: -4.023012161254883
    5. '.extend' → logprob: -4.773012161254883
    6. ' .' → logprob: -5.523012161254883
    7. '<|end|>' → logprob: -5.648012161254883
    8. '.clear' → logprob: -6.773012161254883
    9. ' ' → logprob: -6.898012161254883
    10. ')' → logprob: -7.523012161254883

Token 82: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3248862624168396
    2. ' ' → logprob: -1.9498863220214844
    3. '_' → logprob: -2.9498863220214844
    4. ' _' → logprob: -4.199886322021484
    5. '[]' → logprob: -4.324886322021484
    6. '_____' → logprob: -4.449886322021484
    7. 'False' → logprob: -4.949886322021484
    8. ' []' → logprob: -5.074886322021484
    9. ' True' → logprob: -5.324886322021484
    10. ' False' → logprob: -5.449886322021484

Token 83: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6951709389686584
    2. '   ' → logprob: -1.5701708793640137
    3. '<|end|>' → logprob: -1.5701708793640137
    4. ':' → logprob: -3.3201708793640137
    5. ')' → logprob: -4.320170879364014
    6. '_' → logprob: -4.820170879364014
    7. '    ' → logprob: -5.195170879364014
    8. ' 
' → logprob: -5.195170879364014
    9. '  ' → logprob: -5.695170879364014
    10. ' for' → logprob: -6.070170879364014

Token 84: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2780637741088867
    2. '_' → logprob: -1.5280637741088867
    3. ' ' → logprob: -1.7780637741088867
    4. '<|end|>' → logprob: -2.2780637741088867
    5. ':' → logprob: -2.6530637741088867
    6. ')' → logprob: -2.7780637741088867
    7. '[' → logprob: -4.028063774108887
    8. 'for' (adapté à ' for') → logprob: -4.028063774108887
    9. '    ' → logprob: -4.153063774108887
    10. ' for' → logprob: -4.153063774108887

Token 86: ' ___' (ID: 14092)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7560603618621826
    2. ' ___' → logprob: -2.0060603618621826
    3. ' __' → logprob: -2.2560603618621826
    4. '_' → logprob: -2.7560603618621826
    5. ' ____' → logprob: -3.1310603618621826
    6. '___' → logprob: -3.1310603618621826
    7. 'c' → logprob: -3.3810603618621826
    8. ' c' → logprob: -3.7560603618621826
    9. '__' → logprob: -3.7560603618621826
    10. '____' → logprob: -4.381060600280762

Token 87: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7531381845474243
    2. '1' → logprob: -1.5031381845474243
    3. ' in' → logprob: -1.8781381845474243
    4. '_' → logprob: -2.0031380653381348
    5. '__' → logprob: -5.003138065338135
    6. '___' → logprob: -5.253138065338135
    7. '2' → logprob: -6.003138065338135
    8. '00' → logprob: -7.003138065338135
    9. '3' → logprob: -7.378138065338135
    10. ' ' → logprob: -7.503138065338135

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2824535369873047
    2. 'in' → logprob: -1.4074535369873047
    3. ',' → logprob: -7.032453536987305
    4. ' ' → logprob: -8.032453536987305
    5. '0' → logprob: -10.782453536987305
    6. '	in' → logprob: -11.032453536987305
    7. '  ' → logprob: -11.657453536987305
    8. ' ,' → logprob: -12.032453536987305
    9. '_' → logprob: -12.532453536987305
    10. '1' → logprob: -12.657453536987305

Token 89: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2885967791080475
    2. 'range' → logprob: -2.4135968685150146
    3. '___' → logprob: -2.6635968685150146
    4. ' ___' → logprob: -3.1635968685150146
    5. '____' → logprob: -3.4135968685150146
    6. ' ____' → logprob: -5.2885966300964355
    7. '_____' → logprob: -5.4135966300964355
    8. ' _____' → logprob: -5.5385966300964355
    9. ' ' → logprob: -7.5385966300964355
    10. ' __' → logprob: -7.8510966300964355

Token 90: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.15547816455364227
    2. '(' → logprob: -2.2804782390594482
    3. '(_)' → logprob: -3.9054782390594482
    4. '(_' → logprob: -4.280478000640869
    5. '(__' → logprob: -5.030478000640869
    6. '(-' → logprob: -7.280478000640869
    7. '((' → logprob: -8.780478477478027
    8. 'len' → logprob: -9.405478477478027
    9. '()' → logprob: -10.155478477478027
    10. '(
' → logprob: -10.155478477478027

Token 91: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002275746548548341
    2. '(__' → logprob: -6.1272759437561035
    3. '____' → logprob: -10.252275466918945
    4. '((' → logprob: -11.377275466918945
    5. '(_' → logprob: -11.627275466918945
    6. '(
' → logprob: -12.002275466918945
    7. ' (' → logprob: -12.252275466918945
    8. ')' → logprob: -12.377275466918945
    9. '(_)' → logprob: -12.502275466918945
    10. '(s' → logprob: -12.877275466918945

Token 92: '____' (ID: 2721)
  Prédit: '____'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '____' → logprob: -0.01438526064157486
    2. '___' → logprob: -4.764385223388672
    3. '(' → logprob: -5.639385223388672
    4. '_____' → logprob: -7.139385223388672
    5. '__' → logprob: -7.639385223388672
    6. ' ____' → logprob: -7.764385223388672
    7. '_' → logprob: -8.139385223388672
    8. '______' → logprob: -9.764385223388672
    9. ')' → logprob: -10.014385223388672
    10. '(__' → logprob: -10.139385223388672

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003295228350907564
    2. ')):' → logprob: -6.503295421600342
    3. '_' → logprob: -7.753295421600342
    4. ')):
' → logprob: -8.128294944763184
    5. ')' → logprob: -8.503294944763184
    6. '____' → logprob: -8.503294944763184
    7. '))' → logprob: -9.128294944763184
    8. '+' → logprob: -9.378294944763184
    9. '-' → logprob: -9.628294944763184
    10. ')+' → logprob: -9.753294944763184

Token 94: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4822074770927429
    2. ')):' → logprob: -1.8572075366973877
    3. '):
' → logprob: -2.2322075366973877
    4. ')):
' → logprob: -2.2322075366973877
    5. '-' → logprob: -5.482207298278809
    6. '))' → logprob: -5.607207298278809
    7. ')' → logprob: -6.732207298278809
    8. ' ):' → logprob: -6.982207298278809
    9. ' -' → logprob: -7.357207298278809
    10. ' ' → logprob: -7.732207298278809

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7050594687461853
    2. '   ' → logprob: -0.9550594687461853
    3. '<|end|>' → logprob: -3.08005952835083
    4. ' ' → logprob: -3.95505952835083
    5. ' if' → logprob: -4.08005952835083
    6. '    ' → logprob: -4.20505952835083
    7. ',' → logprob: -4.58005952835083
    8. '_' → logprob: -6.33005952835083
    9. ':' → logprob: -6.58005952835083
    10. ' _____' → logprob: -6.70505952835083

Token 96: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9493377208709717
    2. ' _____' → logprob: -1.1993377208709717
    3. '   ' → logprob: -2.8243377208709717
    4. '_____' → logprob: -3.0743377208709717
    5. '    ' → logprob: -3.1993377208709717
    6. 'if' (adapté à ' if') → logprob: -3.3243377208709717
    7. ' _' → logprob: -3.3243377208709717
    8. ' ' → logprob: -3.9493377208709717
    9. ' c' → logprob: -4.199337959289551
    10. ' token' → logprob: -4.449337959289551

Token 97: ' ____' (ID: 60861)
  Prédit: ' ____'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ____' → logprob: -0.3177570700645447
    2. ' _____' → logprob: -2.0677571296691895
    3. '____' → logprob: -2.1927571296691895
    4. ' ___' → logprob: -4.4427571296691895
    5. '_____' → logprob: -4.8177571296691895
    6. ' ' → logprob: -5.1927571296691895
    7. ' __' → logprob: -5.1927571296691895
    8. ' (' → logprob: -6.9427571296691895
    9. ' not' → logprob: -7.0677571296691895
    10. '    ' → logprob: -7.9427571296691895

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002585978072602302
    2. '[' → logprob: -8.750258445739746
    3. '_' → logprob: -10.250258445739746
    4. '0' → logprob: -10.625258445739746
    5. '____' → logprob: -11.125258445739746
    6. '_____' → logprob: -12.500258445739746
    7. '```' → logprob: -12.937758445739746
    8. '__' → logprob: -13.187758445739746
    9. '[i' → logprob: -14.000258445739746
    10. ' ' → logprob: -14.187758445739746

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016659092216286808
    2. '___' → logprob: -9.250166893005371
    3. '[i' → logprob: -10.250166893005371
    4. '.__' → logprob: -12.000166893005371
    5. '```' → logprob: -12.125166893005371
    6. '[
' → logprob: -12.750166893005371
    7. '[len' → logprob: -13.125166893005371
    8. ' [' → logprob: -13.500166893005371
    9. '>' → logprob: -13.625166893005371
    10. '   ' → logprob: -14.000166893005371

Token 100: '___' (ID: 11935)
  Prédit: '___'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.0005424272385425866
    2. ' ___' → logprob: -7.875542640686035
    3. '_____' → logprob: -10.000542640686035
    4. '__' → logprob: -10.250542640686035
    5. '____' → logprob: -10.625542640686035
    6. ']' → logprob: -11.000542640686035
    7. '_' → logprob: -11.000542640686035
    8. '[' → logprob: -12.500542640686035
    9. '_]' → logprob: -12.500542640686035
    10. '​' → logprob: -12.875542640686035

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9650025428272784e-05
    2. '0' → logprob: -10.750040054321289
    3. ' ' → logprob: -11.750040054321289
    4. '___' → logprob: -12.500040054321289
    5. '_' → logprob: -12.875040054321289
    6. ']' → logprob: -13.625040054321289
    7. '__' → logprob: -14.187540054321289
    8. '```' → logprob: -15.062540054321289
    9. ' ___' → logprob: -15.437540054321289
    10. '...' → logprob: -16.18754005432129

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41067996621131897
    2. ']==' → logprob: -1.1606799364089966
    3. ']!=' → logprob: -4.535679817199707
    4. '==' → logprob: -5.285679817199707
    5. ':' → logprob: -6.785679817199707
    6. ']>' → logprob: -7.035679817199707
    7. 'not' → logprob: -7.035679817199707
    8. ']>=' → logprob: -7.160679817199707
    9. ']<=' → logprob: -7.160679817199707
    10. ']<' → logprob: -7.410679817199707

Token 103: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.36612027883529663
    2. ' not' → logprob: -2.3661203384399414
    3. ' ==' → logprob: -2.4911203384399414
    4. '!=' → logprob: -2.6161203384399414
    5. ' in' → logprob: -3.7411203384399414
    6. '<' → logprob: -4.866120338439941
    7. 'not' → logprob: -5.366120338439941
    8. '>=' → logprob: -5.366120338439941
    9. '<=' → logprob: -5.616120338439941
    10. '>' → logprob: -5.741120338439941

Token 104: ' ____' (ID: 60861)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5578022003173828
    2. '____' → logprob: -1.6828022003173828
    3. ' ____' → logprob: -2.432802200317383
    4. ' ' → logprob: -2.682802200317383
    5. ' '' → logprob: -3.432802200317383
    6. ' _____' → logprob: -3.932802200317383
    7. ''' → logprob: -4.307802200317383
    8. ' ___' → logprob: -5.182802200317383
    9. '_____' → logprob: -5.307802200317383
    10. 'not' → logprob: -5.432802200317383

Token 105: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1695810556411743
    2. '[' → logprob: -1.2945810556411743
    3. '0' → logprob: -2.1695809364318848
    4. '____' → logprob: -2.4195809364318848
    5. '___' → logprob: -3.1695809364318848
    6. ':' → logprob: -3.1695809364318848
    7. '_' → logprob: -3.5445809364318848
    8. ' _____' → logprob: -3.5445809364318848
    9. '_____' → logprob: -4.169580936431885
    10. ' ___' → logprob: -4.544580936431885

Token 106: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.41760891675949097
    2. '       ' → logprob: -1.9176089763641357
    3. '           ' → logprob: -2.7926089763641357
    4. ' and' → logprob: -3.1676089763641357
    5. ':' → logprob: -3.4176089763641357
    6. ' :' → logprob: -4.417608737945557
    7. ' ' → logprob: -4.792608737945557
    8. '        ' → logprob: -5.167608737945557
    9. '    ' → logprob: -5.542608737945557
    10. '==' → logprob: -5.792608737945557

Token 107: ' if' (ID: 538)
  Prédit: ' _____'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _____' → logprob: -0.4472421109676361
    2. '           ' → logprob: -2.447242021560669
    3. '_____' → logprob: -2.447242021560669
    4. '       ' → logprob: -2.697242021560669
    5. ' continue' → logprob: -3.322242021560669
    6. '____' → logprob: -4.072242259979248
    7. ' _' → logprob: -4.197242259979248
    8. ' __' → logprob: -4.572242259979248
    9. 'continue' → logprob: -5.072242259979248
    10. ' ______' → logprob: -5.072242259979248

Token 108: ' not' (ID: 625)
  Prédit: ' _____'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _____' → logprob: -0.32945457100868225
    2. '_____' → logprob: -1.3294545412063599
    3. ' not' → logprob: -4.57945442199707
    4. ' ' → logprob: -6.70445442199707
    5. '____' → logprob: -6.82945442199707
    6. ' ___' → logprob: -7.07945442199707
    7. ' _' → logprob: -7.32945442199707
    8. ' ____' → logprob: -7.70445442199707
    9. ' __' → logprob: -7.82945442199707
    10. ' True' → logprob: -8.57945442199707

Token 109: ' _____' (ID: 120091)
  Prédit: ' _____'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _____' → logprob: -0.4189237356185913
    2. '_____' → logprob: -1.1689237356185913
    3. '____' → logprob: -3.668923854827881
    4. ' ____' → logprob: -5.293923854827881
    5. '______' → logprob: -8.168923377990723
    6. ' ______' → logprob: -8.418923377990723
    7. ' __' → logprob: -8.668923377990723
    8. ' _' → logprob: -8.918923377990723
    9. '__' → logprob: -9.918923377990723
    10. ' ' → logprob: -10.293923377990723

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2567161023616791
    2. ':' → logprob: -1.5067161321640015
    3. ' or' → logprob: -6.381716251373291
    4. ':
' → logprob: -7.506716251373291
    5. '.append' → logprob: -7.756716251373291
    6. ' and' → logprob: -7.881716251373291
    7. '.' → logprob: -8.006715774536133
    8. 'and' → logprob: -8.381715774536133
    9. '_' → logprob: -8.756715774536133
    10. '   ' → logprob: -8.881715774536133

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019097374752163887
    2. ':
' → logprob: -4.019097328186035
    3. ' and' → logprob: -8.019097328186035
    4. ' :' → logprob: -8.519097328186035
    5. '+=' → logprob: -9.144097328186035
    6. '==' → logprob: -9.269097328186035
    7. 'and' → logprob: -10.269097328186035
    8. ' +=' → logprob: -10.519097328186035
    9. ':return' → logprob: -10.644097328186035
    10. '=' → logprob: -10.769097328186035

Token 112: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3701450526714325
    2. ' _____' → logprob: -1.4951450824737549
    3. '_____' → logprob: -3.870145082473755
    4. '            ' → logprob: -4.370144844055176
    5. ':
' → logprob: -4.745144844055176
    6. '           ' → logprob: -4.745144844055176
    7. ' _' → logprob: -4.870144844055176
    8. '                ' → logprob: -5.120144844055176
    9. ' continue' → logprob: -5.620144844055176
    10. ':' → logprob: -5.995144844055176

Token 113: ' _____' (ID: 120091)
  Prédit: ' _____'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _____' → logprob: -0.18493393063545227
    2. '_____' (adapté à ' _____') → logprob: -1.9349339008331299
    3. '____' → logprob: -4.184934139251709
    4. '               ' → logprob: -5.684934139251709
    5. ' __' → logprob: -6.809934139251709
    6. ' _' → logprob: -7.059934139251709
    7. ' ____' → logprob: -7.184934139251709
    8. '                ' → logprob: -7.184934139251709
    9. ' ______' → logprob: -7.934934139251709
    10. '                   ' → logprob: -8.05993366241455

Token 114: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02935211732983589
    2. '.append' → logprob: -4.029352188110352
    3. '=' → logprob: -4.904352188110352
    4. '.' → logprob: -6.404352188110352
    5. '1' → logprob: -7.404352188110352
    6. 'append' → logprob: -8.154352188110352
    7. ' =' → logprob: -8.404352188110352
    8. '.extend' → logprob: -8.529352188110352
    9. '+=' → logprob: -8.654352188110352
    10. '._' → logprob: -9.029352188110352

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015035520773380995
    2. ' =' → logprob: -6.5015034675598145
    3. '=

' → logprob: -14.876503944396973
    4. ',' → logprob: -15.251503944396973
    5. '=None' → logprob: -15.376503944396973
    6. '=_' → logprob: -16.251502990722656
    7. '=
' → logprob: -16.376502990722656
    8. '=True' → logprob: -16.376502990722656
    9. '+=' → logprob: -16.876502990722656
    10. '=[]' → logprob: -17.251502990722656

Token 116: ' ___' (ID: 14092)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.04408808425068855
    2. '____' → logprob: -3.419088125228882
    3. '_____' → logprob: -5.294087886810303
    4. ' ___' → logprob: -6.044087886810303
    5. '__' → logprob: -6.669087886810303
    6. 'True' → logprob: -8.169088363647461
    7. '_' → logprob: -8.294088363647461
    8. '0' → logprob: -8.294088363647461
    9. 'None' → logprob: -8.294088363647461
    10. ' ____' → logprob: -8.544088363647461

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16903924942016602
    2. '0' → logprob: -2.669039249420166
    3. '[' → logprob: -3.169039249420166
    4. '___' → logprob: -3.544039249420166
    5. '_' → logprob: -5.044039249420166
    6. '__' → logprob: -5.794039249420166
    7. '_
' → logprob: -5.919039249420166
    8. '____' → logprob: -6.544039249420166
    9. '_____' → logprob: -7.669039249420166
    10. '__
' → logprob: -8.794038772583008

Token 118: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04432849958539009
    2. '               ' → logprob: -3.169328451156616
    3. '       ' → logprob: -6.794328689575195
    4. '            
' → logprob: -9.669328689575195
    5. ',' → logprob: -10.794328689575195
    6. '            ' → logprob: -11.169328689575195
    7. '
' → logprob: -11.169328689575195
    8. '0' → logprob: -11.294328689575195
    9. '                
' → logprob: -11.544328689575195
    10. ' else' → logprob: -11.669328689575195

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02620786242187023
    2. '               ' → logprob: -4.02620792388916
    3. '       ' → logprob: -5.27620792388916
    4. '
' → logprob: -7.40120792388916
    5. ' else' → logprob: -7.40120792388916
    6. 'else' → logprob: -7.90120792388916
    7. '            
' → logprob: -8.15120792388916
    8. '0' → logprob: -8.65120792388916
    9. '            ' → logprob: -9.27620792388916
    10. ',' → logprob: -9.40120792388916

Token 120: ' _____' (ID: 120091)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2845892012119293
    2. '           ' → logprob: -1.409589171409607
    3. '_____' (adapté à ' _____') → logprob: -6.0345892906188965
    4. '        ' → logprob: -8.159588813781738
    5. ' _____' → logprob: -9.409588813781738
    6. '   ' → logprob: -9.409588813781738
    7. '____' → logprob: -9.534588813781738
    8. 'else' → logprob: -9.534588813781738
    9. '_' → logprob: -9.659588813781738
    10. '0' → logprob: -9.659588813781738

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. '+=' → logprob: -13.375004768371582
    3. '_' → logprob: -13.625004768371582
    4. '=' → logprob: -14.250004768371582
    5. '۰' → logprob: -15.250004768371582
    6. ' +=' → logprob: -15.625004768371582
    7. ' ' → logprob: -16.250003814697266
    8. '1' → logprob: -16.250003814697266
    9. '+' → logprob: -16.750003814697266
    10. '٠' → logprob: -17.062503814697266

Token 122: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07893087714910507
    2. ' +=' → logprob: -2.5789308547973633
    3. '=' → logprob: -10.203930854797363
    4. '+' → logprob: -13.078930854797363
    5. ']+=' → logprob: -13.953930854797363
    6. ' =' → logprob: -14.453930854797363
    7. '+=(' → logprob: -16.07893180847168
    8. ' |=' → logprob: -16.57893180847168
    9. '+='' → logprob: -16.57893180847168
    10. '|' → logprob: -16.70393180847168

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001702675479464233
    2. ' ' → logprob: -6.376702785491943
    3. '+' → logprob: -15.626702308654785
    4. '2' → logprob: -16.6267032623291
    5. '0' → logprob: -17.1267032623291
    6. ' ' → logprob: -17.2517032623291
    7. '-' → logprob: -17.5017032623291
    8. '```' → logprob: -18.2517032623291
    9. '<|end|>' → logprob: -18.3767032623291
    10. '   ' → logprob: -18.5017032623291

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '-' → logprob: -17.250123977661133
    4. '<|end|>' → logprob: -17.375123977661133
    5. '```' → logprob: -17.625123977661133
    6. '+' → logprob: -17.750123977661133
    7. '   ' → logprob: -17.750123977661133
    8. 'len' → logprob: -18.000123977661133
    9. '_' → logprob: -18.125123977661133
    10. '2' → logprob: -18.312623977661133

Token 125: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03996485844254494
    2. ' else' → logprob: -3.4149649143218994
    3. 'else' → logprob: -6.03996467590332
    4. '   ' → logprob: -6.28996467590332
    5. ' elif' → logprob: -7.16496467590332
    6. '<|end|>' → logprob: -7.53996467590332
    7. '           ' → logprob: -8.78996467590332
    8. 'elif' → logprob: -8.78996467590332
    9. '    ' → logprob: -9.91496467590332
    10. ' ' → logprob: -10.16496467590332

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11557184904813766
    2. ' else' → logprob: -2.4905717372894287
    3. '   ' → logprob: -4.365571975708008
    4. 'else' → logprob: -4.490571975708008
    5. '           ' → logprob: -7.115571975708008
    6. ' elif' → logprob: -7.740571975708008
    7. '    ' → logprob: -8.240571975708008
    8. ' _' → logprob: -8.865571975708008
    9. 'elif' → logprob: -8.865571975708008
    10. '_' → logprob: -9.240571975708008

Token 127: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3458908796310425
    2. 'else' (adapté à ' else') → logprob: -1.3458908796310425
    3. '       ' → logprob: -3.720890998840332
    4. '   ' → logprob: -4.970890998840332
    5. ' elif' → logprob: -7.845890998840332
    6. 'elif' → logprob: -7.845890998840332
    7. '    ' → logprob: -10.345890998840332
    8. '	else' → logprob: -10.595890998840332
    9. ' ' → logprob: -11.095890998840332
    10. '[' → logprob: -11.345890998840332

Token 128: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4681682288646698
    2. '       ' → logprob: -1.2181682586669922
    3. ':' → logprob: -3.843168258666992
    4. ' if' → logprob: -4.093168258666992
    5. ':
' → logprob: -4.718168258666992
    6. ' _____' → logprob: -4.718168258666992
    7. '_____' → logprob: -4.843168258666992
    8. '   ' → logprob: -4.968168258666992
    9. 'if' → logprob: -5.843168258666992
    10. '               ' → logprob: -7.343168258666992

Token 129: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8473669290542603
    2. '           ' → logprob: -0.9723669290542603
    3. ' if' → logprob: -1.8473669290542603
    4. '   ' → logprob: -4.472366809844971
    5. 'if' → logprob: -4.972366809844971
    6. '        ' → logprob: -5.222366809844971
    7. ' _____' → logprob: -6.097366809844971
    8. '    ' → logprob: -6.347366809844971
    9. '_____' → logprob: -6.597366809844971
    10. '               ' → logprob: -6.722366809844971

Token 130: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5329169631004333
    2. ' if' → logprob: -0.9079169631004333
    3. '_____' → logprob: -4.907917022705078
    4. ' _____' → logprob: -7.532917022705078
    5. '   ' → logprob: -7.657917022705078
    6. '       ' → logprob: -8.157917022705078
    7. '    ' → logprob: -8.282917022705078
    8. '____' → logprob: -8.282917022705078
    9. 'for' → logprob: -9.157917022705078
    10. '           ' → logprob: -9.157917022705078

Token 131: ' _____' (ID: 120091)
  Prédit: ' _____'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _____' → logprob: -0.1428496092557907
    2. '_____' → logprob: -2.0178496837615967
    3. '____' → logprob: -9.267849922180176
    4. ' not' → logprob: -10.517849922180176
    5. ' ' → logprob: -10.767849922180176
    6. ' ____' → logprob: -11.142849922180176
    7. '    ' → logprob: -12.642849922180176
    8. 'not' → logprob: -13.142849922180176
    9. ' ___' → logprob: -13.142849922180176
    10. ' ______' → logprob: -13.267849922180176

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.610702363715973e-06
    2. '_' → logprob: -11.875009536743164
    3. '1' → logprob: -13.250009536743164
    4. '[' → logprob: -15.750009536743164
    5. ' ' → logprob: -15.750009536743164
    6. '<|end|>' → logprob: -15.750009536743164
    7. '۰' → logprob: -16.375009536743164
    8. 'and' → logprob: -16.625009536743164
    9. '   ' → logprob: -17.250009536743164
    10. '```' → logprob: -17.500009536743164

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6287869811058044
    2. '>' → logprob: -1.2537870407104492
    3. ':
' → logprob: -1.7537870407104492
    4. ' >' → logprob: -5.503787040710449
    5. ' and' → logprob: -5.878787040710449
    6. '>:' → logprob: -7.753787040710449
    7. 'and' → logprob: -8.37878704071045
    8. '   ' → logprob: -9.00378704071045
    9. '!=' → logprob: -9.25378704071045
    10. '>=' → logprob: -9.25378704071045

Token 134: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23999541997909546
    2. '           ' → logprob: -1.7399954795837402
    3. ' _____' → logprob: -4.36499547958374
    4. '_____' → logprob: -4.36499547958374
    5. ' if' → logprob: -5.23999547958374
    6. '       ' → logprob: -6.23999547958374
    7. ' for' → logprob: -6.61499547958374
    8. '____' → logprob: -6.98999547958374
    9. ' _' → logprob: -7.61499547958374
    10. '            ' → logprob: -7.73999547958374

Token 135: ' ____' (ID: 60861)
  Prédit: '_____'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_____' → logprob: -0.5143455862998962
    2. '               ' → logprob: -1.764345645904541
    3. ' _____' → logprob: -2.014345645904541
    4. ' for' → logprob: -3.639345645904541
    5. 'for' → logprob: -3.639345645904541
    6. '____' (adapté à ' ____') → logprob: -3.889345645904541
    7. ' if' → logprob: -4.889345645904541
    8. '           ' → logprob: -5.264345645904541
    9. 'if' → logprob: -5.264345645904541
    10. '            ' → logprob: -6.139345645904541

Token 136: '_.' (ID: 9881)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8391298055648804
    2. '1' → logprob: -1.7141298055648804
    3. '=' → logprob: -2.33912992477417
    4. 'if' → logprob: -2.83912992477417
    5. ' =' → logprob: -3.08912992477417
    6. '           ' → logprob: -3.08912992477417
    7. '               ' → logprob: -3.33912992477417
    8. ' if' → logprob: -4.46412992477417
    9. '_____' → logprob: -4.58912992477417
    10. 'for' → logprob: -4.71412992477417

Token 137: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.012604422867298126
    2. 'extend' → logprob: -4.387604236602783
    3. '.append' → logprob: -9.512604713439941
    4. ' append' → logprob: -11.887604713439941
    5. 'app' → logprob: -12.887604713439941
    6. '
' → logprob: -13.012604713439941
    7. '.extend' → logprob: -13.262604713439941
    8. 'appen' → logprob: -13.387604713439941
    9. '```' → logprob: -13.762604713439941
    10. 'update' → logprob: -13.887604713439941

Token 138: 'left' (ID: 4530)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.57608562707901
    2. '((' → logprob: -0.82608562707901
    3. '(_)' → logprob: -9.951086044311523
    4. '(_' → logprob: -10.326086044311523
    5. '((_' → logprob: -10.826086044311523
    6. '(
' → logprob: -11.201086044311523
    7. '(_,' → logprob: -11.951086044311523
    8. '(__' → logprob: -12.326086044311523
    9. '([' → logprob: -12.451086044311523
    10. '(((' → logprob: -12.576086044311523

Token 139: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3870517909526825
    2. '((' → logprob: -1.1370518207550049
    3. '([' → logprob: -10.262051582336426
    4. '(_' → logprob: -10.637051582336426
    5. '(_)' → logprob: -10.637051582336426
    6. '((_' → logprob: -10.887051582336426
    7. '(((' → logprob: -11.262051582336426
    8. '(__' → logprob: -11.262051582336426
    9. '_____' → logprob: -11.512051582336426
    10. '(
' → logprob: -11.512051582336426

Token 140: '_____' (ID: 174531)
  Prédit: '_____'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_____' → logprob: -0.22630862891674042
    2. '____' → logprob: -1.7263085842132568
    3. '(' → logprob: -3.726308584213257
    4. ' _____' → logprob: -7.726308822631836
    5. '___' → logprob: -10.851308822631836
    6. ' (' → logprob: -11.726308822631836
    7. '-----' → logprob: -11.851308822631836
    8. ')' → logprob: -12.476308822631836
    9. '(_,' → logprob: -12.851308822631836
    10. '    ' → logprob: -12.976308822631836

Token 141: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16070325672626495
    2. '0' → logprob: -1.9107033014297485
    3. '(' → logprob: -8.035703659057617
    4. '_____' → logprob: -10.660703659057617
    5. ' (' → logprob: -11.223203659057617
    6. '___' → logprob: -11.223203659057617
    7. '_' → logprob: -11.285703659057617
    8. '____' → logprob: -11.410703659057617
    9. ')' → logprob: -11.473203659057617
    10. '__' → logprob: -11.660703659057617

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6656825866666622e-05
    2. ' ,' → logprob: -11.75002670288086
    3. ',__' → logprob: -11.87502670288086
    4. ',
' → logprob: -12.37502670288086
    5. '-' → logprob: -13.12502670288086
    6. '___' → logprob: -13.50002670288086
    7. ',)' → logprob: -14.37502670288086
    8. '____' → logprob: -14.75002670288086
    9. '_____' → logprob: -14.75002670288086
    10. ')' → logprob: -14.87502670288086

Token 143: ' _____' (ID: 120091)
  Prédit: '_____'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_____' → logprob: -0.020780103281140327
    2. '____' → logprob: -3.895780086517334
    3. ' _____' → logprob: -8.520780563354492
    4. '___' → logprob: -10.520780563354492
    5. '(' → logprob: -12.145780563354492
    6. '______' → logprob: -13.020780563354492
    7. '​' → logprob: -13.895780563354492
    8. '________' → logprob: -13.895780563354492
    9. '_______' → logprob: -14.020780563354492
    10. '__' → logprob: -14.395780563354492

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ',' → logprob: -12.000015258789062
    3. '0' → logprob: -12.750015258789062
    4. ')' → logprob: -13.625015258789062
    5. '_' → logprob: -13.625015258789062
    6. ' ' → logprob: -13.875015258789062
    7. '))' → logprob: -14.250015258789062
    8. '_,' → logprob: -15.375015258789062
    9. '__' → logprob: -15.562515258789062
    10. '___' → logprob: -15.937515258789062

Token 145: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.08940384536981583
    2. '))' → logprob: -2.4644038677215576
    3. ')
' → logprob: -8.214404106140137
    4. ')' → logprob: -9.589404106140137
    5. '))
' → logprob: -9.964404106140137
    6. ',' → logprob: -11.089404106140137
    7. ' ))
' → logprob: -11.089404106140137
    8. '               ' → logprob: -11.214404106140137
    9. ',))
' → logprob: -11.964404106140137
    10. '));' → logprob: -11.964404106140137

Token 146: '               ' (ID: 506)
  Prédit: '_____'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_____' → logprob: -0.15355266630649567
    2. '           ' → logprob: -3.403552770614624
    3. '_' → logprob: -3.528552770614624
    4. '               ' → logprob: -3.653552770614624
    5. ' _____' → logprob: -3.903552770614624
    6. '____' → logprob: -4.528552532196045
    7. '<|end|>' → logprob: -5.153552532196045
    8. '       ' → logprob: -5.403552532196045
    9. '   ' → logprob: -5.778552532196045
    10. ' _' → logprob: -6.028552532196045

Token 147: ' _____' (ID: 120091)
  Prédit: '_____'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_____' (adapté à ' _____') → logprob: -0.001510335598140955
    2. '____' → logprob: -6.501510143280029
    3. ' _____' → logprob: -12.376510620117188
    4. '   ' → logprob: -13.501510620117188
    5. '______' → logprob: -14.001510620117188
    6. '    ' → logprob: -14.626510620117188
    7. '               ' → logprob: -15.126510620117188
    8. '_' → logprob: -15.876510620117188
    9. '___' → logprob: -16.126510620117188
    10. '           ' → logprob: -16.251510620117188

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -11.87501049041748
    3. '1' → logprob: -12.87501049041748
    4. ' ' → logprob: -15.43751049041748
    5. '=' → logprob: -15.43751049041748
    6. ' =' → logprob: -15.50001049041748
    7. '۰' → logprob: -16.750011444091797
    8. '_,' → logprob: -16.750011444091797
    9. '[' → logprob: -17.062511444091797
    10. '   ' → logprob: -17.187511444091797

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00043376852408982813
    2. ' =' → logprob: -7.750433921813965
    3. ',' → logprob: -12.750433921813965
    4. '0' → logprob: -16.00043296813965
    5. ' ' → logprob: -19.00043296813965
    6. '==' → logprob: -19.25043296813965
    7. '+=' → logprob: -19.37543296813965
    8. '=}' → logprob: -19.37543296813965
    9. '=

' → logprob: -19.37543296813965
    10. '=None' → logprob: -19.50043296813965

Token 150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -15.125009536743164
    4. '_' → logprob: -16.000009536743164
    5. '   ' → logprob: -16.500009536743164
    6. '۰' → logprob: -16.625009536743164
    7. '...' → logprob: -18.062509536743164
    8. '```' → logprob: -18.437509536743164
    9. '000' → logprob: -18.500009536743164
    10. '٠' → logprob: -18.562509536743164

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -15.500001907348633
    4. '۰' → logprob: -17.250001907348633
    5. '_' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '...' → logprob: -18.750001907348633
    8. '000' → logprob: -19.000001907348633
    9. 'None' → logprob: -19.250001907348633
    10. '٠' → logprob: -19.375001907348633

Token 152: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03239361569285393
    2. 'if' (adapté à ' if') → logprob: -4.782393455505371
    3. '<|end|>' → logprob: -4.782393455505371
    4. ')' → logprob: -5.157393455505371
    5. ' if' → logprob: -5.282393455505371
    6. '_' → logprob: -7.032393455505371
    7. '...' → logprob: -7.532393455505371
    8. '       ' → logprob: -7.782393455505371
    9. '#' → logprob: -8.032393455505371
    10. ' ' → logprob: -8.282393455505371

Token 155: ' _____' (ID: 120091)
  Prédit: ' _____'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _____' → logprob: -0.1397232860326767
    2. '_____' → logprob: -2.139723300933838
    3. ' not' → logprob: -4.639723300933838
    4. ' ____' → logprob: -6.139723300933838
    5. '____' → logprob: -7.889723300933838
    6. 'not' → logprob: -8.13972282409668
    7. ' ___' → logprob: -9.38972282409668
    8. ' _' → logprob: -9.51472282409668
    9. ' ______' → logprob: -11.26472282409668
    10. ' __' → logprob: -11.26472282409668

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.384836888173595e-05
    2. '_' → logprob: -10.2500638961792
    3. ':' → logprob: -11.1250638961792
    4. '   ' → logprob: -12.6250638961792
    5. ' ' → logprob: -13.2500638961792
    6. '_:' → logprob: -13.6250638961792
    7. '    ' → logprob: -13.7500638961792
    8. '[' → logprob: -13.8750638961792
    9. '```' → logprob: -14.1250638961792
    10. '_____' → logprob: -14.5000638961792

Token 157: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05548502132296562
    2. ':' → logprob: -2.9304850101470947
    3. '       ' → logprob: -8.055484771728516
    4. '   ' → logprob: -8.805484771728516
    5. '>' → logprob: -9.555484771728516
    6. '               ' → logprob: -11.305484771728516
    7. ':
' → logprob: -11.305484771728516
    8. ' and' → logprob: -11.430484771728516
    9. '):
' → logprob: -11.680484771728516
    10. ' :
' → logprob: -12.555484771728516

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02664034813642502
    2. '____' → logprob: -4.15164041519165
    3. '        ' → logprob: -5.52664041519165
    4. ' _____' → logprob: -5.90164041519165
    5. '               ' → logprob: -6.27664041519165
    6. '_____' → logprob: -6.90164041519165
    7. '________' → logprob: -8.651639938354492
    8. '           ' → logprob: -8.651639938354492
    9. '   ' → logprob: -8.901639938354492
    10. ' ____' → logprob: -9.026639938354492

Token 159: ' ____' (ID: 60861)
  Prédit: '____'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '____' (adapté à ' ____') → logprob: -0.00030924470047466457
    2. '_____' → logprob: -8.750308990478516
    3. ' ____' → logprob: -8.875308990478516
    4. '______' → logprob: -12.750308990478516
    5. '   ' → logprob: -12.875308990478516
    6. '    ' → logprob: -13.000308990478516
    7. ' _____' → logprob: -13.375308990478516
    8. '________' → logprob: -14.375308990478516
    9. '__' → logprob: -14.500308990478516
    10. '----' → logprob: -16.000308990478516

Token 160: '_.' (ID: 9881)
  Prédit: '_.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_.' → logprob: -0.0009769558673724532
    2. '.' → logprob: -7.000977039337158
    3. '.append' → logprob: -10.2509765625
    4. '____' → logprob: -11.7509765625
    5. '__.' → logprob: -12.3759765625
    6. '   ' → logprob: -12.3759765625
    7. '_' → logprob: -13.0009765625
    8. '[' → logprob: -13.3759765625
    9. '    ' → logprob: -13.5009765625
    10. '​.' → logprob: -13.5009765625

Token 161: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.664371848164592e-05
    2. '.append' → logprob: -11.500016212463379
    3. ' append' → logprob: -12.875016212463379
    4. 'appen' → logprob: -13.125016212463379
    5. '```' → logprob: -14.000016212463379
    6. 'app' → logprob: -15.125016212463379
    7. '	append' → logprob: -15.625016212463379
    8. 'p' → logprob: -15.750016212463379
    9. 'extend' → logprob: -16.125017166137695
    10. 'prepend' → logprob: -16.375017166137695

Token 162: '((' (ID: 2054)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00023119196703191847
    2. '((' → logprob: -8.37523078918457
    3. '(' → logprob: -15.75023078918457
    4. '```' → logprob: -16.00023078918457
    5. '((_' → logprob: -16.37523078918457
    6. 'opleft' → logprob: -16.62523078918457
    7. '   ' → logprob: -17.62523078918457
    8. '(((' → logprob: -17.75023078918457
    9. ' left' → logprob: -17.75023078918457
    10. '(([' → logprob: -17.87523078918457

Token 163: '_____' (ID: 174531)
  Prédit: '_____'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_____' → logprob: -9.555654105497524e-05
    2. '____' → logprob: -9.62509536743164
    3. '(' → logprob: -10.75009536743164
    4. ' _____' → logprob: -12.37509536743164
    5. '0' → logprob: -13.62509536743164
    6. '​' → logprob: -14.50009536743164
    7. '    ' → logprob: -15.12509536743164
    8. '-----' → logprob: -15.12509536743164
    9. '_' → logprob: -15.12509536743164
    10. '______' → logprob: -15.12509536743164

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.137130498653278e-05
    2. '_' → logprob: -9.625081062316895
    3. '_____' → logprob: -11.125081062316895
    4. '۰' → logprob: -15.250081062316895
    5. '____' → logprob: -16.25008201599121
    6. '０' → logprob: -17.00008201599121
    7. '__' → logprob: -17.00008201599121
    8. ')' → logprob: -17.50008201599121
    9. '___' → logprob: -17.62508201599121
    10. '_)' → logprob: -17.87508201599121

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ' ,' → logprob: -12.625007629394531
    3. '_,' → logprob: -13.875007629394531
    4. ')' → logprob: -14.250007629394531
    5. '),' → logprob: -14.625007629394531
    6. '))' → logprob: -15.250007629394531
    7. ',
' → logprob: -15.375007629394531
    8. '```' → logprob: -15.375007629394531
    9. '_____' → logprob: -15.375007629394531
    10. ',)' → logprob: -15.375007629394531

Token 166: ' _____' (ID: 120091)
  Prédit: '_____'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_____' → logprob: -0.03176732733845711
    2. '____' → logprob: -3.9067673683166504
    3. ' _____' → logprob: -4.53176736831665
    4. '0' → logprob: -7.90676736831665
    5. '(' → logprob: -11.906766891479492
    6. '​' → logprob: -12.156766891479492
    7. ')' → logprob: -12.406766891479492
    8. ' ' → logprob: -12.531766891479492
    9. '    ' → logprob: -12.656766891479492
    10. '___' → logprob: -13.281766891479492

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007318547577597201
    2. '0' → logprob: -7.250731945037842
    3. ')' → logprob: -12.500731468200684
    4. '_____' → logprob: -12.625731468200684
    5. '____' → logprob: -12.750731468200684
    6. ' ' → logprob: -13.250731468200684
    7. '-' → logprob: -13.375731468200684
    8. '__' → logprob: -13.563231468200684
    9. '___' → logprob: -13.813231468200684
    10. '_)' → logprob: -13.875731468200684

Token 168: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.28384411334991455
    2. ')' → logprob: -1.4088441133499146
    3. '))
' → logprob: -6.283843994140625
    4. ')
' → logprob: -7.158843994140625
    5. ')))' → logprob: -10.658843994140625
    6. '   ' → logprob: -11.783843994140625
    7. '       ' → logprob: -12.408843994140625
    8. ' ))' → logprob: -13.533843994140625
    9. '))

' → logprob: -13.783843994140625
    10. '+' → logprob: -14.033843994140625

Token 169: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' ______' (ID: 64429)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6406767964363098
    2. '_' → logprob: -1.390676736831665
    3. '_____' → logprob: -2.890676736831665
    4. ' _____' → logprob: -3.390676736831665
    5. '   ' → logprob: -3.640676736831665
    6. ' ' → logprob: -3.890676736831665
    7. '[' → logprob: -3.890676736831665
    8. '<|end|>' → logprob: -4.015676975250244
    9. '    ' → logprob: -4.515676975250244
    10. '____' → logprob: -5.515676975250244

Token 171: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9580299258232117
    2. '_' → logprob: -1.7080299854278564
    3. '0' → logprob: -1.8330299854278564
    4. '=' → logprob: -2.3330299854278564
    5. '.append' → logprob: -2.5830299854278564
    6. '.extend' → logprob: -3.3330299854278564
    7. ' =' → logprob: -3.4580299854278564
    8. '_.' → logprob: -4.333029747009277
    9. '<|end|>' → logprob: -5.583029747009277
    10. '.pop' → logprob: -5.958029747009277

Token 172: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2505367994308472
    2. '0' → logprob: -1.3755367994308472
    3. '____' → logprob: -2.6255369186401367
    4. '[]' → logprob: -2.7505369186401367
    5. 'len' → logprob: -2.7505369186401367
    6. 'False' → logprob: -2.8755369186401367
    7. '_____' → logprob: -3.3755369186401367
    8. '___' → logprob: -3.8755369186401367
    9. '_.' → logprob: -4.000536918640137
    10. 'None' → logprob: -4.125536918640137

Token 173: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09634209424257278
    2. '(_,' → logprob: -2.971342086791992
    3. '(_)' → logprob: -4.471342086791992
    4. '((' → logprob: -4.596342086791992
    5. '_____' → logprob: -4.846342086791992
    6. '(
' → logprob: -5.971342086791992
    7. '____' → logprob: -6.346342086791992
    8. '(_' → logprob: -6.596342086791992
    9. '<|end|>' → logprob: -6.846342086791992
    10. '(len' → logprob: -7.096342086791992

Token 174: '____' (ID: 2721)
  Prédit: '____'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '____' → logprob: -0.11976644396781921
    2. '_____' → logprob: -2.7447664737701416
    3. '(' → logprob: -3.2447664737701416
    4. '(_,' → logprob: -6.2447662353515625
    5. '______' → logprob: -6.4947662353515625
    6. '_' → logprob: -7.2447662353515625
    7. '([' → logprob: -7.3697662353515625
    8. '__' → logprob: -7.7447662353515625
    9. '___' → logprob: -7.8697662353515625
    10. '((' → logprob: -7.9947662353515625

Token 175: '_,' (ID: 14152)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29443874955177307
    2. '_,' → logprob: -2.1694388389587402
    3. '_)' → logprob: -2.5444388389587402
    4. '(' → logprob: -4.29443883895874
    5. '____' → logprob: -4.29443883895874
    6. '_____' → logprob: -4.29443883895874
    7. '_.' → logprob: -5.41943883895874
    8. ')' → logprob: -5.54443883895874
    9. '_(' → logprob: -6.29443883895874
    10. '(_,' → logprob: -6.29443883895874

Token 176: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.005242414306849241
    2. ' key' → logprob: -5.255242347717285
    3. 'lambda' → logprob: -12.130242347717285
    4. '(key' → logprob: -13.755242347717285
    5. ',key' → logprob: -14.255242347717285
    6. 'default' → logprob: -14.380242347717285
    7. '[key' → logprob: -15.505242347717285
    8. '   ' → logprob: -15.630242347717285
    9. '	key' → logprob: -15.880242347717285
    10. ' ' → logprob: -15.880242347717285

Token 177: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0110669219866395
    2. '=' → logprob: -4.511066913604736
    3. 'lambda' → logprob: -11.136067390441895
    4. '=_' → logprob: -12.386067390441895
    5. '=len' → logprob: -16.136066436767578
    6. '=int' → logprob: -16.511066436767578
    7. '```' → logprob: -16.761066436767578
    8. '=
' → logprob: -17.136066436767578
    9. '=None' → logprob: -17.761066436767578
    10. '_=' → logprob: -18.261066436767578

Token 178: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.001308213802985847
    2. ' lambda' → logprob: -6.751308441162109
    3. '_lambda' → logprob: -9.37630844116211
    4. '_' → logprob: -10.62630844116211
    5. '(lambda' → logprob: -10.87630844116211
    6. '_:' → logprob: -12.12630844116211
    7. '=lambda' → logprob: -12.62630844116211
    8. 'λ' → logprob: -14.75130844116211
    9. '   ' → logprob: -15.37630844116211
    10. 'operator' → logprob: -15.62630844116211

Token 179: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011064324527978897
    2. ':x' → logprob: -4.511064529418945
    3. ' :' → logprob: -11.136064529418945
    4. ':
' → logprob: -13.636064529418945
    5. 'x' → logprob: -15.386064529418945
    6. ':_' → logprob: -15.511064529418945
    7. ':int' → logprob: -16.636064529418945
    8. '_:' → logprob: -17.011064529418945
    9. '   ' → logprob: -17.261064529418945
    10. ':

' → logprob: -17.386064529418945

Token 180: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.16068103909492493
    2. 'x' → logprob: -1.9106810092926025
    3. ' lambda' → logprob: -8.035680770874023
    4. '(lambda' → logprob: -9.410680770874023
    5. ' x' → logprob: -11.035680770874023
    6. 'operator' → logprob: -11.160680770874023
    7. '=lambda' → logprob: -11.660680770874023
    8. '_lambda' → logprob: -11.660680770874023
    9. '_' → logprob: -13.160680770874023
    10. '0' → logprob: -13.785680770874023

Token 181: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.301394023466855e-05
    2. ':' → logprob: -9.750062942504883
    3. '0' → logprob: -12.875062942504883
    4. 'x' → logprob: -13.875062942504883
    5. '
' → logprob: -15.125062942504883
    6. '```' → logprob: -15.125062942504883
    7. ' ' → logprob: -16.125062942504883
    8. ':x' → logprob: -16.375062942504883
    9. '1' → logprob: -17.000062942504883
    10. ')[' → logprob: -17.000062942504883

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'lambda' → logprob: -14.625006675720215
    4. '1' → logprob: -15.750006675720215
    5. '[' → logprob: -15.875006675720215
    6. 'x' → logprob: -16.87500762939453
    7. '
' → logprob: -18.12500762939453
    8. '```' → logprob: -18.37500762939453
    9. '   ' → logprob: -18.62500762939453
    10. '
' → logprob: -18.75000762939453

Token 183: '])
' (ID: 5169)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.006654268596321344
    2. ')' → logprob: -5.131654262542725
    3. '[' → logprob: -7.381654262542725
    4. ' )[' → logprob: -9.881654739379883
    5. '])[' → logprob: -11.506654739379883
    6. '][' → logprob: -11.506654739379883
    7. '))[' → logprob: -11.756654739379883
    8. '())[' → logprob: -12.131654739379883
    9. ')
' → logprob: -12.381654739379883
    10. ')][' → logprob: -12.756654739379883

Token 184: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8481720089912415
    2. ')' → logprob: -1.3481719493865967
    3. '<|end|>' → logprob: -1.8481719493865967
    4. '[' → logprob: -2.2231719493865967
    5. ',' → logprob: -4.723172187805176
    6. '#' → logprob: -4.848172187805176
    7. '.' → logprob: -5.348172187805176
    8. '(' → logprob: -5.348172187805176
    9. ' ' → logprob: -5.598172187805176
    10. '+' → logprob: -5.598172187805176

Token 185: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29680776596069336
    2. '_' → logprob: -2.2968077659606934
    3. '[' → logprob: -2.6718077659606934
    4. '<|end|>' → logprob: -3.5468077659606934
    5. ' ' → logprob: -4.046807765960693
    6. '(' → logprob: -4.046807765960693
    7. '[:]' → logprob: -5.796807765960693
    8. ':' → logprob: -5.796807765960693
    9. '+' → logprob: -6.046807765960693
    10. '   ' → logprob: -6.296807765960693

Token 186: ' ______' (ID: 64429)
  Prédit: '______'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '______' → logprob: -0.11848942935466766
    2. ' ______' → logprob: -2.8684895038604736
    3. '____' → logprob: -3.1184895038604736
    4. ' ____' → logprob: -5.3684892654418945
    5. '_______' → logprob: -6.3684892654418945
    6. '_____' → logprob: -6.4934892654418945
    7. ' _____' → logprob: -7.1184892654418945
    8. '________' → logprob: -7.2434892654418945
    9. '__.' → logprob: -8.618489265441895
    10. '_.' → logprob: -8.618489265441895

Token 187: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008952652104198933
    2. ':' → logprob: -5.133952617645264
    3. '==' → logprob: -6.008952617645264
    4. ' ==' → logprob: -8.508953094482422
    5. ':
' → logprob: -9.258953094482422
    6. 'and' → logprob: -9.633953094482422
    7. ' and' → logprob: -9.633953094482422
    8. ' is' → logprob: -10.883953094482422
    9. ' [' → logprob: -11.008953094482422
    10. ' ' → logprob: -11.008953094482422

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009498104336671531
    2. ' ' → logprob: -7.125949859619141
    3. '1' → logprob: -9.37594985961914
    4. '_' → logprob: -11.25094985961914
    5. '[' → logprob: -11.31344985961914
    6. '```' → logprob: -12.18844985961914
    7. '
' → logprob: -12.81344985961914
    8. ':' → logprob: -13.18844985961914
    9. '   ' → logprob: -13.25094985961914
    10. ']' → logprob: -13.25094985961914

Token 189: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.4475520849227905
    2. ' ==' → logprob: -1.4475520849227905
    3. ')' → logprob: -1.6975520849227905
    4. ' >' → logprob: -2.19755220413208
    5. '>' → logprob: -2.57255220413208
    6. ' <' → logprob: -2.69755220413208
    7. ' >=' → logprob: -2.94755220413208
    8. '>=' → logprob: -4.44755220413208
    9. '<' → logprob: -4.57255220413208
    10. '+' → logprob: -5.44755220413208

Token 190: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0656044483184814
    2. ' ==' → logprob: -1.3156044483184814
    3. ' >' → logprob: -2.1906044483184814
    4. ' >=' → logprob: -2.4406044483184814
    5. '>' → logprob: -2.8156044483184814
    6. ' <' → logprob: -2.9406044483184814
    7. '>=' → logprob: -3.3156044483184814
    8. '<' → logprob: -3.8156044483184814
    9. ' <=' → logprob: -5.065604209899902
    10. '<=' → logprob: -6.065604209899902

Token 191: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016289837658405304
    2. 'len' → logprob: -4.766289710998535
    3. ' _' → logprob: -6.391289710998535
    4. '_*' → logprob: -6.766289710998535
    5. '(_' → logprob: -6.891289710998535
    6. '___' → logprob: -7.016289710998535
    7. '_[' → logprob: -7.516289710998535
    8. '__' → logprob: -8.016289710998535
    9. '_:' → logprob: -8.016289710998535
    10. '(len' → logprob: -8.516289710998535

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14481526613235474
    2. '*' → logprob: -2.76981520652771
    3. '_:' → logprob: -4.144815444946289
    4. ':
' → logprob: -4.769815444946289
    5. ' *' → logprob: -4.894815444946289
    6. ' and' → logprob: -4.894815444946289
    7. '_' → logprob: -5.144815444946289
    8. '2' → logprob: -5.644815444946289
    9. '0' → logprob: -5.644815444946289
    10. '+' → logprob: -5.644815444946289

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006424386985599995
    2. ' print' → logprob: -5.381424427032471
    3. '   ' → logprob: -7.256424427032471
    4. 'print' → logprob: -8.131423950195312
    5. ':' → logprob: -8.756423950195312
    6. ':
' → logprob: -9.381423950195312
    7. '
' → logprob: -9.506423950195312
    8. '    ' → logprob: -9.631423950195312
    9. '           ' → logprob: -9.756423950195312
    10. ',' → logprob: -9.756423950195312

Token 194: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09439540654420853
    2. ' print' → logprob: -3.094395399093628
    3. 'break' → logprob: -3.594395399093628
    4. ' break' → logprob: -4.969395637512207
    5. '   ' → logprob: -5.344395637512207
    6. '____' → logprob: -5.969395637512207
    7. '       ' → logprob: -6.719395637512207
    8. '_____' → logprob: -8.094395637512207
    9. '___' → logprob: -8.469395637512207
    10. ' __' → logprob: -8.469395637512207

Token 195: '(' (ID: 7)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.799777626991272
    2. '___' → logprob: -1.924777626991272
    3. '('' → logprob: -2.0497775077819824
    4. '____' → logprob: -2.2997775077819824
    5. '(' → logprob: -2.4247775077819824
    6. ''' → logprob: -2.4247775077819824
    7. '_' → logprob: -2.5497775077819824
    8. '("' → logprob: -2.5497775077819824
    9. '0' → logprob: -3.1747775077819824
    10. '______' → logprob: -4.299777507781982

Token 196: '____' (ID: 2721)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5160599946975708
    2. '"' → logprob: -1.7660599946975708
    3. '0' → logprob: -1.8910599946975708
    4. '___' → logprob: -2.0160598754882812
    5. '-' → logprob: -2.1410598754882812
    6. '____' → logprob: -2.5160598754882812
    7. ''' → logprob: -2.8910598754882812
    8. '_-' → logprob: -4.391059875488281
    9. '______' → logprob: -4.641059875488281
    10. '1' → logprob: -4.766059875488281

Token 197: ' *' (ID: 425)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3683227598667145
    2. '0' → logprob: -2.4933228492736816
    3. '_)' → logprob: -2.6183228492736816
    4. '_' → logprob: -3.1183228492736816
    5. '__)' → logprob: -3.3683228492736816
    6. '____' → logprob: -4.243322849273682
    7. '_,' → logprob: -4.368322849273682
    8. ')' → logprob: -4.743322849273682
    9. '___' → logprob: -5.243322849273682
    10. '__' → logprob: -5.493322849273682

Token 198: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1424369812011719
    2. '2' → logprob: -1.3924369812011719
    3. '_)' → logprob: -2.142436981201172
    4. '____' → logprob: -2.267436981201172
    5. '___' → logprob: -3.017436981201172
    6. '(_' → logprob: -3.017436981201172
    7. '______' → logprob: -3.392436981201172
    8. '__)' → logprob: -4.267436981201172
    9. ' ' → logprob: -4.392436981201172
    10. ' _' → logprob: -5.142436981201172

Token 199: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8442462682723999
    2. ')' → logprob: -0.9692462682723999
    3. '____' → logprob: -2.3442463874816895
    4. '______' → logprob: -3.4692463874816895
    5. ')
' → logprob: -3.5942463874816895
    6. '___' → logprob: -4.2192463874816895
    7. '_____' → logprob: -5.8442463874816895
    8. '_)' → logprob: -5.8442463874816895
    9. '*' → logprob: -6.0942463874816895
    10. '_______' → logprob: -6.2192463874816895

Token 200: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7499362826347351
    2. ' else' → logprob: -0.8749362826347351
    3. '   ' → logprob: -2.62493634223938
    4. ')' → logprob: -4.999936103820801
    5. 'elif' → logprob: -5.249936103820801
    6. ' ' → logprob: -5.374936103820801
    7. '       ' → logprob: -5.749936103820801
    8. ''' → logprob: -5.874936103820801
    9. '<|end|>' → logprob: -6.124936103820801
    10. 'continue' → logprob: -6.624936103820801

Token 201: ' quit' (ID: 27737)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039103150367736816
    2. '   ' → logprob: -3.4141030311584473
    3. 'continue' → logprob: -5.664103031158447
    4. 'else' → logprob: -7.164103031158447
    5. ' continue' → logprob: -7.414103031158447
    6. 'break' → logprob: -7.789103031158447
    7. '           ' → logprob: -10.414103507995605
    8. ' break' → logprob: -10.789103507995605
    9. '	continue' → logprob: -11.164103507995605
    10. ' else' → logprob: -11.414103507995605

Token 202: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0655306726694107
    2. '_' → logprob: -3.815530776977539
    3. ' else' → logprob: -4.690530776977539
    4. ' _' → logprob: -5.065530776977539
    5. 'else' → logprob: -5.065530776977539
    6. '0' → logprob: -5.315530776977539
    7. ' ' → logprob: -5.565530776977539
    8. '[' → logprob: -6.190530776977539
    9. ')' → logprob: -6.190530776977539
    10. '    ' → logprob: -6.690530776977539

Token 203: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6010590195655823
    2. '___' → logprob: -1.7260589599609375
    3. ' _____' → logprob: -2.3510589599609375
    4. ' ___' → logprob: -2.6010589599609375
    5. ' _' → logprob: -3.2260589599609375
    6. ' ' → logprob: -4.3510589599609375
    7. '_____' → logprob: -4.3510589599609375
    8. ' )' → logprob: -4.4760589599609375
    9. ')' → logprob: -4.4760589599609375
    10. '(' → logprob: -5.7260589599609375

Token 204: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9287843704223633
    2. ')' → logprob: -2.0537843704223633
    3. ' _____' → logprob: -2.0537843704223633
    4. '_____' → logprob: -2.5537843704223633
    5. ' _' → logprob: -2.9287843704223633
    6. '___' → logprob: -3.0537843704223633
    7. ' )' → logprob: -3.8037843704223633
    8. ' ' → logprob: -3.8037843704223633
    9. ' else' → logprob: -3.9287843704223633
    10. '(' → logprob: -4.178784370422363

Token 205: ' __' (ID: 2516)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -1.4490388631820679
    2. '_' → logprob: -1.5740388631820679
    3. '__' → logprob: -1.9490388631820679
    4. ' _' → logprob: -1.9490388631820679
    5. 'i' → logprob: -2.5740389823913574
    6. '____' → logprob: -3.1990389823913574
    7. '_____' → logprob: -3.3240389823913574
    8. ' i' → logprob: -3.5740389823913574
    9. ' __' → logprob: -3.8240389823913574
    10. ' ___' → logprob: -4.199038982391357

Token 206: 'x' (ID: 87)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7299336194992065
    2. '0' → logprob: -1.3549336194992065
    3. '_' → logprob: -1.9799336194992065
    4. '1' → logprob: -3.354933738708496
    5. 'in' → logprob: -3.479933738708496
    6. ' _' → logprob: -4.104933738708496
    7. '_,' → logprob: -4.729933738708496
    8. 'i' → logprob: -4.979933738708496
    9. ',' → logprob: -4.979933738708496
    10. '__' → logprob: -5.854933738708496

Token 207: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.36987730860710144
    2. ',' → logprob: -1.2448773384094238
    3. 'in' → logprob: -4.494877338409424
    4. '0' → logprob: -4.994877338409424
    5. '1' → logprob: -6.619877338409424
    6. ',_' → logprob: -7.494877338409424
    7. ' ,' → logprob: -7.619877338409424
    8. '_' → logprob: -8.119876861572266
    9. '_,' → logprob: -8.119876861572266
    10. '2' → logprob: -10.369876861572266

Token 208: ' __' (ID: 2516)
  Prédit: '(__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.7337319254875183
    2. '(' → logprob: -1.608731985092163
    3. '__' → logprob: -2.108731985092163
    4. ' (' → logprob: -2.608731985092163
    5. ' __' → logprob: -2.983731985092163
    6. '___' → logprob: -3.483731985092163
    7. ' (__' → logprob: -3.983731985092163
    8. '(_' → logprob: -5.233731746673584
    9. ' ___' → logprob: -5.983731746673584
    10. '(_,' → logprob: -6.108731746673584

Token 209: 'y' (ID: 88)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.7032467722892761
    2. '__,' → logprob: -1.078246831893921
    3. ',' → logprob: -2.953246831893921
    4. '(' → logprob: -3.203246831893921
    5. '0' → logprob: -3.703246831893921
    6. '___' → logprob: -4.453246593475342
    7. '_' → logprob: -4.453246593475342
    8. '__' → logprob: -4.703246593475342
    9. '(_,' → logprob: -6.078246593475342
    10. '____' → logprob: -6.078246593475342

Token 210: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931837797164917
    2. ' in' → logprob: -0.6931837797164917
    3. ',' → logprob: -10.818183898925781
    4. ' ' → logprob: -12.193183898925781
    5. ')' → logprob: -13.693183898925781
    6. '_in' → logprob: -13.943183898925781
    7. '
' → logprob: -14.005683898925781
    8. '```' → logprob: -14.130683898925781
    9. 'int' → logprob: -14.193183898925781
    10. 'In' → logprob: -14.693183898925781

Token 211: ' _____' (ID: 120091)
  Prédit: '_____'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_____' → logprob: -0.5850197076797485
    2. '____' → logprob: -1.0850197076797485
    3. ' _____' → logprob: -2.335019588470459
    4. ' ____' → logprob: -4.960019588470459
    5. '______' → logprob: -7.585019588470459
    6. ' reversed' → logprob: -8.960020065307617
    7. '_' → logprob: -9.085020065307617
    8. ' _' → logprob: -9.585020065307617
    9. '(' → logprob: -9.897520065307617
    10. ' list' → logprob: -10.272520065307617

Token 212: ':
' (ID: 734)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12958166003227234
    2. ' in' → logprob: -2.1295816898345947
    3. ':' → logprob: -6.004581451416016
    4. '_in' → logprob: -9.629581451416016
    5. ',' → logprob: -10.879581451416016
    6. ':
' → logprob: -11.004581451416016
    7. '   ' → logprob: -11.754581451416016
    8. '_' → logprob: -12.254581451416016
    9. ')' → logprob: -12.504581451416016
    10. ':_' → logprob: -12.504581451416016

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22484135627746582
    2. ':' → logprob: -2.474841356277466
    3. '   ' → logprob: -2.599841356277466
    4. '    ' → logprob: -4.724841117858887
    5. ' if' → logprob: -5.099841117858887
    6. '<|end|>' → logprob: -5.099841117858887
    7. ',' → logprob: -5.349841117858887
    8. ' ' → logprob: -5.849841117858887
    9. ':
' → logprob: -6.724841117858887
    10. ' _' → logprob: -6.724841117858887

Token 214: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22492343187332153
    2. 'if' (adapté à ' if') → logprob: -2.7249233722686768
    3. ' for' → logprob: -2.9749233722686768
    4. ' _' → logprob: -3.5999233722686768
    5. ' print' → logprob: -4.724923610687256
    6. '   ' → logprob: -4.974923610687256
    7. ' __' → logprob: -4.974923610687256
    8. 'for' → logprob: -5.474923610687256
    9. '       ' → logprob: -5.599923610687256
    10. '    ' → logprob: -5.724923610687256

Token 215: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6896558403968811
    2. ' __' → logprob: -0.8146558403968811
    3. '____' → logprob: -4.064655780792236
    4. '___' → logprob: -4.814655780792236
    5. '______' → logprob: -4.939655780792236
    6. ' ____' → logprob: -5.314655780792236
    7. '_' → logprob: -5.939655780792236
    8. '__.' → logprob: -5.939655780792236
    9. '_____' → logprob: -6.564655780792236
    10. ' _' → logprob: -6.689655780792236

Token 216: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07082662731409073
    2. 'y' → logprob: -2.820826530456543
    3. '0' → logprob: -5.445826530456543
    4. '[' → logprob: -5.695826530456543
    5. '_x' → logprob: -7.445826530456543
    6. '_y' → logprob: -8.070826530456543
    7. '_' → logprob: -9.320826530456543
    8. '1' → logprob: -10.758326530456543
    9. '+' → logprob: -10.945826530456543
    10. ' x' → logprob: -11.070826530456543

Token 217: ' <=' (ID: 5017)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5958055853843689
    2. '==' → logprob: -1.3458056449890137
    3. ' ==' → logprob: -2.4708056449890137
    4. '+' → logprob: -3.0958056449890137
    5. '<' → logprob: -4.345805644989014
    6. ' +' → logprob: -4.720805644989014
    7. 'is' → logprob: -4.970805644989014
    8. ' <' → logprob: -5.345805644989014
    9. '>=' → logprob: -5.470805644989014
    10. '!=' → logprob: -5.595805644989014

Token 218: ' _' (ID: 1175)
  Prédit: '____'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '____' → logprob: -1.3807846307754517
    2. '_' → logprob: -1.6307846307754517
    3. '______' → logprob: -1.8807846307754517
    4. 'len' → logprob: -2.505784511566162
    5. '___' → logprob: -2.880784511566162
    6. ' _' → logprob: -2.880784511566162
    7. ' ______' → logprob: -3.380784511566162
    8. '_______' → logprob: -3.505784511566162
    9. ' ____' → logprob: -3.630784511566162
    10. ' len' → logprob: -3.630784511566162

Token 219: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7529038786888123
    2. ' +' → logprob: -1.752903938293457
    3. ':' → logprob: -1.877903938293457
    4. ' and' → logprob: -2.752903938293457
    5. 'and' → logprob: -3.127903938293457
    6. '-' → logprob: -3.502903938293457
    7. ':
' → logprob: -4.002903938293457
    8. ' -' → logprob: -4.252903938293457
    9. ' or' → logprob: -4.752903938293457
    10. '____' → logprob: -5.502903938293457

Token 220: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3370121419429779
    2. '__' → logprob: -1.4620121717453003
    3. '(__' → logprob: -4.71201229095459
    4. ' _' → logprob: -4.96201229095459
    5. '___' → logprob: -5.08701229095459
    6. '____' → logprob: -5.08701229095459
    7. '_' → logprob: -5.46201229095459
    8. ' ____' → logprob: -5.71201229095459
    9. '_____' → logprob: -5.83701229095459
    10. ' ___' → logprob: -5.96201229095459

Token 221: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9206807017326355
    2. 'x' → logprob: -0.9206807017326355
    3. 'y' → logprob: -1.6706807613372803
    4. '[' → logprob: -4.920680522918701
    5. ' ' → logprob: -6.420680522918701
    6. '1' → logprob: -6.795680522918701
    7. ' y' → logprob: -6.920680522918701
    8. '_' → logprob: -7.295680522918701
    9. ' x' → logprob: -7.420680522918701
    10. '_x' → logprob: -7.483180522918701

Token 222: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5122781991958618
    2. ' +' → logprob: -1.7622781991958618
    3. '>=' → logprob: -2.6372780799865723
    4. '+' → logprob: -3.0122780799865723
    5. ' ==' → logprob: -3.1372780799865723
    6. ' <' → logprob: -3.7622780799865723
    7. '==' → logprob: -4.012278079986572
    8. '[' → logprob: -5.137278079986572
    9. '<' → logprob: -5.512278079986572
    10. ' >' → logprob: -5.762278079986572

Token 223: ' ______' (ID: 64429)
  Prédit: '______'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '______' → logprob: -0.4730710983276367
    2. ' ______' → logprob: -1.5980710983276367
    3. '____' → logprob: -2.7230710983276367
    4. '_______' → logprob: -3.7230710983276367
    5. ' ' → logprob: -3.9730710983276367
    6. '_' → logprob: -3.9730710983276367
    7. ' _' → logprob: -4.348071098327637
    8. '1' → logprob: -4.848071098327637
    9. ' ____' → logprob: -4.973071098327637
    10. ' _.' → logprob: -5.598071098327637

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003196154139004648
    2. ':' → logprob: -9.125319480895996
    3. '_[' → logprob: -10.000319480895996
    4. ' [' → logprob: -10.500319480895996
    5. '0' → logprob: -10.750319480895996
    6. '+' → logprob: -11.125319480895996
    7. '```' → logprob: -11.250319480895996
    8. ':
' → logprob: -11.625319480895996
    9. ' +' → logprob: -11.625319480895996
    10. '__[' → logprob: -11.875319480895996

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003459775587543845
    2. ' ' → logprob: -6.253459930419922
    3. '[' → logprob: -6.628459930419922
    4. '_' → logprob: -9.003459930419922
    5. '1' → logprob: -10.940959930419922
    6. '```' → logprob: -11.378459930419922
    7. '
' → logprob: -11.690959930419922
    8. '   ' → logprob: -11.878459930419922
    9. '  ' → logprob: -12.253459930419922
    10. '(' → logprob: -12.878459930419922

Token 226: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8516990542411804
    2. ':
' → logprob: -1.6016991138458252
    3. ' and' → logprob: -1.8516991138458252
    4. '+' → logprob: -1.8516991138458252
    5. ' +' → logprob: -3.476699113845825
    6. '):
' → logprob: -4.976698875427246
    7. ']:
' → logprob: -4.976698875427246
    8. '-' → logprob: -5.851698875427246
    9. ']:' → logprob: -5.976698875427246
    10. 'and' → logprob: -6.226698875427246

Token 227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08866371959447861
    2. '       ' → logprob: -3.3386638164520264
    3. ':' → logprob: -4.463663578033447
    4. '<|end|>' → logprob: -4.463663578033447
    5. ':
' → logprob: -5.338663578033447
    6. ',' → logprob: -5.713663578033447
    7. '        ' → logprob: -6.088663578033447
    8. '               ' → logprob: -6.338663578033447
    9. '_' → logprob: -6.588663578033447
    10. '            ' → logprob: -6.713663578033447

Token 228: ' ___' (ID: 14092)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.13009914755821228
    2. 'print' → logprob: -3.130099058151245
    3. ' __' → logprob: -4.005099296569824
    4. ' _' → logprob: -4.380099296569824
    5. ' break' → logprob: -4.630099296569824
    6. ' _____' → logprob: -5.005099296569824
    7. ' ____' → logprob: -5.130099296569824
    8. '       ' → logprob: -5.380099296569824
    9. '           ' → logprob: -5.505099296569824
    10. ' for' → logprob: -5.630099296569824

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47095638513565063
    2. '0' → logprob: -1.8459563255310059
    3. '_' → logprob: -2.345956325531006
    4. '=' → logprob: -2.595956325531006
    5. '1' → logprob: -4.470956325531006
    6. ' +=' → logprob: -4.720956325531006
    7. '_=' → logprob: -5.345956325531006
    8. '+=' → logprob: -5.470956325531006
    9. 'print' → logprob: -6.220956325531006
    10. '__' → logprob: -6.470956325531006

Token 230: ' min' (ID: 1349)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '___' → logprob: -0.6135333776473999
    2. '____' → logprob: -0.8635333776473999
    3. '__' → logprob: -4.1135334968566895
    4. '(' → logprob: -5.1135334968566895
    5. '_____' → logprob: -5.4885334968566895
    6. '(__' → logprob: -5.8635334968566895
    7. '______' → logprob: -5.9885334968566895
    8. '_' → logprob: -7.1135334968566895
    9. '__.' → logprob: -7.2385334968566895
    10. ''' → logprob: -7.9885334968566895

Token 231: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.5919197797775269
    2. '(' → logprob: -0.8419197797775269
    3. '((' → logprob: -5.091919898986816
    4. '([' → logprob: -5.466919898986816
    5. '(
' → logprob: -6.841919898986816
    6. '___' → logprob: -6.966919898986816
    7. '(_' → logprob: -6.966919898986816
    8. '(len' → logprob: -7.091919898986816
    9. '(_,' → logprob: -7.341919898986816
    10. ' (' → logprob: -9.216919898986816

Token 232: '_,' (ID: 14152)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.7502942085266113
    2. '_' → logprob: -2.0002942085266113
    3. '(__' → logprob: -2.1252942085266113
    4. '(' → logprob: -2.6252942085266113
    5. '__' → logprob: -2.8752942085266113
    6. '_,' → logprob: -3.2502942085266113
    7. ' ___' → logprob: -3.7502942085266113
    8. '(_' → logprob: -4.000294208526611
    9. '__,' → logprob: -4.250294208526611
    10. '(_,' → logprob: -4.750294208526611

Token 233: ' ____' (ID: 60861)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -1.131501317024231
    2. ' __' → logprob: -1.131501317024231
    3. ' key' → logprob: -1.881501317024231
    4. 'key' → logprob: -2.3815011978149414
    5. '___' → logprob: -2.8815011978149414
    6. ' ___' → logprob: -4.256501197814941
    7. '_' → logprob: -5.381501197814941
    8. ' _' → logprob: -5.506501197814941
    9. 'len' → logprob: -5.506501197814941
    10. ' ' → logprob: -5.881501197814941

Token 234: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.548264741897583
    2. ')' → logprob: -1.048264741897583
    3. '1' → logprob: -4.298264503479004
    4. '__' → logprob: -4.298264503479004
    5. '+' → logprob: -4.798264503479004
    6. ')
' → logprob: -4.923264503479004
    7. ')[' → logprob: -5.298264503479004
    8. '[:' → logprob: -5.548264503479004
    9. '__[' → logprob: -5.548264503479004
    10. '__)' → logprob: -6.048264503479004

Token 235: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42290300130844116
    2. ')' → logprob: -1.172903060913086
    3. '+' → logprob: -4.172903060913086
    4. '[:' → logprob: -4.797903060913086
    5. ')
' → logprob: -5.547903060913086
    6. '[:-' → logprob: -6.297903060913086
    7. '__' → logprob: -6.547903060913086
    8. ' +' → logprob: -7.672903060913086
    9. '[-' → logprob: -7.797903060913086
    10. '[(' → logprob: -7.922903060913086

Token 236: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06205865740776062
    2. ' __' → logprob: -3.187058687210083
    3. ':' → logprob: -4.687058448791504
    4. '___' → logprob: -6.312058448791504
    5. '__:' → logprob: -7.062058448791504
    6. '])' → logprob: -7.187058448791504
    7. '_' → logprob: -7.312058448791504
    8. '-' → logprob: -7.562058448791504
    9. '::__' → logprob: -7.812058448791504
    10. '(__' → logprob: -7.812058448791504

Token 237: 'y' (ID: 88)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11179487407207489
    2. ' __' → logprob: -2.486794948577881
    3. '])' → logprob: -4.986794948577881
    4. '___' → logprob: -5.736794948577881
    5. 'y' → logprob: -5.861794948577881
    6. '_y' → logprob: -6.361794948577881
    7. '__)' → logprob: -6.611794948577881
    8. ':' → logprob: -6.986794948577881
    9. '_' → logprob: -7.361794948577881
    10. '__:' → logprob: -7.361794948577881

Token 238: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3357715606689453
    2. '+' → logprob: -1.7107715606689453
    3. '-' → logprob: -2.9607715606689453
    4. '])' → logprob: -3.8357715606689453
    5. ' +' → logprob: -4.460771560668945
    6. ' -' → logprob: -4.960771560668945
    7. '__' → logprob: -5.210771560668945
    8. ':],' → logprob: -6.960771560668945
    9. ':])
' → logprob: -6.960771560668945
    10. '   ' → logprob: -7.585771560668945

Token 239: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02785503678023815
    2. ' __' → logprob: -4.527854919433594
    3. '___' → logprob: -4.652854919433594
    4. '_y' → logprob: -6.152854919433594
    5. '_' → logprob: -6.402854919433594
    6. '_____' → logprob: -7.402854919433594
    7. '])' → logprob: -7.777854919433594
    8. '____' → logprob: -8.027854919433594
    9. ']' → logprob: -8.652854919433594
    10. 'y' → logprob: -8.777854919433594

Token 240: 'y' (ID: 88)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.34635496139526367
    2. '_y' → logprob: -1.7213549613952637
    3. 'y' → logprob: -2.3463549613952637
    4. ' __' → logprob: -4.721354961395264
    5. ' y' → logprob: -5.846354961395264
    6. '+y' → logprob: -6.221354961395264
    7. '___' → logprob: -6.596354961395264
    8. '])' → logprob: -7.346354961395264
    9. ']' → logprob: -7.471354961395264
    10. '_' → logprob: -7.596354961395264

Token 241: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06458746641874313
    2. ' +' → logprob: -2.814587354660034
    3. '-' → logprob: -6.689587593078613
    4. '__' → logprob: -7.314587593078613
    5. ' -' → logprob: -8.564587593078613
    6. '___' → logprob: -8.939587593078613
    7. '   ' → logprob: -9.314587593078613
    8. ' ' → logprob: -9.814587593078613
    9. '-_' → logprob: -9.814587593078613
    10. '_' → logprob: -9.939587593078613

Token 242: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.052725084125995636
    2. '_]' → logprob: -3.052725076675415
    3. '_*' → logprob: -6.552725315093994
    4. '_x' → logprob: -7.927725315093994
    5. '_[' → logprob: -8.052724838256836
    6. ' _' → logprob: -8.427724838256836
    7. '_-' → logprob: -8.427724838256836
    8. '___' → logprob: -8.677724838256836
    9. '_
' → logprob: -8.677724838256836
    10. '__' → logprob: -8.677724838256836

Token 243: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2564556300640106
    2. '])
' → logprob: -1.506455659866333
    3. '])
' → logprob: -6.131455421447754
    4. '],' → logprob: -7.381455421447754
    5. ']' → logprob: -7.756455421447754
    6. '][' → logprob: -8.256455421447754
    7. '-' → logprob: -8.506455421447754
    8. ' ])
' → logprob: -8.756455421447754
    9. ' ])' → logprob: -8.756455421447754
    10. '+' → logprob: -9.381455421447754

Token 244: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6159700155258179
    2. '<|end|>' → logprob: -1.3659700155258179
    3. ')' → logprob: -1.9909700155258179
    4. ' ' → logprob: -3.2409701347351074
    5. ''' → logprob: -4.740970134735107
    6. '[' → logprob: -5.615970134735107
    7. '\n' → logprob: -5.615970134735107
    8. '\' → logprob: -6.115970134735107
    9. ' 
' → logprob: -6.240970134735107
    10. '```' → logprob: -6.615970134735107

Token 245: ' ___' (ID: 14092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' ''.' (ID: 105941)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.38732823729515076
    2. ' ___' → logprob: -1.7623282670974731
    3. '__' → logprob: -3.1373281478881836
    4. '____' → logprob: -3.1373281478881836
    5. ' __' → logprob: -3.3873281478881836
    6. ' ____' → logprob: -4.262328147888184
    7. '_' → logprob: -5.637328147888184
    8. ' _' → logprob: -6.137328147888184
    9. '_.' → logprob: -6.887328147888184
    10. ' ''.' → logprob: -7.012328147888184

Token 248: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.000156577822053805
    2. 'replace' → logprob: -8.87515640258789
    3. ' join' → logprob: -12.25015640258789
    4. '___' → logprob: -12.75015640258789
    5. '____' → logprob: -13.25015640258789
    6. '__' → logprob: -13.50015640258789
    7. 'format' → logprob: -13.75015640258789
    8. '```' → logprob: -14.00015640258789
    9. 'strip' → logprob: -14.37515640258789
    10. 'jo' → logprob: -14.75015640258789

Token 249: '(list' (ID: 13116)
  Prédit: '(__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -1.1391537189483643
    2. '(' → logprob: -1.5141537189483643
    3. '(list' → logprob: -1.6391537189483643
    4. '([' → logprob: -2.5141537189483643
    5. '(_)' → logprob: -2.7641537189483643
    6. '(['' → logprob: -3.1391537189483643
    7. '((' → logprob: -3.2641537189483643
    8. '(_' → logprob: -3.7641537189483643
    9. '([]' → logprob: -5.639153480529785
    10. '(chr' → logprob: -5.639153480529785

Token 250: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.005158334970474243
    2. '(' → logprob: -5.505158424377441
    3. '___' → logprob: -7.880158424377441
    4. '(_' → logprob: -7.880158424377441
    5. '((' → logprob: -9.380158424377441
    6. '(
' → logprob: -9.755158424377441
    7. '(set' → logprob: -10.505158424377441
    8. ')' → logprob: -10.630158424377441
    9. '(_)' → logprob: -10.880158424377441
    10. '(map' → logprob: -11.005158424377441

Token 251: '_' (ID: 62)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.28346240520477295
    2. '_' → logprob: -1.658462405204773
    3. '_)' → logprob: -3.1584625244140625
    4. '(' → logprob: -5.6584625244140625
    5. '__' → logprob: -5.7834625244140625
    6. '(__' → logprob: -5.9084625244140625
    7. '_[' → logprob: -7.0334625244140625
    8. '_(' → logprob: -7.2834625244140625
    9. '(_' → logprob: -7.2834625244140625
    10. '(re' → logprob: -7.5334625244140625

Token 252: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7287086248397827
    2. '))' → logprob: -0.9787086248397827
    3. ')+' → logprob: -2.4787087440490723
    4. ')[' → logprob: -2.9787087440490723
    5. '[' → logprob: -5.978708744049072
    6. '()))' → logprob: -7.228708744049072
    7. '[::-' → logprob: -7.478708744049072
    8. '())' → logprob: -7.728708744049072
    9. '___' → logprob: -8.103708267211914
    10. '[:' → logprob: -8.103708267211914

Token 253: '::-' (ID: 96612)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6285726428031921
    2. '___' → logprob: -1.378572702407837
    3. '______' → logprob: -3.128572702407837
    4. '____' → logprob: -3.253572702407837
    5. ':' → logprob: -3.628572702407837
    6. '_____' → logprob: -3.753572702407837
    7. '_:' → logprob: -4.003572463989258
    8. '-' → logprob: -4.003572463989258
    9. '__' → logprob: -4.128572463989258
    10. '_)' → logprob: -5.378572463989258

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.800739018013701e-05
    2. '-' → logprob: -11.6250581741333
    3. ' ' → logprob: -11.8750581741333
    4. '```' → logprob: -11.8750581741333
    5. '...' → logprob: -12.2500581741333
    6. 'v' → logprob: -12.5000581741333
    7. '])' → logprob: -13.0000581741333
    8. ']' → logprob: -13.0000581741333
    9. 'ed' → logprob: -13.2500581741333
    10. ')' → logprob: -13.2500581741333

Token 255: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05530964583158493
    2. '))' → logprob: -3.055309534072876
    3. '])' → logprob: -5.055309772491455
    4. ')
' → logprob: -9.305309295654297
    5. ' )' → logprob: -9.430309295654297
    6. ')))' → logprob: -10.055309295654297
    7. '})' → logprob: -10.555309295654297
    8. '+' → logprob: -10.930309295654297
    9. ')])' → logprob: -11.055309295654297
    10. ')+' → logprob: -11.305309295654297

Token 256: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '(__' (ID: 11782)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9540343284606934
    2. '()' → logprob: -1.0790343284606934
    3. '(__' → logprob: -1.5790343284606934
    4. '___' → logprob: -2.8290343284606934
    5. '(_)' → logprob: -5.829034328460693
    6. '('' → logprob: -6.079034328460693
    7. '_' → logprob: -6.454034328460693
    8. '(_' → logprob: -7.954034328460693
    9. '().__' → logprob: -8.204034805297852
    10. '('_' → logprob: -8.329034805297852

Token 258: '_' (ID: 62)
  Prédit: '_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.05367717519402504
    2. '_' → logprob: -3.0536770820617676
    3. ')' → logprob: -6.178677082061768
    4. '__)' → logprob: -6.428677082061768
    5. '___' → logprob: -7.303677082061768
    6. '_)
' → logprob: -8.053677558898926
    7. '0' → logprob: -8.553677558898926
    8. '3' → logprob: -10.428677558898926
    9. '__' → logprob: -10.678677558898926
    10. '____' → logprob: -11.428677558898926

Token 259: '[-' (ID: 17503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.7053759519476444e-05
    2. ' )' → logprob: -10.125057220458984
    3. '[' → logprob: -12.375057220458984
    4. ')
' → logprob: -13.125057220458984
    5. ')#' → logprob: -13.125057220458984
    6. '```' → logprob: -13.500057220458984
    7. '#' → logprob: -13.625057220458984
    8. '')' → logprob: -13.750057220458984
    9. '))' → logprob: -14.125057220458984
    10. ')`' → logprob: -14.250057220458984

Token 260: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2681805193424225
    2. '1' → logprob: -1.5181804895401
    3. '_)' → logprob: -4.6431803703308105
    4. '2' → logprob: -6.5181803703308105
    5. '_]' → logprob: -7.6431803703308105
    6. '5' → logprob: -7.7681803703308105
    7. ' ' → logprob: -7.8931803703308105
    8. '7' → logprob: -8.143180847167969
    9. '3' → logprob: -8.268180847167969
    10. '_
' → logprob: -8.518180847167969

Token 261: '::-' (ID: 96612)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.08932317793369293
    2. ')' → logprob: -2.4643232822418213
    3. '))' → logprob: -8.839323043823242
    4. ' ])' → logprob: -9.964323043823242
    5. '})' → logprob: -10.089323043823242
    6. ' )' → logprob: -10.339323043823242
    7. ']' → logprob: -10.339323043823242
    8. ')])' → logprob: -10.464323043823242
    9. '])
' → logprob: -11.339323043823242
    10. '>)' → logprob: -11.589323043823242

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. '-' → logprob: -15.000000953674316
    4. '])' → logprob: -15.125000953674316
    5. '2' → logprob: -17.250001907348633
    6. '
' → logprob: -17.375001907348633
    7. ']' → logprob: -17.500001907348633
    8. '```' → logprob: -17.875001907348633
    9. '   ' → logprob: -19.562501907348633
    10. '﻿' → logprob: -19.625001907348633

Token 263: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015823511639609933
    2. '])' → logprob: -6.626582145690918
    3. '))' → logprob: -8.376582145690918
    4. ')
' → logprob: -11.376582145690918
    5. ')])' → logprob: -12.501582145690918
    6. ' )' → logprob: -12.626582145690918
    7. '})' → logprob: -12.751582145690918
    8. '`)' → logprob: -13.876582145690918
    9. '>)' → logprob: -14.251582145690918
    10. '）' → logprob: -14.626582145690918


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 261
Tokens correctement prédits (1ère position, stricte): 85
Tokens correctement prédits (1ère position, avec adaptation): 90
Tokens correctement prédits (top 10): 187
Précision stricte (1ère position): 32.57%
Précision adaptée (1ère position): 34.48%
Précision (top 10): 71.65%
================================================================================
