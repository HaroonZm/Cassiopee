================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import heapq
import math
import random
import sys
from collections import Counter, defaultdict, deque
from decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal
from functools import lru_cache, reduce
from itertools import combinations, combinations_with_replacement, product, permutations
from operator import add, mul, sub

sys.setrecursionlimit(100000)
input = sys.stdin.readline

N = int(input())
S = input().strip()

if S[0] != 'B' or S[-1] != 'B':
    print(0)
    sys.exit(0)

LR = [''] * N * 2
l = 0
ans = 1
m = 10**9+7

def mod_add(a, b):
    return (a + b) % m
def mod_sub(a, b):
    return (a - b) % m
def mod_mul(a, b):
    return ((a % m) * (b % m)) % m
def mod_div(a, b):
    return mod_mul(a, pow(b, m-2, m))
def mod_pow(a, b):
    return pow(a, b, m)

for i in range(2*N):
    if S[i] == 'B':
        if l % 2 == 0:
            LR[i] = 'L'
            l += 1
        else:
            LR[i] = 'R'
            ans = mod_mul(ans, l)
            l -= 1
    else:
        if l % 2 == 0:
            LR[i] = 'R'
            ans = mod_mul(ans, l)
            l -= 1
        else:
            LR[i] = 'L'
            l += 1

C = Counter(LR)
if C['L'] != C['R']:
    print(0)
    sys.exit(0)

for i in range(1, N+1):
    ans = mod_mul(ans, i)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00021271906734909862
    2. '(' → logprob: -8.875212669372559
    3. '.b' → logprob: -10.750212669372559
    4. '.\' → logprob: -11.125212669372559
    5. '\n' → logprob: -12.000212669372559
    6. '\' → logprob: -12.625212669372559
    7. '[' → logprob: -12.875212669372559
    8. '.`' → logprob: -13.125212669372559
    9. '

' → logprob: -13.250212669372559
    10. '.
' → logprob: -13.250212669372559

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01686328835785389
    2. '(' → logprob: -4.1418633460998535
    3. '\n' → logprob: -8.516862869262695
    4. '\' → logprob: -8.641862869262695
    5. '```' → logprob: -10.016862869262695
    6. '

' → logprob: -10.141862869262695
    7. ',' → logprob: -10.266862869262695
    8. '' → logprob: -10.266862869262695
    9. '.
' → logprob: -10.516862869262695
    10. '
' → logprob: -10.516862869262695

Token 5: ' heap' (ID: 37237)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.21271003782749176
    2. ' math' → logprob: -1.8377100229263306
    3. ' heap' → logprob: -4.212709903717041
    4. ' collections' → logprob: -4.462709903717041
    5. 'sys' → logprob: -6.087709903717041
    6. ' os' → logprob: -6.587709903717041
    7. ' itertools' → logprob: -6.587709903717041
    8. 'collections' → logprob: -7.962709903717041
    9. 'heap' → logprob: -8.2127103805542
    10. 'math' → logprob: -8.4627103805542

Token 6: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.7954958821064793e-05
    2. 'queue' → logprob: -11.125018119812012
    3. 'ify' → logprob: -14.375018119812012
    4. '#' → logprob: -14.625018119812012
    5. 'i' → logprob: -14.750018119812012
    6. ' queue' → logprob: -15.000018119812012
    7. '```' → logprob: -15.125018119812012
    8. 't' → logprob: -15.375018119812012
    9. 'u' → logprob: -15.375018119812012
    10. '<|end|>' → logprob: -16.125017166137695

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3062405288219452
    2. '
' → logprob: -2.1812405586242676
    3. '\' → logprob: -2.9312405586242676
    4. '\n' → logprob: -3.1812405586242676
    5. '<|end|>' → logprob: -3.3062405586242676
    6. '

' → logprob: -5.431240558624268
    7. 'import' → logprob: -5.931240558624268
    8. '```' → logprob: -6.056240558624268
    9. '#' → logprob: -6.306240558624268
    10. 'newline' → logprob: -6.306240558624268

Token 8: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.448566198348999
    2. '
' → logprob: -1.573566198348999
    3. '.' → logprob: -1.823566198348999
    4. '\n' → logprob: -1.823566198348999
    5. 'def' → logprob: -2.323566198348999
    6. '

' → logprob: -3.448566198348999
    7. '```' → logprob: -3.573566198348999
    8. '#' → logprob: -3.698566198348999
    9. '[' → logprob: -4.323566436767578
    10. '' → logprob: -4.823566436767578

Token 9: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2730403244495392
    2. ' itertools' → logprob: -1.8980402946472168
    3. ' collections' → logprob: -2.773040294647217
    4. ' sys' → logprob: -4.148040294647217
    5. 'math' → logprob: -5.148040294647217
    6. 'collections' → logprob: -5.773040294647217
    7. ' os' → logprob: -6.898040294647217
    8. ' threading' → logprob: -8.023040771484375
    9. ' random' → logprob: -8.023040771484375
    10. ' time' → logprob: -10.148040771484375

Token 10: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7083442211151123
    2. '

' → logprob: -1.7083442211151123
    3. '
' → logprob: -2.0833442211151123
    4. 'def' → logprob: -3.0833442211151123
    5. '\' → logprob: -3.2083442211151123
    6. 'import' → logprob: -3.5833442211151123
    7. ',' → logprob: -3.8333442211151123
    8. '```' → logprob: -4.333344459533691
    9. '' → logprob: -4.458344459533691
    10. '\n' → logprob: -4.583344459533691

Token 11: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9588642716407776
    2. '\' → logprob: -1.0838642120361328
    3. 'import' → logprob: -2.333864212036133
    4. '.' → logprob: -2.833864212036133
    5. '```' → logprob: -3.833864212036133
    6. ',' → logprob: -3.958864212036133
    7. '\n' → logprob: -4.083864212036133
    8. '
' → logprob: -4.208864212036133
    9. '

' → logprob: -4.333864212036133
    10. 'from' → logprob: -4.583864212036133

Token 12: ' random' (ID: 7526)
  Prédit: ' random'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.8207775950431824
    2. 'random' → logprob: -1.1957776546478271
    3. ' sys' → logprob: -2.320777654647827
    4. ' collections' → logprob: -2.695777654647827
    5. 'collections' → logprob: -3.445777654647827
    6. ' itertools' → logprob: -3.570777654647827
    7. ' operator' → logprob: -4.445777416229248
    8. 'sys' → logprob: -4.570777416229248
    9. 'operator' → logprob: -6.070777416229248
    10. ' statistics' → logprob: -6.195777416229248

Token 13: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7796174883842468
    2. '\' → logprob: -1.5296175479888916
    3. '
' → logprob: -2.0296175479888916
    4. '<|end|>' → logprob: -2.9046175479888916
    5. 'import' → logprob: -3.2796175479888916
    6. '```' → logprob: -3.7796175479888916
    7. '#' → logprob: -4.1546173095703125
    8. '

' → logprob: -4.2796173095703125
    9. 'def' → logprob: -4.6546173095703125
    10. ',' → logprob: -4.6546173095703125

Token 14: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2843334674835205
    2. 'def' → logprob: -1.6593334674835205
    3. '#' → logprob: -1.7843334674835205
    4. 'from' → logprob: -2.0343334674835205
    5. 'import' → logprob: -2.2843334674835205
    6. 'class' → logprob: -3.6593334674835205
    7. '\n' → logprob: -3.7843334674835205
    8. '```' → logprob: -3.9093334674835205
    9. ',' → logprob: -4.034333229064941
    10. '
' → logprob: -4.284333229064941

Token 15: ' sys' (ID: 12228)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.6368070840835571
    2. 'sys' → logprob: -1.8868070840835571
    3. 'string' → logprob: -2.0118069648742676
    4. ' sys' → logprob: -2.0118069648742676
    5. 'statistics' → logprob: -2.2618069648742676
    6. 'collections' → logprob: -2.3868069648742676
    7. ' statistics' → logprob: -3.0118069648742676
    8. 're' → logprob: -3.2618069648742676
    9. ' time' → logprob: -3.6368069648742676
    10. ' string' → logprob: -3.6368069648742676

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5112063884735107
    2. '

' → logprob: -1.2612063884735107
    3. '\n' → logprob: -2.5112063884735107
    4. '<|end|>' → logprob: -4.38620662689209
    5. '```' → logprob: -4.51120662689209
    6. 'import' → logprob: -5.38620662689209
    7. '\' → logprob: -5.63620662689209
    8. '' → logprob: -7.01120662689209
    9. ',' → logprob: -7.51120662689209
    10. '#' → logprob: -7.63620662689209

Token 17: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9391404986381531
    2. '\n' → logprob: -1.1891405582427979
    3. '

' → logprob: -1.9391405582427979
    4. '```' → logprob: -3.189140558242798
    5. 'import' → logprob: -3.564140558242798
    6. 'from' → logprob: -3.939140558242798
    7. '\' → logprob: -4.189140319824219
    8. '<|end|>' → logprob: -4.189140319824219
    9. 'def' → logprob: -4.439140319824219
    10. ',' → logprob: -4.939140319824219

Token 18: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0659782886505127
    2. 'collections' → logprob: -3.1909782886505127
    3. ' typing' → logprob: -3.9409782886505127
    4. ' itertools' → logprob: -6.065978050231934
    5. ' functools' → logprob: -8.440978050231934
    6. 'typing' → logprob: -8.440978050231934
    7. ' ' → logprob: -8.815978050231934
    8. ' threading' → logprob: -9.440978050231934
    9. ' io' → logprob: -9.565978050231934
    10. '_' → logprob: -9.565978050231934

Token 19: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.28129443526268005
    2. ' import' → logprob: -1.4062944650650024
    3. '	import' → logprob: -10.031294822692871
    4. '```' → logprob: -10.531294822692871
    5. '.' → logprob: -10.906294822692871
    6. 'from' → logprob: -11.406294822692871
    7. ' ' → logprob: -11.656294822692871
    8. '<|end|>' → logprob: -12.156294822692871
    9. ' defaultdict' → logprob: -12.281294822692871
    10. '_import' → logprob: -12.531294822692871

Token 20: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.06958355754613876
    2. ' deque' → logprob: -3.0695836544036865
    3. 'deque' → logprob: -4.194583415985107
    4. ' abc' → logprob: -5.194583415985107
    5. 'abc' → logprob: -10.194583892822266
    6. ' itertools' → logprob: -10.444583892822266
    7. ' named' → logprob: -10.944583892822266
    8. '_' → logprob: -11.069583892822266
    9. 'default' → logprob: -11.319583892822266
    10. ' collections' → logprob: -11.694583892822266

Token 21: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8595120310783386
    2. '
' → logprob: -1.3595120906829834
    3. 'import' → logprob: -1.7345120906829834
    4. ',' → logprob: -2.2345120906829834
    5. '<|end|>' → logprob: -4.109511852264404
    6. '\n' → logprob: -4.609511852264404
    7. '```' → logprob: -5.484511852264404
    8. 'from' → logprob: -6.984511852264404
    9. '<|end|>' → logprob: -6.984511852264404
    10. ',

' → logprob: -7.359511852264404

Token 22: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.6785569787025452
    2. ' defaultdict' → logprob: -0.9285569787025452
    3. 'default' → logprob: -2.4285569190979004
    4. ' deque' → logprob: -4.6785569190979
    5. 'named' → logprob: -9.678557395935059
    6. ' named' → logprob: -12.553557395935059
    7. 'de' → logprob: -13.428557395935059
    8. 'Ordered' → logprob: -14.053557395935059
    9. ' default' → logprob: -14.178557395935059
    10. 'abc' → logprob: -14.803557395935059

Token 23: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8022997975349426
    2. '
' → logprob: -1.3022997379302979
    3. '<|end|>' → logprob: -1.4272997379302979
    4. 'import' → logprob: -3.802299737930298
    5. ',' → logprob: -4.677299976348877
    6. '<|end|>' → logprob: -5.427299976348877
    7. ' 

' → logprob: -6.677299976348877
    8. '```' → logprob: -7.427299976348877
    9. '


' → logprob: -8.052299499511719
    10. '' → logprob: -8.177299499511719

Token 24: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.6931514143943787
    2. 'deque' → logprob: -0.6931514143943787
    3. 'named' → logprob: -13.693151473999023
    4. 'de' → logprob: -13.818151473999023
    5. 'Deque' → logprob: -14.068151473999023
    6. ' itertools' → logprob: -14.193151473999023
    7. ' named' → logprob: -15.318151473999023
    8. ' Ordered' → logprob: -16.068151473999023
    9. 'Ordered' → logprob: -16.443151473999023
    10. '```' → logprob: -17.193151473999023

Token 25: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6818006038665771
    2. '
' → logprob: -1.4318006038665771
    3. 'import' → logprob: -1.4318006038665771
    4. '\n' → logprob: -5.181800842285156
    5. ',' → logprob: -5.806800842285156
    6. 'class' → logprob: -6.056800842285156
    7. '```' → logprob: -6.681800842285156
    8. '' → logprob: -7.431800842285156
    9. '
' → logprob: -7.431800842285156
    10. '<|end|>' → logprob: -7.556800842285156

Token 26: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7669079899787903
    2. '

' → logprob: -1.0169079303741455
    3. 'class' → logprob: -2.8919079303741455
    4. 'def' → logprob: -2.8919079303741455
    5. '#' → logprob: -3.6419079303741455
    6. 'import' → logprob: -4.516908168792725
    7. '' → logprob: -4.641908168792725
    8. '
' → logprob: -5.266908168792725
    9. '\' → logprob: -6.141908168792725
    10. '```' → logprob: -6.141908168792725

Token 27: ' decimal' (ID: 26964)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.07311376929283142
    2. ' typing' → logprob: -2.8231136798858643
    3. ' fractions' → logprob: -5.198113918304443
    4. ' functools' → logprob: -5.698113918304443
    5. ' operator' → logprob: -7.198113918304443
    6. 'typing' → logprob: -7.573113918304443
    7. ' ' → logprob: -8.073113441467285
    8. ' heap' → logprob: -8.198113441467285
    9. ' io' → logprob: -9.698113441467285
    10. 'fra' → logprob: -9.823113441467285

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0035245255567133427
    2. 'import' → logprob: -5.878524303436279
    3. '<|end|>' → logprob: -7.628524303436279
    4. ' ' → logprob: -8.878524780273438
    5. '	import' → logprob: -9.503524780273438
    6. '.' → logprob: -12.003524780273438
    7. '<|end|>' → logprob: -12.753524780273438
    8. '```' → logprob: -12.753524780273438
    9. ' ' → logprob: -13.378524780273438
    10. '_import' → logprob: -13.378524780273438

Token 29: ' ROUND' (ID: 168858)
  Prédit: ' Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.04360546916723251
    2. 'Decimal' → logprob: -3.1686055660247803
    3. ' ' → logprob: -7.918605327606201
    4. '.Decimal' → logprob: -9.66860580444336
    5. '```' → logprob: -9.79360580444336
    6. 'decimal' → logprob: -10.66860580444336
    7. ' ' → logprob: -10.79360580444336
    8. '`' → logprob: -10.79360580444336
    9. ' decimal' → logprob: -11.29360580444336
    10. ' local' → logprob: -11.54360580444336

Token 30: '_C' (ID: 1720)
  Prédit: '_HALF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_HALF' → logprob: -0.016856487840414047
    2. '_DOWN' → logprob: -4.641856670379639
    3. '_C' → logprob: -5.266856670379639
    4. '_' → logprob: -6.641856670379639
    5. '_F' → logprob: -8.01685619354248
    6. '_UP' → logprob: -8.26685619354248
    7. 'DOWN' → logprob: -12.01685619354248
    8. 'ING' → logprob: -12.26685619354248
    9. 'F' → logprob: -12.89185619354248
    10. '_HAL' → logprob: -13.39185619354248

Token 31: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0006596576422452927
    2. 'EP' → logprob: -7.750659465789795
    3. 'EL' → logprob: -9.375659942626953
    4. 'EPT' → logprob: -9.875659942626953
    5. 'EAN' → logprob: -11.125659942626953
    6. 'EF' → logprob: -11.500659942626953
    7. 'HAL' → logprob: -11.625659942626953
    8. 'EAR' → logprob: -11.750659942626953
    9. 'eil' → logprob: -12.125659942626953
    10. 'EIF' → logprob: -12.250659942626953

Token 32: 'ILING' (ID: 63201)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.47523611783981323
    2. 'ILING' → logprob: -0.9752361178398132
    3. 'LING' → logprob: -6.850235939025879
    4. 'L' → logprob: -9.975235939025879
    5. 'I' → logprob: -10.600235939025879
    6. 'ING' → logprob: -12.100235939025879
    7. '{' → logprob: -12.975235939025879
    8. 'ILED' → logprob: -13.100235939025879
    9. 'ILL' → logprob: -13.100235939025879
    10. 'iling' → logprob: -13.225235939025879

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06182122975587845
    2. 'from' → logprob: -3.061821222305298
    3. 'import' → logprob: -4.811821460723877
    4. ',
' → logprob: -5.936821460723877
    5. ' from' → logprob: -7.561821460723877
    6. '```' → logprob: -7.686821460723877
    7. '
' → logprob: -8.061820983886719
    8. ' ,' → logprob: -8.686820983886719
    9. '<|end|>' → logprob: -9.061820983886719
    10. ')' → logprob: -9.311820983886719

Token 34: ' ROUND' (ID: 168858)
  Prédit: 'ROUND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ROUND' → logprob: -0.6646818518638611
    2. 'Decimal' → logprob: -0.9146818518638611
    3. ' Decimal' → logprob: -2.539681911468506
    4. ' ROUND' → logprob: -5.289681911468506
    5. 'Context' → logprob: -8.664681434631348
    6. ' ' → logprob: -8.914681434631348
    7. 'Division' → logprob: -8.914681434631348
    8. 'get' → logprob: -9.164681434631348
    9. ' get' → logprob: -9.664681434631348
    10. 'DEC' → logprob: -10.289681434631348

Token 35: '_HALF' (ID: 175765)
  Prédit: '_F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_F' → logprob: -0.4928976893424988
    2. '_DOWN' → logprob: -0.9928976893424988
    3. '_HALF' → logprob: -4.1178975105285645
    4. 'DOWN' → logprob: -6.8678975105285645
    5. 'F' → logprob: -7.1178975105285645
    6. '_UP' → logprob: -7.6178975105285645
    7. '_' → logprob: -11.992897987365723
    8. 'ING' → logprob: -12.117897987365723
    9. '_C' → logprob: -12.367897987365723
    10. '	F' → logprob: -12.617897987365723

Token 36: '_UP' (ID: 29902)
  Prédit: '_UP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_UP' → logprob: -0.06479362398386002
    2. '_E' → logprob: -2.814793586730957
    3. '_DOWN' → logprob: -5.939793586730957
    4. 'UP' → logprob: -8.689793586730957
    5. 'DOWN' → logprob: -11.689793586730957
    6. 'EV' → logprob: -12.189793586730957
    7. '_A' → logprob: -12.564793586730957
    8. 'Even' → logprob: -13.439793586730957
    9. '_EV' → logprob: -14.814793586730957
    10. ' UP' → logprob: -14.939793586730957

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3748423159122467
    2. 'from' → logprob: -1.3748422861099243
    3. 'import' → logprob: -3.249842405319214
    4. '
' → logprob: -4.374842166900635
    5. ',
' → logprob: -5.874842166900635
    6. '```' → logprob: -5.999842166900635
    7. ' from' → logprob: -7.374842166900635
    8. '

' → logprob: -7.749842166900635
    9. '
' → logprob: -7.749842166900635
    10. '' → logprob: -8.249842643737793

Token 38: ' Decimal' (ID: 56874)
  Prédit: 'ROUND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ROUND' → logprob: -0.11731969565153122
    2. 'Decimal' → logprob: -3.1173195838928223
    3. ' Decimal' → logprob: -3.2423195838928223
    4. ' ROUND' → logprob: -3.6173195838928223
    5. 'get' → logprob: -8.99232006072998
    6. ' get' → logprob: -9.11732006072998
    7. 'Context' → logprob: -10.11732006072998
    8. ' ' → logprob: -10.36732006072998
    9. 'Round' → logprob: -10.49232006072998
    10. 'Division' → logprob: -10.86732006072998

Token 39: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.14438199996948242
    2. '
' → logprob: -2.1443819999694824
    3. ',' → logprob: -5.019381999969482
    4. 'import' → logprob: -5.894381999969482
    5. '


' → logprob: -6.519381999969482
    6. '
' → logprob: -6.769381999969482
    7. 'def' → logprob: -7.019381999969482
    8. '' → logprob: -7.269381999969482
    9. ',

' → logprob: -7.269381999969482
    10. '```' → logprob: -7.519381999969482

Token 40: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5354776382446289
    2. '
' → logprob: -1.785477638244629
    3. 'import' → logprob: -3.035477638244629
    4. 'def' → logprob: -3.035477638244629
    5. ',' → logprob: -3.160477638244629
    6. '#' → logprob: -3.410477638244629
    7. 'class' → logprob: -3.785477638244629
    8. '\n' → logprob: -4.535477638244629
    9. 'from' → logprob: -4.535477638244629
    10. '' → logprob: -4.660477638244629

Token 41: ' functools' (ID: 142636)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.1423235535621643
    2. ' fractions' → logprob: -2.2673234939575195
    3. ' itertools' → logprob: -4.6423234939575195
    4. ' functools' → logprob: -4.7673234939575195
    5. 'fun' → logprob: -5.8923234939575195
    6. 'email' → logprob: -6.3923234939575195
    7. 'io' → logprob: -6.7673234939575195
    8. ' typing' → logprob: -6.7673234939575195
    9. 'typing' → logprob: -6.7673234939575195
    10. 'statistics' → logprob: -7.7673234939575195

Token 42: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20504163205623627
    2. 'import' → logprob: -1.7050416469573975
    3. '<|end|>' → logprob: -6.205041408538818
    4. ' ' → logprob: -6.830041408538818
    5. '_import' → logprob: -8.205041885375977
    6. '_' → logprob: -9.330041885375977
    7. '	import' → logprob: -9.455041885375977
    8. '<|end|>' → logprob: -10.705041885375977
    9. ' ' → logprob: -11.080041885375977
    10. ' _' → logprob: -11.330041885375977

Token 43: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.03578710928559303
    2. 'l' → logprob: -3.5357871055603027
    3. ' reduce' → logprob: -6.285787105560303
    4. ' partial' → logprob: -6.660787105560303
    5. ' cmp' → logprob: -6.785787105560303
    6. ' wraps' → logprob: -6.910787105560303
    7. 'reduce' → logprob: -8.160787582397461
    8. 'cmp' → logprob: -8.535787582397461
    9. 'partial' → logprob: -9.410787582397461
    10. ' cache' → logprob: -9.785787582397461

Token 44: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -3.531315314830863e-06
    2. 'r' → logprob: -13.375003814697266
    3. 'ruz' → logprob: -14.500003814697266
    4. 'RU' → logprob: -14.625003814697266
    5. 'fu' → logprob: -15.000003814697266
    6. '_ru' → logprob: -16.250003814697266
    7. 'ruh' → logprob: -16.500003814697266
    8. 'ruff' → logprob: -16.500003814697266
    9. 'rum' → logprob: -17.000003814697266
    10. 'en' → logprob: -17.125003814697266

Token 45: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.043101388961076736
    2. 'cache' → logprob: -3.1681013107299805
    3. 'c' → logprob: -10.54310131072998
    4. 'Cache' → logprob: -10.91810131072998
    5. '```' → logprob: -11.29310131072998
    6. '_c' → logprob: -11.54310131072998
    7. 't' → logprob: -11.66810131072998
    8. '_CACHE' → logprob: -11.91810131072998
    9. '_cached' → logprob: -12.16810131072998
    10. 'cached' → logprob: -12.54310131072998

Token 46: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6172521114349365
    2. '
' → logprob: -1.1172521114349365
    3. 'from' → logprob: -2.6172521114349365
    4. ',' → logprob: -3.7422521114349365
    5. '

' → logprob: -4.742252349853516
    6. 'def' → logprob: -4.867252349853516
    7. '<|end|>' → logprob: -4.867252349853516
    8. '\n' → logprob: -5.367252349853516
    9. ',
' → logprob: -6.492252349853516
    10. '```' → logprob: -6.867252349853516

Token 47: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.8009611964225769
    2. 'partial' → logprob: -1.5509612560272217
    3. ' wraps' → logprob: -1.8009612560272217
    4. 'wrap' → logprob: -2.8009612560272217
    5. ' reduce' → logprob: -2.9259612560272217
    6. 'total' → logprob: -3.8009612560272217
    7. ' partial' → logprob: -3.8009612560272217
    8. ' total' → logprob: -5.175961017608643
    9. 'cmp' → logprob: -5.175961017608643
    10. ' cmp' → logprob: -6.300961017608643

Token 48: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1229627132415771
    2. 'import' → logprob: -1.3729627132415771
    3. '
' → logprob: -1.6229627132415771
    4. 'from' → logprob: -1.9979627132415771
    5. ',
' → logprob: -2.622962713241577
    6. '

' → logprob: -5.122962951660156
    7. 'def' → logprob: -6.122962951660156
    8. '<|end|>' → logprob: -6.622962951660156
    9. '\n' → logprob: -7.122962951660156
    10. '' → logprob: -7.122962951660156

Token 49: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4282876253128052
    2. 'from' → logprob: -2.1782875061035156
    3. '
' → logprob: -2.4282875061035156
    4. ',' → logprob: -2.9282875061035156
    5. '\n' → logprob: -3.6782875061035156
    6. '

' → logprob: -4.053287506103516
    7. 'def' → logprob: -4.178287506103516
    8. '#' → logprob: -4.303287506103516
    9. ',
' → logprob: -5.553287506103516
    10. '<|end|>' → logprob: -5.678287506103516

Token 50: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.2763819992542267
    2. ' operator' → logprob: -1.6513819694519043
    3. 'operator' → logprob: -3.1513819694519043
    4. 'it' → logprob: -6.401381969451904
    5. ' typing' → logprob: -7.026381969451904
    6. ' heap' → logprob: -7.026381969451904
    7. ' ' → logprob: -7.276381969451904
    8. 'io' → logprob: -7.526381969451904
    9. ' math' → logprob: -7.651381969451904
    10. ' io' → logprob: -7.776381969451904

Token 51: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023404574021697044
    2. 'import' → logprob: -3.773404598236084
    3. '.' → logprob: -9.648404121398926
    4. ' ' → logprob: -9.773404121398926
    5. '	import' → logprob: -11.023404121398926
    6. '<|end|>' → logprob: -11.273404121398926
    7. ' .' → logprob: -13.023404121398926
    8. ' ' → logprob: -13.523404121398926
    9. ' itertools' → logprob: -13.648404121398926
    10. '.import' → logprob: -13.773404121398926

Token 52: ' combinations' (ID: 43835)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.2818751335144043
    2. ' combinations' → logprob: -3.0318751335144043
    3. ' chain' → logprob: -3.1568751335144043
    4. 'com' → logprob: -3.1568751335144043
    5. ' product' → logprob: -3.2818751335144043
    6. ' ' → logprob: -3.2818751335144043
    7. ' permutations' → logprob: -3.9068751335144043
    8. 'acc' → logprob: -5.031875133514404
    9. ' group' → logprob: -5.281875133514404
    10. ' cycle' → logprob: -6.531875133514404

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009211080614477396
    2. ',
' → logprob: -8.125921249389648
    3. ' ,' → logprob: -8.250921249389648
    4. 'import' → logprob: -8.375921249389648
    5. '<|end|>' → logprob: -9.750921249389648
    6. 'from' → logprob: -10.000921249389648
    7. ' ' → logprob: -12.250921249389648
    8. '<|end|>' → logprob: -12.625921249389648
    9. ',

' → logprob: -12.875921249389648
    10. ',n' → logprob: -13.125921249389648

Token 54: ' combinations' (ID: 43835)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.7549911141395569
    2. 'com' → logprob: -1.254991054534912
    3. 'per' → logprob: -2.004991054534912
    4. 'compress' → logprob: -3.754991054534912
    5. 'group' → logprob: -3.879991054534912
    6. 'product' → logprob: -4.129991054534912
    7. 'count' → logprob: -4.129991054534912
    8. 'cycle' → logprob: -4.629991054534912
    9. 'chain' → logprob: -5.379991054534912
    10. ' compress' → logprob: -5.504991054534912

Token 55: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.001016971655189991
    2. 'with' → logprob: -7.001017093658447
    3. 'With' → logprob: -9.626016616821289
    4. '_without' → logprob: -11.001016616821289
    5. '_w' → logprob: -12.251016616821289
    6. '_' → logprob: -12.376016616821289
    7. '_WITH' → logprob: -12.626016616821289
    8. '_per' → logprob: -13.001016616821289
    9. '-with' → logprob: -13.751016616821289
    10. '_until' → logprob: -14.126016616821289

Token 56: '_re' (ID: 3067)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.25298264622688293
    2. '_re' → logprob: -1.5029826164245605
    3. ' replacement' → logprob: -7.2529826164245605
    4. 're' → logprob: -8.627983093261719
    5. 'Replacement' → logprob: -9.002983093261719
    6. '-re' → logprob: -11.002983093261719
    7. ' Replacement' → logprob: -11.502983093261719
    8. 'replace' → logprob: -11.752983093261719
    9. 'r' → logprob: -12.627983093261719
    10. 'rep' → logprob: -13.252983093261719

Token 57: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.0008276138687506318
    2. 'place' → logprob: -7.625827789306641
    3. 'placements' → logprob: -8.37582778930664
    4. 'peat' → logprob: -9.87582778930664
    5. 'plac' → logprob: -10.75082778930664
    6. 'p' → logprob: -10.75082778930664
    7. 'pl' → logprob: -12.62582778930664
    8. 'pe' → logprob: -12.75082778930664
    9. 'places' → logprob: -13.37582778930664
    10. ' placement' → logprob: -13.62582778930664

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007002840866334736
    2. 'from' → logprob: -7.8757004737854
    3. ',
' → logprob: -8.875699996948242
    4. 'import' → logprob: -9.000699996948242
    5. ' ,' → logprob: -11.000699996948242
    6. '<|end|>' → logprob: -11.375699996948242
    7. ' from' → logprob: -12.375699996948242
    8. ',

' → logprob: -13.250699996948242
    9. ',b' → logprob: -13.250699996948242
    10. ',d' → logprob: -13.375699996948242

Token 59: ' product' (ID: 1888)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.5504176616668701
    2. 'product' → logprob: -1.6754176616668701
    3. 'per' → logprob: -2.67541766166687
    4. 'cycle' → logprob: -3.05041766166687
    5. ' product' → logprob: -3.42541766166687
    6. 'count' → logprob: -3.80041766166687
    7. 'group' → logprob: -3.92541766166687
    8. 'compress' → logprob: -4.175417900085449
    9. ' cycle' → logprob: -5.300417900085449
    10. ' compress' → logprob: -5.300417900085449

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005022055469453335
    2. 'from' → logprob: -6.255022048950195
    3. ',
' → logprob: -6.880022048950195
    4. 'import' → logprob: -6.880022048950195
    5. '<|end|>' → logprob: -7.130022048950195
    6. '<|end|>' → logprob: -10.505022048950195
    7. '\n' → logprob: -10.630022048950195
    8. ' ,' → logprob: -10.880022048950195
    9. '```' → logprob: -11.005022048950195
    10. ',n' → logprob: -11.255022048950195

Token 61: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.5570984482765198
    2. ' permutations' → logprob: -0.9320984482765198
    3. 'group' → logprob: -4.182098388671875
    4. 'cycle' → logprob: -4.932098388671875
    5. 'chain' → logprob: -6.057098388671875
    6. ' group' → logprob: -6.182098388671875
    7. 'count' → logprob: -6.307098388671875
    8. ' accumulate' → logprob: -6.682098388671875
    9. 'is' → logprob: -6.807098388671875
    10. ' chain' → logprob: -7.307098388671875

Token 62: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010047763586044312
    2. ',
' → logprob: -5.885047912597656
    3. '<|end|>' → logprob: -5.885047912597656
    4. 'import' → logprob: -6.135047912597656
    5. 'from' → logprob: -6.760047912597656
    6. '\n' → logprob: -7.385047912597656
    7. '
' → logprob: -9.260047912597656
    8. 'def' → logprob: -9.385047912597656
    9. '<|end|>' → logprob: -9.760047912597656
    10. '\' → logprob: -9.885047912597656

Token 63: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045281268656253815
    2. 'import' → logprob: -4.045281410217285
    3. '<|end|>' → logprob: -4.420281410217285
    4. 'from' → logprob: -4.545281410217285
    5. ',
' → logprob: -6.170281410217285
    6. 'def' → logprob: -7.920281410217285
    7. ' ,' → logprob: -8.295281410217285
    8. '\n' → logprob: -8.295281410217285
    9. '```' → logprob: -8.545281410217285
    10. '<|end|>' → logprob: -8.545281410217285

Token 64: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.3566940724849701
    2. 'operator' → logprob: -1.3566941022872925
    3. 'math' → logprob: -4.856694221496582
    4. ' typing' → logprob: -4.981694221496582
    5. ' math' → logprob: -5.106694221496582
    6. 'os' → logprob: -5.481694221496582
    7. 'json' → logprob: -5.981694221496582
    8. ' json' → logprob: -6.106694221496582
    9. 'typing' → logprob: -6.106694221496582
    10. ' keyword' → logprob: -6.231694221496582

Token 65: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04264891520142555
    2. 'import' → logprob: -3.667649030685425
    3. '<|end|>' → logprob: -4.167648792266846
    4. ' ' → logprob: -7.792648792266846
    5. ',' → logprob: -9.042649269104004
    6. ' as' → logprob: -9.667649269104004
    7. '	import' → logprob: -9.792649269104004
    8. '<|end|>' → logprob: -9.917649269104004
    9. ' ,' → logprob: -11.167649269104004
    10. '_import' → logprob: -12.292649269104004

Token 66: ' add' (ID: 1147)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.05780155211687088
    2. 'item' → logprob: -3.4328014850616455
    3. ' attr' → logprob: -4.682801723480225
    4. ' add' → logprob: -5.182801723480225
    5. ' ' → logprob: -5.432801723480225
    6. ' mul' → logprob: -5.932801723480225
    7. 'attr' → logprob: -7.932801723480225
    8. ' method' → logprob: -7.932801723480225
    9. 'mul' → logprob: -8.182801246643066
    10. 'getitem' → logprob: -8.182801246643066

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005435001221485436
    2. '<|end|>' → logprob: -8.375543594360352
    3. 's' → logprob: -9.250543594360352
    4. ' ,' → logprob: -9.875543594360352
    5. 'import' → logprob: -10.125543594360352
    6. ',
' → logprob: -10.125543594360352
    7. ',s' → logprob: -10.375543594360352
    8. ',b' → logprob: -11.750543594360352
    9. 'from' → logprob: -12.125543594360352
    10. ',p' → logprob: -12.500543594360352

Token 68: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.450305700302124
    2. 'sub' → logprob: -1.950305700302124
    3. ' mul' → logprob: -2.075305700302124
    4. 'item' → logprob: -2.825305700302124
    5. ' sub' → logprob: -3.950305700302124
    6. 'attr' → logprob: -5.450305938720703
    7. 'getitem' → logprob: -5.450305938720703
    8. 'and' → logprob: -6.075305938720703
    9. ' item' → logprob: -6.700305938720703
    10. 'i' → logprob: -7.075305938720703

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05167507380247116
    2. 'import' → logprob: -3.8016750812530518
    3. 'from' → logprob: -4.176674842834473
    4. '
' → logprob: -5.926674842834473
    5. '\n' → logprob: -6.051674842834473
    6. '<|end|>' → logprob: -6.051674842834473
    7. ',
' → logprob: -6.676674842834473
    8. ' ' → logprob: -6.676674842834473
    9. ' ,' → logprob: -7.801674842834473
    10. '' → logprob: -8.051674842834473

Token 70: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.2769593596458435
    2. ' sub' → logprob: -1.5269594192504883
    3. 'pow' → logprob: -4.526959419250488
    4. ' item' → logprob: -5.526959419250488
    5. 'item' → logprob: -5.526959419250488
    6. 'neg' → logprob: -5.776959419250488
    7. 'tr' → logprob: -7.651959419250488
    8. '   ' → logprob: -7.901959419250488
    9. ' tr' → logprob: -8.151959419250488
    10. ' pow' → logprob: -8.401959419250488

Token 71: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11876309663057327
    2. 'import' → logprob: -2.9937632083892822
    3. '<|end|>' → logprob: -3.9937632083892822
    4. '
' → logprob: -4.243762969970703
    5. 'from' → logprob: -4.743762969970703
    6. ',
' → logprob: -5.493762969970703
    7. '\n' → logprob: -5.618762969970703
    8. '

' → logprob: -5.868762969970703
    9. ' ' → logprob: -6.118762969970703
    10. '' → logprob: -6.743762969970703

Token 72: 'sys' (ID: 17324)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5400965809822083
    2. '
' → logprob: -2.1650965213775635
    3. '\n' → logprob: -2.5400965213775635
    4. ',' → logprob: -2.9150965213775635
    5. 'import' → logprob: -3.2900965213775635
    6. '<|end|>' → logprob: -3.2900965213775635
    7. 'def' → logprob: -4.040096759796143
    8. '\' → logprob: -4.790096759796143
    9. '' → logprob: -4.790096759796143
    10. 'class' → logprob: -4.790096759796143

Token 73: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.800739018013701e-05
    2. '.exit' → logprob: -11.5000581741333
    3. '.argv' → logprob: -11.8750581741333
    4. '.stdout' → logprob: -11.8750581741333
    5. ' .' → logprob: -12.3750581741333
    6. '.readline' → logprob: -12.3750581741333
    7. '.stdin' → logprob: -12.5000581741333
    8. '.setdefault' → logprob: -12.6250581741333
    9. '.stderr' → logprob: -12.8750581741333
    10. '.user' → logprob: -12.8750581741333

Token 74: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.004382893908768892
    2. '_rec' → logprob: -5.629383087158203
    3. ' recursion' → logprob: -8.379383087158203
    4. '_limit' → logprob: -8.504383087158203
    5. 'limit' → logprob: -9.129383087158203
    6. 's' → logprob: -10.379383087158203
    7. '_int' → logprob: -10.379383087158203
    8. '_' → logprob: -11.129383087158203
    9. '_execution' → logprob: -11.129383087158203
    10. 'sys' → logprob: -11.379383087158203

Token 75: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0018382027046754956
    2. 'ursive' → logprob: -6.751838207244873
    3. 'urs' → logprob: -7.876838207244873
    4. 'ur' → logprob: -8.876837730407715
    5. 'limit' → logprob: -9.251837730407715
    6. '_limit' → logprob: -11.501837730407715
    7. 'urf' → logprob: -11.876837730407715
    8. 'urse' → logprob: -11.876837730407715
    9. 'ursor' → logprob: -12.251837730407715
    10. 'ursively' → logprob: -12.501837730407715

Token 76: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.038346126675605774
    2. 'limit' → logprob: -3.2883460521698
    3. '_depth' → logprob: -8.288346290588379
    4. '_lim' → logprob: -10.663346290588379
    5. ' limit' → logprob: -11.413346290588379
    6. '_LIMIT' → logprob: -11.788346290588379
    7. 'lim' → logprob: -12.538346290588379
    8. '_limits' → logprob: -13.038346290588379
    9. '_threshold' → logprob: -13.913346290588379
    10. 'depth' → logprob: -14.163346290588379

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.9153885558771435e-06
    2. '(
' → logprob: -13.125005722045898
    3. '("("' → logprob: -13.625005722045898
    4. '<|end|>' → logprob: -14.375005722045898
    5. '(

' → logprob: -14.500005722045898
    6. ' (' → logprob: -14.625005722045898
    7. '((' → logprob: -15.500005722045898
    8. '```' → logprob: -15.500005722045898
    9. '()' → logprob: -15.875005722045898
    10. '(**' → logprob: -16.3750057220459

Token 78: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.048650842159986496
    2. '100' → logprob: -3.0486507415771484
    3. '1' → logprob: -10.673650741577148
    4. ' ' → logprob: -11.423650741577148
    5. '9' → logprob: -11.548650741577148
    6. '300' → logprob: -12.048650741577148
    7. '999' → logprob: -12.548650741577148
    8. '500' → logprob: -13.298650741577148
    9. '104' → logprob: -13.298650741577148
    10. '200' → logprob: -13.423650741577148

Token 79: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.42878782749176025
    2. '00' → logprob: -1.3037878274917603
    3. '0' → logprob: -2.9287877082824707
    4. '_' → logprob: -3.8037877082824707
    5. '500' → logprob: -7.553787708282471
    6. ')' → logprob: -8.178788185119629
    7. '50' → logprob: -8.303788185119629
    8. '050' → logprob: -9.178788185119629
    9. '9' → logprob: -9.303788185119629
    10. '09' → logprob: -9.928788185119629

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018162349238991737
    2. '0' → logprob: -4.018162250518799
    3. '1' → logprob: -11.768162727355957
    4. '))' → logprob: -13.393162727355957
    5. ')
' → logprob: -13.893162727355957
    6. ' )' → logprob: -13.893162727355957
    7. '```' → logprob: -15.268162727355957
    8. '')' → logprob: -15.643162727355957
    9. ')

' → logprob: -16.01816177368164
    10. '`)' → logprob: -16.01816177368164

Token 81: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4862333834171295
    2. '

' → logprob: -0.9862333536148071
    3. '#' → logprob: -5.361233234405518
    4. '
' → logprob: -5.611233234405518
    5. 'def' → logprob: -7.111233234405518
    6. '\n' → logprob: -7.236233234405518
    7. 'n' → logprob: -7.361233234405518
    8. '' → logprob: -7.611233234405518
    9. '


' → logprob: -8.236233711242676
    10. 'class' → logprob: -8.361233711242676

Token 82: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003015737747773528
    2. '.' → logprob: -6.253015518188477
    3. '()' → logprob: -7.378015518188477
    4. '(
' → logprob: -8.378015518188477
    5. '("("' → logprob: -9.753015518188477
    6. '```' → logprob: -10.503015518188477
    7. '<|end|>' → logprob: -10.753015518188477
    8. '(.)' → logprob: -11.003015518188477
    9. '(

' → logprob: -11.128015518188477
    10. '(.' → logprob: -11.253015518188477

Token 83: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08823283016681671
    2. ' input' → logprob: -2.8382327556610107
    3. 'sys' → logprob: -4.21323299407959
    4. 'input' → logprob: -4.58823299407959
    5. ' lambda' → logprob: -7.46323299407959
    6. '=sys' → logprob: -9.21323299407959
    7. '	sys' → logprob: -9.58823299407959
    8. ' raw' → logprob: -9.71323299407959
    9. 'lambda' → logprob: -9.83823299407959
    10. ' ' → logprob: -10.21323299407959

Token 84: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01091376319527626
    2. '.stdin' → logprob: -4.635913848876953
    3. '.stdout' → logprob: -7.510913848876953
    4. '.readline' → logprob: -8.260913848876953
    5. ' .' → logprob: -8.385913848876953
    6. '.stderr' → logprob: -10.760913848876953
    7. '.argv' → logprob: -11.010913848876953
    8. '.​' → logprob: -11.260913848876953
    9. '.
' → logprob: -11.885913848876953
    10. '.\' → logprob: -12.385913848876953

Token 85: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009474263642914593
    2. '.' → logprob: -7.25094747543335
    3. '.read' → logprob: -8.375946998596191
    4. '.buffer' → logprob: -12.875946998596191
    5. '.Read' → logprob: -13.750946998596191
    6. '.stdin' → logprob: -13.875946998596191
    7. '.readlines' → logprob: -14.500946998596191
    8. '.__' → logprob: -15.000946998596191
    9. '._' → logprob: -15.125946998596191
    10. '.READ' → logprob: -15.500946998596191

Token 86: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6858641505241394
    2. '()' → logprob: -1.3108642101287842
    3. 'def' → logprob: -2.310864210128784
    4. '(' → logprob: -3.185864210128784
    5. '\n' → logprob: -3.685864210128784
    6. '

' → logprob: -3.935864210128784
    7. '#' → logprob: -4.685863971710205
    8. '<|end|>' → logprob: -5.185863971710205
    9. '(
' → logprob: -5.310863971710205
    10. '\' → logprob: -5.685863971710205

Token 87: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5537564158439636
    2. '
' → logprob: -1.5537564754486084
    3. 'class' → logprob: -2.3037564754486084
    4. '#' → logprob: -2.8037564754486084
    5. '

' → logprob: -3.5537564754486084
    6. 'n' → logprob: -4.678756237030029
    7. '\n' → logprob: -4.928756237030029
    8. '\' → logprob: -5.428756237030029
    9. 'd' → logprob: -6.678756237030029
    10. '```' → logprob: -7.553756237030029

Token 88: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08389250189065933
    2. ' =' → logprob: -2.583892583847046
    3. '=' → logprob: -5.708892345428467
    4. ',' → logprob: -7.333892345428467
    5. ' ,' → logprob: -8.333892822265625
    6. ')' → logprob: -8.708892822265625
    7. '  ' → logprob: -8.833892822265625
    8. '<|end|>' → logprob: -8.833892822265625
    9. ' )' → logprob: -9.333892822265625
    10. ' >' → logprob: -9.583892822265625

Token 89: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.635491132736206
    2. ' ' → logprob: -0.760491132736206
    3. 'int' → logprob: -5.885491371154785
    4. '0' → logprob: -10.635491371154785
    5. '10' → logprob: -11.010491371154785
    6. ' 
' → logprob: -11.010491371154785
    7. '[int' → logprob: -11.260491371154785
    8. ' ' → logprob: -11.885491371154785
    9. '<int' → logprob: -12.135491371154785
    10. '=int' → logprob: -12.135491371154785

Token 90: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023559064138680696
    2. '(input' → logprob: -6.502356052398682
    3. '('' → logprob: -7.127356052398682
    4. '()' → logprob: -10.627355575561523
    5. '("' → logprob: -11.752355575561523
    6. ' (' → logprob: -12.252355575561523
    7. '(
' → logprob: -12.252355575561523
    8. '(`' → logprob: -13.002355575561523
    9. 'input' → logprob: -13.377355575561523
    10. '(N' → logprob: -14.377355575561523

Token 91: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16051208972930908
    2. '()' → logprob: -1.910512089729309
    3. ')' → logprob: -8.78551197052002
    4. '().' → logprob: -9.53551197052002
    5. '(' → logprob: -10.78551197052002
    6. '()`' → logprob: -11.53551197052002
    7. ' ())' → logprob: -11.53551197052002
    8. '())
' → logprob: -11.91051197052002
    9. '()
' → logprob: -12.03551197052002
    10. '();)' → logprob: -13.03551197052002

Token 92: 'S' (ID: 50)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7905036807060242
    2. 'A' → logprob: -1.165503740310669
    3. ' A' → logprob: -2.790503740310669
    4. 'data' → logprob: -2.790503740310669
    5. ' ' → logprob: -3.415503740310669
    6. 'arr' → logprob: -3.665503740310669
    7. 's' → logprob: -3.915503740310669
    8. ' a' → logprob: -4.91550350189209
    9. 'numbers' → logprob: -5.04050350189209
    10. 'array' → logprob: -5.79050350189209

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009497877210378647
    2. '=' → logprob: -5.13449764251709
    3. ' ' → logprob: -5.75949764251709
    4. '.' → logprob: -8.38449764251709
    5. ',' → logprob: -9.75949764251709
    6. '[' → logprob: -10.13449764251709
    7. '_' → logprob: -10.50949764251709
    8. '  ' → logprob: -10.75949764251709
    9. ' ' → logprob: -12.13449764251709
    10. 's' → logprob: -12.50949764251709

Token 94: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31327399611473083
    2. ' input' → logprob: -1.3132740259170532
    3. '(input' → logprob: -12.188274383544922
    4. '=input' → logprob: -12.313274383544922
    5. 'list' → logprob: -14.438274383544922
    6. 'str' → logprob: -14.438274383544922
    7. ' ' → logprob: -14.813274383544922
    8. '	input' → logprob: -15.188274383544922
    9. '[input' → logprob: -15.188274383544922
    10. ',input' → logprob: -15.813274383544922

Token 95: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4741711914539337
    2. '()' → logprob: -0.9741711616516113
    3. '(' → logprob: -9.72417163848877
    4. '.strip' → logprob: -10.47417163848877
    5. '()
' → logprob: -13.72417163848877
    6. '.rstrip' → logprob: -13.97417163848877
    7. '())' → logprob: -14.34917163848877
    8. '()\' → logprob: -14.59917163848877
    9. ' ()' → logprob: -14.72417163848877
    10. '.' → logprob: -14.97417163848877

Token 96: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04858805239200592
    2. 'rstrip' → logprob: -3.0485880374908447
    3. 'split' → logprob: -14.673587799072266
    4. 'str' → logprob: -17.048587799072266
    5. 'rs' → logprob: -17.173587799072266
    6. ' strip' → logprob: -17.173587799072266
    7. 'rst' → logprob: -17.923587799072266
    8. 'read' → logprob: -18.548587799072266
    9. 'decode' → logprob: -18.548587799072266
    10. 'r' → logprob: -18.923587799072266

Token 97: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012552275322377682
    2. '(' → logprob: -4.387552261352539
    3. '('' → logprob: -11.387552261352539
    4. '(
' → logprob: -11.512552261352539
    5. '()
' → logprob: -11.512552261352539
    6. ')' → logprob: -12.887552261352539
    7. ' ()' → logprob: -13.262552261352539
    8. '("' → logprob: -13.387552261352539
    9. '())' → logprob: -13.762552261352539
    10. '().' → logprob: -14.762552261352539

Token 98: 'if' (ID: 366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1957072019577026
    2. '_' → logprob: -1.3207072019577026
    3. '[' → logprob: -1.8207072019577026
    4. '
' → logprob: -2.195707321166992
    5. '=' → logprob: -2.445707321166992
    6. '#' → logprob: -4.320707321166992
    7. '.' → logprob: -4.570707321166992
    8. '<|end|>' → logprob: -4.695707321166992
    9. ' ' → logprob: -5.195707321166992
    10. ' =' → logprob: -5.820707321166992

Token 99: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3716201186180115
    2. ' S' → logprob: -1.2466201782226562
    3. ' N' → logprob: -4.121620178222656
    4. ' len' → logprob: -5.371620178222656
    5. 'S' → logprob: -6.871620178222656
    6. ' '' → logprob: -8.121620178222656
    7. ' not' → logprob: -8.121620178222656
    8. ' ' → logprob: -8.621620178222656
    9. 'N' → logprob: -9.371620178222656
    10. '  ' → logprob: -9.496620178222656

Token 100: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05893513560295105
    2. ' ==' → logprob: -3.1839351654052734
    3. '.startswith' → logprob: -4.808935165405273
    4. '.' → logprob: -5.433935165405273
    5. '==' → logprob: -6.183935165405273
    6. '[:]' → logprob: -7.683935165405273
    7. '[i' → logprob: -8.683935165405273
    8. ' in' → logprob: -8.933935165405273
    9. '[:' → logprob: -9.183935165405273
    10. ' ' → logprob: -9.433935165405273

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0338740199804306
    2. ' ' → logprob: -3.408874034881592
    3. '1' → logprob: -9.533873558044434
    4. '[' → logprob: -10.033873558044434
    5. ':' → logprob: -10.283873558044434
    6. ']' → logprob: -10.658873558044434
    7. ' :' → logprob: -11.033873558044434
    8. '-' → logprob: -12.033873558044434
    9. '==' → logprob: -12.283873558044434
    10. ' ==' → logprob: -12.283873558044434

Token 102: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7093715667724609
    2. '==' → logprob: -1.709371566772461
    3. ']' → logprob: -1.959371566772461
    4. '=' → logprob: -2.209371566772461
    5. ' ' → logprob: -3.459371566772461
    6. '[' → logprob: -4.334371566772461
    7. ' !=' → logprob: -4.334371566772461
    8. '!=' → logprob: -5.334371566772461
    9. ':' → logprob: -5.584371566772461
    10. ' ]' → logprob: -5.584371566772461

Token 103: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5604026913642883
    2. '==' → logprob: -0.9354026913642883
    3. '!=' → logprob: -4.185402870178223
    4. ' !=' → logprob: -5.060402870178223
    5. '=' → logprob: -5.310402870178223
    6. ' in' → logprob: -5.310402870178223
    7. '.' → logprob: -6.935402870178223
    8. '<' → logprob: -7.435402870178223
    9. ' ' → logprob: -7.435402870178223
    10. 'in' → logprob: -7.560402870178223

Token 104: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2669047713279724
    2. ''S' → logprob: -2.516904830932617
    3. 'S' → logprob: -2.766904830932617
    4. ' S' → logprob: -3.891904830932617
    5. ' '' → logprob: -4.141904830932617
    6. '"' → logprob: -4.391904830932617
    7. ' '('' → logprob: -5.016904830932617
    8. ''A' → logprob: -5.141904830932617
    9. ''a' → logprob: -5.391904830932617
    10. '"S' → logprob: -5.641904830932617

Token 105: 'B' (ID: 33)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.5619275569915771
    2. 'R' → logprob: -1.8119275569915771
    3. 'A' → logprob: -1.9369275569915771
    4. 'a' → logprob: -2.436927556991577
    5. '0' → logprob: -3.061927556991577
    6. '1' → logprob: -3.561927556991577
    7. '<' → logprob: -3.561927556991577
    8. ''' → logprob: -3.561927556991577
    9. ')' → logprob: -3.686927556991577
    10. 'I' → logprob: -3.811927556991577

Token 106: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3553643524646759
    2. '':' → logprob: -1.2303643226623535
    3. 'e' → logprob: -6.4803643226623535
    4. 'B' → logprob: -7.1053643226623535
    5. ' ':' → logprob: -7.3553643226623535
    6. ':' → logprob: -7.4803643226623535
    7. ' '' → logprob: -7.7303643226623535
    8. '':
' → logprob: -7.7303643226623535
    9. 'a' → logprob: -7.8553643226623535
    10. 'A' → logprob: -7.9803643226623535

Token 107: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00740418117493391
    2. ' and' → logprob: -5.632404327392578
    3. ' or' → logprob: -6.007404327392578
    4. ' :' → logprob: -6.757404327392578
    5. 'and' → logprob: -9.382404327392578
    6. ':
' → logprob: -10.007404327392578
    7. ' ' → logprob: -11.132404327392578
    8. 'or' → logprob: -11.632404327392578
    9. ')' → logprob: -12.132404327392578
    10. '.' → logprob: -12.382404327392578

Token 108: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.474648118019104
    2. ' S' → logprob: -0.974648118019104
    3. 'len' → logprob: -8.849648475646973
    4. ' ' → logprob: -8.974648475646973
    5. ' len' → logprob: -8.974648475646973
    6. ' not' → logprob: -9.724648475646973
    7. 'N' → logprob: -10.099648475646973
    8. ' (' → logprob: -10.724648475646973
    9. ' N' → logprob: -11.224648475646973
    10. '(S' → logprob: -11.849648475646973

Token 109: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004761430434882641
    2. '[len' → logprob: -6.129761219024658
    3. '[-' → logprob: -6.879761219024658
    4. '.count' → logprob: -7.254761219024658
    5. '.' → logprob: -7.879761219024658
    6. 'len' → logprob: -8.004761695861816
    7. '==' → logprob: -11.504761695861816
    8. ' ==' → logprob: -11.629761695861816
    9. '```' → logprob: -11.754761695861816
    10. ' ' → logprob: -11.754761695861816

Token 110: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21514448523521423
    2. ''A' → logprob: -2.215144395828247
    3. ''C' → logprob: -3.215144395828247
    4. 'B' → logprob: -3.965144395828247
    5. ''S' → logprob: -4.715144634246826
    6. ''N' → logprob: -5.715144634246826
    7. ''M' → logprob: -6.090144634246826
    8. ''O' → logprob: -6.340144634246826
    9. '']' → logprob: -6.715144634246826
    10. ''U' → logprob: -7.090144634246826

Token 111: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8261570930480957
    2. '!=' → logprob: -1.2011570930480957
    3. ']' → logprob: -1.4511570930480957
    4. '']' → logprob: -4.451157093048096
    5. ')' → logprob: -5.201157093048096
    6. ''' → logprob: -5.701157093048096
    7. ']!=' → logprob: -5.826157093048096
    8. ' ]' → logprob: -6.826157093048096
    9. ' ' → logprob: -7.326157093048096
    10. '!='' → logprob: -7.451157093048096

Token 112: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.25645434856414795
    2. '!=' → logprob: -1.506454348564148
    3. ' ==' → logprob: -6.2564544677734375
    4. '==' → logprob: -6.3814544677734375
    5. '!='' → logprob: -8.006454467773438
    6. ' not' → logprob: -8.131454467773438
    7. ' ' → logprob: -8.631454467773438
    8. ')' → logprob: -10.256454467773438
    9. ')!=' → logprob: -11.631454467773438
    10. ''' → logprob: -12.006454467773438

Token 113: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008101262152194977
    2. ''S' → logprob: -6.008101463317871
    3. ''A' → logprob: -6.133101463317871
    4. ' '' → logprob: -6.383101463317871
    5. ''C' → logprob: -7.383101463317871
    6. ' ' → logprob: -8.508101463317871
    7. ''N' → logprob: -9.258101463317871
    8. ''O' → logprob: -9.258101463317871
    9. 'B' → logprob: -9.383101463317871
    10. '"' → logprob: -9.508101463317871

Token 114: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6691188812255859
    2. 'A' → logprob: -1.419118881225586
    3. 'R' → logprob: -2.044118881225586
    4. 'W' → logprob: -2.419118881225586
    5. 'C' → logprob: -5.169118881225586
    6. 'S' → logprob: -5.169118881225586
    7. 'G' → logprob: -5.919118881225586
    8. 'I' → logprob: -5.919118881225586
    9. 'K' → logprob: -5.919118881225586
    10. 'N' → logprob: -5.919118881225586

Token 115: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17802278697490692
    2. '':' → logprob: -1.9280227422714233
    3. ''' → logprob: -4.178022861480713
    4. ':
' → logprob: -7.178022861480713
    5. '):' → logprob: -7.303022861480713
    6. ' or' → logprob: -7.678022861480713
    7. ')' → logprob: -8.803022384643555
    8. '':
' → logprob: -9.178022384643555
    9. ''or' → logprob: -9.553022384643555
    10. ''):' → logprob: -10.428022384643555

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03677797690033913
    2. 'print' → logprob: -3.911777973175049
    3. ' print' → logprob: -4.286777973175049
    4. '
' → logprob: -6.661777973175049
    5. '\n' → logprob: -7.286777973175049
    6. '	print' → logprob: -9.536778450012207
    7. ' ' → logprob: -9.536778450012207
    8. '```' → logprob: -9.536778450012207
    9. '    
' → logprob: -10.161778450012207
    10. 'exit' → logprob: -10.661778450012207

Token 117: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10203935205936432
    2. '
' → logprob: -2.602039337158203
    3. ' print' → logprob: -3.852039337158203
    4. '   ' → logprob: -7.227039337158203
    5. '\n' → logprob: -7.602039337158203
    6. '\' → logprob: -9.102039337158203
    7. '
' → logprob: -9.102039337158203
    8. '```' → logprob: -9.477039337158203
    9. ' 
' → logprob: -10.352039337158203
    10. '    
' → logprob: -11.102039337158203

Token 118: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01563144661486149
    2. '0' → logprob: -4.765631675720215
    3. '(-' → logprob: -5.015631675720215
    4. '("' → logprob: -9.015631675720215
    5. '(
' → logprob: -9.015631675720215
    6. '('' → logprob: -9.265631675720215
    7. '()' → logprob: -12.140631675720215
    8. '(False' → logprob: -12.265631675720215
    9. '-' → logprob: -12.765631675720215
    10. ' ' → logprob: -13.140631675720215

Token 119: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2148534655570984
    2. '0' → logprob: -1.7148535251617432
    3. '"' → logprob: -4.964853286743164
    4. '-B' → logprob: -5.964853286743164
    5. '"No' → logprob: -6.839853286743164
    6. '-N' → logprob: -7.589853286743164
    7. ''' → logprob: -7.714853286743164
    8. 'No' → logprob: -8.339853286743164
    9. '"-' → logprob: -8.464853286743164
    10. '-im' → logprob: -8.464853286743164

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031840058509260416
    2. ')
' → logprob: -5.753183841705322
    3. ' )' → logprob: -12.50318431854248
    4. ')return' → logprob: -13.87818431854248
    5. ')
' → logprob: -14.87818431854248
    6. '   ' → logprob: -15.25318431854248
    7. ')

' → logprob: -15.75318431854248
    8. '
' → logprob: -16.003183364868164
    9. ' )
' → logprob: -16.003183364868164
    10. '),' → logprob: -16.128183364868164

Token 121: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3392738699913025
    2. 'else' → logprob: -2.5892739295959473
    3. '   ' → logprob: -2.8392739295959473
    4. ')' → logprob: -2.9642739295959473
    5. '\n' → logprob: -3.2142739295959473
    6. '<|end|>' → logprob: -3.5892739295959473
    7. '    
' → logprob: -4.839273929595947
    8. ' else' → logprob: -5.214273929595947
    9. ' 
' → logprob: -5.339273929595947
    10. '```' → logprob: -5.714273929595947

Token 122: ' sys' (ID: 12228)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03692217171192169
    2. 'exit' → logprob: -3.6619222164154053
    3. 'sys' (adapté à ' sys') → logprob: -5.286921977996826
    4. '\n' → logprob: -5.911921977996826
    5. ' ' → logprob: -7.411921977996826
    6. ' 
' → logprob: -7.661921977996826
    7. '
' → logprob: -8.036922454833984
    8. '   ' → logprob: -8.161922454833984
    9. ' exit' → logprob: -8.161922454833984
    10. ' sys' → logprob: -8.161922454833984

Token 123: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.00010759611177491024
    2. 'exit' → logprob: -9.625107765197754
    3. '.' → logprob: -10.250107765197754
    4. '   ' → logprob: -12.875107765197754
    5. '	exit' → logprob: -14.250107765197754
    6. '.stdout' → logprob: -14.375107765197754
    7. '.ex' → logprob: -14.625107765197754
    8. 'xit' → logprob: -14.750107765197754
    9. '.quit' → logprob: -15.250107765197754
    10. ' exit' → logprob: -15.375107765197754

Token 124: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032572117634117603
    2. '(' → logprob: -5.7532572746276855
    3. '()
' → logprob: -9.628256797790527
    4. '())' → logprob: -12.003256797790527
    5. '()]' → logprob: -13.128256797790527
    6. '()`' → logprob: -13.378256797790527
    7. '(
' → logprob: -13.753256797790527
    8. '()\' → logprob: -14.128256797790527
    9. '()(' → logprob: -14.378256797790527
    10. '()

' → logprob: -14.878256797790527

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009136092266999185
    2. ')' → logprob: -7.000913619995117
    3. ')
' → logprob: -13.500913619995117
    4. ' ' → logprob: -14.500913619995117
    5. ' )' → logprob: -15.750913619995117
    6. '()' → logprob: -17.125913619995117
    7. '(' → logprob: -19.500913619995117
    8. '())' → logprob: -19.500913619995117
    9. '1' → logprob: -19.625913619995117
    10. ')

' → logprob: -19.875913619995117

Token 126: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8325677703833207e-05
    2. ')
' → logprob: -10.500028610229492
    3. ' )' → logprob: -14.250028610229492
    4. ')

' → logprob: -16.750028610229492
    5. '
' → logprob: -17.625028610229492
    6. '))' → logprob: -17.750028610229492
    7. ')`' → logprob: -18.000028610229492
    8. ')
' → logprob: -18.250028610229492
    9. '')' → logprob: -18.625028610229492
    10. '()' → logprob: -19.375028610229492

Token 127: 'LR' (ID: 29067)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.29687023162841797
    2. 'dp' → logprob: -3.046870231628418
    3. 'answer' → logprob: -3.546870231628418
    4. 'c' → logprob: -3.671870231628418
    5. 'result' → logprob: -3.796870231628418
    6. 'b' → logprob: -4.046870231628418
    7. 'i' → logprob: -4.046870231628418
    8. 'B' → logprob: -4.171870231628418
    9. 'cnt' → logprob: -4.796870231628418
    10. '_' → logprob: -5.046870231628418

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20336002111434937
    2. '=' → logprob: -2.453360080718994
    3. '_count' → logprob: -3.578360080718994
    4. '_counts' → logprob: -3.953360080718994
    5. 'count' → logprob: -4.078360080718994
    6. 'counts' → logprob: -4.953360080718994
    7. 'E' → logprob: -5.328360080718994
    8. '_pairs' → logprob: -5.453360080718994
    9. '_' → logprob: -5.703360080718994
    10. '=[]' → logprob: -5.703360080718994

Token 129: ' ['' (ID: 5140)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7633348703384399
    2. '[' → logprob: -0.8883348703384399
    3. '0' → logprob: -3.0133347511291504
    4. '[S' → logprob: -3.1383347511291504
    5. '[N' → logprob: -5.13833475112915
    6. '['' → logprob: -5.13833475112915
    7. '[]
' → logprob: -5.38833475112915
    8. '[len' → logprob: -6.01333475112915
    9. ' [' → logprob: -6.13833475112915
    10. 'S' → logprob: -6.76333475112915

Token 130: '']' (ID: 1089)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6207966208457947
    2. 'B' → logprob: -0.8707966208457947
    3. 'R' → logprob: -3.7457966804504395
    4. '0' → logprob: -5.2457966804504395
    5. ''' → logprob: -5.7457966804504395
    6. '('' → logprob: -5.9957966804504395
    7. 'LR' → logprob: -6.1207966804504395
    8. 'S' → logprob: -6.6207966804504395
    9. '']' → logprob: -6.7457966804504395
    10. ']' → logprob: -6.9957966804504395

Token 131: ' *' (ID: 425)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06120907887816429
    2. 'L' → logprob: -4.686209201812744
    3. '*' → logprob: -4.811209201812744
    4. ',' → logprob: -4.811209201812744
    5. 'S' → logprob: -4.936209201812744
    6. 'N' → logprob: -5.061209201812744
    7. '
' → logprob: -5.186209201812744
    8. '[' → logprob: -5.436209201812744
    9. 'for' → logprob: -6.061209201812744
    10. '['' → logprob: -6.811209201812744

Token 132: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023214494809508324
    2. '(N' → logprob: -3.89821457862854
    3. ' N' → logprob: -6.898214340209961
    4. '(' → logprob: -7.023214340209961
    5. ' (' → logprob: -7.773214340209961
    6. '3' → logprob: -9.023214340209961
    7. '2' → logprob: -10.523214340209961
    8. '6' → logprob: -10.523214340209961
    9. '5' → logprob: -10.648214340209961
    10. '7' → logprob: -10.648214340209961

Token 133: ' *' (ID: 425)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.6322290897369385
    2. 'B' → logprob: -1.8822290897369385
    3. 'for' → logprob: -2.0072290897369385
    4. 'i' → logprob: -2.1322290897369385
    5. 'count' → logprob: -2.3822290897369385
    6. ' for' → logprob: -2.7572290897369385
    7. 'LR' → logprob: -3.1322290897369385
    8. 'R' → logprob: -3.3822290897369385
    9. ' ' → logprob: -3.8822290897369385
    10. ' 
' → logprob: -4.007228851318359

Token 134: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11676277220249176
    2. '3' → logprob: -2.24176287651062
    3. ' ' → logprob: -6.366762638092041
    4. '4' → logprob: -6.491762638092041
    5. '5' → logprob: -8.4917631149292
    6. 'N' → logprob: -9.6167631149292
    7. '6' → logprob: -9.6167631149292
    8. '7' → logprob: -9.7417631149292
    9. '1' → logprob: -9.8667631149292
    10. '[' → logprob: -9.9917631149292

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02794661931693554
    2. '3' → logprob: -3.652946710586548
    3. '4' → logprob: -7.152946472167969
    4. '10' → logprob: -7.527946472167969
    5. '5' → logprob: -9.152946472167969
    6. '100' → logprob: -9.527946472167969
    7. '6' → logprob: -10.277946472167969
    8. '1' → logprob: -10.902946472167969
    9. '20' → logprob: -11.027946472167969
    10. '50' → logprob: -11.152946472167969

Token 136: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18024475872516632
    2. '[' → logprob: -2.3052446842193604
    3. '<|end|>' → logprob: -3.6802446842193604
    4. ')' → logprob: -4.9302449226379395
    5. ' 
' → logprob: -5.1802449226379395
    6. 'L' → logprob: -5.3052449226379395
    7. ' ' → logprob: -5.6802449226379395
    8. ',' → logprob: -5.9302449226379395
    9. '[
' → logprob: -6.4302449226379395
    10. '#' → logprob: -6.4302449226379395

Token 137: 'l' (ID: 75)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7051621675491333
    2. '
' → logprob: -1.5801621675491333
    3. '<|end|>' → logprob: -1.8301621675491333
    4. ')' → logprob: -2.3301620483398438
    5. '[
' → logprob: -4.705162048339844
    6. '\n' → logprob: -4.830162048339844
    7. ' ' → logprob: -5.330162048339844
    8. ']' → logprob: -5.455162048339844
    9. '#' → logprob: -5.955162048339844
    10. '[]' → logprob: -6.330162048339844

Token 138: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1461195945739746
    2. '=' → logprob: -1.6461195945739746
    3. 'eft' → logprob: -1.8961195945739746
    4. 'e' → logprob: -2.0211195945739746
    5. ' =' → logprob: -2.5211195945739746
    6. 'R' → logprob: -2.8961195945739746
    7. 'en' → logprob: -3.7711195945739746
    8. 'ast' → logprob: -4.521119594573975
    9. 'et' → logprob: -5.146119594573975
    10. ',' → logprob: -5.271119594573975

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023041737731546164
    2. ' ' → logprob: -6.2523040771484375
    3. 'r' → logprob: -8.877304077148438
    4. '-' → logprob: -9.127304077148438
    5. '1' → logprob: -9.752304077148438
    6. '[' → logprob: -10.502304077148438
    7. '[]' → logprob: -11.002304077148438
    8. ' -' → logprob: -12.002304077148438
    9. 'N' → logprob: -12.752304077148438
    10. '2' → logprob: -13.002304077148438

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011095100082457066
    2. 'r' → logprob: -5.01109504699707
    3. '[]' → logprob: -6.26109504699707
    4. '-' → logprob: -7.01109504699707
    5. '[' → logprob: -7.13609504699707
    6. ' ' → logprob: -7.88609504699707
    7. '1' → logprob: -8.76109504699707
    8. '[]
' → logprob: -10.01109504699707
    9. '[r' → logprob: -10.26109504699707
    10. '-r' → logprob: -10.63609504699707

Token 141: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: 'ans' (ID: 616)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03383368253707886
    2. '<|end|>' → logprob: -3.6588337421417236
    3. ' 
' → logprob: -5.4088335037231445
    4. '+' → logprob: -7.9088335037231445
    5. ' l' → logprob: -8.033833503723145
    6. '0' → logprob: -8.158833503723145
    7. '
' → logprob: -8.158833503723145
    8. '#' → logprob: -8.658833503723145
    9. ')' → logprob: -8.658833503723145
    10. '=' → logprob: -8.658833503723145

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014185366220772266
    2. '=' → logprob: -4.264185428619385
    3. ' ' → logprob: -11.139184951782227
    4. ',' → logprob: -12.514184951782227
    5. ' =
' → logprob: -12.764184951782227
    6. ' +=' → logprob: -15.014184951782227
    7. ' ,' → logprob: -15.639184951782227
    8. ' ' → logprob: -16.889184951782227
    9. ' =)' → logprob: -16.889184951782227
    10. 's' → logprob: -17.014184951782227

Token 144: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03369399532675743
    2. ' ' → logprob: -3.40869402885437
    3. '1' → logprob: -10.15869426727295
    4. '[]' → logprob: -12.15869426727295
    5. '[' → logprob: -14.15869426727295
    6. ' []' → logprob: -14.40869426727295
    7. '10' → logprob: -15.03369426727295
    8. ' -' → logprob: -15.03369426727295
    9. ' [' → logprob: -15.34619426727295
    10. '-' → logprob: -15.40869426727295

Token 145: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006210576975718141
    2. '1' → logprob: -7.6256208419799805
    3. '[]' → logprob: -9.37562084197998
    4. '-' → logprob: -11.12562084197998
    5. '[' → logprob: -11.87562084197998
    6. ' ' → logprob: -11.87562084197998
    7. 'math' → logprob: -12.37562084197998
    8. 'float' → logprob: -12.37562084197998
    9. '10' → logprob: -13.00062084197998
    10. 'int' → logprob: -13.37562084197998

Token 146: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09108751267194748
    2. '<|end|>' → logprob: -2.966087579727173
    3. ' ' → logprob: -3.716087579727173
    4. ' for' → logprob: -5.591087341308594
    5. ' 
' → logprob: -5.716087341308594
    6. '\n' → logprob: -6.341087341308594
    7. 'for' → logprob: -6.466087341308594
    8. '<|end|>' → logprob: -8.591087341308594
    9. '' → logprob: -8.716087341308594
    10. '  
' → logprob: -9.091087341308594

Token 147: 'm' (ID: 76)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04332207143306732
    2. ' for' → logprob: -4.0433220863342285
    3. 'for' → logprob: -4.6683220863342285
    4. '
' → logprob: -4.7933220863342285
    5. ' 
' → logprob: -5.1683220863342285
    6. ')' → logprob: -7.4183220863342285
    7. ' )' → logprob: -9.04332160949707
    8. '0' → logprob: -9.16832160949707
    9. ':' → logprob: -9.16832160949707
    10. ',' → logprob: -9.16832160949707

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6534615755081177
    2. 'ult' → logprob: -1.4034615755081177
    3. ' =' → logprob: -2.028461456298828
    4. 'ax' → logprob: -2.903461456298828
    5. 'od' → logprob: -3.903461456298828
    6. 'id' → logprob: -4.403461456298828
    7. 'ul' → logprob: -5.153461456298828
    8. 'a' → logprob: -6.653461456298828
    9. 'x' → logprob: -6.903461456298828
    10. 'ultip' → logprob: -6.903461456298828

Token 149: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023078445345163345
    2. '100' → logprob: -4.898078441619873
    3. '0' → logprob: -5.398078441619873
    4. '{}' → logprob: -5.523078441619873
    5. '1' → logprob: -5.773078441619873
    6. ' ' → logprob: -6.398078441619873
    7. '998' → logprob: -7.273078441619873
    8. 'int' → logprob: -7.398078441619873
    9. '2' → logprob: -8.773078918457031
    10. '{' → logprob: -9.398078918457031

Token 150: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.036843009293079376
    2. '100' → logprob: -4.1618428230285645
    3. '0' → logprob: -4.6618428230285645
    4. '{}' → logprob: -5.7868428230285645
    5. 'int' → logprob: -6.2868428230285645
    6. '998' → logprob: -6.2868428230285645
    7. 'default' → logprob: -6.4118428230285645
    8. '1' → logprob: -6.5368428230285645
    9. '2' → logprob: -7.7868428230285645
    10. 'math' → logprob: -8.411843299865723

Token 151: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.21009184420108795
    2. '09' → logprob: -1.8350918292999268
    3. '000' → logprob: -4.210092067718506
    4. '9' → logprob: -4.460092067718506
    5. '009' → logprob: -5.835092067718506
    6. '007' → logprob: -8.335091590881348
    7. '07' → logprob: -8.960091590881348
    8. ' ' → logprob: -9.835091590881348
    9. '00' → logprob: -9.835091590881348
    10. ' **' → logprob: -10.585091590881348

Token 152: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.5
    3. '+' → logprob: -18.375
    4. '```' → logprob: -18.75
    5. ' ' → logprob: -20.125
    6. '18' → logprob: -20.375
    7. '９' → logprob: -20.5
    8. '
' → logprob: -20.5
    9. '10' → logprob: -21.25
    10. '19' → logprob: -21.625

Token 153: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006771695916540921
    2. '7' → logprob: -7.750677108764648
    3. ' +' → logprob: -8.375677108764648
    4. '+
' → logprob: -11.375677108764648
    5. '9' → logprob: -13.250677108764648
    6. '```' → logprob: -13.875677108764648
    7. '
' → logprob: -14.625677108764648
    8. ' plus' → logprob: -15.125677108764648
    9. 'plus' → logprob: -15.125677108764648
    10. ' ' → logprob: -15.125677108764648

Token 154: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.1782583391759545e-05
    2. '+' → logprob: -10.375031471252441
    3. '07' → logprob: -15.250031471252441
    4. '9' → logprob: -16.250032424926758
    5. ' ' → logprob: -16.250032424926758
    6. '```' → logprob: -16.625032424926758
    7. '007' → logprob: -18.000032424926758
    8. ' +' → logprob: -18.250032424926758
    9. '' → logprob: -18.875032424926758
    10. '79' → logprob: -19.125032424926758

Token 155: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08137284219264984
    2. ' for' → logprob: -3.3313727378845215
    3. ' 
' → logprob: -3.7063727378845215
    4. 'for' → logprob: -4.5813727378845215
    5. ' ' → logprob: -5.0813727378845215
    6. '\n' → logprob: -7.4563727378845215
    7. '<|end|>' → logprob: -7.9563727378845215
    8. '' → logprob: -9.45637321472168
    9. ')' → logprob: -9.58137321472168
    10. ',' → logprob: -9.70637321472168

Token 156: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2787151634693146
    2. '
' → logprob: -2.403715133666992
    3. ' 
' → logprob: -2.403715133666992
    4. '<|end|>' → logprob: -3.403715133666992
    5. ' for' → logprob: -4.028715133666992
    6. 'for' → logprob: -4.778715133666992
    7. ')' → logprob: -6.653715133666992
    8. '\n' → logprob: -8.403715133666992
    9. '  
' → logprob: -8.403715133666992
    10. 'n' → logprob: -8.778715133666992

Token 157: ' mod' (ID: 1812)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3322845697402954
    2. ' solve' → logprob: -1.8322845697402954
    3. ' check' → logprob: -3.207284450531006
    4. ' count' → logprob: -3.707284450531006
    5. ' validate' → logprob: -4.332284450531006
    6. ' dfs' → logprob: -4.332284450531006
    7. ' calc' → logprob: -4.957284450531006
    8. ' mod' → logprob: -5.207284450531006
    9. ' calculate' → logprob: -5.707284450531006
    10. ' factorial' → logprob: -5.957284450531006

Token 158: '_add' (ID: 8390)
  Prédit: '_mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.6279692649841309
    2. '_pow' → logprob: -1.0029692649841309
    3. '_add' → logprob: -3.627969264984131
    4. '_exp' → logprob: -4.127969264984131
    5. 'ular' → logprob: -4.252969264984131
    6. 'pow' → logprob: -4.377969264984131
    7. '_factor' → logprob: -4.502969264984131
    8. '_' → logprob: -4.752969264984131
    9. '_inv' → logprob: -6.002969264984131
    10. ' _' → logprob: -6.252969264984131

Token 159: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1270650178194046
    2. '(a' → logprob: -2.1270649433135986
    3. '(x' → logprob: -9.00206470489502
    4. ' (' → logprob: -12.00206470489502
    5. '(
' → logprob: -12.62706470489502
    6. '(A' → logprob: -13.12706470489502
    7. '(

' → logprob: -14.50206470489502
    8. '(i' → logprob: -15.12706470489502
    9. '(n' → logprob: -15.12706470489502
    10. 'a' → logprob: -15.62706470489502

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.623244553338736e-05
    2. ' ,' → logprob: -10.500065803527832
    3. ',a' → logprob: -10.625065803527832
    4. ',b' → logprob: -11.375065803527832
    5. ',
' → logprob: -14.000065803527832
    6. ',n' → logprob: -14.250065803527832
    7. ',

' → logprob: -16.00006675720215
    8. '‌,' → logprob: -16.12506675720215
    9. ',k' → logprob: -16.25006675720215
    10. ',p' → logprob: -16.25006675720215

Token 161: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804183006286621
    2. ' b' → logprob: -3.288041830062866
    3. '<|end|>' → logprob: -15.538042068481445
    4. ')b' → logprob: -16.288042068481445
    5. ' ' → logprob: -16.538042068481445
    6. ')' → logprob: -17.538042068481445
    7. ',b' → logprob: -17.663042068481445
    8. '	b' → logprob: -17.788042068481445
    9. '<|end|>' → logprob: -18.663042068481445
    10. '  ' → logprob: -18.913042068481445

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008392847958020866
    2. ',' → logprob: -7.3758392333984375
    3. ')' → logprob: -8.875839233398438
    4. ':' → logprob: -9.875839233398438
    5. '):
' → logprob: -11.000839233398438
    6. ' ):' → logprob: -12.375839233398438
    7. '}:' → logprob: -15.375839233398438
    8. '):
' → logprob: -15.500839233398438
    9. '),' → logprob: -16.625839233398438
    10. '):

' → logprob: -16.875839233398438

Token 163: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39496520161628723
    2. ' return' → logprob: -1.7699651718139648
    3. ':return' → logprob: -2.894965171813965
    4. ':
' → logprob: -3.019965171813965
    5. '   ' → logprob: -3.144965171813965
    6. '	return' → logprob: -5.644965171813965
    7. 'return' → logprob: -5.894965171813965
    8. '<|end|>' → logprob: -6.769965171813965
    9. ' ' → logprob: -7.019965171813965
    10. '):' → logprob: -9.769965171813965

Token 164: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4273841977119446
    2. ' return' → logprob: -1.1773841381072998
    3. ' (' → logprob: -3.4273841381073
    4. '   ' → logprob: -5.677384376525879
    5. '(a' → logprob: -6.052384376525879
    6. '(return' → logprob: -7.052384376525879
    7. '(' → logprob: -7.552384376525879
    8. '	return' → logprob: -9.927384376525879
    9. ' ' → logprob: -11.802384376525879
    10. 'a' → logprob: -12.677384376525879

Token 165: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3868880271911621
    2. ' (' → logprob: -1.136888027191162
    3. '(ans' → logprob: -11.63688850402832
    4. '(abs' → logprob: -12.76188850402832
    5. '(' → logprob: -13.01188850402832
    6. '(A' → logprob: -13.76188850402832
    7. '(max' → logprob: -14.63688850402832
    8. '   ' → logprob: -15.13688850402832
    9. '(ai' → logprob: -15.26188850402832
    10. '(ax' → logprob: -15.51188850402832

Token 166: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.200166469876422e-06
    2. '(a' → logprob: -12.750004768371582
    3. ' a' → logprob: -13.000004768371582
    4. '	a' → logprob: -19.7500057220459
    5. ' (' → logprob: -21.2500057220459
    6. ')a' → logprob: -21.2500057220459
    7. '_a' → logprob: -21.3750057220459
    8. 'а' → logprob: -21.8750057220459
    9. '[a' → logprob: -22.2500057220459
    10. '
' → logprob: -24.1250057220459

Token 167: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043891873210668564
    2. ' +' → logprob: -3.1688919067382812
    3. '+b' → logprob: -7.168891906738281
    4. '+a' → logprob: -9.043891906738281
    5. '%' → logprob: -13.418891906738281
    6. 'a' → logprob: -14.043891906738281
    7. '+
' → logprob: -14.168891906738281
    8. '+m' → logprob: -15.668891906738281
    9. '
' → logprob: -15.793891906738281
    10. ' ' → logprob: -15.918891906738281

Token 168: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07888978719711304
    2. ' b' → logprob: -2.578889846801758
    3. '   ' → logprob: -17.578889846801758
    4. ')b' → logprob: -17.828889846801758
    5. '	b' → logprob: -18.828889846801758
    6. ' ' → logprob: -18.828889846801758
    7. ')' → logprob: -19.703889846801758
    8. ' б' → logprob: -20.078889846801758
    9. '
' → logprob: -21.078889846801758
    10. '    ' → logprob: -21.578889846801758

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027849749312736094
    2. ')%' → logprob: -8.50027847290039
    3. ' )' → logprob: -9.50027847290039
    4. '%' → logprob: -16.00027847290039
    5. '）' → logprob: -17.87527847290039
    6. ')
' → logprob: -18.25027847290039
    7. ')m' → logprob: -20.75027847290039
    8. ')

' → logprob: -20.87527847290039
    9. ' ' → logprob: -21.00027847290039
    10. '%)' → logprob: -21.00027847290039

Token 170: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6933257579803467
    2. ' %' → logprob: -0.6933257579803467
    3. '%m' → logprob: -8.693325996398926
    4. ' ' → logprob: -11.818325996398926
    5. '%
' → logprob: -14.193325996398926
    6. ' %
' → logprob: -14.193325996398926
    7. '
' → logprob: -14.443325996398926
    8. ' ' → logprob: -14.568325996398926
    9. ')' → logprob: -14.693325996398926
    10. '%n' → logprob: -16.31832504272461

Token 171: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0019286326132714748
    2. ' m' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.751928329467773
    4. '	m' → logprob: -17.876928329467773
    5. '
' → logprob: -20.251928329467773
    6. '   ' → logprob: -20.501928329467773
    7. '(m' → logprob: -20.751928329467773
    8. ' ' → logprob: -21.376928329467773
    9. ' 
' → logprob: -21.501928329467773
    10. '10' → logprob: -21.626928329467773

Token 172: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.060258686542510986
    2. '<|end|>' → logprob: -3.435258626937866
    3. 'def' → logprob: -4.435258865356445
    4. ')' → logprob: -5.310258865356445
    5. '\n' → logprob: -5.935258865356445
    6. ',' → logprob: -6.810258865356445
    7. '  
' → logprob: -6.810258865356445
    8. '<|end|>' → logprob: -7.060258865356445
    9. '\' → logprob: -7.560258865356445
    10. '' → logprob: -7.560258865356445

Token 174: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.04879095032811165
    2. 'mod' → logprob: -3.04879093170166
    3. ' mul' → logprob: -9.04879093170166
    4. '_mod' → logprob: -10.92379093170166
    5. 'def' → logprob: -11.17379093170166
    6. '(mod' → logprob: -11.29879093170166
    7. '
' → logprob: -11.42379093170166
    8. ' def' → logprob: -11.67379093170166
    9. 'mul' → logprob: -12.42379093170166
    10. ' ' → logprob: -12.79879093170166

Token 175: '_sub' (ID: 11572)
  Prédit: '_mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.0039091999642550945
    2. '_' → logprob: -6.253909111022949
    3. '_sub' → logprob: -6.253909111022949
    4. '_add' → logprob: -10.75390911102295
    5. '_mult' → logprob: -11.62890911102295
    6. '_mod' → logprob: -11.87890911102295
    7. '_m' → logprob: -12.00390911102295
    8. 'mul' → logprob: -12.00390911102295
    9. ' _' → logprob: -12.87890911102295
    10. '_pow' → logprob: -14.37890911102295

Token 176: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.048624493181705475
    2. '(' → logprob: -3.0486245155334473
    3. ' (' → logprob: -10.548624038696289
    4. '(
' → logprob: -12.298624038696289
    5. '<|end|>' → logprob: -12.798624038696289
    6. '(A' → logprob: -13.673624038696289
    7. 'a' → logprob: -14.173624038696289
    8. '((' → logprob: -14.673624038696289
    9. ',' → logprob: -15.298624038696289
    10. '(

' → logprob: -15.548624038696289

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011856284982059151
    2. ' ,' → logprob: -9.625118255615234
    3. ',a' → logprob: -10.125118255615234
    4. '(a' → logprob: -12.250118255615234
    5. ',b' → logprob: -12.625118255615234
    6. ',
' → logprob: -13.000118255615234
    7. ')' → logprob: -13.875118255615234
    8. 'a' → logprob: -14.375118255615234
    9. '(' → logprob: -15.750118255615234
    10. ',

' → logprob: -16.250118255615234

Token 178: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011048054322600365
    2. ' b' → logprob: -4.511047840118408
    3. '(b' → logprob: -16.13604736328125
    4. ' ' → logprob: -16.51104736328125
    5. '	b' → logprob: -17.13604736328125
    6. '   ' → logprob: -17.63604736328125
    7. 'a' → logprob: -17.76104736328125
    8. ')b' → logprob: -18.38604736328125
    9. 'def' → logprob: -19.01104736328125
    10. '  ' → logprob: -20.01104736328125

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008615399710834026
    2. '):
' → logprob: -4.758615493774414
    3. '):
' → logprob: -14.508615493774414
    4. ')' → logprob: -15.508615493774414
    5. '):

' → logprob: -16.258615493774414
    6. ':' → logprob: -16.758615493774414
    7. ' ):' → logprob: -16.758615493774414
    8. '   ' → logprob: -20.133615493774414
    9. '}:' → logprob: -20.508615493774414
    10. 'def' → logprob: -20.633615493774414

Token 180: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21043595671653748
    2. '   ' → logprob: -2.4604358673095703
    3. 'return' → logprob: -2.5854358673095703
    4. '
' → logprob: -3.7104358673095703
    5. ':return' → logprob: -6.71043586730957
    6. '	return' → logprob: -6.83543586730957
    7. ' (' → logprob: -7.33543586730957
    8. ':
' → logprob: -7.83543586730957
    9. '(' → logprob: -7.83543586730957
    10. ':' → logprob: -8.33543586730957

Token 181: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3333098590373993
    2. ' (' → logprob: -1.3333098888397217
    3. 'return' (adapté à ' return') → logprob: -4.083309650421143
    4. '(a' → logprob: -5.833309650421143
    5. '(' → logprob: -10.7083101272583
    6. '   ' → logprob: -11.0833101272583
    7. '(return' → logprob: -11.0833101272583
    8. ' ' → logprob: -12.4583101272583
    9. '(b' → logprob: -12.8333101272583
    10. '	return' → logprob: -12.9583101272583

Token 182: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01815134845674038
    2. '(a' → logprob: -4.01815128326416
    3. '(m' → logprob: -13.89315128326416
    4. '(max' → logprob: -15.64315128326416
    5. ' ' → logprob: -16.768152236938477
    6. '(abs' → logprob: -16.893152236938477
    7. '(ans' → logprob: -17.268152236938477
    8. '(A' → logprob: -17.518152236938477
    9. '(' → logprob: -17.893152236938477
    10. '(b' → logprob: -18.143152236938477

Token 183: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006811649072915316
    2. 'a' → logprob: -5.006811618804932
    3. ' (' → logprob: -9.25681209564209
    4. ' a' → logprob: -14.50681209564209
    5. '((' → logprob: -15.88181209564209
    6. ' ' → logprob: -17.506811141967773
    7. '(' → logprob: -17.631811141967773
    8. '   ' → logprob: -17.756811141967773
    9. '(m' → logprob: -17.756811141967773
    10. '[a' → logprob: -18.631811141967773

Token 184: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0816940069198608
    2. ' %' → logprob: -1.0816940069198608
    3. ' -' → logprob: -1.7066940069198608
    4. ' )' → logprob: -2.5816941261291504
    5. '%' → logprob: -3.2066941261291504
    6. ' +' → logprob: -4.45669412612915
    7. '+' → logprob: -4.70669412612915
    8. '-' → logprob: -6.20669412612915
    9. ')%' → logprob: -6.83169412612915
    10. ' ' → logprob: -8.206693649291992

Token 185: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759396553039551
    2. ' b' → logprob: -0.8259396553039551
    3. ' ' → logprob: -16.200939178466797
    4. '	b' → logprob: -16.700939178466797
    5. ')b' → logprob: -17.075939178466797
    6. '<|end|>' → logprob: -17.700939178466797
    7. ' б' → logprob: -18.450939178466797
    8. '_b' → logprob: -18.825939178466797
    9. '   ' → logprob: -19.075939178466797
    10. ')' → logprob: -20.075939178466797

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025601841509342194
    2. '+' → logprob: -4.400601863861084
    3. ' )' → logprob: -4.525601863861084
    4. ' +' → logprob: -6.400601863861084
    5. ')%' → logprob: -8.025601387023926
    6. '+m' → logprob: -8.775601387023926
    7. '%' → logprob: -10.650601387023926
    8. ')m' → logprob: -12.900601387023926
    9. ' %' → logprob: -13.025601387023926
    10. '+a' → logprob: -13.275601387023926

Token 187: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4802718460559845
    2. '%' → logprob: -0.9802718162536621
    3. '%m' → logprob: -5.105271816253662
    4. ')' → logprob: -9.73027229309082
    5. ' ' → logprob: -11.35527229309082
    6. ' ' → logprob: -11.73027229309082
    7. '%b' → logprob: -11.73027229309082
    8. '%n' → logprob: -12.60527229309082
    9. '
' → logprob: -12.98027229309082
    10. '%i' → logprob: -13.10527229309082

Token 188: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.157039049663581e-05
    2. ' m' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -17.375051498413086
    4. '%m' → logprob: -19.375051498413086
    5. '	m' → logprob: -20.000051498413086
    6. ' м' → logprob: -20.375051498413086
    7. ')m' → logprob: -20.500051498413086
    8. 'м' → logprob: -21.000051498413086
    9. 'mod' → logprob: -21.125051498413086
    10. '<|end|>' → logprob: -21.250051498413086

Token 189: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16075310111045837
    2. '
' → logprob: -1.9107531309127808
    3. ' def' → logprob: -8.03575325012207
    4. '```' → logprob: -9.41075325012207
    5. '\' → logprob: -10.41075325012207
    6. '
' → logprob: -10.41075325012207
    7. '  
' → logprob: -10.78575325012207
    8. '<|end|>' → logprob: -12.03575325012207
    9. '#' → logprob: -12.16075325012207
    10. ' 
' → logprob: -12.16075325012207

Token 190: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023808926343917847
    2. '
' → logprob: -3.7738089561462402
    3. '\' → logprob: -8.273808479309082
    4. '\n' → logprob: -9.148808479309082
    5. ' def' → logprob: -9.523808479309082
    6. '```' → logprob: -9.773808479309082
    7. '<|end|>' → logprob: -11.523808479309082
    8. '*' → logprob: -11.773808479309082
    9. '  
' → logprob: -11.898808479309082
    10. '
' → logprob: -12.023808479309082

Token 191: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.06225559487938881
    2. 'mod' → logprob: -2.812255620956421
    3. ' mul' → logprob: -9.062255859375
    4. '(mod' → logprob: -9.687255859375
    5. '_mod' → logprob: -9.812255859375
    6. ' ' → logprob: -11.062255859375
    7. ' def' → logprob: -11.687255859375
    8. ''' → logprob: -12.687255859375
    9. '(' → logprob: -12.687255859375
    10. ' modu' → logprob: -13.062255859375

Token 192: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -4.7755875129951164e-05
    2. '_' → logprob: -11.00004768371582
    3. '_add' → logprob: -11.00004768371582
    4. '_mult' → logprob: -11.25004768371582
    5. '_m' → logprob: -15.00004768371582
    6. 'mul' → logprob: -15.00004768371582
    7. ' _' → logprob: -15.62504768371582
    8. '_pow' → logprob: -15.62504768371582
    9. '_mod' → logprob: -15.75004768371582
    10. 'Mul' → logprob: -18.00004768371582

Token 193: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.020587317645549774
    2. '(' → logprob: -3.895587205886841
    3. ' (' → logprob: -10.020586967468262
    4. '(A' → logprob: -15.020586967468262
    5. 'a' → logprob: -15.520586967468262
    6. ' ' → logprob: -16.020587921142578
    7. ',' → logprob: -16.395587921142578
    8. '(ai' → logprob: -16.520587921142578
    9. '(
' → logprob: -16.645587921142578
    10. '<|end|>' → logprob: -16.770587921142578

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016784870997071266
    2. '(a' → logprob: -4.14178466796875
    3. ' ,' → logprob: -8.14178466796875
    4. ',a' → logprob: -8.26678466796875
    5. '(' → logprob: -8.64178466796875
    6. 'a' → logprob: -11.14178466796875
    7. ',
' → logprob: -12.89178466796875
    8. ' (' → logprob: -13.01678466796875
    9. ',b' → logprob: -13.14178466796875
    10. ')' → logprob: -13.39178466796875

Token 195: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006715370807796717
    2. ' b' → logprob: -5.006715297698975
    3. ' ' → logprob: -18.381715774536133
    4. '	b' → logprob: -18.631715774536133
    5. '(b' → logprob: -19.631715774536133
    6. '   ' → logprob: -20.006715774536133
    7. ')b' → logprob: -20.006715774536133
    8. ',b' → logprob: -21.131715774536133
    9. 'a' → logprob: -22.006715774536133
    10. ' ' → logprob: -22.006715774536133

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016071675345301628
    2. '):
' → logprob: -4.141071796417236
    3. ':' → logprob: -11.016071319580078
    4. ' ):' → logprob: -11.641071319580078
    5. '):
' → logprob: -12.266071319580078
    6. ')' → logprob: -12.391071319580078
    7. '):

' → logprob: -13.266071319580078
    8. '   ' → logprob: -15.141071319580078
    9. 'def' → logprob: -15.641071319580078
    10. ' ):
' → logprob: -15.641071319580078

Token 197: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8461604118347168
    2. '   ' → logprob: -0.9711604118347168
    3. ' return' → logprob: -2.096160411834717
    4. '(' → logprob: -3.221160411834717
    5. '(a' → logprob: -3.971160411834717
    6. 'return' → logprob: -4.721160411834717
    7. '(
' → logprob: -7.596160411834717
    8. '	return' → logprob: -8.096160888671875
    9. ' ' → logprob: -8.346160888671875
    10. '
' → logprob: -8.346160888671875

Token 198: ' return' (ID: 622)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2378663867712021
    2. ' (' → logprob: -1.9878664016723633
    3. ' return' → logprob: -2.9878664016723633
    4. 'return' (adapté à ' return') → logprob: -3.7378664016723633
    5. '(' → logprob: -8.487866401672363
    6. 'a' → logprob: -8.737866401672363
    7. '(return' → logprob: -9.612866401672363
    8. ' a' → logprob: -9.987866401672363
    9. '   ' → logprob: -11.112866401672363
    10. ' ' → logprob: -12.112866401672363

Token 199: ' ((' (ID: 3536)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02327588014304638
    2. '(a' → logprob: -3.773275852203369
    3. ' a' → logprob: -11.273276329040527
    4. '(' → logprob: -11.398276329040527
    5. 'a' → logprob: -12.023276329040527
    6. ' ' → logprob: -15.398276329040527
    7. ' (
' → logprob: -15.898276329040527
    8. '(
' → logprob: -16.39827537536621
    9. ' ' → logprob: -17.64827537536621
    10. '((' → logprob: -18.39827537536621

Token 200: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.088346359931165e-07
    2. ' a' → logprob: -14.000000953674316
    3. '	a' → logprob: -19.25
    4. ')a' → logprob: -19.75
    5. '   ' → logprob: -20.0
    6. '(a' → logprob: -20.25
    7. 'а' → logprob: -20.875
    8. ')' → logprob: -21.5
    9. 'int' → logprob: -21.625
    10. '
' → logprob: -22.75

Token 201: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6008279919624329
    2. '%' → logprob: -0.8508279919624329
    3. ' *' → logprob: -3.850827932357788
    4. ')' → logprob: -6.475828170776367
    5. '*' → logprob: -6.850828170776367
    6. 'a' → logprob: -7.600828170776367
    7. ' ' → logprob: -9.600828170776367
    8. ')%' → logprob: -9.725828170776367
    9. ' )' → logprob: -10.100828170776367
    10. ')*' → logprob: -11.350828170776367

Token 202: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0019286326132714748
    2. ' m' → logprob: -6.251928806304932
    3. ')m' → logprob: -20.876928329467773
    4. '	m' → logprob: -21.376928329467773
    5. ' ' → logprob: -22.751928329467773
    6. ' м' → logprob: -22.876928329467773
    7. '(m' → logprob: -24.501928329467773
    8. 'м' → logprob: -24.626928329467773
    9. '%m' → logprob: -24.626928329467773
    10. ')' → logprob: -24.876928329467773

Token 203: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004562943649943918
    2. ')*' → logprob: -8.375455856323242
    3. ' )' → logprob: -8.875455856323242
    4. '*' → logprob: -9.875455856323242
    5. ' *' → logprob: -10.500455856323242
    6. ')*(' → logprob: -12.000455856323242
    7. '*)' → logprob: -14.500455856323242
    8. ' ' → logprob: -15.750455856323242
    9. '   ' → logprob: -16.625455856323242
    10. ')
' → logprob: -16.625455856323242

Token 204: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1002078503370285
    2. '*' → logprob: -2.350207805633545
    3. '*b' → logprob: -14.350208282470703
    4. ' ' → logprob: -14.725208282470703
    5. '*(' → logprob: -15.350208282470703
    6. ')' → logprob: -17.600208282470703
    7. ' ' → logprob: -17.600208282470703
    8. ' *
' → logprob: -18.350208282470703
    9. ')*' → logprob: -18.725208282470703
    10. '   ' → logprob: -18.975208282470703

Token 205: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.4740966856479645
    2. ' (' → logprob: -0.9740966558456421
    3. 'b' → logprob: -11.724096298217773
    4. ' b' → logprob: -11.724096298217773
    5. '(' → logprob: -12.599096298217773
    6. ' ' → logprob: -16.224096298217773
    7. '  ' → logprob: -18.224096298217773
    8. '   ' → logprob: -18.724096298217773
    9. '	b' → logprob: -19.099096298217773
    10. ' ' → logprob: -19.599096298217773

Token 206: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1147637739777565
    2. '(b' → logprob: -2.3647637367248535
    3. ' b' → logprob: -4.4897637367248535
    4. ' (' → logprob: -5.7397637367248535
    5. '   ' → logprob: -11.989764213562012
    6. '(' → logprob: -12.989764213562012
    7. '	b' → logprob: -13.114764213562012
    8. ' ' → logprob: -13.614764213562012
    9. '  ' → logprob: -14.989764213562012
    10. ')b' → logprob: -15.864764213562012

Token 207: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.026308773085474968
    2. '%' → logprob: -3.65130877494812
    3. '%m' → logprob: -12.0263090133667
    4. ' ' → logprob: -14.1513090133667
    5. ' ' → logprob: -14.5263090133667
    6. ')' → logprob: -15.0263090133667
    7. ' %
' → logprob: -15.1513090133667
    8. ')%' → logprob: -15.1513090133667
    9. '%b' → logprob: -16.776308059692383
    10. ' %=' → logprob: -17.026308059692383

Token 208: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12692873179912567
    2. ' m' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.126928329467773
    4. ')' → logprob: -15.376928329467773
    5. ')m' → logprob: -16.376928329467773
    6. '	m' → logprob: -16.751928329467773
    7. 'mod' → logprob: -18.126928329467773
    8. ' ' → logprob: -18.126928329467773
    9. '   ' → logprob: -18.501928329467773
    10. ' м' → logprob: -18.751928329467773

Token 209: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.167648876318708e-05
    2. ')%' → logprob: -10.625041961669922
    3. ' )' → logprob: -11.000041961669922
    4. '))' → logprob: -14.500041961669922
    5. '   ' → logprob: -15.750041961669922
    6. ')
' → logprob: -18.500041961669922
    7. ' ' → logprob: -19.375041961669922
    8. 'def' → logprob: -19.875041961669922
    9. '')' → logprob: -19.875041961669922
    10. '）' → logprob: -20.000041961669922

Token 210: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3133898675441742
    2. ' %' → logprob: -1.3133898973464966
    3. '%m' → logprob: -9.438389778137207
    4. ')' → logprob: -10.188389778137207
    5. ')%' → logprob: -11.813389778137207
    6. ' ' → logprob: -13.813389778137207
    7. '%n' → logprob: -14.813389778137207
    8. '
' → logprob: -15.188389778137207
    9. '   ' → logprob: -15.313389778137207
    10. ' ' → logprob: -15.438389778137207

Token 211: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0019286326132714748
    2. ' m' → logprob: -6.251928806304932
    3. '	m' → logprob: -20.501928329467773
    4. '(m' → logprob: -21.626928329467773
    5. ' ' → logprob: -22.126928329467773
    6. ')m' → logprob: -22.251928329467773
    7. '   ' → logprob: -22.501928329467773
    8. ' м' → logprob: -22.751928329467773
    9. 'м' → logprob: -23.251928329467773
    10. ' ' → logprob: -23.251928329467773

Token 212: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06553581357002258
    2. ')' → logprob: -3.6905357837677
    3. 'def' → logprob: -3.6905357837677
    4. '\n' → logprob: -4.690536022186279
    5. ')
' → logprob: -6.940536022186279
    6. '
' → logprob: -7.065536022186279
    7. '\' → logprob: -7.315536022186279
    8. '' → logprob: -7.940536022186279
    9. '  
' → logprob: -8.065535545349121
    10. '

' → logprob: -8.815535545349121

Token 213: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5168207883834839
    2. 'def' → logprob: -1.8918207883834839
    3. '
' → logprob: -2.5168209075927734
    4. '_' → logprob: -3.1418209075927734
    5. '[' → logprob: -3.3918209075927734
    6. ',' → logprob: -4.141820907592773
    7. '(
' → logprob: -4.141820907592773
    8. '#' → logprob: -4.516820907592773
    9. '\' → logprob: -4.766820907592773
    10. '(' → logprob: -5.016820907592773

Token 214: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.25466784834861755
    2. 'mod' → logprob: -1.50466787815094
    3. 'pow' → logprob: -6.37966775894165
    4. ' pow' → logprob: -6.87966775894165
    5. '(mod' → logprob: -13.129668235778809
    6. ' ' → logprob: -13.942168235778809
    7. '	mod' → logprob: -13.942168235778809
    8. 'def' → logprob: -14.192168235778809
    9. '
' → logprob: -14.254668235778809
    10. '```' → logprob: -14.504668235778809

Token 215: '_div' (ID: 36926)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.008209572173655033
    2. '_exp' → logprob: -5.758209705352783
    3. '_add' → logprob: -6.008209705352783
    4. '_div' → logprob: -6.758209705352783
    5. '_inv' → logprob: -7.008209705352783
    6. '_mul' → logprob: -7.758209705352783
    7. 'pow' → logprob: -9.758209228515625
    8. '_ex' → logprob: -12.258209228515625
    9. '_power' → logprob: -13.633209228515625
    10. '_sub' → logprob: -14.383209228515625

Token 216: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.020572137087583542
    2. '(' → logprob: -3.8955721855163574
    3. ' (' → logprob: -11.2705717086792
    4. '(
' → logprob: -11.2705717086792
    5. '<|end|>' → logprob: -13.6455717086792
    6. 'a' → logprob: -13.8955717086792
    7. '(n' → logprob: -14.8955717086792
    8. 'ide' → logprob: -15.0205717086792
    9. '(A' → logprob: -15.7705717086792
    10. ')' → logprob: -15.8955717086792

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002593130338937044
    2. ',b' → logprob: -9.375259399414062
    3. ' ,' → logprob: -9.375259399414062
    4. ',a' → logprob: -10.125259399414062
    5. '(a' → logprob: -10.375259399414062
    6. 'a' → logprob: -12.000259399414062
    7. '<|end|>' → logprob: -12.500259399414062
    8. 'b' → logprob: -12.625259399414062
    9. ',
' → logprob: -13.500259399414062
    10. 'def' → logprob: -14.000259399414062

Token 218: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008614926598966122
    2. ' b' → logprob: -4.758615016937256
    3. 'mod' → logprob: -15.508614540100098
    4. 'def' → logprob: -16.508615493774414
    5. 'int' → logprob: -16.758615493774414
    6. ' ' → logprob: -17.008615493774414
    7. ')b' → logprob: -17.383615493774414
    8. '   ' → logprob: -17.758615493774414
    9. '(b' → logprob: -17.758615493774414
    10. 'pow' → logprob: -18.133615493774414

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038069259375333786
    2. '):
' → logprob: -3.288069248199463
    3. ',' → logprob: -11.413069725036621
    4. ' ):' → logprob: -11.663069725036621
    5. '):
' → logprob: -12.163069725036621
    6. ':' → logprob: -13.663069725036621
    7. ')' → logprob: -14.163069725036621
    8. '):

' → logprob: -14.538069725036621
    9. 'def' → logprob: -15.288069725036621
    10. ' ):
' → logprob: -16.163068771362305

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03754640370607376
    2. ' return' → logprob: -3.537546396255493
    3. 'return' → logprob: -4.912546634674072
    4. 'def' → logprob: -8.537546157836914
    5. 'pow' → logprob: -9.287546157836914
    6. 'mod' → logprob: -10.162546157836914
    7. ' pow' → logprob: -10.162546157836914
    8. ' mod' → logprob: -11.037546157836914
    9. '	return' → logprob: -12.037546157836914
    10. ':' → logprob: -12.162546157836914

Token 221: ' return' (ID: 622)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.45277589559555054
    2. 'mod' → logprob: -1.2027759552001953
    3. ' mod' → logprob: -3.4527759552001953
    4. 'return' (adapté à ' return') → logprob: -4.077775955200195
    5. ' pow' → logprob: -4.327775955200195
    6. 'def' → logprob: -6.827775955200195
    7. ' return' → logprob: -7.952775955200195
    8. '(mod' → logprob: -8.327775955200195
    9. '   ' → logprob: -8.577775955200195
    10. '(pow' → logprob: -9.827775955200195

Token 222: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6440169811248779
    2. 'mod' → logprob: -0.8940169811248779
    3. '(mod' → logprob: -2.894016981124878
    4. ' (' → logprob: -4.644017219543457
    5. 'pow' → logprob: -7.769017219543457
    6. ' pow' → logprob: -8.769017219543457
    7. '(a' → logprob: -8.894017219543457
    8. '(' → logprob: -10.519017219543457
    9. 'a' → logprob: -10.519017219543457
    10. '	mod' → logprob: -11.019017219543457

Token 223: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -7.505351095460355e-05
    2. 'mul' → logprob: -9.500075340270996
    3. '_mod' → logprob: -16.00007438659668
    4. '_' → logprob: -17.37507438659668
    5. 'Mul' → logprob: -18.50007438659668
    6. '_div' → logprob: -19.37507438659668
    7. '_pow' → logprob: -19.37507438659668
    8. ' mul' → logprob: -19.75007438659668
    9. '.mul' → logprob: -19.87507438659668
    10. '_mult' → logprob: -19.87507438659668

Token 224: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. 'a' → logprob: -15.875000953674316
    4. '(
' → logprob: -16.875
    5. '(A' → logprob: -22.75
    6. '(b' → logprob: -22.75
    7. 'def' → logprob: -22.875
    8. ' a' → logprob: -23.875
    9. '(
' → logprob: -23.875
    10. '.a' → logprob: -23.875

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005934244254603982
    2. ',b' → logprob: -8.375593185424805
    3. 'b' → logprob: -8.625593185424805
    4. ' ,' → logprob: -8.875593185424805
    5. 'a' → logprob: -10.750593185424805
    6. 'pow' → logprob: -11.875593185424805
    7. ' b' → logprob: -12.625593185424805
    8. ',a' → logprob: -12.750593185424805
    9. ',m' → logprob: -13.000593185424805
    10. ',
' → logprob: -13.000593185424805

Token 226: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0024813658092170954
    2. ' pow' → logprob: -6.002481460571289
    3. 'b' → logprob: -12.752481460571289
    4. '(pow' → logprob: -13.127481460571289
    5. '   ' → logprob: -14.627481460571289
    6. 'mod' → logprob: -16.12748146057129
    7. '_pow' → logprob: -16.62748146057129
    8. 'Pow' → logprob: -16.87748146057129
    9. '
' → logprob: -17.00248146057129
    10. 'power' → logprob: -17.75248146057129

Token 227: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.898723561083898e-05
    2. 'b' → logprob: -9.500079154968262
    3. '(' → logprob: -12.625079154968262
    4. ')b' → logprob: -14.625079154968262
    5. '(
' → logprob: -16.000078201293945
    6. ' b' → logprob: -16.375078201293945
    7. 'def' → logprob: -17.500078201293945
    8. '(a' → logprob: -17.500078201293945
    9. 'mod' → logprob: -17.625078201293945
    10. '	b' → logprob: -18.125078201293945

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12774623930454254
    2. ',m' → logprob: -2.127746343612671
    3. 'm' → logprob: -7.502746105194092
    4. '(m' → logprob: -9.12774658203125
    5. ',-' → logprob: -9.50274658203125
    6. ' ,' → logprob: -10.25274658203125
    7. ',
' → logprob: -10.50274658203125
    8. '(' → logprob: -11.62774658203125
    9. '%m' → logprob: -13.25274658203125
    10. '-' → logprob: -13.37774658203125

Token 229: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.008129963040119e-06
    2. ' m' → logprob: -12.500003814697266
    3. '(m' → logprob: -16.375003814697266
    4. '%m' → logprob: -17.000003814697266
    5. 'mod' → logprob: -17.750003814697266
    6. '-' → logprob: -18.000003814697266
    7. '	m' → logprob: -18.750003814697266
    8. ')m' → logprob: -19.250003814697266
    9. '#m' → logprob: -19.625003814697266
    10. 'м' → logprob: -19.750003814697266

Token 230: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00033546582562848926
    2. ' -' → logprob: -8.000335693359375
    3. '−' → logprob: -18.250335693359375
    4. 'm' → logprob: -19.250335693359375
    5. '```' → logprob: -19.750335693359375
    6. '-
' → logprob: -20.375335693359375
    7. '–' → logprob: -20.500335693359375
    8. '
' → logprob: -21.375335693359375
    9. '()-' → logprob: -21.375335693359375
    10. '{-' → logprob: -21.500335693359375

Token 231: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. '-' → logprob: -12.625003814697266
    3. '
' → logprob: -16.250003814697266
    4. ' ' → logprob: -16.250003814697266
    5. '```' → logprob: -16.250003814697266
    6. '3' → logprob: -17.375003814697266
    7. '

' → logprob: -17.875003814697266
    8. '
' → logprob: -18.937503814697266
    9. '   ' → logprob: -19.250003814697266
    10. ' -' → logprob: -19.250003814697266

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003110327525064349
    2. ',m' → logprob: -8.375310897827148
    3. ' ,' → logprob: -9.750310897827148
    4. '))' → logprob: -10.875310897827148
    5. ')' → logprob: -13.750310897827148
    6. ',
' → logprob: -13.875310897827148
    7. ',b' → logprob: -15.125310897827148
    8. '-' → logprob: -15.625310897827148
    9. 'm' → logprob: -15.625310897827148
    10. ',a' → logprob: -16.00031089782715

Token 233: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0019289902411401272
    2. ' m' → logprob: -6.251928806304932
    3. ')' → logprob: -15.37692928314209
    4. ')m' → logprob: -16.876928329467773
    5. '   ' → logprob: -17.251928329467773
    6. '	m' → logprob: -17.501928329467773
    7. 'mod' → logprob: -18.876928329467773
    8. ' м' → logprob: -19.876928329467773
    9. ' ' → logprob: -20.626928329467773
    10. '%m' → logprob: -20.626928329467773

Token 234: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011059137992560863
    2. ')' → logprob: -4.511059284210205
    3. '))
' → logprob: -11.761058807373047
    4. ')
' → logprob: -12.886058807373047
    5. '))

' → logprob: -14.886058807373047
    6. ')))' → logprob: -14.886058807373047
    7. ' ))' → logprob: -15.761058807373047
    8. '),' → logprob: -16.761058807373047
    9. ')

' → logprob: -17.261058807373047
    10. '));' → logprob: -18.136058807373047

Token 235: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13221873342990875
    2. ')' → logprob: -3.007218837738037
    3. 'def' → logprob: -3.757218837738037
    4. ' 
' → logprob: -4.507218837738037
    5. '\n' → logprob: -4.632218837738037
    6. '(' → logprob: -5.507218837738037
    7. '(
' → logprob: -5.632218837738037
    8. '  
' → logprob: -5.632218837738037
    9. ' ' → logprob: -6.257218837738037
    10. '<|end|>' → logprob: -6.257218837738037

Token 236: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.25245675444602966
    2. ' mod' → logprob: -1.502456784248352
    3. 'pow' → logprob: -8.002456665039062
    4. 'main' → logprob: -9.002456665039062
    5. ' main' → logprob: -10.377456665039062
    6. ' pow' → logprob: -10.877456665039062
    7. 'factor' → logprob: -12.252456665039062
    8. ' factorial' → logprob: -13.252456665039062
    9. 'fact' → logprob: -13.377456665039062
    10. 'comb' → logprob: -13.627456665039062

Token 237: '_pow' (ID: 160965)
  Prédit: '_pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.07288028299808502
    2. '_inv' → logprob: -2.822880268096924
    3. '_exp' → logprob: -4.572880268096924
    4. '_add' → logprob: -8.572880744934082
    5. '_mul' → logprob: -9.072880744934082
    6. 'pow' → logprob: -9.322880744934082
    7. '_fact' → logprob: -9.697880744934082
    8. '_fac' → logprob: -10.447880744934082
    9. '_ex' → logprob: -11.322880744934082
    10. '_f' → logprob: -11.947880744934082

Token 238: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002613358374219388
    2. '(' → logprob: -8.250261306762695
    3. ' (' → logprob: -17.375261306762695
    4. '(
' → logprob: -18.500261306762695
    5. '(x' → logprob: -18.875261306762695
    6. '(b' → logprob: -19.500261306762695
    7. '(base' → logprob: -19.875261306762695
    8. 'a' → logprob: -21.000261306762695
    9. '(m' → logprob: -21.000261306762695
    10. '(A' → logprob: -21.375261306762695

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031580092036165297
    2. ',a' → logprob: -8.50031566619873
    3. ' ,' → logprob: -9.37531566619873
    4. '(' → logprob: -11.50031566619873
    5. '(a' → logprob: -11.75031566619873
    6. 'a' → logprob: -12.25031566619873
    7. ',
' → logprob: -13.25031566619873
    8. ')' → logprob: -13.75031566619873
    9. ',b' → logprob: -14.50031566619873
    10. ' a' → logprob: -15.12531566619873

Token 240: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031790214125066996
    2. ' b' → logprob: -5.75317907333374
    3. 'm' → logprob: -13.628178596496582
    4. 'n' → logprob: -16.7531795501709
    5. ' ' → logprob: -16.7531795501709
    6. 'pow' → logprob: -17.3781795501709
    7. 'k' → logprob: -17.6281795501709
    8. '2' → logprob: -18.2531795501709
    9. 'mod' → logprob: -18.6281795501709
    10. '   ' → logprob: -18.6281795501709

Token 241: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002039987128227949
    2. '):' → logprob: -6.502039909362793
    3. ' ,' → logprob: -7.627039909362793
    4. ',a' → logprob: -10.877039909362793
    5. ' ):' → logprob: -11.502039909362793
    6. ',
' → logprob: -11.752039909362793
    7. '):
' → logprob: -11.752039909362793
    8. ',b' → logprob: -13.252039909362793
    9. ':' → logprob: -13.752039909362793
    10. ',n' → logprob: -13.877039909362793

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027358949184417725
    2. 'return' → logprob: -4.0273590087890625
    3. ':' → logprob: -5.6523590087890625
    4. '(a' → logprob: -5.7773590087890625
    5. ' return' → logprob: -6.4023590087890625
    6. ':return' → logprob: -8.027359008789062
    7. 'def' → logprob: -8.527359008789062
    8. 'a' → logprob: -8.902359008789062
    9. 'pow' → logprob: -9.402359008789062
    10. '):' → logprob: -9.527359008789062

Token 243: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12767992913722992
    2. 'pow' → logprob: -2.1276798248291016
    3. ' return' → logprob: -7.377679824829102
    4. '   ' → logprob: -9.752679824829102
    5. ' pow' → logprob: -9.877679824829102
    6. 'def' → logprob: -11.627679824829102
    7. '
' → logprob: -11.877679824829102
    8. '(pow' → logprob: -14.502679824829102
    9. '	return' → logprob: -14.752679824829102
    10. 'power' → logprob: -16.3776798248291

Token 244: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.018158959224820137
    2. ' pow' → logprob: -4.018158912658691
    3. '(pow' → logprob: -11.643158912658691
    4. 'mod' → logprob: -15.143158912658691
    5. 'power' → logprob: -17.268159866333008
    6. '_pow' → logprob: -18.768159866333008
    7. '(' → logprob: -19.018159866333008
    8. '   ' → logprob: -19.393159866333008
    9. '
' → logprob: -19.518159866333008
    10. ' ' → logprob: -19.518159866333008

Token 245: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -11.375012397766113
    3. 'a' → logprob: -14.000012397766113
    4. '(
' → logprob: -18.000011444091797
    5. '((' → logprob: -19.125011444091797
    6. '<|end|>' → logprob: -19.375011444091797
    7. '(ai' → logprob: -19.875011444091797
    8. '(abs' → logprob: -20.500011444091797
    9. '(pow' → logprob: -20.625011444091797
    10. '(m' → logprob: -20.750011444091797

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000776038970798254
    2. ' ,' → logprob: -8.125776290893555
    3. ',m' → logprob: -8.375776290893555
    4. '%' → logprob: -9.000776290893555
    5. ' %' → logprob: -9.625776290893555
    6. 'm' → logprob: -10.125776290893555
    7. '%m' → logprob: -11.625776290893555
    8. ')' → logprob: -12.500776290893555
    9. ' ' → logprob: -13.250776290893555
    10. ',
' → logprob: -13.750776290893555

Token 247: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. ' ' → logprob: -18.876502990722656
    4. 'm' → logprob: -19.001502990722656
    5. '   ' → logprob: -19.751502990722656
    6. 'a' → logprob: -20.501502990722656
    7. '	b' → logprob: -21.001502990722656
    8. '
' → logprob: -21.251502990722656
    9. '    ' → logprob: -21.501502990722656
    10. '  ' → logprob: -22.126502990722656

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003724184352904558
    2. ',m' → logprob: -5.878724098205566
    3. ' ,' → logprob: -7.003724098205566
    4. 'm' → logprob: -12.128724098205566
    5. ')' → logprob: -13.378724098205566
    6. ',
' → logprob: -13.628724098205566
    7. '%' → logprob: -14.003724098205566
    8. '%m' → logprob: -14.503724098205566
    9. ' m' → logprob: -15.628724098205566
    10. ',module' → logprob: -15.878724098205566

Token 249: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0019286326132714748
    2. ' m' → logprob: -6.251928806304932
    3. '	m' → logprob: -19.501928329467773
    4. ')' → logprob: -19.626928329467773
    5. ' ' → logprob: -20.376928329467773
    6. '   ' → logprob: -20.376928329467773
    7. ')m' → logprob: -20.876928329467773
    8. '
' → logprob: -21.376928329467773
    9. ' ' → logprob: -22.001928329467773
    10. '```' → logprob: -22.751928329467773

Token 250: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.375005722045898
    3. ' )' → logprob: -13.625005722045898
    4. ')

' → logprob: -16.5000057220459
    5. '))' → logprob: -17.8750057220459
    6. '),' → logprob: -18.3750057220459
    7. ')L' → logprob: -18.8750057220459
    8. ')}' → logprob: -19.1250057220459
    9. ')return' → logprob: -19.2500057220459
    10. ')#' → logprob: -19.3750057220459

Token 251: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3978060483932495
    2. 'i' → logprob: -2.397806167602539
    3. ')' → logprob: -2.647806167602539
    4. ',' → logprob: -3.272806167602539
    5. 'def' → logprob: -3.522806167602539
    6. '#' → logprob: -3.772806167602539
    7. 'd' → logprob: -4.272806167602539
    8. '=' → logprob: -4.772806167602539
    9. '
' → logprob: -4.897806167602539
    10. ' for' → logprob: -5.272806167602539

Token 252: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.000755427754484117
    2. 'i' → logprob: -7.250755310058594
    3. ' _' → logprob: -10.500755310058594
    4. '_' → logprob: -11.625755310058594
    5. ' ' → logprob: -12.250755310058594
    6. '	i' → logprob: -13.125755310058594
    7. '_i' → logprob: -13.500755310058594
    8. ' c' → logprob: -15.125755310058594
    9. ' ' → logprob: -15.750755310058594
    10. ' idx' → logprob: -16.500755310058594

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06518372148275375
    2. 'in' → logprob: -2.815183639526367
    3. ' ' → logprob: -5.815183639526367
    4. ',' → logprob: -8.565183639526367
    5. 'range' → logprob: -11.065183639526367
    6. '	in' → logprob: -12.315183639526367
    7. '  ' → logprob: -12.690183639526367
    8. ')' → logprob: -12.690183639526367
    9. ' ,' → logprob: -12.815183639526367
    10. 'import' → logprob: -13.315183639526367

Token 254: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859475791454315
    2. 'range' → logprob: -3.0485947132110596
    3. ' ' → logprob: -12.04859447479248
    4. '	range' → logprob: -15.42359447479248
    5. '(range' → logprob: -15.92359447479248
    6. '   ' → logprob: -15.92359447479248
    7. ' ra' → logprob: -16.048595428466797
    8. '  ' → logprob: -16.173595428466797
    9. ' ran' → logprob: -16.173595428466797
    10. 'ran' → logprob: -16.298595428466797

Token 255: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.25214263796806335
    2. '(' → logprob: -1.5021426677703857
    3. '(
' → logprob: -9.252142906188965
    4. 'N' → logprob: -9.627142906188965
    5. '(n' → logprob: -10.627142906188965
    6. '(len' → logprob: -11.627142906188965
    7. ' (' → logprob: -11.752142906188965
    8. ' N' → logprob: -12.252142906188965
    9. '1' → logprob: -13.252142906188965
    10. '(L' → logprob: -13.502142906188965

Token 256: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005060884868726134
    2. '1' → logprob: -7.6255059242248535
    3. ' N' → logprob: -11.125506401062012
    4. '2' → logprob: -13.500506401062012
    5. '0' → logprob: -14.250506401062012
    6. 'n' → logprob: -14.875506401062012
    7. '   ' → logprob: -15.000506401062012
    8. ' ' → logprob: -15.500506401062012
    9. '(N' → logprob: -16.125505447387695
    10. 'len' → logprob: -16.500505447387695

Token 257: '*N' (ID: 107360)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14972682297229767
    2. '):' → logprob: -2.5247268676757812
    3. '):
' → logprob: -3.6497268676757812
    4. ',N' → logprob: -3.8997268676757812
    5. 'N' → logprob: -5.274726867675781
    6. ' ,' → logprob: -5.399726867675781
    7. '*N' → logprob: -7.024726867675781
    8. '
' → logprob: -7.524726867675781
    9. ' N' → logprob: -7.649726867675781
    10. ' ):' → logprob: -8.274726867675781

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03482658416032791
    2. '):
' → logprob: -3.4098265171051025
    3. ' ):' → logprob: -7.034826755523682
    4. '-' → logprob: -8.534826278686523
    5. '+' → logprob: -10.159826278686523
    6. '//' → logprob: -10.659826278686523
    7. ' ):
' → logprob: -11.659826278686523
    8. ' -' → logprob: -11.909826278686523
    9. '):
' → logprob: -12.034826278686523
    10. ':' → logprob: -12.159826278686523

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21459715068340302
    2. ' if' → logprob: -2.339597225189209
    3. ' LR' → logprob: -2.839597225189209
    4. ':' → logprob: -4.214597225189209
    5. 'LR' → logprob: -4.714597225189209
    6. 'if' → logprob: -4.964597225189209
    7. '       ' → logprob: -6.214597225189209
    8. ' :' → logprob: -6.714597225189209
    9. ' ' → logprob: -7.089597225189209
    10. ':
' → logprob: -7.339597225189209

Token 260: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2601834833621979
    2. ' LR' → logprob: -1.8851834535598755
    3. '   ' → logprob: -3.510183572769165
    4. 'if' (adapté à ' if') → logprob: -4.135183334350586
    5. ' c' → logprob: -4.385183334350586
    6. 'LR' → logprob: -4.635183334350586
    7. ' s' → logprob: -6.010183334350586
    8. '    ' → logprob: -6.385183334350586
    9. 'c' → logprob: -6.885183334350586
    10. ' ' → logprob: -7.385183334350586

Token 261: ' S' (ID: 336)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.732571005821228
    2. ' S' → logprob: -0.982571005821228
    3. 'S' → logprob: -2.4825711250305176
    4. 'i' → logprob: -3.3575711250305176
    5. ' LR' → logprob: -3.8575711250305176
    6. 'LR' → logprob: -5.732571125030518
    7. '(i' → logprob: -7.482571125030518
    8. ' ' → logprob: -7.732571125030518
    9. ' (' → logprob: -7.857571125030518
    10. ' L' → logprob: -8.04507064819336

Token 262: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.7689099018462e-05
    2. '[' → logprob: -9.37508773803711
    3. '[
' → logprob: -13.75008773803711
    4. ' [' → logprob: -14.37508773803711
    5. '[I' → logprob: -14.50008773803711
    6. 'i' → logprob: -15.12508773803711
    7. '   ' → logprob: -15.37508773803711
    8. '```' → logprob: -16.25008773803711
    9. '[l' → logprob: -17.00008773803711
    10. '[j' → logprob: -17.00008773803711

Token 263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13094781339168549
    2. ']==' → logprob: -2.2559478282928467
    3. '==' → logprob: -4.255947589874268
    4. ']=='' → logprob: -6.130947589874268
    5. ' ==' → logprob: -6.755947589874268
    6. '[' → logprob: -9.005948066711426
    7. '[i' → logprob: -9.630948066711426
    8. ' ]' → logprob: -9.630948066711426
    9. '']' → logprob: -10.130948066711426
    10. '=='' → logprob: -10.380948066711426

Token 264: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16458404064178467
    2. ' ==' → logprob: -1.9145840406417847
    3. '=' → logprob: -6.789584159851074
    4. '=='' → logprob: -6.789584159851074
    5. '[' → logprob: -7.164584159851074
    6. ']==' → logprob: -8.039584159851074
    7. ']' → logprob: -8.414584159851074
    8. '!=' → logprob: -8.539584159851074
    9. 'in' → logprob: -8.789584159851074
    10. ' in' → logprob: -9.039584159851074

Token 265: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2259669154882431
    2. ''L' → logprob: -1.7259669303894043
    3. ''A' → logprob: -4.225966930389404
    4. ' '' → logprob: -5.725966930389404
    5. ''U' → logprob: -6.350966930389404
    6. ''S' → logprob: -6.725966930389404
    7. ''I' → logprob: -6.975966930389404
    8. ''C' → logprob: -7.350966930389404
    9. ''O' → logprob: -7.850966930389404
    10. ''N' → logprob: -8.475966453552246

Token 266: 'B' (ID: 33)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.24871796369552612
    2. 'B' → logprob: -1.623718023300171
    3. 'R' → logprob: -3.873718023300171
    4. 'A' → logprob: -7.373717784881592
    5. '('' → logprob: -7.498717784881592
    6. ''' → logprob: -7.998717784881592
    7. ''L' → logprob: -8.49871826171875
    8. 'W' → logprob: -8.74871826171875
    9. 'I' → logprob: -9.93621826171875
    10. '')' → logprob: -10.18621826171875

Token 267: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.25739338994026184
    2. '':
' → logprob: -1.6323933601379395
    3. ''' → logprob: -3.6323933601379395
    4. ':' → logprob: -5.7573933601379395
    5. ':
' → logprob: -7.2573933601379395
    6. ''):
' → logprob: -8.882393836975098
    7. '):
' → logprob: -9.007393836975098
    8. '':
' → logprob: -9.007393836975098
    9. '):' → logprob: -9.132393836975098
    10. ' '' → logprob: -9.132393836975098

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00790518056601286
    2. ':' → logprob: -5.132905006408691
    3. '   ' → logprob: -7.132905006408691
    4. '        
' → logprob: -8.007905006408691
    5. ':
' → logprob: -8.882905006408691
    6. '    ' → logprob: -9.007905006408691
    7. '      ' → logprob: -9.507905006408691
    8. '	' → logprob: -9.757905006408691
    9. ' and' → logprob: -9.757905006408691
    10. ',' → logprob: -9.757905006408691

Token 269: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24300386011600494
    2. 'LR' → logprob: -1.6180038452148438
    3. ' l' → logprob: -4.868003845214844
    4. '   ' → logprob: -5.993003845214844
    5. 'if' (adapté à ' if') → logprob: -6.118003845214844
    6. ' LR' → logprob: -6.243003845214844
    7. 'lr' → logprob: -6.618003845214844
    8. 'L' → logprob: -6.993003845214844
    9. ' if' → logprob: -8.243003845214844
    10. '       ' → logprob: -8.868003845214844

Token 270: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.286435604095459
    2. ' l' → logprob: -2.161435604095459
    3. 'LR' → logprob: -2.286435604095459
    4. 'L' → logprob: -4.286435604095459
    5. ' LR' → logprob: -4.411435604095459
    6. 'i' → logprob: -6.161435604095459
    7. ' L' → logprob: -6.161435604095459
    8. ' i' → logprob: -6.786435604095459
    9. 'lr' → logprob: -7.911435604095459
    10. 'S' → logprob: -8.286436080932617

Token 271: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3142130970954895
    2. '==' → logprob: -2.0642130374908447
    3. ' >' → logprob: -2.1892130374908447
    4. '>' → logprob: -4.314213275909424
    5. ' <' → logprob: -4.314213275909424
    6. '<' → logprob: -6.689213275909424
    7. ' !=' → logprob: -7.064213275909424
    8. ' >=' → logprob: -7.439213275909424
    9. '+' → logprob: -7.939213275909424
    10. ' ' → logprob: -8.189212799072266

Token 272: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003199730417691171
    2. ' ' → logprob: -8.125320434570312
    3. '4' → logprob: -11.125320434570312
    4. '3' → logprob: -11.875320434570312
    5. 'N' → logprob: -14.375320434570312
    6. '```' → logprob: -15.500320434570312
    7. '   ' → logprob: -15.625320434570312
    8. '  ' → logprob: -15.750320434570312
    9. '(N' → logprob: -16.000320434570312
    10. '
' → logprob: -16.125320434570312

Token 273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005495758377946913
    2. '4' → logprob: -8.00054931640625
    3. '3' → logprob: -8.62554931640625
    4. 'N' → logprob: -11.62554931640625
    5. '26' → logprob: -12.00054931640625
    6. ' ' → logprob: -12.37554931640625
    7. '1' → logprob: -12.50054931640625
    8. '```' → logprob: -13.43804931640625
    9. '(N' → logprob: -13.62554931640625
    10. '
' → logprob: -13.81304931640625

Token 274: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14282935857772827
    2. ' ==' → logprob: -2.017829418182373
    3. ')==' → logprob: -9.642828941345215
    4. ')' → logprob: -9.767828941345215
    5. ']==' → logprob: -11.392828941345215
    6. '==
' → logprob: -11.892828941345215
    7. '!=' → logprob: -12.642828941345215
    8. '()==' → logprob: -12.767828941345215
    9. ' ' → logprob: -13.142828941345215
    10. ' !=' → logprob: -13.392828941345215

Token 275: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011923784390091896
    2. ' ' → logprob: -4.636923789978027
    3. '1' → logprob: -6.136923789978027
    4. '=' → logprob: -13.011923789978027
    5. '==' → logprob: -13.761923789978027
    6. '   ' → logprob: -15.699423789978027
    7. ' =' → logprob: -15.886923789978027
    8. ' ==' → logprob: -16.63692283630371
    9. '2' → logprob: -16.76192283630371
    10. '  ' → logprob: -17.19942283630371

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019379158038645983
    2. '1' → logprob: -6.2519378662109375
    3. ' ' → logprob: -11.626937866210938
    4. '=' → logprob: -16.001937866210938
    5. '==' → logprob: -16.439437866210938
    6. '   ' → logprob: -17.314437866210938
    7. '  ' → logprob: -17.814437866210938
    8. '2' → logprob: -18.189437866210938
    9. 's' → logprob: -18.189437866210938
    10. ' =' → logprob: -18.439437866210938

Token 277: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19742684066295624
    2. 'and' → logprob: -2.3224267959594727
    3. ':
' → logprob: -2.9474267959594727
    4. ':' → logprob: -3.6974267959594727
    5. '==' → logprob: -6.447426795959473
    6. '       ' → logprob: -7.447426795959473
    7. '           ' → logprob: -7.572426795959473
    8. ' ==' → logprob: -8.322426795959473
    9. ')' → logprob: -8.447426795959473
    10. '=' → logprob: -8.697426795959473

Token 278: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21444332599639893
    2. 'LR' → logprob: -2.2144432067871094
    3. '           ' → logprob: -3.0894432067871094
    4. '   ' → logprob: -3.5894432067871094
    5. ' LR' → logprob: -5.089443206787109
    6. '
' → logprob: -6.839443206787109
    7. 'L' → logprob: -7.589443206787109
    8. 'ans' → logprob: -7.714443206787109
    9. 'if' → logprob: -7.839443206787109
    10. '        
' → logprob: -8.52694320678711

Token 279: ' LR' (ID: 85167)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' (adapté à ' LR') → logprob: -0.004353455733507872
    2. ' LR' → logprob: -6.6293535232543945
    3. '   ' → logprob: -7.2543535232543945
    4. 'L' → logprob: -7.5043535232543945
    5. 'ans' → logprob: -7.5043535232543945
    6. 'l' → logprob: -7.8793535232543945
    7. '       ' → logprob: -8.379353523254395
    8. 'if' → logprob: -8.754353523254395
    9. '           ' → logprob: -9.129353523254395
    10. 'print' → logprob: -9.254353523254395

Token 280: '[i' (ID: 1768)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.08919474482536316
    2. '[i' → logprob: -2.4641947746276855
    3. '[' → logprob: -8.464194297790527
    4. '[L' → logprob: -10.714194297790527
    5. '[m' → logprob: -12.339194297790527
    6. 'l' → logprob: -12.839194297790527
    7. ' [' → logprob: -13.089194297790527
    8. '[a' → logprob: -13.339194297790527
    9. '[n' → logprob: -13.589194297790527
    10. '[j' → logprob: -13.589194297790527

Token 281: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021112587302923203
    2. ']=' → logprob: -3.8961126804351807
    3. '=' → logprob: -7.896112442016602
    4. ' ]' → logprob: -9.146112442016602
    5. ']='' → logprob: -9.521112442016602
    6. ']+=' → logprob: -12.021112442016602
    7. ' =' → logprob: -12.146112442016602
    8. ']==' → logprob: -12.396112442016602
    9. '']' → logprob: -14.896112442016602
    10. '']=' → logprob: -15.021112442016602

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029761025682091713
    2. ' =' → logprob: -3.5297610759735107
    3. '='' → logprob: -11.77976131439209
    4. ' ='' → logprob: -13.15476131439209
    5. ']=' → logprob: -15.15476131439209
    6. ' ' → logprob: -15.90476131439209
    7. '=

' → logprob: -16.029760360717773
    8. '+=' → logprob: -16.154760360717773
    9. '=
' → logprob: -16.154760360717773
    10. ']' → logprob: -16.654760360717773

Token 283: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6943478584289551
    2. ''L' → logprob: -0.6943478584289551
    3. 'L' → logprob: -8.069347381591797
    4. ''A' → logprob: -8.319347381591797
    5. ''l' → logprob: -9.069347381591797
    6. ''U' → logprob: -9.069347381591797
    7. '"L' → logprob: -9.319347381591797
    8. ' '' → logprob: -9.944347381591797
    9. ''I' → logprob: -9.944347381591797
    10. ''S' → logprob: -10.194347381591797

Token 284: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005192962940782309
    2. 'R' → logprob: -6.130192756652832
    3. 'B' → logprob: -6.380192756652832
    4. '('' → logprob: -7.130192756652832
    5. ''' → logprob: -8.255192756652832
    6. ''L' → logprob: -8.505192756652832
    7. '(L' → logprob: -11.755192756652832
    8. '(' → logprob: -11.880192756652832
    9. 'l' → logprob: -12.130192756652832
    10. '['' → logprob: -12.255192756652832

Token 285: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013302408624440432
    2. ''
' → logprob: -6.626330375671387
    3. 'B' → logprob: -13.501330375671387
    4. ''L' → logprob: -14.376330375671387
    5. '"' → logprob: -14.626330375671387
    6. ''

' → logprob: -14.751330375671387
    7. ''
' → logprob: -14.876330375671387
    8. ''''' → logprob: -14.876330375671387
    9. 'L' → logprob: -15.126330375671387
    10. ' '' → logprob: -15.501330375671387

Token 286: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03481023386120796
    2. 'else' → logprob: -3.9098103046417236
    3. '<|end|>' → logprob: -4.9098100662231445
    4. ' else' → logprob: -5.1598100662231445
    5. '   ' → logprob: -8.159810066223145
    6. 'elif' → logprob: -8.159810066223145
    7. '           ' → logprob: -8.784810066223145
    8. ')' → logprob: -9.784810066223145
    9. '<|end|>' → logprob: -9.784810066223145
    10. 'n' → logprob: -10.534810066223145

Token 287: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.4021237802808173e-05
    2. ' l' → logprob: -11.375014305114746
    3. '           ' → logprob: -13.500014305114746
    4. '   ' → logprob: -14.875014305114746
    5. '	l' → logprob: -15.250014305114746
    6. '       ' → logprob: -15.625014305114746
    7. 'L' → logprob: -15.875014305114746
    8. '
' → logprob: -17.25001335144043
    9. '    ' → logprob: -17.62501335144043
    10. '  ' → logprob: -17.75001335144043

Token 288: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01809726469218731
    2. ' +=' → logprob: -4.268097400665283
    3. '=' → logprob: -5.643097400665283
    4. '+' → logprob: -7.893097400665283
    5. ' =' → logprob: -12.643096923828125
    6. ' ' → logprob: -13.143096923828125
    7. '+='' → logprob: -13.393096923828125
    8. ']+=' → logprob: -13.518096923828125
    9. '<|end|>' → logprob: -13.643096923828125
    10. '+=(' → logprob: -14.268096923828125

Token 289: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -18.2500057220459
    4. '<|end|>' → logprob: -19.0000057220459
    5. '   ' → logprob: -19.3750057220459
    6. '
' → logprob: -19.7500057220459
    7. '  ' → logprob: -20.8750057220459
    8. '```' → logprob: -21.1250057220459
    9. '۱' → logprob: -22.4375057220459
    10. '-' → logprob: -22.5625057220459

Token 290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -17.125
    4. '<|end|>' → logprob: -19.75
    5. '```' → logprob: -20.0
    6. '   ' → logprob: -20.3125
    7. '
' → logprob: -20.375
    8. '0' → logprob: -20.875
    9. '-' → logprob: -21.1875
    10. '۱' → logprob: -21.625

Token 291: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0415838286280632
    2. '<|end|>' → logprob: -3.416583776473999
    3. 'else' → logprob: -5.541584014892578
    4. ' else' → logprob: -6.166584014892578
    5. '
' → logprob: -7.416584014892578
    6. 'elif' → logprob: -7.666584014892578
    7. '<|end|>' → logprob: -7.791584014892578
    8. '   ' → logprob: -8.666584014892578
    9. ' elif' → logprob: -9.791584014892578
    10. ')' → logprob: -10.291584014892578

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016546765342354774
    2. '<|end|>' → logprob: -4.891546726226807
    3. 'else' → logprob: -5.516546726226807
    4. ' else' → logprob: -5.641546726226807
    5. 'elif' → logprob: -7.266546726226807
    6. '   ' → logprob: -8.141547203063965
    7. ' elif' → logprob: -9.266547203063965
    8. '<|end|>' → logprob: -9.641547203063965
    9. '
' → logprob: -9.766547203063965
    10. ')' → logprob: -10.016547203063965

Token 293: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.29615506529808044
    2. ' else' → logprob: -1.4211550951004028
    3. '       ' → logprob: -4.421154975891113
    4. '   ' → logprob: -6.421154975891113
    5. '	else' → logprob: -7.046154975891113
    6. 'elif' → logprob: -8.171154975891113
    7. ' elif' → logprob: -10.171154975891113
    8. '<|end|>' → logprob: -10.796154975891113
    9. '	elif' → logprob: -11.421154975891113
    10. '	' → logprob: -12.671154975891113

Token 294: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0030850172042847
    2. ':
' → logprob: -1.0030850172042847
    3. ':' → logprob: -1.3780850172042847
    4. '       ' → logprob: -5.128085136413574
    5. '   ' → logprob: -5.628085136413574
    6. '          ' → logprob: -7.128085136413574
    7. '         ' → logprob: -7.253085136413574
    8. '        ' → logprob: -7.378085136413574
    9. '<|end|>' → logprob: -7.628085136413574
    10. '               ' → logprob: -8.003085136413574

Token 295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013621306046843529
    2. 'L' → logprob: -4.8886213302612305
    3. 'LR' → logprob: -5.8886213302612305
    4. ' LR' → logprob: -7.1386213302612305
    5. '		' → logprob: -8.01362133026123
    6. ' ' → logprob: -8.13862133026123
    7. '   ' → logprob: -8.26362133026123
    8. '       ' → logprob: -8.38862133026123
    9. ' L' → logprob: -8.63862133026123
    10. '	       ' → logprob: -8.63862133026123

Token 296: ' LR' (ID: 85167)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' (adapté à ' LR') → logprob: -0.27516794204711914
    2. 'L' → logprob: -2.525167942047119
    3. '           ' → logprob: -2.775167942047119
    4. ' LR' → logprob: -2.775167942047119
    5. 'R' → logprob: -3.400167942047119
    6. ' L' → logprob: -6.900167942047119
    7. ' R' → logprob: -7.400167942047119
    8. 'B' → logprob: -8.650167465209961
    9. '   ' → logprob: -8.900167465209961
    10. ' ' → logprob: -9.650167465209961

Token 297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.203409844194539e-05
    2. '[' → logprob: -10.125041961669922
    3. 'i' → logprob: -14.250041961669922
    4. '[I' → logprob: -14.625041961669922
    5. ' [' → logprob: -14.875041961669922
    6. '=' → logprob: -15.875041961669922
    7. '[
' → logprob: -16.250041961669922
    8. ' =' → logprob: -16.875041961669922
    9. '[j' → logprob: -17.125041961669922
    10. '<|end|>' → logprob: -17.500041961669922

Token 298: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012698742793872952
    2. '=' → logprob: -7.376269817352295
    3. ']=' → logprob: -7.376269817352295
    4. ' =' → logprob: -11.376270294189453
    5. ' ]' → logprob: -12.251270294189453
    6. ']='' → logprob: -14.751270294189453
    7. '   ' → logprob: -15.751270294189453
    8. '[i' → logprob: -16.626270294189453
    9. '[' → logprob: -16.626270294189453
    10. ')' → logprob: -16.751270294189453

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804447129368782
    2. ' =' → logprob: -3.2880444526672363
    3. ']' → logprob: -12.913044929504395
    4. ']=' → logprob: -15.038044929504395
    5. ' ' → logprob: -16.163043975830078
    6. '   ' → logprob: -16.788043975830078
    7. '='' → logprob: -17.038043975830078
    8. '=
' → logprob: -17.163043975830078
    9. ')' → logprob: -17.288043975830078
    10. '=

' → logprob: -17.413043975830078

Token 300: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00031139038037508726
    2. ' '' → logprob: -8.500311851501465
    3. 'R' → logprob: -9.500311851501465
    4. ' R' → logprob: -10.750311851501465
    5. ' ' → logprob: -12.625311851501465
    6. ' ' → logprob: -12.750311851501465
    7. ''S' → logprob: -13.750311851501465
    8. '
' → logprob: -13.875311851501465
    9. ' 
' → logprob: -13.875311851501465
    10. ''r' → logprob: -14.125311851501465

Token 301: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.016045862808823586
    2. ''' → logprob: -4.141046047210693
    3. 'B' → logprob: -11.891045570373535
    4. ' R' → logprob: -13.266045570373535
    5. '`' → logprob: -13.766045570373535
    6. '"' → logprob: -14.516045570373535
    7. '')' → logprob: -15.141045570373535
    8. '']' → logprob: -15.641045570373535
    9. ''''' → logprob: -16.14104652404785
    10. '```' → logprob: -16.14104652404785

Token 302: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003607555292546749
    2. ''
' → logprob: -5.628607749938965
    3. '\n' → logprob: -12.878607749938965
    4. '<|end|>' → logprob: -13.003607749938965
    5. '"' → logprob: -14.003607749938965
    6. ' '' → logprob: -14.878607749938965
    7. ''
' → logprob: -14.878607749938965
    8. ''

' → logprob: -15.128607749938965
    9. '
' → logprob: -15.503607749938965
    10. '```' → logprob: -16.00360679626465

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002859320491552353
    2. '<|end|>' → logprob: -6.127859115600586
    3. '       ' → logprob: -7.877859115600586
    4. '		' → logprob: -9.377859115600586
    5. '   ' → logprob: -10.002859115600586
    6. '               ' → logprob: -10.127859115600586
    7. '
' → logprob: -10.252859115600586
    8. '```' → logprob: -10.877859115600586
    9. '          ' → logprob: -11.377859115600586
    10. '<|end|>' → logprob: -11.502859115600586

Token 304: ' ans' (ID: 3345)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.28119373321533203
    2. 'l' → logprob: -1.406193733215332
    3. '           ' → logprob: -11.156193733215332
    4. '   ' → logprob: -11.906193733215332
    5. '    ' → logprob: -12.156193733215332
    6. 'i' → logprob: -12.656193733215332
    7. '       ' → logprob: -12.906193733215332
    8. ' ' → logprob: -13.156193733215332
    9. '	l' → logprob: -13.406193733215332
    10. '
' → logprob: -14.031193733215332

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07001346349716187
    2. ' =' → logprob: -2.6950135231018066
    3. ' *=' → logprob: -10.070013046264648
    4. '*=' → logprob: -10.570013046264648
    5. ' ' → logprob: -12.695013046264648
    6. '*' → logprob: -13.320013046264648
    7. ')' → logprob: -13.695013046264648
    8. 'mod' → logprob: -13.945013046264648
    9. '```' → logprob: -14.945013046264648
    10. '	' → logprob: -15.320013046264648

Token 306: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01366963516920805
    2. ' mod' → logprob: -4.388669490814209
    3. '(mod' → logprob: -6.763669490814209
    4. '	mod' → logprob: -13.388669967651367
    5. '0' → logprob: -13.513669967651367
    6. '(' → logprob: -15.138669967651367
    7. '_mod' → logprob: -15.388669967651367
    8. 'mul' → logprob: -15.513669967651367
    9. '```' → logprob: -15.888669967651367
    10. '
' → logprob: -16.138669967651367

Token 307: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -3.4121114822482923e-06
    2. 'mul' → logprob: -12.625003814697266
    3. '_mod' → logprob: -16.750003814697266
    4. '_' → logprob: -17.750003814697266
    5. '_pow' → logprob: -18.250003814697266
    6. '_add' → logprob: -18.625003814697266
    7. 'Mul' → logprob: -19.000003814697266
    8. '_mult' → logprob: -20.250003814697266
    9. '```' → logprob: -20.500003814697266
    10. '.mul' → logprob: -20.625003814697266

Token 308: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.165027217415627e-05
    2. 'ans' → logprob: -10.750021934509277
    3. '(answer' → logprob: -17.12502098083496
    4. '(' → logprob: -17.25002098083496
    5. '(
' → logprob: -17.50002098083496
    6. ' ans' → logprob: -18.87502098083496
    7. '	ans' → logprob: -18.87502098083496
    8. 'Ans' → logprob: -20.87502098083496
    9. '```' → logprob: -21.25002098083496
    10. '_ans' → logprob: -21.25002098083496

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3648408055305481
    2. '(ans' → logprob: -1.4898407459259033
    3. '(l' → logprob: -2.7398407459259033
    4. ',l' → logprob: -4.239840984344482
    5. ' ,' → logprob: -7.489840984344482
    6. 'ans' → logprob: -8.114840507507324
    7. '(' → logprob: -8.864840507507324
    8. ' ans' → logprob: -9.489840507507324
    9. ' (' → logprob: -9.489840507507324
    10. ',(' → logprob: -10.739840507507324

Token 310: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06860532611608505
    2. '2' → logprob: -2.818605422973633
    3. 'mod' → logprob: -5.568605422973633
    4. ' l' → logprob: -7.193605422973633
    5. 'pow' → logprob: -7.318605422973633
    6. 'math' → logprob: -8.318605422973633
    7. '(l' → logprob: -8.443605422973633
    8. '(' → logprob: -9.068605422973633
    9. ' ' → logprob: -9.193605422973633
    10. '
' → logprob: -9.318605422973633

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03616132214665413
    2. ')
' → logprob: -3.536161422729492
    3. '//' → logprob: -5.411161422729492
    4. ' //' → logprob: -6.411161422729492
    5. ' )' → logprob: -9.036161422729492
    6. ')//' → logprob: -9.661161422729492
    7. '
' → logprob: -11.161161422729492
    8. ')#' → logprob: -11.286161422729492
    9. ' )
' → logprob: -11.411161422729492
    10. '#' → logprob: -11.411161422729492

Token 312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00482786912471056
    2. '       ' → logprob: -5.379827976226807
    3. '   ' → logprob: -8.629827499389648
    4. '```' → logprob: -11.129827499389648
    5. '               ' → logprob: -11.754827499389648
    6. '          ' → logprob: -13.879827499389648
    7. '        
' → logprob: -14.004827499389648
    8. ',' → logprob: -14.129827499389648
    9. '                   ' → logprob: -14.629827499389648
    10. '``' → logprob: -14.754827499389648

Token 313: ' l' (ID: 305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030670786276459694
    2. 'l' (adapté à ' l') → logprob: -3.9056708812713623
    3. '       ' → logprob: -4.655670642852783
    4. '   ' → logprob: -7.905670642852783
    5. ' l' → logprob: -8.780671119689941
    6. '          ' → logprob: -11.030671119689941
    7. '         ' → logprob: -12.030671119689941
    8. '```' → logprob: -12.155671119689941
    9. '               ' → logprob: -12.405671119689941
    10. '        ' → logprob: -12.530671119689941

Token 314: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.27437320351600647
    2. '-=' → logprob: -1.524373173713684
    3. '=' → logprob: -4.0243730545043945
    4. '-' → logprob: -5.8993730545043945
    5. ' +=' → logprob: -6.7743730545043945
    6. ' -=' → logprob: -7.7743730545043945
    7. '+' → logprob: -11.649373054504395
    8. ')' → logprob: -13.899373054504395
    9. '*=' → logprob: -14.149373054504395
    10. ' =' → logprob: -14.399373054504395

Token 315: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.50007438659668
    4. '           ' → logprob: -19.37507438659668
    5. '       ' → logprob: -20.12507438659668
    6. '  ' → logprob: -20.12507438659668
    7. '```' → logprob: -20.25007438659668
    8. '2' → logprob: -20.31257438659668
    9. '0' → logprob: -20.31257438659668
    10. '１' → logprob: -20.81257438659668

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.625015258789062
    4. '0' → logprob: -19.500015258789062
    5. '2' → logprob: -20.062515258789062
    6. '```' → logprob: -20.312515258789062
    7. '  ' → logprob: -20.625015258789062
    8. '
' → logprob: -21.062515258789062
    9. '１' → logprob: -21.062515258789062
    10. '<|end|>' → logprob: -21.125015258789062

Token 317: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05988128110766411
    2. ':
' → logprob: -3.1848812103271484
    3. '       ' → logprob: -4.184881210327148
    4. '   ' → logprob: -6.809881210327148
    5. ' :' → logprob: -9.559881210327148
    6. '{' → logprob: -9.684881210327148
    7. '):' → logprob: -10.184881210327148
    8. '=' → logprob: -10.434881210327148
    9. 'if' → logprob: -10.559881210327148
    10. '           ' → logprob: -10.684881210327148

Token 321: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3562605082988739
    2. '       ' → logprob: -1.6062605381011963
    3. ' l' → logprob: -2.4812605381011963
    4. '   ' → logprob: -4.731260299682617
    5. '           ' → logprob: -5.856260299682617
    6. 'LR' → logprob: -6.606260299682617
    7. 'if' → logprob: -8.106260299682617
    8. 'pass' → logprob: -8.106260299682617
    9. '	l' → logprob: -8.356260299682617
    10. 'print' → logprob: -8.481260299682617

Token 322: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00839459802955389
    2. ' l' → logprob: -5.758394718170166
    3. 'LR' → logprob: -6.133394718170166
    4. '   ' → logprob: -7.383394718170166
    5. 'ans' → logprob: -7.508394718170166
    6. 'pass' → logprob: -7.633394718170166
    7. 'print' → logprob: -8.008394241333008
    8. 'if' (adapté à ' if') → logprob: -8.383394241333008
    9. '       ' → logprob: -8.633394241333008
    10. 'lr' → logprob: -8.633394241333008

Token 323: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2938382625579834
    2. 'LR' → logprob: -2.1688382625579834
    3. ' l' → logprob: -2.9188382625579834
    4. 'S' → logprob: -2.9188382625579834
    5. ' LR' → logprob: -4.6688385009765625
    6. 'L' → logprob: -4.6688385009765625
    7. 'i' → logprob: -5.1688385009765625
    8. ' S' → logprob: -5.5438385009765625
    9. ' i' → logprob: -6.1688385009765625
    10. ' L' → logprob: -7.7938385009765625

Token 324: ' %' (ID: 1851)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2210732251405716
    2. ' >' → logprob: -2.3460731506347656
    3. '+=' → logprob: -2.9710731506347656
    4. '>' → logprob: -3.4710731506347656
    5. '   ' → logprob: -5.471073150634766
    6. '=' → logprob: -5.721073150634766
    7. '+' → logprob: -5.971073150634766
    8. ' <' → logprob: -5.971073150634766
    9. ' ==' → logprob: -6.596073150634766
    10. '<' → logprob: -6.721073150634766

Token 325: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004112119786441326
    2. ' ' → logprob: -5.504112243652344
    3. '   ' → logprob: -12.004112243652344
    4. '1' → logprob: -12.004112243652344
    5. '  ' → logprob: -12.441612243652344
    6. '==' → logprob: -12.941612243652344
    7. '=' → logprob: -13.254112243652344
    8. '...' → logprob: -13.316612243652344
    9. ' ==' → logprob: -13.879112243652344
    10. 'not' → logprob: -14.254112243652344

Token 326: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002446509897708893
    2. ' ' → logprob: -8.375245094299316
    3. '1' → logprob: -11.625245094299316
    4. '0' → logprob: -13.375245094299316
    5. '   ' → logprob: -14.187745094299316
    6. '==' → logprob: -14.937745094299316
    7. '4' → logprob: -15.062745094299316
    8. '>' → logprob: -15.312745094299316
    9. '  ' → logprob: -15.312745094299316
    10. '
' → logprob: -15.562745094299316

Token 327: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5774158835411072
    2. '==' → logprob: -0.8274158835411072
    3. ' !=' → logprob: -6.827415943145752
    4. '!=' → logprob: -8.202415466308594
    5. '   ' → logprob: -10.202415466308594
    6. '=' → logprob: -10.452415466308594
    7. ' ' → logprob: -11.452415466308594
    8. '()==' → logprob: -11.827415466308594
    9. ')==' → logprob: -11.827415466308594
    10. '0' → logprob: -12.327415466308594

Token 328: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20697461068630219
    2. '1' → logprob: -1.7069746255874634
    3. ' ' → logprob: -5.206974506378174
    4. '   ' → logprob: -10.081974983215332
    5. '       ' → logprob: -12.269474983215332
    6. '           ' → logprob: -12.769474983215332
    7. '==' → logprob: -12.831974983215332
    8. '=' → logprob: -13.519474983215332
    9. '
' → logprob: -13.519474983215332
    10. '    ' → logprob: -13.769474983215332

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22592952847480774
    2. '1' → logprob: -1.6009294986724854
    3. ' ' → logprob: -7.6009297370910645
    4. '   ' → logprob: -11.475929260253906
    5. '       ' → logprob: -13.475929260253906
    6. '           ' → logprob: -13.975929260253906
    7. '```' → logprob: -14.163429260253906
    8. '==' → logprob: -14.350929260253906
    9. '=' → logprob: -14.600929260253906
    10. 'l' → logprob: -15.413429260253906

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14233845472335815
    2. ':
' → logprob: -2.642338514328003
    3. '           ' → logprob: -3.392338514328003
    4. '       ' → logprob: -3.642338514328003
    5. '==' → logprob: -7.767338275909424
    6. '=' → logprob: -7.892338275909424
    7. ' and' → logprob: -8.267338752746582
    8. ' =' → logprob: -9.142338752746582
    9. '   ' → logprob: -9.267338752746582
    10. 'and' → logprob: -9.642338752746582

Token 331: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.637040376663208
    2. '           ' → logprob: -0.762040376663208
    3. ' l' → logprob: -5.637040138244629
    4. '   ' → logprob: -7.762040138244629
    5. 'l' → logprob: -8.637040138244629
    6. '```' → logprob: -9.762040138244629
    7. 'LR' → logprob: -10.387040138244629
    8. '        
' → logprob: -11.012040138244629
    9. '	       ' → logprob: -11.262040138244629
    10. '               ' → logprob: -11.324540138244629

Token 332: ' LR' (ID: 85167)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' (adapté à ' LR') → logprob: -0.8246937990188599
    2. 'l' → logprob: -0.9496937990188599
    3. 'print' → logprob: -2.5746936798095703
    4. 'ans' → logprob: -2.6996936798095703
    5. '           ' → logprob: -4.32469367980957
    6. '   ' → logprob: -4.94969367980957
    7. 'L' → logprob: -5.44969367980957
    8. 'lr' → logprob: -6.07469367980957
    9. '       ' → logprob: -6.69969367980957
    10. 'if' → logprob: -7.07469367980957

Token 333: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024608144303783774
    2. '[' → logprob: -8.625246047973633
    3. '   ' → logprob: -11.000246047973633
    4. 'i' → logprob: -11.250246047973633
    5. ' [' → logprob: -12.000246047973633
    6. ' =' → logprob: -12.125246047973633
    7. '=' → logprob: -12.375246047973633
    8. '[l' → logprob: -12.625246047973633
    9. ' i' → logprob: -12.750246047973633
    10. '[I' → logprob: -13.000246047973633

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01274824794381857
    2. ']=' → logprob: -4.6377482414245605
    3. '=' → logprob: -5.8877482414245605
    4. ' =' → logprob: -8.637748718261719
    5. ']='' → logprob: -10.762748718261719
    6. ' ]' → logprob: -11.887748718261719
    7. '']' → logprob: -13.012748718261719
    8. ']+=' → logprob: -13.137748718261719
    9. ']==' → logprob: -13.637748718261719
    10. '']=' → logprob: -13.762748718261719

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029787402600049973
    2. ' =' → logprob: -3.529787302017212
    3. ']' → logprob: -10.404787063598633
    4. ']=' → logprob: -12.904787063598633
    5. '='' → logprob: -13.904787063598633
    6. '   ' → logprob: -14.029787063598633
    7. '<|end|>' → logprob: -14.654787063598633
    8. ' ' → logprob: -14.904787063598633
    9. ')' → logprob: -15.029787063598633
    10. '[' → logprob: -15.279787063598633

Token 336: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12945903837680817
    2. ''L' → logprob: -2.1294591426849365
    3. ''S' → logprob: -7.004458904266357
    4. 'L' → logprob: -8.129459381103516
    5. 'R' → logprob: -8.254459381103516
    6. '''' → logprob: -8.504459381103516
    7. ''A' → logprob: -8.754459381103516
    8. '')' → logprob: -8.879459381103516
    9. ' '' → logprob: -9.254459381103516
    10. ''O' → logprob: -9.504459381103516

Token 337: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.45069822669029236
    2. ''' → logprob: -2.075698137283325
    3. 'R' → logprob: -2.075698137283325
    4. 'B' → logprob: -2.450698137283325
    5. ''L' → logprob: -3.825698137283325
    6. '?' → logprob: -7.950698375701904
    7. '('' → logprob: -8.075697898864746
    8. '')' → logprob: -8.075697898864746
    9. ''?' → logprob: -8.075697898864746
    10. '"' → logprob: -8.388197898864746

Token 338: ''
' (ID: 2207)
  Prédit: ''
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''
' → logprob: -0.07908310741186142
    2. ''' → logprob: -2.579083204269409
    3. ''
' → logprob: -8.954083442687988
    4. '           ' → logprob: -9.829083442687988
    5. '       ' → logprob: -12.704083442687988
    6. '"
' → logprob: -13.579083442687988
    7. ''

' → logprob: -13.704083442687988
    8. '   ' → logprob: -14.204083442687988
    9. '''
' → logprob: -14.704083442687988
    10. ' '
' → logprob: -15.204083442687988

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06750735640525818
    2. '       ' → logprob: -3.317507266998291
    3. '<|end|>' → logprob: -3.817507266998291
    4. '
' → logprob: -5.067507266998291
    5. '   ' → logprob: -7.817507266998291
    6. '<|end|>' → logprob: -8.94250774383545
    7. '		' → logprob: -9.94250774383545
    8. '```' → logprob: -9.94250774383545
    9. '	       ' → logprob: -10.44250774383545
    10. '               ' → logprob: -10.44250774383545

Token 340: ' ans' (ID: 3345)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014195474795997143
    2. '           ' → logprob: -4.514195442199707
    3. ' l' → logprob: -5.889195442199707
    4. '   ' → logprob: -8.514195442199707
    5. '       ' → logprob: -9.139195442199707
    6. 'ans' (adapté à ' ans') → logprob: -10.264195442199707
    7. ' ans' → logprob: -12.389195442199707
    8. 'else' → logprob: -12.639195442199707
    9. '	l' → logprob: -12.889195442199707
    10. '    ' → logprob: -13.139195442199707

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013261953135952353
    2. ' =' → logprob: -6.626326084136963
    3. ',' → logprob: -16.251325607299805
    4. '*=' → logprob: -16.876325607299805
    5. '=
' → logprob: -17.626325607299805
    6. '=

' → logprob: -17.876325607299805
    7. '+=' → logprob: -18.126325607299805
    8. ')' → logprob: -18.626325607299805
    9. 'mod' → logprob: -18.751325607299805
    10. '
' → logprob: -19.251325607299805

Token 342: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1826423704624176
    2. '0' → logprob: -1.8076423406600952
    3. ' mod' → logprob: -6.057642459869385
    4. '(mod' → logprob: -8.432641983032227
    5. ' ' → logprob: -8.807641983032227
    6. '
' → logprob: -9.182641983032227
    7. '(' → logprob: -10.307641983032227
    8. 'mul' → logprob: -11.057641983032227
    9. '	mod' → logprob: -12.557641983032227
    10. 'm' → logprob: -12.870141983032227

Token 343: '_mul' (ID: 75111)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.2522704005241394
    2. '_mul' → logprob: -1.5022704601287842
    3. 'sub' → logprob: -8.127270698547363
    4. '_sub' → logprob: -10.752270698547363
    5. 'add' → logprob: -11.752270698547363
    6. '_add' → logprob: -12.502270698547363
    7. ' mul' → logprob: -12.752270698547363
    8. 'pow' → logprob: -13.127270698547363
    9. '```' → logprob: -13.252270698547363
    10. 'mod' → logprob: -13.252270698547363

Token 344: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.339278580620885e-06
    2. 'ans' → logprob: -13.000001907348633
    3. '	ans' → logprob: -19.500001907348633
    4. '(' → logprob: -20.000001907348633
    5. '(answer' → logprob: -20.125001907348633
    6. ' ans' → logprob: -20.500001907348633
    7. '(a' → logprob: -21.000001907348633
    8. '(err' → logprob: -21.875001907348633
    9. '(
' → logprob: -22.125001907348633
    10. '```' → logprob: -22.250001907348633

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002370329457335174
    2. ',l' → logprob: -8.375237464904785
    3. '(l' → logprob: -12.625237464904785
    4. '(' → logprob: -14.375237464904785
    5. ' ,' → logprob: -14.500237464904785
    6. ',n' → logprob: -14.625237464904785
    7. '(ans' → logprob: -14.750237464904785
    8. ',m' → logprob: -15.375237464904785
    9. ',a' → logprob: -15.875237464904785
    10. ',
' → logprob: -15.875237464904785

Token 346: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013859058730304241
    2. '(l' → logprob: -4.888859272003174
    3. '2' → logprob: -6.513859272003174
    4. ' l' → logprob: -7.263859272003174
    5. '   ' → logprob: -7.263859272003174
    6. 'mod' → logprob: -7.638859272003174
    7. '(' → logprob: -7.888859272003174
    8. 'N' → logprob: -8.263858795166016
    9. '((' → logprob: -8.263858795166016
    10. '1' → logprob: -8.388858795166016

Token 347: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2748357951641083
    2. '           ' → logprob: -1.5248358249664307
    3. ')' → logprob: -4.149835586547852
    4. ')
' → logprob: -5.274835586547852
    5. ',l' → logprob: -6.899835586547852
    6. '       ' → logprob: -8.649835586547852
    7. '   ' → logprob: -8.899835586547852
    8. ',
' → logprob: -9.149835586547852
    9. '),' → logprob: -9.399835586547852
    10. 'l' → logprob: -9.649835586547852

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.088138227118179e-05
    2. '       ' → logprob: -9.875070571899414
    3. '```' → logprob: -11.375070571899414
    4. '<|end|>' → logprob: -12.875070571899414
    5. '            
' → logprob: -13.500070571899414
    6. '               ' → logprob: -14.125070571899414
    7. '   ' → logprob: -14.250070571899414
    8. '
' → logprob: -14.625070571899414
    9. ' l' → logprob: -14.625070571899414
    10. ',' → logprob: -14.750070571899414

Token 349: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.00685366615653038
    2. '           ' → logprob: -5.0068535804748535
    3. '   ' → logprob: -9.631854057312012
    4. ' l' → logprob: -10.131854057312012
    5. '       ' → logprob: -10.381854057312012
    6. '	l' → logprob: -14.756854057312012
    7. '               ' → logprob: -15.381854057312012
    8. '          ' → logprob: -15.381854057312012
    9. '    ' → logprob: -15.506854057312012
    10. '     ' → logprob: -15.631854057312012

Token 350: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7304118871688843
    2. ' +=' → logprob: -1.3554118871688843
    3. '-=' → logprob: -1.9804118871688843
    4. ' -=' → logprob: -2.105412006378174
    5. '-' → logprob: -8.105411529541016
    6. '=' → logprob: -8.730411529541016
    7. '            ' → logprob: -9.855411529541016
    8. '   ' → logprob: -10.230411529541016
    9. '           ' → logprob: -10.230411529541016
    10. '    ' → logprob: -10.605411529541016

Token 351: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009132515988312662
    2. ' ' → logprob: -7.000913143157959
    3. '   ' → logprob: -13.750913619995117
    4. '       ' → logprob: -15.500913619995117
    5. '           ' → logprob: -15.750913619995117
    6. '0' → logprob: -16.125913619995117
    7. '  ' → logprob: -17.063413619995117
    8. ')' → logprob: -17.438413619995117
    9. '(' → logprob: -17.750913619995117
    10. '2' → logprob: -17.875913619995117

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.000003814697266
    4. '           ' → logprob: -18.500003814697266
    5. '0' → logprob: -18.625003814697266
    6. '       ' → logprob: -18.875003814697266
    7. '2' → logprob: -19.312503814697266
    8. '-' → logprob: -19.812503814697266
    9. '```' → logprob: -20.000003814697266
    10. '(' → logprob: -20.187503814697266

Token 353: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01607026532292366
    2. 'else' → logprob: -4.266070365905762
    3. ' else' → logprob: -6.516070365905762
    4. '   ' → logprob: -7.891070365905762
    5. '<|end|>' → logprob: -10.891070365905762
    6. '	' → logprob: -11.266070365905762
    7. '	else' → logprob: -11.391070365905762
    8. '```' → logprob: -12.766070365905762
    9. 'elif' → logprob: -12.891070365905762
    10. ')' → logprob: -14.141070365905762

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32162266969680786
    2. 'else' → logprob: -1.321622610092163
    3. ' else' → logprob: -4.946622848510742
    4. '   ' → logprob: -6.946622848510742
    5. '	else' → logprob: -9.446622848510742
    6. 'elif' → logprob: -9.571622848510742
    7. '<|end|>' → logprob: -10.071622848510742
    8. '	' → logprob: -10.321622848510742
    9. '```' → logprob: -11.071622848510742
    10. ')' → logprob: -11.571622848510742

Token 355: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4796551465988159
    2. '       ' → logprob: -0.9796551465988159
    3. ' else' → logprob: -5.4796552658081055
    4. '   ' → logprob: -6.6046552658081055
    5. '	else' → logprob: -10.729655265808105
    6. 'elif' → logprob: -11.979655265808105
    7. ' ' → logprob: -12.479655265808105
    8. '  ' → logprob: -13.104655265808105
    9. '      ' → logprob: -13.854655265808105
    10. '	' → logprob: -14.229655265808105

Token 356: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1154385581612587
    2. '       ' → logprob: -2.240438461303711
    3. '   ' → logprob: -6.490438461303711
    4. 'LR' → logprob: -8.115438461303711
    5. ':
' → logprob: -8.240438461303711
    6. ':' → logprob: -8.615438461303711
    7. '		' → logprob: -8.615438461303711
    8. ' LR' → logprob: -10.615438461303711
    9. '	   ' → logprob: -10.990438461303711
    10. '	       ' → logprob: -10.990438461303711

Token 357: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3338708281517029
    2. '           ' → logprob: -1.5838708877563477
    3. '   ' → logprob: -2.9588708877563477
    4. 'LR' → logprob: -3.7088708877563477
    5. ' LR' → logprob: -6.208870887756348
    6. ' ' → logprob: -9.458870887756348
    7. '	' → logprob: -9.958870887756348
    8. '		' → logprob: -10.208870887756348
    9. '	   ' → logprob: -10.333870887756348
    10. '	       ' → logprob: -10.958870887756348

Token 358: ' LR' (ID: 85167)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' (adapté à ' LR') → logprob: -0.0002457238151691854
    2. ' LR' → logprob: -8.375246047973633
    3. '           ' → logprob: -11.500246047973633
    4. '   ' → logprob: -12.750246047973633
    5. '       ' → logprob: -13.500246047973633
    6. ' ' → logprob: -15.125246047973633
    7. 'L' → logprob: -15.750246047973633
    8. '  ' → logprob: -16.750246047973633
    9. '               ' → logprob: -17.000246047973633
    10. '[' → logprob: -17.500246047973633

Token 359: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. '[
' → logprob: -16.0
    4. '   ' → logprob: -16.125
    5. '=' → logprob: -16.5
    6. '[I' → logprob: -16.875
    7. '```' → logprob: -17.25
    8. 'i' → logprob: -17.625
    9. '=i' → logprob: -18.125
    10. '[]' → logprob: -18.375

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17426379024982452
    2. '=' → logprob: -1.924263834953308
    3. ']=' → logprob: -4.299263954162598
    4. ' =' → logprob: -8.424263954162598
    5. '[i' → logprob: -9.174263954162598
    6. '[' → logprob: -11.424263954162598
    7. '   ' → logprob: -11.424263954162598
    8. ' ]' → logprob: -12.549263954162598
    9. '']' → logprob: -12.799263954162598
    10. ']+=' → logprob: -12.799263954162598

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004885728703811765
    2. ' =' → logprob: -7.625488758087158
    3. '='' → logprob: -15.25048828125
    4. '=
' → logprob: -15.75048828125
    5. ']' → logprob: -16.12548828125
    6. ')' → logprob: -17.12548828125
    7. '[' → logprob: -17.12548828125
    8. ']=' → logprob: -17.25048828125
    9. '=

' → logprob: -18.62548828125
    10. '+=' → logprob: -19.00048828125

Token 362: ' '' (ID: 461)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.08637244999408722
    2. ''' → logprob: -2.5863723754882812
    3. ' '' → logprob: -4.961372375488281
    4. ''S' → logprob: -8.336372375488281
    5. 'L' → logprob: -9.711372375488281
    6. ' ' → logprob: -9.711372375488281
    7. ' L' → logprob: -10.211372375488281
    8. '"L' → logprob: -11.836372375488281
    9. ''I' → logprob: -11.961372375488281
    10. ''U' → logprob: -12.211372375488281

Token 363: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.006080006714910269
    2. ''L' → logprob: -5.131080150604248
    3. ''' → logprob: -8.88107967376709
    4. ' L' → logprob: -11.50607967376709
    5. 'B' → logprob: -14.13107967376709
    6. ''S' → logprob: -15.25607967376709
    7. '"L' → logprob: -15.25607967376709
    8. '	L' → logprob: -15.75607967376709
    9. '
' → logprob: -16.006080627441406
    10. '['' → logprob: -16.131080627441406

Token 364: ''
' (ID: 2207)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003277768148109317
    2. '<|end|>' → logprob: -6.628277778625488
    3. ''
' → logprob: -6.878277778625488
    4. '
' → logprob: -7.878277778625488
    5. ''' → logprob: -9.128277778625488
    6. '       ' → logprob: -9.753277778625488
    7. '<|end|>' → logprob: -9.753277778625488
    8. ')
' → logprob: -9.878277778625488
    9. '		' → logprob: -10.128277778625488
    10. '               ' → logprob: -10.503277778625488

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10095307230949402
    2. '<|end|>' → logprob: -3.3509531021118164
    3. '       ' → logprob: -4.100953102111816
    4. '
' → logprob: -4.225953102111816
    5. '   ' → logprob: -4.975953102111816
    6. ' l' → logprob: -5.100953102111816
    7. 'l' → logprob: -5.475953102111816
    8. '		' → logprob: -5.850953102111816
    9. ' ' → logprob: -6.600953102111816
    10. '               ' → logprob: -6.725953102111816

Token 366: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0006445261533372104
    2. '           ' → logprob: -7.625644683837891
    3. ' l' → logprob: -8.87564468383789
    4. '   ' → logprob: -11.50064468383789
    5. '       ' → logprob: -12.25064468383789
    6. '    ' → logprob: -15.00064468383789
    7. 'ans' → logprob: -15.00064468383789
    8. '          ' → logprob: -15.37564468383789
    9. '                   ' → logprob: -15.62564468383789
    10. '	l' → logprob: -15.75064468383789

Token 367: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12722857296466827
    2. ' +=' → logprob: -2.1272284984588623
    3. '=' → logprob: -8.252228736877441
    4. '+' → logprob: -10.252228736877441
    5. ' =' → logprob: -12.877228736877441
    6. ']+=' → logprob: -14.127228736877441
    7. '```' → logprob: -14.752228736877441
    8. '           ' → logprob: -15.502228736877441
    9. '   ' → logprob: -15.877228736877441
    10. ')' → logprob: -16.127227783203125

Token 368: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.62520408630371
    4. '```' → logprob: -19.37520408630371
    5. '<|end|>' → logprob: -19.75020408630371
    6. '  ' → logprob: -20.25020408630371
    7. '	' → logprob: -20.62520408630371
    8. '0' → logprob: -20.62520408630371
    9. '(' → logprob: -20.75020408630371
    10. ' ' → logprob: -21.00020408630371

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -19.000001907348633
    4. '<|end|>' → logprob: -19.500001907348633
    5. '   ' → logprob: -19.812501907348633
    6. '-' → logprob: -20.687501907348633
    7. '۱' → logprob: -21.187501907348633
    8. '+' → logprob: -21.250001907348633
    9. '...' → logprob: -21.625001907348633
    10. '１' → logprob: -21.625001907348633

Token 370: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014679094776511192
    2. '<|end|>' → logprob: -4.389678955078125
    3. ')' → logprob: -6.514678955078125
    4. '
' → logprob: -7.764678955078125
    5. '```' → logprob: -9.514678955078125
    6. 'for' → logprob: -10.014678955078125
    7. 'if' → logprob: -10.014678955078125
    8. ' print' → logprob: -10.514678955078125
    9. '#' → logprob: -10.514678955078125
    10. 'assert' → logprob: -11.514678955078125

Token 371: 'C' (ID: 34)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31890812516212463
    2. '<|end|>' → logprob: -2.068908214569092
    3. ')' → logprob: -2.568908214569092
    4. 'for' → logprob: -3.193908214569092
    5. '
' → logprob: -4.568908214569092
    6. '```' → logprob: -4.693908214569092
    7. 'if' → logprob: -5.193908214569092
    8. '#' → logprob: -6.193908214569092
    9. '<|end|>' → logprob: -7.568908214569092
    10. ' for' → logprob: -8.068907737731934

Token 372: ' =' (ID: 314)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.3653644323348999
    2. ' =' → logprob: -1.6153644323349
    3. '=' → logprob: -3.1153645515441895
    4. 'ount' → logprob: -3.6153645515441895
    5. 'from' → logprob: -4.3653645515441895
    6. 'ont' → logprob: -5.7403645515441895
    7. '_' → logprob: -6.2403645515441895
    8. 'ode' → logprob: -6.3653645515441895
    9. 'omb' → logprob: -6.3653645515441895
    10. 'ounters' → logprob: -6.9903645515441895

Token 373: ' Counter' (ID: 32251)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013888328336179256
    2. ' [' → logprob: -5.013888359069824
    3. '[N' → logprob: -5.388888359069824
    4. '[l' → logprob: -7.013888359069824
    5. '[[' → logprob: -7.888888359069824
    6. '1' → logprob: -8.013888359069824
    7. '[m' → logprob: -8.263888359069824
    8. '[len' → logprob: -8.763888359069824
    9. '[L' → logprob: -8.763888359069824
    10. 'default' → logprob: -9.263888359069824

Token 374: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.009234288707375526
    2. '()' → logprob: -4.884234428405762
    3. '(S' → logprob: -7.009234428405762
    4. '(' → logprob: -8.009234428405762
    5. '(C' → logprob: -9.509234428405762
    6. '({' → logprob: -9.634234428405762
    7. '()
' → logprob: -9.884234428405762
    8. '(
' → logprob: -10.259234428405762
    9. '({
' → logprob: -10.509234428405762
    10. '((' → logprob: -10.884234428405762

Token 375: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.06763415783643723
    2. '(L' → logprob: -3.567634105682373
    3. '(R' → logprob: -3.942634105682373
    4. 'LR' → logprob: -5.067634105682373
    5. ')' → logprob: -5.567634105682373
    6. '(S' → logprob: -5.692634105682373
    7. '[' → logprob: -6.567634105682373
    8. 'S' → logprob: -7.067634105682373
    9. 'L' → logprob: -7.192634105682373
    10. '(
' → logprob: -8.192634582519531

Token 376: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8087270038668066e-05
    2. '[' → logprob: -11.250027656555176
    3. ')
' → logprob: -11.750027656555176
    4. ' )' → logprob: -12.750027656555176
    5. '))' → logprob: -13.625027656555176
    6. ')`' → logprob: -13.750027656555176
    7. ').' → logprob: -14.125027656555176
    8. '.values' → logprob: -15.250027656555176
    9. ')

' → logprob: -15.625027656555176
    10. ')[' → logprob: -16.125028610229492

Token 377: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5897905230522156
    2. 'print' → logprob: -0.8397905230522156
    3. 'for' → logprob: -4.964790344238281
    4. 'L' → logprob: -5.839790344238281
    5. 'B' → logprob: -6.589790344238281
    6. 'left' → logprob: -7.839790344238281
    7. 'R' → logprob: -8.339790344238281
    8. 'ans' → logprob: -8.339790344238281
    9. 'LR' → logprob: -8.464790344238281
    10. 'count' → logprob: -8.964790344238281

Token 378: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007574541959911585
    2. ' C' → logprob: -7.375757217407227
    3. 'any' → logprob: -10.375757217407227
    4. 'len' → logprob: -10.875757217407227
    5. '(C' → logprob: -10.875757217407227
    6. 'L' → logprob: -11.000757217407227
    7. 'abs' → logprob: -11.125757217407227
    8. 'min' → logprob: -12.250757217407227
    9. 'LR' → logprob: -12.375757217407227
    10. '[C' → logprob: -12.500757217407227

Token 379: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.008737720549106598
    2. '[' → logprob: -4.758737564086914
    3. '["' → logprob: -9.883737564086914
    4. '[C' → logprob: -10.758737564086914
    5. '[L' → logprob: -10.758737564086914
    6. '[
' → logprob: -12.633737564086914
    7. ''' → logprob: -12.758737564086914
    8. '[['' → logprob: -12.758737564086914
    9. '==' → logprob: -12.883737564086914
    10. 'L' → logprob: -13.383737564086914

Token 380: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.3649122416973114
    2. ''' → logprob: -1.9899122714996338
    3. 'R' → logprob: -2.364912271499634
    4. ''L' → logprob: -2.739912271499634
    5. 'B' → logprob: -4.739912033081055
    6. '']' → logprob: -7.239912033081055
    7. ']' → logprob: -8.114912033081055
    8. '')' → logprob: -9.302412033081055
    9. 'N' → logprob: -9.552412033081055
    10. ' L' → logprob: -9.614912033081055

Token 381: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.3940936028957367
    2. ']' → logprob: -1.144093632698059
    3. ']!=' → logprob: -5.2690935134887695
    4. '!=' → logprob: -7.2690935134887695
    5. ']==' → logprob: -8.64409351348877
    6. ']>' → logprob: -8.64409351348877
    7. ']<' → logprob: -8.76909351348877
    8. '<' → logprob: -8.89409351348877
    9. '']==' → logprob: -8.89409351348877
    10. '"]' → logprob: -9.14409351348877

Token 382: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0806950032711029
    2. ' !=' → logprob: -2.7056949138641357
    3. '<' → logprob: -5.205695152282715
    4. '==' → logprob: -5.455695152282715
    5. '>' → logprob: -7.455695152282715
    6. ' ==' → logprob: -9.080695152282715
    7. ' <' → logprob: -9.830695152282715
    8. '=' → logprob: -10.205695152282715
    9. '()!=' → logprob: -10.205695152282715
    10. '%' → logprob: -10.580695152282715

Token 383: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007688904879614711
    2. 'N' → logprob: -7.250768661499023
    3. ' C' → logprob: -10.000768661499023
    4. 'l' → logprob: -11.375768661499023
    5. 'L' → logprob: -13.500768661499023
    6. 'c' → logprob: -15.625768661499023
    7. '2' → logprob: -15.875768661499023
    8. ' N' → logprob: -16.375768661499023
    9. '0' → logprob: -16.875768661499023
    10. ' ' → logprob: -17.125768661499023

Token 384: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -2.117345684382599e-05
    2. '[' → logprob: -10.875020980834961
    3. ''' → logprob: -14.750020980834961
    4. '["' → logprob: -14.875020980834961
    5. '[
' → logprob: -14.875020980834961
    6. 'R' → logprob: -15.250020980834961
    7. '{'' → logprob: -15.750020980834961
    8. '('' → logprob: -16.37502098083496
    9. ' ['' → logprob: -16.37502098083496
    10. '
' → logprob: -16.62502098083496

Token 385: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011751054553315043
    2. 'R' → logprob: -6.7511749267578125
    3. ' '' → logprob: -13.626174926757812
    4. '`' → logprob: -13.751174926757812
    5. '']' → logprob: -14.376174926757812
    6. ''S' → logprob: -14.626174926757812
    7. ' R' → logprob: -15.376174926757812
    8. ' ' → logprob: -15.626174926757812
    9. ']' → logprob: -15.751174926757812
    10. '"' → logprob: -16.001174926757812

Token 386: '']:
' (ID: 44766)
  Prédit: '']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:
' → logprob: -0.5149753093719482
    2. '']:' → logprob: -1.5149753093719482
    3. ']:' → logprob: -2.1399753093719482
    4. ']:
' → logprob: -2.8899753093719482
    5. '']' → logprob: -4.889975547790527
    6. ']' → logprob: -6.389975547790527
    7. '"]:' → logprob: -9.264975547790527
    8. '['' → logprob: -10.389975547790527
    9. ''' → logprob: -10.389975547790527
    10. '"]:
' → logprob: -11.014975547790527

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023050084710121155
    2. 'print' → logprob: -6.127305030822754
    3. ' print' → logprob: -9.252305030822754
    4. ':
' → logprob: -11.627305030822754
    5. ':' → logprob: -12.252305030822754
    6. '
' → logprob: -12.752305030822754
    7. '       ' → logprob: -13.002305030822754
    8. '```' → logprob: -13.002305030822754
    9. '    
' → logprob: -14.002305030822754
    10. '0' → logprob: -14.252305030822754

Token 388: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.13170507550239563
    2. ' print' → logprob: -2.1317050457000732
    3. '   ' → logprob: -5.631705284118652
    4. '
' → logprob: -6.756705284118652
    5. '```' → logprob: -11.506705284118652
    6. '	print' → logprob: -12.256705284118652
    7. '    
' → logprob: -13.256705284118652
    8. ' 
' → logprob: -13.756705284118652
    9. '``' → logprob: -13.881705284118652
    10. ' ' → logprob: -14.631705284118652

Token 389: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868754208087921
    2. '0' → logprob: -1.1368753910064697
    3. '(
' → logprob: -12.51187515258789
    4. ' (' → logprob: -14.88687515258789
    5. ' ' → logprob: -16.01187515258789
    6. '```' → logprob: -17.01187515258789
    7. '('' → logprob: -17.76187515258789
    8. '()' → logprob: -17.88687515258789
    9. '(-' → logprob: -18.01187515258789
    10. '<|end|>' → logprob: -18.63687515258789

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.750012397766113
    3. '(' → logprob: -12.375012397766113
    4. '   ' → logprob: -16.50001335144043
    5. '012' → logprob: -16.62501335144043
    6. '
' → logprob: -16.75001335144043
    7. '00' → logprob: -16.87501335144043
    8. '000' → logprob: -17.62501335144043
    9. '```' → logprob: -17.75001335144043
    10. '۰' → logprob: -17.75001335144043

Token 391: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25344517827033997
    2. ')' → logprob: -1.5034451484680176
    3. '   ' → logprob: -6.503445148468018
    4. ')
' → logprob: -12.128445625305176
    5. ')return' → logprob: -12.378445625305176
    6. ' )
' → logprob: -12.753445625305176
    7. ' )' → logprob: -14.378445625305176
    8. '
' → logprob: -14.378445625305176
    9. '')
' → logprob: -14.503445625305176
    10. ')

' → logprob: -14.878445625305176

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052301257848739624
    2. '
' → logprob: -3.0523011684417725
    3. ')' → logprob: -6.552301406860352
    4. 'else' → logprob: -6.927301406860352
    5. '<|end|>' → logprob: -7.302301406860352
    6. '    
' → logprob: -7.802301406860352
    7. '```' → logprob: -9.677301406860352
    8. ')
' → logprob: -10.302301406860352
    9. '  
' → logprob: -11.177301406860352
    10. '\n' → logprob: -11.552301406860352

Token 393: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.30333277583122253
    2. ' sys' → logprob: -1.553332805633545
    3. '
' → logprob: -3.303332805633545
    4. '   ' → logprob: -4.428332805633545
    5. '	sys' → logprob: -7.678332805633545
    6. 'exit' → logprob: -7.803332805633545
    7. ' ' → logprob: -9.303332328796387
    8. '0' → logprob: -9.553332328796387
    9. '(sys' → logprob: -9.553332328796387
    10. '=sys' → logprob: -10.053332328796387

Token 394: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -2.1008713702030946e-06
    2. 'exit' → logprob: -13.375001907348633
    3. '.' → logprob: -15.125001907348633
    4. '.quit' → logprob: -16.375001907348633
    5. '	exit' → logprob: -16.625001907348633
    6. ' .' → logprob: -17.000001907348633
    7. '_exit' → logprob: -17.125001907348633
    8. '.Exit' → logprob: -18.750001907348633
    9. '.EXIT' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.000001907348633

Token 395: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.0219828002154827e-05
    2. '()' → logprob: -10.875020027160645
    3. '0' → logprob: -14.500020027160645
    4. ' (' → logprob: -15.000020027160645
    5. '(
' → logprob: -15.125020027160645
    6. '```' → logprob: -15.875020027160645
    7. '()(' → logprob: -17.50002098083496
    8. '()
' → logprob: -18.00002098083496
    9. '​' → logprob: -19.12502098083496
    10. '()`' → logprob: -19.37502098083496

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. ' ' → logprob: -15.75000286102295
    4. '1' → logprob: -18.375001907348633
    5. ')' → logprob: -19.000001907348633
    6. '۰' → logprob: -19.750001907348633
    7. '
' → logprob: -20.375001907348633
    8. '```' → logprob: -20.375001907348633
    9. '()' → logprob: -21.125001907348633
    10. '(
' → logprob: -21.125001907348633

Token 397: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016206118743866682
    2. ')
' → logprob: -8.875162124633789
    3. ')

' → logprob: -10.750162124633789
    4. '
' → logprob: -15.750162124633789
    5. ')`' → logprob: -15.875162124633789
    6. ' )' → logprob: -16.12516212463379
    7. '),' → logprob: -16.87516212463379
    8. '))' → logprob: -17.00016212463379
    9. ')**' → logprob: -17.25016212463379
    10. '#' → logprob: -17.37516212463379

Token 398: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19541074335575104
    2. 'for' → logprob: -2.69541072845459
    3. 'stack' → logprob: -3.19541072845459
    4. 'balance' → logprob: -4.07041072845459
    5. 'dp' → logprob: -4.44541072845459
    6. 'open' → logprob: -4.44541072845459
    7. 'depth' → logprob: -5.07041072845459
    8. 'count' → logprob: -5.94541072845459
    9. 'pos' → logprob: -6.32041072845459
    10. 'if' → logprob: -6.32041072845459

Token 399: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2548666000366211
    2. 'i' → logprob: -1.504866600036621
    3. ' c' → logprob: -7.754866600036621
    4. '_i' → logprob: -7.754866600036621
    5. 'x' → logprob: -8.004866600036621
    6. ' x' → logprob: -8.254866600036621
    7. 'c' → logprob: -8.504866600036621
    8. '_' → logprob: -8.629866600036621
    9. 'k' → logprob: -9.004866600036621
    10. 'v' → logprob: -9.379866600036621

Token 400: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03819296881556511
    2. 'in' → logprob: -3.2881929874420166
    3. 'range' → logprob: -9.663192749023438
    4. ',' → logprob: -9.913192749023438
    5. ' ' → logprob: -10.413192749023438
    6. ' range' → logprob: -12.538192749023438
    7. 'n' → logprob: -12.913192749023438
    8. 'import' → logprob: -15.038192749023438
    9. 's' → logprob: -15.163192749023438
    10. '  ' → logprob: -15.288192749023438

Token 401: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061975300312042236
    2. ' range' → logprob: -2.8119752407073975
    3. 'LR' → logprob: -12.936975479125977
    4. '[' → logprob: -13.436975479125977
    5. ' ' → logprob: -14.061975479125977
    6. '   ' → logprob: -14.811975479125977
    7. 're' → logprob: -15.061975479125977
    8. '(range' → logprob: -15.061975479125977
    9. '  ' → logprob: -15.311975479125977
    10. '	range' → logprob: -15.561975479125977

Token 402: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14126774668693542
    2. '2' → logprob: -2.141267776489258
    3. '(N' → logprob: -4.641267776489258
    4. '(len' → logprob: -6.141267776489258
    5. 'N' → logprob: -6.391267776489258
    6. '1' → logprob: -8.141267776489258
    7. 'len' → logprob: -8.391267776489258
    8. '4' → logprob: -9.891267776489258
    9. '(l' → logprob: -10.266267776489258
    10. 'range' → logprob: -10.641267776489258

Token 403: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011882677674293518
    2. '1' → logprob: -4.636882781982422
    3. 'N' → logprob: -6.386882781982422
    4. 'len' → logprob: -7.886882781982422
    5. '(' → logprob: -10.386882781982422
    6. '0' → logprob: -11.261882781982422
    7. ' ' → logprob: -11.636882781982422
    8. 'l' → logprob: -12.136882781982422
    9. '4' → logprob: -13.011882781982422
    10. '   ' → logprob: -13.886882781982422

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019792305305600166
    2. '(' → logprob: -4.144792079925537
    3. ' ,' → logprob: -6.269792079925537
    4. '2' → logprob: -6.519792079925537
    5. ',len' → logprob: -9.019792556762695
    6. '(len' → logprob: -9.269792556762695
    7. '(N' → logprob: -9.644792556762695
    8. ',N' → logprob: -10.144792556762695
    9. 'N' → logprob: -11.019792556762695
    10. '1' → logprob: -11.394792556762695

Token 405: ' N' (ID: 478)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014754603616893291
    2. 'len' → logprob: -7.1264753341674805
    3. 'N' → logprob: -7.5014753341674805
    4. ' ' → logprob: -9.37647533416748
    5. '4' → logprob: -11.50147533416748
    6. '   ' → logprob: -11.75147533416748
    7. '
' → logprob: -12.12647533416748
    8. ' len' → logprob: -12.62647533416748
    9. '```' → logprob: -13.25147533416748
    10. '(' → logprob: -13.37647533416748

Token 406: '+' (ID: 10)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1095181480050087
    2. '):' → logprob: -2.484518051147461
    3. '+' → logprob: -4.234518051147461
    4. '):
' → logprob: -5.484518051147461
    5. ' *' → logprob: -6.859518051147461
    6. ':' → logprob: -8.359518051147461
    7. '2' → logprob: -9.234518051147461
    8. '
' → logprob: -9.609518051147461
    9. '*N' → logprob: -9.609518051147461
    10. ' +' → logprob: -9.609518051147461

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002320460742339492
    2. '2' → logprob: -6.252320289611816
    3. 'N' → logprob: -8.252320289611816
    4. '*' → logprob: -9.752320289611816
    5. ' ' → logprob: -10.377320289611816
    6. '   ' → logprob: -11.377320289611816
    7. '(' → logprob: -11.627320289611816
    8. ')' → logprob: -12.002320289611816
    9. '):
' → logprob: -12.127320289611816
    10. '+' → logprob: -12.502320289611816

Token 408: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8619837760925293
    2. '):
' → logprob: -1.2369837760925293
    3. ':
' → logprob: -1.4869837760925293
    4. '):' → logprob: -2.8619837760925293
    5. '():
' → logprob: -6.361983776092529
    6. '   ' → logprob: -6.486983776092529
    7. ',' → logprob: -8.111984252929688
    8. ' :' → logprob: -8.861984252929688
    9. '():' → logprob: -9.111984252929688
    10. ' :
' → logprob: -9.611984252929688

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021152703266125172
    2. 'ans' → logprob: -8.875211715698242
    3. '	ans' → logprob: -9.625211715698242
    4. ' ans' → logprob: -12.250211715698242
    5. '   ' → logprob: -15.125211715698242
    6. '(ans' → logprob: -15.375211715698242
    7. 'if' → logprob: -15.500211715698242
    8. '       ' → logprob: -17.125211715698242
    9. '_ans' → logprob: -17.750211715698242
    10. '<|end|>' → logprob: -17.875211715698242

Token 410: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0035507739521563053
    2. '   ' → logprob: -5.878551006317139
    3. 'if' → logprob: -7.253551006317139
    4. ' ans' → logprob: -10.87855052947998
    5. '	ans' → logprob: -11.75355052947998
    6. 'print' → logprob: -13.37855052947998
    7. '(ans' → logprob: -13.62855052947998
    8. 'answer' → logprob: -13.75355052947998
    9. 'LR' → logprob: -13.87855052947998
    10. 'for' → logprob: -14.12855052947998

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024769625160843134
    2. ' =' → logprob: -6.002477169036865
    3. '*=' → logprob: -13.627476692199707
    4. ' *=' → logprob: -18.252477645874023
    5. '=
' → logprob: -19.002477645874023
    6. ')=' → logprob: -19.252477645874023
    7. '   ' → logprob: -19.252477645874023
    8. '+=' → logprob: -19.377477645874023
    9. '=

' → logprob: -19.627477645874023
    10. 'ans' → logprob: -19.752477645874023

Token 412: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.56102097814437e-05
    2. ' mod' → logprob: -10.000045776367188
    3. '(mod' → logprob: -16.125045776367188
    4. '	mod' → logprob: -18.625045776367188
    5. 'ans' → logprob: -20.250045776367188
    6. '_mod' → logprob: -20.375045776367188
    7. 'mul' → logprob: -20.500045776367188
    8. '.mod' → logprob: -20.625045776367188
    9. '   ' → logprob: -21.250045776367188
    10. '
' → logprob: -21.750045776367188

Token 413: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -1.0564331205387134e-05
    2. 'mul' → logprob: -11.50001049041748
    3. '_pow' → logprob: -14.75001049041748
    4. 'Mul' → logprob: -19.000011444091797
    5. '```' → logprob: -20.000011444091797
    6. '_' → logprob: -20.125011444091797
    7. '_add' → logprob: -20.125011444091797
    8. '_mod' → logprob: -20.250011444091797
    9. '.mul' → logprob: -21.125011444091797
    10. ' mul' → logprob: -21.625011444091797

Token 414: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0009125363430939615
    2. 'ans' → logprob: -7.000912666320801
    3. '	ans' → logprob: -14.7509126663208
    4. '(
' → logprob: -15.2509126663208
    5. '(' → logprob: -15.5009126663208
    6. '(i' → logprob: -16.125911712646484
    7. '(answer' → logprob: -16.500911712646484
    8. 'Ans' → logprob: -17.250911712646484
    9. ' ans' → logprob: -17.500911712646484
    10. '_ans' → logprob: -18.500911712646484

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14520670473575592
    2. ',i' → logprob: -2.1452066898345947
    3. '(i' → logprob: -4.020206928253174
    4. '(ans' → logprob: -9.395206451416016
    5. '(' → logprob: -10.270206451416016
    6. ' ,' → logprob: -10.770206451416016
    7. 'i' → logprob: -11.520206451416016
    8. '   ' → logprob: -12.145206451416016
    9. ',
' → logprob: -13.020206451416016
    10. ',(' → logprob: -13.270206451416016

Token 416: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.4418171455617994e-05
    2. '2' → logprob: -10.750044822692871
    3. ' i' → logprob: -10.750044822692871
    4. 'mod' → logprob: -14.250044822692871
    5. ' ' → logprob: -15.500044822692871
    6. '   ' → logprob: -15.500044822692871
    7. 'C' → logprob: -16.250043869018555
    8. '	i' → logprob: -17.125043869018555
    9. '(i' → logprob: -17.250043869018555
    10. '
' → logprob: -17.250043869018555

Token 417: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -15.250006675720215
    4. '))' → logprob: -16.12500762939453
    5. ')#' → logprob: -16.25000762939453
    6. ')`' → logprob: -16.25000762939453
    7. '*' → logprob: -16.50000762939453
    8. '#' → logprob: -16.62500762939453
    9. '**' → logprob: -17.25000762939453
    10. '')' → logprob: -17.75000762939453

Token 418: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.45848218582978e-06
    2. ' print' → logprob: -13.50000286102295
    3. '
' → logprob: -14.75000286102295
    4. '```' → logprob: -15.37500286102295
    5. '<|end|>' → logprob: -15.75000286102295
    6. ')' → logprob: -15.87500286102295
    7. '(print' → logprob: -16.875001907348633
    8. '#print' → logprob: -17.875001907348633
    9. '.print' → logprob: -18.000001907348633
    10. '#' → logprob: -19.625001907348633

Token 419: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -13.125003814697266
    3. 'ans' → logprob: -13.500003814697266
    4. '(answer' → logprob: -15.875003814697266
    5. '	ans' → logprob: -17.625003814697266
    6. '(
' → logprob: -18.625003814697266
    7. '_ans' → logprob: -19.500003814697266
    8. 'ANS' → logprob: -19.625003814697266
    9. '(a' → logprob: -19.625003814697266
    10. ' (' → logprob: -19.750003814697266

Token 420: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.875001907348633
    3. '```' → logprob: -14.875001907348633
    4. '')' → logprob: -15.375001907348633
    5. ')
' → logprob: -16.125001907348633
    6. '())' → logprob: -16.500001907348633
    7. '*' → logprob: -16.875001907348633
    8. '()' → logprob: -16.875001907348633
    9. ')`' → logprob: -17.000001907348633
    10. '(' → logprob: -17.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 418
Tokens correctement prédits (1ère position, stricte): 168
Tokens correctement prédits (1ère position, avec adaptation): 183
Tokens correctement prédits (top 10): 376
Précision stricte (1ère position): 40.19%
Précision adaptée (1ère position): 43.78%
Précision (top 10): 89.95%
================================================================================
