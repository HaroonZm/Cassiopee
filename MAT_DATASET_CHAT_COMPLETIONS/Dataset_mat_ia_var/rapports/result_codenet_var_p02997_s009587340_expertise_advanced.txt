================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import exit

def main():
    N, K = map(int, input().split())
    max_non_bridge = (N - 1) * (N - 2) // 2

    if max_non_bridge < K:
        print(-1)
        return

    edges = [[i] for i in range(1, N)]

    ef, et = 1, 2
    added = 0
    while added < max_non_bridge - K:
        if et == ef:
            et += 1
        if et >= N:
            ef += 1
            et = ef + 1
            continue
        edges[ef].append(et)
        added += 1
        et += 1

    total_edges = sum(map(len, edges))
    print(total_edges)
    for u, lst in enumerate(edges):
        for v in lst:
            print(u + 1, v + 1)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' exit' (ID: 10654)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.050936806946992874
    2. ' argv' → logprob: -3.550936698913574
    3. 'exit' → logprob: -4.050936698913574
    4. ' exit' → logprob: -6.675936698913574
    5. 'stdout' → logprob: -6.800936698913574
    6. 'path' → logprob: -7.550936698913574
    7. 'stdin' → logprob: -8.175936698913574
    8. 'import' → logprob: -8.550936698913574
    9. 'version' → logprob: -9.300936698913574
    10. 'stderr' → logprob: -10.175936698913574

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019259221851825714
    2. '.' → logprob: -4.769259452819824
    3. '\' → logprob: -5.894259452819824
    4. '\n' → logprob: -5.894259452819824
    5. '(
' → logprob: -6.394259452819824
    6. '
' → logprob: -7.519259452819824
    7. ',' → logprob: -7.644259452819824
    8. ':' → logprob: -7.644259452819824
    9. '\(' → logprob: -7.644259452819824
    10. '()' → logprob: -7.894259452819824

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0545429065823555
    2. '\n' → logprob: -3.4295430183410645
    3. '
' → logprob: -5.3045430183410645
    4. '()' → logprob: -5.4295430183410645
    5. '

' → logprob: -5.5545430183410645
    6. '\' → logprob: -6.4295430183410645
    7. 'newline' → logprob: -6.5545430183410645
    8. '\(' → logprob: -7.0545430183410645
    9. '<|end|>' → logprob: -7.3045430183410645
    10. ',' → logprob: -7.5545430183410645

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1964634209871292
    2. ' main' → logprob: -1.8214634656906128
    3. ' space' → logprob: -5.321463584899902
    4. ' exit' → logprob: -5.821463584899902
    5. '_' → logprob: -6.071463584899902
    6. ' process' → logprob: -6.446463584899902
    7. ' hello' → logprob: -6.446463584899902
    8. '_exit' → logprob: -7.446463584899902
    9. ' my' → logprob: -8.071463584899902
    10. ' check' → logprob: -8.321463584899902

Token 7: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04135715588927269
    2. '(' → logprob: -3.2913570404052734
    3. ':' → logprob: -6.291357040405273
    4. '(:' → logprob: -7.041357040405273
    5. ' ():' → logprob: -7.666357040405273
    6. '(":' → logprob: -9.916357040405273
    7. '()' → logprob: -10.541357040405273
    8. '(
' → logprob: -12.041357040405273
    9. '):' → logprob: -12.041357040405273
    10. '(':' → logprob: -12.166357040405273

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08161512762308121
    2. '    ' → logprob: -3.5816152095794678
    3. ' ' → logprob: -4.206614971160889
    4. '\' → logprob: -4.206614971160889
    5. '(' → logprob: -4.456614971160889
    6. '    
' → logprob: -5.456614971160889
    7. '\n' → logprob: -6.706614971160889
    8. ''' → logprob: -7.831614971160889
    9. ' 
' → logprob: -7.831614971160889
    10. '()' → logprob: -8.081615447998047

Token 9: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2315441220998764
    2. 'print' → logprob: -1.8565441370010376
    3. 'pass' → logprob: -4.106544017791748
    4. ' print' → logprob: -5.356544017791748
    5. 'n' → logprob: -5.356544017791748
    6. ' pass' → logprob: -5.481544017791748
    7. ' ' → logprob: -5.856544017791748
    8. 'user' → logprob: -5.856544017791748
    9. 'name' → logprob: -5.981544017791748
    10. 'exit' → logprob: -6.106544017791748

Token 10: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11702907085418701
    2. '=' → logprob: -2.7420291900634766
    3. ' ' → logprob: -4.117029190063477
    4. '_' → logprob: -4.617029190063477
    5. '   ' → logprob: -4.867029190063477
    6. '  ' → logprob: -5.367029190063477
    7. ',' → logprob: -5.867029190063477
    8. ')' → logprob: -6.742029190063477
    9. '.' → logprob: -7.117029190063477
    10. 'u' → logprob: -7.617029190063477

Token 11: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.39878422021865845
    2. ' ' → logprob: -1.7737841606140137
    3. ' K' → logprob: -2.6487841606140137
    4. 'M' → logprob: -2.6487841606140137
    5. 'K' → logprob: -5.023784160614014
    6. 'input' → logprob: -6.148784160614014
    7. 'space' → logprob: -6.398784160614014
    8. '  ' → logprob: -6.648784160614014
    9. ' input' → logprob: -6.773784160614014
    10. ' space' → logprob: -7.023784160614014

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020548192784190178
    2. '=' → logprob: -3.895548105239868
    3. ',' → logprob: -12.395547866821289
    4. ' ' → logprob: -13.770547866821289
    5. ')' → logprob: -15.145547866821289
    6. '=int' → logprob: -15.395547866821289
    7. '<|end|>' → logprob: -15.520547866821289
    8. ' =
' → logprob: -15.895547866821289
    9. ' =)' → logprob: -16.77054786682129
    10. ' ,' → logprob: -16.77054786682129

Token 13: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006823831703513861
    2. 'map' → logprob: -5.006824016571045
    3. ' input' → logprob: -10.006823539733887
    4. ' ' → logprob: -10.631823539733887
    5. ' list' → logprob: -10.631823539733887
    6. 'input' → logprob: -11.631823539733887
    7. '	map' → logprob: -13.506823539733887
    8. 'list' → logprob: -13.881823539733887
    9. ' [' → logprob: -13.881823539733887
    10. '(map' → logprob: -14.131823539733887

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5022872686386108
    2. '(' → logprob: -1.0022872686386108
    3. '(str' → logprob: -3.6272873878479004
    4. '(lambda' → logprob: -6.8772873878479
    5. '(input' → logprob: -9.252286911010742
    6. '(
' → logprob: -9.627286911010742
    7. '(list' → logprob: -11.752286911010742
    8. '(eval' → logprob: -11.752286911010742
    9. ' (' → logprob: -13.002286911010742
    10. '(tuple' → logprob: -13.252286911010742

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026991060003638268
    2. ',input' → logprob: -3.651991128921509
    3. '(input' → logprob: -7.90199089050293
    4. 'input' → logprob: -9.27699089050293
    5. ',int' → logprob: -9.52699089050293
    6. '(' → logprob: -9.65199089050293
    7. ')' → logprob: -9.90199089050293
    8. ' ,' → logprob: -11.02699089050293
    9. '<|end|>' → logprob: -12.27699089050293
    10. ' input' → logprob: -12.65199089050293

Token 16: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04859793186187744
    2. 'input' → logprob: -3.048597812652588
    3. ')' → logprob: -11.923598289489746
    4. ' )' → logprob: -13.173598289489746
    5. '(input' → logprob: -14.048598289489746
    6. ' ' → logprob: -14.173598289489746
    7. '	input' → logprob: -15.673598289489746
    8. '=input' → logprob: -15.673598289489746
    9. ',input' → logprob: -15.673598289489746
    10. '<input' → logprob: -17.54859733581543

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.013492765836417675
    2. '())' → logprob: -4.888492584228516
    3. '()' → logprob: -5.638492584228516
    4. ')' → logprob: -6.638492584228516
    5. '(' → logprob: -7.513492584228516
    6. '('' → logprob: -8.013492584228516
    7. '()))' → logprob: -10.263492584228516
    8. '(),' → logprob: -11.013492584228516
    9. '("' → logprob: -11.263492584228516
    10. '());' → logprob: -11.388492584228516

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003421375877223909
    2. 'strip' → logprob: -8.00034236907959
    3. 'rstrip' → logprob: -12.12534236907959
    4. 'spl' → logprob: -14.50034236907959
    5. ' split' → logprob: -15.37534236907959
    6. '(split' → logprob: -15.50034236907959
    7. ')' → logprob: -15.75034236907959
    8. 'read' → logprob: -16.250341415405273
    9. '```' → logprob: -18.750341415405273
    10. '_split' → logprob: -18.875341415405273

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08935925364494324
    2. '))' → logprob: -2.4643592834472656
    3. '())' → logprob: -8.214359283447266
    4. '()' → logprob: -9.464359283447266
    5. '),' → logprob: -10.714359283447266
    6. '()))' → logprob: -11.089359283447266
    7. ')))' → logprob: -11.339359283447266
    8. ')
' → logprob: -12.339359283447266
    9. '(' → logprob: -12.714359283447266
    10. ')`' → logprob: -13.089359283447266

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2783377170562744
    2. ')' → logprob: -3.0283377170562744
    3. '
' → logprob: -3.5283377170562744
    4. ' ' → logprob: -3.5283377170562744
    5. '    
' → logprob: -3.5283377170562744
    6. '```' → logprob: -3.9033377170562744
    7. '    ' → logprob: -4.028337478637695
    8. ' 
' → logprob: -4.278337478637695
    9. '<|end|>' → logprob: -4.278337478637695
    10. '\' → logprob: -4.528337478637695

Token 21: ' max' (ID: 2999)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.9743375778198242
    2. 'd' → logprob: -2.224337577819824
    3. 'for' → logprob: -2.724337577819824
    4. ' ' → logprob: -2.849337577819824
    5. '   ' → logprob: -2.974337577819824
    6. 'a' → logprob: -3.099337577819824
    7. ' for' → logprob: -3.099337577819824
    8. ' a' → logprob: -3.349337577819824
    9. 'count' → logprob: -3.349337577819824
    10. 's' → logprob: -3.599337577819824

Token 22: '_non' (ID: 52193)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21097536385059357
    2. '_sum' → logprob: -2.835975408554077
    3. '_val' → logprob: -2.960975408554077
    4. '_value' → logprob: -3.460975408554077
    5. '_length' → logprob: -5.085975170135498
    6. '_score' → logprob: -5.210975170135498
    7. '_len' → logprob: -5.210975170135498
    8. '_num' → logprob: -5.335975170135498
    9. '_count' → logprob: -5.335975170135498
    10. '_height' → logprob: -6.460975170135498

Token 23: '_bridge' (ID: 138885)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3465431332588196
    2. '_over' → logprob: -2.971543073654175
    3. '_overlap' → logprob: -2.971543073654175
    4. '_negative' → logprob: -3.596543073654175
    5. 'over' → logprob: -3.721543073654175
    6. '_adj' → logprob: -3.721543073654175
    7. '_cont' → logprob: -4.096543312072754
    8. '_de' → logprob: -4.846543312072754
    9. '_special' → logprob: -4.971543312072754
    10. 'negative' → logprob: -5.221543312072754

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5740148425102234
    2. '_' → logprob: -1.5740149021148682
    3. '_len' → logprob: -2.824014902114868
    4. '=' → logprob: -2.949014902114868
    5. '_length' → logprob: -3.199014902114868
    6. '_edges' → logprob: -3.199014902114868
    7. '_nodes' → logprob: -4.324014663696289
    8. '_size' → logprob: -5.074014663696289
    9. 's' → logprob: -5.824014663696289
    10. '_count' → logprob: -6.324014663696289

Token 25: ' (' (ID: 350)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.7002629041671753
    2. ' ' → logprob: -1.2002629041671753
    3. '0' → logprob: -2.825263023376465
    4. 'N' → logprob: -2.950263023376465
    5. ' K' → logprob: -3.575263023376465
    6. ' max' → logprob: -3.700263023376465
    7. ' (' → logprob: -4.575263023376465
    8. 'max' → logprob: -4.950263023376465
    9. ' float' → logprob: -5.325263023376465
    10. ' min' → logprob: -6.075263023376465

Token 26: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5387164354324341
    2. '1' → logprob: -1.913716435432434
    3. 'K' → logprob: -2.0387163162231445
    4. '2' → logprob: -2.6637163162231445
    5. ' N' → logprob: -3.9137163162231445
    6. ' (' → logprob: -4.7887163162231445
    7. ' K' → logprob: -4.9137163162231445
    8. '(' → logprob: -4.9137163162231445
    9. ' ' → logprob: -4.9137163162231445
    10. '(N' → logprob: -5.4137163162231445

Token 27: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5939513444900513
    2. ' -' → logprob: -0.8439513444900513
    3. '*' → logprob: -5.343951225280762
    4. ' //' → logprob: -5.593951225280762
    5. '+' → logprob: -5.968951225280762
    6. '//' → logprob: -5.968951225280762
    7. ' *' → logprob: -6.343951225280762
    8. ' +' → logprob: -6.968951225280762
    9. ')' → logprob: -7.718951225280762
    10. ' ' → logprob: -7.843951225280762

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08357719331979752
    2. ' ' → logprob: -2.7085771560668945
    3. 'K' → logprob: -5.2085771560668945
    4. '2' → logprob: -5.3335771560668945
    5. ' K' → logprob: -5.9585771560668945
    6. '3' → logprob: -7.9585771560668945
    7. ')' → logprob: -8.896077156066895
    8. '   ' → logprob: -10.208577156066895
    9. '  ' → logprob: -10.958577156066895
    10. '	K' → logprob: -11.208577156066895

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001156770158559084
    2. ' ' → logprob: -7.376156806945801
    3. '2' → logprob: -7.751156806945801
    4. 'K' → logprob: -10.0636568069458
    5. '3' → logprob: -10.6886568069458
    6. 'k' → logprob: -11.9386568069458
    7. '   ' → logprob: -12.1261568069458
    8. '  ' → logprob: -12.6886568069458
    9. '```' → logprob: -13.6261568069458
    10. '(' → logprob: -13.8761568069458

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006771022453904152
    2. ')*' → logprob: -5.506771087646484
    3. ')*(' → logprob: -6.381771087646484
    4. ')**' → logprob: -7.631771087646484
    5. ' )' → logprob: -8.381771087646484
    6. '*' → logprob: -8.756771087646484
    7. '*(' → logprob: -10.506771087646484
    8. ' *' → logprob: -10.631771087646484
    9. '-' → logprob: -11.131771087646484
    10. '+' → logprob: -11.256771087646484

Token 31: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16346119344234467
    2. '*' → logprob: -1.9134612083435059
    3. '*(' → logprob: -6.163461208343506
    4. '**' → logprob: -6.913461208343506
    5. ' **' → logprob: -9.913460731506348
    6. ' ' → logprob: -10.788460731506348
    7. ' +' → logprob: -10.913460731506348
    8. '+' → logprob: -11.663460731506348
    9. ')' → logprob: -11.663460731506348
    10. '*K' → logprob: -11.913460731506348

Token 32: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7464580535888672
    2. ' N' → logprob: -1.4964580535888672
    3. '(N' → logprob: -2.246458053588867
    4. 'K' → logprob: -3.121458053588867
    5. ' (' → logprob: -3.121458053588867
    6. ' ' → logprob: -3.121458053588867
    7. '2' → logprob: -3.621458053588867
    8. ' K' → logprob: -3.871458053588867
    9. '(' → logprob: -4.496458053588867
    10. '(K' → logprob: -6.371458053588867

Token 33: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.845798710244708e-05
    2. ' N' → logprob: -11.375038146972656
    3. '(N' → logprob: -11.875038146972656
    4. '1' → logprob: -12.125038146972656
    5. '	N' → logprob: -12.750038146972656
    6. ' ' → logprob: -12.750038146972656
    7. '(' → logprob: -12.875038146972656
    8. 'K' → logprob: -13.625038146972656
    9. '<|end|>' → logprob: -13.625038146972656
    10. '2' → logprob: -13.875038146972656

Token 34: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31492990255355835
    2. ' -' → logprob: -1.3149299621582031
    3. ' ' → logprob: -7.314929962158203
    4. ')' → logprob: -7.314929962158203
    5. '   ' → logprob: -8.814929962158203
    6. '  ' → logprob: -9.814929962158203
    7. '<|end|>' → logprob: -9.939929962158203
    8. '1' → logprob: -10.689929962158203
    9. '<|end|>' → logprob: -11.689929962158203
    10. '-)' → logprob: -11.814929962158203

Token 35: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5909697413444519
    2. '1' → logprob: -0.8409697413444519
    3. ' ' → logprob: -4.215969562530518
    4. '   ' → logprob: -9.840970039367676
    5. '3' → logprob: -10.840970039367676
    6. '  ' → logprob: -10.965970039367676
    7. '```' → logprob: -11.090970039367676
    8. '4' → logprob: -11.715970039367676
    9. '-' → logprob: -11.778470039367676
    10. ')' → logprob: -11.840970039367676

Token 36: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029890725389122963
    2. '2' → logprob: -3.529890775680542
    3. ' ' → logprob: -9.029891014099121
    4. '   ' → logprob: -12.029891014099121
    5. '-' → logprob: -12.154891014099121
    6. '0' → logprob: -12.904891014099121
    7. '```' → logprob: -13.154891014099121
    8. '  ' → logprob: -13.404891014099121
    9. ')' → logprob: -14.342391014099121
    10. '4' → logprob: -14.529891014099121

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021956706419587135
    2. ' )' → logprob: -4.271956920623779
    3. ')//' → logprob: -5.521956920623779
    4. ' //' → logprob: -6.021956920623779
    5. '//' → logprob: -6.646956920623779
    6. '   ' → logprob: -10.896956443786621
    7. ')/' → logprob: -12.271956443786621
    8. ' ' → logprob: -12.771956443786621
    9. '#' → logprob: -12.896956443786621
    10. 'def' → logprob: -13.771956443786621

Token 38: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1625458300113678
    2. '//' → logprob: -1.9125458002090454
    3. ')' → logprob: -7.537545680999756
    4. '   ' → logprob: -7.537545680999756
    5. ' /' → logprob: -7.912545680999756
    6. ' ' → logprob: -8.162546157836914
    7. '#' → logprob: -8.412546157836914
    8. ' #' → logprob: -8.787546157836914
    9. 'def' → logprob: -9.787546157836914
    10. ' )' → logprob: -9.787546157836914

Token 39: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -9.875052452087402
    3. '1' → logprob: -14.375052452087402
    4. '```' → logprob: -17.375051498413086
    5. '   ' → logprob: -17.500051498413086
    6. '  ' → logprob: -17.750051498413086
    7. '۲' → logprob: -18.437551498413086
    8. ')' → logprob: -18.500051498413086
    9. '.' → logprob: -18.625051498413086
    10. '3' → logprob: -18.750051498413086

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.143808109802194e-05
    2. '1' → logprob: -10.125041007995605
    3. ' ' → logprob: -13.625041007995605
    4. '3' → logprob: -17.000041961669922
    5. '```' → logprob: -17.375041961669922
    6. '   ' → logprob: -17.875041961669922
    7. '.' → logprob: -19.062541961669922
    8. '{' → logprob: -19.312541961669922
    9. '  ' → logprob: -19.375041961669922
    10. ')' → logprob: -19.812541961669922

Token 41: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08004686236381531
    2. '    
' → logprob: -3.8300468921661377
    3. '
' → logprob: -4.455046653747559
    4. ')' → logprob: -4.830046653747559
    5. '<|end|>' → logprob: -4.830046653747559
    6. ' 
' → logprob: -5.205046653747559
    7. ' if' → logprob: -5.330046653747559
    8. ' ' → logprob: -5.580046653747559
    9. '\n' → logprob: -6.205046653747559
    10. '  
' → logprob: -6.205046653747559

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31964224576950073
    2. '
' → logprob: -1.8196423053741455
    3. '    
' → logprob: -3.0696423053741455
    4. ' if' → logprob: -3.6946423053741455
    5. 'if' → logprob: -4.319642066955566
    6. '\n' → logprob: -4.444642066955566
    7. '  
' → logprob: -5.444642066955566
    8. ' 
' → logprob: -6.194642066955566
    9. '   
' → logprob: -6.444642066955566
    10. ',' → logprob: -6.444642066955566

Token 43: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3697836101055145
    2. 'if' (adapté à ' if') → logprob: -1.744783639907837
    3. '<|end|>' → logprob: -2.494783639907837
    4. '
' → logprob: -3.994783639907837
    5. '   ' → logprob: -4.119783401489258
    6. ' 
' → logprob: -4.994783401489258
    7. '<|end|>' → logprob: -5.994783401489258
    8. 'print' → logprob: -6.369783401489258
    9. '\n' → logprob: -6.619783401489258
    10. '  
' → logprob: -6.869783401489258

Token 44: ' max' (ID: 2999)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.007763027213513851
    2. ' ' → logprob: -5.507762908935547
    3. 'K' → logprob: -5.632762908935547
    4. ' max' → logprob: -10.882762908935547
    5. ' ' → logprob: -11.132762908935547
    6. '  ' → logprob: -11.257762908935547
    7. ' abs' → logprob: -11.507762908935547
    8. ' (' → logprob: -11.632762908935547
    9. '	K' → logprob: -11.882762908935547
    10. ' N' → logprob: -12.007762908935547

Token 45: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.0007581694517284632
    2. '_' → logprob: -7.250758171081543
    3. ' _' → logprob: -10.625758171081543
    4. '_missing' → logprob: -12.000758171081543
    5. '_possible' → logprob: -12.000758171081543
    6. '_n' → logprob: -13.625758171081543
    7. '_less' → logprob: -13.750758171081543
    8. '_NON' → logprob: -13.875758171081543
    9. '-_' → logprob: -13.875758171081543
    10. '<' → logprob: -14.000758171081543

Token 46: '_bridge' (ID: 138885)
  Prédit: '_bridge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bridge' → logprob: -1.688212614681106e-05
    2. '_' → logprob: -11.750017166137695
    3. '_br' → logprob: -12.000017166137695
    4. '-' → logprob: -13.375017166137695
    5. ' _' → logprob: -14.500017166137695
    6. '_-' → logprob: -16.375017166137695
    7. '<|end|>' → logprob: -16.375017166137695
    8. '.bridge' → logprob: -16.625017166137695
    9. ' bridge' → logprob: -16.750017166137695
    10. '_break' → logprob: -16.875017166137695

Token 47: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.027465999126434326
    2. '<' → logprob: -3.652466058731079
    3. ' >=' → logprob: -7.2774658203125
    4. ' ' → logprob: -8.0274658203125
    5. ' <=' → logprob: -9.9024658203125
    6. '>=' → logprob: -10.0274658203125
    7. ' >' → logprob: -11.0274658203125
    8. '   ' → logprob: -11.6524658203125
    9. '>' → logprob: -12.2774658203125
    10. '  ' → logprob: -12.4024658203125

Token 48: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.004667811095714569
    2. 'K' → logprob: -5.37966775894165
    3. ' ' → logprob: -10.504668235778809
    4. '	K' → logprob: -11.629668235778809
    5. '"' → logprob: -13.129668235778809
    6. '>K' → logprob: -13.629668235778809
    7. '    ' → logprob: -13.879668235778809
    8. '<|end|>' → logprob: -13.879668235778809
    9. ''' → logprob: -14.129668235778809
    10. ' ' → logprob: -14.129668235778809

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026649541687220335
    2. ' :' → logprob: -6.002665042877197
    3. ':
' → logprob: -9.002664566040039
    4. '   ' → logprob: -10.627664566040039
    5. '):' → logprob: -11.127664566040039
    6. ':return' → logprob: -11.877664566040039
    7. '+:' → logprob: -12.002664566040039
    8. ' :
' → logprob: -13.002664566040039
    9. ':**' → logprob: -13.002664566040039
    10. '>:' → logprob: -13.627664566040039

Token 50: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007858584634959698
    2. '       ' → logprob: -5.132858753204346
    3. '\n' → logprob: -7.382858753204346
    4. '
' → logprob: -7.632858753204346
    5. 'print' → logprob: -7.632858753204346
    6. '```' → logprob: -9.382858276367188
    7. ' print' → logprob: -9.632858276367188
    8. 'exit' → logprob: -9.882858276367188
    9. '    
' → logprob: -10.757858276367188
    10. ':
' → logprob: -10.882858276367188

Token 51: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12410425394773483
    2. ' print' → logprob: -3.1241042613983154
    3. '       ' → logprob: -3.2491042613983154
    4. ' exit' → logprob: -4.124104022979736
    5. 'exit' → logprob: -4.874104022979736
    6. 'print' (adapté à ' print') → logprob: -4.874104022979736
    7. '```' → logprob: -6.624104022979736
    8. '    ' → logprob: -7.999104022979736
    9. '	exit' → logprob: -7.999104022979736
    10. '``' → logprob: -9.374104499816895

Token 52: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06302180886268616
    2. '(-' → logprob: -3.1880218982696533
    3. '("' → logprob: -3.9380218982696533
    4. '('' → logprob: -8.688021659851074
    5. '(
' → logprob: -10.688021659851074
    6. ' (' → logprob: -10.813021659851074
    7. '-' → logprob: -11.063021659851074
    8. '(N' → logprob: -11.063021659851074
    9. '(None' → logprob: -11.063021659851074
    10. '("-' → logprob: -11.438021659851074

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.625001907348633
    3. '2' → logprob: -15.375001907348633
    4. '１' → logprob: -15.625001907348633
    5. '```' → logprob: -16.437501907348633
    6. '11' → logprob: -16.687501907348633
    7. ')' → logprob: -16.750001907348633
    8. 's' → logprob: -16.812501907348633
    9. '-' → logprob: -16.875001907348633
    10. 'print' → logprob: -17.187501907348633

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009429076453670859
    2. ')
' → logprob: -7.000942707061768
    3. '   ' → logprob: -10.625943183898926
    4. '`)' → logprob: -12.500943183898926
    5. ' )' → logprob: -14.375943183898926
    6. '')' → logprob: -14.500943183898926
    7. '")' → logprob: -14.625943183898926
    8. '))' → logprob: -14.625943183898926
    9. ')return' → logprob: -15.125943183898926
    10. ')
' → logprob: -15.250943183898926

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1933724731206894
    2. '   ' → logprob: -1.8183724880218506
    3. '
' → logprob: -4.4433722496032715
    4. '<|end|>' → logprob: -7.8183722496032715
    5. '    
' → logprob: -8.06837272644043
    6. ')' → logprob: -8.19337272644043
    7. '        
' → logprob: -8.69337272644043
    8. '```' → logprob: -8.94337272644043
    9. 'return' → logprob: -9.31837272644043
    10. ' return' → logprob: -9.81837272644043

Token 56: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04442770034074783
    2. '   ' → logprob: -3.1694276332855225
    3. '
' → logprob: -7.169427871704102
    4. ' return' → logprob: -8.044427871704102
    5. 'return' (adapté à ' return') → logprob: -8.544427871704102
    6. '	return' → logprob: -10.419427871704102
    7. '    
' → logprob: -10.544427871704102
    8. ' ' → logprob: -10.669427871704102
    9. '    ' → logprob: -11.919427871704102
    10. '        
' → logprob: -11.919427871704102

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18895697593688965
    2. '    
' → logprob: -2.0639569759368896
    3. '<|end|>' → logprob: -4.188957214355469
    4. '   ' → logprob: -4.313957214355469
    5. '  
' → logprob: -4.688957214355469
    6. ' 
' → logprob: -5.438957214355469
    7. '   
' → logprob: -6.688957214355469
    8. '\n' → logprob: -6.938957214355469
    9. '
    
' → logprob: -8.938957214355469
    10. '     
' → logprob: -9.313957214355469

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33178210258483887
    2. '    
' → logprob: -1.5817821025848389
    3. '
' → logprob: -2.831782102584839
    4. ' 
' → logprob: -5.206782341003418
    5. '<|end|>' → logprob: -5.456782341003418
    6. '\n' → logprob: -5.706782341003418
    7. '    ' → logprob: -6.456782341003418
    8. '     
' → logprob: -7.206782341003418
    9. '    
    
' → logprob: -7.706782341003418
    10. 'print' → logprob: -7.831782341003418

Token 59: ' edges' (ID: 22569)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08686164021492004
    2. '   ' → logprob: -2.8368616104125977
    3. ' print' → logprob: -4.336861610412598
    4. 'edges' (adapté à ' edges') → logprob: -5.461861610412598
    5. 'if' → logprob: -5.836861610412598
    6. 'graph' → logprob: -6.711861610412598
    7. ' edges' → logprob: -7.461861610412598
    8. '    
' → logprob: -7.461861610412598
    9. ' if' → logprob: -7.836861610412598
    10. '```' → logprob: -7.836861610412598

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0002446509897708893
    2. '=' → logprob: -8.375245094299316
    3. '=[]' → logprob: -11.750245094299316
    4. ' ' → logprob: -13.125245094299316
    5. '[]' → logprob: -13.625245094299316
    6. '   ' → logprob: -14.375245094299316
    7. '_' → logprob: -14.625245094299316
    8. 's' → logprob: -15.000245094299316
    9. '    ' → logprob: -15.125245094299316
    10. ' []' → logprob: -15.375245094299316

Token 61: ' [[' (ID: 9237)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.47700995206832886
    2. '[]' → logprob: -0.9770099520683289
    3. ' [(' → logprob: -6.6020097732543945
    4. '[(' → logprob: -6.8520097732543945
    5. '[' → logprob: -8.602009773254395
    6. ' [' → logprob: -8.977009773254395
    7. 'set' → logprob: -9.602009773254395
    8. ' set' → logprob: -9.852009773254395
    9. ' ' → logprob: -10.352009773254395
    10. ' []
' → logprob: -11.352009773254395

Token 62: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016970803262665868
    2. 'False' → logprob: -6.501697063446045
    3. ']' → logprob: -9.626697540283203
    4. ' ' → logprob: -10.001697540283203
    5. '1' → logprob: -10.001697540283203
    6. 'i' → logprob: -10.876697540283203
    7. 'int' → logprob: -11.876697540283203
    8. ''' → logprob: -13.126697540283203
    9. '-' → logprob: -13.751697540283203
    10. ')' → logprob: -13.876697540283203

Token 63: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33901652693748474
    2. ' +' → logprob: -1.3390165567398071
    3. ' for' → logprob: -3.8390164375305176
    4. 'for' → logprob: -5.964016437530518
    5. ',' → logprob: -7.089016437530518
    6. ']' → logprob: -8.214016914367676
    7. '   ' → logprob: -9.339016914367676
    8. ' ' → logprob: -10.589016914367676
    9. '	for' → logprob: -11.401516914367676
    10. '+j' → logprob: -11.401516914367676

Token 64: ' for' (ID: 395)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4249476194381714
    2. ' +' → logprob: -1.5499476194381714
    3. ' for' → logprob: -2.799947738647461
    4. ',' → logprob: -2.799947738647461
    5. 'for' → logprob: -4.674947738647461
    6. ']' → logprob: -6.549947738647461
    7. '   ' → logprob: -7.424947738647461
    8. '[' → logprob: -8.049947738647461
    9. '1' → logprob: -8.299947738647461
    10. ' ,' → logprob: -9.924947738647461

Token 65: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13733166456222534
    2. 'i' → logprob: -2.13733172416687
    3. ' range' → logprob: -5.012331485748291
    4. 'range' → logprob: -6.137331485748291
    5. ' ' → logprob: -6.512331485748291
    6. ' in' → logprob: -10.88733196258545
    7. '	i' → logprob: -11.76233196258545
    8. ' ' → logprob: -11.88733196258545
    9. '  ' → logprob: -12.13733196258545
    10. '_' → logprob: -12.63733196258545

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010607960633933544
    2. 'in' → logprob: -5.135608196258545
    3. ' range' → logprob: -5.635608196258545
    4. 'range' → logprob: -7.010608196258545
    5. '(range' → logprob: -9.385607719421387
    6. ' i' → logprob: -9.885607719421387
    7. ' ' → logprob: -10.135607719421387
    8. '<|end|>' → logprob: -12.010607719421387
    9. 's' → logprob: -12.510607719421387
    10. '(' → logprob: -12.760607719421387

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815076172351837
    2. ' range' → logprob: -4.018150806427002
    3. '	range' → logprob: -15.393150329589844
    4. ' ' → logprob: -15.518150329589844
    5. '(range' → logprob: -15.518150329589844
    6. '   ' → logprob: -16.143150329589844
    7. 'rang' → logprob: -17.268150329589844
    8. '  ' → logprob: -17.518150329589844
    9. 'ran' → logprob: -18.143150329589844
    10. 'r' → logprob: -18.518150329589844

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004900033236481249
    2. '(N' → logprob: -7.625490188598633
    3. '(n' → logprob: -13.500490188598633
    4. ' (' → logprob: -15.125490188598633
    5. '1' → logprob: -15.250490188598633
    6. '(
' → logprob: -15.875490188598633
    7. '(len' → logprob: -18.375490188598633
    8. '(

' → logprob: -18.500490188598633
    9. '```' → logprob: -19.000490188598633
    10. 's' → logprob: -19.250490188598633

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25332111120224
    2. 'N' → logprob: -1.5033211708068848
    3. '   ' → logprob: -7.628321170806885
    4. '2' → logprob: -7.878321170806885
    5. ' N' → logprob: -8.628320693969727
    6. ' ' → logprob: -9.128320693969727
    7. '(N' → logprob: -9.253320693969727
    8. '(' → logprob: -9.378320693969727
    9. '0' → logprob: -10.378320693969727
    10. 'n' → logprob: -12.253320693969727

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008377221412956715
    2. '+' → logprob: -5.3833770751953125
    3. ' ,' → logprob: -5.7583770751953125
    4. ' +' → logprob: -8.008377075195312
    5. '1' → logprob: -9.133377075195312
    6. '   ' → logprob: -9.758377075195312
    7. ',n' → logprob: -10.008377075195312
    8. ',N' → logprob: -10.508377075195312
    9. ' ' → logprob: -11.633377075195312
    10. '2' → logprob: -12.258377075195312

Token 71: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00979103334248066
    2. ' N' → logprob: -4.634790897369385
    3. 'n' → logprob: -10.634791374206543
    4. '   ' → logprob: -12.509791374206543
    5. ' ' → logprob: -13.259791374206543
    6. '2' → logprob: -13.384791374206543
    7. '	N' → logprob: -13.634791374206543
    8. '1' → logprob: -13.884791374206543
    9. '>N' → logprob: -14.634791374206543
    10. '<N' → logprob: -14.884791374206543

Token 72: ')]

' (ID: 56882)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06994377076625824
    2. ' +' → logprob: -2.69494366645813
    3. ')]' → logprob: -12.94494342803955
    4. ')' → logprob: -13.06994342803955
    5. '+
' → logprob: -13.69494342803955
    6. ' ' → logprob: -14.94494342803955
    7. ' +
' → logprob: -15.06994342803955
    8. '1' → logprob: -15.44494342803955
    9. '＋' → logprob: -15.44494342803955
    10. '```' → logprob: -15.56994342803955

Token 73: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37119928002357483
    2. ']' → logprob: -1.6211992502212524
    3. ' +' → logprob: -2.871199369430542
    4. '[' → logprob: -4.121199131011963
    5. ')' → logprob: -4.121199131011963
    6. '0' → logprob: -5.496199131011963
    7. '1' → logprob: -5.746199131011963
    8. '[]' → logprob: -6.121199131011963
    9. ')]' → logprob: -6.246199131011963
    10. ' ]' → logprob: -6.371199131011963

Token 74: ' ef' (ID: 14743)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0786080360412598
    2. '1' → logprob: -1.7036080360412598
    3. 'N' → logprob: -2.3286080360412598
    4. ')' → logprob: -2.4536080360412598
    5. '0' → logprob: -2.5786080360412598
    6. ',' → logprob: -2.8286080360412598
    7. ' )' → logprob: -3.3286080360412598
    8. ']' → logprob: -3.9536080360412598
    9. ' ,' → logprob: -4.07860803604126
    10. ' ' → logprob: -4.07860803604126

Token 75: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6690419316291809
    2. 'ges' → logprob: -1.5440418720245361
    3. 'ds' → logprob: -2.669041872024536
    4. ' =' → logprob: -2.669041872024536
    5. '=' → logprob: -3.044041872024536
    6. 'g' → logprob: -3.419041872024536
    7. 'f' → logprob: -4.044042110443115
    8. 'ge' → logprob: -5.044042110443115
    9. '=[]' → logprob: -5.544042110443115
    10. '_edges' → logprob: -5.669042110443115

Token 76: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.17592453956604
    2. ' edges' → logprob: -1.67592453956604
    3. '1' → logprob: -2.30092453956604
    4. ' N' → logprob: -2.55092453956604
    5. 'edges' → logprob: -3.30092453956604
    6. ' e' → logprob: -3.30092453956604
    7. 'e' → logprob: -3.80092453956604
    8. '0' → logprob: -3.80092453956604
    9. ' =' → logprob: -3.92592453956604
    10. 'N' → logprob: -4.175924301147461

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160366490483284
    2. '=' → logprob: -1.9103665351867676
    3. ' ' → logprob: -9.28536605834961
    4. '=[]' → logprob: -11.16036605834961
    5. ',' → logprob: -11.66036605834961
    6. ' =[' → logprob: -12.16036605834961
    7. '[' → logprob: -12.41036605834961
    8. '  ' → logprob: -12.53536605834961
    9. 'or' → logprob: -12.53536605834961
    10. ']' → logprob: -13.28536605834961

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4172098934650421
    2. 'N' → logprob: -1.5422098636627197
    3. ' ' → logprob: -3.1672098636627197
    4. '0' → logprob: -3.1672098636627197
    5. ' N' → logprob: -4.292210102081299
    6. '[N' → logprob: -4.292210102081299
    7. '[]' → logprob: -5.167210102081299
    8. '[' → logprob: -5.542210102081299
    9. '[],' → logprob: -6.667210102081299
    10. '2' → logprob: -7.042210102081299

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2124975025653839
    2. '2' → logprob: -2.2124974727630615
    3. '0' → logprob: -2.9624974727630615
    4. '[' → logprob: -4.837497711181641
    5. 'N' → logprob: -4.837497711181641
    6. ' ' → logprob: -5.337497711181641
    7. '[N' → logprob: -5.587497711181641
    8. '(' → logprob: -5.712497711181641
    9. '(N' → logprob: -6.837497711181641
    10. '[]' → logprob: -7.337497711181641

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039965663105249405
    2. '+' → logprob: -3.4149656295776367
    3. ' ,' → logprob: -5.789965629577637
    4. ' +' → logprob: -6.289965629577637
    5. ' ' → logprob: -7.789965629577637
    6. '<|end|>' → logprob: -8.039965629577637
    7. '0' → logprob: -9.039965629577637
    8. ',
' → logprob: -9.039965629577637
    9. '1' → logprob: -9.789965629577637
    10. ',N' → logprob: -9.914965629577637

Token 81: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0837976932525635
    2. 'N' → logprob: -1.0837976932525635
    3. '1' → logprob: -1.9587976932525635
    4. ' ' → logprob: -2.3337976932525635
    5. ' N' → logprob: -2.9587976932525635
    6. '0' → logprob: -3.4587976932525635
    7. ' range' → logprob: -7.708797454833984
    8. 'range' → logprob: -7.958797454833984
    9. '  ' → logprob: -8.333797454833984
    10. '<|end|>' → logprob: -8.583797454833984

Token 82: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38250458240509033
    2. 'N' → logprob: -1.3825045824050903
    3. '0' → logprob: -3.257504463195801
    4. ' ' → logprob: -4.132504463195801
    5. '1' → logprob: -4.757504463195801
    6. ' N' → logprob: -5.882504463195801
    7. 'range' → logprob: -8.3825044631958
    8. '  ' → logprob: -8.8825044631958
    9. 'n' → logprob: -9.1325044631958
    10. '    ' → logprob: -9.4450044631958

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18589605391025543
    2. '<|end|>' → logprob: -1.8108960390090942
    3. '<|end|>' → logprob: -5.560895919799805
    4. '    
' → logprob: -7.560895919799805
    5. '

' → logprob: -8.060895919799805
    6. '   ' → logprob: -8.060895919799805
    7. '\n' → logprob: -8.185895919799805
    8. '  
' → logprob: -8.310895919799805
    9. ' 
' → logprob: -8.810895919799805
    10. '
' → logprob: -9.435895919799805

Token 84: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' added' (ID: 5768)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.575819730758667
    2. '<|end|>' → logprob: -2.200819730758667
    3. '
' → logprob: -2.450819730758667
    4. '    
' → logprob: -3.075819730758667
    5. 'while' → logprob: -3.200819730758667
    6. ' ' → logprob: -3.575819730758667
    7. '    ' → logprob: -3.700819730758667
    8. ' while' → logprob: -3.825819730758667
    9. '  
' → logprob: -4.075819969177246
    10. ' 
' → logprob: -4.450819969177246

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7735843658447266
    2. '_' → logprob: -0.8985843658447266
    3. '_edges' → logprob: -2.1485843658447266
    4. '=' → logprob: -4.898584365844727
    5. ' ' → logprob: -6.023584365844727
    6. ' _' → logprob: -6.648584365844727
    7. '_tokens' → logprob: -6.898584365844727
    8. '_count' → logprob: -7.523584365844727
    9. '_spaces' → logprob: -7.898584365844727
    10. '_space' → logprob: -8.023584365844727

Token 87: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10247649997472763
    2. '0' → logprob: -2.3524765968322754
    3. '1' → logprob: -6.227476596832275
    4. '<|end|>' → logprob: -8.352476119995117
    5. ' K' → logprob: -10.727476119995117
    6. '<|end|>' → logprob: -11.977476119995117
    7. ' N' → logprob: -12.102476119995117
    8. '  ' → logprob: -12.102476119995117
    9. ' ' → logprob: -12.914976119995117
    10. ' space' → logprob: -13.602476119995117

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022070633247494698
    2. ' ' → logprob: -4.147070407867432
    3. '1' → logprob: -5.147070407867432
    4. 'N' → logprob: -9.39707088470459
    5. 'edges' → logprob: -10.52207088470459
    6. 'K' → logprob: -10.77207088470459
    7. ' N' → logprob: -10.89707088470459
    8. ' K' → logprob: -11.77207088470459
    9. ' edges' → logprob: -11.77207088470459
    10. '2' → logprob: -11.95957088470459

Token 89: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1560431718826294
    2. ' 
' → logprob: -1.5310431718826294
    3. '   ' → logprob: -1.6560431718826294
    4. '<|end|>' → logprob: -2.03104305267334
    5. ' while' → logprob: -2.65604305267334
    6. '    
' → logprob: -3.78104305267334
    7. 'while' (adapté à ' while') → logprob: -4.40604305267334
    8. '  
' → logprob: -4.78104305267334
    9. ' ' → logprob: -4.78104305267334
    10. '    ' → logprob: -5.15604305267334

Token 92: ' added' (ID: 5768)
  Prédit: ' added'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' added' → logprob: -0.006871660239994526
    2. 'added' → logprob: -5.006871700286865
    3. ' K' → logprob: -9.506871223449707
    4. ' not' → logprob: -10.881871223449707
    5. '_added' → logprob: -11.256871223449707
    6. ' True' → logprob: -11.381871223449707
    7. 'Added' → logprob: -11.631871223449707
    8. 'K' → logprob: -11.881871223449707
    9. ' ' → logprob: -12.006871223449707
    10. '    ' → logprob: -12.881871223449707

Token 93: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.001562000485137105
    2. '<' → logprob: -6.626562118530273
    3. ' ' → logprob: -9.001562118530273
    4. ' <=' → logprob: -9.126562118530273
    5. '<|end|>' → logprob: -13.251562118530273
    6. '  ' → logprob: -14.876562118530273
    7. '<=' → logprob: -15.001562118530273
    8. ' <",' → logprob: -15.126562118530273
    9. '[' → logprob: -15.626562118530273
    10. '   ' → logprob: -15.626562118530273

Token 94: ' max' (ID: 2999)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.201422318816185
    2. 'K' → logprob: -1.7014223337173462
    3. 'max' → logprob: -12.576422691345215
    4. ' ' → logprob: -13.701422691345215
    5. '>K' → logprob: -13.826422691345215
    6. ' max' → logprob: -13.951422691345215
    7. '<|end|>' → logprob: -14.076422691345215
    8. '	K' → logprob: -14.201422691345215
    9. 'k' → logprob: -14.951422691345215
    10. ')' → logprob: -16.7014217376709

Token 95: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -7.20734242349863e-05
    2. '_' → logprob: -10.000072479248047
    3. '_n' → logprob: -11.500072479248047
    4. 'non' → logprob: -12.000072479248047
    5. 'Non' → logprob: -12.875072479248047
    6. ' _' → logprob: -13.250072479248047
    7. '_edges' → logprob: -13.625072479248047
    8. '_NON' → logprob: -14.250072479248047
    9. '_not' → logprob: -14.625072479248047
    10. ' non' → logprob: -14.875072479248047

Token 96: '_bridge' (ID: 138885)
  Prédit: '_bridge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bridge' → logprob: -0.013094235211610794
    2. '_' → logprob: -4.513094425201416
    3. ' _' → logprob: -6.263094425201416
    4. '_br' → logprob: -9.138093948364258
    5. '<|end|>' → logprob: -11.763093948364258
    6. '_edge' → logprob: -12.888093948364258
    7. '_b' → logprob: -13.138093948364258
    8. '_edges' → logprob: -13.138093948364258
    9. ')_' → logprob: -13.263093948364258
    10. '_break' → logprob: -13.763093948364258

Token 97: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4869183599948883
    2. ' and' → logprob: -0.9869183301925659
    3. ':
' → logprob: -4.7369184494018555
    4. 'and' → logprob: -5.7369184494018555
    5. '   ' → logprob: -7.9869184494018555
    6. ' :' → logprob: -8.111918449401855
    7. ' :
' → logprob: -10.486918449401855
    8. '<|end|>' → logprob: -10.611918449401855
    9. '<|end|>' → logprob: -11.111918449401855
    10. '    ' → logprob: -11.736918449401855

Token 98: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.22550928592681885
    2. ' K' → logprob: -1.6005092859268188
    3. '<|end|>' → logprob: -9.350509643554688
    4. '	K' → logprob: -12.850509643554688
    5. '<|end|>' → logprob: -13.100509643554688
    6. '>K' → logprob: -13.225509643554688
    7. ' ' → logprob: -13.350509643554688
    8. '  ' → logprob: -14.975509643554688
    9. 'k' → logprob: -15.225509643554688
    10. '   ' → logprob: -15.475509643554688

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011266500689089298
    2. ':
' → logprob: -4.511266708374023
    3. ' :' → logprob: -9.261266708374023
    4. ' and' → logprob: -9.386266708374023
    5. ' :
' → logprob: -11.261266708374023
    6. '   ' → logprob: -11.511266708374023
    7. ',' → logprob: -12.261266708374023
    8. '):' → logprob: -12.386266708374023
    9. '):
' → logprob: -13.011266708374023
    10. ':

' → logprob: -13.511266708374023

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10857362300157547
    2. '   ' → logprob: -2.6085736751556396
    3. ' edges' → logprob: -3.7335736751556396
    4. 'edges' → logprob: -6.4835734367370605
    5. '<|end|>' → logprob: -6.6085734367370605
    6. '    ' → logprob: -7.6085734367370605
    7. '
' → logprob: -8.483573913574219
    8. '    
' → logprob: -8.608573913574219
    9. '        
' → logprob: -8.608573913574219
    10. ',' → logprob: -8.858573913574219

Token 101: ' if' (ID: 538)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4281483590602875
    2. '       ' → logprob: -1.6781483888626099
    3. 'edges' → logprob: -2.4281482696533203
    4. ' if' → logprob: -3.0531482696533203
    5. '   ' → logprob: -3.9281482696533203
    6. 'if' (adapté à ' if') → logprob: -5.42814826965332
    7. '        
' → logprob: -7.67814826965332
    8. '    ' → logprob: -8.67814826965332
    9. '           ' → logprob: -8.67814826965332
    10. '(edges' → logprob: -8.92814826965332

Token 102: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.08794258534908295
    2. 'et' → logprob: -3.087942600250244
    3. ' ef' → logprob: -3.337942600250244
    4. 'ef' → logprob: -5.837942600250244
    5. 'len' → logprob: -10.712942123413086
    6. '(et' → logprob: -10.712942123413086
    7. ' edges' → logprob: -11.150442123413086
    8. ' len' → logprob: -11.462942123413086
    9. '_et' → logprob: -11.712942123413086
    10. ' ' → logprob: -11.900442123413086

Token 103: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20156683027744293
    2. '<=' → logprob: -2.0765669345855713
    3. ' >' → logprob: -3.2015669345855713
    4. '>' → logprob: -4.576566696166992
    5. ' <' → logprob: -5.576566696166992
    6. '<' → logprob: -6.451566696166992
    7. '==' → logprob: -8.201566696166992
    8. ' ==' → logprob: -8.701566696166992
    9. ' ' → logprob: -8.826566696166992
    10. '<|end|>' → logprob: -8.951566696166992

Token 104: ' ef' (ID: 14743)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019666971638798714
    2. ' N' → logprob: -6.25196647644043
    3. '   ' → logprob: -11.00196647644043
    4. 'n' → logprob: -12.12696647644043
    5. ' ' → logprob: -12.50196647644043
    6. 'ef' → logprob: -12.62696647644043
    7. '	N' → logprob: -13.37696647644043
    8. '  ' → logprob: -13.62696647644043
    9. 'i' → logprob: -13.75196647644043
    10. '>N' → logprob: -14.12696647644043

Token 105: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.56214439868927
    2. '+' → logprob: -1.43714439868927
    3. '<|end|>' → logprob: -2.4371442794799805
    4. ':' → logprob: -2.8121442794799805
    5. 'N' → logprob: -4.1871442794799805
    6. 'or' → logprob: -4.5621442794799805
    7. ':
' → logprob: -4.9371442794799805
    8. ' +' → logprob: -5.0621442794799805
    9. '<|end|>' → logprob: -6.6871442794799805
    10. '   ' → logprob: -7.0621442794799805

Token 106: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24063317477703094
    2. '<|end|>' → logprob: -1.7406331300735474
    3. '       ' → logprob: -4.240633010864258
    4. ' +' → logprob: -4.490633010864258
    5. '<|end|>' → logprob: -5.365633010864258
    6. '+=' → logprob: -5.740633010864258
    7. ' +=' → logprob: -6.615633010864258
    8. '           ' → logprob: -7.365633010864258
    9. '++' → logprob: -7.740633010864258
    10. ',' → logprob: -7.740633010864258

Token 107: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' (adapté à ' et') → logprob: -0.4449240267276764
    2. ' et' → logprob: -1.069923996925354
    3. '           ' → logprob: -4.3199238777160645
    4. '+' → logprob: -6.1949238777160645
    5. ' +' → logprob: -8.319924354553223
    6. ' +=' → logprob: -8.444924354553223
    7. '+=' → logprob: -9.319924354553223
    8. '               ' → logprob: -10.444924354553223
    9. '++' → logprob: -10.819924354553223
    10. '       ' → logprob: -10.819924354553223

Token 108: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.39097559452056885
    2. '+=' → logprob: -1.1409755945205688
    3. '=' → logprob: -5.765975475311279
    4. '+' → logprob: -7.515975475311279
    5. ' =' → logprob: -7.890975475311279
    6. ' +' → logprob: -10.265975952148438
    7. ' ' → logprob: -12.640975952148438
    8. '   ' → logprob: -13.265975952148438
    9. ',' → logprob: -13.265975952148438
    10. '<|end|>' → logprob: -13.640975952148438

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019306590547785163
    2. ' ' → logprob: -6.2519307136535645
    3. '   ' → logprob: -13.501930236816406
    4. '<|end|>' → logprob: -15.439430236816406
    5. '  ' → logprob: -15.876930236816406
    6. '```' → logprob: -16.939430236816406
    7. '    ' → logprob: -17.126930236816406
    8. ' ' → logprob: -17.189430236816406
    9. '2' → logprob: -17.376930236816406
    10. 'to' → logprob: -17.564430236816406

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '```' → logprob: -16.000036239624023
    4. '<|end|>' → logprob: -16.187536239624023
    5. '  ' → logprob: -17.125036239624023
    6. '   ' → logprob: -17.125036239624023
    7. '2' → logprob: -17.250036239624023
    8. '<|end|>' → logprob: -17.375036239624023
    9. ' ' → logprob: -17.562536239624023
    10. 'to' → logprob: -18.125036239624023

Token 111: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1413401961326599
    2. '<|end|>' → logprob: -2.2663402557373047
    3. '           ' → logprob: -4.016340255737305
    4. '
' → logprob: -5.266340255737305
    5. '   ' → logprob: -6.516340255737305
    6. '<|end|>' → logprob: -7.266340255737305
    7. ' else' → logprob: -7.516340255737305
    8. ' ' → logprob: -8.016340255737305
    9. '               ' → logprob: -8.016340255737305
    10. '        ' → logprob: -8.391340255737305

Token 112: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10522463172674179
    2. '<|end|>' → logprob: -2.855224609375
    3. ' else' → logprob: -3.605224609375
    4. ' elif' → logprob: -5.605224609375
    5. '
' → logprob: -5.605224609375
    6. ' edges' → logprob: -6.105224609375
    7. 'else' → logprob: -6.855224609375
    8. ' if' → logprob: -6.855224609375
    9. '   ' → logprob: -7.105224609375
    10. '<|end|>' → logprob: -7.355224609375

Token 114: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.07440231740474701
    2. 'et' → logprob: -2.699402332305908
    3. ' ef' → logprob: -5.574402332305908
    4. 'ef' → logprob: -7.449402332305908
    5. ' ' → logprob: -10.82440185546875
    6. 'N' → logprob: -10.82440185546875
    7. '(et' → logprob: -11.07440185546875
    8. ' N' → logprob: -11.82440185546875
    9. '   ' → logprob: -13.13690185546875
    10. ''et' → logprob: -13.63690185546875

Token 115: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.030082758516073227
    2. '>' → logprob: -3.5300827026367188
    3. ' <=' → logprob: -8.405082702636719
    4. ' >=' → logprob: -9.655082702636719
    5. '<=' → logprob: -11.030082702636719
    6. '>=' → logprob: -11.155082702636719
    7. '>N' → logprob: -12.280082702636719
    8. ' ' → logprob: -13.030082702636719
    9. ' ==' → logprob: -13.030082702636719
    10. '==' → logprob: -13.405082702636719

Token 116: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0160619355738163
    2. ' N' → logprob: -4.141061782836914
    3. 'len' → logprob: -11.266061782836914
    4. ' ' → logprob: -12.141061782836914
    5. ' len' → logprob: -12.391061782836914
    6. '   ' → logprob: -13.016061782836914
    7. 'n' → logprob: -13.391061782836914
    8. '  ' → logprob: -14.641061782836914
    9. '	N' → logprob: -14.891061782836914
    10. '>N' → logprob: -15.391061782836914

Token 117: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3886053264141083
    2. ':' → logprob: -1.1386053562164307
    3. '       ' → logprob: -7.138605117797852
    4. '   ' → logprob: -8.138605117797852
    5. '):
' → logprob: -8.763605117797852
    6. ' or' → logprob: -8.888605117797852
    7. '+' → logprob: -9.013605117797852
    8. ' and' → logprob: -10.013605117797852
    9. '<|end|>' → logprob: -10.263605117797852
    10. ':

' → logprob: -10.638605117797852

Token 118: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00116236531175673
    2. '           ' → logprob: -7.251162528991699
    3. '   ' → logprob: -8.5011625289917
    4. '<|end|>' → logprob: -9.2511625289917
    5. '        
' → logprob: -10.2511625289917
    6. 'ef' → logprob: -10.7511625289917
    7. '<|end|>' → logprob: -10.7511625289917
    8. '
' → logprob: -11.0011625289917
    9. '```' → logprob: -11.5011625289917
    10. ',' → logprob: -11.7511625289917

Token 119: ' ef' (ID: 14743)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' (adapté à ' ef') → logprob: -0.14876869320869446
    2. '       ' → logprob: -2.148768663406372
    3. '   ' → logprob: -4.023768901824951
    4. ' ef' → logprob: -5.773768901824951
    5. 'e' → logprob: -9.023768424987793
    6. '           ' → logprob: -9.273768424987793
    7. ' ' → logprob: -9.898768424987793
    8. '```' → logprob: -9.898768424987793
    9. 'efd' → logprob: -10.023768424987793
    10. '  ' → logprob: -10.273768424987793

Token 120: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014246598817408085
    2. ' +=' → logprob: -4.264246463775635
    3. '   ' → logprob: -9.514246940612793
    4. '=' → logprob: -12.639246940612793
    5. ',' → logprob: -13.014246940612793
    6. '+' → logprob: -13.639246940612793
    7. '    ' → logprob: -13.639246940612793
    8. ']+=' → logprob: -14.014246940612793
    9. '  ' → logprob: -15.139246940612793
    10. '```' → logprob: -15.889246940612793

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010962257510982454
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.000109672546387
    4. '<|end|>' → logprob: -15.375109672546387
    5. '0' → logprob: -16.87510871887207
    6. '<|end|>' → logprob: -17.12510871887207
    7. '  ' → logprob: -17.25010871887207
    8. '2' → logprob: -17.93760871887207
    9. 'from' → logprob: -19.00010871887207
    10. '```' → logprob: -19.06260871887207

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.37501335144043
    3. '<|end|>' → logprob: -14.00001335144043
    4. '0' → logprob: -15.37501335144043
    5. '   ' → logprob: -15.62501335144043
    6. '<|end|>' → logprob: -15.75001335144043
    7. '  ' → logprob: -16.87501335144043
    8. '```' → logprob: -17.12501335144043
    9. 'from' → logprob: -17.37501335144043
    10. '۱' → logprob: -17.62501335144043

Token 123: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044599756598472595
    2. '       ' → logprob: -3.419599771499634
    3. 'et' → logprob: -5.044599533081055
    4. '   ' → logprob: -5.669599533081055
    5. '<|end|>' → logprob: -7.669599533081055
    6. '<|end|>' → logprob: -8.294599533081055
    7. ',' → logprob: -9.044599533081055
    8. ' et' → logprob: -9.919599533081055
    9. '[' → logprob: -11.544599533081055
    10. '	       ' → logprob: -11.669599533081055

Token 124: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6435085535049438
    2. '           ' → logprob: -0.7685085535049438
    3. '   ' → logprob: -4.768508434295654
    4. 'et' → logprob: -6.143508434295654
    5. '<|end|>' → logprob: -9.268508911132812
    6. '<|end|>' → logprob: -10.268508911132812
    7. '        
' → logprob: -11.518508911132812
    8. ' et' → logprob: -11.518508911132812
    9. '               ' → logprob: -11.768508911132812
    10. 'e' → logprob: -11.768508911132812

Token 125: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' (adapté à ' et') → logprob: -0.0005701907211914659
    2. ' et' → logprob: -7.750570297241211
    3. '   ' → logprob: -9.125570297241211
    4. 'ef' → logprob: -10.625570297241211
    5. '           ' → logprob: -12.625570297241211
    6. '       ' → logprob: -14.625570297241211
    7. 'ett' → logprob: -14.750570297241211
    8. 'etl' → logprob: -14.750570297241211
    9. 'eti' → logprob: -15.125570297241211
    10. '  ' → logprob: -15.500570297241211

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150877207517624
    2. ' =' → logprob: -4.018150806427002
    3. '=f' → logprob: -15.26815128326416
    4. '＝' → logprob: -15.26815128326416
    5. '=int' → logprob: -15.39315128326416
    6. '=

' → logprob: -16.768150329589844
    7. '=
' → logprob: -16.893150329589844
    8. '<|end|>' → logprob: -17.393150329589844
    9. '=max' → logprob: -17.893150329589844
    10. '=e' → logprob: -17.893150329589844

Token 127: ' ef' (ID: 14743)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.0019479141337797046
    2. ' ef' → logprob: -6.25194787979126
    3. '0' → logprob: -11.876948356628418
    4. 'eff' → logprob: -12.126948356628418
    5. 'efa' → logprob: -12.626948356628418
    6. 'efd' → logprob: -13.876948356628418
    7. 'efe' → logprob: -14.626948356628418
    8. 'eft' → logprob: -15.001948356628418
    9. 'efs' → logprob: -15.001948356628418
    10. '2' → logprob: -15.126948356628418

Token 128: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001929228543303907
    2. ' +' → logprob: -6.25192928314209
    3. '+
' → logprob: -14.75192928314209
    4. ' plus' → logprob: -16.376928329467773
    5. 'plus' → logprob: -17.376928329467773
    6. '＋' → logprob: -17.751928329467773
    7. '```' → logprob: -17.876928329467773
    8. '1' → logprob: -18.376928329467773
    9. '()+' → logprob: -19.251928329467773
    10. '+=' → logprob: -19.251928329467773

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.03521392197581e-05
    2. ' ' → logprob: -10.500030517578125
    3. '<|end|>' → logprob: -13.375030517578125
    4. '2' → logprob: -14.125030517578125
    5. '   ' → logprob: -15.500030517578125
    6. '```' → logprob: -17.062530517578125
    7. '<|end|>' → logprob: -17.125030517578125
    8. '+' → logprob: -17.500030517578125
    9. '  ' → logprob: -17.562530517578125
    10. '0' → logprob: -17.937530517578125

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -14.500012397766113
    4. '<|end|>' → logprob: -16.750011444091797
    5. '   ' → logprob: -17.875011444091797
    6. '0' → logprob: -17.937511444091797
    7. '  ' → logprob: -18.125011444091797
    8. '```' → logprob: -18.937511444091797
    9. '１' → logprob: -19.562511444091797
    10. '<|end|>' → logprob: -19.687511444091797

Token 131: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07343880087137222
    2. '           ' → logprob: -2.698438882827759
    3. '   ' → logprob: -5.94843864440918
    4. 'continue' → logprob: -7.69843864440918
    5. ' continue' → logprob: -9.07343864440918
    6. '	' → logprob: -9.82343864440918
    7. '	       ' → logprob: -9.94843864440918
    8. '	continue' → logprob: -9.94843864440918
    9. '<|end|>' → logprob: -10.07343864440918
    10. '
' → logprob: -10.07343864440918

Token 132: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06439902633428574
    2. '           ' → logprob: -2.814399003982544
    3. '   ' → logprob: -6.939399242401123
    4. 'continue' → logprob: -7.064399242401123
    5. ' continue' → logprob: -8.064398765563965
    6. '<|end|>' → logprob: -9.189398765563965
    7. '	       ' → logprob: -10.689398765563965
    8. '	continue' → logprob: -10.814398765563965
    9. '        
' → logprob: -10.939398765563965
    10. '
' → logprob: -11.564398765563965

Token 133: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27119025588035583
    2. 'continue' (adapté à ' continue') → logprob: -1.6461902856826782
    3. '           ' → logprob: -3.7711901664733887
    4. '   ' → logprob: -4.021190166473389
    5. ' continue' → logprob: -5.771190166473389
    6. '	continue' → logprob: -7.396190166473389
    7. 'if' → logprob: -11.146190643310547
    8. 'contin' → logprob: -11.521190643310547
    9. '_continue' → logprob: -11.646190643310547
    10. ' ' → logprob: -12.896190643310547

Token 134: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027362818364053965
    2. '        
' → logprob: -6.5027360916137695
    3. '   ' → logprob: -7.6277360916137695
    4. 'edges' → logprob: -8.50273609161377
    5. '<|end|>' → logprob: -8.62773609161377
    6. ' edges' → logprob: -9.37773609161377
    7. ')' → logprob: -10.00273609161377
    8. '    
' → logprob: -10.00273609161377
    9. '
' → logprob: -10.37773609161377
    10. '#' → logprob: -10.75273609161377

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025731047615408897
    2. 'edges' → logprob: -4.400731086730957
    3. '   ' → logprob: -4.650731086730957
    4. ' edges' → logprob: -5.775731086730957
    5. '        
' → logprob: -8.275731086730957
    6. '    
' → logprob: -9.900731086730957
    7. '           ' → logprob: -10.400731086730957
    8. ')' → logprob: -10.775731086730957
    9. '      ' → logprob: -10.775731086730957
    10. '(edges' → logprob: -11.025731086730957

Token 136: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.44399523735046387
    2. '       ' → logprob: -1.3189952373504639
    3. ' edges' → logprob: -2.443995237350464
    4. '   ' → logprob: -5.568995475769043
    5. '(edges' → logprob: -8.943995475769043
    6. '        
' → logprob: -9.443995475769043
    7. '
' → logprob: -9.693995475769043
    8. '.edges' → logprob: -9.818995475769043
    9. '    
' → logprob: -10.443995475769043
    10. '[' → logprob: -10.568995475769043

Token 137: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038288687937892973
    2. '[-' → logprob: -7.875382900238037
    3. '.append' → logprob: -13.250382423400879
    4. '[df' → logprob: -15.000382423400879
    5. '.' → logprob: -15.875382423400879
    6. ' [' → logprob: -16.000383377075195
    7. '```' → logprob: -16.750383377075195
    8. '[][' → logprob: -16.875383377075195
    9. '[len' → logprob: -17.000383377075195
    10. '   ' → logprob: -17.250383377075195

Token 138: 'ef' (ID: 1079)
  Prédit: 'ef'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.0001564586127642542
    2. '-' → logprob: -9.00015640258789
    3. ' ef' → logprob: -11.25015640258789
    4. 'et' → logprob: -12.00015640258789
    5. '[' → logprob: -12.50015640258789
    6. '0' → logprob: -13.00015640258789
    7. 'f' → logprob: -13.75015640258789
    8. 'eft' → logprob: -14.00015640258789
    9. 'efd' → logprob: -14.50015640258789
    10. 'eff' → logprob: -14.75015640258789

Token 139: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00692589208483696
    2. '-' → logprob: -5.3819260597229
    3. ']' → logprob: -6.2569260597229
    4. '][-' → logprob: -8.631925582885742
    5. ' -' → logprob: -9.006925582885742
    6. ' ].' → logprob: -10.006925582885742
    7. '][' → logprob: -10.506925582885742
    8. '[-' → logprob: -12.381925582885742
    9. ']-' → logprob: -12.631925582885742
    10. '[' → logprob: -13.381925582885742

Token 140: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.3458322731312364e-06
    2. ' append' → logprob: -11.875007629394531
    3. '.append' → logprob: -15.125007629394531
    4. 'appen' → logprob: -16.50000762939453
    5. '	append' → logprob: -17.87500762939453
    6. 'app' → logprob: -18.00000762939453
    7. 'add' → logprob: -18.50000762939453
    8. 'extend' → logprob: -18.50000762939453
    9. 'Append' → logprob: -19.50000762939453
    10. 'appe' → logprob: -19.62500762939453

Token 141: '(et' (ID: 127675)
  Prédit: '(et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(et' → logprob: -0.0002631238894537091
    2. 'et' → logprob: -8.250263214111328
    3. '(' → logprob: -13.250263214111328
    4. '(
' → logprob: -17.875263214111328
    5. ' et' → logprob: -18.125263214111328
    6. ''et' → logprob: -18.625263214111328
    7. '(t' → logprob: -19.125263214111328
    8. 'ET' → logprob: -19.625263214111328
    9. '(it' → logprob: -19.625263214111328
    10. ' (' → logprob: -19.750263214111328

Token 142: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14508667588233948
    2. ')' → logprob: -2.1450867652893066
    3. '       ' → logprob: -4.020086765289307
    4. ' )
' → logprob: -11.020086288452148
    5. ')
' → logprob: -11.020086288452148
    6. '   ' → logprob: -11.895086288452148
    7. ' )' → logprob: -13.395086288452148
    8. ')

' → logprob: -14.395086288452148
    9. ')`
' → logprob: -14.770086288452148
    10. '
' → logprob: -15.020086288452148

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000433291686931625
    2. 'added' → logprob: -8.375432968139648
    3. '   ' → logprob: -9.250432968139648
    4. '        
' → logprob: -9.500432968139648
    5. '
' → logprob: -11.375432968139648
    6. '    
' → logprob: -12.625432968139648
    7. ' added' → logprob: -12.750432968139648
    8. '           ' → logprob: -13.125432968139648
    9. '```' → logprob: -13.375432968139648
    10. '[' → logprob: -13.625432968139648

Token 144: ' added' (ID: 5768)
  Prédit: 'added'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'added' (adapté à ' added') → logprob: -0.00081796565791592
    2. '       ' → logprob: -7.750817775726318
    3. ' added' → logprob: -7.875817775726318
    4. 'edges' → logprob: -12.250818252563477
    5. '           ' → logprob: -13.750818252563477
    6. 'add' → logprob: -14.875818252563477
    7. '        
' → logprob: -15.125818252563477
    8. '
' → logprob: -15.250818252563477
    9. '   ' → logprob: -15.750818252563477
    10. '```' → logprob: -15.875818252563477

Token 145: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.000634639582131058
    2. '+=' → logprob: -7.375634670257568
    3. '+' → logprob: -12.62563419342041
    4. ' +' → logprob: -12.62563419342041
    5. ' ' → logprob: -14.12563419342041
    6. '<|end|>' → logprob: -14.50063419342041
    7. ' =' → logprob: -15.87563419342041
    8. ']+=' → logprob: -18.500635147094727
    9. '1' → logprob: -18.500635147094727
    10. '    ' → logprob: -18.625635147094727

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.75007438659668
    4. '<|end|>' → logprob: -18.75007438659668
    5. '```' → logprob: -20.25007438659668
    6. '+' → logprob: -20.62507438659668
    7. '１' → logprob: -20.62507438659668
    8. '       ' → logprob: -20.87507438659668
    9. '۱' → logprob: -21.12507438659668
    10. '0' → logprob: -21.37507438659668

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '<|end|>' → logprob: -20.375001907348633
    5. '```' → logprob: -20.625001907348633
    6. '0' → logprob: -20.875001907348633
    7. '１' → logprob: -21.250001907348633
    8. '۱' → logprob: -21.625001907348633
    9. '+' → logprob: -22.125001907348633
    10. '       ' → logprob: -22.250001907348633

Token 148: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04836466163396835
    2. '<|end|>' → logprob: -3.2983646392822266
    3. '
' → logprob: -5.048364639282227
    4. '        
' → logprob: -6.673364639282227
    5. ' 
' → logprob: -7.548364639282227
    6. 'et' → logprob: -7.673364639282227
    7. '<|end|>' → logprob: -7.673364639282227
    8. '   ' → logprob: -7.673364639282227
    9. '    
' → logprob: -8.798364639282227
    10. '+' → logprob: -9.923364639282227

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026287874206900597
    2. '<|end|>' → logprob: -4.026288032531738
    3. '        
' → logprob: -5.651288032531738
    4. '   ' → logprob: -6.401288032531738
    5. 'et' → logprob: -7.276288032531738
    6. '
' → logprob: -7.401288032531738
    7. ' 
' → logprob: -7.776288032531738
    8. '    
' → logprob: -7.901288032531738
    9. '<|end|>' → logprob: -8.526288032531738
    10. ')' → logprob: -9.401288032531738

Token 150: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' (adapté à ' et') → logprob: -0.18007822334766388
    2. ' et' → logprob: -1.8050782680511475
    3. '       ' → logprob: -8.305078506469727
    4. '(et' → logprob: -10.680078506469727
    5. 'etch' → logprob: -11.055078506469727
    6. '   ' → logprob: -11.930078506469727
    7. 'te' → logprob: -11.930078506469727
    8. '.et' → logprob: -12.055078506469727
    9. '_et' → logprob: -12.180078506469727
    10. 'ot' → logprob: -12.680078506469727

Token 151: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03627295419573784
    2. '+' → logprob: -3.5362730026245117
    3. ' +=' → logprob: -5.036273002624512
    4. '=' → logprob: -13.036273002624512
    5. '+="' → logprob: -15.036273002624512
    6. '++' → logprob: -15.161273002624512
    7. ' +' → logprob: -15.536273002624512
    8. '+='' → logprob: -15.536273002624512
    9. ']+=' → logprob: -16.036272048950195
    10. '+++' → logprob: -16.786272048950195

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -16.250059127807617
    4. '<|end|>' → logprob: -17.062559127807617
    5. '   ' → logprob: -17.375059127807617
    6. '2' → logprob: -18.375059127807617
    7. '１' → logprob: -18.562559127807617
    8. '+' → logprob: -18.937559127807617
    9. '  ' → logprob: -19.062559127807617
    10. ' ' → logprob: -19.437559127807617

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '<|end|>' → logprob: -15.375036239624023
    4. '```' → logprob: -15.812536239624023
    5. '2' → logprob: -16.187536239624023
    6. '+' → logprob: -16.875036239624023
    7. '   ' → logprob: -17.062536239624023
    8. '１' → logprob: -17.250036239624023
    9. '0' → logprob: -17.312536239624023
    10. '  ' → logprob: -17.500036239624023

Token 154: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2731392979621887
    2. '
' → logprob: -1.773139238357544
    3. '<|end|>' → logprob: -2.898139238357544
    4. '    
' → logprob: -4.773139476776123
    5. 'print' → logprob: -6.273139476776123
    6. 'edges' → logprob: -6.898139476776123
    7. '```' → logprob: -7.023139476776123
    8. 'for' → logprob: -7.523139476776123
    9. '\n' → logprob: -8.023138999938965
    10. ' edges' → logprob: -8.523138999938965

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02418508194386959
    2. '
' → logprob: -5.0241851806640625
    3. 'print' → logprob: -5.0241851806640625
    4. 'for' → logprob: -5.0241851806640625
    5. '    
' → logprob: -6.0241851806640625
    6. '<|end|>' → logprob: -7.3991851806640625
    7. ' for' → logprob: -7.6491851806640625
    8. 'edges' → logprob: -8.024185180664062
    9. '```' → logprob: -8.899185180664062
    10. '  
' → logprob: -10.024185180664062

Token 156: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10546034574508667
    2. 'for' → logprob: -2.9804604053497314
    3. 'edges' → logprob: -3.2304604053497314
    4. '   ' → logprob: -5.605460166931152
    5. ' for' → logprob: -5.980460166931152
    6. ' print' → logprob: -6.230460166931152
    7. ' edges' → logprob: -6.605460166931152
    8. 'if' → logprob: -8.730460166931152
    9. '```' → logprob: -10.105460166931152
    10. '    
' → logprob: -11.480460166931152

Token 157: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.001572948880493641
    2. ' =' → logprob: -7.376573085784912
    3. '_nodes' → logprob: -7.751573085784912
    4. '_' → logprob: -7.876573085784912
    5. '=' → logprob: -9.626572608947754
    6. '_vertices' → logprob: -10.376572608947754
    7. '_edge' → logprob: -11.751572608947754
    8. '_lines' → logprob: -12.001572608947754
    9. 'edges' → logprob: -12.251572608947754
    10. '_points' → logprob: -12.626572608947754

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006717974785715342
    2. '=' → logprob: -5.006718158721924
    3. ' ' → logprob: -13.131717681884766
    4. '   ' → logprob: -15.881717681884766
    5. 's' → logprob: -16.006717681884766
    6. ')' → logprob: -16.256717681884766
    7. ',' → logprob: -16.256717681884766
    8. '  ' → logprob: -16.631717681884766
    9. '＝' → logprob: -17.006717681884766
    10. ' =
' → logprob: -17.131717681884766

Token 159: ' sum' (ID: 4215)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5254130959510803
    2. ' N' → logprob: -1.1504130363464355
    3. ' (' → logprob: -2.9004130363464355
    4. '(N' → logprob: -3.9004130363464355
    5. '[N' → logprob: -4.6504130363464355
    6. '[]' → logprob: -5.6504130363464355
    7. ' ' → logprob: -7.0254130363464355
    8. '[(' → logprob: -7.4004130363464355
    9. ' []' → logprob: -7.6504130363464355
    10. '[[' → logprob: -8.150413513183594

Token 160: '(map' (ID: 16946)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -2.339278580620885e-06
    2. 'len' → logprob: -13.750001907348633
    3. '([' → logprob: -13.750001907348633
    4. '(' → logprob: -16.750001907348633
    5. '[len' → logprob: -17.000001907348633
    6. '(map' → logprob: -18.500001907348633
    7. '((' → logprob: -18.875001907348633
    8. ' len' → logprob: -19.750001907348633
    9. ',len' → logprob: -19.875001907348633
    10. '(
' → logprob: -20.375001907348633

Token 161: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.002190233441069722
    2. 'len' → logprob: -6.252190113067627
    3. '(lambda' → logprob: -8.252190589904785
    4. ',len' → logprob: -15.127190589904785
    5. 'lambda' → logprob: -15.502190589904785
    6. ' len' → logprob: -16.00218963623047
    7. '	len' → logprob: -16.12718963623047
    8. '(' → logprob: -16.87718963623047
    9. '=len' → logprob: -16.87718963623047
    10. '[len' → logprob: -17.00218963623047

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0069290888495743275
    2. '(edges' → logprob: -5.25692892074585
    3. ' ,' → logprob: -6.63192892074585
    4. 'edges' → logprob: -8.631929397583008
    5. '(lambda' → logprob: -8.881929397583008
    6. ' edges' → logprob: -10.631929397583008
    7. '(' → logprob: -11.381929397583008
    8. ' (' → logprob: -12.381929397583008
    9. 'lambda' → logprob: -12.506929397583008
    10. 'Edges' → logprob: -12.881929397583008

Token 163: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5760735273361206
    2. ' edges' → logprob: -0.8260735273361206
    3. '(edges' → logprob: -8.95107364654541
    4. ')' → logprob: -13.20107364654541
    5. '.edges' → logprob: -13.82607364654541
    6. '_edges' → logprob: -14.07607364654541
    7. '[' → logprob: -15.20107364654541
    8. 'edge' → logprob: -15.70107364654541
    9. '   ' → logprob: -16.076072692871094
    10. ' ' → logprob: -16.076072692871094

Token 164: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38694941997528076
    2. ')' → logprob: -1.1369494199752808
    3. '))-' → logprob: -10.76194953918457
    4. '[' → logprob: -11.26194953918457
    5. ')-' → logprob: -11.51194953918457
    6. ' ))' → logprob: -11.76194953918457
    7. '))
' → logprob: -12.01194953918457
    8. ')+' → logprob: -12.26194953918457
    9. '))+' → logprob: -12.76194953918457
    10. '()))' → logprob: -12.88694953918457

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028233008924871683
    2. '    
' → logprob: -7.002823352813721
    3. '<|end|>' → logprob: -7.127823352813721
    4. 'print' → logprob: -7.377823352813721
    5. '
' → logprob: -8.002822875976562
    6. ')' → logprob: -10.127822875976562
    7. 'edges' → logprob: -10.377822875976562
    8. ' edges' → logprob: -11.377822875976562
    9. '```' → logprob: -11.377822875976562
    10. '[' → logprob: -12.002822875976562

Token 166: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16479425132274628
    2. '   ' → logprob: -2.1647942066192627
    3. ' print' → logprob: -3.4147942066192627
    4. '```' → logprob: -6.539794445037842
    5. '
' → logprob: -6.664794445037842
    6. 'edges' → logprob: -8.414793968200684
    7. 'if' → logprob: -8.539793968200684
    8. ')' → logprob: -8.539793968200684
    9. '    
' → logprob: -8.914793968200684
    10. ' if' → logprob: -8.914793968200684

Token 167: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39610642194747925
    2. '(total' → logprob: -1.146106481552124
    3. '(N' → logprob: -4.896106243133545
    4. 'total' → logprob: -7.021106243133545
    5. '("' → logprob: -8.146106719970703
    6. '((' → logprob: -8.896106719970703
    7. '(
' → logprob: -8.896106719970703
    8. '('' → logprob: -9.396106719970703
    9. '()' → logprob: -9.771106719970703
    10. '("("' → logprob: -10.396106719970703

Token 168: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.000846671755425632
    2. '_' → logprob: -7.250846862792969
    3. ' _' → logprob: -10.125846862792969
    4. ')' → logprob: -10.375846862792969
    5. '_)' → logprob: -10.625846862792969
    6. ')_' → logprob: -10.750846862792969
    7. '_ed' → logprob: -11.500846862792969
    8. '_e' → logprob: -13.375846862792969
    9. '_,' → logprob: -13.875846862792969
    10. '_edge' → logprob: -14.625846862792969

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12720359861850739
    2. ')
' → logprob: -2.1272037029266357
    3. ' )' → logprob: -8.752203941345215
    4. '+' → logprob: -10.252203941345215
    5. '   ' → logprob: -10.377203941345215
    6. ' )
' → logprob: -10.627203941345215
    7. ',' → logprob: -11.502203941345215
    8. ' +' → logprob: -12.127203941345215
    9. ')
' → logprob: -12.502203941345215
    10. ')

' → logprob: -13.752203941345215

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019487569108605385
    2. '1' → logprob: -5.144487380981445
    3. '<|end|>' → logprob: -5.394487380981445
    4. 'for' → logprob: -5.894487380981445
    5. '    
' → logprob: -6.144487380981445
    6. '0' → logprob: -6.519487380981445
    7. ' for' → logprob: -6.644487380981445
    8. '(' → logprob: -8.019487380981445
    9. 'print' → logprob: -8.519487380981445
    10. ' ' → logprob: -9.019487380981445

Token 171: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22122085094451904
    2. '   ' → logprob: -1.846220850944519
    3. 'for' (adapté à ' for') → logprob: -3.2212209701538086
    4. '1' → logprob: -7.346220970153809
    5. ' print' → logprob: -10.596220970153809
    6. '    
' → logprob: -10.721220970153809
    7. ' for' → logprob: -11.971220970153809
    8. '0' → logprob: -12.221220970153809
    9. '```' → logprob: -12.346220970153809
    10. '<|end|>' → logprob: -12.346220970153809

Token 172: ' u' (ID: 337)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.608497679233551
    2. ' i' → logprob: -0.983497679233551
    3. 'u' → logprob: -3.3584976196289062
    4. ' u' → logprob: -3.4834976196289062
    5. ' ef' → logprob: -5.358497619628906
    6. 'e' → logprob: -5.983497619628906
    7. ' e' → logprob: -6.358497619628906
    8. ' edge' → logprob: -6.483497619628906
    9. 'v' → logprob: -6.858497619628906
    10. 'ef' → logprob: -6.983497619628906

Token 173: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21206802129745483
    2. 'in' → logprob: -1.8370680809020996
    3. ',' → logprob: -3.4620680809020996
    4. ' ,' → logprob: -8.587067604064941
    5. ' ' → logprob: -8.962067604064941
    6. '_edges' → logprob: -10.087067604064941
    7. '_in' → logprob: -11.087067604064941
    8. ',in' → logprob: -11.462067604064941
    9. '   ' → logprob: -11.587067604064941
    10. '  ' → logprob: -11.837067604064941

Token 174: ' lst' (ID: 33384)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.3501451015472412
    2. 'v' → logprob: -1.4751451015472412
    3. 'adj' → logprob: -2.850145101547241
    4. 'neighbors' → logprob: -5.35014533996582
    5. 'ad' → logprob: -6.47514533996582
    6. ' vs' → logprob: -7.35014533996582
    7. 'nbr' → logprob: -7.60014533996582
    8. 'vv' → logprob: -8.72514533996582
    9. 'lst' → logprob: -8.97514533996582
    10. 'vl' → logprob: -8.97514533996582

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38695377111434937
    2. 'in' → logprob: -1.1369538307189941
    3. 's' → logprob: -10.011953353881836
    4. ',' → logprob: -11.136953353881836
    5. ' ' → logprob: -11.386953353881836
    6. '_in' → logprob: -12.636953353881836
    7. '	in' → logprob: -13.261953353881836
    8. 'u' → logprob: -14.261953353881836
    9. ',in' → logprob: -14.261953353881836
    10. '  ' → logprob: -14.261953353881836

Token 176: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.03676166012883186
    2. ' enumerate' → logprob: -3.91176176071167
    3. 'edges' → logprob: -4.16176176071167
    4. 'zip' → logprob: -8.161761283874512
    5. ' edges' → logprob: -8.661761283874512
    6. '[(' → logprob: -11.161761283874512
    7. ' zip' → logprob: -11.536761283874512
    8. '(' → logprob: -11.786761283874512
    9. '(edges' → logprob: -11.911761283874512
    10. '((' → logprob: -12.786761283874512

Token 177: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.002491118386387825
    2. 'edges' → logprob: -6.002490997314453
    3. ' edges' → logprob: -11.252490997314453
    4. '(range' → logprob: -13.377490997314453
    5. '_edges' → logprob: -15.002490997314453
    6. '(edge' → logprob: -15.002490997314453
    7. ' (' → logprob: -16.502490997314453
    8. 'range' → logprob: -16.627490997314453
    9. '(' → logprob: -16.752490997314453
    10. '.edges' → logprob: -16.877490997314453

Token 178: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017758876085281372
    2. '):' → logprob: -4.517758846282959
    3. '[' → logprob: -5.767758846282959
    4. '):
' → logprob: -6.392758846282959
    5. ':' → logprob: -7.142758846282959
    6. '   ' → logprob: -7.517758846282959
    7. ' ,' → logprob: -8.642759323120117
    8. ',l' → logprob: -9.267759323120117
    9. ':
' → logprob: -9.267759323120117
    10. ',u' → logprob: -10.767759323120117

Token 179: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35608333349227905
    2. ':' → logprob: -1.7310833930969238
    3. '       ' → logprob: -2.231083393096924
    4. ' for' → logprob: -5.106083393096924
    5. '<|end|>' → logprob: -5.106083393096924
    6. ',' → logprob: -6.356083393096924
    7. ' if' → logprob: -7.856083393096924
    8. ':
' → logprob: -7.981083393096924
    9. '<|end|>' → logprob: -9.106082916259766
    10. '[' → logprob: -9.106082916259766

Token 180: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4072158932685852
    2. '   ' → logprob: -1.1572158336639404
    3. '       ' → logprob: -4.1572160720825195
    4. ' if' → logprob: -6.1572160720825195
    5. 'for' (adapté à ' for') → logprob: -6.6572160720825195
    6. '<|end|>' → logprob: -7.9072160720825195
    7. '	for' → logprob: -7.9072160720825195
    8. ' print' → logprob: -9.15721607208252
    9. ' u' → logprob: -9.65721607208252
    10. '    ' → logprob: -10.03221607208252

Token 181: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.47410380840301514
    2. 'v' → logprob: -0.9741038084030151
    3. '   ' → logprob: -11.224103927612305
    4. ' ' → logprob: -12.349103927612305
    5. 'w' → logprob: -12.474103927612305
    6. ' w' → logprob: -13.224103927612305
    7. 'to' → logprob: -14.224103927612305
    8. '  ' → logprob: -14.349103927612305
    9. '(v' → logprob: -14.599103927612305
    10. '	v' → logprob: -14.849103927612305

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004640642087906599
    2. 'in' → logprob: -5.379640579223633
    3. ' ' → logprob: -11.379640579223633
    4. '	in' → logprob: -12.254640579223633
    5. '_in' → logprob: -13.754640579223633
    6. 'In' → logprob: -14.129640579223633
    7. '   ' → logprob: -14.504640579223633
    8. ',' → logprob: -15.129640579223633
    9. '    ' → logprob: -15.254640579223633
    10. '        ' → logprob: -15.379640579223633

Token 183: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.011050889268517494
    2. ' lst' → logprob: -4.511050701141357
    3. '(lst' → logprob: -13.511051177978516
    4. 'list' → logprob: -13.636051177978516
    5. 'l' → logprob: -15.761051177978516
    6. 'sorted' → logprob: -15.886051177978516
    7. '_lst' → logprob: -15.886051177978516
    8. 'Lst' → logprob: -16.886051177978516
    9. '.lst' → logprob: -17.011051177978516
    10. 'ls' → logprob: -17.261051177978516

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15138237178325653
    2. '       ' → logprob: -2.7763824462890625
    3. ':
' → logprob: -2.9013824462890625
    4. '           ' → logprob: -4.5263824462890625
    5. '():
' → logprob: -5.0263824462890625
    6. ',' → logprob: -6.0263824462890625
    7. '<|end|>' → logprob: -6.9013824462890625
    8. '():' → logprob: -7.1513824462890625
    9. ' print' → logprob: -7.6513824462890625
    10. '   ' → logprob: -8.151382446289062

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008031962439417839
    2. ' print' → logprob: -4.883031845092773
    3. '       ' → logprob: -8.258031845092773
    4. '<|end|>' → logprob: -10.633031845092773
    5. '            
' → logprob: -10.883031845092773
    6. 'print' → logprob: -11.008031845092773
    7. '          ' → logprob: -11.258031845092773
    8. '```' → logprob: -11.383031845092773
    9. ' #' → logprob: -11.633031845092773
    10. ' 
' → logprob: -11.633031845092773

Token 186: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.009336327202618122
    2. 'print' (adapté à ' print') → logprob: -5.259336471557617
    3. '           ' → logprob: -5.509336471557617
    4. '   ' → logprob: -10.884336471557617
    5. '       ' → logprob: -11.259336471557617
    6. '               ' → logprob: -11.634336471557617
    7. '            ' → logprob: -13.759336471557617
    8. ' ' → logprob: -14.134336471557617
    9. '	print' → logprob: -14.259336471557617
    10. ' if' → logprob: -14.509336471557617

Token 187: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.27777931094169617
    2. ' u' → logprob: -1.6527793407440186
    3. 'u' → logprob: -3.0277793407440186
    4. '(' → logprob: -6.9027791023254395
    5. '1' → logprob: -7.5277791023254395
    6. '(f' → logprob: -7.9027791023254395
    7. 'f' → logprob: -8.527779579162598
    8. '0' → logprob: -8.777779579162598
    9. ' (' → logprob: -9.027779579162598
    10. ' f' → logprob: -9.402779579162598

Token 188: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3311796486377716
    2. ' +' → logprob: -1.3311796188354492
    3. ',' → logprob: -4.456179618835449
    4. ' ,' → logprob: -5.331179618835449
    5. ',v' → logprob: -6.706179618835449
    6. ' v' → logprob: -11.08117961883545
    7. '0' → logprob: -11.08117961883545
    8. ' ' → logprob: -11.08117961883545
    9. '+,' → logprob: -11.20617961883545
    10. ')' → logprob: -11.58117961883545

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000206401280593127
    2. ' ' → logprob: -8.500205993652344
    3. '2' → logprob: -13.000205993652344
    4. '0' → logprob: -14.750205993652344
    5. '   ' → logprob: -16.625205993652344
    6. '```' → logprob: -17.125205993652344
    7. ')' → logprob: -17.500205993652344
    8. '`' → logprob: -17.875205993652344
    9. '+' → logprob: -17.875205993652344
    10. ',' → logprob: -18.312705993652344

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018089536752086133
    2. ' ' → logprob: -8.625181198120117
    3. '2' → logprob: -14.000181198120117
    4. '0' → logprob: -15.000181198120117
    5. '   ' → logprob: -17.312681198120117
    6. '
' → logprob: -17.875181198120117
    7. '```' → logprob: -18.062681198120117
    8. '+' → logprob: -18.750181198120117
    9. '  ' → logprob: -18.812681198120117
    10. '１' → logprob: -19.125181198120117

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00979386456310749
    2. ',v' → logprob: -4.884793758392334
    3. ' ,' → logprob: -6.134793758392334
    4. ' v' → logprob: -11.509794235229492
    5. ',u' → logprob: -12.384794235229492
    6. ',end' → logprob: -12.759794235229492
    7. ',f' → logprob: -14.259794235229492
    8. ',
' → logprob: -15.009794235229492
    9. '           ' → logprob: -15.009794235229492
    10. ',n' → logprob: -15.759794235229492

Token 192: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20141352713108063
    2. ' v' → logprob: -1.7014135122299194
    3. ')v' → logprob: -16.701414108276367
    4. '	v' → logprob: -16.951414108276367
    5. ',v' → logprob: -17.576414108276367
    6. ' ' → logprob: -17.576414108276367
    7. '    ' → logprob: -18.201414108276367
    8. '   ' → logprob: -18.451414108276367
    9. ')' → logprob: -18.576414108276367
    10. ',' → logprob: -19.201414108276367

Token 193: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.32654589228332e-05
    2. ' )' → logprob: -9.750073432922363
    3. '<|end|>' → logprob: -11.500073432922363
    4. ')
' → logprob: -12.375073432922363
    5. ')#' → logprob: -16.250072479248047
    6. ')return' → logprob: -16.500072479248047
    7. ')add' → logprob: -16.875072479248047
    8. ')}}' → logprob: -17.125072479248047
    9. '+)' → logprob: -17.500072479248047
    10. ');' → logprob: -17.625072479248047

Token 194: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06245004013180733
    2. ')' → logprob: -3.4374499320983887
    3. ' ' → logprob: -3.6874499320983887
    4. '<|end|>' → logprob: -5.937449932098389
    5. ' )' → logprob: -7.437449932098389
    6. '```' → logprob: -9.687450408935547
    7. ' ' → logprob: -11.187450408935547
    8. ' ```' → logprob: -11.812450408935547
    9. '0' → logprob: -11.937450408935547
    10. ')
' → logprob: -12.187450408935547

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017570488853380084
    2. ')' → logprob: -6.7517571449279785
    3. ' ' → logprob: -7.8767571449279785
    4. '<|end|>' → logprob: -8.50175666809082
    5. ' )' → logprob: -13.12675666809082
    6. '0' → logprob: -14.50175666809082
    7. '```' → logprob: -14.87675666809082
    8. '<|end|>' → logprob: -15.12675666809082
    9. ')
' → logprob: -15.62675666809082
    10. '>' → logprob: -16.00175666809082

Token 196: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ')
' → logprob: -12.625004768371582
    3. ' )' → logprob: -14.250004768371582
    4. '<|end|>' → logprob: -16.500003814697266
    5. ')#' → logprob: -16.875003814697266
    6. ')}' → logprob: -18.000003814697266
    7. '),' → logprob: -18.250003814697266
    8. '```' → logprob: -18.375003814697266
    9. '')' → logprob: -18.625003814697266
    10. ')

' → logprob: -18.750003814697266

Token 197: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07092879712581635
    2. 'main' → logprob: -2.9459288120269775
    3. '
' → logprob: -4.820928573608398
    4. '<|end|>' → logprob: -5.195928573608398
    5. ')' → logprob: -6.945928573608398
    6. '```' → logprob: -7.570928573608398
    7. ' if' → logprob: -8.070928573608398
    8. 'print' → logprob: -9.070928573608398
    9. '(main' → logprob: -9.195928573608398
    10. 'exit' → logprob: -9.570928573608398

Token 198: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5764089822769165
    2. '__' → logprob: -0.8264089822769165
    3. '_' → logprob: -8.201409339904785
    4. 'name' → logprob: -9.451409339904785
    5. '_name' → logprob: -9.826409339904785
    6. ' ' → logprob: -10.201409339904785
    7. ' ' → logprob: -11.451409339904785
    8. '___' → logprob: -11.701409339904785
    9. '  ' → logprob: -13.826409339904785
    10. ' _' → logprob: -14.076409339904785

Token 199: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1613452136516571
    2. ' ==' → logprob: -2.0363452434539795
    3. '==' → logprob: -4.5363450050354
    4. ' __' → logprob: -5.0363450050354
    5. 'name' → logprob: -7.1613450050354
    6. '_' → logprob: -8.911345481872559
    7. '.__' → logprob: -9.286345481872559
    8. '=="' → logprob: -9.911345481872559
    9. '_name' → logprob: -10.161345481872559
    10. 'if' → logprob: -11.036345481872559

Token 200: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001114106344175525
    2. '==' → logprob: -9.12511157989502
    3. ' ==' → logprob: -13.75011157989502
    4. '__.__' → logprob: -14.12511157989502
    5. '_' → logprob: -15.50011157989502
    6. '=="' → logprob: -15.87511157989502
    7. '___' → logprob: -16.375110626220703
    8. '__('' → logprob: -16.875110626220703
    9. ' __' → logprob: -17.250110626220703
    10. '__
' → logprob: -17.375110626220703

Token 201: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9063761830329895
    2. ' ==' → logprob: -0.9063761830329895
    3. '__' → logprob: -1.6563761234283447
    4. '=="' → logprob: -7.031376361846924
    5. '=='' → logprob: -8.406375885009766
    6. '=' → logprob: -10.156375885009766
    7. '_' → logprob: -10.406375885009766
    8. '___' → logprob: -11.906375885009766
    9. '===' → logprob: -12.406375885009766
    10. ' ' → logprob: -13.406375885009766

Token 202: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006728872191160917
    2. ''' → logprob: -5.006728649139404
    3. ' "__' → logprob: -11.881729125976562
    4. '__' → logprob: -12.006729125976562
    5. '"user' → logprob: -16.131729125976562
    6. ' '__' → logprob: -16.381729125976562
    7. '"name' → logprob: -16.381729125976562
    8. '   ' → logprob: -17.131729125976562
    9. ''"' → logprob: -17.881729125976562
    10. '("__' → logprob: -18.006729125976562

Token 203: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.21087941527366638
    2. '__' → logprob: -2.335879325866699
    3. '"' → logprob: -2.460879325866699
    4. ''' → logprob: -4.960879325866699
    5. 'name' → logprob: -7.085879325866699
    6. '__":
' → logprob: -10.0858793258667
    7. '__
' → logprob: -10.3358793258667
    8. '   ' → logprob: -10.8358793258667
    9. '"name' → logprob: -11.0858793258667
    10. '_main' → logprob: -11.4608793258667

Token 204: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0025417746510356665
    2. '__' → logprob: -6.002541542053223
    3. '__':
' → logprob: -9.627541542053223
    4. '__:' → logprob: -16.37754249572754
    5. '__.' → logprob: -17.00254249572754
    6. '__["' → logprob: -18.25254249572754
    7. '():
' → logprob: -18.37754249572754
    8. '_' → logprob: -18.37754249572754
    9. '__
' → logprob: -18.75254249572754
    10. '()' → logprob: -18.87754249572754

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7240277528762817
    2. 'main' → logprob: -0.8490277528762817
    3. ' main' → logprob: -2.599027633666992
    4. '	main' → logprob: -4.349027633666992
    5. '    
' → logprob: -10.224027633666992
    6. ' ' → logprob: -10.724027633666992
    7. '_main' → logprob: -10.849027633666992
    8. '  ' → logprob: -11.599027633666992
    9. '<|end|>' → logprob: -11.974027633666992
    10. '   ' → logprob: -12.099027633666992

Token 206: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.869017852295656e-06
    2. ' main' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.375006675720215
    4. '	main' → logprob: -14.625006675720215
    5. '(main' → logprob: -20.50000762939453
    6. '.main' → logprob: -21.00000762939453
    7. '_main' → logprob: -21.12500762939453
    8. 'exit' → logprob: -22.00000762939453
    9. '  ' → logprob: -22.25000762939453
    10. '```' → logprob: -22.50000762939453

Token 207: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 205
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 175
Précision stricte (1ère position): 43.90%
Précision adaptée (1ère position): 47.80%
Précision (top 10): 85.37%
================================================================================
