================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
import functools
import operator

a = list(map(int, input().split()))
*_, m = sorted((v, i) for i, v in enumerate(a))
idx = m[1]
b = (x for i, x in enumerate(a) if i != idx)
print(functools.reduce(operator.add, b, 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.9504606825648807e-05
    2. '```' → logprob: -12.625019073486328
    3. 'import' → logprob: -13.250019073486328
    4. '\' → logprob: -13.625019073486328
    5. '."""' → logprob: -13.625019073486328
    6. ' .' → logprob: -13.750019073486328
    7. '.

' → logprob: -13.750019073486328
    8. '\.' → logprob: -13.875019073486328
    9. '​.' → logprob: -14.125019073486328
    10. '.`' → logprob: -14.125019073486328

Token 4: ' functools' (ID: 142636)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.9610938429832458
    2. ' math' → logprob: -1.3360939025878906
    3. ' collections' → logprob: -1.8360939025878906
    4. ' os' → logprob: -2.0860939025878906
    5. ' functools' → logprob: -2.8360939025878906
    6. ' operator' → logprob: -5.336093902587891
    7. ' ' → logprob: -6.336093902587891
    8. ' numpy' → logprob: -6.711093902587891
    9. 'collections' → logprob: -6.836093902587891
    10. 'os' → logprob: -6.961093902587891

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00034845535992644727
    2. '\' → logprob: -8.750348091125488
    3. '(' → logprob: -10.000348091125488
    4. '.
' → logprob: -10.375348091125488
    5. '.

' → logprob: -10.750348091125488
    6. '```' → logprob: -10.875348091125488
    7. 'def' → logprob: -11.125348091125488
    8. '.`' → logprob: -12.125348091125488
    9. 'import' → logprob: -12.250348091125488
    10. ',' → logprob: -12.375348091125488

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007202647626399994
    2. '\' → logprob: -6.257202625274658
    3. 'import' → logprob: -6.882202625274658
    4. '(' → logprob: -7.007202625274658
    5. ',' → logprob: -7.007202625274658
    6. 'def' → logprob: -7.257202625274658
    7. '```' → logprob: -7.882202625274658
    8. 'as' → logprob: -8.132203102111816
    9. ' as' → logprob: -8.507203102111816
    10. '[' → logprob: -8.507203102111816

Token 7: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.14809784293174744
    2. 'operator' → logprob: -2.2730977535247803
    3. ' os' → logprob: -4.273097991943359
    4. ' math' → logprob: -4.773097991943359
    5. 'os' → logprob: -5.148097991943359
    6. ' collections' → logprob: -5.273097991943359
    7. 'collections' → logprob: -7.398097991943359
    8. 'math' → logprob: -7.648097991943359
    9. ' sys' → logprob: -9.52309799194336
    10. ' re' → logprob: -9.64809799194336

Token 8: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006605714093893766
    2. '\' → logprob: -5.506605625152588
    3. '(' → logprob: -6.631605625152588
    4. ',' → logprob: -8.131606101989746
    5. '\n' → logprob: -8.381606101989746
    6. '#' → logprob: -9.256606101989746
    7. '_' → logprob: -9.756606101989746
    8. '```' → logprob: -9.756606101989746
    9. '<|end|>' → logprob: -9.881606101989746
    10. '.
' → logprob: -9.881606101989746

Token 9: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007791309617459774
    2. '(' → logprob: -7.750779151916504
    3. ',' → logprob: -9.500779151916504
    4. '#' → logprob: -9.625779151916504
    5. '\' → logprob: -10.125779151916504
    6. '=' → logprob: -10.250779151916504
    7. '.
' → logprob: -10.625779151916504
    8. '```' → logprob: -11.000779151916504
    9. 'def' → logprob: -11.000779151916504
    10. '_' → logprob: -11.125779151916504

Token 10: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02035173960030079
    2. 's' → logprob: -4.270351886749268
    3. ',' → logprob: -6.270351886749268
    4. '=' → logprob: -6.645351886749268
    5. '_' → logprob: -6.895351886749268
    6. 'a' → logprob: -7.895351886749268
    7. 'r' → logprob: -7.895351886749268
    8. '[' → logprob: -8.14535140991211
    9. 'b' → logprob: -8.27035140991211
    10. ' =' → logprob: -9.27035140991211

Token 11: ' list' (ID: 1562)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.04679318517446518
    2. 'it' → logprob: -4.046792984008789
    3. ' [' → logprob: -4.671792984008789
    4. ' []' → logprob: -4.921792984008789
    5. ' list' → logprob: -5.171792984008789
    6. 'list' → logprob: -6.421792984008789
    7. '[' → logprob: -7.046792984008789
    8. ' range' → logprob: -7.046792984008789
    9. 'range' → logprob: -7.171792984008789
    10. ' ' → logprob: -7.796792984008789

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3906332552433014
    2. '(it' → logprob: -1.140633225440979
    3. ' itertools' → logprob: -6.1406331062316895
    4. '(range' → logprob: -7.5156331062316895
    5. '(iter' → logprob: -7.6406331062316895
    6. '(a' → logprob: -8.765633583068848
    7. '(chain' → logprob: -9.890633583068848
    8. '(filter' → logprob: -10.140633583068848
    9. '(int' → logprob: -10.265633583068848
    10. '(
' → logprob: -10.640633583068848

Token 13: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11648142337799072
    2. '(operator' → logprob: -2.616481304168701
    3. '(lambda' → logprob: -3.366481304168701
    4. '(f' → logprob: -7.116481304168701
    5. '(it' → logprob: -7.491481304168701
    6. '(fun' → logprob: -8.11648178100586
    7. ')' → logprob: -8.36648178100586
    8. ' itertools' → logprob: -9.11648178100586
    9. ' (' → logprob: -9.24148178100586
    10. '(op' → logprob: -9.49148178100586

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2443920075893402
    2. '(input' → logprob: -1.6193920373916626
    3. '('' → logprob: -5.494391918182373
    4. '))' → logprob: -5.869391918182373
    5. '(a' → logprob: -6.369391918182373
    6. ',' → logprob: -6.369391918182373
    7. ')' → logprob: -6.994391918182373
    8. '(range' → logprob: -7.119391918182373
    9. '(it' → logprob: -7.744391918182373
    10. '(data' → logprob: -7.744391918182373

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13199374079704285
    2. ' input' → logprob: -2.2569937705993652
    3. '(input' → logprob: -4.256993770599365
    4. ''' → logprob: -5.756993770599365
    5. '"' → logprob: -7.881993770599365
    6. ' '' → logprob: -8.131993293762207
    7. ',input' → logprob: -8.631993293762207
    8. '('' → logprob: -9.256993293762207
    9. ')' → logprob: -9.506993293762207
    10. '(' → logprob: -9.756993293762207

Token 16: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21376729011535645
    2. '()))' → logprob: -1.9637672901153564
    3. '()' → logprob: -3.5887672901153564
    4. '('' → logprob: -4.963767051696777
    5. '(()' → logprob: -4.963767051696777
    6. '())' → logprob: -5.463767051696777
    7. '()));' → logprob: -6.088767051696777
    8. '(""))' → logprob: -6.838767051696777
    9. '("("' → logprob: -7.213767051696777
    10. '())))' → logprob: -8.213767051696777

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015168882673606277
    2. 'strip' → logprob: -6.501516819000244
    3. ' split' → logprob: -11.751517295837402
    4. 'rstrip' → logprob: -12.001517295837402
    5. '(split' → logprob: -15.501517295837402
    6. 'read' → logprob: -15.501517295837402
    7. ')' → logprob: -17.126516342163086
    8. 'spl' → logprob: -17.376516342163086
    9. 'replace' → logprob: -17.376516342163086
    10. 'startswith' → logprob: -18.001516342163086

Token 18: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.831762433052063
    2. '())' → logprob: -1.581762433052063
    3. ')' → logprob: -1.831762433052063
    4. '))' → logprob: -1.831762433052063
    5. ')))' → logprob: -4.081762313842773
    6. '())))' → logprob: -4.831762313842773
    7. '(' → logprob: -4.956762313842773
    8. '()' → logprob: -5.081762313842773
    9. '()));' → logprob: -8.706762313842773
    10. '),' → logprob: -9.581762313842773

Token 19: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5238020420074463
    2. '.' → logprob: -2.0238020420074463
    3. '[' → logprob: -2.0238020420074463
    4. '\n' → logprob: -3.0238020420074463
    5. '*' → logprob: -3.3988020420074463
    6. '\' → logprob: -4.273801803588867
    7. '(' → logprob: -4.523801803588867
    8. '+' → logprob: -5.148801803588867
    9. ')
' → logprob: -5.273801803588867
    10. '[
' → logprob: -5.898801803588867

Token 20: '_,' (ID: 14152)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6342326402664185
    2. 'b' → logprob: -1.8842326402664185
    3. 'for' → logprob: -2.009232521057129
    4. 'com' → logprob: -2.134232521057129
    5. ' for' → logprob: -2.384232521057129
    6. ' b' → logprob: -3.134232521057129
    7. 'result' → logprob: -3.509232521057129
    8. ' a' → logprob: -3.759232521057129
    9. 'per' → logprob: -3.884232521057129
    10. '[' → logprob: -4.134232521057129

Token 21: ' m' (ID: 284)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.41422808170318604
    2. ' b' → logprob: -1.664228081703186
    3. 'a' → logprob: -3.1642279624938965
    4. 'c' → logprob: -4.0392279624938965
    5. 'max' → logprob: -4.1642279624938965
    6. 'x' → logprob: -4.6642279624938965
    7. ' a' → logprob: -4.7892279624938965
    8. 'm' → logprob: -4.7892279624938965
    9. 'k' → logprob: -5.1642279624938965
    10. ' c' → logprob: -5.1642279624938965

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7147563695907593
    2. ' =' → logprob: -0.7147563695907593
    3. 'ax' → logprob: -3.964756488800049
    4. ',' → logprob: -7.339756488800049
    5. 'a' → logprob: -7.339756488800049
    6. ' ' → logprob: -7.839756488800049
    7. '=ax' → logprob: -8.21475601196289
    8. '=a' → logprob: -8.71475601196289
    9. '=max' → logprob: -10.71475601196289
    10. '=input' → logprob: -11.08975601196289

Token 23: ' sorted' (ID: 20099)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029856475070118904
    2. ' a' → logprob: -3.5298564434051514
    3. ' itertools' → logprob: -10.02985668182373
    4. 'it' → logprob: -10.52985668182373
    5. 'sorted' → logprob: -11.02985668182373
    6. ' ' → logprob: -11.52985668182373
    7. 'map' → logprob: -13.27985668182373
    8. ' sorted' → logprob: -13.40485668182373
    9. ' reversed' → logprob: -13.90485668182373
    10. 'input' → logprob: -14.27985668182373

Token 24: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0023668475914746523
    2. '(' → logprob: -6.62736701965332
    3. 'a' → logprob: -6.87736701965332
    4. '(
' → logprob: -12.87736701965332
    5. '((' → logprob: -13.25236701965332
    6. '(m' → logprob: -14.00236701965332
    7. ' (' → logprob: -14.50236701965332
    8. '(`' → logprob: -15.00236701965332
    9. '(s' → logprob: -15.12736701965332
    10. '(input' → logprob: -15.50236701965332

Token 25: 'v' (ID: 85)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.020471233874559402
    2. 'enumer' → logprob: -4.770471096038818
    3. 'set' → logprob: -5.645471096038818
    4. 'i' → logprob: -6.520471096038818
    5. '(a' → logprob: -6.520471096038818
    6. 'it' → logprob: -6.645471096038818
    7. '(i' → logprob: -7.520471096038818
    8. 'x' → logprob: -7.770471096038818
    9. 'map' → logprob: -8.145471572875977
    10. 'len' → logprob: -8.145471572875977

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07041584700345993
    2. 'a' → logprob: -3.445415735244751
    3. ',a' → logprob: -3.695415735244751
    4. ' ,' → logprob: -5.07041597366333
    5. '(a' → logprob: -6.32041597366333
    6. ',i' → logprob: -6.32041597366333
    7. ' a' → logprob: -7.69541597366333
    8. 'enumer' → logprob: -7.69541597366333
    9. 'i' → logprob: -8.820415496826172
    10. '(i' → logprob: -9.195415496826172

Token 27: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1666540503501892
    2. ' i' → logprob: -1.916654109954834
    3. 'idx' → logprob: -6.291654109954834
    4. ' idx' → logprob: -6.416654109954834
    5. '-' → logprob: -7.041654109954834
    6. ')' → logprob: -7.666654109954834
    7. ' ' → logprob: -8.041653633117676
    8. ' -' → logprob: -8.166653633117676
    9. ')i' → logprob: -8.541653633117676
    10. 'k' → logprob: -8.666653633117676

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004914337769150734
    2. 'for' → logprob: -8.87549114227295
    3. 'a' → logprob: -9.12549114227295
    4. ' for' → logprob: -10.12549114227295
    5. ')a' → logprob: -10.50049114227295
    6. ' )' → logprob: -10.50049114227295
    7. '(a' → logprob: -10.75049114227295
    8. '))' → logprob: -11.00049114227295
    9. 'v' → logprob: -11.62549114227295
    10. '(' → logprob: -11.75049114227295

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4724612534046173
    2. 'for' → logprob: -1.472461223602295
    3. ')' → logprob: -1.972461223602295
    4. ' in' → logprob: -5.722461223602295
    5. '(a' → logprob: -5.972461223602295
    6. 'enumer' → logprob: -7.222461223602295
    7. 'in' → logprob: -8.097461700439453
    8. 'a' → logprob: -8.347461700439453
    9. ' (' → logprob: -8.472461700439453
    10. '(v' → logprob: -9.347461700439453

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20358061790466309
    2. 'i' → logprob: -1.703580617904663
    3. ' v' → logprob: -6.828580856323242
    4. 'v' → logprob: -6.953580856323242
    5. ' ' → logprob: -10.078580856323242
    6. '	i' → logprob: -10.828580856323242
    7. ',' → logprob: -11.078580856323242
    8. ' in' → logprob: -11.703580856323242
    9. '<|end|>' → logprob: -11.828580856323242
    10. '  ' → logprob: -12.078580856323242

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7506434321403503
    2. ' in' → logprob: -0.8756434321403503
    3. '<|end|>' → logprob: -2.625643491744995
    4. 'in' → logprob: -3.625643491744995
    5. 'a' → logprob: -4.875643253326416
    6. ' a' → logprob: -6.625643253326416
    7. ',v' → logprob: -7.125643253326416
    8. ',a' → logprob: -7.250643253326416
    9. '<|end|>' → logprob: -7.625643253326416
    10. ' ,' → logprob: -7.875643253326416

Token 32: ' v' (ID: 323)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.18232254683971405
    2. ' enumerate' → logprob: -1.8073225021362305
    3. '<|end|>' → logprob: -6.5573225021362305
    4. 'v' → logprob: -7.6823225021362305
    5. ' v' → logprob: -8.18232250213623
    6. ' in' → logprob: -8.93232250213623
    7. ',' → logprob: -9.68232250213623
    8. '```' → logprob: -9.80732250213623
    9. ' enumer' → logprob: -10.43232250213623
    10. '<|end|>' → logprob: -10.68232250213623

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062035687267780304
    2. 'in' → logprob: -2.8120357990264893
    3. '<|end|>' → logprob: -10.06203556060791
    4. 'enumer' → logprob: -11.06203556060791
    5. ' enumerate' → logprob: -13.06203556060791
    6. ',' → logprob: -13.18703556060791
    7. '<|end|>' → logprob: -13.43703556060791
    8. ' ' → logprob: -13.93703556060791
    9. ')' → logprob: -14.18703556060791
    10. 'import' → logprob: -14.68703556060791

Token 34: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.2254275530576706
    2. ' enumerate' → logprob: -1.600427508354187
    3. '<|end|>' → logprob: -12.100427627563477
    4. '```' → logprob: -12.975427627563477
    5. '.enumer' → logprob: -13.225427627563477
    6. 'en' → logprob: -13.725427627563477
    7. 'Enumer' → logprob: -13.975427627563477
    8. ' enumer' → logprob: -13.975427627563477
    9. '(en' → logprob: -14.225427627563477
    10. 'e' → logprob: -14.850427627563477

Token 35: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.5451681974809617e-05
    2. 'a' → logprob: -11.625015258789062
    3. '(' → logprob: -12.000015258789062
    4. ')a' → logprob: -15.625015258789062
    5. ')' → logprob: -17.000015258789062
    6. '(
' → logprob: -17.000015258789062
    7. ' (' → logprob: -17.125015258789062
    8. ' a' → logprob: -17.375015258789062
    9. '(ai' → logprob: -17.500015258789062
    10. '((' → logprob: -17.875015258789062

Token 36: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028487443923950195
    2. ')' → logprob: -6.0028486251831055
    3. ')))' → logprob: -8.002848625183105
    4. ' ))' → logprob: -11.002848625183105
    5. '))
' → logprob: -12.252848625183105
    6. '),' → logprob: -12.377848625183105
    7. '()))' → logprob: -13.002848625183105
    8. ')),' → logprob: -13.377848625183105
    9. '));' → logprob: -13.502848625183105
    10. ')[' → logprob: -14.002848625183105

Token 37: 'idx' (ID: 13196)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12026569247245789
    2. '[' → logprob: -3.1202657222747803
    3. ')[' → logprob: -3.1202657222747803
    4. ',' → logprob: -5.120265483856201
    5. '(' → logprob: -5.245265483856201
    6. ',)' → logprob: -6.120265483856201
    7. '),' → logprob: -6.120265483856201
    8. '.' → logprob: -6.620265483856201
    9. ')m' → logprob: -7.245265483856201
    10. 'a' → logprob: -7.370265483856201

Token 38: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.958911657333374
    2. '[' → logprob: -1.833911657333374
    3. ' =' → logprob: -1.833911657333374
    4. '=' → logprob: -2.083911657333374
    5. ',' → logprob: -2.458911657333374
    6. '<|end|>' → logprob: -2.833911657333374
    7. ' ' → logprob: -4.833911895751953
    8. ')' → logprob: -4.833911895751953
    9. 's' → logprob: -5.583911895751953
    10. '[]' → logprob: -6.208911895751953

Token 39: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.4293736517429352
    2. 'm' → logprob: -1.0543736219406128
    3. ' len' → logprob: -8.304373741149902
    4. '0' → logprob: -9.054373741149902
    5. ' ' → logprob: -9.554373741149902
    6. 'len' → logprob: -9.804373741149902
    7. '(m' → logprob: -10.554373741149902
    8. ' [' → logprob: -10.679373741149902
    9. '[m' → logprob: -10.679373741149902
    10. '[' → logprob: -10.929373741149902

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023655613767914474
    2. '[
' → logprob: -8.750236511230469
    3. ' [' → logprob: -10.125236511230469
    4. '1' → logprob: -11.125236511230469
    5. '][' → logprob: -12.000236511230469
    6. '[-' → logprob: -12.125236511230469
    7. '```' → logprob: -12.750236511230469
    8. '[i' → logprob: -13.125236511230469
    9. ')[' → logprob: -13.375236511230469
    10. '\[' → logprob: -14.500236511230469

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. '0' → logprob: -11.125017166137695
    3. ' ' → logprob: -13.375017166137695
    4. '2' → logprob: -16.375017166137695
    5. '>' → logprob: -16.500017166137695
    6. '```' → logprob: -17.125017166137695
    7. ')' → logprob: -17.250017166137695
    8. ']' → logprob: -17.250017166137695
    9. '-' → logprob: -18.437517166137695
    10. '' → logprob: -18.500017166137695

Token 42: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005419504595920444
    2. ')+' → logprob: -8.375541687011719
    3. '+' → logprob: -8.625541687011719
    4. ' )' → logprob: -10.125541687011719
    5. ')])' → logprob: -10.875541687011719
    6. '])' → logprob: -11.000541687011719
    7. '))' → logprob: -11.000541687011719
    8. ']' → logprob: -11.500541687011719
    9. ')
' → logprob: -12.000541687011719
    10. ')))' → logprob: -12.250541687011719

Token 43: 'b' (ID: 65)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7400751113891602
    2. '+' → logprob: -0.7400751113891602
    3. ']' → logprob: -3.36507511138916
    4. '+
' → logprob: -5.49007511138916
    5. ' +' → logprob: -6.49007511138916
    6. '
' → logprob: -6.61507511138916
    7. ' ' → logprob: -7.11507511138916
    8. ')
' → logprob: -7.49007511138916
    9. '```' → logprob: -7.49007511138916
    10. '-' → logprob: -7.74007511138916

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038489870727062225
    2. '=' → logprob: -3.288489818572998
    3. ',' → logprob: -8.288490295410156
    4. '=[]' → logprob: -9.913490295410156
    5. ' ' → logprob: -10.788490295410156
    6. 's' → logprob: -10.788490295410156
    7. '[' → logprob: -10.788490295410156
    8. '=[' → logprob: -11.288490295410156
    9. 'a' → logprob: -11.663490295410156
    10. ' =[' → logprob: -11.663490295410156

Token 45: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.965053141117096
    2. '[a' → logprob: -0.965053141117096
    3. '[' → logprob: -2.215053081512451
    4. ' [' → logprob: -2.965053081512451
    5. ' a' → logprob: -3.715053081512451
    6. '[]' → logprob: -3.965053081512451
    7. 'sorted' → logprob: -4.340053081512451
    8. 'list' → logprob: -5.465053081512451
    9. '[len' → logprob: -6.090053081512451
    10. ' []' → logprob: -6.090053081512451

Token 46: 'x' (ID: 87)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06070426106452942
    2. 'v' → logprob: -3.810704231262207
    3. ' a' → logprob: -4.685704231262207
    4. 'i' → logprob: -4.935704231262207
    5. 'x' → logprob: -4.935704231262207
    6. '(a' → logprob: -6.310704231262207
    7. ' v' → logprob: -6.560704231262207
    8. '0' → logprob: -6.935704231262207
    9. '(i' → logprob: -7.185704231262207
    10. '[i' → logprob: -7.185704231262207

Token 47: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00471361493691802
    2. 'for' → logprob: -5.504713535308838
    3. '+' → logprob: -8.254714012145996
    4. '-' → logprob: -9.379714012145996
    5. ' ' → logprob: -9.754714012145996
    6. ' +' → logprob: -9.879714012145996
    7. ' -' → logprob: -10.629714012145996
    8. '**' → logprob: -10.629714012145996
    9. '[idx' → logprob: -10.629714012145996
    10. ' *' → logprob: -11.129714012145996

Token 48: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.105799600481987
    2. 'x' → logprob: -2.355799674987793
    3. ' ' → logprob: -6.105799674987793
    4. ' a' → logprob: -6.605799674987793
    5. '_' → logprob: -7.230799674987793
    6. 'a' → logprob: -7.605799674987793
    7. ' _' → logprob: -8.105799674987793
    8. ' i' → logprob: -8.480799674987793
    9. '  ' → logprob: -9.730799674987793
    10. ' v' → logprob: -9.855799674987793

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045557913836091757
    2. ',x' → logprob: -8.000455856323242
    3. ' in' → logprob: -9.750455856323242
    4. ',i' → logprob: -10.750455856323242
    5. 'i' → logprob: -11.250455856323242
    6. 'x' → logprob: -11.375455856323242
    7. ' ,' → logprob: -11.500455856323242
    8. 'in' → logprob: -12.750455856323242
    9. ' i' → logprob: -13.625455856323242
    10. ' x' → logprob: -14.250455856323242

Token 50: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31326544284820557
    2. ' x' → logprob: -1.3132654428482056
    3. '(x' → logprob: -13.313265800476074
    4. ' ' → logprob: -14.938265800476074
    5. ' (' → logprob: -15.063265800476074
    6. ',x' → logprob: -15.188265800476074
    7. '	x' → logprob: -15.188265800476074
    8. 'v' → logprob: -15.438265800476074
    9. '_x' → logprob: -15.563265800476074
    10. ' in' → logprob: -15.938265800476074

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062012944370508194
    2. 'in' → logprob: -2.8120129108428955
    3. 'enumer' → logprob: -10.562012672424316
    4. ',' → logprob: -12.187012672424316
    5. ')' → logprob: -12.562012672424316
    6. ' ' → logprob: -12.812012672424316
    7. '<|end|>' → logprob: -13.687012672424316
    8. 's' → logprob: -14.062012672424316
    9. 'In' → logprob: -14.062012672424316
    10. 'a' → logprob: -14.437012672424316

Token 52: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.4740842878818512
    2. 'enumer' → logprob: -0.9740842580795288
    3. 'en' → logprob: -13.09908390045166
    4. ' enumer' → logprob: -13.09908390045166
    5. '(en' → logprob: -13.47408390045166
    6. ')' → logprob: -14.72408390045166
    7. '.enumer' → logprob: -14.72408390045166
    8. 'Enumer' → logprob: -14.97408390045166
    9. '```' → logprob: -15.34908390045166
    10. 'enum' → logprob: -15.72408390045166

Token 53: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00021748353901784867
    2. ' a' → logprob: -8.87521743774414
    3. '(a' → logprob: -9.50021743774414
    4. ')a' → logprob: -13.12521743774414
    5. ')' → logprob: -14.62521743774414
    6. '	a' → logprob: -15.87521743774414
    7. '[a' → logprob: -17.12521743774414
    8. '_a' → logprob: -17.75021743774414
    9. 'а' → logprob: -17.75021743774414
    10. '   ' → logprob: -18.12521743774414

Token 54: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04894841089844704
    2. 'if' → logprob: -3.0489485263824463
    3. ')' → logprob: -8.048948287963867
    4. ' ' → logprob: -10.298948287963867
    5. '   ' → logprob: -12.673948287963867
    6. '	if' → logprob: -12.798948287963867
    7. '),' → logprob: -14.923948287963867
    8. '  ' → logprob: -15.048948287963867
    9. '    ' → logprob: -15.298948287963867
    10. ' )' → logprob: -15.673948287963867

Token 55: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023330846801400185
    2. 'if' → logprob: -3.7733309268951416
    3. ' ' → logprob: -9.648330688476562
    4. ')' → logprob: -11.898330688476562
    5. '	if' → logprob: -12.148330688476562
    6. ' in' → logprob: -12.398330688476562
    7. '   ' → logprob: -13.148330688476562
    8. '  ' → logprob: -14.148330688476562
    9. '    ' → logprob: -14.648330688476562
    10. 'in' → logprob: -15.023330688476562

Token 56: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31396788358688354
    2. 'i' → logprob: -1.3139679431915283
    3. '  ' → logprob: -8.68896770477295
    4. ' ' → logprob: -8.68896770477295
    5. '   ' → logprob: -8.81396770477295
    6. ' abs' → logprob: -9.43896770477295
    7. 'abs' → logprob: -10.06396770477295
    8. '    ' → logprob: -10.06396770477295
    9. '	i' → logprob: -11.43896770477295
    10. ' not' → logprob: -11.68896770477295

Token 57: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6017873883247375
    2. '!=' → logprob: -0.8517873883247375
    3. '>' → logprob: -4.601787567138672
    4. ' >' → logprob: -4.601787567138672
    5. ' ' → logprob: -6.101787567138672
    6. ' <' → logprob: -6.851787567138672
    7. '<' → logprob: -7.476787567138672
    8. ' >=' → logprob: -7.976787567138672
    9. '%' → logprob: -8.226787567138672
    10. ' <=' → logprob: -8.351787567138672

Token 58: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.3868749439716339
    2. 'idx' → logprob: -1.1368749141693115
    3. '(idx' → logprob: -13.01187515258789
    4. '	idx' → logprob: -13.76187515258789
    5. '[idx' → logprob: -15.13687515258789
    6. ' ' → logprob: -16.13687515258789
    7. '_idx' → logprob: -16.13687515258789
    8. 'index' → logprob: -16.76187515258789
    9. '.idx' → logprob: -17.01187515258789
    10. ' index' → logprob: -17.51187515258789

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014239625306800008
    2. ' )' → logprob: -9.500142097473145
    3. ')
' → logprob: -9.750142097473145
    4. ')

' → logprob: -12.125142097473145
    5. '))' → logprob: -13.750142097473145
    6. ' ' → logprob: -14.750142097473145
    7. ')return' → logprob: -15.750142097473145
    8. '),' → logprob: -15.750142097473145
    9. '<|end|>' → logprob: -15.875142097473145
    10. ' and' → logprob: -16.00014305114746

Token 60: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056814104318618774
    2. 'print' → logprob: -3.931814193725586
    3. 'for' → logprob: -4.431814193725586
    4. 'sum' → logprob: -4.681814193725586
    5. 'max' → logprob: -5.806814193725586
    6. 'a' → logprob: -6.931814193725586
    7. 'c' → logprob: -7.056814193725586
    8. ',' → logprob: -7.306814193725586
    9. 'next' → logprob: -7.306814193725586
    10. '*' → logprob: -7.306814193725586

Token 61: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37756145000457764
    2. '(sum' → logprob: -1.7525614500045776
    3. '(max' → logprob: -2.002561569213867
    4. '(len' → logprob: -6.127561569213867
    5. '(*' → logprob: -6.877561569213867
    6. '('' → logprob: -6.877561569213867
    7. '(f' → logprob: -7.002561569213867
    8. '(list' → logprob: -8.002561569213867
    9. '(sorted' → logprob: -9.002561569213867
    10. '(next' → logprob: -9.127561569213867

Token 62: 'unct' (ID: 29752)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.458778738975525
    2. '({' → logprob: -2.0837788581848145
    3. '"{' → logprob: -2.0837788581848145
    4. '(sum' → logprob: -2.5837788581848145
    5. '(max' → logprob: -2.7087788581848145
    6. '(*' → logprob: -2.8337788581848145
    7. ''{' → logprob: -2.9587788581848145
    8. '('{' → logprob: -3.0837788581848145
    9. '(b' → logprob: -3.2087788581848145
    10. '(len' → logprob: -3.5837788581848145

Token 63: 'ools' (ID: 10710)
  Prédit: 'ools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ools' → logprob: -9.805981972021982e-05
    2. 'ols' → logprob: -9.62509822845459
    3. 'ool' → logprob: -10.50009822845459
    4. 'ions' → logprob: -13.37509822845459
    5. 'o' → logprob: -13.75009822845459
    6. 'ils' → logprob: -14.37509822845459
    7. 'l' → logprob: -14.62509822845459
    8. 'als' → logprob: -15.62509822845459
    9. 'ls' → logprob: -16.000097274780273
    10. 'ol' → logprob: -16.250097274780273

Token 64: '.reduce' (ID: 49441)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14999374747276306
    2. '.operator' → logprob: -3.024993658065796
    3. '.reduce' → logprob: -3.274993658065796
    4. ' .' → logprob: -3.774993658065796
    5. '.chain' → logprob: -4.524993896484375
    6. '.groupby' → logprob: -5.274993896484375
    7. '.partial' → logprob: -6.274993896484375
    8. '.c' → logprob: -6.399993896484375
    9. '.op' → logprob: -7.149993896484375
    10. '.acc' → logprob: -7.399993896484375

Token 65: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.05497323349118233
    2. '(' → logprob: -2.9299731254577637
    3. ' (' → logprob: -10.304973602294922
    4. '(lambda' → logprob: -10.804973602294922
    5. '(
' → logprob: -11.179973602294922
    6. 'operator' → logprob: -11.929973602294922
    7. ')' → logprob: -12.429973602294922
    8. '(op' → logprob: -12.554973602294922
    9. ' operator' → logprob: -13.179973602294922
    10. ' ' → logprob: -13.429973602294922

Token 66: '.add' (ID: 1950)
  Prédit: '.mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -0.006266608368605375
    2. '.add' → logprob: -5.2562665939331055
    3. '.im' → logprob: -7.3812665939331055
    4. '.' → logprob: -8.631266593933105
    5. '.pow' → logprob: -9.756266593933105
    6. '.x' → logprob: -10.506266593933105
    7. '.matmul' → logprob: -10.631266593933105
    8. '.mult' → logprob: -11.006266593933105
    9. '.i' → logprob: -11.131266593933105
    10. '.sub' → logprob: -11.256266593933105

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00491992337629199
    2. ' ,' → logprob: -5.75492000579834
    3. ',b' → logprob: -6.37992000579834
    4. 'b' → logprob: -11.25492000579834
    5. ' b' → logprob: -11.75492000579834
    6. '`,' → logprob: -12.75492000579834
    7. ',
' → logprob: -13.00492000579834
    8. '),' → logprob: -13.12992000579834
    9. ',a' → logprob: -13.25492000579834
    10. ',x' → logprob: -13.37992000579834

Token 68: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03366033732891083
    2. ' b' → logprob: -3.408660411834717
    3. ')b' → logprob: -12.283659934997559
    4. '[b' → logprob: -13.158659934997559
    5. '(b' → logprob: -13.408659934997559
    6. ')' → logprob: -13.408659934997559
    7. 'list' → logprob: -13.783659934997559
    8. ',b' → logprob: -14.033659934997559
    9. ' itertools' → logprob: -14.408659934997559
    10. '	b' → logprob: -14.783659934997559

Token 69: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00292018405161798
    2. ')' → logprob: -5.877920150756836
    3. ')))' → logprob: -9.502920150756836
    4. '))
' → logprob: -10.502920150756836
    5. ' ))' → logprob: -11.752920150756836
    6. '),' → logprob: -13.127920150756836
    7. ',' → logprob: -13.752920150756836
    8. '()))' → logprob: -14.752920150756836
    9. ')
' → logprob: -15.127920150756836
    10. '))

' → logprob: -15.252920150756836

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10032334178686142
    2. ' ' → logprob: -2.350323438644409
    3. ' m' → logprob: -10.350323677062988
    4. ')' → logprob: -11.475323677062988
    5. '  ' → logprob: -11.475323677062988
    6. '   ' → logprob: -11.725323677062988
    7. '1' → logprob: -11.975323677062988
    8. 'm' → logprob: -11.975323677062988
    9. ' b' → logprob: -12.100323677062988
    10. ' -' → logprob: -12.100323677062988

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014811802248004824
    2. ' ' → logprob: -9.000147819519043
    3. ')' → logprob: -12.000147819519043
    4. 'a' → logprob: -12.500147819519043
    5. '-' → logprob: -12.625147819519043
    6. '))' → logprob: -12.750147819519043
    7. '1' → logprob: -13.500147819519043
    8. '"' → logprob: -13.500147819519043
    9. 'b' → logprob: -14.250147819519043
    10. 'm' → logprob: -14.375147819519043

Token 72: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06199177727103233
    2. ')' → logprob: -2.8119916915893555
    3. ')))' → logprob: -11.311991691589355
    4. '))
' → logprob: -12.186991691589355
    5. '),' → logprob: -13.061991691589355
    6. ')
' → logprob: -13.311991691589355
    7. ' ))' → logprob: -13.936991691589355
    8. ' )' → logprob: -15.186991691589355
    9. '()))' → logprob: -15.186991691589355
    10. ')+' → logprob: -15.561991691589355


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 37.14%
Précision adaptée (1ère position): 37.14%
Précision (top 10): 78.57%
================================================================================
