================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
r = int(input())
next(
    (
        sys.modules["sys"].stdout.write(x + "\n") or sys.exit()
        for x, f in zip(
            ["ABC", "ARC", "AGC"],
            [lambda r: r < 1200, lambda r: r < 2800, lambda r: True]
        )
        if f(r)
    ),
    None
)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'r' (ID: 81)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5778827667236328
    2. '.' → logprob: -0.9528827667236328
    3. 'import' → logprob: -3.952882766723633
    4. '\' → logprob: -4.827882766723633
    5. 'newline' → logprob: -5.077882766723633
    6. '
' → logprob: -5.202882766723633
    7. '<|end|>' → logprob: -5.327882766723633
    8. '```' → logprob: -5.577882766723633
    9. '' → logprob: -6.827882766723633
    10. '<|end|>' → logprob: -6.952882766723633

Token 4: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003244262421503663
    2. 'a' → logprob: -6.128244400024414
    3. 'eq' → logprob: -7.503244400024414
    4. 'an' → logprob: -8.253244400024414
    5. 'un' → logprob: -9.628244400024414
    6. 'ead' → logprob: -9.878244400024414
    7. 'ea' → logprob: -9.878244400024414
    8. '=' → logprob: -10.503244400024414
    9. 'u' → logprob: -10.628244400024414
    10. 'ec' → logprob: -12.253244400024414

Token 5: ' int' (ID: 677)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.026548875495791435
    2. ' ' → logprob: -4.401548862457275
    3. 'sys' → logprob: -4.901548862457275
    4. ' []' → logprob: -6.151548862457275
    5. ' range' → logprob: -6.401548862457275
    6. 'e' → logprob: -7.276548862457275
    7. 'range' → logprob: -7.526548862457275
    8. ' int' → logprob: -8.401549339294434
    9. 'ange' → logprob: -8.776549339294434
    10. '=sys' → logprob: -8.901549339294434

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003520277969073504
    2. '('' → logprob: -9.375351905822754
    3. '(sys' → logprob: -9.750351905822754
    4. '(r' → logprob: -9.750351905822754
    5. ''' → logprob: -10.000351905822754
    6. 'r' → logprob: -10.375351905822754
    7. '40' → logprob: -11.250351905822754
    8. '(
' → logprob: -11.375351905822754
    9. '("("' → logprob: -11.375351905822754
    10. '```' → logprob: -11.750351905822754

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05151724815368652
    2. ')' → logprob: -3.5515172481536865
    3. '()' → logprob: -4.301517486572266
    4. ''' → logprob: -5.551517486572266
    5. '(
' → logprob: -6.926517486572266
    6. '"' → logprob: -7.176517486572266
    7. '('' → logprob: -7.426517486572266
    8. '")' → logprob: -7.676517486572266
    9. '))' → logprob: -8.051517486572266
    10. '')' → logprob: -8.426517486572266

Token 8: 'next' (ID: 7311)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4246717691421509
    2. '+' → logprob: -1.6746717691421509
    3. 'for' → logprob: -2.2996716499328613
    4. '*' → logprob: -4.049671649932861
    5. 'print' → logprob: -4.674671649932861
    6. '%' → logprob: -5.299671649932861
    7. 's' → logprob: -5.549671649932861
    8. 'i' → logprob: -5.924671649932861
    9. ' if' → logprob: -6.299671649932861
    10. ')' → logprob: -6.299671649932861

Token 9: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008105874061584473
    2. '_' → logprob: -5.383105754852295
    3. ')' → logprob: -6.383105754852295
    4. '+' → logprob: -8.008106231689453
    5. 's' → logprob: -8.383106231689453
    6. '*' → logprob: -8.508106231689453
    7. ' (' → logprob: -8.633106231689453
    8. ' ' → logprob: -9.258106231689453
    9. 'for' → logprob: -9.383106231689453
    10. '()' → logprob: -9.633106231689453

Token 10: '   ' (ID: 271)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8134922385215759
    2. '(' → logprob: -1.9384922981262207
    3. '(sys' → logprob: -2.5634922981262207
    4. 'sys' → logprob: -2.6884922981262207
    5. '(range' → logprob: -2.6884922981262207
    6. 'r' → logprob: -2.6884922981262207
    7. ')' → logprob: -3.1884922981262207
    8. '(r' → logprob: -3.3134922981262207
    9. 'iter' → logprob: -3.5634922981262207
    10. '(iter' → logprob: -4.813492298126221

Token 11: ' (
' (ID: 4112)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05230092257261276
    2. 'sys' → logprob: -3.5523009300231934
    3. 'r' → logprob: -4.677300930023193
    4. 'map' → logprob: -5.677300930023193
    5. 'str' → logprob: -5.802300930023193
    6. '(range' → logprob: -6.802300930023193
    7. 'i' → logprob: -6.927300930023193
    8. 'iter' → logprob: -6.927300930023193
    9. 'x' → logprob: -7.052300930023193
    10. ')' → logprob: -7.802300930023193

Token 12: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9604968428611755
    2. 'x' → logprob: -1.3354969024658203
    3. 'r' → logprob: -1.4604969024658203
    4. 'range' → logprob: -3.2104969024658203
    5. 'sys' → logprob: -3.2104969024658203
    6. 'str' → logprob: -4.08549690246582
    7. 'n' → logprob: -5.08549690246582
    8. 'line' → logprob: -6.08549690246582
    9. '   ' → logprob: -6.33549690246582
    10. 'int' → logprob: -6.33549690246582

Token 13: ' sys' (ID: 12228)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8798893690109253
    2. 'x' → logprob: -1.0048893690109253
    3. 'r' → logprob: -2.754889488220215
    4. 'str' → logprob: -2.879889488220215
    5. 'sys' (adapté à ' sys') → logprob: -3.504889488220215
    6. 'range' → logprob: -4.254889488220215
    7. 'n' → logprob: -4.754889488220215
    8. 'line' → logprob: -4.879889488220215
    9. 'num' → logprob: -5.129889488220215
    10. '(i' → logprob: -5.754889488220215

Token 14: '.modules' (ID: 48888)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.7680532932281494
    2. '.' → logprob: -1.1430532932281494
    3. '.stdout' → logprob: -1.7680532932281494
    4. '.argv' → logprob: -3.2680532932281494
    5. '.exit' → logprob: -5.51805305480957
    6. '.stderr' → logprob: -6.26805305480957
    7. '.max' → logprob: -7.51805305480957
    8. '.version' → logprob: -7.64305305480957
    9. '.modules' → logprob: -7.89305305480957
    10. '.std' → logprob: -8.14305305480957

Token 15: '["' (ID: 2272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020488280802965164
    2. '['' → logprob: -4.520488262176514
    3. '["' → logprob: -5.645488262176514
    4. '[
' → logprob: -6.020488262176514
    5. ')' → logprob: -6.395488262176514
    6. '[r' → logprob: -8.145488739013672
    7. ''' → logprob: -8.395488739013672
    8. '"' → logprob: -8.770488739013672
    9. '.' → logprob: -9.020488739013672
    10. ',' → logprob: -9.270488739013672

Token 16: 'sys' (ID: 17324)
  Prédit: 'built'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.4162992537021637
    2. '__' → logprob: -1.4162992238998413
    3. 'sys' → logprob: -2.541299343109131
    4. '"' → logprob: -4.916299343109131
    5. 'os' → logprob: -4.916299343109131
    6. 'it' → logprob: -6.166299343109131
    7. 'math' → logprob: -7.166299343109131
    8. 'collections' → logprob: -8.291298866271973
    9. ''' → logprob: -8.791298866271973
    10. 'code' → logprob: -8.916298866271973

Token 17: '"].' (ID: 12329)
  Prédit: '"].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"].' → logprob: -0.3358263373374939
    2. '"]' → logprob: -1.4608263969421387
    3. '.' → logprob: -3.9608263969421387
    4. '."' → logprob: -4.835826396942139
    5. '"])' → logprob: -5.460826396942139
    6. '.argv' → logprob: -5.710826396942139
    7. '"]["' → logprob: -5.710826396942139
    8. '"],' → logprob: -5.710826396942139
    9. '"]]' → logprob: -6.085826396942139
    10. ']' → logprob: -6.210826396942139

Token 18: 'stdout' (ID: 90151)
  Prédit: 'modules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'modules' → logprob: -1.1272162199020386
    2. 'stdin' → logprob: -1.3772162199020386
    3. 'argv' → logprob: -1.6272162199020386
    4. 'version' → logprob: -2.002216339111328
    5. 'stdout' → logprob: -2.752216339111328
    6. 'path' → logprob: -4.752216339111328
    7. 'stderr' → logprob: -4.877216339111328
    8. 'exit' → logprob: -5.002216339111328
    9. 'max' → logprob: -6.002216339111328
    10. '__' → logprob: -7.377216339111328

Token 19: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.15718288719654083
    2. '.' → logprob: -2.0321829319000244
    3. '.readline' → logprob: -5.157182693481445
    4. ')' → logprob: -5.282182693481445
    5. '.)' → logprob: -6.282182693481445
    6. ').' → logprob: -6.907182693481445
    7. '.read' → logprob: -8.532182693481445
    8. '.
' → logprob: -9.657182693481445
    9. 'write' → logprob: -9.782182693481445
    10. ' .' → logprob: -10.157182693481445

Token 20: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18289457261562347
    2. '("("' → logprob: -2.182894468307495
    3. '('' → logprob: -3.307894468307495
    4. '(
' → logprob: -5.057894706726074
    5. '("' → logprob: -5.807894706726074
    6. '(str' → logprob: -5.932894706726074
    7. ''' → logprob: -6.557894706726074
    8. '("\' → logprob: -6.932894706726074
    9. '"' → logprob: -7.557894706726074
    10. '((' → logprob: -7.682894706726074

Token 21: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036386766005307436
    2. '))' → logprob: -6.378638744354248
    3. ')
' → logprob: -7.378638744354248
    4. '+' → logprob: -7.878638744354248
    5. '   ' → logprob: -8.62863826751709
    6. ' for' → logprob: -9.12863826751709
    7. '),' → logprob: -9.12863826751709
    8. ')\' → logprob: -9.62863826751709
    9. ')))' → logprob: -9.75363826751709
    10. 'for' → logprob: -9.87863826751709

Token 22: ' "\' (ID: 6512)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.14067396521568298
    2. ''\' → logprob: -2.265673875808716
    3. '"' → logprob: -4.390674114227295
    4. ' "\' → logprob: -4.515674114227295
    5. ''' → logprob: -6.515674114227295
    6. '\n' → logprob: -7.265674114227295
    7. ' '\' → logprob: -7.640674114227295
    8. 'r' → logprob: -8.140673637390137
    9. ' ' → logprob: -8.265673637390137
    10. ' "' → logprob: -8.390673637390137

Token 23: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10282547026872635
    2. 'n' → logprob: -2.352825403213501
    3. 'r' → logprob: -6.97782564163208
    4. '")' → logprob: -7.10282564163208
    5. 'u' → logprob: -7.60282564163208
    6. 'a' → logprob: -9.227825164794922
    7. ')' → logprob: -9.352825164794922
    8. '\' → logprob: -10.102825164794922
    9. '\r' → logprob: -10.977825164794922
    10. '   ' → logprob: -11.227825164794922

Token 24: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.17344176769256592
    2. ')' → logprob: -2.0484418869018555
    3. '"' → logprob: -3.7984418869018555
    4. ')")' → logprob: -5.6734418869018555
    5. '"))' → logprob: -6.5484418869018555
    6. '       ' → logprob: -6.9234418869018555
    7. ')"' → logprob: -7.5484418869018555
    8. '")
' → logprob: -7.6734418869018555
    9. '   ' → logprob: -7.6734418869018555
    10. '))' → logprob: -8.548441886901855

Token 25: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9247649312019348
    2. ' for' → logprob: -0.9247649312019348
    3. ')' → logprob: -2.17476487159729
    4. '   ' → logprob: -3.17476487159729
    5. 'for' → logprob: -3.29976487159729
    6. '))' → logprob: -4.924765110015869
    7. ')))' → logprob: -6.299765110015869
    8. '           ' → logprob: -6.424765110015869
    9. '),' → logprob: -7.174765110015869
    10. ' )' → logprob: -7.299765110015869

Token 26: ' sys' (ID: 12228)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3319941461086273
    2. ' x' → logprob: -1.7069941759109497
    3. 'r' → logprob: -2.83199405670166
    4. '       ' → logprob: -4.20699405670166
    5. '   ' → logprob: -5.20699405670166
    6. ' r' → logprob: -5.83199405670166
    7. 'next' → logprob: -5.95699405670166
    8. 'len' → logprob: -6.20699405670166
    9. 'input' → logprob: -6.33199405670166
    10. 'int' → logprob: -6.33199405670166

Token 27: '.exit' (ID: 27076)
  Prédit: '.modules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.modules' → logprob: -0.011234797537326813
    2. '.stdout' → logprob: -5.261234760284424
    3. '.' → logprob: -6.386234760284424
    4. '.argv' → logprob: -6.886234760284424
    5. '<|end|>' → logprob: -6.886234760284424
    6. '.stdin' → logprob: -7.386234760284424
    7. '_modules' → logprob: -7.386234760284424
    8. '.stderr' → logprob: -8.886235237121582
    9. '.Modules' → logprob: -8.886235237121582
    10. 'modules' → logprob: -9.011235237121582

Token 28: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11067034304141998
    2. '()' → logprob: -2.735670328140259
    3. '(x' → logprob: -3.485670328140259
    4. '())' → logprob: -5.860670566558838
    5. '())
' → logprob: -6.235670566558838
    6. '()
' → logprob: -6.485670566558838
    7. '(True' → logprob: -6.860670566558838
    8. '(False' → logprob: -8.11067008972168
    9. '(
' → logprob: -8.61067008972168
    10. ')' → logprob: -8.61067008972168

Token 29: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34796857833862305
    2. '       ' → logprob: -2.222968578338623
    3. 'for' → logprob: -2.222968578338623
    4. ')' → logprob: -3.347968578338623
    5. '   ' → logprob: -3.347968578338623
    6. ',' → logprob: -6.097968578338623
    7. '),' → logprob: -7.097968578338623
    8. '    ' → logprob: -7.597968578338623
    9. ')
' → logprob: -7.722968578338623
    10. '(x' → logprob: -7.847968578338623

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45695412158966064
    2. 'for' (adapté à ' for') → logprob: -1.2069541215896606
    3. '       ' → logprob: -2.831954002380371
    4. '   ' → logprob: -5.206954002380371
    5. ')' → logprob: -6.081954002380371
    6. ' ' → logprob: -8.581954002380371
    7. '           ' → logprob: -8.581954002380371
    8. ')
' → logprob: -9.081954002380371
    9. 'x' → logprob: -9.331954002380371
    10. ',' → logprob: -9.706954002380371

Token 31: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8085137605667114
    2. 'range' → logprob: -0.8085137605667114
    3. ' range' → logprob: -3.058513641357422
    4. 'str' → logprob: -3.683513641357422
    5. ' x' → logprob: -4.558513641357422
    6. 'i' → logprob: -4.933513641357422
    7. '_' → logprob: -5.058513641357422
    8. '[' → logprob: -5.683513641357422
    9. 'map' → logprob: -5.933513641357422
    10. ' str' → logprob: -6.433513641357422

Token 32: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022205570712685585
    2. 'in' → logprob: -6.252220630645752
    3. '<|end|>' → logprob: -8.752220153808594
    4. ' ' → logprob: -9.627220153808594
    5. '<|end|>' → logprob: -10.752220153808594
    6. 'range' → logprob: -11.002220153808594
    7. ')' → logprob: -11.877220153808594
    8. ' range' → logprob: -12.252220153808594
    9. '  ' → logprob: -12.752220153808594
    10. ' )' → logprob: -13.002220153808594

Token 33: ' f' (ID: 285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0406094789505005
    2. ' _' → logprob: -1.4156094789505005
    3. ' range' → logprob: -1.6656094789505005
    4. 'range' → logprob: -2.915609359741211
    5. ' sys' → logprob: -3.040609359741211
    6. ' y' → logprob: -4.415609359741211
    7. ' r' → logprob: -4.790609359741211
    8. '__' → logprob: -4.790609359741211
    9. ' enumerate' → logprob: -5.103109359741211
    10. ' in' → logprob: -5.165609359741211

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2870279550552368
    2. 'ilter' → logprob: -2.1620278358459473
    3. 'in' → logprob: -2.9120278358459473
    4. 'or' → logprob: -3.7870278358459473
    5. 'ile' → logprob: -4.162027835845947
    6. 'unction' → logprob: -4.287027835845947
    7. 'requency' → logprob: -5.537027835845947
    8. 'lag' → logprob: -6.162027835845947
    9. 'ilename' → logprob: -6.162027835845947
    10. 'inal' → logprob: -6.412027835845947

Token 35: ' zip' (ID: 16216)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3511911928653717
    2. '[' → logprob: -1.9761911630630493
    3. ' enumerate' → logprob: -3.351191282272339
    4. ' [(' → logprob: -3.476191282272339
    5. 'range' → logprob: -4.22619104385376
    6. 'enumer' → logprob: -4.47619104385376
    7. ' [' → logprob: -4.72619104385376
    8. ' zip' → logprob: -5.10119104385376
    9. '[((' → logprob: -5.10119104385376
    10. 'zip' → logprob: -5.47619104385376

Token 36: '(
' (ID: 1607)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.13946346938610077
    2. '(' → logprob: -2.264463424682617
    3. '(r' → logprob: -4.014463424682617
    4. '([' → logprob: -5.389463424682617
    5. '(['' → logprob: -7.014463424682617
    6. '((' → logprob: -7.514463424682617
    7. '(sys' → logprob: -7.639463424682617
    8. '(list' → logprob: -7.639463424682617
    9. '(
' → logprob: -8.139463424682617
    10. '(["' → logprob: -8.764463424682617

Token 37: '           ' (ID: 352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1321951299905777
    2. '(range' → logprob: -2.757195234298706
    3. '[' → logprob: -3.882195234298706
    4. ' range' → logprob: -4.007194995880127
    5. 'map' → logprob: -4.632194995880127
    6. '["' → logprob: -5.632194995880127
    7. '(' → logprob: -6.882194995880127
    8. '['' → logprob: -6.882194995880127
    9. 'sys' → logprob: -7.382194995880127
    10. 'list' → logprob: -7.507194995880127

Token 38: ' ["' (ID: 9129)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10602102428674698
    2. 'map' → logprob: -3.106020927429199
    3. '["' (adapté à ' ["') → logprob: -4.231020927429199
    4. '[' → logprob: -4.231020927429199
    5. ' range' → logprob: -4.981020927429199
    6. 'sys' → logprob: -5.231020927429199
    7. '['' → logprob: -5.606020927429199
    8. '(range' → logprob: -6.106020927429199
    9. 'list' → logprob: -6.981020927429199
    10. 'sorted' → logprob: -7.106020927429199

Token 39: 'ABC' (ID: 44197)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.43879270553588867
    2. '"' → logprob: -2.3137927055358887
    3. 'map' → logprob: -3.8137927055358887
    4. 'sys' → logprob: -3.9387927055358887
    5. 'a' → logprob: -4.188792705535889
    6. ''' → logprob: -4.313792705535889
    7. 'Hello' → logprob: -4.563792705535889
    8. '["' → logprob: -4.626292705535889
    9. 'abc' → logprob: -4.751292705535889
    10. '['' → logprob: -4.938792705535889

Token 40: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.06075698509812355
    2. '","' → logprob: -4.060757160186768
    3. '"' → logprob: -4.310757160186768
    4. 'DE' → logprob: -4.435757160186768
    5. '"]' → logprob: -5.685757160186768
    6. 'D' → logprob: -5.685757160186768
    7. 'DEF' → logprob: -6.310757160186768
    8. '"],' → logprob: -6.560757160186768
    9. '"*' → logprob: -6.560757160186768
    10. 'def' → logprob: -6.935757160186768

Token 41: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.233599066734314
    2. '["' → logprob: -1.608599066734314
    3. '"' → logprob: -1.733599066734314
    4. ' [' → logprob: -1.983599066734314
    5. '[' → logprob: -2.6085991859436035
    6. ' ["' → logprob: -2.6085991859436035
    7. 'range' → logprob: -3.6085991859436035
    8. ' range' → logprob: -5.1085991859436035
    9. '    ' → logprob: -6.2335991859436035
    10. 'def' → logprob: -6.3585991859436035

Token 42: 'ARC' (ID: 64758)
  Prédit: 'DEF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEF' → logprob: -0.2514607608318329
    2. '"' → logprob: -2.0014607906341553
    3. 'ABC' → logprob: -4.126460552215576
    4. 'BCD' → logprob: -4.251460552215576
    5. 'XYZ' → logprob: -4.376460552215576
    6. 'B' → logprob: -5.001460552215576
    7. '"B' → logprob: -5.626460552215576
    8. 'def' → logprob: -5.626460552215576
    9. '123' → logprob: -6.001460552215576
    10. '"C' → logprob: -6.001460552215576

Token 43: '",' (ID: 672)
  Prédit: '"]]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]]' → logprob: -1.8629323244094849
    2. '"]' → logprob: -2.1129322052001953
    3. '"],' → logprob: -2.3629322052001953
    4. '086' → logprob: -2.6129322052001953
    5. 'A' → logprob: -2.7379322052001953
    6. '"' → logprob: -2.8629322052001953
    7. '"A' → logprob: -2.8629322052001953
    8. '"C' → logprob: -3.7379322052001953
    9. '")]' → logprob: -4.112932205200195
    10. '126' → logprob: -4.112932205200195

Token 44: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.030756572261452675
    2. ' "' → logprob: -3.9057564735412598
    3. '"A' → logprob: -5.78075647354126
    4. '"D' → logprob: -6.03075647354126
    5. '"AT' → logprob: -6.53075647354126
    6. '["' → logprob: -7.28075647354126
    7. '"B' → logprob: -7.53075647354126
    8. '"T' → logprob: -8.155756950378418
    9. '   ' → logprob: -8.405756950378418
    10. '"S' → logprob: -8.780756950378418

Token 45: 'AG' (ID: 2971)
  Prédit: 'AG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AG' → logprob: -0.002431547734886408
    2. 'ABC' → logprob: -7.252431392669678
    3. 'A' → logprob: -7.877431392669678
    4. ' AG' → logprob: -8.002431869506836
    5. 'AH' → logprob: -8.502431869506836
    6. 'ag' → logprob: -9.127431869506836
    7. 'BCD' → logprob: -9.127431869506836
    8. 'BC' → logprob: -9.627431869506836
    9. 'AGN' → logprob: -9.877431869506836
    10. 'ARC' → logprob: -10.377431869506836

Token 46: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001402621390298009
    2. 'CODE' → logprob: -8.751402854919434
    3. 'I' → logprob: -9.063902854919434
    4. 'CTest' → logprob: -9.126402854919434
    5. 'Ｃ' → logprob: -9.376402854919434
    6. 'CO' → logprob: -9.751402854919434
    7. 'CT' → logprob: -9.876402854919434
    8. '```' → logprob: -10.001402854919434
    9. 'Code' → logprob: -10.251402854919434
    10. ' C' → logprob: -10.313902854919434

Token 47: '"],
' (ID: 15666)
  Prédit: '"],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"],' → logprob: -0.3775971531867981
    2. '",' → logprob: -1.2525970935821533
    3. '"])' → logprob: -4.627597332000732
    4. '"]),' → logprob: -5.127597332000732
    5. '"),' → logprob: -5.627597332000732
    6. '"' → logprob: -5.627597332000732
    7. '"]' → logprob: -5.877597332000732
    8. '"],
' → logprob: -7.127597332000732
    9. ',' → logprob: -7.377597332000732
    10. '],' → logprob: -9.002596855163574

Token 48: '           ' (ID: 352)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38694512844085693
    2. 'range' → logprob: -1.386945128440857
    3. ' [' → logprob: -3.5119452476501465
    4. ' ["' → logprob: -4.8869452476501465
    5. '[' → logprob: -4.8869452476501465
    6. ' lambda' → logprob: -5.6369452476501465
    7. '["' → logprob: -5.7619452476501465
    8. '   ' → logprob: -5.8869452476501465
    9. '(range' → logprob: -6.0119452476501465
    10. ' ['' → logprob: -6.5119452476501465

Token 49: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6331910490989685
    2. ' range' → logprob: -1.1331911087036133
    3. '[' (adapté à ' [') → logprob: -2.5081911087036133
    4. ' [' → logprob: -3.6331911087036133
    5. '(range' → logprob: -4.258191108703613
    6. 'map' → logprob: -4.758191108703613
    7. ' map' → logprob: -5.258191108703613
    8. '   ' → logprob: -5.758191108703613
    9. '[
' → logprob: -6.258191108703613
    10. '[(' → logprob: -7.383191108703613

Token 50: 'lambda' (ID: 35280)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.45082366466522217
    2. 'lambda' → logprob: -1.3258236646652222
    3. ' lambda' → logprob: -3.7008237838745117
    4. '1' → logprob: -4.575823783874512
    5. '(lambda' → logprob: -4.700823783874512
    6. 'range' → logprob: -4.950823783874512
    7. '0' → logprob: -5.325823783874512
    8. 'abs' → logprob: -5.450823783874512
    9. '100' → logprob: -5.575823783874512
    10. ' r' → logprob: -5.575823783874512

Token 51: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1437917947769165
    2. 'lambda' → logprob: -1.3937917947769165
    3. ' lambda' → logprob: -1.8937917947769165
    4. 'x' → logprob: -2.018791675567627
    5. ' r' → logprob: -3.143791675567627
    6. ' x' → logprob: -3.268791675567627
    7. 'i' → logprob: -4.143791675567627
    8. 'n' → logprob: -4.643791675567627
    9. ' i' → logprob: -5.518791675567627
    10. 's' → logprob: -5.643791675567627

Token 52: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04577513784170151
    2. '=' → logprob: -4.170774936676025
    3. '=r' → logprob: -4.170774936676025
    4. ' :' → logprob: -4.795774936676025
    5. ':r' → logprob: -6.545774936676025
    6. '=i' → logprob: -6.920774936676025
    7. ',' → logprob: -7.420774936676025
    8. '=lambda' → logprob: -8.045775413513184
    9. '=int' → logprob: -8.420775413513184
    10. ':
' → logprob: -8.670775413513184

Token 53: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8264212608337402
    2. 'str' → logprob: -1.3264212608337402
    3. ' str' → logprob: -2.0764212608337402
    4. ' r' → logprob: -2.2014212608337402
    5. 'f' → logprob: -3.7014212608337402
    6. ' f' → logprob: -4.57642126083374
    7. 'x' → logprob: -5.07642126083374
    8. '"' → logprob: -5.57642126083374
    9. ' x' → logprob: -6.07642126083374
    10. ' ' → logprob: -6.57642126083374

Token 54: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0610625743865967
    2. '==' → logprob: -1.5610625743865967
    3. ' >=' → logprob: -1.9360625743865967
    4. '%' → logprob: -2.4360625743865967
    5. ' %' → logprob: -2.8110625743865967
    6. '>=' → logprob: -3.0610625743865967
    7. '+' → logprob: -3.3110625743865967
    8. ' <' → logprob: -3.9360625743865967
    9. ' +' → logprob: -4.311062812805176
    10. ' >' → logprob: -4.436062812805176

Token 55: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.030341625213623
    2. ' ' → logprob: -1.030341625213623
    3. '2' → logprob: -2.280341625213623
    4. '1' → logprob: -2.780341625213623
    5. '10' → logprob: -3.280341625213623
    6. '4' → logprob: -3.405341625213623
    7. '100' → logprob: -4.405341625213623
    8. '5' → logprob: -4.530341625213623
    9. '20' → logprob: -5.905341625213623
    10. '6' → logprob: -5.905341625213623

Token 56: '120' (ID: 6106)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -1.5817694664001465
    2. '1' → logprob: -1.9567694664001465
    3. '10' → logprob: -2.0817694664001465
    4. '100' → logprob: -2.2067694664001465
    5. '30' → logprob: -2.3317694664001465
    6. '2' → logprob: -2.3317694664001465
    7. '3' → logprob: -2.8317694664001465
    8. '120' → logprob: -3.2067694664001465
    9. '400' → logprob: -3.3317694664001465
    10. '42' → logprob: -4.2067694664001465

Token 57: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03223779797554016
    2. ' ,' → logprob: -4.157238006591797
    3. ',
' → logprob: -4.657238006591797
    4. '0' → logprob: -5.907238006591797
    5. ',

' → logprob: -7.907238006591797
    6. ' ' → logprob: -7.907238006591797
    7. ' and' → logprob: -8.032238006591797
    8. '00' → logprob: -8.532238006591797
    9. '),' → logprob: -8.532238006591797
    10. ' +' → logprob: -8.657238006591797

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013101872988045216
    2. '),' → logprob: -5.388102054595947
    3. ',
' → logprob: -5.763102054595947
    4. ' ,' → logprob: -5.888102054595947
    5. ')' → logprob: -7.013102054595947
    6. '],' → logprob: -8.388101577758789
    7. ',r' → logprob: -8.388101577758789
    8. ',

' → logprob: -8.513101577758789
    9. '),
' → logprob: -8.888101577758789
    10. '   ' → logprob: -9.388101577758789

Token 59: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.181126669049263
    2. 'lambda' → logprob: -1.8061267137527466
    3. '           ' → logprob: -7.181126594543457
    4. '    ' → logprob: -8.681126594543457
    5. '(lambda' → logprob: -9.306126594543457
    6. '            ' → logprob: -9.806126594543457
    7. '          ' → logprob: -9.806126594543457
    8. '   ' → logprob: -9.931126594543457
    9. '        ' → logprob: -10.306126594543457
    10. ' ' → logprob: -10.556126594543457

Token 60: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08843088895082474
    2. ' r' → logprob: -2.588430881500244
    3. '120' → logprob: -5.588430881500244
    4. ' ' → logprob: -5.713430881500244
    5. '100' → logprob: -7.588430881500244
    6. '110' → logprob: -8.463431358337402
    7. '150' → logprob: -8.588431358337402
    8. '0' → logprob: -8.713431358337402
    9. '130' → logprob: -9.088431358337402
    10. '1' → logprob: -9.213431358337402

Token 61: ':' (ID: 25)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.32340118288993835
    2. ':' → logprob: -1.8234012126922607
    3. ' >=' → logprob: -2.5734012126922607
    4. '<' → logprob: -3.5734012126922607
    5. '>=' → logprob: -5.323400974273682
    6. ' >' → logprob: -5.448400974273682
    7. '>' → logprob: -7.573400974273682
    8. ' <=' → logprob: -7.948400974273682
    9. ' ' → logprob: -8.82340145111084
    10. '<=' → logprob: -10.13590145111084

Token 62: ' r' (ID: 428)
  Prédit: '120'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '120' → logprob: -0.4839728772640228
    2. 'r' → logprob: -1.4839729070663452
    3. '400' → logprob: -2.2339727878570557
    4. '800' → logprob: -3.3589727878570557
    5. ' ' → logprob: -4.983973026275635
    6. '100' → logprob: -6.108973026275635
    7. '160' → logprob: -6.858973026275635
    8. '150' → logprob: -7.483973026275635
    9. '600' → logprob: -7.483973026275635
    10. '200' → logprob: -7.733973026275635

Token 63: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8481796383857727
    2. ' >=' → logprob: -1.348179578781128
    3. '<' → logprob: -1.598179578781128
    4. '>=' → logprob: -2.223179578781128
    5. ' >' → logprob: -7.223179817199707
    6. '>' → logprob: -7.348179817199707
    7. ' ' → logprob: -10.098179817199707
    8. '<=' → logprob: -10.410679817199707
    9. ' <=' → logprob: -10.598179817199707
    10. '<int' → logprob: -11.535679817199707

Token 64: ' ' (ID: 220)
  Prédit: '280'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '280' → logprob: -0.029089434072375298
    2. '220' → logprob: -4.404089450836182
    3. '190' → logprob: -4.654089450836182
    4. '200' → logprob: -5.654089450836182
    5. ' ' → logprob: -6.279089450836182
    6. '240' → logprob: -8.029088973999023
    7. '   ' → logprob: -8.029088973999023
    8. '279' → logprob: -8.779088973999023
    9. '160' → logprob: -9.154088973999023
    10. '210' → logprob: -9.654088973999023

Token 65: '280' (ID: 17713)
  Prédit: '280'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '280' → logprob: -0.07074811309576035
    2. '190' → logprob: -2.8207480907440186
    3. '220' → logprob: -5.570748329162598
    4. '200' → logprob: -5.945748329162598
    5. '240' → logprob: -7.320748329162598
    6. '210' → logprob: -8.445748329162598
    7. '279' → logprob: -8.445748329162598
    8. '28' → logprob: -8.445748329162598
    9. ' ' → logprob: -8.695748329162598
    10. '   ' → logprob: -9.070748329162598

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. '000' → logprob: -13.625011444091797
    3. '7' → logprob: -13.687511444091797
    4. '1' → logprob: -13.812511444091797
    5. '00' → logprob: -13.875011444091797
    6. '   ' → logprob: -13.937511444091797
    7. '400' → logprob: -14.125011444091797
    8. '4' → logprob: -14.187511444091797
    9. '8' → logprob: -14.250011444091797
    10. '       ' → logprob: -14.562511444091797

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004303595516830683
    2. ' ,' → logprob: -5.629303455352783
    3. '),' → logprob: -8.004303932189941
    4. '+' → logprob: -9.879303932189941
    5. '],' → logprob: -10.004303932189941
    6. ')' → logprob: -10.254303932189941
    7. ',r' → logprob: -10.254303932189941
    8. ' +' → logprob: -10.629303932189941
    9. ' or' → logprob: -10.879303932189941
    10. '+,' → logprob: -11.004303932189941

Token 68: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.16051200032234192
    2. 'lambda' → logprob: -1.9105119705200195
    3. '           ' → logprob: -9.53551197052002
    4. '(lambda' → logprob: -9.91051197052002
    5. '    ' → logprob: -10.41051197052002
    6. ' ' → logprob: -10.41051197052002
    7. '   ' → logprob: -10.66051197052002
    8. '=lambda' → logprob: -10.78551197052002
    9. '            ' → logprob: -11.41051197052002
    10. 'r' → logprob: -11.97301197052002

Token 69: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2812406122684479
    2. 'r' → logprob: -1.4062405824661255
    3. ' ' → logprob: -10.531240463256836
    4. '   ' → logprob: -10.656240463256836
    5. 'x' → logprob: -12.218740463256836
    6. '  ' → logprob: -12.906240463256836
    7. '0' → logprob: -12.968740463256836
    8. ' ' → logprob: -13.281240463256836
    9. 'lambda' → logprob: -13.343740463256836
    10. ' lambda' → logprob: -13.406240463256836

Token 70: ':' (ID: 25)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8192415237426758
    2. ':' → logprob: -1.4442415237426758
    3. ' >' → logprob: -2.194241523742676
    4. '<' → logprob: -2.444241523742676
    5. '>' → logprob: -2.819241523742676
    6. ' >=' → logprob: -3.069241523742676
    7. '>=' → logprob: -4.194241523742676
    8. '   ' → logprob: -6.944241523742676
    9. ' <=' → logprob: -6.944241523742676
    10. ' ' → logprob: -7.194241523742676

Token 71: ' True' (ID: 6432)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013905025087296963
    2. ' r' → logprob: -5.138905048370361
    3. '280' → logprob: -5.263905048370361
    4. '300' → logprob: -7.263905048370361
    5. '120' → logprob: -7.888905048370361
    6. '320' → logprob: -8.388904571533203
    7. '400' → logprob: -8.388904571533203
    8. ' ' → logprob: -8.638904571533203
    9. '290' → logprob: -8.888904571533203
    10. '360' → logprob: -9.013904571533203

Token 72: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6501002907752991
    2. ')
' → logprob: -1.2751002311706543
    3. '       ' → logprob: -2.6501002311706543
    4. '))' → logprob: -3.6501002311706543
    5. ']' → logprob: -4.025100231170654
    6. ')))' → logprob: -4.025100231170654
    7. ']
' → logprob: -4.525100231170654
    8. '])' → logprob: -4.650100231170654
    9. ']))' → logprob: -4.775100231170654
    10. '),' → logprob: -5.275100231170654

Token 73: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2171851396560669
    2. '       ' → logprob: -2.0921850204467773
    3. ')))' → logprob: -3.7171850204467773
    4. '           ' → logprob: -3.9671850204467773
    5. '))' → logprob: -4.092185020446777
    6. '   ' → logprob: -5.342185020446777
    7. ')
' → logprob: -5.592185020446777
    8. '))))' → logprob: -7.467185020446777
    9. '               ' → logprob: -7.592185020446777
    10. ',' → logprob: -8.092185020446777

Token 74: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04621274769306183
    2. ')
' (adapté à ' )
') → logprob: -3.546212673187256
    3. '       ' → logprob: -5.046212673187256
    4. '   ' → logprob: -5.796212673187256
    5. '           ' → logprob: -6.296212673187256
    6. ' if' → logprob: -6.421212673187256
    7. '))' → logprob: -7.296212673187256
    8. '),' → logprob: -7.546212673187256
    9. ',' → logprob: -7.921212673187256
    10. ')

' → logprob: -8.171213150024414

Token 75: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3866285979747772
    2. 'if' → logprob: -1.7616286277770996
    3. ')' → logprob: -2.2616286277770996
    4. '       ' → logprob: -3.3866286277770996
    5. '   ' → logprob: -4.6366286277771
    6. '))' → logprob: -8.136628150939941
    7. ')
' → logprob: -8.636628150939941
    8. '           ' → logprob: -8.761628150939941
    9. '),' → logprob: -8.886628150939941
    10. ')))' → logprob: -9.136628150939941

Token 76: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.34550565481185913
    2. ' if' → logprob: -1.345505714416504
    3. '       ' → logprob: -3.720505714416504
    4. '   ' → logprob: -5.470505714416504
    5. ')' → logprob: -5.845505714416504
    6. '           ' → logprob: -8.470505714416504
    7. ' ' → logprob: -9.345505714416504
    8. ')
' → logprob: -10.970505714416504
    9. '),' → logprob: -11.470505714416504
    10. '):' → logprob: -11.470505714416504

Token 77: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1078934371471405
    2. ' f' → logprob: -2.357893466949463
    3. ' not' → logprob: -5.232893466949463
    4. 'not' → logprob: -6.107893466949463
    5. ' ' → logprob: -10.607892990112305
    6. ')' → logprob: -11.232892990112305
    7. '(f' → logprob: -11.295392990112305
    8. ' all' → logprob: -11.857892990112305
    9. '   ' → logprob: -12.170392990112305
    10. '	f' → logprob: -12.420392990112305

Token 78: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00020783171930816025
    2. '(' → logprob: -9.000207901000977
    3. ')(' → logprob: -9.500207901000977
    4. ')' → logprob: -12.000207901000977
    5. ' (' → logprob: -12.750207901000977
    6. '(
' → logprob: -15.500207901000977
    7. 'r' → logprob: -16.125207901000977
    8. '](' → logprob: -17.125207901000977
    9. ')(
' → logprob: -17.500207901000977
    10. '(x' → logprob: -17.750207901000977

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031640298664569855
    2. '))' → logprob: -3.5316402912139893
    3. ')
' → logprob: -6.656640529632568
    4. ')))' → logprob: -7.531640529632568
    5. '))
' → logprob: -10.78164005279541
    6. ' )' → logprob: -10.90664005279541
    7. ' ' → logprob: -12.03164005279541
    8. ')

' → logprob: -12.15664005279541
    9. ')
' → logprob: -13.53164005279541
    10. ' ))' → logprob: -13.65664005279541

Token 80: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08711341768503189
    2. '   ' → logprob: -2.837113380432129
    3. '))' → logprob: -4.712113380432129
    4. '),' → logprob: -4.962113380432129
    5. ')
' → logprob: -5.337113380432129
    6. '       ' → logprob: -5.712113380432129
    7. ')))' → logprob: -8.712113380432129
    8. ')[' → logprob: -8.962113380432129
    9. '),
' → logprob: -9.087113380432129
    10. '):' → logprob: -9.962113380432129

Token 81: ' ),
' (ID: 4954)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08836619555950165
    2. '   ' → logprob: -3.3383662700653076
    3. ')
' → logprob: -3.5883662700653076
    4. '))' → logprob: -4.3383660316467285
    5. '       ' → logprob: -5.4633660316467285
    6. '),' → logprob: -6.4633660316467285
    7. ')[' → logprob: -7.2133660316467285
    8. ')))' → logprob: -7.3383660316467285
    9. ').' → logprob: -8.088366508483887
    10. '))
' → logprob: -8.963366508483887

Token 82: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5376198291778564
    2. ')' → logprob: -0.9126198291778564
    3. '0' → logprob: -4.912619590759277
    4. ' ' → logprob: -5.787619590759277
    5. ')
' → logprob: -6.037619590759277
    6. 'None' → logprob: -7.662619590759277
    7. '2' → logprob: -7.912619590759277
    8. '))' → logprob: -8.787619590759277
    9. '  ' → logprob: -8.912619590759277
    10. '   ' → logprob: -8.912619590759277

Token 83: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' (adapté à ' None') → logprob: -0.5621822476387024
    2. '"' → logprob: -1.1871821880340576
    3. ')' → logprob: -2.9371821880340576
    4. '""' → logprob: -3.0621821880340576
    5. ' None' → logprob: -4.562182426452637
    6. ''' → logprob: -5.937182426452637
    7. '''' → logprob: -6.187182426452637
    8. '")' → logprob: -6.187182426452637
    9. '   ' → logprob: -6.312182426452637
    10. '"A' → logprob: -6.812182426452637

Token 84: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010805641068145633
    2. ')
' → logprob: -6.876080513000488
    3. ' )' → logprob: -10.626080513000488
    4. '
' → logprob: -12.501080513000488
    5. ' ' → logprob: -12.751080513000488
    6. ')

' → logprob: -12.876080513000488
    7. '**' → logprob: -13.126080513000488
    8. '#' → logprob: -13.376080513000488
    9. '0' → logprob: -13.501080513000488
    10. '```' → logprob: -13.501080513000488

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9160102712921798e-05
    2. ')
' → logprob: -10.625029563903809
    3. ' )' → logprob: -12.750029563903809
    4. ')#' → logprob: -14.625029563903809
    5. '```' → logprob: -15.250029563903809
    6. '<|end|>' → logprob: -15.500029563903809
    7. ')

' → logprob: -16.125028610229492
    8. ')`' → logprob: -16.125028610229492
    9. '#' → logprob: -16.250028610229492
    10. ')return' → logprob: -16.250028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 83
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 59
Précision stricte (1ère position): 24.10%
Précision adaptée (1ère position): 26.51%
Précision (top 10): 71.08%
================================================================================
