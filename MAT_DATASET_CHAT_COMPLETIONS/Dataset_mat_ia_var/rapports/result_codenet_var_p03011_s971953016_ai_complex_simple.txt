================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce
from itertools import combinations, chain

def main():
    sys.setrecursionlimit(10**6)
    mod = 10**9 + 7
    inf = float('inf')

    input = lambda: sys.stdin.readline().rstrip()
    ii = lambda: int(input())
    mi = lambda: map(int, input().split())
    mi_0 = lambda: map(lambda x: int(x)-1, input().split())
    lmi = lambda: list(map(int, input().split()))
    lmi_0 = lambda: list(map(lambda x: int(x)-1, input().split()))
    li = lambda: list(input())

    def all_pairs(lst):
        # Generates all 2-combinations and picks the one with smallest sum
        return min((pair for pair in combinations(lst, 2)), key=sum)

    L = lmi()
    min_pair = all_pairs(L)
    s = reduce(int.__add__, min_pair)
    # unnecessarily decomposes sum with chain and tuple
    print(tuple(chain([s],))[0])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.007331990636885166
    2. 'os' → logprob: -6.257331848144531
    3. ' math' → logprob: -6.257331848144531
    4. ' collections' → logprob: -6.882331848144531
    5. ' ' → logprob: -7.132331848144531
    6. ' typing' → logprob: -7.882331848144531
    7. ' pathlib' → logprob: -8.007331848144531
    8. ' datetime' → logprob: -9.132331848144531
    9. ' Py' → logprob: -9.257331848144531
    10. 'collections' → logprob: -9.382331848144531

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2277756780385971
    2. 'import' → logprob: -1.6027756929397583
    3. '.' → logprob: -6.727775573730469
    4. ' ' → logprob: -7.352775573730469
    5. '_import' → logprob: -7.977775573730469
    6. '_' → logprob: -9.477775573730469
    7. '	import' → logprob: -10.102775573730469
    8. '.import' → logprob: -11.102775573730469
    9. ' .' → logprob: -11.477775573730469
    10. '```' → logprob: -11.602775573730469

Token 6: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.38581740856170654
    2. 'partial' → logprob: -1.8858174085617065
    3. ' wraps' → logprob: -2.010817527770996
    4. 'l' → logprob: -4.135817527770996
    5. ' l' → logprob: -5.010817527770996
    6. ' partial' → logprob: -5.135817527770996
    7. 'reduce' → logprob: -5.260817527770996
    8. 'cmp' → logprob: -8.135817527770996
    9. ' ' → logprob: -8.760817527770996
    10. 'wr' → logprob: -9.385817527770996

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.46892404556274414
    2. ',' → logprob: -1.8439240455627441
    3. '(' → logprob: -2.718924045562744
    4. '\n' → logprob: -2.968924045562744
    5. '\' → logprob: -3.093924045562744
    6. '.' → logprob: -3.968924045562744
    7. '```' → logprob: -4.968924045562744
    8. '' → logprob: -5.218924045562744
    9. ' ' → logprob: -5.468924045562744
    10. 'def' → logprob: -5.593924045562744

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3334898352622986
    2. ',' → logprob: -1.5834898948669434
    3. '\n' → logprob: -3.9584898948669434
    4. '```' → logprob: -3.9584898948669434
    5. 'def' → logprob: -4.708489894866943
    6. '\' → logprob: -4.708489894866943
    7. '(' → logprob: -5.458489894866943
    8. ' 

' → logprob: -5.458489894866943
    9. ',

' → logprob: -6.208489894866943
    10. '  

' → logprob: -6.458489894866943

Token 9: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.3864264488220215
    2. ' itertools' → logprob: -1.8864264488220215
    3. ' math' → logprob: -2.1364264488220215
    4. 'operator' → logprob: -3.6364264488220215
    5. ' collections' → logprob: -4.0114264488220215
    6. ' os' → logprob: -5.7614264488220215
    7. 'math' → logprob: -6.3864264488220215
    8. ' ' → logprob: -7.5114264488220215
    9. 'collections' → logprob: -7.7614264488220215
    10. ' typing' → logprob: -8.13642692565918

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04381394758820534
    2. 'import' → logprob: -3.168813943862915
    3. '.' → logprob: -7.293814182281494
    4. ' .' → logprob: -9.918813705444336
    5. '.import' → logprob: -10.293813705444336
    6. '	import' → logprob: -10.918813705444336
    7. ' ' → logprob: -11.043813705444336
    8. '.im' → logprob: -12.793813705444336
    9. '<|end|>' → logprob: -12.793813705444336
    10. '_import' → logprob: -13.043813705444336

Token 11: ' combinations' (ID: 43835)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.45515212416648865
    2. 'group' → logprob: -1.955152153968811
    3. ' cycle' → logprob: -2.4551520347595215
    4. 'count' → logprob: -2.9551520347595215
    5. 'cycle' → logprob: -3.8301520347595215
    6. ' chain' → logprob: -3.8301520347595215
    7. ' count' → logprob: -4.8301520347595215
    8. ' permutations' → logprob: -5.0801520347595215
    9. 'chain' → logprob: -5.2051520347595215
    10. 'per' → logprob: -5.3301520347595215

Token 12: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6772924065589905
    2. '\n' → logprob: -1.6772923469543457
    3. '```' → logprob: -2.5522923469543457
    4. '\' → logprob: -2.6772923469543457
    5. '(' → logprob: -2.9272923469543457
    6. 'def' → logprob: -3.5522923469543457
    7. ',' → logprob: -3.6772923469543457
    8. '(
' → logprob: -4.427292346954346
    9. '<|end|>' → logprob: -5.052292346954346
    10. '
' → logprob: -5.302292346954346

Token 13: ' chain' (ID: 13464)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.42620983719825745
    2. ' permutations' → logprob: -1.801209807395935
    3. 'product' → logprob: -2.4262099266052246
    4. 'chain' → logprob: -3.0512099266052246
    5. ' product' → logprob: -4.176209926605225
    6. ' chain' → logprob: -4.426209926605225
    7. 'group' → logprob: -4.801209926605225
    8. 'com' → logprob: -5.301209926605225
    9. 'count' → logprob: -6.426209926605225
    10. ' group' → logprob: -6.426209926605225

Token 14: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3739268779754639
    2. ',' → logprob: -1.7489268779754639
    3. 'def' → logprob: -1.9989268779754639
    4. '\n' → logprob: -2.123926877975464
    5. '```' → logprob: -2.623926877975464
    6. '
' → logprob: -2.873926877975464
    7. '<|end|>' → logprob: -2.998926877975464
    8. '(' → logprob: -3.373926877975464
    9. '(
' → logprob: -3.748926877975464
    10. '

' → logprob: -3.873926877975464

Token 15: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.032152384519577026
    2. '(
' → logprob: -4.53215217590332
    3. '(' → logprob: -5.15715217590332
    4. ',' → logprob: -5.40715217590332
    5. '#' → logprob: -6.03215217590332
    6. 'import' → logprob: -6.40715217590332
    7. '\' → logprob: -6.53215217590332
    8. '```' → logprob: -6.78215217590332
    9. ',
' → logprob: -6.90715217590332
    10. '\n' → logprob: -7.90715217590332

Token 16: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3395775258541107
    2. '_' → logprob: -1.339577555656433
    3. ' factorial' → logprob: -4.339577674865723
    4. ' _' → logprob: -5.839577674865723
    5. ' calculate' → logprob: -6.089577674865723
    6. ' space' → logprob: -6.214577674865723
    7. ' reduce' → logprob: -7.339577674865723
    8. ' process' → logprob: -7.464577674865723
    9. ' max' → logprob: -7.589577674865723
    10. ' factor' → logprob: -7.839577674865723

Token 17: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018255965551361442
    2. '():' → logprob: -7.25182580947876
    3. ':' → logprob: -7.37682580947876
    4. '(:' → logprob: -8.626825332641602
    5. ' (' → logprob: -9.251825332641602
    6. '(
' → logprob: -9.251825332641602
    7. '):' → logprob: -10.376825332641602
    8. '```' → logprob: -10.876825332641602
    9. '(`' → logprob: -11.626825332641602
    10. ',' → logprob: -12.251825332641602

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0332917757332325
    2. '    ' → logprob: -4.408291816711426
    3. '(' → logprob: -4.658291816711426
    4. ' ' → logprob: -5.783291816711426
    5. '    
' → logprob: -5.908291816711426
    6. '\' → logprob: -6.033291816711426
    7. ':' → logprob: -7.533291816711426
    8. '```' → logprob: -7.783291816711426
    9. '(n' → logprob: -8.158291816711426
    10. '     
' → logprob: -8.658291816711426

Token 19: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.678268313407898
    2. ' ' → logprob: -1.803268313407898
    3. '    ' → logprob: -2.4282684326171875
    4. 'n' → logprob: -2.6782684326171875
    5. ' n' → logprob: -2.8032684326171875
    6. ' lines' → logprob: -4.0532684326171875
    7. 'data' → logprob: -4.1782684326171875
    8. ' data' → logprob: -4.3032684326171875
    9. ' pass' → logprob: -4.3032684326171875
    10. ' input' → logprob: -4.8032684326171875

Token 20: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07123490422964096
    2. ' .' → logprob: -3.071234941482544
    3. '.argv' → logprob: -4.321234703063965
    4. '.exit' → logprob: -5.196234703063965
    5. '.stdin' → logprob: -6.321234703063965
    6. '.stdout' → logprob: -6.446234703063965
    7. '.stderr' → logprob: -9.821234703063965
    8. '.import' → logprob: -10.321234703063965
    9. ' ' → logprob: -11.071234703063965
    10. '.readline' → logprob: -11.446234703063965

Token 21: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.007819313555955887
    2. 'execution' → logprob: -6.007819175720215
    3. 'trace' → logprob: -6.632819175720215
    4. 's' → logprob: -7.132819175720215
    5. 'limit' → logprob: -7.507819175720215
    6. '_rec' → logprob: -7.757819175720215
    7. '_' → logprob: -7.882819175720215
    8. 'switch' → logprob: -8.382819175720215
    9. '_execution' → logprob: -8.507819175720215
    10. 'ex' → logprob: -8.757819175720215

Token 22: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0011408114805817604
    2. 'urs' → logprob: -7.376140594482422
    3. 'ursive' → logprob: -8.376140594482422
    4. 'limit' → logprob: -9.376140594482422
    5. '_limit' → logprob: -9.751140594482422
    6. 'ur' → logprob: -9.751140594482422
    7. 'ursor' → logprob: -10.626140594482422
    8. '_' → logprob: -11.126140594482422
    9. 'urf' → logprob: -11.126140594482422
    10. 'urse' → logprob: -11.126140594482422

Token 23: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -3.6312321753939614e-05
    2. '_limit' → logprob: -10.250036239624023
    3. 'depth' → logprob: -14.500036239624023
    4. ' limit' → logprob: -14.875036239624023
    5. '.limit' → logprob: -17.500036239624023
    6. '-limit' → logprob: -18.125036239624023
    7. '-' → logprob: -18.375036239624023
    8. 'Limit' → logprob: -19.125036239624023
    9. '(limit' → logprob: -19.125036239624023
    10. '_LIMIT' → logprob: -19.250036239624023

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '(
' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '(

' → logprob: -15.875000953674316
    5. '()' → logprob: -16.625
    6. '((' → logprob: -17.875
    7. '40' → logprob: -18.0
    8. '('' → logprob: -18.125
    9. '(int' → logprob: -18.75
    10. '("("' → logprob: -19.0

Token 25: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16035866737365723
    2. '100' → logprob: -1.9103586673736572
    3. ' ' → logprob: -9.285358428955078
    4. '1' → logprob: -10.535358428955078
    5. '500' → logprob: -11.660358428955078
    6. '300' → logprob: -12.910358428955078
    7. '999' → logprob: -13.535358428955078
    8. '400' → logprob: -13.785358428955078
    9. '200' → logprob: -14.285358428955078
    10. '250' → logprob: -15.785358428955078

Token 26: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10222642123699188
    2. '6' → logprob: -2.852226495742798
    3. '00' → logprob: -4.102226257324219
    4. '000' → logprob: -4.602226257324219
    5. '7' → logprob: -4.852226257324219
    6. '5' → logprob: -5.352226257324219
    7. '**' → logprob: -8.102226257324219
    8. '8' → logprob: -10.477226257324219
    9. '4' → logprob: -12.227226257324219
    10. ')' → logprob: -12.727226257324219

Token 27: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.05327679589390755
    2. '9' → logprob: -3.428276777267456
    3. '6' → logprob: -4.053277015686035
    4. '8' → logprob: -6.178277015686035
    5. '```' → logprob: -15.678277015686035
    6. '**' → logprob: -17.42827606201172
    7. '5' → logprob: -17.67827606201172
    8. '4' → logprob: -18.61577606201172
    9. ' ' → logprob: -18.61577606201172
    10. '10' → logprob: -18.67827606201172

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.125001907348633
    3. ')
' → logprob: -14.375001907348633
    4. '))' → logprob: -16.875001907348633
    5. '```' → logprob: -18.125001907348633
    6. ')
' → logprob: -18.250001907348633
    7. ' ' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '}' → logprob: -18.750001907348633
    10. '`)' → logprob: -18.875001907348633

Token 29: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.633474588394165
    2. '   ' → logprob: -1.383474588394165
    3. '    
' → logprob: -2.383474588394165
    4. '\' → logprob: -2.633474588394165
    5. '\n' → logprob: -3.383474588394165
    6. ' 
' → logprob: -5.133474349975586
    7. '' → logprob: -5.258474349975586
    8. ':' → logprob: -6.258474349975586
    9. '```' → logprob: -6.383474349975586
    10. '  
' → logprob: -7.008474349975586

Token 30: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3414861857891083
    2. 'n' → logprob: -2.0914862155914307
    3. '    
' → logprob: -2.9664862155914307
    4. '\' → logprob: -2.9664862155914307
    5. '
' → logprob: -3.8414862155914307
    6. 'newline' → logprob: -5.091485977172852
    7. '\n' → logprob: -5.216485977172852
    8. '```' → logprob: -5.466485977172852
    9. 'def' → logprob: -5.716485977172852
    10. 'x' → logprob: -5.841485977172852

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5233505964279175
    2. ' =' → logprob: -0.8983505964279175
    3. ' ' → logprob: -8.773350715637207
    4. ',' → logprob: -11.023350715637207
    5. '.' → logprob: -11.648350715637207
    6. '_' → logprob: -11.898350715637207
    7. ')' → logprob: -12.023350715637207
    8. ' =
' → logprob: -12.148350715637207
    9. 'space' → logprob: -12.148350715637207
    10. '  ' → logprob: -12.398350715637207

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22571781277656555
    2. '10' → logprob: -1.6007177829742432
    3. '100' → logprob: -8.225717544555664
    4. '1' → logprob: -10.725717544555664
    5. '998' → logprob: -12.725717544555664
    6. ' ' → logprob: -12.850717544555664
    7. ' (' → logprob: -12.850717544555664
    8. 'int' → logprob: -13.225717544555664
    9. '109' → logprob: -13.600717544555664
    10. ' ,' → logprob: -14.600717544555664

Token 33: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004899397026747465
    2. '100' → logprob: -5.504899501800537
    3. '998' → logprob: -7.254899501800537
    4. '(' → logprob: -9.254899024963379
    5. '1' → logprob: -11.879899024963379
    6. 'int' → logprob: -12.129899024963379
    7. ' ' → logprob: -12.254899024963379
    8. 'pow' → logprob: -14.629899024963379
    9. '999' → logprob: -15.129899024963379
    10. '(int' → logprob: -16.129899978637695

Token 34: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03249724581837654
    2. '**' → logprob: -3.5324971675872803
    3. '09' → logprob: -5.907497406005859
    4. '```' → logprob: -10.90749740600586
    5. '+' → logprob: -13.28249740600586
    6. '000' → logprob: -13.65749740600586
    7. ' ' → logprob: -14.78249740600586
    8. '009' → logprob: -14.78249740600586
    9. '_' → logprob: -15.15749740600586
    10. '99' → logprob: -15.15749740600586

Token 35: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. '09' → logprob: -14.500000953674316
    3. '10' → logprob: -18.625
    4. '+' → logprob: -18.625
    5. '18' → logprob: -20.5
    6. '```' → logprob: -20.875
    7. '９' → logprob: -21.125
    8. '19' → logprob: -21.625
    9. ' ' → logprob: -21.875
    10. '8' → logprob: -22.25

Token 36: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007225605077110231
    2. ' +' → logprob: -7.250722408294678
    3. '7' → logprob: -11.500722885131836
    4. '+
' → logprob: -13.875722885131836
    5. '＋' → logprob: -14.500722885131836
    6. ' ' → logprob: -15.500722885131836
    7. '+

' → logprob: -15.875722885131836
    8. ' plus' → logprob: -15.875722885131836
    9. ' ' → logprob: -16.000722885131836
    10. '```' → logprob: -16.125722885131836

Token 37: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.2664456789934775e-06
    2. '+' → logprob: -14.250000953674316
    3. ' ' → logprob: -14.375000953674316
    4. '9' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '```' → logprob: -18.750001907348633
    7. '  ' → logprob: -18.875001907348633
    8. '07' → logprob: -19.125001907348633
    9. ' +' → logprob: -19.875001907348633
    10. '' → logprob: -20.000001907348633

Token 38: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.625
    3. ' ' → logprob: -19.75
    4. '9' → logprob: -19.875
    5. '```' → logprob: -20.0
    6. '   ' → logprob: -20.5
    7. '07' → logprob: -20.5
    8. '

' → logprob: -21.75
    9. '' → logprob: -22.3125
    10. '７' → logprob: -22.375

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11906401067972183
    2. '   ' → logprob: -3.4940640926361084
    3. '    
' → logprob: -3.6190640926361084
    4. '' → logprob: -3.6190640926361084
    5. '\' → logprob: -4.619063854217529
    6. ' 
' → logprob: -5.494063854217529
    7. '\n' → logprob: -5.619063854217529
    8. ' ' → logprob: -6.369063854217529
    9. '<|end|>' → logprob: -6.369063854217529
    10. ')' → logprob: -6.619063854217529

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022928500548005104
    2. '   ' → logprob: -4.647928714752197
    3. '' → logprob: -5.397928714752197
    4. '    
' → logprob: -5.522928714752197
    5. ' 
' → logprob: -6.772928714752197
    6. '<|end|>' → logprob: -7.772928714752197
    7. ' ' → logprob: -7.897928714752197
    8. '\n' → logprob: -8.022928237915039
    9. 'n' → logprob: -8.147928237915039
    10. ')' → logprob: -8.147928237915039

Token 41: ' inf' (ID: 5603)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0645257756114006
    2. '
' → logprob: -3.689525842666626
    3. '   ' → logprob: -4.814525604248047
    4. '#' → logprob: -4.814525604248047
    5. ' ' → logprob: -5.689525604248047
    6. '\' → logprob: -6.064525604248047
    7. 'a' → logprob: -6.064525604248047
    8. '    
' → logprob: -6.314525604248047
    9. '\n' → logprob: -6.439525604248047
    10. ' n' → logprob: -6.564525604248047

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2257811576128006
    2. '=' → logprob: -1.6007812023162842
    3. ',' → logprob: -9.475781440734863
    4. ')' → logprob: -9.850781440734863
    5. '＝' → logprob: -10.225781440734863
    6. ' ' → logprob: -10.600781440734863
    7. 'a' → logprob: -10.725781440734863
    8. '‌' → logprob: -10.975781440734863
    9. '	' → logprob: -11.100781440734863
    10. 'initely' → logprob: -11.225781440734863

Token 43: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34741756319999695
    2. ' float' → logprob: -1.4724175930023193
    3. 'float' → logprob: -3.2224175930023193
    4. '10' → logprob: -3.7224175930023193
    5. '1' → logprob: -9.972417831420898
    6. ' int' → logprob: -10.972417831420898
    7. 'int' → logprob: -11.472417831420898
    8. ' ' → logprob: -12.597417831420898
    9. '100' → logprob: -13.597417831420898
    10. '	float' → logprob: -13.597417831420898

Token 44: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.338466093642637e-05
    2. '(' → logprob: -9.750073432922363
    3. '("' → logprob: -11.500073432922363
    4. ''' → logprob: -12.500073432922363
    5. ''in' → logprob: -15.125073432922363
    6. '('+' → logprob: -15.375073432922363
    7. '('-' → logprob: -16.000072479248047
    8. '32' → logprob: -16.125072479248047
    9. ' ('' → logprob: -16.375072479248047
    10. '"' → logprob: -16.750072479248047

Token 45: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.08419894427061081
    2. ''' → logprob: -2.7091989517211914
    3. 'inf' → logprob: -4.584198951721191
    4. '"' → logprob: -5.834198951721191
    5. ''ins' → logprob: -8.459198951721191
    6. ''i' → logprob: -8.959198951721191
    7. ''information' → logprob: -9.209198951721191
    8. ''ex' → logprob: -9.709198951721191
    9. ''any' → logprob: -9.709198951721191
    10. ''int' → logprob: -10.084198951721191

Token 46: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013409581733867526
    2. '')' → logprob: -6.626340866088867
    3. ')
' → logprob: -11.501340866088867
    4. '`)' → logprob: -13.251340866088867
    5. '")' → logprob: -13.626340866088867
    6. ' )' → logprob: -14.126340866088867
    7. '}' → logprob: -15.001340866088867
    8. '```' → logprob: -15.626340866088867
    9. '')
' → logprob: -15.876340866088867
    10. ')

' → logprob: -16.126340866088867

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2226169854402542
    2. '    
' → logprob: -2.2226169109344482
    3. '
' → logprob: -2.5976169109344482
    4. 'n' → logprob: -4.597617149353027
    5. 'def' → logprob: -7.222617149353027
    6. '    ' → logprob: -7.222617149353027
    7. '  
' → logprob: -7.347617149353027
    8. '\n' → logprob: -7.597617149353027
    9. '```' → logprob: -7.597617149353027
    10. ' ' → logprob: -7.847617149353027

Token 48: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.056964211165905
    2. 'N' → logprob: -3.056964159011841
    3. '   ' → logprob: -5.05696439743042
    4. '#' → logprob: -6.80696439743042
    5. ' n' → logprob: -8.556963920593262
    6. 'a' → logprob: -8.806963920593262
    7. '    
' → logprob: -9.306963920593262
    8. 'def' → logprob: -9.806963920593262
    9. 'A' → logprob: -9.931963920593262
    10. 't' → logprob: -10.181963920593262

Token 49: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03732248395681381
    2. '()' → logprob: -3.537322521209717
    3. '.' → logprob: -5.537322521209717
    4. '('' → logprob: -7.162322521209717
    5. '```' → logprob: -7.662322521209717
    6. '_data' → logprob: -8.037322044372559
    7. '().' → logprob: -8.162322044372559
    8. '=' → logprob: -8.412322044372559
    9. '("")' → logprob: -8.412322044372559
    10. '("("' → logprob: -8.537322044372559

Token 50: ' lambda' (ID: 27871)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.015110112726688385
    2. ' input' → logprob: -4.265110015869141
    3. 'sys' → logprob: -7.265110015869141
    4. ' lambda' → logprob: -9.14011001586914
    5. 'input' → logprob: -9.26511001586914
    6. ' ' → logprob: -10.26511001586914
    7. '	sys' → logprob: -12.64011001586914
    8. ' raw' → logprob: -12.76511001586914
    9. '=sys' → logprob: -13.51511001586914
    10. '(sys' → logprob: -14.26511001586914

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02678230032324791
    2. ' :' → logprob: -3.651782274246216
    3. '():' → logprob: -8.151782035827637
    4. ' ' → logprob: -9.151782035827637
    5. '()' → logprob: -9.651782035827637
    6. ':list' → logprob: -12.026782035827637
    7. '().' → logprob: -12.526782035827637
    8. ':void' → logprob: -13.026782035827637
    9. ':int' → logprob: -13.026782035827637
    10. '(' → logprob: -13.276782035827637

Token 52: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.25206631422042847
    2. 'sys' → logprob: -1.5020663738250732
    3. 'input' → logprob: -9.377066612243652
    4. ' input' → logprob: -9.877066612243652
    5. '	sys' → logprob: -14.752066612243652
    6. '=sys' → logprob: -14.752066612243652
    7. 'stdin' → logprob: -15.752066612243652
    8. '(sys' → logprob: -16.127065658569336
    9. ' ' → logprob: -17.002065658569336
    10. 'str' → logprob: -17.627065658569336

Token 53: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0020493860356509686
    2. '.' → logprob: -6.252049446105957
    3. '.stdout' → logprob: -9.502049446105957
    4. '.std' → logprob: -10.252049446105957
    5. ' .' → logprob: -12.877049446105957
    6. '.st' → logprob: -13.002049446105957
    7. '.readline' → logprob: -13.127049446105957
    8. '.argv' → logprob: -13.252049446105957
    9. '.input' → logprob: -13.877049446105957
    10. '.stderr' → logprob: -14.252049446105957

Token 54: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.4140441635390744e-05
    2. '.read' → logprob: -11.625014305114746
    3. '.' → logprob: -12.250014305114746
    4. 'read' → logprob: -15.875014305114746
    5. ' readline' → logprob: -16.25001335144043
    6. '.readlines' → logprob: -17.00001335144043
    7. '.buffer' → logprob: -17.50001335144043
    8. '.write' → logprob: -20.12501335144043
    9. 'buffer' → logprob: -20.25001335144043
    10. '.Read' → logprob: -20.75001335144043

Token 55: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47418829798698425
    2. '().' → logprob: -0.9741883277893066
    3. '()
' → logprob: -9.724187850952148
    4. '()\' → logprob: -10.724187850952148
    5. '(' → logprob: -10.974187850952148
    6. '()

' → logprob: -12.099187850952148
    7. '())' → logprob: -13.349187850952148
    8. ')' → logprob: -13.724187850952148
    9. '.strip' → logprob: -13.974187850952148
    10. '.' → logprob: -14.099187850952148

Token 56: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10020871460437775
    2. 'rstrip' → logprob: -2.3502087593078613
    3. ' strip' → logprob: -13.225208282470703
    4. '(strip' → logprob: -16.225208282470703
    5. '_strip' → logprob: -16.475208282470703
    6. 'r' → logprob: -16.975208282470703
    7. '.rstrip' → logprob: -17.475208282470703
    8. '-strip' → logprob: -18.100208282470703
    9. 'str' → logprob: -18.850208282470703
    10. 'split' → logprob: -19.225208282470703

Token 57: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08598661422729492
    2. '
' → logprob: -2.960986614227295
    3. '()
' → logprob: -4.460986614227295
    4. '(' → logprob: -4.460986614227295
    5. '\n' → logprob: -6.460986614227295
    6. '<|end|>' → logprob: -6.585986614227295
    7. '()

' → logprob: -6.835986614227295
    8. '   ' → logprob: -7.585986614227295
    9. '()\' → logprob: -7.835986614227295
    10. '\' → logprob: -7.835986614227295

Token 58: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3126492202281952
    2. '   ' → logprob: -1.6876492500305176
    3. '    
' → logprob: -2.6876492500305176
    4. 'n' → logprob: -4.937649250030518
    5. '  
' → logprob: -6.562649250030518
    6. '<|end|>' → logprob: -6.562649250030518
    7. '\n' → logprob: -7.187649250030518
    8. ' 
' → logprob: -7.312649250030518
    9. '   
' → logprob: -7.437649250030518
    10. ' ' → logprob: -7.562649250030518

Token 59: ' ii' (ID: 28354)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1393442153930664
    2. '   ' → logprob: -2.3893442153930664
    3. '    
' → logprob: -4.139344215393066
    4. '
' → logprob: -4.389344215393066
    5. 'N' → logprob: -5.639344215393066
    6. '\n' → logprob: -6.014344215393066
    7. 'd' → logprob: -7.139344215393066
    8. 'x' → logprob: -7.639344215393066
    9. 'a' → logprob: -7.639344215393066
    10. '\' → logprob: -8.014344215393066

Token 60: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30071452260017395
    2. 'n' → logprob: -2.0507144927978516
    3. 'p' → logprob: -2.1757144927978516
    4. '=' → logprob: -5.050714492797852
    5. 'np' → logprob: -5.300714492797852
    6. 'put' → logprob: -6.050714492797852
    7. 'pt' → logprob: -6.800714492797852
    8. 'nt' → logprob: -7.675714492797852
    9. ')' → logprob: -7.800714492797852
    10. '(' → logprob: -7.925714492797852

Token 61: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6460063457489014
    2. ' int' → logprob: -0.8960063457489014
    3. ' lambda' → logprob: -3.0210063457489014
    4. 'lambda' → logprob: -4.0210065841674805
    5. '(int' → logprob: -8.64600658416748
    6. 'input' → logprob: -8.77100658416748
    7. 'in' → logprob: -9.39600658416748
    8. 'nt' → logprob: -9.39600658416748
    9. ' input' → logprob: -9.64600658416748
    10. 'n' → logprob: -9.77100658416748

Token 62: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26932746171951294
    2. ':int' → logprob: -1.8943274021148682
    3. 'int' → logprob: -2.519327402114868
    4. ' int' → logprob: -5.894327640533447
    5. ' :' → logprob: -6.394327640533447
    6. '():' → logprob: -7.269327640533447
    7. ':list' → logprob: -11.269327163696289
    8. ' ' → logprob: -11.394327163696289
    9. ' ():' → logprob: -12.519327163696289
    10. ':str' → logprob: -12.644327163696289

Token 63: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16066865622997284
    2. ' int' → logprob: -1.9106686115264893
    3. ' map' → logprob: -7.910668849945068
    4. 'map' → logprob: -9.53566837310791
    5. ' ' → logprob: -12.91066837310791
    6. '  ' → logprob: -14.03566837310791
    7. '(int' → logprob: -14.41066837310791
    8. '	int' → logprob: -14.53566837310791
    9. 'in' → logprob: -15.16066837310791
    10. '[int' → logprob: -15.78566837310791

Token 64: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006729110609740019
    2. '(' → logprob: -5.0067291259765625
    3. 'input' → logprob: -11.381729125976562
    4. '(
' → logprob: -13.506729125976562
    5. ' (' → logprob: -15.256729125976562
    6. '(in' → logprob: -15.506729125976562
    7. '(

' → logprob: -15.631729125976562
    8. ' input' → logprob: -15.756729125976562
    9. '()' → logprob: -17.256729125976562
    10. '(inp' → logprob: -17.381729125976562

Token 65: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015788980526849627
    2. '()' → logprob: -6.5015788078308105
    3. '()))' → logprob: -10.001579284667969
    4. ' ())' → logprob: -11.626579284667969
    5. '())
' → logprob: -11.751579284667969
    6. ')' → logprob: -12.251579284667969
    7. '()
' → logprob: -12.501579284667969
    8. '(' → logprob: -12.751579284667969
    9. '()]' → logprob: -14.126579284667969
    10. '().' → logprob: -14.501579284667969

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12166904658079147
    2. '<|end|>' → logprob: -2.871669054031372
    3. '
' → logprob: -3.871669054031372
    4. '    
' → logprob: -4.121668815612793
    5. 'def' → logprob: -5.621668815612793
    6. ' ' → logprob: -5.621668815612793
    7. '<|end|>' → logprob: -5.621668815612793
    8. 'n' → logprob: -5.746668815612793
    9. '  ' → logprob: -6.496668815612793
    10. '  
' → logprob: -6.621668815612793

Token 67: ' mi' (ID: 3997)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13237328827381134
    2. 'n' → logprob: -2.882373332977295
    3. '    
' → logprob: -3.257373332977295
    4. 'def' → logprob: -4.257373332977295
    5. '
' → logprob: -5.882373332977295
    6. ' ' → logprob: -6.007373332977295
    7. '  ' → logprob: -6.382373332977295
    8. '  
' → logprob: -6.507373332977295
    9. '   
' → logprob: -6.882373332977295
    10. '\' → logprob: -6.882373332977295

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4076915681362152
    2. ' =' → logprob: -1.5326915979385376
    3. 'x' → logprob: -2.532691478729248
    4. '=lambda' → logprob: -4.032691478729248
    5. 'n' → logprob: -4.407691478729248
    6. 'ni' → logprob: -5.032691478729248
    7. 'lambda' → logprob: -7.032691478729248
    8. 'xi' → logprob: -7.282691478729248
    9. 'ambda' → logprob: -8.657691955566406
    10. 'm' → logprob: -8.782691955566406

Token 69: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.45811325311660767
    2. ' lambda' → logprob: -1.083113193511963
    3. '(lambda' → logprob: -3.958113193511963
    4. 'ambda' → logprob: -4.833113193511963
    5. 'mb' → logprob: -6.833113193511963
    6. '=lambda' → logprob: -7.708113193511963
    7. ' lamb' → logprob: -9.083113670349121
    8. 'm' → logprob: -9.333113670349121
    9. 'lam' → logprob: -9.833113670349121
    10. 'map' → logprob: -10.458113670349121

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06583710014820099
    2. ' :' → logprob: -2.8158371448516846
    3. ' lambda' → logprob: -6.6908369064331055
    4. ' ' → logprob: -6.8158369064331055
    5. '():' → logprob: -7.6908369064331055
    6. 'lambda' → logprob: -8.190836906433105
    7. ' list' → logprob: -8.315836906433105
    8. ':list' → logprob: -8.565836906433105
    9. ' n' → logprob: -9.440836906433105
    10. '  ' → logprob: -9.565836906433105

Token 71: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.830152153968811
    2. ' map' → logprob: -0.830152153968811
    3. 'list' → logprob: -2.5801520347595215
    4. ' list' → logprob: -2.9551520347595215
    5. '[' → logprob: -9.45515251159668
    6. 'm' → logprob: -10.08015251159668
    7. '	map' → logprob: -10.58015251159668
    8. 'tuple' → logprob: -11.08015251159668
    9. ' ' → logprob: -11.20515251159668
    10. ' tuple' → logprob: -11.95515251159668

Token 72: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007616325747221708
    2. '(' → logprob: -4.8826165199279785
    3. 'int' → logprob: -12.13261604309082
    4. '<int' → logprob: -14.00761604309082
    5. '(
' → logprob: -14.13261604309082
    6. '(str' → logprob: -14.50761604309082
    7. ' (' → logprob: -14.63261604309082
    8. '(lambda' → logprob: -14.75761604309082
    9. '=int' → logprob: -14.75761604309082
    10. '[int' → logprob: -14.88261604309082

Token 73: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0077340384013950825
    2. '(' → logprob: -5.5077338218688965
    3. ' (' → logprob: -5.7577338218688965
    4. ',input' → logprob: -8.507734298706055
    5. ')' → logprob: -9.257734298706055
    6. 'input' → logprob: -9.632734298706055
    7. ',' → logprob: -9.882734298706055
    8. ' input' → logprob: -10.507734298706055
    9. ')(' → logprob: -11.632734298706055
    10. '(in' → logprob: -11.632734298706055

Token 74: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6326223611831665
    2. ' input' → logprob: -0.7576223611831665
    3. ' ' → logprob: -12.007622718811035
    4. '	input' → logprob: -12.132622718811035
    5. ',input' → logprob: -12.382622718811035
    6. '   ' → logprob: -12.757622718811035
    7. ')' → logprob: -13.382622718811035
    8. '(input' → logprob: -13.757622718811035
    9. '=input' → logprob: -14.632622718811035
    10. '<input' → logprob: -14.882622718811035

Token 75: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.023293538717553e-05
    2. '()' → logprob: -10.500030517578125
    3. ' ().' → logprob: -13.250030517578125
    4. ')' → logprob: -14.750030517578125
    5. '())' → logprob: -15.500030517578125
    6. '(' → logprob: -16.000030517578125
    7. 'split' → logprob: -17.000030517578125
    8. '()
' → logprob: -17.125030517578125
    9. '().'' → logprob: -17.500030517578125
    10. '.' → logprob: -18.250030517578125

Token 76: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.4153549020411447e-05
    2. 'strip' → logprob: -10.87502384185791
    3. ' split' → logprob: -12.87502384185791
    4. 'rstrip' → logprob: -13.12502384185791
    5. '(split' → logprob: -15.37502384185791
    6. ')' → logprob: -15.50002384185791
    7. 'spl' → logprob: -16.375024795532227
    8. 's' → logprob: -17.000024795532227
    9. ' ' → logprob: -18.000024795532227
    10. '.split' → logprob: -18.500024795532227

Token 77: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12254096567630768
    2. ')' → logprob: -2.2475409507751465
    3. '()' → logprob: -4.7475409507751465
    4. '))' → logprob: -7.6225409507751465
    5. '())
' → logprob: -7.9975409507751465
    6. '()))' → logprob: -9.247541427612305
    7. '(' → logprob: -10.622541427612305
    8. '()
' → logprob: -10.872541427612305
    9. ')
' → logprob: -11.247541427612305
    10. ' ())' → logprob: -11.622541427612305

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05255192890763283
    2. '    
' → logprob: -3.1775519847869873
    3. '<|end|>' → logprob: -5.927551746368408
    4. 'n' → logprob: -6.052551746368408
    5. ')' → logprob: -7.177551746368408
    6. ',' → logprob: -7.302551746368408
    7. 'def' → logprob: -7.427551746368408
    8. '    ' → logprob: -7.677551746368408
    9. '<|end|>' → logprob: -8.052552223205566
    10. '  
' → logprob: -8.302552223205566

Token 79: ' mi' (ID: 3997)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26525068283081055
    2. '   ' → logprob: -1.8902506828308105
    3. '    
' → logprob: -3.2652506828308105
    4. 'd' → logprob: -4.7652506828308105
    5. '
' → logprob: -5.1402506828308105
    6. '#' → logprob: -5.3902506828308105
    7. 'for' → logprob: -5.8902506828308105
    8. 'def' → logprob: -5.8902506828308105
    9. ' ' → logprob: -6.2652506828308105
    10. 'r' → logprob: -6.5152506828308105

Token 80: '_' (ID: 62)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00022320532298181206
    2. '=' → logprob: -9.500223159790039
    3. '())' → logprob: -10.000223159790039
    4. '()
' → logprob: -10.250223159790039
    5. '(' → logprob: -10.625223159790039
    6. ')' → logprob: -11.250223159790039
    7. '()]' → logprob: -11.875223159790039
    8. ' ()' → logprob: -11.875223159790039
    9. '()

' → logprob: -12.375223159790039
    10. ' =' → logprob: -13.000223159790039

Token 81: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6106081008911133
    2. ' =' → logprob: -1.7356081008911133
    3. 'lambda' → logprob: -2.7356081008911133
    4. 'nt' → logprob: -3.1106081008911133
    5. 'n' → logprob: -3.8606081008911133
    6. 's' → logprob: -3.8606081008911133
    7. 'list' → logprob: -3.9856081008911133
    8. '1' → logprob: -4.110608100891113
    9. '=lambda' → logprob: -4.235608100891113
    10. 'l' → logprob: -4.735608100891113

Token 82: ' =' (ID: 314)
  Prédit: 'based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'based' → logprob: -0.06910118460655212
    2. ' =' → logprob: -3.819101095199585
    3. '=' → logprob: -4.194101333618164
    4. 'index' → logprob: -5.069101333618164
    5. 'indexed' → logprob: -5.444101333618164
    6. 'base' → logprob: -5.444101333618164
    7. 'ex' → logprob: -5.944101333618164
    8. '1' → logprob: -6.194101333618164
    9. ' based' → logprob: -6.694101333618164
    10. '0' → logprob: -6.819101333618164

Token 83: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1654372364282608
    2. ' lambda' → logprob: -1.9154372215270996
    3. 'ambda' → logprob: -5.7904372215271
    4. '(lambda' → logprob: -6.2904372215271
    5. '=lambda' → logprob: -8.915437698364258
    6. 'lam' → logprob: -9.290437698364258
    7. ' lamb' → logprob: -11.290437698364258
    8. '   ' → logprob: -12.040437698364258
    9. 'mb' → logprob: -12.040437698364258
    10. '_lambda' → logprob: -12.290437698364258

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11396080255508423
    2. ' :' → logprob: -2.3639607429504395
    3. '():' → logprob: -4.3639607429504395
    4. ' ():' → logprob: -7.9889607429504395
    5. '()' → logprob: -8.488961219787598
    6. ' ()' → logprob: -8.613961219787598
    7. ':list' → logprob: -9.113961219787598
    8. ' ' → logprob: -9.988961219787598
    9. '0' → logprob: -11.488961219787598
    10. ':int' → logprob: -12.113961219787598

Token 85: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.35245317220687866
    2. 'map' → logprob: -1.2274532318115234
    3. ' list' → logprob: -6.602453231811523
    4. '[' → logprob: -6.852453231811523
    5. 'list' → logprob: -7.102453231811523
    6. ' [' → logprob: -7.727453231811523
    7. '(map' → logprob: -9.227453231811523
    8. '[m' → logprob: -10.102453231811523
    9. ' ' → logprob: -10.477453231811523
    10. '[int' → logprob: -10.477453231811523

Token 86: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006794475018978119
    2. '(lambda' → logprob: -5.006794452667236
    3. '(' → logprob: -9.631794929504395
    4. ' (' → logprob: -12.506794929504395
    5. 'int' → logprob: -12.631794929504395
    6. 'lambda' → logprob: -13.131794929504395
    7. '<int' → logprob: -13.881794929504395
    8. '0' → logprob: -14.256794929504395
    9. '[int' → logprob: -14.881794929504395
    10. '(
' → logprob: -14.881794929504395

Token 87: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2015794962644577
    2. 'x' → logprob: -1.7015794515609741
    3. 'a' → logprob: -9.951579093933105
    4. ' a' → logprob: -10.326579093933105
    5. ':' → logprob: -10.701579093933105
    6. ' y' → logprob: -11.576579093933105
    7. ' i' → logprob: -11.826579093933105
    8. ' t' → logprob: -11.826579093933105
    9. '	x' → logprob: -12.076579093933105
    10. ' ' → logprob: -12.451579093933105

Token 88: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006364451255649328
    2. ':int' → logprob: -5.131364345550537
    3. ' :' → logprob: -7.756364345550537
    4. ':x' → logprob: -12.131364822387695
    5. ':i' → logprob: -14.006364822387695
    6. 'int' → logprob: -14.881364822387695
    7. ':
' → logprob: -15.256364822387695
    8. '=int' → logprob: -15.506364822387695
    9. '_:' → logprob: -16.756364822387695
    10. 'x' → logprob: -16.881364822387695

Token 89: ' int' (ID: 677)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31790298223495483
    2. 'int' → logprob: -1.3179030418395996
    3. ' x' → logprob: -5.5679030418396
    4. ' int' → logprob: -7.1929030418396
    5. '(int' → logprob: -10.192902565002441
    6. 'max' → logprob: -11.567902565002441
    7. '[int' → logprob: -12.692902565002441
    8. '<int' → logprob: -12.817902565002441
    9. '	int' → logprob: -13.567902565002441
    10. '	x' → logprob: -13.817902565002441

Token 90: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00016086915275081992
    2. '(' → logprob: -9.250161170959473
    3. 'x' → logprob: -9.750161170959473
    4. ' (' → logprob: -12.625161170959473
    5. '()' → logprob: -14.250161170959473
    6. ')' → logprob: -14.750161170959473
    7. '```' → logprob: -15.500161170959473
    8. '-' → logprob: -15.750161170959473
    9. '	x' → logprob: -15.875161170959473
    10. '(int' → logprob: -16.000160217285156

Token 91: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5353308916091919
    2. '-' → logprob: -1.910330891609192
    3. ')-' → logprob: -1.910330891609192
    4. ' -' → logprob: -2.6603307723999023
    5. '()-' → logprob: -3.6603307723999023
    6. ' )' → logprob: -3.9103307723999023
    7. '()' → logprob: -6.035330772399902
    8. ' ' → logprob: -8.785330772399902
    9. '0' → logprob: -9.910330772399902
    10. '())' → logprob: -10.285330772399902

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004050514253322035
    2. ' ' → logprob: -7.8754048347473145
    3. '<|end|>' → logprob: -10.625405311584473
    4. ')' → logprob: -15.125405311584473
    5. '<|end|>' → logprob: -15.875405311584473
    6. ',' → logprob: -16.250404357910156
    7. '   ' → logprob: -16.625404357910156
    8. '  ' → logprob: -16.875404357910156
    9. '0' → logprob: -17.500404357910156
    10. '...' → logprob: -17.625404357910156

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023009662982076406
    2. ',input' → logprob: -6.62730073928833
    3. ')' → logprob: -7.50230073928833
    4. ',x' → logprob: -8.127301216125488
    5. ' ,' → logprob: -9.252301216125488
    6. ',int' → logprob: -11.627301216125488
    7. 'input' → logprob: -12.002301216125488
    8. '   ' → logprob: -13.002301216125488
    9. ',)' → logprob: -13.127301216125488
    10. '),' → logprob: -13.252301216125488

Token 94: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687992095947266
    2. ' input' → logprob: -1.1368799209594727
    3. ' ' → logprob: -12.261879920959473
    4. '   ' → logprob: -13.386879920959473
    5. '	input' → logprob: -13.761879920959473
    6. '  ' → logprob: -15.011879920959473
    7. '(input' → logprob: -15.136879920959473
    8. ',input' → logprob: -15.761879920959473
    9. '<input' → logprob: -15.886879920959473
    10. '    ' → logprob: -16.011878967285156

Token 95: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5094070477061905e-05
    2. '()' → logprob: -11.125015258789062
    3. ' ().' → logprob: -15.875015258789062
    4. '(' → logprob: -16.500015258789062
    5. '.split' → logprob: -17.875015258789062
    6. ')' → logprob: -18.875015258789062
    7. '())' → logprob: -20.500015258789062
    8. '.' → logprob: -20.625015258789062
    9. ' ()' → logprob: -21.000015258789062
    10. '()
' → logprob: -21.000015258789062

Token 96: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.070975071750581e-05
    2. ' split' → logprob: -10.500030517578125
    3. 'strip' → logprob: -13.500030517578125
    4. 'rstrip' → logprob: -13.500030517578125
    5. 'spl' → logprob: -15.750030517578125
    6. '.split' → logprob: -16.500030517578125
    7. '(split' → logprob: -16.625030517578125
    8. ')' → logprob: -18.000030517578125
    9. ' ' → logprob: -18.500030517578125
    10. 'plit' → logprob: -18.750030517578125

Token 97: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7446944117546082
    2. '())' → logprob: -0.7446944117546082
    3. '()' → logprob: -2.994694471359253
    4. '))' → logprob: -8.994694709777832
    5. '())
' → logprob: -10.869694709777832
    6. '()))' → logprob: -11.244694709777832
    7. ')
' → logprob: -12.244694709777832
    8. '   ' → logprob: -12.494694709777832
    9. ' ())' → logprob: -12.494694709777832
    10. ' )' → logprob: -12.619694709777832

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1879342794418335
    2. '<|end|>' → logprob: -1.9379342794418335
    3. '    
' → logprob: -3.937934398651123
    4. '<|end|>' → logprob: -6.062934398651123
    5. ')' → logprob: -6.312934398651123
    6. 'n' → logprob: -6.562934398651123
    7. '
' → logprob: -7.437934398651123
    8. 'def' → logprob: -8.437933921813965
    9. '#' → logprob: -8.437933921813965
    10. 'newline' → logprob: -8.562933921813965

Token 99: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15393507480621338
    2. '#' → logprob: -2.778934955596924
    3. '   ' → logprob: -3.278934955596924
    4. '
' → logprob: -4.153934955596924
    5. '    
' → logprob: -5.403934955596924
    6. '<|end|>' → logprob: -5.403934955596924
    7. 'def' → logprob: -5.528934955596924
    8. '    ' → logprob: -5.653934955596924
    9. ' ' → logprob: -6.403934955596924
    10. 'N' → logprob: -6.528934955596924

Token 100: 'mi' (ID: 3900)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.40413638949394226
    2. 'ist' → logprob: -1.9041364192962646
    3. ' =' → logprob: -2.4041364192962646
    4. 'en' → logprob: -2.7791364192962646
    5. 'i' → logprob: -4.7791361808776855
    6. '=[]' → logprob: -5.2791361808776855
    7. 'is' → logprob: -5.9041361808776855
    8. 'st' → logprob: -6.4041361808776855
    9. 'mb' → logprob: -6.6541361808776855
    10. 'ine' → logprob: -6.6541361808776855

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22593484818935394
    2. '=' → logprob: -1.6009348630905151
    3. '_' → logprob: -8.225934982299805
    4. ' ' → logprob: -9.225934982299805
    5. '=lambda' → logprob: -9.350934982299805
    6. 'ambda' → logprob: -10.600934982299805
    7. 'b' → logprob: -11.600934982299805
    8. '0' → logprob: -12.100934982299805
    9. 'a' → logprob: -12.725934982299805
    10. '   ' → logprob: -12.725934982299805

Token 102: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.011285956017673016
    2. 'lambda' → logprob: -4.511285781860352
    3. '(lambda' → logprob: -8.636285781860352
    4. ' list' → logprob: -10.386285781860352
    5. 'ambda' → logprob: -11.136285781860352
    6. '=lambda' → logprob: -11.261285781860352
    7. ' lamb' → logprob: -13.761285781860352
    8. 'list' → logprob: -14.011285781860352
    9. ' λ' → logprob: -15.386285781860352
    10. '_lambda' → logprob: -16.13628578186035

Token 103: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24006791412830353
    2. ' :' → logprob: -1.615067958831787
    3. ' lambda' → logprob: -4.740067958831787
    4. ' list' → logprob: -5.490067958831787
    5. ':list' → logprob: -6.865067958831787
    6. 'lambda' → logprob: -8.240067481994629
    7. ' ' → logprob: -8.615067481994629
    8. 'list' → logprob: -9.740067481994629
    9. '():' → logprob: -10.615067481994629
    10. ' x' → logprob: -10.990067481994629

Token 104: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06197025999426842
    2. ' list' → logprob: -2.8119702339172363
    3. 'map' → logprob: -14.061970710754395
    4. 'lambda' → logprob: -14.311970710754395
    5. 'ist' → logprob: -14.561970710754395
    6. '[list' → logprob: -15.561970710754395
    7. 'l' → logprob: -15.811970710754395
    8. ' ' → logprob: -16.436969757080078
    9. '	list' → logprob: -16.561969757080078
    10. 'List' → logprob: -16.686969757080078

Token 105: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08401055634021759
    2. '(mi' → logprob: -2.584010601043701
    3. '(' → logprob: -5.459010601043701
    4. '(int' → logprob: -7.584010601043701
    5. '(lambda' → logprob: -8.209010124206543
    6. '()' → logprob: -11.209010124206543
    7. '<int' → logprob: -11.709010124206543
    8. '<|end|>' → logprob: -11.834010124206543
    9. ' (' → logprob: -11.959010124206543
    10. '(li' → logprob: -11.959010124206543

Token 106: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.2020991056924686e-05
    2. 'int' → logprob: -11.375032424926758
    3. '(' → logprob: -12.000032424926758
    4. '<int' → logprob: -12.500032424926758
    5. '(lambda' → logprob: -12.500032424926758
    6. '<|end|>' → logprob: -12.875032424926758
    7. '[int' → logprob: -13.750032424926758
    8. ']int' → logprob: -13.750032424926758
    9. '=int' → logprob: -13.875032424926758
    10. ',int' → logprob: -14.125032424926758

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39611172676086426
    2. ',input' → logprob: -1.1461117267608643
    3. '(input' → logprob: -4.771111488342285
    4. '(' → logprob: -7.271111488342285
    5. ' ,' → logprob: -10.896111488342285
    6. 'input' → logprob: -12.146111488342285
    7. '(),' → logprob: -13.146111488342285
    8. ',(' → logprob: -13.646111488342285
    9. ')' → logprob: -13.771111488342285
    10. ',
' → logprob: -14.396111488342285

Token 108: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759707689285278
    2. ' input' → logprob: -0.8259707689285278
    3. '(input' → logprob: -11.575970649719238
    4. ',input' → logprob: -11.575970649719238
    5. ')' → logprob: -11.950970649719238
    6. '	input' → logprob: -12.950970649719238
    7. '=input' → logprob: -13.825970649719238
    8. ' ' → logprob: -13.950970649719238
    9. '[input' → logprob: -15.075970649719238
    10. '_input' → logprob: -15.200970649719238

Token 109: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.200166469876422e-06
    2. '()' → logprob: -12.250004768371582
    3. ')' → logprob: -16.0000057220459
    4. '.split' → logprob: -16.3750057220459
    5. '.' → logprob: -16.6250057220459
    6. ' ().' → logprob: -16.6250057220459
    7. '()
' → logprob: -18.1250057220459
    8. '())' → logprob: -18.2500057220459
    9. '(' → logprob: -18.5000057220459
    10. '))' → logprob: -19.0000057220459

Token 110: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8789383830153383e-05
    2. 'rstrip' → logprob: -11.125019073486328
    3. ' split' → logprob: -13.000019073486328
    4. '(split' → logprob: -14.250019073486328
    5. ')' → logprob: -14.625019073486328
    6. 'spl' → logprob: -14.625019073486328
    7. 'strip' → logprob: -15.875019073486328
    8. '.split' → logprob: -17.000019073486328
    9. 'plit' → logprob: -17.125019073486328
    10. ' ' → logprob: -17.750019073486328

Token 111: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5859676003456116
    2. '))' → logprob: -0.8359676003456116
    3. '()' → logprob: -4.960967540740967
    4. '())' → logprob: -6.335967540740967
    5. '()))
' → logprob: -7.210967540740967
    6. ')' → logprob: -7.960967540740967
    7. '))
' → logprob: -9.460968017578125
    8. '(' → logprob: -11.585968017578125
    9. ' ))' → logprob: -11.585968017578125
    10. '()))

' → logprob: -12.460968017578125

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020499728620052338
    2. '    
' → logprob: -4.1454997062683105
    3. ')' → logprob: -6.7704997062683105
    4. '<|end|>' → logprob: -7.1454997062683105
    5. '    ' → logprob: -7.2704997062683105
    6. 'n' → logprob: -7.7704997062683105
    7. 'def' → logprob: -8.270500183105469
    8. '(n' → logprob: -8.770500183105469
    9. '  
' → logprob: -9.520500183105469
    10. '
' → logprob: -9.520500183105469

Token 113: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4145425260066986
    2. '   ' → logprob: -1.289542555809021
    3. 'l' (adapté à ' l') → logprob: -4.0395426750183105
    4. 's' → logprob: -4.0395426750183105
    5. 'def' → logprob: -4.9145426750183105
    6. 'sm' → logprob: -5.5395426750183105
    7. 'h' → logprob: -5.7895426750183105
    8. '#' → logprob: -5.9145426750183105
    9. 'li' → logprob: -6.2895426750183105
    10. 'si' → logprob: -6.5395426750183105

Token 114: 'mi' (ID: 3900)
  Prédit: 'mi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.0162894856184721
    2. 'ist' → logprob: -4.641289710998535
    3. 'i' → logprob: -5.891289710998535
    4. 'm' → logprob: -6.266289710998535
    5. ' =' → logprob: -6.766289710998535
    6. 'ambda' → logprob: -8.641289710998535
    7. 'is' → logprob: -9.141289710998535
    8. 'st' → logprob: -9.266289710998535
    9. 'ms' → logprob: -10.016289710998535
    10. '_' → logprob: -10.141289710998535

Token 115: '_' (ID: 62)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015395533409900963
    2. '=' → logprob: -9.375153541564941
    3. '(' → logprob: -10.500153541564941
    4. '()]' → logprob: -11.500153541564941
    5. '()>' → logprob: -11.875153541564941
    6. ' ()' → logprob: -12.500153541564941
    7. ' =' → logprob: -12.750153541564941
    8. '())' → logprob: -13.000153541564941
    9. '()='' → logprob: -13.000153541564941
    10. '()[' → logprob: -13.125153541564941

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002843625843524933
    2. 'lambda' → logprob: -6.502843856811523
    3. '=lambda' → logprob: -7.377843856811523
    4. '=' → logprob: -7.752843856811523
    5. ' =' → logprob: -8.752843856811523
    6. '(lambda' → logprob: -9.627843856811523
    7. '_' → logprob: -10.377843856811523
    8. ' ' → logprob: -10.877843856811523
    9. 'def' → logprob: -12.502843856811523
    10. ' lambda' → logprob: -13.377843856811523

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889694720506668
    2. '=' → logprob: -2.578896999359131
    3. '=lambda' → logprob: -11.953896522521973
    4. ' ' → logprob: -14.328896522521973
    5. '＝' → logprob: -16.70389747619629
    6. ' =)' → logprob: -18.20389747619629
    7. ':' → logprob: -18.32889747619629
    8. '    ' → logprob: -18.57889747619629
    9. 'lambda' → logprob: -18.82889747619629
    10. ')' → logprob: -19.07889747619629

Token 118: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.03873921558260918
    2. 'lambda' → logprob: -3.2887392044067383
    3. '(lambda' → logprob: -7.413739204406738
    4. '=lambda' → logprob: -9.288739204406738
    5. ' lamb' → logprob: -13.913739204406738
    6. 'ambda' → logprob: -14.163739204406738
    7. '.lambda' → logprob: -15.538739204406738
    8. '_lambda' → logprob: -15.663739204406738
    9. ' λ' → logprob: -15.913739204406738
    10. ' =' → logprob: -17.413740158081055

Token 119: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6684633493423462
    2. ' :' → logprob: -1.0434633493423462
    3. ' lambda' → logprob: -2.1684632301330566
    4. '=lambda' → logprob: -4.793463230133057
    5. ' =' → logprob: -5.418463230133057
    6. '(lambda' → logprob: -5.543463230133057
    7. 'lambda' → logprob: -6.168463230133057
    8. '():' → logprob: -6.793463230133057
    9. '=' → logprob: -7.418463230133057
    10. '()' → logprob: -8.543463706970215

Token 120: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.31348103284835815
    2. 'list' → logprob: -1.313481092453003
    3. ' lambda' → logprob: -8.813481330871582
    4. 'lambda' → logprob: -9.563481330871582
    5. 'ist' → logprob: -16.688480377197266
    6. 'List' → logprob: -16.688480377197266
    7. '_list' → logprob: -17.438480377197266
    8. ':list' → logprob: -17.563480377197266
    9. '	list' → logprob: -17.688480377197266
    10. ' l' → logprob: -17.688480377197266

Token 121: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.10496867448091507
    2. '(lambda' → logprob: -2.354968786239624
    3. '(' → logprob: -5.354968547821045
    4. ' (' → logprob: -11.854969024658203
    5. 'map' → logprob: -11.854969024658203
    6. '(range' → logprob: -12.854969024658203
    7. '(
' → logprob: -13.729969024658203
    8. '(mapping' → logprob: -13.729969024658203
    9. '(chain' → logprob: -13.979969024658203
    10. '_map' → logprob: -14.104969024658203

Token 122: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -7.076218025758862e-05
    2. '(' → logprob: -9.875070571899414
    3. 'lambda' → logprob: -11.125070571899414
    4. '=lambda' → logprob: -13.000070571899414
    5. '(int' → logprob: -13.250070571899414
    6. ' (' → logprob: -15.125070571899414
    7. '(
' → logprob: -16.125070571899414
    8. ' lambda' → logprob: -16.625070571899414
    9. '<|end|>' → logprob: -17.000070571899414
    10. '(l' → logprob: -17.375070571899414

Token 123: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2519334554672241
    2. 'x' → logprob: -1.5019334554672241
    3. 'int' → logprob: -12.751933097839355
    4. ' int' → logprob: -14.751933097839355
    5. '(x' → logprob: -15.001933097839355
    6. 'lambda' → logprob: -15.126933097839355
    7. ' lambda' → logprob: -15.251933097839355
    8. '<int' → logprob: -17.376934051513672
    9. '<|end|>' → logprob: -17.376934051513672
    10. '	x' → logprob: -17.876934051513672

Token 124: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022594700567424297
    2. ' :' → logprob: -9.000226020812988
    3. ':int' → logprob: -9.250226020812988
    4. ':x' → logprob: -12.000226020812988
    5. ':
' → logprob: -15.625226020812988
    6. '[int' → logprob: -17.500225067138672
    7. '(x' → logprob: -17.500225067138672
    8. 'int' → logprob: -17.750225067138672
    9. ' x' → logprob: -17.875225067138672
    10. ':return' → logprob: -17.875225067138672

Token 125: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10024484992027283
    2. ' int' → logprob: -2.3502447605133057
    3. '(int' → logprob: -10.350244522094727
    4. '[int' → logprob: -12.725244522094727
    5. '<int' → logprob: -13.100244522094727
    6. ':int' → logprob: -14.600244522094727
    7. '=int' → logprob: -15.100244522094727
    8. ',int' → logprob: -15.600244522094727
    9. '	int' → logprob: -16.475244522094727
    10. ' ' → logprob: -16.975244522094727

Token 126: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.375012397766113
    3. 'x' → logprob: -14.750012397766113
    4. ' (' → logprob: -16.125011444091797
    5. '<|end|>' → logprob: -16.125011444091797
    6. '(
' → logprob: -18.375011444091797
    7. ')' → logprob: -18.375011444091797
    8. '
' → logprob: -19.375011444091797
    9. '```' → logprob: -20.125011444091797
    10. ')(' → logprob: -20.250011444091797

Token 127: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.4374682307243347
    2. '-' → logprob: -1.0624682903289795
    3. ' -' → logprob: -4.8124680519104
    4. ')' → logprob: -7.6874680519104
    5. '()-' → logprob: -9.437468528747559
    6. '}-' → logprob: -10.937468528747559
    7. ']-' → logprob: -11.062468528747559
    8. '[' → logprob: -11.312468528747559
    9. '(x' → logprob: -12.687468528747559
    10. ' )' → logprob: -12.687468528747559

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -11.12502670288086
    3. '0' → logprob: -12.00002670288086
    4. 'x' → logprob: -12.62502670288086
    5. ')' → logprob: -13.62502670288086
    6. 'int' → logprob: -14.75002670288086
    7. '(' → logprob: -14.87502670288086
    8. '-' → logprob: -15.62502670288086
    9. '   ' → logprob: -15.62502670288086
    10. '[' → logprob: -16.12502670288086

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031282080453820527
    2. ',input' → logprob: -8.500312805175781
    3. '),' → logprob: -9.500312805175781
    4. ' ,' → logprob: -10.750312805175781
    5. 'input' → logprob: -11.750312805175781
    6. '(),' → logprob: -13.375312805175781
    7. '))' → logprob: -13.875312805175781
    8. ')' → logprob: -14.125312805175781
    9. '(input' → logprob: -14.750312805175781
    10. ',x' → logprob: -15.125312805175781

Token 130: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31326815485954285
    2. ' input' → logprob: -1.3132681846618652
    3. ' ' → logprob: -12.938267707824707
    4. '(input' → logprob: -13.313267707824707
    5. ',input' → logprob: -14.438267707824707
    6. '<input' → logprob: -14.688267707824707
    7. '[input' → logprob: -14.938267707824707
    8. '	input' → logprob: -15.313267707824707
    9. ')' → logprob: -15.688267707824707
    10. '=input' → logprob: -15.688267707824707

Token 131: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5451681974809617e-05
    2. '.split' → logprob: -11.375015258789062
    3. '()' → logprob: -12.500015258789062
    4. ' ().' → logprob: -16.125015258789062
    5. ')' → logprob: -16.625015258789062
    6. '())' → logprob: -16.750015258789062
    7. '.' → logprob: -17.250015258789062
    8. 'split' → logprob: -17.500015258789062
    9. '()
' → logprob: -18.250015258789062
    10. '()[' → logprob: -18.625015258789062

Token 132: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.008129963040119e-06
    2. ' split' → logprob: -13.125003814697266
    3. ')' → logprob: -13.875003814697266
    4. '(split' → logprob: -15.375003814697266
    5. '.split' → logprob: -15.500003814697266
    6. '())' → logprob: -16.000003814697266
    7. 'strip' → logprob: -16.125003814697266
    8. '()' → logprob: -16.250003814697266
    9. '().' → logprob: -16.625003814697266
    10. 'spl' → logprob: -17.250003814697266

Token 133: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4967079162597656
    2. '()))' → logprob: -0.9967079162597656
    3. '()' → logprob: -3.8717079162597656
    4. '())' → logprob: -6.871707916259766
    5. ')' → logprob: -7.996707916259766
    6. '()))
' → logprob: -8.871707916259766
    7. '))
' → logprob: -10.621707916259766
    8. '(' → logprob: -12.871707916259766
    9. ' ))' → logprob: -12.996707916259766
    10. ')))' → logprob: -12.996707916259766

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.217318594455719
    2. '    
' → logprob: -2.467318534851074
    3. '<|end|>' → logprob: -3.092318534851074
    4. '
' → logprob: -3.717318534851074
    5. ' ' → logprob: -5.217318534851074
    6. ')' → logprob: -5.217318534851074
    7. ' 
' → logprob: -5.467318534851074
    8. '\n' → logprob: -5.592318534851074
    9. 'newline' → logprob: -5.717318534851074
    10. '  
' → logprob: -6.092318534851074

Token 135: ' li' (ID: 3476)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05631189048290253
    2. 'N' → logprob: -4.056312084197998
    3. '   ' → logprob: -4.431312084197998
    4. '#' → logprob: -5.181312084197998
    5. '    
' → logprob: -5.306312084197998
    6. '
' → logprob: -6.181312084197998
    7. '    ' → logprob: -6.431312084197998
    8. ' n' → logprob: -6.556312084197998
    9. 's' → logprob: -6.806312084197998
    10. 'def' → logprob: -6.806312084197998

Token 136: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0006243953830562532
    2. ' =' → logprob: -8.125624656677246
    3. 'sti' → logprob: -9.125624656677246
    4. 'ne' → logprob: -9.750624656677246
    5. '=' → logprob: -10.250624656677246
    6. 'sta' → logprob: -10.375624656677246
    7. '   ' → logprob: -10.875624656677246
    8. 'n' → logprob: -11.125624656677246
    9. 'nt' → logprob: -11.125624656677246
    10. 'sts' → logprob: -11.500624656677246

Token 137: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.43937939405441284
    2. 'lambda' → logprob: -1.0643794536590576
    3. 'ambda' → logprob: -5.4393792152404785
    4. 'mb' → logprob: -6.3143792152404785
    5. ' list' → logprob: -6.6893792152404785
    6. 'st' → logprob: -6.8143792152404785
    7. 'list' → logprob: -7.0643792152404785
    8. '(lambda' → logprob: -7.5643792152404785
    9. '[]' → logprob: -8.814379692077637
    10. ' l' → logprob: -8.814379692077637

Token 138: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4636542499065399
    2. 'st' → logprob: -1.5886542797088623
    3. ':' → logprob: -1.8386542797088623
    4. 's' → logprob: -6.338654041290283
    5. ' :' → logprob: -6.588654041290283
    6. '()' → logprob: -6.588654041290283
    7. ' ():' → logprob: -6.713654041290283
    8. 't' → logprob: -7.463654041290283
    9. 'n' → logprob: -7.838654041290283
    10. ':list' → logprob: -7.963654041290283

Token 139: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.018265826627612114
    2. ' list' → logprob: -4.018265724182129
    3. 'ist' → logprob: -9.268265724182129
    4. 'st' → logprob: -11.768265724182129
    5. 'lst' → logprob: -12.518265724182129
    6. 'int' → logprob: -13.018265724182129
    7. 'l' → logprob: -13.143265724182129
    8. 'sys' → logprob: -13.768265724182129
    9. '[list' → logprob: -13.893265724182129
    10. '	list' → logprob: -14.518265724182129

Token 140: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001550929038785398
    2. '(input' → logprob: -6.501551151275635
    3. '(int' → logprob: -11.251550674438477
    4. '()' → logprob: -11.376550674438477
    5. 'map' → logprob: -11.501550674438477
    6. '(' → logprob: -12.001550674438477
    7. ' map' → logprob: -12.876550674438477
    8. '(range' → logprob: -13.501550674438477
    9. 'input' → logprob: -13.751550674438477
    10. '(eval' → logprob: -14.251550674438477

Token 141: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.27517038583755493
    2. '().' → logprob: -1.5251703262329102
    3. '()' → logprob: -3.77517032623291
    4. '()))' → logprob: -10.90017032623291
    5. ')' → logprob: -11.65017032623291
    6. '();)' → logprob: -12.27517032623291
    7. '()[' → logprob: -12.90017032623291
    8. ' ())' → logprob: -13.40017032623291
    9. '()]' → logprob: -14.02517032623291
    10. '());' → logprob: -14.40017032623291

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25231698155403137
    2. ' ' → logprob: -2.002316951751709
    3. '    
' → logprob: -3.752316951751709
    4. ' 
' → logprob: -4.127316951751709
    5. '    ' → logprob: -4.877316951751709
    6. ')' → logprob: -5.002316951751709
    7. '(' → logprob: -5.502316951751709
    8. '#' → logprob: -5.502316951751709
    9. '\' → logprob: -5.627316951751709
    10. '\n' → logprob: -5.627316951751709

Token 143: ' def' (ID: 1056)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18721358478069305
    2. 'N' → logprob: -1.8122135400772095
    3. 'for' → logprob: -5.56221342086792
    4. '   ' → logprob: -6.56221342086792
    5. 't' → logprob: -7.68721342086792
    6. 'Q' → logprob: -8.062213897705078
    7. 'q' → logprob: -8.062213897705078
    8. 'h' → logprob: -8.312213897705078
    9. '#' → logprob: -8.312213897705078
    10. 'def' (adapté à ' def') → logprob: -9.562213897705078

Token 144: ' all' (ID: 722)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6514140963554382
    2. ' solve' → logprob: -1.901414155960083
    3. ' factorial' → logprob: -2.026414155960083
    4. ' main' → logprob: -3.401414155960083
    5. ' pow' → logprob: -3.526414155960083
    6. ' is' → logprob: -3.651414155960083
    7. ' factor' → logprob: -3.901414155960083
    8. ' input' → logprob: -4.401413917541504
    9. 'dfs' → logprob: -4.901413917541504
    10. ' add' → logprob: -5.151413917541504

Token 145: '_pairs' (ID: 90005)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.07506836950778961
    2. '_com' → logprob: -2.825068473815918
    3. '_' → logprob: -5.075068473815918
    4. '_subset' → logprob: -5.575068473815918
    5. 'sub' → logprob: -6.700068473815918
    6. '_comb' → logprob: -7.575068473815918
    7. '_pairs' → logprob: -8.450068473815918
    8. 'com' → logprob: -8.450068473815918
    9. '_possible' → logprob: -8.575068473815918
    10. '_s' → logprob: -9.200068473815918

Token 146: '(lst' (ID: 95688)
  Prédit: '(iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.5305298566818237
    2. '(lst' → logprob: -1.4055298566818237
    3. '(' → logprob: -2.4055299758911133
    4. '(n' → logprob: -3.4055299758911133
    5. '(l' → logprob: -4.530529975891113
    6. '(s' → logprob: -4.530529975891113
    7. '(chain' → logprob: -4.905529975891113
    8. '(ls' → logprob: -5.405529975891113
    9. '(a' → logprob: -6.530529975891113
    10. '(arr' → logprob: -6.655529975891113

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04463977366685867
    2. '):
' → logprob: -3.169639825820923
    3. ' ):' → logprob: -6.919639587402344
    4. ')' → logprob: -8.044639587402344
    5. ',' → logprob: -9.419639587402344
    6. '   ' → logprob: -9.669639587402344
    7. '():' → logprob: -10.044639587402344
    8. '(lst' → logprob: -10.169639587402344
    9. '()' → logprob: -10.419639587402344
    10. ' ):
' → logprob: -10.794639587402344

Token 148: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19097000360488892
    2. '   ' → logprob: -2.690969944000244
    3. '       ' → logprob: -2.690969944000244
    4. ',' → logprob: -3.690969944000244
    5. '():' → logprob: -5.315969944000244
    6. '):' → logprob: -5.940969944000244
    7. '(' → logprob: -6.190969944000244
    8. ':
' → logprob: -6.315969944000244
    9. '(chain' → logprob: -8.065970420837402
    10. '(lst' → logprob: -8.440970420837402

Token 149: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15697576105594635
    2. ' return' → logprob: -2.281975746154785
    3. 'return' → logprob: -4.031975746154785
    4. ' for' → logprob: -4.406975746154785
    5. '       ' → logprob: -4.781975746154785
    6. ' yield' → logprob: -6.031975746154785
    7. 'for' → logprob: -6.281975746154785
    8. 'yield' → logprob: -7.656975746154785
    9. ' ' → logprob: -10.281975746154785
    10. '    ' → logprob: -10.406975746154785

Token 150: ' Generates' (ID: 124843)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4178800582885742
    2. '   ' → logprob: -2.167880058288574
    3. ' for' → logprob: -2.292880058288574
    4. ' yield' → logprob: -2.417880058288574
    5. ' pairs' → logprob: -4.167880058288574
    6. 'return' → logprob: -4.417880058288574
    7. 'for' → logprob: -5.917880058288574
    8. 'yield' → logprob: -6.542880058288574
    9. ' result' → logprob: -6.792880058288574
    10. '    ' → logprob: -6.917880058288574

Token 151: ' all' (ID: 722)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.6495256423950195
    2. 'com' → logprob: -1.3995256423950195
    3. ' chain' → logprob: -1.7745256423950195
    4. 'chain' → logprob: -3.3995256423950195
    5. '(com' → logprob: -3.8995256423950195
    6. '(chain' → logprob: -5.3995256423950195
    7. '   ' → logprob: -6.0245256423950195
    8. ' list' → logprob: -8.77452564239502
    9. 'comb' → logprob: -9.14952564239502
    10. 'list' → logprob: -9.39952564239502

Token 152: ' ' (ID: 220)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.9775608777999878
    2. ' combinations' → logprob: -0.9775608777999878
    3. 'com' → logprob: -1.6025608777999878
    4. 'pairs' → logprob: -3.7275609970092773
    5. ' pair' → logprob: -4.977560997009277
    6. '(com' → logprob: -5.102560997009277
    7. '_pairs' → logprob: -5.352560997009277
    8. ' (' → logprob: -6.352560997009277
    9. '   ' → logprob: -6.852560997009277
    10. 'pair' → logprob: -7.352560997009277

Token 153: '2' (ID: 17)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.15682150423526764
    2. '(com' → logprob: -2.6568214893341064
    3. 'pairs' → logprob: -2.7818214893341064
    4. 'pair' → logprob: -5.1568217277526855
    5. ' combinations' → logprob: -5.7818217277526855
    6. '(pair' → logprob: -6.7818217277526855
    7. '   ' → logprob: -7.1568217277526855
    8. ' pairs' → logprob: -7.1568217277526855
    9. '(i' → logprob: -7.6568217277526855
    10. '2' → logprob: -8.656821250915527

Token 154: '-com' (ID: 18251)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.6546290516853333
    2. '-com' → logprob: -1.1546289920806885
    3. ' combinations' → logprob: -2.4046289920806885
    4. '-element' → logprob: -3.0296289920806885
    5. ')' → logprob: -5.279629230499268
    6. ' itertools' → logprob: -5.529629230499268
    7. 's' → logprob: -5.779629230499268
    8. '_com' → logprob: -5.779629230499268
    9. '-' → logprob: -6.029629230499268
    10. ' -' → logprob: -6.279629230499268

Token 155: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0010332842357456684
    2. 'b' → logprob: -7.001033306121826
    3. '```' → logprob: -9.876032829284668
    4. 'bin' → logprob: -10.501032829284668
    5. '   ' → logprob: -10.501032829284668
    6. 'bination' → logprob: -11.751032829284668
    7. 'bit' → logprob: -13.251032829284668
    8. '       ' → logprob: -13.376032829284668
    9. 'inations' → logprob: -13.501032829284668
    10. '           ' → logprob: -14.001032829284668

Token 156: ' and' (ID: 326)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.03314463049173355
    2. '   ' → logprob: -3.53314471244812
    3. '(' → logprob: -6.783144474029541
    4. '       ' → logprob: -7.408144474029541
    5. 'lst' → logprob: -8.1581449508667
    6. '<|end|>' → logprob: -8.2831449508667
    7. ')' → logprob: -8.5331449508667
    8. ',' → logprob: -8.7831449508667
    9. ' of' → logprob: -8.9081449508667
    10. ' lst' → logprob: -9.2831449508667

Token 157: ' picks' (ID: 37120)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.5027313828468323
    2. ' chain' → logprob: -1.8777313232421875
    3. ' their' → logprob: -2.5027313232421875
    4. 'their' → logprob: -3.2527313232421875
    5. 'com' → logprob: -3.6277313232421875
    6. '   ' → logprob: -3.8777313232421875
    7. 'yield' → logprob: -4.0027313232421875
    8. 'return' → logprob: -4.0027313232421875
    9. ' yield' → logprob: -5.1277313232421875
    10. 'all' → logprob: -5.1277313232421875

Token 158: ' the' (ID: 290)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.3877415955066681
    2. 'pairs' → logprob: -2.5127415657043457
    3. 'lst' → logprob: -2.8877415657043457
    4. ' pairs' → logprob: -3.0127415657043457
    5. 'from' → logprob: -3.3877415657043457
    6. 'com' → logprob: -3.6377415657043457
    7. ' the' → logprob: -4.512741565704346
    8. ' from' → logprob: -4.637741565704346
    9. '(chain' → logprob: -4.887741565704346
    10. '   ' → logprob: -5.012741565704346

Token 159: ' one' (ID: 1001)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8539295792579651
    2. ' first' → logprob: -1.6039295196533203
    3. 'first' → logprob: -1.8539295196533203
    4. 'next' → logprob: -2.2289295196533203
    5. ' pairs' → logprob: -3.9789295196533203
    6. ' rest' → logprob: -4.22892951965332
    7. 'pairs' → logprob: -4.22892951965332
    8. ' elements' → logprob: -4.85392951965332
    9. ' combinations' → logprob: -4.85392951965332
    10. 'com' → logprob: -5.35392951965332

Token 160: ' with' (ID: 483)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7470422387123108
    2. 's' → logprob: -1.122042179107666
    3. '   ' → logprob: -3.122042179107666
    4. ' of' → logprob: -3.372042179107666
    5. ',' → logprob: -3.872042179107666
    6. '(
' → logprob: -3.872042179107666
    7. ' with' → logprob: -3.872042179107666
    8. '(s' → logprob: -4.622042179107666
    9. '    ' → logprob: -5.372042179107666
    10. 'from' → logprob: -5.372042179107666

Token 161: ' smallest' (ID: 42173)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2972724437713623
    2. ' max' → logprob: -1.5472724437713623
    3. ' maximum' → logprob: -2.0472724437713623
    4. ' minimum' → logprob: -2.0472724437713623
    5. ' minimal' → logprob: -2.4222724437713623
    6. ' the' → logprob: -2.9222724437713623
    7. 'min' → logprob: -3.2972724437713623
    8. 'minimum' → logprob: -3.2972724437713623
    9. ' min' → logprob: -3.9222724437713623
    10. 'maximum' → logprob: -5.047272682189941

Token 162: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7614660859107971
    2. ' length' → logprob: -1.7614660263061523
    3. ' distance' → logprob: -2.0114660263061523
    4. ' difference' → logprob: -2.1364660263061523
    5. ' lex' → logprob: -3.5114660263061523
    6. 'sum' → logprob: -3.7614660263061523
    7. 'distance' → logprob: -4.261466026306152
    8. 'difference' → logprob: -5.011466026306152
    9. ' range' → logprob: -5.136466026306152
    10. ' key' → logprob: -5.386466026306152

Token 163: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7995944023132324
    2. '       ' → logprob: -0.9245944023132324
    3. '(lst' → logprob: -3.1745944023132324
    4. ' for' → logprob: -3.6745944023132324
    5. ',' → logprob: -3.9245944023132324
    6. ':' → logprob: -4.049594402313232
    7. ' of' → logprob: -4.174594402313232
    8. '(' → logprob: -4.799594402313232
    9. ' return' → logprob: -5.674594402313232
    10. ' (' → logprob: -5.674594402313232

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08559361845254898
    2. ':' → logprob: -3.3355937004089355
    3. '   ' → logprob: -3.5855937004089355
    4. '<|end|>' → logprob: -5.0855937004089355
    5. '(' → logprob: -5.8355937004089355
    6. ' ' → logprob: -5.9605937004089355
    7. '        
' → logprob: -6.8355937004089355
    8. ',' → logprob: -7.0855937004089355
    9. '    ' → logprob: -7.0855937004089355
    10. '):' → logprob: -7.4605937004089355

Token 165: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7651598453521729
    2. '       ' → logprob: -2.015159845352173
    3. ' return' → logprob: -2.515159845352173
    4. 'pairs' → logprob: -2.515159845352173
    5. 'return' (adapté à ' return') → logprob: -2.640159845352173
    6. ' pairs' → logprob: -3.390159845352173
    7. ' min' → logprob: -3.515159845352173
    8. 'min' → logprob: -3.640159845352173
    9. ' for' → logprob: -4.015159606933594
    10. ' if' → logprob: -4.265159606933594

Token 166: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5774379372596741
    2. ' min' → logprob: -0.8274379372596741
    3. '(min' → logprob: -6.702437877655029
    4. 'reduce' → logprob: -8.952438354492188
    5. '   ' → logprob: -10.077438354492188
    6. '[min' → logprob: -10.202438354492188
    7. ' reduce' → logprob: -10.827438354492188
    8. ' ' → logprob: -12.202438354492188
    9. 'sorted' → logprob: -12.202438354492188
    10. 'com' → logprob: -12.452438354492188

Token 167: '((' (ID: 2054)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0006386925233528018
    2. '(' → logprob: -8.000638961791992
    3. '(list' → logprob: -8.875638961791992
    4. 'com' → logprob: -9.625638961791992
    5. '((' → logprob: -10.000638961791992
    6. '(chain' → logprob: -10.125638961791992
    7. 'list' → logprob: -12.250638961791992
    8. '   ' → logprob: -13.000638961791992
    9. '(tuple' → logprob: -13.500638961791992
    10. '([' → logprob: -13.875638961791992

Token 168: 'pair' (ID: 25488)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.3312238454818726
    2. 'sum' → logprob: -1.4562238454818726
    3. '(sum' → logprob: -1.8312238454818726
    4. '(x' → logprob: -1.9562238454818726
    5. 'x' → logprob: -2.581223964691162
    6. 'a' → logprob: -2.956223964691162
    7. '(com' → logprob: -3.581223964691162
    8. 'com' → logprob: -4.706223964691162
    9. '(pair' → logprob: -5.206223964691162
    10. 'pair' → logprob: -5.331223964691162

Token 169: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12859366834163666
    2. ',' → logprob: -2.378593683242798
    3. 'for' → logprob: -4.378593444824219
    4. '(pair' → logprob: -4.503593444824219
    5. ')' → logprob: -6.753593444824219
    6. ' pair' → logprob: -6.878593444824219
    7. ' ,' → logprob: -7.753593444824219
    8. '(lst' → logprob: -8.253593444824219
    9. '(s' → logprob: -8.628593444824219
    10. '(tuple' → logprob: -8.753593444824219

Token 170: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.18001918494701385
    2. 'pair' → logprob: -1.8050191402435303
    3. '(pair' → logprob: -8.55501937866211
    4. '_pair' → logprob: -11.05501937866211
    5. 'com' → logprob: -11.18001937866211
    6. 'comb' → logprob: -11.30501937866211
    7. ' ' → logprob: -12.55501937866211
    8. ' combinations' → logprob: -12.74251937866211
    9. '<pair' → logprob: -12.86751937866211
    10. 'pairs' → logprob: -12.93001937866211

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023372430354356766
    2. 'in' → logprob: -3.7733724117279053
    3. ' pair' → logprob: -10.648372650146484
    4. ',' → logprob: -10.773372650146484
    5. 'pair' → logprob: -10.773372650146484
    6. ')' → logprob: -11.148372650146484
    7. '),' → logprob: -12.148372650146484
    8. 's' → logprob: -12.148372650146484
    9. '_in' → logprob: -12.523372650146484
    10. 'import' → logprob: -12.523372650146484

Token 172: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.07895071059465408
    2. ' combinations' → logprob: -2.5789506435394287
    3. '(com' → logprob: -11.078950881958008
    4. '	com' → logprob: -11.203950881958008
    5. 'comb' → logprob: -11.703950881958008
    6. '   ' → logprob: -11.828950881958008
    7. 'chain' → logprob: -12.328950881958008
    8. ' com' → logprob: -12.828950881958008
    9. '```' → logprob: -13.328950881958008
    10. '_com' → logprob: -13.703950881958008

Token 173: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -8.339776832144707e-05
    2. '(' → logprob: -10.625082969665527
    3. 'lst' → logprob: -10.625082969665527
    4. '(l' → logprob: -11.250082969665527
    5. ' (' → logprob: -11.750082969665527
    6. ' lst' → logprob: -12.750082969665527
    7. '(ls' → logprob: -13.000082969665527
    8. ')' → logprob: -13.250082969665527
    9. '(range' → logprob: -13.875082969665527
    10. '   ' → logprob: -14.250082969665527

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014421581290662289
    2. ' ,' → logprob: -4.389421463012695
    3. '(' → logprob: -6.764421463012695
    4. '(),' → logprob: -7.264421463012695
    5. '   ' → logprob: -10.139421463012695
    6. '),' → logprob: -12.014421463012695
    7. '2' → logprob: -13.139421463012695
    8. ')),' → logprob: -13.389421463012695
    9. '    ' → logprob: -13.889421463012695
    10. '  ' → logprob: -14.514421463012695

Token 175: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054891880601644516
    2. ' ' → logprob: -2.92989182472229
    3. '   ' → logprob: -12.554891586303711
    4. '  ' → logprob: -12.679891586303711
    5. ')' → logprob: -13.554891586303711
    6. '    ' → logprob: -15.179891586303711
    7. '
' → logprob: -15.554891586303711
    8. 'def' → logprob: -15.867391586303711
    9. ' ' → logprob: -16.17989158630371
    10. '```' → logprob: -16.17989158630371

Token 176: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000912774819880724
    2. ' ' → logprob: -7.000912666320801
    3. ')' → logprob: -14.2509126663208
    4. '   ' → logprob: -14.7509126663208
    5. '  ' → logprob: -16.625913619995117
    6. 'def' → logprob: -16.813413619995117
    7. '=' → logprob: -17.625913619995117
    8. '3' → logprob: -17.875913619995117
    9. ' two' → logprob: -18.000913619995117
    10. 'two' → logprob: -18.438413619995117

Token 177: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009810051415115595
    2. ',' → logprob: -7.625980854034424
    3. ')),' → logprob: -8.500981330871582
    4. ' if' → logprob: -8.875981330871582
    5. ' ),' → logprob: -9.625981330871582
    6. 'if' → logprob: -10.375981330871582
    7. '   ' → logprob: -10.875981330871582
    8. ')' → logprob: -10.875981330871582
    9. ',),' → logprob: -11.500981330871582
    10. '))' → logprob: -13.125981330871582

Token 178: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.12694668769836426
    2. ' key' → logprob: -2.1269466876983643
    3. '   ' → logprob: -11.376946449279785
    4. 'lambda' → logprob: -12.501946449279785
    5. '(key' → logprob: -13.376946449279785
    6. '	key' → logprob: -13.876946449279785
    7. ',key' → logprob: -14.751946449279785
    8. '
' → logprob: -15.501946449279785
    9. '  ' → logprob: -16.1269474029541
    10. 'default' → logprob: -16.2519474029541

Token 179: '=sum' (ID: 174693)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.008689268492162228
    2. '=' → logprob: -4.7586894035339355
    3. '=sum' → logprob: -9.508688926696777
    4. '=
' → logprob: -14.883688926696777
    5. '=_' → logprob: -16.633689880371094
    6. '=

' → logprob: -16.633689880371094
    7. ' =' → logprob: -17.133689880371094
    8. '=len' → logprob: -17.133689880371094
    9. '=\' → logprob: -17.633689880371094
    10. '=l' → logprob: -17.883689880371094

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8351892473874614e-05
    2. ' )' → logprob: -10.750048637390137
    3. ')
' → logprob: -11.625048637390137
    4. '   ' → logprob: -11.875048637390137
    5. '))' → logprob: -12.000048637390137
    6. '),' → logprob: -13.625048637390137
    7. ')}' → logprob: -14.125048637390137
    8. ',' → logprob: -14.125048637390137
    9. ')#' → logprob: -15.125048637390137
    10. ')return' → logprob: -15.250048637390137

Token 181: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14347265660762787
    2. '#' → logprob: -2.893472671508789
    3. 'for' → logprob: -4.268472671508789
    4. 'pairs' → logprob: -4.268472671508789
    5. ')' → logprob: -4.518472671508789
    6. 'if' → logprob: -5.518472671508789
    7. '<|end|>' → logprob: -5.643472671508789
    8. 'rest' → logprob: -5.643472671508789
    9. 'def' → logprob: -5.768472671508789
    10. 'pass' → logprob: -5.893472671508789

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026861557736992836
    2. '=' → logprob: -4.151861667633057
    3. 'en' → logprob: -5.276861667633057
    4. '   ' → logprob: -6.651861667633057
    5. ',' → logprob: -6.901861667633057
    6. 'i' → logprob: -7.026861667633057
    7. ' ' → logprob: -7.901861667633057
    8. 'I' → logprob: -8.151861190795898
    9. 'ist' → logprob: -8.401861190795898
    10. 'ength' → logprob: -8.776861190795898

Token 184: ' l' (ID: 305)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.8886897563934326
    2. 'l' → logprob: -1.1386897563934326
    3. ' l' → logprob: -2.1386897563934326
    4. ' li' → logprob: -2.7636897563934326
    5. 'list' → logprob: -3.5136897563934326
    6. '[' → logprob: -4.138689994812012
    7. '[]' → logprob: -4.763689994812012
    8. 'int' → logprob: -5.013689994812012
    9. ' list' → logprob: -5.263689994812012
    10. ' [' → logprob: -5.263689994812012

Token 185: 'mi' (ID: 3900)
  Prédit: 'mi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.08410009741783142
    2. 'i' → logprob: -2.8341000080108643
    3. 'ist' → logprob: -4.084100246429443
    4. '()' → logprob: -5.834100246429443
    5. '(mi' → logprob: -7.959100246429443
    6. '(L' → logprob: -8.084099769592285
    7. '(' → logprob: -8.209099769592285
    8. 'ambda' → logprob: -8.834099769592285
    9. 'm' → logprob: -9.084099769592285
    10. '[i' → logprob: -9.209099769592285

Token 186: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005037044174969196
    2. '()
' → logprob: -8.250503540039062
    3. '(' → logprob: -8.500503540039062
    4. '()[' → logprob: -11.125503540039062
    5. ' ()' → logprob: -11.500503540039062
    6. '()\' → logprob: -13.250503540039062
    7. '()]' → logprob: -13.375503540039062
    8. '(),' → logprob: -13.500503540039062
    9. '()

' → logprob: -13.500503540039062
    10. '_' → logprob: -13.875503540039062

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03491154685616493
    2. '    
' → logprob: -4.909911632537842
    3. ',' → logprob: -5.284911632537842
    4. ' for' → logprob: -5.659911632537842
    5. 'for' → logprob: -5.784911632537842
    6. 'pairs' → logprob: -6.034911632537842
    7. '
' → logprob: -6.159911632537842
    8. 'a' → logprob: -6.784911632537842
    9. 's' → logprob: -6.909911632537842
    10. ')' → logprob: -6.909911632537842

Token 188: ' min' (ID: 1349)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18994778394699097
    2. 'x' → logprob: -3.4399478435516357
    3. 'ans' → logprob: -3.8149478435516357
    4. 'p' → logprob: -4.064947605133057
    5. 'if' → logprob: -4.189947605133057
    6. 'pair' → logprob: -4.314947605133057
    7. 'res' → logprob: -4.439947605133057
    8. 'result' → logprob: -4.439947605133057
    9. 'pairs' → logprob: -4.439947605133057
    10. 'print' → logprob: -4.564947605133057

Token 189: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.46394312381744385
    2. '_sum' → logprob: -1.7139431238174438
    3. '_val' → logprob: -1.8389431238174438
    4. '_' → logprob: -3.5889430046081543
    5. '1' → logprob: -6.588943004608154
    6. '_pairs' → logprob: -7.463943004608154
    7. '_value' → logprob: -7.588943004608154
    8. 'sum' → logprob: -8.213943481445312
    9. '_p' → logprob: -8.338943481445312
    10. '_a' → logprob: -8.463943481445312

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2530159652233124
    2. '=' → logprob: -1.5030159950256348
    3. ',' → logprob: -7.003015995025635
    4. '_' → logprob: -9.378015518188477
    5. 's' → logprob: -9.378015518188477
    6. '(' → logprob: -12.628015518188477
    7. ')' → logprob: -13.378015518188477
    8. ' ' → logprob: -14.753015518188477
    9. '_=' → logprob: -14.753015518188477
    10. 'x' → logprob: -14.878015518188477

Token 191: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.06994343549013138
    2. ' all' → logprob: -2.694943428039551
    3. 'min' → logprob: -13.06994342803955
    4. '   ' → logprob: -13.06994342803955
    5. ' ' → logprob: -13.69494342803955
    6. '(all' → logprob: -14.06994342803955
    7. ' min' → logprob: -14.31994342803955
    8. '	all' → logprob: -15.31994342803955
    9. '  ' → logprob: -17.319944381713867
    10. 'list' → logprob: -17.444944381713867

Token 192: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.00014132341311778873
    2. '_pair' → logprob: -8.875141143798828
    3. '(L' → logprob: -14.250141143798828
    4. '(_' → logprob: -15.625141143798828
    5. 'pairs' → logprob: -15.750141143798828
    6. '_' → logprob: -16.000141143798828
    7. '_pa' → logprob: -16.625141143798828
    8. 'pair' → logprob: -16.875141143798828
    9. '_p' → logprob: -16.875141143798828
    10. ')_' → logprob: -17.000141143798828

Token 193: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.625001907348633
    3. 'L' → logprob: -15.250001907348633
    4. ' (' → logprob: -16.625001907348633
    5. '(
' → logprob: -18.000001907348633
    6. '(l' → logprob: -18.000001907348633
    7. '((' → logprob: -18.750001907348633
    8. '```' → logprob: -19.125001907348633
    9. '(lst' → logprob: -19.375001907348633
    10. '(S' → logprob: -19.625001907348633

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8550976164988242e-05
    2. ')
' → logprob: -11.250018119812012
    3. ' )' → logprob: -12.375018119812012
    4. '))' → logprob: -14.000018119812012
    5. '()' → logprob: -16.500019073486328
    6. ')

' → logprob: -16.625019073486328
    7. ')[' → logprob: -16.750019073486328
    8. '())' → logprob: -17.125019073486328
    9. ',)' → logprob: -17.375019073486328
    10. ')
' → logprob: -17.875019073486328

Token 195: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8675704598426819
    2. '   ' → logprob: -0.8675704598426819
    3. '<|end|>' → logprob: -1.867570400238037
    4. 'print' → logprob: -6.367570400238037
    5. '    
' → logprob: -6.867570400238037
    6. '
' → logprob: -7.242570400238037
    7. '(' → logprob: -7.617570400238037
    8. '    ' → logprob: -7.617570400238037
    9. '#' → logprob: -7.867570400238037
    10. '<|end|>' → logprob: -9.242570877075195

Token 196: ' s' (ID: 265)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.131673201918602
    2. '   ' → logprob: -2.6316730976104736
    3. ')' → logprob: -3.1316730976104736
    4. 'for' → logprob: -5.381673336029053
    5. 'sum' → logprob: -6.756673336029053
    6. 'result' → logprob: -7.506673336029053
    7. ' print' → logprob: -8.631672859191895
    8. '#' → logprob: -8.756672859191895
    9. ' for' → logprob: -8.881672859191895
    10. '(' → logprob: -8.881672859191895

Token 197: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.015770506113767624
    2. ' =' → logprob: -4.640770435333252
    3. 'ys' → logprob: -5.515770435333252
    4. '=' → logprob: -7.140770435333252
    5. '_' → logprob: -8.64077091217041
    6. 'u' → logprob: -9.01577091217041
    7. 'y' → logprob: -9.51577091217041
    8. '   ' → logprob: -9.64077091217041
    9. 'ystem' → logprob: -9.64077091217041
    10. ' um' → logprob: -9.64077091217041

Token 198: ' reduce' (ID: 10389)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6843269467353821
    2. ' sum' → logprob: -1.4343268871307373
    3. ' min' → logprob: -2.0593268871307373
    4. 'min' → logprob: -2.0593268871307373
    5. 'um' → logprob: -6.434327125549316
    6. '0' → logprob: -8.309327125549316
    7. ' ' → logprob: -8.809327125549316
    8. '(min' → logprob: -10.059327125549316
    9. '   ' → logprob: -10.434327125549316
    10. '(sum' → logprob: -10.684327125549316

Token 199: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.011725515127182007
    2. '(' → logprob: -4.636725425720215
    3. '(operator' → logprob: -6.761725425720215
    4. '(int' → logprob: -7.886725425720215
    5. '(sum' → logprob: -8.136725425720215
    6. '```' → logprob: -10.011725425720215
    7. 'lambda' → logprob: -10.761725425720215
    8. '(add' → logprob: -10.886725425720215
    9. ' (' → logprob: -10.886725425720215
    10. '((' → logprob: -11.261725425720215

Token 200: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.0028723925352096558
    2. ',' → logprob: -5.877872467041016
    3. ',__' → logprob: -10.002872467041016
    4. '.add' → logprob: -11.502872467041016
    5. ').__' → logprob: -12.377872467041016
    6. '__.__' → logprob: -13.627872467041016
    7. '.append' → logprob: -14.252872467041016
    8. ',int' → logprob: -14.252872467041016
    9. 'or' → logprob: -14.377872467041016
    10. ',sum' → logprob: -14.377872467041016

Token 201: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.00041398804751224816
    2. 'mul' → logprob: -8.00041389465332
    3. 'xor' → logprob: -9.87541389465332
    4. 'or' → logprob: -10.87541389465332
    5. 'sub' → logprob: -12.37541389465332
    6. 'and' → logprob: -13.00041389465332
    7. 'pow' → logprob: -14.62541389465332
    8. 'sum' → logprob: -15.12541389465332
    9. 'i' → logprob: -15.75041389465332
    10. 'flo' → logprob: -15.75041389465332

Token 202: '__,' (ID: 23783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000584249384701252
    2. ',min' → logprob: -7.625584125518799
    3. ',s' → logprob: -10.375584602355957
    4. ' ,' → logprob: -10.500584602355957
    5. '__,' → logprob: -11.000584602355957
    6. ',m' → logprob: -12.000584602355957
    7. ',int' → logprob: -13.125584602355957
    8. ',len' → logprob: -13.125584602355957
    9. '_,' → logprob: -13.500584602355957
    10. ',map' → logprob: -13.750584602355957

Token 203: ' min' (ID: 1349)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.17211169004440308
    2. ' L' → logprob: -2.547111749649048
    3. 'min' → logprob: -2.797111749649048
    4. ' min' → logprob: -4.047111511230469
    5. '   ' → logprob: -7.547111511230469
    6. ')' → logprob: -7.797111511230469
    7. '    ' → logprob: -9.172111511230469
    8. '[min' → logprob: -9.422111511230469
    9. ' ' → logprob: -9.922111511230469
    10. ',' → logprob: -10.672111511230469

Token 204: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -1.7432603272027336e-06
    2. 'pair' → logprob: -13.750001907348633
    3. '_pairs' → logprob: -14.500001907348633
    4. '(pair' → logprob: -17.000001907348633
    5. 'Pair' → logprob: -17.750001907348633
    6. ')_' → logprob: -18.250001907348633
    7. '_PAIR' → logprob: -18.625001907348633
    8. ' pair' → logprob: -19.000001907348633
    9. '_p' → logprob: -19.375001907348633
    10. ')' → logprob: -19.500001907348633

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009053878602571785
    2. ')
' → logprob: -7.375905513763428
    3. ',' → logprob: -8.37590503692627
    4. ' )' → logprob: -10.50090503692627
    5. ')+' → logprob: -11.75090503692627
    6. '+' → logprob: -12.62590503692627
    7. '))' → logprob: -13.00090503692627
    8. ')%' → logprob: -13.87590503692627
    9. ')return' → logprob: -13.87590503692627
    10. '   ' → logprob: -14.00090503692627

Token 206: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.397905558347702
    2. '
' → logprob: -2.1479055881500244
    3. '<|end|>' → logprob: -2.1479055881500244
    4. '()' → logprob: -2.8979055881500244
    5. '(' → logprob: -4.272905349731445
    6. '\' → logprob: -5.147905349731445
    7. '+' → logprob: -5.272905349731445
    8. '#' → logprob: -5.772905349731445
    9. '   ' → logprob: -5.772905349731445
    10. '\n' → logprob: -6.772905349731445

Token 207: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46612367033958435
    2. '<|end|>' → logprob: -1.4661237001419067
    3. '
' → logprob: -2.841123580932617
    4. '   ' → logprob: -3.591123580932617
    5. 'print' → logprob: -3.716123580932617
    6. '\n' → logprob: -4.716123580932617
    7. '#' (adapté à ' #') → logprob: -5.091123580932617
    8. ' ' → logprob: -5.341123580932617
    9. '(s' → logprob: -5.841123580932617
    10. 's' → logprob: -6.216123580932617

Token 208: ' unnecessarily' (ID: 169842)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3039548695087433
    2. ' print' → logprob: -1.928954839706421
    3. ')' → logprob: -3.178954839706421
    4. ' s' → logprob: -3.553954839706421
    5. ' ' → logprob: -3.928954839706421
    6. 's' → logprob: -4.553955078125
    7. ' for' → logprob: -5.553955078125
    8. ' if' → logprob: -6.303955078125
    9. ' return' → logprob: -6.553955078125
    10. ' )' → logprob: -6.678955078125

Token 209: ' decom' (ID: 57661)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9295897483825684
    2. 's' → logprob: -1.8045897483825684
    3. ' complex' → logprob: -1.8045897483825684
    4. ' for' → logprob: -2.4295897483825684
    5. '   ' → logprob: -3.1795897483825684
    6. 'for' → logprob: -3.3045897483825684
    7. 'complex' → logprob: -3.5545897483825684
    8. ' sum' → logprob: -4.179589748382568
    9. '    ' → logprob: -4.929589748382568
    10. ' ' → logprob: -5.179589748382568

Token 210: 'poses' (ID: 13406)
  Prédit: 'posing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posing' → logprob: -0.08563367277383804
    2. 'pose' → logprob: -2.7106337547302246
    3. 'posed' → logprob: -4.210633754730225
    4. 'poses' → logprob: -8.710633277893066
    5. 'pos' → logprob: -8.710633277893066
    6. 'p' → logprob: -8.835633277893066
    7. '
' → logprob: -9.710633277893066
    8. '```' → logprob: -9.835633277893066
    9. '[' → logprob: -10.335633277893066
    10. '-' → logprob: -10.710633277893066

Token 211: ' sum' (ID: 4215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1949700117111206
    2. 'min' → logprob: -1.3199700117111206
    3. ' into' → logprob: -1.8199700117111206
    4. ' min' → logprob: -1.9449700117111206
    5. 's' → logprob: -3.31997013092041
    6. ' s' → logprob: -4.06997013092041
    7. ' the' → logprob: -4.56997013092041
    8. ' L' → logprob: -4.81997013092041
    9. ')' → logprob: -4.94497013092041
    10. ' to' → logprob: -4.94497013092041

Token 212: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5384000539779663
    2. '<|end|>' → logprob: -2.038400173187256
    3. '()' → logprob: -2.288400173187256
    4. ')' → logprob: -2.413400173187256
    5. ' ' → logprob: -2.663400173187256
    6. ' =' → logprob: -2.913400173187256
    7. '(' → logprob: -3.038400173187256
    8. '.' → logprob: -3.163400173187256
    9. '
' → logprob: -3.163400173187256
    10. '<|end|>' → logprob: -3.538400173187256

Token 213: ' chain' (ID: 13464)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.368686318397522
    2. 'min' → logprob: -2.3686861991882324
    3. 'map' → logprob: -2.3686861991882324
    4. 'sum' → logprob: -2.4936861991882324
    5. ' lambda' → logprob: -2.9936861991882324
    6. 's' → logprob: -2.9936861991882324
    7. 'div' → logprob: -3.1186861991882324
    8. 'a' → logprob: -3.3686861991882324
    9. ' map' → logprob: -3.9936861991882324
    10. 'plus' → logprob: -4.368686199188232

Token 214: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.552750825881958
    2. 'for' → logprob: -2.427750825881958
    3. ' for' → logprob: -2.927750825881958
    4. 's' → logprob: -3.177750825881958
    5. 'pairs' → logprob: -3.552750825881958
    6. '.' → logprob: -3.927750825881958
    7. '   ' → logprob: -3.927750825881958
    8. '_' → logprob: -4.052750587463379
    9. '_pairs' → logprob: -4.052750587463379
    10. '(chain' → logprob: -4.177750587463379

Token 215: ' tuple' (ID: 31311)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.31105858087539673
    2. 'list' → logprob: -3.186058521270752
    3. 'sum' → logprob: -3.186058521270752
    4. 'min' → logprob: -3.561058521270752
    5. ' chain' → logprob: -3.561058521270752
    6. 'flatten' → logprob: -3.686058521270752
    7. 'map' → logprob: -3.811058521270752
    8. 'filter' → logprob: -3.936058521270752
    9. 'tuple' → logprob: -4.811058521270752
    10. 's' → logprob: -4.811058521270752

Token 216: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.274457186460495
    2. '(
' → logprob: -2.5244572162628174
    3. ',' → logprob: -3.2744572162628174
    4. 's' → logprob: -3.5244572162628174
    5. '()' → logprob: -3.7744572162628174
    6. 'result' → logprob: -4.649456977844238
    7. '_' → logprob: -4.649456977844238
    8. '(chain' → logprob: -5.024456977844238
    9. '(s' → logprob: -5.774456977844238
    10. 'chain' → logprob: -5.899456977844238

Token 217: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3696867525577545
    2. 's' → logprob: -2.7446868419647217
    3. '   ' → logprob: -3.2446868419647217
    4. '
' → logprob: -3.4946868419647217
    5. 'result' → logprob: -3.4946868419647217
    6. ')' → logprob: -3.9946868419647217
    7. '()' → logprob: -3.9946868419647217
    8. '(' → logprob: -4.119686603546143
    9. ',
' → logprob: -4.119686603546143
    10. ' s' → logprob: -4.369686603546143

Token 218: ' print' (ID: 2123)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.20759916305542
    2. 'pairs' → logprob: -2.08259916305542
    3. 'res' → logprob: -2.33259916305542
    4. 'sum' → logprob: -2.58259916305542
    5. 'result' → logprob: -2.95759916305542
    6. 'for' → logprob: -2.95759916305542
    7. 't' → logprob: -3.08259916305542
    8. 'pair' → logprob: -3.70759916305542
    9. 'p' → logprob: -3.83259916305542
    10. 'lst' → logprob: -3.83259916305542

Token 219: '(tuple' (ID: 133029)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.05219671502709389
    2. '(' → logprob: -3.552196741104126
    3. '(tuple' → logprob: -4.552196502685547
    4. '(sum' → logprob: -5.302196502685547
    5. 's' → logprob: -5.802196502685547
    6. '((' → logprob: -6.552196502685547
    7. '(*' → logprob: -6.677196502685547
    8. '(chain' → logprob: -8.177196502685547
    9. '(min' → logprob: -8.927196502685547
    10. '(list' → logprob: -9.177196502685547

Token 220: '(chain' (ID: 124348)
  Prédit: '(chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.0017433661269024014
    2. '(min' → logprob: -7.376743316650391
    3. 'chain' → logprob: -7.501743316650391
    4. '([' → logprob: -8.50174331665039
    5. '(map' → logprob: -8.87674331665039
    6. '(s' → logprob: -9.25174331665039
    7. '((' → logprob: -10.00174331665039
    8. 'min' → logprob: -10.12674331665039
    9. '(re' → logprob: -11.62674331665039
    10. '(sorted' → logprob: -12.25174331665039

Token 221: '([' (ID: 5194)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.8475582599639893
    2. '([' → logprob: -1.0975582599639893
    3. '((' → logprob: -2.0975582599639893
    4. '.from' → logprob: -3.4725582599639893
    5. '(s' → logprob: -3.5975582599639893
    6. '(*' → logprob: -3.7225582599639893
    7. '(map' → logprob: -4.34755802154541
    8. '(str' → logprob: -4.47255802154541
    9. '(' → logprob: -4.97255802154541
    10. '(*(' → logprob: -7.72255802154541

Token 222: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005381149239838123
    2. 'min' → logprob: -5.505381107330322
    3. ' s' → logprob: -7.630381107330322
    4. '(s' → logprob: -8.25538158416748
    5. '   ' → logprob: -8.38038158416748
    6. 'sum' → logprob: -8.75538158416748
    7. ' ' → logprob: -9.88038158416748
    8. '(min' → logprob: -10.63038158416748
    9. 'int' → logprob: -11.00538158416748
    10. '  ' → logprob: -11.38038158416748

Token 223: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.025048481300473213
    2. ',' → logprob: -3.9000484943389893
    3. '],[' → logprob: -5.52504825592041
    4. ' ],' → logprob: -8.65004825592041
    5. '),' → logprob: -9.65004825592041
    6. ']' → logprob: -9.90004825592041
    7. ']))' → logprob: -9.90004825592041
    8. '])))' → logprob: -9.90004825592041
    9. '],
' → logprob: -10.15004825592041
    10. '],

' → logprob: -11.40004825592041

Token 224: '))[' (ID: 101036)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.017364025115966797
    2. ' min' → logprob: -4.267364025115967
    3. '[min' → logprob: -7.017364025115967
    4. '(min' → logprob: -7.267364025115967
    5. 's' → logprob: -8.392364501953125
    6. '   ' → logprob: -8.392364501953125
    7. '[]' → logprob: -8.517364501953125
    8. 'tuple' → logprob: -8.642364501953125
    9. 'list' → logprob: -8.892364501953125
    10. 'L' → logprob: -9.017364501953125

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14659865200519562
    2. '))' → logprob: -2.1465985774993896
    3. ')' → logprob: -4.396598815917969
    4. ')))' → logprob: -5.771598815917969
    5. ')])' → logprob: -5.896598815917969
    6. ']))' → logprob: -7.771598815917969
    7. '])' → logprob: -8.146598815917969
    8. ':' → logprob: -8.396598815917969
    9. '-' → logprob: -9.271598815917969
    10. ')]' → logprob: -9.396598815917969

Token 226: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25195521116256714
    2. '))' → logprob: -1.501955270767212
    3. ')))' → logprob: -11.251955032348633
    4. ')
' → logprob: -12.251955032348633
    5. ' )' → logprob: -12.626955032348633
    6. '])' → logprob: -13.126955032348633
    7. '))
' → logprob: -14.376955032348633
    8. ')`' → logprob: -14.626955032348633
    9. '})' → logprob: -14.751955032348633
    10. ' ))' → logprob: -14.876955032348633

Token 227: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010229245526716113
    2. '
' → logprob: -7.751022815704346
    3. '\n' → logprob: -7.876022815704346
    4. '(' → logprob: -9.376023292541504
    5. '\' → logprob: -10.626023292541504
    6. '<|end|>' → logprob: -11.126023292541504
    7. '```' → logprob: -11.126023292541504
    8. ' )' → logprob: -11.251023292541504
    9. '  
' → logprob: -11.751023292541504
    10. 'newline' → logprob: -12.001023292541504

Token 228: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009725039824843407
    2. '__' → logprob: -4.759725093841553
    3. ' ' → logprob: -7.134725093841553
    4. '_' → logprob: -8.259724617004395
    5. '_name' → logprob: -10.884724617004395
    6. ' _' → logprob: -11.009724617004395
    7. ' ' → logprob: -11.884724617004395
    8. ' ' → logprob: -13.134724617004395
    9. ' space' → logprob: -13.634724617004395
    10. ' ___' → logprob: -13.634724617004395

Token 229: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19823014736175537
    2. ' ==' → logprob: -1.8232301473617554
    3. '==' → logprob: -4.073230266571045
    4. ' __' → logprob: -6.698230266571045
    5. '=="' → logprob: -10.698229789733887
    6. '.__' → logprob: -11.698229789733887
    7. '_' → logprob: -12.073229789733887
    8. '=='' → logprob: -12.323229789733887
    9. ' =="' → logprob: -12.323229789733887
    10. '__.__' → logprob: -12.698229789733887

Token 230: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.951771421066951e-05
    2. '==' → logprob: -10.500029563903809
    3. '__.__' → logprob: -13.750029563903809
    4. ' ==' → logprob: -14.875029563903809
    5. '__
' → logprob: -15.625029563903809
    6. '___' → logprob: -16.625028610229492
    7. '__.' → logprob: -16.875028610229492
    8. '_' → logprob: -16.875028610229492
    9. '____' → logprob: -16.875028610229492
    10. '__('' → logprob: -17.375028610229492

Token 231: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25480931997299194
    2. '==' → logprob: -1.5048093795776367
    3. '=='' → logprob: -6.879809379577637
    4. '__' → logprob: -6.879809379577637
    5. '=="' → logprob: -7.254809379577637
    6. '=' → logprob: -9.879809379577637
    7. '==
' → logprob: -10.504809379577637
    8. ' =="' → logprob: -11.504809379577637
    9. ' =' → logprob: -12.379809379577637
    10. '===' → logprob: -12.754809379577637

Token 232: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3134040832519531
    2. '"' → logprob: -1.3134040832519531
    3. ' "__' → logprob: -9.438404083251953
    4. ' '__' → logprob: -9.813404083251953
    5. '__' → logprob: -11.938404083251953
    6. ''"' → logprob: -14.563404083251953
    7. '('__' → logprob: -15.313404083251953
    8. ''_' → logprob: -16.063404083251953
    9. '   ' → logprob: -16.313404083251953
    10. ' "' → logprob: -16.563404083251953

Token 233: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03617845103144646
    2. '__' → logprob: -4.0361785888671875
    3. ''' → logprob: -4.1611785888671875
    4. '"' → logprob: -6.1611785888671875
    5. 'name' → logprob: -9.911178588867188
    6. '__":
' → logprob: -10.411178588867188
    7. '   ' → logprob: -10.786178588867188
    8. '__':
' → logprob: -11.286178588867188
    9. '_main' → logprob: -11.411178588867188
    10. '```' → logprob: -11.411178588867188

Token 234: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.22666248679161072
    2. '__' → logprob: -1.851662516593933
    3. '__':
' → logprob: -3.6016623973846436
    4. '__:' → logprob: -4.726662635803223
    5. ':' → logprob: -4.851662635803223
    6. ':
' → logprob: -7.726662635803223
    7. '):' → logprob: -8.101662635803223
    8. '():
' → logprob: -8.226662635803223
    9. '):
' → logprob: -8.601662635803223
    10. '__)' → logprob: -9.226662635803223

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17130756378173828
    2. ' main' → logprob: -2.0463075637817383
    3. 'main' → logprob: -3.6713075637817383
    4. '    
' → logprob: -6.296307563781738
    5. '	main' → logprob: -7.296307563781738
    6. '(main' → logprob: -10.046307563781738
    7. '_main' → logprob: -10.171307563781738
    8. '<|end|>' → logprob: -10.171307563781738
    9. ' ' → logprob: -10.796307563781738
    10. '  ' → logprob: -10.921307563781738

Token 236: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -18.5
    4. '   ' → logprob: -19.5
    5. '(main' → logprob: -23.375
    6. '_main' → logprob: -23.5
    7. '.main' → logprob: -24.125
    8. 'Main' → logprob: -25.125
    9. '  ' → logprob: -26.25
    10. '    
' → logprob: -26.5

Token 237: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0030290482100099325
    2. '()
' → logprob: -6.503028869628906
    3. '(' → logprob: -6.878028869628906
    4. ')' → logprob: -8.503028869628906
    5. '<|end|>' → logprob: -9.003028869628906
    6. '(
' → logprob: -9.628028869628906
    7. '
' → logprob: -10.128028869628906
    8. '()\' → logprob: -10.878028869628906
    9. '())' → logprob: -11.128028869628906
    10. '\n' → logprob: -11.878028869628906


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 235
Tokens correctement prédits (1ère position, stricte): 97
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 180
Précision stricte (1ère position): 41.28%
Précision adaptée (1ère position): 41.70%
Précision (top 10): 76.60%
================================================================================
