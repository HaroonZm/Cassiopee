================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Reads a list of integers, sorts it, and prints the difference according to the rules:
      - If the list length N is even, print the difference between the two middle elements.
      - If the list length N is odd, print the difference between the elements right after and right at the middle.
    """
    # Read the number of elements from input and convert to integer
    N = int(input())
    
    # Read the list of integers as input, split by spaces, map to int, and convert to list
    d = list(map(int, input().split()))
    
    # Sort the list d in ascending order
    d.sort()
    
    # If the number of elements is even,
    # print the difference between the two central elements
    if N % 2 == 0:
        # For even length: difference between element at position N//2 and the previous one
        print(d[N // 2] - d[N // 2 - 1])
    else:
        # For odd length: difference between element right after the middle and at the middle
        print(d[N // 2 + 1] - d[N // 2])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.29922357201576233
    2. '\n' → logprob: -1.67422354221344
    3. '   ' → logprob: -3.4242236614227295
    4. '(' → logprob: -4.54922342300415
    5. ' 
' → logprob: -5.17422342300415
    6. '    
' → logprob: -5.29922342300415
    7. ' ' → logprob: -5.67422342300415
    8. ''' → logprob: -5.67422342300415
    9. '```' → logprob: -6.17422342300415
    10. '    ' → logprob: -6.29922342300415

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5843620896339417
    2. '   ' → logprob: -1.4593620300292969
    3. 'pass' → logprob: -2.209362030029297
    4. 'return' → logprob: -2.834362030029297
    5. '#' → logprob: -4.209362030029297
    6. 'p' → logprob: -5.209362030029297
    7. '```' → logprob: -5.709362030029297
    8. 'r' → logprob: -5.709362030029297
    9. '\' → logprob: -5.959362030029297
    10. 'a' → logprob: -6.084362030029297

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.9647759795188904
    2. 'This' → logprob: -1.7147760391235352
    3. 'Calculate' → logprob: -2.089776039123535
    4. 'Initialize' → logprob: -2.464776039123535
    5. 'Returns' → logprob: -3.339776039123535
    6. 'Run' → logprob: -3.839776039123535
    7. '   ' → logprob: -4.214776039123535
    8. 'Show' → logprob: -4.339776039123535
    9. 'Runs' → logprob: -4.339776039123535
    10. 'Starts' → logprob: -4.464776039123535

Token 6: ' Reads' (ID: 88839)
  Prédit: 'Run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Run' → logprob: -1.3347530364990234
    2. 'This' → logprob: -1.5847530364990234
    3. 'Initialize' → logprob: -1.9597530364990234
    4. 'Calculate' → logprob: -1.9597530364990234
    5. 'Print' → logprob: -2.8347530364990234
    6. 'Main' → logprob: -3.7097530364990234
    7. 'Start' → logprob: -3.9597530364990234
    8. 'Process' → logprob: -4.084753036499023
    9. 'Runs' → logprob: -4.459753036499023
    10. 'Initial' → logprob: -4.584753036499023

Token 7: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6351468563079834
    2. ' the' → logprob: -1.1351468563079834
    3. '   ' → logprob: -3.1351468563079834
    4. ' ' → logprob: -3.5101468563079834
    5. ' input' → logprob: -4.0101470947265625
    6. ' )' → logprob: -4.1351470947265625
    7. 'the' → logprob: -5.0101470947265625
    8. '```' → logprob: -5.3851470947265625
    9. ' an' → logprob: -5.6351470947265625
    10. 'input' → logprob: -5.6351470947265625

Token 8: ' list' (ID: 1562)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.12126035988330841
    2. 'n' → logprob: -2.871260404586792
    3. 'file' → logprob: -3.371260404586792
    4. ' string' → logprob: -4.746260166168213
    5. ' input' → logprob: -6.246260166168213
    6. ' ' → logprob: -6.371260166168213
    7. ' filename' → logprob: -6.496260166168213
    8. 'string' → logprob: -6.496260166168213
    9. ' text' → logprob: -6.621260166168213
    10. '   ' → logprob: -7.246260166168213

Token 9: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3528493046760559
    2. '   ' → logprob: -1.3528492450714111
    3. '```' → logprob: -3.727849245071411
    4. ' ' → logprob: -4.85284948348999
    5. 'of' → logprob: -6.47784948348999
    6. '    ' → logprob: -6.47784948348999
    7. '(' → logprob: -6.85284948348999
    8. '()' → logprob: -7.60284948348999
    9. '  ' → logprob: -7.85284948348999
    10. '_' → logprob: -7.97784948348999

Token 10: ' integers' (ID: 54912)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.7344173789024353
    2. ' integers' → logprob: -2.10941743850708
    3. ' names' → logprob: -2.23441743850708
    4. ' numbers' → logprob: -2.23441743850708
    5. ' lines' → logprob: -2.35941743850708
    6. ' words' → logprob: -3.98441743850708
    7. 'names' → logprob: -3.98441743850708
    8. ' items' → logprob: -4.35941743850708
    9. 'strings' → logprob: -4.35941743850708
    10. 'numbers' → logprob: -4.35941743850708

Token 11: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03077009506523609
    2. ' from' → logprob: -4.780770301818848
    3. ' and' → logprob: -5.155770301818848
    4. '```' → logprob: -5.155770301818848
    5. '    ' → logprob: -5.405770301818848
    6. ',' → logprob: -5.780770301818848
    7. 'from' → logprob: -6.905770301818848
    8. '`' → logprob: -7.280770301818848
    9. '       ' → logprob: -8.905770301818848
    10. '\n' → logprob: -9.030770301818848

Token 12: ' sorts' (ID: 31041)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7166938185691833
    2. ' and' → logprob: -1.0916938781738281
    3. ' processes' → logprob: -1.9666938781738281
    4. '    ' → logprob: -4.716693878173828
    5. ' from' → logprob: -4.841693878173828
    6. ' then' → logprob: -5.216693878173828
    7. ' returns' → logprob: -6.091693878173828
    8. '```' → logprob: -6.091693878173828
    9. ' ' → logprob: -6.466693878173828
    10. 'and' → logprob: -6.841693878173828

Token 13: ' it' (ID: 480)
  Prédit: ' them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' them' → logprob: -0.6249579191207886
    2. ' the' → logprob: -1.9999579191207886
    3. '(' → logprob: -2.374958038330078
    4. 'them' → logprob: -2.749958038330078
    5. '   ' → logprob: -2.874958038330078
    6. ',' → logprob: -3.124958038330078
    7. '()' → logprob: -3.999958038330078
    8. ' it' → logprob: -3.999958038330078
    9. '```' → logprob: -4.249958038330078
    10. ' and' → logprob: -4.624958038330078

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45147234201431274
    2. '   ' → logprob: -1.076472282409668
    3. ',
' → logprob: -4.951472282409668
    4. '```' → logprob: -4.951472282409668
    5. ' and' → logprob: -5.451472282409668
    6. '
' → logprob: -6.451472282409668
    7. '    
' → logprob: -7.451472282409668
    8. '``' → logprob: -7.701472282409668
    9. ' ,' → logprob: -8.076472282409668
    10. '`' → logprob: -8.576472282409668

Token 15: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23181164264678955
    2. '   ' → logprob: -1.6068116426467896
    3. 'and' → logprob: -5.4818115234375
    4. '    ' → logprob: -6.4818115234375
    5. ',' → logprob: -7.6068115234375
    6. '```' → logprob: -9.3568115234375
    7. ' ' → logprob: -11.1068115234375
    8. ' then' → logprob: -11.1068115234375
    9. ' a' → logprob: -11.6068115234375
    10. ' ,' → logprob: -11.7318115234375

Token 16: ' prints' (ID: 33767)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.019625511020421982
    2. '   ' → logprob: -4.769625663757324
    3. ' outputs' → logprob: -5.644625663757324
    4. ' return' → logprob: -6.269625663757324
    5. ' prints' → logprob: -6.269625663757324
    6. ' writes' → logprob: -7.269625663757324
    7. 'returns' → logprob: -7.269625663757324
    8. ' keeps' → logprob: -8.144625663757324
    9. '```' → logprob: -8.144625663757324
    10. 'return' → logprob: -8.894625663757324

Token 17: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4254909157752991
    2. '(' → logprob: -1.9254908561706543
    3. '```' → logprob: -2.9254908561706543
    4. ' it' → logprob: -3.3004908561706543
    5. ' the' → logprob: -3.3004908561706543
    6. '()' → logprob: -3.6754908561706543
    7. 'the' → logprob: -4.550490856170654
    8. '"""
' → logprob: -4.675490856170654
    9. '(
' → logprob: -5.425490856170654
    10. '    ' → logprob: -5.675490856170654

Token 18: ' difference' (ID: 9809)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.02732124924659729
    2. ' list' → logprob: -4.1523213386535645
    3. 'sorted' → logprob: -4.6523213386535645
    4. ' rest' → logprob: -7.6523213386535645
    5. ' result' → logprob: -7.7773213386535645
    6. ' remaining' → logprob: -7.9023213386535645
    7. ' array' → logprob: -9.277320861816406
    8. '(sorted' → logprob: -9.652320861816406
    9. ' results' → logprob: -10.277320861816406
    10. 'list' → logprob: -10.402320861816406

Token 19: ' according' (ID: 7065)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1276395320892334
    2. '\' → logprob: -3.6276395320892334
    3. '   ' → logprob: -3.7526395320892334
    4. ' between' → logprob: -3.8776395320892334
    5. '`' → logprob: -4.0026397705078125
    6. '``' → logprob: -4.6276397705078125
    7. '(' → logprob: -5.6276397705078125
    8. '\n' → logprob: -5.7526397705078125
    9. 'between' → logprob: -5.8776397705078125
    10. '"""
' → logprob: -6.2526397705078125

Token 20: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.26841768622398376
    2. ' to' → logprob: -1.7684177160263062
    3. '<|end|>' → logprob: -3.2684175968170166
    4. '_to' → logprob: -4.518417835235596
    5. '```' → logprob: -5.018417835235596
    6. ' ' → logprob: -6.268417835235596
    7. '  ' → logprob: -6.393417835235596
    8. '<|end|>' → logprob: -6.393417835235596
    9. '"' → logprob: -7.393417835235596
    10. '   ' → logprob: -7.518417835235596

Token 21: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.01341490913182497
    2. 'the' → logprob: -4.6384148597717285
    3. '   ' → logprob: -6.7634148597717285
    4. '```' → logprob: -6.7634148597717285
    5. ' each' → logprob: -8.138415336608887
    6. ' a' → logprob: -8.138415336608887
    7. ' two' → logprob: -8.638415336608887
    8. ' its' → logprob: -9.263415336608887
    9. '"""
' → logprob: -9.638415336608887
    10. '    ' → logprob: -9.638415336608887

Token 22: ' rules' (ID: 9607)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.13284717500209808
    2. 'problem' → logprob: -3.1328470706939697
    3. ' given' → logprob: -3.7578470706939697
    4. ' task' → logprob: -3.8828470706939697
    5. ' description' → logprob: -4.507847309112549
    6. ' specification' → logprob: -5.382847309112549
    7. 'description' → logprob: -6.007847309112549
    8. ' following' → logprob: -6.132847309112549
    9. ' prompt' → logprob: -6.132847309112549
    10. '```' → logprob: -6.132847309112549

Token 23: ':
' (ID: 734)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.13856466114521027
    2. '   ' → logprob: -2.6385645866394043
    3. '``' → logprob: -3.6385645866394043
    4. '
' → logprob: -4.263564586639404
    5. '\n' → logprob: -4.763564586639404
    6. '    
' → logprob: -5.513564586639404
    7. '\' → logprob: -6.513564586639404
    8. '"""
' → logprob: -6.638564586639404
    9. '`
' → logprob: -7.138564586639404
    10. '`' → logprob: -8.138565063476562

Token 24: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42715078592300415
    2. '```' → logprob: -1.3021507263183594
    3. '"""
' → logprob: -3.5521507263183594
    4. '`' → logprob: -4.177150726318359
    5. '``' → logprob: -5.177150726318359
    6. '    ' → logprob: -5.302150726318359
    7. '\n' → logprob: -5.302150726318359
    8. '"' → logprob: -5.927150726318359
    9. ' ' → logprob: -6.052150726318359
    10. '\' → logprob: -6.177150726318359

Token 25: ' -' (ID: 533)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6476927995681763
    2. '   ' → logprob: -1.3976927995681763
    3. ' ' → logprob: -3.1476926803588867
    4. '`' → logprob: -3.1476926803588867
    5. '"""' → logprob: -3.1476926803588867
    6. '\n' → logprob: -3.7726926803588867
    7. '"' → logprob: -4.022692680358887
    8. '\' → logprob: -4.397692680358887
    9. '"""
' → logprob: -4.647692680358887
    10. '``' → logprob: -4.772692680358887

Token 26: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6163904666900635
    2. 'T' → logprob: -1.8663904666900635
    3. 'The' → logprob: -1.8663904666900635
    4. ' ' → logprob: -1.8663904666900635
    5. ' The' → logprob: -2.7413904666900635
    6. '```' → logprob: -3.2413904666900635
    7. '    ' → logprob: -3.6163904666900635
    8. '"' → logprob: -3.7413904666900635
    9. '     ' → logprob: -3.7413904666900635
    10. '-' → logprob: -4.366390228271484

Token 27: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.26318037509918213
    2. ' len' → logprob: -1.8881803750991821
    3. 'the' → logprob: -3.5131802558898926
    4. 'len' → logprob: -3.5131802558898926
    5. ' all' → logprob: -4.388180255889893
    6. ' there' → logprob: -5.763180255889893
    7. ' a' → logprob: -6.763180255889893
    8. ' n' → logprob: -7.013180255889893
    9. ' length' → logprob: -7.013180255889893
    10. 'n' → logprob: -8.13818073272705

Token 28: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6694861054420471
    2. ' length' → logprob: -1.0444860458374023
    3. 'length' → logprob: -3.2944860458374023
    4. 'list' → logprob: -3.4194860458374023
    5. ' number' → logprob: -3.7944860458374023
    6. 'len' → logprob: -4.044486045837402
    7. ' difference' → logprob: -4.919486045837402
    8. ' first' → logprob: -5.044486045837402
    9. ' input' → logprob: -5.794486045837402
    10. ' last' → logprob: -5.794486045837402

Token 29: ' length' (ID: 5517)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.1921754628419876
    2. ' is' → logprob: -2.1921753883361816
    3. ' contains' → logprob: -3.3171753883361816
    4. ' length' → logprob: -3.9421753883361816
    5. ' consists' → logprob: -5.067175388336182
    6. 'length' → logprob: -7.567175388336182
    7. 'has' → logprob: -7.942175388336182
    8. ' ' → logprob: -8.56717586517334
    9. '   ' → logprob: -10.19217586517334
    10. 'is' → logprob: -10.94217586517334

Token 30: ' N' (ID: 478)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01892368122935295
    2. ' >' → logprob: -4.643923759460449
    3. '>' → logprob: -5.268923759460449
    4. 'is' → logprob: -5.893923759460449
    5. '```' → logprob: -8.26892375946045
    6. ' <' → logprob: -8.39392375946045
    7. ' ' → logprob: -8.64392375946045
    8. '   ' → logprob: -8.76892375946045
    9. 's' → logprob: -9.01892375946045
    10. ' <=' → logprob: -9.26892375946045

Token 31: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08927160501480103
    2. ' <' → logprob: -3.3392715454101562
    3. ' >' → logprob: -4.089271545410156
    4. '>' → logprob: -4.464271545410156
    5. ' <=' → logprob: -4.964271545410156
    6. '<' → logprob: -6.089271545410156
    7. ' ' → logprob: -6.089271545410156
    8. ' ==' → logprob: -6.089271545410156
    9. '==' → logprob: -6.214271545410156
    10. ' >=' → logprob: -6.339271545410156

Token 32: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.3899786174297333
    2. ' ' → logprob: -2.3899786472320557
    3. 'even' → logprob: -2.8899786472320557
    4. ' odd' → logprob: -3.1399786472320557
    5. ' less' → logprob: -3.1399786472320557
    6. ' greater' → logprob: -3.5149786472320557
    7. '1' → logprob: -3.6399786472320557
    8. 'odd' → logprob: -4.764978408813477
    9. 'less' → logprob: -5.389978408813477
    10. 'greater' → logprob: -5.514978408813477

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016298402100801468
    2. ' ,' → logprob: -4.266298294067383
    3. '   ' → logprob: -7.391298294067383
    4. '```' → logprob: -7.516298294067383
    5. ',
' → logprob: -7.641298294067383
    6. ':' → logprob: -8.016298294067383
    7. ' ' → logprob: -10.141298294067383
    8. '    ' → logprob: -10.516298294067383
    9. ' :' → logprob: -10.516298294067383
    10. '``' → logprob: -12.016298294067383

Token 34: ' print' (ID: 2123)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11006322503089905
    2. ' return' → logprob: -3.110063314437866
    3. ' returns' → logprob: -3.485063314437866
    4. ' ' → logprob: -4.110063076019287
    5. 'the' → logprob: -6.235063076019287
    6. ' it' → logprob: -6.360063076019287
    7. ' each' → logprob: -6.860063076019287
    8. '    ' → logprob: -6.985063076019287
    9. ' calculates' → logprob: -6.985063076019287
    10. '   ' → logprob: -7.235063076019287

Token 35: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.38119831681251526
    2. ' half' → logprob: -2.0061984062194824
    3. ' N' → logprob: -2.5061984062194824
    4. ' ' → logprob: -2.5061984062194824
    5. ' n' → logprob: -4.756198406219482
    6. 'the' → logprob: -6.006198406219482
    7. ' len' → logprob: -6.131198406219482
    8. ' a' → logprob: -6.506198406219482
    9. ' max' → logprob: -7.256198406219482
    10. ' (' → logprob: -7.256198406219482

Token 36: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.03421679511666298
    2. 'difference' → logprob: -4.40921688079834
    3. ' sum' → logprob: -4.53421688079834
    4. ' ' → logprob: -5.90921688079834
    5. ' maximum' → logprob: -6.03421688079834
    6. ' space' → logprob: -7.03421688079834
    7. ' absolute' → logprob: -7.28421688079834
    8. ' first' → logprob: -7.40921688079834
    9. ' max' → logprob: -7.40921688079834
    10. ' length' → logprob: -7.65921688079834

Token 37: ' between' (ID: 2870)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5387639403343201
    2. ' between' → logprob: -0.9137639403343201
    3. '(' → logprob: -4.788763999938965
    4. ' (' → logprob: -6.163763999938965
    5. '```' → logprob: -7.163763999938965
    6. ' \' → logprob: -7.288763999938965
    7. 'between' → logprob: -7.288763999938965
    8. '  ' → logprob: -7.413763999938965
    9. '   ' → logprob: -7.663763999938965
    10. '`' → logprob: -7.913763999938965

Token 38: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.024001792073249817
    2. 'the' → logprob: -3.7740018367767334
    3. ' max' → logprob: -8.649002075195312
    4. ' ' → logprob: -9.024002075195312
    5. 's' → logprob: -9.274002075195312
    6. ' two' → logprob: -9.649002075195312
    7. 't' → logprob: -10.149002075195312
    8. ' sorted' → logprob: -10.274002075195312
    9. ' every' → logprob: -10.524002075195312
    10. ' t' → logprob: -10.524002075195312

Token 39: ' two' (ID: 1920)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.9548715949058533
    2. 'sum' → logprob: -1.579871654510498
    3. ' sums' → logprob: -1.954871654510498
    4. ' first' → logprob: -2.954871654510498
    5. ' maximum' → logprob: -3.579871654510498
    6. 'maximum' → logprob: -3.579871654510498
    7. 'max' → logprob: -3.954871654510498
    8. ' two' → logprob: -4.204871654510498
    9. 'first' → logprob: -4.204871654510498
    10. 's' → logprob: -4.329871654510498

Token 40: ' middle' (ID: 10006)
  Prédit: ' halves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' halves' → logprob: -0.0720619261264801
    2. ' middle' → logprob: -4.072062015533447
    3. ' lists' → logprob: -4.072062015533447
    4. ' half' → logprob: -4.697062015533447
    5. ' elements' → logprob: -5.072062015533447
    6. ' smallest' → logprob: -5.197062015533447
    7. ' sorted' → logprob: -5.447062015533447
    8. ' largest' → logprob: -5.697062015533447
    9. ' list' → logprob: -7.197062015533447
    10. ' median' → logprob: -7.447062015533447

Token 41: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.09295038133859634
    2. '_elements' → logprob: -3.0929503440856934
    3. 'elements' → logprob: -4.217950344085693
    4. 's' → logprob: -5.092950344085693
    5. '_' → logprob: -5.217950344085693
    6. ' numbers' → logprob: -5.467950344085693
    7. '_values' → logprob: -5.592950344085693
    8. ' values' → logprob: -5.717950344085693
    9. ' ' → logprob: -6.467950344085693
    10. '_numbers' → logprob: -6.717950344085693

Token 42: '.
' (ID: 558)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.47084155678749084
    2. '\' → logprob: -1.7208415269851685
    3. '```' → logprob: -2.345841646194458
    4. '   ' → logprob: -2.845841646194458
    5. '
' → logprob: -4.095841407775879
    6. '.' → logprob: -5.220841407775879
    7. 'n' → logprob: -5.220841407775879
    8. ')' → logprob: -5.720841407775879
    9. '' → logprob: -6.720841407775879
    10. '"""' → logprob: -6.720841407775879

Token 43: '     ' (ID: 530)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.573628842830658
    2. '```' → logprob: -1.4486289024353027
    3. '   ' → logprob: -2.4486289024353027
    4. '\' → logprob: -2.5736289024353027
    5. '"""' → logprob: -4.573628902435303
    6. '"\' → logprob: -5.573628902435303
    7. '"""
' → logprob: -5.573628902435303
    8. '  
' → logprob: -5.698628902435303
    9. '
' → logprob: -5.823628902435303
    10. '_' → logprob: -6.073628902435303

Token 44: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2722665071487427
    2. '```' → logprob: -2.272266387939453
    3. '\n' → logprob: -2.522266387939453
    4. '"""' → logprob: -3.397266387939453
    5. '\' → logprob: -4.522266387939453
    6. ' ' → logprob: -5.272266387939453
    7. '"""
' → logprob: -6.647266387939453
    8. '`' → logprob: -7.397266387939453
    9. '  ' → logprob: -7.522266387939453
    10. '"' → logprob: -7.522266387939453

Token 45: ' If' (ID: 1843)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2699618935585022
    2. '   ' → logprob: -1.5199618339538574
    3. ' If' → logprob: -5.019961833953857
    4. 'If' → logprob: -5.519961833953857
    5. '  ' → logprob: -6.144961833953857
    6. ' ' → logprob: -6.769961833953857
    7. '```' → logprob: -6.769961833953857
    8. '     ' → logprob: -7.644961833953857
    9. '    ' → logprob: -8.269962310791016
    10. 'I' → logprob: -8.269962310791016

Token 46: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.023498425260186195
    2. 'the' → logprob: -4.14849853515625
    3. 'N' → logprob: -5.77349853515625
    4. ' N' → logprob: -5.89849853515625
    5. ' ' → logprob: -7.27349853515625
    6. '    ' → logprob: -7.64849853515625
    7. '   ' → logprob: -8.89849853515625
    8. '  ' → logprob: -9.02349853515625
    9. ' ' → logprob: -9.52349853515625
    10. 'n' → logprob: -10.39849853515625

Token 47: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.09790978580713272
    2. 'list' → logprob: -3.097909688949585
    3. 'len' → logprob: -3.722909688949585
    4. ' length' → logprob: -4.472909927368164
    5. ' len' → logprob: -5.597909927368164
    6. 'length' → logprob: -5.972909927368164
    7. '   ' → logprob: -6.097909927368164
    8. ' ' → logprob: -6.472909927368164
    9. 'n' → logprob: -6.972909927368164
    10. ' N' → logprob: -7.347909927368164

Token 48: ' length' (ID: 5517)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8832666873931885
    2. ' is' → logprob: -1.0082666873931885
    3. ' length' → logprob: -1.6332666873931885
    4. ' has' → logprob: -4.133266448974609
    5. '   ' → logprob: -6.133266448974609
    6. '[' → logprob: -6.258266448974609
    7. 'length' → logprob: -6.508266448974609
    8. ''s' → logprob: -6.758266448974609
    9. 's' → logprob: -7.258266448974609
    10. '_' → logprob: -7.258266448974609

Token 49: ' N' (ID: 478)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.003595433197915554
    2. ' ' → logprob: -5.878595352172852
    3. 'is' → logprob: -7.628595352172852
    4. '<|end|>' → logprob: -8.628595352172852
    5. 's' → logprob: -9.753595352172852
    6. ' N' → logprob: -10.753595352172852
    7. 'N' → logprob: -11.253595352172852
    8. '   ' → logprob: -11.878595352172852
    9. '<|end|>' → logprob: -12.128595352172852
    10. '  ' → logprob: -12.253595352172852

Token 50: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011162775568664074
    2. 'is' → logprob: -4.886162757873535
    3. ' ' → logprob: -5.761162757873535
    4. '<|end|>' → logprob: -8.261162757873535
    5. '>' → logprob: -10.386162757873535
    6. 's' → logprob: -10.761162757873535
    7. '```' → logprob: -11.011162757873535
    8. '   ' → logprob: -11.136162757873535
    9. '  ' → logprob: -11.761162757873535
    10. '<|end|>' → logprob: -11.761162757873535

Token 51: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.07147888839244843
    2. 'odd' → logprob: -2.696478843688965
    3. ' even' → logprob: -6.946478843688965
    4. 'even' → logprob: -8.071478843688965
    5. ' an' → logprob: -9.196478843688965
    6. ' ' → logprob: -9.571478843688965
    7. '<|end|>' → logprob: -9.946478843688965
    8. ' ' → logprob: -11.696478843688965
    9. 'an' → logprob: -12.071478843688965
    10. '```' → logprob: -12.321478843688965

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002396698109805584
    2. ' ,' → logprob: -6.252396583557129
    3. '   ' → logprob: -7.877396583557129
    4. ',
' → logprob: -9.627396583557129
    5. ':' → logprob: -12.877396583557129
    6. ',

' → logprob: -13.252396583557129
    7. '```' → logprob: -13.252396583557129
    8. ')' → logprob: -13.377396583557129
    9. 'print' → logprob: -13.377396583557129
    10. ' ' → logprob: -13.377396583557129

Token 53: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.04315721616148949
    2. '    ' → logprob: -3.6681571006774902
    3. 'print' → logprob: -5.04315710067749
    4. '   ' → logprob: -5.16815710067749
    5. ' return' → logprob: -5.91815710067749
    6. ' ' → logprob: -6.66815710067749
    7. ' ' → logprob: -8.418157577514648
    8. ' the' → logprob: -9.043157577514648
    9. '  ' → logprob: -10.043157577514648
    10. ' prints' → logprob: -10.043157577514648

Token 54: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0034405344631522894
    2. 'the' → logprob: -6.1284403800964355
    3. ' ' → logprob: -7.5034403800964355
    4. ' a' → logprob: -8.003440856933594
    5. ' between' → logprob: -8.128440856933594
    6. ' their' → logprob: -10.753440856933594
    7. ' difference' → logprob: -12.253440856933594
    8. '    ' → logprob: -12.253440856933594
    9. ' an' → logprob: -12.753440856933594
    10. '```' → logprob: -12.753440856933594

Token 55: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.10263615846633911
    2. 'difference' → logprob: -2.4776360988616943
    3. ' space' → logprob: -5.102636337280273
    4. ' middle' → logprob: -5.852636337280273
    5. 'space' → logprob: -6.602636337280273
    6. ' ' → logprob: -7.102636337280273
    7. ' absolute' → logprob: -7.727636337280273
    8. ' value' → logprob: -8.102636337280273
    9. ' element' → logprob: -8.227636337280273
    10. ' median' → logprob: -8.852636337280273

Token 56: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.006348103750497103
    2. 'between' → logprob: -5.881348133087158
    3. ' ' → logprob: -6.256348133087158
    4. '   ' → logprob: -7.506348133087158
    5. '(' → logprob: -7.756348133087158
    6. 's' → logprob: -9.00634765625
    7. '<|end|>' → logprob: -9.13134765625
    8. '    ' → logprob: -9.38134765625
    9. '  ' → logprob: -9.75634765625
    10. '```' → logprob: -10.38134765625

Token 57: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.011845448985695839
    2. 'the' → logprob: -4.886845588684082
    3. ' two' → logprob: -5.886845588684082
    4. ' ' → logprob: -7.261845588684082
    5. ' a' → logprob: -8.261845588684082
    6. ' lst' → logprob: -9.511845588684082
    7. '0' → logprob: -9.886845588684082
    8. ' (' → logprob: -10.261845588684082
    9. '1' → logprob: -10.636845588684082
    10. 'a' → logprob: -10.761845588684082

Token 58: ' elements' (ID: 8632)
  Prédit: ' middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' middle' → logprob: -0.4819945991039276
    2. ' two' → logprob: -1.35699462890625
    3. ' median' → logprob: -2.98199462890625
    4. 'middle' → logprob: -3.60699462890625
    5. 'median' → logprob: -3.85699462890625
    6. ' ' → logprob: -5.10699462890625
    7. 'two' → logprob: -5.23199462890625
    8. ' n' → logprob: -5.73199462890625
    9. 'n' → logprob: -5.73199462890625
    10. ' first' → logprob: -5.85699462890625

Token 59: ' right' (ID: 1849)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014053520280867815
    2. '[
' → logprob: -8.376405715942383
    3. '[N' → logprob: -8.376405715942383
    4. '   ' → logprob: -8.501405715942383
    5. '[len' → logprob: -8.751405715942383
    6. '[-' → logprob: -9.126405715942383
    7. '[int' → logprob: -9.501405715942383
    8. '```' → logprob: -9.626405715942383
    9. '_' → logprob: -10.001405715942383
    10. '[n' → logprob: -10.001405715942383

Token 60: ' after' (ID: 1934)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7672274708747864
    2. ' next' → logprob: -1.6422274112701416
    3. ' after' → logprob: -1.6422274112701416
    4. ' before' → logprob: -3.1422274112701416
    5. ' at' → logprob: -3.2672274112701416
    6. '_' → logprob: -3.7672274112701416
    7. ' ' → logprob: -4.392227649688721
    8. 'in' → logprob: -5.267227649688721
    9. ' around' → logprob: -5.517227649688721
    10. 'b' → logprob: -5.767227649688721

Token 61: ' and' (ID: 326)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.024254433810710907
    2. 'the' → logprob: -3.774254322052002
    3. ' ' → logprob: -7.774254322052002
    4. ' middle' → logprob: -8.27425479888916
    5. ' N' → logprob: -9.02425479888916
    6. ' median' → logprob: -10.14925479888916
    7. '_' → logprob: -10.39925479888916
    8. '   ' → logprob: -11.02425479888916
    9. '```' → logprob: -11.02425479888916
    10. ' len' → logprob: -11.14925479888916

Token 62: ' right' (ID: 1849)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.02005010098218918
    2. 'the' → logprob: -4.270050048828125
    3. ' ' → logprob: -6.270050048828125
    4. ' before' → logprob: -6.395050048828125
    5. '    ' → logprob: -7.020050048828125
    6. '  ' → logprob: -8.270050048828125
    7. '<|end|>' → logprob: -8.520050048828125
    8. ' right' → logprob: -8.895050048828125
    9. ' just' → logprob: -8.895050048828125
    10. ' immediately' → logprob: -9.145050048828125

Token 63: ' at' (ID: 540)
  Prédit: ' before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' before' → logprob: -0.17211800813674927
    2. 'before' → logprob: -2.2971179485321045
    3. ' ' → logprob: -3.1721179485321045
    4. '_before' → logprob: -4.797118186950684
    5. '    ' → logprob: -6.172118186950684
    6. ' after' → logprob: -6.297118186950684
    7. '  ' → logprob: -6.672118186950684
    8. '_' → logprob: -8.047118186950684
    9. '   ' → logprob: -8.297118186950684
    10. 'after' → logprob: -8.297118186950684

Token 64: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.009946736507117748
    2. 'the' → logprob: -4.634946823120117
    3. ' ' → logprob: -9.259946823120117
    4. ' middle' → logprob: -9.884946823120117
    5. 'middle' → logprob: -11.509946823120117
    6. '<|end|>' → logprob: -11.634946823120117
    7. ' median' → logprob: -11.759946823120117
    8. 'median' → logprob: -12.259946823120117
    9. ' midpoint' → logprob: -12.384946823120117
    10. '    ' → logprob: -13.759946823120117

Token 65: ' middle' (ID: 10006)
  Prédit: ' middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' middle' → logprob: -0.0651579201221466
    2. ' ' → logprob: -3.190157890319824
    3. ' midpoint' → logprob: -4.690157890319824
    4. 'middle' → logprob: -4.815157890319824
    5. ' median' → logprob: -5.815157890319824
    6. ' center' → logprob: -7.815157890319824
    7. 'median' → logprob: -8.065157890319824
    8. ' mid' → logprob: -8.690157890319824
    9. '   ' → logprob: -9.065157890319824
    10. 'mid' → logprob: -9.690157890319824

Token 66: '.
' (ID: 558)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7479934096336365
    2. '\n' → logprob: -0.9979934096336365
    3. '   ' → logprob: -2.8729934692382812
    4. '```' → logprob: -2.8729934692382812
    5. '
' → logprob: -4.247993469238281
    6. '"\' → logprob: -4.872993469238281
    7. '    
' → logprob: -4.997993469238281
    8. 'n' → logprob: -5.997993469238281
    9. '  
' → logprob: -6.247993469238281
    10. ''\' → logprob: -6.372993469238281

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8122794032096863
    2. '```' → logprob: -1.312279462814331
    3. '"""' → logprob: -1.687279462814331
    4. '"""
' → logprob: -3.062279462814331
    5. '"' → logprob: -3.187279462814331
    6. '\n' → logprob: -5.562279224395752
    7. '"\' → logprob: -5.937279224395752
    8. '""' → logprob: -6.562279224395752
    9. '``' → logprob: -6.562279224395752
    10. '`' → logprob: -6.937279224395752

Token 68: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4466269910335541
    2. '```' → logprob: -1.9466270208358765
    3. '"' → logprob: -2.446626901626587
    4. '"""
' (adapté à ' """
') → logprob: -3.071626901626587
    5. '\n' → logprob: -3.321626901626587
    6. '   ' → logprob: -3.571626901626587
    7. '"\' → logprob: -4.946627140045166
    8. '\' → logprob: -5.571627140045166
    9. '""' → logprob: -5.571627140045166
    10. '`' → logprob: -5.696627140045166

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42522525787353516
    2. '\n' → logprob: -1.9252252578735352
    3. '\' → logprob: -2.050225257873535
    4. 'n' → logprob: -3.550225257873535
    5. '```' → logprob: -3.550225257873535
    6. '    
' → logprob: -4.800225257873535
    7. '
' → logprob: -6.425225257873535
    8. '`' → logprob: -6.800225257873535
    9. '``' → logprob: -7.425225257873535
    10. '    ' → logprob: -7.550225257873535

Token 70: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1360653042793274
    2. '   ' → logprob: -2.2610652446746826
    3. ' n' → logprob: -4.636065483093262
    4. '\n' → logprob: -5.761065483093262
    5. 'input' → logprob: -5.761065483093262
    6. '```' → logprob: -6.886065483093262
    7. ' input' → logprob: -7.011065483093262
    8. 'data' → logprob: -7.136065483093262
    9. 'N' → logprob: -7.261065483093262
    10. ' N' → logprob: -7.886065483093262

Token 71: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18739306926727295
    2. ' n' → logprob: -2.0623931884765625
    3. ' numbers' → logprob: -4.3123931884765625
    4. ' data' → logprob: -5.0623931884765625
    5. 'numbers' → logprob: -5.0623931884765625
    6. ' nums' → logprob: -5.4373931884765625
    7. '   ' → logprob: -5.5623931884765625
    8. 'data' → logprob: -5.8123931884765625
    9. 'nums' → logprob: -6.4373931884765625
    10. ' input' → logprob: -6.8123931884765625

Token 72: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4316760301589966
    2. ' a' → logprob: -2.181675910949707
    3. '   ' → logprob: -2.431675910949707
    4. 'n' → logprob: -3.306675910949707
    5. '    ' → logprob: -3.681675910949707
    6. '_' → logprob: -4.056675910949707
    7. ' the' → logprob: -4.306675910949707
    8. ' n' → logprob: -4.931675910949707
    9. 'a' → logprob: -5.056675910949707
    10. ' an' → logprob: -5.056675910949707

Token 73: ' number' (ID: 2086)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.2415072917938232
    2. 'n' → logprob: -1.4915072917938232
    3. ' numbers' → logprob: -1.7415072917938232
    4. ' ' → logprob: -1.8665072917938232
    5. 'numbers' → logprob: -2.6165072917938232
    6. 'list' → logprob: -3.7415072917938232
    7. ' n' → logprob: -3.9915072917938232
    8. ' lst' → logprob: -4.991507530212402
    9. ' integers' → logprob: -4.991507530212402
    10. 'lst' → logprob: -5.116507530212402

Token 74: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40968263149261475
    2. ' of' → logprob: -1.9096826314926147
    3. '_' → logprob: -2.1596827507019043
    4. 's' → logprob: -3.1596827507019043
    5. '    ' → logprob: -4.659682750701904
    6. '   ' → logprob: -5.409682750701904
    7. '  ' → logprob: -5.659682750701904
    8. ' )' → logprob: -5.784682750701904
    9. ' n' → logprob: -6.034682750701904
    10. 'n' → logprob: -6.284682750701904

Token 75: ' elements' (ID: 8632)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6366181969642639
    2. ' elements' → logprob: -1.2616181373596191
    3. ' integers' → logprob: -1.7616181373596191
    4. ' items' → logprob: -4.761618137359619
    5. ' n' → logprob: -5.886618137359619
    6. 'elements' → logprob: -6.636618137359619
    7. ' the' → logprob: -7.261618137359619
    8. 'n' → logprob: -7.511618137359619
    9. ' strings' → logprob: -7.761618137359619
    10. ' numbers' → logprob: -7.761618137359619

Token 76: ' from' (ID: 591)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2963416278362274
    2. '\n' → logprob: -1.9213416576385498
    3. '\' → logprob: -3.67134165763855
    4. '   ' → logprob: -3.79634165763855
    5. ' 
' → logprob: -3.79634165763855
    6. ' n' → logprob: -4.171341419219971
    7. '```' → logprob: -4.921341419219971
    8. ' ' → logprob: -5.296341419219971
    9. '    
' → logprob: -5.421341419219971
    10. '	n' → logprob: -6.546341419219971

Token 77: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.453695684671402
    2. ' input' → logprob: -1.7036956548690796
    3. ' the' → logprob: -1.8286956548690796
    4. ' a' → logprob: -4.828695774078369
    5. ' user' → logprob: -4.953695774078369
    6. 'input' → logprob: -6.078695774078369
    7. ' space' → logprob: -6.953695774078369
    8. ' an' → logprob: -7.328695774078369
    9. ' n' → logprob: -7.328695774078369
    10. ' )' → logprob: -7.328695774078369

Token 78: ' and' (ID: 326)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24303050339221954
    2. '\n' → logprob: -2.118030548095703
    3. ' 
' → logprob: -3.243030548095703
    4. '   ' → logprob: -3.618030548095703
    5. '\' → logprob: -4.243030548095703
    6. '    
' → logprob: -4.743030548095703
    7. '```' → logprob: -6.493030548095703
    8. ' n' → logprob: -7.118030548095703
    9. '
' → logprob: -7.118030548095703
    10. '     
' → logprob: -7.243030548095703

Token 79: ' convert' (ID: 8452)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2090575098991394
    2. 'n' → logprob: -3.209057569503784
    3. ' n' → logprob: -3.709057569503784
    4. ' input' → logprob: -4.084057331085205
    5. ' a' → logprob: -4.209057331085205
    6. ' lists' → logprob: -4.334057331085205
    7. ' continue' → logprob: -4.459057331085205
    8. ' list' → logprob: -4.834057331085205
    9. '<|end|>' → logprob: -5.209057331085205
    10. ' user' → logprob: -5.459057331085205

Token 80: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.976138710975647
    2. '(' → logprob: -1.851138710975647
    3. '   ' → logprob: -1.976138710975647
    4. 'n' → logprob: -2.2261385917663574
    5. '    ' → logprob: -3.3511385917663574
    6. '```' → logprob: -3.4761385917663574
    7. ' (' → logprob: -3.4761385917663574
    8. 's' → logprob: -3.7261385917663574
    9. '_' → logprob: -3.7261385917663574
    10. '`' → logprob: -4.351138591766357

Token 81: ' integer' (ID: 16336)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05170269310474396
    2. 'int' → logprob: -3.4267027378082275
    3. ' ' → logprob: -4.801702499389648
    4. ' an' → logprob: -5.301702499389648
    5. ' space' → logprob: -6.051702499389648
    6. ' a' → logprob: -6.551702499389648
    7. ' integer' → logprob: -7.551702499389648
    8. 'space' → logprob: -9.051702499389648
    9. '=int' → logprob: -9.676702499389648
    10. ' integers' → logprob: -9.926702499389648

Token 82: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002982810139656067
    2. '\n' → logprob: -6.7529826164245605
    3. ' 
' → logprob: -7.3779826164245605
    4. '\' → logprob: -7.5029826164245605
    5. '   ' → logprob: -8.502983093261719
    6. ' \' → logprob: -9.127983093261719
    7. 'N' → logprob: -9.127983093261719
    8. ' n' → logprob: -9.377983093261719
    9. '```' → logprob: -10.502983093261719
    10. '    
' → logprob: -11.002983093261719

Token 83: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.022264068946242332
    2. '\n' → logprob: -4.897264003753662
    3. '   ' → logprob: -4.897264003753662
    4. '\' → logprob: -5.897264003753662
    5. ' 
' → logprob: -5.897264003753662
    6. '    
' → logprob: -8.14726448059082
    7. ' \' → logprob: -8.14726448059082
    8. ' ' → logprob: -8.39726448059082
    9. ' n' → logprob: -9.14726448059082
    10. '```' → logprob: -9.27226448059082

Token 84: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10121931880712509
    2. ' n' → logprob: -2.351219415664673
    3. 'N' (adapté à ' N') → logprob: -7.226219177246094
    4. ' N' → logprob: -8.226219177246094
    5. '   ' → logprob: -11.351219177246094
    6. '	n' → logprob: -13.351219177246094
    7. ' 
' → logprob: -13.601219177246094
    8. ' ' → logprob: -14.476219177246094
    9. ' ' → logprob: -14.601219177246094
    10. ' `' → logprob: -14.976219177246094

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252118855714798
    2. '=' → logprob: -1.5021188259124756
    3. ')' → logprob: -9.377119064331055
    4. '<|end|>' → logprob: -10.502119064331055
    5. ' ' → logprob: -10.752119064331055
    6. ' =
' → logprob: -11.002119064331055
    7. ',' → logprob: -11.252119064331055
    8. 's' → logprob: -11.877119064331055
    9. '.' → logprob: -12.502119064331055
    10. '_' → logprob: -13.127119064331055

Token 86: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0011933216592296958
    2. 'int' → logprob: -6.751193523406982
    3. ' ' → logprob: -10.751193046569824
    4. ' in' → logprob: -14.376193046569824
    5. ' ' → logprob: -14.501193046569824
    6. '=int' → logprob: -14.876193046569824
    7. '[int' → logprob: -16.12619400024414
    8. ' i' → logprob: -16.75119400024414
    9. '	int' → logprob: -16.87619400024414
    10. ' 
' → logprob: -17.75119400024414

Token 87: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12697209417819977
    2. '(input' → logprob: -2.126972198486328
    3. '('' → logprob: -11.126972198486328
    4. 'input' → logprob: -11.251972198486328
    5. '()' → logprob: -12.001972198486328
    6. '(
' → logprob: -13.626972198486328
    7. '(int' → logprob: -13.626972198486328
    8. '("("' → logprob: -13.626972198486328
    9. '(stdin' → logprob: -14.501972198486328
    10. '("' → logprob: -14.626972198486328

Token 88: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3211178481578827
    2. '())' → logprob: -1.321117877960205
    3. '(' → logprob: -5.196117877960205
    4. ')' → logprob: -6.196117877960205
    5. '()))' → logprob: -9.821117401123047
    6. '`()' → logprob: -10.196117401123047
    7. '('' → logprob: -10.446117401123047
    8. ' ())' → logprob: -11.196117401123047
    9. '().' → logprob: -11.321117401123047
    10. '()`' → logprob: -11.446117401123047

Token 89: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1137523651123047
    2. '   ' → logprob: -1.1137523651123047
    3. '    
' → logprob: -1.9887523651123047
    4. ' 
' → logprob: -2.8637523651123047
    5. '\n' → logprob: -3.1137523651123047
    6. '  
' → logprob: -3.7387523651123047
    7. ')' → logprob: -4.363752365112305
    8. ' ' → logprob: -4.488752365112305
    9. '<|end|>' → logprob: -4.488752365112305
    10. 'n' → logprob: -4.738752365112305

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5413521528244019
    2. 'lst' → logprob: -1.9163521528244019
    3. ' lst' → logprob: -2.1663522720336914
    4. 'arr' → logprob: -2.7913522720336914
    5. ' numbers' → logprob: -3.4163522720336914
    6. '#' → logprob: -3.7913522720336914
    7. 'numbers' → logprob: -3.7913522720336914
    8. ' arr' → logprob: -4.666352272033691
    9. ' #' → logprob: -6.416352272033691
    10. 'nums' → logprob: -7.041352272033691

Token 91: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5634978413581848
    2. 'lst' → logprob: -1.43849778175354
    3. 'numbers' → logprob: -2.43849778175354
    4. '#' (adapté à ' #') → logprob: -2.56349778175354
    5. 'nums' → logprob: -4.563498020172119
    6. ' arr' → logprob: -5.188498020172119
    7. 'values' → logprob: -5.563498020172119
    8. ' numbers' → logprob: -5.688498020172119
    9. 'data' → logprob: -6.188498020172119
    10. ' lst' → logprob: -6.313498020172119

Token 92: ' Read' (ID: 5405)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.8068463206291199
    2. ' lst' → logprob: -1.5568463802337646
    3. ' numbers' → logprob: -1.8068463802337646
    4. 'arr' → logprob: -3.1818463802337646
    5. ' elements' → logprob: -3.5568463802337646
    6. '#' → logprob: -3.6818463802337646
    7. 'lst' → logprob: -3.6818463802337646
    8. ' nums' → logprob: -3.8068463802337646
    9. ' values' → logprob: -4.6818461418151855
    10. 'numbers' → logprob: -4.8068461418151855

Token 93: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18952307105064392
    2. '(' → logprob: -2.5645229816436768
    3. ' the' → logprob: -2.5645229816436768
    4. 'the' → logprob: -4.939523220062256
    5. ' a' → logprob: -5.064523220062256
    6. ' ' → logprob: -7.064523220062256
    7. '   ' → logprob: -7.564523220062256
    8. 'a' → logprob: -7.689523220062256
    9. 'lst' → logprob: -7.689523220062256
    10. 's' → logprob: -7.814523220062256

Token 94: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5033919811248779
    2. 'list' → logprob: -2.253391981124878
    3. 'lst' → logprob: -2.503391981124878
    4. ' lst' → logprob: -2.753391981124878
    5. ' integers' → logprob: -3.253391981124878
    6. ' numbers' → logprob: -3.378391981124878
    7. ' elements' → logprob: -3.753391981124878
    8. 'numbers' → logprob: -4.378392219543457
    9. ' array' → logprob: -4.753392219543457
    10. 'arr' → logprob: -5.128392219543457

Token 95: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6041573286056519
    2. '()' → logprob: -1.2291573286056519
    3. '   ' → logprob: -2.2291574478149414
    4. '(' → logprob: -3.7291574478149414
    5. '[' → logprob: -4.729157447814941
    6. '_' → logprob: -4.979157447814941
    7. 's' → logprob: -5.354157447814941
    8. 'of' → logprob: -6.354157447814941
    9. '    ' → logprob: -6.479157447814941
    10. ')' → logprob: -7.104157447814941

Token 96: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.027277393266558647
    2. 'inte' → logprob: -3.6522774696350098
    3. ' numbers' → logprob: -7.27727746963501
    4. 'numbers' → logprob: -8.527276992797852
    5. 'ints' → logprob: -9.777276992797852
    6. 'int' → logprob: -11.277276992797852
    7. ' integer' → logprob: -11.527276992797852
    8. ' elements' → logprob: -12.902276992797852
    9. 'integer' → logprob: -13.652276992797852
    10. ' values' → logprob: -14.152276992797852

Token 97: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023634660989046097
    2. 's' → logprob: -4.773634433746338
    3. 'elements' → logprob: -6.023634433746338
    4. 'numbers' → logprob: -6.398634433746338
    5. 'data' → logprob: -6.648634433746338
    6. ' elements' → logprob: -6.773634433746338
    7. 'a' → logprob: -7.023634433746338
    8. 'arr' → logprob: -7.023634433746338
    9. 'lst' → logprob: -7.023634433746338
    10. ' numbers' → logprob: -7.648634433746338

Token 98: ' input' (ID: 3422)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2332630604505539
    2. ' input' → logprob: -2.2332630157470703
    3. ' list' → logprob: -2.6082630157470703
    4. ' the' → logprob: -4.60826301574707
    5. ' integers' → logprob: -5.35826301574707
    6. ' ' → logprob: -5.85826301574707
    7. 'a' → logprob: -6.23326301574707
    8. 'input' → logprob: -6.73326301574707
    9. 'list' → logprob: -6.98326301574707
    10. 's' → logprob: -6.98326301574707

Token 99: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09137207269668579
    2. 'lst' → logprob: -3.341372013092041
    3. ' lst' → logprob: -3.966372013092041
    4. 'arr' → logprob: -4.841372013092041
    5. 'numbers' → logprob: -4.966372013092041
    6. ' numbers' → logprob: -4.966372013092041
    7. '()' → logprob: -6.216372013092041
    8. 's' → logprob: -6.591372013092041
    9. 'a' → logprob: -6.716372013092041
    10. ' elements' → logprob: -7.466372013092041

Token 100: ' split' (ID: 12648)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.35880380868911743
    2. ' arr' → logprob: -1.7338037490844727
    3. ' data' → logprob: -3.6088037490844727
    4. ' l' → logprob: -3.7338037490844727
    5. ' numbers' → logprob: -3.9838037490844727
    6. 'arr' → logprob: -4.358803749084473
    7. ' elements' → logprob: -4.608803749084473
    8. ' ' → logprob: -5.108803749084473
    9. ' values' → logprob: -5.608803749084473
    10. ' input' → logprob: -5.733803749084473

Token 101: ' by' (ID: 656)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008176080300472677
    2. '().' → logprob: -7.875817775726318
    3. '(' → logprob: -8.87581729888916
    4. '(),' → logprob: -8.87581729888916
    5. ' ()' → logprob: -10.00081729888916
    6. ',' → logprob: -10.37581729888916
    7. '())' → logprob: -10.50081729888916
    8. '   ' → logprob: -11.12581729888916
    9. ')' → logprob: -11.50081729888916
    10. '()
' → logprob: -11.87581729888916

Token 102: ' spaces' (ID: 18608)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4161217212677002
    2. ' space' → logprob: -1.7911217212677002
    3. ' spaces' → logprob: -2.6661217212677
    4. '()' → logprob: -3.4161217212677
    5. 'space' → logprob: -3.4161217212677
    6. '"' → logprob: -4.166121482849121
    7. ' ' → logprob: -4.416121482849121
    8. 'spaces' → logprob: -5.166121482849121
    9. '<|end|>' → logprob: -6.791121482849121
    10. ' '' → logprob: -6.916121482849121

Token 103: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14161431789398193
    2. 'arr' → logprob: -3.2666144371032715
    3. 'lst' → logprob: -3.2666144371032715
    4. ' lst' → logprob: -3.6416144371032715
    5. 'numbers' → logprob: -4.7666144371032715
    6. ',' → logprob: -5.2666144371032715
    7. 's' → logprob: -6.0166144371032715
    8. ' integers' → logprob: -6.1416144371032715
    9. ' numbers' → logprob: -6.2666144371032715
    10. 'list' → logprob: -6.3916144371032715

Token 104: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.012024378404021263
    2. 'map' → logprob: -5.012024402618408
    3. ' and' → logprob: -5.512024402618408
    4. ' split' → logprob: -7.637024402618408
    5. ' list' → logprob: -8.13702392578125
    6. ' convert' → logprob: -8.76202392578125
    7. 'split' → logprob: -9.01202392578125
    8. 'and' → logprob: -9.88702392578125
    9. ' then' → logprob: -10.01202392578125
    10. 'list' → logprob: -10.38702392578125

Token 105: ' to' (ID: 316)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016345655545592308
    2. ' int' → logprob: -4.891345500946045
    3. 'int' → logprob: -5.016345500946045
    4. ' to' → logprob: -7.641345500946045
    5. '(str' → logprob: -7.641345500946045
    6. '   ' → logprob: -7.766345500946045
    7. '(' → logprob: -8.516345977783203
    8. ',int' → logprob: -8.641345977783203
    9. '	int' → logprob: -9.766345977783203
    10. 'str' → logprob: -10.391345977783203

Token 106: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25202691555023193
    2. ' int' → logprob: -1.502026915550232
    3. ' integers' → logprob: -9.377026557922363
    4. 'inte' → logprob: -12.002026557922363
    5. ' ints' → logprob: -13.127026557922363
    6. 'ints' → logprob: -13.127026557922363
    7. ' list' → logprob: -13.752026557922363
    8. 'list' → logprob: -14.002026557922363
    9. '(int' → logprob: -14.752026557922363
    10. ' ' → logprob: -15.502026557922363

Token 107: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4511941373348236
    2. ',' → logprob: -1.701194167137146
    3. '(' → logprob: -2.0761940479278564
    4. '()' → logprob: -3.4511940479278564
    5. 's' → logprob: -4.9511942863464355
    6. 'lst' → logprob: -5.5761942863464355
    7. ')' → logprob: -5.7011942863464355
    8. ' and' → logprob: -6.4511942863464355
    9. '(),' → logprob: -6.5761942863464355
    10. 'arr' → logprob: -7.0761942863464355

Token 108: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007691224105656147
    2. 'and' → logprob: -5.007691383361816
    3. ' list' → logprob: -7.632691383361816
    4. 'list' → logprob: -9.132691383361816
    5. ' map' → logprob: -9.507691383361816
    6. ' then' → logprob: -9.757691383361816
    7. '   ' → logprob: -9.757691383361816
    8. ',' → logprob: -10.007691383361816
    9. ')' → logprob: -10.257691383361816
    10. ' input' → logprob: -11.132691383361816

Token 109: ' convert' (ID: 8452)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1735248565673828
    2. ' sorted' → logprob: -2.048524856567383
    3. 'list' → logprob: -4.673524856567383
    4. ' sort' → logprob: -5.173524856567383
    5. 'sorted' → logprob: -5.173524856567383
    6. ' convert' → logprob: -5.548524856567383
    7. ' map' → logprob: -6.048524856567383
    8. ' lst' → logprob: -6.798524856567383
    9. 'sort' → logprob: -7.173524856567383
    10. ' split' → logprob: -8.298524856567383

Token 110: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.31716641783714294
    2. ' to' → logprob: -1.3171664476394653
    3. 'list' → logprob: -6.442166328430176
    4. ' list' → logprob: -6.942166328430176
    5. 'tolist' → logprob: -7.067166328430176
    6. ' into' → logprob: -8.567166328430176
    7. '()' → logprob: -8.817166328430176
    8. '   ' → logprob: -9.442166328430176
    9. 'into' → logprob: -10.692166328430176
    10. ')' → logprob: -11.442166328430176

Token 111: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.25655561685562134
    2. 'list' → logprob: -1.5065555572509766
    3. ' a' → logprob: -5.381555557250977
    4. 'a' → logprob: -12.006555557250977
    5. ' ' → logprob: -12.256555557250977
    6. '_list' → logprob: -13.006555557250977
    7. ' lists' → logprob: -15.131555557250977
    8. '```' → logprob: -15.131555557250977
    9. '	list' → logprob: -15.256555557250977
    10. 'List' → logprob: -15.381555557250977

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007887447252869606
    2. 'arr' → logprob: -5.757887363433838
    3. ' lst' → logprob: -6.757887363433838
    4. '    
' → logprob: -7.132887363433838
    5. ' numbers' → logprob: -7.507887363433838
    6. ' arr' → logprob: -7.507887363433838
    7. 'numbers' → logprob: -7.632887363433838
    8. 'lst' → logprob: -8.132887840270996
    9. ' nums' → logprob: -8.882887840270996
    10. 'nums' → logprob: -9.007887840270996

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02450689859688282
    2. 'arr' → logprob: -4.52450704574585
    3. ' lst' → logprob: -5.39950704574585
    4. ' arr' → logprob: -5.77450704574585
    5. 'lst' → logprob: -6.64950704574585
    6. ' A' → logprob: -7.02450704574585
    7. '    
' → logprob: -7.14950704574585
    8. ' array' → logprob: -7.77450704574585
    9. ' numbers' → logprob: -7.89950704574585
    10. '```' → logprob: -8.024506568908691

Token 114: ' d' (ID: 272)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.014836072921753
    2. ' numbers' → logprob: -1.514836072921753
    3. 'numbers' → logprob: -1.639836072921753
    4. ' arr' → logprob: -2.264836072921753
    5. 'lst' → logprob: -2.889836072921753
    6. ' lst' → logprob: -3.639836072921753
    7. '   ' → logprob: -4.389836311340332
    8. 'nums' → logprob: -5.139836311340332
    9. 'data' → logprob: -5.139836311340332
    10. ' data' → logprob: -5.264836311340332

Token 115: ' =' (ID: 314)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.03304937481880188
    2. ' =' → logprob: -3.6580493450164795
    3. 'atalist' → logprob: -6.158049583435059
    4. '=' → logprob: -6.283049583435059
    5. 'a' → logprob: -7.033049583435059
    6. '_list' → logprob: -7.658049583435059
    7. '_data' → logprob: -8.158049583435059
    8. 'atas' → logprob: -8.283049583435059
    9. 'at' → logprob: -8.408049583435059
    10. 'data' → logprob: -8.783049583435059

Token 116: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6931484937667847
    2. 'list' → logprob: -0.6931484937667847
    3. '[list' → logprob: -14.318148612976074
    4. ' ' → logprob: -16.193147659301758
    5. '	list' → logprob: -16.193147659301758
    6. '=list' → logprob: -16.318147659301758
    7. ' [' → logprob: -16.443147659301758
    8. '[' → logprob: -16.443147659301758
    9. 'List' → logprob: -16.443147659301758
    10. '(list' → logprob: -16.693147659301758

Token 117: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001173321157693863
    2. '(' → logprob: -6.751173496246338
    3. '(int' → logprob: -12.75117301940918
    4. '(input' → logprob: -16.12617301940918
    5. '(
' → logprob: -16.25117301940918
    6. 'map' → logprob: -16.87617301940918
    7. '()' → logprob: -17.25117301940918
    8. ' map' → logprob: -18.12617301940918
    9. '(

' → logprob: -18.25117301940918
    10. '	map' → logprob: -18.37617301940918

Token 118: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008732522837817669
    2. '(' → logprob: -4.758732318878174
    3. '(
' → logprob: -10.008732795715332
    4. 'int' → logprob: -10.633732795715332
    5. '<int' → logprob: -11.508732795715332
    6. '(input' → logprob: -11.508732795715332
    7. '=int' → logprob: -11.758732795715332
    8. '[int' → logprob: -11.883732795715332
    9. '(str' → logprob: -12.258732795715332
    10. '<|end|>' → logprob: -12.883732795715332

Token 119: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.21710869669914246
    2. ',' → logprob: -2.217108726501465
    3. '(input' → logprob: -2.467108726501465
    4. '(' → logprob: -6.967108726501465
    5. 'input' → logprob: -8.092108726501465
    6. ' ,' → logprob: -9.217108726501465
    7. ',int' → logprob: -10.592108726501465
    8. ' input' → logprob: -11.342108726501465
    9. ' (' → logprob: -12.092108726501465
    10. '   ' → logprob: -12.842108726501465

Token 120: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029751643538475037
    2. ' input' → logprob: -3.5297515392303467
    3. '(input' → logprob: -14.404751777648926
    4. ',input' → logprob: -14.904751777648926
    5. ' ' → logprob: -16.65475082397461
    6. '   ' → logprob: -16.77975082397461
    7. '	input' → logprob: -16.90475082397461
    8. '<input' → logprob: -17.15475082397461
    9. '=input' → logprob: -17.40475082397461
    10. '    ' → logprob: -19.27975082397461

Token 121: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.747814349073451e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -14.500017166137695
    4. '(' → logprob: -16.500017166137695
    5. '()
' → logprob: -17.000017166137695
    6. ' .' → logprob: -17.000017166137695
    7. '.' → logprob: -17.625017166137695
    8. '   ' → logprob: -18.750017166137695
    9. '('').' → logprob: -18.875017166137695
    10. '("").' → logprob: -19.250017166137695

Token 122: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006720586679875851
    2. 'strip' → logprob: -5.006720542907715
    3. 'rstrip' → logprob: -12.756720542907715
    4. ' split' → logprob: -13.131720542907715
    5. '(split' → logprob: -15.506720542907715
    6. ')' → logprob: -16.88172149658203
    7. 'read' → logprob: -17.38172149658203
    8. ' strip' → logprob: -17.38172149658203
    9. '.split' → logprob: -17.75672149658203
    10. 'spl' → logprob: -19.38172149658203

Token 123: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.15300510823726654
    2. '()' → logprob: -2.6530051231384277
    3. '())' → logprob: -2.9030051231384277
    4. '))' → logprob: -4.278005123138428
    5. ')' → logprob: -6.403005123138428
    6. '(' → logprob: -7.278005123138428
    7. '())))' → logprob: -8.52800464630127
    8. '()))
' → logprob: -9.40300464630127
    9. ')))' → logprob: -10.40300464630127
    10. '()));' → logprob: -11.02800464630127

Token 124: '    
' (ID: 1944)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8368211984634399
    2. '   ' → logprob: -0.8368211984634399
    3. '    
' → logprob: -2.5868210792541504
    4. '
' → logprob: -2.9618210792541504
    5. ' 
' → logprob: -5.83682107925415
    6. ' d' → logprob: -6.58682107925415
    7. '  
' → logprob: -6.71182107925415
    8. '   
' → logprob: -7.96182107925415
    9. '     
' → logprob: -8.836821556091309
    10. ' ' → logprob: -8.836821556091309

Token 125: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4752739667892456
    2. '   ' → logprob: -0.9752739667892456
    3. '    
' → logprob: -7.225274085998535
    4. ' d' → logprob: -8.225274085998535
    5. 'sorted' → logprob: -9.725274085998535
    6. 's' → logprob: -10.100274085998535
    7. '```' → logprob: -10.600274085998535
    8. ' ' → logprob: -11.100274085998535
    9. '#' → logprob: -11.100274085998535
    10. '
' → logprob: -11.850274085998535

Token 126: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4140441635390744e-05
    2. '#' (adapté à ' #') → logprob: -11.750014305114746
    3. '   ' → logprob: -12.875014305114746
    4. ' d' → logprob: -13.500014305114746
    5. '
' → logprob: -13.750014305114746
    6. '    
' → logprob: -14.625014305114746
    7. 's' → logprob: -15.625014305114746
    8. 'sorted' → logprob: -15.625014305114746
    9. '```' → logprob: -15.750014305114746
    10. 'if' → logprob: -16.25001335144043

Token 127: ' Sort' (ID: 25945)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014183718711137772
    2. ' d' → logprob: -4.264183521270752
    3. '   ' → logprob: -12.13918399810791
    4. '#' → logprob: -12.51418399810791
    5. 's' → logprob: -13.01418399810791
    6. 'if' → logprob: -13.26418399810791
    7. ' ' → logprob: -13.38918399810791
    8. 'sorted' → logprob: -13.38918399810791
    9. '```' → logprob: -14.38918399810791
    10. ' if' → logprob: -14.38918399810791

Token 128: ' the' (ID: 290)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.06564956903457642
    2. '(' → logprob: -3.0656495094299316
    3. 'd' → logprob: -4.190649509429932
    4. ' d' → logprob: -7.065649509429932
    5. '()' → logprob: -7.190649509429932
    6. '   ' → logprob: -9.31564998626709
    7. '(
' → logprob: -9.81564998626709
    8. ' the' → logprob: -11.56564998626709
    9. '	d' → logprob: -11.69064998626709
    10. ' (' → logprob: -12.56564998626709

Token 129: ' list' (ID: 1562)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4019182622432709
    2. ' d' → logprob: -1.2769182920455933
    3. ' list' → logprob: -3.0269181728363037
    4. 'list' → logprob: -5.651918411254883
    5. ' ' → logprob: -10.401918411254883
    6. ' array' → logprob: -10.526918411254883
    7. '   ' → logprob: -11.276918411254883
    8. ' data' → logprob: -12.276918411254883
    9. '```' → logprob: -12.776918411254883
    10. 'data' → logprob: -13.151918411254883

Token 130: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.527212381362915
    2. '   ' → logprob: -1.027212381362915
    3. '()' → logprob: -3.152212381362915
    4. '(d' → logprob: -5.277212142944336
    5. ' d' → logprob: -7.027212142944336
    6. '()
' → logprob: -7.152212142944336
    7. '.' → logprob: -7.277212142944336
    8. '(' → logprob: -7.527212142944336
    9. '    
' → logprob: -8.152212142944336
    10. ')' → logprob: -8.152212142944336

Token 131: ' in' (ID: 306)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7045114636421204
    2. '   ' → logprob: -0.7045114636421204
    3. '()' → logprob: -5.579511642456055
    4. ')' → logprob: -6.329511642456055
    5. '(d' → logprob: -6.579511642456055
    6. '.' → logprob: -6.704511642456055
    7. ' d' → logprob: -6.954511642456055
    8. '()
' → logprob: -7.454511642456055
    9. '    
' → logprob: -7.579511642456055
    10. ')
' → logprob: -8.829511642456055

Token 132: ' ascending' (ID: 75564)
  Prédit: ' ascending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascending' → logprob: -0.4687801003456116
    2. ' place' → logprob: -1.2187800407409668
    3. '-place' → logprob: -3.343780040740967
    4. 'ascending' → logprob: -3.718780040740967
    5. 'place' → logprob: -4.968780040740967
    6. ' reverse' → logprob: -5.718780040740967
    7. ' ' → logprob: -6.093780040740967
    8. ' d' → logprob: -6.218780040740967
    9. 'reverse' → logprob: -6.843780040740967
    10. ' increasing' → logprob: -6.968780040740967

Token 133: ' order' (ID: 2569)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060112666338682175
    2. ' order' → logprob: -3.685112714767456
    3. '()' → logprob: -4.060112476348877
    4. 'd' → logprob: -4.935112476348877
    5. 'order' → logprob: -5.435112476348877
    6. ' )' → logprob: -6.810112476348877
    7. ' ' → logprob: -6.810112476348877
    8. '<|end|>' → logprob: -7.435112476348877
    9. '   ' → logprob: -8.060112953186035
    10. '()
' → logprob: -8.185112953186035

Token 134: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.32856014370918274
    2. '   ' → logprob: -1.3285601139068604
    3. '
' → logprob: -4.8285603523254395
    4. '    
' → logprob: -5.0785603523254395
    5. ' d' → logprob: -7.3285603523254395
    6. '  
' → logprob: -9.078559875488281
    7. '	d' → logprob: -10.453559875488281
    8. '   
' → logprob: -10.703559875488281
    9. ' 
' → logprob: -10.828559875488281
    10. ')' → logprob: -10.828559875488281

Token 135: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2597105801105499
    2. '   ' → logprob: -1.5097105503082275
    3. ' d' → logprob: -4.884710788726807
    4. '    
' → logprob: -8.759710311889648
    5. '
' → logprob: -10.884710311889648
    6. '	d' → logprob: -12.259710311889648
    7. ' 
' → logprob: -13.134710311889648
    8. '  
' → logprob: -13.384710311889648
    9. '```' → logprob: -13.884710311889648
    10. ' ' → logprob: -13.884710311889648

Token 136: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.026672380045056343
    2. ' d' → logprob: -3.65167236328125
    3. '   ' → logprob: -7.90167236328125
    4. '	d' → logprob: -14.52667236328125
    5. '
' → logprob: -14.90167236328125
    6. ' ' → logprob: -15.02667236328125
    7. '    
' → logprob: -15.40167236328125
    8. ' 
' → logprob: -15.52667236328125
    9. '```' → logprob: -15.52667236328125
    10. '  ' → logprob: -16.40167236328125

Token 137: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.20142073929309845
    2. '.' → logprob: -1.701420783996582
    3. '.sorted' → logprob: -12.326420783996582
    4. '.s' → logprob: -13.076420783996582
    5. ' .' → logprob: -14.576420783996582
    6. '.Sort' → logprob: -16.201419830322266
    7. '.setdefault' → logprob: -16.826419830322266
    8. ').' → logprob: -16.826419830322266
    9. 'sort' → logprob: -17.326419830322266
    10. '_sorted' → logprob: -17.576419830322266

Token 138: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001295222609769553
    2. '(' → logprob: -9.000129699707031
    3. '()
' → logprob: -12.875129699707031
    4. '()`' → logprob: -13.125129699707031
    5. '())' → logprob: -14.500129699707031
    6. '()

' → logprob: -15.250129699707031
    7. ' ()' → logprob: -15.625129699707031
    8. '();' → logprob: -15.750129699707031
    9. '()]' → logprob: -15.750129699707031
    10. '()>' → logprob: -16.62512969970703

Token 139: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6845622658729553
    2. '    
' → logprob: -1.5595622062683105
    3. '   ' → logprob: -1.6845622062683105
    4. ' 
' → logprob: -3.1845622062683105
    5. '  
' → logprob: -4.3095622062683105
    6. 'n' → logprob: -4.3095622062683105
    7. '\n' → logprob: -4.6845622062683105
    8. '   
' → logprob: -5.3095622062683105
    9. 'if' → logprob: -5.5595622062683105
    10. '[' → logprob: -5.9345622062683105

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5398792624473572
    2. 'if' → logprob: -1.414879322052002
    3. 'i' → logprob: -2.039879322052002
    4. ' if' → logprob: -3.414879322052002
    5. ' i' → logprob: -5.039879322052002
    6. '    
' → logprob: -6.414879322052002
    7. 'm' → logprob: -6.914879322052002
    8. 'n' → logprob: -7.539879322052002
    9. ' ' → logprob: -7.914879322052002
    10. '    ' → logprob: -8.414878845214844

Token 141: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001666611758992076
    2. 'i' → logprob: -7.12666654586792
    3. 'diff' → logprob: -7.50166654586792
    4. 'middle' → logprob: -9.501667022705078
    5. '   ' → logprob: -9.751667022705078
    6. 'mid' → logprob: -9.876667022705078
    7. 'difference' → logprob: -10.001667022705078
    8. 'm' → logprob: -10.376667022705078
    9. 'result' → logprob: -10.876667022705078
    10. ' if' → logprob: -11.126667022705078

Token 142: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008935637772083282
    2. ' if' → logprob: -4.883935451507568
    3. 'mid' → logprob: -7.008935451507568
    4. 'diff' → logprob: -8.758935928344727
    5. 'middle' → logprob: -9.008935928344727
    6. 'n' → logprob: -10.508935928344727
    7. 'i' → logprob: -10.883935928344727
    8. '   ' → logprob: -11.133935928344727
    9. 'difference' → logprob: -11.258935928344727
    10. ' mid' → logprob: -11.383935928344727

Token 143: ' the' (ID: 290)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.0017186157638207078
    2. ' ' → logprob: -7.001718521118164
    3. 'N' → logprob: -7.126718521118164
    4. ' ' → logprob: -13.126718521118164
    5. ' len' → logprob: -13.751718521118164
    6. ' (' → logprob: -15.501718521118164
    7. '  ' → logprob: -15.751718521118164
    8. ' n' → logprob: -17.626718521118164
    9. '	N' → logprob: -17.876718521118164
    10. '   ' → logprob: -18.001718521118164

Token 144: ' number' (ID: 2086)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3134404420852661
    2. ' N' → logprob: -1.3134404420852661
    3. 'len' → logprob: -8.813440322875977
    4. ' len' → logprob: -11.313440322875977
    5. ' length' → logprob: -12.063440322875977
    6. 'n' → logprob: -12.188440322875977
    7. ' ' → logprob: -12.688440322875977
    8. 'length' → logprob: -13.188440322875977
    9. '   ' → logprob: -14.438440322875977
    10. ' n' → logprob: -14.813440322875977

Token 145: ' of' (ID: 328)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5925231575965881
    2. '%' → logprob: -1.0925230979919434
    3. ' ' → logprob: -2.2175230979919434
    4. ' of' → logprob: -6.342523097991943
    5. 'of' → logprob: -8.092523574829102
    6. '   ' → logprob: -8.342523574829102
    7. '  ' → logprob: -8.467523574829102
    8. ' if' → logprob: -9.217523574829102
    9. 'if' → logprob: -9.592523574829102
    10. ' is' → logprob: -10.717523574829102

Token 146: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.4304254353046417
    2. 'elements' → logprob: -1.1804254055023193
    3. ' d' → logprob: -4.305425643920898
    4. 'N' → logprob: -4.680425643920898
    5. 'd' → logprob: -4.805425643920898
    6. ' N' → logprob: -5.180425643920898
    7. ' ' → logprob: -6.055425643920898
    8. '_elements' → logprob: -6.305425643920898
    9. ' items' → logprob: -7.180425643920898
    10. 'items' → logprob: -7.555425643920898

Token 147: ' is' (ID: 382)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11351872980594635
    2. '%' → logprob: -2.363518714904785
    3. ' ' → logprob: -4.613518714904785
    4. ' is' → logprob: -5.738518714904785
    5. ' ==' → logprob: -10.738518714904785
    6. '==' → logprob: -11.113518714904785
    7. 'is' → logprob: -11.113518714904785
    8. ' N' → logprob: -11.238518714904785
    9. ' ' → logprob: -11.613518714904785
    10. '   ' → logprob: -12.238518714904785

Token 148: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.08794716745615005
    2. 'even' → logprob: -2.962947130203247
    3. ' ' → logprob: -3.462947130203247
    4. '%' → logprob: -7.212947368621826
    5. ' %' → logprob: -8.212946891784668
    6. '_even' → logprob: -9.212946891784668
    7. ' N' → logprob: -10.587946891784668
    8. ' divisible' → logprob: -11.462946891784668
    9. 'Even' → logprob: -11.712946891784668
    10. ' Even' → logprob: -11.712946891784668

Token 149: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003978785593062639
    2. ' :' → logprob: -5.753978729248047
    3. '   ' → logprob: -7.378978729248047
    4. ':
' → logprob: -9.503978729248047
    5. ',' → logprob: -9.628978729248047
    6. '    ' → logprob: -11.753978729248047
    7. '):' → logprob: -12.253978729248047
    8. ' :
' → logprob: -12.253978729248047
    9. ' ' → logprob: -12.378978729248047
    10. ' if' → logprob: -12.503978729248047

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1479458063840866
    2. '    ' → logprob: -2.3979458808898926
    3. ' if' → logprob: -3.7729458808898926
    4. ' ' → logprob: -4.022945880889893
    5. ' i' → logprob: -6.397945880889893
    6. '       ' → logprob: -7.272945880889893
    7. '    
' → logprob: -7.397945880889893
    8. '  ' → logprob: -7.647945880889893
    9. ' n' → logprob: -7.647945880889893
    10. 'if' → logprob: -7.897945880889893

Token 151: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6013556122779846
    2. '    ' → logprob: -1.2263555526733398
    3. '   ' → logprob: -2.72635555267334
    4. 'if' → logprob: -3.35135555267334
    5. ' ' → logprob: -3.72635555267334
    6. ' mid' → logprob: -5.10135555267334
    7. ' i' → logprob: -5.22635555267334
    8. ' 
' → logprob: -5.35135555267334
    9. ' n' → logprob: -5.72635555267334
    10. ' middle' → logprob: -6.10135555267334

Token 152: ' print' (ID: 2123)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.3677900731563568
    2. ' middle' → logprob: -2.4927899837493896
    3. ' if' → logprob: -2.6177899837493896
    4. 'mid' → logprob: -2.7427899837493896
    5. ' diff' → logprob: -4.367790222167969
    6. '   ' → logprob: -4.617790222167969
    7. 'if' → logprob: -4.742790222167969
    8. 'diff' → logprob: -4.742790222167969
    9. ' print' → logprob: -4.867790222167969
    10. ' i' → logprob: -4.992790222167969

Token 153: ' the' (ID: 290)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.1913990080356598
    2. '(' → logprob: -2.441399097442627
    3. 'd' → logprob: -2.691399097442627
    4. ' d' → logprob: -4.441399097442627
    5. '(abs' → logprob: -5.066399097442627
    6. 'abs' → logprob: -7.066399097442627
    7. '(
' → logprob: -8.441398620605469
    8. ' abs' → logprob: -9.191398620605469
    9. ' (' → logprob: -9.691398620605469
    10. '	d' → logprob: -11.566398620605469

Token 154: ' difference' (ID: 9809)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.28334173560142517
    2. 'd' → logprob: -1.5333417654037476
    3. ' abs' → logprob: -4.158341884613037
    4. ' ' → logprob: -4.783341884613037
    5. ' difference' → logprob: -6.158341884613037
    6. 'abs' → logprob: -6.533341884613037
    7. '(' → logprob: -7.033341884613037
    8. ' (' → logprob: -7.033341884613037
    9. 'difference' → logprob: -7.408341884613037
    10. '(abs' → logprob: -8.283341407775879

Token 155: ' between' (ID: 2870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18589268624782562
    2. '(d' → logprob: -2.0608925819396973
    3. '(
' → logprob: -3.6858925819396973
    4. 'd' → logprob: -4.935892581939697
    5. ' between' → logprob: -4.935892581939697
    6. '   ' → logprob: -7.060892581939697
    7. ' (' → logprob: -7.185892581939697
    8. ' d' → logprob: -7.310892581939697
    9. 'between' → logprob: -9.060893058776855
    10. '(

' → logprob: -9.310893058776855

Token 156: ' the' (ID: 290)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.061981018632650375
    2. ' d' → logprob: -2.811980962753296
    3. '   ' → logprob: -12.436981201171875
    4. ' the' → logprob: -12.936981201171875
    5. '```' → logprob: -13.311981201171875
    6. ' ' → logprob: -13.561981201171875
    7. '(d' → logprob: -13.686981201171875
    8. '
' → logprob: -13.936981201171875
    9. '(' → logprob: -14.436981201171875
    10. '	d' → logprob: -14.686981201171875

Token 157: ' two' (ID: 1920)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01988147757947445
    2. ' d' → logprob: -4.644881248474121
    3. 'middle' → logprob: -4.894881248474121
    4. 'two' → logprob: -7.019881248474121
    5. ' middle' → logprob: -7.019881248474121
    6. ' two' → logprob: -7.769881248474121
    7. 'N' → logprob: -9.144881248474121
    8. ' elements' → logprob: -9.644881248474121
    9. 'elements' → logprob: -10.394881248474121
    10. ' ' → logprob: -10.519881248474121

Token 158: ' central' (ID: 11082)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4735516607761383
    2. 'middle' → logprob: -1.598551630973816
    3. ' middle' → logprob: -2.0985517501831055
    4. ' d' → logprob: -2.9735517501831055
    5. '[mid' → logprob: -7.9735517501831055
    6. 'midd' → logprob: -8.223551750183105
    7. '   ' → logprob: -8.973551750183105
    8. '
' → logprob: -9.223551750183105
    9. 'mid' → logprob: -9.598551750183105
    10. 'median' → logprob: -9.848551750183105

Token 159: ' elements' (ID: 8632)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7136474251747131
    2. '[' → logprob: -1.4636473655700684
    3. ' elements' → logprob: -2.0886473655700684
    4. 'd' → logprob: -2.8386473655700684
    5. ' d' → logprob: -3.0886473655700684
    6. 's' → logprob: -3.5886473655700684
    7. '_' → logprob: -4.963647365570068
    8. ']' → logprob: -5.088647365570068
    9. '   ' → logprob: -5.838647365570068
    10. 'elements' → logprob: -5.963647365570068

Token 160: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1588757485151291
    2. '[' → logprob: -2.0338757038116455
    3. 'print' → logprob: -5.908875942230225
    4. ':' → logprob: -6.033875942230225
    5. ' ' → logprob: -6.283875942230225
    6. 'd' → logprob: -6.533875942230225
    7. '    
' → logprob: -6.783875942230225
    8. '(' → logprob: -7.033875942230225
    9. '[i' → logprob: -7.033875942230225
    10. '[n' → logprob: -7.158875942230225

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007841786369681358
    2. 'if' → logprob: -5.00784158706665
    3. ':' → logprob: -7.13284158706665
    4. ' if' → logprob: -8.757842063903809
    5. 'i' → logprob: -9.382842063903809
    6. ' ' → logprob: -11.257842063903809
    7. 'n' → logprob: -11.382842063903809
    8. '    
' → logprob: -11.382842063903809
    9. '(' → logprob: -11.507842063903809
    10. ' i' → logprob: -11.757842063903809

Token 162: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18537959456443787
    2. 'if' (adapté à ' if') → logprob: -2.1853795051574707
    3. 'i' → logprob: -3.1853795051574707
    4. ' if' → logprob: -4.685379505157471
    5. ' i' → logprob: -6.060379505157471
    6. ':' → logprob: -6.435379505157471
    7. ' ' → logprob: -6.435379505157471
    8. 'n' → logprob: -9.185379981994629
    9. '```' → logprob: -9.185379981994629
    10. '  ' → logprob: -9.435379981994629

Token 163: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.00025895543512888253
    2. 'N' → logprob: -8.375259399414062
    3. ' ' → logprob: -10.500259399414062
    4. ' ' → logprob: -14.375259399414062
    5. ' (' → logprob: -15.625259399414062
    6. '	N' → logprob: -16.625259399414062
    7. ' len' → logprob: -17.000259399414062
    8. '   ' → logprob: -17.125259399414062
    9. ' n' → logprob: -17.375259399414062
    10. '  ' → logprob: -18.500259399414062

Token 164: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0054636746644973755
    2. '%' → logprob: -5.255463600158691
    3. ' ' → logprob: -8.380463600158691
    4. ' ' → logprob: -14.880463600158691
    5. ' %
' → logprob: -15.755463600158691
    6. '   ' → logprob: -18.505464553833008
    7. '  ' → logprob: -18.755464553833008
    8. '```' → logprob: -19.630464553833008
    9. '	' → logprob: -19.880464553833008
    10. ' %

' → logprob: -20.380464553833008

Token 165: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.57594895362854
    2. ' ' → logprob: -0.82594895362854
    3. '  ' → logprob: -12.825948715209961
    4. ' ==' → logprob: -13.075948715209961
    5. '==' → logprob: -13.325948715209961
    6. ' ' → logprob: -13.950948715209961
    7. '```' → logprob: -14.450948715209961
    8. '=' → logprob: -14.700948715209961
    9. '   ' → logprob: -14.950948715209961
    10. '`' → logprob: -15.950948715209961

Token 166: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '==' → logprob: -15.50001335144043
    4. '```' → logprob: -15.62501335144043
    5. '   ' → logprob: -15.75001335144043
    6. '  ' → logprob: -16.87501335144043
    7. '
' → logprob: -18.06251335144043
    8. '0' → logprob: -18.62501335144043
    9. '=' → logprob: -18.75001335144043
    10. '{' → logprob: -19.25001335144043

Token 167: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030393995344638824
    2. '==' → logprob: -3.5303940773010254
    3. '0' → logprob: -8.405393600463867
    4. '=' → logprob: -8.530393600463867
    5. ' ' → logprob: -9.030393600463867
    6. ' =' → logprob: -9.405393600463867
    7. ' ==
' → logprob: -12.405393600463867
    8. ')' → logprob: -12.905393600463867
    9. ')==' → logprob: -13.155393600463867
    10. ':' → logprob: -13.155393600463867

Token 168: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029753267765045166
    2. ' ' → logprob: -3.5297532081604004
    3. ' ' → logprob: -13.779753684997559
    4. '2' → logprob: -15.029753684997559
    5. '۰' → logprob: -15.154753684997559
    6. '```' → logprob: -15.404753684997559
    7. '  ' → logprob: -15.717253684997559
    8. '
' → logprob: -15.842253684997559
    9. '   ' → logprob: -16.342252731323242
    10. '٠' → logprob: -16.717252731323242

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019349466310814023
    2. ' ' → logprob: -6.251935005187988
    3. '2' → logprob: -12.501935005187988
    4. '   ' → logprob: -14.751935005187988
    5. '```' → logprob: -14.814435005187988
    6. '۰' → logprob: -15.064435005187988
    7. '
' → logprob: -15.501935005187988
    8. '00' → logprob: -15.626935005187988
    9. ' ' → logprob: -16.064434051513672
    10. '02' → logprob: -16.064434051513672

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012570773833431304
    2. ':
' → logprob: -9.000125885009766
    3. '):' → logprob: -13.500125885009766
    4. ' :' → logprob: -14.250125885009766
    5. ':**' → logprob: -17.625125885009766
    6. ':return' → logprob: -17.875125885009766
    7. '():' → logprob: -18.000125885009766
    8. ':

' → logprob: -18.500125885009766
    9. ')' → logprob: -18.750125885009766
    10. ':`' → logprob: -18.750125885009766

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06373810768127441
    2. '   ' → logprob: -2.9387381076812744
    3. ':' → logprob: -4.938737869262695
    4. '    ' → logprob: -7.563737869262695
    5. '    
' → logprob: -7.938737869262695
    6. 'print' → logprob: -8.063737869262695
    7. ' print' → logprob: -9.313737869262695
    8. '      ' → logprob: -9.938737869262695
    9. '        
' → logprob: -9.938737869262695
    10. '     ' → logprob: -10.313737869262695

Token 172: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004089204594492912
    2. ' print' → logprob: -5.50408935546875
    3. '       ' → logprob: -12.00408935546875
    4. '   ' → logprob: -12.37908935546875
    5. 'diff' → logprob: -16.25408935546875
    6. '	print' → logprob: -16.37908935546875
    7. 'pr' → logprob: -16.50408935546875
    8. 'result' → logprob: -16.75408935546875
    9. '```' → logprob: -17.00408935546875
    10. '        
' → logprob: -17.25408935546875

Token 173: ' For' (ID: 2214)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018711112439632416
    2. ' print' → logprob: -4.018711090087891
    3. 'mid' → logprob: -8.14371109008789
    4. '   ' → logprob: -9.14371109008789
    5. 'diff' → logprob: -9.64371109008789
    6. 'difference' → logprob: -10.89371109008789
    7. '       ' → logprob: -11.01871109008789
    8. 'result' → logprob: -11.14371109008789
    9. 'middle' → logprob: -11.14371109008789
    10. ' mid' → logprob: -11.26871109008789

Token 174: ' even' (ID: 1952)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8532431721687317
    2. ' i' → logprob: -1.728243112564087
    3. ' print' → logprob: -1.978243112564087
    4. 'd' → logprob: -2.353243112564087
    5. ' d' → logprob: -2.853243112564087
    6. ' middle' → logprob: -3.728243112564087
    7. 'i' → logprob: -4.228243350982666
    8. 'diff' → logprob: -4.353243350982666
    9. 'middle' → logprob: -4.728243350982666
    10. ' the' → logprob: -4.978243350982666

Token 175: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0895379781723022
    2. 'd' → logprob: -1.7145379781723022
    3. ' d' → logprob: -1.8395379781723022
    4. '    ' → logprob: -2.589538097381592
    5. ' ' → logprob: -3.214538097381592
    6. ':' → logprob: -3.214538097381592
    7. '       ' → logprob: -3.464538097381592
    8. 'mid' → logprob: -3.839538097381592
    9. ' middle' → logprob: -3.964538097381592
    10. 'middle' → logprob: -4.089538097381592

Token 176: ':' (ID: 25)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6243391036987305
    2. ' print' → logprob: -1.1243391036987305
    3. '   ' → logprob: -2.4993391036987305
    4. '       ' → logprob: -3.9993391036987305
    5. ':' → logprob: -4.7493391036987305
    6. ',' → logprob: -5.1243391036987305
    7. 'diff' → logprob: -5.1243391036987305
    8. '    ' → logprob: -5.8743391036987305
    9. 'mid' → logprob: -6.1243391036987305
    10. '
' → logprob: -6.1243391036987305

Token 177: ' difference' (ID: 9809)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.38772597908973694
    2. 'print' → logprob: -1.1377259492874146
    3. '   ' → logprob: -8.262725830078125
    4. ' result' → logprob: -8.887725830078125
    5. '       ' → logprob: -9.137725830078125
    6. 'result' → logprob: -9.887725830078125
    7. '    ' → logprob: -9.887725830078125
    8. 'diff' → logprob: -10.012725830078125
    9. '```' → logprob: -10.512725830078125
    10. ' middle' → logprob: -10.512725830078125

Token 178: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20295247435569763
    2. '=' → logprob: -1.70295250415802
    3. 'd' → logprob: -6.7029523849487305
    4. '(' → logprob: -9.57795238494873
    5. ' between' → logprob: -9.82795238494873
    6. '=d' → logprob: -9.82795238494873
    7. ' d' → logprob: -10.07795238494873
    8. ' ' → logprob: -10.70295238494873
    9. ')' → logprob: -11.32795238494873
    10. 'print' → logprob: -11.57795238494873

Token 179: ' element' (ID: 3577)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11284902691841125
    2. ' d' → logprob: -2.237848997116089
    3. '   ' → logprob: -11.362849235534668
    4. ' ' → logprob: -12.862849235534668
    5. ' the' → logprob: -12.862849235534668
    6. '
' → logprob: -13.237849235534668
    7. 'the' → logprob: -13.737849235534668
    8. '    ' → logprob: -13.737849235534668
    9. '	d' → logprob: -13.862849235534668
    10. '(d' → logprob: -13.987849235534668

Token 180: ' at' (ID: 540)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.49926912784576416
    2. 's' → logprob: -1.2492691278457642
    3. '[N' → logprob: -2.9992690086364746
    4. '(N' → logprob: -3.4992690086364746
    5. ' d' → logprob: -4.749269008636475
    6. ' at' → logprob: -4.874269008636475
    7. '   ' → logprob: -5.749269008636475
    8. 'N' → logprob: -5.999269008636475
    9. ' =' → logprob: -6.874269008636475
    10. ' N' → logprob: -6.999269008636475

Token 181: ' position' (ID: 4010)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5371788740158081
    2. ' N' → logprob: -0.9121788740158081
    3. '(N' → logprob: -5.412178993225098
    4. 'd' → logprob: -5.537178993225098
    5. ' d' → logprob: -5.912178993225098
    6. ' (' → logprob: -6.037178993225098
    7. '   ' → logprob: -8.162178993225098
    8. ' ' → logprob: -9.287178993225098
    9. '(' → logprob: -10.412178993225098
    10. '(d' → logprob: -11.037178993225098

Token 182: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1037498190999031
    2. ' N' → logprob: -2.3537497520446777
    3. '(N' → logprob: -5.978749752044678
    4. ' (' → logprob: -6.978749752044678
    5. '   ' → logprob: -9.978750228881836
    6. ' ' → logprob: -10.853750228881836
    7. '[N' → logprob: -13.103750228881836
    8. '(' → logprob: -13.228750228881836
    9. '
' → logprob: -13.478750228881836
    10. '	N' → logprob: -14.353750228881836

Token 183: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0019316127290949225
    2. ' //' → logprob: -6.251931667327881
    3. '#' → logprob: -13.001931190490723
    4. '   ' → logprob: -15.126931190490723
    5. ' ' → logprob: -15.751931190490723
    6. '/' → logprob: -16.12693214416504
    7. '```' → logprob: -16.62693214416504
    8. '
' → logprob: -17.12693214416504
    9. '2' → logprob: -17.62693214416504
    10. '`' → logprob: -19.12693214416504

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '```' → logprob: -15.375204086303711
    4. '   ' → logprob: -16.00020408630371
    5. '(' → logprob: -17.12520408630371
    6. '`' → logprob: -17.75020408630371
    7. '
' → logprob: -18.12520408630371
    8. '/' → logprob: -18.75020408630371
    9. '``' → logprob: -19.00020408630371
    10. '۲' → logprob: -19.12520408630371

Token 185: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12761130928993225
    2. 'and' → logprob: -2.3776113986968994
    3. ' -' → logprob: -4.37761116027832
    4. '-' → logprob: -4.62761116027832
    5. ' ' → logprob: -5.50261116027832
    6. '    ' → logprob: -8.75261116027832
    7. '   ' → logprob: -8.75261116027832
    8. '```' → logprob: -8.87761116027832
    9. ']' → logprob: -9.87761116027832
    10. ')' → logprob: -11.00261116027832

Token 186: ' the' (ID: 290)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.35526296496391296
    2. '(N' → logprob: -1.3552629947662354
    3. ' N' → logprob: -3.6052629947662354
    4. ' (' → logprob: -4.730262756347656
    5. 'd' → logprob: -5.480262756347656
    6. ' d' → logprob: -7.730262756347656
    7. '   ' → logprob: -9.230262756347656
    8. 'position' → logprob: -9.730262756347656
    9. ' ' → logprob: -9.855262756347656
    10. 'element' → logprob: -9.980262756347656

Token 187: ' previous' (ID: 5880)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.35412049293518066
    2. 'N' → logprob: -1.2291204929351807
    3. '[N' → logprob: -6.229120254516602
    4. ' N' → logprob: -6.354120254516602
    5. ' (' → logprob: -6.729120254516602
    6. '   ' → logprob: -8.729120254516602
    7. '((' → logprob: -8.979120254516602
    8. '
' → logprob: -9.479120254516602
    9. '[(' → logprob: -9.604120254516602
    10. '(' → logprob: -9.604120254516602

Token 188: ' one' (ID: 1001)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38617944717407227
    2. '[' → logprob: -1.6361794471740723
    3. ' -' → logprob: -3.2611794471740723
    4. '-' → logprob: -3.3861794471740723
    5. ' one' → logprob: -4.386179447174072
    6. 'element' → logprob: -5.011179447174072
    7. ' ' → logprob: -5.136179447174072
    8. 'index' → logprob: -5.636179447174072
    9. ' element' → logprob: -5.636179447174072
    10. ')' → logprob: -6.011179447174072

Token 189: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.7739938497543335
    2. ' -' → logprob: -1.8989938497543335
    3. 'print' → logprob: -2.023993968963623
    4. ')' → logprob: -2.023993968963623
    5. 'd' → logprob: -2.273993968963623
    6. '(' → logprob: -2.523993968963623
    7. '[' → logprob: -2.898993968963623
    8. '       ' → logprob: -3.148993968963623
    9. ',' → logprob: -3.398993968963623
    10. '   ' → logprob: -3.648993968963623

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16703420877456665
    2. 'print' → logprob: -1.9170341491699219
    3. '   ' → logprob: -5.792034149169922
    4. ' print' → logprob: -6.042034149169922
    5. ')' → logprob: -7.667034149169922
    6. '           ' → logprob: -8.542034149169922
    7. ')
' → logprob: -8.917034149169922
    8. ',' → logprob: -9.292034149169922
    9. '()' → logprob: -9.792034149169922
    10. '(' → logprob: -10.042034149169922

Token 191: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00021796036162413657
    2. '       ' → logprob: -8.750218391418457
    3. ' print' → logprob: -9.750218391418457
    4. '   ' → logprob: -14.125218391418457
    5. '
' → logprob: -16.00021743774414
    6. '```' → logprob: -16.00021743774414
    7. '           ' → logprob: -16.25021743774414
    8. '        
' → logprob: -17.00021743774414
    9. 'difference' → logprob: -17.62521743774414
    10. '	print' → logprob: -17.75021743774414

Token 192: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.029756275936961174
    2. '(' → logprob: -3.5297563076019287
    3. '(
' → logprob: -12.529756546020508
    4. 'd' → logprob: -13.529756546020508
    5. '(abs' → logprob: -14.654756546020508
    6. '((' → logprob: -15.154756546020508
    7. '(

' → logprob: -17.029756546020508
    8. ' d' → logprob: -17.029756546020508
    9. '()' → logprob: -17.404756546020508
    10. '(s' → logprob: -18.154756546020508

Token 193: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -1.259079363080673e-05
    2. '[(' → logprob: -11.500012397766113
    3. '[' → logprob: -13.375012397766113
    4. 'N' → logprob: -14.750012397766113
    5. '[
' → logprob: -15.375012397766113
    6. '[len' → logprob: -16.25001335144043
    7. ' [' → logprob: -17.12501335144043
    8. '[int' → logprob: -17.12501335144043
    9. '[n' → logprob: -17.25001335144043
    10. '(N' → logprob: -17.25001335144043

Token 194: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.003610401414334774
    2. ' //' → logprob: -5.628610610961914
    3. '   ' → logprob: -13.003610610961914
    4. '#' → logprob: -13.378610610961914
    5. ' ' → logprob: -13.378610610961914
    6. '2' → logprob: -13.628610610961914
    7. '//
' → logprob: -14.003610610961914
    8. ']' → logprob: -14.128610610961914
    9. '[' → logprob: -14.628610610961914
    10. '://' → logprob: -14.628610610961914

Token 195: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002973280206788331
    2. ' ' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.000297546386719
    4. '  ' → logprob: -16.37529754638672
    5. '۲' → logprob: -16.50029754638672
    6. '```' → logprob: -16.68779754638672
    7. '
' → logprob: -17.18779754638672
    8. '    ' → logprob: -17.62529754638672
    9. ')' → logprob: -17.75029754638672
    10. '       ' → logprob: -17.75029754638672

Token 196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3544423381972592e-05
    2. '1' → logprob: -12.00001335144043
    3. ' ' → logprob: -12.12501335144043
    4. '21' → logprob: -14.75001335144043
    5. '   ' → logprob: -15.37501335144043
    6. '22' → logprob: -15.68751335144043
    7. '210' → logprob: -16.00001335144043
    8. '```' → logprob: -16.12501335144043
    9. '212' → logprob: -16.37501335144043
    10. '20' → logprob: -16.43751335144043

Token 197: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028786994516849518
    2. ' ]' → logprob: -6.502878665924072
    3. '-' → logprob: -7.127878665924072
    4. ' -' → logprob: -8.12787914276123
    5. ']-' → logprob: -8.25287914276123
    6. ' ' → logprob: -13.00287914276123
    7. '   ' → logprob: -13.00287914276123
    8. '    ' → logprob: -13.12787914276123
    9. '[' → logprob: -13.25287914276123
    10. '"]' → logprob: -13.37787914276123

Token 198: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0381903313100338
    2. '-' → logprob: -3.2881903648376465
    3. ' ' → logprob: -9.288189888000488
    4. ')' → logprob: -10.038189888000488
    5. '-d' → logprob: -12.413189888000488
    6. ' ' → logprob: -12.913189888000488
    7. ' -
' → logprob: -13.538189888000488
    8. ' )' → logprob: -13.663189888000488
    9. '   ' → logprob: -14.288189888000488
    10. ',' → logprob: -14.288189888000488

Token 199: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4287116825580597
    2. ' d' → logprob: -1.0537116527557373
    3. ' ' → logprob: -12.178711891174316
    4. ' ' → logprob: -12.803711891174316
    5. '	d' → logprob: -13.428711891174316
    6. '   ' → logprob: -15.053711891174316
    7. '    ' → logprob: -15.428711891174316
    8. '(d' → logprob: -15.678711891174316
    9. ')' → logprob: -15.803711891174316
    10. '1' → logprob: -16.0537109375

Token 200: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.47446197271347046
    2. '[(' → logprob: -0.9744619727134705
    3. '[' → logprob: -7.974462032318115
    4. '(N' → logprob: -10.724461555480957
    5. '[
' → logprob: -11.724461555480957
    6. 'N' → logprob: -12.724461555480957
    7. '[((' → logprob: -13.099461555480957
    8. '((' → logprob: -13.599461555480957
    9. '```' → logprob: -14.224461555480957
    10. ' [(' → logprob: -14.349461555480957

Token 201: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.47413602471351624
    2. ' //' → logprob: -0.9741359949111938
    3. '[' → logprob: -11.724136352539062
    4. '   ' → logprob: -11.974136352539062
    5. ' ' → logprob: -11.974136352539062
    6. '```' → logprob: -12.099136352539062
    7. '"' → logprob: -12.224136352539062
    8. '1' → logprob: -12.349136352539062
    9. '://' → logprob: -12.724136352539062
    10. '`' → logprob: -13.099136352539062

Token 202: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04353083297610283
    2. '1' → logprob: -3.1685309410095215
    3. ' ' → logprob: -7.5435309410095215
    4. '   ' → logprob: -14.168530464172363
    5. '6' → logprob: -15.418530464172363
    6. '21' → logprob: -16.41853141784668
    7. '```' → logprob: -16.41853141784668
    8. '212' → logprob: -16.66853141784668
    9. '(' → logprob: -16.91853141784668
    10. '211' → logprob: -17.23103141784668

Token 203: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001034714630804956
    2. '2' → logprob: -6.876034736633301
    3. ' ' → logprob: -13.2510347366333
    4. '   ' → logprob: -16.501033782958984
    5. '6' → logprob: -17.001033782958984
    6. '```' → logprob: -17.251033782958984
    7. '
' → logprob: -17.626033782958984
    8. '11' → logprob: -17.751033782958984
    9. '0' → logprob: -18.126033782958984
    10. ']' → logprob: -18.251033782958984

Token 204: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0432453528046608
    2. ' -' → logprob: -3.168245315551758
    3. '1' → logprob: -8.418245315551758
    4. '   ' → logprob: -11.043245315551758
    5. ' ' → logprob: -12.168245315551758
    6. ']' → logprob: -13.668245315551758
    7. '  ' → logprob: -14.418245315551758
    8. '	' → logprob: -14.543245315551758
    9. ']-' → logprob: -15.168245315551758
    10. '       ' → logprob: -15.168245315551758

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.875003814697266
    4. ']' → logprob: -19.000003814697266
    5. '  ' → logprob: -19.750003814697266
    6. '```' → logprob: -19.750003814697266
    7. '       ' → logprob: -19.875003814697266
    8. ')' → logprob: -20.312503814697266
    9. '    ' → logprob: -20.500003814697266
    10. '
' → logprob: -20.687503814697266

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '```' → logprob: -17.125001907348633
    5. ')' → logprob: -17.500001907348633
    6. '
' → logprob: -18.375001907348633
    7. '<|end|>' → logprob: -19.187501907348633
    8. '  ' → logprob: -19.750001907348633
    9. '۱' → logprob: -20.250001907348633
    10. ']' → logprob: -20.375001907348633

Token 207: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001785112835932523
    2. '))' → logprob: -8.750178337097168
    3. ')
' → logprob: -11.000178337097168
    4. ' )' → logprob: -13.375178337097168
    5. '])' → logprob: -13.625178337097168
    6. '   ' → logprob: -16.125179290771484
    7. '())' → logprob: -16.375179290771484
    8. '})' → logprob: -16.750179290771484
    9. ')")' → logprob: -16.750179290771484
    10. '`)' → logprob: -16.875179290771484

Token 208: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5788931846618652
    2. '   ' → logprob: -0.8288931846618652
    3. ' else' → logprob: -5.828893184661865
    4. '    
' → logprob: -12.703893661499023
    5. '```' → logprob: -12.703893661499023
    6. '	else' → logprob: -13.828893661499023
    7. 'elif' → logprob: -14.453893661499023
    8. ')' → logprob: -14.953893661499023
    9. '
' → logprob: -16.578893661499023
    10. '   ' → logprob: -17.703893661499023

Token 209: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0072458419017493725
    2. '   ' → logprob: -5.507246017456055
    3. ' else' → logprob: -5.757246017456055
    4. 'elif' → logprob: -13.882246017456055
    5. '	else' → logprob: -14.132246017456055
    6. '```' → logprob: -15.632246017456055
    7. '    
' → logprob: -15.882246017456055
    8. 'e' → logprob: -15.882246017456055
    9. 'els' → logprob: -16.132246017456055
    10. 'elses' → logprob: -16.507246017456055

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002191660227254033
    2. ':
' → logprob: -6.127191543579102
    3. '       ' → logprob: -12.127191543579102
    4. '   ' → logprob: -14.252191543579102
    5. ' :' → logprob: -15.252191543579102
    6. '):' → logprob: -16.5021915435791
    7. ',' → logprob: -17.1271915435791
    8. ':

' → logprob: -17.3771915435791
    9. ':
' → logprob: -17.5021915435791
    10. '):
' → logprob: -17.7521915435791

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013202552509028465
    2. '   ' → logprob: -9.500131607055664
    3. 'print' → logprob: -10.375131607055664
    4. '    ' → logprob: -11.375131607055664
    5. '      ' → logprob: -12.625131607055664
    6. '     ' → logprob: -13.125131607055664
    7. ' ' → logprob: -13.125131607055664
    8. '(' → logprob: -13.375131607055664
    9. ' print' → logprob: -13.375131607055664
    10. '	' → logprob: -13.750131607055664

Token 212: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004654999356716871
    2. '   ' → logprob: -6.129654884338379
    3. '       ' → logprob: -6.754654884338379
    4. ' print' → logprob: -7.004654884338379
    5. '#' (adapté à ' #') → logprob: -7.879654884338379
    6. ' #' → logprob: -11.379654884338379
    7. ' ' → logprob: -13.629654884338379
    8. '#print' → logprob: -14.379654884338379
    9. '    ' → logprob: -14.629654884338379
    10. '	print' → logprob: -14.754654884338379

Token 213: ' For' (ID: 2214)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00264379451982677
    2. ' print' → logprob: -6.502643585205078
    3. '       ' → logprob: -7.627643585205078
    4. '#' → logprob: -7.877643585205078
    5. '   ' → logprob: -8.252643585205078
    6. ' #' → logprob: -11.877643585205078
    7. ' ' → logprob: -12.627643585205078
    8. '#print' → logprob: -13.252643585205078
    9. '    ' → logprob: -14.502643585205078
    10. '  ' → logprob: -15.002643585205078

Token 214: ' odd' (ID: 14210)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29177895188331604
    2. 'd' → logprob: -1.9167789220809937
    3. ' print' → logprob: -2.666779041290283
    4. ' d' → logprob: -3.416779041290283
    5. ' N' → logprob: -6.666779041290283
    6. '   ' → logprob: -7.666779041290283
    7. ' the' → logprob: -7.916779041290283
    8. 'N' → logprob: -8.166778564453125
    9. '#' → logprob: -8.166778564453125
    10. '
' → logprob: -8.541778564453125

Token 215: ' length' (ID: 5517)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07374858111143112
    2. ':
' → logprob: -2.6987485885620117
    3. '   ' → logprob: -5.823748588562012
    4. '(' → logprob: -8.073748588562012
    5. '       ' → logprob: -9.198748588562012
    6. 'print' → logprob: -9.573748588562012
    7. '():
' → logprob: -10.073748588562012
    8. '(
' → logprob: -10.198748588562012
    9. '(N' → logprob: -10.198748588562012
    10. ' :' → logprob: -10.448748588562012

Token 216: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4769449830055237
    2. ':' → logprob: -1.351944923400879
    3. '       ' → logprob: -2.226944923400879
    4. 'print' → logprob: -4.726944923400879
    5. '   ' → logprob: -6.226944923400879
    6. ',' → logprob: -6.851944923400879
    7. ' print' → logprob: -7.976944923400879
    8. ' :
' → logprob: -8.726944923400879
    9. '           ' → logprob: -9.351944923400879
    10. '():
' → logprob: -9.726944923400879

Token 217: ' difference' (ID: 9809)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22824136912822723
    2. ' print' → logprob: -1.6032413244247437
    3. '   ' → logprob: -6.603241443634033
    4. '       ' → logprob: -6.603241443634033
    5. '
' → logprob: -9.603240966796875
    6. '    ' → logprob: -11.353240966796875
    7. '	print' → logprob: -11.603240966796875
    8. ' ' → logprob: -11.853240966796875
    9. '    
' → logprob: -12.603240966796875
    10. '        ' → logprob: -12.603240966796875

Token 218: ' between' (ID: 2870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17593401670455933
    2. '(d' → logprob: -1.925934076309204
    3. ' (' → logprob: -4.550933837890625
    4. ' between' → logprob: -5.550933837890625
    5. '   ' → logprob: -8.175933837890625
    6. '(
' → logprob: -8.300933837890625
    7. 'print' → logprob: -8.925933837890625
    8. ' print' → logprob: -9.300933837890625
    9. ' =' → logprob: -9.300933837890625
    10. 'between' → logprob: -9.675933837890625

Token 219: ' element' (ID: 3577)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08956582844257355
    2. ' d' → logprob: -2.4645657539367676
    3. '(d' → logprob: -8.089566230773926
    4. ' the' → logprob: -8.964566230773926
    5. 'the' → logprob: -9.089566230773926
    6. 'print' → logprob: -9.589566230773926
    7. ' print' → logprob: -12.214566230773926
    8. '
' → logprob: -14.464566230773926
    9. ' elements' → logprob: -14.464566230773926
    10. ' (' → logprob: -14.589566230773926

Token 220: ' right' (ID: 1849)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1936720907688141
    2. '(' → logprob: -2.1936721801757812
    3. '(d' → logprob: -3.1936721801757812
    4. 's' → logprob: -4.693672180175781
    5. '[' → logprob: -5.068672180175781
    6. '(N' → logprob: -5.318672180175781
    7. ' at' → logprob: -7.193672180175781
    8. '[N' → logprob: -7.318672180175781
    9. '(
' → logprob: -7.568672180175781
    10. '(n' → logprob: -7.818672180175781

Token 221: ' after' (ID: 1934)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5969757437705994
    2. '[N' → logprob: -1.0969758033752441
    3. 'after' → logprob: -2.846975803375244
    4. '(' → logprob: -4.346975803375244
    5. ' after' → logprob: -4.346975803375244
    6. 'at' → logprob: -4.596975803375244
    7. 'd' → logprob: -4.596975803375244
    8. ' at' → logprob: -5.471975803375244
    9. '[' → logprob: -6.096975803375244
    10. '[(' → logprob: -6.596975803375244

Token 222: ' the' (ID: 290)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07192815095186234
    2. ' d' → logprob: -2.9469282627105713
    3. ' the' → logprob: -4.696928024291992
    4. 'the' → logprob: -5.446928024291992
    5. '(N' → logprob: -6.196928024291992
    6. '(d' → logprob: -7.321928024291992
    7. 'N' → logprob: -7.821928024291992
    8. ' N' → logprob: -9.071928024291992
    9. ' (' → logprob: -9.321928024291992
    10. '(' → logprob: -9.321928024291992

Token 223: ' middle' (ID: 10006)
  Prédit: ' middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' middle' → logprob: -0.7734171152114868
    2. 'middle' → logprob: -1.1484171152114868
    3. 'N' → logprob: -1.7734171152114868
    4. ' N' → logprob: -3.2734169960021973
    5. 'd' → logprob: -4.648416996002197
    6. ' d' → logprob: -6.273416996002197
    7. '   ' → logprob: -7.523416996002197
    8. '(N' → logprob: -7.523416996002197
    9. ' center' → logprob: -8.273417472839355
    10. 'mid' → logprob: -8.648417472839355

Token 224: ' and' (ID: 326)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.36350885033607483
    2. ' (' → logprob: -2.738508939743042
    3. ' and' → logprob: -2.863508939743042
    4. 'print' → logprob: -3.238508939743042
    5. '   ' → logprob: -3.613508939743042
    6. '(' → logprob: -3.863508939743042
    7. ' at' → logprob: -4.238508701324463
    8. '()' → logprob: -4.488508701324463
    9. '(N' → logprob: -4.738508701324463
    10. '+' → logprob: -4.863508701324463

Token 225: ' at' (ID: 540)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4002937972545624
    2. ' d' → logprob: -1.1502938270568848
    3. ' the' → logprob: -4.900293827056885
    4. 'the' → logprob: -5.150293827056885
    5. 'print' → logprob: -9.650293350219727
    6. ' print' → logprob: -11.650293350219727
    7. '
' → logprob: -12.525293350219727
    8. 'element' → logprob: -12.650293350219727
    9. '   ' → logprob: -13.275293350219727
    10. ' ' → logprob: -13.400293350219727

Token 226: ' the' (ID: 290)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.204723596572876
    2. ' d' → logprob: -1.204723596572876
    3. ' the' → logprob: -1.454723596572876
    4. 'the' → logprob: -1.954723596572876
    5. 'middle' → logprob: -4.704723358154297
    6. ' middle' → logprob: -5.204723358154297
    7. ' position' → logprob: -5.204723358154297
    8. 'position' → logprob: -5.954723358154297
    9. ' N' → logprob: -6.454723358154297
    10. 'N' → logprob: -6.954723358154297

Token 227: ' middle' (ID: 10006)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1120128482580185
    2. 'middle' → logprob: -2.8620128631591797
    3. ' N' → logprob: -3.3620128631591797
    4. ' middle' → logprob: -4.48701286315918
    5. 'd' → logprob: -6.11201286315918
    6. '(N' → logprob: -8.48701286315918
    7. ' d' → logprob: -8.86201286315918
    8. 'mid' → logprob: -9.48701286315918
    9. '[N' → logprob: -9.73701286315918
    10. '   ' → logprob: -9.73701286315918

Token 228: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.656078040599823
    2. '       ' → logprob: -0.781078040599823
    3. '()
' → logprob: -5.281077861785889
    4. '   ' → logprob: -5.406077861785889
    5. '()' → logprob: -6.156077861785889
    6. '
' → logprob: -6.281077861785889
    7. ' print' → logprob: -6.281077861785889
    8. 'd' → logprob: -6.406077861785889
    9. '```' → logprob: -6.531077861785889
    10. ' (' → logprob: -7.031077861785889

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04410792887210846
    2. 'print' → logprob: -3.1691079139709473
    3. ' print' → logprob: -7.169107913970947
    4. '   ' → logprob: -8.169108390808105
    5. '(' → logprob: -10.669108390808105
    6. '()' → logprob: -11.669108390808105
    7. ' ' → logprob: -12.419108390808105
    8. '```' → logprob: -12.669108390808105
    9. ' (' → logprob: -12.919108390808105
    10. ',' → logprob: -13.169108390808105

Token 230: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0062400647439062595
    2. ' print' → logprob: -5.381239891052246
    3. '       ' → logprob: -6.506239891052246
    4. '   ' → logprob: -9.006239891052246
    5. '```' → logprob: -14.881239891052246
    6. ' ' → logprob: -15.131239891052246
    7. '	print' → logprob: -15.631239891052246
    8. 'd' → logprob: -15.631239891052246
    9. '    ' → logprob: -15.756239891052246
    10. '        ' → logprob: -15.756239891052246

Token 231: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.005234475247561932
    2. '(' → logprob: -5.255234241485596
    3. 'd' → logprob: -15.130234718322754
    4. '(
' → logprob: -15.630234718322754
    5. '((' → logprob: -16.130233764648438
    6. ' (' → logprob: -16.380233764648438
    7. '(abs' → logprob: -18.380233764648438
    8. ' d' → logprob: -18.505233764648438
    9. '(int' → logprob: -19.380233764648438
    10. '('' → logprob: -19.380233764648438

Token 232: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.05541228502988815
    2. '[(' → logprob: -2.9304122924804688
    3. '[' → logprob: -7.805412292480469
    4. '(N' → logprob: -9.680412292480469
    5. '[d' → logprob: -10.180412292480469
    6. '[((' → logprob: -11.680412292480469
    7. '((' → logprob: -11.930412292480469
    8. '[
' → logprob: -12.805412292480469
    9. 'd' → logprob: -13.555412292480469
    10. 'N' → logprob: -14.305412292480469

Token 233: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3484792709350586
    2. '//' → logprob: -1.2234792709350586
    3. ' ' → logprob: -10.473479270935059
    4. '#' → logprob: -13.348479270935059
    5. '   ' → logprob: -13.473479270935059
    6. ')' → logprob: -14.348479270935059
    7. ' #' → logprob: -14.848479270935059
    8. '```' → logprob: -14.973479270935059
    9. '[' → logprob: -15.098479270935059
    10. ']' → logprob: -15.535979270935059

Token 234: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014164102263748646
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.264163970947266
    4. ')' → logprob: -15.764163970947266
    5. '۲' → logprob: -16.764163970947266
    6. '```' → logprob: -16.764163970947266
    7. '  ' → logprob: -17.139163970947266
    8. '1' → logprob: -17.389163970947266
    9. '２' → logprob: -17.576663970947266
    10. '
' → logprob: -17.764163970947266

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010831133840838447
    2. ' ' → logprob: -9.25010871887207
    3. '1' → logprob: -11.50010871887207
    4. '   ' → logprob: -13.75010871887207
    5. '  ' → logprob: -15.00010871887207
    6. '
' → logprob: -15.37510871887207
    7. '```' → logprob: -16.37510871887207
    8. '3' → logprob: -17.12510871887207
    9. '２' → logprob: -17.25010871887207
    10. '    ' → logprob: -17.43760871887207

Token 236: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3871866464614868
    2. ' +' → logprob: -1.1371866464614868
    3. '1' → logprob: -8.262187004089355
    4. ']' → logprob: -10.012187004089355
    5. ')' → logprob: -12.387187004089355
    6. '2' → logprob: -12.887187004089355
    7. '   ' → logprob: -13.387187004089355
    8. ' ' → logprob: -13.762187004089355
    9. ' plus' → logprob: -14.387187004089355
    10. '[' → logprob: -14.637187004089355

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014358828775584698
    2. ' ' → logprob: -8.875144004821777
    3. '   ' → logprob: -13.250144004821777
    4. '2' → logprob: -14.500144004821777
    5. ']' → logprob: -14.750144004821777
    6. '  ' → logprob: -15.625144004821777
    7. '```' → logprob: -15.625144004821777
    8. '0' → logprob: -15.875144004821777
    9. '+' → logprob: -16.12514305114746
    10. '
' → logprob: -16.31264305114746

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027480217977426946
    2. ' ' → logprob: -8.250274658203125
    3. '0' → logprob: -11.375274658203125
    4. '   ' → logprob: -14.000274658203125
    5. ')' → logprob: -15.312774658203125
    6. '  ' → logprob: -15.625274658203125
    7. '```' → logprob: -16.000274658203125
    8. '
' → logprob: -16.125274658203125
    9. ']' → logprob: -16.500274658203125
    10. '۱' → logprob: -16.812774658203125

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.8908587662735954e-05
    2. ' ]' → logprob: -11.250019073486328
    3. '-' → logprob: -12.625019073486328
    4. ']-' → logprob: -13.625019073486328
    5. ' -' → logprob: -14.375019073486328
    6. ')' → logprob: -15.500019073486328
    7. ']
' → logprob: -15.875019073486328
    8. '']' → logprob: -16.000019073486328
    9. '"]' → logprob: -16.375019073486328
    10. '])' → logprob: -16.750019073486328

Token 240: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01110947784036398
    2. '-' → logprob: -4.511109352111816
    3. ' ' → logprob: -10.011109352111816
    4. ')' → logprob: -11.511109352111816
    5. '-d' → logprob: -12.261109352111816
    6. ' ' → logprob: -13.761109352111816
    7. '   ' → logprob: -15.886109352111816
    8. '  ' → logprob: -15.886109352111816
    9. '```' → logprob: -15.886109352111816
    10. '    ' → logprob: -16.261110305786133

Token 241: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011048289015889168
    2. ' d' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.011048316955566
    4. ' ' → logprob: -16.13604736328125
    5. '  ' → logprob: -17.76104736328125
    6. '	d' → logprob: -18.13604736328125
    7. ' ' → logprob: -18.26104736328125
    8. '    ' → logprob: -18.26104736328125
    9. '
' → logprob: -18.63604736328125
    10. ')d' → logprob: -19.01104736328125

Token 242: '[N' (ID: 49776)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4291495084762573
    2. ' d' → logprob: -1.0541495084762573
    3. '[' → logprob: -7.804149627685547
    4. '[d' → logprob: -10.679149627685547
    5. '[N' → logprob: -12.429149627685547
    6. ' ' → logprob: -12.679149627685547
    7. ' ' → logprob: -13.304149627685547
    8. ')' → logprob: -13.304149627685547
    9. ']' → logprob: -13.554149627685547
    10. '_d' → logprob: -13.554149627685547

Token 243: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5761107802391052
    2. ' //' → logprob: -0.8261107802391052
    3. '#' → logprob: -8.82611083984375
    4. ' #' → logprob: -11.95111083984375
    5. ' ' → logprob: -12.07611083984375
    6. ' ' → logprob: -12.32611083984375
    7. '[' → logprob: -12.82611083984375
    8. '```' → logprob: -13.70111083984375
    9. '/' → logprob: -13.82611083984375
    10. '2' → logprob: -14.20111083984375

Token 244: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008068907191045582
    2. ' ' → logprob: -7.12580680847168
    3. '   ' → logprob: -13.25080680847168
    4. '1' → logprob: -15.25080680847168
    5. '  ' → logprob: -15.62580680847168
    6. '```' → logprob: -16.50080680847168
    7. '/' → logprob: -17.37580680847168
    8. '    ' → logprob: -17.43830680847168
    9. ')' → logprob: -17.62580680847168
    10. '۲' → logprob: -17.68830680847168

Token 245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021521867893170565
    2. '1' → logprob: -8.875215530395508
    3. ' ' → logprob: -9.500215530395508
    4. '   ' → logprob: -16.125215530395508
    5. '۲' → logprob: -16.500215530395508
    6. '  ' → logprob: -17.312715530395508
    7. '234' → logprob: -17.312715530395508
    8. '```' → logprob: -17.937715530395508
    9. '214' → logprob: -18.000215530395508
    10. '264' → logprob: -18.062715530395508

Token 246: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12727338075637817
    2. '])' → logprob: -2.1272733211517334
    3. ')
' → logprob: -8.752273559570312
    4. ']' → logprob: -9.627273559570312
    5. '])
' → logprob: -10.377273559570312
    6. ' )' → logprob: -10.627273559570312
    7. '))' → logprob: -11.002273559570312
    8. ')])' → logprob: -11.002273559570312
    9. ' ])' → logprob: -11.377273559570312
    10. '   ' → logprob: -12.127273559570312

Token 247: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.28154823184013367
    2. '__' → logprob: -1.406548261642456
    3. '_' → logprob: -8.156548500061035
    4. '_name' → logprob: -10.031548500061035
    5. ' ' → logprob: -10.281548500061035
    6. '___' → logprob: -11.031548500061035
    7. 'name' → logprob: -11.656548500061035
    8. '/__' → logprob: -13.656548500061035
    9. ' ' → logprob: -13.781548500061035
    10. ' ' → logprob: -14.031548500061035

Token 249: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0061730132438242435
    2. ' ==' → logprob: -5.506173133850098
    3. ' __' → logprob: -6.881173133850098
    4. '==' → logprob: -7.131173133850098
    5. '.__' → logprob: -9.881173133850098
    6. '[' → logprob: -10.006173133850098
    7. '__[' → logprob: -10.381173133850098
    8. '__.__' → logprob: -10.506173133850098
    9. '__.' → logprob: -10.756173133850098
    10. '_' → logprob: -11.131173133850098

Token 250: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2664456789934775e-06
    2. '__.__' → logprob: -13.875000953674316
    3. '==' → logprob: -16.500001907348633
    4. '____' → logprob: -17.250001907348633
    5. '__.' → logprob: -17.250001907348633
    6. '___' → logprob: -17.375001907348633
    7. '__
' → logprob: -17.875001907348633
    8. '_' → logprob: -19.000001907348633
    9. '__('' → logprob: -19.125001907348633
    10. '__

' → logprob: -19.750001907348633

Token 251: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1843114197254181
    2. '==' → logprob: -1.9343113899230957
    3. '__' → logprob: -3.8093113899230957
    4. '=="' → logprob: -6.559311389923096
    5. '=='' → logprob: -9.809311866760254
    6. '"' → logprob: -10.434311866760254
    7. ' =="' → logprob: -10.434311866760254
    8. ' ' → logprob: -10.559311866760254
    9. '_' → logprob: -10.684311866760254
    10. '=' → logprob: -11.059311866760254

Token 252: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01819056086242199
    2. ''' → logprob: -4.018190383911133
    3. ' "__' → logprob: -10.518190383911133
    4. '__' → logprob: -11.268190383911133
    5. ' '__' → logprob: -14.768190383911133
    6. '"user' → logprob: -16.518190383911133
    7. '"name' → logprob: -16.768190383911133
    8. '("__' → logprob: -17.768190383911133
    9. '"class' → logprob: -18.268190383911133
    10. ''"' → logprob: -18.393190383911133

Token 253: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0014438070356845856
    2. '__' → logprob: -6.751443862915039
    3. '_main' → logprob: -8.251443862915039
    4. ' main' → logprob: -12.501443862915039
    5. '_MAIN' → logprob: -12.501443862915039
    6. 'name' → logprob: -12.626443862915039
    7. 'm' → logprob: -15.126443862915039
    8. 'built' → logprob: -15.251443862915039
    9. '主' → logprob: -15.626443862915039
    10. '-main' → logprob: -15.751443862915039

Token 254: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3868768811225891
    2. '__' → logprob: -1.1368768215179443
    3. '__':
' → logprob: -12.136877059936523
    4. '_' → logprob: -15.011877059936523
    5. '__["' → logprob: -16.886877059936523
    6. '__",' → logprob: -17.761877059936523
    7. '__("' → logprob: -17.886877059936523
    8. '```' → logprob: -18.761877059936523
    9. '___' → logprob: -19.386877059936523
    10. '_"' → logprob: -19.636877059936523

Token 255: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05491816624999046
    2. 'main' → logprob: -3.304918050765991
    3. '   ' → logprob: -4.30491828918457
    4. '	main' → logprob: -6.42991828918457
    5. '    
' → logprob: -6.80491828918457
    6. '_main' → logprob: -8.55491828918457
    7. '(main' → logprob: -9.17991828918457
    8. '<|end|>' → logprob: -9.80491828918457
    9. ' 
' → logprob: -9.92991828918457
    10. ' ' → logprob: -10.67991828918457

Token 256: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.56102097814437e-05
    2. ' main' → logprob: -10.000045776367188
    3. '	main' → logprob: -17.125045776367188
    4. '   ' → logprob: -17.625045776367188
    5. 'maine' → logprob: -20.625045776367188
    6. 'm' → logprob: -20.750045776367188
    7. 'ma' → logprob: -20.875045776367188
    8. '(main' → logprob: -21.125045776367188
    9. '_main' → logprob: -21.375045776367188
    10. 'mai' → logprob: -21.750045776367188

Token 257: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 255
Tokens correctement prédits (1ère position, stricte): 83
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 185
Précision stricte (1ère position): 32.55%
Précision adaptée (1ère position): 34.51%
Précision (top 10): 72.55%
================================================================================
