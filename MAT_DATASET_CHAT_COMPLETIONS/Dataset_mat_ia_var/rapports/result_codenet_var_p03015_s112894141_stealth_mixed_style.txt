================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    from functools import reduce

    MODULO = 10**9 + 7

    # Fonction lambda pour initialiser la liste de zéros
    make_zeroes = lambda k: [0]*k

    L = input()
    length = len(L)

    # DP sous forme de tableau mutable, DP2 type array classique, DP1 sous forme de list comprehension
    dp_one = [0]*(length+1)
    dp_two = [1]+[0]*length

    for idx, ch in enumerate(L):
        # Utilisation d'une structure de contrôle ternaire dans une expression
        if ch == '0':
            dp_one[idx+1] = 3 * dp_one[idx]
            dp_two[idx+1] = dp_two[idx]
        else:
            # Style fonctionnel pour l'affectation
            dp_one[idx+1] = dp_one[idx]*3 + dp_two[idx]
            dp_two[idx+1] = dp_two[idx]*2
        # Utilisation d'un opérateur inplace et modulo sans appel de fonction
        dp_one[idx+1] %= MODULO; dp_two[idx+1] %= MODULO

    # return dans un style mixte : tuple indexé
    res = [dp_one[length], dp_two[length]]
    return sum(res) % MODULO

if __name__== "__main__":
    # Appel direct et print dans une instruction unique
    print(main())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.14868979156017303
    2. '\n' → logprob: -2.7736897468566895
    3. '(' → logprob: -3.6486897468566895
    4. ' ' → logprob: -4.6486897468566895
    5. '   ' → logprob: -4.6486897468566895
    6. ' 
' → logprob: -4.6486897468566895
    7. '    ' → logprob: -5.3986897468566895
    8. '    
' → logprob: -5.5236897468566895
    9. ''' → logprob: -5.8986897468566895
    10. '```' → logprob: -6.2736897468566895

Token 4: ' from' (ID: 591)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5843620896339417
    2. '   ' → logprob: -1.4593620300292969
    3. 'pass' → logprob: -2.209362030029297
    4. 'return' → logprob: -2.834362030029297
    5. '#' → logprob: -4.209362030029297
    6. 'p' → logprob: -5.209362030029297
    7. '```' → logprob: -5.709362030029297
    8. 'r' → logprob: -5.709362030029297
    9. '\' → logprob: -5.959362030029297
    10. 'a' → logprob: -6.084362030029297

Token 5: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5401034951210022
    2. ' sys' → logprob: -0.9151034951210022
    3. ' math' → logprob: -4.290103435516357
    4. ' flask' → logprob: -7.415103435516357
    5. ' ' → logprob: -7.540103435516357
    6. 'sys' → logprob: -8.040103912353516
    7. ' datetime' → logprob: -8.290103912353516
    8. ' argparse' → logprob: -8.415103912353516
    9. ' numpy' → logprob: -8.665103912353516
    10. ' json' → logprob: -8.790103912353516

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2347702980041504
    2. 'import' → logprob: -1.6097702980041504
    3. '_import' → logprob: -5.35977029800415
    4. '.' → logprob: -5.73477029800415
    5. ' ' → logprob: -7.48477029800415
    6. '.import' → logprob: -7.98477029800415
    7. ' .' → logprob: -8.859769821166992
    8. '_' → logprob: -8.859769821166992
    9. '	import' → logprob: -8.984769821166992
    10. '._' → logprob: -11.109769821166992

Token 7: ' reduce' (ID: 10389)
  Prédit: ' partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -1.6211695671081543
    2. 'wrap' → logprob: -1.7461695671081543
    3. ' wraps' → logprob: -1.7461695671081543
    4. 'partial' → logprob: -1.7461695671081543
    5. ' l' → logprob: -1.9961695671081543
    6. 'reduce' → logprob: -2.4961695671081543
    7. 'l' → logprob: -3.2461695671081543
    8. ' reduce' → logprob: -3.8711695671081543
    9. ' ' → logprob: -8.121170043945312
    10. 'cache' → logprob: -8.746170043945312

Token 8: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09370744228363037
    2. ',' → logprob: -3.71870756149292
    3. '\' → logprob: -3.96870756149292
    4. '   ' → logprob: -3.96870756149292
    5. '    ' → logprob: -4.46870756149292
    6. ' ' → logprob: -5.21870756149292
    7. '(
' → logprob: -6.09370756149292
    8. '    
' → logprob: -6.34370756149292
    9. ':' → logprob: -7.46870756149292
    10. '_' → logprob: -7.59370756149292

Token 9: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7145317792892456
    2. '   ' → logprob: -0.9645317792892456
    3. ',' → logprob: -3.589531898498535
    4. '    ' → logprob: -3.964531898498535
    5. '_' → logprob: -4.464531898498535
    6. 'result' → logprob: -4.464531898498535
    7. 'a' → logprob: -4.589531898498535
    8. 'r' → logprob: -4.964531898498535
    9. ' ' → logprob: -4.964531898498535
    10. '    
' → logprob: -5.214531898498535

Token 10: ' MOD' (ID: 32868)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05070555582642555
    2. 'total' → logprob: -3.300705671310425
    3. 'numbers' → logprob: -5.050705432891846
    4. 'return' → logprob: -6.175705432891846
    5. 'product' → logprob: -7.300705432891846
    6. 'res' → logprob: -7.425705432891846
    7. '```' → logprob: -7.550705432891846
    8. '   ' → logprob: -7.550705432891846
    9. 'data' → logprob: -8.175705909729004
    10. 's' → logprob: -8.550705909729004

Token 11: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06350667774677277
    2. '=' → logprob: -2.813506603240967
    3. ' ' → logprob: -6.813506603240967
    4. '_' → logprob: -7.813506603240967
    5. '    ' → logprob: -11.813507080078125
    6. ' =)' → logprob: -12.563507080078125
    7. '_=' → logprob: -12.563507080078125
    8. ',' → logprob: -12.688507080078125
    9. ' ,' → logprob: -12.688507080078125
    10. '  ' → logprob: -12.813507080078125

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15252327919006348
    2. '=' → logprob: -2.1525232791900635
    3. '_' → logprob: -3.9025232791900635
    4. ' ' → logprob: -5.527523040771484
    5. ' _' → logprob: -7.902523040771484
    6. '    ' → logprob: -8.027523040771484
    7. '   ' → logprob: -9.402523040771484
    8. ',' → logprob: -9.652523040771484
    9. ' ==' → logprob: -9.902523040771484
    10. '_=' → logprob: -10.027523040771484

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05724974721670151
    2. '10' → logprob: -2.9322497844696045
    3. '100' → logprob: -6.057249546051025
    4. '1' → logprob: -11.182250022888184
    5. ' (' → logprob: -12.307250022888184
    6. '(' → logprob: -13.307250022888184
    7. '998' → logprob: -14.057250022888184
    8. '409' → logprob: -14.932250022888184
    9. 'int' → logprob: -14.932250022888184
    10. '0' → logprob: -14.932250022888184

Token 14: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.39007532596588135
    2. '10' → logprob: -1.1400753259658813
    3. ' ' → logprob: -5.765075206756592
    4. '1' → logprob: -9.76507568359375
    5. '123' → logprob: -13.64007568359375
    6. '2' → logprob: -13.76507568359375
    7. '998' → logprob: -13.89007568359375
    8. '`' → logprob: -14.39007568359375
    9. '```' → logprob: -14.64007568359375
    10. '   ' → logprob: -14.76507568359375

Token 15: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048241302371025085
    2. '**' → logprob: -3.173241376876831
    3. ' **' → logprob: -5.423241138458252
    4. '^' → logprob: -7.298241138458252
    5. ' ' → logprob: -11.04824161529541
    6. '9' → logprob: -11.04824161529541
    7. '4' → logprob: -11.04824161529541
    8. '7' → logprob: -11.42324161529541
    9. '_' → logprob: -11.54824161529541
    10. '00' → logprob: -11.54824161529541

Token 16: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.125
    3. '```' → logprob: -17.625
    4. '10' → logprob: -18.5
    5. '8' → logprob: -18.875
    6. ' ' → logprob: -19.875
    7. '19' → logprob: -20.875
    8. '7' → logprob: -20.875
    9. '18' → logprob: -21.0
    10. '``' → logprob: -21.0

Token 17: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008712195791304111
    2. ' +' → logprob: -4.758712291717529
    3. '7' → logprob: -9.883711814880371
    4. '6' → logprob: -10.258711814880371
    5. '+
' → logprob: -12.758711814880371
    6. ' ' → logprob: -12.883711814880371
    7. '```' → logprob: -12.883711814880371
    8. ' +
' → logprob: -13.508711814880371
    9. '+

' → logprob: -14.383711814880371
    10. '＋' → logprob: -14.883711814880371

Token 18: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '+' → logprob: -14.500000953674316
    4. '```' → logprob: -17.500001907348633
    5. '9' → logprob: -17.625001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '07' → logprob: -18.250001907348633
    8. '  ' → logprob: -20.250001907348633
    9. '37' → logprob: -20.312501907348633
    10. '1' → logprob: -20.812501907348633

Token 19: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -15.375
    3. ' ' → logprob: -17.125
    4. '```' → logprob: -18.125
    5. '9' → logprob: -18.75
    6. '07' → logprob: -19.0
    7. '   ' → logprob: -20.375
    8. '17' → logprob: -21.125
    9. '37' → logprob: -21.3125
    10. '``' → logprob: -21.6875

Token 20: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09140633046627045
    2. '    
' → logprob: -2.9664063453674316
    3. '   ' → logprob: -3.7164063453674316
    4. '' → logprob: -5.841406345367432
    5. '```' → logprob: -6.091406345367432
    6. '

' → logprob: -6.716406345367432
    7. '
' → logprob: -6.716406345367432
    8. '\n' → logprob: -7.341406345367432
    9. '\' → logprob: -7.466406345367432
    10. '   
' → logprob: -7.591406345367432

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6725011467933655
    2. 'n' → logprob: -1.0475010871887207
    3. '
' → logprob: -2.7975010871887207
    4. '    
' → logprob: -3.4225010871887207
    5. 'result' → logprob: -3.7975010871887207
    6. 'a' → logprob: -4.672501087188721
    7. '\n' → logprob: -6.172501087188721
    8. ')' → logprob: -6.547501087188721
    9. '\' → logprob: -6.547501087188721
    10. '```' → logprob: -6.547501087188721

Token 22: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1386580765247345
    2. 'n' → logprob: -2.263658046722412
    3. ' result' → logprob: -4.888658046722412
    4. '   ' → logprob: -5.138658046722412
    5. 'res' → logprob: -5.763658046722412
    6. 'return' → logprob: -6.388658046722412
    7. 'arr' → logprob: -6.638658046722412
    8. 'total' → logprob: -6.888658046722412
    9. 'numbers' → logprob: -7.138658046722412
    10. 'count' → logprob: -7.263658046722412

Token 23: ' Fonction' (ID: 189149)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1523714065551758
    2. ' result' → logprob: -1.2773714065551758
    3. 'n' → logprob: -2.402371406555176
    4. ' n' → logprob: -2.652371406555176
    5. ' numbers' → logprob: -3.027371406555176
    6. ' ' → logprob: -3.402371406555176
    7. '   ' → logprob: -3.652371406555176
    8. 'data' → logprob: -3.777371406555176
    9. 'numbers' → logprob: -4.402371406555176
    10. ' data' → logprob: -4.402371406555176

Token 24: ' lambda' (ID: 27871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9687137603759766
    2. '_' → logprob: -1.7187137603759766
    3. ' de' → logprob: -2.0937137603759766
    4. 'def' → logprob: -2.3437137603759766
    5. ' def' → logprob: -2.9687137603759766
    6. '(' → logprob: -3.2187137603759766
    7. 's' → logprob: -3.4687137603759766
    8. '   ' → logprob: -4.468713760375977
    9. '<|end|>' → logprob: -4.593713760375977
    10. '<|end|>' → logprob: -4.593713760375977

Token 25: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1717824935913086
    2. '   ' → logprob: -1.2967824935913086
    3. 'lambda' → logprob: -2.5467824935913086
    4. ' =' → logprob: -2.6717824935913086
    5. 's' → logprob: -2.9217824935913086
    6. ' lambda' → logprob: -3.2967824935913086
    7. '(' → logprob: -3.6717824935913086
    8. ':' → logprob: -3.7967824935913086
    9. '    ' → logprob: -3.9217824935913086
    10. ' (' → logprob: -4.046782493591309

Token 26: ' initial' (ID: 4871)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.08122041076421738
    2. ' le' → logprob: -3.5812203884124756
    3. ' multiplier' → logprob: -3.8312203884124756
    4. ' la' → logprob: -4.956220626831055
    5. ' effectuer' → logprob: -5.081220626831055
    6. 'calcul' → logprob: -5.581220626831055
    7. ' calc' → logprob: -6.581220626831055
    8. ' appliquer' → logprob: -6.831220626831055
    9. ' addition' → logprob: -6.956220626831055
    10. ' ' → logprob: -7.581220626831055

Token 27: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.20831558108329773
    2. 'ser' → logprob: -2.45831561088562
    3. 'er' → logprob: -2.58331561088562
    4. 's' → logprob: -5.208315372467041
    5. 'zer' → logprob: -5.208315372467041
    6. 'izer' → logprob: -5.583315372467041
    7. '#' → logprob: -6.083315372467041
    8. '=' → logprob: -6.583315372467041
    9. 'is' → logprob: -6.833315372467041
    10. '```' → logprob: -6.958315372467041

Token 28: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8556529879570007
    2. ')' → logprob: -2.2306530475616455
    3. '_' → logprob: -2.6056530475616455
    4. '(' → logprob: -2.6056530475616455
    5. ' a' → logprob: -2.9806530475616455
    6. ' la' → logprob: -2.9806530475616455
    7. 'n' → logprob: -3.9806530475616455
    8. 's' → logprob: -4.105652809143066
    9. ' ' → logprob: -4.480652809143066
    10. ' un' → logprob: -4.605652809143066

Token 29: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.4277889728546143
    2. 'val' → logprob: -1.6777889728546143
    3. 's' → logprob: -1.8027889728546143
    4. 'variable' → logprob: -2.6777889728546143
    5. 'f' → logprob: -3.0527889728546143
    6. 'value' → logprob: -3.5527889728546143
    7. 'list' → logprob: -3.8027889728546143
    8. 'l' → logprob: -4.302788734436035
    9. 'd' → logprob: -4.302788734436035
    10. 'a' → logprob: -4.427788734436035

Token 30: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8842035531997681
    2. 'a' → logprob: -2.3842034339904785
    3. '(' → logprob: -2.5092034339904785
    4. '[' → logprob: -2.6342034339904785
    5. 's' → logprob: -2.6342034339904785
    6. 'lst' → logprob: -2.6342034339904785
    7. 'initial' → logprob: -3.3842034339904785
    8. 'd' → logprob: -3.7592034339904785
    9. 'l' → logprob: -4.2592034339904785
    10. ' lst' → logprob: -4.6342034339904785

Token 31: ' z' (ID: 579)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.9409666061401367
    2. 'multip' → logprob: -2.0659666061401367
    3. 'fact' → logprob: -2.4409666061401367
    4. ' puiss' → logprob: -2.8159666061401367
    5. ' facteurs' → logprob: -2.8159666061401367
    6. ' valeurs' → logprob: -2.9409666061401367
    7. 'a' → logprob: -3.5659666061401367
    8. ' taille' → logprob: -3.6909666061401367
    9. 'scores' → logprob: -3.6909666061401367
    10. 'val' → logprob: -3.9409666061401367

Token 32: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.35828596353530884
    2. 'eros' → logprob: -2.108285903930664
    3. 'e' → logprob: -2.358285903930664
    4. '[' → logprob: -3.608285903930664
    5. '_' → logprob: -4.233285903930664
    6. '```' → logprob: -4.733285903930664
    7. 'ero' → logprob: -4.858285903930664
    8. '`' → logprob: -5.108285903930664
    9. 'éro' → logprob: -5.108285903930664
    10. 'é' → logprob: -5.483285903930664

Token 33: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3970208168029785
    2. 'z' → logprob: -1.5220208168029785
    3. '   ' → logprob: -2.1470208168029785
    4. 'zeros' → logprob: -2.2720208168029785
    5. 'zero' → logprob: -2.7720208168029785
    6. 's' → logprob: -2.8970208168029785
    7. 'n' → logprob: -3.0220208168029785
    8. ' zeros' → logprob: -3.1470208168029785
    9. 'lst' → logprob: -4.1470208168029785
    10. '0' → logprob: -4.2720208168029785

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4728538691997528
    2. 'n' → logprob: -1.3478538990020752
    3. '_' → logprob: -3.472853899002075
    4. '(n' → logprob: -4.347853660583496
    5. 's' → logprob: -4.597853660583496
    6. '(' → logprob: -4.972853660583496
    7. '`' → logprob: -4.972853660583496
    8. 'z' → logprob: -4.972853660583496
    9. '    ' → logprob: -5.097853660583496
    10. ' ' → logprob: -5.097853660583496

Token 35: ' make' (ID: 1520)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.4272351264953613
    2. ' zeros' → logprob: -1.4272351264953613
    3. 'lst' → logprob: -2.4272351264953613
    4. 'zeros' → logprob: -2.5522351264953613
    5. 'n' → logprob: -2.5522351264953613
    6. ' z' → logprob: -2.6772351264953613
    7. ' n' → logprob: -3.0522351264953613
    8. 'zero' → logprob: -3.1772351264953613
    9. ' zero' → logprob: -3.6772351264953613
    10. ' lst' → logprob: -3.6772351264953613

Token 36: '_zero' (ID: 53468)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1626499891281128
    2. '_' → logprob: -2.2876501083374023
    3. '_array' → logprob: -3.4126501083374023
    4. '_zero' → logprob: -5.162650108337402
    5. '_z' → logprob: -5.662650108337402
    6. '_lst' → logprob: -6.037650108337402
    7. '_lista' → logprob: -6.662650108337402
    8. '_l' → logprob: -7.537650108337402
    9. 'list' → logprob: -7.912650108337402
    10. '_lambda' → logprob: -8.037650108337402

Token 37: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05216333270072937
    2. '_list' → logprob: -3.0521633625030518
    3. '_array' → logprob: -5.927163124084473
    4. '_s' → logprob: -7.802163124084473
    5. ' =' → logprob: -8.427163124084473
    6. '=' → logprob: -9.052163124084473
    7. '_lst' → logprob: -9.677163124084473
    8. '_vector' → logprob: -10.677163124084473
    9. '_' → logprob: -10.927163124084473
    10. 'list' → logprob: -11.677163124084473

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027322987094521523
    2. ' =' → logprob: -3.777323007583618
    3. '=lambda' → logprob: -5.527322769165039
    4. '(' → logprob: -10.402322769165039
    5. '   ' → logprob: -10.902322769165039
    6. '(n' → logprob: -11.152322769165039
    7. '=(' → logprob: -11.902322769165039
    8. '(lambda' → logprob: -12.152322769165039
    9. ':' → logprob: -12.277322769165039
    10. '=n' → logprob: -12.652322769165039

Token 39: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.31354811787605286
    2. ' lambda' → logprob: -1.3135480880737305
    3. '(lambda' → logprob: -8.18854808807373
    4. '   ' → logprob: -12.18854808807373
    5. '=lambda' → logprob: -12.68854808807373
    6. '    ' → logprob: -16.063549041748047
    7. '_lambda' → logprob: -16.438549041748047
    8. ' ' → logprob: -16.688549041748047
    9. 'n' → logprob: -17.438549041748047
    10. 'λ' → logprob: -17.813549041748047

Token 40: ' k' (ID: 372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1429775357246399
    2. ' n' → logprob: -2.017977476119995
    3. 'x' → logprob: -8.767977714538574
    4. ' x' → logprob: -10.267977714538574
    5. ':' → logprob: -10.392977714538574
    6. ' size' → logprob: -11.517977714538574
    7. ' ' → logprob: -11.517977714538574
    8. ' :' → logprob: -11.892977714538574
    9. 'size' → logprob: -11.892977714538574
    10. 's' → logprob: -12.142977714538574

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003356778062880039
    2. ' :' → logprob: -5.75335693359375
    3. ':[' → logprob: -9.25335693359375
    4. ' k' → logprob: -10.50335693359375
    5. ':k' → logprob: -10.50335693359375
    6. '[' → logprob: -11.62835693359375
    7. ',' → logprob: -12.37835693359375
    8. ' n' → logprob: -12.87835693359375
    9. ',k' → logprob: -13.00335693359375
    10. ':n' → logprob: -13.25335693359375

Token 42: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4750348627567291
    2. '[' → logprob: -0.9750348329544067
    3. '[k' → logprob: -6.975034713745117
    4. '[n' → logprob: -11.225034713745117
    5. '[m' → logprob: -13.100034713745117
    6. '[key' → logprob: -13.350034713745117
    7. ' ' → logprob: -14.225034713745117
    8. '[int' → logprob: -14.475034713745117
    9. '[len' → logprob: -14.600034713745117
    10. ' ' → logprob: -14.725034713745117

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.625335693359375
    4. ' ' → logprob: -17.375335693359375
    5. '  ' → logprob: -17.750335693359375
    6. '۰' → logprob: -18.437835693359375
    7. ')' → logprob: -18.812835693359375
    8. '```' → logprob: -18.812835693359375
    9. '    ' → logprob: -19.187835693359375
    10. '
' → logprob: -19.562835693359375

Token 44: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12825387716293335
    2. ']*' → logprob: -2.128253936767578
    3. ' for' → logprob: -6.753253936767578
    4. 'for' → logprob: -9.378253936767578
    5. ',' → logprob: -10.253253936767578
    6. ' ]' → logprob: -10.878253936767578
    7. ']*(' → logprob: -11.378253936767578
    8. ']+' → logprob: -12.253253936767578
    9. '   ' → logprob: -14.628253936767578
    10. ')' → logprob: -14.628253936767578

Token 45: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.128163257315464e-07
    2. ' k' → logprob: -15.375
    3. '(k' → logprob: -17.375
    4. '(' → logprob: -18.75
    5. '{k' → logprob: -20.75
    6. '	k' → logprob: -21.5
    7. ' ' → logprob: -21.75
    8. '```' → logprob: -21.75
    9. '   ' → logprob: -22.0
    10. '_k' → logprob: -22.25

Token 46: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33565258979797363
    2. '   ' → logprob: -2.3356525897979736
    3. '<|end|>' → logprob: -2.7106525897979736
    4. ')' → logprob: -3.3356525897979736
    5. '\n' → logprob: -3.5856525897979736
    6. '    
' → logprob: -3.7106525897979736
    7. 'newline' → logprob: -5.2106523513793945
    8. '\' → logprob: -5.4606523513793945
    9. '' → logprob: -5.8356523513793945
    10. '<|end|>' → logprob: -5.9606523513793945

Token 47: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16490918397903442
    2. '   ' → logprob: -2.2899091243743896
    3. '    
' → logprob: -3.9149091243743896
    4. '

' → logprob: -4.289909362792969
    5. 'n' → logprob: -5.414909362792969
    6. '<|end|>' → logprob: -6.039909362792969
    7. '
    
' → logprob: -6.164909362792969
    8. '\n' → logprob: -6.164909362792969
    9. ')' → logprob: -6.914909362792969
    10. '  
' → logprob: -7.414909362792969

Token 48: ' L' (ID: 451)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35506030917167664
    2. '   ' → logprob: -1.480060338973999
    3. '
' → logprob: -3.480060338973999
    4. '    
' → logprob: -4.35506010055542
    5. 'k' → logprob: -4.48006010055542
    6. ' ' → logprob: -6.10506010055542
    7. ')' → logprob: -6.10506010055542
    8. 'x' → logprob: -6.48006010055542
    9. 'result' → logprob: -6.85506010055542
    10. 'm' → logprob: -6.98006010055542

Token 49: ' =' (ID: 314)
  Prédit: 'ength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ength' → logprob: -1.3392516374588013
    2. ' =' → logprob: -1.4642516374588013
    3. '=' → logprob: -1.7142516374588013
    4. 'en' → logprob: -2.9642515182495117
    5. 'E' → logprob: -3.2142515182495117
    6. 'EN' → logprob: -3.3392515182495117
    7. 'ist' → logprob: -3.7142515182495117
    8. 'ENGTH' → logprob: -3.7142515182495117
    9. 'L' → logprob: -3.8392515182495117
    10. 'e' → logprob: -3.9642515182495117

Token 50: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16654233634471893
    2. ' ' → logprob: -2.6665422916412354
    3. 'int' → logprob: -3.0415422916412354
    4. ' []' → logprob: -4.0415425300598145
    5. ' make' → logprob: -5.5415425300598145
    6. ' [' → logprob: -5.6665425300598145
    7. '[int' → logprob: -5.9165425300598145
    8. '10' → logprob: -6.0415425300598145
    9. '[]' → logprob: -6.6665425300598145
    10. 'make' → logprob: -6.6665425300598145

Token 51: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008607231429778039
    2. '()' → logprob: -7.375860691070557
    3. '('' → logprob: -9.625861167907715
    4. '(()' → logprob: -9.750861167907715
    5. '("("' → logprob: -9.875861167907715
    6. '(
' → logprob: -10.625861167907715
    7. '(

' → logprob: -11.125861167907715
    8. '(`' → logprob: -12.375861167907715
    9. '(**' → logprob: -13.000861167907715
    10. ' (' → logprob: -13.250861167907715

Token 52: '   ' (ID: 271)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -1.0813430547714233
    2. ')' → logprob: -1.3313430547714233
    3. '()' → logprob: -2.081343173980713
    4. '   ' → logprob: -2.456343173980713
    5. '.' → logprob: -2.831343173980713
    6. '.strip' → logprob: -3.456343173980713
    7. '
' → logprob: -4.456343173980713
    8. '.readline' → logprob: -4.456343173980713
    9. ' ' → logprob: -4.956343173980713
    10. '<|end|>' → logprob: -5.206343173980713

Token 53: ' length' (ID: 5517)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8091802000999451
    2. ')' → logprob: -1.1841802597045898
    3. 'k' → logprob: -2.93418025970459
    4. '   ' → logprob: -2.93418025970459
    5. 'N' → logprob: -3.55918025970459
    6. '.' → logprob: -4.55918025970459
    7. 's' → logprob: -4.55918025970459
    8. ' N' → logprob: -5.05918025970459
    9. ' n' → logprob: -5.05918025970459
    10. '
' → logprob: -5.05918025970459

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29771411418914795
    2. '_' → logprob: -2.0477142333984375
    3. '=' → logprob: -2.2977142333984375
    4. 's' → logprob: -4.1727142333984375
    5. '_length' → logprob: -5.4227142333984375
    6. '(' → logprob: -6.0477142333984375
    7. '_len' → logprob: -6.6727142333984375
    8. ' ' → logprob: -7.0477142333984375
    9. ')' → logprob: -7.4227142333984375
    10. '_space' → logprob: -7.5477142333984375

Token 55: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.007738535292446613
    2. ' int' → logprob: -5.5077385902404785
    3. 'len' → logprob: -5.6327385902404785
    4. ' ' → logprob: -10.13273811340332
    5. 'int' → logprob: -10.50773811340332
    6. '(len' → logprob: -12.13273811340332
    7. '=len' → logprob: -14.75773811340332
    8. ' ' → logprob: -14.88273811340332
    9. ' length' → logprob: -15.13273811340332
    10. '[len' → logprob: -15.25773811340332

Token 56: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.048593729734420776
    2. '(' → logprob: -3.048593759536743
    3. ' (' → logprob: -13.048593521118164
    4. '(length' → logprob: -13.298593521118164
    5. '(l' → logprob: -14.423593521118164
    6. '(s' → logprob: -14.548593521118164
    7. '(
' → logprob: -14.798593521118164
    8. '(S' → logprob: -15.173593521118164
    9. '(

' → logprob: -15.423593521118164
    10. '(input' → logprob: -15.923593521118164

Token 57: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013285996101330966
    2. ' )' → logprob: -9.00013256072998
    3. ')
' → logprob: -12.00013256072998
    4. '   ' → logprob: -13.25013256072998
    5. ')L' → logprob: -14.75013256072998
    6. '))' → logprob: -15.50013256072998
    7. ' ' → logprob: -15.87513256072998
    8. ' ' → logprob: -16.000133514404297
    9. ')))' → logprob: -16.500133514404297
    10. '[' → logprob: -16.500133514404297

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42999717593193054
    2. 'n' → logprob: -2.679997205734253
    3. '    
' → logprob: -2.929997205734253
    4. ')' → logprob: -2.929997205734253
    5. '<|end|>' → logprob: -3.304997205734253
    6. 'result' → logprob: -3.679997205734253
    7. 's' → logprob: -3.929997205734253
    8. '
' → logprob: -4.304996967315674
    9. '#' → logprob: -4.679996967315674
    10. '  
' → logprob: -4.804996967315674

Token 59: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9940618276596069
    2. 'count' → logprob: -1.244061827659607
    3. 'counts' → logprob: -2.3690619468688965
    4. 'dp' → logprob: -3.2440619468688965
    5. 'n' → logprob: -3.3690619468688965
    6. 'sum' → logprob: -3.9940619468688965
    7. 's' → logprob: -3.9940619468688965
    8. 'res' → logprob: -4.1190619468688965
    9. 'frequency' → logprob: -4.7440619468688965
    10. 'results' → logprob: -4.9940619468688965

Token 60: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8708158135414124
    2. 'counts' → logprob: -1.7458157539367676
    3. 'freq' → logprob: -1.9958157539367676
    4. 'count' → logprob: -2.4958157539367676
    5. 'digits' → logprob: -3.8708157539367676
    6. 'arr' → logprob: -3.9958157539367676
    7. 'prefix' → logprob: -4.370815753936768
    8. 'z' → logprob: -4.370815753936768
    9. 'memo' → logprob: -4.995815753936768
    10. '#' → logprob: -5.245815753936768

Token 61: ' sous' (ID: 14487)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042965393513441086
    2. '=' → logprob: -3.2929654121398926
    3. '_' → logprob: -5.542965412139893
    4. '_table' → logprob: -7.167965412139893
    5. '_array' → logprob: -10.042964935302734
    6. '[' → logprob: -10.542964935302734
    7. 'table' → logprob: -10.917964935302734
    8. 'dp' → logprob: -10.917964935302734
    9. '=[]' → logprob: -11.417964935302734
    10. '1' → logprob: -11.542964935302734

Token 62: ' forme' (ID: 27450)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.256084680557251
    2. 'sequence' → logprob: -1.881084680557251
    3. 'la' → logprob: -2.381084680557251
    4. '_' → logprob: -2.756084680557251
    5. '-m' → logprob: -2.756084680557251
    6. 'chaine' → logprob: -3.131084680557251
    7. '=' → logprob: -3.506084680557251
    8. 'ense' → logprob: -3.756084680557251
    9. '_sequence' → logprob: -4.256084442138672
    10. 'liste' → logprob: -4.381084442138672

Token 63: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8542566895484924
    2. 'd' → logprob: -1.2292566299438477
    3. 'de' → logprob: -1.6042566299438477
    4. ' de' → logprob: -2.7292566299438477
    5. '   ' → logprob: -4.729256629943848
    6. '[]' → logprob: -5.729256629943848
    7. '    ' → logprob: -7.354256629943848
    8. 'def' → logprob: -7.479256629943848
    9. '[' → logprob: -8.104256629943848
    10. '  ' → logprob: -8.729256629943848

Token 64: ' tableau' (ID: 67053)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.0070980787277222
    2. 'liste' → logprob: -1.2570980787277222
    3. 'table' → logprob: -2.3820981979370117
    4. ' dict' → logprob: -3.0070981979370117
    5. 'list' → logprob: -3.1320981979370117
    6. ' liste' → logprob: -3.3820981979370117
    7. '   ' → logprob: -3.3820981979370117
    8. 'd' → logprob: -3.5070981979370117
    9. '[' → logprob: -4.882098197937012
    10. ' table' → logprob: -5.007098197937012

Token 65: ' mutable' (ID: 54987)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.017253300175070763
    2. ' dp' → logprob: -5.017253398895264
    3. 's' → logprob: -5.517253398895264
    4. '   ' → logprob: -5.767253398895264
    5. 'd' → logprob: -7.517253398895264
    6. '[' → logprob: -7.517253398895264
    7. ' =' → logprob: -7.892253398895264
    8. 'DP' → logprob: -7.892253398895264
    9. '_dp' → logprob: -8.017252922058105
    10. 'de' → logprob: -8.517252922058105

Token 66: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1176149919629097
    2. ' dp' → logprob: -2.492614984512329
    3. '   ' → logprob: -3.867614984512329
    4. ',' → logprob: -6.117615222930908
    5. '[' → logprob: -6.992615222930908
    6. 'DP' → logprob: -7.242615222930908
    7. 's' → logprob: -7.742615222930908
    8. '_dp' → logprob: -7.742615222930908
    9. ' =' → logprob: -7.867615222930908
    10. ':' → logprob: -7.867615222930908

Token 67: ' DP' (ID: 51992)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.17757710814476013
    2. 'dp' → logprob: -2.052577018737793
    3. '   ' → logprob: -5.302577018737793
    4. ' states' → logprob: -5.302577018737793
    5. ' [' → logprob: -5.552577018737793
    6. ' current' → logprob: -6.302577018737793
    7. ' prev' → logprob: -6.427577018737793
    8. '    ' → logprob: -6.802577018737793
    9. ' state' → logprob: -6.927577018737793
    10. '[' → logprob: -6.927577018737793

Token 68: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0035742921754717827
    2. '=' → logprob: -6.003574371337891
    3. 's' → logprob: -8.12857437133789
    4. '_' → logprob: -8.75357437133789
    5. '[' → logprob: -9.12857437133789
    6. '[]' → logprob: -9.25357437133789
    7. ' ' → logprob: -10.00357437133789
    8. '=[]' → logprob: -10.12857437133789
    9. '_table' → logprob: -10.25357437133789
    10. '1' → logprob: -10.25357437133789

Token 69: ' type' (ID: 1490)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003935444634407759
    2. '=' → logprob: -5.62893533706665
    3. '1' → logprob: -10.128935813903809
    4. ',' → logprob: -10.378935813903809
    5. '=[]' → logprob: -10.503935813903809
    6. 's' → logprob: -10.628935813903809
    7. '[' → logprob: -10.753935813903809
    8. '[]' → logprob: -10.753935813903809
    9. ':' → logprob: -10.878935813903809
    10. ' ' → logprob: -11.003935813903809

Token 70: ' array' (ID: 2644)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7937120795249939
    2. ' =' → logprob: -1.2937121391296387
    3. ' list' → logprob: -2.6687121391296387
    4. '=' → logprob: -3.4187121391296387
    5. ' dict' → logprob: -3.6687121391296387
    6. 'dict' → logprob: -3.9187121391296387
    7. 'd' → logprob: -4.168712139129639
    8. 'List' → logprob: -4.668712139129639
    9. ' :' → logprob: -4.793712139129639
    10. ' List' → logprob: -4.918712139129639

Token 71: ' classique' (ID: 76895)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5675494074821472
    2. '[' → logprob: -1.692549467086792
    3. ' =' → logprob: -2.442549467086792
    4. '(s' → logprob: -3.567549467086792
    5. '   ' → logprob: -3.692549467086792
    6. '(' → logprob: -3.942549467086792
    7. '[int' → logprob: -4.442549228668213
    8. ')' → logprob: -4.567549228668213
    9. '_' → logprob: -4.692549228668213
    10. 'import' → logprob: -4.692549228668213

Token 72: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2530606687068939
    2. 'dp' → logprob: -3.1280605792999268
    3. '
' → logprob: -3.2530605792999268
    4. 's' → logprob: -3.3780605792999268
    5. '<|end|>' → logprob: -3.8780605792999268
    6. ' =' → logprob: -4.503060817718506
    7. 'def' → logprob: -4.503060817718506
    8. '[' → logprob: -4.628060817718506
    9. ',' → logprob: -5.003060817718506
    10. ' ' → logprob: -5.253060817718506

Token 73: ' DP' (ID: 51992)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5878358483314514
    2. 'dp' → logprob: -1.0878357887268066
    3. '   ' → logprob: -3.9628357887268066
    4. ' n' → logprob: -4.212835788726807
    5. ' DP' → logprob: -4.712835788726807
    6. '    ' → logprob: -5.087835788726807
    7. 'DP' → logprob: -5.462835788726807
    8. 'import' → logprob: -5.462835788726807
    9. 'n' → logprob: -5.462835788726807
    10. ' with' → logprob: -5.587835788726807

Token 74: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13947300612926483
    2. '1' → logprob: -2.7644729614257812
    3. '2' → logprob: -3.5144729614257812
    4. '=' → logprob: -4.514472961425781
    5. '[' → logprob: -5.264472961425781
    6. '3' → logprob: -5.514472961425781
    7. 's' → logprob: -5.639472961425781
    8. ',' → logprob: -5.764472961425781
    9. '[]' → logprob: -6.014472961425781
    10. '0' → logprob: -6.639472961425781

Token 75: ' sous' (ID: 14487)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010341350920498371
    2. '=' → logprob: -4.760341167449951
    3. ',' → logprob: -8.01034164428711
    4. '[' → logprob: -8.38534164428711
    5. '   ' → logprob: -8.63534164428711
    6. ')' → logprob: -9.01034164428711
    7. '<|end|>' → logprob: -9.01034164428711
    8. '[]' → logprob: -9.26034164428711
    9. 'def' → logprob: -9.38534164428711
    10. ':' → logprob: -9.76034164428711

Token 76: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.9454970359802246
    2. 'form' → logprob: -1.0704970359802246
    3. 'forme' → logprob: -1.5704970359802246
    4. 'list' → logprob: -3.5704970359802246
    5. ' form' → logprob: -4.945497035980225
    6. 'liste' → logprob: -5.320497035980225
    7. '   ' → logprob: -5.820497035980225
    8. 'import' → logprob: -6.195497035980225
    9. 'array' → logprob: -6.320497035980225
    10. 'format' → logprob: -6.445497035980225

Token 77: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.31421414017677307
    2. 'de' → logprob: -2.3142142295837402
    3. ' d' → logprob: -2.4392142295837402
    4. 'd' → logprob: -2.9392142295837402
    5. '[]' → logprob: -4.06421422958374
    6. '    ' → logprob: -5.68921422958374
    7. 'deque' → logprob: -6.56421422958374
    8. '=' → logprob: -6.68921422958374
    9. ' of' → logprob: -6.93921422958374
    10. '   ' → logprob: -6.93921422958374

Token 78: ' list' (ID: 1562)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.2011138200759888
    2. 'list' → logprob: -1.3261138200759888
    3. ' dict' → logprob: -1.8261138200759888
    4. ' defaultdict' → logprob: -2.451113700866699
    5. ' list' → logprob: -3.076113700866699
    6. 'default' → logprob: -3.326113700866699
    7. 'd' → logprob: -3.451113700866699
    8. 'liste' → logprob: -4.326113700866699
    9. '```' → logprob: -4.826113700866699
    10. ' diction' → logprob: -4.826113700866699

Token 79: ' comprehension' (ID: 91423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7764817476272583
    2. '<|end|>' → logprob: -1.9014817476272583
    3. '_' → logprob: -2.5264816284179688
    4. '[' → logprob: -2.9014816284179688
    5. '   ' → logprob: -3.2764816284179688
    6. 'def' → logprob: -3.2764816284179688
    7. ',' → logprob: -3.4014816284179688
    8. 'dp' → logprob: -3.4014816284179688
    9. ')' → logprob: -3.7764816284179688
    10. ' ' → logprob: -4.776481628417969

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45600128173828125
    2. '<|end|>' → logprob: -2.4560012817382812
    3. '_' → logprob: -2.5810012817382812
    4. '[' → logprob: -2.5810012817382812
    5. '
' → logprob: -3.3310012817382812
    6. ' ' → logprob: -3.5810012817382812
    7. 'n' → logprob: -4.706001281738281
    8. '    
' → logprob: -4.706001281738281
    9. ':' → logprob: -5.081001281738281
    10. ',' → logprob: -5.081001281738281

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1566721796989441
    2. '<|end|>' → logprob: -2.531672239303589
    3. '
' → logprob: -3.281672239303589
    4. '<|end|>' → logprob: -4.78167200088501
    5. '    
' → logprob: -5.03167200088501
    6. '[' → logprob: -5.53167200088501
    7. 'n' → logprob: -6.90667200088501
    8. 'DP' → logprob: -6.90667200088501
    9. 'def' → logprob: -7.15667200088501
    10. '```' → logprob: -7.28167200088501

Token 82: ' dp' (ID: 21546)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.40700849890708923
    2. '   ' → logprob: -2.032008409500122
    3. 'D' → logprob: -2.282008409500122
    4. 'dp' (adapté à ' dp') → logprob: -2.907008409500122
    5. ' DP' → logprob: -4.282008647918701
    6. ' ' → logprob: -5.407008647918701
    7. '[' → logprob: -5.657008647918701
    8. '#' → logprob: -5.782008647918701
    9. '
' → logprob: -5.907008647918701
    10. 'n' → logprob: -6.157008647918701

Token 83: '_one' (ID: 26979)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015640366822481155
    2. '2' → logprob: -5.1406402587890625
    3. '=' → logprob: -5.2656402587890625
    4. '1' → logprob: -5.6406402587890625
    5. ',' → logprob: -7.7656402587890625
    6. ' ' → logprob: -8.640640258789062
    7. ' =[' → logprob: -9.140640258789062
    8. ' ,' → logprob: -9.890640258789062
    9. '[' → logprob: -10.015640258789062
    10. '=[' → logprob: -10.140640258789062

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011763924732804298
    2. '_' → logprob: -5.386764049530029
    3. '=' → logprob: -5.886764049530029
    4. 's' → logprob: -6.386764049530029
    5. '1' → logprob: -6.886764049530029
    6. ' ' → logprob: -7.511764049530029
    7. ',' → logprob: -7.761764049530029
    8. ' =[' → logprob: -8.511763572692871
    9. '[' → logprob: -9.511763572692871
    10. '2' → logprob: -9.761763572692871

Token 85: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6491431593894958
    2. ' [' → logprob: -0.7741431593894958
    3. ' make' → logprob: -4.774143218994141
    4. 'make' → logprob: -5.024143218994141
    5. '[[' → logprob: -7.399143218994141
    6. ' [[' → logprob: -8.64914321899414
    7. '   ' → logprob: -9.39914321899414
    8. '(make' → logprob: -9.39914321899414
    9. '[int' → logprob: -10.02414321899414
    10. '[m' → logprob: -10.02414321899414

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042092446237802505
    2. '1' → logprob: -3.6670925617218018
    3. 'make' → logprob: -4.917092323303223
    4. '[' → logprob: -5.167092323303223
    5. '(' → logprob: -6.917092323303223
    6. ' ' → logprob: -7.792092323303223
    7. '(make' → logprob: -8.042092323303223
    8. ' [' → logprob: -8.792092323303223
    9. 'False' → logprob: -8.917092323303223
    10. ' make' → logprob: -9.042092323303223

Token 87: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011762982234358788
    2. ' for' → logprob: -5.261763095855713
    3. ']*' → logprob: -5.886763095855713
    4. ' ]' → logprob: -6.261763095855713
    5. ',' → logprob: -7.261763095855713
    6. ']*(' → logprob: -7.386763095855713
    7. 'for' → logprob: -8.011762619018555
    8. ']+' → logprob: -9.011762619018555
    9. ' ' → logprob: -11.636762619018555
    10. '  ' → logprob: -12.261762619018555

Token 88: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.01168616022914648
    2. ' length' → logprob: -6.136686325073242
    3. '10' → logprob: -6.511686325073242
    4. '(length' → logprob: -6.761686325073242
    5. '2' → logprob: -6.886686325073242
    6. '100' → logprob: -6.886686325073242
    7. '1' → logprob: -7.011686325073242
    8. '3' → logprob: -7.636686325073242
    9. '7' → logprob: -7.886686325073242
    10. '101' → logprob: -8.011686325073242

Token 89: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1604532152414322
    2. ')' → logprob: -2.6604533195495605
    3. ' +' → logprob: -2.6604533195495605
    4. '-' → logprob: -5.5354533195495605
    5. ' )' → logprob: -6.1604533195495605
    6. ' -' → logprob: -6.6604533195495605
    7. '   ' → logprob: -7.1604533195495605
    8. ' ' → logprob: -9.410452842712402
    9. '1' → logprob: -9.910452842712402
    10. '+)' → logprob: -9.910452842712402

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016318554989993572
    2. ' ' → logprob: -6.626631736755371
    3. '2' → logprob: -8.126631736755371
    4. '   ' → logprob: -13.064131736755371
    5. '```' → logprob: -13.439131736755371
    6. '3' → logprob: -13.939131736755371
    7. '  ' → logprob: -13.939131736755371
    8. ')' → logprob: -14.189131736755371
    9. '7' → logprob: -14.439131736755371
    10. '5' → logprob: -14.751631736755371

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.452426608419046e-05
    2. ' )' → logprob: -11.12503433227539
    3. '<|end|>' → logprob: -11.25003433227539
    4. ')
' → logprob: -12.25003433227539
    5. ']' → logprob: -14.87503433227539
    6. '),' → logprob: -15.25003433227539
    7. '<|end|>' → logprob: -15.25003433227539
    8. ')

' → logprob: -15.75003433227539
    9. '```' → logprob: -15.87503433227539
    10. '   ' → logprob: -16.00003433227539

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7573688626289368
    2. '<|end|>' → logprob: -0.8823688626289368
    3. ' ' → logprob: -3.257368803024292
    4. '
' → logprob: -3.507368803024292
    5. '[' → logprob: -4.007369041442871
    6. 'dp' → logprob: -5.257369041442871
    7. '<|end|>' → logprob: -5.257369041442871
    8. '    
' → logprob: -5.257369041442871
    9. ')' → logprob: -5.507369041442871
    10. ' 
' → logprob: -6.007369041442871

Token 93: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.41558369994163513
    2. ' ' → logprob: -1.7905837297439575
    3. ' 
' → logprob: -2.790583610534668
    4. '<|end|>' → logprob: -3.540583610534668
    5. '[' → logprob: -3.915583610534668
    6. ' dp' → logprob: -4.165583610534668
    7. '0' → logprob: -4.665583610534668
    8. '
' → logprob: -4.665583610534668
    9. '   ' → logprob: -5.165583610534668
    10. '    
' → logprob: -5.540583610534668

Token 94: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -2.3676733690081164e-05
    2. '_' → logprob: -11.75002384185791
    3. 'two' → logprob: -11.87502384185791
    4. '_one' → logprob: -12.25002384185791
    5. '_tw' → logprob: -13.62502384185791
    6. '_t' → logprob: -14.00002384185791
    7. '_zero' → logprob: -14.62502384185791
    8. '2' → logprob: -14.75002384185791
    9. '_three' → logprob: -15.12502384185791
    10. 'Two' → logprob: -15.50002384185791

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011057018302381039
    2. '=' → logprob: -4.511056900024414
    3. ' ' → logprob: -12.011056900024414
    4. '   ' → logprob: -13.886056900024414
    5. '[' → logprob: -14.511056900024414
    6. ' =[' → logprob: -14.636056900024414
    7. ',' → logprob: -15.011056900024414
    8. '=[' → logprob: -15.386056900024414
    9. '  ' → logprob: -15.761056900024414
    10. ' ' → logprob: -16.261056900024414

Token 96: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6941289901733398
    2. ' [' → logprob: -0.6941289901733398
    3. 'make' → logprob: -7.44412899017334
    4. ' make' → logprob: -9.06912899017334
    5. '0' → logprob: -9.44412899017334
    6. '[length' → logprob: -9.56912899017334
    7. '[m' → logprob: -10.94412899017334
    8. '(make' → logprob: -11.19412899017334
    9. '[[' → logprob: -11.19412899017334
    10. ' ' → logprob: -11.19412899017334

Token 97: '1' (ID: 16)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.242860347032547
    2. '0' → logprob: -1.9928603172302246
    3. '(length' → logprob: -3.3678603172302246
    4. '[' → logprob: -3.8678603172302246
    5. 'length' → logprob: -3.8678603172302246
    6. ' [' → logprob: -6.367860317230225
    7. '(' → logprob: -8.117860794067383
    8. ' length' → logprob: -8.992860794067383
    9. '[size' → logprob: -9.117860794067383
    10. '1' → logprob: -9.242860794067383

Token 98: ']+' (ID: 15344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29373249411582947
    2. ']*(' → logprob: -1.6687325239181519
    3. ']' → logprob: -3.2937324047088623
    4. ')*(' → logprob: -3.6687324047088623
    5. ')]' → logprob: -6.293732643127441
    6. ' )' → logprob: -7.543732643127441
    7. '*(' → logprob: -8.418732643127441
    8. ')])' → logprob: -9.043732643127441
    9. '])' → logprob: -9.293732643127441
    10. '}' → logprob: -9.668732643127441

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007071906002238393
    2. ' [' → logprob: -7.375707149505615
    3. 'make' → logprob: -9.500707626342773
    4. ' make' → logprob: -13.875707626342773
    5. '0' → logprob: -14.250707626342773
    6. '[length' → logprob: -14.500707626342773
    7. '[len' → logprob: -14.625707626342773
    8. '[get' → logprob: -14.750707626342773
    9. 'dp' → logprob: -14.875707626342773
    10. ' ' → logprob: -14.875707626342773

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002712297427933663
    2. ' ' → logprob: -8.37527084350586
    3. '1' → logprob: -10.87527084350586
    4. '-' → logprob: -12.25027084350586
    5. '(' → logprob: -12.25027084350586
    6. ']' → logprob: -12.93777084350586
    7. 'make' → logprob: -13.87527084350586
    8. '```' → logprob: -13.87527084350586
    9. '  ' → logprob: -14.12527084350586
    10. ' (' → logprob: -14.50027084350586

Token 101: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.47527965903282166
    2. ']*(' → logprob: -0.975279688835144
    3. ']' → logprob: -6.725279808044434
    4. '*' → logprob: -14.350279808044434
    5. '](' → logprob: -14.725279808044434
    6. '*(' → logprob: -15.225279808044434
    7. ']+' → logprob: -15.975279808044434
    8. '```' → logprob: -16.100278854370117
    9. ' ]' → logprob: -16.350278854370117
    10. '(length' → logprob: -16.475278854370117

Token 102: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.009082136675715446
    2. ' length' → logprob: -4.759082317352295
    3. '(length' → logprob: -7.759082317352295
    4. '   ' → logprob: -11.134081840515137
    5. 'leng' → logprob: -12.009081840515137
    6. '(' → logprob: -12.259081840515137
    7. '	length' → logprob: -12.759081840515137
    8. 'len' → logprob: -13.134081840515137
    9. '[length' → logprob: -13.259081840515137
    10. 'ength' → logprob: -13.634081840515137

Token 103: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5725033283233643
    2. '<|end|>' → logprob: -0.9475033283233643
    3. '
' → logprob: -4.572503089904785
    4. ' ' → logprob: -4.822503089904785
    5. ')' → logprob: -4.822503089904785
    6. '    
' → logprob: -5.197503089904785
    7. ' 
' → logprob: -5.447503089904785
    8. '\n' → logprob: -5.947503089904785
    9. '  ' → logprob: -6.072503089904785
    10. '<|end|>' → logprob: -6.197503089904785

Token 105: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4887351095676422
    2. '<|end|>' → logprob: -1.7387350797653198
    3. '\n' → logprob: -3.1137351989746094
    4. ' ' → logprob: -3.4887351989746094
    5. ' 
' → logprob: -3.8637351989746094
    6. '    
' → logprob: -4.113735198974609
    7. '
' → logprob: -4.238735198974609
    8. '[' → logprob: -4.363735198974609
    9. ')' → logprob: -4.363735198974609
    10. '    ' → logprob: -4.488735198974609

Token 106: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0068469117395579815
    2. 'i' → logprob: -5.381846904754639
    3. ' _' → logprob: -6.756846904754639
    4. ' ' → logprob: -8.256847381591797
    5. ' idx' → logprob: -8.381847381591797
    6. ' c' → logprob: -8.756847381591797
    7. '_' → logprob: -9.131847381591797
    8. ' index' → logprob: -9.256847381591797
    9. ' char' → logprob: -9.631847381591797
    10. ' ' → logprob: -10.881847381591797

Token 107: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004186198115348816
    2. 'in' → logprob: -5.504186153411865
    3. ',' → logprob: -9.629186630249023
    4. ' ' → logprob: -10.379186630249023
    5. ' ,' → logprob: -12.754186630249023
    6. '	in' → logprob: -13.254186630249023
    7. '   ' → logprob: -13.504186630249023
    8. 'range' → logprob: -14.379186630249023
    9. '```' → logprob: -14.379186630249023
    10. '  ' → logprob: -14.754186630249023

Token 108: ' ch' (ID: 549)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1263229846954346
    2. 'char' → logprob: -1.2513229846954346
    3. 'ch' → logprob: -1.5013229846954346
    4. ' char' → logprob: -3.0013229846954346
    5. 'digit' → logprob: -3.1263229846954346
    6. ' c' → logprob: -3.5013229846954346
    7. ' ch' → logprob: -4.3763227462768555
    8. 'd' → logprob: -5.0013227462768555
    9. ' digit' → logprob: -5.1263227462768555
    10. 'l' → logprob: -5.6263227462768555

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007677846122533083
    2. 'in' → logprob: -4.882678031921387
    3. ' ' → logprob: -9.882678031921387
    4. ',' → logprob: -12.507678031921387
    5. 's' → logprob: -12.507678031921387
    6. '  ' → logprob: -12.757678031921387
    7. '	in' → logprob: -12.882678031921387
    8. '   ' → logprob: -13.382678031921387
    9. '```' → logprob: -13.382678031921387
    10. '    ' → logprob: -14.382678031921387

Token 110: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.4740782678127289
    2. 'enumer' → logprob: -0.9740782976150513
    3. '```' → logprob: -14.099078178405762
    4. '(en' → logprob: -16.349079132080078
    5. 'enum' → logprob: -16.349079132080078
    6. ' enumer' → logprob: -16.349079132080078
    7. ' enumeration' → logprob: -17.099079132080078
    8. ' ' → logprob: -17.099079132080078
    9. 'range' → logprob: -17.849079132080078
    10. 'en' → logprob: -17.849079132080078

Token 111: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0012364183785393834
    2. ' (' → logprob: -6.876236438751221
    3. ' L' → logprob: -9.001235961914062
    4. '(' → logprob: -9.626235961914062
    5. 'L' → logprob: -11.501235961914062
    6. ' ' → logprob: -14.126235961914062
    7. '(S' → logprob: -14.376235961914062
    8. ')' → logprob: -14.626235961914062
    9. '(range' → logprob: -14.751235961914062
    10. '(I' → logprob: -15.251235961914062

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002770286286249757
    2. ':' → logprob: -6.12777042388916
    3. ' ):' → logprob: -8.00277042388916
    4. '):
' → logprob: -8.50277042388916
    5. '   ' → logprob: -11.00277042388916
    6. ')' → logprob: -11.62777042388916
    7. ' :' → logprob: -11.75277042388916
    8. ',' → logprob: -12.00277042388916
    9. '():' → logprob: -13.00277042388916
    10. ']:' → logprob: -13.25277042388916

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31785568594932556
    2. '    ' → logprob: -2.1928555965423584
    3. ' ' → logprob: -2.6928555965423584
    4. '<|end|>' → logprob: -3.3178555965423584
    5. ':' → logprob: -4.4428558349609375
    6. '        
' → logprob: -4.5678558349609375
    7. ' 
' → logprob: -4.6928558349609375
    8. '   ' → logprob: -4.6928558349609375
    9. '        ' → logprob: -5.1928558349609375
    10. ' :' → logprob: -6.4428558349609375

Token 114: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8510960936546326
    2. '       ' → logprob: -0.9760960936546326
    3. ' dp' → logprob: -2.9760961532592773
    4. ' new' → logprob: -3.2260961532592773
    5. ' for' → logprob: -3.4760961532592773
    6. '    ' → logprob: -3.8510961532592773
    7. 'dp' → logprob: -4.101096153259277
    8. 'if' → logprob: -4.351096153259277
    9. '        ' → logprob: -4.726096153259277
    10. '   ' → logprob: -5.476096153259277

Token 115: ' Util' (ID: 13564)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1474217176437378
    2. ' new' → logprob: -1.2724217176437378
    3. '   ' → logprob: -2.6474218368530273
    4. 'if' → logprob: -2.7724218368530273
    5. ' for' → logprob: -2.8974218368530273
    6. ' next' → logprob: -2.8974218368530273
    7. '       ' → logprob: -3.3974218368530273
    8. ' dp' → logprob: -3.3974218368530273
    9. 'new' → logprob: -3.7724218368530273
    10. 'for' → logprob: -3.8974218368530273

Token 116: 'isation' (ID: 6993)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.5941023230552673
    2. 's' → logprob: -1.344102382659912
    3. 'iser' → logprob: -2.219102382659912
    4. 'se' → logprob: -3.469102382659912
    5. 'isateur' → logprob: -4.719102382659912
    6. '#' → logprob: -4.844102382659912
    7. 'er' → logprob: -5.469102382659912
    8. 'isation' → logprob: -5.844102382659912
    9. 'sage' → logprob: -5.969102382659912
    10. '```' → logprob: -5.969102382659912

Token 117: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8591112494468689
    2. '   ' → logprob: -1.2341113090515137
    3. ' d' → logprob: -2.4841113090515137
    4. ' dp' → logprob: -2.8591113090515137
    5. '       ' → logprob: -3.2341113090515137
    6. '    ' → logprob: -3.7341113090515137
    7. ' des' → logprob: -3.9841113090515137
    8. 'dp' → logprob: -4.234111309051514
    9. ' du' → logprob: -4.359111309051514
    10. 'd' → logprob: -4.609111309051514

Token 118: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3168005645275116
    2. 'p' → logprob: -1.816800594329834
    3. ''un' → logprob: -3.316800594329834
    4. ''une' → logprob: -3.691800594329834
    5. ''' → logprob: -3.816800594329834
    6. ''e' → logprob: -5.941800594329834
    7. 'f' → logprob: -6.066800594329834
    8. 'enumer' → logprob: -6.066800594329834
    9. 'une' → logprob: -6.816800594329834
    10. 'dp' → logprob: -6.816800594329834

Token 119: ' structure' (ID: 8866)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0393458604812622
    2. 'lambda' → logprob: -1.9143458604812622
    3. ' for' → logprob: -2.1643457412719727
    4. 'for' → logprob: -2.4143457412719727
    5. ' lambda' → logprob: -3.5393457412719727
    6. 'tmp' → logprob: -3.5393457412719727
    7. 'sum' → logprob: -3.6643457412719727
    8. ' range' → logprob: -3.6643457412719727
    9. 'if' → logprob: -3.7893457412719727
    10. ' if' → logprob: -4.039345741271973

Token 120: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7046767473220825
    2. 'de' → logprob: -2.204676628112793
    3. 'deque' → logprob: -2.329676628112793
    4. ' if' → logprob: -2.579676628112793
    5. 'if' → logprob: -2.579676628112793
    6. ' deque' → logprob: -3.204676628112793
    7. ' condition' → logprob: -3.579676628112793
    8. ' data' → logprob: -4.079676628112793
    9. 'data' → logprob: -4.579676628112793
    10. '   ' → logprob: -4.704676628112793

Token 121: ' contrôle' (ID: 57360)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2757614850997925
    2. ' données' → logprob: -2.150761604309082
    3. 'don' → logprob: -2.775761604309082
    4. 'contr' → logprob: -4.025761604309082
    5. 'data' → logprob: -5.025761604309082
    6. 'controle' → logprob: -5.275761604309082
    7. 'dict' → logprob: -5.275761604309082
    8. 'if' → logprob: -5.525761604309082
    9. 'condition' → logprob: -5.900761604309082
    10. 'for' → logprob: -5.900761604309082

Token 122: ' ter' (ID: 3069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03976050019264221
    2. 'if' → logprob: -3.5397605895996094
    3. '   ' → logprob: -5.414760589599609
    4. '       ' → logprob: -5.414760589599609
    5. ' for' → logprob: -8.41476058959961
    6. '```' → logprob: -8.41476058959961
    7. ':' → logprob: -8.53976058959961
    8. ' continue' → logprob: -9.41476058959961
    9. ' s' → logprob: -9.53976058959961
    10. ' de' → logprob: -10.03976058959961

Token 123: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.00018792471382766962
    2. 'n' → logprob: -8.875187873840332
    3. 'na' → logprob: -10.625187873840332
    4. 'naires' → logprob: -12.000187873840332
    5. '```' → logprob: -12.125187873840332
    6. 'ner' → logprob: -12.875187873840332
    7. '

' → logprob: -13.250187873840332
    8. '``' → logprob: -13.625187873840332
    9. 'inaire' → logprob: -13.750187873840332
    10. 'nable' → logprob: -14.375187873840332

Token 124: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0288062896579504
    2. ':' → logprob: -4.778806209564209
    3. '
' → logprob: -4.778806209564209
    4. ':
' → logprob: -5.278806209564209
    5. '        
' → logprob: -6.153806209564209
    6. ' if' → logprob: -6.778806209564209
    7. '<|end|>' → logprob: -7.278806209564209
    8. ',' → logprob: -7.403806209564209
    9. ' :
' → logprob: -7.903806209564209
    10. ' :' → logprob: -8.278806686401367

Token 125: ' une' (ID: 2463)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9140855669975281
    2. 'dp' → logprob: -1.2890856266021729
    3. ' la' → logprob: -1.4140856266021729
    4. ' le' → logprob: -3.664085626602173
    5. ' range' → logprob: -3.664085626602173
    6. 'range' → logprob: -4.414085388183594
    7. ' une' → logprob: -4.914085388183594
    8. ' l' → logprob: -6.289085388183594
    9. ' les' → logprob: -6.664085388183594
    10. '   ' → logprob: -6.914085388183594

Token 126: ' expression' (ID: 12973)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6346945762634277
    2. 'range' → logprob: -1.8846945762634277
    3. 'dp' → logprob: -2.0096945762634277
    4. ' for' → logprob: -2.7596945762634277
    5. 'if' → logprob: -3.2596945762634277
    6. 'single' → logprob: -3.2596945762634277
    7. ' single' → logprob: -4.759694576263428
    8. ' range' → logprob: -5.134694576263428
    9. ' if' → logprob: -5.134694576263428
    10. 'line' → logprob: -5.759694576263428

Token 127: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004789191763848066
    2. '
' → logprob: -6.129789352416992
    3. 'dp' → logprob: -7.504789352416992
    4. ':' → logprob: -7.879789352416992
    5. ' dp' → logprob: -7.879789352416992
    6. '        
' → logprob: -8.254789352416992
    7. ' if' → logprob: -8.504789352416992
    8. '           ' → logprob: -9.004789352416992
    9. ':
' → logprob: -9.129789352416992
    10. '   ' → logprob: -9.129789352416992

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004495158325880766
    2. ':' → logprob: -6.004495143890381
    3. ' if' → logprob: -7.879495143890381
    4. '        
' → logprob: -8.004495620727539
    5. '
' → logprob: -8.254495620727539
    6. ':
' → logprob: -8.379495620727539
    7. ',' → logprob: -9.254495620727539
    8. '<|end|>' → logprob: -9.379495620727539
    9. '```' → logprob: -9.504495620727539
    10. '[' → logprob: -9.629495620727539

Token 129: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5704756379127502
    2. ' dp' → logprob: -1.1954755783081055
    3. '       ' → logprob: -2.6954755783081055
    4. ' new' → logprob: -4.6954755783081055
    5. ' if' → logprob: -5.3204755783081055
    6. 'count' → logprob: -5.3204755783081055
    7. 'new' → logprob: -5.3204755783081055
    8. '   ' → logprob: -5.3204755783081055
    9. ' value' → logprob: -5.3204755783081055
    10. 'if' (adapté à ' if') → logprob: -5.4454755783081055

Token 130: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.004351790528744459
    2. 'ch' → logprob: -5.879351615905762
    3. ' dp' → logprob: -7.254351615905762
    4. ' (' → logprob: -8.254351615905762
    5. '(ch' → logprob: -8.504351615905762
    6. ' ' → logprob: -9.504351615905762
    7. ' ord' → logprob: -9.629351615905762
    8. ' not' → logprob: -10.129351615905762
    9. ' len' → logprob: -10.254351615905762
    10. '   ' → logprob: -10.691851615905762

Token 131: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.39961615204811096
    2. '==' → logprob: -1.1496161222457886
    3. '=='' → logprob: -4.899616241455078
    4. ' in' → logprob: -5.524616241455078
    5. '=="' → logprob: -7.524616241455078
    6. 'is' → logprob: -9.149616241455078
    7. '!=' → logprob: -9.274616241455078
    8. ' !=' → logprob: -9.274616241455078
    9. '.is' → logprob: -9.399616241455078
    10. 'in' → logprob: -9.774616241455078

Token 132: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.050156161189079285
    2. ''a' → logprob: -4.175156116485596
    3. '"' → logprob: -4.425156116485596
    4. ' '' → logprob: -4.550156116485596
    5. ''A' → logprob: -5.050156116485596
    6. ''O' → logprob: -7.050156116485596
    7. ' '('' → logprob: -7.800156116485596
    8. ''o' → logprob: -7.800156116485596
    9. ''C' → logprob: -8.050156593322754
    10. ''*' → logprob: -8.300156593322754

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.060148000717163
    2. '1' → logprob: -1.560148000717163
    3. '('' → logprob: -1.560148000717163
    4. '?' → logprob: -2.185148000717163
    5. 'a' → logprob: -3.060148000717163
    6. '(':' → logprob: -3.935148000717163
    7. 'A' → logprob: -4.685148239135742
    8. '('?' → logprob: -4.810148239135742
    9. '7' → logprob: -5.810148239135742
    10. '#' → logprob: -5.935148239135742

Token 134: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.293204128742218
    2. '':
' → logprob: -1.4182040691375732
    3. ''' → logprob: -4.793204307556152
    4. ':' → logprob: -5.793204307556152
    5. ':
' → logprob: -7.793204307556152
    6. '':
' → logprob: -9.043204307556152
    7. '':

' → logprob: -10.043204307556152
    8. ''or' → logprob: -10.918204307556152
    9. ' or' → logprob: -11.418204307556152
    10. '):
' → logprob: -12.168204307556152

Token 135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13305403292179108
    2. ':
' → logprob: -2.63305401802063
    3. ':' → logprob: -3.25805401802063
    4. '       ' → logprob: -4.508054256439209
    5. '
' → logprob: -6.383054256439209
    6. ',' → logprob: -7.758054256439209
    7. '0' → logprob: -8.75805377960205
    8. ' :
' → logprob: -9.25805377960205
    9. '```' → logprob: -9.38305377960205
    10. '):
' → logprob: -9.38305377960205

Token 136: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.7243068814277649
    2. ' dp' → logprob: -0.9743068814277649
    3. '           ' → logprob: -2.09930682182312
    4. '       ' → logprob: -4.474307060241699
    5. ' for' → logprob: -6.599307060241699
    6. 'for' → logprob: -7.349307060241699
    7. '
' → logprob: -7.599307060241699
    8. '	dp' → logprob: -8.3493070602417
    9. '   ' → logprob: -8.5993070602417
    10. 'continue' → logprob: -8.8493070602417

Token 137: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.4740946590900421
    2. '_two' → logprob: -0.9740946292877197
    3. 'two' → logprob: -12.22409439086914
    4. '_zero' → logprob: -12.47409439086914
    5. '_three' → logprob: -12.59909439086914
    6. 'one' → logprob: -13.22409439086914
    7. '_tw' → logprob: -13.47409439086914
    8. '_ONE' → logprob: -15.09909439086914
    9. 'One' → logprob: -15.22409439086914
    10. '_t' → logprob: -15.34909439086914

Token 138: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.004772818647325039
    2. '[' → logprob: -5.504772663116455
    3. ' =' → logprob: -8.254773139953613
    4. ' [' → logprob: -8.754773139953613
    5. ',' → logprob: -9.504773139953613
    6. '[length' → logprob: -10.004773139953613
    7. '[next' → logprob: -10.379773139953613
    8. '=' → logprob: -10.629773139953613
    9. '[len' → logprob: -10.754773139953613
    10. '[index' → logprob: -11.004773139953613

Token 139: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15372082591056824
    2. ']' → logprob: -2.0287208557128906
    3. ' +' → logprob: -4.528720855712891
    4. '   ' → logprob: -9.27872085571289
    5. ' ]' → logprob: -9.77872085571289
    6. '1' → logprob: -11.27872085571289
    7. ']+' → logprob: -11.65372085571289
    8. '+]' → logprob: -11.77872085571289
    9. ']=' → logprob: -12.65372085571289
    10. ']+=' → logprob: -13.02872085571289

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.500012397766113
    3. '0' → logprob: -13.500012397766113
    4. '2' → logprob: -14.375012397766113
    5. '   ' → logprob: -15.125012397766113
    6. '```' → logprob: -15.875012397766113
    7. ']' → logprob: -16.31251335144043
    8. '`' → logprob: -17.00001335144043
    9. '
' → logprob: -17.31251335144043
    10. ')' → logprob: -17.81251335144043

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015461481176316738
    2. ' ]' → logprob: -4.640461444854736
    3. ']=' → logprob: -6.015461444854736
    4. ' =' → logprob: -6.265461444854736
    5. '=' → logprob: -6.765461444854736
    6. ']+=' → logprob: -9.015461921691895
    7. ' +=' → logprob: -10.515461921691895
    8. ' ' → logprob: -11.265461921691895
    9. '+=' → logprob: -11.640461921691895
    10. ',' → logprob: -12.015461921691895

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2527841627597809
    2. ' =' → logprob: -1.5027841329574585
    3. '+=' → logprob: -7.502784252166748
    4. ' +=' → logprob: -8.12778377532959
    5. ',' → logprob: -12.25278377532959
    6. ' ' → logprob: -13.50278377532959
    7. '=int' → logprob: -15.62778377532959
    8. '%=' → logprob: -15.62778377532959
    9. '=

' → logprob: -15.75278377532959
    10. ']' → logprob: -16.002784729003906

Token 143: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.546215832233429
    2. '0' → logprob: -0.921215832233429
    3. '(dp' → logprob: -4.296216011047363
    4. '(' → logprob: -4.921216011047363
    5. ' dp' → logprob: -7.171216011047363
    6. '1' → logprob: -7.296216011047363
    7. ' ' → logprob: -8.296216011047363
    8. ' (' → logprob: -9.546216011047363
    9. '   ' → logprob: -9.671216011047363
    10. '	dp' → logprob: -11.421216011047363

Token 144: '3' (ID: 18)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.471262663602829
    2. '0' → logprob: -1.2212626934051514
    3. '(dp' → logprob: -2.8462626934051514
    4. '(' → logprob: -3.8462626934051514
    5. '1' → logprob: -6.596262454986572
    6. ' dp' → logprob: -10.34626293182373
    7. '((' → logprob: -11.22126293182373
    8. ' ' → logprob: -11.34626293182373
    9. '(d' → logprob: -11.47126293182373
    10. '2' → logprob: -11.90876293182373

Token 145: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4738866984844208
    2. ' if' → logprob: -1.8488867282867432
    3. ' *' → logprob: -2.223886728286743
    4. '*' → logprob: -3.223886728286743
    5. 'else' → logprob: -3.723886728286743
    6. '       ' → logprob: -4.723886489868164
    7. ' else' → logprob: -4.848886489868164
    8. 'if' → logprob: -4.848886489868164
    9. '   ' → logprob: -5.598886489868164
    10. '0' → logprob: -5.598886489868164

Token 146: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0062932646833360195
    2. '(dp' → logprob: -5.506293296813965
    3. ' dp' → logprob: -6.131293296813965
    4. '(' → logprob: -11.006293296813965
    5. ' (' → logprob: -11.131293296813965
    6. '	dp' → logprob: -13.256293296813965
    7. '(d' → logprob: -13.881293296813965
    8. '((' → logprob: -14.256293296813965
    9. ' ' → logprob: -14.381293296813965
    10. '   ' → logprob: -14.631293296813965

Token 147: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.25200748443603516
    2. '_two' → logprob: -1.5020074844360352
    3. 'one' → logprob: -10.252007484436035
    4. 'two' → logprob: -10.627007484436035
    5. '1' → logprob: -13.127007484436035
    6. '_three' → logprob: -13.502007484436035
    7. ' one' → logprob: -13.627007484436035
    8. '   ' → logprob: -13.627007484436035
    9. 'One' → logprob: -13.627007484436035
    10. '2' → logprob: -13.627007484436035

Token 148: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.666993507067673e-05
    2. 'idx' → logprob: -11.125036239624023
    3. ' idx' → logprob: -11.500036239624023
    4. ' [' → logprob: -12.125036239624023
    5. '[' → logprob: -12.500036239624023
    6. '[id' → logprob: -15.000036239624023
    7. '_idx' → logprob: -15.125036239624023
    8. '[i' → logprob: -15.250036239624023
    9. '	idx' → logprob: -15.250036239624023
    10. '(idx' → logprob: -15.500036239624023

Token 149: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017497921362519264
    2. ']%' → logprob: -6.5017499923706055
    3. ' ]' → logprob: -9.001749992370605
    4. ']+' → logprob: -9.876749992370605
    5. '+' → logprob: -10.626749992370605
    6. ')' → logprob: -11.626749992370605
    7. '%' → logprob: -11.751749992370605
    8. ']
' → logprob: -12.001749992370605
    9. '```' → logprob: -12.251749992370605
    10. ' ' → logprob: -12.376749992370605

Token 150: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6193313002586365
    2. '+' → logprob: -1.6193313598632812
    3. 'else' → logprob: -2.3693313598632812
    4. ' %' → logprob: -2.8693313598632812
    5. '
' → logprob: -3.4943313598632812
    6. '       ' → logprob: -3.4943313598632812
    7. ' else' → logprob: -3.7443313598632812
    8. ' +' → logprob: -4.619331359863281
    9. ' if' → logprob: -4.869331359863281
    10. '<|end|>' → logprob: -5.369331359863281

Token 151: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.4225052297115326
    2. '
' → logprob: -2.2975051403045654
    3. 'else' → logprob: -2.6725051403045654
    4. '+' → logprob: -2.7975051403045654
    5. '       ' → logprob: -2.7975051403045654
    6. ' dp' → logprob: -3.7975051403045654
    7. '%' → logprob: -4.7975053787231445
    8. ' else' → logprob: -5.0475053787231445
    9. '           ' → logprob: -5.6725053787231445
    10. '+
' → logprob: -5.7975053787231445

Token 152: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -5.200166469876422e-06
    2. 'two' → logprob: -12.500004768371582
    3. '_one' → logprob: -13.500004768371582
    4. 'Two' → logprob: -18.0000057220459
    5. '_TWO' → logprob: -18.0000057220459
    6. '_three' → logprob: -18.3750057220459
    7. ' two' → logprob: -19.2500057220459
    8. '_tw' → logprob: -19.5000057220459
    9. '_t' → logprob: -20.8750057220459
    10. '```' → logprob: -21.1250057220459

Token 153: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.8921695047756657e-05
    2. ' [' → logprob: -11.375028610229492
    3. 'idx' → logprob: -11.625028610229492
    4. '[' → logprob: -12.500028610229492
    5. ' idx' → logprob: -13.000028610229492
    6. '	idx' → logprob: -14.750028610229492
    7. '   ' → logprob: -15.000028610229492
    8. '```' → logprob: -15.125028610229492
    9. '][' → logprob: -15.750028610229492
    10. '=' → logprob: -15.750028610229492

Token 154: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.034022774547338486
    2. ']' → logprob: -3.409022808074951
    3. ']+' → logprob: -8.534022331237793
    4. ' +' → logprob: -8.784022331237793
    5. '1' → logprob: -11.534022331237793
    6. ' ]' → logprob: -12.159022331237793
    7. ']+=' → logprob: -12.409022331237793
    8. '+]' → logprob: -12.909022331237793
    9. '   ' → logprob: -13.784022331237793
    10. '[' → logprob: -14.409022331237793

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013500562636181712
    2. '0' → logprob: -9.12513542175293
    3. ' ' → logprob: -11.12513542175293
    4. '2' → logprob: -12.50013542175293
    5. '   ' → logprob: -13.37513542175293
    6. '```' → logprob: -14.18763542175293
    7. '+' → logprob: -14.31263542175293
    8. '11' → logprob: -14.75013542175293
    9. ']' → logprob: -15.06263542175293
    10. '-' → logprob: -15.37513542175293

Token 156: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008077966049313545
    2. '=' → logprob: -5.008078098297119
    3. ']=' → logprob: -7.383078098297119
    4. ' =' → logprob: -7.758078098297119
    5. ' ]' → logprob: -8.133077621459961
    6. '   ' → logprob: -11.883077621459961
    7. ')' → logprob: -12.008077621459961
    8. ' ' → logprob: -13.258077621459961
    9. ']+=' → logprob: -14.008077621459961
    10. '    ' → logprob: -14.633077621459961

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889308780431747
    2. ' =' → logprob: -2.5788931846618652
    3. '+=' → logprob: -13.328892707824707
    4. ' +=' → logprob: -14.578892707824707
    5. ')' → logprob: -14.703892707824707
    6. ']' → logprob: -14.953892707824707
    7. ' ' → logprob: -15.078892707824707
    8. ']=' → logprob: -16.453893661499023
    9. ')=' → logprob: -16.953893661499023
    10. ',' → logprob: -17.578893661499023

Token 158: ' dp' (ID: 21546)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.812175452709198
    2. '(' → logprob: -1.0621755123138428
    3. 'dp' → logprob: -2.3121755123138428
    4. ' ' → logprob: -3.4371755123138428
    5. '(dp' → logprob: -3.4371755123138428
    6. '0' → logprob: -3.9371755123138428
    7. ' dp' → logprob: -4.187175273895264
    8. ' (' → logprob: -4.937175273895264
    9. '2' → logprob: -5.687175273895264
    10. '1' → logprob: -7.437175273895264

Token 159: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0015074820257723331
    2. 'two' → logprob: -6.50150728225708
    3. '_one' → logprob: -12.501507759094238
    4. '_TWO' → logprob: -14.376507759094238
    5. 'Two' → logprob: -14.626507759094238
    6. ' two' → logprob: -16.376506805419922
    7. '2' → logprob: -16.626506805419922
    8. '(two' → logprob: -16.751506805419922
    9. '_three' → logprob: -16.876506805419922
    10. '.two' → logprob: -17.376506805419922

Token 160: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.25000286102295
    3. 'idx' → logprob: -14.25000286102295
    4. ' idx' → logprob: -14.87500286102295
    5. ' [' → logprob: -15.62500286102295
    6. '[id' → logprob: -16.625003814697266
    7. '[index' → logprob: -17.250003814697266
    8. '[i' → logprob: -17.500003814697266
    9. '(idx' → logprob: -17.625003814697266
    10. '[ind' → logprob: -18.250003814697266

Token 161: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006843953393399715
    2. ' ]' → logprob: -5.6318440437316895
    3. ']*' → logprob: -6.0068440437316895
    4. ']+' → logprob: -8.006843566894531
    5. '<|end|>' → logprob: -8.756843566894531
    6. '+' → logprob: -9.631843566894531
    7. ']
' → logprob: -9.881843566894531
    8. ')' → logprob: -10.256843566894531
    9. ']%' → logprob: -10.381843566894531
    10. '   ' → logprob: -10.756843566894531

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1865040361881256
    2. ' else' → logprob: -2.3115041255950928
    3. 'else' → logprob: -3.3115041255950928
    4. '<|end|>' → logprob: -3.4365041255950928
    5. '
' → logprob: -6.811503887176514
    6. '<|end|>' → logprob: -8.186504364013672
    7. 'elif' → logprob: -8.561504364013672
    8. '   ' → logprob: -8.686504364013672
    9. ' elif' → logprob: -8.811504364013672
    10. ')' → logprob: -9.061504364013672

Token 163: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.11499225348234177
    2. 'else' (adapté à ' else') → logprob: -2.239992141723633
    3. '       ' → logprob: -6.489992141723633
    4. '	else' → logprob: -8.614992141723633
    5. 'elif' → logprob: -9.114992141723633
    6. '   ' → logprob: -9.114992141723633
    7. ' elif' → logprob: -9.239992141723633
    8. '<|end|>' → logprob: -9.239992141723633
    9. '
' → logprob: -10.239992141723633
    10. '	elif' → logprob: -12.989992141723633

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6663196086883545
    2. ':
' → logprob: -0.7913196086883545
    3. '           ' → logprob: -3.5413196086883545
    4. ' :
' → logprob: -6.041319847106934
    5. '       ' → logprob: -7.041319847106934
    6. ' :' → logprob: -7.416319847106934
    7. '```' → logprob: -9.416319847106934
    8. '[' → logprob: -9.541319847106934
    9. '   ' → logprob: -10.166319847106934
    10. '          ' → logprob: -10.916319847106934

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06580450385808945
    2. ' dp' → logprob: -3.0658044815063477
    3. 'dp' → logprob: -4.315804481506348
    4. '       ' → logprob: -5.940804481506348
    5. '```' → logprob: -7.690804481506348
    6. '   ' → logprob: -8.565804481506348
    7. ' ' → logprob: -9.690804481506348
    8. '          ' → logprob: -9.690804481506348
    9. '	dp' → logprob: -9.940804481506348
    10. '
' → logprob: -9.940804481506348

Token 166: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05629025772213936
    2. ' dp' → logprob: -2.9312901496887207
    3. '           ' → logprob: -6.681290149688721
    4. '   ' → logprob: -9.681290626525879
    5. '       ' → logprob: -9.806290626525879
    6. '```' → logprob: -11.681290626525879
    7. ' ' → logprob: -11.931290626525879
    8. '3' → logprob: -12.181290626525879
    9. '	dp' → logprob: -12.306290626525879
    10. '
' → logprob: -12.556290626525879

Token 167: ' Style' (ID: 17602)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009163285605609417
    2. ' dp' → logprob: -4.7591633796691895
    3. '           ' → logprob: -7.7591633796691895
    4. '   ' → logprob: -9.634162902832031
    5. '       ' → logprob: -10.134162902832031
    6. ' ' → logprob: -12.259162902832031
    7. '               ' → logprob: -13.259162902832031
    8. '```' → logprob: -13.509162902832031
    9. '
' → logprob: -13.634162902832031
    10. 'if' → logprob: -13.634162902832031

Token 168: ' fonction' (ID: 17610)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.13619191944599152
    2. 'dp' → logprob: -2.5111918449401855
    3. '           ' → logprob: -4.3861918449401855
    4. '   ' → logprob: -4.6361918449401855
    5. ':
' → logprob: -4.7611918449401855
    6. ':' → logprob: -5.3861918449401855
    7. ' if' → logprob: -5.3861918449401855
    8. 'if' → logprob: -7.1361918449401855
    9. '       ' → logprob: -7.1361918449401855
    10. '               ' → logprob: -7.3861918449401855

Token 169: 'nel' (ID: 10085)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5191632509231567
    2. '           ' → logprob: -1.7691632509231567
    3. 'al' → logprob: -1.7691632509231567
    4. 'dp' → logprob: -2.394163131713867
    5. '_call' → logprob: -2.644163131713867
    6. '=' → logprob: -3.019163131713867
    7. '=lambda' → logprob: -3.394163131713867
    8. ' dp' → logprob: -3.769163131713867
    9. ' call' → logprob: -4.019163131713867
    10. 'call' → logprob: -4.144163131713867

Token 170: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10893429815769196
    2. ' dp' → logprob: -2.6089344024658203
    3. 'dp' → logprob: -3.7339344024658203
    4. '(dp' → logprob: -6.60893440246582
    5. '       ' → logprob: -7.23393440246582
    6. '
' → logprob: -7.35893440246582
    7. '               ' → logprob: -7.73393440246582
    8. ' =' → logprob: -7.85893440246582
    9. ':
' → logprob: -8.23393440246582
    10. ':' → logprob: -8.48393440246582

Token 171: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3913474977016449
    2. ' dp' → logprob: -1.1413475275039673
    3. '(dp' → logprob: -6.891347408294678
    4. '   ' → logprob: -7.516347408294678
    5. 'for' → logprob: -7.516347408294678
    6. ' for' → logprob: -7.891347408294678
    7. '#' → logprob: -8.516347885131836
    8. '
' → logprob: -8.891347885131836
    9. ' (' → logprob: -8.891347885131836
    10. 'lambda' → logprob: -9.016347885131836

Token 172: ''aff' (ID: 53397)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2987310588359833
    2. 'e' → logprob: -2.2987310886383057
    3. 'ambda' → logprob: -3.2987310886383057
    4. 'a' → logprob: -3.7987310886383057
    5. 'es' → logprob: -4.048730850219727
    6. 'update' → logprob: -4.923730850219727
    7. ''' → logprob: -4.923730850219727
    8. ' dp' → logprob: -5.048730850219727
    9. 'ist' → logprob: -5.298730850219727
    10. 'apply' → logprob: -5.423730850219727

Token 173: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00521182082593441
    2. 'erm' → logprob: -6.75521183013916
    3. 'ichage' → logprob: -7.00521183013916
    4. 'ection' → logprob: -7.25521183013916
    5. 'er' → logprob: -7.25521183013916
    6. '#' → logprob: -7.63021183013916
    7. 'iner' → logprob: -8.38021183013916
    8. 'ecta' → logprob: -8.63021183013916
    9. 'ec' → logprob: -8.88021183013916
    10. 'inement' → logprob: -8.88021183013916

Token 174: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7848357558250427
    2. 'ect' → logprob: -1.1598358154296875
    3. 'ation' → logprob: -1.9098358154296875
    4. 'dp' → logprob: -2.9098358154296875
    5. 'ection' → logprob: -4.7848358154296875
    6. 'erm' → logprob: -5.2848358154296875
    7. '   ' → logprob: -5.2848358154296875
    8. 'ction' → logprob: -7.0348358154296875
    9. 'uation' → logprob: -7.0348358154296875
    10. 'n' → logprob: -7.1598358154296875

Token 175: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26656103134155273
    2. ' dp' → logprob: -2.1415610313415527
    3. 'dp' → logprob: -2.5165610313415527
    4. '(dp' → logprob: -3.8915610313415527
    5. ' =' → logprob: -5.891561031341553
    6. '[' → logprob: -6.016561031341553
    7. '
' → logprob: -6.391561031341553
    8. ':
' → logprob: -6.641561031341553
    9. '```' → logprob: -6.641561031341553
    10. '=' → logprob: -7.016561031341553

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30105796456336975
    2. ' dp' → logprob: -2.051058053970337
    3. 'dp' → logprob: -2.051058053970337
    4. '```' → logprob: -6.676057815551758
    5. '[' → logprob: -7.926057815551758
    6. '(dp' → logprob: -8.176057815551758
    7. '       ' → logprob: -8.801057815551758
    8. '               ' → logprob: -8.926057815551758
    9. ',' → logprob: -9.176057815551758
    10. ' =' → logprob: -9.426057815551758

Token 177: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.7014671564102173
    2. ' dp' → logprob: -0.7014671564102173
    3. '           ' → logprob: -4.826467037200928
    4. '   ' → logprob: -9.201467514038086
    5. '               ' → logprob: -10.201467514038086
    6. '       ' → logprob: -10.576467514038086
    7. ' ' → logprob: -10.701467514038086
    8. '
' → logprob: -10.951467514038086
    9. '```' → logprob: -10.951467514038086
    10. '	dp' → logprob: -11.076467514038086

Token 178: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.00011212585377506912
    2. '_two' → logprob: -9.125112533569336
    3. 'one' → logprob: -12.750112533569336
    4. '_ONE' → logprob: -16.625112533569336
    5. 'One' → logprob: -16.875112533569336
    6. '_three' → logprob: -17.000112533569336
    7. '_on' → logprob: -17.375112533569336
    8. '1' → logprob: -17.750112533569336
    9. ' one' → logprob: -17.875112533569336
    10. '_once' → logprob: -18.500112533569336

Token 179: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.049755782238208e-05
    2. ' [' → logprob: -10.87505054473877
    3. '[' → logprob: -11.75005054473877
    4. ' idx' → logprob: -12.25005054473877
    5. ' =' → logprob: -12.37505054473877
    6. 'idx' → logprob: -12.37505054473877
    7. '   ' → logprob: -12.87505054473877
    8. '=' → logprob: -13.62505054473877
    9. '.append' → logprob: -13.75005054473877
    10. '```' → logprob: -14.12505054473877

Token 180: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12839092314243317
    2. ']' → logprob: -2.1283910274505615
    3. ']+' → logprob: -6.753390789031982
    4. ' +' → logprob: -8.50339126586914
    5. '   ' → logprob: -9.50339126586914
    6. '       ' → logprob: -12.00339126586914
    7. '+]' → logprob: -12.50339126586914
    8. ' ]' → logprob: -12.87839126586914
    9. '1' → logprob: -13.50339126586914
    10. ']+=' → logprob: -13.87839126586914

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.980854959692806e-05
    2. ' ' → logprob: -9.875069618225098
    3. '2' → logprob: -11.875069618225098
    4. '   ' → logprob: -12.000069618225098
    5. '0' → logprob: -14.187569618225098
    6. '```' → logprob: -14.312569618225098
    7. '       ' → logprob: -14.625069618225098
    8. '
' → logprob: -14.750069618225098
    9. '           ' → logprob: -14.937569618225098
    10. '    ' → logprob: -15.500069618225098

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19072651863098145
    2. '=' → logprob: -2.3157265186309814
    3. ' =' → logprob: -2.8157265186309814
    4. ' ]' → logprob: -4.690726280212402
    5. ']=' → logprob: -5.690726280212402
    6. ',' → logprob: -6.315726280212402
    7. ' ' → logprob: -7.940726280212402
    8. ' ,' → logprob: -8.815726280212402
    9. '],' → logprob: -9.315726280212402
    10. ')' → logprob: -10.190726280212402

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18073265254497528
    2. '=' → logprob: -1.8057326078414917
    3. ',' → logprob: -7.055732727050781
    4. ' ,' → logprob: -10.055732727050781
    5. ' ' → logprob: -10.305732727050781
    6. ' +=' → logprob: -10.305732727050781
    7. ']' → logprob: -12.055732727050781
    8. ')' → logprob: -12.555732727050781
    9. '+=' → logprob: -12.805732727050781
    10. '```' → logprob: -14.305732727050781

Token 184: ' dp' (ID: 21546)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20570401847362518
    2. ' (' → logprob: -2.7057039737701416
    3. '(dp' → logprob: -2.7057039737701416
    4. '3' → logprob: -3.3307039737701416
    5. 'dp' → logprob: -4.830704212188721
    6. ' ' → logprob: -5.080704212188721
    7. ' dp' → logprob: -7.205704212188721
    8. '(mod' → logprob: -7.580704212188721
    9. '2' → logprob: -8.705703735351562
    10. '7' → logprob: -9.080703735351562

Token 185: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.002491945633664727
    2. '_two' → logprob: -6.0024919509887695
    3. 'one' → logprob: -11.37749195098877
    4. 'One' → logprob: -13.25249195098877
    5. '1' → logprob: -13.75249195098877
    6. '+' → logprob: -14.12749195098877
    7. 'two' → logprob: -14.75249195098877
    8. '_ONE' → logprob: -15.50249195098877
    9. '[idx' → logprob: -15.75249195098877
    10. '2' → logprob: -16.377490997314453

Token 186: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.1637164789135568e-05
    2. 'idx' → logprob: -12.000011444091797
    3. ' idx' → logprob: -12.625011444091797
    4. '[' → logprob: -13.375011444091797
    5. '[i' → logprob: -15.875011444091797
    6. '(idx' → logprob: -16.125011444091797
    7. '	idx' → logprob: -16.625011444091797
    8. ']' → logprob: -16.875011444091797
    9. '```' → logprob: -17.125011444091797
    10. ' [' → logprob: -17.375011444091797

Token 187: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01093639712780714
    2. ']+' → logprob: -4.635936260223389
    3. '+' → logprob: -6.885936260223389
    4. ' +' → logprob: -9.760936737060547
    5. ']*' → logprob: -10.010936737060547
    6. ' ]' → logprob: -10.635936737060547
    7. '*' → logprob: -10.885936737060547
    8. '```' → logprob: -13.010936737060547
    9. '1' → logprob: -13.260936737060547
    10. ']
' → logprob: -13.635936737060547

Token 188: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4101918041706085
    2. '3' → logprob: -1.2851917743682861
    3. '4' → logprob: -3.410191774368286
    4. '6' → logprob: -4.035192012786865
    5. '7' → logprob: -5.535192012786865
    6. '10' → logprob: -6.035192012786865
    7. '5' → logprob: -6.410192012786865
    8. ' ' → logprob: -7.535192012786865
    9. '9' → logprob: -8.035191535949707
    10. '8' → logprob: -9.160191535949707

Token 189: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31336838006973267
    2. '+' → logprob: -1.313368320465088
    3. '%' → logprob: -10.313368797302246
    4. ' %' → logprob: -10.938368797302246
    5. ' ' → logprob: -11.438368797302246
    6. '+
' → logprob: -11.438368797302246
    7. '
' → logprob: -11.688368797302246
    8. ' +
' → logprob: -11.688368797302246
    9. '   ' → logprob: -12.063368797302246
    10. '```' → logprob: -13.313368797302246

Token 190: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18289637565612793
    2. ' dp' → logprob: -1.807896375656128
    3. '2' → logprob: -6.557896614074707
    4. '1' → logprob: -7.307896614074707
    5. '3' → logprob: -7.682896614074707
    6. ' ' → logprob: -8.057896614074707
    7. '   ' → logprob: -9.432896614074707
    8. '4' → logprob: -10.057896614074707
    9. '(dp' → logprob: -10.057896614074707
    10. ' (' → logprob: -10.557896614074707

Token 191: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -2.5776860184123507e-06
    2. 'two' → logprob: -13.00000286102295
    3. '_one' → logprob: -15.62500286102295
    4. '_TWO' → logprob: -17.500001907348633
    5. '_three' → logprob: -17.750001907348633
    6. '_tw' → logprob: -19.125001907348633
    7. 'Two' → logprob: -19.750001907348633
    8. '2' → logprob: -20.625001907348633
    9. ' two' → logprob: -21.250001907348633
    10. '_t' → logprob: -21.875001907348633

Token 192: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.7120533811976202e-05
    2. 'idx' → logprob: -11.125017166137695
    3. '[' → logprob: -13.750017166137695
    4. ' idx' → logprob: -14.125017166137695
    5. ' [' → logprob: -15.750017166137695
    6. '```' → logprob: -15.875017166137695
    7. '	idx' → logprob: -16.500017166137695
    8. '_idx' → logprob: -17.375017166137695
    9. '(idx' → logprob: -17.625017166137695
    10. '1' → logprob: -18.250017166137695

Token 193: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: '           ' (ID: 352)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21081455051898956
    2. '           ' → logprob: -2.0858144760131836
    3. ' dp' → logprob: -3.5858144760131836
    4. '       ' → logprob: -4.085814476013184
    5. '   ' → logprob: -4.710814476013184
    6. '
' → logprob: -4.960814476013184
    7. '```' → logprob: -6.335814476013184
    8. '+' → logprob: -6.835814476013184
    9. '[' → logprob: -7.210814476013184
    10. ' 
' → logprob: -8.460814476013184

Token 195: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.4903486669063568
    2. '%' → logprob: -1.7403486967086792
    3. ')' → logprob: -2.3653485774993896
    4. ' %' → logprob: -2.7403485774993896
    5. ' dp' → logprob: -3.1153485774993896
    6. '
' → logprob: -6.365348815917969
    7. '[' → logprob: -6.490348815917969
    8. ']' → logprob: -6.740348815917969
    9. '<|end|>' → logprob: -7.240348815917969
    10. ')%' → logprob: -7.365348815917969

Token 196: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -1.5332478142227046e-05
    2. 'two' → logprob: -11.750015258789062
    3. '_one' → logprob: -11.875015258789062
    4. 'Two' → logprob: -15.500015258789062
    5. '_TWO' → logprob: -16.500015258789062
    6. '_three' → logprob: -18.125015258789062
    7. '_tw' → logprob: -18.625015258789062
    8. '2' → logprob: -19.750015258789062
    9. '```' → logprob: -20.000015258789062
    10. ' two' → logprob: -20.000015258789062

Token 197: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.093505099765025e-05
    2. 'idx' → logprob: -11.125020980834961
    3. '[' → logprob: -13.000020980834961
    4. '[
' → logprob: -13.500020980834961
    5. ' idx' → logprob: -14.125020980834961
    6. '	idx' → logprob: -14.750020980834961
    7. '_idx' → logprob: -14.875020980834961
    8. '```' → logprob: -15.250020980834961
    9. '[index' → logprob: -16.12502098083496
    10. '
' → logprob: -16.62502098083496

Token 198: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2200749754119897e-06
    2. ' +' → logprob: -13.250001907348633
    3. ']' → logprob: -15.625001907348633
    4. '1' → logprob: -15.750001907348633
    5. '[' → logprob: -18.000001907348633
    6. ']+' → logprob: -18.750001907348633
    7. '+
' → logprob: -18.875001907348633
    8. '```' → logprob: -19.750001907348633
    9. '
' → logprob: -20.250001907348633
    10. '   ' → logprob: -20.500001907348633

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. '0' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.625001907348633
    5. ']' → logprob: -16.875001907348633
    6. '+' → logprob: -17.125001907348633
    7. '```' → logprob: -17.750001907348633
    8. '2' → logprob: -17.875001907348633
    9. '[' → logprob: -18.125001907348633
    10. 'idx' → logprob: -18.250001907348633

Token 200: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.055897925049066544
    2. '=' → logprob: -3.3058979511260986
    3. ' =' → logprob: -4.1808977127075195
    4. ')' → logprob: -7.0558977127075195
    5. ' ]' → logprob: -7.1808977127075195
    6. ']=' → logprob: -7.1808977127075195
    7. ' ' → logprob: -11.55589771270752
    8. ' )' → logprob: -12.30589771270752
    9. ')=' → logprob: -12.68089771270752
    10. '+' → logprob: -12.80589771270752

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014341950416565
    2. ' =' → logprob: -1.7014341354370117
    3. '*=' → logprob: -11.951434135437012
    4. ']' → logprob: -12.326434135437012
    5. ' *=' → logprob: -13.451434135437012
    6. '+=' → logprob: -13.451434135437012
    7. '[' → logprob: -13.451434135437012
    8. ')' → logprob: -13.576434135437012
    9. ' ' → logprob: -13.701434135437012
    10. ']=' → logprob: -13.826434135437012

Token 202: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04836136847734451
    2. '3' → logprob: -4.298361301422119
    3. '(' → logprob: -4.548361301422119
    4. '(dp' → logprob: -4.548361301422119
    5. ' dp' → logprob: -4.673361301422119
    6. '2' → logprob: -6.173361301422119
    7. ' (' → logprob: -7.548361301422119
    8. ' ' → logprob: -8.548361778259277
    9. '0' → logprob: -9.548361778259277
    10. '1' → logprob: -9.548361778259277

Token 203: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0016873201820999384
    2. '_one' → logprob: -6.501687526702881
    3. 'two' → logprob: -8.751687049865723
    4. '[idx' → logprob: -11.001687049865723
    5. 'idx' → logprob: -12.251687049865723
    6. 'Two' → logprob: -12.876687049865723
    7. '_TWO' → logprob: -13.501687049865723
    8. '_three' → logprob: -14.501687049865723
    9. '2' → logprob: -15.001687049865723
    10. 'one' → logprob: -15.626687049865723

Token 204: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.630610641877865e-06
    2. 'idx' → logprob: -12.500006675720215
    3. '[' → logprob: -13.250006675720215
    4. ' idx' → logprob: -13.750006675720215
    5. '	idx' → logprob: -17.5000057220459
    6. ' [' → logprob: -18.1250057220459
    7. '(idx' → logprob: -18.2500057220459
    8. '```' → logprob: -18.8750057220459
    9. '[
' → logprob: -19.0000057220459
    10. '[id' → logprob: -20.6250057220459

Token 205: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13860297203063965
    2. ']*' → logprob: -2.3886029720306396
    3. ']' → logprob: -3.5136029720306396
    4. ' *' → logprob: -5.513603210449219
    5. ']+' → logprob: -6.013603210449219
    6. '+' → logprob: -7.138603210449219
    7. '[idx' → logprob: -8.638603210449219
    8. ')*' → logprob: -8.763603210449219
    9. ' +' → logprob: -9.888603210449219
    10. ')' → logprob: -10.138603210449219

Token 206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5779715776443481
    2. '3' → logprob: -0.8279715776443481
    3. '10' → logprob: -7.452971458435059
    4. '7' → logprob: -7.827971458435059
    5. ' ' → logprob: -7.952971458435059
    6. '4' → logprob: -7.952971458435059
    7. '6' → logprob: -8.702971458435059
    8. '5' → logprob: -9.577971458435059
    9. '9' → logprob: -10.327971458435059
    10. '8' → logprob: -10.702971458435059

Token 207: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3171757161617279
    2. ' %' → logprob: -1.3171757459640503
    3. '<|end|>' → logprob: -6.81717586517334
    4. '       ' → logprob: -7.06717586517334
    5. ')%' → logprob: -7.31717586517334
    6. ')' → logprob: -7.44217586517334
    7. '   ' → logprob: -8.06717586517334
    8. '
' → logprob: -9.56717586517334
    9. '+' → logprob: -9.81717586517334
    10. ' %=' → logprob: -10.31717586517334

Token 208: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5851560235023499
    2. '<|end|>' → logprob: -1.335155963897705
    3. '%' → logprob: -2.710155963897705
    4. '   ' → logprob: -3.585155963897705
    5. '[' → logprob: -3.960155963897705
    6. 'dp' → logprob: -4.085155963897705
    7. '
' → logprob: -4.210155963897705
    8. '```' → logprob: -5.085155963897705
    9. ' %' → logprob: -5.210155963897705
    10. '<|end|>' → logprob: -5.460155963897705

Token 210: ' Util' (ID: 13564)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6002429127693176
    2. 'dp' → logprob: -0.8502429127693176
    3. ' for' → logprob: -4.725243091583252
    4. '```' → logprob: -4.725243091583252
    5. '       ' → logprob: -5.475243091583252
    6. 'for' → logprob: -6.600243091583252
    7. '   ' → logprob: -7.975243091583252
    8. '	dp' → logprob: -8.975242614746094
    9. '``' → logprob: -9.725242614746094
    10. 'mod' → logprob: -9.975242614746094

Token 211: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.811757504940033
    2. 'ise' → logprob: -1.4367575645446777
    3. 'isation' → logprob: -1.9367575645446777
    4. 'e' → logprob: -2.3117575645446777
    5. 'isez' → logprob: -3.6867575645446777
    6. 'es' → logprob: -3.9367575645446777
    7. 'isateur' → logprob: -4.561757564544678
    8. 'isé' → logprob: -5.436757564544678
    9. 'er' → logprob: -5.561757564544678
    10. 'isant' → logprob: -6.061757564544678

Token 212: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.065425157546997
    2. ' of' → logprob: -1.315425157546997
    3. '=' → logprob: -2.315425157546997
    4. '       ' → logprob: -2.815425157546997
    5. ' =' → logprob: -3.065425157546997
    6. 'dp' → logprob: -3.315425157546997
    7. '%' → logprob: -3.440425157546997
    8. ' de' → logprob: -3.815425157546997
    9. ' dp' → logprob: -3.940425157546997
    10. '[' → logprob: -4.190424919128418

Token 213: ''un' (ID: 9788)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.674677848815918
    2. ' a' → logprob: -1.674677848815918
    3. ' modulo' → logprob: -1.674677848815918
    4. '=' → logprob: -2.299677848815918
    5. '_' → logprob: -2.674677848815918
    6. 'a' → logprob: -3.049677848815918
    7. 'dp' → logprob: -3.299677848815918
    8. '(' → logprob: -3.924677848815918
    9. ' ' → logprob: -4.049677848815918
    10. ' dp' → logprob: -4.049677848815918

Token 214: ' opér' (ID: 65915)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6282738447189331
    2. 'for' → logprob: -1.378273844718933
    3. 'dp' → logprob: -2.0032739639282227
    4. ' dp' → logprob: -3.8782739639282227
    5. 'if' → logprob: -4.003273963928223
    6. ' if' → logprob: -4.503273963928223
    7. '```' → logprob: -5.628273963928223
    8. '   ' → logprob: -5.628273963928223
    9. '#' → logprob: -5.753273963928223
    10. ' modulo' → logprob: -6.003273963928223

Token 215: 'ateur' (ID: 12477)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6838041543960571
    2. 'ateur' → logprob: -0.8088041543960571
    3. 'ate' → logprob: -4.058804035186768
    4. '=' → logprob: -4.808804035186768
    5. '   ' → logprob: -5.433804035186768
    6. 'MOD' → logprob: -5.683804035186768
    7. '%=' → logprob: -5.933804035186768
    8. '       ' → logprob: -5.933804035186768
    9. 'and' → logprob: -6.433804035186768
    10. 'mod' → logprob: -6.558804035186768

Token 216: ' inplace' (ID: 100946)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.03558339551091194
    2. ' %=' → logprob: -3.66058349609375
    3. '%' → logprob: -4.78558349609375
    4. '=' → logprob: -7.28558349609375
    5. ' %' → logprob: -8.91058349609375
    6. ' modulo' → logprob: -10.66058349609375
    7. '   ' → logprob: -11.28558349609375
    8. '%
' → logprob: -11.41058349609375
    9. 'mod' → logprob: -12.03558349609375
    10. ' =' → logprob: -12.41058349609375

Token 217: ' et' (ID: 859)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.6854307651519775
    2. '   ' → logprob: -2.0604307651519775
    3. '=' → logprob: -2.3104307651519775
    4. '%=' → logprob: -2.4354307651519775
    5. 'dp' → logprob: -2.8104307651519775
    6. '       ' → logprob: -2.9354307651519775
    7. '%' → logprob: -4.060430526733398
    8. ' dp' → logprob: -4.060430526733398
    9. ' =' → logprob: -4.185430526733398
    10. ' %' → logprob: -4.935430526733398

Token 218: ' modulo' (ID: 112372)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.8755077719688416
    2. ' dp' → logprob: -1.5005078315734863
    3. '=' → logprob: -2.3755078315734863
    4. '%' → logprob: -3.2505078315734863
    5. '%=' → logprob: -3.2505078315734863
    6. ' =' → logprob: -3.5005078315734863
    7. 'dp' → logprob: -3.6255078315734863
    8. ' %' → logprob: -3.8755078315734863
    9. '=
' → logprob: -3.8755078315734863
    10. ' +=' → logprob: -4.000507831573486

Token 219: ' sans' (ID: 9828)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.7014575004577637
    2. ' %=' → logprob: -0.8264575004577637
    3. '%' → logprob: -3.4514575004577637
    4. '       ' → logprob: -3.9514575004577637
    5. ' %' → logprob: -4.826457500457764
    6. '   ' → logprob: -5.701457500457764
    7. '=' → logprob: -6.326457500457764
    8. ' ' → logprob: -7.326457500457764
    9. '
' → logprob: -7.826457500457764
    10. '```' → logprob: -8.326457977294922

Token 220: ' appel' (ID: 34642)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11307433992624283
    2. '%=' → logprob: -3.73807430267334
    3. ' %=' → logprob: -4.23807430267334
    4. ' =' → logprob: -4.23807430267334
    5. '%' → logprob: -4.36307430267334
    6. '+=' → logprob: -5.48807430267334
    7. '   ' → logprob: -5.61307430267334
    8. 'import' → logprob: -5.73807430267334
    9. '=
' → logprob: -5.86307430267334
    10. ' %' → logprob: -5.98807430267334

Token 221: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04104107245802879
    2. '   ' → logprob: -4.166040897369385
    3. '=
' → logprob: -4.666040897369385
    4. ' =' → logprob: -5.041040897369385
    5. '_' → logprob: -6.416040897369385
    6. '       ' → logprob: -6.541040897369385
    7. 'dp' → logprob: -6.791040897369385
    8. '_=' → logprob: -7.291040897369385
    9. '```' → logprob: -7.541040897369385
    10. '%=' → logprob: -7.791040897369385

Token 222: ' fonction' (ID: 17610)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6875190734863281
    2. 'reduce' → logprob: -1.8125190734863281
    3. '(
' → logprob: -2.187519073486328
    4. 'pow' → logprob: -2.562519073486328
    5. 'mod' → logprob: -2.937519073486328
    6. '%' → logprob: -2.937519073486328
    7. '(' → logprob: -3.687519073486328
    8. ' (' → logprob: -3.812519073486328
    9. '`' → logprob: -3.812519073486328
    10. ' =' → logprob: -3.937519073486328

Token 223: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16373619437217712
    2. '   ' → logprob: -2.78873610496521
    3. '=' → logprob: -3.03873610496521
    4. ' <<=' → logprob: -4.788736343383789
    5. '        
' → logprob: -4.913736343383789
    6. ' %=' → logprob: -5.038736343383789
    7. ' ' → logprob: -5.788736343383789
    8. '    
' → logprob: -6.163736343383789
    9. '%=' → logprob: -6.163736343383789
    10. ' =' → logprob: -6.413736343383789

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4445742964744568
    2. '   ' → logprob: -1.5695743560791016
    3. '=' → logprob: -3.1945743560791016
    4. ' %=' → logprob: -3.1945743560791016
    5. '%=' → logprob: -3.6945743560791016
    6. '*=' → logprob: -5.069574356079102
    7. '	' → logprob: -5.444574356079102
    8. ' ' → logprob: -5.444574356079102
    9. ' *=' → logprob: -5.444574356079102
    10. ' =' → logprob: -5.569574356079102

Token 225: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.3881949782371521
    2. ' dp' → logprob: -1.1381950378417969
    3. '       ' → logprob: -7.263195037841797
    4. '   ' → logprob: -7.638195037841797
    5. '	dp' → logprob: -9.263195037841797
    6. ' ' → logprob: -11.263195037841797
    7. '    ' → logprob: -11.388195037841797
    8. '           ' → logprob: -11.638195037841797
    9. ' 
' → logprob: -13.263195037841797
    10. '  ' → logprob: -13.388195037841797

Token 226: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -3.128163257315464e-07
    2. '_two' → logprob: -15.125
    3. 'one' → logprob: -19.0
    4. '_ONE' → logprob: -19.625
    5. '_on' → logprob: -20.625
    6. 'One' → logprob: -20.875
    7. ' one' → logprob: -20.875
    8. '_' → logprob: -21.0
    9. '_once' → logprob: -21.625
    10. '_o' → logprob: -21.875

Token 227: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.082895273109898e-05
    2. '[' → logprob: -10.875030517578125
    3. 'idx' → logprob: -12.500030517578125
    4. ' [' → logprob: -13.000030517578125
    5. '   ' → logprob: -13.375030517578125
    6. ' idx' → logprob: -14.625030517578125
    7. '[-' → logprob: -14.750030517578125
    8. '```' → logprob: -14.875030517578125
    9. '[id' → logprob: -15.000030517578125
    10. '[next' → logprob: -15.000030517578125

Token 228: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.2987729102605954e-05
    2. ' +' → logprob: -10.750042915344238
    3. '1' → logprob: -11.500042915344238
    4. ']' → logprob: -12.000042915344238
    5. ']+=' → logprob: -12.625042915344238
    6. ']+' → logprob: -14.375042915344238
    7. '+=' → logprob: -15.125042915344238
    8. '   ' → logprob: -15.250042915344238
    9. '+]' → logprob: -15.750042915344238
    10. '[' → logprob: -16.500043869018555

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.875011444091797
    3. '   ' → logprob: -13.500011444091797
    4. '```' → logprob: -13.500011444091797
    5. '+' → logprob: -15.062511444091797
    6. ']' → logprob: -15.500011444091797
    7. '       ' → logprob: -16.062511444091797
    8. '
' → logprob: -16.375011444091797
    9. '2' → logprob: -16.750011444091797
    10. '`' → logprob: -17.062511444091797

Token 230: ']' (ID: 60)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.5055928826332092
    2. '%=' → logprob: -1.1305928230285645
    3. ')' → logprob: -2.8805928230285645
    4. ']' → logprob: -4.1305928230285645
    5. '%' → logprob: -6.8805928230285645
    6. ' ' → logprob: -8.505593299865723
    7. '=' → logprob: -8.630593299865723
    8. ')%' → logprob: -9.130593299865723
    9. ' )' → logprob: -9.255593299865723
    10. ' =' → logprob: -10.130593299865723

Token 231: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.048770971596241
    2. ' %=' → logprob: -3.0487709045410156
    3. '%' → logprob: -8.673770904541016
    4. '=' → logprob: -12.298770904541016
    5. ' %' → logprob: -12.548770904541016
    6. ' ' → logprob: -13.548770904541016
    7. '//=' → logprob: -13.798770904541016
    8. '*=' → logprob: -14.298770904541016
    9. ' ' → logprob: -14.923770904541016
    10. ' =' → logprob: -15.048770904541016

Token 232: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00317783304490149
    2. ' MOD' → logprob: -5.753177642822266
    3. '10' → logprob: -17.378177642822266
    4. ' ' → logprob: -18.003177642822266
    5. '_MOD' → logprob: -18.378177642822266
    6. '.MOD' → logprob: -19.253177642822266
    7. '   ' → logprob: -19.378177642822266
    8. '100' → logprob: -19.503177642822266
    9. 'MO' → logprob: -20.628177642822266
    10. ' ' → logprob: -22.378177642822266

Token 233: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.00012118533049942926
    2. 'O' → logprob: -9.125121116638184
    3. 'ULE' → logprob: -11.500121116638184
    4. 'LO' → logprob: -14.375121116638184
    5. 'UL' → logprob: -14.750121116638184
    6. 'U' → logprob: -14.750121116638184
    7. 'ulo' → logprob: -14.875121116638184
    8. '   ' → logprob: -15.625121116638184
    9. 'UTO' → logprob: -16.6251220703125
    10. 'LE' → logprob: -17.7501220703125

Token 234: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.244802325963974
    2. '
' → logprob: -1.8698023557662964
    3. 'dp' → logprob: -3.619802236557007
    4. '<|end|>' → logprob: -3.744802236557007
    5. '        
' → logprob: -5.744802474975586
    6. '  
' → logprob: -6.244802474975586
    7. '	dp' → logprob: -6.244802474975586
    8. ' dp' → logprob: -6.744802474975586
    9. '    
' → logprob: -7.244802474975586
    10. '(dp' → logprob: -7.244802474975586

Token 235: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06273332983255386
    2. ' dp' → logprob: -2.8127334117889404
    3. '       ' → logprob: -7.187733173370361
    4. '	dp' → logprob: -12.06273365020752
    5. '   ' → logprob: -13.56273365020752
    6. '           ' → logprob: -14.31273365020752
    7. '_dp' → logprob: -14.68773365020752
    8. '(dp' → logprob: -14.68773365020752
    9. ' ' → logprob: -15.06273365020752
    10. '
' → logprob: -15.43773365020752

Token 236: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -1.981667537620524e-06
    2. 'two' → logprob: -13.250001907348633
    3. '_one' → logprob: -15.625001907348633
    4. '_tw' → logprob: -17.125001907348633
    5. '_TWO' → logprob: -17.125001907348633
    6. '_' → logprob: -19.375001907348633
    7. '_t' → logprob: -19.625001907348633
    8. '_three' → logprob: -19.875001907348633
    9. 'Two' → logprob: -20.750001907348633
    10. '2' → logprob: -21.250001907348633

Token 237: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.107425062713446e-06
    2. 'idx' → logprob: -12.125006675720215
    3. ' idx' → logprob: -14.625006675720215
    4. '	idx' → logprob: -14.750006675720215
    5. '[' → logprob: -15.125006675720215
    6. '```' → logprob: -15.750006675720215
    7. '_idx' → logprob: -16.00000762939453
    8. '(idx' → logprob: -17.25000762939453
    9. ' [' → logprob: -17.62500762939453
    10. '[
' → logprob: -18.00000762939453

Token 238: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011110307648777962
    2. '[idx' → logprob: -4.511110305786133
    3. 'idx' → logprob: -10.261110305786133
    4. '[' → logprob: -11.386110305786133
    5. ' idx' → logprob: -12.636110305786133
    6. '+=' → logprob: -13.011110305786133
    7. '][' → logprob: -13.011110305786133
    8. '```' → logprob: -13.261110305786133
    9. '(idx' → logprob: -13.886110305786133
    10. '+[' → logprob: -14.011110305786133

Token 239: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09684310853481293
    2. '1' → logprob: -2.4718430042266846
    3. '[idx' → logprob: -5.471843242645264
    4. '+' → logprob: -5.721843242645264
    5. '(idx' → logprob: -8.471842765808105
    6. ' idx' → logprob: -8.721842765808105
    7. '```' → logprob: -11.846842765808105
    8. 'index' → logprob: -12.346842765808105
    9. '   ' → logprob: -13.096842765808105
    10. ']' → logprob: -13.346842765808105

Token 240: ']' (ID: 60)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.2049003392457962
    2. ' %=' → logprob: -1.7049003839492798
    3. ')' → logprob: -5.70490026473999
    4. ')%' → logprob: -9.329900741577148
    5. '%' → logprob: -10.204900741577148
    6. ']' → logprob: -11.204900741577148
    7. ' )' → logprob: -12.079900741577148
    8. '%)' → logprob: -13.079900741577148
    9. '=' → logprob: -13.329900741577148
    10. ' ' → logprob: -13.954900741577148

Token 241: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0019740730058401823
    2. ' %=' → logprob: -6.251974105834961
    3. '%' → logprob: -10.001974105834961
    4. '=' → logprob: -16.25197410583496
    5. ' %' → logprob: -18.12697410583496
    6. '```' → logprob: -18.37697410583496
    7. ')%' → logprob: -18.62697410583496
    8. '*=' → logprob: -19.00197410583496
    9. '//=' → logprob: -19.12697410583496
    10. ' ' → logprob: -19.37697410583496

Token 242: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00861468818038702
    2. ' MOD' → logprob: -4.758614540100098
    3. '_MOD' → logprob: -16.133615493774414
    4. '.MOD' → logprob: -18.008615493774414
    5. ' ' → logprob: -18.133615493774414
    6. '   ' → logprob: -18.758615493774414
    7. 'MO' → logprob: -19.883615493774414
    8. '(M' → logprob: -20.758615493774414
    9. 'M' → logprob: -21.008615493774414
    10. 'mod' → logprob: -21.383615493774414

Token 243: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.0012144023785367608
    2. 'O' → logprob: -7.001214504241943
    3. 'ULE' → logprob: -8.126214027404785
    4. 'U' → logprob: -12.251214027404785
    5. 'UL' → logprob: -14.126214027404785
    6. 'OU' → logprob: -15.251214027404785
    7. 'ulo' → logprob: -16.0012149810791
    8. 'UTO' → logprob: -16.0012149810791
    9. 'MOD' → logprob: -16.1262149810791
    10. 'LO' → logprob: -16.3762149810791

Token 244: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10520521551370621
    2. '<|end|>' → logprob: -2.8552052974700928
    3. 'return' → logprob: -3.7302052974700928
    4. 'print' → logprob: -4.980205059051514
    5. '
' → logprob: -5.480205059051514
    6. 'if' → logprob: -5.730205059051514
    7. '    
' → logprob: -5.855205059051514
    8. ')' → logprob: -7.980205059051514
    9. '```' → logprob: -8.730205535888672
    10. ' return' → logprob: -8.730205535888672

Token 246: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1774466335773468
    2. '   ' → logprob: -2.5524466037750244
    3. 'return' → logprob: -3.0524466037750244
    4. 'result' → logprob: -3.3024466037750244
    5. ' print' → logprob: -8.052446365356445
    6. 'total' → logprob: -8.927446365356445
    7. ' return' → logprob: -9.552446365356445
    8. '    
' → logprob: -9.552446365356445
    9. ' result' → logprob: -10.552446365356445
    10. 'answer' → logprob: -11.427446365356445

Token 247: ' return' (ID: 622)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8059027791023254
    2. 'return' → logprob: -1.1809027194976807
    3. 'print' → logprob: -1.4309027194976807
    4. 'total' → logprob: -6.30590295791626
    5. ' result' → logprob: -6.43090295791626
    6. ' return' → logprob: -6.43090295791626
    7. ' print' → logprob: -7.30590295791626
    8. 'answer' → logprob: -7.68090295791626
    9. 'res' → logprob: -7.80590295791626
    10. '   ' → logprob: -7.80590295791626

Token 248: ' dans' (ID: 2671)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4137069880962372
    2. 'dp' → logprob: -1.2887070178985596
    3. '(dp' → logprob: -3.2887070178985596
    4. ' (' → logprob: -4.9137067794799805
    5. ' max' → logprob: -4.9137067794799805
    6. ' sum' → logprob: -5.6637067794799805
    7. ' [' → logprob: -6.0387067794799805
    8. '[' → logprob: -6.5387067794799805
    9. 'sum' → logprob: -6.7887067794799805
    10. 'max' → logprob: -7.0387067794799805

Token 249: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07463545352220535
    2. ' dp' → logprob: -3.4496355056762695
    3. '(dp' → logprob: -3.5746355056762695
    4. 'max' → logprob: -4.8246355056762695
    5. ' max' → logprob: -6.1996355056762695
    6. '(max' → logprob: -6.9496355056762695
    7. 'sum' → logprob: -7.6996355056762695
    8. ' (' → logprob: -8.32463550567627
    9. '(' → logprob: -9.57463550567627
    10. ' ' → logprob: -9.69963550567627

Token 250: ' style' (ID: 2713)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11893955618143082
    2. ' dp' → logprob: -2.7439396381378174
    3. '(dp' → logprob: -3.9939396381378174
    4. 'print' → logprob: -3.9939396381378174
    5. 'return' → logprob: -4.743939399719238
    6. ' print' → logprob: -6.868939399719238
    7. ' return' → logprob: -7.368939399719238
    8. '[' → logprob: -8.993939399719238
    9. 'range' → logprob: -9.243939399719238
    10. 'main' → logprob: -9.993939399719238

Token 251: ' mix' (ID: 9762)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3582509756088257
    2. 'return' → logprob: -1.7332509756088257
    3. ' return' → logprob: -3.3582510948181152
    4. ' dp' → logprob: -3.4832510948181152
    5. 'lambda' → logprob: -4.483251094818115
    6. 'print' → logprob: -4.983251094818115
    7. '   ' → logprob: -5.233251094818115
    8. 'functional' → logprob: -5.358251094818115
    9. 'python' → logprob: -5.608251094818115
    10. ' lambda' → logprob: -5.733251094818115

Token 252: 'te' (ID: 411)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.21904709935188293
    2. 'e' → logprob: -1.7190470695495605
    3. 'te' → logprob: -4.3440470695495605
    4. '   ' → logprob: -6.0940470695495605
    5. 'ed' → logprob: -6.3440470695495605
    6. 'def' → logprob: -7.8440470695495605
    7. 'ée' → logprob: -10.344047546386719
    8. 'té' → logprob: -10.469047546386719
    9. '  ' → logprob: -11.969047546386719
    10. 't' → logprob: -12.719047546386719

Token 253: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008063421584665775
    2. 'return' → logprob: -5.258063316345215
    3. ' return' → logprob: -5.883063316345215
    4. '
' → logprob: -10.258063316345215
    5. '    
' → logprob: -13.508063316345215
    6. '```' → logprob: -13.883063316345215
    7. '(return' → logprob: -15.008063316345215
    8. '{return' → logprob: -15.258063316345215
    9. '	return' → logprob: -15.633063316345215
    10. ':return' → logprob: -16.00806427001953

Token 254: ' tuple' (ID: 31311)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0070565938949585
    2. 'return' → logprob: -1.5070565938949585
    3. ' (' → logprob: -2.132056713104248
    4. '(dp' → logprob: -2.132056713104248
    5. '   ' → logprob: -2.257056713104248
    6. ' dp' → logprob: -3.007056713104248
    7. 'dp' → logprob: -3.882056713104248
    8. '(return' → logprob: -7.757056713104248
    9. ' ' → logprob: -8.13205623626709
    10. '  ' → logprob: -8.88205623626709

Token 255: ' index' (ID: 3472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002967238426208496
    2. 'return' → logprob: -6.002967357635498
    3. ' return' → logprob: -7.752967357635498
    4. '
' → logprob: -10.75296688079834
    5. '(' → logprob: -11.12796688079834
    6. '    
' → logprob: -11.37796688079834
    7. '<|end|>' → logprob: -12.12796688079834
    8. '(return' → logprob: -13.12796688079834
    9. '	return' → logprob: -13.12796688079834
    10. 'def' → logprob: -14.12796688079834

Token 256: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009805909357964993
    2. 'return' → logprob: -4.884805679321289
    3. ' return' → logprob: -6.884805679321289
    4. '
' → logprob: -7.009805679321289
    5. '    
' → logprob: -8.634805679321289
    6. '(' → logprob: -10.009805679321289
    7. '(
' → logprob: -11.634805679321289
    8. '(return' → logprob: -11.759805679321289
    9. '[' → logprob: -12.009805679321289
    10. '	return' → logprob: -12.384805679321289

Token 257: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02274196781218052
    2. 'return' → logprob: -3.8977420330047607
    3. ' return' → logprob: -6.522741794586182
    4. '
' → logprob: -8.14774227142334
    5. '    
' → logprob: -8.27274227142334
    6. '(' → logprob: -9.14774227142334
    7. '(return' → logprob: -10.77274227142334
    8. '(
' → logprob: -10.77274227142334
    9. '  
' → logprob: -11.39774227142334
    10. '	return' → logprob: -12.14774227142334

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002736401278525591
    2. 'return' → logprob: -6.377736568450928
    3. ' return' → logprob: -6.877736568450928
    4. '    
' → logprob: -13.50273609161377
    5. '
' → logprob: -13.75273609161377
    6. '```' → logprob: -15.00273609161377
    7. '<|end|>' → logprob: -16.127737045288086
    8. ':return' → logprob: -16.377737045288086
    9. '{return' → logprob: -16.502737045288086
    10. '(return' → logprob: -16.627737045288086

Token 259: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.020582180470228195
    2. ' return' → logprob: -4.02058219909668
    3. '   ' → logprob: -6.02058219909668
    4. '
' → logprob: -14.52058219909668
    5. '    
' → logprob: -15.52058219909668
    6. ' ' → logprob: -16.27058219909668
    7. '(return' → logprob: -16.27058219909668
    8. '```' → logprob: -17.14558219909668
    9. '  ' → logprob: -17.39558219909668
    10. '	return' → logprob: -17.52058219909668

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22824174165725708
    2. '=' → logprob: -1.6032416820526123
    3. '_' → logprob: -6.728241920471191
    4. '_one' → logprob: -7.103241920471191
    5. '   ' → logprob: -8.353241920471191
    6. 's' → logprob: -8.603241920471191
    7. 'u' → logprob: -9.728241920471191
    8. '1' → logprob: -9.728241920471191
    9. 'ult' → logprob: -9.853241920471191
    10. 'urn' → logprob: -10.228241920471191

Token 261: ' [' (ID: 723)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.3163326382637024
    2. 'dp' → logprob: -1.9413325786590576
    3. ' (' → logprob: -2.3163325786590576
    4. ' dp' → logprob: -3.5663325786590576
    5. '(' → logprob: -7.816332817077637
    6. '(max' → logprob: -9.316332817077637
    7. '   ' → logprob: -9.441332817077637
    8. '((' → logprob: -10.066332817077637
    9. 'max' → logprob: -10.191332817077637
    10. ' ' → logprob: -10.566332817077637

Token 262: 'dp' (ID: 19037)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.6359115242958069
    2. 'dp' → logprob: -0.7609115242958069
    3. ' (' → logprob: -6.885911464691162
    4. ' dp' → logprob: -7.010911464691162
    5. '(' → logprob: -7.510911464691162
    6. '(d' → logprob: -8.63591194152832
    7. '((' → logprob: -8.88591194152832
    8. '(max' → logprob: -9.01091194152832
    9. 'max' → logprob: -9.26091194152832
    10. '(x' → logprob: -9.88591194152832

Token 263: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.021023988723754883
    2. 'one' → logprob: -4.271023750305176
    3. '_two' → logprob: -5.021023750305176
    4. 'two' → logprob: -8.521023750305176
    5. 'One' → logprob: -10.396023750305176
    6. ' one' → logprob: -12.896023750305176
    7. '1' → logprob: -12.896023750305176
    8. '_ONE' → logprob: -13.646023750305176
    9. '
' → logprob: -14.146023750305176
    10. '(one' → logprob: -14.896023750305176

Token 264: '[length' (ID: 130091)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.6347166895866394
    2. '[length' → logprob: -0.7597166895866394
    3. '[i' → logprob: -6.759716510772705
    4. '[len' → logprob: -7.009716510772705
    5. 'length' → logprob: -11.009716987609863
    6. ' length' → logprob: -12.134716987609863
    7. '[index' → logprob: -12.384716987609863
    8. ' [-' → logprob: -12.384716987609863
    9. '[' → logprob: -12.384716987609863
    10. '[idx' → logprob: -12.509716987609863

Token 265: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.07796849310398102
    2. ']' → logprob: -2.7029685974121094
    3. ']%' → logprob: -5.577968597412109
    4. '-' → logprob: -5.952968597412109
    5. ']+' → logprob: -7.327968597412109
    6. ',' → logprob: -7.702968597412109
    7. ' -' → logprob: -8.70296859741211
    8. ' ],' → logprob: -8.95296859741211
    9. '],
' → logprob: -9.20296859741211
    10. ']-' → logprob: -10.07796859741211

Token 266: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07889727503061295
    2. ' dp' → logprob: -2.57889723777771
    3. ' ' → logprob: -12.953897476196289
    4. '
' → logprob: -13.578897476196289
    5. '   ' → logprob: -13.703897476196289
    6. '(dp' → logprob: -13.953897476196289
    7. '  ' → logprob: -14.703897476196289
    8. '	dp' → logprob: -14.828897476196289
    9. ' ' → logprob: -15.328897476196289
    10. '    ' → logprob: -15.453897476196289

Token 267: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -2.7729658540920354e-05
    2. 'two' → logprob: -10.500027656555176
    3. '_one' → logprob: -16.000028610229492
    4. '_TWO' → logprob: -17.500028610229492
    5. 'Two' → logprob: -17.875028610229492
    6. '_t' → logprob: -19.125028610229492
    7. ' two' → logprob: -19.125028610229492
    8. '2' → logprob: -19.250028610229492
    9. '_tw' → logprob: -19.250028610229492
    10. '(two' → logprob: -19.625028610229492

Token 268: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.00020628207130357623
    2. 'length' → logprob: -8.500205993652344
    3. ',length' → logprob: -14.000205993652344
    4. '(length' → logprob: -14.250205993652344
    5. '][' → logprob: -14.500205993652344
    6. ' length' → logprob: -14.625205993652344
    7. ':length' → logprob: -16.250205993652344
    8. '[size' → logprob: -16.875205993652344
    9. '	length' → logprob: -16.875205993652344
    10. ']' → logprob: -17.125205993652344

Token 269: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12128877639770508
    2. ']]' → logprob: -2.246288776397705
    3. ']%' → logprob: -5.371288776397705
    4. '])' → logprob: -6.871288776397705
    5. ')]' → logprob: -6.871288776397705
    6. ']}' → logprob: -6.871288776397705
    7. '%' → logprob: -8.621288299560547
    8. '}]' → logprob: -8.621288299560547
    9. ' ]' → logprob: -8.996288299560547
    10. '])]' → logprob: -9.746288299560547

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02989673614501953
    2. 'return' → logprob: -3.5298967361450195
    3. ' return' → logprob: -9.02989673614502
    4. '
' → logprob: -10.65489673614502
    5. '    
' → logprob: -13.27989673614502
    6. '	return' → logprob: -14.15489673614502
    7. 'print' → logprob: -15.27989673614502
    8. '```' → logprob: -16.279895782470703
    9. '[' → logprob: -17.529895782470703
    10. '       ' → logprob: -17.904895782470703

Token 271: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10072534531354904
    2. 'return' (adapté à ' return') → logprob: -2.3507254123687744
    3. '
' → logprob: -8.600725173950195
    4. ' return' → logprob: -8.725725173950195
    5. '    
' → logprob: -9.100725173950195
    6. '	return' → logprob: -10.225725173950195
    7. 'print' → logprob: -11.100725173950195
    8. '```' → logprob: -12.850725173950195
    9. '<|end|>' → logprob: -12.975725173950195
    10. 'def' → logprob: -14.100725173950195

Token 272: ' sum' (ID: 4215)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6352939605712891
    2. 'res' → logprob: -0.7602939605712891
    3. '(res' → logprob: -6.885293960571289
    4. ' sum' → logprob: -7.260293960571289
    5. 'sum' → logprob: -7.760293960571289
    6. ' tuple' → logprob: -8.260293960571289
    7. 'tuple' → logprob: -9.260293960571289
    8. ' (' → logprob: -9.385293960571289
    9. ' max' → logprob: -9.885293960571289
    10. '(' → logprob: -11.260293960571289

Token 273: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00019722258730325848
    2. 'res' → logprob: -9.000197410583496
    3. '(' → logprob: -9.625197410583496
    4. ' (' → logprob: -12.000197410583496
    5. ' res' → logprob: -13.500197410583496
    6. '	res' → logprob: -16.62519645690918
    7. '_res' → logprob: -17.12519645690918
    8. '(
' → logprob: -17.25019645690918
    9. ',res' → logprob: -18.62519645690918
    10. '(result' → logprob: -18.87519645690918

Token 274: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007150543970055878
    2. ' )' → logprob: -7.500715255737305
    3. ')%' → logprob: -8.750715255737305
    4. '%' → logprob: -12.875715255737305
    5. ' %' → logprob: -14.125715255737305
    6. ' ' → logprob: -16.625715255737305
    7. '   ' → logprob: -16.750715255737305
    8. '%)' → logprob: -17.125715255737305
    9. ')
' → logprob: -17.500715255737305
    10. ' ' → logprob: -17.625715255737305

Token 275: ' %' (ID: 1851)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.49322882294654846
    2. '()%' → logprob: -1.243228793144226
    3. '%' → logprob: -2.4932289123535156
    4. ' %' → logprob: -4.118228912353516
    5. '(' → logprob: -6.368228912353516
    6. ' ()' → logprob: -8.493228912353516
    7. ')' → logprob: -11.118228912353516
    8. '()
' → logprob: -11.493228912353516
    9. ')%' → logprob: -11.993228912353516
    10. '```' → logprob: -12.368228912353516

Token 276: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00043102685594931245
    2. ' MOD' → logprob: -7.750431060791016
    3. '(M' → logprob: -15.500431060791016
    4. '(' → logprob: -17.625431060791016
    5. '_MOD' → logprob: -17.875431060791016
    6. '(mod' → logprob: -18.875431060791016
    7. ' ' → logprob: -19.500431060791016
    8. '.MOD' → logprob: -19.625431060791016
    9. ' (' → logprob: -19.875431060791016
    10. '   ' → logprob: -20.375431060791016

Token 277: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.2071063220500946
    2. 'O' → logprob: -1.707106351852417
    3. 'ULE' → logprob: -5.207106113433838
    4. 'U' → logprob: -9.457106590270996
    5. 'UL' → logprob: -10.457106590270996
    6. 'LO' → logprob: -10.957106590270996
    7. 'LE' → logprob: -11.082106590270996
    8. 'OLE' → logprob: -11.707106590270996
    9. '   ' → logprob: -12.082106590270996
    10. 'L' → logprob: -12.207106590270996

Token 278: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011048642918467522
    2. '__' → logprob: -4.511048793792725
    3. ' ' → logprob: -15.011048316955566
    4. '_name' → logprob: -15.136048316955566
    5. '_' → logprob: -15.886048316955566
    6. ' ' → logprob: -16.761049270629883
    7. '___' → logprob: -17.261049270629883
    8. 'name' → logprob: -17.261049270629883
    9. '  ' → logprob: -18.261049270629883
    10. '/__' → logprob: -18.636049270629883

Token 281: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.22306238114833832
    2. ' ==' → logprob: -1.8480623960494995
    3. '==' → logprob: -3.72306227684021
    4. 'name' → logprob: -4.223062515258789
    5. '.__' → logprob: -6.598062515258789
    6. ' __' → logprob: -7.223062515258789
    7. '=="' → logprob: -7.598062515258789
    8. '.name' → logprob: -7.598062515258789
    9. '__.__' → logprob: -8.598062515258789
    10. '=='' → logprob: -9.098062515258789

Token 282: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.1008713702030946e-06
    2. '==' → logprob: -13.250001907348633
    3. '__.__' → logprob: -15.625001907348633
    4. 'name' → logprob: -17.125001907348633
    5. '_' → logprob: -17.500001907348633
    6. '____' → logprob: -17.625001907348633
    7. '__
' → logprob: -17.625001907348633
    8. '___' → logprob: -17.750001907348633
    9. ' ==' → logprob: -17.875001907348633
    10. '__.' → logprob: -18.125001907348633

Token 283: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.36931857466697693
    2. '__' → logprob: -1.6193186044692993
    3. '==' → logprob: -2.2443184852600098
    4. '=="' → logprob: -5.36931848526001
    5. '=='' → logprob: -9.494318962097168
    6. ' =="' → logprob: -11.619318962097168
    7. '==
' → logprob: -12.119318962097168
    8. ' ' → logprob: -12.994318962097168
    9. '__":
' → logprob: -13.244318962097168
    10. '_' → logprob: -13.494318962097168

Token 284: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3894387483596802
    2. ''' → logprob: -1.1394387483596802
    3. ' "__' → logprob: -6.139438629150391
    4. ' '__' → logprob: -7.889438629150391
    5. ' "' → logprob: -10.63943862915039
    6. ' '' → logprob: -12.26443862915039
    7. '__' → logprob: -13.38943862915039
    8. '("__' → logprob: -14.51443862915039
    9. ''"' → logprob: -14.76443862915039
    10. ' ' → logprob: -14.76443862915039

Token 285: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.8889261304575484e-06
    2. 'name' → logprob: -12.500003814697266
    3. ' main' → logprob: -16.125003814697266
    4. '"' → logprob: -19.500003814697266
    5. '_main' → logprob: -19.625003814697266
    6. '__' → logprob: -21.125003814697266
    7. '	main' → logprob: -21.500003814697266
    8. '(main' → logprob: -22.250003814697266
    9. '-main' → logprob: -22.375003814697266
    10. 'ma' → logprob: -22.625003814697266

Token 286: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04874417185783386
    2. '__' → logprob: -3.0487442016601562
    3. '__':
' → logprob: -8.798744201660156
    4. '__["' → logprob: -12.798744201660156
    5. '__.__' → logprob: -13.048744201660156
    6. '__("' → logprob: -14.548744201660156
    7. '__.' → logprob: -15.173744201660156
    8. '__
' → logprob: -16.048744201660156
    9. '__",' → logprob: -16.423744201660156
    10. '__
' → logprob: -17.798744201660156

Token 287: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19630426168441772
    2. 'main' → logprob: -1.9463043212890625
    3. '   ' → logprob: -3.6963043212890625
    4. '	main' → logprob: -4.5713043212890625
    5. ' ' → logprob: -9.446304321289062
    6. '"' → logprob: -10.071304321289062
    7. '_main' → logprob: -10.071304321289062
    8. ' ' → logprob: -10.571304321289062
    9. ''' → logprob: -11.321304321289062
    10. '  ' → logprob: -11.321304321289062

Token 288: ' #' (ID: 1069)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07966043055057526
    2. 'print' → logprob: -2.579660415649414
    3. ' main' → logprob: -7.204660415649414
    4. '   ' → logprob: -11.204660415649414
    5. ' print' → logprob: -11.579660415649414
    6. '	main' → logprob: -12.579660415649414
    7. 'import' → logprob: -14.704660415649414
    8. '    
' → logprob: -15.454660415649414
    9. '(main' → logprob: -16.954660415649414
    10. '  ' → logprob: -17.579660415649414

Token 289: ' App' (ID: 2583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014553041197359562
    2. 'main' → logprob: -4.514553070068359
    3. ' print' → logprob: -5.889553070068359
    4. ' main' → logprob: -7.514553070068359
    5. 'result' → logprob: -8.76455307006836
    6. '   ' → logprob: -11.26455307006836
    7. 'import' → logprob: -11.63955307006836
    8. ' result' → logprob: -11.88955307006836
    9. 'pr' → logprob: -15.01455307006836
    10. ' ' → logprob: -15.01455307006836

Token 290: 'el' (ID: 296)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.05409036949276924
    2. 'lication' → logprob: -4.42909049987793
    3. '()' → logprob: -4.67909049987793
    4. 'rove' → logprob: -4.92909049987793
    5. '.py' → logprob: -5.42909049987793
    6. '   ' → logprob: -5.55409049987793
    7. 'end' → logprob: -5.67909049987793
    8. 'y' → logprob: -5.92909049987793
    9. 'roach' → logprob: -6.55409049987793
    10. '(' → logprob: -6.55409049987793

Token 291: ' direct' (ID: 2823)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4469572603702545
    2. '(main' → logprob: -1.1969572305679321
    3. '(' → logprob: -3.5719573497772217
    4. ' main' → logprob: -3.8219573497772217
    5. '()' → logprob: -5.571957111358643
    6. 'def' → logprob: -5.696957111358643
    7. '(
' → logprob: -7.446957111358643
    8. '()
' → logprob: -7.946957111358643
    9. 'print' → logprob: -9.1969575881958
    10. '	main' → logprob: -9.9469575881958

Token 292: ' et' (ID: 859)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03019125387072563
    2. '()' → logprob: -4.280191421508789
    3. '()
' → logprob: -5.280191421508789
    4. ' main' → logprob: -5.655191421508789
    5. '(main' → logprob: -5.655191421508789
    6. 'def' → logprob: -5.780191421508789
    7. '	main' → logprob: -8.530191421508789
    8. '(' → logprob: -8.780191421508789
    9. '(
' → logprob: -9.030191421508789
    10. '   ' → logprob: -9.405191421508789

Token 293: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019289902411401272
    2. ' print' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.37692928314209
    4. 'import' → logprob: -16.626928329467773
    5. '(print' → logprob: -18.001928329467773
    6. 'exit' → logprob: -18.876928329467773
    7. 'result' → logprob: -19.001928329467773
    8. '	print' → logprob: -19.376928329467773
    9. 'main' → logprob: -19.501928329467773
    10. '```' → logprob: -19.626928329467773

Token 294: ' dans' (ID: 2671)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.018272850662469864
    2. '(' → logprob: -4.018272876739502
    3. 'main' → logprob: -9.393272399902344
    4. '(
' → logprob: -10.643272399902344
    5. '()' → logprob: -12.393272399902344
    6. '(print' → logprob: -12.643272399902344
    7. ' main' → logprob: -12.768272399902344
    8. ' (' → logprob: -13.018272399902344
    9. '   ' → logprob: -13.643272399902344
    10. '(Main' → logprob: -13.893272399902344

Token 295: ' une' (ID: 2463)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0014962917193770409
    2. ' main' → logprob: -7.501496315002441
    3. 'print' → logprob: -7.626496315002441
    4. '(main' → logprob: -8.001496315002441
    5. '__' → logprob: -9.376496315002441
    6. '(' → logprob: -11.126496315002441
    7. 'built' → logprob: -12.626496315002441
    8. ' ' → logprob: -12.751496315002441
    9. '   ' → logprob: -12.876496315002441
    10. 'python' → logprob: -13.501496315002441

Token 296: ' instruction' (ID: 21179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7582499384880066
    2. 'single' → logprob: -0.7582499384880066
    3. 'one' → logprob: -3.3832499980926514
    4. 'main' → logprob: -4.258249759674072
    5. 'ligne' → logprob: -4.633249759674072
    6. 'line' → logprob: -6.133249759674072
    7. '__' → logprob: -7.008249759674072
    8. ' seule' → logprob: -7.633249759674072
    9. '
' → logprob: -8.00825023651123
    10. ' single' → logprob: -8.25825023651123

Token 297: ' unique' (ID: 5746)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.0009916032431647182
    2. '(' → logprob: -7.5009918212890625
    3. 'main' → logprob: -7.7509918212890625
    4. '(print' → logprob: -12.625991821289062
    5. ' main' → logprob: -12.750991821289062
    6. ' (' → logprob: -14.000991821289062
    7. '(
' → logprob: -14.500991821289062
    8. '()' → logprob: -15.000991821289062
    9. '()
' → logprob: -16.250991821289062
    10. '(Main' → logprob: -16.625991821289062

Token 298: '
' (ID: 198)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.6264957785606384
    2. 'print' → logprob: -1.1264958381652832
    3. '   ' → logprob: -2.376495838165283
    4. ' print' → logprob: -3.126495838165283
    5. '(main' → logprob: -6.126495838165283
    6. '(' → logprob: -6.376495838165283
    7. 'main' → logprob: -8.001495361328125
    8. ' main' → logprob: -8.751495361328125
    9. '(
' → logprob: -9.626495361328125
    10. '	print' → logprob: -9.626495361328125

Token 299: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19287137687206268
    2. ' print' → logprob: -1.942871332168579
    3. '   ' → logprob: -3.442871332168579
    4. '(print' → logprob: -9.19287109375
    5. '	print' → logprob: -10.19287109375
    6. '```' → logprob: -13.06787109375
    7. ' main' → logprob: -13.31787109375
    8. 'main' → logprob: -13.44287109375
    9. 'import' → logprob: -14.44287109375
    10. '    
' → logprob: -14.69287109375

Token 300: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.842555426876061e-06
    2. ' print' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.0000057220459
    4. 'pr' → logprob: -19.8750057220459
    5. '(print' → logprob: -20.1250057220459
    6. 'main' → logprob: -21.1250057220459
    7. 'import' → logprob: -21.2500057220459
    8. '	print' → logprob: -21.5000057220459
    9. 'prin' → logprob: -22.5000057220459
    10. 'printf' → logprob: -23.0000057220459

Token 301: '(main' (ID: 48921)
  Prédit: '(main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.00033558503491804004
    2. '(' → logprob: -8.000335693359375
    3. '(Main' → logprob: -16.250335693359375
    4. ' (' → logprob: -17.375335693359375
    5. 'main' → logprob: -17.375335693359375
    6. '(sum' → logprob: -18.250335693359375
    7. ' main' → logprob: -19.250335693359375
    8. '(max' → logprob: -19.250335693359375
    9. '(
' → logprob: -19.500335693359375
    10. '((' → logprob: -20.000335693359375

Token 302: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -5.8961017202818766e-05
    2. '()' → logprob: -9.750059127807617
    3. ' ())' → logprob: -15.125059127807617
    4. '())
' → logprob: -15.625059127807617
    5. '();)' → logprob: -16.625059127807617
    6. '()))' → logprob: -16.625059127807617
    7. ')' → logprob: -17.375059127807617
    8. '())

' → logprob: -18.875059127807617
    9. '());' → logprob: -19.250059127807617
    10. '())
' → logprob: -19.625059127807617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 300
Tokens correctement prédits (1ère position, stricte): 109
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 203
Précision stricte (1ère position): 36.33%
Précision adaptée (1ère position): 38.67%
Précision (top 10): 67.67%
================================================================================
