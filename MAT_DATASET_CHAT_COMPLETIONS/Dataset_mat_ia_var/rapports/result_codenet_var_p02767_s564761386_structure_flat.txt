================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = [int(x) for x in input().rstrip().split()]
ave = sum(A) // len(A)
ans = 0
if N / 2 < (sum(A) % len(A)):
    ave += 1
i = 0
while i < len(A):
    ans += (A[i] - ave) ** 2
    i += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002943479048553854
    2. ''' → logprob: -8.75029468536377
    3. '`' → logprob: -10.00029468536377
    4. '```' → logprob: -10.62529468536377
    5. '(
' → logprob: -10.75029468536377
    6. '(N' → logprob: -11.00029468536377
    7. '\(' → logprob: -12.25029468536377
    8. ')' → logprob: -12.25029468536377
    9. '"' → logprob: -12.62529468536377
    10. '("("' → logprob: -12.87529468536377

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016465028747916222
    2. '.' → logprob: -7.501646518707275
    3. '[]' → logprob: -8.376646041870117
    4. '=' → logprob: -8.751646041870117
    5. '[A' → logprob: -9.001646041870117
    6. '\[' → logprob: -9.126646041870117
    7. '[i' → logprob: -9.251646041870117
    8. ' =' → logprob: -9.376646041870117
    9. '[:]' → logprob: -9.501646041870117
    10. '.append' → logprob: -10.001646041870117

Token 7: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8042125105857849
    2. ' list' → logprob: -0.9292125105857849
    3. ' []' → logprob: -2.4292125701904297
    4. '[]' → logprob: -3.1792125701904297
    5. ' [' → logprob: -3.9292125701904297
    6. '[' → logprob: -5.30421257019043
    7. '[list' → logprob: -6.67921257019043
    8. '[input' → logprob: -6.67921257019043
    9. 'input' → logprob: -8.05421257019043
    10. '[int' → logprob: -8.17921257019043

Token 8: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031251905020326376
    2. '0' → logprob: -6.003125190734863
    3. ']int' → logprob: -8.628125190734863
    4. ' int' → logprob: -8.753125190734863
    5. ')' → logprob: -9.253125190734863
    6. '(int' → logprob: -9.378125190734863
    7. ']' → logprob: -9.378125190734863
    8. 'i' → logprob: -11.003125190734863
    9. '*' → logprob: -11.503125190734863
    10. '[int' → logprob: -12.128125190734863

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011776171624660492
    2. '(input' → logprob: -4.636775970458984
    3. '()' → logprob: -6.386775970458984
    4. ')' → logprob: -9.136775970458984
    5. '(x' → logprob: -9.136775970458984
    6. '()]' → logprob: -9.761775970458984
    7. '(token' → logprob: -11.511775970458984
    8. ']' → logprob: -11.886775970458984
    9. '())' → logprob: -11.886775970458984
    10. '(a' → logprob: -12.011775970458984

Token 10: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019388488726690412
    2. ')]' → logprob: -9.12519359588623
    3. ' )' → logprob: -10.62519359588623
    4. '(' → logprob: -10.87519359588623
    5. 'input' → logprob: -11.50019359588623
    6. '(input' → logprob: -11.62519359588623
    7. '())' → logprob: -11.87519359588623
    8. 'for' → logprob: -12.12519359588623
    9. ')])' → logprob: -13.00019359588623
    10. '')' → logprob: -13.62519359588623

Token 11: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3958781659603119
    2. ')' → logprob: -1.7708781957626343
    3. ' for' → logprob: -1.8958781957626343
    4. '(input' → logprob: -6.020878314971924
    5. '(' → logprob: -6.520878314971924
    6. 'input' → logprob: -6.895878314971924
    7. ']' → logprob: -7.395878314971924
    8. ' ' → logprob: -8.270877838134766
    9. ')]' → logprob: -8.395877838134766
    10. ' )' → logprob: -8.895877838134766

Token 12: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.039229586720466614
    2. 'input' → logprob: -3.28922963142395
    3. '<|end|>' → logprob: -7.539229393005371
    4. '=input' → logprob: -8.914229393005371
    5. '(input' → logprob: -8.914229393005371
    6. ' range' → logprob: -9.164229393005371
    7. ' ' → logprob: -9.164229393005371
    8. ' x' → logprob: -9.664229393005371
    9. '_input' → logprob: -10.289229393005371
    10. '<|end|>' → logprob: -10.414229393005371

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02990945801138878
    2. 'in' → logprob: -3.529909372329712
    3. 'input' → logprob: -9.279909133911133
    4. '(' → logprob: -11.154909133911133
    5. ' ' → logprob: -11.154909133911133
    6. ')' → logprob: -11.904909133911133
    7. '(input' → logprob: -12.279909133911133
    8. '=input' → logprob: -12.404909133911133
    9. ' input' → logprob: -12.654909133911133
    10. '<|end|>' → logprob: -13.154909133911133

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38688910007476807
    2. ' input' → logprob: -1.136889100074768
    3. 'range' → logprob: -11.636889457702637
    4. ' range' → logprob: -11.886889457702637
    5. '(input' → logprob: -13.011889457702637
    6. '=input' → logprob: -17.13688850402832
    7. '<input' → logprob: -17.88688850402832
    8. ')' → logprob: -17.88688850402832
    9. ',input' → logprob: -18.13688850402832
    10. ' ' → logprob: -18.26188850402832

Token 15: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.018055815249681473
    2. '()' → logprob: -4.5180559158325195
    3. '().' → logprob: -5.0180559158325195
    4. '())' → logprob: -8.01805591583252
    5. '()].' → logprob: -11.01805591583252
    6. '(' → logprob: -11.51805591583252
    7. ')]' → logprob: -13.01805591583252
    8. ']' → logprob: -13.26805591583252
    9. ']()' → logprob: -13.39305591583252
    10. '()],' → logprob: -13.39305591583252

Token 16: 'rstrip' (ID: 180429)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.5861724831629544e-05
    2. 'strip' → logprob: -10.000056266784668
    3. 'rstrip' → logprob: -11.500056266784668
    4. ' split' → logprob: -15.375056266784668
    5. '(split' → logprob: -17.50005531311035
    6. 'spl' → logprob: -17.62505531311035
    7. 's' → logprob: -20.37505531311035
    8. 'sp' → logprob: -20.62505531311035
    9. 'replace' → logprob: -21.25005531311035
    10. '.split' → logprob: -21.37505531311035

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.021405506879091263
    2. '())' → logprob: -4.1464056968688965
    3. '()' → logprob: -6.2714056968688965
    4. '('' → logprob: -6.3964056968688965
    5. '()]' → logprob: -6.5214056968688965
    6. '(' → logprob: -9.146405220031738
    7. ')' → logprob: -9.646405220031738
    8. '()].' → logprob: -10.146405220031738
    9. '()).' → logprob: -10.646405220031738
    10. '('\' → logprob: -10.771405220031738

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'rstrip' → logprob: -14.000001907348633
    3. ' split' → logprob: -15.000001907348633
    4. 'spl' → logprob: -15.375001907348633
    5. 'strip' → logprob: -15.875001907348633
    6. ')' → logprob: -17.375001907348633
    7. '(split' → logprob: -17.875001907348633
    8. 's' → logprob: -18.250001907348633
    9. 'sp' → logprob: -18.500001907348633
    10. '.split' → logprob: -19.625001907348633

Token 19: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.6662672162055969
    2. '(' → logprob: -1.0412671566009521
    3. '('' → logprob: -2.291267156600952
    4. '())' → logprob: -3.791267156600952
    5. ')]' → logprob: -5.041267395019531
    6. '()' → logprob: -6.291267395019531
    7. ']' → logprob: -7.541267395019531
    8. '("' → logprob: -8.041267395019531
    9. ')' → logprob: -8.916267395019531
    10. '(','' → logprob: -8.916267395019531

Token 20: 'ave' (ID: 577)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2884259223937988
    2. 'c' → logprob: -1.5384259223937988
    3. 'A' → logprob: -2.038425922393799
    4. 'C' → logprob: -2.538425922393799
    5. 'S' → logprob: -2.913425922393799
    6. 'B' → logprob: -3.163425922393799
    7. 'M' → logprob: -3.163425922393799
    8. 'd' → logprob: -3.413425922393799
    9. 'for' → logprob: -3.538425922393799
    10. 'count' → logprob: -3.913425922393799

Token 21: ' =' (ID: 314)
  Prédit: 'rage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rage' → logprob: -0.0014467834262177348
    2. 'r' → logprob: -6.751446723937988
    3. '()' → logprob: -9.126446723937988
    4. '_r' → logprob: -10.001446723937988
    5. 'rag' → logprob: -10.251446723937988
    6. ' =' → logprob: -10.376446723937988
    7. '=' → logprob: -10.501446723937988
    8. ' rage' → logprob: -11.501446723937988
    9. '(r' → logprob: -12.251446723937988
    10. '(' → logprob: -12.626446723937988

Token 22: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.07008404284715652
    2. 'sum' → logprob: -2.6950840950012207
    3. '(sum' → logprob: -9.070083618164062
    4. ' ' → logprob: -10.695083618164062
    5. ' (' → logprob: -13.070083618164062
    6. ' float' → logprob: -13.820083618164062
    7. ' int' → logprob: -14.070083618164062
    8. '(' → logprob: -14.195083618164062
    9. '	sum' → logprob: -14.320083618164062
    10. ' su' → logprob: -14.445083618164062

Token 23: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.16023032367229462
    2. '(' → logprob: -1.910230278968811
    3. '(a' → logprob: -13.16023063659668
    4. '((' → logprob: -13.78523063659668
    5. '(
' → logprob: -14.41023063659668
    6. '(N' → logprob: -14.53523063659668
    7. '(

' → logprob: -14.53523063659668
    8. ' (' → logprob: -15.16023063659668
    9. '()' → logprob: -15.41023063659668
    10. '(sum' → logprob: -15.41023063659668

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029291924089193344
    2. '(A' → logprob: -3.779291868209839
    3. '(' → logprob: -5.404292106628418
    4. '(len' → logprob: -7.529292106628418
    5. ')/' → logprob: -8.154292106628418
    6. ' )' → logprob: -8.654292106628418
    7. '/' → logprob: -8.654292106628418
    8. '`)' → logprob: -9.154292106628418
    9. '(N' → logprob: -9.779292106628418
    10. '')' → logprob: -9.779292106628418

Token 25: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.0341899394989014
    2. '/' → logprob: -1.4091899394989014
    3. ' //' → logprob: -1.4091899394989014
    4. '(' → logprob: -2.5341899394989014
    5. ' /' → logprob: -3.2841899394989014
    6. '(len' → logprob: -3.4091899394989014
    7. 'len' → logprob: -6.5341901779174805
    8. '```' → logprob: -7.0341901779174805
    9. '()' → logprob: -7.4091901779174805
    10. ' len' → logprob: -7.4091901779174805

Token 26: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0034387463238090277
    2. ' N' → logprob: -6.253438949584961
    3. 'len' → logprob: -6.503438949584961
    4. ' len' → logprob: -11.503438949584961
    5. 'n' → logprob: -14.878438949584961
    6. ' ' → logprob: -16.12843894958496
    7. '(len' → logprob: -16.62843894958496
    8. '(' → logprob: -17.87843894958496
    9. '(N' → logprob: -18.25343894958496
    10. 'max' → logprob: -18.37843894958496

Token 27: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.07889628410339355
    2. '(' → logprob: -2.5788962841033936
    3. '(N' → logprob: -12.703896522521973
    4. '(
' → logprob: -14.328896522521973
    5. '(

' → logprob: -14.453896522521973
    6. '((' → logprob: -14.828896522521973
    7. ' (' → logprob: -15.078896522521973
    8. '(`' → logprob: -15.328896522521973
    9. '(B' → logprob: -15.453896522521973
    10. '(S' → logprob: -15.703896522521973

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3557529857498594e-05
    2. '))' → logprob: -10.87502384185791
    3. ' )' → logprob: -13.87502384185791
    4. '）' → logprob: -14.25002384185791
    5. '`)' → logprob: -14.62502384185791
    6. '')' → logprob: -14.62502384185791
    7. ')`' → logprob: -14.87502384185791
    8. ')
' → logprob: -15.12502384185791
    9. ')]' → logprob: -15.25002384185791
    10. ']' → logprob: -15.62502384185791

Token 29: 'ans' (ID: 616)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16602396965026855
    2. 'for' → logprob: -2.6660239696502686
    3. 'print' → logprob: -3.4160239696502686
    4. '\n' → logprob: -4.166024208068848
    5. 'result' → logprob: -4.791024208068848
    6. ' 
' → logprob: -5.291024208068848
    7. ' for' → logprob: -5.416024208068848
    8. '' → logprob: -6.041024208068848
    9. 's' → logprob: -6.416024208068848
    10. '```' → logprob: -6.541024208068848

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39153334498405457
    2. '_' → logprob: -1.516533374786377
    3. '=' → logprob: -2.266533374786377
    4. '_=' → logprob: -7.641533374786377
    5. ' +=' → logprob: -9.266532897949219
    6. ' ' → logprob: -9.391532897949219
    7. ' _' → logprob: -9.891532897949219
    8. '_space' → logprob: -11.016532897949219
    9. 's' → logprob: -11.266532897949219
    10. ')' → logprob: -11.516532897949219

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9568395018577576
    2. 'max' → logprob: -1.2068395614624023
    3. 'sum' → logprob: -1.7068395614624023
    4. 'abs' → logprob: -2.7068395614624023
    5. 'min' → logprob: -4.081839561462402
    6. ' max' → logprob: -4.706839561462402
    7. 'float' → logprob: -4.956839561462402
    8. ' sum' → logprob: -5.206839561462402
    9. '[max' → logprob: -5.206839561462402
    10. '[' → logprob: -5.331839561462402

Token 32: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.37963438034057617
    2. 'max' → logprob: -2.129634380340576
    3. 'abs' → logprob: -2.879634380340576
    4. 'A' → logprob: -2.879634380340576
    5. 'sum' → logprob: -3.254634380340576
    6. '0' → logprob: -3.879634380340576
    7. 'float' → logprob: -4.129634380340576
    8. 'None' → logprob: -5.754634380340576
    9. 'len' → logprob: -6.879634380340576
    10. '-' → logprob: -6.879634380340576

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04086267948150635
    2. '\n' → logprob: -3.915862560272217
    3. 'for' → logprob: -4.040862560272217
    4. ' for' → logprob: -6.540862560272217
    5. '
' → logprob: -7.290862560272217
    6. '```' → logprob: -8.915863037109375
    7. '\' → logprob: -9.415863037109375
    8. '<|end|>' → logprob: -9.415863037109375
    9. '' → logprob: -10.165863037109375
    10. '

' → logprob: -10.165863037109375

Token 34: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23576758801937103
    2. '\n' → logprob: -1.9857676029205322
    3. 'for' → logprob: -2.7357676029205322
    4. ' for' → logprob: -5.485767364501953
    5. '
' → logprob: -6.110767364501953
    6. '```' → logprob: -7.110767364501953
    7. '' → logprob: -7.735767364501953
    8. '\' → logprob: -9.110767364501953
    9. ' 
' → logprob: -10.110767364501953
    10. '

' → logprob: -10.235767364501953

Token 35: ' N' (ID: 478)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.24414792656898499
    2. ' abs' → logprob: -1.9941478967666626
    3. ' ave' → logprob: -3.494148015975952
    4. 'A' → logprob: -3.869148015975952
    5. 'abs' → logprob: -4.619147777557373
    6. ' len' → logprob: -5.619147777557373
    7. ' max' → logprob: -5.869147777557373
    8. ' ' → logprob: -5.869147777557373
    9. ' ans' → logprob: -6.244147777557373
    10. ' N' → logprob: -6.369147777557373

Token 36: ' /' (ID: 820)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011814815923571587
    2. '>' → logprob: -4.636814594268799
    3. ' ' → logprob: -7.261814594268799
    4. ' >=' → logprob: -7.636814594268799
    5. ' <' → logprob: -7.886814594268799
    6. ' ==' → logprob: -8.386815071105957
    7. ' <=' → logprob: -9.261815071105957
    8. '%' → logprob: -10.011815071105957
    9. ' %' → logprob: -10.011815071105957
    10. ' !=' → logprob: -10.261815071105957

Token 37: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6329468488693237
    2. ' ' → logprob: -0.7579468488693237
    3. ' len' → logprob: -9.257946968078613
    4. '3' → logprob: -9.632946968078613
    5. '4' → logprob: -10.257946968078613
    6. 'len' → logprob: -10.382946968078613
    7. '=' → logprob: -10.507946968078613
    8. '  ' → logprob: -11.007946968078613
    9. ' ave' → logprob: -11.007946968078613
    10. '1' → logprob: -11.257946968078613

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016519716009497643
    2. ' ' → logprob: -7.126651763916016
    3. 'ave' → logprob: -8.001651763916016
    4. '3' → logprob: -8.626651763916016
    5. 'len' → logprob: -8.626651763916016
    6. '1' → logprob: -9.876651763916016
    7. '4' → logprob: -10.376651763916016
    8. 'ans' → logprob: -11.626651763916016
    9. '5' → logprob: -11.751651763916016
    10. 'A' → logprob: -11.876651763916016

Token 39: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22315531969070435
    2. ' >=' → logprob: -2.8481552600860596
    3. ' ==' → logprob: -2.8481552600860596
    4. '>' → logprob: -3.4731552600860596
    5. ' <' → logprob: -3.5981552600860596
    6. ' <=' → logprob: -4.098155498504639
    7. '==' → logprob: -5.848155498504639
    8. ' ' → logprob: -6.098155498504639
    9. '>=' → logprob: -6.473155498504639
    10. '<' → logprob: -6.848155498504639

Token 40: ' (' (ID: 350)
  Prédit: 'ave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ave' → logprob: -0.6946724653244019
    2. ' ave' → logprob: -0.6946724653244019
    3. ' ' → logprob: -7.319672584533691
    4. '=' → logprob: -8.069672584533691
    5. 'ans' → logprob: -9.444672584533691
    6. '>' → logprob: -9.569672584533691
    7. 'av' → logprob: -9.944672584533691
    8. 'A' → logprob: -10.069672584533691
    9. '1' → logprob: -10.444672584533691
    10. ' A' → logprob: -10.694672584533691

Token 41: 'sum' (ID: 12298)
  Prédit: 'ave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ave' → logprob: -0.0757264718413353
    2. ' ave' → logprob: -2.8257265090942383
    3. 'A' → logprob: -5.075726509094238
    4. ')' → logprob: -5.825726509094238
    5. ' A' → logprob: -7.200726509094238
    6. ' ' → logprob: -7.200726509094238
    7. 'ans' → logprob: -7.325726509094238
    8. 'len' → logprob: -7.700726509094238
    9. '=' → logprob: -8.700726509094238
    10. '>' → logprob: -8.700726509094238

Token 42: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.22544269263744354
    2. 'A' → logprob: -1.97544264793396
    3. '([' → logprob: -4.100442886352539
    4. '(' → logprob: -4.100442886352539
    5. ' A' → logprob: -4.600442886352539
    6. ' (' → logprob: -5.350442886352539
    7. '(abs' → logprob: -5.475442886352539
    8. ')' → logprob: -5.850442886352539
    9. '(a' → logprob: -6.100442886352539
    10. '(x' → logprob: -6.850442886352539

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4523094594478607
    2. ' -' → logprob: -1.577309489250183
    3. '-' → logprob: -2.7023093700408936
    4. '+' → logprob: -3.4523093700408936
    5. ' )' → logprob: -4.077309608459473
    6. ' +' → logprob: -4.452309608459473
    7. '))' → logprob: -4.827309608459473
    8. ')-' → logprob: -5.077309608459473
    9. ' ' → logprob: -5.577309608459473
    10. '[' → logprob: -6.202309608459473

Token 44: ' %' (ID: 1851)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0747727155685425
    2. ')' → logprob: -1.3247727155685425
    3. '):' → logprob: -1.6997727155685425
    4. '+' → logprob: -2.824772834777832
    5. ' )' → logprob: -3.324772834777832
    6. ' ):' → logprob: -3.449772834777832
    7. ' +' → logprob: -3.574772834777832
    8. '-' → logprob: -3.949772834777832
    9. ' //' → logprob: -4.074772834777832
    10. ' ' → logprob: -5.449772834777832

Token 45: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8866215348243713
    2. 'len' → logprob: -1.5116214752197266
    3. ' N' → logprob: -1.6366214752197266
    4. '2' → logprob: -2.6366214752197266
    5. ' len' → logprob: -2.7616214752197266
    6. ' (' → logprob: -4.136621475219727
    7. ' ' → logprob: -4.761621475219727
    8. '(len' → logprob: -5.136621475219727
    9. '(' → logprob: -5.636621475219727
    10. ')' → logprob: -6.386621475219727

Token 46: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0005587508203461766
    2. '(' → logprob: -8.000558853149414
    3. 'A' → logprob: -8.625558853149414
    4. ')' → logprob: -10.375558853149414
    5. ' (' → logprob: -13.125558853149414
    6. '[A' → logprob: -13.375558853149414
    7. '(

' → logprob: -13.625558853149414
    8. '(
' → logprob: -14.000558853149414
    9. '```' → logprob: -14.000558853149414
    10. '(a' → logprob: -14.438058853149414

Token 47: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7156964540481567
    2. ')):' → logprob: -1.4656964540481567
    3. '))' → logprob: -1.5906964540481567
    4. '):' → logprob: -2.590696334838867
    5. ')):
' → logprob: -8.215696334838867
    6. ' ))' → logprob: -8.215696334838867
    7. ' )' → logprob: -8.215696334838867
    8. ')))' → logprob: -9.090696334838867
    9. ' ):' → logprob: -9.090696334838867
    10. ')==' → logprob: -9.340696334838867

Token 48: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4537642002105713
    2. ' ans' → logprob: -1.8287642002105713
    3. '1' → logprob: -2.4537642002105713
    4. '    ' → logprob: -3.2037642002105713
    5. ' 
' → logprob: -3.7037642002105713
    6. '   ' → logprob: -4.328763961791992
    7. '0' → logprob: -4.453763961791992
    8. '<|end|>' → logprob: -5.203763961791992
    9. ' ' → logprob: -5.453763961791992
    10. '(ans' → logprob: -5.578763961791992

Token 49: ' ave' (ID: 22175)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.014711393043398857
    2. 'ans' → logprob: -4.389711380004883
    3. '(ans' → logprob: -7.264711380004883
    4. '	ans' → logprob: -7.764711380004883
    5. '   ' → logprob: -8.139711380004883
    6. ' ' → logprob: -8.639711380004883
    7. ' ' → logprob: -8.639711380004883
    8. ' 
' → logprob: -9.139711380004883
    9. '    ' → logprob: -10.014711380004883
    10. '1' → logprob: -10.139711380004883

Token 50: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5739277601242065
    2. '+=' → logprob: -0.9489277601242065
    3. '+' → logprob: -3.073927879333496
    4. ' +' → logprob: -6.073927879333496
    5. ' =' → logprob: -7.698927879333496
    6. '=' → logprob: -8.073927879333496
    7. 's' → logprob: -9.823927879333496
    8. '++' → logprob: -10.198927879333496
    9. ']+=' → logprob: -10.448927879333496
    10. '<|end|>' → logprob: -10.698927879333496

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026181264547631145
    2. ' ' → logprob: -8.250262260437012
    3. '+' → logprob: -15.375262260437012
    4. '-' → logprob: -16.250261306762695
    5. '<|end|>' → logprob: -16.625261306762695
    6. ' ' → logprob: -17.250261306762695
    7. '2' → logprob: -17.250261306762695
    8. ' -' → logprob: -17.375261306762695
    9. '0' → logprob: -17.437761306762695
    10. '  ' → logprob: -17.625261306762695

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -15.75001049041748
    4. '+' → logprob: -16.125011444091797
    5. '0' → logprob: -16.375011444091797
    6. '-' → logprob: -16.750011444091797
    7. '2' → logprob: -17.687511444091797
    8. 'one' → logprob: -17.750011444091797
    9. '１' → logprob: -17.750011444091797
    10. '.' → logprob: -18.125011444091797

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029278850182890892
    2. '<|end|>' → logprob: -4.154278755187988
    3. '\n' → logprob: -5.029278755187988
    4. '  
' → logprob: -6.904278755187988
    5. ' 
' → logprob: -6.904278755187988
    6. ':' → logprob: -6.904278755187988
    7. ' ' → logprob: -7.279278755187988
    8. 'for' → logprob: -7.529278755187988
    9. ':
' → logprob: -7.779278755187988
    10. '
' → logprob: -7.779278755187988

Token 54: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04891526326537132
    2. ' for' → logprob: -3.548915147781372
    3. '
' → logprob: -4.298915386199951
    4. 'if' → logprob: -6.423915386199951
    5. '\n' → logprob: -6.673915386199951
    6. 'ans' → logprob: -7.798915386199951
    7. ' 
' → logprob: -7.923915386199951
    8. ' ' → logprob: -8.423914909362793
    9. ':' → logprob: -8.423914909362793
    10. '0' → logprob: -8.423914909362793

Token 55: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14747171103954315
    2. 'f' → logprob: -2.0224716663360596
    3. '=' → logprob: -6.272471904754639
    4. 'nd' → logprob: -6.647471904754639
    5. 'for' → logprob: -7.897471904754639
    6. '+' → logprob: -8.14747142791748
    7. ' =' → logprob: -8.77247142791748
    8. 'm' → logprob: -8.77247142791748
    9. 'nt' → logprob: -9.02247142791748
    10. 'd' → logprob: -9.64747142791748

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019335240125656128
    2. ' ' → logprob: -4.0193352699279785
    3. '1' → logprob: -7.5193352699279785
    4. 'N' → logprob: -7.7693352699279785
    5. ' N' → logprob: -9.14433479309082
    6. '2' → logprob: -9.89433479309082
    7. 'len' → logprob: -10.51933479309082
    8. ' len' → logprob: -11.26933479309082
    9. 'sum' → logprob: -12.26933479309082
    10. ' sum' → logprob: -13.01933479309082

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001229634741321206
    2. 'N' → logprob: -7.251229763031006
    3. '1' → logprob: -8.501229286193848
    4. ' ' → logprob: -8.626229286193848
    5. 'len' → logprob: -9.376229286193848
    6. '2' → logprob: -11.751229286193848
    7. '-' → logprob: -11.876229286193848
    8. 'sum' → logprob: -11.876229286193848
    9. 'min' → logprob: -12.376229286193848
    10. 'max' → logprob: -12.376229286193848

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21346314251422882
    2. '<|end|>' → logprob: -2.088463068008423
    3. ' while' → logprob: -2.838463068008423
    4. 'for' → logprob: -5.588463306427002
    5. '
' → logprob: -5.713463306427002
    6. 'i' → logprob: -6.838463306427002
    7. ' ' → logprob: -7.338463306427002
    8. '<|end|>' → logprob: -8.463462829589844
    9. ' for' → logprob: -8.713462829589844
    10. '```' → logprob: -8.838462829589844

Token 60: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011068098247051239
    2. 'i' → logprob: -4.511067867279053
    3. ' ' → logprob: -11.761068344116211
    4. '	i' → logprob: -12.386068344116211
    5. '<|end|>' → logprob: -12.511068344116211
    6. '(i' → logprob: -13.261068344116211
    7. 'N' → logprob: -13.886068344116211
    8. ' N' → logprob: -14.636068344116211
    9. ' ' → logprob: -15.511068344116211
    10. 'True' → logprob: -15.511068344116211

Token 61: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01111419778317213
    2. '<' → logprob: -4.511114120483398
    3. ' ' → logprob: -10.011114120483398
    4. '<len' → logprob: -11.511114120483398
    5. ' <=' → logprob: -11.886114120483398
    6. '<N' → logprob: -13.511114120483398
    7. ' *' → logprob: -14.136114120483398
    8. '*' → logprob: -14.761114120483398
    9. '<n' → logprob: -14.886114120483398
    10. '<|end|>' → logprob: -15.011114120483398

Token 62: ' len' (ID: 4631)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6398807764053345
    2. 'N' → logprob: -0.7648807764053345
    3. ' len' → logprob: -5.264880657196045
    4. 'len' → logprob: -6.264880657196045
    5. ' ' → logprob: -8.764881134033203
    6. '  ' → logprob: -11.764881134033203
    7. 'n' → logprob: -12.014881134033203
    8. ' n' → logprob: -12.952381134033203
    9. '(len' → logprob: -13.327381134033203
    10. '	N' → logprob: -13.327381134033203

Token 63: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.000488811288960278
    2. '(' → logprob: -7.625488758087158
    3. '(N' → logprob: -15.375489234924316
    4. 'A' → logprob: -16.12548828125
    5. '(
' → logprob: -16.50048828125
    6. '(a' → logprob: -16.62548828125
    7. ' (' → logprob: -16.62548828125
    8. '(S' → logprob: -17.25048828125
    9. '(B' → logprob: -17.25048828125
    10. '((' → logprob: -17.62548828125

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009049764834344387
    2. ')' → logprob: -4.884049892425537
    3. '):
' → logprob: -7.259049892425537
    4. ' ):' → logprob: -7.384049892425537
    5. ':' → logprob: -9.509049415588379
    6. ' and' → logprob: -10.634049415588379
    7. 'and' → logprob: -11.759049415588379
    8. ' )' → logprob: -12.259049415588379
    9. '):
' → logprob: -13.384049415588379
    10. '):

' → logprob: -13.759049415588379

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16000157594680786
    2. '<|end|>' → logprob: -2.410001516342163
    3. ' ' → logprob: -3.535001516342163
    4. ' 
' → logprob: -4.410001754760742
    5. '    
' → logprob: -5.535001754760742
    6. '<|end|>' → logprob: -5.660001754760742
    7. '
' → logprob: -5.785001754760742
    8. '    ' → logprob: -6.160001754760742
    9. ' if' → logprob: -6.410001754760742
    10. '  ' → logprob: -7.660001754760742

Token 66: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3470386862754822
    2. ' if' → logprob: -2.097038745880127
    3. '<|end|>' → logprob: -2.472038745880127
    4. '
' → logprob: -3.472038745880127
    5. ' ans' → logprob: -3.597038745880127
    6. ' 
' → logprob: -4.847038745880127
    7. '    ' → logprob: -5.222038745880127
    8. ' i' → logprob: -5.347038745880127
    9. ' ' → logprob: -5.847038745880127
    10. '<|end|>' → logprob: -6.097038745880127

Token 67: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20181666314601898
    2. '+=' → logprob: -1.7018166780471802
    3. '+=(' → logprob: -8.45181655883789
    4. '+' → logprob: -9.70181655883789
    5. ' -=' → logprob: -10.20181655883789
    6. ' =' → logprob: -10.32681655883789
    7. '=' → logprob: -11.07681655883789
    8. ' ^=' → logprob: -11.32681655883789
    9. ' |=' → logprob: -12.20181655883789
    10. ' ' → logprob: -12.20181655883789

Token 68: ' (' (ID: 350)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.5984901785850525
    2. ' (' → logprob: -1.4734902381896973
    3. '(abs' → logprob: -2.0984902381896973
    4. 'abs' → logprob: -2.3484902381896973
    5. '(' → logprob: -6.348490238189697
    6. '(A' → logprob: -6.848490238189697
    7. ' ' → logprob: -9.223489761352539
    8. '(max' → logprob: -10.348489761352539
    9. ' max' → logprob: -10.598489761352539
    10. '(min' → logprob: -11.473489761352539

Token 69: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.15254077315330505
    2. '(A' → logprob: -2.777540683746338
    3. ' A' → logprob: -3.027540683746338
    4. 'abs' → logprob: -3.777540683746338
    5. '(abs' → logprob: -6.027540683746338
    6. ' abs' → logprob: -6.277540683746338
    7. ' (' → logprob: -6.777540683746338
    8. 'ave' → logprob: -6.902540683746338
    9. '(' → logprob: -7.527540683746338
    10. ')' → logprob: -7.652540683746338

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.875003814697266
    3. 'i' → logprob: -15.000003814697266
    4. ' [' → logprob: -15.125003814697266
    5. ')' → logprob: -15.375003814697266
    6. '[
' → logprob: -16.875003814697266
    7. ' -' → logprob: -16.875003814697266
    8. ' ' → logprob: -17.000003814697266
    9. '[I' → logprob: -17.625003814697266
    10. ')[' → logprob: -18.250003814697266

Token 71: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14366969466209412
    2. '-' → logprob: -2.018669605255127
    3. ')' → logprob: -7.143669605255127
    4. ']' → logprob: -9.268670082092285
    5. ' ' → logprob: -9.893670082092285
    6. ')-' → logprob: -11.018670082092285
    7. ' )' → logprob: -11.643670082092285
    8. ']-' → logprob: -11.893670082092285
    9. '   ' → logprob: -12.768670082092285
    10. '-ai' → logprob: -12.768670082092285

Token 72: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38688692450523376
    2. '-' → logprob: -1.1368869543075562
    3. ' ' → logprob: -11.761886596679688
    4. ')' → logprob: -12.386886596679688
    5. ' ' → logprob: -13.886886596679688
    6. '-av' → logprob: -14.261886596679688
    7. '+' → logprob: -14.886886596679688
    8. '-remove' → logprob: -15.386886596679688
    9. '-ai' → logprob: -15.636886596679688
    10. '-)' → logprob: -15.636886596679688

Token 73: ' ave' (ID: 22175)
  Prédit: ' ave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ave' → logprob: -0.4754200577735901
    2. 'ave' → logprob: -0.9754200577735901
    3. ')' → logprob: -6.725419998168945
    4. ' av' → logprob: -11.225419998168945
    5. ' ' → logprob: -11.350419998168945
    6. ' ' → logprob: -11.475419998168945
    7. ' )' → logprob: -11.850419998168945
    8. 'average' → logprob: -11.975419998168945
    9. ' ava' → logprob: -11.975419998168945
    10. 've' → logprob: -12.100419998168945

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02994370274245739
    2. ')**' → logprob: -3.5299437046051025
    3. ' )' → logprob: -8.654943466186523
    4. ')*(' → logprob: -11.279943466186523
    5. ')*' → logprob: -12.404943466186523
    6. '   ' → logprob: -14.279943466186523
    7. '）' → logprob: -14.404943466186523
    8. ' ' → logprob: -15.529943466186523
    9. '")' → logprob: -15.779943466186523
    10. '    ' → logprob: -16.404943466186523

Token 75: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1242714673280716
    2. '*i' → logprob: -2.8742713928222656
    3. '2' → logprob: -3.1242713928222656
    4. '*' → logprob: -4.999271392822266
    5. ' **' → logprob: -5.499271392822266
    6. ' ' → logprob: -5.749271392822266
    7. ')' → logprob: -6.624271392822266
    8. ' i' → logprob: -8.249271392822266
    9. 'i' → logprob: -8.374271392822266
    10. ' *' → logprob: -8.749271392822266

Token 76: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00219273311085999
    2. ' ' → logprob: -6.127192497253418
    3. '۲' → logprob: -13.002192497253418
    4. '<|end|>' → logprob: -13.502192497253418
    5. '²' → logprob: -13.752192497253418
    6. '２' → logprob: -14.689692497253418
    7. '```' → logprob: -14.689692497253418
    8. '٢' → logprob: -14.939692497253418
    9. '२' → logprob: -15.314692497253418
    10. '২' → logprob: -16.064693450927734

Token 77: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012166214582975954
    2. ' ' → logprob: -9.1251220703125
    3. '21' → logprob: -13.1251220703125
    4. '22' → logprob: -13.3126220703125
    5. '1' → logprob: -13.3751220703125
    6. '۲' → logprob: -13.8126220703125
    7. '27' → logprob: -14.2501220703125
    8. '26' → logprob: -14.3751220703125
    9. '²' → logprob: -14.4376220703125
    10. '29' → logprob: -14.6876220703125

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31221064925193787
    2. ' i' → logprob: -2.1872105598449707
    3. 'i' → logprob: -2.8122105598449707
    4. '   ' → logprob: -3.4372105598449707
    5. '\n' → logprob: -4.062210559844971
    6. '	i' → logprob: -4.687210559844971
    7. ' ' → logprob: -4.812210559844971
    8. '  
' → logprob: -4.937210559844971
    9. '<|end|>' → logprob: -5.437210559844971
    10. ' 
' → logprob: -5.562210559844971

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08140131086111069
    2. '
' → logprob: -3.7064013481140137
    3. ' i' → logprob: -3.7064013481140137
    4. '\n' → logprob: -4.456401348114014
    5. '	i' → logprob: -4.956401348114014
    6. 'i' → logprob: -5.581401348114014
    7. '\' → logprob: -6.456401348114014
    8. '    
' → logprob: -6.456401348114014
    9. '  
' → logprob: -7.331401348114014
    10. '[i' → logprob: -7.456401348114014

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.46519479155540466
    2. '   ' → logprob: -1.340194821357727
    3. ' i' → logprob: -2.2151947021484375
    4. '	i' → logprob: -7.0901947021484375
    5. ',i' → logprob: -9.340194702148438
    6. '  ' → logprob: -10.090194702148438
    7. ' ' → logprob: -10.465194702148438
    8. '[i' → logprob: -10.590194702148438
    9. '<|end|>' → logprob: -11.215194702148438
    10. '
' → logprob: -12.090194702148438

Token 81: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2369127720594406
    2. '+' → logprob: -1.736912727355957
    3. ' +=' → logprob: -3.361912727355957
    4. '++' → logprob: -8.861912727355957
    5. ' +' → logprob: -10.236912727355957
    6. '<|end|>' → logprob: -11.486912727355957
    7. '+++' → logprob: -11.861912727355957
    8. '=' → logprob: -11.986912727355957
    9. '+='' → logprob: -13.111912727355957
    10. '+="' → logprob: -13.611912727355957

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '```' → logprob: -17.75103187561035
    4. '   ' → logprob: -18.25103187561035
    5. ' ' → logprob: -19.00103187561035
    6. '１' → logprob: -19.12603187561035
    7. '2' → logprob: -19.50103187561035
    8. '+' → logprob: -19.68853187561035
    9. '<|end|>' → logprob: -19.81353187561035
    10. '  ' → logprob: -19.81353187561035

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.375
    4. '<|end|>' → logprob: -19.5
    5. '１' → logprob: -19.875
    6. '   ' → logprob: -20.0
    7. '2' → logprob: -20.1875
    8. '  ' → logprob: -20.9375
    9. '+' → logprob: -21.0625
    10. '
' → logprob: -21.4375

Token 84: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16299782693386078
    2. '
' → logprob: -1.912997841835022
    3. ' print' → logprob: -6.662997722625732
    4. '<|end|>' → logprob: -7.162997722625732
    5. '
' → logprob: -7.912997722625732
    6. '\n' → logprob: -8.66299819946289
    7. ')' → logprob: -9.91299819946289
    8. ' 
' → logprob: -10.28799819946289
    9. '```' → logprob: -11.03799819946289
    10. '#' → logprob: -11.41299819946289

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00047106825513765216
    2. '
' → logprob: -7.750471115112305
    3. ' print' → logprob: -11.125471115112305
    4. '<|end|>' → logprob: -11.500471115112305
    5. '```' → logprob: -12.000471115112305
    6. ')' → logprob: -12.125471115112305
    7. '\n' → logprob: -14.000471115112305
    8. '\' → logprob: -14.750471115112305
    9. '#' → logprob: -14.875471115112305
    10. ')
' → logprob: -15.000471115112305

Token 86: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759924650192261
    2. '(ans' → logprob: -0.8259924650192261
    3. '()' → logprob: -11.075992584228516
    4. '((' → logprob: -11.700992584228516
    5. '('' → logprob: -12.200992584228516
    6. ' (' → logprob: -12.200992584228516
    7. '(abs' → logprob: -12.200992584228516
    8. '(sum' → logprob: -12.825992584228516
    9. '(A' → logprob: -13.325992584228516
    10. '(
' → logprob: -13.575992584228516

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.250001907348633
    3. '))' → logprob: -15.500001907348633
    4. ')
' → logprob: -16.750001907348633
    5. ')`' → logprob: -16.875001907348633
    6. '）' → logprob: -17.375001907348633
    7. ')#' → logprob: -18.125001907348633
    8. ')}' → logprob: -18.500001907348633
    9. '),' → logprob: -18.625001907348633
    10. '#' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 85
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 42.35%
Précision adaptée (1ère position): 43.53%
Précision (top 10): 82.35%
================================================================================
