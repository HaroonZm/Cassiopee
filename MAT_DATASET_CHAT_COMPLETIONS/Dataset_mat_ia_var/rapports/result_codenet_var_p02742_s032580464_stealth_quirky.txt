================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import exit as bye
H,W=[*map(int,input().split())]
def o(x):print(x)
if 1 in (H,W):
 o(1);bye()
X=(H//2)*W
if H&1:
 if W&1:X+=W//2+1
 else:X+=W/2
o(int(X))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' exit' (ID: 10654)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.03843686729669571
    2. ' argv' → logprob: -4.0384368896484375
    3. 'exit' → logprob: -4.1634368896484375
    4. 'stdout' → logprob: -6.4134368896484375
    5. ' exit' → logprob: -7.0384368896484375
    6. 'path' → logprob: -7.1634368896484375
    7. 'stdin' → logprob: -7.1634368896484375
    8. 'import' → logprob: -8.288436889648438
    9. 'version' → logprob: -9.663436889648438
    10. 'stderr' → logprob: -9.663436889648438

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09986744821071625
    2. '\n' → logprob: -2.974867343902588
    3. '()' → logprob: -4.224867343902588
    4. '\' → logprob: -4.724867343902588
    5. '.' → logprob: -4.849867343902588
    6. '
' → logprob: -5.474867343902588
    7. '```' → logprob: -6.224867343902588
    8. '(
' → logprob: -6.724867343902588
    9. 'newline' → logprob: -6.724867343902588
    10. '\(' → logprob: -7.099867343902588

Token 5: ' bye' (ID: 75100)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.025264931842684746
    2. '_exit' → logprob: -4.025264739990234
    3. ' exit' → logprob: -5.025264739990234
    4. 'ex' → logprob: -8.400264739990234
    5. 'Exit' → logprob: -9.400264739990234
    6. '_' → logprob: -9.900264739990234
    7. 'e' → logprob: -9.900264739990234
    8. 'sys' → logprob: -9.900264739990234
    9. '(exit' → logprob: -11.650264739990234
    10. 'error' → logprob: -11.900264739990234

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15969933569431305
    2. '\' → logprob: -2.6596994400024414
    3. '\n' → logprob: -3.2846994400024414
    4. '.' → logprob: -4.284699440002441
    5. ',' → logprob: -5.159699440002441
    6. 'newline' → logprob: -5.159699440002441
    7. '()' → logprob: -5.409699440002441
    8. '
' → logprob: -5.909699440002441
    9. '\(' → logprob: -6.159699440002441
    10. '```' → logprob: -6.909699440002441

Token 7: 'H' (ID: 39)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0297242403030396
    2. '
' → logprob: -1.5297242403030396
    3. '\n' → logprob: -2.27972412109375
    4. '\' → logprob: -2.52972412109375
    5. 'newline' → logprob: -2.52972412109375
    6. '```' → logprob: -3.52972412109375
    7. ',' → logprob: -3.65472412109375
    8. '()' → logprob: -3.77972412109375
    9. ':' → logprob: -3.90472412109375
    10. '<|end|>' → logprob: -3.90472412109375

Token 8: ',W' (ID: 117252)
  Prédit: 'ello'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ello' → logprob: -0.05507173389196396
    2. 'T' → logprob: -3.9300718307495117
    3. 'e' → logprob: -3.9300718307495117
    4. 'I' → logprob: -5.055071830749512
    5. 'ey' → logprob: -6.055071830749512
    6. 'i' → logprob: -6.305071830749512
    7. 'elp' → logprob: -6.805071830749512
    8. 'EL' → logprob: -7.430071830749512
    9. 'el' → logprob: -7.930071830749512
    10. '   ' → logprob: -8.180071830749512

Token 9: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09652266651391983
    2. '=' → logprob: -2.471522569656372
    3. ',' → logprob: -5.221522808074951
    4. ' ' → logprob: -6.346522808074951
    5. ' ,' → logprob: -8.346522331237793
    6. '[' → logprob: -9.721522331237793
    7. ')' → logprob: -9.971522331237793
    8. ' =
' → logprob: -11.221522331237793
    9. ' =)' → logprob: -11.471522331237793
    10. '.' → logprob: -11.846522331237793

Token 10: '*' (ID: 9)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005787058267742395
    2. '*' → logprob: -5.505786895751953
    3. '0' → logprob: -6.505786895751953
    4. ' int' → logprob: -9.005786895751953
    5. 'map' → logprob: -10.255786895751953
    6. ']int' → logprob: -10.255786895751953
    7. '(int' → logprob: -12.255786895751953
    8. '[int' → logprob: -12.630786895751953
    9. 'input' → logprob: -13.130786895751953
    10. ' ' → logprob: -13.130786895751953

Token 11: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.001179512357339263
    2. ' map' → logprob: -6.7511796951293945
    3. '(map' → logprob: -12.001179695129395
    4. 'input' → logprob: -12.876179695129395
    5. '	map' → logprob: -15.001179695129395
    6. 'open' → logprob: -16.376178741455078
    7. '```' → logprob: -16.751178741455078
    8. ' ' → logprob: -17.126178741455078
    9. '.map' → logprob: -17.376178741455078
    10. 'range' → logprob: -17.751178741455078

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0018150020623579621
    2. 'int' → logprob: -6.626814842224121
    3. '(' → logprob: -8.126814842224121
    4. '(str' → logprob: -9.001814842224121
    5. ',int' → logprob: -11.251814842224121
    6. '<int' → logprob: -11.376814842224121
    7. '(ord' → logprob: -11.376814842224121
    8. '(input' → logprob: -11.876814842224121
    9. ']int' → logprob: -11.876814842224121
    10. 'str' → logprob: -12.376814842224121

Token 13: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06459260731935501
    2. 'input' → logprob: -2.9395925998687744
    3. '(' → logprob: -5.5645928382873535
    4. ')' → logprob: -5.8145928382873535
    5. ',input' → logprob: -6.1895928382873535
    6. ' input' → logprob: -7.4395928382873535
    7. '=input' → logprob: -10.064592361450195
    8. '(stdin' → logprob: -10.314592361450195
    9. ',' → logprob: -10.689592361450195
    10. '(raw' → logprob: -10.814592361450195

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001081279362551868
    2. '())' → logprob: -7.001081466674805
    3. '()' → logprob: -8.751081466674805
    4. '()]' → logprob: -12.126081466674805
    5. '()))' → logprob: -13.376081466674805
    6. '());' → logprob: -13.876081466674805
    7. ' ().' → logprob: -14.376081466674805
    8. ')' → logprob: -14.501081466674805
    9. '()].' → logprob: -14.626081466674805
    10. '()>' → logprob: -15.126081466674805

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003517894074320793
    2. 'strip' → logprob: -8.000351905822754
    3. 'rstrip' → logprob: -11.375351905822754
    4. ' split' → logprob: -12.625351905822754
    5. '(split' → logprob: -13.625351905822754
    6. ')' → logprob: -16.000350952148438
    7. 'read' → logprob: -16.000350952148438
    8. 'spl' → logprob: -16.500350952148438
    9. '().' → logprob: -17.250350952148438
    10. '_split' → logprob: -17.500350952148438

Token 16: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2539888918399811
    2. ')]' → logprob: -1.6289888620376587
    3. ')' → logprob: -4.503988742828369
    4. '))' → logprob: -4.753988742828369
    5. '()))' → logprob: -5.128988742828369
    6. ')])' → logprob: -6.628988742828369
    7. '()' → logprob: -7.628988742828369
    8. '()]' → logprob: -7.628988742828369
    9. '(' → logprob: -8.628989219665527
    10. '('' → logprob: -11.003989219665527

Token 17: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0015124812489375472
    2. ')' → logprob: -6.75151252746582
    3. ']' → logprob: -8.75151252746582
    4. ')])' → logprob: -9.12651252746582
    5. ')],' → logprob: -10.37651252746582
    6. ')]
' → logprob: -10.75151252746582
    7. '])' → logprob: -12.12651252746582
    8. '])]' → logprob: -12.37651252746582
    9. ')][' → logprob: -13.00151252746582
    10. '),' → logprob: -13.25151252746582

Token 18: 'def' (ID: 1314)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.8690803647041321
    2. 'for' → logprob: -1.9940803050994873
    3. 'a' → logprob: -2.7440803050994873
    4. '```' → logprob: -3.1190803050994873
    5. '
' → logprob: -3.2440803050994873
    6. 's' → logprob: -3.4940803050994873
    7. 'matrix' → logprob: -3.4940803050994873
    8. 'A' → logprob: -3.4940803050994873
    9. 'field' → logprob: -3.6190803050994873
    10. '\n' → logprob: -3.7440803050994873

Token 19: ' o' (ID: 293)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.28192251920700073
    2. ' solve' → logprob: -1.5319225788116455
    3. ' solution' → logprob: -3.9069225788116455
    4. ' dfs' → logprob: -5.656922340393066
    5. ' f' → logprob: -5.906922340393066
    6. ' resolve' → logprob: -7.906922340393066
    7. ' bfs' → logprob: -8.156922340393066
    8. 'solve' → logprob: -8.156922340393066
    9. ' solver' → logprob: -8.531922340393066
    10. ' s' → logprob: -8.531922340393066

Token 20: '(x' (ID: 4061)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.0386558435857296
    2. 'u' → logprob: -3.6636557579040527
    3. 'pen' → logprob: -5.663655757904053
    4. 'p' → logprob: -6.413655757904053
    5. 'b' → logprob: -6.663655757904053
    6. 'n' → logprob: -6.663655757904053
    7. '()' → logprob: -7.413655757904053
    8. '(u' → logprob: -7.413655757904053
    9. '():' → logprob: -7.788655757904053
    10. '(n' → logprob: -8.038656234741211

Token 21: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027349782176315784
    2. ')' → logprob: -6.002735137939453
    3. ',' → logprob: -9.002735137939453
    4. ' ):' → logprob: -9.627735137939453
    5. '[' → logprob: -11.502735137939453
    6. '):
' → logprob: -11.502735137939453
    7. '_' → logprob: -11.502735137939453
    8. ':' → logprob: -11.752735137939453
    9. ')：' → logprob: -12.002735137939453
    10. ''):' → logprob: -13.252735137939453

Token 22: 'print' (ID: 1598)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21209588646888733
    2. ' print' → logprob: -2.0870959758758545
    3. ' for' → logprob: -4.087095737457275
    4. ' x' → logprob: -4.212095737457275
    5. ' if' → logprob: -4.712095737457275
    6. 'print' → logprob: -4.962095737457275
    7. '   ' → logprob: -5.337095737457275
    8. 'return' → logprob: -5.462095737457275
    9. ' ' → logprob: -5.837095737457275
    10. ' r' → logprob: -6.712095737457275

Token 23: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.18272796273231506
    2. '(' → logprob: -1.8077279329299927
    3. '(*' → logprob: -6.307727813720703
    4. '(f' → logprob: -7.682727813720703
    5. '(chr' → logprob: -8.307727813720703
    6. '((' → logprob: -8.557727813720703
    7. '('' → logprob: -9.182727813720703
    8. '()' → logprob: -9.682727813720703
    9. '(o' → logprob: -11.557727813720703
    10. '(abs' → logprob: -11.557727813720703

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024620062322355807
    2. '))' → logprob: -8.375246047973633
    3. ' )' → logprob: -12.250246047973633
    4. ')))' → logprob: -12.875246047973633
    5. ')`' → logprob: -13.125246047973633
    6. ')}' → logprob: -13.500246047973633
    7. ')}}' → logprob: -14.500246047973633
    8. '(' → logprob: -14.625246047973633
    9. ')")' → logprob: -14.625246047973633
    10. ')
' → logprob: -14.750246047973633

Token 25: 'if' (ID: 366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6233439445495605
    2. ' ' → logprob: -2.3733439445495605
    3. '\n' → logprob: -2.7483439445495605
    4. '.' → logprob: -2.9983439445495605
    5. ')' → logprob: -3.3733439445495605
    6. '_' → logprob: -3.3733439445495605
    7. '\' → logprob: -3.6233439445495605
    8. '<|end|>' → logprob: -3.6233439445495605
    9. '[' → logprob: -3.7483439445495605
    10. 'x' → logprob: -4.3733439445495605

Token 26: ' ' (ID: 220)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.251232385635376
    2. ' ' → logprob: -1.876232385635376
    3. ' W' → logprob: -3.626232385635376
    4. 'H' → logprob: -3.876232385635376
    5. ' not' → logprob: -4.126232147216797
    6. ' x' → logprob: -6.251232147216797
    7. ' __' → logprob: -7.126232147216797
    8. '__' → logprob: -7.626232147216797
    9. 'W' → logprob: -7.876232147216797
    10. 'not' → logprob: -8.001232147216797

Token 27: '1' (ID: 16)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.44111576676368713
    2. ' H' → logprob: -1.0661157369613647
    3. ' W' → logprob: -6.066115856170654
    4. 'x' → logprob: -6.191115856170654
    5. ' __' → logprob: -6.316115856170654
    6. 'W' → logprob: -6.441115856170654
    7. ' ' → logprob: -6.816115856170654
    8. '__' → logprob: -6.816115856170654
    9. ' not' → logprob: -6.941115856170654
    10. ' x' → logprob: -7.316115856170654

Token 28: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8948659300804138
    2. ' <' → logprob: -1.5198659896850586
    3. ' <=' → logprob: -2.2698659896850586
    4. '==' → logprob: -2.3948659896850586
    5. ':' → logprob: -3.1448659896850586
    6. '+' → logprob: -3.5198659896850586
    7. ' >' → logprob: -3.7698659896850586
    8. '0' → logprob: -4.269865989685059
    9. ' >=' → logprob: -4.269865989685059
    10. '<' → logprob: -4.519865989685059

Token 29: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13862496614456177
    2. ' [' → logprob: -2.263624906539917
    3. '{' → logprob: -4.763625144958496
    4. ' (' → logprob: -5.138625144958496
    5. ' H' → logprob: -5.763625144958496
    6. '(H' → logprob: -6.013625144958496
    7. 'H' → logprob: -6.138625144958496
    8. '[x' → logprob: -6.263625144958496
    9. ' {' → logprob: -8.138625144958496
    10. ' ' → logprob: -8.763625144958496

Token 30: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.027814343571662903
    2. ' H' → logprob: -3.6528143882751465
    3. 'x' → logprob: -7.5278143882751465
    4. '[' → logprob: -8.402813911437988
    5. '(H' → logprob: -8.527813911437988
    6. '{' → logprob: -8.652813911437988
    7. ' ' → logprob: -9.152813911437988
    8. ' (' → logprob: -9.652813911437988
    9. ' x' → logprob: -10.277813911437988
    10. ' [' → logprob: -10.527813911437988

Token 31: ',W' (ID: 117252)
  Prédit: ',W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.018846241757273674
    2. ',' → logprob: -4.143846035003662
    3. ' ,' → logprob: -5.893846035003662
    4. ',H' → logprob: -11.39384651184082
    5. 'W' → logprob: -11.76884651184082
    6. ',*' → logprob: -12.51884651184082
    7. ',w' → logprob: -12.51884651184082
    8. ',)' → logprob: -13.01884651184082
    9. ' W' → logprob: -13.14384651184082
    10. '

' → logprob: -13.39384651184082

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.041674502193927765
    2. ',' → logprob: -3.6666746139526367
    3. ')' → logprob: -4.541674613952637
    4. ' ):' → logprob: -5.541674613952637
    5. ')==' → logprob: -7.791674613952637
    6. ' ,' → logprob: -9.416674613952637
    7. ' or' → logprob: -10.416674613952637
    8. ' )' → logprob: -11.041674613952637
    9. ',)' → logprob: -11.041674613952637
    10. ' ' → logprob: -11.041674613952637

Token 33: ' o' (ID: 293)
  Prédit: ' bye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bye' → logprob: -0.5641549825668335
    2. '   ' → logprob: -1.0641549825668335
    3. ' ' → logprob: -3.189155101776123
    4. 'bye' → logprob: -3.689155101776123
    5. ' o' → logprob: -4.314155101776123
    6. '```' → logprob: -6.314155101776123
    7. 'o' → logprob: -6.939155101776123
    8. ' for' → logprob: -7.439155101776123
    9. ' ' → logprob: -7.689155101776123
    10. ' by' → logprob: -7.814155101776123

Token 34: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04980938509106636
    2. '(x' → logprob: -3.299809455871582
    3. ' (' → logprob: -5.674809455871582
    4. '(H' → logprob: -6.299809455871582
    5. '(o' → logprob: -6.424809455871582
    6. '(W' → logprob: -6.799809455871582
    7. '(n' → logprob: -7.174809455871582
    8. '()' → logprob: -7.674809455871582
    9. '(b' → logprob: -7.799809455871582
    10. '(y' → logprob: -7.799809455871582

Token 35: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9818766713142395
    2. '1' → logprob: -1.6068766117095947
    3. '"H' → logprob: -2.1068766117095947
    4. '"*' → logprob: -2.2318766117095947
    5. '0' → logprob: -2.8568766117095947
    6. ''H' → logprob: -3.7318766117095947
    7. ''' → logprob: -3.8568766117095947
    8. ''*' → logprob: -3.9818766117095947
    9. '"#' → logprob: -3.9818766117095947
    10. 'max' → logprob: -4.106876850128174

Token 36: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005078752990812063
    2. '0' → logprob: -5.8800787925720215
    3. ' )' → logprob: -6.7550787925720215
    4. ')
' → logprob: -7.2550787925720215
    5. '*' → logprob: -9.255078315734863
    6. '))' → logprob: -9.630078315734863
    7. ');' → logprob: -9.755078315734863
    8. ' ' → logprob: -10.880078315734863
    9. ')return' → logprob: -10.880078315734863
    10. '+' → logprob: -11.005078315734863

Token 37: 'bye' (ID: 43571)
  Prédit: 'bye'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bye' → logprob: -0.05580547824501991
    2. 'exit' → logprob: -3.3058054447174072
    3. ' bye' → logprob: -4.180805683135986
    4. ' exit' → logprob: -6.930805683135986
    5. '```' → logprob: -7.555805683135986
    6. ' ' → logprob: -8.805805206298828
    7. '\' → logprob: -9.430805206298828
    8. 'quit' → logprob: -9.555805206298828
    9. '
' → logprob: -9.680805206298828
    10. 'b' → logprob: -9.680805206298828

Token 38: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9446437954902649
    2. ' 
' → logprob: -1.3196437358856201
    3. '\n' → logprob: -2.06964373588562
    4. ' ' → logprob: -2.31964373588562
    5. '<|end|>' → logprob: -3.06964373588562
    6. '  
' → logprob: -3.44464373588562
    7. '```' → logprob: -4.569643974304199
    8. ')' → logprob: -4.694643974304199
    9. 'newline' → logprob: -5.444643974304199
    10. '' → logprob: -5.569643974304199

Token 39: 'X' (ID: 55)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7726538777351379
    2. ' ' → logprob: -1.6476538181304932
    3. '\n' → logprob: -1.6476538181304932
    4. '0' → logprob: -3.147653818130493
    5. '#' → logprob: -3.772653818130493
    6. ')' → logprob: -4.147654056549072
    7. '[' → logprob: -4.272654056549072
    8. '\' → logprob: -4.272654056549072
    9. '  
' → logprob: -4.397654056549072
    10. '*' → logprob: -5.272654056549072

Token 40: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07562291622161865
    2. ' =' → logprob: -3.450623035430908
    3. '*' → logprob: -4.450623035430908
    4. '=int' → logprob: -5.200623035430908
    5. '=max' → logprob: -5.200623035430908
    6. ',' → logprob: -5.575623035430908
    7. '-' → logprob: -5.700623035430908
    8. '**' → logprob: -6.075623035430908
    9. '*=' → logprob: -6.700623035430908
    10. ' ' → logprob: -7.325623035430908

Token 41: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04791773110628128
    2. 'min' → logprob: -4.79791784286499
    3. 'max' → logprob: -4.92291784286499
    4. ' H' → logprob: -4.92291784286499
    5. '10' → logprob: -5.29791784286499
    6. 'W' → logprob: -5.67291784286499
    7. '1' → logprob: -6.17291784286499
    8. '2' → logprob: -6.29791784286499
    9. '(H' → logprob: -6.42291784286499
    10. ' ' → logprob: -6.67291784286499

Token 42: '//' (ID: 393)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12142730504274368
    2. '-' → logprob: -2.246427297592163
    3. '+' → logprob: -6.246427536010742
    4. ' *' → logprob: -6.246427536010742
    5. '*)' → logprob: -6.746427536010742
    6. ')*' → logprob: -7.121427536010742
    7. ')' → logprob: -7.121427536010742
    8. ' -' → logprob: -7.496427536010742
    9. '//' → logprob: -8.121427536010742
    10. ')*(' → logprob: -8.121427536010742

Token 43: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06799741089344025
    2. 'W' → logprob: -3.067997455596924
    3. ' ' → logprob: -4.692997455596924
    4. '3' → logprob: -5.317997455596924
    5. ' W' → logprob: -6.192997455596924
    6. '7' → logprob: -7.317997455596924
    7. '10' → logprob: -7.942997455596924
    8. '9' → logprob: -7.942997455596924
    9. '4' → logprob: -8.442996978759766
    10. '1' → logprob: -8.817996978759766

Token 44: ')*' (ID: 11043)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.813262939453125
    2. ')*' → logprob: -1.313262939453125
    3. '*' → logprob: -1.563262939453125
    4. ')' → logprob: -2.938262939453125
    5. '+' → logprob: -4.438262939453125
    6. ' )' → logprob: -5.438262939453125
    7. '*)' → logprob: -5.813262939453125
    8. '*(' → logprob: -6.188262939453125
    9. ' *' → logprob: -6.688262939453125
    10. ')+(' → logprob: -7.063262939453125

Token 45: 'W' (ID: 54)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.47236937284469604
    2. 'W' → logprob: -1.2223694324493408
    3. ' (' → logprob: -3.097369432449341
    4. ' W' → logprob: -3.597369432449341
    5. '(' → logprob: -4.972369194030762
    6. '((' → logprob: -6.847369194030762
    7. ' ' → logprob: -7.597369194030762
    8. '2' → logprob: -7.972369194030762
    9. '(H' → logprob: -9.097369194030762
    10. ' ((' → logprob: -9.659869194030762

Token 46: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05104759708046913
    2. '*' → logprob: -4.1760478019714355
    3. '<|end|>' → logprob: -4.3010478019714355
    4. '-' → logprob: -4.4260478019714355
    5. '%' → logprob: -5.6760478019714355
    6. '
' → logprob: -5.9260478019714355
    7. '+
' → logprob: -7.1760478019714355
    8. '#' → logprob: -7.8010478019714355
    9. ')' → logprob: -8.426047325134277
    10. '<|end|>' → logprob: -8.801047325134277

Token 48: ' H' (ID: 487)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.24252460896968842
    2. ' H' → logprob: -1.8675246238708496
    3. 'W' → logprob: -3.3675246238708496
    4. 'H' → logprob: -4.36752462387085
    5. ' ' → logprob: -4.86752462387085
    6. ' (' → logprob: -6.24252462387085
    7. '1' → logprob: -6.86752462387085
    8. ' not' → logprob: -6.86752462387085
    9. ' X' → logprob: -7.24252462387085
    10. '(' → logprob: -8.492524147033691

Token 49: '&' (ID: 5)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6260181069374084
    2. '==' → logprob: -1.6260180473327637
    3. ' ==' → logprob: -2.2510180473327637
    4. ' %' → logprob: -2.5010180473327637
    5. ' >' → logprob: -4.126018047332764
    6. '>' → logprob: -4.126018047332764
    7. ' ' → logprob: -4.376018047332764
    8. '<' → logprob: -4.751018047332764
    9. ' <' → logprob: -4.751018047332764
    10. '>=' → logprob: -5.876018047332764

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023263417184352875
    2. ' ' → logprob: -3.773263454437256
    3. '-' → logprob: -12.835762977600098
    4. '3' → logprob: -13.023262977600098
    5. '(' → logprob: -13.648262977600098
    6. '#' → logprob: -13.710762977600098
    7. '

' → logprob: -13.835762977600098
    8. ' (' → logprob: -14.085762977600098
    9. '2' → logprob: -14.148262977600098
    10. '7' → logprob: -14.398262977600098

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1365836262702942
    2. ' :' → logprob: -2.5115835666656494
    3. '==' → logprob: -3.3865835666656494
    4. ' ==' → logprob: -5.1365838050842285
    5. ' and' → logprob: -5.2615838050842285
    6. '!=' → logprob: -8.01158332824707
    7. 'and' → logprob: -8.51158332824707
    8. '>' → logprob: -8.51158332824707
    9. ':X' → logprob: -8.63658332824707
    10. '=' → logprob: -9.01158332824707

Token 52: ' if' (ID: 538)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.010666701011359692
    2. 'X' → logprob: -5.010666847229004
    3. ' o' → logprob: -5.885666847229004
    4. ' ' → logprob: -8.260666847229004
    5. ' for' → logprob: -9.135666847229004
    6. '<|end|>' → logprob: -9.260666847229004
    7. '+' → logprob: -9.385666847229004
    8. ' 
' → logprob: -9.385666847229004
    9. ' W' → logprob: -9.760666847229004
    10. '   ' → logprob: -9.885666847229004

Token 53: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.23887109756469727
    2. 'W' → logprob: -1.6138710975646973
    3. ' ' → logprob: -5.363871097564697
    4. ' not' → logprob: -6.113871097564697
    5. ' (' → logprob: -6.238871097564697
    6. ' H' → logprob: -6.363871097564697
    7. ' X' → logprob: -7.238871097564697
    8. 'X' → logprob: -7.488871097564697
    9. 'H' → logprob: -7.738871097564697
    10. '  ' → logprob: -8.363870620727539

Token 54: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.16598843038082123
    2. ' &' → logprob: -1.9159884452819824
    3. ' >' → logprob: -6.415988445281982
    4. '>' → logprob: -6.540988445281982
    5. '%' → logprob: -7.290988445281982
    6. ' ==' → logprob: -7.415988445281982
    7. '==' → logprob: -7.915988445281982
    8. ' ' → logprob: -7.915988445281982
    9. ' !=' → logprob: -8.790987968444824
    10. ' %' → logprob: -9.165987968444824

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034869377850554883
    2. ' ' → logprob: -8.000349044799805
    3. '0' → logprob: -13.625349044799805
    4. '2' → logprob: -13.687849044799805
    5. '8' → logprob: -14.000349044799805
    6. '

' → logprob: -14.125349044799805
    7. '
' → logprob: -14.312849044799805
    8. '-' → logprob: -14.562849044799805
    9. '11' → logprob: -14.562849044799805
    10. '4' → logprob: -14.625349044799805

Token 56: ':X' (ID: 152046)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06745164096355438
    2. ' :' → logprob: -2.9424517154693604
    3. ':
' → logprob: -5.192451477050781
    4. ' and' → logprob: -5.817451477050781
    5. ' :
' → logprob: -6.567451477050781
    6. '==' → logprob: -6.817451477050781
    7. ' ==' → logprob: -7.067451477050781
    8. ' ' → logprob: -8.192451477050781
    9. ' o' → logprob: -9.942451477050781
    10. ' else' → logprob: -9.942451477050781

Token 57: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14960356056690216
    2. '-=' → logprob: -2.7746036052703857
    3. '+=(' → logprob: -3.3996036052703857
    4. ' +=' → logprob: -3.7746036052703857
    5. '-' → logprob: -4.649603366851807
    6. ' -=' → logprob: -5.274603366851807
    7. '*=' → logprob: -6.024603366851807
    8. '*' → logprob: -6.649603366851807
    9. '=' → logprob: -7.024603366851807
    10. ' =' → logprob: -8.899603843688965

Token 58: 'W' (ID: 54)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.7406393885612488
    2. '1' → logprob: -1.8656394481658936
    3. ' (' → logprob: -1.9906394481658936
    4. 'H' → logprob: -2.1156394481658936
    5. '((' → logprob: -3.4906394481658936
    6. ' H' → logprob: -3.7406394481658936
    7. '(W' → logprob: -3.8656394481658936
    8. '(' → logprob: -4.1156392097473145
    9. ' ' → logprob: -4.9906392097473145
    10. 'W' → logprob: -4.9906392097473145

Token 59: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.014760731719434261
    2. ' //' → logprob: -4.389760494232178
    3. ' ' → logprob: -7.389760494232178
    4. '>>' → logprob: -8.014760971069336
    5. ' else' → logprob: -8.139760971069336
    6. '#' → logprob: -8.264760971069336
    7. '2' → logprob: -9.264760971069336
    8. 'else' → logprob: -9.389760971069336
    9. '0' → logprob: -9.514760971069336
    10. '*' → logprob: -9.514760971069336

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.828512363834307e-05
    2. ' ' → logprob: -9.375088691711426
    3. '۲' → logprob: -13.875088691711426
    4. '２' → logprob: -14.250088691711426
    5. '1' → logprob: -15.000088691711426
    6. '210' → logprob: -15.750088691711426
    7. '20' → logprob: -15.812588691711426
    8. '21' → logprob: -15.875088691711426
    9. '22' → logprob: -15.875088691711426
    10. '٢' → logprob: -16.00008773803711

Token 61: '+' (ID: 10)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5898500680923462
    2. '+' → logprob: -1.3398500680923462
    3. 'else' → logprob: -2.0898499488830566
    4. ' ' → logprob: -3.5898499488830566
    5. '*' → logprob: -4.839849948883057
    6. ' +' → logprob: -5.339849948883057
    7. ' o' → logprob: -5.464849948883057
    8. ' elif' → logprob: -5.839849948883057
    9. 'print' → logprob: -5.839849948883057
    10. 'X' → logprob: -6.214849948883057

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002636006975080818
    2. ' ' → logprob: -8.250263214111328
    3. '+' → logprob: -13.500263214111328
    4. '0' → logprob: -15.125263214111328
    5. '(' → logprob: -15.437763214111328
    6. '2' → logprob: -16.437763214111328
    7. '１' → logprob: -16.500263214111328
    8. ' (' → logprob: -16.937763214111328
    9. ' +' → logprob: -16.937763214111328
    10. '۱' → logprob: -17.937763214111328

Token 63: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4151419699192047
    2. 'else' → logprob: -1.2901419401168823
    3. ' o' → logprob: -3.165142059326172
    4. '
' → logprob: -4.540142059326172
    5. 'o' → logprob: -5.790142059326172
    6. 'print' → logprob: -5.915142059326172
    7. ' X' → logprob: -6.665142059326172
    8. ' ' → logprob: -6.790142059326172
    9. ' print' → logprob: -7.290142059326172
    10. 'X' → logprob: -7.915142059326172

Token 64: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6631115078926086
    2. 'else' → logprob: -0.7881115078926086
    3. 'print' → logprob: -4.413111686706543
    4. ' o' → logprob: -4.538111686706543
    5. 'o' → logprob: -5.538111686706543
    6. ' print' → logprob: -7.288111686706543
    7. '
' → logprob: -7.663111686706543
    8. 'elif' → logprob: -7.913111686706543
    9. ' ' → logprob: -8.038111686706543
    10. 'X' → logprob: -8.038111686706543

Token 65: ':X' (ID: 152046)
  Prédit: ':X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':X' → logprob: -0.35232067108154297
    2. ':' → logprob: -1.727320671081543
    3. ' :' → logprob: -2.977320671081543
    4. 'X' → logprob: -3.352320671081543
    5. ' X' → logprob: -3.477320671081543
    6. ':x' → logprob: -7.352320671081543
    7. ' ' → logprob: -7.602320671081543
    8. '  ' → logprob: -7.852320671081543
    9. '   ' → logprob: -8.977320671081543
    10. ':
' → logprob: -9.352320671081543

Token 66: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.000158842682139948
    2. ' +=' → logprob: -9.25015926361084
    3. '+=(' → logprob: -10.50015926361084
    4. '+' → logprob: -10.62515926361084
    5. '=' → logprob: -11.75015926361084
    6. '+='' → logprob: -14.00015926361084
    7. ']+=' → logprob: -14.37515926361084
    8. '+="' → logprob: -14.75015926361084
    9. '-=' → logprob: -15.12515926361084
    10. ' ' → logprob: -15.75015926361084

Token 67: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.028206488117575645
    2. ' W' → logprob: -4.5282063484191895
    3. 'H' → logprob: -4.7782063484191895
    4. '(W' → logprob: -5.1532063484191895
    5. '(' → logprob: -6.6532063484191895
    6. 'X' → logprob: -8.153206825256348
    7. '(H' → logprob: -8.278206825256348
    8. ' ' → logprob: -8.403206825256348
    9. ' (' → logprob: -8.528206825256348
    10. '0' → logprob: -8.778206825256348

Token 68: '/' (ID: 14)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04701066389679909
    2. 'else' → logprob: -4.422010898590088
    3. '*' → logprob: -4.922010898590088
    4. '
' → logprob: -5.047010898590088
    5. '#' → logprob: -5.422010898590088
    6. 'print' → logprob: -5.547010898590088
    7. '/' → logprob: -5.797010898590088
    8. '+' → logprob: -6.172010898590088
    9. ' else' → logprob: -6.297010898590088
    10. '-' → logprob: -6.547010898590088

Token 69: '2' (ID: 17)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1275060623884201
    2. '2' → logprob: -2.1275060176849365
    3. '*' → logprob: -8.002506256103516
    4. ' ' → logprob: -8.877506256103516
    5. ' /' → logprob: -10.377506256103516
    6. '//' → logprob: -11.002506256103516
    7. '/(' → logprob: -12.002506256103516
    8. '/

' → logprob: -12.377506256103516
    9. '/
/' → logprob: -12.752506256103516
    10. '/>' → logprob: -12.940006256103516

Token 70: '
' (ID: 198)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0012821375858038664
    2. '2' → logprob: -6.751282215118408
    3. ' /' → logprob: -9.62628173828125
    4. '*' → logprob: -10.50128173828125
    5. '/)' → logprob: -11.87628173828125
    6. '/

' → logprob: -12.62628173828125
    7. '/')' → logprob: -13.00128173828125
    8. '/>' → logprob: -13.75128173828125
    9. '/
' → logprob: -14.00128173828125
    10. '+' → logprob: -14.12628173828125

Token 71: 'o' (ID: 78)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0036998428404331207
    2. '2' → logprob: -6.378699779510498
    3. '*' → logprob: -6.628699779510498
    4. '+' → logprob: -8.003700256347656
    5. ')' → logprob: -8.628700256347656
    6. '0' → logprob: -10.003700256347656
    7. ' /' → logprob: -10.503700256347656
    8. '<|end|>' → logprob: -11.003700256347656
    9. '/
' → logprob: -11.503700256347656
    10. ' ' → logprob: -11.753700256347656

Token 72: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1295500546693802
    2. '(X' → logprob: -2.129549980163574
    3. '(x' → logprob: -6.004549980163574
    4. '((' → logprob: -9.129549980163574
    5. '(
' → logprob: -11.379549980163574
    6. ' (' → logprob: -11.629549980163574
    7. 'X' → logprob: -11.754549980163574
    8. '(`' → logprob: -12.379549980163574
    9. '()' → logprob: -12.629549980163574
    10. '('' → logprob: -13.504549980163574

Token 73: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0005183627945370972
    2. '(' → logprob: -7.875518321990967
    3. 'X' → logprob: -9.125518798828125
    4. '(x' → logprob: -10.625518798828125
    5. ')' → logprob: -12.750518798828125
    6. ')(' → logprob: -14.250518798828125
    7. '(
' → logprob: -14.750518798828125
    8. ' (' → logprob: -14.750518798828125
    9. '((' → logprob: -15.125518798828125
    10. ' X' → logprob: -15.625518798828125

Token 74: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4741869568824768
    2. ')' → logprob: -0.9741869568824768
    3. '))
' → logprob: -10.099186897277832
    4. ' )' → logprob: -10.349186897277832
    5. ')
' → logprob: -11.224186897277832
    6. ' ))' → logprob: -11.349186897277832
    7. ')))' → logprob: -11.849186897277832
    8. ')}' → logprob: -14.474186897277832
    9. '))

' → logprob: -14.849186897277832
    10. '+' → logprob: -15.099186897277832


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 37.50%
Précision (top 10): 65.28%
================================================================================
