================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def gcd(a, b):
    while b != 0:
        temp = a % b
        a = b
        b = temp
    return a

N_X = input().split()
N = int(N_X[0])
X = int(N_X[1])

x_list = input().split()
x_nums = []
for i in range(N):
    x_nums.append(int(x_list[i]))

diffs = []
for v in x_nums:
    diffs.append(abs(v - X))

result = diffs[0]
for i in range(1, len(diffs)):
    result = gcd(result, diffs[i])

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' gcd' (ID: 106918)
  → Token d'amorce (pas de prédiction)

Token 2: '(a' (ID: 6271)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00874741468578577
    2. ',b' → logprob: -5.133747577667236
    3. ')' → logprob: -6.258747577667236
    4. '):' → logprob: -8.133747100830078
    5. ',a' → logprob: -8.133747100830078
    6. ',)' → logprob: -9.008747100830078
    7. ' ,' → logprob: -10.008747100830078
    8. ',g' → logprob: -10.508747100830078
    9. ',
' → logprob: -11.383747100830078
    10. ',c' → logprob: -11.508747100830078

Token 4: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6582468152046204
    2. 'b' → logprob: -0.7832468152046204
    3. ' ' → logprob: -4.533246994018555
    4. ' ,' → logprob: -4.783246994018555
    5. ',' → logprob: -6.158246994018555
    6. ',b' → logprob: -6.408246994018555
    7. ')' → logprob: -6.533246994018555
    8. ' )' → logprob: -7.658246994018555
    9. '<|end|>' → logprob: -7.908246994018555
    10. ' ' → logprob: -10.283246994018555

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0051169381476938725
    2. ')' → logprob: -5.505116939544678
    3. ':' → logprob: -7.505116939544678
    4. '):
' → logprob: -8.00511646270752
    5. '```' → logprob: -10.13011646270752
    6. ''):' → logprob: -10.50511646270752
    7. ',' → logprob: -11.25511646270752
    8. '   ' → logprob: -11.50511646270752
    9. '=' → logprob: -11.50511646270752
    10. '**' → logprob: -11.50511646270752

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2050699144601822
    2. '   ' → logprob: -1.830069899559021
    3. '```' → logprob: -4.2050700187683105
    4. '    
' → logprob: -6.4550700187683105
    5. ':
' → logprob: -6.9550700187683105
    6. '`:' → logprob: -6.9550700187683105
    7. '``' → logprob: -6.9550700187683105
    8. '\' → logprob: -6.9550700187683105
    9. '":' → logprob: -7.4550700187683105
    10. '':' → logprob: -7.4550700187683105

Token 7: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48494473099708557
    2. '```' → logprob: -1.8599447011947632
    3. 'i' → logprob: -2.3599448204040527
    4. ' if' → logprob: -2.7349448204040527
    5. 'if' → logprob: -3.1099448204040527
    6. ' ' → logprob: -5.234944820404053
    7. ' i' → logprob: -5.234944820404053
    8. ':' → logprob: -5.359944820404053
    9. '``' → logprob: -5.859944820404053
    10. '    ' → logprob: -5.859944820404053

Token 8: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6590116024017334
    2. ' ' → logprob: -0.7840116024017334
    3. ' b' → logprob: -4.4090118408203125
    4. 'a' → logprob: -5.0340118408203125
    5. ' not' → logprob: -5.0340118408203125
    6. '  ' → logprob: -7.7840118408203125
    7. 'b' → logprob: -8.284011840820312
    8. ' (' → logprob: -9.034011840820312
    9. 'not' → logprob: -10.784011840820312
    10. 's' → logprob: -11.534011840820312

Token 9: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10665298998355865
    2. ' >' → logprob: -2.6066529750823975
    3. '>' → logprob: -4.356653213500977
    4. ':' → logprob: -5.606653213500977
    5. ' ' → logprob: -5.606653213500977
    6. '!=' → logprob: -6.356653213500977
    7. '```' → logprob: -6.481653213500977
    8. '   ' → logprob: -6.606653213500977
    9. ' ==' → logprob: -7.606653213500977
    10. ' :' → logprob: -7.731653213500977

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4741341769695282
    2. '0' → logprob: -0.9741342067718506
    3. ''' → logprob: -9.97413444519043
    4. '```' → logprob: -12.34913444519043
    5. ' '' → logprob: -13.72413444519043
    6. ' ' → logprob: -13.72413444519043
    7. '"' → logprob: -13.84913444519043
    8. '`' → logprob: -13.97413444519043
    9. '  ' → logprob: -14.97413444519043
    10. ' `' → logprob: -14.97413444519043

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.632542913896032e-05
    2. ' ' → logprob: -10.000046730041504
    3. 'a' → logprob: -14.000046730041504
    4. '   ' → logprob: -19.250045776367188
    5. '```' → logprob: -19.375045776367188
    6. ''' → logprob: -20.125045776367188
    7. '=' → logprob: -20.250045776367188
    8. ' a' → logprob: -20.250045776367188
    9. '`' → logprob: -21.250045776367188
    10. '۰' → logprob: -22.125045776367188

Token 12: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005107374745421112
    2. ':
' → logprob: -8.000511169433594
    3. '):' → logprob: -10.125511169433594
    4. ':return' → logprob: -10.125511169433594
    5. '':' → logprob: -10.375511169433594
    6. '       ' → logprob: -10.875511169433594
    7. ' :' → logprob: -11.250511169433594
    8. '   ' → logprob: -11.500511169433594
    9. '":' → logprob: -12.125511169433594
    10. ':**' → logprob: -12.375511169433594

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007001297548413277
    2. '    ' → logprob: -5.6320013999938965
    3. '   ' → logprob: -6.6320013999938965
    4. ' ' → logprob: -8.007000923156738
    5. '```' → logprob: -8.007000923156738
    6. '        
' → logprob: -8.257000923156738
    7. '        ' → logprob: -8.382000923156738
    8. '     ' → logprob: -8.507000923156738
    9. ' 
' → logprob: -9.257000923156738
    10. '`' → logprob: -9.632000923156738

Token 14: ' temp' (ID: 5484)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2953476011753082
    2. ' a' → logprob: -1.4203475713729858
    3. '       ' → logprob: -4.420347690582275
    4. '```' → logprob: -7.170347690582275
    5. '   ' → logprob: -7.795347690582275
    6. '    ' → logprob: -8.045347213745117
    7. '           ' → logprob: -8.670347213745117
    8. '        ' → logprob: -9.795347213745117
    9. '        
' → logprob: -9.920347213745117
    10. 't' → logprob: -10.295347213745117

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20338328182697296
    2. '=' → logprob: -1.7033833265304565
    3. ' ' → logprob: -7.203383445739746
    4. '<|end|>' → logprob: -7.453383445739746
    5. ',' → logprob: -7.953383445739746
    6. '    ' → logprob: -9.578383445739746
    7. ')' → logprob: -9.578383445739746
    8. '_' → logprob: -10.703383445739746
    9. 's' → logprob: -10.828383445739746
    10. '  ' → logprob: -10.953383445739746

Token 16: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6946645379066467
    2. ' b' → logprob: -0.6946645379066467
    3. 'a' → logprob: -6.694664478302002
    4. ' a' → logprob: -8.19466495513916
    5. ' ' → logprob: -14.06966495513916
    6. '```' → logprob: -14.19466495513916
    7. '	b' → logprob: -14.81966495513916
    8. '    ' → logprob: -15.31966495513916
    9. '   ' → logprob: -16.069664001464844
    10. ')b' → logprob: -16.444664001464844

Token 17: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01823294162750244
    2. '%' → logprob: -4.018232822418213
    3. '%b' → logprob: -9.893233299255371
    4. ' ' → logprob: -10.393233299255371
    5. ' %
' → logprob: -15.393233299255371
    6. '%B' → logprob: -15.393233299255371
    7. '%n' → logprob: -15.393233299255371
    8. ',' → logprob: -15.518233299255371
    9. '%c' → logprob: -15.643233299255371
    10. ' ' → logprob: -15.893233299255371

Token 18: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.048587486147880554
    2. ' b' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.298587799072266
    4. '<|end|>' → logprob: -19.298587799072266
    5. ')b' → logprob: -19.548587799072266
    6. '	b' → logprob: -19.673587799072266
    7. '>b' → logprob: -19.923587799072266
    8. '```' → logprob: -20.173587799072266
    9. 'space' → logprob: -20.298587799072266
    10. '`' → logprob: -20.423587799072266

Token 19: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.04797841235995293
    2. '       ' → logprob: -4.172978401184082
    3. '
' → logprob: -4.672978401184082
    4. '\' → logprob: -4.797978401184082
    5. 'a' → logprob: -4.797978401184082
    6. '        
' → logprob: -6.672978401184082
    7. '\r' → logprob: -7.047978401184082
    8. '"\' → logprob: -7.047978401184082
    9. '\a' → logprob: -7.547978401184082
    10. ''\' → logprob: -8.047978401184082

Token 20: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21692214906215668
    2. 'a' → logprob: -1.8419221639633179
    3. '       ' → logprob: -4.341922283172607
    4. '\' → logprob: -4.716922283172607
    5. '        
' → logprob: -5.466922283172607
    6. '\a' → logprob: -5.841922283172607
    7. '
' → logprob: -6.091922283172607
    8. '    
' → logprob: -6.841922283172607
    9. ' a' → logprob: -7.341922283172607
    10. '\r' → logprob: -7.466922283172607

Token 21: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.19703105092048645
    2. '\n' → logprob: -1.822031021118164
    3. ' a' → logprob: -4.197031021118164
    4. '\' → logprob: -6.947031021118164
    5. '\a' → logprob: -8.322031021118164
    6. '       ' → logprob: -8.447031021118164
    7. '```' → logprob: -9.322031021118164
    8. '        
' → logprob: -9.447031021118164
    9. 'newline' → logprob: -9.572031021118164
    10. '
' → logprob: -9.822031021118164

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045728106051683426
    2. '=' → logprob: -3.2957282066345215
    3. ',' → logprob: -4.9207282066345215
    4. ' ,' → logprob: -8.170727729797363
    5. ' ' → logprob: -9.670727729797363
    6. '<|end|>' → logprob: -11.420727729797363
    7. '=b' → logprob: -13.545727729797363
    8. ',b' → logprob: -13.920727729797363
    9. ' b' → logprob: -14.045727729797363
    10. '<|end|>' → logprob: -14.545727729797363

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020774602890015
    2. ' b' → logprob: -2.350207805633545
    3. '<|end|>' → logprob: -14.100207328796387
    4. '	b' → logprob: -16.475208282470703
    5. '>b' → logprob: -16.600208282470703
    6. ' ' → logprob: -16.600208282470703
    7. ')b' → logprob: -17.600208282470703
    8. ' ' → logprob: -17.725208282470703
    9. ' б' → logprob: -18.475208282470703
    10. '*b' → logprob: -18.850208282470703

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13804279267787933
    2. '<|end|>' → logprob: -2.888042688369751
    3. '        
' → logprob: -3.638042688369751
    4. ' 
' → logprob: -3.763042688369751
    5. '       ' → logprob: -4.38804292678833
    6. '\n' → logprob: -5.38804292678833
    7. '  
' → logprob: -6.13804292678833
    8. '    
' → logprob: -6.51304292678833
    9. '
' → logprob: -6.51304292678833
    10. '<|end|>' → logprob: -7.76304292678833

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30355075001716614
    2. '        
' → logprob: -2.0535507202148438
    3. '<|end|>' → logprob: -3.0535507202148438
    4. 'temp' → logprob: -4.053550720214844
    5. 'b' → logprob: -4.303550720214844
    6. '    
' → logprob: -4.428550720214844
    7. ' 
' → logprob: -4.678550720214844
    8. '
' → logprob: -4.678550720214844
    9. '\n' → logprob: -5.053550720214844
    10. '```' → logprob: -5.303550720214844

Token 26: ' b' (ID: 287)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.06201642006635666
    2. ' temp' → logprob: -2.812016487121582
    3. 'b' (adapté à ' b') → logprob: -10.312016487121582
    4. '       ' → logprob: -11.562016487121582
    5. '```' → logprob: -13.437016487121582
    6. ' b' → logprob: -13.562016487121582
    7. ' ' → logprob: -14.187016487121582
    8. '	temp' → logprob: -14.437016487121582
    9. '(temp' → logprob: -14.562016487121582
    10. '   ' → logprob: -15.562016487121582

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000805341056548059
    2. '=' → logprob: -7.125805377960205
    3. '<|end|>' → logprob: -14.625804901123047
    4. ' =)' → logprob: -15.750804901123047
    5. ' ' → logprob: -16.375804901123047
    6. '=temp' → logprob: -16.500804901123047
    7. ' =
' → logprob: -17.375804901123047
    8. ' =",' → logprob: -17.875804901123047
    9. ' +=' → logprob: -18.000804901123047
    10. ' ==' → logprob: -18.375804901123047

Token 28: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.004620949272066355
    2. 'temp' → logprob: -5.3796210289001465
    3. ' tmp' → logprob: -14.754620552062988
    4. '	temp' → logprob: -16.379621505737305
    5. '(temp' → logprob: -16.629621505737305
    6. 'tmp' → logprob: -17.504621505737305
    7. ' tem' → logprob: -17.504621505737305
    8. ' ' → logprob: -17.504621505737305
    9. '[temp' → logprob: -17.629621505737305
    10. 'tem' → logprob: -18.004621505737305

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0571870356798172
    2. '\n' → logprob: -4.182187080383301
    3. ' return' → logprob: -4.807187080383301
    4. '
' → logprob: -4.807187080383301
    5. '<|end|>' → logprob: -4.807187080383301
    6. '       ' → logprob: -4.932187080383301
    7. '\' → logprob: -5.932187080383301
    8. '    
' → logprob: -6.182187080383301
    9. 'return' → logprob: -6.807187080383301
    10. ' 
' → logprob: -7.432187080383301

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012110683601349592
    2. ' return' → logprob: -7.126211166381836
    3. '       ' → logprob: -8.376211166381836
    4. 'return' → logprob: -9.001211166381836
    5. '    
' → logprob: -11.001211166381836
    6. '	return' → logprob: -11.376211166381836
    7. '```' → logprob: -11.626211166381836
    8. '
' → logprob: -12.251211166381836
    9. ':return' → logprob: -13.251211166381836
    10. '<|end|>' → logprob: -13.626211166381836

Token 31: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2149253785610199
    2. '   ' → logprob: -1.7149254083633423
    3. ' return' → logprob: -4.339925289154053
    4. ':return' → logprob: -8.714925765991211
    5. '```' → logprob: -9.339925765991211
    6. '	return' → logprob: -9.464925765991211
    7. 'r' → logprob: -11.464925765991211
    8. '       ' → logprob: -11.714925765991211
    9. ' ' → logprob: -11.714925765991211
    10. '\' → logprob: -12.339925765991211

Token 32: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0788913294672966
    2. 'a' → logprob: -2.5788912773132324
    3. ' ' → logprob: -13.82889175415039
    4. ' ' → logprob: -15.07889175415039
    5. '	a' → logprob: -15.82889175415039
    6. 'space' → logprob: -16.70389175415039
    7. '_a' → logprob: -17.07889175415039
    8. 's' → logprob: -18.07889175415039
    9. '(a' → logprob: -18.45389175415039
    10. ' а' → logprob: -19.20389175415039

Token 33: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.13783597946167
    2. '\n' → logprob: -1.26283597946167
    3. '```' → logprob: -2.26283597946167
    4. '#' → logprob: -2.38783597946167
    5. '<|end|>' → logprob: -2.63783597946167
    6. '(' → logprob: -3.26283597946167
    7. ')' → logprob: -3.88783597946167
    8. '' → logprob: -4.13783597946167
    9. '\' → logprob: -4.13783597946167
    10. ' ' → logprob: -4.51283597946167

Token 35: '_X' (ID: 16245)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2779674530029297
    2. '=' → logprob: -2.5279674530029297
    3. 'u' → logprob: -2.7779674530029297
    4. 'o' → logprob: -3.4029674530029297
    5. 'a' → logprob: -3.5279674530029297
    6. 'E' → logprob: -4.90296745300293
    7. 'ew' → logprob: -5.40296745300293
    8. '-' → logprob: -5.65296745300293
    9. '+' → logprob: -5.90296745300293
    10. '#' → logprob: -6.02796745300293

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9726073741912842
    2. ' =' → logprob: -1.4726073741912842
    3. '_' → logprob: -1.9726073741912842
    4. 'E' → logprob: -2.972607374191284
    5. '+' → logprob: -3.222607374191284
    6. ' ' → logprob: -3.847607374191284
    7. '**' → logprob: -3.847607374191284
    8. ',' → logprob: -3.847607374191284
    9. '(' → logprob: -4.097607612609863
    10. 'X' → logprob: -4.222607612609863

Token 37: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.040399905294179916
    2. '10' → logprob: -3.4153997898101807
    3. '100' → logprob: -5.16540002822876
    4. ' int' → logprob: -7.41540002822876
    5. 'int' → logprob: -8.290399551391602
    6. '50' → logprob: -10.165399551391602
    7. '20' → logprob: -10.290399551391602
    8. '5' → logprob: -10.540399551391602
    9. '1' → logprob: -11.165399551391602
    10. '  ' → logprob: -11.540399551391602

Token 38: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00333087588660419
    2. '("("' → logprob: -6.128330707550049
    3. '('' → logprob: -6.878330707550049
    4. '()' → logprob: -10.128331184387207
    5. '("' → logprob: -10.628331184387207
    6. '("(' → logprob: -10.753331184387207
    7. '("")' → logprob: -11.628331184387207
    8. '(`' → logprob: -12.378331184387207
    9. '("""' → logprob: -12.503331184387207
    10. '(
' → logprob: -13.503331184387207

Token 39: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2521374523639679
    2. 'split' → logprob: -1.5021374225616455
    3. 'rstrip' → logprob: -8.627137184143066
    4. ' strip' → logprob: -11.377137184143066
    5. 'replace' → logprob: -11.627137184143066
    6. ' split' → logprob: -12.502137184143066
    7. 'lower' → logprob: -13.252137184143066
    8. 'spl' → logprob: -13.502137184143066
    9. 'isdigit' → logprob: -14.377137184143066
    10. 'to' → logprob: -14.877137184143066

Token 40: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10230821371078491
    2. '('' → logprob: -2.7273082733154297
    3. '()' → logprob: -3.9773082733154297
    4. '("("' → logprob: -4.35230827331543
    5. ''' → logprob: -9.47730827331543
    6. '((' → logprob: -10.47730827331543
    7. '(`' → logprob: -10.72730827331543
    8. '(\' → logprob: -10.97730827331543
    9. '(

' → logprob: -11.10230827331543
    10. ' (' → logprob: -11.60230827331543

Token 41: 'N' (ID: 45)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5958319902420044
    2. '=' → logprob: -1.9708319902420044
    3. '<|end|>' → logprob: -2.470831871032715
    4. ' =' → logprob: -2.970831871032715
    5. '\n' → logprob: -3.095831871032715
    6. '```' → logprob: -3.970831871032715
    7. '\' → logprob: -4.095831871032715
    8. '(' → logprob: -4.220831871032715
    9. ' ' → logprob: -4.595831871032715
    10. '[int' → logprob: -4.845831871032715

Token 42: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5789036750793457
    2. '[' → logprob: -0.9539036750793457
    3. '_X' → logprob: -3.0789036750793457
    4. '_[' → logprob: -5.328903675079346
    5. '[_' → logprob: -6.078903675079346
    6. '_x' → logprob: -8.453903198242188
    7. ' _' → logprob: -8.828903198242188
    8. '\[' → logprob: -9.453903198242188
    9. '__[' → logprob: -9.453903198242188
    10. '```' → logprob: -9.578903198242188

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10021529346704483
    2. 'int' → logprob: -2.350215196609497
    3. '[int' → logprob: -12.975214958190918
    4. ' in' → logprob: -13.100214958190918
    5. ' N' → logprob: -13.225214958190918
    6. ' ' → logprob: -13.475214958190918
    7. ' len' → logprob: -15.100214958190918
    8. '(int' → logprob: -15.350214958190918
    9. '=int' → logprob: -16.350215911865234
    10. '```' → logprob: -16.350215911865234

Token 44: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10025336593389511
    2. '(N' → logprob: -2.3502533435821533
    3. '('' → logprob: -10.350253105163574
    4. '(X' → logprob: -12.350253105163574
    5. '(
' → logprob: -12.475253105163574
    6. ' (' → logprob: -12.475253105163574
    7. '(

' → logprob: -13.975253105163574
    8. '("' → logprob: -14.100253105163574
    9. '(n' → logprob: -15.100253105163574
    10. '(`' → logprob: -15.600253105163574

Token 45: '_X' (ID: 16245)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6354470252990723
    2. '_X' → logprob: -0.7604470252990723
    3. ')' → logprob: -6.135447025299072
    4. '[_' → logprob: -8.510446548461914
    5. '_[' → logprob: -9.135446548461914
    6. ' _' → logprob: -9.135446548461914
    7. 'X' → logprob: -10.260446548461914
    8. '[-' → logprob: -10.260446548461914
    9. ' )' → logprob: -10.385446548461914
    10. '   ' → logprob: -10.635446548461914

Token 46: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.200166469876422e-06
    2. ')' → logprob: -13.000004768371582
    3. ' [' → logprob: -13.250004768371582
    4. '[
' → logprob: -15.125004768371582
    5. '   ' → logprob: -15.250004768371582
    6. '\[' → logprob: -15.250004768371582
    7. '(' → logprob: -15.375004768371582
    8. '0' → logprob: -16.7500057220459
    9. '```' → logprob: -17.1250057220459
    10. ')[' → logprob: -17.2500057220459

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. '1' → logprob: -14.75000286102295
    4. ')' → logprob: -15.75000286102295
    5. '[' → logprob: -16.125001907348633
    6. '```' → logprob: -17.750001907348633
    7. '۰' → logprob: -18.437501907348633
    8. '   ' → logprob: -18.500001907348633
    9. ']' → logprob: -19.187501907348633
    10. '０' → logprob: -19.500001907348633

Token 48: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2017650157213211
    2. '])' → logprob: -1.7017650604248047
    3. ']' → logprob: -8.326765060424805
    4. ')]' → logprob: -10.826765060424805
    5. ')
' → logprob: -10.951765060424805
    6. ')])' → logprob: -10.951765060424805
    7. ' ])' → logprob: -11.076765060424805
    8. ' )' → logprob: -11.201765060424805
    9. ''])' → logprob: -11.701765060424805
    10. '）' → logprob: -11.826765060424805

Token 49: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.31349873542785645
    2. 'M' → logprob: -1.5634987354278564
    3. 'K' → logprob: -2.9384987354278564
    4. 'x' → logprob: -6.438498497009277
    5. '<|end|>' → logprob: -7.063498497009277
    6. 'D' → logprob: -7.313498497009277
    7. 'k' → logprob: -7.438498497009277
    8. ' M' → logprob: -7.438498497009277
    9. 'd' → logprob: -7.938498497009277
    10. 'b' → logprob: -8.313498497009277

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4287416338920593
    2. ' =' → logprob: -1.053741693496704
    3. '_' → logprob: -10.428741455078125
    4. '=int' → logprob: -12.053741455078125
    5. ')' → logprob: -13.678741455078125
    6. ',' → logprob: -13.928741455078125
    7. 's' → logprob: -14.053741455078125
    8. ' ' → logprob: -14.428741455078125
    9. '_=' → logprob: -14.803741455078125
    10. '[' → logprob: -14.803741455078125

Token 51: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011054305359721184
    2. ' int' → logprob: -4.511054515838623
    3. '[int' → logprob: -12.011054039001465
    4. '(int' → logprob: -15.886054039001465
    5. '<int' → logprob: -16.26105499267578
    6. 'float' → logprob: -16.51105499267578
    7. '=int' → logprob: -17.13605499267578
    8. ' ' → logprob: -17.51105499267578
    9. '	int' → logprob: -17.88605499267578
    10. ':int' → logprob: -18.38605499267578

Token 52: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42045509815216064
    2. '(N' → logprob: -1.1704550981521606
    3. '(X' → logprob: -3.420454978942871
    4. '()' → logprob: -8.920454978942871
    5. ' (' → logprob: -8.920454978942871
    6. '('' → logprob: -10.795454978942871
    7. '(
' → logprob: -12.045454978942871
    8. '((' → logprob: -12.170454978942871
    9. '("("' → logprob: -12.295454978942871
    10. '(

' → logprob: -12.545454978942871

Token 53: '_X' (ID: 16245)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006389203481376171
    2. '_X' → logprob: -5.256389141082764
    3. '1' → logprob: -7.256389141082764
    4. ' [' → logprob: -8.881389617919922
    5. '-' → logprob: -9.381389617919922
    6. '(' → logprob: -9.631389617919922
    7. ' ' → logprob: -10.256389617919922
    8. '])' → logprob: -10.506389617919922
    9. '_' → logprob: -10.756389617919922
    10. ']' → logprob: -10.756389617919922

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0033252881839871407
    2. '1' → logprob: -5.753325462341309
    3. '][' → logprob: -9.378325462341309
    4. ' [' → logprob: -10.253325462341309
    5. ')[' → logprob: -12.128325462341309
    6. '])' → logprob: -12.628325462341309
    7. ')' → logprob: -12.628325462341309
    8. '-' → logprob: -12.628325462341309
    9. ']' → logprob: -12.878325462341309
    10. '```' → logprob: -13.003325462341309

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.500009536743164
    4. '0' → logprob: -15.500009536743164
    5. '-' → logprob: -16.250009536743164
    6. '])' → logprob: -16.312509536743164
    7. '2' → logprob: -16.562509536743164
    8. ']' → logprob: -16.562509536743164
    9. '  ' → logprob: -16.750009536743164
    10. '[' → logprob: -16.875009536743164

Token 56: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.252193421125412
    2. '])' → logprob: -1.5021934509277344
    3. ')])' → logprob: -9.127193450927734
    4. ']' → logprob: -9.627193450927734
    5. '))' → logprob: -9.877193450927734
    6. ')]' → logprob: -11.502193450927734
    7. ''])' → logprob: -11.627193450927734
    8. '）' → logprob: -12.127193450927734
    9. ')
' → logprob: -13.127193450927734
    10. ' )' → logprob: -13.252193450927734

Token 57: 'x' (ID: 87)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2080327272415161
    2. 'numbers' → logprob: -1.2080327272415161
    3. 'arr' → logprob: -1.8330327272415161
    4. 'a' → logprob: -2.7080326080322266
    5. 'nums' → logprob: -2.9580326080322266
    6. 'values' → logprob: -3.4580326080322266
    7. 'g' → logprob: -3.8330326080322266
    8. 'result' → logprob: -4.458032608032227
    9. 'lst' → logprob: -4.583032608032227
    10. 'list' → logprob: -5.208032608032227

Token 58: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6049468517303467
    2. '_' → logprob: -1.1049468517303467
    3. '_values' → logprob: -2.3549468517303467
    4. ' =' → logprob: -4.604947090148926
    5. '_list' → logprob: -4.854947090148926
    6. '_vals' → logprob: -5.729947090148926
    7. '_s' → logprob: -6.104947090148926
    8. '=' → logprob: -6.854947090148926
    9. 'values' → logprob: -6.979947090148926
    10. '_array' → logprob: -8.354947090148926

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07896458357572556
    2. '=' → logprob: -2.5789644718170166
    3. 's' → logprob: -10.453964233398438
    4. '=[]' → logprob: -11.203964233398438
    5. '[' → logprob: -11.328964233398438
    6. '.' → logprob: -11.578964233398438
    7. '[:]' → logprob: -12.828964233398438
    8. ' ' → logprob: -13.078964233398438
    9. '_' → logprob: -13.328964233398438
    10. ',' → logprob: -13.828964233398438

Token 60: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.36902570724487305
    2. ' list' → logprob: -2.119025707244873
    3. '[' → logprob: -2.869025707244873
    4. '[list' → logprob: -2.994025707244873
    5. '[]' → logprob: -3.244025707244873
    6. '[input' → logprob: -3.494025707244873
    7. ' [' → logprob: -4.869025707244873
    8. ' []' → logprob: -6.244025707244873
    9. 'input' → logprob: -6.494025707244873
    10. '[int' → logprob: -6.994025707244873

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4742409288883209
    2. '()' → logprob: -0.9742408990859985
    3. '(' → logprob: -8.849241256713867
    4. ' ()' → logprob: -11.724241256713867
    5. ' ().' → logprob: -12.474241256713867
    6. '().'' → logprob: -13.224241256713867
    7. '()
' → logprob: -13.724241256713867
    8. '()

' → logprob: -14.099241256713867
    9. '())' → logprob: -14.224241256713867
    10. '();' → logprob: -14.224241256713867

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0802738870552275e-05
    2. 'strip' → logprob: -11.50001049041748
    3. 'rstrip' → logprob: -15.12501049041748
    4. ' split' → logprob: -15.37501049041748
    5. 'spl' → logprob: -17.375011444091797
    6. '_split' → logprob: -19.875011444091797
    7. '(split' → logprob: -20.125011444091797
    8. 'plit' → logprob: -21.000011444091797
    9. '.split' → logprob: -21.250011444091797
    10. 'sp' → logprob: -21.500011444091797

Token 63: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07910767197608948
    2. '(' → logprob: -2.5791077613830566
    3. '('' → logprob: -8.829107284545898
    4. '("("' → logprob: -10.329107284545898
    5. '().' → logprob: -11.329107284545898
    6. '()[' → logprob: -12.454107284545898
    7. '())' → logprob: -12.829107284545898
    8. '()`' → logprob: -13.204107284545898
    9. '(`' → logprob: -13.454107284545898
    10. '(
' → logprob: -13.704107284545898

Token 64: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016579244285821915
    2. 'result' → logprob: -5.5165791511535645
    3. 'numbers' → logprob: -5.7665791511535645
    4. 'for' → logprob: -6.0165791511535645
    5. 'nums' → logprob: -6.2665791511535645
    6. '<|end|>' → logprob: -6.8915791511535645
    7. 'values' → logprob: -7.2665791511535645
    8. 'a' → logprob: -7.5165791511535645
    9. 'ans' → logprob: -7.5165791511535645
    10. 'n' → logprob: -8.141579627990723

Token 65: '_nums' (ID: 128266)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.062335576862096786
    2. '_' → logprob: -3.06233549118042
    3. 's' → logprob: -4.43733549118042
    4. '_s' → logprob: -6.68733549118042
    5. '_values' → logprob: -8.437335968017578
    6. '_lst' → logprob: -8.687335968017578
    7. '_lists' → logprob: -10.062335968017578
    8. '_l' → logprob: -10.937335968017578
    9. '_vals' → logprob: -11.062335968017578
    10. ' _' → logprob: -11.062335968017578

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287393391132355
    2. '=' → logprob: -1.053739309310913
    3. '[:]' → logprob: -11.178739547729492
    4. ')' → logprob: -12.178739547729492
    5. '=[]' → logprob: -12.553739547729492
    6. '_' → logprob: -12.553739547729492
    7. '[' → logprob: -12.553739547729492
    8. '=[' → logprob: -13.428739547729492
    9. ' ' → logprob: -13.678739547729492
    10. ' =[' → logprob: -13.928739547729492

Token 67: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.24086254835128784
    2. ' [' → logprob: -2.4908626079559326
    3. ' list' → logprob: -2.9908626079559326
    4. '[' → logprob: -2.9908626079559326
    5. 'list' → logprob: -3.4908626079559326
    6. '[int' → logprob: -8.740862846374512
    7. '[List' → logprob: -10.115862846374512
    8. '[x' → logprob: -10.990862846374512
    9. '[len' → logprob: -11.240862846374512
    10. '[i' → logprob: -12.615862846374512

Token 68: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010361451422795653
    2. ' for' → logprob: -6.876036167144775
    3. '
' → logprob: -13.251035690307617
    4. '	for' → logprob: -14.501035690307617
    5. '```' → logprob: -15.126035690307617
    6. 'f' → logprob: -15.626035690307617
    7. 'i' → logprob: -15.626035690307617
    8. ' 
' → logprob: -16.376035690307617
    9. '[' → logprob: -16.376035690307617
    10. 'n' → logprob: -17.251035690307617

Token 69: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2743259072303772
    2. ' ' → logprob: -1.6493258476257324
    3. ' _' → logprob: -3.1493258476257324
    4. ' x' → logprob: -5.524325847625732
    5. '_' → logprob: -7.274325847625732
    6. 'i' → logprob: -9.14932632446289
    7. '  ' → logprob: -10.02432632446289
    8. 'x' → logprob: -11.52432632446289
    9. ' ‌' → logprob: -11.77432632446289
    10. '_i' → logprob: -14.02432632446289

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.041309911757707596
    2. 'in' → logprob: -3.2913098335266113
    3. ' ' → logprob: -5.791309833526611
    4. '  ' → logprob: -8.66631031036377
    5. '_' → logprob: -11.79131031036377
    6. '   ' → logprob: -12.29131031036377
    7. '	in' → logprob: -12.29131031036377
    8. '    ' → logprob: -12.66631031036377
    9. 'n' → logprob: -12.66631031036377
    10. ' i' → logprob: -12.91631031036377

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2905929386615753
    2. ' range' → logprob: -1.540592908859253
    3. 'x' → logprob: -3.290592908859253
    4. ' x' → logprob: -7.290593147277832
    5. ' xrange' → logprob: -11.790593147277832
    6. ' ' → logprob: -13.290593147277832
    7. '	range' → logprob: -13.290593147277832
    8. '(range' → logprob: -15.040593147277832
    9. '  ' → logprob: -15.415593147277832
    10. 'Range' → logprob: -15.665593147277832

Token 72: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.33262747526168823
    2. '(' → logprob: -1.332627534866333
    3. '(len' → logprob: -3.957627534866333
    4. '(n' → logprob: -10.582627296447754
    5. ' (' → logprob: -10.707627296447754
    6. '(
' → logprob: -11.832627296447754
    7. 'N' → logprob: -11.957627296447754
    8. ' N' → logprob: -12.707627296447754
    9. 'len' → logprob: -13.582627296447754
    10. '(int' → logprob: -13.707627296447754

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013851166004315019
    2. '):
' → logprob: -6.62638521194458
    3. ':' → logprob: -10.626384735107422
    4. ' ):' → logprob: -10.626384735107422
    5. ')' → logprob: -12.001384735107422
    6. '):
' → logprob: -13.251384735107422
    7. '+' → logprob: -14.126384735107422
    8. '   ' → logprob: -14.251384735107422
    9. ']:' → logprob: -14.626384735107422
    10. ' ' → logprob: -15.126384735107422

Token 74: '   ' (ID: 271)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5302138924598694
    2. '   ' → logprob: -0.9052138924598694
    3. 'x' → logprob: -5.155213832855225
    4. ' 
' → logprob: -7.780213832855225
    5. '    
' → logprob: -7.905213832855225
    6. '	x' → logprob: -8.280214309692383
    7. '<|end|>' → logprob: -8.905214309692383
    8. ' ' → logprob: -9.655214309692383
    9. '       ' → logprob: -11.405214309692383
    10. '    ' → logprob: -11.530214309692383

Token 75: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6159148216247559
    2. 'x' (adapté à ' x') → logprob: -0.8659148216247559
    3. '   ' → logprob: -3.240914821624756
    4. ' ' → logprob: -10.615915298461914
    5. '	x' → logprob: -10.615915298461914
    6. '```' → logprob: -12.740915298461914
    7. ' 
' → logprob: -13.615915298461914
    8. '       ' → logprob: -13.615915298461914
    9. '    
' → logprob: -13.740915298461914
    10. '  ' → logprob: -13.740915298461914

Token 76: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.0004025481757707894
    2. '_num' → logprob: -8.375402450561523
    3. '_list' → logprob: -9.000402450561523
    4. '_' → logprob: -10.500402450561523
    5. '_n' → logprob: -12.625402450561523
    6. '_x' → logprob: -13.000402450561523
    7. ' _' → logprob: -13.000402450561523
    8. 'nums' → logprob: -13.125402450561523
    9. '_numbers' → logprob: -13.125402450561523
    10. '_s' → logprob: -13.625402450561523

Token 77: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005261033773422241
    2. '.' → logprob: -5.255260944366455
    3. 'append' → logprob: -11.130261421203613
    4. '.app' → logprob: -12.005261421203613
    5. ' .' → logprob: -12.505261421203613
    6. '.ap' → logprob: -13.880261421203613
    7. ').' → logprob: -14.755261421203613
    8. '.Append' → logprob: -14.755261421203613
    9. '.extend' → logprob: -15.255261421203613
    10. '].' → logprob: -15.255261421203613

Token 78: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005566088366322219
    2. '(' → logprob: -7.500556468963623
    3. 'int' → logprob: -12.875556945800781
    4. ' (' → logprob: -14.125556945800781
    5. '(i' → logprob: -16.37555694580078
    6. ' int' → logprob: -16.50055694580078
    7. '(
' → logprob: -17.25055694580078
    8. '(x' → logprob: -17.25055694580078
    9. '<int' → logprob: -18.75055694580078
    10. '[int' → logprob: -19.00055694580078

Token 79: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005277753341943026
    2. '(' → logprob: -5.255277633666992
    3. ')' → logprob: -10.880277633666992
    4. ')(' → logprob: -11.130277633666992
    5. '(X' → logprob: -11.755277633666992
    6. '(
' → logprob: -13.880277633666992
    7. ' (' → logprob: -14.380277633666992
    8. 'x' → logprob: -14.755277633666992
    9. ')x' → logprob: -15.130277633666992
    10. ' ' → logprob: -16.380277633666992

Token 80: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.7491250875755213e-05
    2. '_nums' → logprob: -10.750027656555176
    3. '_lists' → logprob: -12.625027656555176
    4. '_numbers' → logprob: -14.500027656555176
    5. ')' → logprob: -14.875027656555176
    6. '[i' → logprob: -15.125027656555176
    7. 'list' → logprob: -15.250027656555176
    8. 'List' → logprob: -15.375027656555176
    9. 'nums' → logprob: -15.625027656555176
    10. ')_' → logprob: -16.12502670288086

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020866614067927003
    2. '[' → logprob: -8.500208854675293
    3. ' [' → logprob: -13.125208854675293
    4. '[I' → logprob: -13.375208854675293
    5. ')' → logprob: -13.750208854675293
    6. ')[' → logprob: -15.375208854675293
    7. '(i' → logprob: -16.125207901000977
    8. ')i' → logprob: -16.625207901000977
    9. '```' → logprob: -17.375207901000977
    10. ' ' → logprob: -17.750207901000977

Token 82: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006610880955122411
    2. ')' → logprob: -7.3756608963012695
    3. ')))' → logprob: -10.37566089630127
    4. ' ))' → logprob: -13.12566089630127
    5. '))
' → logprob: -13.75066089630127
    6. '()))' → logprob: -16.750661849975586
    7. ']))' → logprob: -17.250661849975586
    8. '])' → logprob: -17.625661849975586
    9. '))

' → logprob: -17.750661849975586
    10. ''))' → logprob: -18.125661849975586

Token 83: 'diff' (ID: 31460)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.02169485203921795
    2. 'result' → logprob: -4.146694660186768
    3. 'res' → logprob: -6.521694660186768
    4. 'answer' → logprob: -6.521694660186768
    5. 'current' → logprob: -6.646694660186768
    6. 'ans' → logprob: -7.146694660186768
    7. '```' → logprob: -8.896695137023926
    8. 'd' → logprob: -9.521695137023926
    9. 'm' → logprob: -9.771695137023926
    10. 'a' → logprob: -9.771695137023926

Token 84: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009910109220072627
    2. ' =' → logprob: -7.750990867614746
    3. 'er' → logprob: -8.750990867614746
    4. '=' → logprob: -9.000990867614746
    5. '_s' → logprob: -9.000990867614746
    6. '_g' → logprob: -9.625990867614746
    7. '_' → logprob: -10.250990867614746
    8. 'ers' → logprob: -10.500990867614746
    9. '_list' → logprob: -11.250990867614746
    10. '_nums' → logprob: -13.000990867614746

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007611720357090235
    2. '=' → logprob: -4.8826117515563965
    3. 's' → logprob: -13.132611274719238
    4. '_' → logprob: -13.507611274719238
    5. '=[]' → logprob: -13.757611274719238
    6. ' ' → logprob: -14.882611274719238
    7. '[' → logprob: -15.257611274719238
    8. ' =[' → logprob: -15.257611274719238
    9. '[:]' → logprob: -16.507612228393555
    10. ',' → logprob: -17.007612228393555

Token 86: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03053252212703228
    2. '[' → logprob: -3.7805325984954834
    3. 'abs' → logprob: -5.405532360076904
    4. '[]
' → logprob: -6.530532360076904
    5. '[x' → logprob: -6.905532360076904
    6. 'x' → logprob: -9.155532836914062
    7. ' []' → logprob: -9.780532836914062
    8. 'sorted' → logprob: -10.155532836914062
    9. '[]

' → logprob: -10.405532836914062
    10. '[int' → logprob: -10.405532836914062

Token 87: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.588793960167095e-05
    2. ' for' → logprob: -9.500076293945312
    3. 'x' → logprob: -14.125076293945312
    4. '	for' → logprob: -16.375076293945312
    5. 'prev' → logprob: -16.875076293945312
    6. '<|end|>' → logprob: -17.125076293945312
    7. 'For' → logprob: -17.250076293945312
    8. '```' → logprob: -17.625076293945312
    9. '[' → logprob: -18.500076293945312
    10. '0' → logprob: -18.500076293945312

Token 88: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04861734062433243
    2. ' i' → logprob: -3.048617362976074
    3. 'range' → logprob: -10.923617362976074
    4. ' range' → logprob: -12.673617362976074
    5. ' ' → logprob: -13.173617362976074
    6. 'x' → logprob: -13.298617362976074
    7. '	i' → logprob: -13.423617362976074
    8. ' in' → logprob: -13.798617362976074
    9. 'in' → logprob: -14.423617362976074
    10. '   ' → logprob: -14.798617362976074

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.040049850940704346
    2. 'in' → logprob: -3.2900497913360596
    3. 'range' → logprob: -7.165050029754639
    4. 'i' → logprob: -8.16504955291748
    5. ' range' → logprob: -8.54004955291748
    6. 'x' → logprob: -8.66504955291748
    7. 'alue' → logprob: -9.04004955291748
    8. ' ' → logprob: -9.29004955291748
    9. ' i' → logprob: -9.54004955291748
    10. '1' → logprob: -10.16504955291748

Token 90: ' x' (ID: 1215)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6381791830062866
    2. 'x' → logprob: -0.8881791830062866
    3. ' range' → logprob: -2.888179302215576
    4. ' x' → logprob: -5.388179302215576
    5. ' xrange' → logprob: -10.888178825378418
    6. ' ' → logprob: -11.013178825378418
    7. '	range' → logprob: -11.138178825378418
    8. '(range' → logprob: -11.638178825378418
    9. '   ' → logprob: -12.138178825378418
    10. '(x' → logprob: -12.263178825378418

Token 91: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.0012566609075292945
    2. 'range' → logprob: -7.001256465911865
    3. 'nums' → logprob: -9.001256942749023
    4. 'ums' → logprob: -9.626256942749023
    5. '_num' → logprob: -9.876256942749023
    6. '_' → logprob: -10.126256942749023
    7. 'Nums' → logprob: -10.501256942749023
    8. '_range' → logprob: -11.501256942749023
    9. ' range' → logprob: -12.001256942749023
    10. '_vals' → logprob: -12.126256942749023

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1810566633939743
    2. '[' → logprob: -1.8060566186904907
    3. '[:-' → logprob: -7.181056499481201
    4. ':
' → logprob: -8.30605697631836
    5. ' :' → logprob: -9.05605697631836
    6. '   ' → logprob: -10.18105697631836
    7. '1' → logprob: -10.55605697631836
    8. 'in' → logprob: -11.05605697631836
    9. 'range' → logprob: -11.30605697631836
    10. '2' → logprob: -11.43105697631836

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025250071194022894
    2. 'diff' → logprob: -7.0025248527526855
    3. ' dif' → logprob: -7.1275248527526855
    4. ' diff' → logprob: -7.2525248527526855
    5. '	diff' → logprob: -10.127525329589844
    6. ' if' → logprob: -10.377525329589844
    7. '   ' → logprob: -11.752525329589844
    8. 'dif' → logprob: -12.002525329589844
    9. '```' → logprob: -12.627525329589844
    10. '    ' → logprob: -13.252525329589844

Token 94: ' dif' (ID: 1501)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.04664745181798935
    2. ' dif' → logprob: -3.296647548675537
    3. ' diff' → logprob: -5.171647548675537
    4. '   ' → logprob: -6.421647548675537
    5. 'dif' (adapté à ' dif') → logprob: -7.171647548675537
    6. 'd' → logprob: -7.921647548675537
    7. '	diff' → logprob: -9.796647071838379
    8. '    
' → logprob: -11.296647071838379
    9. ' d' → logprob: -11.796647071838379
    10. 'if' → logprob: -11.921647071838379

Token 95: 'fs' (ID: 6469)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06565951555967331
    2. 'fs' → logprob: -2.940659523010254
    3. 'ference' → logprob: -5.315659523010254
    4. '   ' → logprob: -5.940659523010254
    5. 's' → logprob: -6.440659523010254
    6. 'ferences' → logprob: -7.190659523010254
    7. ' f' → logprob: -7.690659523010254
    8. 'ffs' → logprob: -9.565659523010254
    9. 'r' → logprob: -9.815659523010254
    10. '```' → logprob: -9.940659523010254

Token 96: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21270348131656647
    2. '.append' → logprob: -1.7127034664154053
    3. ' .' → logprob: -4.837703704833984
    4. ' +=' → logprob: -6.587703704833984
    5. '.extend' → logprob: -6.712703704833984
    6. ' ' → logprob: -8.087703704833984
    7. '.=' → logprob: -8.837703704833984
    8. ' .=' → logprob: -8.837703704833984
    9. '+=' → logprob: -9.712703704833984
    10. ' =' → logprob: -11.462703704833984

Token 97: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.5777426958084106
    2. 'abs' → logprob: -0.8277426958084106
    3. ' abs' → logprob: -6.327742576599121
    4. '(v' → logprob: -11.702742576599121
    5. '(' → logprob: -12.077742576599121
    6. 'v' → logprob: -14.077742576599121
    7. 'Abs' → logprob: -15.202742576599121
    8. 'X' → logprob: -15.702742576599121
    9. '.abs' → logprob: -15.827742576599121
    10. '(X' → logprob: -16.077743530273438

Token 98: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.40063902735710144
    2. '(X' → logprob: -1.1506390571594238
    3. '(x' → logprob: -4.400639057159424
    4. 'X' → logprob: -7.025639057159424
    5. 'v' → logprob: -8.150638580322266
    6. '(' → logprob: -8.525638580322266
    7. 'x' → logprob: -11.275638580322266
    8. ')' → logprob: -12.525638580322266
    9. '((' → logprob: -12.775638580322266
    10. '(V' → logprob: -12.900638580322266

Token 99: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6327977180480957
    2. '-' → logprob: -0.7577977180480957
    3. '-X' → logprob: -9.507797241210938
    4. ' ' → logprob: -9.882797241210938
    5. '-x' → logprob: -10.757797241210938
    6. '-
' → logprob: -11.132797241210938
    7. '   ' → logprob: -11.507797241210938
    8. ' X' → logprob: -11.632797241210938
    9. 'X' → logprob: -11.882797241210938
    10. 'x' → logprob: -12.507797241210938

Token 100: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.004120669327676296
    2. ' X' → logprob: -5.504120826721191
    3. ' ' → logprob: -11.254120826721191
    4. '   ' → logprob: -11.254120826721191
    5. ')' → logprob: -12.129120826721191
    6. 'x' → logprob: -12.754120826721191
    7. '  ' → logprob: -12.879120826721191
    8. '	X' → logprob: -13.129120826721191
    9. '(X' → logprob: -14.254120826721191
    10. '>X' → logprob: -14.754120826721191

Token 101: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0019361276645213366
    2. ')' → logprob: -6.251935958862305
    3. '))
' → logprob: -12.251935958862305
    4. ' ))' → logprob: -13.251935958862305
    5. ')))' → logprob: -14.876935958862305
    6. '))

' → logprob: -16.251935958862305
    7. '()))' → logprob: -16.501935958862305
    8. '),' → logprob: -16.626935958862305
    9. ')
' → logprob: -16.626935958862305
    10. '0' → logprob: -17.001935958862305

Token 102: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8813974261283875
    2. 'g' → logprob: -1.0063974857330322
    3. 'answer' → logprob: -2.2563974857330322
    4. 'ans' → logprob: -3.1313974857330322
    5. 'from' → logprob: -3.3813974857330322
    6. 'res' → logprob: -3.8813974857330322
    7. 'current' → logprob: -4.381397247314453
    8. 'd' → logprob: -5.756397247314453
    9. ' result' → logprob: -8.506397247314453
    10. 'diff' → logprob: -8.631397247314453

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019221225753426552
    2. '=' → logprob: -4.394221305847168
    3. '_' → logprob: -5.019221305847168
    4. ' _' → logprob: -10.019221305847168
    5. ' ' → logprob: -11.019221305847168
    6. '_g' → logprob: -12.019221305847168
    7. '_=' → logprob: -12.769221305847168
    8. 's' → logprob: -13.019221305847168
    9. '=_' → logprob: -13.144221305847168
    10. ')' → logprob: -13.269221305847168

Token 104: ' dif' (ID: 1501)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0021966483909636736
    2. '0' → logprob: -6.127196788787842
    3. 'dif' → logprob: -12.377196311950684
    4. ' dif' → logprob: -12.502196311950684
    5. 'd' → logprob: -13.002196311950684
    6. 'abs' → logprob: -15.002196311950684
    7. '   ' → logprob: -15.377196311950684
    8. ' diff' → logprob: -15.502196311950684
    9. ' ' → logprob: -15.502196311950684
    10. '1' → logprob: -16.252197265625

Token 105: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0005300374468788505
    2. 's' → logprob: -7.625530242919922
    3. 'ffs' → logprob: -10.500530242919922
    4. 'cs' → logprob: -11.750530242919922
    5. 'rs' → logprob: -13.250530242919922
    6. 'ss' → logprob: -13.625530242919922
    7. 'ps' → logprob: -13.750530242919922
    8. 'f' → logprob: -14.125530242919922
    9. ' fs' → logprob: -14.375530242919922
    10. 'ferences' → logprob: -15.375530242919922

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00035060103982686996
    2. 'def' → logprob: -8.750350952148438
    3. '0' → logprob: -9.000350952148438
    4. '.pop' → logprob: -10.875350952148438
    5. 'from' → logprob: -11.000350952148438
    6. 'import' → logprob: -11.875350952148438
    7. '
' → logprob: -12.000350952148438
    8. 'for' → logprob: -12.500350952148438
    9. '```' → logprob: -12.750350952148438
    10. '<|end|>' → logprob: -13.250350952148438

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004621187690645456
    2. '1' → logprob: -5.3796210289001465
    3. ' ' → logprob: -14.004621505737305
    4. '   ' → logprob: -16.379621505737305
    5. '-' → logprob: -17.754621505737305
    6. '2' → logprob: -17.754621505737305
    7. '۰' → logprob: -17.879621505737305
    8. '０' → logprob: -18.567121505737305
    9. ')' → logprob: -18.879621505737305
    10. '01' → logprob: -19.067121505737305

Token 108: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. ' for' → logprob: -13.875000953674316
    3. 'from' → logprob: -15.625000953674316
    4. '
' → logprob: -19.000001907348633
    5. '```' → logprob: -19.125001907348633
    6. 'For' → logprob: -19.625001907348633
    7. '<|end|>' → logprob: -20.250001907348633
    8. '	for' → logprob: -21.125001907348633
    9. '   ' → logprob: -22.250001907348633
    10. 'and' → logprob: -22.375001907348633

Token 110: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11235501617193222
    2. 'i' → logprob: -2.3623549938201904
    3. ' d' → logprob: -4.8623552322387695
    4. 'd' → logprob: -5.6123552322387695
    5. 'diff' → logprob: -7.9873552322387695
    6. ' diff' → logprob: -8.11235523223877
    7. 'v' → logprob: -11.36235523223877
    8. ' v' → logprob: -11.48735523223877
    9. ' val' → logprob: -11.61235523223877
    10. 'val' → logprob: -12.23735523223877

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806983679533005
    2. 'in' → logprob: -3.288069725036621
    3. ' ' → logprob: -10.788069725036621
    4. '	in' → logprob: -12.163069725036621
    5. 'range' → logprob: -14.538069725036621
    6. '1' → logprob: -14.663069725036621
    7. '  ' → logprob: -14.788069725036621
    8. '   ' → logprob: -15.163069725036621
    9. 'In' → logprob: -15.538069725036621
    10. '```' → logprob: -15.663069725036621

Token 112: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2015669345855713
    2. ' range' → logprob: -1.7015669345855713
    3. 'diff' → logprob: -8.951566696166992
    4. ' dif' → logprob: -11.326566696166992
    5. ' ' → logprob: -12.076566696166992
    6. '   ' → logprob: -12.951566696166992
    7. '	range' → logprob: -13.826566696166992
    8. '  ' → logprob: -14.076566696166992
    9. '(range' → logprob: -14.076566696166992
    10. ' diff' → logprob: -14.701566696166992

Token 113: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011048289015889168
    2. '1' → logprob: -4.511048316955566
    3. '(len' → logprob: -15.261048316955566
    4. ' ' → logprob: -15.761048316955566
    5. '   ' → logprob: -16.13604736328125
    6. ' (' → logprob: -16.51104736328125
    7. 'len' → logprob: -17.01104736328125
    8. '(
' → logprob: -20.51104736328125
    9. '  ' → logprob: -21.51104736328125
    10. '```' → logprob: -21.88604736328125

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.32523515378125e-05
    2. 'len' → logprob: -10.250062942504883
    3. ' ' → logprob: -10.625062942504883
    4. '   ' → logprob: -12.625062942504883
    5. ' len' → logprob: -16.500062942504883
    6. '  ' → logprob: -16.875062942504883
    7. '    ' → logprob: -17.875062942504883
    8. '(' → logprob: -18.750062942504883
    9. '       ' → logprob: -19.750062942504883
    10. '１' → logprob: -19.875062942504883

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028444388881325722
    2. ',len' → logprob: -3.653444290161133
    3. ',N' → logprob: -7.278444290161133
    4. 'len' → logprob: -7.653444290161133
    5. ' len' → logprob: -7.653444290161133
    6. '(len' → logprob: -8.278444290161133
    7. ' ,' → logprob: -8.903444290161133
    8. '   ' → logprob: -10.028444290161133
    9. ' N' → logprob: -10.403444290161133
    10. 'N' → logprob: -10.528444290161133

Token 116: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.260318398475647
    2. 'len' → logprob: -1.510318398475647
    3. ' len' → logprob: -5.260318279266357
    4. ' N' → logprob: -5.760318279266357
    5. '   ' → logprob: -11.760318756103516
    6. 'n' → logprob: -13.635318756103516
    7. ' ' → logprob: -14.135318756103516
    8. '  ' → logprob: -15.385318756103516
    9. '(len' → logprob: -15.510318756103516
    10. '    ' → logprob: -16.385318756103516

Token 117: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.875008583068848
    3. ')' → logprob: -14.250008583068848
    4. ' (' → logprob: -14.750008583068848
    5. 'd' → logprob: -15.250008583068848
    6. '(diff' → logprob: -15.750008583068848
    7. ')d' → logprob: -18.25000762939453
    8. '   ' → logprob: -18.25000762939453
    9. '(
' → logprob: -18.62500762939453
    10. 'diff' → logprob: -18.75000762939453

Token 118: 'iffs' (ID: 33932)
  Prédit: 'iffs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iffs' → logprob: -0.0013385741040110588
    2. '   ' → logprob: -7.251338481903076
    3. ')' → logprob: -8.001338958740234
    4. ' ' → logprob: -10.126338958740234
    5. 'iff' → logprob: -10.126338958740234
    6. 'diff' → logprob: -10.251338958740234
    7. 'if' → logprob: -10.876338958740234
    8. '`' → logprob: -11.126338958740234
    9. '  ' → logprob: -11.376338958740234
    10. 's' → logprob: -11.626338958740234

Token 119: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023347150534391403
    2. '):
' → logprob: -3.7733471393585205
    3. ' ):' → logprob: -9.523346900939941
    4. ')):' → logprob: -11.023346900939941
    5. ')' → logprob: -12.398346900939941
    6. '):
' → logprob: -12.773346900939941
    7. ')):
' → logprob: -13.523346900939941
    8. '   ' → logprob: -13.648346900939941
    9. ' ):
' → logprob: -13.773346900939941
    10. ':' → logprob: -14.023346900939941

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08152273297309875
    2. ' result' → logprob: -2.8315227031707764
    3. 'result' → logprob: -3.9565227031707764
    4. '	result' → logprob: -9.331522941589355
    5. '    
' → logprob: -9.456522941589355
    6. '       ' → logprob: -10.581522941589355
    7. '
' → logprob: -10.581522941589355
    8. ' 
' → logprob: -12.456522941589355
    9. '```' → logprob: -12.581522941589355
    10. '    ' → logprob: -13.331522941589355

Token 121: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.051705870777368546
    2. '   ' → logprob: -3.301705837249756
    3. ' result' → logprob: -4.301705837249756
    4. '	result' → logprob: -11.051706314086914
    5. '
' → logprob: -12.801706314086914
    6. '       ' → logprob: -12.801706314086914
    7. ' ' → logprob: -13.301706314086914
    8. '```' → logprob: -13.676706314086914
    9. '  ' → logprob: -14.301706314086914
    10. '    
' → logprob: -14.676706314086914

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868762254714966
    2. '=' → logprob: -1.1368762254714966
    3. ' ' → logprob: -13.136876106262207
    4. '=g' → logprob: -13.136876106262207
    5. ' *=' → logprob: -14.511876106262207
    6. '＝' → logprob: -15.511876106262207
    7. ' ^=' → logprob: -15.636876106262207
    8. 'g' → logprob: -16.761877059936523
    9. ' +=' → logprob: -16.886877059936523
    10. ')' → logprob: -16.886877059936523

Token 123: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.01604023203253746
    2. ' gcd' → logprob: -4.141040325164795
    3. '   ' → logprob: -13.266039848327637
    4. ' ' → logprob: -13.391039848327637
    5. ' g' → logprob: -13.766039848327637
    6. '	g' → logprob: -14.266039848327637
    7. '(g' → logprob: -14.516039848327637
    8. '  ' → logprob: -15.266039848327637
    9. '_g' → logprob: -16.641040802001953
    10. ''g' → logprob: -16.891040802001953

Token 124: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.006740238983184099
    2. '(' → logprob: -5.006740093231201
    3. 'result' → logprob: -10.63174057006836
    4. ' result' → logprob: -14.88174057006836
    5. '(
' → logprob: -15.75674057006836
    6. '(results' → logprob: -16.13174057006836
    7. ',result' → logprob: -16.63174057006836
    8. ' (' → logprob: -16.63174057006836
    9. '	result' → logprob: -17.25674057006836
    10. '=result' → logprob: -17.63174057006836

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06294222176074982
    2. ',d' → logprob: -2.8129422664642334
    3. ' ,' → logprob: -6.937942028045654
    4. '   ' → logprob: -13.812942504882812
    5. 'diff' → logprob: -14.062942504882812
    6. ',
' → logprob: -14.562942504882812
    7. '(diff' → logprob: -15.437942504882812
    8. ' dif' → logprob: -15.562942504882812
    9. ',D' → logprob: -15.687942504882812
    10. ',",' → logprob: -15.687942504882812

Token 126: ' dif' (ID: 1501)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.11373856663703918
    2. ' dif' → logprob: -2.238738536834717
    3. ' diff' → logprob: -7.113738536834717
    4. ' d' → logprob: -10.238739013671875
    5. 'dif' → logprob: -10.613739013671875
    6. 'd' → logprob: -10.863739013671875
    7. '	d' → logprob: -11.488739013671875
    8. ' ' → logprob: -12.613739013671875
    9. ')' → logprob: -13.363739013671875
    10. '	diff' → logprob: -13.488739013671875

Token 127: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.03898964822292328
    2. 's' → logprob: -3.288989543914795
    3. 'ffs' → logprob: -7.538989543914795
    4. 'iffs' → logprob: -7.913989543914795
    5. '[' → logprob: -11.413990020751953
    6. 'ds' → logprob: -11.788990020751953
    7. 'cs' → logprob: -12.413990020751953
    8. '[i' → logprob: -12.413990020751953
    9. 'diff' → logprob: -12.663990020751953
    10. 'ss' → logprob: -12.913990020751953

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001239196863025427
    2. '[' → logprob: -9.000123977661133
    3. '[
' → logprob: -15.500123977661133
    4. '[I' → logprob: -16.250123977661133
    5. ')' → logprob: -16.750123977661133
    6. '[j' → logprob: -17.625123977661133
    7. ')[' → logprob: -18.000123977661133
    8. '```' → logprob: -18.625123977661133
    9. '[int' → logprob: -19.125123977661133
    10. '[ii' → logprob: -19.250123977661133

Token 129: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. '))' → logprob: -13.12500286102295
    3. ' )' → logprob: -15.12500286102295
    4. ')
' → logprob: -15.37500286102295
    5. ')`' → logprob: -18.000001907348633
    6. ')}' → logprob: -18.375001907348633
    7. '])' → logprob: -18.625001907348633
    8. '),' → logprob: -19.125001907348633
    9. ')#' → logprob: -19.375001907348633
    10. '})' → logprob: -19.375001907348633

Token 130: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018533257767558098
    2. ')' → logprob: -4.018533229827881
    3. '
' → logprob: -8.268533706665039
    4. ')
' → logprob: -9.768533706665039
    5. ' print' → logprob: -10.018533706665039
    6. '(print' → logprob: -11.268533706665039
    7. '.print' → logprob: -12.643533706665039
    8. '```' → logprob: -12.893533706665039
    9. ' 
' → logprob: -13.768533706665039
    10. '#' → logprob: -13.768533706665039

Token 131: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868960440158844
    2. '(result' → logprob: -1.136896014213562
    3. '("("' → logprob: -11.761896133422852
    4. ' (' → logprob: -11.886896133422852
    5. '('' → logprob: -12.886896133422852
    6. '()' → logprob: -13.011896133422852
    7. '((' → logprob: -13.386896133422852
    8. '(`' → logprob: -13.761896133422852
    9. '(results' → logprob: -14.636896133422852
    10. '(resultado' → logprob: -14.886896133422852

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')`' → logprob: -16.625
    3. '))' → logprob: -17.375
    4. ' )' → logprob: -17.5
    5. ')
' → logprob: -19.75
    6. '()' → logprob: -19.875
    7. ')}' → logprob: -20.125
    8. '())' → logprob: -20.25
    9. ')**' → logprob: -20.5
    10. '(' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 130
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 107
Précision stricte (1ère position): 51.54%
Précision adaptée (1ère position): 53.85%
Précision (top 10): 82.31%
================================================================================
