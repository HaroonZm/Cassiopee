================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def lire_entier():
    return int(input())

def lire_liste():
    return list(map(int, input().split()))

def calculer_somme(lst):
    return sum(lst)

def initialiser_ans():
    return 0

def obtenir_longueur(lst):
    return len(lst)

def calculer_produit(a, b):
    return a * b

def diminuer_somme(s, val):
    return s - val

def mise_a_jour_ans(ans, val):
    return ans + val

def division_entiere(a, b):
    return a // b

def afficher(val):
    print(val)

def traitement():
    N = lire_entier()
    d = lire_liste()
    ans = initialiser_ans()
    somme_totale = calculer_somme(d)
    longueur = obtenir_longueur(d)
    for i in range(0, longueur):
        val = calculer_produit(d[i], diminuer_somme(somme_totale, d[i]))
        ans = mise_a_jour_ans(ans, val)
    afficher(division_entiere(ans, 2))

traitement()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' lire' (ID: 46082)
  → Token d'amorce (pas de prédiction)

Token 2: '_ent' (ID: 66249)
  → Token d'amorce (pas de prédiction)

Token 3: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.06404968351125717
    2. '_' → logprob: -3.43904972076416
    3. 'r' → logprob: -4.56404972076416
    4. '()' → logprob: -5.31404972076416
    5. '(' → logprob: -5.56404972076416
    6. 'er' → logprob: -5.68904972076416
    7. 'ree' → logprob: -5.93904972076416
    8. 'e' → logprob: -7.06404972076416
    9. '_r' → logprob: -7.06404972076416
    10. 're' → logprob: -7.43904972076416

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007051144260913134
    2. '_' → logprob: -5.00705099105835
    3. '():' → logprob: -9.007051467895508
    4. '(_' → logprob: -9.882051467895508
    5. '```' → logprob: -10.257051467895508
    6. ' (' → logprob: -10.507051467895508
    7. '"' → logprob: -11.132051467895508
    8. ':' → logprob: -11.257051467895508
    9. '()' → logprob: -11.382051467895508
    10. '(:' → logprob: -11.757051467895508

Token 5: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.39775365591049194
    2. '   ' → logprob: -1.7727537155151367
    3. '(' → logprob: -2.8977537155151367
    4. ':' → logprob: -3.3977537155151367
    5. '``' → logprob: -4.647753715515137
    6. ' ' → logprob: -4.772753715515137
    7. '    
' → logprob: -4.897753715515137
    8. '():' → logprob: -5.022753715515137
    9. '(
' → logprob: -5.397753715515137
    10. ' 
' → logprob: -5.522753715515137

Token 6: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9950383901596069
    2. 'return' (adapté à ' return') → logprob: -0.9950383901596069
    3. 'n' → logprob: -2.4950385093688965
    4. ' ' → logprob: -2.8700385093688965
    5. 'try' → logprob: -3.3700385093688965
    6. 'x' → logprob: -4.1200385093688965
    7. ' return' → logprob: -4.4950385093688965
    8. 'r' → logprob: -4.4950385093688965
    9. '```' → logprob: -4.4950385093688965
    10. 'i' → logprob: -4.6200385093688965

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.036906901746988297
    2. 'int' → logprob: -4.036906719207764
    3. ' ' → logprob: -4.161906719207764
    4. ' input' → logprob: -6.911906719207764
    5. '(int' → logprob: -7.411906719207764
    6. '0' → logprob: -8.036907196044922
    7. 'input' → logprob: -8.161907196044922
    8. ' ' → logprob: -8.286907196044922
    9. '  ' → logprob: -8.911907196044922
    10. '<int' → logprob: -9.161907196044922

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025282183196395636
    2. '('' → logprob: -6.252528190612793
    3. '("("' → logprob: -8.627528190612793
    4. ''' → logprob: -9.002528190612793
    5. '()' → logprob: -9.752528190612793
    6. '40' → logprob: -10.252528190612793
    7. '```' → logprob: -10.377528190612793
    8. '`' → logprob: -10.877528190612793
    9. '("")' → logprob: -10.877528190612793
    10. '32' → logprob: -11.002528190612793

Token 9: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022113965824246407
    2. ')' → logprob: -7.127211570739746
    3. '('' → logprob: -7.377211570739746
    4. '("("' → logprob: -7.627211570739746
    5. '(""))' → logprob: -9.377211570739746
    6. '(
' → logprob: -10.127211570739746
    7. ' (' → logprob: -10.502211570739746
    8. ''' → logprob: -10.502211570739746
    9. '()' → logprob: -10.877211570739746
    10. '())' → logprob: -11.002211570739746

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09740844368934631
    2. '()' → logprob: -3.0974085330963135
    3. '(
' → logprob: -4.097408294677734
    4. '\n' → logprob: -4.597408294677734
    5. ')' → logprob: -5.347408294677734
    6. '
' → logprob: -5.597408294677734
    7. '#' → logprob: -6.097408294677734
    8. 'def' → logprob: -6.222408294677734
    9. '\' → logprob: -6.597408294677734
    10. '<|end|>' → logprob: -6.972408294677734

Token 11: ' lire' (ID: 46082)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.9437305927276611
    2. ' saisir' → logprob: -1.9437305927276611
    3. ' lire' → logprob: -2.068730592727661
    4. ' somme' → logprob: -2.568730592727661
    5. 's' → logprob: -3.068730592727661
    6. ' ajouter' → logprob: -3.318730592727661
    7. ' calcul' → logprob: -3.443730592727661
    8. ' ' → logprob: -3.943730592727661
    9. '_' → logprob: -4.068730354309082
    10. ' ' → logprob: -4.193730354309082

Token 12: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0027221334166824818
    2. '_ent' → logprob: -6.252722263336182
    3. '(' → logprob: -8.502721786499023
    4. '_s' → logprob: -9.377721786499023
    5. '_l' → logprob: -9.627721786499023
    6. '_car' → logprob: -10.502721786499023
    7. '_string' → logprob: -10.502721786499023
    8. '_a' → logprob: -10.752721786499023
    9. '_c' → logprob: -10.877721786499023
    10. '_sat' → logprob: -10.877721786499023

Token 13: 'iste' (ID: 4872)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.15037134289741516
    2. 'ine' → logprob: -3.2753713130950928
    3. '_ent' → logprob: -3.5253713130950928
    4. 'ent' → logprob: -3.9003713130950928
    5. '_' → logprob: -4.525371551513672
    6. 'ong' → logprob: -4.775371551513672
    7. 'ire' → logprob: -4.900371551513672
    8. 'iste' → logprob: -5.025371551513672
    9. 'e' → logprob: -5.650371551513672
    10. 'ist' → logprob: -6.400371551513672

Token 14: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2231515645980835
    2. '()' → logprob: -1.3481515645980835
    3. '_' → logprob: -1.4731515645980835
    4. '():' → logprob: -1.5981515645980835
    5. '```' → logprob: -5.973151683807373
    6. '_list' → logprob: -6.473151683807373
    7. '()">' → logprob: -6.973151683807373
    8. '_l' → logprob: -7.598151683807373
    9. '[' → logprob: -7.723151683807373
    10. '_a' → logprob: -7.848151683807373

Token 15: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.645425021648407
    2. '   ' → logprob: -1.0204250812530518
    3. '[' → logprob: -2.2704250812530518
    4. '()' → logprob: -5.395424842834473
    5. '(' → logprob: -5.770424842834473
    6. 'return' → logprob: -6.895424842834473
    7. ' []' → logprob: -6.895424842834473
    8. '[int' → logprob: -8.270424842834473
    9. '    ' → logprob: -8.395424842834473
    10. ' ' → logprob: -8.645424842834473

Token 16: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.187913179397583
    2. 'return' (adapté à ' return') → logprob: -1.312913179397583
    3. ' return' → logprob: -1.312913179397583
    4. '[]' → logprob: -2.937913179397583
    5. ' []' → logprob: -3.437913179397583
    6. '[' → logprob: -4.187912940979004
    7. ' ' → logprob: -4.187912940979004
    8. 'l' → logprob: -4.187912940979004
    9. '    ' → logprob: -5.437912940979004
    10. ' l' → logprob: -5.562912940979004

Token 17: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.25907066464424133
    2. ' [' → logprob: -1.884070634841919
    3. 'list' → logprob: -3.134070634841919
    4. '[list' → logprob: -4.134070873260498
    5. '[' → logprob: -4.384070873260498
    6. ' []' → logprob: -5.884070873260498
    7. ' ' → logprob: -7.634070873260498
    8. '[int' → logprob: -8.00907039642334
    9. '[]' → logprob: -8.00907039642334
    10. '[input' → logprob: -9.00907039642334

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3184031844139099
    2. '(map' → logprob: -1.3184032440185547
    3. '(int' → logprob: -5.318403244018555
    4. '(input' → logprob: -9.568403244018555
    5. '()' → logprob: -9.943403244018555
    6. '(range' → logprob: -10.068403244018555
    7. '(eval' → logprob: -10.443403244018555
    8. '(s' → logprob: -11.068403244018555
    9. '(filter' → logprob: -12.443403244018555
    10. '(
' → logprob: -12.693403244018555

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012695050798356533
    2. '(' → logprob: -4.387694835662842
    3. 'int' → logprob: -9.1376953125
    4. '(
' → logprob: -11.0126953125
    5. '=int' → logprob: -11.1376953125
    6. ' (' → logprob: -11.3876953125
    7. '<int' → logprob: -11.5126953125
    8. ')' → logprob: -11.7626953125
    9. '   ' → logprob: -12.1376953125
    10. ' int' → logprob: -12.5126953125

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2671070396900177
    2. ',input' → logprob: -1.8921070098876953
    3. ',' → logprob: -2.7671070098876953
    4. '(' → logprob: -4.017107009887695
    5. 'input' → logprob: -6.392107009887695
    6. ' ,' → logprob: -8.017107009887695
    7. ' (' → logprob: -8.517107009887695
    8. ' input' → logprob: -8.517107009887695
    9. '))' → logprob: -8.642107009887695
    10. ')' → logprob: -9.642107009887695

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08902551233768463
    2. ' input' → logprob: -2.4640254974365234
    3. '(input' → logprob: -9.464025497436523
    4. ',input' → logprob: -12.964025497436523
    5. '=input' → logprob: -13.089025497436523
    6. ' ' → logprob: -13.839025497436523
    7. '	input' → logprob: -14.214025497436523
    8. '   ' → logprob: -14.339025497436523
    9. '<input' → logprob: -14.589025497436523
    10. 'l' → logprob: -14.964025497436523

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005077573587186635
    2. '()' → logprob: -7.875507831573486
    3. '()))' → logprob: -9.250507354736328
    4. '())' → logprob: -12.000507354736328
    5. '())))' → logprob: -12.250507354736328
    6. ' ().' → logprob: -12.375507354736328
    7. '(' → logprob: -12.625507354736328
    8. '))' → logprob: -12.625507354736328
    9. '()));' → logprob: -13.250507354736328
    10. '   ' → logprob: -13.375507354736328

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020497082732617855
    2. 'strip' → logprob: -8.500205039978027
    3. 'rstrip' → logprob: -14.125205039978027
    4. ' split' → logprob: -14.500205039978027
    5. '(split' → logprob: -15.625205039978027
    6. 'spl' → logprob: -16.25020408630371
    7. '.split' → logprob: -18.12520408630371
    8. ')' → logprob: -18.50020408630371
    9. 's' → logprob: -19.87520408630371
    10. 'sp' → logprob: -21.00020408630371

Token 24: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07395605742931366
    2. '))' → logprob: -3.07395601272583
    3. '()' → logprob: -4.32395601272583
    4. ')))' → logprob: -5.32395601272583
    5. '())))' → logprob: -5.44895601272583
    6. '())' → logprob: -6.32395601272583
    7. '(' → logprob: -7.32395601272583
    8. ')' → logprob: -9.073956489562988
    9. '   ' → logprob: -11.448956489562988
    10. '()));' → logprob: -11.698956489562988

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008287840522825718
    2. '
' → logprob: -5.2582879066467285
    3. '#' → logprob: -6.5082879066467285
    4. '\' → logprob: -8.00828742980957
    5. '```' → logprob: -8.00828742980957
    6. 'n' → logprob: -8.50828742980957
    7. 'd' → logprob: -8.75828742980957
    8. '' → logprob: -9.13328742980957
    9. '

' → logprob: -9.50828742980957
    10. 'for' → logprob: -9.63328742980957

Token 26: ' calcul' (ID: 7559)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -1.1429765224456787
    2. ' calcul' → logprob: -2.0179765224456787
    3. ' ' → logprob: -2.1429765224456787
    4. ' lire' → logprob: -2.2679765224456787
    5. '_' → logprob: -2.7679765224456787
    6. ' factor' → logprob: -3.0179765224456787
    7. ' saisir' → logprob: -3.0179765224456787
    8. ' espace' → logprob: -3.8929765224456787
    9. ' afficher' → logprob: -4.142976760864258
    10. ' ajouter' → logprob: -4.267976760864258

Token 27: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4293615221977234
    2. '_' → logprob: -1.1793615818023682
    3. 'atrice' → logprob: -3.679361581802368
    4. '_sum' → logprob: -5.429361343383789
    5. '_total' → logprob: -6.679361343383789
    6. '(' → logprob: -6.804361343383789
    7. 'ateur' → logprob: -6.804361343383789
    8. '_average' → logprob: -6.804361343383789
    9. '_er' → logprob: -6.804361343383789
    10. 'ate' → logprob: -6.929361343383789

Token 28: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021081186830997467
    2. '(' → logprob: -5.27108097076416
    3. '_s' → logprob: -5.77108097076416
    4. '_(' → logprob: -6.52108097076416
    5. '_nombre' → logprob: -6.52108097076416
    6. '_m' → logprob: -6.64608097076416
    7. '_val' → logprob: -7.14608097076416
    8. '_max' → logprob: -7.27108097076416
    9. '_p' → logprob: -7.77108097076416
    10. '(_' → logprob: -7.77108097076416

Token 29: 'omme' (ID: 30420)
  Prédit: 'omme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.042663075029850006
    2. 'om' → logprob: -3.917663097381592
    3. 'um' → logprob: -4.917663097381592
    4. 'u' → logprob: -5.667663097381592
    5. 'core' → logprob: -6.042663097381592
    6. 'ommes' → logprob: -6.042663097381592
    7. 'umme' → logprob: -6.667663097381592
    8. 'urface' → logprob: -6.792663097381592
    9. 'omm' → logprob: -7.167663097381592
    10. '_' → logprob: -7.917663097381592

Token 30: '(lst' (ID: 95688)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48718002438545227
    2. '(' → logprob: -0.9871799945831299
    3. 's' → logprob: -5.487180233001709
    4. '()' → logprob: -6.612180233001709
    5. '_des' → logprob: -6.612180233001709
    6. '_total' → logprob: -7.362180233001709
    7. '_s' → logprob: -7.737180233001709
    8. '_m' → logprob: -7.737180233001709
    9. '_parent' → logprob: -7.862180233001709
    10. '<|end|>' → logprob: -7.862180233001709

Token 31: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.489033967256546
    2. '):' → logprob: -0.9890339374542236
    3. '))' → logprob: -4.489034175872803
    4. ')):' → logprob: -6.364034175872803
    5. ' )' → logprob: -8.239033699035645
    6. '(' → logprob: -8.364033699035645
    7. '   ' → logprob: -8.364033699035645
    8. '):
' → logprob: -8.364033699035645
    9. ')))' → logprob: -8.489033699035645
    10. ' ):' → logprob: -8.489033699035645

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1319831907749176
    2. '(' → logprob: -2.3819832801818848
    3. '(sum' → logprob: -4.256983280181885
    4. ' return' → logprob: -5.506983280181885
    5. 'sum' → logprob: -6.006983280181885
    6. ':' → logprob: -6.006983280181885
    7. ' sum' → logprob: -6.131983280181885
    8. 'return' → logprob: -6.756983280181885
    9. '  ' → logprob: -7.381983280181885
    10. '(s' → logprob: -7.756983280181885

Token 33: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25981464982032776
    2. '   ' → logprob: -2.509814739227295
    3. ' sum' → logprob: -2.759814739227295
    4. 'return' (adapté à ' return') → logprob: -2.759814739227295
    5. 'sum' → logprob: -3.884814739227295
    6. ' ' → logprob: -8.509814262390137
    7. '    ' → logprob: -9.759814262390137
    8. '  ' → logprob: -9.884814262390137
    9. ')' → logprob: -11.134814262390137
    10. 'r' → logprob: -12.134814262390137

Token 34: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.0070214224979281425
    2. 'sum' → logprob: -5.007021427154541
    3. ' ' → logprob: -8.132020950317383
    4. '(sum' → logprob: -12.132020950317383
    5. '  ' → logprob: -12.882020950317383
    6. ' ' → logprob: -13.257020950317383
    7. '	sum' → logprob: -13.507020950317383
    8. '=sum' → logprob: -15.132020950317383
    9. '   ' → logprob: -15.632020950317383
    10. ' suma' → logprob: -16.382020950317383

Token 35: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.4741072356700897
    2. '(' → logprob: -0.9741072654724121
    3. '(ls' → logprob: -11.849106788635254
    4. '(
' → logprob: -11.849106788635254
    5. ' (' → logprob: -12.474106788635254
    6. '(

' → logprob: -12.849106788635254
    7. '(l' → logprob: -12.974106788635254
    8. '('' → logprob: -13.724106788635254
    9. '(ll' → logprob: -14.099106788635254
    10. '("("' → logprob: -14.224106788635254

Token 36: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.17420256882906e-05
    2. '))' → logprob: -9.375091552734375
    3. '[' → logprob: -13.000091552734375
    4. ')))' → logprob: -13.500091552734375
    5. ' )' → logprob: -14.125091552734375
    6. '(' → logprob: -14.250091552734375
    7. '   ' → logprob: -14.625091552734375
    8. '())' → logprob: -14.875091552734375
    9. '])' → logprob: -15.000091552734375
    10. '(lst' → logprob: -15.875091552734375

Token 37: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15048161149024963
    2. '(' → logprob: -3.525481700897217
    3. '#' → logprob: -3.775481700897217
    4. '<|end|>' → logprob: -3.775481700897217
    5. '
' → logprob: -4.025481700897217
    6. '\' → logprob: -4.275481700897217
    7. '()' → logprob: -4.650481700897217
    8. '\n' → logprob: -5.025481700897217
    9. '(
' → logprob: -5.775481700897217
    10. '[' → logprob: -6.025481700897217

Token 38: ' initial' (ID: 4871)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.15030817687511444
    2. ' main' → logprob: -2.025308132171631
    3. 'calcul' → logprob: -6.025308132171631
    4. ' afficher' → logprob: -7.275308132171631
    5. ' trouver' → logprob: -7.775308132171631
    6. ' test' → logprob: -7.775308132171631
    7. ' addition' → logprob: -7.775308132171631
    8. ' multiplication' → logprob: -8.025308609008789
    9. ' somme' → logprob: -8.150308609008789
    10. ' ' → logprob: -8.400308609008789

Token 39: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.08074020594358444
    2. 'e' → logprob: -3.455740213394165
    3. 'er' → logprob: -3.705740213394165
    4. 's' → logprob: -4.955739974975586
    5. 'es' → logprob: -5.205739974975586
    6. '_' → logprob: -5.330739974975586
    7. '_sum' → logprob: -6.580739974975586
    8. 'isation' → logprob: -7.580739974975586
    9. '_element' → logprob: -8.080739974975586
    10. 'ser' → logprob: -8.330739974975586

Token 40: '_ans' (ID: 146254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23796486854553223
    2. '_l' → logprob: -1.7379648685455322
    3. '(' → logprob: -4.487964630126953
    4. '_list' → logprob: -5.237964630126953
    5. '_table' → logprob: -5.362964630126953
    6. '_lst' → logprob: -6.112964630126953
    7. '()' → logprob: -6.237964630126953
    8. '_(' → logprob: -6.487964630126953
    9. '(l' → logprob: -6.737964630126953
    10. '_s' → logprob: -6.737964630126953

Token 41: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03215954452753067
    2. '():' → logprob: -3.5321595668792725
    3. '(' → logprob: -6.907159328460693
    4. ' ()' → logprob: -8.032159805297852
    5. '[]' → logprob: -8.157159805297852
    6. '():
' → logprob: -8.532159805297852
    7. '_' → logprob: -9.157159805297852
    8. 's' → logprob: -9.907159805297852
    9. '()`' → logprob: -10.532159805297852
    10. 'ort' → logprob: -10.782159805297852

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6152266263961792
    2. '[]' → logprob: -0.8652266263961792
    3. ' []' → logprob: -4.240226745605469
    4. '{}' → logprob: -4.490226745605469
    5. 'return' → logprob: -4.615226745605469
    6. ' return' → logprob: -7.240226745605469
    7. '0' → logprob: -8.115226745605469
    8. ' =' → logprob: -8.240226745605469
    9. '[' → logprob: -8.240226745605469
    10. '{' → logprob: -8.365226745605469

Token 43: ' return' (ID: 622)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02272750623524189
    2. '{}' → logprob: -4.0227274894714355
    3. 'return' (adapté à ' return') → logprob: -6.2727274894714355
    4. '0' → logprob: -6.7727274894714355
    5. ' []' → logprob: -7.1477274894714355
    6. '   ' → logprob: -8.397727966308594
    7. '[' → logprob: -8.522727966308594
    8. 'ans' → logprob: -9.022727966308594
    9. '{' → logprob: -9.147727966308594
    10. '[]}' → logprob: -10.647727966308594

Token 44: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25617167353630066
    2. '0' → logprob: -2.131171703338623
    3. ' []' → logprob: -2.506171703338623
    4. '{}' → logprob: -3.881171703338623
    5. ' ' → logprob: -5.631171703338623
    6. ' {}' → logprob: -7.381171703338623
    7. '[' → logprob: -7.756171703338623
    8. '[]}' → logprob: -8.881171226501465
    9. ' [' → logprob: -9.756171226501465
    10. '{' → logprob: -10.006171226501465

Token 45: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.043516792356967926
    2. '0' → logprob: -3.5435168743133545
    3. '{}' → logprob: -4.418516635894775
    4. '[' → logprob: -6.543516635894775
    5. '[]}' → logprob: -9.418517112731934
    6. ' []' → logprob: -10.668517112731934
    7. '{' → logprob: -11.043517112731934
    8. 'dict' → logprob: -11.418517112731934
    9. '[]
' → logprob: -11.543517112731934
    10. '[int' → logprob: -11.793517112731934

Token 46: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5258621573448181
    2. '

' → logprob: -1.400862216949463
    3. '<|end|>' → logprob: -2.025862216949463
    4. '
' → logprob: -3.900862216949463
    5. '<|end|>' → logprob: -5.400862216949463
    6. '\' → logprob: -5.775862216949463
    7. ' 

' → logprob: -6.900862216949463
    8. '\n' → logprob: -7.525862216949463
    9. ' def' → logprob: -7.900862216949463
    10. '```' → logprob: -8.650861740112305

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006787843536585569
    2. 'n' → logprob: -5.3817877769470215
    3. 'for' → logprob: -7.3817877769470215
    4. '#' → logprob: -7.7567877769470215
    5. '
' → logprob: -7.8817877769470215
    6. '\' → logprob: -8.25678825378418
    7. 'd' → logprob: -9.00678825378418
    8. '<|end|>' → logprob: -9.38178825378418
    9. '```' → logprob: -9.63178825378418
    10. 'a' → logprob: -10.00678825378418

Token 48: ' obtenir' (ID: 54423)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.5495448708534241
    2. ' main' → logprob: -1.2995448112487793
    3. ' addition' → logprob: -2.7995448112487793
    4. ' ajouter' → logprob: -3.2995448112487793
    5. ' mettre' → logprob: -4.299544811248779
    6. ' accum' → logprob: -4.549544811248779
    7. ' traiter' → logprob: -5.174544811248779
    8. ' somme' → logprob: -5.549544811248779
    9. ' increment' → logprob: -6.174544811248779
    10. ' initial' → logprob: -6.299544811248779

Token 49: '_long' (ID: 42288)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010053068399429321
    2. '_s' → logprob: -5.3850531578063965
    3. '_max' → logprob: -6.5100531578063965
    4. '_ans' → logprob: -7.1350531578063965
    5. '_val' → logprob: -7.5100531578063965
    6. ' _' → logprob: -7.6350531578063965
    7. '_a' → logprob: -8.260052680969238
    8. '_nombre' → logprob: -8.385052680969238
    9. '_answer' → logprob: -9.010052680969238
    10. '_l' → logprob: -9.010052680969238

Token 50: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.0031846018973737955
    2. 'eur' → logprob: -5.753184795379639
    3. 'e' → logprob: -12.87818431854248
    4. 'ue' → logprob: -13.62818431854248
    5. '```' → logprob: -13.62818431854248
    6. '(' → logprob: -14.50318431854248
    7. 'uer' → logprob: -14.75318431854248
    8. '()' → logprob: -14.87818431854248
    9. 'eurs' → logprob: -16.128185272216797
    10. '_e' → logprob: -16.378185272216797

Token 51: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3241667151451111
    2. '_' → logprob: -1.4491667747497559
    3. '()' → logprob: -3.699166774749756
    4. 's' → logprob: -4.949166774749756
    5. '(lst' → logprob: -5.824166774749756
    6. '(_)' → logprob: -6.574166774749756
    7. '_(' → logprob: -6.949166774749756
    8. '(_' → logprob: -7.324166774749756
    9. '(l' → logprob: -7.324166774749756
    10. '(s' → logprob: -7.574166774749756

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14541834592819214
    2. ')' → logprob: -2.020418405532837
    3. '()' → logprob: -6.770418167114258
    4. '():' → logprob: -6.770418167114258
    5. ' ):' → logprob: -8.645418167114258
    6. '())' → logprob: -8.770418167114258
    7. '):
' → logprob: -10.270418167114258
    8. ' )' → logprob: -10.645418167114258
    9. '   ' → logprob: -11.395418167114258
    10. '(' → logprob: -11.770418167114258

Token 53: '   ' (ID: 271)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.060242414474487305
    2. 'len' → logprob: -3.4352424144744873
    3. '   ' → logprob: -3.6852424144744873
    4. ' return' → logprob: -6.810242652893066
    5. '	len' → logprob: -11.060242652893066
    6. '=len' → logprob: -11.685242652893066
    7. '    ' → logprob: -12.060242652893066
    8. 'return' → logprob: -12.185242652893066
    9. ' ' → logprob: -12.310242652893066
    10. ' ' → logprob: -12.560242652893066

Token 54: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3210409879684448
    2. 'return' (adapté à ' return') → logprob: -2.3210411071777344
    3. ' len' → logprob: -2.3210411071777344
    4. 'len' → logprob: -2.5710411071777344
    5. '   ' → logprob: -6.321041107177734
    6. ' ' → logprob: -12.821041107177734
    7. '```' → logprob: -12.946041107177734
    8. ' ' → logprob: -13.946041107177734
    9. '(len' → logprob: -14.071041107177734
    10. '  ' → logprob: -14.321041107177734

Token 55: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0011708177626132965
    2. 'len' → logprob: -6.751170635223389
    3. ' ' → logprob: -14.751171112060547
    4. '(len' → logprob: -16.251171112060547
    5. ' ' → logprob: -16.751171112060547
    6. '	len' → logprob: -17.001171112060547
    7. '=len' → logprob: -18.126171112060547
    8. '[len' → logprob: -18.251171112060547
    9. ',len' → logprob: -20.251171112060547
    10. '<len' → logprob: -20.251171112060547

Token 56: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.001933397026732564
    2. '(' → logprob: -6.251933574676514
    3. '(ls' → logprob: -13.001933097839355
    4. '(l' → logprob: -13.126933097839355
    5. '(lista' → logprob: -15.501933097839355
    6. '(list' → logprob: -15.626933097839355
    7. 'lst' → logprob: -16.626934051513672
    8. '(
' → logprob: -16.751934051513672
    9. '(

' → logprob: -17.251934051513672
    10. '(ll' → logprob: -17.876934051513672

Token 57: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. '())' → logprob: -11.625011444091797
    3. ' )' → logprob: -14.000011444091797
    4. '()' → logprob: -14.375011444091797
    5. '))' → logprob: -14.375011444091797
    6. ')
' → logprob: -14.750011444091797
    7. ')return' → logprob: -16.375011444091797
    8. '   ' → logprob: -16.750011444091797
    9. '')' → logprob: -17.000011444091797
    10. ')))' → logprob: -17.000011444091797

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010567454155534506
    2. 'for' → logprob: -7.001056671142578
    3. '```' → logprob: -10.376056671142578
    4. '<|end|>' → logprob: -10.376056671142578
    5. '\' → logprob: -10.626056671142578
    6. 'n' → logprob: -10.876056671142578
    7. '<|end|>' → logprob: -11.626056671142578
    8. '#' → logprob: -11.876056671142578
    9. 'if' → logprob: -12.126056671142578
    10. '
' → logprob: -12.126056671142578

Token 59: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.719384491443634
    2. ' main' → logprob: -1.0943844318389893
    3. ' somme' → logprob: -3.5943844318389893
    4. ' traiter' → logprob: -3.5943844318389893
    5. ' ajouter' → logprob: -4.344384670257568
    6. ' initial' → logprob: -4.844384670257568
    7. ' obtenir' → logprob: -4.969384670257568
    8. ' compter' → logprob: -4.969384670257568
    9. ' afficher' → logprob: -5.219384670257568
    10. ' multiplier' → logprob: -5.219384670257568

Token 60: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -5.796184723294573e-06
    2. 'uler' → logprob: -13.750005722045898
    3. '```' → logprob: -13.875005722045898
    4. '   ' → logprob: -14.000005722045898
    5. '_er' → logprob: -14.000005722045898
    6. 'erer' → logprob: -14.125005722045898
    7. 'e' → logprob: -14.875005722045898
    8. '_' → logprob: -15.375005722045898
    9. '\' → logprob: -16.2500057220459
    10. 'uer' → logprob: -16.6250057220459

Token 61: '_pro' (ID: 4617)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.07850413024425507
    2. '_max' → logprob: -3.2035040855407715
    3. '_' → logprob: -4.0785040855407715
    4. '_sum' → logprob: -4.4535040855407715
    5. '_m' → logprob: -6.4535040855407715
    6. '_mult' → logprob: -7.3285040855407715
    7. '_factor' → logprob: -7.3285040855407715
    8. '_min' → logprob: -7.5785040855407715
    9. '_l' → logprob: -8.07850456237793
    10. '_average' → logprob: -8.45350456237793

Token 62: 'duit' (ID: 90246)
  Prédit: 'duit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duit' → logprob: -0.0965474545955658
    2. 'du' → logprob: -2.4715473651885986
    3. 'd' → logprob: -5.096547603607178
    4. 'duct' → logprob: -7.471547603607178
    5. 'gram' → logprob: -8.47154712677002
    6. 'duction' → logprob: -8.59654712677002
    7. 'fit' → logprob: -8.97154712677002
    8. 'f' → logprob: -9.47154712677002
    9. '

' → logprob: -9.97154712677002
    10. '
' → logprob: -10.97154712677002

Token 63: '(a' (ID: 6271)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.14351199567317963
    2. '(' → logprob: -2.018512010574341
    3. '(l' → logprob: -8.018511772155762
    4. '(ls' → logprob: -9.018511772155762
    5. ' (' → logprob: -9.268511772155762
    6. '_' → logprob: -9.268511772155762
    7. '(s' → logprob: -9.393511772155762
    8. '(lista' → logprob: -11.018511772155762
    9. ' ' → logprob: -11.393511772155762
    10. '_lst' → logprob: -11.518511772155762

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031407589558511972
    2. ' ,' → logprob: -5.878140926361084
    3. ')' → logprob: -8.753140449523926
    4. ',a' → logprob: -9.253140449523926
    5. ',b' → logprob: -9.878140449523926
    6. ' ' → logprob: -12.628140449523926
    7. 's' → logprob: -12.753140449523926
    8. 'a' → logprob: -12.878140449523926
    9. ',
' → logprob: -12.878140449523926
    10. ',n' → logprob: -12.878140449523926

Token 65: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868729770183563
    2. ' b' → logprob: -1.1368730068206787
    3. ' ' → logprob: -14.011873245239258
    4. ' ' → logprob: -14.386873245239258
    5. ')b' → logprob: -16.011873245239258
    6. '   ' → logprob: -16.261873245239258
    7. '<|end|>' → logprob: -16.386873245239258
    8. '	b' → logprob: -16.636873245239258
    9. ')' → logprob: -17.011873245239258
    10. '    ' → logprob: -17.136873245239258

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003691408783197403
    2. ')' → logprob: -5.62869119644165
    3. '):
' → logprob: -9.503691673278809
    4. ':' → logprob: -11.628691673278809
    5. '**' → logprob: -12.878691673278809
    6. '   ' → logprob: -13.128691673278809
    7. ' ):' → logprob: -13.878691673278809
    8. '):
' → logprob: -14.753691673278809
    9. ')**' → logprob: -15.003691673278809
    10. '*' → logprob: -15.128691673278809

Token 67: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.624675989151001
    2. '   ' → logprob: -1.124675989151001
    3. ' a' → logprob: -1.999675989151001
    4. ' return' → logprob: -5.499675750732422
    5. 'return' → logprob: -8.124675750732422
    6. '	a' → logprob: -10.999675750732422
    7. '  ' → logprob: -11.999675750732422
    8. ' ' → logprob: -12.249675750732422
    9. '    
' → logprob: -12.249675750732422
    10. '    ' → logprob: -12.499675750732422

Token 68: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12833671271800995
    2. ' a' → logprob: -2.1283366680145264
    3. '   ' → logprob: -7.3783369064331055
    4. ' return' → logprob: -7.5033369064331055
    5. 'return' (adapté à ' return') → logprob: -8.378336906433105
    6. '	a' → logprob: -13.753336906433105
    7. '    ' → logprob: -14.878336906433105
    8. ' ' → logprob: -15.253336906433105
    9. '  ' → logprob: -15.503336906433105
    10. ' ' → logprob: -16.37833595275879

Token 69: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759397745132446
    2. ' a' → logprob: -0.8259397745132446
    3. '	a' → logprob: -15.700940132141113
    4. ' ' → logprob: -16.325939178466797
    5. ' ' → logprob: -17.200939178466797
    6. '(a' → logprob: -18.200939178466797
    7. '_a' → logprob: -18.450939178466797
    8. '   ' → logprob: -18.575939178466797
    9. 'int' → logprob: -19.200939178466797
    10. '*a' → logprob: -19.200939178466797

Token 70: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759572386741638
    2. ' *' → logprob: -0.8259572386741638
    3. ' ' → logprob: -11.200957298278809
    4. '*b' → logprob: -12.825957298278809
    5. '**' → logprob: -14.825957298278809
    6. ' ' → logprob: -14.950957298278809
    7. ' **' → logprob: -15.075957298278809
    8. '   ' → logprob: -16.575956344604492
    9. '*object' → logprob: -16.950956344604492
    10. ' *
' → logprob: -16.950956344604492

Token 71: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.611323624383658e-05
    2. ' b' → logprob: -9.625065803527832
    3. '	b' → logprob: -19.25006675720215
    4. '   ' → logprob: -19.37506675720215
    5. ')b' → logprob: -20.00006675720215
    6. '*b' → logprob: -20.12506675720215
    7. ' ' → logprob: -20.37506675720215
    8. '_b' → logprob: -20.50006675720215
    9. '```' → logprob: -21.25006675720215
    10. '>b' → logprob: -21.50006675720215

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5256591439247131
    2. '<|end|>' → logprob: -1.6506590843200684
    3. '\n' → logprob: -2.0256590843200684
    4. '

' → logprob: -2.7756590843200684
    5. 'def' → logprob: -5.525659084320068
    6. '(' → logprob: -6.025659084320068
    7. '*' → logprob: -6.025659084320068
    8. '```' → logprob: -6.025659084320068
    9. '
' → logprob: -6.400659084320068
    10. '\' → logprob: -6.650659084320068

Token 73: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2330094575881958
    2. '
' → logprob: -1.7330094575881958
    3. '<|end|>' → logprob: -4.733009338378906
    4. '\n' → logprob: -5.108009338378906
    5. '

' → logprob: -5.483009338378906
    6. '#' → logprob: -5.983009338378906
    7. '\' → logprob: -6.108009338378906
    8. 'n' → logprob: -6.358009338378906
    9. 'for' → logprob: -6.358009338378906
    10. 'a' → logprob: -6.983009338378906

Token 74: ' dimin' (ID: 33870)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.34288978576660156
    2. ' calcul' → logprob: -1.5928897857666016
    3. ' factor' → logprob: -3.5928897857666016
    4. ' multiplication' → logprob: -4.092889785766602
    5. ' multiplier' → logprob: -4.217889785766602
    6. ' trouver' → logprob: -5.842889785766602
    7. ' somme' → logprob: -5.967889785766602
    8. ' afficher' → logprob: -5.967889785766602
    9. 'main' → logprob: -6.342889785766602
    10. ' addition' → logprob: -6.467889785766602

Token 75: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.0002557369298301637
    2. 'u' → logprob: -8.375255584716797
    3. 'uire' → logprob: -12.000255584716797
    4. 'ution' → logprob: -12.250255584716797
    5. 'ue' → logprob: -12.750255584716797
    6. 'uir' → logprob: -13.500255584716797
    7. '_' → logprob: -13.625255584716797
    8. '-' → logprob: -14.125255584716797
    9. 'uera' → logprob: -14.125255584716797
    10. 'ut' → logprob: -14.125255584716797

Token 76: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09835729748010635
    2. '_ans' → logprob: -3.4733572006225586
    3. '_un' → logprob: -4.223357200622559
    4. '(' → logprob: -4.348357200622559
    5. '_(' → logprob: -4.598357200622559
    6. '(ans' → logprob: -5.348357200622559
    7. '_val' → logprob: -5.598357200622559
    8. '_le' → logprob: -5.973357200622559
    9. '_par' → logprob: -5.973357200622559
    10. '(a' → logprob: -6.223357200622559

Token 77: 'omme' (ID: 30420)
  Prédit: 'omme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.7864990234375
    2. 'ombre' → logprob: -2.4114990234375
    3. 'tr' → logprob: -2.5364990234375
    4. '_' → logprob: -2.7864990234375
    5. 'e' → logprob: -2.9114990234375
    6. '_e' → logprob: -3.5364990234375
    7. 't' → logprob: -3.5364990234375
    8. '_t' → logprob: -3.9114990234375
    9. 'um' → logprob: -4.0364990234375
    10. 'om' → logprob: -4.0364990234375

Token 78: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5845972299575806
    2. '()' → logprob: -1.2095972299575806
    3. '(s' → logprob: -2.709597110748291
    4. '(ans' → logprob: -3.209597110748291
    5. '(lst' → logprob: -4.209597110748291
    6. 's' → logprob: -5.084597110748291
    7. '(a' → logprob: -5.334597110748291
    8. '_' → logprob: -5.959597110748291
    9. '()(' → logprob: -6.084597110748291
    10. '():' → logprob: -6.584597110748291

Token 79: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1189359575510025
    2. 'omme' → logprob: -3.118936061859131
    3. '):' → logprob: -4.118936061859131
    4. 'um' → logprob: -4.118936061859131
    5. 'e' → logprob: -4.743936061859131
    6. ',' → logprob: -4.993936061859131
    7. '_' → logprob: -5.368936061859131
    8. '))' → logprob: -5.868936061859131
    9. ')_' → logprob: -5.993936061859131
    10. 'umme' → logprob: -6.743936061859131

Token 80: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2991746962070465
    2. 'x' → logprob: -2.1741747856140137
    3. 'v' → logprob: -2.5491747856140137
    4. ' val' → logprob: -3.1741747856140137
    5. ' x' → logprob: -5.174174785614014
    6. 'n' → logprob: -5.174174785614014
    7. 'value' → logprob: -5.299174785614014
    8. ' v' → logprob: -5.549174785614014
    9. 'd' → logprob: -6.924174785614014
    10. ' value' → logprob: -7.424174785614014

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012784150429069996
    2. '):
' → logprob: -5.637784004211426
    3. 'eur' → logprob: -5.887784004211426
    4. ')' → logprob: -6.137784004211426
    5. 'e' → logprob: -6.387784004211426
    6. 'ue' → logprob: -6.512784004211426
    7. 'u' → logprob: -7.762784004211426
    8. 'uer' → logprob: -8.512784004211426
    9. ',' → logprob: -8.887784004211426
    10. '):
' → logprob: -9.137784004211426

Token 82: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5559961795806885
    2. '   ' → logprob: -1.3059961795806885
    3. ' s' → logprob: -1.9309961795806885
    4. ':' → logprob: -5.180995941162109
    5. '(s' → logprob: -6.430995941162109
    6. ' ' → logprob: -7.180995941162109
    7. ' return' → logprob: -7.180995941162109
    8. ' :' → logprob: -7.305995941162109
    9. '	s' → logprob: -8.43099594116211
    10. ' :
' → logprob: -8.43099594116211

Token 83: ' return' (ID: 622)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2425958663225174
    2. ' return' → logprob: -1.992595911026001
    3. 's' → logprob: -2.617595911026001
    4. 'return' (adapté à ' return') → logprob: -5.367595672607422
    5. '   ' → logprob: -6.617595672607422
    6. ' 
' → logprob: -10.492595672607422
    7. '(s' → logprob: -10.992595672607422
    8. ' ' → logprob: -10.992595672607422
    9. ' `' → logprob: -12.117595672607422
    10. ' ' → logprob: -12.242595672607422

Token 84: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.014165391214191914
    2. 's' → logprob: -4.26416540145874
    3. '(s' → logprob: -13.639164924621582
    4. ' ' → logprob: -14.264164924621582
    5. ' (' → logprob: -17.0141658782959
    6. ' ' → logprob: -17.7641658782959
    7. '(' → logprob: -18.6391658782959
    8. '	s' → logprob: -18.6391658782959
    9. '_s' → logprob: -19.1391658782959
    10. ' स' → logprob: -20.1391658782959

Token 85: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14589823782444
    2. '-' → logprob: -2.0208983421325684
    3. '-val' → logprob: -5.770898342132568
    4. ' ' → logprob: -9.77089786529541
    5. ' val' → logprob: -10.77089786529541
    6. '+' → logprob: -11.77089786529541
    7. ' ' → logprob: -11.89589786529541
    8. ' +' → logprob: -13.27089786529541
    9. 'val' → logprob: -13.64589786529541
    10. ' -
' → logprob: -14.02089786529541

Token 86: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.474091500043869
    2. ' val' → logprob: -0.9740915298461914
    3. '	val' → logprob: -11.224091529846191
    4. '(val' → logprob: -15.224091529846191
    5. ' ' → logprob: -15.599091529846191
    6. '1' → logprob: -15.849091529846191
    7. '[val' → logprob: -15.849091529846191
    8. '_val' → logprob: -15.974091529846191
    9. 'int' → logprob: -15.974091529846191
    10. ',val' → logprob: -16.599090576171875

Token 87: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1436920017004013
    2. 'd' → logprob: -3.2686920166015625
    3. '#' → logprob: -3.3936920166015625
    4. 'n' → logprob: -4.0186920166015625
    5. '\' → logprob: -4.0186920166015625
    6. '\n' → logprob: -4.6436920166015625
    7. '
' → logprob: -4.8936920166015625
    8. 'a' → logprob: -6.2686920166015625
    9. '[' → logprob: -6.5186920166015625
    10. 'e' → logprob: -7.1436920166015625

Token 89: ' mise' (ID: 25868)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8084196448326111
    2. ' calcul' → logprob: -1.1834197044372559
    3. 'calcul' → logprob: -2.308419704437256
    4. 'main' → logprob: -2.933419704437256
    5. ' initial' → logprob: -3.808419704437256
    6. ' obtenir' → logprob: -5.058419704437256
    7. 'def' → logprob: -5.058419704437256
    8. ' test' → logprob: -5.183419704437256
    9. ' multiplier' → logprob: -5.183419704437256
    10. 'ob' → logprob: -5.558419704437256

Token 90: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4182819426059723
    2. '_a' → logprob: -1.66828191280365
    3. 'à' → logprob: -2.7932820320129395
    4. '_en' → logprob: -3.5432820320129395
    5. 'a' → logprob: -3.7932820320129395
    6. '__' → logprob: -3.9182820320129395
    7. 'aj' → logprob: -4.5432820320129395
    8. '```' → logprob: -5.5432820320129395
    9. '___' → logprob: -6.5432820320129395
    10. '' → logprob: -7.1682820320129395

Token 91: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.06202336773276329
    2. 'jour' → logprob: -3.062023401260376
    3. '```' → logprob: -4.812023162841797
    4. '0' → logprob: -6.062023162841797
    5. '_' → logprob: -7.437023162841797
    6. '__' → logprob: -7.687023162841797
    7. '	' → logprob: -7.937023162841797
    8. ' jour' → logprob: -8.312023162841797
    9. '	j' → logprob: -8.687023162841797
    10. '1' → logprob: -8.687023162841797

Token 92: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.08244320005178452
    2. 'jour' → logprob: -3.7074432373046875
    3. 'o' → logprob: -4.2074432373046875
    4. '```' → logprob: -4.4574432373046875
    5. '__' → logprob: -4.5824432373046875
    6. '_' → logprob: -5.4574432373046875
    7. '_j' → logprob: -6.2074432373046875
    8. ' jour' → logprob: -6.4574432373046875
    9. '``' → logprob: -6.8324432373046875
    10. 'ourd' → logprob: -6.8324432373046875

Token 93: '_ans' (ID: 146254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15051770210266113
    2. '_s' → logprob: -2.400517702102661
    3. '(' → logprob: -4.150517463684082
    4. '_ans' → logprob: -4.400517463684082
    5. '_des' → logprob: -4.650517463684082
    6. '_de' → logprob: -5.150517463684082
    7. '_(' → logprob: -6.900517463684082
    8. '(s' → logprob: -7.025517463684082
    9. '_val' → logprob: -7.150517463684082
    10. 's' → logprob: -7.150517463684082

Token 94: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9397357702255249
    2. '(s' → logprob: -0.9397357702255249
    3. '(ans' → logprob: -1.564735770225525
    4. '()' → logprob: -5.1897358894348145
    5. '(a' → logprob: -6.8147358894348145
    6. '(val' → logprob: -6.9397358894348145
    7. '():' → logprob: -7.6897358894348145
    8. ' (' → logprob: -8.939735412597656
    9. '((' → logprob: -8.939735412597656
    10. '(n' → logprob: -8.939735412597656

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002423217985779047
    2. '):' → logprob: -7.002423286437988
    3. ',val' → logprob: -7.002423286437988
    4. ' ,' → logprob: -7.502423286437988
    5. ')' → logprob: -11.127423286437988
    6. ',s' → logprob: -11.627423286437988
    7. ',value' → logprob: -12.002423286437988
    8. ',
' → logprob: -12.752423286437988
    9. ',new' → logprob: -12.752423286437988
    10. ',n' → logprob: -13.252423286437988

Token 96: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.09863676130771637
    2. 'val' → logprob: -2.4736368656158447
    3. ' valeur' → logprob: -4.973636627197266
    4. ' value' → logprob: -7.098636627197266
    5. ' ' → logprob: -7.348636627197266
    6. ' ' → logprob: -8.723636627197266
    7. ' nouv' → logprob: -8.973636627197266
    8. '   ' → logprob: -9.098636627197266
    9. ' lst' → logprob: -9.223636627197266
    10. '	val' → logprob: -9.473636627197266

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0046769496984779835
    2. '):
' → logprob: -5.379676818847656
    3. ')' → logprob: -10.004676818847656
    4. '):
' → logprob: -12.004676818847656
    5. '):

' → logprob: -13.004676818847656
    6. ' ):' → logprob: -13.504676818847656
    7. ',' → logprob: -14.754676818847656
    8. ':' → logprob: -15.504676818847656
    9. '=' → logprob: -15.504676818847656
    10. '():' → logprob: -16.254676818847656

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.507378339767456
    2. ' ans' → logprob: -1.007378339767456
    3. ' return' → logprob: -3.757378339767456
    4. ' =' → logprob: -6.007378578186035
    5. 'ans' → logprob: -6.007378578186035
    6. '    ' → logprob: -6.882378578186035
    7. '	ans' → logprob: -6.882378578186035
    8. '(ans' → logprob: -7.632378578186035
    9. '=' → logprob: -7.757378578186035
    10. 'return' → logprob: -7.882378578186035

Token 99: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5270129442214966
    2. ' max' → logprob: -1.5270129442214966
    3. ' ans' → logprob: -1.7770129442214966
    4. '   ' → logprob: -4.277012825012207
    5. 'return' (adapté à ' return') → logprob: -5.277012825012207
    6. 'max' → logprob: -5.902012825012207
    7. 'ans' → logprob: -6.902012825012207
    8. ' if' → logprob: -8.652012825012207
    9. ' val' → logprob: -8.902012825012207
    10. ' min' → logprob: -9.277012825012207

Token 100: ' ans' (ID: 3345)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.15387855470180511
    2. ' ans' → logprob: -2.2788784503936768
    3. 'max' → logprob: -3.4038784503936768
    4. 'ans' → logprob: -5.028878688812256
    5. ' min' → logprob: -9.028878211975098
    6. ' val' → logprob: -9.528878211975098
    7. ' ' → logprob: -9.778878211975098
    8. '	ans' → logprob: -9.903878211975098
    9. ' ' → logprob: -10.153878211975098
    10. '	max' → logprob: -10.528878211975098

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47583645582199097
    2. '+' → logprob: -0.975836455821991
    3. ' ' → logprob: -8.100836753845215
    4. ' val' → logprob: -8.225836753845215
    5. '<|end|>' → logprob: -8.475836753845215
    6. 'val' → logprob: -8.725836753845215
    7. '>' → logprob: -9.100836753845215
    8. ' plus' → logprob: -9.100836753845215
    9. ' max' → logprob: -9.225836753845215
    10. ' if' → logprob: -9.475836753845215

Token 102: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.008621551096439362
    2. 'val' → logprob: -4.758621692657471
    3. ' ' → logprob: -12.008621215820312
    4. '	val' → logprob: -14.258621215820312
    5. '(val' → logprob: -16.133621215820312
    6. '[val' → logprob: -16.383621215820312
    7. '_val' → logprob: -16.883621215820312
    8. '.val' → logprob: -17.633621215820312
    9. ',val' → logprob: -18.133621215820312
    10. '1' → logprob: -18.133621215820312

Token 103: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059098754078149796
    2. 'def' → logprob: -4.059098720550537
    3. '(' → logprob: -4.559098720550537
    4. '

' → logprob: -5.184098720550537
    5. '(
' → logprob: -5.434098720550537
    6. '<|end|>' → logprob: -5.559098720550537
    7. '\n' → logprob: -5.809098720550537
    8. '#' → logprob: -5.934098720550537
    9. '[' → logprob: -6.059098720550537
    10. 'n' → logprob: -6.184098720550537

Token 105: ' division' (ID: 21629)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05449097603559494
    2. ' calcul' → logprob: -3.1794910430908203
    3. ' ' → logprob: -6.42949104309082
    4. ' test' → logprob: -6.67949104309082
    5. ' principale' → logprob: -6.67949104309082
    6. '_' → logprob: -6.92949104309082
    7. ' somme' → logprob: -7.30449104309082
    8. ' factor' → logprob: -7.30449104309082
    9. ' afficher' → logprob: -7.30449104309082
    10. ' saisir' → logprob: -7.55449104309082

Token 106: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04502512887120247
    2. '(a' → logprob: -3.295025110244751
    3. '_' → logprob: -5.54502534866333
    4. ' (' → logprob: -6.54502534866333
    5. '(s' → logprob: -7.79502534866333
    6. '()' → logprob: -8.420024871826172
    7. '(n' → logprob: -8.670024871826172
    8. '_(' → logprob: -9.170024871826172
    9. '_div' → logprob: -9.545024871826172
    10. '(_' → logprob: -9.545024871826172

Token 107: 'enti' (ID: 14989)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.06574970483779907
    2. 'enti' → logprob: -3.3157496452331543
    3. '_ent' → logprob: -4.565749645233154
    4. '_' → logprob: -5.190749645233154
    5. 's' → logprob: -6.315749645233154
    6. 'ans' → logprob: -6.440749645233154
    7. 'int' → logprob: -6.815749645233154
    8. ' entière' → logprob: -7.190749645233154
    9. 'exact' → logprob: -7.315749645233154
    10. '```' → logprob: -7.315749645233154

Token 108: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.03556682541966438
    2. 'ère' → logprob: -3.410566806793213
    3. 're' → logprob: -6.535566806793213
    4. 'er' → logprob: -8.660567283630371
    5. '`' → logprob: -8.785567283630371
    6. 'e' → logprob: -9.660567283630371
    7. 'ére' → logprob: -10.785567283630371
    8. 'è' → logprob: -10.910567283630371
    9. '   ' → logprob: -11.410567283630371
    10. '```' → logprob: -11.660567283630371

Token 109: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1654115617275238
    2. '(a' → logprob: -1.9154115915298462
    3. ' (' → logprob: -6.165411472320557
    4. '_' → logprob: -6.915411472320557
    5. '(n' → logprob: -7.540411472320557
    6. '(x' → logprob: -7.665411472320557
    7. '(s' → logprob: -8.165411949157715
    8. '()' → logprob: -8.415411949157715
    9. '(div' → logprob: -9.040411949157715
    10. ' ' → logprob: -9.915411949157715

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007014761795289814
    2. ',b' → logprob: -7.500701427459717
    3. ' ,' → logprob: -9.125701904296875
    4. ',a' → logprob: -10.375701904296875
    5. '_,' → logprob: -13.250701904296875
    6. ')' → logprob: -13.500701904296875
    7. 'a' → logprob: -14.000701904296875
    8. ',s' → logprob: -14.250701904296875
    9. ',n' → logprob: -14.625701904296875
    10. 'b' → logprob: -14.875701904296875

Token 111: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018152397125959396
    2. ' b' → logprob: -4.018152236938477
    3. ' ' → logprob: -13.018152236938477
    4. '2' → logprob: -15.143152236938477
    5. ' ' → logprob: -17.143152236938477
    6. '```' → logprob: -17.518152236938477
    7. '   ' → logprob: -17.643152236938477
    8. '  ' → logprob: -18.268152236938477
    9. ')' → logprob: -18.268152236938477
    10. 'div' → logprob: -19.143152236938477

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002494191285222769
    2. ')' → logprob: -8.375249862670898
    3. '):
' → logprob: -11.125249862670898
    4. ':' → logprob: -13.000249862670898
    5. ' ):' → logprob: -14.000249862670898
    6. '():' → logprob: -14.250249862670898
    7. '   ' → logprob: -15.750249862670898
    8. '):
' → logprob: -16.2502498626709
    9. ''):' → logprob: -17.0002498626709
    10. ')：' → logprob: -17.1252498626709

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5370087623596191
    2. 'a' → logprob: -1.0370087623596191
    3. ' a' → logprob: -2.912008762359619
    4. ' return' → logprob: -5.162008762359619
    5. 'return' → logprob: -7.162008762359619
    6. '    ' → logprob: -10.037008285522461
    7. ' ' → logprob: -10.037008285522461
    8. '  ' → logprob: -11.412008285522461
    9. '    
' → logprob: -12.162008285522461
    10. '	a' → logprob: -12.537008285522461

Token 114: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011682739481329918
    2. ' a' → logprob: -4.511682510375977
    3. ' return' → logprob: -7.886682510375977
    4. 'return' (adapté à ' return') → logprob: -8.261682510375977
    5. '   ' → logprob: -14.636682510375977
    6. '```' → logprob: -16.136682510375977
    7. ' ' → logprob: -16.511682510375977
    8. '	a' → logprob: -17.511682510375977
    9. ' ' → logprob: -18.011682510375977
    10. '  ' → logprob: -19.136682510375977

Token 115: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014163863845169544
    2. ' a' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.889163970947266
    4. '	a' → logprob: -16.014163970947266
    5. ' ' → logprob: -16.639163970947266
    6. '   ' → logprob: -17.639163970947266
    7. '```' → logprob: -18.389163970947266
    8. '  ' → logprob: -19.139163970947266
    9. 'int' → logprob: -19.514163970947266
    10. '_a' → logprob: -19.514163970947266

Token 116: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.22638802230358124
    2. '//' → logprob: -1.6013879776000977
    3. ' ' → logprob: -6.976387977600098
    4. ' ' → logprob: -10.601387977600098
    5. ' //
' → logprob: -11.726387977600098
    6. '/' → logprob: -13.851387977600098
    7. '//
' → logprob: -14.101387977600098
    8. '```' → logprob: -14.101387977600098
    9. ')' → logprob: -14.226387977600098
    10. '<|end|>' → logprob: -14.226387977600098

Token 117: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.339278580620885e-06
    2. ' b' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '	b' → logprob: -20.000001907348633
    5. '  ' → logprob: -20.375001907348633
    6. ' ' → logprob: -20.625001907348633
    7. '>b' → logprob: -21.625001907348633
    8. '```' → logprob: -22.000001907348633
    9. ')b' → logprob: -22.500001907348633
    10. '_b' → logprob: -23.000001907348633

Token 118: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005163427907973528
    2. 'n' → logprob: -5.380163192749023
    3. '#' → logprob: -8.880163192749023
    4. '
' → logprob: -9.130163192749023
    5. 't' → logprob: -9.505163192749023
    6. '\' → logprob: -9.755163192749023
    7. 'for' → logprob: -10.005163192749023
    8. '<|end|>' → logprob: -10.255163192749023
    9. 'a' → logprob: -10.880163192749023
    10. 'd' → logprob: -10.880163192749023

Token 120: ' afficher' (ID: 146524)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.22821936011314392
    2. ' calcul' → logprob: -2.9782192707061768
    3. ' trouver' → logprob: -3.1032192707061768
    4. ' moyenne' → logprob: -3.6032192707061768
    5. ' somme' → logprob: -4.103219509124756
    6. ' factor' → logprob: -5.103219509124756
    7. ' ' → logprob: -5.228219509124756
    8. ' test' → logprob: -5.228219509124756
    9. ' est' → logprob: -5.353219509124756
    10. ' principale' → logprob: -5.728219509124756

Token 121: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2541040778160095
    2. '()' → logprob: -1.5041041374206543
    3. '("")' → logprob: -6.629104137420654
    4. '("("' → logprob: -8.129103660583496
    5. '("' → logprob: -9.254103660583496
    6. '_' → logprob: -9.379103660583496
    7. '('' → logprob: -9.504103660583496
    8. '("""' → logprob: -10.004103660583496
    9. '(ans' → logprob: -10.254103660583496
    10. '<|end|>' → logprob: -10.254103660583496

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027459850534796715
    2. ')' → logprob: -3.6524598598480225
    3. '):
' → logprob: -6.777459621429443
    4. '):

' → logprob: -12.152460098266602
    5. '):
' → logprob: -12.277460098266602
    6. '(' → logprob: -12.527460098266602
    7. ' ):' → logprob: -13.152460098266602
    8. '(val' → logprob: -13.402460098266602
    9. '   ' → logprob: -14.777460098266602
    10. '():' → logprob: -14.777460098266602

Token 123: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.528026282787323
    2. '   ' → logprob: -1.2780263423919678
    3. 'print' → logprob: -2.0280263423919678
    4. '```' → logprob: -10.153026580810547
    5. '	print' → logprob: -12.028026580810547
    6. '    ' → logprob: -13.403026580810547
    7. '    
' → logprob: -13.653026580810547
    8. '   ' → logprob: -14.028026580810547
    9. ' ' → logprob: -15.028026580810547
    10. '(print' → logprob: -15.028026580810547

Token 124: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3133421540260315
    2. ' print' → logprob: -1.3133420944213867
    3. '   ' → logprob: -9.438342094421387
    4. '```' → logprob: -14.313342094421387
    5. '	print' → logprob: -16.063343048095703
    6. ' ' → logprob: -17.688343048095703
    7. '.print' → logprob: -17.938343048095703
    8. ' 
' → logprob: -18.813343048095703
    9. '    ' → logprob: -19.313343048095703
    10. '(print' → logprob: -19.563343048095703

Token 125: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16025002300739288
    2. '(val' → logprob: -1.9102500677108765
    3. ' (' → logprob: -11.535249710083008
    4. '()' → logprob: -11.910249710083008
    5. '(
' → logprob: -12.785249710083008
    6. '(valor' → logprob: -12.785249710083008
    7. '(

' → logprob: -14.160249710083008
    8. '(f' → logprob: -14.535249710083008
    9. '(value' → logprob: -14.660249710083008
    10. '('' → logprob: -15.035249710083008

Token 126: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.75
    3. '()' → logprob: -17.375
    4. ')
' → logprob: -17.375
    5. '))' → logprob: -17.5
    6. ')`' → logprob: -17.75
    7. '())' → logprob: -18.5
    8. '(' → logprob: -20.375
    9. ')

' → logprob: -20.5
    10. ')}' → logprob: -20.5

Token 127: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006193388253450394
    2. 't' → logprob: -6.006193161010742
    3. 'n' → logprob: -6.131193161010742
    4. 'if' → logprob: -6.631193161010742
    5. 'T' → logprob: -8.756193161010742
    6. 'for' → logprob: -10.381193161010742
    7. '#' → logprob: -11.381193161010742
    8. 'N' → logprob: -12.381193161010742
    9. '```' → logprob: -12.506193161010742
    10. 'ndef' → logprob: -13.381193161010742

Token 128: ' traitement' (ID: 42434)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.090445876121521
    2. 'main' → logprob: -2.5904459953308105
    3. '__' → logprob: -5.3404459953308105
    4. '_main' → logprob: -5.8404459953308105
    5. ' principale' → logprob: -6.3404459953308105
    6. '_' → logprob: -7.4654459953308105
    7. '	main' → logprob: -7.8404459953308105
    8. ' principal' → logprob: -8.840445518493652
    9. '```' → logprob: -9.090445518493652
    10. ' calcul' → logprob: -9.590445518493652

Token 129: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1892995685338974
    2. '():' → logprob: -2.0642995834350586
    3. '()' → logprob: -3.9392995834350586
    4. '(' → logprob: -4.689299583435059
    5. '_des' → logprob: -5.189299583435059
    6. '_(' → logprob: -5.939299583435059
    7. '_s' → logprob: -6.064299583435059
    8. '()(' → logprob: -6.564299583435059
    9. '_de' → logprob: -6.939299583435059
    10. '(_)' → logprob: -7.439299583435059

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03197667375206947
    2. '    ' → logprob: -3.7819766998291016
    3. ' lst' → logprob: -6.156976699829102
    4. ' n' → logprob: -6.406976699829102
    5. '    
' → logprob: -6.406976699829102
    6. 'n' → logprob: -6.906976699829102
    7. ' ' → logprob: -6.906976699829102
    8. '  ' → logprob: -8.406976699829102
    9. 'lst' → logprob: -8.781976699829102
    10. ' 
' → logprob: -9.281976699829102

Token 131: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11533818393945694
    2. ' n' → logprob: -2.990338087081909
    3. '   ' → logprob: -3.115338087081909
    4. 'lst' → logprob: -4.990338325500488
    5. 't' → logprob: -5.240338325500488
    6. ' lst' → logprob: -7.115338325500488
    7. ' t' → logprob: -7.240338325500488
    8. ' ' → logprob: -8.740338325500488
    9. '	n' → logprob: -9.740338325500488
    10. 'ans' → logprob: -9.865338325500488

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0047489795833826065
    2. '=' → logprob: -5.379748821258545
    3. ',' → logprob: -9.254749298095703
    4. ' ' → logprob: -10.879749298095703
    5. '  ' → logprob: -11.879749298095703
    6. ' ' → logprob: -12.754749298095703
    7. '   ' → logprob: -13.754749298095703
    8. '=int' → logprob: -14.004749298095703
    9. ' ,' → logprob: -14.129749298095703
    10. ' =
' → logprob: -14.754749298095703

Token 133: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007923991419374943
    2. ' lire' → logprob: -4.8829240798950195
    3. '   ' → logprob: -8.75792407989502
    4. ' l' → logprob: -9.25792407989502
    5. ' ' → logprob: -10.63292407989502
    6. '  ' → logprob: -11.00792407989502
    7. 'int' → logprob: -12.00792407989502
    8. '	l' → logprob: -12.13292407989502
    9. '    
' → logprob: -12.63292407989502
    10. ' int' → logprob: -13.25792407989502

Token 134: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -2.1008713702030946e-06
    2. '_l' → logprob: -13.500001907348633
    3. '_' → logprob: -14.375001907348633
    4. '_int' → logprob: -17.000001907348633
    5. '_en' → logprob: -17.250001907348633
    6. 'ent' → logprob: -18.000001907348633
    7. '_entropy' → logprob: -18.125001907348633
    8. '	ent' → logprob: -18.125001907348633
    9. '_ENT' → logprob: -18.250001907348633
    10. '__' → logprob: -19.375001907348633

Token 135: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.00013607845176011324
    2. 'er' → logprob: -9.125136375427246
    3. 't' → logprob: -11.375136375427246
    4. 'ter' → logprob: -11.875136375427246
    5. 'et' → logprob: -13.000136375427246
    6. 'iert' → logprob: -13.375136375427246
    7. 'ent' → logprob: -13.625136375427246
    8. 'tier' → logprob: -13.625136375427246
    9. '```' → logprob: -14.375136375427246
    10. '   ' → logprob: -14.875136375427246

Token 136: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.8087270038668066e-05
    2. '()
' → logprob: -10.500027656555176
    3. ' ()' → logprob: -15.750027656555176
    4. '()

' → logprob: -15.750027656555176
    5. '()<' → logprob: -16.750028610229492
    6. '()>' → logprob: -17.000028610229492
    7. '()
' → logprob: -17.625028610229492
    8. '()"' → logprob: -17.750028610229492
    9. '(' → logprob: -17.750028610229492
    10. '())' → logprob: -18.000028610229492

Token 137: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8231865763664246
    2. 'lst' → logprob: -1.5731866359710693
    3. '   ' → logprob: -1.8231866359710693
    4. '    
' → logprob: -2.3231866359710693
    5. ' lst' → logprob: -3.4481866359710693
    6. '()' → logprob: -4.44818639755249
    7. '<|end|>' → logprob: -4.94818639755249
    8. 's' → logprob: -5.07318639755249
    9. '	
' → logprob: -5.19818639755249
    10. ' 
' → logprob: -5.19818639755249

Token 138: ' d' (ID: 272)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0145501010119915
    2. ' lst' → logprob: -4.88955020904541
    3. '   ' → logprob: -6.26455020904541
    4. 'liste' → logprob: -6.51455020904541
    5. 'L' → logprob: -7.13955020904541
    6. 'arr' → logprob: -7.63955020904541
    7. 's' → logprob: -7.88955020904541
    8. 'l' → logprob: -8.01455020904541
    9. 'ans' → logprob: -8.01455020904541
    10. 'for' → logprob: -8.13955020904541

Token 139: ' =' (ID: 314)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.10741719603538513
    2. '=' → logprob: -3.607417106628418
    3. ' =' → logprob: -3.732417106628418
    4. 'ata' → logprob: -4.107417106628418
    5. 'e' → logprob: -4.607417106628418
    6. 'onne' → logprob: -4.982417106628418
    7. 'efs' → logprob: -5.607417106628418
    8. 's' → logprob: -6.232417106628418
    9. 'ic' → logprob: -6.607417106628418
    10. 'on' → logprob: -6.607417106628418

Token 140: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.027903849259018898
    2. '[]' → logprob: -4.277904033660889
    3. '{}' → logprob: -5.277904033660889
    4. ' lire' → logprob: -6.027904033660889
    5. '[l' → logprob: -6.152904033660889
    6. 'liste' → logprob: -6.902904033660889
    7. ' []' → logprob: -7.152904033660889
    8. '[' → logprob: -7.902904033660889
    9. '0' → logprob: -8.15290355682373
    10. '1' → logprob: -8.15290355682373

Token 141: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0001843485952122137
    2. '_' → logprob: -9.250184059143066
    3. '_ent' → logprob: -9.500184059143066
    4. 'ent' → logprob: -12.625184059143066
    5. '_list' → logprob: -12.875184059143066
    6. 'liste' → logprob: -13.625184059143066
    7. '()' → logprob: -14.500184059143066
    8. '_s' → logprob: -14.500184059143066
    9. '```' → logprob: -14.625184059143066
    10. '_lst' → logprob: -14.625184059143066

Token 142: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -5.5861724831629544e-05
    2. 'ste' → logprob: -10.625056266784668
    3. 'ist' → logprob: -11.250056266784668
    4. 'liste' → logprob: -12.625056266784668
    5. ' iste' → logprob: -12.875056266784668
    6. '
' → logprob: -13.125056266784668
    7. 'site' → logprob: -13.250056266784668
    8. 'ite' → logprob: -14.000056266784668
    9. 'ise' → logprob: -14.125056266784668
    10. '_' → logprob: -14.375056266784668

Token 143: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.908022285439074e-05
    2. '()
' → logprob: -9.750059127807617
    3. ' ()' → logprob: -15.375059127807617
    4. '()

' → logprob: -15.500059127807617
    5. '(' → logprob: -15.875059127807617
    6. '()
' → logprob: -16.125059127807617
    7. '()<' → logprob: -17.625059127807617
    8. '()]' → logprob: -17.750059127807617
    9. '())' → logprob: -18.000059127807617
    10. '()[' → logprob: -18.375059127807617

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5485175251960754
    2. '
' → logprob: -1.0485174655914307
    3. '    
' → logprob: -3.0485174655914307
    4. ' 
' → logprob: -5.04851770401001
    5. '  
' → logprob: -5.29851770401001
    6. 'ans' → logprob: -6.29851770401001
    7. ' ans' → logprob: -6.29851770401001
    8. '<|end|>' → logprob: -6.42351770401001
    9. '   
' → logprob: -6.54851770401001
    10. 'n' → logprob: -6.67351770401001

Token 145: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.06161355972290039
    2. ' ans' → logprob: -3.8116135597229004
    3. 's' → logprob: -4.4366135597229
    4. 'm' → logprob: -5.3116135597229
    5. 'total' → logprob: -5.4366135597229
    6. 'd' → logprob: -6.0616135597229
    7. 'prod' → logprob: -6.5616135597229
    8. 'dp' → logprob: -6.8116135597229
    9. 'prefix' → logprob: -6.9366135597229
    10. '   ' → logprob: -7.0616135597229

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815626211464405
    2. '=' → logprob: -4.018156051635742
    3. ',' → logprob: -12.643156051635742
    4. '_' → logprob: -13.643156051635742
    5. ' ' → logprob: -14.268156051635742
    6. ' ' → logprob: -14.768156051635742
    7. 's' → logprob: -14.893156051635742
    8. '_=' → logprob: -16.268156051635742
    9. '   ' → logprob: -16.518156051635742
    10. '	' → logprob: -16.830656051635742

Token 147: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.4389250874519348
    2. '0' → logprob: -1.18892502784729
    3. ' initial' → logprob: -3.06392502784729
    4. ' ' → logprob: -5.563925266265869
    5. '   ' → logprob: -9.813924789428711
    6. '	initial' → logprob: -10.438924789428711
    7. '  ' → logprob: -10.751424789428711
    8. 'd' → logprob: -11.938924789428711
    9. '1' → logprob: -12.063924789428711
    10. '(initial' → logprob: -12.126424789428711

Token 148: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -4.334533878136426e-05
    2. 'er' → logprob: -10.875042915344238
    3. 'is' → logprob: -11.250042915344238
    4. 'ser' → logprob: -11.625042915344238
    5. '```' → logprob: -14.625042915344238
    6. 'izer' → logprob: -14.750042915344238
    7. '   ' → logprob: -15.000042915344238
    8. '_' → logprob: -15.875042915344238
    9. 'isser' → logprob: -16.000043869018555
    10. 'e' → logprob: -16.250043869018555

Token 149: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -4.3822154111694545e-05
    2. '_' → logprob: -10.125043869018555
    3. '_answer' → logprob: -14.500043869018555
    4. 'ans' → logprob: -14.625043869018555
    5. '__' → logprob: -14.750043869018555
    6. '_an' → logprob: -14.875043869018555
    7. '```' → logprob: -15.250043869018555
    8. '(ans' → logprob: -15.375043869018555
    9. '_a' → logprob: -15.375043869018555
    10. '_
' → logprob: -15.375043869018555

Token 150: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00023560250701848418
    2. '()
' → logprob: -8.375235557556152
    3. ' ()' → logprob: -13.000235557556152
    4. '()

' → logprob: -13.000235557556152
    5. '()
' → logprob: -15.500235557556152
    6. '(' → logprob: -15.750235557556152
    7. '0' → logprob: -17.62523651123047
    8. '()\' → logprob: -17.62523651123047
    9. '()"' → logprob: -17.87523651123047
    10. '()<' → logprob: -18.00023651123047

Token 151: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7867967486381531
    2. ' for' → logprob: -1.4117968082427979
    3. '   ' → logprob: -1.6617968082427979
    4. '    
' → logprob: -3.286796808242798
    5. ' 
' → logprob: -3.411796808242798
    6. 'for' → logprob: -3.661796808242798
    7. '  
' → logprob: -4.536796569824219
    8. '<|end|>' → logprob: -6.536796569824219
    9. '   
' → logprob: -6.911796569824219
    10. ' ' → logprob: -7.911796569824219

Token 152: ' somme' (ID: 64484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021725185215473175
    2. ' for' → logprob: -4.646725177764893
    3. 'i' → logprob: -5.146725177764893
    4. '   ' → logprob: -5.771725177764893
    5. 'm' → logprob: -6.896725177764893
    6. 'n' → logprob: -7.021725177764893
    7. 'length' → logprob: -7.771725177764893
    8. 'total' → logprob: -8.14672565460205
    9. 's' → logprob: -9.64672565460205
    10. 'long' → logprob: -9.77172565460205

Token 153: '_tot' (ID: 87201)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06922511011362076
    2. '_' → logprob: -3.3192250728607178
    3. '_d' → logprob: -3.6942250728607178
    4. '=' → logprob: -5.694225311279297
    5. 'd' → logprob: -7.194225311279297
    6. '_s' → logprob: -7.319225311279297
    7. 's' → logprob: -7.444225311279297
    8. '_=' → logprob: -9.194225311279297
    9. '_val' → logprob: -9.694225311279297
    10. ' ' → logprob: -9.944225311279297

Token 154: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.012137561105191708
    2. 'al' → logprob: -4.512137413024902
    3. '=' → logprob: -8.137137413024902
    4. ' =' → logprob: -8.262137413024902
    5. '   ' → logprob: -8.262137413024902
    6. 'a' → logprob: -9.137137413024902
    7. 'e' → logprob: -9.637137413024902
    8. '```' → logprob: -11.012137413024902
    9. ' ale' → logprob: -11.262137413024902
    10. '       ' → logprob: -11.512137413024902

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020546678453683853
    2. '=' → logprob: -3.8955466747283936
    3. 's' → logprob: -13.645546913146973
    4. ' ' → logprob: -14.020546913146973
    5. ' ' → logprob: -14.395546913146973
    6. 'd' → logprob: -14.520546913146973
    7. ',' → logprob: -14.645546913146973
    8. '_' → logprob: -15.020546913146973
    9. '  ' → logprob: -15.395546913146973
    10. '(' → logprob: -15.645546913146973

Token 156: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.015386941842734814
    2. ' calcul' → logprob: -4.265387058258057
    3. 'cal' → logprob: -7.640387058258057
    4. '0' → logprob: -8.015386581420898
    5. 'sum' → logprob: -8.515386581420898
    6. '   ' → logprob: -9.890386581420898
    7. ' ' → logprob: -9.890386581420898
    8. 'calc' → logprob: -10.265386581420898
    9. 's' → logprob: -10.890386581420898
    10. '  ' → logprob: -11.140386581420898

Token 157: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: 0.0
    2. 'e' → logprob: -17.25
    3. '_er' → logprob: -20.5
    4. 'uer' → logprob: -20.875
    5. '#' → logprob: -21.0
    6. 'a' → logprob: -21.0
    7. '   ' → logprob: -21.125
    8. 'erer' → logprob: -21.75
    9. 'ateur' → logprob: -21.875
    10. '```' → logprob: -21.875

Token 158: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00013643606507685035
    2. '_' → logprob: -9.250136375427246
    3. 's' → logprob: -11.000136375427246
    4. 'er' → logprob: -11.000136375427246
    5. 'e' → logprob: -12.625136375427246
    6. '_pro' → logprob: -13.250136375427246
    7. 'a' → logprob: -13.875136375427246
    8. '_sum' → logprob: -16.000137329101562
    9. 'd' → logprob: -16.125137329101562
    10. '_e' → logprob: -16.250137329101562

Token 159: 'omme' (ID: 30420)
  Prédit: 'omme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.005276807118207216
    2. 'ome' → logprob: -6.005276679992676
    3. 'umme' → logprob: -6.005276679992676
    4. '_' → logprob: -9.505276679992676
    5. '(' → logprob: -9.755276679992676
    6. 'om' → logprob: -10.255276679992676
    7. 'omne' → logprob: -10.255276679992676
    8. 'um' → logprob: -10.630276679992676
    9. 'e' → logprob: -10.630276679992676
    10. '[' → logprob: -11.380276679992676

Token 160: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.2246291337069124e-05
    2. '(' → logprob: -10.750021934509277
    3. ' (' → logprob: -14.250021934509277
    4. '(s' → logprob: -16.125022888183594
    5. '(
' → logprob: -18.500022888183594
    6. '(de' → logprob: -18.500022888183594
    7. '(D' → logprob: -19.500022888183594
    8. '((' → logprob: -19.625022888183594
    9. 'd' → logprob: -19.875022888183594
    10. '()' → logprob: -20.125022888183594

Token 161: ')
' (ID: 446)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.005532912444323301
    2. ')' → logprob: -5.380532741546631
    3. '(' → logprob: -7.130532741546631
    4. ')
' → logprob: -10.630533218383789
    5. '(
' → logprob: -10.630533218383789
    6. '())' → logprob: -10.755533218383789
    7. ')d' → logprob: -11.380533218383789
    8. ' )' → logprob: -11.755533218383789
    9. ' (' → logprob: -11.755533218383789
    10. '()' → logprob: -12.380533218383789

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048275042325258255
    2. '    
' → logprob: -3.7982749938964844
    3. '
' → logprob: -3.9232749938964844
    4. '<|end|>' → logprob: -5.548274993896484
    5. 'for' → logprob: -8.298274993896484
    6. ' for' → logprob: -8.298274993896484
    7. '<|end|>' → logprob: -9.423274993896484
    8. '    
    
' → logprob: -9.673274993896484
    9. '  
' → logprob: -9.798274993896484
    10. '#' → logprob: -10.048274993896484

Token 163: ' longueur' (ID: 104613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3773638606071472
    2. '   ' → logprob: -1.877363920211792
    3. 'm' → logprob: -2.377363920211792
    4. 'long' → logprob: -3.752363920211792
    5. ' for' → logprob: -4.502363681793213
    6. 'n' → logprob: -4.877363681793213
    7. 'max' → logprob: -5.502363681793213
    8. 'ans' → logprob: -5.627363681793213
    9. 'prod' → logprob: -5.877363681793213
    10. '    
' → logprob: -6.002363681793213

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058465711772441864
    2. '_' → logprob: -3.3084657192230225
    3. '=' → logprob: -4.308465480804443
    4. '_d' → logprob: -5.308465480804443
    5. '(' → logprob: -7.308465480804443
    6. 's' → logprob: -7.933465480804443
    7. 'd' → logprob: -8.683465957641602
    8. '_s' → logprob: -9.058465957641602
    9. ' ' → logprob: -9.183465957641602
    10. '   ' → logprob: -9.433465957641602

Token 165: ' obtenir' (ID: 54423)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.00501896720379591
    2. ' obtenir' → logprob: -5.380019187927246
    3. '(ob' → logprob: -8.630019187927246
    4. 'obt' → logprob: -9.380019187927246
    5. ' ob' → logprob: -9.630019187927246
    6. '	ob' → logprob: -10.755019187927246
    7. '   ' → logprob: -11.005019187927246
    8. ' ' → logprob: -12.005019187927246
    9. '  ' → logprob: -12.005019187927246
    10. 'len' → logprob: -12.130019187927246

Token 166: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -6.511406809295295e-06
    2. 'long' → logprob: -13.125006675720215
    3. '_' → logprob: -13.250006675720215
    4. '_l' → logprob: -13.375006675720215
    5. '```' → logprob: -15.000006675720215
    6. '(d' → logprob: -15.375006675720215
    7. '_len' → logprob: -16.0000057220459
    8. 'd' → logprob: -16.2500057220459
    9. 's' → logprob: -16.7500057220459
    10. '_(' → logprob: -16.8750057220459

Token 167: 'ueur' (ID: 43728)
  Prédit: 'eur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.01108342781662941
    2. 'ueur' → logprob: -4.511083602905273
    3. 'e' → logprob: -10.886083602905273
    4. 'er' → logprob: -11.761083602905273
    5. 'deur' → logprob: -12.386083602905273
    6. 'reur' → logprob: -13.636083602905273
    7. 'ur' → logprob: -13.886083602905273
    8. 'uer' → logprob: -14.136083602905273
    9. 'eurs' → logprob: -14.886083602905273
    10. ' eur' → logprob: -15.011083602905273

Token 168: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0015072436071932316
    2. '(' → logprob: -6.50150728225708
    3. ' (' → logprob: -12.751506805419922
    4. '(
' → logprob: -13.751506805419922
    5. '(s' → logprob: -14.876506805419922
    6. '(lst' → logprob: -14.876506805419922
    7. '(l' → logprob: -16.376506805419922
    8. '((' → logprob: -17.251506805419922
    9. '(D' → logprob: -17.626506805419922
    10. '(

' → logprob: -17.751506805419922

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18338322639465332
    2. '()' → logprob: -2.1833832263946533
    3. ')
' → logprob: -3.1833832263946533
    4. '()
' → logprob: -4.433382987976074
    5. '   ' → logprob: -7.183382987976074
    6. '())' → logprob: -7.683382987976074
    7. ' )' → logprob: -8.933382987976074
    8. '(' → logprob: -9.683382987976074
    9. '())
' → logprob: -10.183382987976074
    10. ')d' → logprob: -10.933382987976074

Token 170: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17277824878692627
    2. '   ' → logprob: -2.0477781295776367
    3. ' for' → logprob: -4.047778129577637
    4. '    
' → logprob: -5.297778129577637
    5. '  
' → logprob: -6.047778129577637
    6. 'for' → logprob: -6.297778129577637
    7. ' 
' → logprob: -6.797778129577637
    8. '<|end|>' → logprob: -7.047778129577637
    9. '
' → logprob: -8.547778129577637
    10. '```' → logprob: -9.047778129577637

Token 171: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39162665605545044
    2. ' for' → logprob: -1.6416265964508057
    3. '   ' → logprob: -2.6416265964508057
    4. 'm' → logprob: -3.6416265964508057
    5. 'i' → logprob: -4.516626834869385
    6. ' i' → logprob: -5.016626834869385
    7. '    
' → logprob: -5.266626834869385
    8. 'ans' → logprob: -5.891626834869385
    9. 'val' → logprob: -6.016626834869385
    10. 'prod' → logprob: -7.641626834869385

Token 172: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011505055241286755
    2. 'i' → logprob: -4.761505126953125
    3. '_' → logprob: -6.261505126953125
    4. ' _' → logprob: -7.636505126953125
    5. '_i' → logprob: -8.136505126953125
    6. ' ' → logprob: -9.636505126953125
    7. '	i' → logprob: -10.511505126953125
    8. ' ' → logprob: -10.636505126953125
    9. 'val' → logprob: -11.261505126953125
    10. ' idx' → logprob: -11.511505126953125

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023079726845026016
    2. ' ' → logprob: -4.273079872131348
    3. 'in' → logprob: -4.773079872131348
    4. '_' → logprob: -8.523079872131348
    5. '  ' → logprob: -9.023079872131348
    6. ' ' → logprob: -10.523079872131348
    7. ' i' → logprob: -10.773079872131348
    8. 'range' → logprob: -11.648079872131348
    9. 's' → logprob: -12.335579872131348
    10. ' _' → logprob: -12.523079872131348

Token 174: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005249176174402237
    2. 'range' → logprob: -5.2552490234375
    3. ' d' → logprob: -12.6302490234375
    4. '	range' → logprob: -13.0052490234375
    5. ' rang' → logprob: -13.2552490234375
    6. '   ' → logprob: -13.6302490234375
    7. '(range' → logprob: -13.6302490234375
    8. ' ' → logprob: -13.7552490234375
    9. 'd' → logprob: -13.7552490234375
    10. ' ' → logprob: -14.0052490234375

Token 175: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2991759479045868
    2. '(long' → logprob: -1.5491759777069092
    3. '(lo' → logprob: -3.549175977706909
    4. ' (' → logprob: -4.67417573928833
    5. '(len' → logprob: -5.04917573928833
    6. '(length' → logprob: -7.29917573928833
    7. '(l' → logprob: -7.42417573928833
    8. '(
' → logprob: -9.174176216125488
    9. '()' → logprob: -9.549176216125488
    10. '(le' → logprob: -9.799176216125488

Token 176: '0' (ID: 15)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.020586034283041954
    2. '1' → logprob: -4.020586013793945
    3. '   ' → logprob: -6.895586013793945
    4. ' longueur' → logprob: -7.645586013793945
    5. 'lon' → logprob: -8.770586013793945
    6. 'l' → logprob: -8.895586013793945
    7. ' long' → logprob: -8.895586013793945
    8. 'lo' → logprob: -9.020586013793945
    9. 'len' → logprob: -9.020586013793945
    10. '(long' → logprob: -9.645586013793945

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5451707243919373
    2. ' ,' → logprob: -1.420170783996582
    3. ' longueur' → logprob: -2.295170783996582
    4. ' ' → logprob: -3.045170783996582
    5. ',long' → logprob: -4.045170783996582
    6. 'long' → logprob: -5.545170783996582
    7. '   ' → logprob: -5.670170783996582
    8. ')' → logprob: -6.670170783996582
    9. ' long' → logprob: -7.045170783996582
    10. ' )' → logprob: -7.795170783996582

Token 178: ' longueur' (ID: 104613)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.1462656557559967
    2. ' longueur' → logprob: -2.021265745162964
    3. ' long' → logprob: -6.146265506744385
    4. 'len' → logprob: -7.646265506744385
    5. 'l' → logprob: -8.271265983581543
    6. 'length' → logprob: -9.021265983581543
    7. '   ' → logprob: -9.396265983581543
    8. 'N' → logprob: -9.521265983581543
    9. 'lo' → logprob: -9.521265983581543
    10. ' longue' → logprob: -9.771265983581543

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09277068078517914
    2. ' ):' → logprob: -2.717770576477051
    3. ')' → logprob: -4.717770576477051
    4. ' -' → logprob: -5.092770576477051
    5. '-' → logprob: -5.217770576477051
    6. '):
' → logprob: -6.592770576477051
    7. ' )' → logprob: -7.967770576477051
    8. ' ' → logprob: -8.71777057647705
    9. '//' → logprob: -9.84277057647705
    10. ' //' → logprob: -10.09277057647705

Token 180: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6494109034538269
    2. '       ' → logprob: -1.7744109630584717
    3. ' if' → logprob: -2.2744109630584717
    4. ' ans' → logprob: -2.8994109630584717
    5. ':' → logprob: -3.6494109630584717
    6. '    ' → logprob: -3.6494109630584717
    7. ' for' → logprob: -3.8994109630584717
    8. '    
' → logprob: -4.024410724639893
    9. ' ' → logprob: -4.774410724639893
    10. '
' → logprob: -4.899410724639893

Token 181: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.629683792591095
    2. 'val' (adapté à ' val') → logprob: -1.0046837329864502
    3. 'for' → logprob: -3.50468373298645
    4. 'prod' → logprob: -4.504683971405029
    5. 'temp' → logprob: -4.754683971405029
    6. 's' → logprob: -4.754683971405029
    7. 'part' → logprob: -5.004683971405029
    8. ' val' → logprob: -5.004683971405029
    9. 'ans' → logprob: -6.004683971405029
    10. 'a' → logprob: -6.129683971405029

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06206773221492767
    2. '=' → logprob: -2.812067747116089
    3. ' ' → logprob: -10.812067985534668
    4. '   ' → logprob: -10.937067985534668
    5. '_val' → logprob: -11.187067985534668
    6. '=d' → logprob: -11.187067985534668
    7. '_' → logprob: -11.437067985534668
    8. '    ' → logprob: -12.062067985534668
    9. 'd' → logprob: -12.312067985534668
    10. 's' → logprob: -12.937067985534668

Token 183: ' calcul' (ID: 7559)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5091174840927124
    2. ' d' → logprob: -1.3841174840927124
    3. 'division' → logprob: -2.509117603302002
    4. ' division' → logprob: -3.384117603302002
    5. 'calcul' → logprob: -3.759117603302002
    6. ' calcul' → logprob: -5.384117603302002
    7. 'div' → logprob: -6.509117603302002
    8. 'cal' → logprob: -7.009117603302002
    9. 's' → logprob: -7.634117603302002
    10. ' ' → logprob: -7.884117603302002

Token 184: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -7.32654589228332e-05
    2. 'rer' → logprob: -9.625073432922363
    3. 'r' → logprob: -12.875073432922363
    4. 'uer' → logprob: -14.000073432922363
    5. 'e' → logprob: -14.375073432922363
    6. '   ' → logprob: -14.625073432922363
    7. 'erer' → logprob: -14.750073432922363
    8. 'd' → logprob: -15.125073432922363
    9. 'ler' → logprob: -15.500073432922363
    10. 'ar' → logprob: -15.750073432922363

Token 185: '_pro' (ID: 4617)
  Prédit: '_pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pro' → logprob: -0.0018322535324841738
    2. '_s' → logprob: -6.501832485198975
    3. '_' → logprob: -8.126832008361816
    4. '_prod' → logprob: -11.126832008361816
    5. '_product' → logprob: -12.126832008361816
    6. '_div' → logprob: -13.126832008361816
    7. 'produ' → logprob: -13.251832008361816
    8. '_p' → logprob: -13.251832008361816
    9. 's' → logprob: -13.501832008361816
    10. '_d' → logprob: -13.876832008361816

Token 186: 'duit' (ID: 90246)
  Prédit: 'duit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duit' → logprob: -0.007664239965379238
    2. 'du' → logprob: -4.882664203643799
    3. 'dut' → logprob: -10.257664680480957
    4. 'd' → logprob: -12.257664680480957
    5. 'duct' → logprob: -12.882664680480957
    6. '   ' → logprob: -13.382664680480957
    7. '

' → logprob: -13.382664680480957
    8. '
' → logprob: -13.382664680480957
    9. 'dit' → logprob: -13.632664680480957
    10. '{' → logprob: -13.882664680480957

Token 187: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.022432181984186172
    2. '(' → logprob: -4.022432327270508
    3. '(ans' → logprob: -6.772432327270508
    4. '(s' → logprob: -6.897432327270508
    5. '(div' → logprob: -6.897432327270508
    6. '(val' → logprob: -7.397432327270508
    7. '(i' → logprob: -9.022432327270508
    8. 'd' → logprob: -9.272432327270508
    9. ' (' → logprob: -9.522432327270508
    10. '(
' → logprob: -9.772432327270508

Token 188: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015960339223966002
    2. '[' → logprob: -6.501595973968506
    3. ' [' → logprob: -10.126596450805664
    4. '[
' → logprob: -11.876596450805664
    5. ' i' → logprob: -11.876596450805664
    6. '
' → logprob: -12.001596450805664
    7. ' ' → logprob: -12.251596450805664
    8. 'i' → logprob: -12.376596450805664
    9. '(i' → logprob: -12.626596450805664
    10. '```' → logprob: -12.751596450805664

Token 189: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30869659781455994
    2. '],' → logprob: -1.5586966276168823
    3. ' ,' → logprob: -3.0586965084075928
    4. ']' → logprob: -5.183696746826172
    5. ' ],' → logprob: -6.558696746826172
    6. ' i' → logprob: -8.683696746826172
    7. 'd' → logprob: -8.808696746826172
    8. '],
' → logprob: -8.933696746826172
    9. ',i' → logprob: -9.058696746826172
    10. ' ' → logprob: -9.183696746826172

Token 190: ' dimin' (ID: 33870)
  Prédit: ' longueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -1.0364067554473877
    2. 'long' → logprob: -1.1614067554473877
    3. 'division' → logprob: -2.0364067554473877
    4. 'i' → logprob: -3.5364067554473877
    5. 's' → logprob: -3.5364067554473877
    6. ' i' → logprob: -3.9114067554473877
    7. ' N' → logprob: -4.036406517028809
    8. 'length' → logprob: -4.161406517028809
    9. 'div' → logprob: -4.411406517028809
    10. 'N' → logprob: -4.536406517028809

Token 191: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -1.1279553291387856e-05
    2. 'er' → logprob: -12.250011444091797
    3. 'eur' → logprob: -13.250011444091797
    4. 'ueur' → logprob: -13.250011444091797
    5. 'e' → logprob: -13.750011444091797
    6. 'u' → logprob: -14.375011444091797
    7. 'ue' → logprob: -14.875011444091797
    8. '...' → logprob: -15.750011444091797
    9. '-' → logprob: -15.750011444091797
    10. '_' → logprob: -16.000011444091797

Token 192: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00032521432149223983
    2. '_' → logprob: -8.500325202941895
    3. 's' → logprob: -9.375325202941895
    4. '__' → logprob: -11.625325202941895
    5. '(s' → logprob: -11.625325202941895
    6. '_(' → logprob: -11.750325202941895
    7. '...' → logprob: -13.250325202941895
    8. '```' → logprob: -14.375325202941895
    9. '___' → logprob: -14.500325202941895
    10. ' ' → logprob: -14.625325202941895

Token 193: 'omme' (ID: 30420)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.024540161713957787
    2. 's' → logprob: -3.8995401859283447
    3. 'e' → logprob: -6.399539947509766
    4. 'o' → logprob: -7.524539947509766
    5. '_' → logprob: -7.899539947509766
    6. ')s' → logprob: -8.274539947509766
    7. '(s' → logprob: -9.024539947509766
    8. 'a' → logprob: -9.524539947509766
    9. 'ome' → logprob: -9.524539947509766
    10. ')' → logprob: -9.649539947509766

Token 194: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0011034219060093164
    2. '(' → logprob: -6.876103401184082
    3. ' (' → logprob: -10.251103401184082
    4. 's' → logprob: -10.501103401184082
    5. '(
' → logprob: -11.876103401184082
    6. ')' → logprob: -15.376103401184082
    7. '((' → logprob: -15.626103401184082
    8. '  ' → logprob: -16.1261043548584
    9. '   ' → logprob: -16.2511043548584
    10. ' ' → logprob: -16.6261043548584

Token 195: 'omme' (ID: 30420)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.15463410317897797
    2. 'omme' → logprob: -2.1546339988708496
    3. '(' → logprob: -4.15463399887085
    4. 'umme' → logprob: -5.27963399887085
    5. 's' → logprob: -6.40463399887085
    6. 'ome' → logprob: -6.90463399887085
    7. 'me' → logprob: -7.27963399887085
    8. 'mme' → logprob: -7.27963399887085
    9. 'e' → logprob: -7.40463399887085
    10. '(e' → logprob: -7.52963399887085

Token 196: '_tot' (ID: 87201)
  Prédit: '_tot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tot' → logprob: -0.00013238313840702176
    2. 'tot' → logprob: -9.00013256072998
    3. '_' → logprob: -12.25013256072998
    4. ' _' → logprob: -14.00013256072998
    5. ' tot' → logprob: -14.62513256072998
    6. ')' → logprob: -14.87513256072998
    7. '_t' → logprob: -14.87513256072998
    8. '_total' → logprob: -15.12513256072998
    9. '```' → logprob: -15.37513256072998
    10. '(_' → logprob: -15.50013256072998

Token 197: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0001684981834841892
    2. ' ale' → logprob: -9.875168800354004
    3. 'e' → logprob: -10.625168800354004
    4. 'le' → logprob: -11.000168800354004
    5. 'al' → logprob: -11.125168800354004
    6. 'a' → logprob: -11.125168800354004
    7. 'rale' → logprob: -11.375168800354004
    8. '   ' → logprob: -11.625168800354004
    9. 'nale' → logprob: -12.250168800354004
    10. 'але' → logprob: -12.812668800354004

Token 198: ',' (ID: 11)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.8853289484977722
    2. ',' → logprob: -1.135329008102417
    3. '(' → logprob: -1.510329008102417
    4. ',d' → logprob: -3.510329008102417
    5. ',(' → logprob: -5.260328769683838
    6. ' ,' → logprob: -5.260328769683838
    7. '(i' → logprob: -5.885328769683838
    8. ' (' → logprob: -6.885328769683838
    9. '(val' → logprob: -8.260329246520996
    10. '(
' → logprob: -8.385329246520996

Token 199: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05441702902317047
    2. ' d' → logprob: -3.304417133331299
    3. 'calcul' → logprob: -4.429417133331299
    4. '   ' → logprob: -6.304417133331299
    5. ' calcul' → logprob: -7.429417133331299
    6. '  ' → logprob: -7.679417133331299
    7. ' ' → logprob: -8.05441665649414
    8. 'cal' → logprob: -8.17941665649414
    9. '	d' → logprob: -8.17941665649414
    10. 'val' → logprob: -9.42941665649414

Token 200: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021521867893170565
    2. '[' → logprob: -8.500215530395508
    3. '[
' → logprob: -12.375215530395508
    4. '[j' → logprob: -13.250215530395508
    5. ' [' → logprob: -14.000215530395508
    6. '```' → logprob: -14.250215530395508
    7. '   ' → logprob: -14.750215530395508
    8. 'i' → logprob: -14.750215530395508
    9. '[I' → logprob: -14.875215530395508
    10. ' ' → logprob: -14.875215530395508

Token 201: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.14315296709537506
    2. ']))' → logprob: -2.268152952194214
    3. ')))' → logprob: -3.768152952194214
    4. '[i' → logprob: -5.893153190612793
    5. ')' → logprob: -6.018153190612793
    6. '])' → logprob: -8.143153190612793
    7. '']))' → logprob: -8.393153190612793
    8. ')])' → logprob: -8.643153190612793
    9. '}))' → logprob: -8.768153190612793
    10. ']' → logprob: -9.018153190612793

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033996712882071733
    2. '   ' → logprob: -5.753399848937988
    3. 'ans' → logprob: -8.878399848937988
    4. ')' → logprob: -10.628399848937988
    5. '        
' → logprob: -11.378399848937988
    6. 'val' → logprob: -12.003399848937988
    7. ',' → logprob: -12.128399848937988
    8. '      ' → logprob: -12.128399848937988
    9. '           ' → logprob: -12.753399848937988
    10. ' ' → logprob: -12.753399848937988

Token 203: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.638982355594635
    2. '   ' → logprob: -0.763982355594635
    3. '       ' → logprob: -5.26398229598999
    4. ' ans' → logprob: -7.51398229598999
    5. '	ans' → logprob: -8.138982772827148
    6. ' ' → logprob: -9.263982772827148
    7. '  ' → logprob: -9.263982772827148
    8. '    
' → logprob: -9.763982772827148
    9. '(ans' → logprob: -11.513982772827148
    10. 'answer' → logprob: -11.638982772827148

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038058701902627945
    2. '=' → logprob: -3.2880587577819824
    3. ' +=' → logprob: -11.038058280944824
    4. '+=' → logprob: -14.038058280944824
    5. ' ' → logprob: -15.788058280944824
    6. ' ' → logprob: -16.03805923461914
    7. ',' → logprob: -16.91305923461914
    8. '   ' → logprob: -17.28805923461914
    9. '＝' → logprob: -17.78805923461914
    10. '	' → logprob: -17.78805923461914

Token 205: ' mise' (ID: 25868)
  Prédit: 'mise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mise' → logprob: -0.0384821854531765
    2. ' mise' → logprob: -3.288482189178467
    3. 'm' → logprob: -8.913481712341309
    4. ' ' → logprob: -9.413481712341309
    5. 'mettre' → logprob: -9.413481712341309
    6. '   ' → logprob: -9.538481712341309
    7. 'mis' → logprob: -10.788481712341309
    8. ' ' → logprob: -11.913481712341309
    9. ' mettre' → logprob: -12.038481712341309
    10. '```' → logprob: -12.038481712341309

Token 206: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00020616286201402545
    2. '_' → logprob: -8.500205993652344
    3. 'a' → logprob: -13.125205993652344
    4. ' a' → logprob: -15.625205993652344
    5. 'à' → logprob: -15.875205993652344
    6. '_d' → logprob: -16.250205993652344
    7. ' _' → logprob: -16.375205993652344
    8. '\' → logprob: -16.750205993652344
    9. 'de' → logprob: -17.625205993652344
    10. '```' → logprob: -17.625205993652344

Token 207: '_j' (ID: 12021)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.2947031557559967
    2. '_j' → logprob: -1.9197031259536743
    3. 'jour' → logprob: -2.419703245162964
    4. 'j' → logprob: -4.294703006744385
    5. 'ur' → logprob: -6.044703006744385
    6. 'ure' → logprob: -7.419703006744385
    7. 'aj' → logprob: -7.794703006744385
    8. 'jou' → logprob: -8.044703483581543
    9. '```' → logprob: -8.169703483581543
    10. 'tour' → logprob: -8.294703483581543

Token 208: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.00019865304057020694
    2. 'ur' → logprob: -8.875198364257812
    3. 'ours' → logprob: -11.000198364257812
    4. 'ou' → logprob: -11.250198364257812
    5. 'oure' → logprob: -12.125198364257812
    6. 'outer' → logprob: -12.750198364257812
    7. 'out' → logprob: -13.125198364257812
    8. '_' → logprob: -13.125198364257812
    9. 'or' → logprob: -13.250198364257812
    10. '```' → logprob: -13.375198364257812

Token 209: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -6.253713218029588e-05
    2. 'ans' → logprob: -9.875062942504883
    3. '(ans' → logprob: -11.750062942504883
    4. '	ans' → logprob: -13.750062942504883
    5. '_answer' → logprob: -14.500062942504883
    6. '```' → logprob: -14.500062942504883
    7. 's' → logprob: -14.750062942504883
    8. '_' → logprob: -15.875062942504883
    9. '_ant' → logprob: -16.500062942504883
    10. ' ans' → logprob: -16.750062942504883

Token 210: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.2664456789934775e-06
    2. 'ans' → logprob: -13.875000953674316
    3. '(' → logprob: -15.125000953674316
    4. '	ans' → logprob: -18.625001907348633
    5. '(
' → logprob: -19.125001907348633
    6. ' ans' → logprob: -19.875001907348633
    7. '```' → logprob: -20.500001907348633
    8. ' (' → logprob: -20.625001907348633
    9. '(answer' → logprob: -20.750001907348633
    10. '(an' → logprob: -20.875001907348633

Token 211: ',' (ID: 11)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.35830962657928467
    2. ',val' → logprob: -1.6083096265792847
    3. ',' → logprob: -2.358309745788574
    4. '(' → logprob: -5.108309745788574
    5. 'val' → logprob: -8.983309745788574
    6. '[val' → logprob: -9.983309745788574
    7. ' ,' → logprob: -10.233309745788574
    8. ' (' → logprob: -10.358309745788574
    9. '(ans' → logprob: -10.858309745788574
    10. ' val' → logprob: -11.233309745788574

Token 212: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07890135049819946
    2. ' val' → logprob: -2.5789012908935547
    3. 'div' → logprob: -12.328901290893555
    4. '	val' → logprob: -13.203901290893555
    5. 'division' → logprob: -13.453901290893555
    6. '   ' → logprob: -13.828901290893555
    7. ' ' → logprob: -14.078901290893555
    8. ' division' → logprob: -14.578901290893555
    9. '(val' → logprob: -14.953901290893555
    10. '  ' → logprob: -15.328901290893555

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11996207386255264
    2. ')
' → logprob: -2.494961977005005
    3. '   ' → logprob: -3.494961977005005
    4. '    
' → logprob: -9.744961738586426
    5. ')

' → logprob: -10.369961738586426
    6. '
' → logprob: -10.744961738586426
    7. ')
' → logprob: -11.244961738586426
    8. ')return' → logprob: -11.369961738586426
    9. '       ' → logprob: -11.744961738586426
    10. ' ' → logprob: -11.869961738586426

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007535241893492639
    2. '    
' → logprob: -7.500753402709961
    3. '
' → logprob: -9.250753402709961
    4. ' afficher' → logprob: -11.000753402709961
    5. 'Afficher' → logprob: -11.250753402709961
    6. 'print' → logprob: -11.375753402709961
    7. '```' → logprob: -11.750753402709961
    8. '   ' → logprob: -11.750753402709961
    9. 'return' → logprob: -11.875753402709961
    10. 'aff' → logprob: -12.250753402709961

Token 215: ' afficher' (ID: 146524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012426177971065044
    2. 'aff' → logprob: -4.637426376342773
    3. '    
' → logprob: -6.887426376342773
    4. 'ans' → logprob: -7.012426376342773
    5. '
' → logprob: -8.637426376342773
    6. '```' → logprob: -8.762426376342773
    7. ' afficher' → logprob: -9.262426376342773
    8. '  ' → logprob: -9.262426376342773
    9. ' ' → logprob: -9.887426376342773
    10. '   ' → logprob: -10.387426376342773

Token 216: '(' (ID: 7)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.696077227592468e-05
    2. '(' → logprob: -9.500077247619629
    3. 'ans' → logprob: -14.625077247619629
    4. '((' → logprob: -14.875077247619629
    5. '(div' → logprob: -14.875077247619629
    6. '(s' → logprob: -15.750077247619629
    7. '(cal' → logprob: -15.750077247619629
    8. ' (' → logprob: -16.125076293945312
    9. '(an' → logprob: -16.250076293945312
    10. '(answer' → logprob: -16.625076293945312

Token 217: 'division' (ID: 50596)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05597999319434166
    2. 'division' → logprob: -3.1809799671173096
    3. ' ans' → logprob: -4.680980205535889
    4. ' division' → logprob: -6.305980205535889
    5. '(ans' → logprob: -6.680980205535889
    6. 'div' → logprob: -7.805980205535889
    7. '   ' → logprob: -10.55597972869873
    8. '	ans' → logprob: -10.55597972869873
    9. '_ans' → logprob: -11.18097972869873
    10. ' ' → logprob: -11.30597972869873

Token 218: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.60414821645827e-06
    2. '_ent' → logprob: -12.750004768371582
    3. 'e' → logprob: -15.000004768371582
    4. '(ent' → logprob: -15.125004768371582
    5. '__' → logprob: -15.500004768371582
    6. '_entropy' → logprob: -15.875004768371582
    7. ' ' → logprob: -16.000003814697266
    8. '(' → logprob: -16.000003814697266
    9. '_ENT' → logprob: -16.250003814697266
    10. 'ent' → logprob: -16.375003814697266

Token 219: 'enti' (ID: 14989)
  Prédit: 'enti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enti' → logprob: -0.022535447031259537
    2. '_' → logprob: -4.14753532409668
    3. 'ent' → logprob: -5.39753532409668
    4. 'e' → logprob: -8.14753532409668
    5. '_ent' → logprob: -8.52253532409668
    6. 'ente' → logprob: -8.64753532409668
    7. 'eni' → logprob: -8.77253532409668
    8. '   ' → logprob: -8.89753532409668
    9. 'entre' → logprob: -8.89753532409668
    10. 'ans' → logprob: -9.02253532409668

Token 220: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -4.842555426876061e-06
    2. 'ère' → logprob: -13.000004768371582
    3. 'e' → logprob: -14.500004768371582
    4. '   ' → logprob: -15.000004768371582
    5. 're' → logprob: -15.125004768371582
    6. '`' → logprob: -15.250004768371582
    7. '
' → logprob: -15.750004768371582
    8. '[' → logprob: -15.875004768371582
    9. ']' → logprob: -16.1250057220459
    10. '(' → logprob: -16.1250057220459

Token 221: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.6696149840718135e-05
    2. '(' → logprob: -9.875056266784668
    3. 'ans' → logprob: -12.375056266784668
    4. ' (' → logprob: -14.375056266784668
    5. '(
' → logprob: -15.500056266784668
    6. ')' → logprob: -16.000057220458984
    7. ')(' → logprob: -17.750057220458984
    8. '	ans' → logprob: -18.000057220458984
    9. ' ans' → logprob: -18.500057220458984
    10. '(answer' → logprob: -18.750057220458984

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038611914962530136
    2. '(' → logprob: -3.288611888885498
    3. ' ,' → logprob: -8.788612365722656
    4. ',(' → logprob: -8.913612365722656
    5. '(len' → logprob: -9.288612365722656
    6. ')' → logprob: -10.288612365722656
    7. '(long' → logprob: -10.538612365722656
    8. '(n' → logprob: -10.663612365722656
    9. '(),' → logprob: -11.163612365722656
    10. ',long' → logprob: -11.288612365722656

Token 223: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4272752852994017e-05
    2. '   ' → logprob: -11.25002384185791
    3. ' ' → logprob: -11.50002384185791
    4. ')' → logprob: -14.75002384185791
    5. 'de' → logprob: -14.75002384185791
    6. '  ' → logprob: -15.62502384185791
    7. '    ' → logprob: -16.000024795532227
    8. '
' → logprob: -17.125024795532227
    9. '```' → logprob: -17.375024795532227
    10. '(' → logprob: -18.000024795532227

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.141186450899113e-05
    2. ' ' → logprob: -11.250020980834961
    3. '   ' → logprob: -12.000020980834961
    4. 'de' → logprob: -13.500020980834961
    5. ')' → logprob: -15.375020980834961
    6. '    ' → logprob: -15.500020980834961
    7. '  ' → logprob: -15.625020980834961
    8. '(' → logprob: -16.37502098083496
    9. '
' → logprob: -17.62502098083496
    10. '```' → logprob: -17.62502098083496

Token 225: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001605115394340828
    2. '))' → logprob: -8.750160217285156
    3. ')
' → logprob: -13.625160217285156
    4. ')`' → logprob: -15.375160217285156
    5. '())' → logprob: -16.125160217285156
    6. ' )' → logprob: -16.250160217285156
    7. '`)' → logprob: -16.375160217285156
    8. '})' → logprob: -16.500160217285156
    9. ')))' → logprob: -16.625160217285156
    10. '()' → logprob: -16.750160217285156

Token 226: 'trait' (ID: 18216)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.00012987985974177718
    2. 'er' → logprob: -9.000129699707031
    3. 'ment' → logprob: -12.375129699707031
    4. 'em' → logprob: -14.125129699707031
    5. '_' → logprob: -14.250129699707031
    6. 'e' → logprob: -14.375129699707031
    7. 'rement' → logprob: -16.75012969970703
    8. '```' → logprob: -16.75012969970703
    9. 'ent' → logprob: -17.00012969970703
    10. 'EMENT' → logprob: -17.62512969970703

Token 228: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.610702363715973e-06
    2. '(' → logprob: -12.500009536743164
    3. ' ()' → logprob: -13.250009536743164
    4. '();' → logprob: -13.500009536743164
    5. '()
' → logprob: -14.375009536743164
    6. '()`' → logprob: -14.500009536743164
    7. '()<' → logprob: -14.875009536743164
    8. '()">' → logprob: -15.000009536743164
    9. '()?' → logprob: -15.500009536743164
    10. '()>' → logprob: -15.875009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 226
Tokens correctement prédits (1ère position, stricte): 98
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 190
Précision stricte (1ère position): 43.36%
Précision adaptée (1ère position): 45.13%
Précision (top 10): 84.07%
================================================================================
