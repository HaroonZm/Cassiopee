================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return int(input()), list(map(int, input().split()))

def initialize_variables():
    return 0, 0, 0, 0

def is_valid(nowsum, nowxsum, A_r):
    return nowsum + A_r == (nowxsum ^ A_r)

def update_nowsum(nowsum, A_r):
    return nowsum + A_r

def update_nowxsum(nowxsum, A_r):
    return nowxsum ^ A_r

def revert_nowsum(nowsum, A_l):
    return nowsum - A_l

def revert_nowxsum(nowxsum, A_l):
    return nowxsum ^ A_l

def increase_r(r):
    return r + 1

def compute_increment(r, l):
    return r - l

def main():
    n, A = read_input()
    ans, l, r, nowsum = initialize_variables()
    nowxsum = 0
    for l in range(n):
        r = max(r, l)
        while r < n and is_valid(nowsum, nowxsum, A[r]):
            nowsum = update_nowsum(nowsum, A[r])
            nowxsum = update_nowxsum(nowxsum, A[r])
            r = increase_r(r)
        ans += compute_increment(r, l)
        nowsum = revert_nowsum(nowsum, A[l])
        nowxsum = revert_nowxsum(nowxsum, A[l])
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021150470711290836
    2. '_' → logprob: -7.002115249633789
    3. '():' → logprob: -7.377115249633789
    4. '(:' → logprob: -8.502115249633789
    5. '```' → logprob: -8.877115249633789
    6. '(_:' → logprob: -9.502115249633789
    7. ':' → logprob: -9.752115249633789
    8. ' (' → logprob: -10.127115249633789
    9. '(_' → logprob: -11.002115249633789
    10. '()' → logprob: -12.627115249633789

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9125446677207947
    2. '\' → logprob: -1.2875447273254395
    3. '\n' → logprob: -1.4125447273254395
    4. '   ' → logprob: -3.1625447273254395
    5. '    
' → logprob: -4.9125447273254395
    6. '
' → logprob: -5.1625447273254395
    7. ' 
' → logprob: -5.6625447273254395
    8. '``' → logprob: -5.7875447273254395
    9. ':' → logprob: -6.1625447273254395
    10. ''\' → logprob: -6.6625447273254395

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9083667397499084
    2. '   ' → logprob: -1.1583666801452637
    3. 'input' → logprob: -2.6583666801452637
    4. 'r' → logprob: -2.9083666801452637
    5. '```' → logprob: -3.1583666801452637
    6. 'x' → logprob: -3.2833666801452637
    7. 'data' → logprob: -4.158366680145264
    8. 'i' → logprob: -4.283366680145264
    9. '    ' → logprob: -4.908366680145264
    10. ' ' → logprob: -4.908366680145264

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21321910619735718
    2. ' input' → logprob: -2.213219165802002
    3. 'input' → logprob: -3.088219165802002
    4. '"' → logprob: -3.463219165802002
    5. ''' → logprob: -5.588219165802002
    6. ' []' → logprob: -7.588219165802002
    7. '  ' → logprob: -7.963219165802002
    8. ' "' → logprob: -8.463218688964844
    9. ' None' → logprob: -9.088218688964844
    10. '(input' → logprob: -9.213218688964844

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021223074290901423
    2. ''' → logprob: -7.002122402191162
    3. '('' → logprob: -7.252122402191162
    4. '`' → logprob: -8.877121925354004
    5. '"' → logprob: -9.502121925354004
    6. '("("' → logprob: -9.502121925354004
    7. '```' → logprob: -9.627121925354004
    8. ' (' → logprob: -10.502121925354004
    9. '40' → logprob: -10.627121925354004
    10. '32' → logprob: -10.877121925354004

Token 8: '()),' (ID: 24379)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.40508970618247986
    2. '(' → logprob: -1.2800897359848022
    3. ')' → logprob: -3.5300896167755127
    4. '()))' → logprob: -4.405089855194092
    5. '()' → logprob: -4.530089855194092
    6. '))' → logprob: -6.655089855194092
    7. '('' → logprob: -7.780089855194092
    8. '(""))' → logprob: -8.280089378356934
    9. ' ())' → logprob: -8.405089378356934
    10. '`()' → logprob: -9.155089378356934

Token 9: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5296796560287476
    2. '(' → logprob: -2.154679775238037
    3. '<|end|>' → logprob: -2.154679775238037
    4. ')' → logprob: -3.154679775238037
    5. '[' → logprob: -3.404679775238037
    6. 'def' → logprob: -3.904679775238037
    7. '_' → logprob: -4.529679775238037
    8. 'input' → logprob: -4.654679775238037
    9. '\n' → logprob: -5.029679775238037
    10. '0' → logprob: -5.029679775238037

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013464430347084999
    2. '[' → logprob: -4.888464450836182
    3. '()' → logprob: -5.888464450836182
    4. '[int' → logprob: -7.013464450836182
    5. '(range' → logprob: -7.263464450836182
    6. '[(' → logprob: -7.513464450836182
    7. '```' → logprob: -9.388463973999023
    8. '(open' → logprob: -9.513463973999023
    9. '[]' → logprob: -9.513463973999023
    10. '('' → logprob: -9.638463973999023

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25424718856811523
    2. '(' → logprob: -1.5042471885681152
    3. '(str' → logprob: -6.254247188568115
    4. '(lambda' → logprob: -8.254247665405273
    5. '(input' → logprob: -10.004247665405273
    6. 'int' → logprob: -10.379247665405273
    7. '(
' → logprob: -11.129247665405273
    8. 'str' → logprob: -12.004247665405273
    9. '<int' → logprob: -12.129247665405273
    10. '(ord' → logprob: -12.129247665405273

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007615032605826855
    2. ',input' → logprob: -5.382615089416504
    3. '(' → logprob: -6.632615089416504
    4. ')' → logprob: -7.257615089416504
    5. ',' → logprob: -8.132615089416504
    6. '))' → logprob: -8.507615089416504
    7. '<|end|>' → logprob: -9.132615089416504
    8. '=input' → logprob: -9.507615089416504
    9. ' (' → logprob: -9.882615089416504
    10. 'input' → logprob: -10.007615089416504

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25194650888442993
    2. ' input' → logprob: -1.5019464492797852
    3. '(input' → logprob: -11.501946449279785
    4. '	input' → logprob: -13.501946449279785
    5. '=input' → logprob: -13.626946449279785
    6. ',input' → logprob: -13.626946449279785
    7. ')' → logprob: -13.751946449279785
    8. '<input' → logprob: -14.001946449279785
    9. ' ' → logprob: -14.251946449279785
    10. 'str' → logprob: -15.001946449279785

Token 14: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7858846783638
    2. '())' → logprob: -1.1608846187591553
    3. '()' → logprob: -1.6608846187591553
    4. '().' → logprob: -3.9108846187591553
    5. '())))' → logprob: -4.660884857177734
    6. ')' → logprob: -5.785884857177734
    7. '(' → logprob: -6.160884857177734
    8. '))' → logprob: -6.660884857177734
    9. '()));' → logprob: -6.785884857177734
    10. '(()' → logprob: -7.160884857177734

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02329171448945999
    2. 'strip' → logprob: -3.773291826248169
    3. 'rstrip' → logprob: -10.02329158782959
    4. ' split' → logprob: -13.77329158782959
    5. '(split' → logprob: -14.27329158782959
    6. ' strip' → logprob: -16.148292541503906
    7. 'read' → logprob: -16.273292541503906
    8. 'spl' → logprob: -18.148292541503906
    9. 'replace' → logprob: -19.273292541503906
    10. '.split' → logprob: -19.523292541503906

Token 16: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5440424680709839
    2. '))' → logprob: -0.9190424680709839
    3. '())' → logprob: -4.669042587280273
    4. '(' → logprob: -5.169042587280273
    5. ')' → logprob: -6.169042587280273
    6. '()' → logprob: -6.294042587280273
    7. ')))' → logprob: -6.794042587280273
    8. '())))' → logprob: -7.669042587280273
    9. '()))
' → logprob: -10.544042587280273
    10. ''))' → logprob: -11.169042587280273

Token 17: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0986181497573853
    2. 'def' → logprob: -1.5986181497573853
    3. '<|end|>' → logprob: -1.7236181497573853
    4. '```' → logprob: -1.8486181497573853
    5. '#' → logprob: -2.5986180305480957
    6. '\n' → logprob: -4.098618030548096
    7. '

' → logprob: -4.223618030548096
    8. 'newline' → logprob: -5.348618030548096
    9. '\' → logprob: -5.848618030548096
    10. '' → logprob: -6.098618030548096

Token 18: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.217406153678894
    2. ' calculate' → logprob: -1.342406153678894
    3. ' solve' → logprob: -1.592406153678894
    4. ' process' → logprob: -1.842406153678894
    5. ' compute' → logprob: -3.0924062728881836
    6. ' factorial' → logprob: -4.717406272888184
    7. ' find' → logprob: -5.092406272888184
    8. ' write' → logprob: -5.342406272888184
    9. ' sort' → logprob: -5.717406272888184
    10. ' binary' → logprob: -6.592406272888184

Token 19: '_variables' (ID: 69364)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4381254315376282
    2. '_' → logprob: -1.0631253719329834
    3. '(_' → logprob: -5.8131256103515625
    4. '```' → logprob: -6.4381256103515625
    5. '_(' → logprob: -7.4381256103515625
    6. '_data' → logprob: -7.8131256103515625
    7. '_parameters' → logprob: -7.9381256103515625
    8. '(_)' → logprob: -8.188125610351562
    9. '_variables' → logprob: -8.313125610351562
    10. '('_' → logprob: -8.313125610351562

Token 20: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03465272858738899
    2. '_' → logprob: -3.5346527099609375
    3. '():' → logprob: -6.5346527099609375
    4. '()' → logprob: -8.159652709960938
    5. '(_)' → logprob: -8.159652709960938
    6. ' (' → logprob: -8.284652709960938
    7. '("("' → logprob: -8.284652709960938
    8. '```' → logprob: -8.284652709960938
    9. '(:' → logprob: -8.409652709960938
    10. '(_' → logprob: -8.534652709960938

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016314353793859482
    2. '    ' → logprob: -5.141314506530762
    3. 'a' → logprob: -5.516314506530762
    4. 'n' → logprob: -6.016314506530762
    5. ' ' → logprob: -7.266314506530762
    6. '```' → logprob: -7.391314506530762
    7. '       ' → logprob: -7.641314506530762
    8. '    
' → logprob: -7.641314506530762
    9. '[' → logprob: -8.641314506530762
    10. '_' → logprob: -8.891314506530762

Token 22: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9773623943328857
    2. ' total' → logprob: -2.6023623943328857
    3. ' return' → logprob: -2.7273623943328857
    4. ' result' → logprob: -2.8523623943328857
    5. ' count' → logprob: -3.1023623943328857
    6. 'a' → logprob: -3.3523623943328857
    7. ' current' → logprob: -3.6023623943328857
    8. ' a' → logprob: -3.7273623943328857
    9. ' max' → logprob: -3.7273623943328857
    10. ' counter' → logprob: -3.7273623943328857

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2600785195827484
    2. '[' → logprob: -2.2600784301757812
    3. '[]' → logprob: -2.6350784301757812
    4. '{}' → logprob: -3.7600784301757812
    5. '{' → logprob: -3.8850784301757812
    6. '{
' → logprob: -5.760078430175781
    7. ' ' → logprob: -6.385078430175781
    8. '{'' → logprob: -7.260078430175781
    9. '[],' → logprob: -7.260078430175781
    10. '{"' → logprob: -7.385078430175781

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26011335849761963
    2. '[' → logprob: -2.26011323928833
    3. '[]' → logprob: -2.38511323928833
    4. '{}' → logprob: -4.13511323928833
    5. '{' → logprob: -4.88511323928833
    6. '[],' → logprob: -5.51011323928833
    7. '(' → logprob: -5.76011323928833
    8. '{'' → logprob: -7.88511323928833
    9. '{},' → logprob: -8.510113716125488
    10. '{
' → logprob: -8.510113716125488

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1487903743982315
    2. '<|end|>' → logprob: -2.5237903594970703
    3. ' ,' → logprob: -2.8987903594970703
    4. '<|end|>' → logprob: -6.77379035949707
    5. ',n' → logprob: -7.77379035949707
    6. ' ' → logprob: -7.77379035949707
    7. 'def' → logprob: -8.89879035949707
    8. '0' → logprob: -9.02379035949707
    9. '  ' → logprob: -9.27379035949707
    10. ',a' → logprob: -9.64879035949707

Token 26: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.11320933699607849
    2. '[]' → logprob: -2.7382092475891113
    3. ' ' → logprob: -3.7382092475891113
    4. '0' → logprob: -4.363209247589111
    5. ' [],' → logprob: -5.863209247589111
    6. ' {}' → logprob: -6.488209247589111
    7. '[],' → logprob: -7.613209247589111
    8. ' [' → logprob: -8.48820972442627
    9. '{}' → logprob: -8.48820972442627
    10. '10' → logprob: -9.11320972442627

Token 27: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2945859730243683
    2. '0' → logprob: -1.419585943222046
    3. '{}' → logprob: -5.044586181640625
    4. '[],' → logprob: -5.169586181640625
    5. '[' → logprob: -8.544586181640625
    6. '[]}' → logprob: -8.544586181640625
    7. '[]
' → logprob: -8.669586181640625
    8. '{' → logprob: -9.044586181640625
    9. 'False' → logprob: -9.169586181640625
    10. '[]

' → logprob: -9.169586181640625

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15904778242111206
    2. '
' → logprob: -2.909047842025757
    3. 'def' → logprob: -3.034047842025757
    4. '<|end|>' → logprob: -3.659047842025757
    5. ',
' → logprob: -4.784047603607178
    6. 'n' → logprob: -6.159047603607178
    7. ',n' → logprob: -6.159047603607178
    8. '

' → logprob: -6.409047603607178
    9. '```' → logprob: -7.034047603607178
    10. '<|end|>' → logprob: -7.409047603607178

Token 29: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.15937858819961548
    2. '[]' → logprob: -3.0343785285949707
    3. ' [],' → logprob: -3.1593785285949707
    4. ' ' → logprob: -3.4093785285949707
    5. '0' → logprob: -4.284378528594971
    6. '[],' → logprob: -5.409378528594971
    7. ' {}' → logprob: -5.659378528594971
    8. ' {},' → logprob: -7.284378528594971
    9. '{}' → logprob: -7.784378528594971
    10. '[' → logprob: -9.284379005432129

Token 30: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1051427572965622
    2. '0' → logprob: -3.355142831802368
    3. '{}' → logprob: -3.480142831802368
    4. '[],' → logprob: -3.480142831802368
    5. '[]}' → logprob: -7.230142593383789
    6. 'False' → logprob: -7.480142593383789
    7. '[]
' → logprob: -7.980142593383789
    8. '{' → logprob: -7.980142593383789
    9. '{},' → logprob: -7.980142593383789
    10. ' []' → logprob: -8.230142593383789

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10774146765470505
    2. 'def' → logprob: -3.482741355895996
    3. '
' → logprob: -4.107741355895996
    4. '<|end|>' → logprob: -4.107741355895996
    5. ',n' → logprob: -4.482741355895996
    6. 'n' → logprob: -4.857741355895996
    7. ',
' → logprob: -4.857741355895996
    8. '\' → logprob: -5.732741355895996
    9. '\n' → logprob: -6.857741355895996
    10. ' ,' → logprob: -7.232741355895996

Token 32: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1395799070596695
    2. ' ' → logprob: -3.139580011367798
    3. '[]' → logprob: -3.139580011367798
    4. ' [],' → logprob: -3.764580011367798
    5. '0' → logprob: -4.264579772949219
    6. '[],' → logprob: -6.014579772949219
    7. ' {}' → logprob: -6.264579772949219
    8. ' False' → logprob: -8.139579772949219
    9. '{}' → logprob: -8.264579772949219
    10. 'False' → logprob: -8.264579772949219

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48642584681510925
    2. '[]' → logprob: -0.9864258766174316
    3. '[],' → logprob: -4.736425876617432
    4. 'False' → logprob: -6.611425876617432
    5. ' []' → logprob: -7.236425876617432
    6. '{}' → logprob: -7.986425876617432
    7. '[]
' → logprob: -8.236425399780273
    8. ' ' → logprob: -8.486425399780273
    9. '[]}' → logprob: -8.736425399780273
    10. '[]

' → logprob: -9.111425399780273

Token 34: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48761823773384094
    2. 'def' → logprob: -1.7376182079315186
    3. '
' → logprob: -1.8626182079315186
    4. 'n' → logprob: -4.487618446350098
    5. ',n' → logprob: -4.487618446350098
    6. ',
' → logprob: -4.612618446350098
    7. '<|end|>' → logprob: -5.362618446350098
    8. '

' → logprob: -5.612618446350098
    9. '\' → logprob: -5.737618446350098
    10. '```' → logprob: -6.237618446350098

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029179973527789116
    2. 'd' → logprob: -3.9041800498962402
    3. 'n' → logprob: -4.90418004989624
    4. 'a' → logprob: -7.15418004989624
    5. '\' → logprob: -8.654179573059082
    6. '```' → logprob: -9.279179573059082
    7. 'for' → logprob: -10.404179573059082
    8. 't' → logprob: -10.904179573059082
    9. '\n' → logprob: -10.904179573059082
    10. 'de' → logprob: -11.029179573059082

Token 36: ' is' (ID: 382)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.5563011765480042
    2. ' solve' → logprob: -1.1813011169433594
    3. ' main' → logprob: -2.9313011169433594
    4. ' calculate' → logprob: -4.056301116943359
    5. ' count' → logprob: -4.431301116943359
    6. ' compute' → logprob: -4.681301116943359
    7. ' max' → logprob: -5.181301116943359
    8. ' binary' → logprob: -5.806301116943359
    9. ' find' → logprob: -5.931301116943359
    10. ' solution' → logprob: -5.931301116943359

Token 37: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.8291820883750916
    2. '_pal' → logprob: -1.5791821479797363
    3. '_prime' → logprob: -1.8291821479797363
    4. '_' → logprob: -2.0791821479797363
    5. '_sorted' → logprob: -3.7041821479797363
    6. '_possible' → logprob: -4.829182147979736
    7. '_bal' → logprob: -5.204182147979736
    8. '_div' → logprob: -5.454182147979736
    9. '_in' → logprob: -5.579182147979736
    10. '_sub' → logprob: -5.704182147979736

Token 38: '(n' (ID: 2406)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02484872005879879
    2. '(' → logprob: -3.774848699569702
    3. '_parent' → logprob: -6.774848937988281
    4. '(_)' → logprob: -9.649848937988281
    5. '(_' → logprob: -9.774848937988281
    6. '_user' → logprob: -10.024848937988281
    7. '_(' → logprob: -10.024848937988281
    8. '_space' → logprob: -10.649848937988281
    9. '_token' → logprob: -11.024848937988281
    10. ' (' → logprob: -11.274848937988281

Token 39: 'ows' (ID: 1513)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0630568414926529
    2. ',' → logprob: -3.0630569458007812
    3. '_)' → logprob: -5.188056945800781
    4. '_' → logprob: -5.438056945800781
    5. '_,' → logprob: -6.813056945800781
    6. 'a' → logprob: -7.063056945800781
    7. ',)' → logprob: -7.563056945800781
    8. 'u' → logprob: -8.188056945800781
    9. '):' → logprob: -8.438056945800781
    10. '(' → logprob: -8.563056945800781

Token 40: 'um' (ID: 394)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6145543456077576
    2. ')' → logprob: -1.3645544052124023
    3. 'e' → logprob: -2.7395544052124023
    4. '_)' → logprob: -2.8645544052124023
    5. '_' → logprob: -3.3645544052124023
    6. 'u' → logprob: -4.864554405212402
    7. '_t' → logprob: -4.864554405212402
    8. 'a' → logprob: -5.614554405212402
    9. '(' → logprob: -5.864554405212402
    10. ':)' → logprob: -5.864554405212402

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3010242283344269
    2. ')' → logprob: -1.6760241985321045
    3. '):' → logprob: -2.9260241985321045
    4. '_' → logprob: -4.926024436950684
    5. '_,' → logprob: -5.676024436950684
    6. '(' → logprob: -5.676024436950684
    7. ',)' → logprob: -7.051024436950684
    8. ' ,' → logprob: -7.176024436950684
    9. '_)' → logprob: -7.301024436950684
    10. '[' → logprob: -7.551024436950684

Token 42: ' now' (ID: 1954)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -1.9159458875656128
    2. ' n' → logprob: -2.4159460067749023
    3. ' k' → logprob: -2.7284460067749023
    4. ' current' → logprob: -2.8534460067749023
    5. ' now' → logprob: -2.9784460067749023
    6. ' total' → logprob: -3.4159460067749023
    7. 'target' → logprob: -3.4784460067749023
    8. 'n' → logprob: -3.7284460067749023
    9. 'k' → logprob: -3.9159460067749023
    10. ' x' → logprob: -3.9159460067749023

Token 43: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.770768404006958
    2. '_sum' → logprob: -1.270768404006958
    3. ',' → logprob: -2.270768404006958
    4. 'sum' → logprob: -2.395768404006958
    5. '_val' → logprob: -4.770768165588379
    6. '_' → logprob: -4.895768165588379
    7. '_count' → logprob: -5.270768165588379
    8. ' )' → logprob: -5.520768165588379
    9. '_value' → logprob: -5.895768165588379
    10. ',)' → logprob: -5.895768165588379

Token 44: 'sum' (ID: 12298)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6267688274383545
    2. ',' → logprob: -1.2517688274383545
    3. ')' → logprob: -2.0017688274383545
    4. '_' → logprob: -4.376769065856934
    5. 'u' → logprob: -5.001769065856934
    6. 'e' → logprob: -5.251769065856934
    7. '_,' → logprob: -6.001769065856934
    8. 'a' → logprob: -6.126769065856934
    9. '),' → logprob: -6.501769065856934
    10. 'y' → logprob: -6.626769065856934

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8312325477600098
    2. ')' → logprob: -1.2062325477600098
    3. '):' → logprob: -1.3312325477600098
    4. ' ):' → logprob: -8.831232070922852
    5. '_' → logprob: -8.956232070922852
    6. ' ,' → logprob: -8.956232070922852
    7. ' )' → logprob: -9.706232070922852
    8. ',)' → logprob: -9.706232070922852
    9. ')>' → logprob: -9.956232070922852
    10. '(' → logprob: -10.081232070922852

Token 46: ' A' (ID: 355)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.4340917766094208
    2. 'now' → logprob: -1.5590918064117432
    3. ' n' → logprob: -3.559091806411743
    4. 'n' → logprob: -3.746591806411743
    5. '   ' → logprob: -4.184091567993164
    6. 'nown' → logprob: -5.371591567993164
    7. 'k' → logprob: -5.434091567993164
    8. ' k' → logprob: -5.496591567993164
    9. 'x' → logprob: -5.996591567993164
    10. 'm' → logprob: -6.059091567993164

Token 47: '_r' (ID: 3442)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24031437933444977
    2. '):' → logprob: -1.7403143644332886
    3. ' ,' → logprob: -4.740314483642578
    4. '[' → logprob: -4.990314483642578
    5. ')' → logprob: -5.115314483642578
    6. '_sum' → logprob: -6.115314483642578
    7. ' ):' → logprob: -6.365314483642578
    8. 'sum' → logprob: -6.615314483642578
    9. 's' → logprob: -6.615314483642578
    10. 'x' → logprob: -6.740314483642578

Token 48: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49337461590766907
    2. ')' → logprob: -1.4933745861053467
    3. 'ight' → logprob: -3.7433745861053467
    4. '[' → logprob: -3.9933745861053467
    5. '),' → logprob: -4.243374824523926
    6. 'e' → logprob: -4.493374824523926
    7. 'ange' → logprob: -4.618374824523926
    8. '):' → logprob: -4.618374824523926
    9. 'a' → logprob: -4.743374824523926
    10. 'ank' → logprob: -5.243374824523926

Token 49: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1769452840089798
    2. '):' → logprob: -2.926945209503174
    3. '   ' → logprob: -3.176945209503174
    4. ' :' → logprob: -3.426945209503174
    5. ',' → logprob: -3.551945209503174
    6. ' >=' → logprob: -7.051945209503174
    7. ' ,' → logprob: -7.301945209503174
    8. '():' → logprob: -7.551945209503174
    9. '>:' → logprob: -7.551945209503174
    10. ':return' → logprob: -7.676945209503174

Token 50: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1669836789369583
    2. '    ' → logprob: -2.6669836044311523
    3. ' ' → logprob: -3.4169836044311523
    4. ' n' → logprob: -3.7919836044311523
    5. ' return' → logprob: -4.791983604431152
    6. ':' → logprob: -5.916983604431152
    7. ')' → logprob: -6.166983604431152
    8. '(' → logprob: -6.166983604431152
    9. 'n' → logprob: -6.291983604431152
    10. ',' → logprob: -6.416983604431152

Token 51: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0752435252070427
    2. 'n' → logprob: -2.7002434730529785
    3. ' (' → logprob: -6.0752434730529785
    4. ' abs' → logprob: -6.5752434730529785
    5. '(n' → logprob: -7.3252434730529785
    6. 'abs' → logprob: -7.5752434730529785
    7. '(' → logprob: -8.825243949890137
    8. '   ' → logprob: -9.575243949890137
    9. ' now' → logprob: -9.825243949890137
    10. ' ' → logprob: -9.825243949890137

Token 52: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.0007772310636937618
    2. 'ow' → logprob: -7.375777244567871
    3. 'ots' → logprob: -10.250777244567871
    4. 'ws' → logprob: -10.375777244567871
    5. 'o' → logprob: -10.875777244567871
    6. 'w' → logprob: -11.000777244567871
    7. '<=' → logprob: -12.125777244567871
    8. 'ofs' → logprob: -12.250777244567871
    9. '+' → logprob: -12.625777244567871
    10. '>' → logprob: -12.750777244567871

Token 53: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.040907759219408035
    2. 'sum' → logprob: -3.915907859802246
    3. 'u' → logprob: -4.165907859802246
    4. 'umsum' → logprob: -6.290907859802246
    5. 'ums' → logprob: -6.415907859802246
    6. 'us' → logprob: -8.540907859802246
    7. 'up' → logprob: -9.165907859802246
    8. '_sum' → logprob: -9.165907859802246
    9. 'uml' → logprob: -9.540907859802246
    10. 'valid' → logprob: -9.540907859802246

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38312673568725586
    2. ' +' → logprob: -1.2581267356872559
    3. '<=' → logprob: -4.383126735687256
    4. ' <=' → logprob: -4.883126735687256
    5. '>=' → logprob: -5.133126735687256
    6. ' >=' → logprob: -6.008126735687256
    7. '<' → logprob: -6.508126735687256
    8. '==' → logprob: -6.758126735687256
    9. '>' → logprob: -6.883126735687256
    10. '-' → logprob: -7.383126735687256

Token 55: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.36458951234817505
    2. 'A' → logprob: -1.2395894527435303
    3. ' now' → logprob: -4.239589691162109
    4. 'now' → logprob: -6.614589691162109
    5. ' ' → logprob: -9.23958969116211
    6. '   ' → logprob: -10.36458969116211
    7. '[now' → logprob: -10.98958969116211
    8. '1' → logprob: -11.23958969116211
    9. '(A' → logprob: -11.36458969116211
    10. ' (' → logprob: -11.36458969116211

Token 56: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.318681188422488e-05
    2. '[' → logprob: -12.37501335144043
    3. '[r' → logprob: -12.37501335144043
    4. 'r' → logprob: -13.00001335144043
    5. '_' → logprob: -13.25001335144043
    6. '[_' → logprob: -15.00001335144043
    7. '_[' → logprob: -16.00001335144043
    8. '```' → logprob: -17.50001335144043
    9. '	r' → logprob: -18.00001335144043
    10. '[]' → logprob: -18.12501335144043

Token 57: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3767423629760742
    2. '<=' → logprob: -1.2517423629760742
    3. '[' → logprob: -4.501742362976074
    4. '<' → logprob: -5.001742362976074
    5. ' <' → logprob: -6.126742362976074
    6. '>' → logprob: -6.251742362976074
    7. ' >=' → logprob: -6.376742362976074
    8. '>=' → logprob: -6.501742362976074
    9. ' ' → logprob: -7.126742362976074
    10. ' >' → logprob: -7.251742362976074

Token 58: ' (' (ID: 350)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.07172910869121552
    2. 'now' → logprob: -2.6967291831970215
    3. '0' → logprob: -6.9467291831970215
    4. ' n' → logprob: -8.696728706359863
    5. 'A' → logprob: -8.821728706359863
    6. ' A' → logprob: -9.071728706359863
    7. ' ' → logprob: -9.071728706359863
    8. 'n' → logprob: -9.446728706359863
    9. '[now' → logprob: -10.071728706359863
    10. '20' → logprob: -10.571728706359863

Token 59: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.4844549298286438
    2. ' now' → logprob: -0.9844549298286438
    3. '   ' → logprob: -5.234455108642578
    4. ')' → logprob: -6.359455108642578
    5. '[now' → logprob: -6.734455108642578
    6. ' n' → logprob: -7.109455108642578
    7. 'n' → logprob: -7.859455108642578
    8. '    ' → logprob: -8.359455108642578
    9. '(now' → logprob: -8.984455108642578
    10. '	now' → logprob: -9.234455108642578

Token 60: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002870801545213908
    2. 'sum' → logprob: -9.000287055969238
    3. ' x' → logprob: -9.375287055969238
    4. '_x' → logprob: -10.250287055969238
    5. 'xs' → logprob: -11.250287055969238
    6. ' ' → logprob: -12.375287055969238
    7. 'r' → logprob: -12.750287055969238
    8. 's' → logprob: -12.750287055969238
    9. '   ' → logprob: -12.750287055969238
    10. '_sum' → logprob: -13.000287055969238

Token 61: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0007015953888185322
    2. 's' → logprob: -7.375701427459717
    3. 'r' → logprob: -10.375701904296875
    4. 'x' → logprob: -10.750701904296875
    5. '_sum' → logprob: -12.625701904296875
    6. 'um' → logprob: -12.625701904296875
    7. 'summ' → logprob: -12.625701904296875
    8. 'rs' → logprob: -12.875701904296875
    9. ' sum' → logprob: -13.250701904296875
    10. 'su' → logprob: -13.750701904296875

Token 62: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.03407393768429756
    2. '^' → logprob: -3.659073829650879
    3. ' ' → logprob: -5.284073829650879
    4. ' xor' → logprob: -6.659073829650879
    5. ')' → logprob: -7.409073829650879
    6. '+' → logprob: -7.909073829650879
    7. ' +' → logprob: -8.409073829650879
    8. ' XOR' → logprob: -9.534073829650879
    9. ')^' → logprob: -10.659073829650879
    10. ' )' → logprob: -10.659073829650879

Token 63: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11287054419517517
    2. ' A' → logprob: -2.237870454788208
    3. '   ' → logprob: -10.737870216369629
    4. ' ' → logprob: -10.862870216369629
    5. '	A' → logprob: -13.237870216369629
    6. 'r' → logprob: -13.362870216369629
    7. '  ' → logprob: -13.487870216369629
    8. ')' → logprob: -13.862870216369629
    9. '    ' → logprob: -14.737870216369629
    10. '(A' → logprob: -15.487870216369629

Token 64: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.2664456789934775e-06
    2. 'r' → logprob: -14.250000953674316
    3. '_' → logprob: -14.625000953674316
    4. '[' → logprob: -17.375001907348633
    5. '[r' → logprob: -17.375001907348633
    6. '_x' → logprob: -17.750001907348633
    7. ')' → logprob: -17.875001907348633
    8. ' _' → logprob: -18.000001907348633
    9. '_s' → logprob: -18.875001907348633
    10. '(r' → logprob: -19.250001907348633

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013250234769657254
    2. ' )' → logprob: -9.00013256072998
    3. '))' → logprob: -12.75013256072998
    4. ')return' → logprob: -13.50013256072998
    5. ')))' → logprob: -13.75013256072998
    6. ' ' → logprob: -14.75013256072998
    7. '   ' → logprob: -14.87513256072998
    8. ')
' → logprob: -15.00013256072998
    9. ')#' → logprob: -15.12513256072998
    10. '),' → logprob: -15.12513256072998

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37255576252937317
    2. '

' → logprob: -1.3725557327270508
    3. '
' → logprob: -2.872555732727051
    4. '<|end|>' → logprob: -7.747555732727051
    5. ' def' → logprob: -8.49755573272705
    6. '\n' → logprob: -9.49755573272705
    7. '\' → logprob: -9.99755573272705
    8. ' 

' → logprob: -10.12255573272705
    9. '<|end|>' → logprob: -10.37255573272705
    10. '
' → logprob: -10.62255573272705

Token 67: ' update' (ID: 4027)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03315051645040512
    2. ' solve' → logprob: -4.908150672912598
    3. ' validate' → logprob: -5.033150672912598
    4. ' check' → logprob: -5.283150672912598
    5. ' valid' → logprob: -5.783150672912598
    6. ' process' → logprob: -6.158150672912598
    7. ' def' → logprob: -6.408150672912598
    8. '_' → logprob: -6.783150672912598
    9. ' calculate' → logprob: -6.783150672912598
    10. ' read' → logprob: -7.283150672912598

Token 68: '_n' (ID: 2170)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33182263374328613
    2. '(n' → logprob: -1.4568226337432861
    3. '_values' → logprob: -3.956822633743286
    4. '_variables' → logprob: -3.956822633743286
    5. '_parameters' → logprob: -5.831822395324707
    6. '(_' → logprob: -6.081822395324707
    7. '_' → logprob: -6.706822395324707
    8. '_vars' → logprob: -7.206822395324707
    9. '_n' → logprob: -7.456822395324707
    10. '(s' → logprob: -7.706822395324707

Token 69: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.0002969703928101808
    2. 'ow' → logprob: -8.250296592712402
    3. '_' → logprob: -11.250296592712402
    4. 'ext' → logprob: -11.500296592712402
    5. 'ums' → logprob: -13.250296592712402
    6. 'owski' → logprob: -13.375296592712402
    7. '```' → logprob: -13.625296592712402
    8. '_n' → logprob: -13.875296592712402
    9. 'def' → logprob: -14.125296592712402
    10. '   ' → logprob: -14.875296592712402

Token 70: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -7.541112427134067e-05
    2. 'sum' → logprob: -10.375075340270996
    3. 'u' → logprob: -10.625075340270996
    4. 'ум' → logprob: -11.750075340270996
    5. 'umsum' → logprob: -12.375075340270996
    6. 'ums' → logprob: -12.750075340270996
    7. '_sum' → logprob: -14.625075340270996
    8. 'un' → logprob: -14.750075340270996
    9. 'up' → logprob: -14.812575340270996
    10. ' um' → logprob: -14.937575340270996

Token 71: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47960275411605835
    2. '(n' → logprob: -0.9796027541160583
    3. ',' → logprob: -5.354602813720703
    4. '(now' → logprob: -8.354602813720703
    5. '():' → logprob: -9.729602813720703
    6. ',n' → logprob: -9.854602813720703
    7. '(a' → logprob: -9.979602813720703
    8. '(current' → logprob: -10.104602813720703
    9. '(prev' → logprob: -10.354602813720703
    10. ':' → logprob: -10.479602813720703

Token 72: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.0029243486933410168
    2. 'ow' → logprob: -5.87792444229126
    3. 'o' → logprob: -10.252923965454102
    4. '_' → logprob: -11.252923965454102
    5. 'ws' → logprob: -11.377923965454102
    6. 'os' → logprob: -11.627923965454102
    7. '   ' → logprob: -11.877923965454102
    8. ',' → logprob: -12.002923965454102
    9. 'w' → logprob: -12.127923965454102
    10. ' o' → logprob: -12.252923965454102

Token 73: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00029589756741188467
    2. 'u' → logprob: -8.875295639038086
    3. 'sum' → logprob: -9.250295639038086
    4. 'ум' → logprob: -11.500295639038086
    5. 'up' → logprob: -11.625295639038086
    6. ',' → logprob: -12.000295639038086
    7. 'umsum' → logprob: -12.125295639038086
    8. '_' → logprob: -12.375295639038086
    9. '_sum' → logprob: -12.875295639038086
    10. ' ' → logprob: -12.875295639038086

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024120386224240065
    2. ' ,' → logprob: -6.502411842346191
    3. ' +' → logprob: -8.002411842346191
    4. '+' → logprob: -8.002411842346191
    5. '+,' → logprob: -9.627411842346191
    6. ',n' → logprob: -9.877411842346191
    7. ',A' → logprob: -10.002411842346191
    8. '   ' → logprob: -11.377411842346191
    9. '):' → logprob: -11.502411842346191
    10. '+A' → logprob: -11.627411842346191

Token 75: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18041130900382996
    2. ' A' → logprob: -1.8054113388061523
    3. 'r' → logprob: -8.180411338806152
    4. ')' → logprob: -8.555411338806152
    5. '<|end|>' → logprob: -9.305411338806152
    6. ',' → logprob: -10.805411338806152
    7. ' r' → logprob: -10.930411338806152
    8. ',A' → logprob: -11.305411338806152
    9. ' ' → logprob: -11.930411338806152
    10. '<|end|>' → logprob: -12.055411338806152

Token 76: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0007398230955004692
    2. '[r' → logprob: -7.625740051269531
    3. '[' → logprob: -8.500740051269531
    4. '[_' → logprob: -10.500740051269531
    5. 'r' → logprob: -11.875740051269531
    6. ')' → logprob: -12.000740051269531
    7. '[i' → logprob: -13.500740051269531
    8. '[a' → logprob: -13.875740051269531
    9. '   ' → logprob: -14.500740051269531
    10. '_a' → logprob: -14.625740051269531

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01718580350279808
    2. ',' → logprob: -4.392185688018799
    3. '+' → logprob: -5.642185688018799
    4. ')' → logprob: -7.642185688018799
    5. '):
' → logprob: -8.142186164855957
    6. ' +' → logprob: -8.642186164855957
    7. ' ):' → logprob: -9.392186164855957
    8. '   ' → logprob: -10.767186164855957
    9. '):
' → logprob: -11.642186164855957
    10. '+A' → logprob: -11.892186164855957

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0937743186950684
    2. '+' → logprob: -1.2187743186950684
    3. ' +' → logprob: -1.3437743186950684
    4. 'n' → logprob: -2.9687743186950684
    5. ' n' → logprob: -3.0937743186950684
    6. '+n' → logprob: -5.093774318695068
    7. ' +=' → logprob: -5.593774318695068
    8. '=' → logprob: -7.218774318695068
    9. '+=' → logprob: -7.968774318695068
    10. '+
' → logprob: -8.343774795532227

Token 79: ' return' (ID: 622)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.126997709274292
    2. 'n' → logprob: -2.126997709274292
    3. '   ' → logprob: -9.876997947692871
    4. '	n' → logprob: -11.626997947692871
    5. ' return' → logprob: -12.126997947692871
    6. '    ' → logprob: -13.876997947692871
    7. ' ' → logprob: -14.001997947692871
    8. ' +' → logprob: -14.876997947692871
    9. 'return' (adapté à ' return') → logprob: -14.876997947692871
    10. '+' → logprob: -15.251997947692871

Token 80: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602274775505066
    2. ' n' → logprob: -1.9102275371551514
    3. ' ' → logprob: -14.03522777557373
    4. '	n' → logprob: -14.03522777557373
    5. '   ' → logprob: -14.53522777557373
    6. ' ' → logprob: -14.66022777557373
    7. 'nown' → logprob: -15.16022777557373
    8. '(n' → logprob: -15.91022777557373
    9. '0' → logprob: -16.535226821899414
    10. '_n' → logprob: -16.660226821899414

Token 81: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.0005471954355016351
    2. 'ow' → logprob: -8.125547409057617
    3. 'w' → logprob: -8.625547409057617
    4. 'ws' → logprob: -10.625547409057617
    5. 'n' → logprob: -11.000547409057617
    6. 'ots' → logprob: -11.625547409057617
    7. 's' → logprob: -13.125547409057617
    8. '   ' → logprob: -13.250547409057617
    9. '0' → logprob: -13.375547409057617
    10. '+' → logprob: -13.375547409057617

Token 82: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0003472633252386004
    2. 'sum' → logprob: -8.500347137451172
    3. 'u' → logprob: -9.000347137451172
    4. 'ум' → logprob: -12.125347137451172
    5. 'ums' → logprob: -12.750347137451172
    6. 'm' → logprob: -12.750347137451172
    7. 'umsum' → logprob: -13.000347137451172
    8. 'up' → logprob: -13.250347137451172
    9. ' ' → logprob: -14.375347137451172
    10. 's' → logprob: -14.625347137451172

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142823457717896
    2. ' +' → logprob: -1.7014281749725342
    3. '+A' → logprob: -11.201428413391113
    4. ' plus' → logprob: -14.826428413391113
    5. ' ' → logprob: -15.201428413391113
    6. '＋' → logprob: -15.951428413391113
    7. '+a' → logprob: -16.451427459716797
    8. '+=' → logprob: -16.451427459716797
    9. '<|end|>' → logprob: -16.451427459716797
    10. ' ' → logprob: -16.576427459716797

Token 84: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3868759572505951
    2. ' A' → logprob: -1.1368759870529175
    3. ' ' → logprob: -12.386876106262207
    4. '	A' → logprob: -15.261876106262207
    5. '(A' → logprob: -15.511876106262207
    6. '   ' → logprob: -16.01187515258789
    7. '_A' → logprob: -16.51187515258789
    8. '  ' → logprob: -17.01187515258789
    9. ' ' → logprob: -17.01187515258789
    10. '<|end|>' → logprob: -17.88687515258789

Token 85: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -3.173704271830502e-06
    2. 'r' → logprob: -13.37500286102295
    3. '_' → logprob: -13.75000286102295
    4. ' _' → logprob: -15.37500286102295
    5. '```' → logprob: -16.250003814697266
    6. '   ' → logprob: -17.250003814697266
    7. ''_' → logprob: -17.875003814697266
    8. '_t' → logprob: -18.125003814697266
    9. '[_' → logprob: -18.250003814697266
    10. ' ' → logprob: -18.250003814697266

Token 86: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1447739154100418
    2. '<|end|>' → logprob: -2.0197739601135254
    3. '```' → logprob: -7.269773960113525
    4. '_' → logprob: -7.894773960113525
    5. ')' → logprob: -8.144773483276367
    6. '<|end|>' → logprob: -8.269773483276367
    7. ' def' → logprob: -8.644773483276367
    8. '*' → logprob: -9.394773483276367
    9. '(' → logprob: -10.019773483276367
    10. '\' → logprob: -10.269773483276367

Token 88: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.008336194790899754
    2. ' update' → logprob: -4.883336067199707
    3. 'def' → logprob: -7.883336067199707
    4. '_update' → logprob: -8.008336067199707
    5. ' def' → logprob: -11.883336067199707
    6. '.update' → logprob: -12.508336067199707
    7. '	update' → logprob: -13.383336067199707
    8. ':update' → logprob: -13.633336067199707
    9. 'updated' → logprob: -13.758336067199707
    10. '(update' → logprob: -13.883336067199707

Token 89: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.12870928645133972
    2. 'now' → logprob: -2.128709316253662
    3. '_n' → logprob: -6.878709316253662
    4. '_x' → logprob: -7.753709316253662
    5. '(now' → logprob: -9.003708839416504
    6. 'x' → logprob: -9.503708839416504
    7. '_' → logprob: -10.003708839416504
    8. ' now' → logprob: -10.503708839416504
    9. '[now' → logprob: -10.503708839416504
    10. 'Now' → logprob: -12.378708839416504

Token 90: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5332478142227046e-05
    2. 'sum' → logprob: -12.000015258789062
    3. 'xor' → logprob: -12.375015258789062
    4. 's' → logprob: -13.000015258789062
    5. '_x' → logprob: -13.250015258789062
    6. 'xs' → logprob: -14.875015258789062
    7. ' x' → logprob: -15.250015258789062
    8. '```' → logprob: -16.750015258789062
    9. '_sum' → logprob: -17.125015258789062
    10. '   ' → logprob: -17.250015258789062

Token 91: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -7.107425062713446e-06
    2. 's' → logprob: -12.125006675720215
    3. 'um' → logprob: -14.500006675720215
    4. '_sum' → logprob: -15.125006675720215
    5. 'xor' → logprob: -15.250006675720215
    6. 'summ' → logprob: -15.625006675720215
    7. '(sum' → logprob: -16.12500762939453
    8. 'x' → logprob: -16.25000762939453
    9. '```' → logprob: -16.62500762939453
    10. 'now' → logprob: -17.00000762939453

Token 92: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.009819366969168186
    2. '(' → logprob: -4.759819507598877
    3. '(n' → logprob: -7.509819507598877
    4. ',' → logprob: -7.509819507598877
    5. ' (' → logprob: -9.884819030761719
    6. '[now' → logprob: -10.134819030761719
    7. ' now' → logprob: -12.509819030761719
    8. '   ' → logprob: -13.259819030761719
    9. '(current' → logprob: -13.259819030761719
    10. '```' → logprob: -13.384819030761719

Token 93: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.5776860184123507e-06
    2. 's' → logprob: -13.62500286102295
    3. 'sum' → logprob: -14.50000286102295
    4. 'xor' → logprob: -14.50000286102295
    5. '_x' → logprob: -15.37500286102295
    6. ' x' → logprob: -16.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. 'xs' → logprob: -18.375001907348633
    9. ')x' → logprob: -19.500001907348633
    10. ' ' → logprob: -19.500001907348633

Token 94: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0017939432291314006
    2. 's' → logprob: -6.37679386138916
    3. 'now' → logprob: -11.12679386138916
    4. 'sup' → logprob: -11.25179386138916
    5. 'su' → logprob: -11.62679386138916
    6. 'summ' → logprob: -11.75179386138916
    7. '_sum' → logprob: -12.00179386138916
    8. 'xor' → logprob: -12.12679386138916
    9. 'x' → logprob: -12.25179386138916
    10. '```' → logprob: -12.25179386138916

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017807336989790201
    2. ' ,' → logprob: -6.3767805099487305
    3. ',A' → logprob: -9.62678050994873
    4. ')' → logprob: -12.25178050994873
    5. '+' → logprob: -13.25178050994873
    6. ',
' → logprob: -13.50178050994873
    7. ' +' → logprob: -14.25178050994873
    8. ',n' → logprob: -14.37678050994873
    9. '<|end|>' → logprob: -14.50178050994873
    10. ' ' → logprob: -14.62678050994873

Token 96: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.42888885736465454
    2. 'A' → logprob: -1.0538887977600098
    3. '<|end|>' → logprob: -9.428889274597168
    4. ')' → logprob: -9.553889274597168
    5. ' ' → logprob: -10.928889274597168
    6. '_A' → logprob: -12.678889274597168
    7. '    ' → logprob: -13.053889274597168
    8. '   ' → logprob: -13.053889274597168
    9. '<|end|>' → logprob: -13.303889274597168
    10. '	A' → logprob: -13.428889274597168

Token 97: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0003821716527454555
    2. '_' → logprob: -9.000382423400879
    3. 'r' → logprob: -9.125382423400879
    4. ' ^' → logprob: -9.500382423400879
    5. '^' → logprob: -10.125382423400879
    6. '_s' → logprob: -11.750382423400879
    7. 'xor' → logprob: -12.125382423400879
    8. ' ' → logprob: -12.500382423400879
    9. ')' → logprob: -12.500382423400879
    10. '_x' → logprob: -12.875382423400879

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020728735253214836
    2. '):
' → logprob: -3.895728826522827
    3. ')' → logprob: -9.145729064941406
    4. ' ):' → logprob: -10.145729064941406
    5. '   ' → logprob: -11.520729064941406
    6. '):
' → logprob: -11.770729064941406
    7. '^' → logprob: -12.020729064941406
    8. ':' → logprob: -12.145729064941406
    9. ' ^' → logprob: -12.395729064941406
    10. '):

' → logprob: -13.145729064941406

Token 99: '   ' (ID: 271)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.22900156676769257
    2. ' now' → logprob: -1.604001522064209
    3. ' ' → logprob: -6.604001522064209
    4. '   ' → logprob: -7.354001522064209
    5. ' ^
' → logprob: -7.729001522064209
    6. 'now' → logprob: -7.979001522064209
    7. ' xor' → logprob: -8.354001998901367
    8. ' ' → logprob: -8.479001998901367
    9. '^' → logprob: -8.854001998901367
    10. '[now' → logprob: -10.229001998901367

Token 100: ' return' (ID: 622)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.11965085566043854
    2. 'now' → logprob: -2.6196508407592773
    3. ' return' → logprob: -3.6196508407592773
    4. 'return' (adapté à ' return') → logprob: -4.494650840759277
    5. '   ' → logprob: -6.244650840759277
    6. ' ' → logprob: -11.369650840759277
    7. ' ^' → logprob: -11.494650840759277
    8. '^' → logprob: -12.119650840759277
    9. '[now' → logprob: -12.119650840759277
    10. '    
' → logprob: -13.869650840759277

Token 101: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.12693051993846893
    2. 'now' → logprob: -2.1269304752349854
    3. '(now' → logprob: -13.751930236816406
    4. ' ' → logprob: -14.251930236816406
    5. '[now' → logprob: -15.001930236816406
    6. '	now' → logprob: -15.376930236816406
    7. ' ' → logprob: -16.376930236816406
    8. '_now' → logprob: -17.626930236816406
    9. 'nown' → logprob: -17.751930236816406
    10. '   ' → logprob: -18.126930236816406

Token 102: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010318557906430215
    2. 'xor' → logprob: -9.250102996826172
    3. '^' → logprob: -12.625102996826172
    4. '_x' → logprob: -13.500102996826172
    5. ' x' → logprob: -14.875102996826172
    6. ' ^' → logprob: -15.312602996826172
    7. '```' → logprob: -15.375102996826172
    8. 's' → logprob: -15.750102996826172
    9. 'xs' → logprob: -15.812602996826172
    10. '_' → logprob: -16.062602996826172

Token 103: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.005409134551882744
    2. 's' → logprob: -5.255409240722656
    3. 'sup' → logprob: -9.755409240722656
    4. 'summ' → logprob: -9.880409240722656
    5. 'su' → logprob: -10.755409240722656
    6. 'xor' → logprob: -11.630409240722656
    7. 'x' → logprob: -11.630409240722656
    8. 'ss' → logprob: -11.880409240722656
    9. 'psum' → logprob: -12.255409240722656
    10. '^' → logprob: -13.255409240722656

Token 104: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.02801942639052868
    2. '^' → logprob: -3.653019428253174
    3. ' ' → logprob: -6.403019428253174
    4. ' ' → logprob: -10.403018951416016
    5. ' xor' → logprob: -11.403018951416016
    6. ' ^=' → logprob: -11.903018951416016
    7. ' XOR' → logprob: -13.153018951416016
    8. ' ^
' → logprob: -13.278018951416016
    9. ' |' → logprob: -13.653018951416016
    10. '  ' → logprob: -13.778018951416016

Token 105: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38687559962272644
    2. ' A' → logprob: -1.1368756294250488
    3. '_A' → logprob: -12.51187515258789
    4. ' ' → logprob: -14.38687515258789
    5. '	A' → logprob: -15.88687515258789
    6. '   ' → logprob: -15.88687515258789
    7. ' ' → logprob: -17.88687515258789
    8. '  ' → logprob: -18.13687515258789
    9. '(A' → logprob: -19.01187515258789
    10. '_' → logprob: -19.26187515258789

Token 106: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -5.300083648762666e-05
    2. '_' → logprob: -9.875053405761719
    3. 'r' → logprob: -13.750053405761719
    4. ' _' → logprob: -15.500053405761719
    5. '_s' → logprob: -16.50005340576172
    6. '_rr' → logprob: -17.00005340576172
    7. '_rs' → logprob: -17.62505340576172
    8. '_x' → logprob: -17.62505340576172
    9. '```' → logprob: -18.25005340576172
    10. ''_' → logprob: -19.00005340576172

Token 107: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024310708977282047
    2. '
' → logprob: -6.6274309158325195
    3. '

' → logprob: -8.00243091583252
    4. '```' → logprob: -8.25243091583252
    5. '<|end|>' → logprob: -8.75243091583252
    6. ':' → logprob: -9.50243091583252
    7. ' def' → logprob: -9.75243091583252
    8. '\' → logprob: -9.87743091583252
    9. ':def' → logprob: -10.00243091583252
    10. '(' → logprob: -10.25243091583252

Token 108: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011171156074851751
    2. '
' → logprob: -7.37611722946167
    3. '

' → logprob: -8.751116752624512
    4. 'd' → logprob: -8.876116752624512
    5. '\' → logprob: -9.626116752624512
    6. '```' → logprob: -10.626116752624512
    7. '(' → logprob: -10.751116752624512
    8. 'n' → logprob: -11.376116752624512
    9. '<|end|>' → logprob: -11.501116752624512
    10. ':' → logprob: -11.501116752624512

Token 109: ' revert' (ID: 34674)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4963946044445038
    2. ' solve' → logprob: -1.8713946342468262
    3. ' count' → logprob: -1.9963946342468262
    4. ' process' → logprob: -3.371394634246826
    5. ' check' → logprob: -3.371394634246826
    6. ' find' → logprob: -4.621394634246826
    7. ' dfs' → logprob: -5.621394634246826
    8. 'count' → logprob: -5.746394634246826
    9. 'solve' → logprob: -5.871394634246826
    10. ' max' → logprob: -5.996394634246826

Token 110: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.2680003345012665
    2. '_now' → logprob: -2.018000364303589
    3. '_' → logprob: -2.518000364303589
    4. '_update' → logprob: -3.893000364303589
    5. '_updates' → logprob: -7.64300012588501
    6. '_(' → logprob: -8.393000602722168
    7. '_s' → logprob: -9.143000602722168
    8. '_updated' → logprob: -10.018000602722168
    9. '_current' → logprob: -10.143000602722168
    10. '(_' → logprob: -10.393000602722168

Token 111: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.009940951131284237
    2. 'ow' → logprob: -4.634941101074219
    3. 'o' → logprob: -9.134941101074219
    4. '_' → logprob: -10.134941101074219
    5. 'own' → logprob: -11.759941101074219
    6. '```' → logprob: -12.259941101074219
    7. 'w' → logprob: -12.884941101074219
    8. 'n' → logprob: -13.259941101074219
    9. '_o' → logprob: -13.572441101074219
    10. '0' → logprob: -13.759941101074219

Token 112: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00010402000043541193
    2. 'u' → logprob: -9.500103950500488
    3. 'ум' → logprob: -11.125103950500488
    4. 'sum' → logprob: -12.125103950500488
    5. 'umsum' → logprob: -13.125103950500488
    6. 'un' → logprob: -13.500103950500488
    7. 'ume' → logprob: -14.125103950500488
    8. 'umption' → logprob: -14.250103950500488
    9. ' um' → logprob: -14.625103950500488
    10. 'umm' → logprob: -15.125103950500488

Token 113: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3133864998817444
    2. '(' → logprob: -1.3133864402770996
    3. ' (' → logprob: -9.188386917114258
    4. '(previous' → logprob: -11.688386917114258
    5. '(now' → logprob: -13.188386917114258
    6. '(
' → logprob: -13.188386917114258
    7. '(prev' → logprob: -13.438386917114258
    8. ',' → logprob: -13.563386917114258
    9. '(old' → logprob: -13.563386917114258
    10. '(

' → logprob: -13.938386917114258

Token 114: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.0008904983988031745
    2. 'ow' → logprob: -7.375890731811523
    3. 'o' → logprob: -8.250890731811523
    4. ' o' → logprob: -14.000890731811523
    5. ')' → logprob: -14.875890731811523
    6. '_' → logprob: -15.125890731811523
    7. '```' → logprob: -15.250890731811523
    8. '   ' → logprob: -15.625890731811523
    9. 'own' → logprob: -15.750890731811523
    10. '(' → logprob: -16.000890731811523

Token 115: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0009338518721051514
    2. 'sum' → logprob: -7.125933647155762
    3. 'u' → logprob: -10.000933647155762
    4. ',' → logprob: -10.875933647155762
    5. '   ' → logprob: -11.000933647155762
    6. 'up' → logprob: -11.250933647155762
    7. 'ум' → logprob: -12.125933647155762
    8. 'un' → logprob: -12.375933647155762
    9. ' ' → logprob: -12.375933647155762
    10. 'ums' → logprob: -13.250933647155762

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.217951886355877e-05
    2. ' ,' → logprob: -10.125061988830566
    3. ',n' → logprob: -10.750061988830566
    4. '   ' → logprob: -15.250061988830566
    5. '):' → logprob: -16.000062942504883
    6. ',
' → logprob: -16.125062942504883
    7. ' ' → logprob: -17.750062942504883
    8. '‌,' → logprob: -18.125062942504883
    9. ',r' → logprob: -18.500062942504883
    10. ',A' → logprob: -18.500062942504883

Token 117: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.07017239183187485
    2. 'A' → logprob: -2.6951723098754883
    3. ')' → logprob: -8.695172309875488
    4. ' ' → logprob: -10.070172309875488
    5. '   ' → logprob: -11.945172309875488
    6. '<|end|>' → logprob: -12.320172309875488
    7. '	A' → logprob: -12.445172309875488
    8. '  ' → logprob: -13.195172309875488
    9. ' )' → logprob: -13.570172309875488
    10. 'def' → logprob: -13.695172309875488

Token 118: '_l' (ID: 1478)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0007933051674626768
    2. '_s' → logprob: -7.25079345703125
    3. ',' → logprob: -11.37579345703125
    4. '_,' → logprob: -11.50079345703125
    5. '_' → logprob: -11.75079345703125
    6. 'r' → logprob: -11.75079345703125
    7. '_w' → logprob: -12.00079345703125
    8. ')' → logprob: -12.00079345703125
    9. ',_' → logprob: -12.00079345703125
    10. '_x' → logprob: -12.25079345703125

Token 119: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003266447747591883
    2. ' ,' → logprob: -8.500327110290527
    3. '):' → logprob: -9.500327110290527
    4. ',
' → logprob: -11.500327110290527
    5. '-' → logprob: -11.625327110290527
    6. '):
' → logprob: -12.375327110290527
    7. '   ' → logprob: -12.375327110290527
    8. ')' → logprob: -12.625327110290527
    9. ' -' → logprob: -13.000327110290527
    10. '_,' → logprob: -13.000327110290527

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014837081544101238
    2. 'n' → logprob: -4.514837265014648
    3. ' return' → logprob: -6.764837265014648
    4. '-' → logprob: -6.889837265014648
    5. ' n' → logprob: -7.014837265014648
    6. 'return' → logprob: -8.264837265014648
    7. ',' → logprob: -8.514837265014648
    8. ' -' → logprob: -9.139837265014648
    9. ' ' → logprob: -10.264837265014648
    10. '=' → logprob: -10.514837265014648

Token 121: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2157154530286789
    2. 'return' (adapté à ' return') → logprob: -2.2157154083251953
    3. ' return' → logprob: -2.4657154083251953
    4. ' ' → logprob: -12.590715408325195
    5. '	return' → logprob: -12.840715408325195
    6. '  ' → logprob: -13.090715408325195
    7. 'n' → logprob: -13.215715408325195
    8. '    ' → logprob: -14.215715408325195
    9. '-' → logprob: -15.090715408325195
    10. ' n' → logprob: -15.340715408325195

Token 122: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519327998161316
    2. ' n' → logprob: -1.5019328594207764
    3. '	n' → logprob: -13.626933097839355
    4. '   ' → logprob: -13.751933097839355
    5. ' ' → logprob: -14.501933097839355
    6. '  ' → logprob: -15.376933097839355
    7. '_n' → logprob: -15.501933097839355
    8. ' ' → logprob: -15.501933097839355
    9. '(n' → logprob: -15.751933097839355
    10. ' н' → logprob: -16.25193214416504

Token 123: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.0023186765611171722
    2. 'ow' → logprob: -6.127318859100342
    3. 'w' → logprob: -9.752318382263184
    4. 'o' → logprob: -10.502318382263184
    5. 'n' → logprob: -10.627318382263184
    6. 'ws' → logprob: -12.252318382263184
    7. 'l' → logprob: -12.502318382263184
    8. '0' → logprob: -12.877318382263184
    9. ' o' → logprob: -13.377318382263184
    10. 's' → logprob: -13.502318382263184

Token 124: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.5928495486150496e-05
    2. 'up' → logprob: -11.750016212463379
    3. 'sum' → logprob: -12.125016212463379
    4. 'u' → logprob: -13.625016212463379
    5. 'ум' → logprob: -14.000016212463379
    6. 'ump' → logprob: -15.375016212463379
    7. '   ' → logprob: -16.125015258789062
    8. ' um' → logprob: -16.750015258789062
    9. 'umm' → logprob: -17.375015258789062
    10. 'umption' → logprob: -17.500015258789062

Token 125: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25201091170310974
    2. '-' → logprob: -1.5020109415054321
    3. '+' → logprob: -10.2520112991333
    4. '<|end|>' → logprob: -10.8770112991333
    5. ' ' → logprob: -11.2520112991333
    6. ' +' → logprob: -12.0020112991333
    7. ' ' → logprob: -12.8770112991333
    8. ',' → logprob: -13.1270112991333
    9. '-n' → logprob: -13.7520112991333
    10. ')' → logprob: -14.5020112991333

Token 126: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0067156096920371056
    2. ' A' → logprob: -5.006715774536133
    3. '_A' → logprob: -16.381715774536133
    4. '	A' → logprob: -17.006715774536133
    5. ' ' → logprob: -17.381715774536133
    6. '   ' → logprob: -17.631715774536133
    7. '>A' → logprob: -20.131715774536133
    8. '  ' → logprob: -20.631715774536133
    9. '```' → logprob: -20.756715774536133
    10. ' ' → logprob: -21.256715774536133

Token 127: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -11.875007629394531
    3. '_r' → logprob: -15.125007629394531
    4. '_ls' → logprob: -18.00000762939453
    5. '[_' → logprob: -18.87500762939453
    6. 'l' → logprob: -19.00000762939453
    7. '_ll' → logprob: -19.12500762939453
    8. ' _' → logprob: -19.25000762939453
    9. '_a' → logprob: -19.25000762939453
    10. '_L' → logprob: -19.37500762939453

Token 128: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00027444821898825467
    2. '```' → logprob: -9.125274658203125
    3. ' def' → logprob: -9.375274658203125
    4. '<|end|>' → logprob: -9.500274658203125
    5. ')' → logprob: -12.625274658203125
    6. ',' → logprob: -14.000274658203125
    7. '
' → logprob: -14.000274658203125
    8. '``' → logprob: -15.750274658203125
    9. '   ' → logprob: -16.250274658203125
    10. '(' → logprob: -16.625274658203125

Token 130: ' revert' (ID: 34674)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00022213248303160071
    2. ' revert' → logprob: -8.750222206115723
    3. 'update' → logprob: -10.375222206115723
    4. 'def' → logprob: -10.375222206115723
    5. 'rev' → logprob: -15.750222206115723
    6. '	re' → logprob: -15.875222206115723
    7. ' update' → logprob: -16.125221252441406
    8. 'invert' → logprob: -16.375221252441406
    9. '   ' → logprob: -16.500221252441406
    10. 'return' → logprob: -16.750221252441406

Token 131: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -5.085517113911919e-05
    2. 'now' → logprob: -10.75005054473877
    3. '_n' → logprob: -10.87505054473877
    4. '_' → logprob: -11.75005054473877
    5. '_NOW' → logprob: -14.75005054473877
    6. '_current' → logprob: -15.37505054473877
    7. '[now' → logprob: -15.37505054473877
    8. '_not' → logprob: -15.37505054473877
    9. '_no' → logprob: -15.87505054473877
    10. '_here' → logprob: -15.87505054473877

Token 132: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3856492842023727e-06
    2. '_x' → logprob: -13.750000953674316
    3. 's' → logprob: -15.750000953674316
    4. 'xor' → logprob: -16.000001907348633
    5. ' x' → logprob: -16.750001907348633
    6. '_' → logprob: -17.375001907348633
    7. 'xs' → logprob: -17.750001907348633
    8. 'xes' → logprob: -18.750001907348633
    9. 'sum' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 133: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00013119110371917486
    2. 's' → logprob: -9.000131607055664
    3. 'summ' → logprob: -12.625131607055664
    4. 'su' → logprob: -12.750131607055664
    5. 'sup' → logprob: -14.875131607055664
    6. 'xor' → logprob: -15.000131607055664
    7. '_sum' → logprob: -15.250131607055664
    8. 'x' → logprob: -15.250131607055664
    9. '```' → logprob: -16.625131607055664
    10. '...' → logprob: -16.625131607055664

Token 134: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.00020854694594163448
    2. '(' → logprob: -8.500208854675293
    3. '[now' → logprob: -12.875208854675293
    4. '(n' → logprob: -14.250208854675293
    5. 'now' → logprob: -14.250208854675293
    6. ' (' → logprob: -14.500208854675293
    7. ' now' → logprob: -15.125208854675293
    8. '(no' → logprob: -15.500208854675293
    9. '	now' → logprob: -17.250207901000977
    10. '(not' → logprob: -17.250207901000977

Token 135: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02086370438337326
    2. 'sum' → logprob: -3.8958637714385986
    3. 's' → logprob: -8.64586353302002
    4. 'xor' → logprob: -9.02086353302002
    5. '^' → logprob: -11.27086353302002
    6. 'summ' → logprob: -13.14586353302002
    7. '_x' → logprob: -13.39586353302002
    8. ' x' → logprob: -13.77086353302002
    9. '^(' → logprob: -13.77086353302002
    10. 'xs' → logprob: -14.02086353302002

Token 136: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.4868770196917467e-05
    2. 's' → logprob: -10.750024795532227
    3. 'summ' → logprob: -13.750024795532227
    4. 'xor' → logprob: -14.250024795532227
    5. 'x' → logprob: -14.500024795532227
    6. 'sup' → logprob: -15.375024795532227
    7. 'now' → logprob: -16.000024795532227
    8. '_sum' → logprob: -16.000024795532227
    9. 'su' → logprob: -16.125024795532227
    10. ' sum' → logprob: -16.250024795532227

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005099030095152557
    2. ' ,' → logprob: -7.625509738922119
    3. ' now' → logprob: -11.625510215759277
    4. ',
' → logprob: -12.500510215759277
    5. 'now' → logprob: -12.750510215759277
    6. ' ^' → logprob: -13.125510215759277
    7. ')' → logprob: -13.750510215759277
    8. '[now' → logprob: -14.000510215759277
    9. '(now' → logprob: -14.125510215759277
    10. ',n' → logprob: -14.500510215759277

Token 138: ' A' (ID: 355)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.6936588883399963
    2. 'now' → logprob: -0.6936588883399963
    3. 'A' → logprob: -8.318658828735352
    4. ' A' → logprob: -8.443658828735352
    5. 'Now' → logprob: -10.943658828735352
    6. ' ' → logprob: -11.318658828735352
    7. '[now' → logprob: -11.693658828735352
    8. ')' → logprob: -12.068658828735352
    9. '(now' → logprob: -13.318658828735352
    10. 'nown' → logprob: -13.443658828735352

Token 139: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.7120533811976202e-05
    2. '_' → logprob: -11.375017166137695
    3. 'l' → logprob: -12.125017166137695
    4. '_r' → logprob: -16.750017166137695
    5. ')' → logprob: -16.875017166137695
    6. '_x' → logprob: -17.000017166137695
    7. 'xor' → logprob: -17.125017166137695
    8. '[' → logprob: -18.000017166137695
    9. '_)' → logprob: -18.625017166137695
    10. '[l' → logprob: -18.625017166137695

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25617876648902893
    2. '):
' → logprob: -2.006178855895996
    3. ' ^' → logprob: -2.506178855895996
    4. ')' → logprob: -5.131178855895996
    5. '^' → logprob: -6.006178855895996
    6. ' ):' → logprob: -7.881178855895996
    7. ',' → logprob: -7.881178855895996
    8. '   ' → logprob: -8.006178855895996
    9. '):
' → logprob: -9.131178855895996
    10. ' ' → logprob: -9.756178855895996

Token 141: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8732390999794006
    2. '   ' → logprob: -1.1232390403747559
    3. 'return' → logprob: -1.3732390403747559
    4. ' now' → logprob: -5.623239040374756
    5. 'now' → logprob: -8.373239517211914
    6. ' ' → logprob: -10.498239517211914
    7. '[now' → logprob: -11.748239517211914
    8. '  ' → logprob: -12.373239517211914
    9. '(now' → logprob: -12.623239517211914
    10. '	return' → logprob: -12.623239517211914

Token 142: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.22974728047847748
    2. 'now' → logprob: -2.4797472953796387
    3. ' now' → logprob: -2.7297472953796387
    4. ' return' → logprob: -2.9797472953796387
    5. '   ' → logprob: -5.229747295379639
    6. '[now' → logprob: -10.22974681854248
    7. ' ' → logprob: -10.35474681854248
    8. ')' → logprob: -11.10474681854248
    9. '(now' → logprob: -11.85474681854248
    10. ')return' → logprob: -12.97974681854248

Token 143: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.038044244050979614
    2. ' now' → logprob: -3.2880442142486572
    3. '[now' → logprob: -13.163043975830078
    4. '(now' → logprob: -14.288043975830078
    5. '	now' → logprob: -16.038043975830078
    6. 'nown' → logprob: -16.538043975830078
    7. '_now' → logprob: -17.163043975830078
    8. ' ' → logprob: -17.413043975830078
    9. '.now' → logprob: -18.663043975830078
    10. 'Now' → logprob: -19.163043975830078

Token 144: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.2729995988775045e-06
    2. 'xor' → logprob: -12.375006675720215
    3. '^' → logprob: -13.375006675720215
    4. 'now' → logprob: -16.0000057220459
    5. '_now' → logprob: -16.2500057220459
    6. ' ^' → logprob: -16.7500057220459
    7. '_' → logprob: -17.2500057220459
    8. 's' → logprob: -17.3750057220459
    9. '```' → logprob: -17.8750057220459
    10. 'xx' → logprob: -18.1250057220459

Token 145: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0017220689915120602
    2. 's' → logprob: -6.5017218589782715
    3. 'sup' → logprob: -10.00172233581543
    4. 'summ' → logprob: -10.12672233581543
    5. '^' → logprob: -10.25172233581543
    6. 'xor' → logprob: -10.50172233581543
    7. 'now' → logprob: -10.75172233581543
    8. 'su' → logprob: -11.00172233581543
    9. 'ss' → logprob: -11.75172233581543
    10. 'x' → logprob: -12.37672233581543

Token 146: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.020753955468535423
    2. '^' → logprob: -3.895753860473633
    3. '<|end|>' → logprob: -9.020753860473633
    4. ' ' → logprob: -9.770753860473633
    5. ' ^
' → logprob: -11.520753860473633
    6. '_' → logprob: -11.645753860473633
    7. '_^' → logprob: -12.520753860473633
    8. ' ' → logprob: -12.520753860473633
    9. '^(' → logprob: -13.020753860473633
    10. ' ^=' → logprob: -13.770753860473633

Token 147: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16022524237632751
    2. ' A' → logprob: -1.91022527217865
    3. ' ' → logprob: -14.285224914550781
    4. '	A' → logprob: -15.410224914550781
    5. '_A' → logprob: -15.660224914550781
    6. '   ' → logprob: -16.53522491455078
    7. ' ' → logprob: -16.91022491455078
    8. '  ' → logprob: -17.66022491455078
    9. '```' → logprob: -17.91022491455078
    10. '<|end|>' → logprob: -18.03522491455078

Token 148: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.5048530030981055e-06
    2. '_r' → logprob: -13.875001907348633
    3. '_' → logprob: -14.625001907348633
    4. 'l' → logprob: -16.750001907348633
    5. '[' → logprob: -18.750001907348633
    6. ' _' → logprob: -18.875001907348633
    7. '```' → logprob: -18.875001907348633
    8. '_ls' → logprob: -19.000001907348633
    9. ''_' → logprob: -19.250001907348633
    10. '_ll' → logprob: -19.500001907348633

Token 149: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012472548987716436
    2. '<|end|>' → logprob: -6.876247406005859
    3. ')' → logprob: -10.25124740600586
    4. '\' → logprob: -10.50124740600586
    5. '(' → logprob: -10.50124740600586
    6. '
' → logprob: -10.62624740600586
    7. ' def' → logprob: -10.75124740600586
    8. '#' → logprob: -11.12624740600586
    9. '\n' → logprob: -11.25124740600586
    10. '_' → logprob: -11.37624740600586

Token 150: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04303698241710663
    2. 'd' → logprob: -3.168036937713623
    3. 'de' → logprob: -11.043037414550781
    4. '\' → logprob: -12.043037414550781
    5. 'n' → logprob: -12.043037414550781
    6. '#' → logprob: -12.918037414550781
    7. ' def' → logprob: -13.418037414550781
    8. '_' → logprob: -14.418037414550781
    9. 'from' → logprob: -14.543037414550781
    10. '```' → logprob: -14.793037414550781

Token 151: ' increase' (ID: 7064)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.1184792518615723
    2. ' find' → logprob: -1.3684792518615723
    3. ' solve' → logprob: -2.1184792518615723
    4. ' count' → logprob: -2.4934792518615723
    5. ' sliding' → logprob: -2.8684792518615723
    6. ' two' → logprob: -3.1184792518615723
    7. ' process' → logprob: -3.7434792518615723
    8. ' max' → logprob: -4.118479251861572
    9. ' longest' → logprob: -4.493479251861572
    10. ' dfs' → logprob: -4.618479251861572

Token 152: '_r' (ID: 3442)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.8898071646690369
    2. '_r' → logprob: -1.5148072242736816
    3. '_left' → logprob: -2.8898072242736816
    4. '_count' → logprob: -3.1398072242736816
    5. '_window' → logprob: -3.2648072242736816
    6. '_' → logprob: -3.7648072242736816
    7. '_length' → logprob: -4.014807224273682
    8. '()' → logprob: -4.139807224273682
    9. '_i' → logprob: -4.139807224273682
    10. '_counter' → logprob: -4.264807224273682

Token 153: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0801500752568245
    2. '(' → logprob: -2.9551501274108887
    3. '():' → logprob: -3.9551501274108887
    4. '()' → logprob: -5.705150127410889
    5. '(_' → logprob: -7.455150127410889
    6. ' (' → logprob: -7.580150127410889
    7. '(n' → logprob: -8.20514965057373
    8. '_' → logprob: -8.83014965057373
    9. '_r' → logprob: -8.83014965057373
    10. '(R' → logprob: -8.95514965057373

Token 154: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7130615711212158
    2. '):' → logprob: -0.7130615711212158
    3. '):
' → logprob: -4.213061332702637
    4. ',r' → logprob: -5.713061332702637
    5. ')' → logprob: -7.463061332702637
    6. '+' → logprob: -7.838061332702637
    7. '   ' → logprob: -8.713061332702637
    8. '(r' → logprob: -9.338061332702637
    9. ' ,' → logprob: -9.463061332702637
    10. '+r' → logprob: -9.713061332702637

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007376811117865145
    2. ' return' → logprob: -7.50073766708374
    3. 'return' → logprob: -9.125738143920898
    4. ' r' → logprob: -10.125738143920898
    5. 'r' → logprob: -10.250738143920898
    6. '	return' → logprob: -14.750738143920898
    7. '    ' → logprob: -16.7507381439209
    8. '   ' → logprob: -17.3757381439209
    9. '	r' → logprob: -18.0007381439209
    10. '       ' → logprob: -18.0007381439209

Token 156: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9016814231872559
    2. 'r' → logprob: -1.1516814231872559
    3. '   ' → logprob: -1.4016814231872559
    4. ' return' → logprob: -3.526681423187256
    5. ' r' → logprob: -6.026681423187256
    6. ' ' → logprob: -12.901681900024414
    7. '	return' → logprob: -13.151681900024414
    8. '  ' → logprob: -13.151681900024414
    9. '    ' → logprob: -13.526681900024414
    10. '    
' → logprob: -13.526681900024414

Token 157: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007100477814674377
    2. ' r' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.000709533691406
    4. '_r' → logprob: -19.000709533691406
    5. '	r' → logprob: -20.750709533691406
    6. '(r' → logprob: -21.750709533691406
    7. ' ' → logprob: -22.500709533691406
    8. ' ' → logprob: -23.375709533691406
    9. '$r' → logprob: -23.750709533691406
    10. '  ' → logprob: -24.375709533691406

Token 158: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010726138018071651
    2. '+r' → logprob: -5.260725975036621
    3. ' +' → logprob: -5.385725975036621
    4. 'r' → logprob: -7.135725975036621
    5. ' r' → logprob: -9.510725975036621
    6. '1' → logprob: -11.260725975036621
    7. '+
' → logprob: -12.135725975036621
    8. '   ' → logprob: -13.010725975036621
    9. ' ' → logprob: -13.260725975036621
    10. '<|end|>' → logprob: -13.635725975036621

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.125051498413086
    4. '```' → logprob: -19.750051498413086
    5. '  ' → logprob: -20.875051498413086
    6. 'def' → logprob: -21.500051498413086
    7. '<|end|>' → logprob: -21.625051498413086
    8. '0' → logprob: -22.875051498413086
    9. '
' → logprob: -23.000051498413086
    10. '=' → logprob: -23.125051498413086

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. 'def' → logprob: -18.875
    4. '```' → logprob: -19.125
    5. '   ' → logprob: -19.625
    6. '<|end|>' → logprob: -21.25
    7. '
' → logprob: -22.0
    8. '  ' → logprob: -22.375
    9. '[' → logprob: -22.875
    10. '-' → logprob: -23.375

Token 161: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47735893726348877
    2. '<|end|>' → logprob: -0.9773589372634888
    3. '<|end|>' → logprob: -6.727358818054199
    4. '```' → logprob: -7.102358818054199
    5. '
' → logprob: -8.2273588180542
    6. ')' → logprob: -8.6023588180542
    7. '\n' → logprob: -8.7273588180542
    8. ' def' → logprob: -8.7273588180542
    9. '#' → logprob: -9.6023588180542
    10. '\' → logprob: -10.1023588180542

Token 162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.4034345187828876e-05
    2. ' def' → logprob: -11.25002384185791
    3. '<|end|>' → logprob: -12.37502384185791
    4. 'r' → logprob: -13.12502384185791
    5. '```' → logprob: -13.87502384185791
    6. '.' → logprob: -14.25002384185791
    7. ',' → logprob: -14.75002384185791
    8. 'ndef' → logprob: -14.87502384185791
    9. ' ' → logprob: -14.87502384185791
    10. '   ' → logprob: -14.87502384185791

Token 163: ' compute' (ID: 23864)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.01655075140297413
    2. 'de' → logprob: -4.516550540924072
    3. ' increase' → logprob: -5.766550540924072
    4. 'main' → logprob: -6.766550540924072
    5. 'initialize' → logprob: -7.516550540924072
    6. 'increment' → logprob: -8.89155101776123
    7. 'def' → logprob: -9.01655101776123
    8. 'get' → logprob: -9.26655101776123
    9. 'move' → logprob: -10.14155101776123
    10. 'update' → logprob: -10.26655101776123

Token 164: '_increment' (ID: 132160)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.5962756872177124
    2. '_' → logprob: -1.4712756872177124
    3. '_sub' → logprob: -2.596275806427002
    4. '_sum' → logprob: -3.221275806427002
    5. '_result' → logprob: -3.721275806427002
    6. '_prefix' → logprob: -3.846275806427002
    7. '_answer' → logprob: -4.596275806427002
    8. '_dp' → logprob: -4.596275806427002
    9. '_l' → logprob: -4.721275806427002
    10. '_total' → logprob: -5.346275806427002

Token 165: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.8832777738571167
    2. '(' → logprob: -1.2582777738571167
    3. '():' → logprob: -1.7582777738571167
    4. 'al' → logprob: -3.1332778930664062
    5. '()' → logprob: -3.3832778930664062
    6. '_r' → logprob: -3.5082778930664062
    7. '(n' → logprob: -5.633277893066406
    8. '(s' → logprob: -5.758277893066406
    9. '(
' → logprob: -6.008277893066406
    10. 's' → logprob: -6.383277893066406

Token 166: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07362310588359833
    2. ',' → logprob: -2.9486231803894043
    3. '):
' → logprob: -4.448623180389404
    4. ')' → logprob: -5.823623180389404
    5. '+' → logprob: -5.948623180389404
    6. ' +' → logprob: -7.448623180389404
    7. ' ):' → logprob: -8.073622703552246
    8. ',
' → logprob: -9.198622703552246
    9. '   ' → logprob: -9.198622703552246
    10. ' ,' → logprob: -10.198622703552246

Token 167: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4029278755187988
    2. 'l' → logprob: -1.5279278755187988
    3. ' l' → logprob: -1.7779278755187988
    4. ' n' → logprob: -1.7779278755187988
    5. 'A' → logprob: -2.527927875518799
    6. ' A' → logprob: -2.777927875518799
    7. ' now' → logprob: -3.652927875518799
    8. 'now' → logprob: -4.152927875518799
    9. 'L' → logprob: -5.652927875518799
    10. ' L' → logprob: -6.277927875518799

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18533414602279663
    2. ',' → logprob: -2.1853342056274414
    3. '):
' → logprob: -2.9353342056274414
    4. ')' → logprob: -6.185334205627441
    5. '+' → logprob: -7.310334205627441
    6. ' ):' → logprob: -8.685334205627441
    7. '   ' → logprob: -8.810334205627441
    8. ',
' → logprob: -8.935334205627441
    9. ' ' → logprob: -9.310334205627441
    10. ' +' → logprob: -9.435334205627441

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014214987866580486
    2. ' return' → logprob: -4.639214992523193
    3. 'return' → logprob: -5.764214992523193
    4. 'r' → logprob: -7.764214992523193
    5. '    ' → logprob: -7.764214992523193
    6. ' r' → logprob: -8.014214515686035
    7. '    
' → logprob: -10.264214515686035
    8. 'def' → logprob: -10.889214515686035
    9. '       ' → logprob: -11.014214515686035
    10. '	return' → logprob: -11.514214515686035

Token 170: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.30182841420173645
    2. '   ' → logprob: -1.551828384399414
    3. ' return' → logprob: -3.051828384399414
    4. 'r' → logprob: -6.676828384399414
    5. '    
' → logprob: -9.676828384399414
    6. ' r' → logprob: -10.426828384399414
    7. '
' → logprob: -10.801828384399414
    8. '	return' → logprob: -11.426828384399414
    9. '    ' → logprob: -11.801828384399414
    10. '{return' → logprob: -13.301828384399414

Token 171: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004630315117537975
    2. ' r' → logprob: -5.379630088806152
    3. '   ' → logprob: -12.379630088806152
    4. ' ' → logprob: -13.129630088806152
    5. '(r' → logprob: -13.504630088806152
    6. 'max' → logprob: -14.129630088806152
    7. '
' → logprob: -14.879630088806152
    8. '1' → logprob: -15.004630088806152
    9. 'abs' → logprob: -15.129630088806152
    10. '  ' → logprob: -15.879630088806152

Token 172: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10045100748538971
    2. '-' → logprob: -2.3504509925842285
    3. '+' → logprob: -9.225451469421387
    4. ' +' → logprob: -9.850451469421387
    5. ' ' → logprob: -9.850451469421387
    6. 'def' → logprob: -11.475451469421387
    7. '<|end|>' → logprob: -11.725451469421387
    8. ')' → logprob: -11.975451469421387
    9. '   ' → logprob: -12.350451469421387
    10. ',' → logprob: -13.350451469421387

Token 173: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.029756737872958183
    2. ' l' → logprob: -3.529756784439087
    3. '1' → logprob: -12.404756546020508
    4. '	l' → logprob: -14.154756546020508
    5. '(l' → logprob: -14.404756546020508
    6. '   ' → logprob: -14.779756546020508
    7. ' ' → logprob: -15.404756546020508
    8. ' (' → logprob: -15.654756546020508
    9. '(' → logprob: -15.654756546020508
    10. '<|end|>' → logprob: -17.404756546020508

Token 174: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07142693549394608
    2. '<|end|>' → logprob: -2.6964268684387207
    3. '
' → logprob: -7.446426868438721
    4. '\n' → logprob: -8.071427345275879
    5. '

' → logprob: -8.446427345275879
    6. '<|end|>' → logprob: -8.946427345275879
    7. '```' → logprob: -9.446427345275879
    8. ' def' → logprob: -9.821427345275879
    9. '\' → logprob: -10.821427345275879
    10. '[' → logprob: -11.071427345275879

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2297813594341278
    2. 'd' → logprob: -1.6047813892364502
    3. '\' → logprob: -5.729781150817871
    4. '<|end|>' → logprob: -8.229781150817871
    5. '```' → logprob: -8.229781150817871
    6. '#' → logprob: -9.104781150817871
    7. ')' → logprob: -9.229781150817871
    8. 'de' → logprob: -9.354781150817871
    9. '(' → logprob: -9.604781150817871
    10. '_' → logprob: -9.729781150817871

Token 176: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6571685671806335
    2. 'main' → logprob: -0.9071685671806335
    3. 'def' → logprob: -3.0321686267852783
    4. ' def' → logprob: -4.907168388366699
    5. 'process' → logprob: -5.407168388366699
    6. 'solve' → logprob: -5.407168388366699
    7. ' find' → logprob: -5.907168388366699
    8. ' process' → logprob: -6.282168388366699
    9. ' solve' → logprob: -6.282168388366699
    10. ' sliding' → logprob: -6.782168388366699

Token 177: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.625018119812012
    3. '()' → logprob: -12.000018119812012
    4. ' ():' → logprob: -13.625018119812012
    5. '():
' → logprob: -13.750018119812012
    6. '_' → logprob: -14.625018119812012
    7. '(:' → logprob: -16.000019073486328
    8. 'def' → logprob: -17.000019073486328
    9. ':' → logprob: -17.125019073486328
    10. '(":' → logprob: -17.625019073486328

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07198449969291687
    2. ' n' → logprob: -3.1969845294952393
    3. 'n' → logprob: -3.5719845294952393
    4. '(n' → logprob: -8.32198429107666
    5. ',' → logprob: -9.44698429107666
    6. '	n' → logprob: -10.07198429107666
    7. ',n' → logprob: -10.57198429107666
    8. '   ' → logprob: -11.19698429107666
    9. ' (' → logprob: -11.57198429107666
    10. '    
' → logprob: -11.94698429107666

Token 179: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.09451936930418015
    2. ' n' → logprob: -2.4695193767547607
    3. 'N' → logprob: -5.969519138336182
    4. '   ' → logprob: -6.094519138336182
    5. 'l' → logprob: -8.21951961517334
    6. ' N' → logprob: -8.34451961517334
    7. 'import' → logprob: -9.84451961517334
    8. ' l' → logprob: -10.59451961517334
    9. 't' → logprob: -10.71951961517334
    10. ' ' → logprob: -10.71951961517334

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7276487350463867
    2. ' =' → logprob: -0.7276487350463867
    3. ' ,' → logprob: -3.4776487350463867
    4. '=' → logprob: -6.102648735046387
    5. ' ' → logprob: -8.352648735046387
    6. '    ' → logprob: -8.602648735046387
    7. '   ' → logprob: -9.352648735046387
    8. ')' → logprob: -9.977648735046387
    9. '<|end|>' → logprob: -10.102648735046387
    10. '  ' → logprob: -10.352648735046387

Token 181: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.22722996771335602
    2. ' A' → logprob: -1.6022299528121948
    3. '<|end|>' → logprob: -6.352230072021484
    4. 'a' → logprob: -11.227230072021484
    5. ' ' → logprob: -11.477230072021484
    6. 'arr' → logprob: -11.727230072021484
    7. 'n' → logprob: -11.852230072021484
    8. 'data' → logprob: -12.102230072021484
    9. ')' → logprob: -12.852230072021484
    10. ' a' → logprob: -13.227230072021484

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07982950657606125
    2. '=' → logprob: -2.579829454421997
    3. '[' → logprob: -7.954829692840576
    4. ')' → logprob: -8.454829216003418
    5. '<|end|>' → logprob: -8.829829216003418
    6. '   ' → logprob: -9.454829216003418
    7. ',' → logprob: -10.329829216003418
    8. ']' → logprob: -10.829829216003418
    9. '_' → logprob: -10.954829216003418
    10. ' ' → logprob: -11.329829216003418

Token 183: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0788901224732399
    2. 'read' → logprob: -2.578890085220337
    3. '   ' → logprob: -16.078889846801758
    4. ' ' → logprob: -16.328889846801758
    5. '	read' → logprob: -16.578889846801758
    6. '  ' → logprob: -18.203889846801758
    7. '(read' → logprob: -19.328889846801758
    8. '    ' → logprob: -19.828889846801758
    9. ' map' → logprob: -19.953889846801758
    10. ' list' → logprob: -20.578889846801758

Token 184: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.004128030501306057
    2. '_' → logprob: -5.5041279792785645
    3. '(' → logprob: -10.504128456115723
    4. '_in' → logprob: -12.379128456115723
    5. '_inputs' → logprob: -12.504128456115723
    6. '_line' → logprob: -12.629128456115723
    7. '_output' → logprob: -13.129128456115723
    8. 'input' → logprob: -13.754128456115723
    9. '(input' → logprob: -14.004128456115723
    10. ' _' → logprob: -14.004128456115723

Token 185: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011331788846291602
    2. '()
' → logprob: -9.125113487243652
    3. '()

' → logprob: -13.250113487243652
    4. '()
' → logprob: -14.250113487243652
    5. '()\' → logprob: -14.250113487243652
    6. '()`' → logprob: -14.875113487243652
    7. ' ()' → logprob: -15.125113487243652
    8. '(' → logprob: -15.250113487243652
    9. '()"' → logprob: -16.250112533569336
    10. '()<' → logprob: -16.375112533569336

Token 186: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15591001510620117
    2. '   ' → logprob: -2.030910015106201
    3. '    
' → logprob: -5.405910015106201
    4. 'r' → logprob: -5.655910015106201
    5. ' r' → logprob: -6.155910015106201
    6. 'n' → logprob: -6.780910015106201
    7. ' 
' → logprob: -7.655910015106201
    8. '    ' → logprob: -7.905910015106201
    9. ' l' → logprob: -8.65591049194336
    10. '  
' → logprob: -8.65591049194336

Token 187: ' ans' (ID: 3345)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02184123732149601
    2. ' l' → logprob: -4.146841049194336
    3. 'ans' (adapté à ' ans') → logprob: -6.521841049194336
    4. 'n' → logprob: -7.146841049194336
    5. 'r' → logprob: -7.271841049194336
    6. '   ' → logprob: -7.396841049194336
    7. 'result' → logprob: -7.896841049194336
    8. 'res' → logprob: -8.021841049194336
    9. 'answer' → logprob: -8.271841049194336
    10. 'dp' → logprob: -8.646841049194336

Token 188: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011977623216807842
    2. '=' → logprob: -4.636977672576904
    3. ',' → logprob: -6.136977672576904
    4. ' ' → logprob: -10.261977195739746
    5. ' ,' → logprob: -11.136977195739746
    6. '   ' → logprob: -12.636977195739746
    7. '_' → logprob: -13.011977195739746
    8. '  ' → logprob: -14.261977195739746
    9. 's' → logprob: -14.386977195739746
    10. ')' → logprob: -15.761977195739746

Token 189: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.47694292664527893
    2. 'r' → logprob: -1.6019428968429565
    3. ' l' → logprob: -1.9769428968429565
    4. ' r' → logprob: -3.351943016052246
    5. 'n' → logprob: -6.226943016052246
    6. 'ans' → logprob: -7.226943016052246
    7. ' n' → logprob: -7.476943016052246
    8. ' ' → logprob: -9.039443016052246
    9. 'res' → logprob: -9.289443016052246
    10. 'left' → logprob: -9.414443016052246

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10587369650602341
    2. ' =' → logprob: -2.4808735847473145
    3. '=' → logprob: -4.2308735847473145
    4. ' ,' → logprob: -6.1058735847473145
    5. ' ' → logprob: -11.855874061584473
    6. ',r' → logprob: -12.105874061584473
    7. '   ' → logprob: -13.355874061584473
    8. ',n' → logprob: -13.855874061584473
    9. '```' → logprob: -13.980874061584473
    10. ',l' → logprob: -14.105874061584473

Token 191: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008616461418569088
    2. ' r' → logprob: -4.7586164474487305
    3. 'n' → logprob: -14.63361644744873
    4. ' ' → logprob: -15.13361644744873
    5. '
' → logprob: -15.75861644744873
    6. 'def' → logprob: -15.75861644744873
    7. '_r' → logprob: -15.75861644744873
    8. '=' → logprob: -15.75861644744873
    9. '   ' → logprob: -15.88361644744873
    10. '```' → logprob: -16.008617401123047

Token 192: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08687815070152283
    2. '=' → logprob: -2.5868780612945557
    3. ',' → logprob: -4.836878299713135
    4. ' ,' → logprob: -11.586877822875977
    5. '   ' → logprob: -11.711877822875977
    6. ' ' → logprob: -12.086877822875977
    7. '  ' → logprob: -14.461877822875977
    8. '```' → logprob: -14.586877822875977
    9. '    ' → logprob: -14.836877822875977
    10. '=int' → logprob: -16.961877822875977

Token 193: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4780353307723999
    2. ' n' → logprob: -0.9780353307723999
    3. '0' → logprob: -6.7280354499816895
    4. ' =' → logprob: -7.1030354499816895
    5. ' ' → logprob: -7.2280354499816895
    6. '=' → logprob: -8.103034973144531
    7. 'now' → logprob: -8.228034973144531
    8. ' now' → logprob: -8.853034973144531
    9. '_' → logprob: -8.978034973144531
    10. '_n' → logprob: -9.103034973144531

Token 194: 'ows' (ID: 1513)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6178331971168518
    2. 'ow' → logprob: -1.117833137512207
    3. 'ows' → logprob: -3.117833137512207
    4. ' =' → logprob: -3.242833137512207
    5. 'ext' → logprob: -3.992833137512207
    6. 'w' → logprob: -4.867833137512207
    7. ',' → logprob: -5.117833137512207
    8. 'o' → logprob: -5.367833137512207
    9. 'e' → logprob: -5.617833137512207
    10. 'ex' → logprob: -6.117833137512207

Token 195: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -9.253090865968261e-06
    2. 'u' → logprob: -12.625009536743164
    3. 'sum' → logprob: -13.125009536743164
    4. 'ум' → logprob: -13.250009536743164
    5. '   ' → logprob: -14.750009536743164
    6. ' um' → logprob: -15.000009536743164
    7. '=' → logprob: -15.000009536743164
    8. 'umsum' → logprob: -15.500009536743164
    9. '_sum' → logprob: -15.625009536743164
    10. ' =' → logprob: -16.125009536743164

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12783950567245483
    2. ' =' → logprob: -2.1278395652770996
    3. ',' → logprob: -7.0028395652771
    4. ' ,' → logprob: -14.002839088439941
    5. ' ' → logprob: -14.252839088439941
    6. '=int' → logprob: -16.877840042114258
    7. '```' → logprob: -17.377840042114258
    8. '   ' → logprob: -17.752840042114258
    9. ')=' → logprob: -18.127840042114258
    10. '＝' → logprob: -18.127840042114258

Token 197: ' initialize' (ID: 18400)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17993374168872833
    2. ' ' → logprob: -1.804933786392212
    3. '   ' → logprob: -9.179933547973633
    4. ' =' → logprob: -10.179933547973633
    5. '=' → logprob: -10.804933547973633
    6. ' ans' → logprob: -11.679933547973633
    7. ',' → logprob: -11.804933547973633
    8. 'ans' → logprob: -12.304933547973633
    9. '  ' → logprob: -13.242433547973633
    10. '    ' → logprob: -14.117433547973633

Token 198: '_variables' (ID: 69364)
  Prédit: '_variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_variables' → logprob: -8.93579563125968e-05
    2. 'variables' → logprob: -9.625089645385742
    3. '_vari' → logprob: -12.125089645385742
    4. '_ans' → logprob: -12.250089645385742
    5. '_' → logprob: -12.375089645385742
    6. '_variable' → logprob: -13.375089645385742
    7. '_vars' → logprob: -13.625089645385742
    8. '_values' → logprob: -13.750089645385742
    9. 'Variables' → logprob: -13.875089645385742
    10. '_,' → logprob: -14.375089645385742

Token 199: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5026256442070007
    2. ',' → logprob: -1.0026257038116455
    3. '    
' → logprob: -4.252625465393066
    4. '
' → logprob: -4.752625465393066
    5. '<|end|>' → logprob: -6.502625465393066
    6. ',n' → logprob: -6.627625465393066
    7. ',
' → logprob: -6.627625465393066
    8. ' ,' → logprob: -7.377625465393066
    9. '    ' → logprob: -8.752625465393066
    10. '   
' → logprob: -10.002625465393066

Token 200: '   ' (ID: 271)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.5941753387451172
    2. '   ' → logprob: -0.8441753387451172
    3. 'now' → logprob: -4.344175338745117
    4. '	now' → logprob: -5.594175338745117
    5. '    ' → logprob: -7.969175338745117
    6. '
' → logprob: -8.719175338745117
    7. '[now' → logprob: -8.844175338745117
    8. ' n' → logprob: -8.844175338745117
    9. ',' → logprob: -8.969175338745117
    10. ' while' → logprob: -9.594175338745117

Token 201: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.3564777672290802
    2. ' now' → logprob: -1.4814777374267578
    3. '   ' → logprob: -2.731477737426758
    4. 'while' → logprob: -6.106477737426758
    5. ' while' → logprob: -6.231477737426758
    6. 'n' → logprob: -6.481477737426758
    7. ' n' → logprob: -7.481477737426758
    8. 'for' → logprob: -8.231477737426758
    9. ' for' → logprob: -8.231477737426758
    10. '	now' → logprob: -9.231477737426758

Token 202: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4736459888808895e-05
    2. 'xor' → logprob: -12.500014305114746
    3. '_x' → logprob: -12.750014305114746
    4. '   ' → logprob: -13.000014305114746
    5. 'xs' → logprob: -13.125014305114746
    6. ' x' → logprob: -13.750014305114746
    7. 'sum' → logprob: -14.000014305114746
    8. 'now' → logprob: -14.500014305114746
    9. '
' → logprob: -14.875014305114746
    10. ' ' → logprob: -15.625014305114746

Token 203: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -8.41866585687967e-06
    2. 's' → logprob: -11.875008583068848
    3. ' sum' → logprob: -15.000008583068848
    4. 'summ' → logprob: -15.500008583068848
    5. 'now' → logprob: -15.875008583068848
    6. '_sum' → logprob: -16.25000762939453
    7. '   ' → logprob: -16.37500762939453
    8. '=' → logprob: -16.75000762939453
    9. '=sum' → logprob: -16.87500762939453
    10. '```' → logprob: -17.12500762939453

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2982217073440552
    2. ',' → logprob: -1.6732217073440552
    3. '=' → logprob: -2.6732215881347656
    4. ' ,' → logprob: -6.798221588134766
    5. '<|end|>' → logprob: -9.798221588134766
    6. ' ' → logprob: -11.673221588134766
    7. '<|end|>' → logprob: -12.923221588134766
    8. ',n' → logprob: -13.298221588134766
    9. ')' → logprob: -13.923221588134766
    10. '  ' → logprob: -14.423221588134766

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.125040054321289
    4. '  ' → logprob: -18.25004005432129
    5. '<|end|>' → logprob: -18.75004005432129
    6. '۰' → logprob: -19.25004005432129
    7. '    ' → logprob: -20.50004005432129
    8. '000' → logprob: -21.12504005432129
    9. '=' → logprob: -21.25004005432129
    10. 'initialize' → logprob: -21.43754005432129

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.8750057220459
    4. '۰' → logprob: -21.3750057220459
    5. '  ' → logprob: -22.2500057220459
    6. '00' → logprob: -22.2500057220459
    7. '000' → logprob: -22.3750057220459
    8. 'initialize' → logprob: -22.3750057220459
    9. '<|end|>' → logprob: -23.3750057220459
    10. '=' → logprob: -23.8750057220459

Token 207: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4329289495944977
    2. '<|end|>' → logprob: -1.1829289197921753
    3. '   ' → logprob: -3.182929039001465
    4. '<|end|>' → logprob: -6.307929039001465
    5. '    
' → logprob: -7.182929039001465
    6. '  
' → logprob: -7.432929039001465
    7. ' 
' → logprob: -9.307929039001465
    8. ' while' → logprob: -9.682929039001465
    9. '
' → logprob: -10.557929039001465
    10. 'def' → logprob: -10.557929039001465

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010026157833635807
    2. ' while' → logprob: -5.760025978088379
    3. '<|end|>' → logprob: -5.760025978088379
    4. '
' → logprob: -5.885025978088379
    5. 'while' → logprob: -7.510025978088379
    6. ' for' → logprob: -8.760025978088379
    7. '    
' → logprob: -9.260025978088379
    8. '	while' → logprob: -10.885025978088379
    9. 'for' → logprob: -11.010025978088379
    10. '<|end|>' → logprob: -11.135025978088379

Token 209: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.42487403750419617
    2. 'for' (adapté à ' for') → logprob: -1.4248740673065186
    3. '   ' → logprob: -3.0498740673065186
    4. ' while' → logprob: -3.4248740673065186
    5. ' for' → logprob: -3.6748740673065186
    6. '
' → logprob: -8.174874305725098
    7. '	while' → logprob: -11.174874305725098
    8. ' ' → logprob: -11.549874305725098
    9. 'r' → logprob: -11.924874305725098
    10. '<|end|>' → logprob: -12.174874305725098

Token 210: ' l' (ID: 305)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.08065200597047806
    2. ' l' → logprob: -3.0806519985198975
    3. 'r' → logprob: -3.5806519985198975
    4. 'l' → logprob: -6.580652236938477
    5. ' _' → logprob: -6.830652236938477
    6. ' i' → logprob: -7.580652236938477
    7. '_' → logprob: -7.830652236938477
    8. ' ' → logprob: -8.830652236938477
    9. '_r' → logprob: -9.955652236938477
    10. 'i' → logprob: -10.080652236938477

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0340876467525959
    2. 'in' → logprob: -3.409087657928467
    3. ' ' → logprob: -7.784087657928467
    4. ',' → logprob: -11.784087181091309
    5. '	in' → logprob: -12.284087181091309
    6. 'n' → logprob: -12.909087181091309
    7. ')' → logprob: -13.534087181091309
    8. '   ' → logprob: -13.659087181091309
    9. 'space' → logprob: -13.659087181091309
    10. '  ' → logprob: -13.909087181091309

Token 212: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38687264919281006
    2. 'range' → logprob: -1.13687264919281
    3. ' ' → logprob: -14.386872291564941
    4. '(range' → logprob: -14.511872291564941
    5. '	range' → logprob: -15.511872291564941
    6. '0' → logprob: -15.886872291564941
    7. '   ' → logprob: -16.261873245239258
    8. ' r' → logprob: -17.761873245239258
    9. ' xrange' → logprob: -17.761873245239258
    10. 'n' → logprob: -17.886873245239258

Token 213: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0485946387052536
    2. '(' → logprob: -3.0485947132110596
    3. ' (' → logprob: -12.04859447479248
    4. '(len' → logprob: -14.54859447479248
    5. 'n' → logprob: -14.79859447479248
    6. ' n' → logprob: -15.17359447479248
    7. '(
' → logprob: -15.54859447479248
    8. '((' → logprob: -16.673595428466797
    9. '(range' → logprob: -17.423595428466797
    10. '(N' → logprob: -17.798595428466797

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012908309698104858
    2. '):
' → logprob: -5.012908458709717
    3. '+' → logprob: -5.137908458709717
    4. ' ):' → logprob: -8.262907981872559
    5. ' +' → logprob: -10.637907981872559
    6. '   ' → logprob: -11.762907981872559
    7. ')' → logprob: -12.387907981872559
    8. ':' → logprob: -13.012907981872559
    9. ' ' → logprob: -13.012907981872559
    10. '):
' → logprob: -14.262907981872559

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025793785229325294
    2. '   ' → logprob: -4.650793552398682
    3. '<|end|>' → logprob: -4.900793552398682
    4. ' while' → logprob: -5.400793552398682
    5. ',' → logprob: -7.400793552398682
    6. '        
' → logprob: -7.525793552398682
    7. '    
' → logprob: -7.775793552398682
    8. '
' → logprob: -8.02579402923584
    9. ':' → logprob: -8.02579402923584
    10. ':
' → logprob: -8.15079402923584

Token 216: ' r' (ID: 428)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.42784252762794495
    2. ' while' → logprob: -1.1778424978256226
    3. '   ' → logprob: -3.927842617034912
    4. '       ' → logprob: -3.927842617034912
    5. '	while' → logprob: -7.177842617034912
    6. ' ' → logprob: -13.052842140197754
    7. 'While' → logprob: -13.177842140197754
    8. '<|end|>' → logprob: -13.677842140197754
    9. '    ' → logprob: -14.552842140197754
    10. '  ' → logprob: -14.552842140197754

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2591736912727356
    2. ' =' → logprob: -1.6341736316680908
    3. '<|end|>' → logprob: -3.759173631668091
    4. '<=' → logprob: -6.38417387008667
    5. '>=' → logprob: -6.38417387008667
    6. ' ' → logprob: -6.50917387008667
    7. 'while' → logprob: -6.88417387008667
    8. ' in' → logprob: -7.25917387008667
    9. ',' → logprob: -7.50917387008667
    10. ' <=' → logprob: -8.009173393249512

Token 218: ' max' (ID: 2999)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03120860829949379
    2. ' l' → logprob: -3.9062085151672363
    3. 'max' → logprob: -4.906208515167236
    4. ' max' → logprob: -6.406208515167236
    5. 'r' → logprob: -6.531208515167236
    6. ' r' → logprob: -10.406208992004395
    7. '   ' → logprob: -10.656208992004395
    8. ' ' → logprob: -10.906208992004395
    9. '    ' → logprob: -12.406208992004395
    10. '  ' → logprob: -12.531208992004395

Token 219: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.20200349390506744
    2. '(l' → logprob: -1.7020034790039062
    3. '(' → logprob: -7.577003479003906
    4. 'r' → logprob: -9.702003479003906
    5. 'l' → logprob: -11.327003479003906
    6. ' (' → logprob: -13.702003479003906
    7. '(L' → logprob: -14.702003479003906
    8. '(m' → logprob: -14.952003479003906
    9. '(n' → logprob: -14.952003479003906
    10. '(
' → logprob: -15.077003479003906

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012728251516819
    2. ',l' → logprob: -4.387728214263916
    3. ',r' → logprob: -8.762728691101074
    4. ' ,' → logprob: -9.887728691101074
    5. 'l' → logprob: -12.137728691101074
    6. ',
' → logprob: -13.137728691101074
    7. 'r' → logprob: -14.012728691101074
    8. '   ' → logprob: -14.137728691101074
    9. ',n' → logprob: -14.137728691101074
    10. ',len' → logprob: -15.012728691101074

Token 221: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003630600171163678
    2. ' l' → logprob: -5.628630638122559
    3. '   ' → logprob: -10.628630638122559
    4. 'r' → logprob: -13.378630638122559
    5. '	l' → logprob: -13.378630638122559
    6. ' ' → logprob: -13.753630638122559
    7. '    ' → logprob: -14.628630638122559
    8. ')' → logprob: -14.753630638122559
    9. '       ' → logprob: -14.753630638122559
    10. '     ' → logprob: -15.378630638122559

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08906617760658264
    2. ')
' → logprob: -2.46406626701355
    3. '<|end|>' → logprob: -9.339066505432129
    4. '       ' → logprob: -10.714066505432129
    5. '   ' → logprob: -12.214066505432129
    6. '<|end|>' → logprob: -12.964066505432129
    7. ')

' → logprob: -13.339066505432129
    8. ' )' → logprob: -13.464066505432129
    9. ')
' → logprob: -14.339066505432129
    10. ')\
' → logprob: -14.464066505432129

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0461641363799572
    2. '<|end|>' → logprob: -3.421164035797119
    3. ' while' → logprob: -5.171164035797119
    4. '
' → logprob: -5.421164035797119
    5. '        
' → logprob: -7.296164035797119
    6. 'while' → logprob: -7.796164035797119
    7. '  
' → logprob: -7.921164035797119
    8. ' 
' → logprob: -8.546164512634277
    9. '<|end|>' → logprob: -8.546164512634277
    10. ')' → logprob: -8.921164512634277

Token 224: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6631429195404053
    2. 'while' (adapté à ' while') → logprob: -1.0381429195404053
    3. '       ' → logprob: -2.0381429195404053
    4. '   ' → logprob: -8.163143157958984
    5. '	while' → logprob: -9.538143157958984
    6. ' for' → logprob: -12.413143157958984
    7. '        
' → logprob: -12.413143157958984
    8. '
' → logprob: -12.663143157958984
    9. 'While' → logprob: -12.663143157958984
    10. ' ' → logprob: -12.788143157958984

Token 225: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25195762515068054
    2. ' r' → logprob: -1.501957654953003
    3. ' is' → logprob: -11.501957893371582
    4. 'is' → logprob: -11.626957893371582
    5. '(r' → logprob: -12.126957893371582
    6. '	r' → logprob: -13.876957893371582
    7. '_r' → logprob: -14.626957893371582
    8. '   ' → logprob: -14.751957893371582
    9. ' ' → logprob: -14.876957893371582
    10. 'True' → logprob: -15.126957893371582

Token 226: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3344855010509491
    2. '<' → logprob: -1.4594855308532715
    3. '<n' → logprob: -2.9594855308532715
    4. '<len' → logprob: -10.584485054016113
    5. ' ' → logprob: -10.709485054016113
    6. '+' → logprob: -10.834485054016113
    7. ' +' → logprob: -11.959485054016113
    8. '<size' → logprob: -12.209485054016113
    9. '[' → logprob: -12.959485054016113
    10. '<s' → logprob: -13.459485054016113

Token 227: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011711753904819489
    2. ' n' → logprob: -6.751171112060547
    3. '<|end|>' → logprob: -13.876171112060547
    4. '   ' → logprob: -17.376171112060547
    5. '	n' → logprob: -18.126171112060547
    6. '
' → logprob: -18.126171112060547
    7. ')n' → logprob: -18.376171112060547
    8. ' ' → logprob: -19.126171112060547
    9. '<|end|>' → logprob: -19.376171112060547
    10. '(n' → logprob: -20.626171112060547

Token 228: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012516246177256107
    2. 'and' → logprob: -4.387516021728516
    3. ' ' → logprob: -12.387516021728516
    4. ':' → logprob: -14.387516021728516
    5. ':
' → logprob: -14.637516021728516
    6. '    ' → logprob: -14.887516021728516
    7. '   ' → logprob: -14.887516021728516
    8. '        ' → logprob: -15.262516021728516
    9. '	and' → logprob: -16.012516021728516
    10. '       ' → logprob: -16.262516021728516

Token 229: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.22593818604946136
    2. ' is' → logprob: -1.6009382009506226
    3. ' not' → logprob: -8.350937843322754
    4. 'not' → logprob: -8.350937843322754
    5. '   ' → logprob: -10.475937843322754
    6. ' ' → logprob: -11.600937843322754
    7. 'n' → logprob: -12.725937843322754
    8. '(is' → logprob: -12.975937843322754
    9. '  ' → logprob: -13.225937843322754
    10. '	is' → logprob: -13.475937843322754

Token 230: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -7.941850526549388e-06
    2. 'valid' → logprob: -11.750007629394531
    3. ' valid' → logprob: -17.87500762939453
    4. '_val' → logprob: -18.37500762939453
    5. 'Valid' → logprob: -18.62500762939453
    6. '(valid' → logprob: -19.12500762939453
    7. '_' → logprob: -19.12500762939453
    8. '_VALID' → logprob: -19.37500762939453
    9. '	valid' → logprob: -19.87500762939453
    10. '_v' → logprob: -20.25000762939453

Token 231: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011339050251990557
    2. '(' → logprob: -6.876133918762207
    3. '(ans' → logprob: -9.501133918762207
    4. ' (' → logprob: -10.751133918762207
    5. '(
' → logprob: -12.751133918762207
    6. '   ' → logprob: -13.626133918762207
    7. '((' → logprob: -15.001133918762207
    8. '(r' → logprob: -15.751133918762207
    9. '(s' → logprob: -16.12613296508789
    10. '(now' → logprob: -17.00113296508789

Token 232: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.0014573780354112387
    2. 'n' → logprob: -6.876457214355469
    3. 'ow' → logprob: -8.501457214355469
    4. '   ' → logprob: -9.126457214355469
    5. '       ' → logprob: -10.876457214355469
    6. ' n' → logprob: -11.126457214355469
    7. 'w' → logprob: -11.501457214355469
    8. 's' → logprob: -11.626457214355469
    9. 'os' → logprob: -12.001457214355469
    10. '```' → logprob: -12.001457214355469

Token 233: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00017803447553887963
    2. 'sum' → logprob: -8.750178337097168
    3. 'u' → logprob: -11.625178337097168
    4. ' um' → logprob: -12.875178337097168
    5. 'un' → logprob: -13.375178337097168
    6. ' ' → logprob: -13.750178337097168
    7. '   ' → logprob: -14.000178337097168
    8. 'up' → logprob: -14.125178337097168
    9. 'm' → logprob: -14.250178337097168
    10. 'r' → logprob: -15.125178337097168

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006409500492736697
    2. ' ,' → logprob: -7.500640869140625
    3. ',A' → logprob: -9.500640869140625
    4. ',
' → logprob: -12.125640869140625
    5. 'A' → logprob: -13.250640869140625
    6. '   ' → logprob: -13.375640869140625
    7. ',n' → logprob: -13.500640869140625
    8. '```' → logprob: -14.625640869140625
    9. '           ' → logprob: -14.750640869140625
    10. ' A' → logprob: -15.125640869140625

Token 235: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.014707990922033787
    2. ' now' → logprob: -4.264708042144775
    3. 'A' → logprob: -8.014707565307617
    4. '   ' → logprob: -9.264707565307617
    5. ' A' → logprob: -9.889707565307617
    6. ' ' → logprob: -11.014707565307617
    7. '	now' → logprob: -11.139707565307617
    8. '[now' → logprob: -11.264707565307617
    9. '0' → logprob: -12.264707565307617
    10. 'nown' → logprob: -12.639707565307617

Token 236: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002166491176467389
    2. 'sum' → logprob: -9.000216484069824
    3. 'r' → logprob: -9.875216484069824
    4. 'xor' → logprob: -10.625216484069824
    5. 's' → logprob: -11.500216484069824
    6. 'now' → logprob: -13.375216484069824
    7. '_x' → logprob: -13.500216484069824
    8. '   ' → logprob: -14.500216484069824
    9. 'xr' → logprob: -14.500216484069824
    10. ' x' → logprob: -14.750216484069824

Token 237: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00017541198758408427
    2. 'r' → logprob: -9.000175476074219
    3. 's' → logprob: -10.375175476074219
    4. 'x' → logprob: -12.875175476074219
    5. '   ' → logprob: -12.875175476074219
    6. 'um' → logprob: -13.000175476074219
    7. 'xor' → logprob: -13.375175476074219
    8. 'now' → logprob: -13.625175476074219
    9. '_r' → logprob: -14.000175476074219
    10. ' ' → logprob: -14.125175476074219

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010997301433235407
    2. ' ,' → logprob: -7.251099586486816
    3. ',A' → logprob: -8.251099586486816
    4. '   ' → logprob: -9.751099586486816
    5. 'A' → logprob: -10.001099586486816
    6. '       ' → logprob: -11.251099586486816
    7. ',
' → logprob: -12.126099586486816
    8. '           ' → logprob: -13.251099586486816
    9. ' A' → logprob: -14.001099586486816
    10. ')' → logprob: -14.376099586486816

Token 239: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1603270024061203
    2. ' A' → logprob: -1.9103269577026367
    3. '   ' → logprob: -9.410326957702637
    4. '	A' → logprob: -11.410326957702637
    5. '    ' → logprob: -12.410326957702637
    6. '       ' → logprob: -13.785326957702637
    7. ' ' → logprob: -13.910326957702637
    8. ')' → logprob: -14.285326957702637
    9. '           ' → logprob: -14.285326957702637
    10. '        ' → logprob: -15.160326957702637

Token 240: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00024037064576987177
    2. 'r' → logprob: -8.875240325927734
    3. '[' → logprob: -9.250240325927734
    4. '[in' → logprob: -13.625240325927734
    5. '[
' → logprob: -13.875240325927734
    6. '_r' → logprob: -14.125240325927734
    7. '   ' → logprob: -14.375240325927734
    8. ' [' → logprob: -15.375240325927734
    9. '[i' → logprob: -15.500240325927734
    10. '```' → logprob: -15.875240325927734

Token 241: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9063419103622437
    2. ']):
' → logprob: -1.4063419103622437
    3. ')' → logprob: -1.9063419103622437
    4. ')):
' → logprob: -2.406342029571533
    5. '):' → logprob: -2.906342029571533
    6. ']):' → logprob: -3.156342029571533
    7. ')):' → logprob: -4.531342029571533
    8. '   ' → logprob: -6.906342029571533
    9. ' ):
' → logprob: -7.156342029571533
    10. '])):
' → logprob: -7.906342029571533

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1014612540602684
    2. ':' → logprob: -3.226461172103882
    3. '):' → logprob: -3.851461172103882
    4. ':
' → logprob: -3.976461172103882
    5. '):
' → logprob: -4.476461410522461
    6. ' :' → logprob: -5.851461410522461
    7. ')' → logprob: -7.476461410522461
    8. ' :
' → logprob: -7.476461410522461
    9. ',' → logprob: -7.601461410522461
    10. '               ' → logprob: -7.851461410522461

Token 243: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09839705377817154
    2. '               ' → logprob: -2.9733970165252686
    3. 'n' (adapté à ' n') → logprob: -3.3483970165252686
    4. '           ' → logprob: -5.098397254943848
    5. '   ' → logprob: -7.098397254943848
    6. '       ' → logprob: -8.723397254943848
    7. ' now' → logprob: -8.848397254943848
    8. ' ' → logprob: -9.723397254943848
    9. '	n' → logprob: -10.848397254943848
    10. '            ' → logprob: -11.348397254943848

Token 244: 'ows' (ID: 1513)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3855038583278656
    2. 'ows' → logprob: -1.385503888130188
    3. ' =' → logprob: -3.0105037689208984
    4. 'ow' → logprob: -4.385503768920898
    5. '           ' → logprob: -5.885503768920898
    6. '       ' → logprob: -6.260503768920898
    7. '   ' → logprob: -6.635503768920898
    8. ',' → logprob: -7.385503768920898
    9. ' ' → logprob: -8.635503768920898
    10. '        ' → logprob: -8.885503768920898

Token 245: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.1778925657272339
    2. 'sum' → logprob: -2.0528926849365234
    3. 'r' → logprob: -3.4278926849365234
    4. '   ' → logprob: -6.927892684936523
    5. '       ' → logprob: -7.927892684936523
    6. '[r' → logprob: -8.302892684936523
    7. '=' → logprob: -8.927892684936523
    8. '           ' → logprob: -9.052892684936523
    9. '=sum' → logprob: -9.927892684936523
    10. '=r' → logprob: -10.302892684936523

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06199311837553978
    2. ' =' → logprob: -2.81199312210083
    3. ',' → logprob: -10.936992645263672
    4. ' +=' → logprob: -12.686992645263672
    5. '+=' → logprob: -12.811992645263672
    6. '=

' → logprob: -14.311992645263672
    7. ' ' → logprob: -14.436992645263672
    8. '＝' → logprob: -15.436992645263672
    9. '   ' → logprob: -15.936992645263672
    10. ')' → logprob: -16.186992645263672

Token 247: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.003606363432481885
    2. ' update' → logprob: -5.62860631942749
    3. '   ' → logprob: -13.378606796264648
    4. 'n' → logprob: -14.003606796264648
    5. 'up' → logprob: -14.003606796264648
    6. 'upd' → logprob: -14.378606796264648
    7. 'u' → logprob: -14.628606796264648
    8. '	update' → logprob: -14.628606796264648
    9. 'increase' → logprob: -14.878606796264648
    10. ' ' → logprob: -15.128606796264648

Token 248: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0002887490263674408
    2. 'n' → logprob: -8.750288963317871
    3. '_now' → logprob: -9.125288963317871
    4. '(n' → logprob: -11.125288963317871
    5. '_' → logprob: -12.750288963317871
    6. 'now' → logprob: -12.875288963317871
    7. '_r' → logprob: -15.625288963317871
    8. '[n' → logprob: -15.750288963317871
    9. ' _' → logprob: -16.250288009643555
    10. '(now' → logprob: -16.250288009643555

Token 249: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.0009311101748608053
    2. 'ow' → logprob: -7.000931262969971
    3. 'sum' → logprob: -12.125930786132812
    4. '_' → logprob: -13.500930786132812
    5. 'w' → logprob: -13.625930786132812
    6. 'os' → logprob: -13.750930786132812
    7. 's' → logprob: -13.938430786132812
    8. ' ' → logprob: -14.000930786132812
    9. 'ws' → logprob: -14.063430786132812
    10. '   ' → logprob: -14.063430786132812

Token 250: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.2016099989414215
    2. 'sum' → logprob: -1.7016099691390991
    3. 'r' → logprob: -9.32660961151123
    4. '_sum' → logprob: -11.32660961151123
    5. 's' → logprob: -11.82660961151123
    6. 'A' → logprob: -11.82660961151123
    7. 'u' → logprob: -11.95160961151123
    8. ' sum' → logprob: -12.07660961151123
    9. '_r' → logprob: -12.07660961151123
    10. 'up' → logprob: -12.26410961151123

Token 251: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004938178462907672
    2. '(' → logprob: -7.625494003295898
    3. ' (' → logprob: -12.500494003295898
    4. 'n' → logprob: -13.375494003295898
    5. '(
' → logprob: -14.750494003295898
    6. '```' → logprob: -16.8754940032959
    7. '   ' → logprob: -17.0004940032959
    8. ' n' → logprob: -17.2504940032959
    9. ' ' → logprob: -17.7504940032959
    10. '(
' → logprob: -18.5004940032959

Token 252: 'ows' (ID: 1513)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.48051342368125916
    2. 'ows' → logprob: -0.9805134534835815
    3. 'ow' → logprob: -5.105513572692871
    4. '[' → logprob: -8.230513572692871
    5. '   ' → logprob: -11.230513572692871
    6. ',r' → logprob: -11.355513572692871
    7. '[
' → logprob: -11.605513572692871
    8. '[s' → logprob: -11.980513572692871
    9. '[R' → logprob: -12.230513572692871
    10. 'r' → logprob: -12.355513572692871

Token 253: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.6329516768455505
    2. 'sum' → logprob: -1.0079517364501953
    3. '[r' → logprob: -2.6329517364501953
    4. 'r' → logprob: -3.6329517364501953
    5. 'A' → logprob: -5.632951736450195
    6. '   ' → logprob: -7.257951736450195
    7. '[A' → logprob: -8.632951736450195
    8. 'm' → logprob: -9.007951736450195
    9. ' A' → logprob: -9.132951736450195
    10. '       ' → logprob: -9.257951736450195

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046832661610096693
    2. ',A' → logprob: -8.250468254089355
    3. ' ,' → logprob: -8.625468254089355
    4. 'A' → logprob: -11.250468254089355
    5. ',
' → logprob: -12.375468254089355
    6. ')' → logprob: -13.000468254089355
    7. '<|end|>' → logprob: -13.000468254089355
    8. ' A' → logprob: -13.250468254089355
    9. '   ' → logprob: -13.625468254089355
    10. ' ' → logprob: -14.625468254089355

Token 255: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6931589245796204
    2. ' A' → logprob: -0.6931589245796204
    3. ' ' → logprob: -12.068159103393555
    4. ')' → logprob: -12.443159103393555
    5. ' ' → logprob: -14.818159103393555
    6. '   ' → logprob: -14.818159103393555
    7. ' )' → logprob: -15.693159103393555
    8. '_A' → logprob: -15.818159103393555
    9. '	A' → logprob: -15.818159103393555
    10. ' 
' → logprob: -16.068159103393555

Token 256: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00011415231710998341
    2. '[' → logprob: -9.750114440917969
    3. '_r' → logprob: -10.250114440917969
    4. 'r' → logprob: -11.500114440917969
    5. '[
' → logprob: -12.250114440917969
    6. '   ' → logprob: -13.125114440917969
    7. ')' → logprob: -13.625114440917969
    8. ')[' → logprob: -14.625114440917969
    9. ' [' → logprob: -14.750114440917969
    10. '	r' → logprob: -14.750114440917969

Token 257: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044066064059734344
    2. ')
' → logprob: -3.1690659523010254
    3. '])' → logprob: -7.169065952301025
    4. '[r' → logprob: -8.544066429138184
    5. ']' → logprob: -10.669066429138184
    6. ' )' → logprob: -10.794066429138184
    7. '])
' → logprob: -10.919066429138184
    8. ')

' → logprob: -11.544066429138184
    9. ' )
' → logprob: -11.669066429138184
    10. ')]' → logprob: -12.794066429138184

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008333479054272175
    2. '<|end|>' → logprob: -5.883333683013916
    3. '            ' → logprob: -6.008333683013916
    4. ' now' → logprob: -6.633333683013916
    5. ' r' → logprob: -7.258333683013916
    6. ' ' → logprob: -8.383333206176758
    7. 'r' → logprob: -8.508333206176758
    8. '               ' → logprob: -9.008333206176758
    9. '            
' → logprob: -9.508333206176758
    10. '
' → logprob: -9.633333206176758

Token 259: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.2958678603172302
    2. '           ' → logprob: -1.795867919921875
    3. 'now' (adapté à ' now') → logprob: -2.420867919921875
    4. '            ' → logprob: -7.795867919921875
    5. ' r' → logprob: -7.920867919921875
    6. 'r' → logprob: -7.920867919921875
    7. '               ' → logprob: -9.670867919921875
    8. 'n' → logprob: -10.670867919921875
    9. '          ' → logprob: -11.295867919921875
    10. '   ' → logprob: -11.920867919921875

Token 260: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.5776860184123507e-06
    2. 'xor' → logprob: -13.50000286102295
    3. 'now' → logprob: -14.87500286102295
    4. 's' → logprob: -15.50000286102295
    5. '   ' → logprob: -16.375001907348633
    6. '_x' → logprob: -16.750001907348633
    7. 'r' → logprob: -16.750001907348633
    8. 'xs' → logprob: -16.875001907348633
    9. ' now' → logprob: -17.125001907348633
    10. 'sum' → logprob: -17.125001907348633

Token 261: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.5690089639974758e-05
    2. 's' → logprob: -11.125015258789062
    3. 'now' → logprob: -15.625015258789062
    4. 'x' → logprob: -15.875015258789062
    5. '_sum' → logprob: -15.875015258789062
    6. 'summ' → logprob: -16.125015258789062
    7. '=' → logprob: -16.625015258789062
    8. ' sum' → logprob: -16.625015258789062
    9. '   ' → logprob: -16.875015258789062
    10. '...' → logprob: -17.250015258789062

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589639365673065
    2. '=' → logprob: -3.0485897064208984
    3. ' ' → logprob: -13.423589706420898
    4. ')' → logprob: -14.673589706420898
    5. '<|end|>' → logprob: -15.923589706420898
    6. '_' → logprob: -16.5485897064209
    7. ' ^=' → logprob: -17.0485897064209
    8. 's' → logprob: -17.2985897064209
    9. ' ' → logprob: -17.4235897064209
    10. ' |=' → logprob: -17.7985897064209

Token 263: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.25193002820014954
    2. 'update' → logprob: -1.5019299983978271
    3. '(update' → logprob: -14.376930236816406
    4. '.update' → logprob: -15.751930236816406
    5. '	update' → logprob: -15.876930236816406
    6. '_update' → logprob: -17.501930236816406
    7. ' ' → logprob: -19.001930236816406
    8. ':update' → logprob: -19.626930236816406
    9. '   ' → logprob: -19.876930236816406
    10. 'upd' → logprob: -20.251930236816406

Token 264: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.006748885381966829
    2. 'now' → logprob: -5.006748676300049
    3. '(now' → logprob: -10.506749153137207
    4. '_' → logprob: -12.881749153137207
    5. '[now' → logprob: -13.506749153137207
    6. '_n' → logprob: -13.756749153137207
    7. ' now' → logprob: -14.506749153137207
    8. '_NOW' → logprob: -15.631749153137207
    9. 'n' → logprob: -15.756749153137207
    10. '	now' → logprob: -15.881749153137207

Token 265: 'x' (ID: 87)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04941689595580101
    2. 'x' → logprob: -3.0494167804718018
    3. 's' → logprob: -7.674417018890381
    4. 'r' → logprob: -8.174416542053223
    5. 'now' → logprob: -10.799416542053223
    6. 'xor' → logprob: -10.799416542053223
    7. '_sum' → logprob: -11.299416542053223
    8. '_now' → logprob: -11.799416542053223
    9. '   ' → logprob: -12.299416542053223
    10. '(sum' → logprob: -13.424416542053223

Token 266: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -3.35706390615087e-05
    2. 's' → logprob: -10.750033378601074
    3. 'r' → logprob: -11.875033378601074
    4. 'now' → logprob: -12.750033378601074
    5. '   ' → logprob: -14.875033378601074
    6. 'xor' → logprob: -15.250033378601074
    7. 'summ' → logprob: -15.375033378601074
    8. '_sum' → logprob: -15.625033378601074
    9. ' sum' → logprob: -15.625033378601074
    10. '(sum' → logprob: -16.12503433227539

Token 267: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.0003436872211750597
    2. 'now' → logprob: -8.625343322753906
    3. '(' → logprob: -8.750343322753906
    4. '[now' → logprob: -12.500343322753906
    5. ' now' → logprob: -13.625343322753906
    6. '	now' → logprob: -15.125343322753906
    7. '(
' → logprob: -15.750343322753906
    8. '(n' → logprob: -15.875343322753906
    9. '```' → logprob: -16.875343322753906
    10. ' (' → logprob: -17.125343322753906

Token 268: 'x' (ID: 87)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.016746187582612038
    2. 'r' → logprob: -4.5167460441589355
    3. 'x' → logprob: -5.6417460441589355
    4. '[r' → logprob: -6.5167460441589355
    5. 's' → logprob: -7.5167460441589355
    6. '   ' → logprob: -10.641746520996094
    7. 'xor' → logprob: -10.891746520996094
    8. '(r' → logprob: -11.516746520996094
    9. 'su' → logprob: -12.141746520996094
    10. '[' → logprob: -12.516746520996094

Token 269: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0005311102140694857
    2. 'r' → logprob: -8.000531196594238
    3. '[r' → logprob: -9.125531196594238
    4. 's' → logprob: -9.750531196594238
    5. 'x' → logprob: -12.375531196594238
    6. '_r' → logprob: -12.875531196594238
    7. 'xor' → logprob: -12.875531196594238
    8. '   ' → logprob: -13.125531196594238
    9. ')' → logprob: -13.250531196594238
    10. '[' → logprob: -13.375531196594238

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029840084607712924
    2. ',r' → logprob: -9.000298500061035
    3. ',A' → logprob: -9.000298500061035
    4. ' ,' → logprob: -10.250298500061035
    5. '[r' → logprob: -11.625298500061035
    6. ',
' → logprob: -13.250298500061035
    7. '<|end|>' → logprob: -14.000298500061035
    8. 'A' → logprob: -14.000298500061035
    9. '[A' → logprob: -14.250298500061035
    10. 'r' → logprob: -14.375298500061035

Token 271: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018151583150029182
    2. ' A' → logprob: -4.018151760101318
    3. '   ' → logprob: -14.01815128326416
    4. ' ' → logprob: -14.64315128326416
    5. ')' → logprob: -15.39315128326416
    6. '	A' → logprob: -16.643152236938477
    7. '  ' → logprob: -17.018152236938477
    8. '    ' → logprob: -17.643152236938477
    9. '           ' → logprob: -18.143152236938477
    10. '<|end|>' → logprob: -18.143152236938477

Token 272: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00017350474081467837
    2. 'r' → logprob: -9.000173568725586
    3. '[' → logprob: -10.000173568725586
    4. '[
' → logprob: -12.750173568725586
    5. ')' → logprob: -14.250173568725586
    6. '	r' → logprob: -15.500173568725586
    7. '(r' → logprob: -15.750173568725586
    8. '   ' → logprob: -16.000173568725586
    9. '_r' → logprob: -16.125173568725586
    10. '[R' → logprob: -16.375173568725586

Token 273: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0837855115532875
    2. ')
' → logprob: -2.7087855339050293
    3. '])' → logprob: -4.333785533905029
    4. '])
' → logprob: -8.083785057067871
    5. ']' → logprob: -9.333785057067871
    6. '           ' → logprob: -9.583785057067871
    7. ' )' → logprob: -9.708785057067871
    8. ')

' → logprob: -10.833785057067871
    9. ')]' → logprob: -10.958785057067871
    10. ' )
' → logprob: -11.208785057067871

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011403311509639025
    2. 'r' → logprob: -9.500114440917969
    3. '               ' → logprob: -11.125114440917969
    4. ' r' → logprob: -12.000114440917969
    5. '            
' → logprob: -12.125114440917969
    6. '       ' → logprob: -12.500114440917969
    7. '            ' → logprob: -13.500114440917969
    8. '   ' → logprob: -13.500114440917969
    9. '<|end|>' → logprob: -13.500114440917969
    10. '```' → logprob: -13.875114440917969

Token 275: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.028459103778004646
    2. '           ' → logprob: -4.153459072113037
    3. ' r' → logprob: -4.403459072113037
    4. '               ' → logprob: -9.528459548950195
    5. '   ' → logprob: -10.653459548950195
    6. '       ' → logprob: -11.403459548950195
    7. ' ' → logprob: -13.028459548950195
    8. '```' → logprob: -14.153459548950195
    9. '                   ' → logprob: -14.278459548950195
    10. '          ' → logprob: -14.653459548950195

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04980768635869026
    2. ' =' → logprob: -3.0498077869415283
    3. '+=' → logprob: -6.799807548522949
    4. ' +=' → logprob: -9.17480754852295
    5. '+' → logprob: -14.04980754852295
    6. ')' → logprob: -14.67480754852295
    7. ' ' → logprob: -14.67480754852295
    8. '=in' → logprob: -17.174808502197266
    9. '.=' → logprob: -17.299808502197266
    10. '++' → logprob: -17.674808502197266

Token 277: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.20231270790100098
    2. ' increase' → logprob: -1.702312707901001
    3. 'r' → logprob: -7.077312469482422
    4. ' r' → logprob: -9.952312469482422
    5. 'in' → logprob: -12.827312469482422
    6. ' ' → logprob: -12.952312469482422
    7. 'increment' → logprob: -13.577312469482422
    8. '  ' → logprob: -15.202312469482422
    9. ' increasing' → logprob: -15.327312469482422
    10. '   ' → logprob: -15.827312469482422

Token 278: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.023310469463467598
    2. 'r' → logprob: -3.773310422897339
    3. '(r' → logprob: -9.648310661315918
    4. '_' → logprob: -15.648310661315918
    5. '	r' → logprob: -16.1483097076416
    6. ' r' → logprob: -16.5233097076416
    7. '(' → logprob: -17.8983097076416
    8. 's' → logprob: -18.0233097076416
    9. ''r' → logprob: -18.1483097076416
    10. 'd' → logprob: -18.2733097076416

Token 279: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -6.110668618930504e-05
    2. 'r' → logprob: -10.00006103515625
    3. '(' → logprob: -11.12506103515625
    4. '(
' → logprob: -14.00006103515625
    5. ' (' → logprob: -17.50006103515625
    6. ')' → logprob: -18.62506103515625
    7. ' r' → logprob: -18.87506103515625
    8. '	r' → logprob: -19.25006103515625
    9. '[r' → logprob: -19.25006103515625
    10. '_r' → logprob: -19.50006103515625

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.110668618930504e-05
    2. ')
' → logprob: -9.75006103515625
    3. ' )' → logprob: -13.25006103515625
    4. ')

' → logprob: -14.62506103515625
    5. '<|end|>' → logprob: -15.62506103515625
    6. '())' → logprob: -16.62506103515625
    7. '       ' → logprob: -17.12506103515625
    8. '   ' → logprob: -17.12506103515625
    9. '))' → logprob: -17.37506103515625
    10. '),' → logprob: -17.50006103515625

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01655673049390316
    2. '
' → logprob: -4.391556739807129
    3. '<|end|>' → logprob: -6.016556739807129
    4. '        
' → logprob: -6.766556739807129
    5. '           ' → logprob: -9.266556739807129
    6. ')' → logprob: -9.391556739807129
    7. '```' → logprob: -9.516556739807129
    8. '<|end|>' → logprob: -10.266556739807129
    9. ',' → logprob: -10.391556739807129
    10. '\n' → logprob: -10.766556739807129

Token 282: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.1273646056652069
    2. '       ' → logprob: -2.5023646354675293
    3. '   ' → logprob: -3.7523646354675293
    4. 'if' → logprob: -4.502364635467529
    5. ' ans' → logprob: -6.377364635467529
    6. ' if' → logprob: -7.752364635467529
    7. 'length' → logprob: -8.127364158630371
    8. '	ans' → logprob: -8.252364158630371
    9. 'answer' → logprob: -8.877364158630371
    10. 'current' → logprob: -9.127364158630371

Token 283: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2613658905029297
    2. ' =' → logprob: -1.6363658905029297
    3. '+=' → logprob: -3.5113658905029297
    4. '=' → logprob: -5.26136589050293
    5. ' ' → logprob: -8.38636589050293
    6. '=max' → logprob: -10.88636589050293
    7. '+' → logprob: -12.13636589050293
    8. '  ' → logprob: -12.26136589050293
    9. '   ' → logprob: -12.88636589050293
    10. 'max' → logprob: -12.88636589050293

Token 284: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.00023393364972434938
    2. ' compute' → logprob: -8.37523365020752
    3. 'r' → logprob: -12.62523365020752
    4. '   ' → logprob: -17.750234603881836
    5. '(com' → logprob: -17.875234603881836
    6. 'max' → logprob: -18.000234603881836
    7. 'com' → logprob: -18.375234603881836
    8. '
' → logprob: -18.875234603881836
    9. '_compute' → logprob: -19.625234603881836
    10. 'Compute' → logprob: -19.875234603881836

Token 285: '_increment' (ID: 132160)
  Prédit: '_increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_increment' → logprob: -1.7432603272027336e-06
    2. 'increment' → logprob: -13.750001907348633
    3. '(r' → logprob: -14.375001907348633
    4. '_in' → logprob: -17.750001907348633
    5. '_' → logprob: -18.875001907348633
    6. '_INCREMENT' → logprob: -18.875001907348633
    7. '_indent' → logprob: -18.875001907348633
    8. '_(' → logprob: -19.625001907348633
    9. '_integr' → logprob: -19.750001907348633
    10. 'r' → logprob: -19.875001907348633

Token 286: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.750008583068848
    3. ' (' → logprob: -13.750008583068848
    4. '```' → logprob: -16.875009536743164
    5. '(
' → logprob: -17.250009536743164
    6. '   ' → logprob: -18.625009536743164
    7. '((' → logprob: -18.750009536743164
    8. 'r' → logprob: -18.875009536743164
    9. ')(' → logprob: -19.875009536743164
    10. ' ' → logprob: -20.000009536743164

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026770569384098053
    2. ',l' → logprob: -3.65177059173584
    3. ' ,' → logprob: -7.77677059173584
    4. ',r' → logprob: -10.15177059173584
    5. ',
' → logprob: -12.52677059173584
    6. ',n' → logprob: -12.65177059173584
    7. 'l' → logprob: -13.15177059173584
    8. '   ' → logprob: -14.27677059173584
    9. '```' → logprob: -15.02677059173584
    10. '(' → logprob: -15.40177059173584

Token 288: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008082019630819559
    2. ' l' → logprob: -7.125808238983154
    3. '   ' → logprob: -12.875807762145996
    4. '	l' → logprob: -14.125807762145996
    5. ' ' → logprob: -16.375808715820312
    6. ')' → logprob: -16.500808715820312
    7. '    ' → logprob: -16.500808715820312
    8. '```' → logprob: -16.625808715820312
    9. '       ' → logprob: -16.875808715820312
    10. '_l' → logprob: -17.000808715820312

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004948906716890633
    2. ')
' → logprob: -7.625494956970215
    3. ' )' → logprob: -12.875494956970215
    4. '   ' → logprob: -13.875494956970215
    5. ')

' → logprob: -14.250494956970215
    6. '       ' → logprob: -14.375494956970215
    7. '<|end|>' → logprob: -14.500494956970215
    8. '))' → logprob: -14.750494956970215
    9. ' ' → logprob: -15.750494956970215
    10. '),' → logprob: -16.0004940032959

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2937917709350586
    2. '        
' → logprob: -2.0437917709350586
    3. '   ' → logprob: -2.4187917709350586
    4. '
' → logprob: -4.293791770935059
    5. ' 
' → logprob: -4.418791770935059
    6. '    
' → logprob: -5.543791770935059
    7. '    ' → logprob: -6.918791770935059
    8. '     
' → logprob: -7.418791770935059
    9. ' if' → logprob: -7.418791770935059
    10. '  
' → logprob: -7.418791770935059

Token 291: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01958763599395752
    2. '   ' → logprob: -4.769587516784668
    3. '       ' → logprob: -5.019587516784668
    4. 'n' (adapté à ' n') → logprob: -6.144587516784668
    5. ' if' → logprob: -6.144587516784668
    6. 're' → logprob: -12.269587516784668
    7. 'l' → logprob: -12.894587516784668
    8. ' n' → logprob: -13.394587516784668
    9. '  ' → logprob: -14.019587516784668
    10. 'r' → logprob: -14.144587516784668

Token 292: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -3.500108141452074e-05
    2. 'ow' → logprob: -10.500035285949707
    3. 'l' → logprob: -13.750035285949707
    4. 'n' → logprob: -13.875035285949707
    5. ',' → logprob: -14.000035285949707
    6. '   ' → logprob: -14.000035285949707
    7. 'if' → logprob: -14.500035285949707
    8. '#' → logprob: -14.625035285949707
    9. 'o' → logprob: -14.750035285949707
    10. ' o' → logprob: -15.250035285949707

Token 293: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.033652156591415405
    2. 'sum' → logprob: -3.4086520671844482
    3. '   ' → logprob: -13.158652305603027
    4. 'up' → logprob: -14.408652305603027
    5. 's' → logprob: -14.658652305603027
    6. 'ow' → logprob: -15.033652305603027
    7. 'u' → logprob: -15.158652305603027
    8. 'ums' → logprob: -15.158652305603027
    9. '_sum' → logprob: -15.283652305603027
    10. 'ум' → logprob: -15.408652305603027

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004027865652460605
    2. ' =' → logprob: -7.875402927398682
    3. ',' → logprob: -10.750402450561523
    4. '=re' → logprob: -14.000402450561523
    5. '   ' → logprob: -15.625402450561523
    6. '=n' → logprob: -15.750402450561523
    7. '-=' → logprob: -17.000402450561523
    8. ')' → logprob: -17.250402450561523
    9. ')=' → logprob: -17.500402450561523
    10. '＝' → logprob: -17.750402450561523

Token 295: ' revert' (ID: 34674)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0009138475870713592
    2. ' revert' → logprob: -7.000913619995117
    3. '	re' → logprob: -13.250913619995117
    4. '   ' → logprob: -14.625913619995117
    5. 'r' → logprob: -16.875913619995117
    6. '  ' → logprob: -17.125913619995117
    7. ' re' → logprob: -17.250913619995117
    8. ' ' → logprob: -17.750913619995117
    9. '```' → logprob: -18.125913619995117
    10. 'Re' → logprob: -18.625913619995117

Token 296: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0001158211671281606
    2. '(n' → logprob: -9.125115394592285
    3. '_now' → logprob: -12.250115394592285
    4. 'n' → logprob: -13.250115394592285
    5. '_' → logprob: -15.625115394592285
    6. '(' → logprob: -17.0001163482666
    7. '(now' → logprob: -17.6251163482666
    8. '_(' → logprob: -17.6251163482666
    9. '[n' → logprob: -17.8751163482666
    10. '(_' → logprob: -17.8751163482666

Token 297: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -3.166338137816638e-05
    2. 'ow' → logprob: -10.875031471252441
    3. 'n' → logprob: -12.375031471252441
    4. '_n' → logprob: -12.375031471252441
    5. '_' → logprob: -12.875031471252441
    6. 'os' → logprob: -14.625031471252441
    7. 'oss' → logprob: -15.375031471252441
    8. ' n' → logprob: -15.500031471252441
    9. 'sum' → logprob: -15.750031471252441
    10. '(n' → logprob: -15.750031471252441

Token 298: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -2.868328920158092e-05
    2. 'sum' → logprob: -10.750028610229492
    3. 'u' → logprob: -13.000028610229492
    4. 'up' → logprob: -13.625028610229492
    5. 'ум' → logprob: -13.875028610229492
    6. ' um' → logprob: -13.875028610229492
    7. 'un' → logprob: -15.250028610229492
    8. '   ' → logprob: -15.250028610229492
    9. '_sum' → logprob: -15.625028610229492
    10. ' ' → logprob: -15.750028610229492

Token 299: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00029637437546625733
    2. '(' → logprob: -8.125296592712402
    3. '(
' → logprob: -15.625296592712402
    4. ' (' → logprob: -16.375295639038086
    5. 'n' → logprob: -17.000295639038086
    6. '```' → logprob: -19.125295639038086
    7. '((' → logprob: -19.375295639038086
    8. '\(' → logprob: -19.750295639038086
    9. '(now' → logprob: -20.000295639038086
    10. '   ' → logprob: -20.125295639038086

Token 300: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.00460469163954258
    2. 'n' → logprob: -6.254604816436768
    3. '(n' → logprob: -6.379604816436768
    4. 'ow' → logprob: -7.379604816436768
    5. ' n' → logprob: -9.50460433959961
    6. '(' → logprob: -9.62960433959961
    7. '   ' → logprob: -9.87960433959961
    8. '[n' → logprob: -10.62960433959961
    9. 's' → logprob: -10.87960433959961
    10. ' ' → logprob: -11.62960433959961

Token 301: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0003346314188092947
    2. 'sum' → logprob: -8.125334739685059
    3. 'm' → logprob: -12.000334739685059
    4. ' um' → logprob: -12.125334739685059
    5. 'up' → logprob: -12.125334739685059
    6. '   ' → logprob: -12.125334739685059
    7. 'ум' → logprob: -12.500334739685059
    8. 'n' → logprob: -13.000334739685059
    9. ' ' → logprob: -13.250334739685059
    10. 'un' → logprob: -13.500334739685059

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021377671509981155
    2. ',n' → logprob: -6.377137660980225
    3. '(n' → logprob: -8.127138137817383
    4. ',A' → logprob: -9.502138137817383
    5. ' ,' → logprob: -9.877138137817383
    6. 'n' → logprob: -12.627138137817383
    7. '(' → logprob: -12.627138137817383
    8. '   ' → logprob: -13.252138137817383
    9. ',N' → logprob: -13.377138137817383
    10. ')' → logprob: -13.502138137817383

Token 303: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002624086628202349
    2. ' A' → logprob: -8.250262260437012
    3. '   ' → logprob: -13.750262260437012
    4. '	A' → logprob: -17.500263214111328
    5. '       ' → logprob: -17.750263214111328
    6. ')' → logprob: -18.625263214111328
    7. '(A' → logprob: -19.000263214111328
    8. ' ' → logprob: -19.375263214111328
    9. '           ' → logprob: -19.375263214111328
    10. '  ' → logprob: -19.875263214111328

Token 304: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00015979631280060858
    2. 'l' → logprob: -8.750160217285156
    3. '[' → logprob: -14.250160217285156
    4. '```' → logprob: -15.500160217285156
    5. '[
' → logprob: -15.625160217285156
    6. ' [' → logprob: -16.250160217285156
    7. '   ' → logprob: -16.875160217285156
    8. '	l' → logprob: -17.125160217285156
    9. '\[' → logprob: -17.250160217285156
    10. '[r' → logprob: -17.750160217285156

Token 305: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5067245364189148
    2. ')
' → logprob: -1.0067245960235596
    3. '])' → logprob: -3.6317245960235596
    4. '])
' → logprob: -5.2567243576049805
    5. ']' → logprob: -8.00672435760498
    6. ' )
' → logprob: -10.38172435760498
    7. ']
' → logprob: -10.63172435760498
    8. ')]' → logprob: -11.00672435760498
    9. ' )' → logprob: -11.13172435760498
    10. ')
' → logprob: -11.88172435760498

Token 306: '       ' (ID: 309)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.009742632508277893
    2. '       ' → logprob: -5.384742736816406
    3. 'now' → logprob: -5.759742736816406
    4. '   ' → logprob: -6.259742736816406
    5. '[now' → logprob: -11.134742736816406
    6. '
' → logprob: -11.509742736816406
    7. '	now' → logprob: -11.509742736816406
    8. '```' → logprob: -11.884742736816406
    9. '           ' → logprob: -13.634742736816406
    10. ' ' → logprob: -14.009742736816406

Token 307: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.0015054593095555902
    2. ' now' → logprob: -6.501505374908447
    3. '   ' → logprob: -13.001505851745605
    4. '       ' → logprob: -14.376505851745605
    5. 'n' → logprob: -15.376505851745605
    6. 'nown' → logprob: -17.50150489807129
    7. '	now' → logprob: -17.50150489807129
    8. '[now' → logprob: -17.62650489807129
    9. '           ' → logprob: -17.87650489807129
    10. '```' → logprob: -19.12650489807129

Token 308: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.60414821645827e-06
    2. 'xor' → logprob: -12.750004768371582
    3. 'now' → logprob: -13.750004768371582
    4. ' x' → logprob: -15.125004768371582
    5. ' now' → logprob: -15.875004768371582
    6. 'xs' → logprob: -16.000003814697266
    7. '_x' → logprob: -17.000003814697266
    8. 'xes' → logprob: -17.875003814697266
    9. 'xx' → logprob: -18.000003814697266
    10. 's' → logprob: -18.500003814697266

Token 309: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.1008713702030946e-06
    2. 'x' → logprob: -14.000001907348633
    3. 'xor' → logprob: -14.375001907348633
    4. 's' → logprob: -14.750001907348633
    5. ' sum' → logprob: -17.250001907348633
    6. 'summ' → logprob: -17.625001907348633
    7. 'now' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.000001907348633
    9. '=' → logprob: -18.500001907348633
    10. 'sup' → logprob: -18.625001907348633

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. '=re' → logprob: -14.451414108276367
    4. ')' → logprob: -16.576414108276367
    5. ' ' → logprob: -17.076414108276367
    6. ',' → logprob: -17.951414108276367
    7. '<|end|>' → logprob: -17.951414108276367
    8. ' ' → logprob: -18.826414108276367
    9. '_=' → logprob: -18.951414108276367
    10. '=}' → logprob: -19.326414108276367

Token 311: ' revert' (ID: 34674)
  Prédit: ' revert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' revert' → logprob: -0.5759417414665222
    2. 're' → logprob: -0.8259417414665222
    3. '	re' → logprob: -13.325942039489746
    4. '_re' → logprob: -15.575942039489746
    5. '(re' → logprob: -15.825942039489746
    6. ' ' → logprob: -16.32594108581543
    7. '   ' → logprob: -16.57594108581543
    8. ' re' → logprob: -16.70094108581543
    9. 'Re' → logprob: -17.32594108581543
    10. ' rever' → logprob: -17.70094108581543

Token 312: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.0005620885640382767
    2. 'now' → logprob: -7.5005621910095215
    3. '_n' → logprob: -12.000561714172363
    4. 'xor' → logprob: -13.250561714172363
    5. '_x' → logprob: -14.250561714172363
    6. '_' → logprob: -15.250561714172363
    7. 'n' → logprob: -16.12556266784668
    8. '_NOW' → logprob: -16.75056266784668
    9. 'x' → logprob: -17.25056266784668
    10. 'Now' → logprob: -17.50056266784668

Token 313: 'x' (ID: 87)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.009501535445451736
    2. 'x' → logprob: -4.7595014572143555
    3. 's' → logprob: -7.1345014572143555
    4. 'now' → logprob: -10.009501457214355
    5. '_now' → logprob: -10.759501457214355
    6. 'xor' → logprob: -11.009501457214355
    7. 'n' → logprob: -13.759501457214355
    8. '_sum' → logprob: -13.884501457214355
    9. '(sum' → logprob: -14.009501457214355
    10. ' sum' → logprob: -14.134501457214355

Token 314: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.4272752852994017e-05
    2. 's' → logprob: -10.75002384185791
    3. 'now' → logprob: -13.75002384185791
    4. 'xor' → logprob: -13.75002384185791
    5. '(sum' → logprob: -15.12502384185791
    6. 'x' → logprob: -15.87502384185791
    7. ' sum' → logprob: -17.375024795532227
    8. '...' → logprob: -17.375024795532227
    9. 'summ' → logprob: -17.500024795532227
    10. '   ' → logprob: -17.625024795532227

Token 315: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -8.895480277715251e-06
    2. 'now' → logprob: -12.125008583068848
    3. '[now' → logprob: -12.875008583068848
    4. '(' → logprob: -14.500008583068848
    5. ' now' → logprob: -15.750008583068848
    6. '(n' → logprob: -16.125009536743164
    7. '```' → logprob: -17.250009536743164
    8. '	now' → logprob: -17.250009536743164
    9. '(
' → logprob: -17.750009536743164
    10. 'Now' → logprob: -18.500009536743164

Token 316: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10052916407585144
    2. 'sum' → logprob: -2.350529193878174
    3. 's' → logprob: -8.100528717041016
    4. 'xor' → logprob: -11.350528717041016
    5. 'now' → logprob: -12.350528717041016
    6. 'psum' → logprob: -14.350528717041016
    7. 'p' → logprob: -14.850528717041016
    8. '_sum' → logprob: -15.225528717041016
    9. 'summ' → logprob: -15.225528717041016
    10. 'q' → logprob: -15.725528717041016

Token 317: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00010449681576574221
    2. 'x' → logprob: -9.375104904174805
    3. 's' → logprob: -11.500104904174805
    4. 'now' → logprob: -11.875104904174805
    5. 'xor' → logprob: -13.625104904174805
    6. '(sum' → logprob: -15.000104904174805
    7. 'summ' → logprob: -15.750104904174805
    8. '_sum' → logprob: -15.750104904174805
    9. '   ' → logprob: -16.250104904174805
    10. 'm' → logprob: -16.500104904174805

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020320152398198843
    2. '(now' → logprob: -6.5020318031311035
    3. '[now' → logprob: -8.002032279968262
    4. 'now' → logprob: -9.127032279968262
    5. '(n' → logprob: -10.877032279968262
    6. ',A' → logprob: -11.252032279968262
    7. 'A' → logprob: -11.502032279968262
    8. ',n' → logprob: -11.627032279968262
    9. ' ,' → logprob: -11.627032279968262
    10. '   ' → logprob: -11.877032279968262

Token 319: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006349971517920494
    2. ' A' → logprob: -7.375635147094727
    3. 'now' → logprob: -12.000635147094727
    4. '   ' → logprob: -13.500635147094727
    5. ' now' → logprob: -15.000635147094727
    6. 'n' → logprob: -15.500635147094727
    7. 'l' → logprob: -15.875635147094727
    8. ' ' → logprob: -16.500635147094727
    9. ')' → logprob: -16.875635147094727
    10. '	A' → logprob: -17.125635147094727

Token 320: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.6240566083070007e-06
    2. 'l' → logprob: -14.000001907348633
    3. '[' → logprob: -14.375001907348633
    4. ',l' → logprob: -16.875001907348633
    5. '	l' → logprob: -17.000001907348633
    6. '[
' → logprob: -17.125001907348633
    7. '```' → logprob: -18.250001907348633
    8. '[r' → logprob: -18.750001907348633
    9. '(l' → logprob: -18.750001907348633
    10. ' [' → logprob: -19.625001907348633

Token 321: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006297559011727571
    2. ')
' → logprob: -7.375629901885986
    3. '   ' → logprob: -13.500629425048828
    4. '       ' → logprob: -14.000629425048828
    5. ')

' → logprob: -15.125629425048828
    6. ' )' → logprob: -15.375629425048828
    7. '<|end|>' → logprob: -15.750629425048828
    8. ')}' → logprob: -16.500629425048828
    9. ')
' → logprob: -16.625629425048828
    10. '}' → logprob: -17.375629425048828

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009672398678958416
    2. '<|end|>' → logprob: -5.634672164916992
    3. 'return' → logprob: -6.134672164916992
    4. '```' → logprob: -6.634672164916992
    5. '
' → logprob: -7.134672164916992
    6. ' return' → logprob: -7.384672164916992
    7. '    
' → logprob: -8.259672164916992
    8. '       ' → logprob: -8.384672164916992
    9. ')' → logprob: -8.509672164916992
    10. 'if' → logprob: -9.259672164916992

Token 323: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000764479860663414
    2. 'return' → logprob: -7.5007643699646
    3. ' return' → logprob: -8.750764846801758
    4. 'print' (adapté à ' print') → logprob: -9.875764846801758
    5. ' print' → logprob: -14.125764846801758
    6. '```' → logprob: -14.625764846801758
    7. '	return' → logprob: -16.000764846801758
    8. '       ' → logprob: -16.250764846801758
    9. '
' → logprob: -16.250764846801758
    10. '    
' → logprob: -16.625764846801758

Token 324: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.125016212463379
    3. 'ans' → logprob: -13.750016212463379
    4. ' (' → logprob: -15.125016212463379
    5. '(answer' → logprob: -16.000017166137695
    6. '(
' → logprob: -16.000017166137695
    7. '()' → logprob: -16.875017166137695
    8. '	ans' → logprob: -17.250017166137695
    9. '(abs' → logprob: -19.000017166137695
    10. '(acc' → logprob: -19.250017166137695

Token 325: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')`' → logprob: -16.75
    3. ' )' → logprob: -17.125
    4. ')
' → logprob: -17.625
    5. '()' → logprob: -18.375
    6. '))' → logprob: -18.625
    7. '`)' → logprob: -18.75
    8. '())' → logprob: -18.875
    9. '')' → logprob: -19.0
    10. ')}' → logprob: -19.125

Token 326: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09561800211668015
    2. '#' → logprob: -3.3456180095672607
    3. 'main' → logprob: -3.4706180095672607
    4. '<|end|>' → logprob: -4.720617771148682
    5. '
' → logprob: -4.845617771148682
    6. '```' → logprob: -5.470617771148682
    7. '\' → logprob: -7.345617771148682
    8. ' if' → logprob: -7.470617771148682
    9. '_' → logprob: -7.720617771148682
    10. 'n' → logprob: -7.970617771148682

Token 327: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12296008318662643
    2. '(' → logprob: -2.247960090637207
    3. '<|end|>' → logprob: -5.497960090637207
    4. '
' → logprob: -6.497960090637207
    5. '(
' → logprob: -6.497960090637207
    6. '#' → logprob: -6.872960090637207
    7. '```' → logprob: -6.997960090637207
    8. '()
' → logprob: -7.247960090637207
    9. ')' → logprob: -8.872960090637207
    10. '\n' → logprob: -10.497960090637207


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 325
Tokens correctement prédits (1ère position, stricte): 173
Tokens correctement prédits (1ère position, avec adaptation): 182
Tokens correctement prédits (top 10): 289
Précision stricte (1ère position): 53.23%
Précision adaptée (1ère position): 56.00%
Précision (top 10): 88.92%
================================================================================
