================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def square(n): return n * n
class Calc: pass
if __name__=='__main__':
    from math import pow
    r=input()
    try:
        r=int(r)
    except Exception as error:
        print("Erreur:", error)
        exit(1)
    print(pow(r,2) if r%2 else square(r))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' square' (ID: 13749)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932088136672974
    2. '):' → logprob: -0.6932088136672974
    3. '):
' → logprob: -11.318208694458008
    4. ':' → logprob: -11.318208694458008
    5. ')n' → logprob: -11.443208694458008
    6. '*' → logprob: -12.568208694458008
    7. '**' → logprob: -12.693208694458008
    8. ')**' → logprob: -12.693208694458008
    9. ')：' → logprob: -13.068208694458008
    10. ')>' → logprob: -13.318208694458008

Token 4: ' return' (ID: 622)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7767558693885803
    2. '\n' → logprob: -0.9017558693885803
    3. '   ' → logprob: -2.6517558097839355
    4. '(' → logprob: -4.4017558097839355
    5. '```' → logprob: -4.5267558097839355
    6. '\r' → logprob: -4.7767558097839355
    7. ' return' → logprob: -4.7767558097839355
    8. '    
' → logprob: -5.4017558097839355
    9. ':' → logprob: -5.7767558097839355
    10. 'return' → logprob: -6.0267558097839355

Token 5: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04014615714550018
    2. ' ' → logprob: -3.6651461124420166
    3. 'n' → logprob: -4.290146350860596
    4. ' ' → logprob: -11.165145874023438
    5. 's' → logprob: -11.290145874023438
    6. '(n' → logprob: -11.790145874023438
    7. '  ' → logprob: -12.915145874023438
    8. ' space' → logprob: -13.415145874023438
    9. '"' → logprob: -13.540145874023438
    10. 'space' → logprob: -13.915145874023438

Token 6: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.020660651847720146
    2. '**' → logprob: -3.895660638809204
    3. '[' → logprob: -10.770660400390625
    4. '***' → logprob: -11.020660400390625
    5. '*[' → logprob: -11.145660400390625
    6. ' *' → logprob: -11.395660400390625
    7. '*(' → logprob: -11.520660400390625
    8. ')' → logprob: -11.770660400390625
    9. '(' → logprob: -12.395660400390625
    10. '\' → logprob: -12.395660400390625

Token 7: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7325721383094788
    2. ' n' → logprob: -1.232572078704834
    3. ' ' → logprob: -1.482572078704834
    4. '2' → logprob: -8.107572555541992
    5. '1' → logprob: -9.482572555541992
    6. '<|end|>' → logprob: -9.607572555541992
    7. ' ' → logprob: -9.857572555541992
    8. ''' → logprob: -9.982572555541992
    9. ' )' → logprob: -10.607572555541992
    10. '_n' → logprob: -10.982572555541992

Token 8: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014532138593494892
    2. '(
' → logprob: -4.514532089233398
    3. '\n' → logprob: -6.264532089233398
    4. '
' → logprob: -7.389532089233398
    5. '\' → logprob: -8.514532089233398
    6. '()' → logprob: -9.139532089233398
    7. '' → logprob: -9.139532089233398
    8. 'newline' → logprob: -9.264532089233398
    9. ')' → logprob: -9.514532089233398
    10. '(

' → logprob: -9.639532089233398

Token 9: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5748245716094971
    2. '\n' → logprob: -1.074824571609497
    3. '\' → logprob: -3.074824571609497
    4. '
' → logprob: -3.949824571609497
    5. '<|end|>' → logprob: -4.949824333190918
    6. 'newline' → logprob: -5.074824333190918
    7. '(
' → logprob: -5.824824333190918
    8. ')' → logprob: -6.199824333190918
    9. '```' → logprob: -6.199824333190918
    10. '*' → logprob: -6.324824333190918

Token 10: ' Calc' (ID: 78951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0025467700324952602
    2. ' Square' → logprob: -6.877546787261963
    3. ' Space' → logprob: -7.252546787261963
    4. '`' → logprob: -8.502546310424805
    5. ''' → logprob: -9.127546310424805
    6. '  ' → logprob: -9.127546310424805
    7. ' Calculator' → logprob: -9.502546310424805
    8. ' User' → logprob: -10.252546310424805
    9. ' A' → logprob: -10.502546310424805
    10. ' S' → logprob: -10.502546310424805

Token 11: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6504248380661011
    2. '.' → logprob: -0.9004248380661011
    3. '(' → logprob: -3.2754249572753906
    4. '():' → logprob: -4.400424957275391
    5. '):' → logprob: -5.400424957275391
    6. 'er' → logprob: -5.900424957275391
    7. 'culator' → logprob: -6.025424957275391
    8. 'ulator' → logprob: -6.025424957275391
    9. '```' → logprob: -6.150424957275391
    10. '(:' → logprob: -6.900424957275391

Token 12: ' pass' (ID: 1853)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.21342694759368896
    2. ' ' → logprob: -3.0884270668029785
    3. '\n' → logprob: -3.0884270668029785
    4. '\' → logprob: -3.4634270668029785
    5. '  
' → logprob: -4.0884270668029785
    6. '    
' → logprob: -4.0884270668029785
    7. '    ' → logprob: -4.7134270668029785
    8. '   ' → logprob: -5.0884270668029785
    9. '     
' → logprob: -5.4634270668029785
    10. '
' → logprob: -5.8384270668029785

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7862740159034729
    2. '.' → logprob: -0.9112740159034729
    3. '\n' → logprob: -2.911273956298828
    4. '' → logprob: -3.911273956298828
    5. '\' → logprob: -4.036273956298828
    6. ' ' → logprob: -4.661273956298828
    7. '(' → logprob: -4.786273956298828
    8. '<|end|>' → logprob: -5.161273956298828
    9. '

' → logprob: -5.661273956298828
    10. ' 
' → logprob: -5.786273956298828

Token 14: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2295754998922348
    2. '
' → logprob: -2.6045753955841064
    3. '(' → logprob: -3.1045753955841064
    4. '\n' → logprob: -3.9795753955841064
    5. '\' → logprob: -4.2295756340026855
    6. '<|end|>' → logprob: -4.3545756340026855
    7. '' → logprob: -5.3545756340026855
    8. 'def' → logprob: -5.3545756340026855
    9. ' ' → logprob: -5.7295756340026855
    10. '```' → logprob: -5.7295756340026855

Token 15: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0111493319272995
    2. ' __' → logprob: -5.0111494064331055
    3. '__' → logprob: -6.0111494064331055
    4. '  ' → logprob: -6.8861494064331055
    5. ' n' → logprob: -7.8861494064331055
    6. ' ' → logprob: -8.511149406433105
    7. ' True' → logprob: -9.261149406433105
    8. '_' → logprob: -9.636149406433105
    9. 'n' → logprob: -9.636149406433105
    10. ' not' → logprob: -10.511149406433105

Token 16: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20308810472488403
    2. '.' → logprob: -1.8280880451202393
    3. '.__' → logprob: -4.703088283538818
    4. '__.__' → logprob: -4.953088283538818
    5. '_' → logprob: -5.953088283538818
    6. '__.' → logprob: -6.203088283538818
    7. '==' → logprob: -7.828088283538818
    8. '.name' → logprob: -8.20308780670166
    9. ' .' → logprob: -8.32808780670166
    10. ' ==' → logprob: -8.45308780670166

Token 17: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3663626305060461e-05
    2. '_' → logprob: -12.62501335144043
    3. '__
' → logprob: -12.62501335144043
    4. '==' → logprob: -12.87501335144043
    5. '__

' → logprob: -13.75001335144043
    6. '___' → logprob: -14.25001335144043
    7. '____' → logprob: -14.25001335144043
    8. 'space' → logprob: -14.37501335144043
    9. '```' → logprob: -15.12501335144043
    10. '__.__' → logprob: -15.25001335144043

Token 18: '=='' (ID: 20651)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3882683217525482
    2. '__' → logprob: -1.1382683515548706
    3. '==' → logprob: -6.76326847076416
    4. '_' → logprob: -9.01326847076416
    5. ' ' → logprob: -10.13826847076416
    6. ' =' → logprob: -10.38826847076416
    7. ' __' → logprob: -10.76326847076416
    8. '=='' → logprob: -12.13826847076416
    9. '=="' → logprob: -12.38826847076416
    10. '=' → logprob: -13.01326847076416

Token 19: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9361264946837764e-07
    2. 'main' → logprob: -16.125
    3. '```' → logprob: -18.125
    4. '_' → logprob: -19.125
    5. '_main' → logprob: -19.625
    6. ' __' → logprob: -20.0
    7. '____' → logprob: -20.375
    8. '___' → logprob: -20.875
    9. '__
' → logprob: -21.625
    10. '__

' → logprob: -22.125

Token 20: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.468279752880335e-05
    2. 'name' → logprob: -10.125064849853516
    3. 'ma' → logprob: -10.875064849853516
    4. 'm' → logprob: -12.375064849853516
    5. 'mai' → logprob: -13.750064849853516
    6. ' main' → logprob: -15.875064849853516
    7. 'init' → logprob: -16.500064849853516
    8. 'maine' → logprob: -16.750064849853516
    9. '_main' → logprob: -18.125064849853516
    10. 'built' → logprob: -18.250064849853516

Token 21: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01109450776129961
    2. '__':
' → logprob: -4.511094570159912
    3. '_' → logprob: -10.261094093322754
    4. '__:' → logprob: -11.386094093322754
    5. '__":
' → logprob: -16.01109504699707
    6. '___' → logprob: -16.13609504699707
    7. '__('' → logprob: -16.88609504699707
    8. '':' → logprob: -17.01109504699707
    9. '__.' → logprob: -17.26109504699707
    10. ''' → logprob: -18.01109504699707

Token 22: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03763825446367264
    2. ' 
' → logprob: -4.162638187408447
    3. '     
' → logprob: -4.787638187408447
    4. '    ' → logprob: -4.912638187408447
    5. '    
' → logprob: -7.537638187408447
    6. '   ' → logprob: -7.537638187408447
    7. ' ' → logprob: -7.662638187408447
    8. '\' → logprob: -7.662638187408447
    9. ' print' → logprob: -7.912638187408447
    10. '(s' → logprob: -7.912638187408447

Token 23: ' from' (ID: 591)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.0743380784988403
    2. ' print' → logprob: -1.3243380784988403
    3. ' c' → logprob: -2.074337959289551
    4. 'result' → logprob: -2.449337959289551
    5. ' ' → logprob: -3.074337959289551
    6. 'c' → logprob: -3.324337959289551
    7. ' calc' → logprob: -3.699337959289551
    8. 'print' → logprob: -3.949337959289551
    9. '    ' → logprob: -3.949337959289551
    10. ' square' → logprob: -4.449337959289551

Token 24: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.001901743933558464
    2. ' ' → logprob: -6.376901626586914
    3. 'math' → logprob: -9.751901626586914
    4. '_math' → logprob: -10.626901626586914
    5. ' itertools' → logprob: -10.876901626586914
    6. ' random' → logprob: -10.876901626586914
    7. ' os' → logprob: -11.001901626586914
    8. ' functools' → logprob: -11.251901626586914
    9. ' collections' → logprob: -11.876901626586914
    10. ' Math' → logprob: -12.126901626586914

Token 25: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05282335355877876
    2. ' ' → logprob: -3.677823305130005
    3. 'import' → logprob: -3.677823305130005
    4. '<|end|>' → logprob: -7.927823543548584
    5. '.' → logprob: -8.177823066711426
    6. ' .' → logprob: -10.052823066711426
    7. '	import' → logprob: -10.302823066711426
    8. '.import' → logprob: -10.302823066711426
    9. '.sqrt' → logprob: -10.677823066711426
    10. '_import' → logprob: -10.802823066711426

Token 26: ' pow' (ID: 9779)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.03321705758571625
    2. 'sqrt' → logprob: -4.033216953277588
    3. ' ' → logprob: -4.283216953277588
    4. 's' → logprob: -8.033217430114746
    5. ' factorial' → logprob: -8.408217430114746
    6. ' pow' → logprob: -8.408217430114746
    7. ' sin' → logprob: -9.158217430114746
    8. ' pi' → logprob: -9.283217430114746
    9. 'pow' → logprob: -9.908217430114746
    10. 'qrt' → logprob: -10.783217430114746

Token 27: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7875644564628601
    2. '
' → logprob: -1.2875645160675049
    3. '   ' → logprob: -2.162564516067505
    4. '    
' → logprob: -2.412564516067505
    5. '(
' → logprob: -3.537564516067505
    6. ' 
' → logprob: -5.037564277648926
    7. '(n' → logprob: -5.537564277648926
    8. '\' → logprob: -5.537564277648926
    9. '  
' → logprob: -5.787564277648926
    10. '     
' → logprob: -6.162564277648926

Token 28: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2527831494808197
    2. '   ' → logprob: -2.0027830600738525
    3. '    
' → logprob: -2.7527830600738525
    4. ' 
' → logprob: -5.127783298492432
    5. 'result' → logprob: -5.377783298492432
    6. '  
' → logprob: -6.002783298492432
    7. 'n' → logprob: -6.252783298492432
    8. 'print' → logprob: -7.127783298492432
    9. ',' → logprob: -7.252783298492432
    10. '\n' → logprob: -7.252783298492432

Token 29: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08543176203966141
    2. 'result' → logprob: -3.3354318141937256
    3. ' result' → logprob: -3.9604318141937256
    4. '    
' → logprob: -5.2104315757751465
    5. ' ' → logprob: -5.3354315757751465
    6. 'print' → logprob: -5.5854315757751465
    7. 'x' → logprob: -6.0854315757751465
    8. 'a' → logprob: -6.0854315757751465
    9. '    ' → logprob: -6.3354315757751465
    10. ' print' → logprob: -6.4604315757751465

Token 30: '=input' (ID: 87911)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.11010967940092087
    2. 'e' → logprob: -2.485109567642212
    3. '=' → logprob: -5.235109806060791
    4. ' =' → logprob: -5.485109806060791
    5. 'a' → logprob: -5.735109806060791
    6. 'pow' → logprob: -5.735109806060791
    7. 'ange' → logprob: -6.860109806060791
    8. 'eturn' → logprob: -7.735109806060791
    9. 's' → logprob: -7.860109806060791
    10. 'r' → logprob: -8.110109329223633

Token 31: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003398726985324174
    2. '('' → logprob: -8.62533950805664
    3. '("("' → logprob: -8.87533950805664
    4. '()' → logprob: -11.87533950805664
    5. ' (' → logprob: -12.25033950805664
    6. '(
' → logprob: -13.37533950805664
    7. '(`' → logprob: -13.62533950805664
    8. '(

' → logprob: -13.62533950805664
    9. '```' → logprob: -14.50033950805664
    10. '<|end|>' → logprob: -14.62533950805664

Token 32: '   ' (ID: 271)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5908551812171936
    2. '   ' → logprob: -1.9658551216125488
    3. ')' → logprob: -2.965855121612549
    4. '()' → logprob: -2.965855121612549
    5. ' ' → logprob: -3.215855121612549
    6. ' 
' → logprob: -3.840855121612549
    7. '<|end|>' → logprob: -3.965855121612549
    8. '  
' → logprob: -4.340855121612549
    9. ',' → logprob: -4.465855121612549
    10. ' **' → logprob: -4.590855121612549

Token 33: ' try' (ID: 2075)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2036132961511612
    2. '(' → logprob: -3.20361328125
    3. ')' → logprob: -3.45361328125
    4. '=' → logprob: -4.20361328125
    5. ' 
' → logprob: -4.45361328125
    6. ' **' → logprob: -4.45361328125
    7. '**
' → logprob: -4.70361328125
    8. '*' → logprob: -4.70361328125
    9. 'n' → logprob: -5.32861328125
    10. ' ' → logprob: -5.32861328125

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021152703266125172
    2. ' :' → logprob: -8.750211715698242
    3. ':
' → logprob: -10.125211715698242
    4. '):' → logprob: -12.375211715698242
    5. '   ' → logprob: -13.000211715698242
    6. '():' → logprob: -13.750211715698242
    7. '<|end|>' → logprob: -14.125211715698242
    8. '[' → logprob: -14.250211715698242
    9. ':**' → logprob: -14.250211715698242
    10. '       ' → logprob: -14.625211715698242

Token 35: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0499144047498703
    2. '       ' → logprob: -3.5499143600463867
    3. ':
' → logprob: -4.799914360046387
    4. ' :' → logprob: -4.924914360046387
    5. '   ' → logprob: -6.174914360046387
    6. '    ' → logprob: -6.674914360046387
    7. ' :
' → logprob: -7.924914360046387
    8. ' ' → logprob: -8.674914360046387
    9. '):' → logprob: -8.924914360046387
    10. ' 
' → logprob: -9.799914360046387

Token 36: ' r' (ID: 428)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1097031831741333
    2. 'n' → logprob: -2.6097030639648438
    3. ' x' → logprob: -5.234703063964844
    4. ':' → logprob: -5.484703063964844
    5. ' v' → logprob: -5.859703063964844
    6. ' val' → logprob: -5.984703063964844
    7. ' r' → logprob: -5.984703063964844
    8. '   ' → logprob: -6.734703063964844
    9. '       ' → logprob: -6.734703063964844
    10. ':
' → logprob: -6.734703063964844

Token 37: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01918567344546318
    2. '=' → logprob: -4.144185543060303
    3. ' ' → logprob: -5.894185543060303
    4. '=int' → logprob: -7.894185543060303
    5. ' =
' → logprob: -12.394186019897461
    6. 'int' → logprob: -13.144186019897461
    7. '=float' → logprob: -13.144186019897461
    8. ' ' → logprob: -13.519186019897461
    9. 's' → logprob: -13.644186019897461
    10. '    ' → logprob: -13.769186019897461

Token 38: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0619862861931324
    2. '(' → logprob: -2.811986207962036
    3. ' (' → logprob: -11.186985969543457
    4. ' ' → logprob: -13.436985969543457
    5. '(s' → logprob: -14.561985969543457
    6. ')' → logprob: -14.811985969543457
    7. '(re' → logprob: -15.061985969543457
    8. '(
' → logprob: -15.186985969543457
    9. '((' → logprob: -15.186985969543457
    10. '('' → logprob: -15.686985969543457

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021140782337170094
    2. ' )' → logprob: -9.125211715698242
    3. ')
' → logprob: -9.250211715698242
    4. '   ' → logprob: -12.625211715698242
    5. '       ' → logprob: -14.125211715698242
    6. '))' → logprob: -14.375211715698242
    7. ')
' → logprob: -14.375211715698242
    8. '`)' → logprob: -15.500211715698242
    9. ' )
' → logprob: -15.625211715698242
    10. ')))' → logprob: -15.750211715698242

Token 40: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06408333033323288
    2. '        
' → logprob: -3.8140833377838135
    3. '
' → logprob: -4.439083099365234
    4. '   ' → logprob: -5.064083099365234
    5. ')' → logprob: -5.314083099365234
    6. '<|end|>' → logprob: -5.314083099365234
    7. '    
' → logprob: -6.564083099365234
    8. '*' → logprob: -6.689083099365234
    9. ' except' → logprob: -6.814083099365234
    10. '<|end|>' → logprob: -6.939083099365234

Token 41: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.7492560744285583
    2. '
' → logprob: -1.6242561340332031
    3. '       ' → logprob: -2.124256134033203
    4. 'except' (adapté à ' except') → logprob: -2.374256134033203
    5. '   ' → logprob: -2.749256134033203
    6. '<|end|>' → logprob: -3.624256134033203
    7. '    
' → logprob: -4.624256134033203
    8. '        
' → logprob: -5.124256134033203
    9. '	except' → logprob: -5.374256134033203
    10. ',' → logprob: -6.499256134033203

Token 42: ' Exception' (ID: 6851)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.1304461508989334
    2. ':' → logprob: -3.380446195602417
    3. '	Value' → logprob: -3.380446195602417
    4. ' ' → logprob: -3.630446195602417
    5. '(Value' → logprob: -4.380445957183838
    6. 'Value' → logprob: -5.130445957183838
    7. ' Exception' → logprob: -5.630445957183838
    8. '  ' → logprob: -5.880445957183838
    9. '<Value' → logprob: -7.380445957183838
    10. '<|end|>' → logprob: -7.630445957183838

Token 43: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033722925931215286
    2. ' as' → logprob: -3.4087228775024414
    3. ':
' → logprob: -10.158722877502441
    4. 'as' → logprob: -10.533722877502441
    5. ' :' → logprob: -12.033722877502441
    6. '):' → logprob: -12.658722877502441
    7. ':**' → logprob: -14.158722877502441
    8. ',' → logprob: -14.283722877502441
    9. '	as' → logprob: -14.283722877502441
    10. '>:' → logprob: -16.533723831176758

Token 44: ' error' (ID: 2915)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8969731330871582
    2. ' ' → logprob: -1.2719731330871582
    3. 'rror' → logprob: -2.396973133087158
    4. ' x' → logprob: -2.521973133087158
    5. 'x' → logprob: -2.646973133087158
    6. ' None' → logprob: -4.146973133087158
    7. ' Exception' → logprob: -4.521973133087158
    8. ' :' → logprob: -4.646973133087158
    9. ' as' → logprob: -5.396973133087158
    10. ' e' → logprob: -5.646973133087158

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.2378600735682994e-05
    2. ':
' → logprob: -11.125032424926758
    3. '):' → logprob: -11.875032424926758
    4. ' as' → logprob: -12.250032424926758
    5. ',' → logprob: -13.125032424926758
    6. ':**' → logprob: -13.250032424926758
    7. ' :' → logprob: -13.875032424926758
    8. '       ' → logprob: -15.125032424926758
    9. ':return' → logprob: -15.375032424926758
    10. '   ' → logprob: -15.625032424926758

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2532961070537567
    2. ':' → logprob: -1.503296136856079
    3. '   ' → logprob: -8.0032958984375
    4. ' print' → logprob: -8.1282958984375
    5. ':
' → logprob: -8.1282958984375
    6. ',' → logprob: -9.3782958984375
    7. 'print' → logprob: -9.8782958984375
    8. ' :' → logprob: -9.8782958984375
    9. '):' → logprob: -10.0032958984375
    10. ' pass' → logprob: -10.1282958984375

Token 47: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07089848071336746
    2. 'print' (adapté à ' print') → logprob: -2.8208985328674316
    3. ' pass' → logprob: -5.320898532867432
    4. '       ' → logprob: -5.695898532867432
    5. '        ' → logprob: -8.695898056030273
    6. 'pass' → logprob: -9.070898056030273
    7. ' r' → logprob: -9.320898056030273
    8. '    ' → logprob: -9.445898056030273
    9. '   ' → logprob: -9.820898056030273
    10. ' raise' → logprob: -9.945898056030273

Token 48: '("' (ID: 568)
  Prédit: '(error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(error' → logprob: -0.6100410223007202
    2. '(' → logprob: -0.8600410223007202
    3. '('' → logprob: -3.6100411415100098
    4. '()' → logprob: -5.86004114151001
    5. '(f' → logprob: -6.61004114151001
    6. '("' → logprob: -6.73504114151001
    7. '(str' → logprob: -7.48504114151001
    8. '(type' → logprob: -8.610040664672852
    9. '("")' → logprob: -8.860040664672852
    10. '(re' → logprob: -9.985040664672852

Token 49: 'Erreur' (ID: 155968)
  Prédit: 'Invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.22032028436660767
    2. 'error' → logprob: -2.220320224761963
    3. 'invalid' → logprob: -2.595320224761963
    4. 'Error' → logprob: -5.345320224761963
    5. 'r' → logprob: -5.970320224761963
    6. ' invalid' → logprob: -6.720320224761963
    7. '"' → logprob: -6.845320224761963
    8. 'Please' → logprob: -6.970320224761963
    9. 'Input' → logprob: -7.095320224761963
    10. ' error' → logprob: -7.345320224761963

Token 50: ':",' (ID: 25704)
  Prédit: ' :",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :",' → logprob: -0.34676042199134827
    2. ':",' → logprob: -1.5967603921890259
    3. ':' → logprob: -2.8467605113983154
    4. ' :' → logprob: -3.4717605113983154
    5. ' ' → logprob: -7.346760272979736
    6. ' ' → logprob: -8.221760749816895
    7. ',' → logprob: -9.096760749816895
    8. ' :"' → logprob: -9.346760749816895
    9. ' ",' → logprob: -9.846760749816895
    10. '")' → logprob: -9.971760749816895

Token 51: ' error' (ID: 2915)
  Prédit: ' error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' error' → logprob: -0.14277590811252594
    2. 'error' → logprob: -2.0177760124206543
    3. ' str' → logprob: -10.142775535583496
    4. ' f' → logprob: -10.392775535583496
    5. ' ' → logprob: -11.892775535583496
    6. 'str' → logprob: -12.142775535583496
    7. '(error' → logprob: -12.642775535583496
    8. '"' → logprob: -12.892775535583496
    9. ')' → logprob: -13.017775535583496
    10. 'f' → logprob: -13.017775535583496

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016718693950679153
    2. ')
' → logprob: -8.750166893005371
    3. '   ' → logprob: -12.125166893005371
    4. ' )' → logprob: -13.250166893005371
    5. '       ' → logprob: -14.125166893005371
    6. '")' → logprob: -15.500166893005371
    7. '')' → logprob: -15.750166893005371
    8. '))' → logprob: -16.000167846679688
    9. ')
' → logprob: -16.000167846679688
    10. '`)' → logprob: -16.250167846679688

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006607305258512497
    2. 'else' → logprob: -8.25066089630127
    3. '    
' → logprob: -9.00066089630127
    4. '       ' → logprob: -9.00066089630127
    5. ' else' → logprob: -9.12566089630127
    6. '<|end|>' → logprob: -11.12566089630127
    7. '        
' → logprob: -12.37566089630127
    8. ')' → logprob: -12.37566089630127
    9. '```' → logprob: -12.37566089630127
    10. ',' → logprob: -12.50066089630127

Token 54: ' exit' (ID: 10654)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020753484219312668
    2. ' exit' → logprob: -4.770753383636475
    3. '       ' → logprob: -5.020753383636475
    4. ' else' → logprob: -6.270753383636475
    5. 'else' → logprob: -6.520753383636475
    6. 'exit' (adapté à ' exit') → logprob: -6.895753383636475
    7. '    
' → logprob: -7.770753383636475
    8. '        
' → logprob: -8.645753860473633
    9. '    ' → logprob: -9.395753860473633
    10. '	exit' → logprob: -9.770753860473633

Token 55: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008552397484891117
    2. '(' → logprob: -7.250855445861816
    3. '()
' → logprob: -8.875855445861816
    4. '()`' → logprob: -13.125855445861816
    5. ' ()' → logprob: -14.000855445861816
    6. '()

' → logprob: -14.375855445861816
    7. '()
' → logprob: -14.500855445861816
    8. '())' → logprob: -15.000855445861816
    9. '()\' → logprob: -15.000855445861816
    10. '();' → logprob: -15.750855445861816

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16033531725406647
    2. ')' → logprob: -1.9103353023529053
    3. '0' → logprob: -9.160335540771484
    4. ')
' → logprob: -13.035335540771484
    5. ' ' → logprob: -13.285335540771484
    6. ' )' → logprob: -13.910335540771484
    7. '))' → logprob: -14.410335540771484
    8. '(' → logprob: -14.535335540771484
    9. '()' → logprob: -16.910335540771484
    10. '')' → logprob: -17.285335540771484

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2246291337069124e-05
    2. ')
' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.875021934509277
    4. ' )' → logprob: -15.750021934509277
    5. '))' → logprob: -16.250022888183594
    6. '`)' → logprob: -16.875022888183594
    7. '')' → logprob: -17.375022888183594
    8. '）' → logprob: -18.250022888183594
    9. ')`' → logprob: -18.500022888183594
    10. '")' → logprob: -18.875022888183594

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2579602599143982
    2. '    
' → logprob: -2.132960319519043
    3. '
' → logprob: -2.257960319519043
    4. '  
' → logprob: -6.632960319519043
    5. '        
' → logprob: -7.132960319519043
    6. '   
' → logprob: -7.382960319519043
    7. ' 
' → logprob: -7.632960319519043
    8. '```' → logprob: -8.507960319519043
    9. '<|end|>' → logprob: -8.632960319519043
    10. '     
' → logprob: -9.257960319519043

Token 59: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7115803360939026
    2. '    
' → logprob: -1.0865802764892578
    3. '
' → logprob: -2.086580276489258
    4. ' 
' → logprob: -4.461580276489258
    5. 'result' → logprob: -4.711580276489258
    6. '   
' → logprob: -4.961580276489258
    7. '  
' → logprob: -5.086580276489258
    8. '     
' → logprob: -5.461580276489258
    9. ' result' → logprob: -5.961580276489258
    10. 'print' (adapté à ' print') → logprob: -6.461580276489258

Token 60: '(pow' (ID: 189160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08594023436307907
    2. '(square' → logprob: -2.83594012260437
    3. '(pow' → logprob: -4.210940361022949
    4. '(s' → logprob: -4.835940361022949
    5. '('' → logprob: -7.585940361022949
    6. '((' → logprob: -9.08594036102295
    7. '("' → logprob: -9.33594036102295
    8. '("("' → logprob: -9.71094036102295
    9. '(f' → logprob: -10.21094036102295
    10. ' (' → logprob: -10.46094036102295

Token 61: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31802138686180115
    2. '(r' → logprob: -1.3180214166641235
    3. '(s' → logprob: -5.443021297454834
    4. '(n' → logprob: -8.693021774291992
    5. '(square' → logprob: -8.693021774291992
    6. ')' → logprob: -9.693021774291992
    7. '(
' → logprob: -11.193021774291992
    8. ' (' → logprob: -12.818021774291992
    9. '(x' → logprob: -13.443021774291992
    10. '((' → logprob: -13.568021774291992

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011880126112373546
    2. ' ,' → logprob: -9.25011920928955
    3. '2' → logprob: -11.37511920928955
    4. ')' → logprob: -12.87511920928955
    5. ',r' → logprob: -12.87511920928955
    6. ',
' → logprob: -12.87511920928955
    7. ',n' → logprob: -13.75011920928955
    8. ',s' → logprob: -13.75011920928955
    9. ' ' → logprob: -15.12511920928955
    10. ',)' → logprob: -15.25011920928955

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015381926205009222
    2. ' ' → logprob: -6.501538276672363
    3. ')' → logprob: -11.376538276672363
    4. '   ' → logprob: -11.626538276672363
    5. '  ' → logprob: -12.126538276672363
    6. '    ' → logprob: -13.251538276672363
    7. '3' → logprob: -13.251538276672363
    8. 'square' → logprob: -13.376538276672363
    9. '4' → logprob: -14.251538276672363
    10. 's' → logprob: -14.501538276672363

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009126556105911732
    2. '))' → logprob: -7.000912666320801
    3. ')))' → logprob: -14.6259126663208
    4. ')
' → logprob: -14.8759126663208
    5. ' )' → logprob: -15.6259126663208
    6. ')}' → logprob: -16.750911712646484
    7. ')`' → logprob: -17.625911712646484
    8. '),' → logprob: -18.625911712646484
    9. ')**' → logprob: -18.750911712646484
    10. ')")' → logprob: -18.875911712646484

Token 65: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. '))' → logprob: -12.000009536743164
    3. ' )' → logprob: -13.000009536743164
    4. ')
' → logprob: -14.625009536743164
    5. ')`' → logprob: -16.375009536743164
    6. '`)' → logprob: -17.125009536743164
    7. ')))' → logprob: -17.250009536743164
    8. '   ' → logprob: -17.375009536743164
    9. ')**' → logprob: -18.375009536743164
    10. ' ' → logprob: -18.500009536743164

Token 66: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3022305965423584
    2. ' isinstance' → logprob: -1.5522305965423584
    3. ' hasattr' → logprob: -3.6772305965423584
    4. 'r' → logprob: -4.4272308349609375
    5. ' not' → logprob: -5.4272308349609375
    6. ' '' → logprob: -5.8022308349609375
    7. ' ' → logprob: -6.6772308349609375
    8. ''' → logprob: -7.5522308349609375
    9. ' __' → logprob: -7.5522308349609375
    10. ' type' → logprob: -7.8022308349609375

Token 67: '%' (ID: 4)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.3015836477279663
    2. '>=' → logprob: -1.3015836477279663
    3. '>' → logprob: -1.6765836477279663
    4. ' >' → logprob: -2.301583766937256
    5. ' else' → logprob: -2.426583766937256
    6. ' is' → logprob: -3.051583766937256
    7. 'else' → logprob: -3.801583766937256
    8. ' ' → logprob: -5.301583766937256
    9. '!=' → logprob: -7.051583766937256
    10. ' !=' → logprob: -7.301583766937256

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014253887347877026
    2. ' ' → logprob: -4.264254093170166
    3. '==' → logprob: -9.389253616333008
    4. '1' → logprob: -13.139253616333008
    5. '```' → logprob: -13.764253616333008
    6. '!=' → logprob: -14.014253616333008
    7. ' ==' → logprob: -14.264253616333008
    8. '=' → logprob: -14.639253616333008
    9. '!' → logprob: -14.764253616333008
    10. '0' → logprob: -15.264253616333008

Token 69: ' else' (ID: 1203)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.055372804403305054
    2. ' ==' → logprob: -2.930372714996338
    3. ' else' → logprob: -8.680373191833496
    4. ' ' → logprob: -8.805373191833496
    5. '0' → logprob: -9.180373191833496
    6. 'else' → logprob: -10.555373191833496
    7. '=' → logprob: -10.805373191833496
    8. '==
' → logprob: -12.180373191833496
    9. '!=' → logprob: -12.305373191833496
    10. ')' → logprob: -12.430373191833496

Token 70: ' square' (ID: 13749)
  Prédit: ' square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' square' → logprob: -0.031066015362739563
    2. 'square' → logprob: -3.5310659408569336
    3. ' pow' → logprob: -7.781065940856934
    4. ' r' → logprob: -8.156065940856934
    5. 'pow' → logprob: -8.906065940856934
    6. 's' → logprob: -8.906065940856934
    7. '(square' → logprob: -9.531065940856934
    8. ' ' → logprob: -10.156065940856934
    9. 'r' → logprob: -10.406065940856934
    10. ' s' → logprob: -10.406065940856934

Token 71: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.048605985939502716
    2. '(' → logprob: -3.0486059188842773
    3. ' (' → logprob: -11.798605918884277
    4. '(n' → logprob: -11.923605918884277
    5. '(
' → logprob: -12.923605918884277
    6. ')' → logprob: -13.423605918884277
    7. 'r' → logprob: -15.173605918884277
    8. '(

' → logprob: -15.798605918884277
    9. ' ' → logprob: -16.548606872558594
    10. ' )' → logprob: -17.548606872558594

Token 72: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25203627347946167
    2. ')' → logprob: -1.5020363330841064
    3. ')))' → logprob: -9.627036094665527
    4. ' ))' → logprob: -10.752036094665527
    5. ' )' → logprob: -11.752036094665527
    6. '))
' → logprob: -12.627036094665527
    7. '   ' → logprob: -13.252036094665527
    8. ')}' → logprob: -13.252036094665527
    9. ' ' → logprob: -13.627036094665527
    10. ')
' → logprob: -13.752036094665527


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 32.86%
Précision adaptée (1ère position): 32.86%
Précision (top 10): 80.00%
================================================================================
