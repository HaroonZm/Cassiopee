================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def set_recursion_limit():
    sys.setrecursionlimit(10**8)

def get_input_function():
    return sys.stdin.readline

def read_n(input_func):
    return int(input_func())

def read_c(input_func):
    return list(map(int, input_func().split()))

def read_ab(input_func, n):
    return [tuple(map(int, input_func().split())) for _ in range(n-1)]

def build_empty_graph(n):
    return [[] for _ in range(n)]

def build_graph_edges(es, AB):
    for a, b in AB:
        append_edge(es, a-1, b-1)

def append_edge(es, a, b):
    es[a].append(b)
    es[b].append(a)

def build_color_nodes(cs, C):
    for i, c in enumerate(C):
        assign_color_node(cs, c-1, i)

def assign_color_node(cs, color, i):
    cs[color].append(i)

def prepare_tin_tout(N):
    return ([-1]*N, [-1]*N)

def prepare_k():
    return [0]

def run_dfs(N, es, tin, tout, k_holder):
    dfs(0, -1, es, tin, tout, k_holder)

def dfs(v, p, es, tin, tout, k_holder):
    mark_tin(tin, v, k_holder)
    increase_k(k_holder)
    for to in es[v]:
        if is_parent(to, p): continue
        dfs(to, v, es, tin, tout, k_holder)
    mark_tout(tout, v, k_holder)

def mark_tin(tin, v, k_holder):
    tin[v] = k_holder[0]

def increase_k(k_holder):
    k_holder[0] += 1

def is_parent(to, p):
    return to == p

def mark_tout(tout, v, k_holder):
    tout[v] = k_holder[0]

class BinaryIndexedTree:
    def __init__(self, size):
        self.N = size
        self.bit = [0]*(size+1)

    def add(self, x, w):
        x += 1
        while x <= self.N:
            self.bit[x] += w
            x += (x & -x)

    def _sum(self, x):
        ret = 0
        while x > 0:
            ret += self.bit[x]
            x -= (x & -x)
        return ret

    def sum(self, l, r):
        return self._sum(r) - self._sum(l)

    def __str__(self):
        arr = [self.sum(i, i+1) for i in range(self.N)]
        return str(arr)

def init_bit(tree, N):
    for i in range(N):
        tree.add(i, 1)

def get_whole(N):
    return N*(N+1)//2

def sort_color_nodes(cs, i, tin):
    cs[i].sort(key=lambda x: -tin[x])

def calc_components(cs, i, es, tin, tout, bit, N):
    ans = get_whole(N)
    sort_color_nodes(cs, i, tin)
    history = []
    for v in cs[i]:
        cnt, hlist = process_vertex_components(v, es, tin, tout, bit)
        ans, history = subtract_components(ans, v, cnt, es, tin, tout, bit, history, hlist)
    pn, ans = handle_remaining_subtree(bit, N, ans)
    restore_bit_state(bit, history)
    return ans

def process_vertex_components(v, es, tin, tout, bit):
    cnt = 1
    hlist = []
    for to in es[v]:
        if tin[to] < tin[v]: continue
        num = bit.sum(tin[to], tout[to])
        hlist.append(num)
    return cnt, hlist

def subtract_components(ans, v, cnt, es, tin, tout, bit, history, hlist):
    cnt_local = cnt
    for ind, to in enumerate(es[v]):
        if tin[to] < tin[v]: continue
        num = hlist[ind]
        ans -= num*(num+1)//2
        cnt_local += num
    bit.add(tin[v], -cnt_local)
    history.append((tin[v], cnt_local))
    return ans, history

def handle_remaining_subtree(bit, N, ans):
    pn = bit.sum(0, N)
    ans -= pn*(pn+1)//2
    return pn, ans

def restore_bit_state(bit, history):
    for a, b in history:
        bit.add(a, b)

def solve_all(N, cs, es, tin, tout, bit):
    result = []
    for i in range(N):
        r = solve_for_color(cs, i, es, tin, tout, bit, N)
        result.append(r)
    return result

def solve_for_color(cs, i, es, tin, tout, bit, N):
    ans = get_whole(N)
    cs[i].sort(key=lambda x: -tin[x])
    history = []
    for v in cs[i]:
        cnt = 1
        for to in es[v]:
            if tin[to] < tin[v]:
                continue
            num = bit.sum(tin[to], tout[to])
            ans -= num*(num+1)//2
            cnt += num
        bit.add(tin[v], -cnt)
        history.append((tin[v], cnt))
    pn = bit.sum(0, N)
    ans -= pn*(pn+1)//2
    for a, b in history:
        bit.add(a, b)
    return ans

def print_result(anss):
    print(*anss, sep='\n')

def main():
    set_recursion_limit()
    input_func = get_input_function()
    N = read_n(input_func)
    C = read_c(input_func)
    AB = read_ab(input_func, N)
    es = build_empty_graph(N)
    build_graph_edges(es, AB)
    cs = build_empty_graph(N)
    build_color_nodes(cs, C)
    tin, tout = prepare_tin_tout(N)
    k_holder = prepare_k()
    run_dfs(N, es, tin, tout, k_holder)
    bit = BinaryIndexedTree(N)
    init_bit(bit, N)
    anss = solve_all(N, cs, es, tin, tout, bit)
    print_result(anss)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01368186715990305
    2. ' ' → logprob: -6.013681888580322
    3. ' main' → logprob: -6.263681888580322
    4. ' process' → logprob: -6.388681888580322
    5. '<|end|>' → logprob: -6.888681888580322
    6. ' space' → logprob: -7.138681888580322
    7. '  ' → logprob: -7.263681888580322
    8. ' a' → logprob: -7.513681888580322
    9. ' def' → logprob: -7.513681888580322
    10. '```' → logprob: -7.763681888580322

Token 5: '_rec' (ID: 35314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.045359645038843155
    2. ' _' → logprob: -4.2953596115112305
    3. 'attr' → logprob: -5.1703596115112305
    4. '_up' → logprob: -5.1703596115112305
    5. 'uptools' → logprob: -5.2953596115112305
    6. 'up' → logprob: -6.7953596115112305
    7. '_default' → logprob: -7.1703596115112305
    8. '_name' → logprob: -7.1703596115112305
    9. '_user' → logprob: -7.2953596115112305
    10. '_version' → logprob: -7.4203596115112305

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.04936492070555687
    2. '_' → logprob: -3.1743648052215576
    3. 'ursive' → logprob: -5.424365043640137
    4. 't' → logprob: -7.049365043640137
    5. 'urs' → logprob: -8.549365043640137
    6. '```' → logprob: -8.549365043640137
    7. 'ursor' → logprob: -9.424365043640137
    8. 'ur' → logprob: -9.674365043640137
    9. 'u' → logprob: -9.799365043640137
    10. '__' → logprob: -9.924365043640137

Token 7: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00080188421998173
    2. '_depth' → logprob: -7.250802040100098
    3. '_limits' → logprob: -9.875802040100098
    4. '_' → logprob: -10.625802040100098
    5. ' _' → logprob: -11.875802040100098
    6. '_lim' → logprob: -12.625802040100098
    7. '_stack' → logprob: -12.875802040100098
    8. 'limit' → logprob: -13.500802040100098
    9. '_max' → logprob: -14.750802040100098
    10. '_li' → logprob: -14.750802040100098

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006162108853459358
    2. '_' → logprob: -5.131162166595459
    3. ' (' → logprob: -9.1311616897583
    4. ':' → logprob: -10.5061616897583
    5. '(_' → logprob: -10.5061616897583
    6. '```' → logprob: -11.7561616897583
    7. '(:' → logprob: -11.8811616897583
    8. '('' → logprob: -12.2561616897583
    9. '_(' → logprob: -12.3811616897583
    10. '_:' → logprob: -12.6311616897583

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0631689801812172
    2. '(' → logprob: -2.938169002532959
    3. ':' → logprob: -5.563169002532959
    4. '    ' → logprob: -6.938169002532959
    5. '```' → logprob: -7.063169002532959
    6. '(sys' → logprob: -7.188169002532959
    7. '():' → logprob: -7.438169002532959
    8. ' (' → logprob: -8.1881685256958
    9. ' ' → logprob: -8.9381685256958
    10. '    
' → logprob: -9.0631685256958

Token 10: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7615569829940796
    2. 'sys' (adapté à ' sys') → logprob: -1.5115569829940796
    3. ' sys' → logprob: -1.7615569829940796
    4. 'import' → logprob: -2.011557102203369
    5. ' import' → logprob: -5.136557102203369
    6. ' ' → logprob: -7.761557102203369
    7. 'pass' → logprob: -8.511556625366211
    8. 'try' → logprob: -8.636556625366211
    9. '  ' → logprob: -9.511556625366211
    10. '```' → logprob: -9.886556625366211

Token 11: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002521680435165763
    2. '.set' → logprob: -6.252521514892578
    3. '.setdefault' → logprob: -7.627521514892578
    4. ' .' → logprob: -10.002521514892578
    5. '.argv' → logprob: -10.877521514892578
    6. '.exit' → logprob: -10.877521514892578
    7. '.max' → logprob: -12.627521514892578
    8. '.stdout' → logprob: -12.752521514892578
    9. '.stdin' → logprob: -13.002521514892578
    10. '.stderr' → logprob: -13.002521514892578

Token 12: 'rec' (ID: 9285)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.6544338464736938
    2. ' _' → logprob: -1.2794338464736938
    3. '_' → logprob: -2.2794337272644043
    4. '_limit' → logprob: -3.1544337272644043
    5. 'ursion' → logprob: -4.279433727264404
    6. 'rec' → logprob: -4.779433727264404
    7. '_max' → logprob: -4.779433727264404
    8. '_depth' → logprob: -5.529433727264404
    9. '   ' → logprob: -5.654433727264404
    10. ' recursion' → logprob: -5.654433727264404

Token 13: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0007883060025051236
    2. '_' → logprob: -7.87578821182251
    3. 'urs' → logprob: -8.750788688659668
    4. 'ursive' → logprob: -9.000788688659668
    5. '_limit' → logprob: -10.125788688659668
    6. 'ur' → logprob: -10.125788688659668
    7. 'u' → logprob: -11.000788688659668
    8. '__' → logprob: -11.125788688659668
    9. '```' → logprob: -12.875788688659668
    10. 'limit' → logprob: -13.000788688659668

Token 14: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00015062130114529282
    2. 'limit' → logprob: -9.125150680541992
    3. '_depth' → logprob: -10.750150680541992
    4. '_' → logprob: -11.000150680541992
    5. '_lim' → logprob: -13.250150680541992
    6. '_li' → logprob: -14.250150680541992
    7. '_limits' → logprob: -15.625150680541992
    8. '_LIMIT' → logprob: -15.750150680541992
    9. '_max' → logprob: -15.875150680541992
    10. ' _' → logprob: -16.000150680541992

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.023293538717553e-05
    2. '(
' → logprob: -11.500030517578125
    3. '((' → logprob: -12.125030517578125
    4. '("("' → logprob: -12.250030517578125
    5. '(

' → logprob: -12.750030517578125
    6. ' (' → logprob: -13.750030517578125
    7. '('' → logprob: -14.000030517578125
    8. '(()' → logprob: -14.250030517578125
    9. '(**' → logprob: -14.375030517578125
    10. '(`' → logprob: -14.500030517578125

Token 16: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1300269365310669
    2. '10' → logprob: -2.1300268173217773
    3. '300' → logprob: -6.005026817321777
    4. '150' → logprob: -7.630026817321777
    5. '250' → logprob: -9.880026817321777
    6. '500' → logprob: -10.130026817321777
    7. '200' → logprob: -10.630026817321777
    8. ' ' → logprob: -11.630026817321777
    9. '   ' → logprob: -11.630026817321777
    10. '(' → logprob: -13.005026817321777

Token 17: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.25515979528427124
    2. '00' → logprob: -1.505159854888916
    3. '0' → logprob: -5.755159854888916
    4. '**' → logprob: -9.880159378051758
    5. '4' → logprob: -12.505159378051758
    6. '6' → logprob: -13.505159378051758
    7. ')' → logprob: -14.505159378051758
    8. '```' → logprob: -14.880159378051758
    9. '007' → logprob: -15.005159378051758
    10. '2' → logprob: -15.005159378051758

Token 18: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.018308909609913826
    2. '6' → logprob: -4.018309116363525
    3. '8' → logprob: -8.893308639526367
    4. '9' → logprob: -10.768308639526367
    5. '5' → logprob: -14.893308639526367
    6. '```' → logprob: -15.768308639526367
    7. '}' → logprob: -15.893308639526367
    8. ')' → logprob: -17.018308639526367
    9. ' ' → logprob: -17.018308639526367
    10. '4' → logprob: -17.393308639526367

Token 19: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.500001907348633
    3. ' )' → logprob: -14.750001907348633
    4. '))' → logprob: -15.750001907348633
    5. '   ' → logprob: -16.000001907348633
    6. ' ' → logprob: -16.500001907348633
    7. '`)' → logprob: -17.125001907348633
    8. '）' → logprob: -17.875001907348633
    9. ')))' → logprob: -18.000001907348633
    10. ')

' → logprob: -18.125001907348633

Token 20: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7238336801528931
    2. ')' → logprob: -1.223833680152893
    3. '
' → logprob: -1.723833680152893
    4. '()' → logprob: -4.3488335609436035
    5. '' → logprob: -4.8488335609436035
    6. '(
' → logprob: -5.3488335609436035
    7. '

' → logprob: -5.8488335609436035
    8. '<|end|>' → logprob: -5.8488335609436035
    9. '#' → logprob: -6.0988335609436035
    10. '\n' → logprob: -6.2238335609436035

Token 21: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07659085839986801
    2. ' set' → logprob: -4.0765910148620605
    3. ' calculate' → logprob: -4.0765910148620605
    4. ' my' → logprob: -4.0765910148620605
    5. ' space' → logprob: -4.5765910148620605
    6. ' factorial' → logprob: -5.9515910148620605
    7. ' compute' → logprob: -6.0765910148620605
    8. ' process' → logprob: -7.0765910148620605
    9. ' test' → logprob: -7.2015910148620605
    10. ' solve' → logprob: -7.3265910148620605

Token 22: '_input' (ID: 12507)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.08247336745262146
    2. '_max' → logprob: -3.2074732780456543
    3. '_' → logprob: -4.457473278045654
    4. '_re' → logprob: -4.582473278045654
    5. ' _' → logprob: -4.832473278045654
    6. 'rec' → logprob: -6.332473278045654
    7. '_depth' → logprob: -6.582473278045654
    8. '_recursive' → logprob: -6.707473278045654
    9. 'max' → logprob: -7.707473278045654
    10. '_system' → logprob: -7.707473278045654

Token 23: '_function' (ID: 21094)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08974398672580719
    2. '()' → logprob: -2.9647440910339355
    3. '(' → logprob: -3.4647440910339355
    4. '_' → logprob: -7.7147440910339355
    5. '(prompt' → logprob: -7.8397440910339355
    6. '```' → logprob: -8.339743614196777
    7. '_parent' → logprob: -8.464743614196777
    8. '_input' → logprob: -8.464743614196777
    9. '():
' → logprob: -8.464743614196777
    10. '_data' → logprob: -9.339743614196777

Token 24: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.943783253314905e-05
    2. ' ():' → logprob: -10.000059127807617
    3. '():
' → logprob: -11.875059127807617
    4. '()' → logprob: -12.625059127807617
    5. '(' → logprob: -12.875059127807617
    6. '):' → logprob: -15.375059127807617
    7. ':' → logprob: -15.750059127807617
    8. '():
' → logprob: -16.250059127807617
    9. '(:' → logprob: -16.500059127807617
    10. '(()' → logprob: -16.625059127807617

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011236322112381458
    2. '    ' → logprob: -5.261236190795898
    3. '    
' → logprob: -6.511236190795898
    4. ' return' → logprob: -6.636236190795898
    5. '       ' → logprob: -7.011236190795898
    6. '(' → logprob: -7.636236190795898
    7. '\' → logprob: -7.886236190795898
    8. '```' → logprob: -8.011236190795898
    9. ' ' → logprob: -8.136236190795898
    10. ' 
' → logprob: -9.136236190795898

Token 26: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07680373638868332
    2. '   ' → logprob: -2.701803684234619
    3. 'return' (adapté à ' return') → logprob: -5.201803684234619
    4. ' def' → logprob: -8.076804161071777
    5. ' try' → logprob: -8.201804161071777
    6. ' import' → logprob: -8.451804161071777
    7. '```' → logprob: -8.576804161071777
    8. '    ' → logprob: -9.576804161071777
    9. ' ' → logprob: -9.951804161071777
    10. 'import' → logprob: -10.076804161071777

Token 27: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.002899974351748824
    2. 'input' → logprob: -6.127900123596191
    3. ' sys' → logprob: -7.252900123596191
    4. ' ' → logprob: -13.127900123596191
    5. ' raw' → logprob: -13.377900123596191
    6. 'sys' → logprob: -13.752900123596191
    7. ' lambda' → logprob: -14.127900123596191
    8. ' int' → logprob: -14.752900123596191
    9. '	input' → logprob: -15.252900123596191
    10. '   ' → logprob: -15.877900123596191

Token 28: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.16457292437553406
    2. '.' → logprob: -1.9145729541778564
    3. '.readline' → logprob: -6.289572715759277
    4. '.stdout' → logprob: -6.539572715759277
    5. ' .' → logprob: -7.664572715759277
    6. '.argv' → logprob: -8.664572715759277
    7. '.std' → logprob: -8.789572715759277
    8. '.input' → logprob: -9.414572715759277
    9. '.get' → logprob: -10.789572715759277
    10. '.read' → logprob: -10.914572715759277

Token 29: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.028581563383340836
    2. '.' → logprob: -3.7785816192626953
    3. '.read' → logprob: -5.278581619262695
    4. '<|end|>' → logprob: -9.653581619262695
    5. 'read' → logprob: -9.778581619262695
    6. '.readlines' → logprob: -10.653581619262695
    7. '```' → logprob: -11.403581619262695
    8. '.write' → logprob: -11.403581619262695
    9. ' readline' → logprob: -11.528581619262695
    10. '.get' → logprob: -11.653581619262695

Token 30: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3696918487548828
    2. '
' → logprob: -1.4946918487548828
    3. '()
' → logprob: -3.494691848754883
    4. '(' → logprob: -3.744691848754883
    5. '\n' → logprob: -4.369691848754883
    6. '(
' → logprob: -5.244691848754883
    7. '()

' → logprob: -5.369691848754883
    8. '

' → logprob: -5.619691848754883
    9. '<|end|>' → logprob: -6.494691848754883
    10. 'newline' → logprob: -7.244691848754883

Token 31: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.028225958347320557
    2. ' solve' → logprob: -3.778225898742676
    3. ' factorial' → logprob: -5.528225898742676
    4. ' process' → logprob: -8.028225898742676
    5. 'main' → logprob: -8.653225898742676
    6. ' calculate' → logprob: -9.153225898742676
    7. ' parse' → logprob: -9.528225898742676
    8. ' read' → logprob: -10.153225898742676
    9. 'solve' → logprob: -10.153225898742676
    10. ' compute' → logprob: -10.153225898742676

Token 33: '_n' (ID: 2170)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.049413491040468216
    2. 'line' → logprob: -3.2994134426116943
    3. '()' → logprob: -4.549413681030273
    4. 'Line' → logprob: -8.049413681030273
    5. '_input' → logprob: -8.424413681030273
    6. '_' → logprob: -9.299413681030273
    7. '_LINE' → logprob: -10.549413681030273
    8. 'ine' → logprob: -11.174413681030273
    9. ' ()' → logprob: -11.424413681030273
    10. '(' → logprob: -11.674413681030273

Token 34: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4123525321483612
    2. 'umber' → logprob: -1.6623525619506836
    3. 'um' → logprob: -2.7873525619506836
    4. '_' → logprob: -3.1623525619506836
    5. 'ame' → logprob: -3.2873525619506836
    6. 'ames' → logprob: -5.662352561950684
    7. 'umbers' → logprob: -6.537352561950684
    8. 'ext' → logprob: -8.287352561950684
    9. '(' → logprob: -8.287352561950684
    10. 'a' → logprob: -8.412352561950684

Token 35: '_func' (ID: 22252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40813693404197693
    2. '_function' → logprob: -1.5331369638442993
    3. '_' → logprob: -3.0331368446350098
    4. '_line' → logprob: -3.4081368446350098
    5. '_func' → logprob: -3.5331368446350098
    6. ')_' → logprob: -5.78313684463501
    7. '_)' → logprob: -5.90813684463501
    8. '())' → logprob: -7.40813684463501
    9. '):' → logprob: -7.78313684463501
    10. '(' → logprob: -7.90813684463501

Token 36: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8989093899726868
    2. '):' → logprob: -1.023909330368042
    3. '()' → logprob: -1.648909330368042
    4. '())' → logprob: -3.773909330368042
    5. '():' → logprob: -4.023909568786621
    6. '(' → logprob: -8.148909568786621
    7. '_line' → logprob: -9.398909568786621
    8. '_' → logprob: -10.148909568786621
    9. ' )' → logprob: -10.273909568786621
    10. ' ):' → logprob: -10.273909568786621

Token 37: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10217659175395966
    2. '   ' → logprob: -3.4771766662597656
    3. '()' → logprob: -3.6021766662597656
    4. '(n' → logprob: -3.9771766662597656
    5. '(' → logprob: -4.602176666259766
    6. '():
' → logprob: -5.227176666259766
    7. ' ():' → logprob: -5.852176666259766
    8. '(int' → logprob: -7.352176666259766
    9. ' ()' → logprob: -8.102176666259766
    10. 'int' → logprob: -8.102176666259766

Token 38: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.26854583621025085
    2. ' int' → logprob: -1.5185458660125732
    3. '   ' → logprob: -4.268545627593994
    4. '(int' → logprob: -6.893545627593994
    5. 'n' → logprob: -7.268545627593994
    6. ' n' → logprob: -7.393545627593994
    7. ' return' → logprob: -9.393546104431152
    8. 'return' (adapté à ' return') → logprob: -10.643546104431152
    9. '=int' → logprob: -11.018546104431152
    10. ':int' → logprob: -11.893546104431152

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.012530959211289883
    2. 'int' → logprob: -4.38753080368042
    3. '(int' → logprob: -11.387531280517578
    4. ' input' → logprob: -11.887531280517578
    5. ' ' → logprob: -13.887531280517578
    6. '   ' → logprob: -14.137531280517578
    7. ' in' → logprob: -14.762531280517578
    8. 'input' → logprob: -15.137531280517578
    9. '  ' → logprob: -15.387531280517578
    10. ' (' → logprob: -16.137531280517578

Token 40: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22559356689453125
    2. '(input' → logprob: -1.6005935668945312
    3. '(read' → logprob: -8.975593566894531
    4. '(
' → logprob: -11.350593566894531
    5. '((' → logprob: -11.600593566894531
    6. '(next' → logprob: -11.975593566894531
    7. ' (' → logprob: -12.225593566894531
    8. '(

' → logprob: -12.475593566894531
    9. 'input' → logprob: -12.975593566894531
    10. '('' → logprob: -13.225593566894531

Token 41: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00028302724240347743
    2. 'func' → logprob: -9.750283241271973
    3. '_' → logprob: -10.000283241271973
    4. '(' → logprob: -10.375283241271973
    5. '_FUNC' → logprob: -10.375283241271973
    6. '(func' → logprob: -10.500283241271973
    7. ')' → logprob: -10.625283241271973
    8. '_function' → logprob: -11.500283241271973
    9. '_funcs' → logprob: -11.875283241271973
    10. 'f' → logprob: -12.000283241271973

Token 42: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.19276127219200134
    2. '().' → logprob: -1.9427613019943237
    3. '()' → logprob: -3.442761182785034
    4. ' ())' → logprob: -11.692761421203613
    5. '()))' → logprob: -11.817761421203613
    6. '(' → logprob: -11.817761421203613
    7. '()
' → logprob: -12.692761421203613
    8. ')' → logprob: -13.192761421203613
    9. '()`' → logprob: -13.442761421203613
    10. '();)' → logprob: -13.567761421203613

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025773211382329464
    2. '
' → logprob: -6.752577304840088
    3. '<|end|>' → logprob: -7.377577304840088
    4. '\' → logprob: -7.627577304840088
    5. '

' → logprob: -9.127577781677246
    6. '\n' → logprob: -9.877577781677246
    7. '#' → logprob: -9.877577781677246
    8. '```' → logprob: -10.502577781677246
    9. '<|end|>' → logprob: -11.002577781677246
    10. ' def' → logprob: -11.127577781677246

Token 44: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.12132773548364639
    2. ' main' → logprob: -2.2463276386260986
    3. 'read' → logprob: -5.496327877044678
    4. ' solve' → logprob: -6.371327877044678
    5. ' process' → logprob: -6.496327877044678
    6. ' def' → logprob: -7.496327877044678
    7. ' write' → logprob: -8.62132740020752
    8. 'main' → logprob: -9.24632740020752
    9. ' parse' → logprob: -9.49632740020752
    10. ' run' → logprob: -9.74632740020752

Token 45: '_c' (ID: 1303)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.3197801113128662
    2. '_array' → logprob: -2.069780111312866
    3. '_line' → logprob: -2.194780111312866
    4. '_' → logprob: -4.194780349731445
    5. '_int' → logprob: -4.944780349731445
    6. '_n' → logprob: -5.819780349731445
    7. '_lines' → logprob: -6.444780349731445
    8. '_tuple' → logprob: -6.444780349731445
    9. '_s' → logprob: -6.694780349731445
    10. '_lst' → logprob: -6.944780349731445

Token 46: '(input' (ID: 10054)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.11950194090604782
    2. '()' → logprob: -3.619501829147339
    3. '_' → logprob: -3.744501829147339
    4. 'har' → logprob: -4.244502067565918
    5. '_list' → logprob: -4.994502067565918
    6. 'h' → logprob: -5.369502067565918
    7. '(' → logprob: -5.619502067565918
    8. '(input' → logprob: -5.619502067565918
    9. '_array' → logprob: -6.119502067565918
    10. 'ont' → logprob: -6.244502067565918

Token 47: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -8.125210297293961e-05
    2. 'func' → logprob: -10.000081062316895
    3. '_' → logprob: -11.375081062316895
    4. '_function' → logprob: -11.500081062316895
    5. '_FUNC' → logprob: -12.250081062316895
    6. '_f' → logprob: -12.750081062316895
    7. '_fun' → logprob: -13.000081062316895
    8. '_funcs' → logprob: -13.250081062316895
    9. ')' → logprob: -14.125081062316895
    10. 'Func' → logprob: -14.875081062316895

Token 48: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932674646377563
    2. '):' → logprob: -0.6932674646377563
    3. '):
' → logprob: -9.568267822265625
    4. ' ):' → logprob: -10.818267822265625
    5. ' )' → logprob: -11.568267822265625
    6. '()' → logprob: -11.568267822265625
    7. '):

' → logprob: -13.193267822265625
    8. '())' → logprob: -13.318267822265625
    9. '_' → logprob: -13.568267822265625
    10. '():' → logprob: -13.943267822265625

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7694690823554993
    2. '():' → logprob: -1.1444690227508545
    3. 'return' → logprob: -2.0194690227508545
    4. '()' → logprob: -2.8944690227508545
    5. ')' → logprob: -5.144469261169434
    6. '):' → logprob: -5.269469261169434
    7. 'def' → logprob: -5.269469261169434
    8. ' return' → logprob: -6.019469261169434
    9. '().' → logprob: -6.394469261169434
    10. 'input' → logprob: -6.644469261169434

Token 50: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7303909659385681
    2. '   ' → logprob: -1.355391025543213
    3. ' return' → logprob: -1.355391025543213
    4. 'input' → logprob: -6.855391025543213
    5. 'def' → logprob: -7.730391025543213
    6. 'c' → logprob: -8.105390548706055
    7. ' input' → logprob: -8.105390548706055
    8. 'int' → logprob: -8.605390548706055
    9. ' c' → logprob: -9.730390548706055
    10. 's' → logprob: -10.605390548706055

Token 51: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5048722624778748
    2. 'int' → logprob: -1.2548723220825195
    3. ' input' → logprob: -2.6298723220825195
    4. 'list' → logprob: -3.8798723220825195
    5. ' int' → logprob: -4.8798723220825195
    6. 'str' → logprob: -5.3798723220825195
    7. ' list' → logprob: -6.1298723220825195
    8. 'chr' → logprob: -7.0048723220825195
    9. ' str' → logprob: -7.5048723220825195
    10. 'float' → logprob: -7.6298723220825195

Token 52: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.20370733737945557
    2. '(input' → logprob: -2.328707218170166
    3. '(' → logprob: -2.453707218170166
    4. '(eval' → logprob: -7.703707218170166
    5. '(int' → logprob: -8.328707695007324
    6. '_map' → logprob: -9.453707695007324
    7. '(_' → logprob: -10.078707695007324
    8. '(filter' → logprob: -10.703707695007324
    9. 'map' → logprob: -11.328707695007324
    10. '((' → logprob: -11.328707695007324

Token 53: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010867553064599633
    2. '(' → logprob: -6.876086711883545
    3. '(str' → logprob: -10.626087188720703
    4. 'int' → logprob: -12.001087188720703
    5. ',int' → logprob: -12.251087188720703
    6. '(
' → logprob: -12.376087188720703
    7. ')' → logprob: -12.376087188720703
    8. '(lambda' → logprob: -12.501087188720703
    9. ' (' → logprob: -13.251087188720703
    10. '<int' → logprob: -13.751087188720703

Token 54: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.19203458726406097
    2. '(' → logprob: -2.6920344829559326
    3. ',input' → logprob: -2.8170344829559326
    4. ',' → logprob: -3.0670344829559326
    5. ' (' → logprob: -8.192034721374512
    6. 'input' → logprob: -9.567034721374512
    7. ')' → logprob: -9.567034721374512
    8. ' ,' → logprob: -9.942034721374512
    9. '(
' → logprob: -10.067034721374512
    10. '),' → logprob: -10.942034721374512

Token 55: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3488468527793884
    2. ' input' → logprob: -1.2238469123840332
    3. '(input' → logprob: -8.348846435546875
    4. ',input' → logprob: -9.098846435546875
    5. '	input' → logprob: -10.348846435546875
    6. '=input' → logprob: -11.473846435546875
    7. '   ' → logprob: -12.973846435546875
    8. '[input' → logprob: -13.098846435546875
    9. '<input' → logprob: -13.473846435546875
    10. ' ' → logprob: -13.473846435546875

Token 56: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -3.5954712075181305e-05
    2. '_function' → logprob: -11.125036239624023
    3. 'func' → logprob: -11.500036239624023
    4. '_' → logprob: -12.000036239624023
    5. '_FUNC' → logprob: -14.000036239624023
    6. '(' → logprob: -14.250036239624023
    7. '_fun' → logprob: -14.625036239624023
    8. '_f' → logprob: -14.875036239624023
    9. 'Func' → logprob: -15.125036239624023
    10. '   ' → logprob: -15.250036239624023

Token 57: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.751746746478602e-05
    2. '()' → logprob: -10.12504768371582
    3. ' ().' → logprob: -12.37504768371582
    4. '()))' → logprob: -13.87504768371582
    5. ')' → logprob: -14.00004768371582
    6. ' ' → logprob: -15.25004768371582
    7. '.strip' → logprob: -15.62504768371582
    8. '())' → logprob: -15.62504768371582
    9. '.' → logprob: -15.75004768371582
    10. '())))' → logprob: -16.00004768371582

Token 58: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5782436728477478
    2. 'strip' → logprob: -0.8282436728477478
    3. 'rstrip' → logprob: -6.078243732452393
    4. ' split' → logprob: -11.953243255615234
    5. ' strip' → logprob: -12.953243255615234
    6. '(split' → logprob: -15.203243255615234
    7. 'spl' → logprob: -15.703243255615234
    8. '.strip' → logprob: -16.828243255615234
    9. ' ' → logprob: -17.203243255615234
    10. '(strip' → logprob: -17.453243255615234

Token 59: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0090725626796484
    2. '))' → logprob: -4.884072780609131
    3. '()' → logprob: -6.759072780609131
    4. '())' → logprob: -8.259072303771973
    5. '()))
' → logprob: -10.759072303771973
    6. '(' → logprob: -11.009072303771973
    7. '())))' → logprob: -12.509072303771973
    8. '()));' → logprob: -13.509072303771973
    9. '()))

' → logprob: -14.259072303771973
    10. ')' → logprob: -14.509072303771973

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4524129033088684
    2. '<|end|>' → logprob: -1.0774128437042236
    3. '<|end|>' → logprob: -4.702413082122803
    4. '```' → logprob: -4.827413082122803
    5. '#' → logprob: -6.077413082122803
    6. '
' → logprob: -6.702413082122803
    7. '\n' → logprob: -6.827413082122803
    8. '\' → logprob: -6.827413082122803
    9. '``' → logprob: -9.077412605285645
    10. '

' → logprob: -9.577412605285645

Token 61: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3511679470539093
    2. 'main' → logprob: -2.101167917251587
    3. ' solve' → logprob: -3.101167917251587
    4. 'solve' → logprob: -3.351167917251587
    5. ' read' → logprob: -3.476167917251587
    6. 'read' → logprob: -3.601167917251587
    7. ' count' → logprob: -4.851168155670166
    8. 'count' → logprob: -5.351168155670166
    9. ' max' → logprob: -5.726168155670166
    10. 'binary' → logprob: -6.226168155670166

Token 62: '_ab' (ID: 53632)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.0046064853668213
    2. '_t' → logprob: -2.0046064853668213
    3. '_q' → logprob: -2.5046064853668213
    4. '_a' → logprob: -2.6296064853668213
    5. '_k' → logprob: -2.6296064853668213
    6. '_s' → logprob: -2.8796064853668213
    7. '_v' → logprob: -3.2546064853668213
    8. '_c' → logprob: -3.3796064853668213
    9. '_n' → logprob: -4.129606246948242
    10. '_l' → logprob: -4.379606246948242

Token 63: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010529637336730957
    2. '(' → logprob: -5.010529518127441
    3. '_' → logprob: -5.885529518127441
    4. 's' → logprob: -8.385529518127441
    5. '_s' → logprob: -8.760529518127441
    6. '_(' → logprob: -9.010529518127441
    7. '```' → logprob: -9.010529518127441
    8. '=input' → logprob: -9.260529518127441
    9. '_input' → logprob: -10.010529518127441
    10. '(_' → logprob: -10.010529518127441

Token 64: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0005923516000621021
    2. 'func' → logprob: -7.500592231750488
    3. '_function' → logprob: -10.375592231750488
    4. '_funcs' → logprob: -12.625592231750488
    5. '```' → logprob: -13.625592231750488
    6. '_FUNC' → logprob: -13.750592231750488
    7. '(func' → logprob: -14.250592231750488
    8. '_f' → logprob: -15.000592231750488
    9. '(defun' → logprob: -15.375592231750488
    10. ')(_' → logprob: -15.375592231750488

Token 65: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013242880813777447
    2. '):
' → logprob: -7.12632417678833
    3. ')' → logprob: -7.62632417678833
    4. '():' → logprob: -11.001324653625488
    5. ' ):' → logprob: -12.001324653625488
    6. '):
' → logprob: -12.251324653625488
    7. '   ' → logprob: -13.376324653625488
    8. '()' → logprob: -13.626324653625488
    9. '):

' → logprob: -14.626324653625488
    10. '():
' → logprob: -15.126324653625488

Token 66: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11744976043701172
    2. ' n' → logprob: -2.8674497604370117
    3. '):' → logprob: -3.2424497604370117
    4. 'N' → logprob: -5.742449760437012
    5. ')' → logprob: -5.867449760437012
    6. '2' → logprob: -6.367449760437012
    7. '):
' → logprob: -6.492449760437012
    8. ' ' → logprob: -6.867449760437012
    9. 'a' → logprob: -7.242449760437012
    10. '   ' → logprob: -7.492449760437012

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003097500652074814
    2. '):
' → logprob: -6.0030975341796875
    3. ')' → logprob: -7.5030975341796875
    4. ' ):' → logprob: -10.128097534179688
    5. ',' → logprob: -11.378097534179688
    6. '_' → logprob: -11.878097534179688
    7. '):
' → logprob: -12.378097534179688
    8. ':' → logprob: -13.128097534179688
    9. '):

' → logprob: -14.003097534179688
    10. '=' → logprob: -14.253097534179688

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16870537400245667
    2. '[]' → logprob: -1.9187053442001343
    3. ' []' → logprob: -4.918705463409424
    4. '[' → logprob: -8.543704986572266
    5. 'def' → logprob: -8.918704986572266
    6. 'return' → logprob: -9.043704986572266
    7. '    ' → logprob: -9.418704986572266
    8. '=[]' → logprob: -9.418704986572266
    9. 'ab' → logprob: -9.543704986572266
    10. '  ' → logprob: -9.918704986572266

Token 69: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0776655375957489
    2. 'return' (adapté à ' return') → logprob: -3.3276655673980713
    3. 'ab' → logprob: -4.202665328979492
    4. ' return' → logprob: -4.327665328979492
    5. 'result' → logprob: -5.827665328979492
    6. 'pairs' → logprob: -5.952665328979492
    7. ' ab' → logprob: -6.077665328979492
    8. 'def' → logprob: -6.702665328979492
    9. ' pairs' → logprob: -7.827665328979492
    10. 'a' → logprob: -8.452665328979492

Token 70: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.21591711044311523
    2. '[' → logprob: -1.7159171104431152
    3. ' [' → logprob: -4.965917110443115
    4. '[input' → logprob: -5.590917110443115
    5. '[int' → logprob: -6.340917110443115
    6. '[array' → logprob: -7.465917110443115
    7. '[List' → logprob: -7.840917110443115
    8. '[len' → logprob: -8.715917587280273
    9. '[line' → logprob: -9.340917587280273
    10. '[item' → logprob: -9.340917587280273

Token 71: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0015415230300277472
    2. 'list' → logprob: -6.501541614532471
    3. ' tuple' → logprob: -10.251541137695312
    4. '(tuple' → logprob: -12.501541137695312
    5. 'map' → logprob: -16.126541137695312
    6. '   ' → logprob: -18.001541137695312
    7. '(list' → logprob: -18.376541137695312
    8. '
' → logprob: -18.501541137695312
    9. '_tuple' → logprob: -18.626541137695312
    10. ' list' → logprob: -19.126541137695312

Token 72: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001999642699956894
    2. '(' → logprob: -9.000200271606445
    3. '(int' → logprob: -9.625200271606445
    4. 'map' → logprob: -11.875200271606445
    5. '(input' → logprob: -12.875200271606445
    6. '(
' → logprob: -15.625200271606445
    7. '()' → logprob: -15.750200271606445
    8. 'int' → logprob: -15.750200271606445
    9. ' map' → logprob: -16.375200271606445
    10. '(m' → logprob: -16.500200271606445

Token 73: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002226093056378886
    2. 'int' → logprob: -8.750222206115723
    3. '<int' → logprob: -10.750222206115723
    4. '(' → logprob: -10.750222206115723
    5. ',int' → logprob: -11.375222206115723
    6. '[int' → logprob: -12.250222206115723
    7. ']int' → logprob: -12.625222206115723
    8. '=int' → logprob: -14.125222206115723
    9. ' int' → logprob: -15.250222206115723
    10. '	int' → logprob: -15.625222206115723

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4742221236228943
    2. ',input' → logprob: -0.9742221236228943
    3. 'input' → logprob: -9.849222183227539
    4. '(input' → logprob: -10.474222183227539
    5. '(),' → logprob: -10.599222183227539
    6. ' ,' → logprob: -10.849222183227539
    7. ',int' → logprob: -11.974222183227539
    8. ',
' → logprob: -12.849222183227539
    9. ',(' → logprob: -13.099222183227539
    10. '),' → logprob: -13.099222183227539

Token 75: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17976094782352448
    2. ' input' → logprob: -1.8047609329223633
    3. '(input' → logprob: -11.679760932922363
    4. ',input' → logprob: -13.179760932922363
    5. '   ' → logprob: -13.679760932922363
    6. ')' → logprob: -13.679760932922363
    7. ' ' → logprob: -13.804760932922363
    8. '	input' → logprob: -14.554760932922363
    9. '[input' → logprob: -14.679760932922363
    10. '_input' → logprob: -15.054760932922363

Token 76: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0006323783891275525
    2. 'func' → logprob: -7.375632286071777
    3. '```' → logprob: -13.500632286071777
    4. 'f' → logprob: -14.125632286071777
    5. '_function' → logprob: -14.500632286071777
    6. 'Func' → logprob: -14.625632286071777
    7. '(_' → logprob: -14.750632286071777
    8. '__' → logprob: -14.875632286071777
    9. ')' → logprob: -15.000632286071777
    10. 'function' → logprob: -15.250632286071777

Token 77: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -14.000001907348633
    3. '()))' → logprob: -15.250001907348633
    4. '(' → logprob: -15.500001907348633
    5. ').' → logprob: -15.750001907348633
    6. '))' → logprob: -16.500001907348633
    7. ' ' → logprob: -16.500001907348633
    8. ' ().' → logprob: -16.500001907348633
    9. '.split' → logprob: -16.750001907348633
    10. '   ' → logprob: -16.750001907348633

Token 78: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002678920282050967
    2. 'strip' → logprob: -8.25026798248291
    3. ' split' → logprob: -12.87526798248291
    4. 'rstrip' → logprob: -13.00026798248291
    5. '().' → logprob: -13.75026798248291
    6. '(split' → logprob: -15.12526798248291
    7. ')' → logprob: -16.375267028808594
    8. 'plit' → logprob: -16.500267028808594
    9. '.split' → logprob: -16.625267028808594
    10. 'read' → logprob: -17.250267028808594

Token 79: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00781505461782217
    2. '))' → logprob: -5.632814884185791
    3. '()' → logprob: -6.257814884185791
    4. '(n' → logprob: -7.007814884185791
    5. '(),' → logprob: -7.132814884185791
    6. '()))
' → logprob: -8.25781536102295
    7. '())' → logprob: -8.63281536102295
    8. '(' → logprob: -9.75781536102295
    9. '()),' → logprob: -10.25781536102295
    10. ',' → logprob: -10.75781536102295

Token 80: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1377771496772766
    2. ')' → logprob: -2.762777090072632
    3. 'for' → logprob: -3.387777090072632
    4. '()' → logprob: -4.012777328491211
    5. '   ' → logprob: -5.262777328491211
    6. '(' → logprob: -5.512777328491211
    7. '(n' → logprob: -5.887777328491211
    8. ' ' → logprob: -7.637777328491211
    9. ',' → logprob: -8.387777328491211
    10. '())' → logprob: -8.637777328491211

Token 81: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.051168911159038544
    2. '_' → logprob: -3.051168918609619
    3. ' range' → logprob: -6.551168918609619
    4. ' i' → logprob: -6.926168918609619
    5. ' ' → logprob: -8.801168441772461
    6. 'range' → logprob: -11.801168441772461
    7. '_range' → logprob: -12.176168441772461
    8. ' ' → logprob: -13.551168441772461
    9. 'i' → logprob: -13.926168441772461
    10. ' in' → logprob: -14.176168441772461

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006818973924964666
    2. 'in' → logprob: -5.006818771362305
    3. ' ' → logprob: -9.631818771362305
    4. 'i' → logprob: -10.881818771362305
    5. 'range' → logprob: -11.131818771362305
    6. '	in' → logprob: -13.881818771362305
    7. ' i' → logprob: -14.381818771362305
    8. 'import' → logprob: -14.756818771362305
    9. '  ' → logprob: -14.881818771362305
    10. 's' → logprob: -15.506818771362305

Token 83: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007101670489646494
    2. ' range' → logprob: -7.2507100105285645
    3. '	range' → logprob: -15.500710487365723
    4. '(range' → logprob: -16.875709533691406
    5. '   ' → logprob: -17.500709533691406
    6. '  ' → logprob: -19.125709533691406
    7. ' ' → logprob: -19.500709533691406
    8. '.range' → logprob: -19.875709533691406
    9. '[' → logprob: -20.125709533691406
    10. 'rang' → logprob: -20.250709533691406

Token 84: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019336353288963437
    2. '(' → logprob: -6.251933574676514
    3. ' (' → logprob: -13.001934051513672
    4. 'n' → logprob: -13.001934051513672
    5. ' n' → logprob: -15.001934051513672
    6. '(
' → logprob: -16.626934051513672
    7. ' ' → logprob: -18.626934051513672
    8. ')n' → logprob: -18.626934051513672
    9. '	n' → logprob: -18.876934051513672
    10. '(range' → logprob: -19.126934051513672

Token 85: '-' (ID: 12)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002434699417790398
    2. ')' → logprob: -8.500243186950684
    3. ' )' → logprob: -10.750243186950684
    4. ']' → logprob: -11.625243186950684
    5. '   ' → logprob: -12.500243186950684
    6. ')])' → logprob: -12.625243186950684
    7. ')]
' → logprob: -14.000243186950684
    8. '))' → logprob: -14.875243186950684
    9. '])' → logprob: -15.125243186950684
    10. ' ' → logprob: -15.125243186950684

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00081963452976197
    2. ' ' → logprob: -7.500819683074951
    3. '2' → logprob: -8.250819206237793
    4. '0' → logprob: -12.625819206237793
    5. '   ' → logprob: -14.125819206237793
    6. ')' → logprob: -15.000819206237793
    7. '3' → logprob: -15.125819206237793
    8. '4' → logprob: -15.375819206237793
    9. '  ' → logprob: -16.00082015991211
    10. '5' → logprob: -16.37582015991211

Token 87: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009892907924950123
    2. ')' → logprob: -4.63489294052124
    3. ']' → logprob: -9.509892463684082
    4. ')])' → logprob: -10.509892463684082
    5. ' )' → logprob: -10.634892463684082
    6. '   ' → logprob: -12.634892463684082
    7. '])' → logprob: -13.009892463684082
    8. '))' → logprob: -13.509892463684082
    9. ')]
' → logprob: -14.009892463684082
    10. ')}' → logprob: -14.134892463684082

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20795708894729614
    2. '<|end|>' → logprob: -1.8329570293426514
    3. '
' → logprob: -4.3329572677612305
    4. '#' → logprob: -5.2079572677612305
    5. '```' → logprob: -5.3329572677612305
    6. '<|end|>' → logprob: -6.3329572677612305
    7. '\n' → logprob: -7.5829572677612305
    8. 'import' → logprob: -7.8329572677612305
    9. '\' → logprob: -7.9579572677612305
    10. 'class' → logprob: -8.08295726776123

Token 89: ' build' (ID: 3024)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00988003984093666
    2. ' dfs' → logprob: -5.384880065917969
    3. ' solve' → logprob: -5.759880065917969
    4. 'main' → logprob: -6.384880065917969
    5. ' bfs' → logprob: -9.134880065917969
    6. 'dfs' → logprob: -9.884880065917969
    7. 'solve' → logprob: -9.884880065917969
    8. ' ' → logprob: -10.509880065917969
    9. '	main' → logprob: -10.634880065917969
    10. ' process' → logprob: -10.884880065917969

Token 90: '_empty' (ID: 35051)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.15288591384887695
    2. '_graph' → logprob: -2.027885913848877
    3. '_adj' → logprob: -5.277885913848877
    4. '_' → logprob: -5.777885913848877
    5. '_ad' → logprob: -6.652885913848877
    6. '(' → logprob: -8.902885437011719
    7. '_list' → logprob: -10.402885437011719
    8. '_t' → logprob: -10.527885437011719
    9. '_a' → logprob: -10.652885437011719
    10. '_b' → logprob: -10.652885437011719

Token 91: '_graph' (ID: 33441)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.47545376420021057
    2. '_graph' → logprob: -1.1004537343978882
    3. '_list' → logprob: -3.9754538536071777
    4. '_' → logprob: -4.225453853607178
    5. '_adj' → logprob: -5.100453853607178
    6. '_array' → logprob: -6.225453853607178
    7. '_dict' → logprob: -6.975453853607178
    8. '_ad' → logprob: -7.225453853607178
    9. '(' → logprob: -8.10045337677002
    10. '_matrix' → logprob: -8.35045337677002

Token 92: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006315888836979866
    2. '(' → logprob: -5.7563157081604
    3. '():' → logprob: -6.8813157081604
    4. '(num' → logprob: -6.8813157081604
    5. '(size' → logprob: -7.1313157081604
    6. '(node' → logprob: -9.006316184997559
    7. ' (' → logprob: -9.756316184997559
    8. '(number' → logprob: -10.381316184997559
    9. '(N' → logprob: -11.381316184997559
    10. '(k' → logprob: -11.631316184997559

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004326264373958111
    2. '):
' → logprob: -5.629326343536377
    3. ')' → logprob: -7.629326343536377
    4. ' ):' → logprob: -8.379325866699219
    5. '):
' → logprob: -12.129325866699219
    6. '):

' → logprob: -13.129325866699219
    7. ':' → logprob: -13.879325866699219
    8. ' ):
' → logprob: -14.504325866699219
    9. ' )' → logprob: -14.629325866699219
    10. ')：' → logprob: -14.879325866699219

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008374267257750034
    2. ':
' → logprob: -6.258374214172363
    3. ' return' → logprob: -7.008374214172363
    4. ':' → logprob: -7.133374214172363
    5. '():
' → logprob: -7.133374214172363
    6. '(n' → logprob: -7.258374214172363
    7. 'return' → logprob: -7.633374214172363
    8. '[n' → logprob: -7.758374214172363
    9. '[]' → logprob: -7.883374214172363
    10. 'n' → logprob: -8.133374214172363

Token 95: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4011293947696686
    2. ' return' → logprob: -1.6511293649673462
    3. '[' → logprob: -2.2761294841766357
    4. ' [[]' → logprob: -3.6511294841766357
    5. '   ' → logprob: -4.901129245758057
    6. ' [' → logprob: -6.901129245758057
    7. '[]' → logprob: -7.526129245758057
    8. '{return' → logprob: -7.901129245758057
    9. '{}' → logprob: -8.526129722595215
    10. '{' → logprob: -8.651129722595215

Token 96: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011088619939982891
    2. ' [[]' → logprob: -4.761088848114014
    3. '{' → logprob: -6.011088848114014
    4. ' {' → logprob: -12.136088371276855
    5. 'default' → logprob: -12.136088371276855
    6. ' [' → logprob: -12.761088371276855
    7. '   ' → logprob: -13.136088371276855
    8. '[]' → logprob: -13.511088371276855
    9. '[[' → logprob: -14.261088371276855
    10. '{}' → logprob: -14.511088371276855

Token 97: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25193750858306885
    2. 'for' → logprob: -1.5019375085830688
    3. ' ' → logprob: -13.001937866210938
    4. '	for' → logprob: -13.001937866210938
    5. ']' → logprob: -13.876937866210938
    6. ')' → logprob: -13.876937866210938
    7. '   ' → logprob: -14.001937866210938
    8. 'n' → logprob: -14.251937866210938
    9. ',' → logprob: -16.376937866210938
    10. 'in' → logprob: -16.376937866210938

Token 98: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6141239404678345
    2. 'range' → logprob: -0.8641239404678345
    3. '_' → logprob: -3.364123821258545
    4. ' _' → logprob: -6.489123821258545
    5. ' in' → logprob: -6.989123821258545
    6. '(range' → logprob: -8.114124298095703
    7. '_range' → logprob: -9.364124298095703
    8. 'in' → logprob: -10.239124298095703
    9. '	range' → logprob: -12.614124298095703
    10. ' ' → logprob: -12.614124298095703

Token 99: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3975657522678375
    2. ' in' → logprob: -1.3975657224655151
    3. 'range' → logprob: -2.5225658416748047
    4. ' range' → logprob: -7.522565841674805
    5. ' ' → logprob: -10.647565841674805
    6. 'n' → logprob: -11.022565841674805
    7. 'ange' → logprob: -11.522565841674805
    8. '(range' → logprob: -13.272565841674805
    9. '  ' → logprob: -14.397565841674805
    10. ' xrange' → logprob: -14.522565841674805

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10022015124559402
    2. ' range' → logprob: -2.350220203399658
    3. '(range' → logprob: -11.2252197265625
    4. '	range' → logprob: -15.9752197265625
    5. 'n' → logprob: -18.7252197265625
    6. ' xrange' → logprob: -18.9752197265625
    7. '.range' → logprob: -19.1002197265625
    8. 'rang' → logprob: -19.1002197265625
    9. ' ' → logprob: -19.3502197265625
    10. '_range' → logprob: -19.6002197265625

Token 101: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000215457082958892
    2. '(' → logprob: -8.500215530395508
    3. '(range' → logprob: -12.000215530395508
    4. ' (' → logprob: -12.250215530395508
    5. 'range' → logprob: -14.250215530395508
    6. ' range' → logprob: -15.750215530395508
    7. '((' → logprob: -16.875215530395508
    8. '](' → logprob: -17.250215530395508
    9. ')' → logprob: -17.375215530395508
    10. ')(' → logprob: -17.625215530395508

Token 102: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.822646693966817e-06
    2. ']' → logprob: -12.125007629394531
    3. ')' → logprob: -14.250007629394531
    4. ' )' → logprob: -14.375007629394531
    5. ')]
' → logprob: -14.500007629394531
    6. ')],' → logprob: -15.875007629394531
    7. ' ]' → logprob: -16.12500762939453
    8. '+' → logprob: -16.37500762939453
    9. '])' → logprob: -16.87500762939453
    10. '])]' → logprob: -17.12500762939453

Token 103: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23043419420719147
    2. '<|end|>' → logprob: -1.6054341793060303
    3. '
' → logprob: -6.355434417724609
    4. '<|end|>' → logprob: -6.980434417724609
    5. '[' → logprob: -7.605434417724609
    6. '```' → logprob: -7.730434417724609
    7. ')' → logprob: -7.855434417724609
    8. ' def' → logprob: -8.23043441772461
    9. '#' → logprob: -8.48043441772461
    10. '(' → logprob: -9.48043441772461

Token 104: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.12307781726121902
    2. 'build' → logprob: -2.498077869415283
    3. ' add' → logprob: -3.498077869415283
    4. 'add' → logprob: -6.498077869415283
    5. ' bfs' → logprob: -6.998077869415283
    6. ' read' → logprob: -8.498077392578125
    7. ' dfs' → logprob: -8.623077392578125
    8. '_build' → logprob: -8.998077392578125
    9. 'b' → logprob: -9.123077392578125
    10. 'dfs' → logprob: -9.498077392578125

Token 105: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.001038287067785859
    2. '_' → logprob: -7.501038074493408
    3. '_adj' → logprob: -8.501038551330566
    4. '_tree' → logprob: -9.376038551330566
    5. '_ad' → logprob: -9.876038551330566
    6. '_empty' → logprob: -10.626038551330566
    7. '_sparse' → logprob: -11.376038551330566
    8. '_a' → logprob: -11.626038551330566
    9. '_b' → logprob: -11.876038551330566
    10. '_connected' → logprob: -11.876038551330566

Token 106: '_edges' (ID: 68870)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.500004768371582
    3. ' (' → logprob: -14.000004768371582
    4. '(num' → logprob: -16.7500057220459
    5. '(node' → logprob: -16.7500057220459
    6. '(size' → logprob: -17.1250057220459
    7. '(nodes' → logprob: -17.5000057220459
    8. '(edges' → logprob: -17.7500057220459
    9. '(
' → logprob: -17.8750057220459
    10. '(N' → logprob: -17.8750057220459

Token 107: '(es' (ID: 89947)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002358167665079236
    2. '(edges' → logprob: -6.1273579597473145
    3. '(graph' → logprob: -9.502358436584473
    4. '(input' → logprob: -9.877358436584473
    5. '(' → logprob: -10.502358436584473
    6. '(edge' → logprob: -12.002358436584473
    7. ' (' → logprob: -12.752358436584473
    8. '(parent' → logprob: -13.002358436584473
    9. '(nodes' → logprob: -13.127358436584473
    10. '(m' → logprob: -13.252358436584473

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7012380957603455
    2. '):' → logprob: -0.7012380957603455
    3. ')' → logprob: -5.57623815536499
    4. '):
' → logprob: -5.82623815536499
    5. ',n' → logprob: -7.45123815536499
    6. 's' → logprob: -8.451237678527832
    7. ':' → logprob: -8.951237678527832
    8. '(n' → logprob: -9.826237678527832
    9. 'n' → logprob: -10.076237678527832
    10. ' ,' → logprob: -10.451237678527832

Token 109: ' AB' (ID: 16520)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31435588002204895
    2. ' n' → logprob: -1.5643558502197266
    3. 'graph' → logprob: -3.6893558502197266
    4. ' graph' → logprob: -3.8143558502197266
    5. 'g' → logprob: -4.564355850219727
    6. ' g' → logprob: -5.939355850219727
    7. ' G' → logprob: -9.439355850219727
    8. 'adj' → logprob: -9.689355850219727
    9. 'G' → logprob: -10.064355850219727
    10. ' ' → logprob: -10.314355850219727

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7245903611183167
    2. '):
' → logprob: -0.8495903611183167
    3. ')' → logprob: -4.224590301513672
    4. '_list' → logprob: -4.599590301513672
    5. ',' → logprob: -4.724590301513672
    6. '=' → logprob: -4.849590301513672
    7. '=None' → logprob: -5.349590301513672
    8. '):

' → logprob: -5.599590301513672
    9. ')):' → logprob: -5.599590301513672
    10. '_' → logprob: -5.724590301513672

Token 111: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4452078342437744
    2. ':
' → logprob: -1.5702078342437744
    3. '(n' → logprob: -2.4452078342437744
    4. '   ' → logprob: -2.8202078342437744
    5. '):' → logprob: -6.445207595825195
    6. '(' → logprob: -6.945207595825195
    7. 'for' → logprob: -7.570207595825195
    8. ' for' → logprob: -7.570207595825195
    9. '):
' → logprob: -7.570207595825195
    10. ',' → logprob: -8.320207595825195

Token 112: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5651460289955139
    2. 'for' (adapté à ' for') → logprob: -1.1901459693908691
    3. '   ' → logprob: -2.065145969390869
    4. ' es' → logprob: -8.315146446228027
    5. '	for' → logprob: -8.440146446228027
    6. 'es' → logprob: -9.190146446228027
    7. '
' → logprob: -9.940146446228027
    8. ' ' → logprob: -10.315146446228027
    9. '    
' → logprob: -10.940146446228027
    10. '```' → logprob: -11.190146446228027

Token 113: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14852508902549744
    2. 'u' → logprob: -2.7735249996185303
    3. ' a' → logprob: -3.2735249996185303
    4. 'e' → logprob: -4.148525238037109
    5. ' u' → logprob: -4.773525238037109
    6. 'i' → logprob: -4.898525238037109
    7. '   ' → logprob: -5.898525238037109
    8. ' e' → logprob: -7.273525238037109
    9. ' i' → logprob: -7.648525238037109
    10. ' ' → logprob: -7.773525238037109

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016620274633169174
    2. ',b' → logprob: -4.39162015914917
    3. ',_' → logprob: -6.26662015914917
    4. ',v' → logprob: -7.64162015914917
    5. 'in' → logprob: -8.266620635986328
    6. ' in' → logprob: -8.391620635986328
    7. ',s' → logprob: -8.516620635986328
    8. ',e' → logprob: -8.641620635986328
    9. 's' → logprob: -8.766620635986328
    10. ' ,' → logprob: -9.016620635986328

Token 115: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.836499985889532e-05
    2. ' b' → logprob: -9.7500581741333
    3. '	b' → logprob: -21.625059127807617
    4. '_b' → logprob: -21.875059127807617
    5. ')b' → logprob: -22.875059127807617
    6. '   ' → logprob: -23.375059127807617
    7. ' ' → logprob: -23.500059127807617
    8. ',b' → logprob: -23.625059127807617
    9. '>b' → logprob: -24.500059127807617
    10. 'bc' → logprob: -24.500059127807617

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07042862474918365
    2. 'in' → logprob: -2.6954286098480225
    3. ',' → logprob: -7.695428848266602
    4. ' ' → logprob: -10.820428848266602
    5. 's' → logprob: -12.070428848266602
    6. ' ,' → logprob: -12.945428848266602
    7. '   ' → logprob: -13.320428848266602
    8. 'es' → logprob: -13.445428848266602
    9. ',in' → logprob: -13.445428848266602
    10. '  ' → logprob: -13.570428848266602

Token 117: ' AB' (ID: 16520)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.029233001172542572
    2. 'es' → logprob: -3.779232978820801
    3. ' AB' → logprob: -5.279232978820801
    4. ' es' → logprob: -7.404232978820801
    5. 'ES' → logprob: -8.4042329788208
    6. 's' → logprob: -10.5292329788208
    7. '(es' → logprob: -12.2792329788208
    8. 'ab' → logprob: -13.0292329788208
    9. ' ' → logprob: -13.0292329788208
    10. 'AS' → logprob: -13.7792329788208

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.240174800157547
    2. ' in' → logprob: -1.7401747703552246
    3. ':
' → logprob: -4.115174770355225
    4. 'in' → logprob: -4.240174770355225
    5. ',' → logprob: -5.490174770355225
    6. ' :' → logprob: -5.990174770355225
    7. '   ' → logprob: -7.990174770355225
    8. ' :
' → logprob: -9.865175247192383
    9. '):' → logprob: -9.990175247192383
    10. ' ,' → logprob: -9.990175247192383

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10396981984376907
    2. '   ' → logprob: -2.7289698123931885
    3. ' es' → logprob: -3.6039698123931885
    4. 'es' → logprob: -5.978970050811768
    5. '	   ' → logprob: -7.103970050811768
    6. '	es' → logprob: -7.853970050811768
    7. '    ' → logprob: -8.10396957397461
    8. '    
' → logprob: -8.10396957397461
    9. ',' → logprob: -8.10396957397461
    10. '	' → logprob: -8.22896957397461

Token 120: ' append' (ID: 17147)
  Prédit: ' es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' es' → logprob: -0.0871826782822609
    2. 'es' → logprob: -2.5871827602386475
    3. '   ' → logprob: -4.837182521820068
    4. '	es' → logprob: -8.837182998657227
    5. 'e' → logprob: -9.212182998657227
    6. 's' → logprob: -11.212182998657227
    7. '_es' → logprob: -11.337182998657227
    8. '       ' → logprob: -11.337182998657227
    9. ' e' → logprob: -11.337182998657227
    10. ' edges' → logprob: -11.962182998657227

Token 121: '_edge' (ID: 43226)
  Prédit: '(es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.007925526238977909
    2. 'es' → logprob: -4.882925510406494
    3. ' es' → logprob: -8.132925987243652
    4. '	es' → logprob: -11.382925987243652
    5. 's' → logprob: -12.007925987243652
    6. '(s' → logprob: -12.507925987243652
    7. '_es' → logprob: -13.382925987243652
    8. '(' → logprob: -13.632925987243652
    9. '-es' → logprob: -15.007925987243652
    10. '(e' → logprob: -15.257925987243652

Token 122: '(es' (ID: 89947)
  Prédit: '(es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.011787133291363716
    2. '(s' → logprob: -4.511786937713623
    3. 's' → logprob: -7.386786937713623
    4. '(ed' → logprob: -9.636787414550781
    5. 'es' → logprob: -10.511787414550781
    6. '(' → logprob: -11.511787414550781
    7. '(e' → logprob: -12.386787414550781
    8. ' =' → logprob: -12.761787414550781
    9. ' es' → logprob: -12.886787414550781
    10. ' (' → logprob: -13.261787414550781

Token 123: ',' (ID: 11)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0015023599844425917
    2. '(a' → logprob: -7.626502513885498
    3. ')[' → logprob: -8.00150203704834
    4. '[b' → logprob: -8.12650203704834
    5. '[' → logprob: -8.62650203704834
    6. 'a' → logprob: -8.87650203704834
    7. ' [' → logprob: -10.87650203704834
    8. '   ' → logprob: -11.62650203704834
    9. '[(' → logprob: -11.87650203704834
    10. '[s' → logprob: -12.62650203704834

Token 124: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038092438131570816
    2. ' a' → logprob: -3.2880923748016357
    3. ')a' → logprob: -10.913092613220215
    4. 'es' → logprob: -11.288092613220215
    5. ')' → logprob: -11.663092613220215
    6. ' es' → logprob: -12.038092613220215
    7. '[a' → logprob: -13.163092613220215
    8. 'b' → logprob: -14.038092613220215
    9. '	a' → logprob: -14.163092613220215
    10. '(a' → logprob: -14.538092613220215

Token 125: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.43333858251571655
    2. '-' → logprob: -1.0583386421203613
    3. ',' → logprob: -5.433338642120361
    4. ' ,' → logprob: -8.433338165283203
    5. '   ' → logprob: -11.433338165283203
    6. ')' → logprob: -11.808338165283203
    7. ' ' → logprob: -11.933338165283203
    8. '[' → logprob: -12.183338165283203
    9. ',b' → logprob: -13.120838165283203
    10. ' -,' → logprob: -13.495838165283203

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018151231110095978
    2. ' ' → logprob: -4.01815128326416
    3. ' ,' → logprob: -15.01815128326416
    4. ',' → logprob: -15.76815128326416
    5. '2' → logprob: -15.89315128326416
    6. '    ' → logprob: -16.205650329589844
    7. '   ' → logprob: -16.455650329589844
    8. ' -' → logprob: -16.643150329589844
    9. ')' → logprob: -16.830650329589844
    10. ' )' → logprob: -16.830650329589844

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01836368441581726
    2. ' ,' → logprob: -4.0183634757995605
    3. ',b' → logprob: -8.518363952636719
    4. 'b' → logprob: -12.393363952636719
    5. '   ' → logprob: -12.643363952636719
    6. ')' → logprob: -12.893363952636719
    7. ' b' → logprob: -14.268363952636719
    8. '-' → logprob: -14.393363952636719
    9. ' ' → logprob: -14.768363952636719
    10. '       ' → logprob: -14.893363952636719

Token 128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132622241973877
    2. ' b' → logprob: -1.3132622241973877
    3. '   ' → logprob: -15.313261985778809
    4. '	b' → logprob: -15.938261985778809
    5. ')b' → logprob: -15.938261985778809
    6. ' ' → logprob: -17.063262939453125
    7. '    ' → logprob: -18.063262939453125
    8. ')' → logprob: -18.313262939453125
    9. '(b' → logprob: -18.688262939453125
    10. ' б' → logprob: -18.875762939453125

Token 129: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011714138090610504
    2. ' -' → logprob: -6.751171588897705
    3. ')' → logprob: -14.376171112060547
    4. ')-' → logprob: -15.626171112060547
    5. ' ' → logprob: -15.751171112060547
    6. '-)' → logprob: -15.751171112060547
    7. '   ' → logprob: -16.001171112060547
    8. ' )' → logprob: -17.501171112060547
    9. '1' → logprob: -17.751171112060547
    10. '[' → logprob: -17.876171112060547

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -16.375003814697266
    4. '```' → logprob: -16.750003814697266
    5. ')' → logprob: -17.500003814697266
    6. '<|end|>' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '１' → logprob: -18.750003814697266
    9. '<|end|>' → logprob: -18.750003814697266
    10. '۱' → logprob: -19.250003814697266

Token 131: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024156268045771867
    2. ')
' → logprob: -8.75024127960205
    3. ' )' → logprob: -10.12524127960205
    4. ',' → logprob: -10.50024127960205
    5. '   ' → logprob: -11.50024127960205
    6. '       ' → logprob: -13.50024127960205
    7. '),' → logprob: -14.12524127960205
    8. ')

' → logprob: -14.37524127960205
    9. ' ' → logprob: -14.50024127960205
    10. ')
' → logprob: -15.12524127960205

Token 132: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' append' (ID: 17147)
  Prédit: ' append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.36844173073768616
    2. 'append' → logprob: -1.6184417009353638
    3. ' build' → logprob: -2.9934418201446533
    4. ' main' → logprob: -3.6184418201446533
    5. ' dfs' → logprob: -4.743441581726074
    6. 'build' → logprob: -4.993441581726074
    7. 'main' → logprob: -5.493441581726074
    8. 'dfs' → logprob: -5.618441581726074
    9. ' solve' → logprob: -6.368441581726074
    10. ' bfs' → logprob: -6.868441581726074

Token 134: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -6.539801688631997e-05
    2. '_edges' → logprob: -9.750065803527832
    3. '_' → logprob: -13.125065803527832
    4. '_es' → logprob: -13.625065803527832
    5. 'def' → logprob: -14.250065803527832
    6. '_ed' → logprob: -14.625065803527832
    7. '```' → logprob: -14.750065803527832
    8. '(_' → logprob: -15.125065803527832
    9. '_e' → logprob: -15.500065803527832
    10. '(' → logprob: -15.625065803527832

Token 135: '(es' (ID: 89947)
  Prédit: '(es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -5.2524021157296374e-05
    2. '(' → logprob: -9.875052452087402
    3. '(e' → logprob: -14.375052452087402
    4. '(s' → logprob: -15.125052452087402
    5. '(ed' → logprob: -16.62505340576172
    6. '(en' → logprob: -17.12505340576172
    7. ' (' → logprob: -17.25005340576172
    8. '(edges' → logprob: -17.37505340576172
    9. '	es' → logprob: -17.62505340576172
    10. '(em' → logprob: -18.12505340576172

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.229872087715194e-05
    2. ' ,' → logprob: -9.750061988830566
    3. ',a' → logprob: -12.625061988830566
    4. ',n' → logprob: -15.000061988830566
    5. ',index' → logprob: -16.500062942504883
    6. ',e' → logprob: -17.250062942504883
    7. ',s' → logprob: -17.250062942504883
    8. ',node' → logprob: -17.375062942504883
    9. '[],' → logprob: -17.750062942504883
    10. ',target' → logprob: -17.875062942504883

Token 137: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7717511057853699
    2. ' u' → logprob: -1.2717511653900146
    3. 'a' → logprob: -1.6467511653900146
    4. ' a' → logprob: -3.1467511653900146
    5. 'i' → logprob: -5.1467509269714355
    6. 'v' → logprob: -5.6467509269714355
    7. 'from' → logprob: -5.7717509269714355
    8. ' v' → logprob: -6.3967509269714355
    9. ' i' → logprob: -6.3967509269714355
    10. ')' → logprob: -6.7717509269714355

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012630375567823648
    2. ' ,' → logprob: -9.625125885009766
    3. ',a' → logprob: -10.250125885009766
    4. '[a' → logprob: -11.750125885009766
    5. '):' → logprob: -12.000125885009766
    6. 'a' → logprob: -12.000125885009766
    7. '[' → logprob: -14.125125885009766
    8. '   ' → logprob: -14.125125885009766
    9. '[],' → logprob: -14.250125885009766
    10. '][' → logprob: -15.000125885009766

Token 139: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0013261953135952353
    2. ' b' → logprob: -6.626326084136963
    3. ')b' → logprob: -15.626326560974121
    4. 'a' → logprob: -16.251325607299805
    5. '   ' → logprob: -17.501325607299805
    6. ')' → logprob: -17.501325607299805
    7. 'es' → logprob: -18.126325607299805
    8. '	b' → logprob: -18.251325607299805
    9. '):
' → logprob: -18.751325607299805
    10. 'd' → logprob: -19.376325607299805

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08900632709264755
    2. '):
' → logprob: -2.4640064239501953
    3. '):
' → logprob: -10.589006423950195
    4. ' ):' → logprob: -11.089006423950195
    5. ')' → logprob: -11.339006423950195
    6. ',' → logprob: -11.964006423950195
    7. '   ' → logprob: -12.464006423950195
    8. '):

' → logprob: -13.214006423950195
    9. '[]):' → logprob: -14.339006423950195
    10. ':' → logprob: -14.589006423950195

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14329305291175842
    2. ' es' → logprob: -2.2682931423187256
    3. 'es' → logprob: -3.5182931423187256
    4. '	es' → logprob: -8.268293380737305
    5. '```' → logprob: -9.768293380737305
    6. '   ' → logprob: -10.768293380737305
    7. '
' → logprob: -11.768293380737305
    8. '``' → logprob: -12.393293380737305
    9. '    
' → logprob: -12.643293380737305
    10. '_es' → logprob: -13.518293380737305

Token 142: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -0.05616426095366478
    2. ' es' → logprob: -2.931164264678955
    3. '   ' → logprob: -6.681164264678955
    4. '	es' → logprob: -11.556163787841797
    5. '```' → logprob: -11.806163787841797
    6. '
' → logprob: -13.556163787841797
    7. 'e' → logprob: -13.681163787841797
    8. '``' → logprob: -14.181163787841797
    9. ' ' → logprob: -14.306163787841797
    10. 'def' → logprob: -14.306163787841797

Token 143: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.45848218582978e-06
    2. 'a' → logprob: -13.62500286102295
    3. '.append' → logprob: -14.25000286102295
    4. '[' → logprob: -15.37500286102295
    5. '.' → logprob: -16.000001907348633
    6. '[A' → logprob: -16.875001907348633
    7. '[e' → logprob: -17.500001907348633
    8. ' [' → logprob: -17.625001907348633
    9. '```' → logprob: -17.875001907348633
    10. '.a' → logprob: -18.125001907348633

Token 144: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.0206720617134124e-05
    2. ']' → logprob: -11.75001049041748
    3. '.append' → logprob: -13.75001049041748
    4. ' ].' → logprob: -13.75001049041748
    5. '.' → logprob: -16.250009536743164
    6. '   ' → logprob: -17.250009536743164
    7. ' ' → logprob: -18.750009536743164
    8. ''].' → logprob: -18.750009536743164
    9. ']
' → logprob: -18.750009536743164
    10. 'append' → logprob: -18.875009536743164

Token 145: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.75
    3. '.append' → logprob: -16.75
    4. 'app' → logprob: -19.25
    5. 'appen' → logprob: -21.25
    6. 'add' → logprob: -22.25
    7. '_append' → logprob: -22.25
    8. '	append' → logprob: -22.5
    9. 'push' → logprob: -22.625
    10. ' ' → logprob: -23.375

Token 146: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.572941179503687e-05
    2. 'b' → logprob: -10.000045776367188
    3. '	b' → logprob: -16.000045776367188
    4. '((' → logprob: -16.125045776367188
    5. '(' → logprob: -16.875045776367188
    6. '[b' → logprob: -19.125045776367188
    7. '(
' → logprob: -19.500045776367188
    8. ')b' → logprob: -20.000045776367188
    9. ',b' → logprob: -20.375045776367188
    10. ' b' → logprob: -20.875045776367188

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031828247010707855
    2. ')
' → logprob: -5.753182888031006
    3. ' )' → logprob: -12.378182411193848
    4. ')

' → logprob: -15.003182411193848
    5. ')
' → logprob: -16.003183364868164
    6. '   ' → logprob: -16.128183364868164
    7. '),' → logprob: -16.628183364868164
    8. ' )
' → logprob: -16.628183364868164
    9. ')return' → logprob: -16.878183364868164
    10. ')#' → logprob: -17.378183364868164

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2544831931591034
    2. 'es' → logprob: -1.5044832229614258
    3. ' es' → logprob: -6.004483222961426
    4. '	es' → logprob: -9.629483222961426
    5. '```' → logprob: -12.379483222961426
    6. ' ' → logprob: -13.129483222961426
    7. '   ' → logprob: -13.254483222961426
    8. ',' → logprob: -13.379483222961426
    9. '       ' → logprob: -14.004483222961426
    10. '_es' → logprob: -14.129483222961426

Token 149: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -1.4617256056226324e-05
    2. ' es' → logprob: -11.750014305114746
    3. '   ' → logprob: -12.000014305114746
    4. '	es' → logprob: -15.250014305114746
    5. ' ' → logprob: -17.125015258789062
    6. '```' → logprob: -17.250015258789062
    7. '_es' → logprob: -17.500015258789062
    8. '    
' → logprob: -17.875015258789062
    9. ' 
' → logprob: -18.125015258789062
    10. '(es' → logprob: -18.250015258789062

Token 150: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.007012663409113884
    2. '[a' → logprob: -5.007012844085693
    3. '[s' → logprob: -8.632012367248535
    4. '[' → logprob: -9.757012367248535
    5. 'es' → logprob: -10.257012367248535
    6. 's' → logprob: -11.132012367248535
    7. 'b' → logprob: -12.632012367248535
    8. '```' → logprob: -12.757012367248535
    9. '[e' → logprob: -13.132012367248535
    10. ' [' → logprob: -14.132012367248535

Token 151: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0008658452425152063
    2. '[a' → logprob: -7.125865936279297
    3. ']' → logprob: -10.000865936279297
    4. ').' → logprob: -11.500865936279297
    5. '.' → logprob: -12.625865936279297
    6. ' ].' → logprob: -14.125865936279297
    7. '.append' → logprob: -14.125865936279297
    8. 'a' → logprob: -14.500865936279297
    9. '][' → logprob: -15.750865936279297
    10. '```' → logprob: -15.875865936279297

Token 152: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.25
    3. '.append' → logprob: -17.375
    4. 'appen' → logprob: -17.625
    5. '	append' → logprob: -18.875
    6. 'app' → logprob: -19.125
    7. 'Append' → logprob: -20.875
    8. 'add' → logprob: -21.25
    9. '```' → logprob: -21.875
    10. 'a' → logprob: -21.875

Token 153: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.1782583391759545e-05
    2. 'a' → logprob: -11.000031471252441
    3. '(' → logprob: -11.125031471252441
    4. '(
' → logprob: -15.250031471252441
    5. '((' → logprob: -19.625032424926758
    6. '()' → logprob: -20.000032424926758
    7. ')a' → logprob: -20.000032424926758
    8. ')' → logprob: -20.375032424926758
    9. 's' → logprob: -20.375032424926758
    10. '(A' → logprob: -20.500032424926758

Token 154: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001238004770129919
    2. ')
' → logprob: -9.000123977661133
    3. ')

' → logprob: -15.875123977661133
    4. ' )' → logprob: -16.250123977661133
    5. ')return' → logprob: -17.625123977661133
    6. '<|end|>' → logprob: -18.250123977661133
    7. '),' → logprob: -18.750123977661133
    8. '))' → logprob: -19.125123977661133
    9. '   ' → logprob: -19.375123977661133
    10. ')}' → logprob: -19.500123977661133

Token 155: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012864413671195507
    2. '
' → logprob: -4.387864589691162
    3. '<|end|>' → logprob: -8.512864112854004
    4. '

' → logprob: -9.512864112854004
    5. '\' → logprob: -10.762864112854004
    6. '\n' → logprob: -11.137864112854004
    7. '```' → logprob: -11.262864112854004
    8. '#' → logprob: -11.887864112854004
    9. '<|end|>' → logprob: -12.387864112854004
    10. '  
' → logprob: -12.512864112854004

Token 156: ' build' (ID: 3024)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5642340779304504
    2. 'dfs' → logprob: -1.4392340183258057
    3. ' main' → logprob: -2.3142340183258057
    4. ' bfs' → logprob: -2.8142340183258057
    5. 'main' → logprob: -3.6892340183258057
    6. 'b' → logprob: -4.939234256744385
    7. ' solve' → logprob: -6.439234256744385
    8. 'solve' → logprob: -7.564234256744385
    9. ' build' → logprob: -8.939233779907227
    10. 'depth' → logprob: -8.939233779907227

Token 157: '_color' (ID: 15576)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.49700504541397095
    2. '_graph' → logprob: -1.9970049858093262
    3. '_d' → logprob: -2.622004985809326
    4. '_es' → logprob: -3.622004985809326
    5. '_path' → logprob: -3.872004985809326
    6. '_depth' → logprob: -3.997004985809326
    7. '_top' → logprob: -4.122004985809326
    8. '_chain' → logprob: -4.247004985809326
    9. '_b' → logprob: -4.622004985809326
    10. '_edges' → logprob: -4.747004985809326

Token 158: '_nodes' (ID: 34593)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38929590582847595
    2. '_map' → logprob: -1.8892959356307983
    3. '_list' → logprob: -2.639295816421509
    4. '_array' → logprob: -3.014295816421509
    5. 'es' → logprob: -4.139296054840088
    6. 'ing' → logprob: -4.639296054840088
    7. '_count' → logprob: -4.889296054840088
    8. '_arr' → logprob: -6.014296054840088
    9. '(n' → logprob: -6.139296054840088
    10. '_graph' → logprob: -6.264296054840088

Token 159: '(cs' (ID: 89621)
  Prédit: '(es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.021008001640439034
    2. '(n' → logprob: -3.896008014678955
    3. '(' → logprob: -8.521007537841797
    4. '(color' → logprob: -8.896007537841797
    5. 'es' → logprob: -10.271007537841797
    6. '(nodes' → logprob: -11.271007537841797
    7. '(ed' → logprob: -11.271007537841797
    8. '():' → logprob: -11.271007537841797
    9. '(s' → logprob: -11.646007537841797
    10. '(size' → logprob: -11.771007537841797

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034186266362667084
    2. ',n' → logprob: -4.034186363220215
    3. '):' → logprob: -4.284186363220215
    4. '(n' → logprob: -6.659186363220215
    5. ' ,' → logprob: -8.409186363220215
    6. '(' → logprob: -8.784186363220215
    7. ')' → logprob: -8.909186363220215
    8. '):
' → logprob: -8.909186363220215
    9. '):

' → logprob: -10.284186363220215
    10. ',s' → logprob: -10.784186363220215

Token 161: ' C' (ID: 363)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5912654399871826
    2. ' n' → logprob: -1.4662654399871826
    3. 'es' → logprob: -1.9662654399871826
    4. 'c' → logprob: -3.9662654399871826
    5. ' es' → logprob: -4.091265678405762
    6. 'color' → logprob: -4.341265678405762
    7. ' color' → logprob: -4.966265678405762
    8. ' c' → logprob: -5.341265678405762
    9. 'colors' → logprob: -5.341265678405762
    10. ' edges' → logprob: -5.966265678405762

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3720628023147583
    2. '):
' → logprob: -1.7470628023147583
    3. ',' → logprob: -1.9970628023147583
    4. ',n' → logprob: -8.622062683105469
    5. ')' → logprob: -8.747062683105469
    6. ')):' → logprob: -9.622062683105469
    7. '):

' → logprob: -10.122062683105469
    8. ' ):' → logprob: -10.122062683105469
    9. '):
' → logprob: -10.372062683105469
    10. ' ,' → logprob: -10.747062683105469

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018061907961964607
    2. ' for' → logprob: -4.268062114715576
    3. 'for' → logprob: -5.643062114715576
    4. ':' → logprob: -9.018061637878418
    5. '):
' → logprob: -9.393061637878418
    6. '):' → logprob: -10.143061637878418
    7. ' =' → logprob: -10.643061637878418
    8. 'def' → logprob: -10.768061637878418
    9. ',' → logprob: -11.143061637878418
    10. ')' → logprob: -11.518061637878418

Token 164: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.24144338071346283
    2. ' for' → logprob: -1.616443395614624
    3. '   ' → logprob: -4.241443157196045
    4. 'color' → logprob: -7.241443157196045
    5. ' color' → logprob: -7.616443157196045
    6. 'colors' → logprob: -9.616443634033203
    7. 'n' → logprob: -9.991443634033203
    8. 'from' → logprob: -10.491443634033203
    9. ' nodes' → logprob: -10.491443634033203
    10. 'nodes' → logprob: -10.616443634033203

Token 165: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048434969037771225
    2. ' i' → logprob: -3.1734349727630615
    3. 'c' → logprob: -5.423434734344482
    4. ' c' → logprob: -7.798434734344482
    5. 'idx' → logprob: -7.923434734344482
    6. ' idx' → logprob: -9.42343521118164
    7. '   ' → logprob: -9.54843521118164
    8. 'index' → logprob: -10.29843521118164
    9. 'color' → logprob: -11.54843521118164
    10. 'node' → logprob: -11.67343521118164

Token 166: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6436957716941833
    2. 'in' → logprob: -1.2686958312988281
    3. ',' → logprob: -1.6436958312988281
    4. ' ,' → logprob: -8.768695831298828
    5. ' ' → logprob: -10.768695831298828
    6. ',c' → logprob: -12.893695831298828
    7. ',in' → logprob: -13.143695831298828
    8. 'range' → logprob: -13.268695831298828
    9. '   ' → logprob: -14.268695831298828
    10. '_,' → logprob: -14.268695831298828

Token 167: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04529266059398651
    2. ' c' → logprob: -3.295292615890503
    3. 'color' → logprob: -5.045292854309082
    4. ' color' → logprob: -7.295292854309082
    5. 'ci' → logprob: -10.420292854309082
    6. 'v' → logprob: -10.545292854309082
    7. 'col' → logprob: -12.045292854309082
    8. 'cc' → logprob: -12.045292854309082
    9. '   ' → logprob: -12.545292854309082
    10. ' ' → logprob: -12.607792854309082

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06288570165634155
    2. 'in' → logprob: -2.8128857612609863
    3. ',' → logprob: -7.062885761260986
    4. ' ' → logprob: -10.687885284423828
    5. '   ' → logprob: -11.062885284423828
    6. 's' → logprob: -11.937885284423828
    7. 'n' → logprob: -12.062885284423828
    8. 'c' → logprob: -13.062885284423828
    9. 'is' → logprob: -13.562885284423828
    10. '  ' → logprob: -13.812885284423828

Token 169: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00023095356300473213
    2. ' enumerate' → logprob: -8.37523078918457
    3. 'en' → logprob: -15.75023078918457
    4. 'enum' → logprob: -16.50023078918457
    5. '
' → logprob: -16.87523078918457
    6. 'c' → logprob: -16.87523078918457
    7. '(en' → logprob: -17.87523078918457
    8. '```' → logprob: -18.12523078918457
    9. 'range' → logprob: -18.87523078918457
    10. 'enqueue' → logprob: -19.00023078918457

Token 170: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.06436426937580109
    2. '(cs' → logprob: -2.814364194869995
    3. '(Cs' → logprob: -6.189364433288574
    4. 'cs' → logprob: -8.189364433288574
    5. 'C' → logprob: -11.064364433288574
    6. '(c' → logprob: -11.189364433288574
    7. 'Cs' → logprob: -11.314364433288574
    8. '(range' → logprob: -11.939364433288574
    9. 's' → logprob: -12.064364433288574
    10. '(' → logprob: -12.939364433288574

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.576166570186615
    2. '):
' → logprob: -0.826166570186615
    3. '):
' → logprob: -9.076166152954102
    4. ' ):' → logprob: -9.826166152954102
    5. ' ):
' → logprob: -10.701166152954102
    6. ')' → logprob: -10.951166152954102
    7. ',' → logprob: -11.951166152954102
    8. '():
' → logprob: -12.701166152954102
    9. '):

' → logprob: -12.826166152954102
    10. ':' → logprob: -13.201166152954102

Token 172: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5521069765090942
    2. ' if' → logprob: -1.4271069765090942
    3. '       ' → logprob: -1.8021069765090942
    4. 'if' → logprob: -4.677106857299805
    5. 'cs' → logprob: -4.802106857299805
    6. ' cs' → logprob: -7.302106857299805
    7. '	cs' → logprob: -8.177106857299805
    8. ' es' → logprob: -8.302106857299805
    9. ':' → logprob: -8.677106857299805
    10. 'es' → logprob: -8.927106857299805

Token 173: ' assign' (ID: 14975)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.0014203533064574003
    2. '   ' → logprob: -7.001420497894287
    3. ' cs' → logprob: -7.876420497894287
    4. '       ' → logprob: -9.876420021057129
    5. '	cs' → logprob: -10.126420021057129
    6. 'es' → logprob: -10.626420021057129
    7. 'if' → logprob: -11.876420021057129
    8. 'csrf' → logprob: -13.751420021057129
    9. '_cs' → logprob: -14.001420021057129
    10. '(cs' → logprob: -14.126420021057129

Token 174: '_color' (ID: 15576)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.21969689428806305
    2. '(cs' → logprob: -2.0946969985961914
    3. ' cs' → logprob: -2.8446969985961914
    4. 'color' → logprob: -4.719696998596191
    5. 'es' → logprob: -5.469696998596191
    6. '	cs' → logprob: -7.219696998596191
    7. ' color' → logprob: -7.469696998596191
    8. ' es' → logprob: -8.344696998596191
    9. '_color' → logprob: -8.469696998596191
    10. 'd' → logprob: -8.594696998596191

Token 175: '_node' (ID: 11390)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.1323895901441574
    2. 's' → logprob: -2.882389545440674
    3. '_nodes' → logprob: -3.132389545440674
    4. 'd' → logprob: -4.382389545440674
    5. 'cs' → logprob: -4.632389545440674
    6. ' cs' → logprob: -7.382389545440674
    7. 'nodes' → logprob: -7.507389545440674
    8. '_cs' → logprob: -9.007390022277832
    9. 'color' → logprob: -9.132390022277832
    10. 'ed' → logprob: -9.132390022277832

Token 176: '(cs' (ID: 89621)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5775116682052612
    2. '(cs' → logprob: -0.8275116682052612
    3. '(s' → logprob: -6.827511787414551
    4. 'cs' → logprob: -8.20251178741455
    5. 'd' → logprob: -9.20251178741455
    6. ' cs' → logprob: -10.57751178741455
    7. '[' → logprob: -10.95251178741455
    8. '(c' → logprob: -11.45251178741455
    9. ' (' → logprob: -11.45251178741455
    10. ' s' → logprob: -11.70251178741455

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11060192435979843
    2. '[c' → logprob: -2.3606019020080566
    3. '[i' → logprob: -4.860601902008057
    4. ',c' → logprob: -6.985601902008057
    5. ' ,' → logprob: -7.110601902008057
    6. '[' → logprob: -7.985601902008057
    7. 'c' → logprob: -8.860602378845215
    8. ')[' → logprob: -9.485602378845215
    9. '(c' → logprob: -9.860602378845215
    10. ')' → logprob: -9.860602378845215

Token 178: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0033306374680250883
    2. ' c' → logprob: -5.753330707550049
    3. 'i' → logprob: -9.75333023071289
    4. ')c' → logprob: -9.87833023071289
    5. ')' → logprob: -10.62833023071289
    6. '   ' → logprob: -12.00333023071289
    7. 'cs' → logprob: -12.75333023071289
    8. '	c' → logprob: -13.12833023071289
    9. ' i' → logprob: -13.12833023071289
    10. ' ' → logprob: -13.37833023071289

Token 179: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03406287729740143
    2. '-' → logprob: -4.15906286239624
    3. ',i' → logprob: -4.28406286239624
    4. ' -' → logprob: -6.40906286239624
    5. ' ,' → logprob: -6.65906286239624
    6. '[i' → logprob: -6.90906286239624
    7. '   ' → logprob: -9.784063339233398
    8. ')' → logprob: -9.784063339233398
    9. ')[' → logprob: -11.784063339233398
    10. '][' → logprob: -12.159063339233398

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -11.000031471252441
    3. 'i' → logprob: -12.125031471252441
    4. ')' → logprob: -13.125031471252441
    5. '-' → logprob: -13.250031471252441
    6. ',' → logprob: -13.625031471252441
    7. '<|end|>' → logprob: -14.437531471252441
    8. '```' → logprob: -14.500031471252441
    9. '>' → logprob: -14.625031471252441
    10. '[i' → logprob: -15.500031471252441

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004616557154804468
    2. ',i' → logprob: -5.504616737365723
    3. ' ,' → logprob: -7.754616737365723
    4. ')' → logprob: -10.254616737365723
    5. '[i' → logprob: -10.379616737365723
    6. '   ' → logprob: -10.629616737365723
    7. ').' → logprob: -11.129616737365723
    8. '.append' → logprob: -14.129616737365723
    9. ')i' → logprob: -14.754616737365723
    10. ' ' → logprob: -15.004616737365723

Token 182: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005245733540505171
    2. ' i' → logprob: -5.255245685577393
    3. ')' → logprob: -12.00524616241455
    4. '   ' → logprob: -12.88024616241455
    5. ')i' → logprob: -13.75524616241455
    6. ' ' → logprob: -14.88024616241455
    7. '	i' → logprob: -15.25524616241455
    8. '[i' → logprob: -15.50524616241455
    9. ' ' → logprob: -15.63024616241455
    10. 'es' → logprob: -15.63024616241455

Token 183: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')
' → logprob: -11.75001049041748
    3. ' )' → logprob: -13.62501049041748
    4. '<|end|>' → logprob: -14.62501049041748
    5. '   ' → logprob: -15.00001049041748
    6. ')

' → logprob: -15.75001049041748
    7. '       ' → logprob: -16.125011444091797
    8. ')add' → logprob: -16.375011444091797
    9. '))' → logprob: -16.500011444091797
    10. ')return' → logprob: -17.375011444091797

Token 184: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2534625828266144
    2. '<|end|>' → logprob: -1.503462553024292
    3. '
' → logprob: -7.253462791442871
    4. '```' → logprob: -8.003462791442871
    5. '<|end|>' → logprob: -8.253462791442871
    6. ')' → logprob: -9.753462791442871
    7. '   ' → logprob: -10.003462791442871
    8. ' def' → logprob: -10.003462791442871
    9. '    
' → logprob: -11.128462791442871
    10. '\' → logprob: -11.128462791442871

Token 185: ' assign' (ID: 14975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11055240035057068
    2. 'assign' → logprob: -3.1105523109436035
    3. ' def' → logprob: -3.2355523109436035
    4. ' assign' → logprob: -3.9855523109436035
    5. 'append' → logprob: -6.6105523109436035
    6. 'define' → logprob: -8.860552787780762
    7. '(assign' → logprob: -9.110552787780762
    8. ' append' → logprob: -9.235552787780762
    9. ' define' → logprob: -9.360552787780762
    10. '
' → logprob: -9.985552787780762

Token 186: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.975612187583465e-05
    2. '_edge' → logprob: -10.875029563903809
    3. 'color' → logprob: -11.875029563903809
    4. '```' → logprob: -13.625029563903809
    5. '_' → logprob: -14.750029563903809
    6. 'def' → logprob: -14.750029563903809
    7. '_col' → logprob: -14.875029563903809
    8. '_node' → logprob: -14.875029563903809
    9. '_colors' → logprob: -15.000029563903809
    10. '(_' → logprob: -16.250030517578125

Token 187: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005700715119019151
    2. '_nodes' → logprob: -7.500570297241211
    3. '_color' → logprob: -11.500570297241211
    4. 'node' → logprob: -12.375570297241211
    5. '```' → logprob: -14.000570297241211
    6. '_edge' → logprob: -14.375570297241211
    7. 'nodes' → logprob: -15.125570297241211
    8. 'def' → logprob: -15.625570297241211
    9. '(node' → logprob: -15.875570297241211
    10. '_' → logprob: -16.25057029724121

Token 188: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -5.200166469876422e-06
    2. '(Cs' → logprob: -12.500004768371582
    3. '(es' → logprob: -14.625004768371582
    4. '(' → logprob: -14.750004768371582
    5. '(css' → logprob: -15.500004768371582
    6. '(sc' → logprob: -15.875004768371582
    7. '	cs' → logprob: -16.3750057220459
    8. ' (' → logprob: -16.7500057220459
    9. '.cs' → logprob: -17.0000057220459
    10. '```' → logprob: -17.3750057220459

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002647927321959287
    2. ',c' → logprob: -8.500265121459961
    3. ' ,' → logprob: -9.750265121459961
    4. ')' → logprob: -15.000265121459961
    5. '<|end|>' → logprob: -15.000265121459961
    6. '[c' → logprob: -15.250265121459961
    7. ',s' → logprob: -15.375265121459961
    8. ',
' → logprob: -15.500265121459961
    9. 's' → logprob: -15.625265121459961
    10. '[' → logprob: -15.625265121459961

Token 190: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.5106044411659241
    2. 'c' → logprob: -1.0106043815612793
    3. ' color' → logprob: -3.5106043815612793
    4. ' c' → logprob: -5.135604381561279
    5. 'x' → logprob: -11.010604858398438
    6. 'index' → logprob: -11.260604858398438
    7. 'col' → logprob: -11.260604858398438
    8. 'node' → logprob: -11.385604858398438
    9. 'k' → logprob: -11.635604858398438
    10. 'code' → logprob: -11.760604858398438

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004701146390289068
    2. ' ,' → logprob: -7.750470161437988
    3. ',color' → logprob: -11.375470161437988
    4. ',c' → logprob: -12.125470161437988
    5. '   ' → logprob: -12.250470161437988
    6. ',int' → logprob: -12.625470161437988
    7. ',index' → logprob: -12.750470161437988
    8. '):' → logprob: -12.750470161437988
    9. '_,' → logprob: -14.125470161437988
    10. ' ' → logprob: -14.125470161437988

Token 192: ' i' (ID: 575)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03809439390897751
    2. ' node' → logprob: -3.2880942821502686
    3. 'v' → logprob: -10.788094520568848
    4. 'index' → logprob: -10.913094520568848
    5. 'idx' → logprob: -12.038094520568848
    6. 'vertex' → logprob: -12.538094520568848
    7. ' v' → logprob: -13.413094520568848
    8. 'u' → logprob: -13.663094520568848
    9. ' index' → logprob: -14.413094520568848
    10. 'i' → logprob: -14.913094520568848

Token 193: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04866412654519081
    2. '):' → logprob: -3.048664093017578
    3. '):
' → logprob: -9.548664093017578
    4. ')' → logprob: -13.048664093017578
    5. '   ' → logprob: -13.298664093017578
    6. '):

' → logprob: -13.923664093017578
    7. ' ):
' → logprob: -15.298664093017578
    8. '():
' → logprob: -15.923664093017578
    9. ':' → logprob: -16.048664093017578
    10. ':
' → logprob: -16.173664093017578

Token 194: '   ' (ID: 271)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.01676318608224392
    2. ' cs' → logprob: -4.141763210296631
    3. '   ' → logprob: -7.391763210296631
    4. '	cs' → logprob: -9.141762733459473
    5. '_cs' → logprob: -13.391762733459473
    6. 'csrf' → logprob: -13.391762733459473
    7. '(cs' → logprob: -14.141762733459473
    8. 'es' → logprob: -14.516762733459473
    9. '.cs' → logprob: -15.391762733459473
    10. '```' → logprob: -15.391762733459473

Token 195: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' (adapté à ' cs') → logprob: -3.8889261304575484e-06
    2. ' cs' → logprob: -12.500003814697266
    3. 'es' → logprob: -17.750003814697266
    4. 'if' → logprob: -17.750003814697266
    5. '	cs' → logprob: -17.750003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '(cs' → logprob: -19.750003814697266
    8. 'csrf' → logprob: -19.750003814697266
    9. '_cs' → logprob: -19.875003814697266
    10. '.cs' → logprob: -20.625003814697266

Token 196: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -3.128163257315464e-07
    2. 'color' → logprob: -15.875
    3. '=color' → logprob: -16.75
    4. '[c' → logprob: -17.25
    5. '[' → logprob: -17.875
    6. '.append' → logprob: -18.5
    7. ' color' → logprob: -20.0
    8. '
' → logprob: -20.0
    9. '.setdefault' → logprob: -20.0
    10. ' [' → logprob: -20.5

Token 197: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -4.842555426876061e-06
    2. ']' → logprob: -12.500004768371582
    3. '.append' → logprob: -14.375004768371582
    4. ' ].' → logprob: -15.125004768371582
    5. '.' → logprob: -16.7500057220459
    6. ').' → logprob: -17.0000057220459
    7. 'append' → logprob: -18.1250057220459
    8. ''].' → logprob: -18.2500057220459
    9. '"].' → logprob: -19.3750057220459
    10. '()].' → logprob: -19.5000057220459

Token 198: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. '.append' → logprob: -13.750000953674316
    3. ' append' → logprob: -16.250001907348633
    4. 'app' → logprob: -20.500001907348633
    5. '	append' → logprob: -21.750001907348633
    6. '_append' → logprob: -22.125001907348633
    7. 'Append' → logprob: -22.875001907348633
    8. 'appen' → logprob: -23.250001907348633
    9. 'add' → logprob: -24.375001907348633
    10. 'insert' → logprob: -26.125001907348633

Token 199: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.2729995988775045e-06
    2. 'i' → logprob: -12.000006675720215
    3. '(' → logprob: -17.0000057220459
    4. ' i' → logprob: -20.1250057220459
    5. '(
' → logprob: -22.0000057220459
    6. '	i' → logprob: -22.6250057220459
    7. ')i' → logprob: -23.1250057220459
    8. '[i' → logprob: -23.2500057220459
    9. ',i' → logprob: -23.3750057220459
    10. '_i' → logprob: -24.0000057220459

Token 200: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -15.750004768371582
    4. ')

' → logprob: -17.625003814697266
    5. '))' → logprob: -17.875003814697266
    6. ')return' → logprob: -18.125003814697266
    7. '<|end|>' → logprob: -18.750003814697266
    8. '   ' → logprob: -18.875003814697266
    9. ')add' → logprob: -19.250003814697266
    10. '}' → logprob: -19.500003814697266

Token 201: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3153720498085022
    2. '<|end|>' → logprob: -1.3153719902038574
    3. '```' → logprob: -6.565371990203857
    4. ')' → logprob: -7.940371990203857
    5. '<|end|>' → logprob: -8.565372467041016
    6. '#' → logprob: -9.815372467041016
    7. '
' → logprob: -10.315372467041016
    8. '[' → logprob: -11.315372467041016
    9. ' def' → logprob: -12.065372467041016
    10. '``' → logprob: -12.065372467041016

Token 202: ' prepare' (ID: 13708)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38591456413269043
    2. 'main' → logprob: -1.8859145641326904
    3. ' main' → logprob: -2.3859145641326904
    4. ' def' → logprob: -2.8859145641326904
    5. 'dfs' → logprob: -4.8859148025512695
    6. ' dfs' → logprob: -5.3859148025512695
    7. 'solve' → logprob: -5.7609148025512695
    8. ' bfs' → logprob: -6.5109148025512695
    9. ' solve' → logprob: -6.6359148025512695
    10. ' build' → logprob: -7.3859148025512695

Token 203: '_t' (ID: 838)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.8135620355606079
    2. '_input' → logprob: -1.938562035560608
    3. '_data' → logprob: -2.0635619163513184
    4. '(n' → logprob: -2.1885619163513184
    5. '(' → logprob: -2.5635619163513184
    6. '_' → logprob: -3.9385619163513184
    7. '_(' → logprob: -4.188561916351318
    8. '_inputs' → logprob: -4.688561916351318
    9. '_code' → logprob: -4.813561916351318
    10. '_parameters' → logprob: -4.938561916351318

Token 204: 'in' (ID: 258)
  Prédit: 'ree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.39392906427383423
    2. 'rees' → logprob: -1.3939290046691895
    3. 'op' → logprob: -3.3939290046691895
    4. 'r' → logprob: -3.5189290046691895
    5. 'o' → logprob: -5.5189290046691895
    6. 'opo' → logprob: -6.8939290046691895
    7. 'able' → logprob: -7.0189290046691895
    8. 'ops' → logprob: -7.0189290046691895
    9. 'ables' → logprob: -7.1439290046691895
    10. 'asks' → logprob: -7.1439290046691895

Token 205: '_t' (ID: 838)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2807936668395996
    2. '(es' → logprob: -1.5307936668395996
    3. '_' → logprob: -1.6557936668395996
    4. '(' → logprob: -2.9057936668395996
    5. '(cs' → logprob: -2.9057936668395996
    6. 'es' → logprob: -3.6557936668395996
    7. '_time' → logprob: -3.6557936668395996
    8. '_es' → logprob: -3.7807936668395996
    9. '_and' → logprob: -3.9057936668395996
    10. 's' → logprob: -4.0307936668396

Token 206: 'out' (ID: 468)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.5181666016578674
    2. 'in' → logprob: -2.2681665420532227
    3. 'able' → logprob: -2.5181665420532227
    4. 'op' → logprob: -2.6431665420532227
    5. 'ab' → logprob: -3.0181665420532227
    6. 'our' → logprob: -3.8931665420532227
    7. 'o' → logprob: -4.143166542053223
    8. 'imes' → logprob: -4.768166542053223
    9. 'ables' → logprob: -5.018166542053223
    10. 'out' → logprob: -5.268166542053223

Token 207: '(N' (ID: 10564)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09354699403047562
    2. '(es' → logprob: -2.8435471057891846
    3. '(cs' → logprob: -4.2185468673706055
    4. '():' → logprob: -4.9685468673706055
    5. '(' → logprob: -6.0935468673706055
    6. '(s' → logprob: -6.0935468673706055
    7. '(size' → logprob: -6.7185468673706055
    8. '(ts' → logprob: -6.9685468673706055
    9. '(ns' → logprob: -7.0935468673706055
    10. '(t' → logprob: -7.5935468673706055

Token 208: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015333887189626694
    2. ',' → logprob: -4.890333652496338
    3. '):
' → logprob: -4.890333652496338
    4. ')' → logprob: -9.015334129333496
    5. ' ):' → logprob: -10.390334129333496
    6. '):
' → logprob: -11.765334129333496
    7. ':' → logprob: -12.390334129333496
    8. '):

' → logprob: -12.515334129333496
    9. ',n' → logprob: -12.890334129333496
    10. '():' → logprob: -13.390334129333496

Token 209: '   ' (ID: 271)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.4361591339111328
    2. '   ' → logprob: -1.1861591339111328
    3. 'size' → logprob: -3.936159133911133
    4. 'return' → logprob: -4.186159133911133
    5. 'time' → logprob: -5.061159133911133
    6. 'import' → logprob: -6.186159133911133
    7. 'depth' → logprob: -6.561159133911133
    8. 'times' → logprob: -6.936159133911133
    9. 'def' → logprob: -7.561159133911133
    10. 'INF' → logprob: -7.811159133911133

Token 210: ' return' (ID: 622)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.17425386607646942
    2. 'return' (adapté à ' return') → logprob: -1.9242538213729858
    3. '   ' → logprob: -4.924253940582275
    4. 'import' → logprob: -6.049253940582275
    5. '([' → logprob: -6.799253940582275
    6. 'size' → logprob: -6.924253940582275
    7. 'depth' → logprob: -7.174253940582275
    8. 'time' → logprob: -7.924253940582275
    9. '([],' → logprob: -8.424253463745117
    10. 't' → logprob: -8.549253463745117

Token 211: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3134928047657013
    2. '([' → logprob: -1.313492774963379
    3. '[[' → logprob: -9.938492774963379
    4. '([-' → logprob: -10.313492774963379
    5. '[-' → logprob: -10.438492774963379
    6. '(' → logprob: -10.438492774963379
    7. ' [' → logprob: -10.563492774963379
    8. '([],' → logprob: -10.813492774963379
    9. ' ([' → logprob: -11.563492774963379
    10. '[],' → logprob: -11.688492774963379

Token 212: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017714503919705749
    2. '[-' → logprob: -6.751771450042725
    3. '[t' → logprob: -8.376771926879883
    4. '[N' → logprob: -8.751771926879883
    5. '[n' → logprob: -9.376771926879883
    6. ' [' → logprob: -9.876771926879883
    7. '([' → logprob: -10.376771926879883
    8. '   ' → logprob: -11.501771926879883
    9. '0' → logprob: -12.001771926879883
    10. '[int' → logprob: -12.251771926879883

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.000000953674316
    3. ' ' → logprob: -16.75
    4. '
' → logprob: -17.625
    5. '0' → logprob: -18.125
    6. ' -' → logprob: -18.25
    7. '

' → logprob: -18.3125
    8. '   ' → logprob: -18.375
    9. 'None' → logprob: -18.625
    10. 'float' → logprob: -18.625

Token 214: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6397017240524292
    2. ']*' → logprob: -0.7647017240524292
    3. ']*(' → logprob: -5.514701843261719
    4. ' for' → logprob: -6.014701843261719
    5. 'for' → logprob: -7.514701843261719
    6. ' ]' → logprob: -10.764701843261719
    7. ')' → logprob: -11.764701843261719
    8. ' *' → logprob: -11.889701843261719
    9. ']+' → logprob: -11.889701843261719
    10. '*N' → logprob: -12.014701843261719

Token 215: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011466487776488066
    2. '(' → logprob: -7.1261467933654785
    3. '(N' → logprob: -8.00114631652832
    4. '2' → logprob: -12.25114631652832
    5. ' N' → logprob: -13.37614631652832
    6. ' (' → logprob: -14.75114631652832
    7. '   ' → logprob: -16.00114631652832
    8. '	N' → logprob: -17.12614631652832
    9. 'n' → logprob: -17.25114631652832
    10. '(
' → logprob: -17.25114631652832

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007300666766241193
    2. ' ,' → logprob: -7.500730037689209
    3. ',[' → logprob: -9.375730514526367
    4. ',
' → logprob: -9.750730514526367
    5. '),' → logprob: -10.375730514526367
    6. ' ,[' → logprob: -13.750730514526367
    7. ',

' → logprob: -14.625730514526367
    8. ',\
' → logprob: -15.250730514526367
    9. ')' → logprob: -15.375730514526367
    10. ',['' → logprob: -15.625730514526367

Token 217: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00016313401283696294
    2. '[' → logprob: -8.750163078308105
    3. ' [-' → logprob: -12.375163078308105
    4. '   ' → logprob: -15.500163078308105
    5. '  ' → logprob: -17.875164031982422
    6. '-' → logprob: -18.000164031982422
    7. ' ' → logprob: -18.000164031982422
    8. '[:-' → logprob: -18.000164031982422
    9. ' [' → logprob: -18.250164031982422
    10. '[N' → logprob: -18.500164031982422

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. '-' → logprob: -12.12501335144043
    3. 'N' → logprob: -12.75001335144043
    4. '<|end|>' → logprob: -14.12501335144043
    5. '<|end|>' → logprob: -14.25001335144043
    6. '```' → logprob: -14.81251335144043
    7. ' ' → logprob: -15.25001335144043
    8. 'def' → logprob: -15.25001335144043
    9. '...' → logprob: -15.37501335144043
    10. '   ' → logprob: -15.43751335144043

Token 219: ']*' (ID: 18579)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.31476545333862305
    2. ']*' → logprob: -1.314765453338623
    3. '*' → logprob: -6.564765453338623
    4. ')*' → logprob: -9.814765930175781
    5. ']' → logprob: -11.064765930175781
    6. '*n' → logprob: -11.564765930175781
    7. '```' → logprob: -12.439765930175781
    8. '*M' → logprob: -13.439765930175781
    9. '*A' → logprob: -13.814765930175781
    10. ' *' → logprob: -13.814765930175781

Token 220: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. ' N' → logprob: -16.125
    3. '<|end|>' → logprob: -17.375
    4. '   ' → logprob: -17.75
    5. ')' → logprob: -18.375
    6. 'n' → logprob: -19.125
    7. '```' → logprob: -19.125
    8. ' ' → logprob: -19.5
    9. '
' → logprob: -19.875
    10. '<|end|>' → logprob: -20.5

Token 221: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -15.625001907348633
    4. '<|end|>' → logprob: -15.625001907348633
    5. ',' → logprob: -16.375001907348633
    6. ')#' → logprob: -18.000001907348633
    7. '),' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '}' → logprob: -18.750001907348633
    10. ')}' → logprob: -19.000001907348633

Token 222: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00989680178463459
    2. '<|end|>' → logprob: -4.634896755218506
    3. '```' → logprob: -9.759897232055664
    4. '<|end|>' → logprob: -10.634897232055664
    5. '#' → logprob: -10.759897232055664
    6. 'import' → logprob: -11.509897232055664
    7. '
' → logprob: -11.759897232055664
    8. ')' → logprob: -12.009897232055664
    9. 'from' → logprob: -12.384897232055664
    10. ' def' → logprob: -13.259897232055664

Token 223: ' prepare' (ID: 13708)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.2847137749195099
    2. ' dfs' → logprob: -1.4097137451171875
    3. 'prepare' → logprob: -6.7847137451171875
    4. 'def' → logprob: -7.0347137451171875
    5. 'build' → logprob: -7.5347137451171875
    6. ' build' → logprob: -8.409713745117188
    7. 'depth' → logprob: -8.409713745117188
    8. ' prepare' → logprob: -8.659713745117188
    9. 'main' → logprob: -9.159713745117188
    10. ' main' → logprob: -9.659713745117188

Token 224: '_k' (ID: 11637)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.43364647030830383
    2. 'depth' → logprob: -2.0586464405059814
    3. 'visited' → logprob: -2.3086464405059814
    4. 'def' → logprob: -3.8086464405059814
    5. 'parent' → logprob: -4.0586466789245605
    6. 'queue' → logprob: -4.0586466789245605
    7. 'dist' → logprob: -4.6836466789245605
    8. '(depth' → logprob: -4.9336466789245605
    9. '(stack' → logprob: -5.0586466789245605
    10. '_stack' → logprob: -5.1836466789245605

Token 225: '():
' (ID: 8595)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.11508481204509735
    2. 's' → logprob: -3.6150848865509033
    3. '_list' → logprob: -3.7400848865509033
    4. '(' → logprob: -4.740084648132324
    5. 'max' → logprob: -4.990084648132324
    6. '_max' → logprob: -5.865084648132324
    7. '_depth' → logprob: -5.990084648132324
    8. '(MAX' → logprob: -6.240084648132324
    9. '_nodes' → logprob: -6.365084648132324
    10. '_parent' → logprob: -6.365084648132324

Token 226: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4999952018260956
    2. '20' → logprob: -1.874995231628418
    3. '   ' → logprob: -2.249995231628418
    4. '1' → logprob: -3.874995231628418
    5. 'return' → logprob: -3.874995231628418
    6. '10' → logprob: -3.999995231628418
    7. '16' → logprob: -4.499995231628418
    8. '17' → logprob: -4.499995231628418
    9. '18' → logprob: -5.124995231628418
    10. '19' → logprob: -5.249995231628418

Token 227: ' return' (ID: 622)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.2878464460372925
    2. '0' → logprob: -2.412846565246582
    3. 'return' (adapté à ' return') → logprob: -3.162846565246582
    4. '17' → logprob: -3.287846565246582
    5. 'import' → logprob: -4.037846565246582
    6. '18' → logprob: -4.162846565246582
    7. '1' → logprob: -4.412846565246582
    8. '   ' → logprob: -4.537846565246582
    9. '10' → logprob: -4.787846565246582
    10. '16' → logprob: -5.412846565246582

Token 228: ' [' (ID: 723)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.6996434926986694
    2. '0' → logprob: -0.8246434926986694
    3. '1' → logprob: -3.199643611907959
    4. '17' → logprob: -4.199643611907959
    5. '[]' → logprob: -6.449643611907959
    6. '18' → logprob: -6.574643611907959
    7. 'int' → logprob: -6.699643611907959
    8. '-' → logprob: -6.824643611907959
    9. ' ' → logprob: -6.949643611907959
    10. '21' → logprob: -7.324643611907959

Token 229: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6579771637916565
    2. '[-' → logprob: -1.1579771041870117
    3. '[]' → logprob: -2.1579771041870117
    4. '0' → logprob: -3.2829771041870117
    5. '[' → logprob: -4.657977104187012
    6. ']' → logprob: -5.782977104187012
    7. 'None' → logprob: -7.157977104187012
    8. '[]
' → logprob: -7.657977104187012
    9. ']-' → logprob: -8.282977104187012
    10. '(-' → logprob: -8.782977104187012

Token 230: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03479630500078201
    2. ']*' → logprob: -3.4097962379455566
    3. ']*(' → logprob: -7.534796237945557
    4. ' for' → logprob: -8.409796714782715
    5. ' ]' → logprob: -8.659796714782715
    6. '*' → logprob: -9.284796714782715
    7. ',' → logprob: -10.034796714782715
    8. ' *' → logprob: -10.284796714782715
    9. 'for' → logprob: -11.034796714782715
    10. ']+' → logprob: -12.409796714782715

Token 231: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008305939263664186
    2. '<|end|>' → logprob: -7.12583065032959
    3. '```' → logprob: -11.75083065032959
    4. 'import' → logprob: -11.87583065032959
    5. '<|end|>' → logprob: -12.12583065032959
    6. '#' → logprob: -13.62583065032959
    7. ' def' → logprob: -14.00083065032959
    8. '[' → logprob: -14.12583065032959
    9. 'from' → logprob: -14.75083065032959
    10. '
' → logprob: -14.87583065032959

Token 232: ' run' (ID: 2461)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.3216980695724487
    2. 'def' → logprob: -1.4466980695724487
    3. 'prepare' → logprob: -1.6966980695724487
    4. ' prepare' → logprob: -2.5716981887817383
    5. ' dfs' → logprob: -2.6966981887817383
    6. 'set' → logprob: -3.5716981887817383
    7. ' set' → logprob: -3.5716981887817383
    8. ' build' → logprob: -3.9466981887817383
    9. 'build' → logprob: -4.071698188781738
    10. ' def' → logprob: -4.446698188781738

Token 233: '_d' (ID: 1565)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0194647666066885
    2. '(' → logprob: -5.14446496963501
    3. 'dfs' → logprob: -5.76946496963501
    4. ' _' → logprob: -5.89446496963501
    5. '(_' → logprob: -6.26946496963501
    6. '_d' → logprob: -6.26946496963501
    7. '_depth' → logprob: -6.51946496963501
    8. '(
' → logprob: -7.64446496963501
    9. ' dfs' → logprob: -8.019464492797852
    10. 'DFS' → logprob: -8.144464492797852

Token 234: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.00085678935283795
    2. 'e' → logprob: -7.750856876373291
    3. 'eep' → logprob: -8.750856399536133
    4. 'f' → logprob: -9.250856399536133
    5. '_fs' → logprob: -10.125856399536133
    6. 'p' → logprob: -10.125856399536133
    7. 'FS' → logprob: -10.500856399536133
    8. 'ep' → logprob: -10.750856399536133
    9. 'efs' → logprob: -11.625856399536133
    10. 'ef' → logprob: -11.750856399536133

Token 235: '(N' (ID: 10564)
  Prédit: '(es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.04180518910288811
    2. '(' → logprob: -3.5418052673339844
    3. '(node' → logprob: -5.041805267333984
    4. '(N' → logprob: -5.791805267333984
    5. '(graph' → logprob: -7.166805267333984
    6. '(n' → logprob: -8.166805267333984
    7. '(
' → logprob: -8.166805267333984
    8. '(tree' → logprob: -8.416805267333984
    9. '(root' → logprob: -8.791805267333984
    10. '(s' → logprob: -8.916805267333984

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4881879400927573e-05
    2. ' ,' → logprob: -11.250035285949707
    3. '):' → logprob: -11.875035285949707
    4. ',
' → logprob: -11.875035285949707
    5. ')' → logprob: -13.375035285949707
    6. '):
' → logprob: -13.375035285949707
    7. ',n' → logprob: -14.250035285949707
    8. '   ' → logprob: -14.250035285949707
    9. 'def' → logprob: -14.375035285949707
    10. ',node' → logprob: -14.875035285949707

Token 237: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.06660337746143341
    2. 'G' → logprob: -4.066603183746338
    3. ' es' → logprob: -4.191603183746338
    4. 'graph' → logprob: -4.566603183746338
    5. 'edges' → logprob: -5.316603183746338
    6. 'v' → logprob: -5.941603183746338
    7. ' graph' → logprob: -6.441603183746338
    8. 'adj' → logprob: -6.441603183746338
    9. ' edges' → logprob: -6.566603183746338
    10. ' G' → logprob: -6.566603183746338

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2617008400848135e-05
    2. ' ,' → logprob: -10.625032424926758
    3. ',
' → logprob: -12.750032424926758
    4. 'def' → logprob: -13.375032424926758
    5. '):' → logprob: -13.500032424926758
    6. '):
' → logprob: -14.500032424926758
    7. '   ' → logprob: -14.875032424926758
    8. ')' → logprob: -15.125032424926758
    9. '),' → logprob: -15.250032424926758
    10. '[],' → logprob: -15.875032424926758

Token 239: ' tin' (ID: 17325)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0058602094650269
    2. 'v' → logprob: -1.0058602094650269
    3. 'cs' → logprob: -2.0058603286743164
    4. 'node' → logprob: -4.130860328674316
    5. 'cur' → logprob: -4.255860328674316
    6. 'root' → logprob: -4.255860328674316
    7. 'now' → logprob: -4.255860328674316
    8. 'i' → logprob: -4.505860328674316
    9. 'tin' → logprob: -4.630860328674316
    10. 'current' → logprob: -4.880860328674316

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.627176768844947e-05
    2. ' ,' → logprob: -10.250096321105957
    3. ',t' → logprob: -11.000096321105957
    4. ',
' → logprob: -11.500096321105957
    5. 's' → logprob: -11.750096321105957
    6. ',s' → logprob: -12.875096321105957
    7. ',n' → logprob: -12.875096321105957
    8. 't' → logprob: -13.000096321105957
    9. ')' → logprob: -13.000096321105957
    10. '   ' → logprob: -13.125096321105957

Token 241: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.001389400800690055
    2. ' tout' → logprob: -6.626389503479004
    3. 't' → logprob: -10.876389503479004
    4. 'tou' → logprob: -11.251389503479004
    5. '0' → logprob: -11.876389503479004
    6. '```' → logprob: -11.876389503479004
    7. '   ' → logprob: -12.126389503479004
    8. 'Tout' → logprob: -12.626389503479004
    9. ' ' → logprob: -13.126389503479004
    10. 'tour' → logprob: -13.751389503479004

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.143808109802194e-05
    2. ' ,' → logprob: -10.750041007995605
    3. ',
' → logprob: -11.750041007995605
    4. '   ' → logprob: -12.625041007995605
    5. '):
' → logprob: -12.750041007995605
    6. '):' → logprob: -13.250041007995605
    7. ',n' → logprob: -13.500041007995605
    8. 'def' → logprob: -14.375041007995605
    9. ',N' → logprob: -15.125041007995605
    10. ',k' → logprob: -15.500041007995605

Token 243: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7073217034339905
    2. 'timer' → logprob: -1.4573216438293457
    3. 'time' → logprob: -2.4573216438293457
    4. 'parent' → logprob: -2.8323216438293457
    5. ' timer' → logprob: -3.4573216438293457
    6. 'depth' → logprob: -3.7073216438293457
    7. 'visited' → logprob: -4.457321643829346
    8. 'up' → logprob: -4.707321643829346
    9. ' k' → logprob: -5.082321643829346
    10. 'cur' → logprob: -5.332321643829346

Token 244: '_holder' (ID: 128963)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00121737876906991
    2. '):' → logprob: -6.876217365264893
    3. ' ,' → logprob: -9.87621784210205
    4. ')' → logprob: -10.00121784210205
    5. ',
' → logprob: -10.50121784210205
    6. '):
' → logprob: -10.62621784210205
    7. '   ' → logprob: -11.25121784210205
    8. ',n' → logprob: -12.50121784210205
    9. 'def' → logprob: -12.62621784210205
    10. ',k' → logprob: -12.75121784210205

Token 245: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002248984295874834
    2. '):' → logprob: -6.127248764038086
    3. '):
' → logprob: -10.252248764038086
    4. ' ,' → logprob: -10.752248764038086
    5. '   ' → logprob: -13.127248764038086
    6. ' ):' → logprob: -13.502248764038086
    7. ')' → logprob: -14.002248764038086
    8. '[' → logprob: -14.127248764038086
    9. ',
' → logprob: -14.377248764038086
    10. ',k' → logprob: -15.002248764038086

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.506442129611969
    2. ',' → logprob: -1.1314420700073242
    3. ':' → logprob: -2.631442070007324
    4. ':
' → logprob: -7.631442070007324
    5. '():' → logprob: -7.881442070007324
    6. '):' → logprob: -8.131442070007324
    7. 'def' → logprob: -8.381442070007324
    8. '(' → logprob: -8.756442070007324
    9. '(n' → logprob: -8.756442070007324
    10. '(depth' → logprob: -8.756442070007324

Token 247: ' dfs' (ID: 51252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9206191301345825
    2. ' def' → logprob: -1.5456191301345825
    3. ' stack' → logprob: -2.170619010925293
    4. 'def' → logprob: -2.295619010925293
    5. ' import' → logprob: -2.420619010925293
    6. 'import' → logprob: -3.045619010925293
    7. 'stack' → logprob: -4.045619010925293
    8. ' for' → logprob: -4.920619010925293
    9. ' from' → logprob: -5.045619010925293
    10. 'from' → logprob: -6.420619010925293

Token 248: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16661731898784637
    2. '(' → logprob: -1.9166172742843628
    3. '(es' → logprob: -6.166617393493652
    4. '_run' → logprob: -6.416617393493652
    5. '(None' → logprob: -6.666617393493652
    6. '_stack' → logprob: -8.291617393493652
    7. '(
' → logprob: -8.666617393493652
    8. '(n' → logprob: -8.666617393493652
    9. 'es' → logprob: -8.916617393493652
    10. '_es' → logprob: -9.166617393493652

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08718585222959518
    2. 'N' → logprob: -2.837185859680176
    3. 'es' → logprob: -3.837185859680176
    4. ')' → logprob: -5.837185859680176
    5. ',' → logprob: -8.837185859680176
    6. ' ' → logprob: -10.212185859680176
    7. '),' → logprob: -10.462185859680176
    8. ' N' → logprob: -10.837185859680176
    9. ' es' → logprob: -10.837185859680176
    10. 'k' → logprob: -10.962185859680176

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.73052782076411e-05
    2. ' ,' → logprob: -9.875067710876465
    3. ')' → logprob: -11.750067710876465
    4. ' es' → logprob: -12.500067710876465
    5. '   ' → logprob: -13.375067710876465
    6. ',
' → logprob: -14.500067710876465
    7. ',N' → logprob: -14.500067710876465
    8. 'import' → logprob: -15.250067710876465
    9. ',n' → logprob: -15.500067710876465
    10. '	es' → logprob: -16.00006675720215

Token 251: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023261087015271187
    2. 'es' → logprob: -4.648261070251465
    3. ' -' → logprob: -5.023261070251465
    4. '-es' → logprob: -5.023261070251465
    5. ' es' → logprob: -9.148261070251465
    6. '0' → logprob: -9.648261070251465
    7. '   ' → logprob: -10.398261070251465
    8. 'N' → logprob: -11.523261070251465
    9. 'None' → logprob: -11.523261070251465
    10. '-N' → logprob: -11.898261070251465

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '2' → logprob: -17.50001335144043
    4. '-' → logprob: -17.56251335144043
    5. '11' → logprob: -17.68751335144043
    6. '
' → logprob: -17.87501335144043
    7. '   ' → logprob: -17.87501335144043
    8. '10' → logprob: -18.25001335144043
    9. ')' → logprob: -18.31251335144043
    10. '```' → logprob: -18.31251335144043

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005554959177970886
    2. ')' → logprob: -5.255555152893066
    3. ' ,' → logprob: -8.130555152893066
    4. ',k' → logprob: -11.755555152893066
    5. ' )' → logprob: -11.880555152893066
    6. '   ' → logprob: -12.880555152893066
    7. ',
' → logprob: -12.880555152893066
    8. ',)' → logprob: -13.880555152893066
    9. ',n' → logprob: -14.005555152893066
    10. 'import' → logprob: -14.130555152893066

Token 254: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5932753682136536
    2. 'N' → logprob: -1.4682753086090088
    3. '0' → logprob: -1.5932753086090088
    4. 'k' → logprob: -4.593275547027588
    5. ' es' → logprob: -6.593275547027588
    6. '1' → logprob: -6.968275547027588
    7. ' N' → logprob: -7.593275547027588
    8. ' ' → logprob: -8.09327507019043
    9. '   ' → logprob: -8.96827507019043
    10. '(es' → logprob: -9.84327507019043

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025667413137853146
    2. ' ,' → logprob: -6.002566814422607
    3. ',t' → logprob: -9.37756633758545
    4. ',k' → logprob: -12.75256633758545
    5. '   ' → logprob: -13.12756633758545
    6. ',
' → logprob: -14.25256633758545
    7. ',n' → logprob: -15.50256633758545
    8. ')' → logprob: -15.87756633758545
    9. 't' → logprob: -16.002567291259766
    10. ' ' → logprob: -16.877567291259766

Token 256: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.009853005409240723
    2. ' tin' → logprob: -5.384852886199951
    3. 'k' → logprob: -6.009852886199951
    4. '0' → logprob: -6.009852886199951
    5. 'N' → logprob: -9.13485336303711
    6. ' k' → logprob: -10.25985336303711
    7. '   ' → logprob: -10.38485336303711
    8. ' ' → logprob: -10.50985336303711
    9. 'es' → logprob: -10.75985336303711
    10. 't' → logprob: -11.00985336303711

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.800739018013701e-05
    2. ' ,' → logprob: -10.3750581741333
    3. ',t' → logprob: -10.7500581741333
    4. ',
' → logprob: -12.7500581741333
    5. 't' → logprob: -14.3750581741333
    6. ')' → logprob: -14.5000581741333
    7. '   ' → logprob: -14.6250581741333
    8. '[' → logprob: -15.5000581741333
    9. ',

' → logprob: -15.8750581741333
    10. '```' → logprob: -15.8750581741333

Token 258: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.04301712289452553
    2. ' tout' → logprob: -3.1680171489715576
    3. 't' → logprob: -11.293017387390137
    4. 'todo' → logprob: -13.418017387390137
    5. ' todo' → logprob: -14.168017387390137
    6. '   ' → logprob: -14.168017387390137
    7. ' ' → logprob: -14.668017387390137
    8. 'Tout' → logprob: -14.918017387390137
    9. '    ' → logprob: -15.043017387390137
    10. '  ' → logprob: -15.043017387390137

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001105762057704851
    2. ' ,' → logprob: -9.250110626220703
    3. ',k' → logprob: -11.375110626220703
    4. ',
' → logprob: -13.625110626220703
    5. '   ' → logprob: -13.750110626220703
    6. ')' → logprob: -15.000110626220703
    7. '),' → logprob: -16.250110626220703
    8. 'k' → logprob: -16.625110626220703
    9. '```' → logprob: -17.500110626220703
    10. ' k' → logprob: -17.750110626220703

Token 260: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004277958068996668
    2. ' k' → logprob: -5.504278182983398
    3. '0' → logprob: -8.629278182983398
    4. '   ' → logprob: -12.254278182983398
    5. '[k' → logprob: -12.379278182983398
    6. ' ' → logprob: -12.629278182983398
    7. '[' → logprob: -13.879278182983398
    8. 'N' → logprob: -13.879278182983398
    9. '  ' → logprob: -14.254278182983398
    10. '{k' → logprob: -14.254278182983398

Token 261: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -0.00018089536752086133
    2. ')' → logprob: -9.125181198120117
    3. ')_' → logprob: -10.375181198120117
    4. 'holder' → logprob: -11.125181198120117
    5. '   ' → logprob: -12.250181198120117
    6. '[' → logprob: -12.625181198120117
    7. '_keeper' → logprob: -12.875181198120117
    8. '	holder' → logprob: -13.375181198120117
    9. '-holder' → logprob: -13.375181198120117
    10. '_owner' → logprob: -13.750181198120117

Token 262: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003208037815056741
    2. ',' → logprob: -8.125320434570312
    3. ' )' → logprob: -10.875320434570312
    4. ',)' → logprob: -12.750320434570312
    5. '[' → logprob: -13.625320434570312
    6. ')
' → logprob: -13.750320434570312
    7. '),' → logprob: -16.250320434570312
    8. ')

' → logprob: -16.250320434570312
    9. '<|end|>' → logprob: -16.250320434570312
    10. ' ' → logprob: -16.875320434570312

Token 263: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1031787320971489
    2. '<|end|>' → logprob: -2.6031787395477295
    3. ':' → logprob: -4.72817850112915
    4. '```' → logprob: -5.60317850112915
    5. ':def' → logprob: -5.85317850112915
    6. '   ' → logprob: -6.10317850112915
    7. '
' → logprob: -6.10317850112915
    8. ')' → logprob: -7.22817850112915
    9. '    
' → logprob: -7.47817850112915
    10. '<|end|>' → logprob: -7.60317850112915

Token 264: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.18379148840904236
    2. ' dfs' → logprob: -1.8087915182113647
    3. 'def' → logprob: -5.683791637420654
    4. 'run' → logprob: -8.308791160583496
    5. ' run' → logprob: -9.183791160583496
    6. 'df' → logprob: -9.308791160583496
    7. ' def' → logprob: -9.933791160583496
    8. 'depth' → logprob: -10.683791160583496
    9. 'import' → logprob: -11.308791160583496
    10. 'prepare' → logprob: -11.496291160583496

Token 265: '(v' (ID: 6932)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.23920047283172607
    2. '(N' → logprob: -1.989200472831726
    3. '(' → logprob: -3.4892005920410156
    4. '(n' → logprob: -3.8642005920410156
    5. '(u' → logprob: -3.9892005920410156
    6. '(v' → logprob: -5.239200592041016
    7. '(current' → logprob: -8.989200592041016
    8. '(pos' → logprob: -9.239200592041016
    9. '(vertex' → logprob: -9.614200592041016
    10. '(root' → logprob: -9.989200592041016

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3438327843905427e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',v' → logprob: -14.25002384185791
    4. ',
' → logprob: -14.37502384185791
    5. ',int' → logprob: -15.50002384185791
    6. ',n' → logprob: -16.500022888183594
    7. '‌,' → logprob: -16.500022888183594
    8. 'v' → logprob: -17.375022888183594
    9. '   ' → logprob: -17.500022888183594
    10. ')' → logprob: -17.625022888183594

Token 267: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002813194179907441
    2. 'par' → logprob: -6.877813339233398
    3. 'parent' → logprob: -7.002813339233398
    4. ' p' → logprob: -7.252813339233398
    5. 'pv' → logprob: -9.002813339233398
    6. ' parent' → logprob: -10.502813339233398
    7. 'pa' → logprob: -12.377813339233398
    8. 'prev' → logprob: -13.502813339233398
    9. 'pr' → logprob: -13.627813339233398
    10. ' par' → logprob: -13.752813339233398

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.491498531133402e-06
    2. ' ,' → logprob: -11.875009536743164
    3. '):
' → logprob: -14.500009536743164
    4. '   ' → logprob: -14.875009536743164
    5. ',
' → logprob: -15.125009536743164
    6. '),' → logprob: -15.500009536743164
    7. ',int' → logprob: -15.750009536743164
    8. '):' → logprob: -15.750009536743164
    9. 'int' → logprob: -15.875009536743164
    10. 't' → logprob: -15.875009536743164

Token 269: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.062019333243370056
    2. ' es' → logprob: -2.8120193481445312
    3. '	es' → logprob: -10.562019348144531
    4. '<|end|>' → logprob: -11.812019348144531
    5. ',' → logprob: -12.187019348144531
    6. ')' → logprob: -12.312019348144531
    7. 'e' → logprob: -13.687019348144531
    8. '[' → logprob: -14.062019348144531
    9. ' ' → logprob: -14.187019348144531
    10. '...' → logprob: -14.312019348144531

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.416665640543215e-05
    2. ' ,' → logprob: -10.87503433227539
    3. ',t' → logprob: -11.12503433227539
    4. ',
' → logprob: -15.62503433227539
    5. '[],' → logprob: -16.87503433227539
    6. '‌,' → logprob: -16.87503433227539
    7. '   ' → logprob: -17.12503433227539
    8. 't' → logprob: -17.62503433227539
    9. '),' → logprob: -17.62503433227539
    10. ',T' → logprob: -17.62503433227539

Token 271: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.01608974300324917
    2. ' tin' → logprob: -4.141089916229248
    3. 't' → logprob: -10.14108943939209
    4. ' ' → logprob: -13.01608943939209
    5. 'ti' → logprob: -13.39108943939209
    6. ')' → logprob: -13.39108943939209
    7. 'in' → logprob: -13.89108943939209
    8. 'ton' → logprob: -13.89108943939209
    9. 'vin' → logprob: -14.39108943939209
    10. 'tain' → logprob: -14.39108943939209

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008359544444829226
    2. ',t' → logprob: -7.12583589553833
    3. ' ,' → logprob: -10.500836372375488
    4. ',
' → logprob: -13.000836372375488
    5. 't' → logprob: -15.250836372375488
    6. ')' → logprob: -15.250836372375488
    7. '```' → logprob: -15.875836372375488
    8. 's' → logprob: -16.250835418701172
    9. '[' → logprob: -16.375835418701172
    10. '),' → logprob: -16.375835418701172

Token 273: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.011053125374019146
    2. ' tout' → logprob: -4.511053085327148
    3. 't' → logprob: -13.136053085327148
    4. 'todo' → logprob: -13.136053085327148
    5. 'Tout' → logprob: -15.011053085327148
    6. 'tou' → logprob: -15.136053085327148
    7. ' todo' → logprob: -15.886053085327148
    8. '   ' → logprob: -16.13605308532715
    9. ' ' → logprob: -16.26105308532715
    10. '```' → logprob: -16.26105308532715

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2961512513575144e-05
    2. ' ,' → logprob: -11.125022888183594
    3. ',k' → logprob: -12.125022888183594
    4. ',
' → logprob: -13.250022888183594
    5. '   ' → logprob: -15.375022888183594
    6. ',n' → logprob: -15.750022888183594
    7. ',t' → logprob: -16.250022888183594
    8. '‌,' → logprob: -16.250022888183594
    9. 's' → logprob: -17.000022888183594
    10. '):
' → logprob: -17.000022888183594

Token 275: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00975998304784298
    2. ' k' → logprob: -4.634759902954102
    3. '   ' → logprob: -13.259759902954102
    4. ' ' → logprob: -13.759759902954102
    5. '  ' → logprob: -14.884759902954102
    6. ')' → logprob: -15.634759902954102
    7. '
' → logprob: -16.0097599029541
    8. '    ' → logprob: -16.2597599029541
    9. '	k' → logprob: -16.5722599029541
    10. 'kx' → logprob: -16.6972599029541

Token 276: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -1.8908587662735954e-05
    2. '):' → logprob: -11.750019073486328
    3. 'holder' → logprob: -12.125019073486328
    4. ')' → logprob: -13.375019073486328
    5. 'Holder' → logprob: -13.875019073486328
    6. ' holder' → logprob: -14.625019073486328
    7. ')_' → logprob: -14.625019073486328
    8. '-holder' → logprob: -14.750019073486328
    9. '_owner' → logprob: -15.125019073486328
    10. '):
' → logprob: -15.250019073486328

Token 277: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48099634051322937
    2. '):' → logprob: -0.9809963703155518
    3. '):
' → logprob: -4.980996131896973
    4. '   ' → logprob: -12.355996131896973
    5. ':' → logprob: -12.480996131896973
    6. ' ,' → logprob: -12.605996131896973
    7. '):
' → logprob: -12.605996131896973
    8. ' ):' → logprob: -12.605996131896973
    9. ',
' → logprob: -12.855996131896973
    10. ')' → logprob: -13.105996131896973

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010176632553339005
    2. ' k' → logprob: -5.260176658630371
    3. '```' → logprob: -6.135176658630371
    4. ' tin' → logprob: -6.510176658630371
    5. 'k' → logprob: -7.885176658630371
    6. '
' → logprob: -8.385176658630371
    7. '	t' → logprob: -8.885176658630371
    8. '    
' → logprob: -9.260176658630371
    9. 'tin' → logprob: -9.385176658630371
    10. '``' → logprob: -9.385176658630371

Token 279: ' mark' (ID: 1983)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0030498430132865906
    2. 'k' → logprob: -6.003049850463867
    3. 'if' → logprob: -8.128049850463867
    4. 'import' → logprob: -9.128049850463867
    5. 'tout' → logprob: -9.753049850463867
    6. '```' → logprob: -10.003049850463867
    7. '   ' → logprob: -10.253049850463867
    8. ' tin' → logprob: -11.378049850463867
    9. 't' → logprob: -13.003049850463867
    10. 'tmp' → logprob: -13.128049850463867

Token 280: '_t' (ID: 838)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.004755138419568539
    2. '(v' → logprob: -6.754755020141602
    3. '[' → logprob: -6.879755020141602
    4. 'v' → logprob: -7.379755020141602
    5. '=' → logprob: -7.629755020141602
    6. 'tin' → logprob: -8.004755020141602
    7. 'in' → logprob: -8.254755020141602
    8. '[t' → logprob: -8.254755020141602
    9. '```' → logprob: -9.004755020141602
    10. '[u' → logprob: -9.254755020141602

Token 281: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00016158436483237892
    2. 'ime' → logprob: -9.750161170959473
    3. '[v' → logprob: -9.875161170959473
    4. '[in' → logprob: -10.000161170959473
    5. 'im' → logprob: -12.500161170959473
    6. '_in' → logprob: -13.625161170959473
    7. '[' → logprob: -14.250161170959473
    8. 'i' → logprob: -15.500161170959473
    9. 'imes' → logprob: -15.750161170959473
    10. 'v' → logprob: -16.37516212463379

Token 282: '(t' (ID: 2025)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.017983464524149895
    2. '[t' → logprob: -4.142983436584473
    3. '(v' → logprob: -6.392983436584473
    4. '[' → logprob: -8.392983436584473
    5. '(t' → logprob: -11.142983436584473
    6. '```' → logprob: -11.767983436584473
    7. '   ' → logprob: -12.017983436584473
    8. 't' → logprob: -12.517983436584473
    9. '(' → logprob: -13.642983436584473
    10. '=' → logprob: -13.642983436584473

Token 283: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0020384411327540874
    2. '(v' → logprob: -6.377038478851318
    3. '[v' → logprob: -8.62703800201416
    4. ',' → logprob: -9.75203800201416
    5. 'v' → logprob: -10.62703800201416
    6. '[in' → logprob: -10.75203800201416
    7. 'n' → logprob: -10.87703800201416
    8. 'im' → logprob: -12.12703800201416
    9. 'ime' → logprob: -12.50203800201416
    10. ')' → logprob: -12.75203800201416

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018623570213094354
    2. '[v' → logprob: -6.501862525939941
    3. ',v' → logprob: -8.376862525939941
    4. ' ,' → logprob: -9.126862525939941
    5. '[' → logprob: -11.626862525939941
    6. 'v' → logprob: -12.626862525939941
    7. ')' → logprob: -12.626862525939941
    8. ',
' → logprob: -12.626862525939941
    9. '
' → logprob: -14.626862525939941
    10. '```' → logprob: -15.001862525939941

Token 285: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0011708177626132965
    2. ' v' → logprob: -6.751170635223389
    3. ')v' → logprob: -14.751171112060547
    4. ')' → logprob: -15.876171112060547
    5. '	v' → logprob: -17.001171112060547
    6. ',' → logprob: -17.251171112060547
    7. '_v' → logprob: -17.751171112060547
    8. '[v' → logprob: -18.001171112060547
    9. ',v' → logprob: -18.501171112060547
    10. 'k' → logprob: -18.501171112060547

Token 286: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6341686844825745
    2. ',' → logprob: -0.7591686844825745
    3. ' ,' → logprob: -7.38416862487793
    4. ')
' → logprob: -7.88416862487793
    5. ' )' → logprob: -8.13416862487793
    6. ',
' → logprob: -9.00916862487793
    7. '   ' → logprob: -9.75916862487793
    8. ')=' → logprob: -10.50916862487793
    9. '),' → logprob: -11.00916862487793
    10. ',)' → logprob: -11.13416862487793

Token 287: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007637646631337702
    2. ' k' → logprob: -7.250763893127441
    3. '   ' → logprob: -9.875763893127441
    4. '    ' → logprob: -14.250763893127441
    5. ' ' → logprob: -15.125763893127441
    6. 'len' → logprob: -15.250763893127441
    7. '    
' → logprob: -15.375763893127441
    8. '  ' → logprob: -15.375763893127441
    9. '	k' → logprob: -15.500763893127441
    10. '0' → logprob: -15.750763893127441

Token 288: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -13.875005722045898
    3. '_keeper' → logprob: -13.875005722045898
    4. ')_' → logprob: -14.375005722045898
    5. '_hold' → logprob: -14.500005722045898
    6. ' _' → logprob: -14.625005722045898
    7. ']_' → logprob: -14.625005722045898
    8. '[' → logprob: -14.875005722045898
    9. '   ' → logprob: -15.125005722045898
    10. 'holder' → logprob: -15.500005722045898

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028069723397493362
    2. '[' → logprob: -3.6530697345733643
    3. ')
' → logprob: -6.403069496154785
    4. ' ' → logprob: -10.778069496154785
    5. ' )' → logprob: -10.903069496154785
    6. '0' → logprob: -11.153069496154785
    7. ',' → logprob: -11.278069496154785
    8. ');' → logprob: -11.403069496154785
    9. '   ' → logprob: -11.653069496154785
    10. '[-' → logprob: -12.403069496154785

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0929979085922241
    2. '<|end|>' → logprob: -1.4679979085922241
    3. ')' → logprob: -1.7179979085922241
    4. 'def' → logprob: -2.3429980278015137
    5. ')
' → logprob: -3.4679980278015137
    6. '()' → logprob: -3.5929980278015137
    7. '```' → logprob: -3.9679980278015137
    8. '
' → logprob: -3.9679980278015137
    9. '()
' → logprob: -4.217998027801514
    10. '[' → logprob: -4.342998027801514

Token 291: ' increase' (ID: 7064)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2537117004394531
    2. 'for' → logprob: -1.5037117004394531
    3. '   ' → logprob: -7.003711700439453
    4. ' for' → logprob: -7.503711700439453
    5. 'if' → logprob: -8.503711700439453
    6. '    
' → logprob: -9.753711700439453
    7. '```' → logprob: -10.753711700439453
    8. ' k' → logprob: -11.628711700439453
    9. 'def' → logprob: -12.128711700439453
    10. '
' → logprob: -12.253711700439453

Token 292: '_k' (ID: 11637)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.02655002847313881
    2. 'k' → logprob: -3.651550054550171
    3. '_k' → logprob: -8.90155029296875
    4. '(' → logprob: -10.27655029296875
    5. ' k' → logprob: -11.27655029296875
    6. 'counter' → logprob: -11.27655029296875
    7. 'count' → logprob: -11.65155029296875
    8. '
' → logprob: -11.90155029296875
    9. 'index' → logprob: -11.90155029296875
    10. '	k' → logprob: -12.27655029296875

Token 293: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.019139941781759262
    2. '[' → logprob: -4.269139766693115
    3. 'k' → logprob: -5.894139766693115
    4. '[k' → logprob: -6.894139766693115
    5. '_holder' → logprob: -8.019140243530273
    6. '_k' → logprob: -8.144140243530273
    7. '(' → logprob: -8.394140243530273
    8. '=k' → logprob: -8.894140243530273
    9. ' =' → logprob: -10.019140243530273
    10. '=' → logprob: -10.144140243530273

Token 294: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -3.392824874026701e-05
    2. 'holder' → logprob: -11.00003433227539
    3. 'Holder' → logprob: -12.25003433227539
    4. ')' → logprob: -12.75003433227539
    5. '[' → logprob: -13.00003433227539
    6. ',' → logprob: -13.62503433227539
    7. 'k' → logprob: -13.87503433227539
    8. ' HOLDER' → logprob: -14.12503433227539
    9. '_h' → logprob: -14.37503433227539
    10. ' Holder' → logprob: -14.50003433227539

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023379646241664886
    2. ')
' → logprob: -3.7733795642852783
    3. ')

' → logprob: -9.6483793258667
    4. ' )' → logprob: -10.1483793258667
    5. '[' → logprob: -11.0233793258667
    6. ' )
' → logprob: -12.2733793258667
    7. ' ' → logprob: -12.6483793258667
    8. '   ' → logprob: -13.0233793258667
    9. ')
' → logprob: -13.0233793258667
    10. ')#' → logprob: -14.7733793258667

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1835637092590332
    2. 'for' → logprob: -1.9335637092590332
    3. ' for' → logprob: -3.933563709259033
    4. '```' → logprob: -5.683563709259033
    5. '    
' → logprob: -10.058563232421875
    6. 'def' → logprob: -11.433563232421875
    7. '
' → logprob: -11.558563232421875
    8. 'dfs' → logprob: -11.683563232421875
    9. '   ' → logprob: -11.933563232421875
    10. '``' → logprob: -12.058563232421875

Token 297: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.404745439183898e-05
    2. ' for' → logprob: -10.75003433227539
    3. '   ' → logprob: -11.37503433227539
    4. '```' → logprob: -14.00003433227539
    5. '    
' → logprob: -16.50003433227539
    6. '	for' → logprob: -16.50003433227539
    7. 'if' → logprob: -17.50003433227539
    8. 'children' → logprob: -19.50003433227539
    9. '``' → logprob: -20.00003433227539
    10. '
' → logprob: -20.37503433227539

Token 298: ' to' (ID: 316)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1691751480102539
    2. 'nv' → logprob: -2.294175148010254
    3. 'to' → logprob: -3.669175148010254
    4. 'w' → logprob: -3.919175148010254
    5. 'nx' → logprob: -5.544175148010254
    6. 'e' → logprob: -6.169175148010254
    7. 'n' → logprob: -6.794175148010254
    8. 'x' → logprob: -7.044175148010254
    9. ' u' → logprob: -7.669175148010254
    10. ' nv' → logprob: -8.294175148010254

Token 299: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2254324108362198
    2. ' in' → logprob: -1.6004323959350586
    3. ' ' → logprob: -11.475432395935059
    4. '	in' → logprob: -13.225432395935059
    5. 'n' → logprob: -13.350432395935059
    6. 'v' → logprob: -13.475432395935059
    7. '<|end|>' → logprob: -13.850432395935059
    8. ',' → logprob: -13.975432395935059
    9. 'to' → logprob: -15.100432395935059
    10. '<|end|>' → logprob: -15.225432395935059

Token 300: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00023107275774236768
    2. ' es' → logprob: -8.37523078918457
    3. '	es' → logprob: -14.75023078918457
    4. '(es' → logprob: -17.50023078918457
    5. '_es' → logprob: -18.00023078918457
    6. '[' → logprob: -19.25023078918457
    7. 'esi' → logprob: -19.87523078918457
    8. '-es' → logprob: -19.87523078918457
    9. 'ess' → logprob: -20.00023078918457
    10. '
' → logprob: -20.00023078918457

Token 301: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.297462171758525e-05
    2. 'v' → logprob: -10.375033378601074
    3. '[' → logprob: -13.375033378601074
    4. '[p' → logprob: -17.125032424926758
    5. '	v' → logprob: -17.250032424926758
    6. '```' → logprob: -17.625032424926758
    7. ',v' → logprob: -17.750032424926758
    8. '<v' → logprob: -18.000032424926758
    9. '(v' → logprob: -18.125032424926758
    10. ' v' → logprob: -18.500032424926758

Token 302: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03378227725625038
    2. ']:
' → logprob: -3.4087822437286377
    3. ']' → logprob: -9.283782005310059
    4. ']:
' → logprob: -10.408782005310059
    5. ']:

' → logprob: -12.283782005310059
    6. ':' → logprob: -12.908782005310059
    7. ' ]' → logprob: -12.908782005310059
    8. '[' → logprob: -13.783782005310059
    9. ']>' → logprob: -14.158782005310059
    10. '>:' → logprob: -14.658782005310059

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017349496483802795
    2. ' if' → logprob: -4.142349720001221
    3. 'if' → logprob: -6.892349720001221
    4. '```' → logprob: -8.392349243164062
    5. '   ' → logprob: -10.017349243164062
    6. '	' → logprob: -11.392349243164062
    7. '	if' → logprob: -12.017349243164062
    8. '<|end|>' → logprob: -13.017349243164062
    9. '	   ' → logprob: -13.267349243164062
    10. '           ' → logprob: -13.392349243164062

Token 304: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04075132682919502
    2. ' if' → logprob: -3.2907512187957764
    3. '       ' → logprob: -5.9157514572143555
    4. '	if' → logprob: -12.290751457214355
    5. '   ' → logprob: -12.790751457214355
    6. '@if' → logprob: -13.915751457214355
    7. '```' → logprob: -14.040751457214355
    8. '           ' → logprob: -15.040751457214355
    9. ' ' → logprob: -16.66575050354004
    10. ';if' → logprob: -16.91575050354004

Token 305: ' is' (ID: 382)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.16022492945194244
    2. ' to' → logprob: -1.9102249145507812
    3. '   ' → logprob: -14.910224914550781
    4. '	to' → logprob: -15.285224914550781
    5. '(to' → logprob: -15.910224914550781
    6. ' ' → logprob: -16.91022491455078
    7. ' not' → logprob: -17.28522491455078
    8. 'not' → logprob: -18.16022491455078
    9. '[to' → logprob: -18.16022491455078
    10. ' ' → logprob: -19.03522491455078

Token 306: '_parent' (ID: 39570)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08387430757284164
    2. 'to' → logprob: -2.583874225616455
    3. ' not' → logprob: -5.333874225616455
    4. 'not' → logprob: -8.958874702453613
    5. '(to' → logprob: -11.708874702453613
    6. '[to' → logprob: -12.208874702453613
    7. 't' → logprob: -13.458874702453613
    8. 'tout' → logprob: -14.583874702453613
    9. ' tout' → logprob: -14.833874702453613
    10. '	to' → logprob: -15.208874702453613

Token 307: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.9120280146598816
    2. 'to' → logprob: -1.2870280742645264
    3. ' to' → logprob: -1.5370280742645264
    4. ' not' → logprob: -2.4120280742645264
    5. 'not' → logprob: -5.162027835845947
    6. ' !=' → logprob: -5.537027835845947
    7. ' ==' → logprob: -5.912027835845947
    8. '[to' → logprob: -6.412027835845947
    9. '!=' → logprob: -6.912027835845947
    10. '==' → logprob: -7.037027835845947

Token 308: ',' (ID: 11)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.3737186193466187
    2. ' !=' → logprob: -1.4987186193466187
    3. ' p' → logprob: -1.7487186193466187
    4. ' ' → logprob: -2.123718738555908
    5. ' v' → logprob: -2.498718738555908
    6. '!=' → logprob: -2.998718738555908
    7. ' ==' → logprob: -3.123718738555908
    8. '==' → logprob: -3.623718738555908
    9. ' or' → logprob: -3.748718738555908
    10. ',' → logprob: -6.623718738555908

Token 309: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.037192586809396744
    2. 'v' → logprob: -3.7871925830841064
    3. ' p' → logprob: -4.2871928215026855
    4. ' v' → logprob: -9.162192344665527
    5. '<p' → logprob: -14.287192344665527
    6. ')' → logprob: -15.037192344665527
    7. '	p' → logprob: -15.287192344665527
    8. '   ' → logprob: -15.537192344665527
    9. ' ' → logprob: -15.662192344665527
    10. ')p' → logprob: -16.037193298339844

Token 310: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4204600155353546
    2. ',' → logprob: -1.9204599857330322
    3. '):
' → logprob: -2.5454599857330322
    4. ')' → logprob: -2.6704599857330322
    5. ')==' → logprob: -3.5454599857330322
    6. '==' → logprob: -4.170460224151611
    7. ' ):' → logprob: -6.670460224151611
    8. ' ==' → logprob: -7.420460224151611
    9. ':' → logprob: -7.795460224151611
    10. ',
' → logprob: -7.920460224151611

Token 311: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6712509393692017
    2. '           ' → logprob: -0.7962509393692017
    3. 'continue' → logprob: -3.296250820159912
    4. ' False' → logprob: -7.796250820159912
    5. '               ' → logprob: -9.17125129699707
    6. 'False' → logprob: -9.42125129699707
    7. ' True' → logprob: -9.67125129699707
    8. '   ' → logprob: -9.79625129699707
    9. '       ' → logprob: -10.29625129699707
    10. '_continue' → logprob: -10.42125129699707

Token 312: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07280658185482025
    2. '
' → logprob: -3.5728065967559814
    3. '        
' → logprob: -3.6978065967559814
    4. '   ' → logprob: -5.197806358337402
    5. 'if' → logprob: -5.697806358337402
    6. 'def' → logprob: -6.072806358337402
    7. '    
' → logprob: -6.572806358337402
    8. '           ' → logprob: -6.947806358337402
    9. '  
' → logprob: -7.197806358337402
    10. ' if' → logprob: -7.447806358337402

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34884998202323914
    2. '   ' → logprob: -1.8488500118255615
    3. 'if' → logprob: -3.2238500118255615
    4. '        
' → logprob: -3.7238500118255615
    5. 'def' → logprob: -3.9738500118255615
    6. '
' → logprob: -4.598849773406982
    7. ' if' → logprob: -4.598849773406982
    8. '    
' → logprob: -4.723849773406982
    9. '==' → logprob: -5.473849773406982
    10. ' not' → logprob: -5.848849773406982

Token 314: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.03314659371972084
    2. ' dfs' → logprob: -3.908146619796753
    3. '       ' → logprob: -4.533146381378174
    4. '   ' → logprob: -7.283146381378174
    5. 'tin' → logprob: -8.158146858215332
    6. '           ' → logprob: -8.408146858215332
    7. 'v' → logprob: -8.783146858215332
    8. 'def' → logprob: -9.158146858215332
    9. 'd' → logprob: -9.658146858215332
    10. 'if' → logprob: -9.658146858215332

Token 315: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -5.598092684522271e-05
    2. '(
' → logprob: -10.500056266784668
    3. '(' → logprob: -10.625056266784668
    4. 'to' → logprob: -12.500056266784668
    5. ' (' → logprob: -16.75005531311035
    6. ',to' → logprob: -16.87505531311035
    7. '```' → logprob: -17.12505531311035
    8. '(token' → logprob: -17.12505531311035
    9. '(

' → logprob: -17.37505531311035
    10. ' to' → logprob: -17.50005531311035

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034184358082711697
    2. ',to' → logprob: -5.878418445587158
    3. 'to' → logprob: -7.753418445587158
    4. '(to' → logprob: -9.00341796875
    5. ' ,' → logprob: -9.87841796875
    6. ',
' → logprob: -12.25341796875
    7. '[to' → logprob: -12.87841796875
    8. ')' → logprob: -14.12841796875
    9. ' to' → logprob: -14.37841796875
    10. '),' → logprob: -14.62841796875

Token 317: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004080062732100487
    2. ' v' → logprob: -5.504080295562744
    3. '	v' → logprob: -13.629079818725586
    4. '   ' → logprob: -15.754079818725586
    5. ')v' → logprob: -16.129079818725586
    6. '
' → logprob: -16.754079818725586
    7. 'vq' → logprob: -16.879079818725586
    8. '    ' → logprob: -17.129079818725586
    9. ' ' → logprob: -17.504079818725586
    10. ',v' → logprob: -18.129079818725586

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025895543512888253
    2. ' ,' → logprob: -8.375259399414062
    3. ' es' → logprob: -10.625259399414062
    4. ')' → logprob: -13.500259399414062
    5. 's' → logprob: -14.375259399414062
    6. 'es' → logprob: -14.625259399414062
    7. '),' → logprob: -15.000259399414062
    8. '	es' → logprob: -15.125259399414062
    9. '   ' → logprob: -15.375259399414062
    10. '‌,' → logprob: -16.000259399414062

Token 319: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.018179206177592278
    2. ' es' → logprob: -4.018179416656494
    3. '	es' → logprob: -11.893178939819336
    4. ',' → logprob: -12.393178939819336
    5. '   ' → logprob: -12.393178939819336
    6. ')' → logprob: -13.143178939819336
    7. ' ' → logprob: -13.393178939819336
    8. 'os' → logprob: -13.518178939819336
    9. ' ' → logprob: -13.643178939819336
    10. '```' → logprob: -13.768178939819336

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5861724831629544e-05
    2. ',t' → logprob: -10.125056266784668
    3. ',to' → logprob: -12.000056266784668
    4. 't' → logprob: -12.750056266784668
    5. ' ,' → logprob: -12.875056266784668
    6. 'to' → logprob: -13.125056266784668
    7. 's' → logprob: -14.750056266784668
    8. ')' → logprob: -15.000056266784668
    9. ',
' → logprob: -15.625056266784668
    10. '),' → logprob: -15.625056266784668

Token 321: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0030725449323654175
    2. 'tout' → logprob: -6.378072738647461
    3. ' tin' → logprob: -7.003072738647461
    4. 'to' → logprob: -7.753072738647461
    5. 't' → logprob: -11.628072738647461
    6. '   ' → logprob: -12.378072738647461
    7. ' to' → logprob: -12.878072738647461
    8. ' tout' → logprob: -13.003072738647461
    9. 'toc' → logprob: -13.253072738647461
    10. ' ' → logprob: -13.628072738647461

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015097891446202993
    2. ',t' → logprob: -9.375150680541992
    3. ' ,' → logprob: -10.000150680541992
    4. 'tout' → logprob: -11.375150680541992
    5. '   ' → logprob: -12.250150680541992
    6. ',
' → logprob: -13.500150680541992
    7. ' tout' → logprob: -13.625150680541992
    8. 't' → logprob: -14.875150680541992
    9. '[' → logprob: -15.250150680541992
    10. '       ' → logprob: -15.375150680541992

Token 323: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.005246568005532026
    2. ' tout' → logprob: -5.255246639251709
    3. 't' → logprob: -12.13024616241455
    4. ' ' → logprob: -12.88024616241455
    5. 'to' → logprob: -13.50524616241455
    6. '   ' → logprob: -13.88024616241455
    7. '    ' → logprob: -14.63024616241455
    8. '  ' → logprob: -14.63024616241455
    9. 'todo' → logprob: -15.00524616241455
    10. 'tou' → logprob: -15.38024616241455

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3319124011322856e-05
    2. ')' → logprob: -11.500022888183594
    3. ',k' → logprob: -11.750022888183594
    4. ' ,' → logprob: -12.500022888183594
    5. '),' → logprob: -14.000022888183594
    6. '   ' → logprob: -15.125022888183594
    7. ',
' → logprob: -15.500022888183594
    8. 'k' → logprob: -15.875022888183594
    9. '```' → logprob: -17.125022888183594
    10. '       ' → logprob: -17.625022888183594

Token 325: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0013261953135952353
    2. ' k' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.251325607299805
    4. '	k' → logprob: -16.251325607299805
    5. ' ' → logprob: -17.251325607299805
    6. ' ' → logprob: -18.376325607299805
    7. '[k' → logprob: -18.501325607299805
    8. '"k' → logprob: -18.751325607299805
    9. '{k' → logprob: -18.751325607299805
    10. ')' → logprob: -19.001325607299805

Token 326: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -1.771655115589965e-05
    2. 'holder' → logprob: -11.000018119812012
    3. '-holder' → logprob: -14.875018119812012
    4. '	holder' → logprob: -15.500018119812012
    5. 'Holder' → logprob: -15.625018119812012
    6. '_h' → logprob: -16.250017166137695
    7. '_owner' → logprob: -17.375017166137695
    8. ')' → logprob: -17.875017166137695
    9. '   ' → logprob: -17.875017166137695
    10. ' HOLDER' → logprob: -17.875017166137695

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008862502872943878
    2. ')
' → logprob: -4.758862495422363
    3. ')

' → logprob: -8.383862495422363
    4. '   ' → logprob: -12.258862495422363
    5. '<|end|>' → logprob: -12.258862495422363
    6. ' )' → logprob: -13.258862495422363
    7. ')#' → logprob: -13.383862495422363
    8. 'def' → logprob: -13.383862495422363
    9. ')
' → logprob: -14.008862495422363
    10. ')return' → logprob: -14.633862495422363

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019689219072461128
    2. '```' → logprob: -4.519689083099365
    3. 'def' → logprob: -5.644689083099365
    4. '       ' → logprob: -6.144689083099365
    5. '
' → logprob: -6.644689083099365
    6. '    
' → logprob: -8.144689559936523
    7. 'mark' → logprob: -8.394689559936523
    8. '        
' → logprob: -8.894689559936523
    9. 'if' → logprob: -9.019689559936523
    10. 't' → logprob: -9.144689559936523

Token 329: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' (adapté à ' mark') → logprob: -0.16558906435966492
    2. '   ' → logprob: -2.0405890941619873
    3. ' mark' → logprob: -3.7905890941619873
    4. 'set' → logprob: -10.665589332580566
    5. '```' → logprob: -11.040589332580566
    6. ' ' → logprob: -11.290589332580566
    7. '  ' → logprob: -12.290589332580566
    8. 'increase' → logprob: -12.540589332580566
    9. '       ' → logprob: -13.040589332580566
    10. 'marker' → logprob: -13.540589332580566

Token 330: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.003231067443266511
    2. 'tout' → logprob: -5.753231048583984
    3. 't' → logprob: -9.878231048583984
    4. 'Tout' → logprob: -13.878231048583984
    5. '_out' → logprob: -14.378231048583984
    6. '	t' → logprob: -16.128231048583984
    7. 'out' → logprob: -16.753231048583984
    8. '_' → logprob: -16.753231048583984
    9. '_tot' → logprob: -17.253231048583984
    10. '\' → logprob: -17.253231048583984

Token 331: 'out' (ID: 468)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.06216911971569061
    2. 'out' → logprob: -2.812169075012207
    3. 't' → logprob: -9.187169075012207
    4. '(t' → logprob: -10.187169075012207
    5. '_t' → logprob: -10.312169075012207
    6. '[t' → logprob: -11.312169075012207
    7. 'ut' → logprob: -13.062169075012207
    8. '(out' → logprob: -13.187169075012207
    9. 'tou' → logprob: -13.187169075012207
    10. '[out' → logprob: -13.562169075012207

Token 332: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -4.008129963040119e-06
    2. ' (' → logprob: -13.000003814697266
    3. '(' → logprob: -13.875003814697266
    4. 't' → logprob: -14.250003814697266
    5. '	t' → logprob: -17.750003814697266
    6. 'tout' → logprob: -17.750003814697266
    7. '```' → logprob: -17.750003814697266
    8. ' ' → logprob: -18.000003814697266
    9. '   ' → logprob: -18.125003814697266
    10. '[t' → logprob: -18.125003814697266

Token 333: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.16195237636566162
    2. 'tout' → logprob: -1.9119523763656616
    3. 'ut' → logprob: -7.161952495574951
    4. 't' → logprob: -7.411952495574951
    5. 'ou' → logprob: -9.161952018737793
    6. '(out' → logprob: -9.536952018737793
    7. '[out' → logprob: -9.536952018737793
    8. '(t' → logprob: -10.286952018737793
    9. '[t' → logprob: -10.661952018737793
    10. ' tout' → logprob: -11.286952018737793

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007803934160619974
    2. ',t' → logprob: -5.257803916931152
    3. ' ,' → logprob: -6.382803916931152
    4. '[t' → logprob: -7.757803916931152
    5. '[' → logprob: -7.882803916931152
    6. ')' → logprob: -10.507803916931152
    7. '(t' → logprob: -11.132803916931152
    8. '   ' → logprob: -11.632803916931152
    9. '```' → logprob: -12.132803916931152
    10. '<|end|>' → logprob: -12.632803916931152

Token 335: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0003806257154792547
    2. ' v' → logprob: -7.875380516052246
    3. 't' → logprob: -16.125381469726562
    4. '	v' → logprob: -16.125381469726562
    5. ')v' → logprob: -16.375381469726562
    6. '<|end|>' → logprob: -16.625381469726562
    7. 'tout' → logprob: -16.875381469726562
    8. 'tin' → logprob: -17.375381469726562
    9. ')' → logprob: -17.625381469726562
    10. '[v' → logprob: -17.750381469726562

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002489423204679042
    2. ' ,' → logprob: -8.375248908996582
    3. ')' → logprob: -12.000248908996582
    4. ',k' → logprob: -12.250248908996582
    5. ',
' → logprob: -12.625248908996582
    6. '<|end|>' → logprob: -14.000248908996582
    7. ',

' → logprob: -14.500248908996582
    8. ' ' → logprob: -14.750248908996582
    9. '‌,' → logprob: -14.750248908996582
    10. '),' → logprob: -15.000248908996582

Token 337: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005561320576816797
    2. ' k' → logprob: -7.500555992126465
    3. '   ' → logprob: -13.250555992126465
    4. ')' → logprob: -14.375555992126465
    5. ' ' → logprob: -14.625555992126465
    6. '	k' → logprob: -16.12555694580078
    7. '  ' → logprob: -16.37555694580078
    8. ' ' → logprob: -16.62555694580078
    9. ',' → logprob: -17.50055694580078
    10. '    ' → logprob: -17.75055694580078

Token 338: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -0.000867752474732697
    2. 'holder' → logprob: -7.12586784362793
    3. 'older' → logprob: -9.87586784362793
    4. '-holder' → logprob: -12.00086784362793
    5. 'Holder' → logprob: -12.87586784362793
    6. '	holder' → logprob: -13.25086784362793
    7. ' Holder' → logprob: -14.50086784362793
    8. ' holder' → logprob: -14.87586784362793
    9. 'old' → logprob: -15.62586784362793
    10. ' HOLDER' → logprob: -16.25086784362793

Token 339: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034058792516589165
    2. ')
' → logprob: -8.000340461730957
    3. '   ' → logprob: -12.750340461730957
    4. ' )' → logprob: -13.625340461730957
    5. ')

' → logprob: -14.500340461730957
    6. ')`' → logprob: -16.250341415405273
    7. ',' → logprob: -16.375341415405273
    8. ')#' → logprob: -16.500341415405273
    9. '),' → logprob: -16.625341415405273
    10. 'def' → logprob: -17.125341415405273

Token 340: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017821170389652252
    2. '   ' → logprob: -4.142821311950684
    3. '```' → logprob: -7.517821311950684
    4. '<|end|>' → logprob: -8.392821311950684
    5. '    
' → logprob: -8.517821311950684
    6. '  
' → logprob: -8.767821311950684
    7. '
' → logprob: -8.892821311950684
    8. '       ' → logprob: -9.267821311950684
    9. ' 
' → logprob: -9.392821311950684
    10. ')' → logprob: -9.392821311950684

Token 341: ' mark' (ID: 1983)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5618376731872559
    2. 'is' → logprob: -0.9368376731872559
    3. 'v' → logprob: -4.311837673187256
    4. ' v' → logprob: -4.311837673187256
    5. 'mark' → logprob: -5.436837673187256
    6. ' mark' → logprob: -5.561837673187256
    7. 'not' → logprob: -7.061837673187256
    8. 't' → logprob: -7.811837673187256
    9. ' not' → logprob: -7.811837673187256
    10. 'def' → logprob: -8.186838150024414

Token 342: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.2127087504486553e-05
    2. '_' → logprob: -10.875021934509277
    3. '_in' → logprob: -13.000021934509277
    4. ' _' → logprob: -15.750021934509277
    5. '_tim' → logprob: -15.750021934509277
    6. '__' → logprob: -16.500022888183594
    7. '_s' → logprob: -16.875022888183594
    8. '_tol' → logprob: -17.000022888183594
    9. '_tmp' → logprob: -17.125022888183594
    10. '##_' → logprob: -17.125022888183594

Token 343: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0002700377081055194
    2. 'tin' → logprob: -8.250269889831543
    3. 'int' → logprob: -12.750269889831543
    4. '_in' → logprob: -13.125269889831543
    5. '_t' → logprob: -13.875269889831543
    6. 'tout' → logprob: -14.375269889831543
    7. '_' → logprob: -14.625269889831543
    8. 'out' → logprob: -15.000269889831543
    9. 'intr' → logprob: -15.500269889831543
    10. ' tin' → logprob: -15.500269889831543

Token 344: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0010378103470429778
    2. '(' → logprob: -6.87603759765625
    3. ' (' → logprob: -12.62603759765625
    4. '(
' → logprob: -13.75103759765625
    5. '[t' → logprob: -15.62603759765625
    6. '```' → logprob: -15.62603759765625
    7. '[' → logprob: -16.12603759765625
    8. '(

' → logprob: -16.37603759765625
    9. '(T' → logprob: -17.87603759765625
    10. ',' → logprob: -18.25103759765625

Token 345: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0011908221058547497
    2. '[in' → logprob: -7.001190662384033
    3. ',' → logprob: -9.126191139221191
    4. '[t' → logprob: -9.626191139221191
    5. '(t' → logprob: -10.001191139221191
    6. 'int' → logprob: -11.001191139221191
    7. '(in' → logprob: -11.751191139221191
    8. 'intr' → logprob: -11.751191139221191
    9. 'IN' → logprob: -12.751191139221191
    10. '[' → logprob: -12.876191139221191

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038348292582668364
    2. ',t' → logprob: -8.000383377075195
    3. '[t' → logprob: -10.875383377075195
    4. ' ,' → logprob: -11.125383377075195
    5. ',v' → logprob: -11.875383377075195
    6. '[' → logprob: -13.125383377075195
    7. '[v' → logprob: -13.375383377075195
    8. ')' → logprob: -13.625383377075195
    9. '```' → logprob: -13.625383377075195
    10. ',
' → logprob: -14.875383377075195

Token 347: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02228832058608532
    2. ' v' → logprob: -4.1472883224487305
    3. '<|end|>' → logprob: -5.5222883224487305
    4. ')' → logprob: -7.0222883224487305
    5. 'tin' → logprob: -7.1472883224487305
    6. ')v' → logprob: -8.39728832244873
    7. ' tin' → logprob: -8.64728832244873
    8. '<|end|>' → logprob: -9.77228832244873
    9. 'vin' → logprob: -10.52228832244873
    10. 't' → logprob: -11.02228832244873

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.184812031686306e-05
    2. ' ,' → logprob: -10.125082015991211
    3. ',v' → logprob: -10.625082015991211
    4. '[' → logprob: -12.000082015991211
    5. '[v' → logprob: -12.875082015991211
    6. ')' → logprob: -13.125082015991211
    7. 'v' → logprob: -13.250082015991211
    8. '‌,' → logprob: -13.875082015991211
    9. ',
' → logprob: -14.125082015991211
    10. '),' → logprob: -14.250082015991211

Token 349: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.021916696801781654
    2. ' k' → logprob: -4.14691686630249
    3. 'tin' → logprob: -5.64691686630249
    4. ' tin' → logprob: -6.64691686630249
    5. 'v' → logprob: -8.021916389465332
    6. ')' → logprob: -8.271916389465332
    7. 't' → logprob: -8.771916389465332
    8. '<|end|>' → logprob: -9.271916389465332
    9. '<|end|>' → logprob: -10.146916389465332
    10. 'kin' → logprob: -10.521916389465332

Token 350: '_holder' (ID: 128963)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39694899320602417
    2. '_holder' → logprob: -1.771949052810669
    3. '):' → logprob: -2.146949052810669
    4. '):
' → logprob: -3.521949052810669
    5. ')' → logprob: -5.14694881439209
    6. '   ' → logprob: -6.77194881439209
    7. '):

' → logprob: -6.77194881439209
    8. '),' → logprob: -7.02194881439209
    9. ')_' → logprob: -7.89694881439209
    10. ' ,' → logprob: -8.02194881439209

Token 351: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010723850573413074
    2. ' ,' → logprob: -9.375106811523438
    3. ',v' → logprob: -11.125106811523438
    4. '):' → logprob: -12.250106811523438
    5. '   ' → logprob: -13.375106811523438
    6. ',value' → logprob: -15.375106811523438
    7. ',t' → logprob: -15.500106811523438
    8. '):
' → logprob: -15.625106811523438
    9. ':' → logprob: -16.000106811523438
    10. ',k' → logprob: -16.250106811523438

Token 352: '   ' (ID: 271)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.2043374478816986
    2. '   ' → logprob: -2.0793373584747314
    3. ' tin' → logprob: -2.8293373584747314
    4. 't' → logprob: -7.5793375968933105
    5. '	t' → logprob: -9.329337120056152
    6. 'k' → logprob: -10.079337120056152
    7. '```' → logprob: -10.954337120056152
    8. ' ' → logprob: -10.954337120056152
    9. 'tn' → logprob: -11.579337120056152
    10. '  ' → logprob: -11.954337120056152

Token 353: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' (adapté à ' tin') → logprob: -3.6550729419104755e-05
    2. ' tin' → logprob: -10.250036239624023
    3. 't' → logprob: -14.375036239624023
    4. '   ' → logprob: -14.625036239624023
    5. 'ti' → logprob: -16.625036239624023
    6. 'k' → logprob: -17.125036239624023
    7. 'tn' → logprob: -17.625036239624023
    8. ' ' → logprob: -17.875036239624023
    9. 'tan' → logprob: -18.000036239624023
    10. '```' → logprob: -18.375036239624023

Token 354: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0022771733347326517
    2. '[' → logprob: -6.127277374267578
    3. '[t' → logprob: -9.377277374267578
    4. 'v' → logprob: -12.627277374267578
    5. ' [' → logprob: -13.877277374267578
    6. '[k' → logprob: -14.002277374267578
    7. '[val' → logprob: -14.127277374267578
    8. '```' → logprob: -14.752277374267578
    9. ',' → logprob: -16.127277374267578
    10. '[
' → logprob: -16.252277374267578

Token 355: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.149051427608356e-05
    2. ']=' → logprob: -10.000081062316895
    3. ' ]' → logprob: -10.250081062316895
    4. '=' → logprob: -14.875081062316895
    5. ')' → logprob: -15.500081062316895
    6. ']
' → logprob: -17.00008201599121
    7. '[' → logprob: -18.00008201599121
    8. ']

' → logprob: -18.37508201599121
    9. '   ' → logprob: -19.00008201599121
    10. ']==' → logprob: -19.00008201599121

Token 356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019291093340143561
    2. ' =' → logprob: -6.25192928314209
    3. '=k' → logprob: -15.00192928314209
    4. '=
' → logprob: -16.751928329467773
    5. '[' → logprob: -17.126928329467773
    6. ')=' → logprob: -18.126928329467773
    7. '=int' → logprob: -18.251928329467773
    8. '=

' → logprob: -18.376928329467773
    9. '＝' → logprob: -18.626928329467773
    10. ']=' → logprob: -18.876928329467773

Token 357: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.547789674485102e-05
    2. ' k' → logprob: -10.250035285949707
    3. '   ' → logprob: -20.375036239624023
    4. ' ' → logprob: -21.125036239624023
    5. 'kx' → logprob: -21.625036239624023
    6. '	k' → logprob: -21.750036239624023
    7. '0' → logprob: -23.250036239624023
    8. '
' → logprob: -23.375036239624023
    9. '  ' → logprob: -23.625036239624023
    10. '*k' → logprob: -23.875036239624023

Token 358: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -1.1041145626222715e-05
    2. 'holder' → logprob: -12.125011444091797
    3. ' _' → logprob: -13.125011444091797
    4. 'Holder' → logprob: -13.500011444091797
    5. '[' → logprob: -14.625011444091797
    6. '_hold' → logprob: -15.000011444091797
    7. '_' → logprob: -15.250011444091797
    8. '_h' → logprob: -15.250011444091797
    9. ' HOLDER' → logprob: -15.375011444091797
    10. ' Holder' → logprob: -16.000011444091797

Token 359: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.0219828002154827e-05
    2. '0' → logprob: -10.875020027160645
    3. '[-' → logprob: -13.625020027160645
    4. '```' → logprob: -18.12502098083496
    5. ' [' → logprob: -18.62502098083496
    6. ' ' → logprob: -19.00002098083496
    7. '[
' → logprob: -19.50002098083496
    8. '
' → logprob: -20.00002098083496
    9. '   ' → logprob: -20.62502098083496
    10. '1' → logprob: -20.75002098083496

Token 360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '
' → logprob: -16.125
    4. '-' → logprob: -17.5
    5. '```' → logprob: -18.125
    6. '۰' → logprob: -18.6875
    7. '   ' → logprob: -19.0625
    8. '

' → logprob: -19.25
    9. '[' → logprob: -19.5625
    10. ']' → logprob: -20.125

Token 361: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01217182818800211
    2. '<|end|>' → logprob: -5.012171745300293
    3. ')' → logprob: -5.262171745300293
    4. ')]' → logprob: -8.762171745300293
    5. ' ]' → logprob: -10.137171745300293
    6. '<|end|>' → logprob: -10.387171745300293
    7. '[' → logprob: -11.762171745300293
    8. ']
' → logprob: -11.887171745300293
    9. '])' → logprob: -13.012171745300293
    10. ']int' → logprob: -13.012171745300293

Token 362: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: ' increase' (ID: 7064)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.37029874324798584
    2. ' mark' → logprob: -1.9952987432479858
    3. 'def' → logprob: -2.1202988624572754
    4. 'increase' → logprob: -2.9952988624572754
    5. ' def' → logprob: -5.995298862457275
    6. ' increase' → logprob: -7.995298862457275
    7. '_mark' → logprob: -8.245298385620117
    8. 'increment' → logprob: -9.495298385620117
    9. 't' → logprob: -10.245298385620117
    10. 'in' → logprob: -10.370298385620117

Token 364: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.1472419600977446e-06
    2. 'k' → logprob: -14.375000953674316
    3. '(k' → logprob: -14.625000953674316
    4. '_' → logprob: -18.000001907348633
    5. '```' → logprob: -18.625001907348633
    6. '\' → logprob: -19.000001907348633
    7. '_K' → logprob: -19.125001907348633
    8. '_t' → logprob: -19.750001907348633
    9. ' _' → logprob: -19.875001907348633
    10. 'K' → logprob: -20.250001907348633

Token 365: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -5.919942486798391e-05
    2. '(' → logprob: -10.125059127807617
    3. ' (' → logprob: -10.875059127807617
    4. '(
' → logprob: -16.875059127807617
    5. 'k' → logprob: -17.625059127807617
    6. '(K' → logprob: -19.500059127807617
    7. ' ' → logprob: -19.625059127807617
    8. '[k' → logprob: -19.750059127807617
    9. ' k' → logprob: -19.875059127807617
    10. ' =' → logprob: -20.375059127807617

Token 366: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -0.00026407750556245446
    2. 'holder' → logprob: -8.250264167785645
    3. '(holder' → logprob: -14.000264167785645
    4. 'Holder' → logprob: -14.000264167785645
    5. '-holder' → logprob: -14.875264167785645
    6. '```' → logprob: -15.500264167785645
    7. '	holder' → logprob: -15.750264167785645
    8. '[' → logprob: -15.875264167785645
    9. ' holder' → logprob: -16.750263214111328
    10. 'k' → logprob: -16.750263214111328

Token 367: '):
' (ID: 1883)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0248793363571167
    2. '):' → logprob: -1.0248793363571167
    3. '):
' → logprob: -1.2748793363571167
    4. '[k' → logprob: -6.899879455566406
    5. ')' → logprob: -7.149879455566406
    6. ')[' → logprob: -8.524879455566406
    7. ' ):' → logprob: -8.899879455566406
    8. ':' → logprob: -9.149879455566406
    9. ' ):
' → logprob: -9.399879455566406
    10. '```' → logprob: -9.774879455566406

Token 368: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0006340435356833041
    2. ' k' → logprob: -7.75063419342041
    3. '   ' → logprob: -8.50063419342041
    4. '[' → logprob: -18.375633239746094
    5. '	k' → logprob: -18.750633239746094
    6. '  ' → logprob: -19.750633239746094
    7. '1' → logprob: -20.625633239746094
    8. ' ' → logprob: -21.875633239746094
    9. '0' → logprob: -22.000633239746094
    10. '    ' → logprob: -22.000633239746094

Token 369: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -3.6789137084269896e-05
    2. ' k' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.50003719329834
    4. '  ' → logprob: -20.625036239624023
    5. '[' → logprob: -21.125036239624023
    6. '	k' → logprob: -21.625036239624023
    7. ' ' → logprob: -22.375036239624023
    8. '```' → logprob: -22.750036239624023
    9. '1' → logprob: -23.125036239624023
    10. '    ' → logprob: -23.375036239624023

Token 370: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.000000953674316
    3. 'holder' → logprob: -15.500000953674316
    4. '	holder' → logprob: -16.125
    5. 'Holder' → logprob: -17.375
    6. '_hold' → logprob: -17.625
    7. '-holder' → logprob: -17.875
    8. '```' → logprob: -20.0
    9. ' HOLDER' → logprob: -20.25
    10. '_keeper' → logprob: -20.25

Token 371: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '.append' → logprob: -17.875
    3. '```' → logprob: -18.25
    4. '=' → logprob: -19.75
    5. '0' → logprob: -19.75
    6. ' ' → logprob: -21.75
    7. '
' → logprob: -22.0
    8. 'Append' → logprob: -22.125
    9. 'def' → logprob: -22.25
    10. '1' → logprob: -22.375

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -17.5
    4. '
' → logprob: -17.625
    5. '```' → logprob: -19.0
    6. '۰' → logprob: -20.0
    7. '  ' → logprob: -21.25
    8. '	' → logprob: -21.4375
    9. '٠' → logprob: -21.5625
    10. '０' → logprob: -21.75

Token 373: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6201115250587463
    2. ' +=' → logprob: -1.1201114654541016
    3. ']+=' → logprob: -2.2451114654541016
    4. ']' → logprob: -3.7451114654541016
    5. ')' → logprob: -5.745111465454102
    6. '<|end|>' → logprob: -5.870111465454102
    7. '+' → logprob: -8.995111465454102
    8. '=' → logprob: -9.870111465454102
    9. ' ]' → logprob: -10.120111465454102
    10. ' ' → logprob: -10.995111465454102

Token 374: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001503313542343676
    2. ' +=' → logprob: -6.5015034675598145
    3. '=' → logprob: -14.626502990722656
    4. ']+=' → logprob: -14.626502990722656
    5. '+' → logprob: -17.126502990722656
    6. '+=(' → logprob: -18.126502990722656
    7. '+='' → logprob: -19.001502990722656
    8. '```' → logprob: -19.501502990722656
    9. ' ' → logprob: -20.001502990722656
    10. '+="' → logprob: -20.126502990722656

Token 375: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '```' → logprob: -19.000001907348633
    5. '2' → logprob: -20.125001907348633
    6. '
' → logprob: -20.437501907348633
    7. '  ' → logprob: -20.625001907348633
    8. '１' → logprob: -20.687501907348633
    9. '۱' → logprob: -21.125001907348633
    10. '0' → logprob: -21.125001907348633

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -18.75
    4. '   ' → logprob: -19.25
    5. '```' → logprob: -20.25
    6. '１' → logprob: -21.125
    7. '۱' → logprob: -21.75
    8. '

' → logprob: -22.0
    9. '  ' → logprob: -22.0625
    10. '2' → logprob: -22.3125

Token 377: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006004538154229522
    2. '```' → logprob: -8.000600814819336
    3. ' def' → logprob: -8.500600814819336
    4. '<|end|>' → logprob: -10.125600814819336
    5. '   ' → logprob: -12.000600814819336
    6. '
' → logprob: -12.625600814819336
    7. '  
' → logprob: -12.875600814819336
    8. '\' → logprob: -13.375600814819336
    9. '    
' → logprob: -13.625600814819336
    10. ' ' → logprob: -13.875600814819336

Token 378: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2168114185333252
    2. ' if' → logprob: -1.9668114185333252
    3. ' ' → logprob: -4.091811180114746
    4. 'def' → logprob: -4.341811180114746
    5. '<|end|>' → logprob: -4.841811180114746
    6. '   ' → logprob: -4.966811180114746
    7. 'else' → logprob: -5.466811180114746
    8. 'continue' → logprob: -7.341811180114746
    9. '```' → logprob: -7.341811180114746
    10. '    
' → logprob: -7.591811180114746

Token 379: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0013676194939762354
    2. ' is' → logprob: -6.626367568969727
    3. 'not' → logprob: -11.126367568969727
    4. 'mark' → logprob: -11.126367568969727
    5. 'def' → logprob: -11.626367568969727
    6. 'check' → logprob: -14.626367568969727
    7. ' ' → logprob: -15.126367568969727
    8. '```' → logprob: -15.126367568969727
    9. 'if' → logprob: -15.376367568969727
    10. 'continue' → logprob: -15.501367568969727

Token 380: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.0013345248298719525
    2. '(to' → logprob: -7.6263346672058105
    3. 'to' → logprob: -8.001334190368652
    4. 'parent' → logprob: -8.126334190368652
    5. ' p' → logprob: -10.126334190368652
    6. ' to' → logprob: -10.251334190368652
    7. 'Parent' → logprob: -10.251334190368652
    8. 'p' → logprob: -10.751334190368652
    9. '_child' → logprob: -11.251334190368652
    10. '(p' → logprob: -11.251334190368652

Token 381: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.00029279827140271664
    2. '(' → logprob: -8.250292778015137
    3. ' (' → logprob: -10.750292778015137
    4. 'to' → logprob: -12.000292778015137
    5. '(v' → logprob: -14.250292778015137
    6. '(todo' → logprob: -14.750292778015137
    7. '[to' → logprob: -14.750292778015137
    8. '(To' → logprob: -14.750292778015137
    9. ' to' → logprob: -15.375292778015137
    10. ',to' → logprob: -15.375292778015137

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046284322161227465
    2. ' ,' → logprob: -7.750463008880615
    3. ',v' → logprob: -11.125462532043457
    4. ',p' → logprob: -11.875462532043457
    5. '==' → logprob: -12.375462532043457
    6. ',
' → logprob: -13.375462532043457
    7. ' ==' → logprob: -13.500462532043457
    8. ',to' → logprob: -13.500462532043457
    9. ',t' → logprob: -14.125462532043457
    10. ' ' → logprob: -16.250463485717773

Token 383: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01106126606464386
    2. ' p' → logprob: -4.511061191558838
    3. 'v' → logprob: -11.261061668395996
    4. ' v' → logprob: -14.636061668395996
    5. ' ' → logprob: -16.01106071472168
    6. '	p' → logprob: -17.38606071472168
    7. '   ' → logprob: -18.13606071472168
    8. 'to' → logprob: -18.76106071472168
    9. '<p' → logprob: -18.76106071472168
    10. '-' → logprob: -18.88606071472168

Token 384: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5675532817840576
    2. '):
' → logprob: -0.9425532817840576
    3. ')' → logprob: -3.3175532817840576
    4. '==' → logprob: -5.317553520202637
    5. ')==' → logprob: -6.567553520202637
    6. ' ==' → logprob: -7.692553520202637
    7. '   ' → logprob: -8.567553520202637
    8. ':' → logprob: -9.317553520202637
    9. ',' → logprob: -9.817553520202637
    10. ' ):' → logprob: -10.567553520202637

Token 385: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07093545794487
    2. 'return' → logprob: -2.8209354877471924
    3. ' to' → logprob: -5.070935249328613
    4. 'to' → logprob: -6.320935249328613
    5. '   ' → logprob: -7.070935249328613
    6. ' if' → logprob: -12.945935249328613
    7. '
' → logprob: -14.945935249328613
    8. '	return' → logprob: -15.445935249328613
    9. 'if' → logprob: -15.570935249328613
    10. '    ' → logprob: -15.570935249328613

Token 386: ' return' (ID: 622)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5983645915985107
    2. 'return' (adapté à ' return') → logprob: -1.0983645915985107
    3. ' return' → logprob: -2.3483645915985107
    4. ' to' → logprob: -3.8483645915985107
    5. '   ' → logprob: -10.47336483001709
    6. ' if' → logprob: -12.84836483001709
    7. 'if' → logprob: -12.84836483001709
    8. ' ' → logprob: -15.34836483001709
    9. '(to' → logprob: -15.84836483001709
    10. '[to' → logprob: -16.223363876342773

Token 387: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.06202425807714462
    2. ' to' → logprob: -2.8120243549346924
    3. ' p' → logprob: -10.187024116516113
    4. 'p' → logprob: -10.937024116516113
    5. '(to' → logprob: -14.062024116516113
    6. '	to' → logprob: -15.312024116516113
    7. ' ' → logprob: -16.43702507019043
    8. ' ' → logprob: -16.56202507019043
    9. '   ' → logprob: -17.31202507019043
    10. ' (' → logprob: -17.68702507019043

Token 388: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4740825593471527
    2. ' ==' → logprob: -0.9740825891494751
    3. '=' → logprob: -12.474082946777344
    4. '==
' → logprob: -13.849082946777344
    5. ' ' → logprob: -14.974082946777344
    6. ' ' → logprob: -15.849082946777344
    7. '===' → logprob: -16.099082946777344
    8. ' =' → logprob: -16.724082946777344
    9. '```' → logprob: -17.474082946777344
    10. ']==' → logprob: -17.474082946777344

Token 389: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019286326132714748
    2. ' p' → logprob: -6.251928806304932
    3. ' ' → logprob: -19.626928329467773
    4. '	p' → logprob: -20.501928329467773
    5. '   ' → logprob: -21.001928329467773
    6. '  ' → logprob: -22.001928329467773
    7. '<p' → logprob: -22.251928329467773
    8. '-' → logprob: -22.876928329467773
    9. '<|end|>' → logprob: -22.876928329467773
    10. '-p' → logprob: -23.876928329467773

Token 390: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: ' mark' (ID: 1983)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0008451257599517703
    2. ' main' → logprob: -7.625844955444336
    3. 'build' → logprob: -8.625844955444336
    4. 'prepare' → logprob: -9.625844955444336
    5. 'def' → logprob: -10.375844955444336
    6. 'solve' → logprob: -10.875844955444336
    7. 'get' → logprob: -11.125844955444336
    8. 'is' → logprob: -11.625844955444336
    9. 'process' → logprob: -12.250844955444336
    10. 'set' → logprob: -12.250844955444336

Token 393: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00021307668066583574
    2. '_' → logprob: -8.500212669372559
    3. '_out' → logprob: -12.125212669372559
    4. ' _' → logprob: -13.750212669372559
    5. '_s' → logprob: -13.875212669372559
    6. '_mark' → logprob: -15.250212669372559
    7. '_in' → logprob: -15.250212669372559
    8. '_space' → logprob: -15.625212669372559
    9. '##_' → logprob: -15.750212669372559
    10. 't' → logprob: -15.875212669372559

Token 394: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.009659519419074059
    2. 'tout' → logprob: -4.884659290313721
    3. '_' → logprob: -6.759659290313721
    4. '_out' → logprob: -7.509659290313721
    5. 'o' → logprob: -8.759659767150879
    6. 'in' → logprob: -9.384659767150879
    7. 'ou' → logprob: -10.259659767150879
    8. '_t' → logprob: -10.509659767150879
    9. '```' → logprob: -10.884659767150879
    10. 'int' → logprob: -12.009659767150879

Token 395: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.007768701296299696
    2. '(' → logprob: -4.882768630981445
    3. ' (' → logprob: -8.757768630981445
    4. ',' → logprob: -13.007768630981445
    5. '(todo' → logprob: -14.632768630981445
    6. ' ' → logprob: -15.257768630981445
    7. '(
' → logprob: -15.507768630981445
    8. '```' → logprob: -15.507768630981445
    9. '(target' → logprob: -15.757768630981445
    10. '(T' → logprob: -16.007768630981445

Token 396: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.20349980890750885
    2. 'tout' → logprob: -2.0784997940063477
    3. ',' → logprob: -2.9534997940063477
    4. 't' → logprob: -5.828499794006348
    5. ',t' → logprob: -5.828499794006348
    6. '(t' → logprob: -8.203499794006348
    7. ',out' → logprob: -8.953499794006348
    8. 'ou' → logprob: -8.953499794006348
    9. ' tout' → logprob: -9.453499794006348
    10. 'ot' → logprob: -9.703499794006348

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011892046313732862
    2. ',t' → logprob: -9.12511920928955
    3. ' ,' → logprob: -11.87511920928955
    4. ',
' → logprob: -13.75011920928955
    5. 't' → logprob: -14.00011920928955
    6. ',v' → logprob: -15.00011920928955
    7. ')' → logprob: -15.12511920928955
    8. '<|end|>' → logprob: -15.12511920928955
    9. '‌,' → logprob: -16.500118255615234
    10. ',

' → logprob: -16.875118255615234

Token 398: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.036457791924476624
    2. ' v' → logprob: -3.4114577770233154
    3. 't' → logprob: -6.6614580154418945
    4. 'tout' → logprob: -6.6614580154418945
    5. ' tout' → logprob: -8.411458015441895
    6. ' t' → logprob: -11.911458015441895
    7. 'to' → logprob: -12.411458015441895
    8. ')v' → logprob: -12.786458015441895
    9. '<|end|>' → logprob: -12.911458015441895
    10. ' ' → logprob: -13.036458015441895

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.580929347255733e-05
    2. ' ,' → logprob: -11.375016212463379
    3. ',v' → logprob: -12.625016212463379
    4. ',
' → logprob: -14.750016212463379
    5. '<|end|>' → logprob: -15.875016212463379
    6. ')' → logprob: -16.000015258789062
    7. '[' → logprob: -16.375015258789062
    8. '‌,' → logprob: -16.625015258789062
    9. ',t' → logprob: -17.250015258789062
    10. '),' → logprob: -17.375015258789062

Token 400: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16022726893424988
    2. ' k' → logprob: -1.9102272987365723
    3. 'v' → logprob: -14.160226821899414
    4. ' ' → logprob: -14.410226821899414
    5. '	k' → logprob: -14.535226821899414
    6. ')' → logprob: -14.785226821899414
    7. '   ' → logprob: -14.910226821899414
    8. ' v' → logprob: -15.535226821899414
    9. 't' → logprob: -16.035226821899414
    10. ',' → logprob: -16.535226821899414

Token 401: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -0.0010416212026029825
    2. 'holder' → logprob: -7.751041412353516
    3. '[' → logprob: -8.376041412353516
    4. ',' → logprob: -9.001041412353516
    5. 'Holder' → logprob: -9.126041412353516
    6. ')' → logprob: -10.001041412353516
    7. '-holder' → logprob: -10.501041412353516
    8. '	holder' → logprob: -10.876041412353516
    9. '```' → logprob: -11.251041412353516
    10. '   ' → logprob: -11.876041412353516

Token 402: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7926048040390015
    2. '):
' → logprob: -0.9176048040390015
    3. ',' → logprob: -1.9176048040390015
    4. ')' → logprob: -7.667604923248291
    5. '   ' → logprob: -8.667604446411133
    6. '):

' → logprob: -8.917604446411133
    7. '):
' → logprob: -9.292604446411133
    8. ',v' → logprob: -11.167604446411133
    9. ' ,' → logprob: -12.542604446411133
    10. ' ):' → logprob: -12.792604446411133

Token 403: '   ' (ID: 271)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.03182126209139824
    2. 't' → logprob: -3.5318212509155273
    3. '   ' → logprob: -6.531821250915527
    4. ' tout' → logprob: -7.406821250915527
    5. '	t' → logprob: -13.281821250915527
    6. 'tou' → logprob: -13.781821250915527
    7. '  ' → logprob: -14.031821250915527
    8. ' ' → logprob: -14.531821250915527
    9. 'todo' → logprob: -14.781821250915527
    10. 'Tout' → logprob: -15.531821250915527

Token 404: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' (adapté à ' tout') → logprob: -1.8624639324116288e-06
    2. 't' → logprob: -13.250001907348633
    3. ' tout' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.875001907348633
    5. 'tou' → logprob: -19.875001907348633
    6. ' ' → logprob: -20.500001907348633
    7. 'todo' → logprob: -20.500001907348633
    8. '  ' → logprob: -20.625001907348633
    9. ' ' → logprob: -20.750001907348633
    10. '```' → logprob: -21.500001907348633

Token 405: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0038205066230148077
    2. '[' → logprob: -5.628820419311523
    3. '[t' → logprob: -8.503820419311523
    4. '```' → logprob: -11.753820419311523
    5. ',' → logprob: -12.253820419311523
    6. ',v' → logprob: -13.503820419311523
    7. 'v' → logprob: -13.753820419311523
    8. '[
' → logprob: -14.878820419311523
    9. '[val' → logprob: -15.128820419311523
    10. ' [' → logprob: -15.378820419311523

Token 406: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0033084198366850615
    2. '[v' → logprob: -5.753308296203613
    3. ']=' → logprob: -9.128308296203613
    4. '[' → logprob: -11.253308296203613
    5. 'v' → logprob: -12.753308296203613
    6. ' ]' → logprob: -13.503308296203613
    7. ')' → logprob: -13.628308296203613
    8. '=' → logprob: -13.878308296203613
    9. '   ' → logprob: -14.378308296203613
    10. '```' → logprob: -14.378308296203613

Token 407: ' =' (ID: 314)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.014859157614409924
    2. '=' → logprob: -4.264859199523926
    3. '[' → logprob: -7.639859199523926
    4. ' =' → logprob: -8.514859199523926
    5. '=v' → logprob: -11.264859199523926
    6. 'v' → logprob: -14.764859199523926
    7. '   ' → logprob: -15.014859199523926
    8. ' [' → logprob: -15.514859199523926
    9. '[t' → logprob: -15.889859199523926
    10. '```' → logprob: -16.38985824584961

Token 408: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00020354038861114532
    2. ' k' → logprob: -8.500203132629395
    3. '	k' → logprob: -18.12520408630371
    4. '   ' → logprob: -18.62520408630371
    5. ' ' → logprob: -19.25020408630371
    6. ' к' → logprob: -19.75020408630371
    7. '  ' → logprob: -21.37520408630371
    8. 'kx' → logprob: -21.37520408630371
    9. ' ' → logprob: -22.25020408630371
    10. '_k' → logprob: -22.37520408630371

Token 409: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -0.00022999993234407157
    2. '[' → logprob: -8.875229835510254
    3. 'Holder' → logprob: -9.375229835510254
    4. 'holder' → logprob: -13.125229835510254
    5. '-holder' → logprob: -13.625229835510254
    6. '	holder' → logprob: -13.875229835510254
    7. ' Holder' → logprob: -14.375229835510254
    8. ' HOLDER' → logprob: -16.12523078918457
    9. '```' → logprob: -16.37523078918457
    10. '_hold' → logprob: -16.62523078918457

Token 410: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.625
    3. ' [' → logprob: -16.625
    4. '```' → logprob: -17.625
    5. 'def' → logprob: -17.875
    6. ' ' → logprob: -18.75
    7. ')[' → logprob: -18.75
    8. '   ' → logprob: -19.125
    9. '#' → logprob: -20.375
    10. '>[' → logprob: -21.125

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002806417876854539
    2. '[' → logprob: -5.877806186676025
    3. '```' → logprob: -14.252806663513184
    4. ' ' → logprob: -15.127806663513184
    5. '-' → logprob: -16.127805709838867
    6. ')' → logprob: -16.252805709838867
    7. '   ' → logprob: -16.627805709838867
    8. '۰' → logprob: -16.815305709838867
    9. '1' → logprob: -17.127805709838867
    10. '<|end|>' → logprob: -17.377805709838867

Token 412: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020794697105884552
    2. ']' → logprob: -4.145794868469238
    3. '<|end|>' → logprob: -5.520794868469238
    4. '[' → logprob: -8.270794868469238
    5. ')]' → logprob: -8.270794868469238
    6. '+' → logprob: -8.895794868469238
    7. '}' → logprob: -10.395794868469238
    8. ' )' → logprob: -10.645794868469238
    9. '<|end|>' → logprob: -12.020794868469238
    10. '])' → logprob: -12.020794868469238

Token 413: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22260715067386627
    2. 'if' → logprob: -2.472607135772705
    3. '<|end|>' → logprob: -2.597607135772705
    4. '```' → logprob: -3.472607135772705
    5. '#' → logprob: -4.972607135772705
    6. ')' → logprob: -6.847607135772705
    7. '[' → logprob: -7.472607135772705
    8. 'import' → logprob: -8.222607612609863
    9. '...' → logprob: -8.597607612609863
    10. '.' → logprob: -9.347607612609863

Token 414: ' Binary' (ID: 32672)
  Prédit: ' Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.859458327293396
    2. ' Segment' → logprob: -1.234458327293396
    3. ' Graph' → logprob: -2.3594584465026855
    4. ' Node' → logprob: -2.4844584465026855
    5. ' Union' → logprob: -3.3594584465026855
    6. ' Solution' → logprob: -3.7344584465026855
    7. 'Tree' → logprob: -5.1094584465026855
    8. ' Color' → logprob: -5.1094584465026855
    9. ' Stack' → logprob: -5.3594584465026855
    10. 'Graph' → logprob: -5.4844584465026855

Token 415: 'Indexed' (ID: 78900)
  Prédit: 'Indexed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indexed' → logprob: -0.2309548705816269
    2. 'Tree' → logprob: -1.855954885482788
    3. 'Search' → logprob: -3.230954885482788
    4. 'Segment' → logprob: -5.355954647064209
    5. ' Indexed' → logprob: -6.480954647064209
    6. 'Trie' → logprob: -6.605954647064209
    7. 'Index' → logprob: -6.730954647064209
    8. 'Searcher' → logprob: -7.605954647064209
    9. 'Heap' → logprob: -8.605955123901367
    10. 'Indexer' → logprob: -8.730955123901367

Token 416: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -9.088346359931165e-07
    2. 'tree' → logprob: -15.375000953674316
    3. '_tree' → logprob: -15.875000953674316
    4. 'ree' → logprob: -15.875000953674316
    5. ' Tree' → logprob: -16.0
    6. 'Tre' → logprob: -16.125
    7. 'T' → logprob: -16.625
    8. '	Tree' → logprob: -17.5
    9. '-tree' → logprob: -17.625
    10. ' tree' → logprob: -17.875

Token 417: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018971276585943997
    2. '():' → logprob: -8.750189781188965
    3. '(object' → logprob: -11.625189781188965
    4. ':
' → logprob: -11.875189781188965
    5. '(' → logprob: -12.250189781188965
    6. ':**' → logprob: -13.000189781188965
    7. '>:' → logprob: -13.125189781188965
    8. ' :' → logprob: -13.250189781188965
    9. '):' → logprob: -13.500189781188965
    10. '#:' → logprob: -14.125189781188965

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20085276663303375
    2. ':' → logprob: -1.9508527517318726
    3. ':
' → logprob: -3.325852870941162
    4. 'def' → logprob: -6.575852870941162
    5. ' def' → logprob: -6.700852870941162
    6. '(object' → logprob: -7.825852870941162
    7. ':def' → logprob: -8.450852394104004
    8. '```' → logprob: -8.825852394104004
    9. '    
' → logprob: -9.075852394104004
    10. '():
' → logprob: -9.075852394104004

Token 419: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6099137663841248
    2. '   ' → logprob: -1.3599138259887695
    3. 'def' (adapté à ' def') → logprob: -1.6099138259887695
    4. '	def' → logprob: -12.10991382598877
    5. 'class' → logprob: -12.35991382598877
    6. ' __' → logprob: -13.85991382598877
    7. '    
' → logprob: -14.10991382598877
    8. ':def' → logprob: -14.10991382598877
    9. ':' → logprob: -14.35991382598877
    10. '__' → logprob: -15.23491382598877

Token 420: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00021438424300868064
    2. '__' → logprob: -8.500214576721191
    3. ' init' → logprob: -12.250214576721191
    4. 'init' → logprob: -12.750214576721191
    5. ' ' → logprob: -13.000214576721191
    6. ' def' → logprob: -15.125214576721191
    7. ' _' → logprob: -15.625214576721191
    8. '_init' → logprob: -15.750214576721191
    9. ' ' → logprob: -15.750214576721191
    10. '  ' → logprob: -16.375213623046875

Token 421: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.625
    3. 'int' → logprob: -19.5
    4. 'ini' → logprob: -21.0
    5. 'in' → logprob: -22.625
    6. 'inti' → logprob: -22.75
    7. 'innit' → logprob: -22.75
    8. 'inite' → logprob: -22.875
    9. '```' → logprob: -23.625
    10. '	init' → logprob: -23.625

Token 422: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0014282134361565113
    2. '__' → logprob: -6.626428127288818
    3. '(self' → logprob: -9.251428604125977
    4. '__((' → logprob: -12.751428604125977
    5. '(' → logprob: -13.751428604125977
    6. '__(
' → logprob: -13.751428604125977
    7. '_(' → logprob: -14.376428604125977
    8. '__('' → logprob: -15.251428604125977
    9. '__[' → logprob: -15.876428604125977
    10. '__(*' → logprob: -16.126428604125977

Token 423: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.988221684878226e-06
    2. ' self' → logprob: -11.875006675720215
    3. ',' → logprob: -18.25000762939453
    4. ')' → logprob: -18.62500762939453
    5. '   ' → logprob: -19.00000762939453
    6. '(self' → logprob: -19.37500762939453
    7. ' ' → logprob: -19.50000762939453
    8. ',self' → logprob: -20.12500762939453
    9. '_self' → logprob: -20.37500762939453
    10. 'size' → logprob: -20.37500762939453

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013814250705763698
    2. 'self' → logprob: -6.6263813972473145
    3. ' ,' → logprob: -10.251381874084473
    4. '(self' → logprob: -11.626381874084473
    5. ',self' → logprob: -11.876381874084473
    6. ' self' → logprob: -12.626381874084473
    7. '__,' → logprob: -14.626381874084473
    8. '_,' → logprob: -15.001381874084473
    9. '__(' → logprob: -15.876381874084473
    10. ' (' → logprob: -16.876380920410156

Token 425: ' size' (ID: 2349)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0904858410358429
    2. 'size' → logprob: -3.0904858112335205
    3. ' n' → logprob: -3.3404858112335205
    4. ' size' → logprob: -5.2154860496521
    5. '   ' → logprob: -9.340485572814941
    6. 'self' → logprob: -9.715485572814941
    7. 'N' → logprob: -10.465485572814941
    8. ' ' → logprob: -13.715485572814941
    9. ' N' → logprob: -13.840485572814941
    10. ' self' → logprob: -13.965485572814941

Token 426: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020553220063447952
    2. '):
' → logprob: -3.8955531120300293
    3. '):
' → logprob: -12.520553588867188
    4. ' ):' → logprob: -12.520553588867188
    5. ':' → logprob: -12.770553588867188
    6. ')' → logprob: -14.145553588867188
    7. '   ' → logprob: -16.395553588867188
    8. '):

' → logprob: -16.395553588867188
    9. '():' → logprob: -16.520553588867188
    10. '}:' → logprob: -16.895553588867188

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4736459888808895e-05
    2. ' self' → logprob: -11.625014305114746
    3. 'self' → logprob: -12.625014305114746
    4. '   ' → logprob: -13.875014305114746
    5. '(self' → logprob: -14.750014305114746
    6. '<|end|>' → logprob: -14.750014305114746
    7. ',' → logprob: -15.375014305114746
    8. '```' → logprob: -16.000015258789062
    9. '[' → logprob: -16.125015258789062
    10. ':' → logprob: -16.750015258789062

Token 428: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2034563273191452
    2. ' self' → logprob: -1.7034562826156616
    3. '       ' → logprob: -6.203456401824951
    4. '   ' → logprob: -10.953455924987793
    5. '	self' → logprob: -13.953455924987793
    6. ' ' → logprob: -17.32845687866211
    7. '    ' → logprob: -17.57845687866211
    8. '(self' → logprob: -17.82845687866211
    9. '        ' → logprob: -18.45345687866211
    10. '[self' → logprob: -18.45345687866211

Token 429: '.N' (ID: 4439)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.049887415021657944
    2. '.' → logprob: -3.0498874187469482
    3. 'size' → logprob: -7.674887180328369
    4. '_size' → logprob: -7.799887180328369
    5. '._' → logprob: -8.174887657165527
    6. '.n' → logprob: -10.299887657165527
    7. '.tree' → logprob: -10.924887657165527
    8. '.data' → logprob: -10.924887657165527
    9. ' .' → logprob: -11.174887657165527
    10. '.value' → logprob: -11.549887657165527

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519378066062927
    2. ' =' → logprob: -1.5019378662109375
    3. '=size' → logprob: -11.751937866210938
    4. '   ' → logprob: -14.251937866210938
    5. '=int' → logprob: -16.876937866210938
    6. '＝' → logprob: -17.126937866210938
    7. ' ' → logprob: -17.626937866210938
    8. '    ' → logprob: -17.876937866210938
    9. '=N' → logprob: -18.626937866210938
    10. '=n' → logprob: -18.626937866210938

Token 431: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.061969030648469925
    2. ' size' → logprob: -2.811969041824341
    3. '(size' → logprob: -14.436968803405762
    4. '1' → logprob: -15.311968803405762
    5. '   ' → logprob: -15.436968803405762
    6. ' ' → logprob: -15.686968803405762
    7. '	size' → logprob: -16.811969757080078
    8. '0' → logprob: -16.936969757080078
    9. '[size' → logprob: -16.936969757080078
    10. '  ' → logprob: -17.686969757080078

Token 432: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002091972855851054
    2. '
' → logprob: -6.377091884613037
    3. 'self' → logprob: -8.127092361450195
    4. '   ' → logprob: -9.627092361450195
    5. '<|end|>' → logprob: -11.502092361450195
    6. ',' → logprob: -12.127092361450195
    7. ' self' → logprob: -12.502092361450195
    8. '+' → logprob: -13.252092361450195
    9. '           ' → logprob: -13.877092361450195
    10. '        
' → logprob: -13.877092361450195

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035095500061288476
    2. '   ' → logprob: -8.625350952148438
    3. 'self' → logprob: -9.125350952148438
    4. '<|end|>' → logprob: -9.875350952148438
    5. ' self' → logprob: -12.250350952148438
    6. ',' → logprob: -13.250350952148438
    7. '           ' → logprob: -13.500350952148438
    8. '	self' → logprob: -14.125350952148438
    9. '<|end|>' → logprob: -14.625350952148438
    10. '	' → logprob: -15.125350952148438

Token 434: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.9385402993066236e-05
    2. ' self' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.000019073486328
    4. '	self' → logprob: -16.125019073486328
    5. '0' → logprob: -16.875019073486328
    6. '[self' → logprob: -17.625019073486328
    7. 'tree' → logprob: -18.375019073486328
    8. ' ' → logprob: -18.375019073486328
    9. 'data' → logprob: -18.875019073486328
    10. '1' → logprob: -18.875019073486328

Token 435: '.bit' (ID: 61866)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.07867594063282013
    2. '.tree' → logprob: -2.9536759853363037
    3. 'data' → logprob: -4.078675746917725
    4. '.bit' → logprob: -5.953675746917725
    5. '.size' → logprob: -6.203675746917725
    6. 'bit' → logprob: -7.703675746917725
    7. 'arr' → logprob: -8.203676223754883
    8. '.array' → logprob: -8.453676223754883
    9. 'tree' → logprob: -8.578676223754883
    10. '.arr' → logprob: -8.578676223754883

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575968325138092
    2. ' =' → logprob: -0.825968325138092
    3. '   ' → logprob: -11.325968742370605
    4. 's' → logprob: -12.200968742370605
    5. ' ' → logprob: -12.450968742370605
    6. 'data' → logprob: -13.200968742370605
    7. '_data' → logprob: -13.950968742370605
    8. 'ree' → logprob: -14.200968742370605
    9. '_array' → logprob: -14.450968742370605
    10. 'size' → logprob: -14.450968742370605

Token 437: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011048054322600365
    2. ' [' → logprob: -4.511047840118408
    3. '[self' → logprob: -15.761048316955566
    4. '[N' → logprob: -16.88604736328125
    5. '[size' → logprob: -17.13604736328125
    6. '[n' → logprob: -18.51104736328125
    7. '[-' → logprob: -18.63604736328125
    8. '[len' → logprob: -18.88604736328125
    9. '[a' → logprob: -19.13604736328125
    10. '[int' → logprob: -19.26104736328125

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '(' → logprob: -21.25
    4. '[' → logprob: -22.0
    5. '   ' → logprob: -22.125
    6. '۰' → logprob: -22.25
    7. '-' → logprob: -22.5
    8. '00' → logprob: -22.75
    9. '
' → logprob: -22.75
    10. '000' → logprob: -23.125

Token 439: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030224328860640526
    2. ']*(' → logprob: -3.530224323272705
    3. ']*' → logprob: -7.655224323272705
    4. ']+' → logprob: -15.280224800109863
    5. '*(' → logprob: -17.780223846435547
    6. ' ]' → logprob: -17.905223846435547
    7. '   ' → logprob: -18.280223846435547
    8. '*' → logprob: -19.030223846435547
    9. ')' → logprob: -19.155223846435547
    10. '](' → logprob: -19.405223846435547

Token 440: 'size' (ID: 4461)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.160235196352005
    2. 'size' → logprob: -1.9102351665496826
    3. ' size' → logprob: -12.535235404968262
    4. ' self' → logprob: -12.660235404968262
    5. '(size' → logprob: -12.785235404968262
    6. '(self' → logprob: -13.785235404968262
    7. '   ' → logprob: -15.660235404968262
    8. '	self' → logprob: -16.660234451293945
    9. '	size' → logprob: -17.035234451293945
    10. '=size' → logprob: -17.410234451293945

Token 441: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024756586644798517
    2. ' +' → logprob: -6.002475738525391
    3. '+
' → logprob: -18.12747573852539
    4. ')' → logprob: -18.75247573852539
    5. '＋' → logprob: -19.12747573852539
    6. ' plus' → logprob: -19.50247573852539
    7. ' ' → logprob: -19.50247573852539
    8. '()+' → logprob: -19.75247573852539
    9. ')+' → logprob: -20.12747573852539
    10. '+)' → logprob: -20.37747573852539

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003180563682690263
    2. '2' → logprob: -5.753180503845215
    3. ' ' → logprob: -12.878180503845215
    4. '10' → logprob: -16.37818145751953
    5. '5' → logprob: -16.62818145751953
    6. '   ' → logprob: -16.75318145751953
    7. '  ' → logprob: -18.12818145751953
    8. '１' → logprob: -18.25318145751953
    9. '```' → logprob: -18.37818145751953
    10. '
' → logprob: -19.50318145751953

Token 443: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.250001907348633
    3. ' )' → logprob: -15.500001907348633
    4. '<|end|>' → logprob: -15.750001907348633
    5. ')

' → logprob: -17.125001907348633
    6. '),' → logprob: -18.125001907348633
    7. '}' → logprob: -18.250001907348633
    8. ')
' → logprob: -18.750001907348633
    9. '))' → logprob: -19.750001907348633
    10. ')#' → logprob: -19.750001907348633

Token 444: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2931174337863922
    2. '   ' → logprob: -2.0431175231933594
    3. 'def' → logprob: -2.4181175231933594
    4. '    
' → logprob: -4.043117523193359
    5. '
' → logprob: -4.293117523193359
    6. ' 
' → logprob: -5.793117523193359
    7. '        
' → logprob: -7.418117523193359
    8. '  
' → logprob: -8.66811752319336
    9. '	def' → logprob: -8.91811752319336
    10. ' ' → logprob: -9.66811752319336

Token 445: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0308906901627779
    2. ' def' → logprob: -3.530890703201294
    3. '   ' → logprob: -6.780890464782715
    4. '	def' → logprob: -12.530890464782715
    5. '
' → logprob: -15.280890464782715
    6. ' ' → logprob: -15.405890464782715
    7. '    
' → logprob: -16.03089141845703
    8. '```' → logprob: -16.78089141845703
    9. '  ' → logprob: -17.78089141845703
    10. '       ' → logprob: -19.40589141845703

Token 446: ' add' (ID: 1147)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -1.0316600799560547
    2. 'add' → logprob: -1.4066600799560547
    3. ' update' → logprob: -1.4066600799560547
    4. ' add' → logprob: -2.1566600799560547
    5. 'sum' → logprob: -4.281660079956055
    6. '_update' → logprob: -4.656660079956055
    7. '_add' → logprob: -4.906660079956055
    8. ' sum' → logprob: -6.656660079956055
    9. 'query' → logprob: -6.656660079956055
    10. '__' → logprob: -6.906660079956055

Token 447: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0041173421777784824
    2. '(' → logprob: -5.504117488861084
    3. '<|end|>' → logprob: -10.629117012023926
    4. 'self' → logprob: -11.754117012023926
    5. '(s' → logprob: -13.379117012023926
    6. ' (' → logprob: -13.879117012023926
    7. '(index' → logprob: -14.004117012023926
    8. '(i' → logprob: -14.254117012023926
    9. '(sel' → logprob: -14.504117012023926
    10. '(
' → logprob: -14.879117012023926

Token 448: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009608987718820572
    2. ')' → logprob: -5.634609222412109
    3. '(' → logprob: -5.884609222412109
    4. '(index' → logprob: -7.009609222412109
    5. '(idx' → logprob: -7.259609222412109
    6. ')(' → logprob: -7.384609222412109
    7. ',' → logprob: -8.00960922241211
    8. '(i' → logprob: -8.00960922241211
    9. 'self' → logprob: -8.63460922241211
    10. ' (' → logprob: -10.25960922241211

Token 449: ' x' (ID: 1215)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.2217477560043335
    2. 'idx' → logprob: -1.2217477560043335
    3. ' index' → logprob: -1.4717477560043335
    4. ' idx' → logprob: -1.9717477560043335
    5. 'i' → logprob: -3.721747875213623
    6. ' i' → logprob: -4.096747875213623
    7. 'pos' → logprob: -7.721747875213623
    8. ' pos' → logprob: -8.721747398376465
    9. ' p' → logprob: -8.846747398376465
    10. 'x' → logprob: -9.471747398376465

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',x' → logprob: -15.250003814697266
    4. ':' → logprob: -15.375003814697266
    5. ',value' → logprob: -16.500003814697266
    6. ',y' → logprob: -16.875003814697266
    7. '   ' → logprob: -17.000003814697266
    8. ':int' → logprob: -17.250003814697266
    9. 'self' → logprob: -17.875003814697266
    10. '1' → logprob: -17.875003814697266

Token 451: ' w' (ID: 286)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20066513121128082
    2. ' v' → logprob: -2.075665235519409
    3. 'delta' → logprob: -3.450665235519409
    4. 'val' → logprob: -4.20066499710083
    5. ' delta' → logprob: -5.32566499710083
    6. ' val' → logprob: -5.82566499710083
    7. ' ' → logprob: -7.45066499710083
    8. '1' → logprob: -7.70066499710083
    9. 'value' → logprob: -8.325665473937988
    10. 'y' → logprob: -8.450665473937988

Token 452: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1269654929637909
    2. '):
' → logprob: -2.1269655227661133
    3. '):
' → logprob: -10.376965522766113
    4. ')' → logprob: -12.501965522766113
    5. ':' → logprob: -13.751965522766113
    6. ' ):' → logprob: -14.251965522766113
    7. '):

' → logprob: -14.376965522766113
    8. ' ):
' → logprob: -16.751964569091797
    9. '   ' → logprob: -17.376964569091797
    10. ',' → logprob: -18.126964569091797

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003176760161295533
    2. '   ' → logprob: -7.128176689147949
    3. '<|end|>' → logprob: -7.753176689147949
    4. '):
' → logprob: -8.00317668914795
    5. '        
' → logprob: -8.12817668914795
    6. '
' → logprob: -8.50317668914795
    7. '    ' → logprob: -8.87817668914795
    8. '    
' → logprob: -8.87817668914795
    9. ')' → logprob: -8.87817668914795
    10. ',' → logprob: -9.00317668914795

Token 454: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.131704643368721
    2. 'x' (adapté à ' x') → logprob: -2.381704568862915
    3. '       ' → logprob: -3.631704568862915
    4. ' while' → logprob: -5.631704807281494
    5. '   ' → logprob: -7.131704807281494
    6. 'while' → logprob: -8.881704330444336
    7. '	x' → logprob: -12.131704330444336
    8. '    ' → logprob: -12.631704330444336
    9. ' ' → logprob: -13.131704330444336
    10. '        ' → logprob: -13.256704330444336

Token 455: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5232563614845276
    2. '+=' → logprob: -0.8982563614845276
    3. '   ' → logprob: -9.648256301879883
    4. '=' → logprob: -10.148256301879883
    5. ' =' → logprob: -11.273256301879883
    6. ']+=' → logprob: -12.398256301879883
    7. '+' → logprob: -12.648256301879883
    8. ' ' → logprob: -12.898256301879883
    9. ':' → logprob: -13.898256301879883
    10. 'x' → logprob: -14.148256301879883

Token 456: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.625009536743164
    4. '+' → logprob: -18.250009536743164
    5. '۱' → logprob: -20.750009536743164
    6. '<|end|>' → logprob: -20.750009536743164
    7. '
' → logprob: -21.000009536743164
    8. '１' → logprob: -21.062509536743164
    9. '```' → logprob: -21.312509536743164
    10. 'x' → logprob: -21.437509536743164

Token 457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.875
    4. '+' → logprob: -19.875
    5. '１' → logprob: -21.125
    6. '
' → logprob: -21.9375
    7. '2' → logprob: -22.0625
    8. '  ' → logprob: -22.4375
    9. '۱' → logprob: -22.625
    10. '```' → logprob: -22.625

Token 458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006837322376668453
    2. 'while' → logprob: -5.256837368011475
    3. ' while' → logprob: -6.881837368011475
    4. '
' → logprob: -7.631837368011475
    5. '<|end|>' → logprob: -10.381836891174316
    6. '	while' → logprob: -10.881836891174316
    7. 'While' → logprob: -11.506836891174316
    8. '   ' → logprob: -11.631836891174316
    9. '        ' → logprob: -12.381836891174316
    10. '           ' → logprob: -12.506836891174316

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3617694675922394
    2. '
' → logprob: -1.236769437789917
    3. 'while' → logprob: -4.861769676208496
    4. ' while' → logprob: -5.861769676208496
    5. '<|end|>' → logprob: -6.236769676208496
    6. '   ' → logprob: -8.861769676208496
    7. '        
' → logprob: -9.111769676208496
    8. ';
' → logprob: -9.861769676208496
    9. '```' → logprob: -9.861769676208496
    10. '
' → logprob: -9.986769676208496

Token 460: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0006341627449728549
    2. '       ' → logprob: -7.75063419342041
    3. ' while' → logprob: -8.50063419342041
    4. '	while' → logprob: -16.875633239746094
    5. '   ' → logprob: -17.375633239746094
    6. 'While' → logprob: -17.625633239746094
    7. '```' → logprob: -19.000633239746094
    8. '
' → logprob: -19.500633239746094
    9. '           ' → logprob: -21.250633239746094
    10. '``' → logprob: -22.875633239746094

Token 461: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022443771362305
    2. ' x' → logprob: -1.910224437713623
    3. '	x' → logprob: -16.03522491455078
    4. ' ' → logprob: -16.53522491455078
    5. '(x' → logprob: -17.91022491455078
    6. '   ' → logprob: -18.03522491455078
    7. '<x' → logprob: -18.41022491455078
    8. '_x' → logprob: -19.66022491455078
    9. '"x' → logprob: -19.66022491455078
    10. ' ' → logprob: -20.16022491455078

Token 462: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01816890574991703
    2. '<=' → logprob: -4.018168926239014
    3. ' <' → logprob: -10.893168449401855
    4. '<' → logprob: -15.268168449401855
    5. ' <<=' → logprob: -17.018169403076172
    6. ' ≤' → logprob: -17.018169403076172
    7. ' +=' → logprob: -18.018169403076172
    8. '<len' → logprob: -18.393169403076172
    9. '<size' → logprob: -18.643169403076172
    10. '≤' → logprob: -19.893169403076172

Token 463: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.941850526549388e-06
    2. ' self' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.62500762939453
    4. '(self' → logprob: -19.00000762939453
    5. '[self' → logprob: -20.12500762939453
    6. '       ' → logprob: -20.25000762939453
    7. '	self' → logprob: -20.50000762939453
    8. '=self' → logprob: -20.75000762939453
    9. '
' → logprob: -20.87500762939453
    10. '```' → logprob: -21.50000762939453

Token 464: '.N' (ID: 4439)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2133045345544815
    2. '.N' → logprob: -1.8383045196533203
    3. 'self' → logprob: -3.4633045196533203
    4. '   ' → logprob: -6.71330451965332
    5. ' self' → logprob: -9.33830451965332
    6. ' N' → logprob: -9.33830451965332
    7. '       ' → logprob: -9.71330451965332
    8. 'size' → logprob: -9.71330451965332
    9. '_N' → logprob: -9.83830451965332
    10. '.size' → logprob: -10.33830451965332

Token 465: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08916542679071426
    2. ':' → logprob: -2.464165449142456
    3. '       ' → logprob: -9.714165687561035
    4. '           ' → logprob: -9.714165687561035
    5. '):
' → logprob: -9.714165687561035
    6. ' :
' → logprob: -11.214165687561035
    7. '   ' → logprob: -11.464165687561035
    8. ' and' → logprob: -11.589165687561035
    9. ':
' → logprob: -12.964165687561035
    10. ',' → logprob: -12.964165687561035

Token 466: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009469495271332562
    2. ' self' → logprob: -7.500946998596191
    3. 'self' → logprob: -7.875946998596191
    4. '   ' → logprob: -12.000946998596191
    5. '```' → logprob: -12.125946998596191
    6. '               ' → logprob: -13.750946998596191
    7. '       ' → logprob: -14.500946998596191
    8. '          ' → logprob: -15.375946998596191
    9. '``' → logprob: -16.125946044921875
    10. '	       ' → logprob: -16.250946044921875

Token 467: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.015312525443732738
    2. ' self' → logprob: -4.265312671661377
    3. '           ' → logprob: -6.890312671661377
    4. '       ' → logprob: -9.265312194824219
    5. '   ' → logprob: -10.515312194824219
    6. '               ' → logprob: -12.015312194824219
    7. ' ' → logprob: -13.515312194824219
    8. '	self' → logprob: -14.140312194824219
    9. '[self' → logprob: -15.015312194824219
    10. '(self' → logprob: -15.765312194824219

Token 468: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0017318216850981116
    2. 'bit' → logprob: -6.376731872558594
    3. '.' → logprob: -11.126731872558594
    4. ' bit' → logprob: -12.001731872558594
    5. '_bit' → logprob: -13.126731872558594
    6. '   ' → logprob: -13.501731872558594
    7. 'BIT' → logprob: -13.626731872558594
    8. '(bit' → logprob: -13.751731872558594
    9. ' .' → logprob: -14.001731872558594
    10. '-bit' → logprob: -14.501731872558594

Token 469: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.4974866644479334e-05
    2. 'x' → logprob: -11.125015258789062
    3. '           ' → logprob: -16.625015258789062
    4. '```' → logprob: -17.000015258789062
    5. ' x' → logprob: -18.250015258789062
    6. '[' → logprob: -18.375015258789062
    7. '   ' → logprob: -18.500015258789062
    8. ' [' → logprob: -18.750015258789062
    9. '       ' → logprob: -18.875015258789062
    10. '[self' → logprob: -19.125015258789062

Token 470: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023336905986070633
    2. ']+=' → logprob: -3.773336887359619
    3. '+=' → logprob: -9.523337364196777
    4. ' +=' → logprob: -11.273337364196777
    5. '[' → logprob: -13.523337364196777
    6. '}' → logprob: -14.023337364196777
    7. ']+' → logprob: -14.023337364196777
    8. '```' → logprob: -14.148337364196777
    9. ' ]' → logprob: -14.273337364196777
    10. ')' → logprob: -14.648337364196777

Token 471: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00150390958879143
    2. ' +=' → logprob: -6.501503944396973
    3. ']+=' → logprob: -13.501503944396973
    4. '   ' → logprob: -16.751502990722656
    5. '[' → logprob: -17.126502990722656
    6. '=' → logprob: -17.126502990722656
    7. '+' → logprob: -17.501502990722656
    8. '	' → logprob: -18.626502990722656
    9. '+=(' → logprob: -19.251502990722656
    10. '```' → logprob: -19.501502990722656

Token 472: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0005530327325686812
    2. ' w' → logprob: -7.500553131103516
    3. '	w' → logprob: -19.000553131103516
    4. '_w' → logprob: -22.625553131103516
    5. '<w' → logprob: -24.000553131103516
    6. '   ' → logprob: -24.250553131103516
    7. '       ' → logprob: -24.250553131103516
    8. ''w' → logprob: -25.000553131103516
    9. '*w' → logprob: -25.000553131103516
    10. '+w' → logprob: -25.250553131103516

Token 473: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044047702103853226
    2. 'x' → logprob: -3.1690475940704346
    3. ' x' → logprob: -7.419047832489014
    4. '
' → logprob: -8.669047355651855
    5. '       ' → logprob: -8.794047355651855
    6. ',' → logprob: -10.044047355651855
    7. '   ' → logprob: -10.669047355651855
    8. '               ' → logprob: -10.794047355651855
    9. ',x' → logprob: -10.794047355651855
    10. ',
' → logprob: -12.294047355651855

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017456236528232694
    2. ' x' → logprob: -7.001745700836182
    3. 'x' → logprob: -7.501745700836182
    4. '       ' → logprob: -8.751745223999023
    5. ',' → logprob: -9.626745223999023
    6. '   ' → logprob: -10.001745223999023
    7. ',x' → logprob: -11.876745223999023
    8. '```' → logprob: -13.376745223999023
    9. '               ' → logprob: -14.126745223999023
    10. '<|end|>' → logprob: -15.001745223999023

Token 475: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.023245712742209435
    2. ' x' → logprob: -3.7732458114624023
    3. '           ' → logprob: -15.648245811462402
    4. '	x' → logprob: -17.523244857788086
    5. '   ' → logprob: -17.773244857788086
    6. '       ' → logprob: -20.023244857788086
    7. ' ' → logprob: -20.398244857788086
    8. ',x' → logprob: -20.648244857788086
    9. '    ' → logprob: -21.398244857788086
    10. '               ' → logprob: -21.648244857788086

Token 476: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023270171135663986
    2. ' +=' → logprob: -3.7732701301574707
    3. ' <<=' → logprob: -10.898270606994629
    4. '<<' → logprob: -13.023270606994629
    5. '*=' → logprob: -13.023270606994629
    6. '+=(' → logprob: -14.523270606994629
    7. ']+=' → logprob: -15.023270606994629
    8. '|' → logprob: -15.148270606994629
    9. '=' → logprob: -15.648270606994629
    10. '+="' → logprob: -16.398269653320312

Token 477: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012439649435691535
    2. ' x' → logprob: -9.000123977661133
    3. '(x' → logprob: -14.375123977661133
    4. '(' → logprob: -15.875123977661133
    5. ' ' → logprob: -16.500123977661133
    6. ' (' → logprob: -17.375123977661133
    7. '   ' → logprob: -17.375123977661133
    8. '	x' → logprob: -17.625123977661133
    9. '{x' → logprob: -19.875123977661133
    10. '  ' → logprob: -20.250123977661133

Token 478: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012368128227535635
    2. ' x' → logprob: -9.000123977661133
    3. ' ' → logprob: -16.250123977661133
    4. '(x' → logprob: -17.125123977661133
    5. '	x' → logprob: -17.500123977661133
    6. ')x' → logprob: -18.500123977661133
    7. '   ' → logprob: -18.750123977661133
    8. '-x' → logprob: -18.875123977661133
    9. '-' → logprob: -19.500123977661133
    10. '{x' → logprob: -19.750123977661133

Token 479: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0036088628694415092
    2. ' &' → logprob: -5.628608703613281
    3. 'x' → logprob: -12.003608703613281
    4. '&amp' → logprob: -13.878608703613281
    5. '&A' → logprob: -14.878608703613281
    6. ')' → logprob: -15.003608703613281
    7. '＆' → logprob: -15.378608703613281
    8. '&i' → logprob: -15.628608703613281
    9. ')&' → logprob: -15.753608703613281
    10. '&t' → logprob: -16.25360870361328

Token 480: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.031773678958415985
    2. '-' → logprob: -3.781773567199707
    3. ' -' → logprob: -5.156773567199707
    4. '(-' → logprob: -5.906773567199707
    5. ' (-' → logprob: -12.906773567199707
    6. '-X' → logprob: -13.656773567199707
    7. '-l' → logprob: -13.781773567199707
    8. '-s' → logprob: -13.906773567199707
    9. '-q' → logprob: -14.156773567199707
    10. '-k' → logprob: -14.156773567199707

Token 481: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9027791495318525e-05
    2. ' x' → logprob: -10.875019073486328
    3. ')x' → logprob: -18.875019073486328
    4. '-x' → logprob: -19.625019073486328
    5. '	x' → logprob: -19.750019073486328
    6. '$x' → logprob: -20.500019073486328
    7. ''x' → logprob: -21.375019073486328
    8. '{x' → logprob: -21.500019073486328
    9. '"x' → logprob: -21.625019073486328
    10. '(x' → logprob: -22.375019073486328

Token 482: ')

' (ID: 1029)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.4849443838757e-06
    2. ')x' → logprob: -12.500004768371582
    3. ' x' → logprob: -14.750004768371582
    4. ')' → logprob: -15.125004768371582
    5. '	x' → logprob: -18.750003814697266
    6. ''x' → logprob: -19.125003814697266
    7. '$x' → logprob: -19.250003814697266
    8. '_x' → logprob: -19.750003814697266
    9. '{x' → logprob: -20.000003814697266
    10. '"x' → logprob: -21.625003814697266

Token 483: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6214758157730103
    2. '   ' → logprob: -0.8714758157730103
    3. '    
' → logprob: -4.121475696563721
    4. 'def' → logprob: -4.371475696563721
    5. ' def' → logprob: -4.871475696563721
    6. '  
' → logprob: -5.621475696563721
    7. ' 
' → logprob: -5.871475696563721
    8. '<|end|>' → logprob: -7.496475696563721
    9. '        
' → logprob: -7.746475696563721
    10. '   
' → logprob: -8.871476173400879

Token 484: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00013977376511320472
    2. ' def' → logprob: -9.500140190124512
    3. '   ' → logprob: -9.750140190124512
    4. '    
' → logprob: -12.625140190124512
    5. '
' → logprob: -13.000140190124512
    6. '```' → logprob: -15.000140190124512
    7. '  
' → logprob: -15.250140190124512
    8. '	def' → logprob: -15.250140190124512
    9. '        
' → logprob: -16.250139236450195
    10. ' 
' → logprob: -17.125139236450195

Token 485: ' _' (ID: 1175)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.030663499608635902
    2. ' sum' → logprob: -3.53066349029541
    3. 'query' → logprob: -7.40566349029541
    4. 'prefix' → logprob: -9.03066349029541
    5. '_sum' → logprob: -9.40566349029541
    6. ' query' → logprob: -9.78066349029541
    7. ' prefix' → logprob: -11.15566349029541
    8. 'range' → logprob: -11.65566349029541
    9. 'get' → logprob: -11.65566349029541
    10. '.sum' → logprob: -12.53066349029541

Token 486: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.001915191882289946
    2. 'prefix' → logprob: -6.751914978027344
    3. 'query' → logprob: -7.626914978027344
    4. '_sum' → logprob: -8.376914978027344
    5. '_prefix' → logprob: -12.001914978027344
    6. 'get' → logprob: -12.376914978027344
    7. 'ls' → logprob: -12.626914978027344
    8. ' sum' → logprob: -13.001914978027344
    9. '_' → logprob: -13.126914978027344
    10. '_query' → logprob: -13.376914978027344

Token 487: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -11.000036239624023
    3. 'self' → logprob: -11.500036239624023
    4. 'def' → logprob: -12.250036239624023
    5. '   ' → logprob: -12.500036239624023
    6. ' (' → logprob: -15.250036239624023
    7. '       ' → logprob: -16.500036239624023
    8. ' ' → logprob: -16.750036239624023
    9. '(Self' → logprob: -16.750036239624023
    10. ' self' → logprob: -17.500036239624023

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5247280597686768
    2. '(self' → logprob: -1.1497280597686768
    3. 'self' → logprob: -2.7747280597686768
    4. 'def' → logprob: -4.274727821350098
    5. ')' → logprob: -4.524727821350098
    6. '(' → logprob: -6.649727821350098
    7. '(x' → logprob: -7.149727821350098
    8. '   ' → logprob: -7.399727821350098
    9. ')(' → logprob: -7.399727821350098
    10. '):
' → logprob: -8.774727821350098

Token 489: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.055493373423814774
    2. 'self' → logprob: -3.0554933547973633
    3. ' x' → logprob: -5.055493354797363
    4. ' self' → logprob: -7.805493354797363
    5. 'i' → logprob: -9.430493354797363
    6. '   ' → logprob: -11.930493354797363
    7. ' ' → logprob: -12.430493354797363
    8. ' i' → logprob: -12.930493354797363
    9. 'r' → logprob: -13.180493354797363
    10. 'idx' → logprob: -13.555493354797363

Token 490: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06999990344047546
    2. '):' → logprob: -2.694999933242798
    3. '):
' → logprob: -10.444999694824219
    4. '   ' → logprob: -11.069999694824219
    5. ')' → logprob: -11.819999694824219
    6. '):

' → logprob: -12.194999694824219
    7. ':' → logprob: -12.444999694824219
    8. ' ):
' → logprob: -14.319999694824219
    9. ',' → logprob: -14.444999694824219
    10. ':
' → logprob: -14.819999694824219

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08173388987779617
    2. 's' → logprob: -3.0817339420318604
    3. '0' → logprob: -3.7067339420318604
    4. 'result' → logprob: -5.706733703613281
    5. 'res' → logprob: -6.206733703613281
    6. ' s' → logprob: -6.331733703613281
    7. '   ' → logprob: -7.581733703613281
    8. ' result' → logprob: -8.956733703613281
    9. ' res' → logprob: -9.331733703613281
    10. 'sum' → logprob: -9.456733703613281

Token 492: ' ret' (ID: 2881)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0500534325838089
    2. 'res' → logprob: -3.050053358078003
    3. 'result' → logprob: -7.050053596496582
    4. '       ' → logprob: -8.050053596496582
    5. ' s' → logprob: -8.425053596496582
    6. ' res' → logprob: -10.425053596496582
    7. '   ' → logprob: -11.050053596496582
    8. 'r' → logprob: -11.800053596496582
    9. 'ret' (adapté à ' ret') → logprob: -12.300053596496582
    10. ' result' → logprob: -14.675053596496582

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143769681453705
    2. '=' → logprob: -1.7014377117156982
    3. ' ' → logprob: -11.076437950134277
    4. '   ' → logprob: -12.576437950134277
    5. '<|end|>' → logprob: -13.076437950134277
    6. ',' → logprob: -13.701437950134277
    7. ' +=' → logprob: -14.076437950134277
    8. '  ' → logprob: -14.201437950134277
    9. ' =
' → logprob: -16.20143699645996
    10. 'x' → logprob: -16.20143699645996

Token 494: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.625553131103516
    4. '۰' → logprob: -20.375553131103516
    5. ' ' → logprob: -21.500553131103516
    6. '       ' → logprob: -21.750553131103516
    7. '  ' → logprob: -22.125553131103516
    8. 'x' → logprob: -22.250553131103516
    9. '０' → logprob: -22.500553131103516
    10. '=' → logprob: -22.813053131103516

Token 495: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -21.500001907348633
    4. '۰' → logprob: -21.875001907348633
    5. '０' → logprob: -23.500001907348633
    6. '000' → logprob: -23.875001907348633
    7. 'x' → logprob: -24.000001907348633
    8. 'self' → logprob: -24.375001907348633
    9. '00' → logprob: -25.375001907348633
    10. '012' → logprob: -25.375001907348633

Token 496: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030296442564576864
    2. '
' → logprob: -5.878029823303223
    3. '<|end|>' → logprob: -8.753029823303223
    4. '        
' → logprob: -11.253029823303223
    5. '   ' → logprob: -11.503029823303223
    6. ',' → logprob: -11.628029823303223
    7. '<|end|>' → logprob: -11.878029823303223
    8. '	' → logprob: -12.253029823303223
    9. '           ' → logprob: -12.628029823303223
    10. '
' → logprob: -12.753029823303223

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011951648048125207
    2. '
' → logprob: -10.25011920928955
    3. ' x' → logprob: -11.00011920928955
    4. '        
' → logprob: -11.12511920928955
    5. 'x' → logprob: -11.25011920928955
    6. ' while' → logprob: -11.62511920928955
    7. 'while' → logprob: -11.75011920928955
    8. ',' → logprob: -11.87511920928955
    9. '   ' → logprob: -12.25011920928955
    10. '<|end|>' → logprob: -12.75011920928955

Token 498: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04709140956401825
    2. ' while' → logprob: -3.297091484069824
    3. 'x' → logprob: -4.797091484069824
    4. '       ' → logprob: -7.297091484069824
    5. ' x' → logprob: -10.047091484069824
    6. '	while' → logprob: -11.047091484069824
    7. 'While' → logprob: -11.797091484069824
    8. '   ' → logprob: -12.047091484069824
    9. 'def' → logprob: -13.172091484069824
    10. '0' → logprob: -13.297091484069824

Token 499: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. '0' → logprob: -19.500335693359375
    4. '	x' → logprob: -19.500335693359375
    5. '   ' → logprob: -21.000335693359375
    6. '>x' → logprob: -21.375335693359375
    7. ' ' → logprob: -21.500335693359375
    8. ')x' → logprob: -21.625335693359375
    9. '(x' → logprob: -22.125335693359375
    10. '"x' → logprob: -22.750335693359375

Token 500: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0004074354947078973
    2. '>=' → logprob: -8.125407218933105
    3. ' >' → logprob: -9.125407218933105
    4. '>x' → logprob: -13.125407218933105
    5. ' >=' → logprob: -15.125407218933105
    6. '>
' → logprob: -15.875407218933105
    7. '&gt' → logprob: -16.375408172607422
    8. '   ' → logprob: -17.125408172607422
    9. '>-' → logprob: -17.375408172607422
    10. '≥' → logprob: -18.375408172607422

Token 501: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043734462815336883
    2. ' ' → logprob: -7.750437259674072
    3. 'x' → logprob: -12.25043773651123
    4. ' x' → logprob: -13.25043773651123
    5. '=' → logprob: -17.125436782836914
    6. '   ' → logprob: -17.750436782836914
    7. '>' → logprob: -18.375436782836914
    8. '    ' → logprob: -20.375436782836914
    9. '       ' → logprob: -20.750436782836914
    10. '<|end|>' → logprob: -20.750436782836914

Token 502: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '=' → logprob: -17.125051498413086
    4. 'x' → logprob: -18.125051498413086
    5. '   ' → logprob: -19.000051498413086
    6. '>' → logprob: -19.625051498413086
    7. '
' → logprob: -20.250051498413086
    8. '```' → logprob: -20.750051498413086
    9. '<|end|>' → logprob: -21.125051498413086
    10. '#' → logprob: -21.375051498413086

Token 503: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.044573646038770676
    2. ':' → logprob: -3.4195735454559326
    3. '           ' → logprob: -5.169573783874512
    4. '       ' → logprob: -5.294573783874512
    5. ',' → logprob: -9.794573783874512
    6. '):
' → logprob: -10.669573783874512
    7. '   ' → logprob: -10.919573783874512
    8. '=' → logprob: -11.044573783874512
    9. ' :
' → logprob: -11.169573783874512
    10. 'x' → logprob: -11.794573783874512

Token 504: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013234581798315048
    2. '           ' → logprob: -4.513234615325928
    3. '
' → logprob: -6.513234615325928
    4. 'x' → logprob: -8.63823413848877
    5. 'ret' → logprob: -8.88823413848877
    6. '```' → logprob: -9.38823413848877
    7. '   ' → logprob: -9.76323413848877
    8. '<|end|>' → logprob: -10.13823413848877
    9. ' ret' → logprob: -10.26323413848877
    10. '<|end|>' → logprob: -10.26323413848877

Token 505: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.00019102399528492242
    2. ' ret' → logprob: -8.625190734863281
    3. '           ' → logprob: -11.500190734863281
    4. '	ret' → logprob: -14.375190734863281
    5. '_ret' → logprob: -15.125190734863281
    6. '$ret' → logprob: -15.625190734863281
    7. '.ret' → logprob: -16.12519073486328
    8. 'rett' → logprob: -16.25019073486328
    9. '(ret' → logprob: -16.37519073486328
    10. 'retval' → logprob: -16.75019073486328

Token 506: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20161692798137665
    2. ' +=' → logprob: -1.701616883277893
    3. '   ' → logprob: -8.701617240905762
    4. '       ' → logprob: -10.826617240905762
    5. '           ' → logprob: -11.951617240905762
    6. '=' → logprob: -12.826617240905762
    7. ']+=' → logprob: -13.201617240905762
    8. '    ' → logprob: -13.701617240905762
    9. '+=(' → logprob: -13.951617240905762
    10. '	' → logprob: -14.076617240905762

Token 507: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040785204619169235
    2. ' self' → logprob: -5.504078388214111
    3. '           ' → logprob: -16.379077911376953
    4. '   ' → logprob: -17.629077911376953
    5. '(self' → logprob: -18.504077911376953
    6. '	self' → logprob: -18.754077911376953
    7. '[self' → logprob: -19.254077911376953
    8. '       ' → logprob: -19.379077911376953
    9. 'bit' → logprob: -20.004077911376953
    10. ' ' → logprob: -20.004077911376953

Token 508: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.04859202727675438
    2. 'bit' → logprob: -3.0485920906066895
    3. ' bit' → logprob: -13.548591613769531
    4. '-bit' → logprob: -13.923591613769531
    5. '.' → logprob: -14.298591613769531
    6. '_bit' → logprob: -14.298591613769531
    7. '   ' → logprob: -14.548591613769531
    8. ' .' → logprob: -16.17359161376953
    9. '[' → logprob: -16.54859161376953
    10. '
' → logprob: -16.67359161376953

Token 509: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.320199877838604e-07
    2. 'x' → logprob: -14.75
    3. '[' → logprob: -18.0
    4. '[
' → logprob: -19.5
    5. ' x' → logprob: -20.0
    6. '(x' → logprob: -20.25
    7. '{x' → logprob: -20.5
    8. '	x' → logprob: -21.125
    9. '```' → logprob: -21.625
    10. '   ' → logprob: -21.75

Token 510: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31183508038520813
    2. ']' → logprob: -1.9368350505828857
    3. '<|end|>' → logprob: -2.1868350505828857
    4. '<|end|>' → logprob: -4.936835289001465
    5. '-' → logprob: -6.311835289001465
    6. '       ' → logprob: -7.436835289001465
    7. ')]' → logprob: -8.436835289001465
    8. '           ' → logprob: -8.561835289001465
    9. ')
' → logprob: -8.561835289001465
    10. ' -=' → logprob: -8.686835289001465

Token 511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006210576975718141
    2. '       ' → logprob: -7.5006208419799805
    3. '   ' → logprob: -10.62562084197998
    4. ' x' → logprob: -11.00062084197998
    5. 'x' → logprob: -11.12562084197998
    6. ',' → logprob: -12.37562084197998
    7. '               ' → logprob: -12.75062084197998
    8. '	       ' → logprob: -14.00062084197998
    9. '            
' → logprob: -14.12562084197998
    10. '
' → logprob: -14.62562084197998

Token 512: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.005495091434568167
    2. ' x' → logprob: -5.255495071411133
    3. '           ' → logprob: -8.255495071411133
    4. '       ' → logprob: -13.755495071411133
    5. '   ' → logprob: -15.130495071411133
    6. '
' → logprob: -17.005495071411133
    7. '               ' → logprob: -17.380495071411133
    8. ' ' → logprob: -17.505495071411133
    9. '```' → logprob: -17.505495071411133
    10. '	x' → logprob: -18.255495071411133

Token 513: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1141306534409523
    2. ' -=' → logprob: -2.614130735397339
    3. '-' → logprob: -3.364130735397339
    4. ' -' → logprob: -10.989130973815918
    5. '=' → logprob: -10.989130973815918
    6. '   ' → logprob: -15.114130973815918
    7. '+=' → logprob: -15.239130973815918
    8. ' ' → logprob: -15.614130973815918
    9. '>' → logprob: -16.1141300201416
    10. '−' → logprob: -16.2391300201416

Token 514: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.09021367877721786
    2. 'x' → logprob: -2.8402137756347656
    3. ' (' → logprob: -3.5902137756347656
    4. '(' → logprob: -8.840213775634766
    5. ' x' → logprob: -9.090213775634766
    6. ' ' → logprob: -14.965213775634766
    7. '{x' → logprob: -16.090213775634766
    8. '   ' → logprob: -16.215213775634766
    9. '(t' → logprob: -16.465213775634766
    10. '	x' → logprob: -16.715213775634766

Token 515: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010425841173855588
    2. ' x' → logprob: -9.375103950500488
    3. '(x' → logprob: -10.875103950500488
    4. ' (' → logprob: -15.500103950500488
    5. '(' → logprob: -15.625103950500488
    6. '	x' → logprob: -17.750104904174805
    7. '   ' → logprob: -18.125104904174805
    8. '{x' → logprob: -18.625104904174805
    9. ' ' → logprob: -19.125104904174805
    10. '_x' → logprob: -19.750104904174805

Token 516: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.20146732032299042
    2. ' &' → logprob: -1.7014672756195068
    3. 'x' → logprob: -10.201467514038086
    4. '&amp' → logprob: -11.451467514038086
    5. ' x' → logprob: -12.701467514038086
    6. '&nbsp' → logprob: -14.076467514038086
    7. ' ' → logprob: -14.451467514038086
    8. ' ' → logprob: -14.451467514038086
    9. '(x' → logprob: -14.701467514038086
    10. '&
' → logprob: -15.201467514038086

Token 517: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009841318242251873
    2. ' x' → logprob: -4.634841442108154
    3. ' -' → logprob: -10.134840965270996
    4. '-x' → logprob: -10.634840965270996
    5. '-' → logprob: -10.759840965270996
    6. '	x' → logprob: -15.509840965270996
    7. '   ' → logprob: -16.634841918945312
    8. '```' → logprob: -16.884841918945312
    9. ')x' → logprob: -17.384841918945312
    10. '(x' → logprob: -17.384841918945312

Token 518: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0206720617134124e-05
    2. ' x' → logprob: -11.50001049041748
    3. '-x' → logprob: -18.750009536743164
    4. '-' → logprob: -18.875009536743164
    5. ')x' → logprob: -20.125009536743164
    6. ' -' → logprob: -20.125009536743164
    7. '	x' → logprob: -20.375009536743164
    8. '(x' → logprob: -21.500009536743164
    9. '```' → logprob: -21.625009536743164
    10. '_x' → logprob: -22.125009536743164

Token 519: ')
' (ID: 446)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004364132881164551
    2. ' x' → logprob: -5.754364013671875
    3. ')' → logprob: -6.754364013671875
    4. ')x' → logprob: -10.879364013671875
    5. '_x' → logprob: -15.129364013671875
    6. '	x' → logprob: -15.379364013671875
    7. '1' → logprob: -16.004364013671875
    8. '   ' → logprob: -16.254364013671875
    9. ')
' → logprob: -16.379364013671875
    10. '[x' → logprob: -16.754364013671875

Token 520: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2773982584476471
    2. '       ' → logprob: -1.7773982286453247
    3. 'def' → logprob: -3.0273983478546143
    4. '
' → logprob: -4.152398109436035
    5. 'return' → logprob: -5.902398109436035
    6. ' def' → logprob: -6.277398109436035
    7. '1' → logprob: -6.902398109436035
    8. ' return' → logprob: -7.152398109436035
    9. '    
' → logprob: -7.402398109436035
    10. '```' → logprob: -7.652398109436035

Token 521: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13832490146160126
    2. 'return' (adapté à ' return') → logprob: -2.1383249759674072
    3. ' return' → logprob: -5.013324737548828
    4. '   ' → logprob: -6.013324737548828
    5. '
' → logprob: -6.263324737548828
    6. 'def' → logprob: -8.763324737548828
    7. '	return' → logprob: -10.013324737548828
    8. ' ' → logprob: -10.138324737548828
    9. '           ' → logprob: -10.763324737548828
    10. '	' → logprob: -10.888324737548828

Token 522: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.676292231422849e-05
    2. ' ret' → logprob: -11.000017166137695
    3. '$ret' → logprob: -22.750017166137695
    4. '	ret' → logprob: -22.875017166137695
    5. '(ret' → logprob: -22.875017166137695
    6. 'rets' → logprob: -23.625017166137695
    7. 'rett' → logprob: -23.750017166137695
    8. 'retval' → logprob: -23.750017166137695
    9. 'return' → logprob: -24.500017166137695
    10. '_ret' → logprob: -24.875017166137695

Token 523: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.1252940893173218
    2. '
' → logprob: -1.5002940893173218
    3. 'def' → logprob: -1.8752940893173218
    4. '<|end|>' → logprob: -1.8752940893173218
    5. '   ' → logprob: -2.5002942085266113
    6. ' def' → logprob: -2.8752942085266113
    7. '<|end|>' → logprob: -5.875294208526611
    8. '    
' → logprob: -6.250294208526611
    9. '	def' → logprob: -7.250294208526611
    10. '  ' → logprob: -8.125293731689453

Token 524: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17399486899375916
    2. ' def' → logprob: -2.548994779586792
    3. '   ' → logprob: -2.673994779586792
    4. '<|end|>' → logprob: -4.548995018005371
    5. '    
' → logprob: -7.423995018005371
    6. ')' → logprob: -8.048995018005371
    7. '
' → logprob: -8.173995018005371
    8. '```' → logprob: -8.548995018005371
    9. '	def' → logprob: -8.673995018005371
    10. ' ' → logprob: -9.048995018005371

Token 525: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009555285796523094
    2. ' def' → logprob: -7.625955581665039
    3. '   ' → logprob: -7.750955581665039
    4. '    
' → logprob: -10.875955581665039
    5. '
' → logprob: -11.500955581665039
    6. '```' → logprob: -12.500955581665039
    7. '	def' → logprob: -13.250955581665039
    8. '<|end|>' → logprob: -14.250955581665039
    9. '        
' → logprob: -14.500955581665039
    10. '  
' → logprob: -14.625955581665039

Token 526: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02416239120066166
    2. 'query' → logprob: -4.399162292480469
    3. ' sum' → logprob: -4.774162292480469
    4. 'range' → logprob: -5.899162292480469
    5. ' query' → logprob: -8.274162292480469
    6. 'get' → logprob: -9.774162292480469
    7. 'prefix' → logprob: -10.399162292480469
    8. ' range' → logprob: -10.524162292480469
    9. '_sum' → logprob: -11.399162292480469
    10. ' ' → logprob: -13.399162292480469

Token 527: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002199740381911397
    2. '(' → logprob: -6.127199649810791
    3. '<|end|>' → logprob: -12.00220012664795
    4. '(x' → logprob: -13.00220012664795
    5. ' (' → logprob: -13.37720012664795
    6. '(
' → logprob: -13.50220012664795
    7. 'self' → logprob: -13.62720012664795
    8. '(Self' → logprob: -14.75220012664795
    9. ')' → logprob: -15.25220012664795
    10. '(s' → logprob: -15.50220012664795

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6336966156959534
    2. '(self' → logprob: -1.0086965560913086
    3. ')' → logprob: -2.5086965560913086
    4. '(' → logprob: -5.008696556091309
    5. ')(' → logprob: -5.133696556091309
    6. 'self' → logprob: -5.758696556091309
    7. '(x' → logprob: -6.383696556091309
    8. ' (' → logprob: -6.383696556091309
    9. ',self' → logprob: -6.883696556091309
    10. ' ,' → logprob: -7.008696556091309

Token 529: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6755226254463196
    2. 'r' → logprob: -0.9255226254463196
    3. 'l' → logprob: -2.425522565841675
    4. ' r' → logprob: -5.675522804260254
    5. ' l' → logprob: -6.800522804260254
    6. ' x' → logprob: -7.550522804260254
    7. 'i' → logprob: -7.675522804260254
    8. 'self' → logprob: -7.925522804260254
    9. 'right' → logprob: -8.300522804260254
    10. 'left' → logprob: -9.050522804260254

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.313314952421933e-05
    2. ' ,' → logprob: -9.875062942504883
    3. ',r' → logprob: -11.750062942504883
    4. ',int' → logprob: -14.250062942504883
    5. ',right' → logprob: -14.500062942504883
    6. ',l' → logprob: -14.750062942504883
    7. ',n' → logprob: -14.875062942504883
    8. '   ' → logprob: -15.500062942504883
    9. ',x' → logprob: -15.500062942504883
    10. ',
' → logprob: -15.500062942504883

Token 531: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001170225441455841
    2. ' r' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.876171112060547
    4. '	r' → logprob: -18.751171112060547
    5. '
' → logprob: -21.876171112060547
    6. ' ' → logprob: -22.126171112060547
    7. '```' → logprob: -23.001171112060547
    8. '    ' → logprob: -23.001171112060547
    9. '     ' → logprob: -23.126171112060547
    10. ',r' → logprob: -23.126171112060547

Token 532: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23843739926815033
    2. '):' → logprob: -1.6134374141693115
    3. '):
' → logprob: -4.363437175750732
    4. '   ' → logprob: -9.11343765258789
    5. '):
' → logprob: -10.48843765258789
    6. ')' → logprob: -10.86343765258789
    7. ' ,' → logprob: -11.23843765258789
    8. 'self' → logprob: -11.23843765258789
    9. ' ):' → logprob: -11.73843765258789
    10. '):

' → logprob: -12.48843765258789

Token 533: '       ' (ID: 309)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.43665772676467896
    2. '(self' → logprob: -1.6866576671600342
    3. '(' → logprob: -2.811657667160034
    4. '       ' → logprob: -3.311657667160034
    5. 'self' → logprob: -4.186657905578613
    6. ' l' → logprob: -4.186657905578613
    7. '   ' → logprob: -4.436657905578613
    8. 'l' → logprob: -4.561657905578613
    9. ' self' → logprob: -4.686657905578613
    10. '(r' → logprob: -5.311657905578613

Token 534: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012784506194293499
    2. ' return' → logprob: -4.512784481048584
    3. '       ' → logprob: -6.387784481048584
    4. '{return' → logprob: -10.512784957885742
    5. ':return' → logprob: -12.137784957885742
    6. '	return' → logprob: -12.262784957885742
    7. 'self' → logprob: -12.262784957885742
    8. '   ' → logprob: -12.762784957885742
    9. '(return' → logprob: -13.637784957885742
    10. '=' → logprob: -13.762784957885742

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011055364273488522
    2. ' self' → logprob: -4.5110554695129395
    3. '(self' → logprob: -12.011054992675781
    4. '       ' → logprob: -13.886054992675781
    5. '   ' → logprob: -15.011054992675781
    6. '[self' → logprob: -16.01105499267578
    7. '	self' → logprob: -16.88605499267578
    8. '           ' → logprob: -17.76105499267578
    9. '=self' → logprob: -18.26105499267578
    10. ' ' → logprob: -18.38605499267578

Token 536: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0015577126760035753
    2. '.sum' → logprob: -6.62655782699585
    3. ' .' → logprob: -9.126557350158691
    4. '.' → logprob: -9.751557350158691
    5. '_sum' → logprob: -9.876557350158691
    6. 'sum' → logprob: -11.751557350158691
    7. '.bit' → logprob: -13.001557350158691
    8. ' _' → logprob: -13.876557350158691
    9. ' ' → logprob: -14.626557350158691
    10. '   ' → logprob: -14.876557350158691

Token 537: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.392202976712724e-06
    2. '_sum' → logprob: -12.000006675720215
    3. ' sum' → logprob: -15.750006675720215
    4. 'r' → logprob: -17.7500057220459
    5. 's' → logprob: -18.7500057220459
    6. 'sub' → logprob: -19.1250057220459
    7. 'bit' → logprob: -19.8750057220459
    8. '(sum' → logprob: -20.0000057220459
    9. '	sum' → logprob: -20.7500057220459
    10. 'l' → logprob: -20.7500057220459

Token 538: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.875014305114746
    3. ' (' → logprob: -12.375014305114746
    4. 'r' → logprob: -12.875014305114746
    5. '   ' → logprob: -15.125014305114746
    6. '[r' → logprob: -16.500015258789062
    7. '((' → logprob: -16.875015258789062
    8. '(
' → logprob: -17.000015258789062
    9. '```' → logprob: -17.500015258789062
    10. ' r' → logprob: -18.000015258789062

Token 539: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03168049082159996
    2. ' +' → logprob: -3.7816805839538574
    3. ')' → logprob: -4.781680583953857
    4. '+)' → logprob: -11.7816801071167
    5. '   ' → logprob: -12.1566801071167
    6. '[' → logprob: -13.4066801071167
    7. ' )' → logprob: -13.6566801071167
    8. ')
' → logprob: -14.1566801071167
    9. '+
' → logprob: -14.4066801071167
    10. '-' → logprob: -15.6566801071167

Token 540: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07968058437108994
    2. ' -' → logprob: -2.8296806812286377
    3. '-' → logprob: -4.454680442810059
    4. ' +' → logprob: -5.329680442810059
    5. ')' → logprob: -7.079680442810059
    6. '   ' → logprob: -9.329680442810059
    7. '-
' → logprob: -9.454680442810059
    8. ')-' → logprob: -10.704680442810059
    9. '    ' → logprob: -10.829680442810059
    10. '```' → logprob: -11.829680442810059

Token 541: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002538086613640189
    2. ' self' → logprob: -6.002538204193115
    3. '(self' → logprob: -10.002537727355957
    4. '_self' → logprob: -11.752537727355957
    5. '	self' → logprob: -12.252537727355957
    6. '<|end|>' → logprob: -13.877537727355957
    7. ' ' → logprob: -14.002537727355957
    8. '[self' → logprob: -14.252537727355957
    9. '$self' → logprob: -14.252537727355957
    10. '
' → logprob: -14.627537727355957

Token 542: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00031401283922605217
    2. '_sum' → logprob: -8.875313758850098
    3. '_bit' → logprob: -9.000313758850098
    4. '.' → logprob: -11.000313758850098
    5. '.bit' → logprob: -11.625313758850098
    6. ' _' → logprob: -11.875313758850098
    7. '_' → logprob: -12.250313758850098
    8. '.sum' → logprob: -12.250313758850098
    9. 'bit' → logprob: -13.875313758850098
    10. 'def' → logprob: -14.250313758850098

Token 543: 'sum' (ID: 12298)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0031793788075447083
    2. 'sum' → logprob: -5.753179550170898
    3. ' sum' → logprob: -14.128179550170898
    4. ' _' → logprob: -15.128179550170898
    5. '_s' → logprob: -15.378179550170898
    6. '_sub' → logprob: -15.753179550170898
    7. '.sum' → logprob: -16.2531795501709
    8. '._' → logprob: -16.3781795501709
    9. '_bit' → logprob: -17.1281795501709
    10. '(sum' → logprob: -17.5031795501709

Token 544: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0004331725067459047
    2. '(r' → logprob: -8.250432968139648
    3. '(' → logprob: -8.750432968139648
    4. ' (' → logprob: -11.250432968139648
    5. '((' → logprob: -15.500432968139648
    6. '(x' → logprob: -16.62543296813965
    7. '(s' → logprob: -17.00043296813965
    8. '(
' → logprob: -17.12543296813965
    9. '(ll' → logprob: -17.37543296813965
    10. '(L' → logprob: -17.62543296813965

Token 545: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001181777217425406
    2. '+' → logprob: -7.001181602478027
    3. ' )' → logprob: -9.251181602478027
    4. '<|end|>' → logprob: -10.001181602478027
    5. '[' → logprob: -10.751181602478027
    6. ')return' → logprob: -11.251181602478027
    7. '   ' → logprob: -11.251181602478027
    8. ' +' → logprob: -11.376181602478027
    9. '+r' → logprob: -11.626181602478027
    10. ')>' → logprob: -11.876181602478027

Token 546: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.174613356590271
    2. '+' → logprob: -1.299613356590271
    3. 'def' (adapté à ' def') → logprob: -2.0496134757995605
    4. '(' → logprob: -2.1746134757995605
    5. '<|end|>' → logprob: -2.9246134757995605
    6. '[' → logprob: -3.0496134757995605
    7. '(r' → logprob: -4.1746134757995605
    8. ' def' → logprob: -4.1746134757995605
    9. '   ' → logprob: -4.4246134757995605
    10. '-' → logprob: -4.6746134757995605

Token 548: ' __' (ID: 2516)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.24208103120326996
    2. 'get' → logprob: -1.9920810461044312
    3. 'lower' → logprob: -3.6170809268951416
    4. 'update' → logprob: -3.9920809268951416
    5. '__' → logprob: -4.617081165313721
    6. 'build' → logprob: -4.867081165313721
    7. 'at' → logprob: -5.367081165313721
    8. 'point' → logprob: -5.617081165313721
    9. 'sum' → logprob: -6.742081165313721
    10. 'range' → logprob: -6.992081165313721

Token 549: 'str' (ID: 689)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.40822312235832214
    2. 'getitem' → logprob: -1.4082231521606445
    3. 'len' → logprob: -2.4082231521606445
    4. 'i' → logprob: -8.658223152160645
    5. 'repr' → logprob: -8.908223152160645
    6. 'iter' → logprob: -9.158223152160645
    7. 'contains' → logprob: -9.783223152160645
    8. 'add' → logprob: -10.158223152160645
    9. 'l' → logprob: -10.283223152160645
    10. 'str' → logprob: -10.283223152160645

Token 550: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4786938726902008
    2. '(self' → logprob: -0.9786938428878784
    3. '(' → logprob: -5.978693962097168
    4. '__' → logprob: -6.353693962097168
    5. '__(
' → logprob: -8.728693962097168
    6. '_(' → logprob: -10.228693962097168
    7. '__('' → logprob: -11.103693962097168
    8. '__((' → logprob: -11.228693962097168
    9. 'self' → logprob: -11.478693962097168
    10. '()(' → logprob: -11.853693962097168

Token 551: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005616117268800735
    2. ')' → logprob: -7.500561714172363
    3. ' self' → logprob: -12.000561714172363
    4. '(self' → logprob: -14.375561714172363
    5. '):
' → logprob: -14.625561714172363
    6. '__' → logprob: -15.500561714172363
    7. '_self' → logprob: -15.750561714172363
    8. 's' → logprob: -16.250560760498047
    9. '):' → logprob: -16.250560760498047
    10. '	self' → logprob: -16.375560760498047

Token 552: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49562323093414307
    2. '__' → logprob: -0.9956232309341431
    3. ')' → logprob: -4.7456231117248535
    4. '):
' → logprob: -5.4956231117248535
    5. ')__' → logprob: -5.6206231117248535
    6. ').__' → logprob: -6.3706231117248535
    7. 'self' → logprob: -6.4956231117248535
    8. '__(' → logprob: -7.8706231117248535
    9. '__:' → logprob: -7.9956231117248535
    10. ')(__' → logprob: -8.120623588562012

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22828927636146545
    2. '   ' → logprob: -2.1032893657684326
    3. 'def' → logprob: -2.6032893657684326
    4. 'self' → logprob: -5.9782891273498535
    5. 'return' → logprob: -6.3532891273498535
    6. '(self' → logprob: -6.4782891273498535
    7. ' def' → logprob: -7.2282891273498535
    8. ' return' → logprob: -7.4782891273498535
    9. '           ' → logprob: -8.353289604187012
    10. ' self' → logprob: -8.728289604187012

Token 554: ' arr' (ID: 1724)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009782649576663971
    2. ' return' → logprob: -4.759782791137695
    3. '       ' → logprob: -6.759782791137695
    4. 'r' → logprob: -12.509782791137695
    5. '   ' → logprob: -13.384782791137695
    6. 's' → logprob: -13.384782791137695
    7. 'b' → logprob: -14.884782791137695
    8. '	return' → logprob: -15.134782791137695
    9. 'x' → logprob: -15.884782791137695
    10. '```' → logprob: -16.384782791137695

Token 555: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04194089025259018
    2. '=' → logprob: -3.666940927505493
    3. '(self' → logprob: -5.291940689086914
    4. '()' → logprob: -5.916940689086914
    5. '=self' → logprob: -5.916940689086914
    6. '().__' → logprob: -6.916940689086914
    7. 'ay' → logprob: -7.166940689086914
    8. '=[]' → logprob: -7.666940689086914
    9. '   ' → logprob: -7.791940689086914
    10. '=_' → logprob: -8.541940689086914

Token 556: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.6685673594474792
    2. '[' → logprob: -0.9185673594474792
    3. '[]
' → logprob: -3.418567419052124
    4. '[str' → logprob: -3.793567419052124
    5. '"' → logprob: -4.293567180633545
    6. ' [' → logprob: -5.043567180633545
    7. '[]' → logprob: -5.418567180633545
    8. ''' → logprob: -5.793567180633545
    9. 'self' → logprob: -5.793567180633545
    10. '[
' → logprob: -7.418567180633545

Token 557: 'self' (ID: 1156)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6931824088096619
    2. 'self' → logprob: -0.6931824088096619
    3. ' self' → logprob: -11.318181991577148
    4. '   ' → logprob: -11.818181991577148
    5. '0' → logprob: -12.568181991577148
    6. '(self' → logprob: -12.693181991577148
    7. '(str' → logprob: -13.068181991577148
    8. ' str' → logprob: -13.193181991577148
    9. '
' → logprob: -13.443181991577148
    10. '[str' → logprob: -14.443181991577148

Token 558: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.009201801382005215
    2. '.bit' → logprob: -4.884202003479004
    3. '._' → logprob: -6.509202003479004
    4. 'sum' → logprob: -10.009202003479004
    5. ' .' → logprob: -10.884202003479004
    6. 'bit' → logprob: -11.009202003479004
    7. '.s' → logprob: -12.259202003479004
    8. '.' → logprob: -12.759202003479004
    9. '.str' → logprob: -12.884202003479004
    10. '.__' → logprob: -13.134202003479004

Token 559: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.404745439183898e-05
    2. '(' → logprob: -10.37503433227539
    3. '(k' → logprob: -13.87503433227539
    4. ' (' → logprob: -14.25003433227539
    5. '(x' → logprob: -14.25003433227539
    6. 'i' → logprob: -14.75003433227539
    7. '(j' → logprob: -16.00003433227539
    8. '(u' → logprob: -17.12503433227539
    9. '(n' → logprob: -17.12503433227539
    10. ' i' → logprob: -17.75003433227539

Token 560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023104429244995117
    2. ',i' → logprob: -3.898104429244995
    3. ' ,' → logprob: -6.148104667663574
    4. '-' → logprob: -8.898104667663574
    5. ' ' → logprob: -9.148104667663574
    6. '   ' → logprob: -9.648104667663574
    7. 'i' → logprob: -10.148104667663574
    8. '(i' → logprob: -10.648104667663574
    9. ' i' → logprob: -11.148104667663574
    10. '  ' → logprob: -11.523104667663574

Token 561: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.036524842376821e-05
    2. ' i' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.375040054321289
    4. ' ' → logprob: -17.87504005432129
    5. '	i' → logprob: -18.12504005432129
    6. '(i' → logprob: -18.25004005432129
    7. '  ' → logprob: -18.75004005432129
    8. '[i' → logprob: -21.12504005432129
    9. 'self' → logprob: -21.75004005432129
    10. '    ' → logprob: -21.75004005432129

Token 562: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03432092443108559
    2. ')' → logprob: -4.034320831298828
    3. ' +' → logprob: -4.159320831298828
    4. '+i' → logprob: -8.909320831298828
    5. ' i' → logprob: -9.159320831298828
    6. '   ' → logprob: -9.659320831298828
    7. 'i' → logprob: -10.034320831298828
    8. ' )' → logprob: -10.284320831298828
    9. '(i' → logprob: -11.409320831298828
    10. ',i' → logprob: -12.034320831298828

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011772842844948173
    2. ' ' → logprob: -9.875117301940918
    3. '   ' → logprob: -10.500117301940918
    4. 'i' → logprob: -10.625117301940918
    5. '+' → logprob: -11.375117301940918
    6. '  ' → logprob: -14.250117301940918
    7. ' i' → logprob: -14.250117301940918
    8. ')' → logprob: -15.375117301940918
    9. '     ' → logprob: -15.500117301940918
    10. '```' → logprob: -15.625117301940918

Token 564: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00247981958091259
    2. ' )' → logprob: -6.0024800300598145
    3. ' for' → logprob: -13.377479553222656
    4. ')
' → logprob: -14.252479553222656
    5. ',' → logprob: -14.627479553222656
    6. 'i' → logprob: -14.752479553222656
    7. ' ' → logprob: -15.377479553222656
    8. 'for' → logprob: -15.627479553222656
    9. ')+' → logprob: -15.752479553222656
    10. ')i' → logprob: -16.002479553222656

Token 565: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0019524219678714871
    2. 'for' → logprob: -6.251952648162842
    3. '	for' → logprob: -11.501952171325684
    4. '    ' → logprob: -12.626952171325684
    5. '   ' → logprob: -12.751952171325684
    6. ' ' → logprob: -12.876952171325684
    7. '()' → logprob: -13.001952171325684
    8. ' i' → logprob: -13.751952171325684
    9. ' in' → logprob: -14.876952171325684
    10. ',' → logprob: -14.876952171325684

Token 566: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011047814972698689
    2. ' i' → logprob: -4.511047840118408
    3. ' ' → logprob: -18.13604736328125
    4. '	i' → logprob: -19.88604736328125
    5. '  ' → logprob: -20.76104736328125
    6. '   ' → logprob: -21.13604736328125
    7. 'range' → logprob: -21.13604736328125
    8. ' range' → logprob: -21.63604736328125
    9. '0' → logprob: -21.76104736328125
    10. '_i' → logprob: -22.38604736328125

Token 567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007613963447511196
    2. 'in' → logprob: -4.8826141357421875
    3. 'i' → logprob: -12.632614135742188
    4. 'range' → logprob: -12.882614135742188
    5. ' i' → logprob: -13.507614135742188
    6. ' range' → logprob: -15.007614135742188
    7. ' ' → logprob: -16.007614135742188
    8. '	in' → logprob: -16.757614135742188
    9. ',' → logprob: -16.882614135742188
    10. '0' → logprob: -17.382614135742188

Token 568: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -18.00002670288086
    4. '   ' → logprob: -19.37502670288086
    5. '	range' → logprob: -20.00002670288086
    6. ' ' → logprob: -20.50002670288086
    7. '0' → logprob: -21.25002670288086
    8. '  ' → logprob: -21.50002670288086
    9. '
' → logprob: -22.12502670288086
    10. 'x' → logprob: -22.62502670288086

Token 569: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1280381679534912
    2. 'self' → logprob: -2.128038167953491
    3. '(' → logprob: -7.25303840637207
    4. ' self' → logprob: -8.00303840637207
    5. '0' → logprob: -10.50303840637207
    6. '   ' → logprob: -10.62803840637207
    7. ' (' → logprob: -11.87803840637207
    8. '(len' → logprob: -12.50303840637207
    9. '       ' → logprob: -13.87803840637207
    10. '	self' → logprob: -13.87803840637207

Token 570: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -4.727905979962088e-05
    2. '.' → logprob: -10.12504768371582
    3. 'N' → logprob: -12.12504768371582
    4. ' .' → logprob: -13.62504768371582
    5. '.n' → logprob: -15.75004768371582
    6. '   ' → logprob: -16.87504768371582
    7. '.size' → logprob: -17.00004768371582
    8. '.S' → logprob: -17.75004768371582
    9. '.A' → logprob: -18.25004768371582
    10. '.B' → logprob: -18.25004768371582

Token 571: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.999452772201039e-05
    2. ' )' → logprob: -11.125029563903809
    3. ')' → logprob: -12.125029563903809
    4. ']' → logprob: -12.250029563903809
    5. '+' → logprob: -12.750029563903809
    6. ' ]' → logprob: -13.750029563903809
    7. ')]
' → logprob: -14.750029563903809
    8. '   ' → logprob: -16.000030517578125
    9. '))' → logprob: -16.375030517578125
    10. ')]

' → logprob: -16.500030517578125

Token 572: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8817947506904602
    2. 'return' → logprob: -1.3817946910858154
    3. '
' → logprob: -1.7567946910858154
    4. ' return' → logprob: -3.1317946910858154
    5. '[' → logprob: -3.6317946910858154
    6. '<|end|>' → logprob: -4.1317949295043945
    7. ']' → logprob: -4.2567949295043945
    8. '       ' → logprob: -4.2567949295043945
    9. '   ' → logprob: -4.6317949295043945
    10. '.join' → logprob: -4.8817949295043945

Token 573: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.202128067612648
    2. ' return' → logprob: -1.7021280527114868
    3. '       ' → logprob: -7.327127933502197
    4. '   ' → logprob: -10.327128410339355
    5. '
' → logprob: -11.202128410339355
    6. '	return' → logprob: -11.702128410339355
    7. 'eturn' → logprob: -13.577128410339355
    8. ':return' → logprob: -15.077128410339355
    9. ')' → logprob: -15.327128410339355
    10. ')return' → logprob: -15.577128410339355

Token 574: ' str' (ID: 989)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22062721848487854
    2. '"' → logprob: -1.9706271886825562
    3. 'str' → logprob: -2.8456273078918457
    4. ' str' → logprob: -7.970627307891846
    5. 'f' → logprob: -10.220626831054688
    6. ' '' → logprob: -10.720626831054688
    7. ''"' → logprob: -10.720626831054688
    8. 'repr' → logprob: -10.970626831054688
    9. '"[' → logprob: -11.095626831054688
    10. ''f' → logprob: -11.095626831054688

Token 575: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.87500286102295
    3. '(array' → logprob: -15.37500286102295
    4. 'arr' → logprob: -16.000003814697266
    5. '(list' → logprob: -16.750003814697266
    6. '(tuple' → logprob: -17.625003814697266
    7. '(len' → logprob: -17.625003814697266
    8. '[arr' → logprob: -18.625003814697266
    9. '<arr' → logprob: -18.750003814697266
    10. '("("' → logprob: -18.875003814697266

Token 576: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.250000953674316
    3. ']' → logprob: -15.875000953674316
    4. ')]' → logprob: -16.0
    5. '())' → logprob: -16.5
    6. '()' → logprob: -16.75
    7. '))' → logprob: -16.875
    8. ')`' → logprob: -17.375
    9. ')#' → logprob: -17.375
    10. ')}' → logprob: -17.75

Token 577: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0239412784576416
    2. 'import' → logprob: -4.2739410400390625
    3. 'if' → logprob: -5.0239410400390625
    4. '#' → logprob: -6.6489410400390625
    5. ')' → logprob: -6.8989410400390625
    6. '```' → logprob: -8.523941040039062
    7. 'n' → logprob: -8.648941040039062
    8. 'from' → logprob: -9.023941040039062
    9. '<|end|>' → logprob: -9.023941040039062
    10. '(' → logprob: -10.148941040039062

Token 578: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005044117569923401
    2. 'main' → logprob: -5.380043983459473
    3. ' solve' → logprob: -7.880043983459473
    4. 'solve' → logprob: -10.505043983459473
    5. '	main' → logprob: -11.880043983459473
    6. ' process' → logprob: -12.630043983459473
    7. ' def' → logprob: -13.005043983459473
    8. '_main' → logprob: -14.130043983459473
    9. ' solution' → logprob: -14.255043983459473
    10. ' ' → logprob: -14.255043983459473

Token 579: '_bit' (ID: 39574)
  Prédit: 'ialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ialize' → logprob: -0.7157186269760132
    2. '_bit' → logprob: -1.2157186269760132
    3. '_tree' → logprob: -3.2157187461853027
    4. '_binary' → logprob: -3.4657187461853027
    5. '(N' → logprob: -3.8407187461853027
    6. 'ial' → logprob: -4.340718746185303
    7. '_graph' → logprob: -4.465718746185303
    8. '_color' → logprob: -4.590718746185303
    9. '_array' → logprob: -4.715718746185303
    10. '_colors' → logprob: -4.840718746185303

Token 580: '(tree' (ID: 44909)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.41666749119758606
    2. '(size' → logprob: -1.1666674613952637
    3. '(n' → logprob: -3.7916674613952637
    4. '(' → logprob: -6.166667461395264
    5. '(bit' → logprob: -6.166667461395264
    6. '():' → logprob: -6.791667461395264
    7. '(s' → logprob: -8.166667938232422
    8. '(sz' → logprob: -8.541667938232422
    9. '(es' → logprob: -8.791667938232422
    10. ' (' → logprob: -8.791667938232422

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026747032534331083
    2. '):' → logprob: -6.252674579620361
    3. 'size' → logprob: -8.25267505645752
    4. ' ,' → logprob: -8.62767505645752
    5. ',size' → logprob: -9.62767505645752
    6. ',n' → logprob: -10.25267505645752
    7. ',N' → logprob: -10.25267505645752
    8. 's' → logprob: -10.50267505645752
    9. '):
' → logprob: -10.62767505645752
    10. '(N' → logprob: -10.62767505645752

Token 582: ' N' (ID: 478)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.5859601497650146
    2. 'N' → logprob: -1.9609601497650146
    3. 'values' → logprob: -2.7109601497650146
    4. 'n' → logprob: -2.9609601497650146
    5. 'color' → logprob: -3.2109601497650146
    6. 'colors' → logprob: -3.4609601497650146
    7. 'arr' → logprob: -3.7109601497650146
    8. 'vals' → logprob: -4.335960388183594
    9. ' values' → logprob: -4.460960388183594
    10. ' N' → logprob: -4.710960388183594

Token 583: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062275417149066925
    2. '):' → logprob: -2.8122754096984863
    3. '):
' → logprob: -8.562275886535645
    4. ')' → logprob: -9.437275886535645
    5. ' ,' → logprob: -11.187275886535645
    6. '   ' → logprob: -11.687275886535645
    7. ' ):' → logprob: -13.062275886535645
    8. ',N' → logprob: -13.312275886535645
    9. ',n' → logprob: -13.437275886535645
    10. '[' → logprob: -13.562275886535645

Token 584: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10630468279123306
    2. '   ' → logprob: -2.35630464553833
    3. ' for' → logprob: -5.73130464553833
    4. 'tree' → logprob: -5.98130464553833
    5. 'def' → logprob: -9.106305122375488
    6. 'return' → logprob: -9.106305122375488
    7. 'global' → logprob: -9.606305122375488
    8. ' tree' → logprob: -11.481305122375488
    9. '	for' → logprob: -13.356305122375488
    10. 'pass' → logprob: -13.481305122375488

Token 585: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04523034021258354
    2. 'tree' → logprob: -3.6702303886413574
    3. 'return' → logprob: -4.045230388641357
    4. '   ' → logprob: -7.170230388641357
    5. 'global' → logprob: -8.7952299118042
    6. 'def' → logprob: -8.7952299118042
    7. ' for' → logprob: -9.2952299118042
    8. 'pass' → logprob: -9.6702299118042
    9. 'bit' → logprob: -12.1702299118042
    10. ' return' → logprob: -12.9202299118042

Token 586: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17979122698307037
    2. ' i' → logprob: -1.8047912120819092
    3. '_' → logprob: -10.929791450500488
    4. 'x' → logprob: -11.429791450500488
    5. '_i' → logprob: -11.929791450500488
    6. '	i' → logprob: -13.179791450500488
    7. '(i' → logprob: -13.429791450500488
    8. '0' → logprob: -13.429791450500488
    9. ' ' → logprob: -14.179791450500488
    10. 'v' → logprob: -14.179791450500488

Token 587: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020635318011045456
    2. 'in' → logprob: -3.8956353664398193
    3. 'range' → logprob: -9.895635604858398
    4. ',' → logprob: -11.020635604858398
    5. 'n' → logprob: -11.895635604858398
    6. 'd' → logprob: -12.645635604858398
    7. ' ' → logprob: -12.770635604858398
    8. 'def' → logprob: -13.020635604858398
    9. '   ' → logprob: -13.395635604858398
    10. '(' → logprob: -13.770635604858398

Token 588: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.848420551046729e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -16.125059127807617
    4. '	range' → logprob: -17.625059127807617
    5. '0' → logprob: -18.500059127807617
    6. '   ' → logprob: -19.125059127807617
    7. '[' → logprob: -19.375059127807617
    8. ')' → logprob: -19.375059127807617
    9. 'r' → logprob: -19.500059127807617
    10. '.range' → logprob: -20.625059127807617

Token 589: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00016468366084154695
    2. '(' → logprob: -8.750164985656738
    3. '(len' → logprob: -12.875164985656738
    4. 'N' → logprob: -13.125164985656738
    5. '(n' → logprob: -14.000164985656738
    6. 'def' → logprob: -14.500164985656738
    7. ' (' → logprob: -16.125164031982422
    8. '(
' → logprob: -16.625164031982422
    9. ' N' → logprob: -16.875164031982422
    10. '1' → logprob: -17.500164031982422

Token 590: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016237296164035797
    2. '):
' → logprob: -4.141237258911133
    3. '+' → logprob: -8.766237258911133
    4. '   ' → logprob: -10.641237258911133
    5. '-' → logprob: -11.391237258911133
    6. ' ):' → logprob: -11.891237258911133
    7. '):
' → logprob: -13.766237258911133
    8. ')' → logprob: -13.891237258911133
    9. '():' → logprob: -14.641237258911133
    10. ']:' → logprob: -15.016237258911133

Token 591: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48416799306869507
    2. '       ' → logprob: -1.1091680526733398
    3. 'tree' → logprob: -2.98416805267334
    4. ' tree' → logprob: -5.73416805267334
    5. '	tree' → logprob: -9.35916805267334
    6. '(tree' → logprob: -10.23416805267334
    7. ' ' → logprob: -12.60916805267334
    8. '  ' → logprob: -13.10916805267334
    9. '_tree' → logprob: -13.23416805267334
    10. '   ' → logprob: -13.73416805267334

Token 592: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.05503326654434204
    2. '   ' → logprob: -2.9300332069396973
    3. ' tree' → logprob: -9.180033683776855
    4. '       ' → logprob: -10.430033683776855
    5. '	tree' → logprob: -11.180033683776855
    6. '(tree' → logprob: -13.805033683776855
    7. 'def' → logprob: -14.055033683776855
    8. '           ' → logprob: -14.430033683776855
    9. 'pass' → logprob: -14.930033683776855
    10. '  ' → logprob: -15.055033683776855

Token 593: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0008808538550511003
    2. '.' → logprob: -7.125880718231201
    3. ' .' → logprob: -10.25088119506836
    4. ').' → logprob: -11.25088119506836
    5. '   ' → logprob: -11.25088119506836
    6. '.append' → logprob: -12.50088119506836
    7. '.sum' → logprob: -12.62588119506836
    8. '].' → logprob: -12.87588119506836
    9. '.bit' → logprob: -13.62588119506836
    10. '}.' → logprob: -14.00088119506836

Token 594: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -11.375012397766113
    3. '<|end|>' → logprob: -14.875012397766113
    4. ',i' → logprob: -15.500012397766113
    5. 'i' → logprob: -15.750012397766113
    6. ')' → logprob: -17.125011444091797
    7. ' i' → logprob: -17.250011444091797
    8. '(
' → logprob: -17.375011444091797
    9. ' (' → logprob: -17.625011444091797
    10. ')i' → logprob: -17.750011444091797

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012296605564188212
    2. ' ,' → logprob: -9.250123023986816
    3. '1' → logprob: -10.875123023986816
    4. '0' → logprob: -12.375123023986816
    5. ' ' → logprob: -14.500123023986816
    6. ')' → logprob: -14.500123023986816
    7. ',
' → logprob: -14.625123023986816
    8. '[' → logprob: -14.750123023986816
    9. '<|end|>' → logprob: -15.000123023986816
    10. '   ' → logprob: -15.125123023986816

Token 596: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009244420798495412
    2. '0' → logprob: -7.250924587249756
    3. ' ' → logprob: -8.500924110412598
    4. 'i' → logprob: -12.500924110412598
    5. '   ' → logprob: -12.750924110412598
    6. ')' → logprob: -14.563424110412598
    7. '-' → logprob: -14.688424110412598
    8. '+' → logprob: -14.750924110412598
    9. '2' → logprob: -14.875924110412598
    10. 'tree' → logprob: -14.938424110412598

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007738933200016618
    2. '0' → logprob: -7.250773906707764
    3. ' ' → logprob: -10.000773429870605
    4. 'i' → logprob: -12.125773429870605
    5. 'tree' → logprob: -12.250773429870605
    6. '   ' → logprob: -12.375773429870605
    7. ')' → logprob: -14.688273429870605
    8. '  ' → logprob: -15.188273429870605
    9. '-' → logprob: -15.188273429870605
    10. '2' → logprob: -15.625773429870605

Token 598: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')
' → logprob: -11.125017166137695
    3. ' )' → logprob: -13.500017166137695
    4. '   ' → logprob: -15.500017166137695
    5. '<|end|>' → logprob: -15.875017166137695
    6. ')i' → logprob: -16.875017166137695
    7. '))' → logprob: -16.875017166137695
    8. ')return' → logprob: -16.875017166137695
    9. ')

' → logprob: -17.250017166137695
    10. ')}' → logprob: -18.000017166137695

Token 599: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2871634066104889
    2. '<|end|>' → logprob: -1.4121633768081665
    3. 'import' → logprob: -6.287163257598877
    4. '#' → logprob: -6.537163257598877
    5. '```' → logprob: -6.912163257598877
    6. '<|end|>' → logprob: -7.037163257598877
    7. ')' → logprob: -8.162163734436035
    8. '.' → logprob: -9.162163734436035
    9. 'from' → logprob: -9.287163734436035
    10. '...' → logprob: -9.537163734436035

Token 600: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.646466076374054
    2. ' main' → logprob: -0.771466076374054
    3. 'def' → logprob: -4.396466255187988
    4. ' def' → logprob: -6.771466255187988
    5. 'solve' → logprob: -9.021466255187988
    6. ' solve' → logprob: -9.396466255187988
    7. 'process' → logprob: -10.771466255187988
    8. 'build' → logprob: -11.521466255187988
    9. ' build' → logprob: -11.896466255187988
    10. ' process' → logprob: -11.896466255187988

Token 601: '_wh' (ID: 86186)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.6943610906600952
    2. '_bit' → logprob: -1.3193610906600952
    3. '_count' → logprob: -2.5693612098693848
    4. '_max' → logprob: -2.8193612098693848
    5. '_unique' → logprob: -4.069361209869385
    6. '_sum' → logprob: -4.444361209869385
    7. '_colors' → logprob: -4.694361209869385
    8. '_total' → logprob: -5.194361209869385
    9. '_node' → logprob: -5.569361209869385
    10. '_nodes' → logprob: -5.569361209869385

Token 602: 'ole' (ID: 1491)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.5215116143226624
    2. 'ole' → logprob: -1.0215115547180176
    3. 'ile' → logprob: -4.146511554718018
    4. 'itespace' → logprob: -4.521511554718018
    5. 'itelist' → logprob: -5.271511554718018
    6. 'at' → logprob: -5.396511554718018
    7. 'ites' → logprob: -6.271511554718018
    8. 'e' → logprob: -6.646511554718018
    9. 'it' → logprob: -6.896511554718018
    10. 'o' → logprob: -7.146511554718018

Token 603: '(N' (ID: 10564)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.2609029710292816
    2. '(tree' → logprob: -1.885903000831604
    3. '_count' → logprob: -3.6359028816223145
    4. '_bit' → logprob: -4.0109028816223145
    5. 'sum' → logprob: -4.1359028816223145
    6. '_range' → logprob: -5.0109028816223145
    7. '_size' → logprob: -5.5109028816223145
    8. '(bit' → logprob: -5.6359028816223145
    9. '_tree' → logprob: -7.6359028816223145
    10. 'bit' → logprob: -7.7609028816223145

Token 604: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01626579463481903
    2. ')' → logprob: -4.766265869140625
    3. '):
' → logprob: -5.141265869140625
    4. ',' → logprob: -6.516265869140625
    5. ' ):' → logprob: -8.266265869140625
    6. ' )' → logprob: -12.141265869140625
    7. '=' → logprob: -12.391265869140625
    8. '):
' → logprob: -12.391265869140625
    9. '+' → logprob: -12.641265869140625
    10. '   ' → logprob: -12.766265869140625

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3080936670303345
    2. 'return' → logprob: -1.5580936670303345
    3. ' return' → logprob: -2.933093547821045
    4. 'def' → logprob: -7.558093547821045
    5. 'N' → logprob: -8.183094024658203
    6. '[' → logprob: -8.683094024658203
    7. ' N' → logprob: -8.933094024658203
    8. ' ' → logprob: -9.433094024658203
    9. '2' → logprob: -10.558094024658203
    10. '[N' → logprob: -10.683094024658203

Token 606: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002607760252431035
    2. 'def' → logprob: -6.627607822418213
    3. ' return' → logprob: -7.752607822418213
    4. 'N' → logprob: -8.377607345581055
    5. '(' → logprob: -8.627607345581055
    6. '   ' → logprob: -9.127607345581055
    7. '[' → logprob: -9.127607345581055
    8. '0' → logprob: -9.127607345581055
    9. 'range' → logprob: -10.502607345581055
    10. '1' → logprob: -11.002607345581055

Token 607: ' N' (ID: 478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4107157289981842
    2. 'N' → logprob: -1.7857156991958618
    3. '(N' → logprob: -1.9107156991958618
    4. '0' → logprob: -4.785715579986572
    5. 'Binary' → logprob: -5.285715579986572
    6. '[' → logprob: -5.910715579986572
    7. '[N' → logprob: -6.160715579986572
    8. '1' → logprob: -7.160715579986572
    9. '(Binary' → logprob: -7.660715579986572
    10. 'range' → logprob: -7.785715579986572

Token 608: '*(' (ID: 14793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026077566668391228
    2. '<|end|>' → logprob: -3.7760775089263916
    3. '#' → logprob: -6.651077747344971
    4. ')' → logprob: -7.151077747344971
    5. '```' → logprob: -7.901077747344971
    6. '<|end|>' → logprob: -8.526077270507812
    7. 'N' → logprob: -9.776077270507812
    8. '[' → logprob: -10.526077270507812
    9. '.' → logprob: -10.776077270507812
    10. 'import' → logprob: -11.026077270507812

Token 609: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.159660890465602e-05
    2. '1' → logprob: -10.25007152557373
    3. ' N' → logprob: -11.00007152557373
    4. '(N' → logprob: -11.25007152557373
    5. '-' → logprob: -12.75007152557373
    6. '2' → logprob: -14.12507152557373
    7. '	N' → logprob: -14.12507152557373
    8. '   ' → logprob: -14.62507152557373
    9. ' ' → logprob: -15.00007152557373
    10. '10' → logprob: -15.37507152557373

Token 610: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14315007627010345
    2. '-' → logprob: -2.0181500911712646
    3. ' -' → logprob: -8.393150329589844
    4. ' +' → logprob: -8.393150329589844
    5. '1' → logprob: -11.268150329589844
    6. ')' → logprob: -13.268150329589844
    7. ' ' → logprob: -13.518150329589844
    8. 'N' → logprob: -14.205650329589844
    9. '```' → logprob: -14.205650329589844
    10. ',' → logprob: -14.330650329589844

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. ' ' → logprob: -11.87502384185791
    3. '```' → logprob: -12.00002384185791
    4. '
' → logprob: -12.12502384185791
    5. '   ' → logprob: -13.50002384185791
    6. '2' → logprob: -14.00002384185791
    7. '...' → logprob: -14.37502384185791
    8. '`' → logprob: -14.37502384185791
    9. '#' → logprob: -15.00002384185791
    10. '``' → logprob: -15.68752384185791

Token 612: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.22091704607009888
    2. '//' → logprob: -1.970916986465454
    3. ')' → logprob: -2.845916986465454
    4. ' //' → logprob: -7.470917224884033
    5. ')>>' → logprob: -8.470916748046875
    6. ' )' → logprob: -10.970916748046875
    7. '```' → logprob: -12.720916748046875
    8. '>>' → logprob: -12.970916748046875
    9. 'def' → logprob: -13.470916748046875
    10. '
' → logprob: -14.220916748046875

Token 613: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -20.5
    3. '```' → logprob: -21.875
    4. '۲' → logprob: -22.25
    5. '202' → logprob: -23.25
    6. '22' → logprob: -23.25
    7. '   ' → logprob: -23.5
    8. '२' → logprob: -23.625
    9. '২' → logprob: -23.75
    10. '２' → logprob: -23.75

Token 614: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39820271730422974
    2. '<|end|>' → logprob: -1.148202657699585
    3. '
' → logprob: -4.648202896118164
    4. '<|end|>' → logprob: -6.898202896118164
    5. '#' → logprob: -8.398202896118164
    6. '```' → logprob: -8.523202896118164
    7. '

' → logprob: -9.898202896118164
    8. '[' → logprob: -10.148202896118164
    9. ')' → logprob: -10.273202896118164
    10. ' def' → logprob: -11.023202896118164

Token 615: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00516497390344739
    2. '<|end|>' → logprob: -6.130165100097656
    3. '#' → logprob: -6.380165100097656
    4. '```' → logprob: -7.130165100097656
    5. 'import' → logprob: -8.505165100097656
    6. ')' → logprob: -9.380165100097656
    7. '<|end|>' → logprob: -9.755165100097656
    8. '.' → logprob: -10.130165100097656
    9. 'from' → logprob: -10.755165100097656
    10. 'if' → logprob: -11.880165100097656

Token 616: ' sort' (ID: 4506)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03927038982510567
    2. 'get' → logprob: -4.289270401000977
    3. 'build' → logprob: -5.289270401000977
    4. ' main' → logprob: -5.289270401000977
    5. 'solve' → logprob: -5.414270401000977
    6. 'count' → logprob: -5.789270401000977
    7. 'process' → logprob: -6.164270401000977
    8. 'read' → logprob: -6.789270401000977
    9. 'def' → logprob: -6.914270401000977
    10. 'calculate' → logprob: -7.289270401000977

Token 617: '_color' (ID: 15576)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.9229580760002136
    2. 'def' → logprob: -1.4229581356048584
    3. '_color' → logprob: -2.5479581356048584
    4. '_keys' → logprob: -3.1729581356048584
    5. '(arr' → logprob: -3.1729581356048584
    6. '_key' → logprob: -3.1729581356048584
    7. '_c' → logprob: -3.5479581356048584
    8. '_nodes' → logprob: -3.9229581356048584
    9. '_by' → logprob: -4.172957897186279
    10. '_' → logprob: -4.422957897186279

Token 618: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.4001876413822174
    2. 's' → logprob: -1.150187611579895
    3. 'ed' → logprob: -6.2751874923706055
    4. '_list' → logprob: -6.2751874923706055
    5. '_indices' → logprob: -6.2751874923706055
    6. '_groups' → logprob: -6.5251874923706055
    7. '_counts' → logprob: -6.6501874923706055
    8. 'ing' → logprob: -7.1501874923706055
    9. '_lists' → logprob: -7.4001874923706055
    10. '_s' → logprob: -7.6501874923706055

Token 619: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -14.750000953674316
    3. '(Cs' → logprob: -15.250000953674316
    4. '(' → logprob: -15.500000953674316
    5. '(c' → logprob: -16.500001907348633
    6. '(sc' → logprob: -16.750001907348633
    7. 'cs' → logprob: -16.875001907348633
    8. '(cm' → logprob: -17.125001907348633
    9. '(css' → logprob: -17.250001907348633
    10. 'def' → logprob: -17.250001907348633

Token 620: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013994028558954597
    2. ',' → logprob: -7.126399517059326
    3. ')' → logprob: -8.126399040222168
    4. '[' → logprob: -8.876399040222168
    5. '):
' → logprob: -8.876399040222168
    6. ' ):' → logprob: -12.626399040222168
    7. '(' → logprob: -12.751399040222168
    8. '(cs' → logprob: -12.876399040222168
    9. ',c' → logprob: -13.001399040222168
    10. '   ' → logprob: -13.626399040222168

Token 621: ' i' (ID: 575)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.9586526155471802
    2. 'lambda' → logprob: -1.9586526155471802
    3. ')' → logprob: -2.2086524963378906
    4. ' key' → logprob: -2.3336524963378906
    5. 'cs' → logprob: -2.5836524963378906
    6. 'reverse' → logprob: -2.7086524963378906
    7. 'N' → logprob: -2.9586524963378906
    8. ' lambda' → logprob: -3.9586524963378906
    9. '):' → logprob: -4.458652496337891
    10. '0' → logprob: -4.708652496337891

Token 622: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23209257423877716
    2. '):
' → logprob: -1.6070926189422607
    3. ')' → logprob: -5.357092380523682
    4. ',' → logprob: -6.482092380523682
    5. '[' → logprob: -9.48209285736084
    6. '):
' → logprob: -9.48209285736084
    7. '   ' → logprob: -10.60709285736084
    8. 'nt' → logprob: -10.60709285736084
    9. '0' → logprob: -10.60709285736084
    10. '+' → logprob: -10.73209285736084

Token 623: ' tin' (ID: 17325)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0906168222427368
    2. 'key' → logprob: -1.7156168222427368
    3. 'cs' → logprob: -2.4656167030334473
    4. 'es' → logprob: -2.9656167030334473
    5. 'tin' → logprob: -3.2156167030334473
    6. ' tin' → logprob: -3.5906167030334473
    7. 'color' → logprob: -3.7156167030334473
    8. ' key' → logprob: -3.8406167030334473
    9. 'k' → logprob: -3.9656167030334473
    10. 'l' → logprob: -3.9656167030334473

Token 624: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03083787113428116
    2. ',' → logprob: -3.9058377742767334
    3. '):
' → logprob: -4.6558380126953125
    4. ')' → logprob: -7.6558380126953125
    5. '[' → logprob: -9.530838012695312
    6. ' ):' → logprob: -9.905838012695312
    7. '):
' → logprob: -10.405838012695312
    8. '   ' → logprob: -10.655838012695312
    9. '[i' → logprob: -11.155838012695312
    10. '):

' → logprob: -11.155838012695312

Token 625: '   ' (ID: 271)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.001302022603340447
    2. '   ' → logprob: -6.751302242279053
    3. ' cs' → logprob: -9.251301765441895
    4. '=' → logprob: -11.251301765441895
    5. '(cs' → logprob: -11.876301765441895
    6. '	cs' → logprob: -12.001301765441895
    7. '_cs' → logprob: -12.376301765441895
    8. '.cs' → logprob: -12.876301765441895
    9. '[' → logprob: -13.876301765441895
    10. ' =' → logprob: -14.751301765441895

Token 626: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' (adapté à ' cs') → logprob: -1.5094070477061905e-05
    2. ' cs' → logprob: -11.625015258789062
    3. '   ' → logprob: -12.125015258789062
    4. 'return' → logprob: -14.625015258789062
    5. 'def' → logprob: -16.375015258789062
    6. '	cs' → logprob: -16.500015258789062
    7. '(cs' → logprob: -17.875015258789062
    8. '
' → logprob: -19.000015258789062
    9. '_cs' → logprob: -19.500015258789062
    10. 'for' → logprob: -20.375015258789062

Token 627: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.6656825866666622e-05
    2. '[' → logprob: -11.12502670288086
    3. ',i' → logprob: -12.37502670288086
    4. '[c' → logprob: -13.12502670288086
    5. 'i' → logprob: -14.00002670288086
    6. ')[' → logprob: -14.12502670288086
    7. '[s' → logprob: -14.25002670288086
    8. '
' → logprob: -14.50002670288086
    9. ',' → logprob: -14.75002670288086
    10. ' [' → logprob: -15.25002670288086

Token 628: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0002019907406065613
    2. '.sort' → logprob: -8.750202178955078
    3. ']' → logprob: -10.625202178955078
    4. ').' → logprob: -11.625202178955078
    5. ']=' → logprob: -12.375202178955078
    6. 'sort' → logprob: -12.500202178955078
    7. ' ].' → logprob: -13.750202178955078
    8. '.' → logprob: -15.125202178955078
    9. ']).' → logprob: -15.625202178955078
    10. '=' → logprob: -15.750202178955078

Token 629: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -2.45848218582978e-06
    2. '.sort' → logprob: -13.25000286102295
    3. ' sort' → logprob: -14.37500286102295
    4. '	sort' → logprob: -18.250001907348633
    5. '.' → logprob: -18.500001907348633
    6. '(sort' → logprob: -18.750001907348633
    7. '   ' → logprob: -20.000001907348633
    8. ' ' → logprob: -20.125001907348633
    9. 'reverse' → logprob: -20.250001907348633
    10. '_sort' → logprob: -20.250001907348633

Token 630: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.02332025021314621
    2. 'key' → logprob: -3.773320198059082
    3. ' key' → logprob: -10.398320198059082
    4. 'def' → logprob: -11.023320198059082
    5. '(reverse' → logprob: -11.273320198059082
    6. '(' → logprob: -12.398320198059082
    7. ',key' → logprob: -12.648320198059082
    8. '(lambda' → logprob: -13.023320198059082
    9. '()' → logprob: -13.273320198059082
    10. '	key' → logprob: -13.898320198059082

Token 631: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.10197671502828598
    2. '=' → logprob: -2.3519766330718994
    3. 'lambda' → logprob: -6.3519768714904785
    4. ' lambda' → logprob: -11.47697639465332
    5. ' =' → logprob: -11.97697639465332
    6. '(lambda' → logprob: -12.35197639465332
    7. '   ' → logprob: -13.22697639465332
    8. '=
' → logprob: -13.47697639465332
    9. '=t' → logprob: -14.97697639465332
    10. '_lambda' → logprob: -15.35197639465332

Token 632: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00140511360950768
    2. ' lambda' → logprob: -7.001405239105225
    3. 'x' → logprob: -8.251404762268066
    4. 'v' → logprob: -8.501404762268066
    5. '=lambda' → logprob: -11.376404762268066
    6. '(lambda' → logprob: -11.876404762268066
    7. '   ' → logprob: -12.251404762268066
    8. 'node' → logprob: -12.251404762268066
    9. ' x' → logprob: -14.626404762268066
    10. ' v' → logprob: -15.751404762268066

Token 633: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036084887688048184
    2. ' :' → logprob: -8.000360488891602
    3. ':t' → logprob: -10.625360488891602
    4. ':
' → logprob: -14.500360488891602
    5. '   ' → logprob: -15.500360488891602
    6. 't' → logprob: -16.1253604888916
    7. '=' → logprob: -16.1253604888916
    8. ':[' → logprob: -17.6253604888916
    9. ':(' → logprob: -17.8753604888916
    10. ':-' → logprob: -18.0003604888916

Token 634: ' -' (ID: 533)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.029794003814458847
    2. ' tin' → logprob: -3.5297939777374268
    3. '   ' → logprob: -11.029793739318848
    4. 't' → logprob: -11.279793739318848
    5. '(t' → logprob: -13.029793739318848
    6. ' ' → logprob: -13.029793739318848
    7. '	t' → logprob: -13.404793739318848
    8. ':' → logprob: -13.654793739318848
    9. ' ' → logprob: -13.904793739318848
    10. 'tan' → logprob: -14.404793739318848

Token 635: 'tin' (ID: 63664)
  Prédit: 'tin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.005292696412652731
    2. ' tin' → logprob: -5.255292892456055
    3. 't' → logprob: -11.130292892456055
    4. '(t' → logprob: -11.505292892456055
    5. '   ' → logprob: -12.380292892456055
    6. 'ti' → logprob: -12.630292892456055
    7. 'tan' → logprob: -12.817792892456055
    8. ' ' → logprob: -12.817792892456055
    9. '	t' → logprob: -13.067792892456055
    10. ' ' → logprob: -13.380292892456055

Token 636: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -8.65707261255011e-06
    2. 'x' → logprob: -11.750008583068848
    3. '[' → logprob: -14.625008583068848
    4. '(x' → logprob: -16.125009536743164
    5. '[
' → logprob: -17.500009536743164
    6. ' [' → logprob: -17.750009536743164
    7. ' x' → logprob: -18.750009536743164
    8. '[i' → logprob: -19.000009536743164
    9. '```' → logprob: -19.000009536743164
    10. '{x' → logprob: -19.500009536743164

Token 637: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0017255148850381374
    2. '[x' → logprob: -6.876725673675537
    3. ')' → logprob: -7.376725673675537
    4. ' ])' → logprob: -10.501725196838379
    5. ')])' → logprob: -11.501725196838379
    6. ']' → logprob: -11.751725196838379
    7. ')]' → logprob: -12.376725196838379
    8. '])
' → logprob: -12.376725196838379
    9. '))' → logprob: -12.501725196838379
    10. '[' → logprob: -12.626725196838379

Token 638: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01451862882822752
    2. ')' → logprob: -4.764518737792969
    3. '<|end|>' → logprob: -5.264518737792969
    4. '```' → logprob: -8.514518737792969
    5. '#' → logprob: -8.764518737792969
    6. '<|end|>' → logprob: -9.514518737792969
    7. 'for' → logprob: -9.764518737792969
    8. '[' → logprob: -9.889518737792969
    9. ']' → logprob: -10.764518737792969
    10. ',' → logprob: -11.139518737792969

Token 639: ' calc' (ID: 25691)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.48576799035072327
    2. 'def' → logprob: -1.6107679605484009
    3. 'process' → logprob: -2.8607680797576904
    4. 'solve' → logprob: -2.9857680797576904
    5. 'build' → logprob: -4.235767841339111
    6. 'sort' → logprob: -4.360767841339111
    7. 'calculate' → logprob: -5.110767841339111
    8. 'count' → logprob: -5.360767841339111
    9. 'calc' → logprob: -5.360767841339111
    10. 'dfs' → logprob: -5.485767841339111

Token 640: '_components' (ID: 55324)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -1.0453777313232422
    2. '_sum' → logprob: -2.295377731323242
    3. '(' → logprob: -2.670377731323242
    4. '_diff' → logprob: -3.045377731323242
    5. '_max' → logprob: -3.170377731323242
    6. '_wh' → logprob: -3.170377731323242
    7. 'def' → logprob: -3.545377731323242
    8. '_total' → logprob: -3.670377731323242
    9. '_dist' → logprob: -3.795377731323242
    10. '(N' → logprob: -3.795377731323242

Token 641: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.00018744789122138172
    2. 'def' → logprob: -9.500187873840332
    3. '(color' → logprob: -10.625187873840332
    4. '(i' → logprob: -11.375187873840332
    5. '_count' → logprob: -11.750187873840332
    6. '(count' → logprob: -11.750187873840332
    7. '(' → logprob: -11.875187873840332
    8. '(N' → logprob: -11.875187873840332
    9. '(n' → logprob: -12.125187873840332
    10. '(cnt' → logprob: -12.250187873840332

Token 642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000592947646509856
    2. ',i' → logprob: -7.500593185424805
    3. ' ,' → logprob: -11.000593185424805
    4. 'def' → logprob: -12.250593185424805
    5. '   ' → logprob: -12.375593185424805
    6. '[i' → logprob: -13.000593185424805
    7. ',n' → logprob: -13.125593185424805
    8. ',s' → logprob: -13.125593185424805
    9. ',c' → logprob: -13.750593185424805
    10. '[' → logprob: -13.875593185424805

Token 643: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38211891055107117
    2. ' i' → logprob: -1.5071189403533936
    3. 'cs' → logprob: -2.7571189403533936
    4. ' cs' → logprob: -4.1321187019348145
    5. ' N' → logprob: -5.7571187019348145
    6. 'N' → logprob: -5.8821187019348145
    7. ' tin' → logprob: -6.6321187019348145
    8. 'tin' → logprob: -7.0071187019348145
    9. 'len' → logprob: -7.0696187019348145
    10. 'color' → logprob: -7.1321187019348145

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001673061487963423
    2. ' ,' → logprob: -9.250166893005371
    3. ',t' → logprob: -9.750166893005371
    4. '   ' → logprob: -11.750166893005371
    5. 'def' → logprob: -13.875166893005371
    6. '):' → logprob: -14.625166893005371
    7. ',
' → logprob: -14.625166893005371
    8. ',s' → logprob: -14.750166893005371
    9. '_,' → logprob: -14.875166893005371
    10. '):
' → logprob: -15.000166893005371

Token 645: ' es' (ID: 878)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.03652951493859291
    2. ' tin' → logprob: -3.411529541015625
    3. 'cs' → logprob: -7.536529541015625
    4. 'es' → logprob: -7.536529541015625
    5. 't' → logprob: -7.661529541015625
    6. 'N' → logprob: -7.786529541015625
    7. 'len' → logprob: -8.599029541015625
    8. ' es' → logprob: -9.599029541015625
    9. ' N' → logprob: -9.599029541015625
    10. 'tan' → logprob: -9.849029541015625

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023007621988654137
    2. '):' → logprob: -4.273007392883301
    3. '):
' → logprob: -4.773007392883301
    4. ')' → logprob: -9.0230073928833
    5. '   ' → logprob: -9.8980073928833
    6. ' ,' → logprob: -9.8980073928833
    7. '):
' → logprob: -10.6480073928833
    8. ',
' → logprob: -10.6480073928833
    9. '[' → logprob: -10.8980073928833
    10. ',s' → logprob: -11.1480073928833

Token 647: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.03232632577419281
    2. ' tin' → logprob: -3.5323262214660645
    3. 'cs' → logprob: -6.6573262214660645
    4. 'sort' → logprob: -8.032326698303223
    5. 'k' → logprob: -8.282326698303223
    6. 'tout' → logprob: -8.907326698303223
    7. 'N' → logprob: -9.032326698303223
    8. 'tree' → logprob: -9.282326698303223
    9. 't' → logprob: -9.657326698303223
    10. ' ' → logprob: -10.657326698303223

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003376980312168598
    2. '):' → logprob: -5.7533769607543945
    3. '):
' → logprob: -9.253376960754395
    4. '   ' → logprob: -10.253376960754395
    5. ' ,' → logprob: -11.003376960754395
    6. ')' → logprob: -11.128376960754395
    7. 'def' → logprob: -11.253376960754395
    8. ',
' → logprob: -12.503376960754395
    9. ',s' → logprob: -12.753376960754395
    10. '[' → logprob: -13.128376960754395

Token 649: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.00041386886732652783
    2. ' tout' → logprob: -7.87541389465332
    3. 'cs' → logprob: -11.12541389465332
    4. 't' → logprob: -11.12541389465332
    5. 'Tout' → logprob: -14.00041389465332
    6. '```' → logprob: -14.62541389465332
    7. 'todo' → logprob: -14.87541389465332
    8. '   ' → logprob: -15.25041389465332
    9. 'tou' → logprob: -15.25041389465332
    10. 'tot' → logprob: -15.37541389465332

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052060242742300034
    2. '):' → logprob: -3.302060127258301
    3. '):
' → logprob: -4.302060127258301
    4. '   ' → logprob: -8.4270601272583
    5. '):
' → logprob: -9.3020601272583
    6. ')' → logprob: -10.8020601272583
    7. 'def' → logprob: -10.9270601272583
    8. ',
' → logprob: -11.6770601272583
    9. ' ,' → logprob: -12.3020601272583
    10. '):

' → logprob: -12.5520601272583

Token 651: ' bit' (ID: 3546)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5312135815620422
    2. 'i' → logprob: -2.0312135219573975
    3. 'tree' → logprob: -2.6562135219573975
    4. 'N' → logprob: -3.0312135219573975
    5. ' k' → logprob: -3.4062135219573975
    6. 'cs' → logprob: -3.5312135219573975
    7. 'bit' → logprob: -4.031213760375977
    8. ')' → logprob: -4.406213760375977
    9. 'sort' → logprob: -4.406213760375977
    10. 'Binary' → logprob: -4.656213760375977

Token 652: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48576703667640686
    2. ',' → logprob: -1.4857670068740845
    3. '):' → logprob: -1.8607670068740845
    4. '   ' → logprob: -6.485766887664795
    5. '):
' → logprob: -6.735766887664795
    6. ')' → logprob: -9.360767364501953
    7. '):

' → logprob: -10.235767364501953
    8. 'def' → logprob: -11.235767364501953
    9. ' ' → logprob: -11.735767364501953
    10. '  ' → logprob: -12.485767364501953

Token 653: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1596721112728119
    2. ' N' → logprob: -2.4096720218658447
    3. 'k' → logprob: -3.4096720218658447
    4. 'i' → logprob: -4.409672260284424
    5. 'n' → logprob: -5.659672260284424
    6. ')' → logprob: -5.909672260284424
    7. ' k' → logprob: -6.409672260284424
    8. 'p' → logprob: -7.034672260284424
    9. 'cs' → logprob: -7.284672260284424
    10. ' i' → logprob: -7.534672260284424

Token 654: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18976695835590363
    2. '):
' → logprob: -1.9397670030593872
    3. ',' → logprob: -3.5647668838500977
    4. '):
' → logprob: -7.564766883850098
    5. '   ' → logprob: -8.439766883850098
    6. ')' → logprob: -10.439766883850098
    7. 'def' → logprob: -10.689766883850098
    8. ':' → logprob: -11.689766883850098
    9. '):

' → logprob: -12.314766883850098
    10. ' ):' → logprob: -13.314766883850098

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25059786438941956
    2. 'nodes' → logprob: -2.2505979537963867
    3. 'res' → logprob: -3.7505979537963867
    4. 'ans' → logprob: -3.7505979537963867
    5. 'comp' → logprob: -4.375597953796387
    6. 'arr' → logprob: -4.625597953796387
    7. 'cs' → logprob: -5.000597953796387
    8. 'color' → logprob: -5.500597953796387
    9. 'idx' → logprob: -5.750597953796387
    10. 'prev' → logprob: -5.750597953796387

Token 656: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0110042095184326
    2. 'cs' → logprob: -2.1360042095184326
    3. 'nodes' → logprob: -2.2610042095184326
    4. 'ans' (adapté à ' ans') → logprob: -2.6360042095184326
    5. 'comp' → logprob: -3.1360042095184326
    6. 'ret' → logprob: -3.6360042095184326
    7. 'prev' → logprob: -3.7610042095184326
    8. 'arr' → logprob: -3.7610042095184326
    9. 'idx' → logprob: -3.8860042095184326
    10. 'color' → logprob: -3.8860042095184326

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741455614566803
    2. '=' → logprob: -0.9741455316543579
    3. ',' → logprob: -9.974145889282227
    4. ' ' → logprob: -11.224145889282227
    5. '   ' → logprob: -12.349145889282227
    6. '_' → logprob: -13.724145889282227
    7. '_=' → logprob: -14.099145889282227
    8. '  ' → logprob: -14.474145889282227
    9. '＝' → logprob: -15.099145889282227
    10. ' +=' → logprob: -15.224145889282227

Token 658: ' get' (ID: 717)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034861352294683456
    2. 'get' → logprob: -4.1598615646362305
    3. '1' → logprob: -4.4098615646362305
    4. ' ' → logprob: -5.7848615646362305
    5. 'len' → logprob: -6.1598615646362305
    6. 'cs' → logprob: -7.4098615646362305
    7. ' get' → logprob: -8.65986156463623
    8. 'N' → logprob: -8.90986156463623
    9. '-' → logprob: -9.53486156463623
    10. ' len' → logprob: -9.78486156463623

Token 659: '_wh' (ID: 86186)
  Prédit: '_wh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wh' → logprob: -2.5822400857578032e-05
    2. 'whole' → logprob: -10.625025749206543
    3. 'len' → logprob: -14.250025749206543
    4. '_components' → logprob: -15.375025749206543
    5. 'components' → logprob: -16.75002670288086
    6. 'wh' → logprob: -16.75002670288086
    7. '(' → logprob: -16.87502670288086
    8. 'size' → logprob: -16.87502670288086
    9. '(N' → logprob: -17.00002670288086
    10. ' ' → logprob: -17.00002670288086

Token 660: 'ole' (ID: 1491)
  Prédit: 'ole'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ole' → logprob: -3.531315314830863e-06
    2. 'olle' → logprob: -14.250003814697266
    3. '```' → logprob: -14.750003814697266
    4. '   ' → logprob: -15.250003814697266
    5. 'ile' → logprob: -15.250003814697266
    6. 'oles' → logprob: -15.375003814697266
    7. 'ale' → logprob: -15.500003814697266
    8. 'hole' → logprob: -15.500003814697266
    9. '#' → logprob: -15.625003814697266
    10. '[' → logprob: -15.625003814697266

Token 661: '(N' (ID: 10564)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.18152135610580444
    2. '(N' → logprob: -1.8065214157104492
    3. 'len' → logprob: -6.556521415710449
    4. '(' → logprob: -9.18152141571045
    5. '[len' → logprob: -9.30652141571045
    6. '(cs' → logprob: -9.68152141571045
    7. '()' → logprob: -11.68152141571045
    8. 'N' → logprob: -11.68152141571045
    9. '[N' → logprob: -11.68152141571045
    10. '=len' → logprob: -11.68152141571045

Token 662: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02671138383448124
    2. ')
' → logprob: -3.6517114639282227
    3. '   ' → logprob: -8.151711463928223
    4. ' )' → logprob: -10.151711463928223
    5. ')-' → logprob: -10.276711463928223
    6. ')
' → logprob: -11.526711463928223
    7. '()' → logprob: -11.901711463928223
    8. ' ' → logprob: -12.026711463928223
    9. '())' → logprob: -12.151711463928223
    10. ')

' → logprob: -12.651711463928223

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031326785683631897
    2. 'prev' → logprob: -6.8781328201293945
    3. ' prev' → logprob: -8.003132820129395
    4. 'last' → logprob: -8.128132820129395
    5. ' last' → logprob: -8.253132820129395
    6. 'count' → logprob: -9.253132820129395
    7. 'current' → logprob: -9.378132820129395
    8. '
' → logprob: -9.378132820129395
    9. '    
' → logprob: -9.503132820129395
    10. ' for' → logprob: -9.753132820129395

Token 664: ' sort' (ID: 4506)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.8082630038261414
    2. 'last' → logprob: -1.9332630634307861
    3. 'for' → logprob: -2.558263063430786
    4. 'stack' → logprob: -3.183263063430786
    5. 'nodes' → logprob: -3.308263063430786
    6. 'cs' → logprob: -3.558263063430786
    7. 'color' → logprob: -3.933263063430786
    8. 'lst' → logprob: -4.058262825012207
    9. 'stk' → logprob: -4.558262825012207
    10. 'p' → logprob: -4.558262825012207

Token 665: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -7.226628895296017e-06
    2. 'color' → logprob: -11.875007629394531
    3. '```' → logprob: -15.875007629394531
    4. '_COLOR' → logprob: -17.25000762939453
    5. 'Color' → logprob: -17.50000762939453
    6. '_colors' → logprob: -18.00000762939453
    7. 'cs' → logprob: -18.12500762939453
    8. 'olor' → logprob: -18.37500762939453
    9. '_colour' → logprob: -19.00000762939453
    10. '_c' → logprob: -19.12500762939453

Token 666: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.002991609275341034
    2. 'nodes' → logprob: -5.877991676330566
    3. 'cs' → logprob: -8.627991676330566
    4. 'Nodes' → logprob: -13.002991676330566
    5. '(nodes' → logprob: -13.002991676330566
    6. 's' → logprob: -13.877991676330566
    7. '(cs' → logprob: -14.502991676330566
    8. '_cs' → logprob: -14.627991676330566
    9. '```' → logprob: -14.627991676330566
    10. ' nodes' → logprob: -15.377991676330566

Token 667: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -3.7697225252486533e-06
    2. 'cs' → logprob: -12.625003814697266
    3. '.cs' → logprob: -15.875003814697266
    4. '	cs' → logprob: -16.000003814697266
    5. '```' → logprob: -16.125003814697266
    6. '(Cs' → logprob: -17.750003814697266
    7. '_cs' → logprob: -18.250003814697266
    8. ' cs' → logprob: -18.500003814697266
    9. '(
' → logprob: -18.750003814697266
    10. ' (' → logprob: -19.125003814697266

Token 668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20189030468463898
    2. '(cs' → logprob: -1.7018903493881226
    3. 'cs' → logprob: -8.201889991760254
    4. ',c' → logprob: -9.326889991760254
    5. ',i' → logprob: -9.701889991760254
    6. ' ,' → logprob: -10.826889991760254
    7. '	cs' → logprob: -12.076889991760254
    8. '.cs' → logprob: -12.326889991760254
    9. ')' → logprob: -12.451889991760254
    10. ' cs' → logprob: -12.701889991760254

Token 669: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000553151941858232
    2. ' i' → logprob: -7.500553131103516
    3. ')i' → logprob: -16.000553131103516
    4. ')' → logprob: -17.500553131103516
    5. 'cs' → logprob: -17.875553131103516
    6. '   ' → logprob: -18.500553131103516
    7. '_i' → logprob: -18.750553131103516
    8. '(i' → logprob: -18.875553131103516
    9. ',i' → logprob: -18.875553131103516
    10. '	i' → logprob: -19.000553131103516

Token 670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005200279993005097
    2. ')' → logprob: -8.125519752502441
    3. '   ' → logprob: -8.750519752502441
    4. ' ,' → logprob: -10.750519752502441
    5. ',t' → logprob: -10.875519752502441
    6. 'def' → logprob: -11.750519752502441
    7. ',
' → logprob: -12.250519752502441
    8. ')
' → logprob: -12.875519752502441
    9. '  ' → logprob: -13.750519752502441
    10. ',n' → logprob: -14.125519752502441

Token 671: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0021914218086749315
    2. ' tin' → logprob: -6.127191543579102
    3. 't' → logprob: -12.252191543579102
    4. '   ' → logprob: -15.002191543579102
    5. '
' → logprob: -15.252191543579102
    6. 'ti' → logprob: -15.252191543579102
    7. ' ' → logprob: -15.627191543579102
    8. '	t' → logprob: -16.1271915435791
    9. 'ton' → logprob: -16.6271915435791
    10. 'tan' → logprob: -16.8771915435791

Token 672: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3717867136001587
    2. ')' → logprob: -1.7467867136001587
    3. '   ' → logprob: -1.9967867136001587
    4. '
' → logprob: -9.121787071228027
    5. ')
' → logprob: -9.246787071228027
    6. ',' → logprob: -9.246787071228027
    7. 'def' → logprob: -9.996787071228027
    8. ')

' → logprob: -10.996787071228027
    9. '):
' → logprob: -12.371787071228027
    10. ')\' → logprob: -12.496787071228027

Token 673: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011233263649046421
    2. 'prev' → logprob: -4.886233329772949
    3. 'last' → logprob: -7.136233329772949
    4. ' prev' → logprob: -7.761233329772949
    5. 'p' → logprob: -8.26123332977295
    6. 'for' → logprob: -8.63623332977295
    7. ' for' → logprob: -8.63623332977295
    8. 'current' → logprob: -8.63623332977295
    9. 'stack' → logprob: -8.63623332977295
    10. ' last' → logprob: -8.88623332977295

Token 674: ' history' (ID: 5678)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.2054119110107422
    2. 'last' → logprob: -2.205411911010742
    3. '   ' → logprob: -2.455411911010742
    4. 'stack' → logprob: -2.455411911010742
    5. 'for' → logprob: -2.955411911010742
    6. 'p' → logprob: -3.330411911010742
    7. 'stk' → logprob: -3.330411911010742
    8. 'st' → logprob: -3.705411911010742
    9. 'pre' → logprob: -3.705411911010742
    10. 'q' → logprob: -3.955411911010742

Token 675: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6334121823310852
    2. ' =' → logprob: -0.7584121823310852
    3. '=[]' → logprob: -7.5084123611450195
    4. ',' → logprob: -8.75841236114502
    5. '.append' → logprob: -10.00841236114502
    6. '=[]
' → logprob: -10.50841236114502
    7. '   ' → logprob: -11.63341236114502
    8. '.' → logprob: -12.50841236114502
    9. ')' → logprob: -12.50841236114502
    10. 's' → logprob: -13.13341236114502

Token 676: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.470901229884475e-05
    2. '[' → logprob: -9.62508487701416
    3. '[-' → logprob: -11.87508487701416
    4. '[]
' → logprob: -12.25008487701416
    5. '{}' → logprob: -12.50008487701416
    6. '0' → logprob: -13.37508487701416
    7. ' []' → logprob: -14.62508487701416
    8. '[]}' → logprob: -14.87508487701416
    9. '[(' → logprob: -15.25008487701416
    10. 'set' → logprob: -15.37508487701416

Token 677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44279223680496216
    2. ' for' → logprob: -1.1927921772003174
    3. 'for' → logprob: -3.4427921772003174
    4. 'k' → logprob: -4.9427924156188965
    5. 'prev' → logprob: -5.1927924156188965
    6. ' k' → logprob: -5.5677924156188965
    7. '```' → logprob: -6.6927924156188965
    8. ' prev' → logprob: -6.6927924156188965
    9. 'bit' → logprob: -7.4427924156188965
    10. ' last' → logprob: -7.5677924156188965

Token 678: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019266135059297085
    2. 'def' → logprob: -7.251926422119141
    3. 'prev' → logprob: -7.626926422119141
    4. '   ' → logprob: -8.50192642211914
    5. 'last' → logprob: -9.00192642211914
    6. 'stack' → logprob: -9.62692642211914
    7. 'from' → logprob: -9.62692642211914
    8. 'bit' → logprob: -10.37692642211914
    9. 'used' → logprob: -10.62692642211914
    10. 'import' → logprob: -11.00192642211914

Token 679: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.21132700145244598
    2. 'u' → logprob: -2.586327075958252
    3. 'x' → logprob: -2.836327075958252
    4. 'node' → logprob: -4.461327075958252
    5. 'idx' → logprob: -4.586327075958252
    6. 'j' → logprob: -4.836327075958252
    7. 'cur' → logprob: -5.586327075958252
    8. 'now' → logprob: -5.711327075958252
    9. ' v' → logprob: -6.086327075958252
    10. 'a' → logprob: -6.336327075958252

Token 680: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.633988618850708
    2. 'in' → logprob: -0.758988618850708
    3. ',' → logprob: -6.758988380432129
    4. '   ' → logprob: -9.008988380432129
    5. ' ' → logprob: -10.383988380432129
    6. '  ' → logprob: -11.758988380432129
    7. 'def' → logprob: -11.883988380432129
    8. 'v' → logprob: -11.946488380432129
    9. ')' → logprob: -12.133988380432129
    10. '    ' → logprob: -12.383988380432129

Token 681: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.0021962907630950212
    2. ' cs' → logprob: -6.127196311950684
    3. 'range' → logprob: -12.627196311950684
    4. '(cs' → logprob: -12.877196311950684
    5. '   ' → logprob: -13.377196311950684
    6. ' ' → logprob: -13.752196311950684
    7. '[' → logprob: -14.502196311950684
    8. 'c' → logprob: -14.627196311950684
    9. '	cs' → logprob: -14.627196311950684
    10. 'history' → logprob: -15.377196311950684

Token 682: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -13.250008583068848
    3. '   ' → logprob: -13.250008583068848
    4. '[I' → logprob: -13.750008583068848
    5. ' [' → logprob: -14.250008583068848
    6. ',i' → logprob: -14.250008583068848
    7. '[
' → logprob: -14.500008583068848
    8. ',' → logprob: -14.625008583068848
    9. '```' → logprob: -14.625008583068848
    10. '[v' → logprob: -14.875008583068848

Token 683: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.38820645213127136
    2. ']:
' → logprob: -1.1382064819335938
    3. ':' → logprob: -7.138206481933594
    4. ']:
' → logprob: -7.763206481933594
    5. ']' → logprob: -10.013206481933594
    6. ']:

' → logprob: -11.013206481933594
    7. ':
' → logprob: -11.138206481933594
    8. '):
' → logprob: -11.513206481933594
    9. '   ' → logprob: -11.763206481933594
    10. '       ' → logprob: -11.888206481933594

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007805946283042431
    2. ' if' → logprob: -6.007805824279785
    3. 'if' → logprob: -6.507805824279785
    4. '   ' → logprob: -7.257805824279785
    5. 'l' → logprob: -7.382805824279785
    6. '```' → logprob: -7.882805824279785
    7. ' l' → logprob: -8.007805824279785
    8. ' for' → logprob: -8.007805824279785
    9. 'for' → logprob: -8.757805824279785
    10. 'count' → logprob: -9.007805824279785

Token 685: ' cnt' (ID: 27340)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.506568193435669
    2. 'for' → logprob: -1.131568193435669
    3. 'if' → logprob: -4.38156795501709
    4. '   ' → logprob: -4.63156795501709
    5. 'ans' → logprob: -5.00656795501709
    6. 'count' → logprob: -5.13156795501709
    7. '       ' → logprob: -5.25656795501709
    8. 'cnt' (adapté à ' cnt') → logprob: -5.25656795501709
    9. 'history' → logprob: -5.38156795501709
    10. 'l' → logprob: -5.88156795501709

Token 686: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04895680397748947
    2. '=' → logprob: -3.048956871032715
    3. '=len' → logprob: -9.548956871032715
    4. '=query' → logprob: -10.173956871032715
    5. '_before' → logprob: -10.673956871032715
    6. '=sub' → logprob: -11.048956871032715
    7. '=int' → logprob: -11.298956871032715
    8. ',' → logprob: -11.423956871032715
    9. '=sum' → logprob: -11.423956871032715
    10. '   ' → logprob: -11.548956871032715

Token 687: ' h' (ID: 312)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -2.4687018394470215
    2. 'idx' → logprob: -2.4687018394470215
    3. 'neighbors' → logprob: -2.5937018394470215
    4. 'pos' → logprob: -3.3437018394470215
    5. 'stack' → logprob: -3.4687018394470215
    6. '   ' → logprob: -3.4687018394470215
    7. 'l' → logprob: -3.4687018394470215
    8. 'adj' → logprob: -3.5937018394470215
    9. 'last' → logprob: -3.7187018394470215
    10. 'prev' → logprob: -3.7187018394470215

Token 688: 'list' (ID: 2641)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.902458906173706
    2. 'istory' → logprob: -1.902458906173706
    3. '=' → logprob: -2.027458906173706
    4. 'ist' → logprob: -2.527458906173706
    5. 'ere' → logprob: -2.777458906173706
    6. 'it' → logprob: -2.902458906173706
    7. 'ow' → logprob: -4.027459144592285
    8. 'ash' → logprob: -4.527459144592285
    9. ',' → logprob: -4.652459144592285
    10. '   ' → logprob: -4.777459144592285

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20153750479221344
    2. ' =' → logprob: -1.7015374898910522
    3. ',' → logprob: -9.701537132263184
    4. '=[]' → logprob: -10.826537132263184
    5. '=get' → logprob: -12.576537132263184
    6. '=len' → logprob: -12.701537132263184
    7. '=None' → logprob: -12.701537132263184
    8. 's' → logprob: -13.076537132263184
    9. '=create' → logprob: -13.076537132263184
    10. '   ' → logprob: -13.451537132263184

Token 690: ' process' (ID: 2273)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.6702232360839844
    2. 'dfs' → logprob: -1.6702232360839844
    3. 'count' → logprob: -2.5452232360839844
    4. 'get' → logprob: -3.2952232360839844
    5. 'process' → logprob: -3.7952232360839844
    6. 'check' → logprob: -3.7952232360839844
    7. 'remove' → logprob: -4.170223236083984
    8. 'add' → logprob: -4.420223236083984
    9. 'cut' → logprob: -4.545223236083984
    10. '0' → logprob: -4.545223236083984

Token 691: '_vertex' (ID: 65291)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0648641288280487
    2. '(es' → logprob: -3.314864158630371
    3. '_vertex' → logprob: -4.189864158630371
    4. '_node' → logprob: -4.939864158630371
    5. '_component' → logprob: -6.189864158630371
    6. '_components' → logprob: -8.314864158630371
    7. '(' → logprob: -8.314864158630371
    8. 'node' → logprob: -8.314864158630371
    9. 'es' → logprob: -8.439864158630371
    10. 'vertex' → logprob: -8.564864158630371

Token 692: '_components' (ID: 55324)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.4741631746292114
    2. '(es' → logprob: -0.9741631746292114
    3. '(' → logprob: -10.224163055419922
    4. ' (' → logprob: -11.099163055419922
    5. '(ans' → logprob: -12.099163055419922
    6. '(bit' → logprob: -12.349163055419922
    7. 'es' → logprob: -12.474163055419922
    8. '(ed' → logprob: -12.599163055419922
    9. '(vis' → logprob: -12.724163055419922
    10. '(e' → logprob: -13.224163055419922

Token 693: '(v' (ID: 6932)
  Prédit: '(es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.10033401101827621
    2. '(v' → logprob: -2.3503339290618896
    3. '(' → logprob: -9.850334167480469
    4. '(bit' → logprob: -10.725334167480469
    5. '(ans' → logprob: -10.725334167480469
    6. ' (' → logprob: -11.225334167480469
    7. '(cs' → logprob: -12.975334167480469
    8. '(vis' → logprob: -12.975334167480469
    9. '(ed' → logprob: -12.975334167480469
    10. '(e' → logprob: -13.100334167480469

Token 694: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003192578151356429
    2. ' ,' → logprob: -8.125319480895996
    3. '   ' → logprob: -11.625319480895996
    4. ')' → logprob: -13.000319480895996
    5. '       ' → logprob: -13.250319480895996
    6. ' es' → logprob: -13.375319480895996
    7. 'es' → logprob: -14.000319480895996
    8. ',v' → logprob: -14.000319480895996
    9. '[' → logprob: -14.125319480895996
    10. '(' → logprob: -14.250319480895996

Token 695: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.12179538607597351
    2. 'v' → logprob: -3.621795415878296
    3. 'ans' → logprob: -3.746795415878296
    4. 'cs' → logprob: -4.121795177459717
    5. 'i' → logprob: -4.371795177459717
    6. 'bit' → logprob: -4.746795177459717
    7. 'tin' → logprob: -4.746795177459717
    8. ' es' → logprob: -5.121795177459717
    9. 'history' → logprob: -5.246795177459717
    10. 'tout' → logprob: -6.246795177459717

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002646735229063779
    2. ',t' → logprob: -8.750265121459961
    3. '[' → logprob: -10.375265121459961
    4. '[t' → logprob: -10.750265121459961
    5. ' ,' → logprob: -11.500265121459961
    6. 't' → logprob: -11.500265121459961
    7. ')' → logprob: -11.625265121459961
    8. '   ' → logprob: -12.125265121459961
    9. 's' → logprob: -12.875265121459961
    10. ',v' → logprob: -13.000265121459961

Token 697: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.06261621415615082
    2. ' tin' → logprob: -3.0626161098480225
    3. 'bit' → logprob: -4.937616348266602
    4. 'cs' → logprob: -5.437616348266602
    5. 'history' → logprob: -7.062616348266602
    6. 'tout' → logprob: -7.312616348266602
    7. ' bit' → logprob: -8.937616348266602
    8. '   ' → logprob: -9.062616348266602
    9. 'v' → logprob: -9.312616348266602
    10. ' history' → logprob: -9.312616348266602

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006883674650453031
    2. ',h' → logprob: -7.500688552856445
    3. ',t' → logprob: -10.125688552856445
    4. ' ,' → logprob: -10.375688552856445
    5. 'history' → logprob: -11.625688552856445
    6. '   ' → logprob: -11.625688552856445
    7. '[' → logprob: -11.750688552856445
    8. '       ' → logprob: -11.875688552856445
    9. ')' → logprob: -12.375688552856445
    10. 't' → logprob: -12.625688552856445

Token 699: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.0017666933126747608
    2. 'bit' → logprob: -7.626766681671143
    3. 'history' → logprob: -7.751766681671143
    4. 'cs' → logprob: -8.3767671585083
    5. ' tout' → logprob: -8.3767671585083
    6. 't' → logprob: -8.7517671585083
    7. 'v' → logprob: -10.0017671585083
    8. 'tin' → logprob: -10.2517671585083
    9. '
' → logprob: -10.3767671585083
    10. '   ' → logprob: -10.6267671585083

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005990233621560037
    2. ')' → logprob: -8.125598907470703
    3. '       ' → logprob: -9.375598907470703
    4. ' ,' → logprob: -9.500598907470703
    5. ')
' → logprob: -9.750598907470703
    6. '),' → logprob: -10.625598907470703
    7. '   ' → logprob: -10.875598907470703
    8. '[' → logprob: -11.250598907470703
    9. ',
' → logprob: -11.750598907470703
    10. ',h' → logprob: -12.250598907470703

Token 701: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.03656744211912155
    2. 'history' → logprob: -3.536567449569702
    3. ' bit' → logprob: -5.536567211151123
    4. 'cs' → logprob: -6.411567211151123
    5. ' history' → logprob: -7.286567211151123
    6. '   ' → logprob: -8.786567687988281
    7. ' cs' → logprob: -9.036567687988281
    8. 'hist' → logprob: -9.661567687988281
    9. 'i' → logprob: -10.036567687988281
    10. 'v' → logprob: -10.411567687988281

Token 702: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4611615836620331
    2. ')
' → logprob: -1.2111616134643555
    3. ')' → logprob: -2.7111616134643555
    4. '       ' → logprob: -5.3361616134643555
    5. '   ' → logprob: -9.086161613464355
    6. ' ,' → logprob: -10.336161613464355
    7. ')

' → logprob: -10.586161613464355
    8. '      ' → logprob: -10.711161613464355
    9. ')
' → logprob: -10.836161613464355
    10. ',)
' → logprob: -10.961161613464355

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003184233792126179
    2. ',' → logprob: -9.00031852722168
    3. '<|end|>' → logprob: -9.37531852722168
    4. '
' → logprob: -9.75031852722168
    5. '```' → logprob: -11.37531852722168
    6. '<|end|>' → logprob: -12.25031852722168
    7. '(history' → logprob: -12.37531852722168
    8. '   ' → logprob: -12.50031852722168
    9. '[' → logprob: -12.75031852722168
    10. '           ' → logprob: -12.87531852722168

Token 704: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.38934242725372314
    2. 'history' → logprob: -1.2643424272537231
    3. ' ans' → logprob: -4.514342308044434
    4. ' history' → logprob: -4.639342308044434
    5. '       ' → logprob: -4.889342308044434
    6. 'if' → logprob: -5.389342308044434
    7. '   ' → logprob: -5.514342308044434
    8. 'for' → logprob: -6.264342308044434
    9. 'answer' → logprob: -7.264342308044434
    10. ' if' → logprob: -8.514342308044434

Token 705: ',' (ID: 11)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.08013555407524109
    2. '-=' → logprob: -2.5801355838775635
    3. '+=' → logprob: -7.580135345458984
    4. '-' → logprob: -8.080135345458984
    5. ' +=' → logprob: -8.080135345458984
    6. '   ' → logprob: -10.580135345458984
    7. ' -' → logprob: -10.705135345458984
    8. '=' → logprob: -10.705135345458984
    9. ',' → logprob: -10.955135345458984
    10. ' ^=' → logprob: -11.705135345458984

Token 706: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.1275869607925415
    2. ' history' → logprob: -2.127586841583252
    3. '_history' → logprob: -8.25258731842041
    4. '=' → logprob: -8.62758731842041
    5. ' =' → logprob: -9.75258731842041
    6. '(history' → logprob: -10.25258731842041
    7. 'h' → logprob: -10.50258731842041
    8. '
' → logprob: -10.87758731842041
    9. '.history' → logprob: -11.12758731842041
    10. '   ' → logprob: -11.25258731842041

Token 707: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.9548316597938538
    2. ' +=' → logprob: -1.704831600189209
    3. '=' → logprob: -1.829831600189209
    4. ' =' → logprob: -2.079831600189209
    5. '+=' → logprob: -2.329831600189209
    6. '-=' → logprob: -3.079831600189209
    7. ',' → logprob: -5.704831600189209
    8. '-' → logprob: -7.204831600189209
    9. '[' → logprob: -8.204832077026367
    10. ' ^=' → logprob: -9.579832077026367

Token 708: ' subtract' (ID: 71973)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2500576078891754
    2. 'ans' → logprob: -1.875057578086853
    3. '(cnt' → logprob: -3.3750576972961426
    4. '(ans' → logprob: -3.8750576972961426
    5. ' cnt' → logprob: -5.625057697296143
    6. 'combine' → logprob: -6.000057697296143
    7. 'min' → logprob: -6.375057697296143
    8. 'merge' → logprob: -6.500057697296143
    9. ' ans' → logprob: -7.000057697296143
    10. 'update' → logprob: -7.250057697296143

Token 709: '_components' (ID: 55324)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.01220716442912817
    2. '(cnt' → logprob: -4.63720703125
    3. '(' → logprob: -6.76220703125
    4. 'ans' → logprob: -7.51220703125
    5. 'cnt' → logprob: -8.38720703125
    6. '_components' → logprob: -8.88720703125
    7. '(count' → logprob: -9.76220703125
    8. '_history' → logprob: -10.01220703125
    9. '_ans' → logprob: -10.38720703125
    10. '(
' → logprob: -10.51220703125

Token 710: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00027063372544944286
    2. '(cnt' → logprob: -8.37527084350586
    3. '(' → logprob: -11.25027084350586
    4. 'ans' → logprob: -11.62527084350586
    5. ' (' → logprob: -12.50027084350586
    6. '((' → logprob: -12.75027084350586
    7. '(
' → logprob: -13.50027084350586
    8. '(v' → logprob: -13.75027084350586
    9. '(answer' → logprob: -13.87527084350586
    10. '   ' → logprob: -14.37527084350586

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.719917630311102e-05
    2. ' ,' → logprob: -10.500077247619629
    3. ',h' → logprob: -10.750077247619629
    4. 'history' → logprob: -11.500077247619629
    5. '(history' → logprob: -11.625077247619629
    6. ',
' → logprob: -12.375077247619629
    7. '   ' → logprob: -14.000077247619629
    8. '_history' → logprob: -14.875077247619629
    9. '_,' → logprob: -14.875077247619629
    10. ' history' → logprob: -15.000077247619629

Token 712: ' v' (ID: 323)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.005157977342605591
    2. ' cnt' → logprob: -5.380157947540283
    3. 'history' → logprob: -7.755157947540283
    4. '
' → logprob: -10.755158424377441
    5. '(cnt' → logprob: -11.005158424377441
    6. '[cnt' → logprob: -11.005158424377441
    7. 'bit' → logprob: -11.380158424377441
    8. ' history' → logprob: -11.755158424377441
    9. '   ' → logprob: -11.755158424377441
    10. '
' → logprob: -12.380158424377441

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005983081646263599
    2. '   ' → logprob: -8.500597953796387
    3. ' ,' → logprob: -8.625597953796387
    4. '),' → logprob: -9.875597953796387
    5. 'history' → logprob: -9.875597953796387
    6. ',h' → logprob: -10.875597953796387
    7. '       ' → logprob: -11.000597953796387
    8. '_history' → logprob: -11.375597953796387
    9. ')' → logprob: -11.625597953796387
    10. '(history' → logprob: -11.750597953796387

Token 714: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.08564198762178421
    2. 'history' → logprob: -2.960642099380493
    3. 'cs' → logprob: -4.460641860961914
    4. 'h' → logprob: -4.835641860961914
    5. ' cnt' → logprob: -4.835641860961914
    6. 'bit' → logprob: -6.585641860961914
    7. ' history' → logprob: -7.585641860961914
    8. 'count' → logprob: -8.835641860961914
    9. 'i' → logprob: -9.210641860961914
    10. '   ' → logprob: -9.335641860961914

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003712085890583694
    2. '   ' → logprob: -8.750370979309082
    3. ' ,' → logprob: -9.125370979309082
    4. '       ' → logprob: -10.375370979309082
    5. '+' → logprob: -10.625370979309082
    6. 'history' → logprob: -11.625370979309082
    7. ',h' → logprob: -11.875370979309082
    8. ',
' → logprob: -12.125370979309082
    9. '-' → logprob: -12.375370979309082
    10. '),' → logprob: -12.500370979309082

Token 716: ' es' (ID: 878)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.011566448956727982
    2. ' history' → logprob: -4.636566638946533
    3. 'h' → logprob: -6.636566638946533
    4. 'cs' → logprob: -7.886566638946533
    5. ' cs' → logprob: -10.261566162109375
    6. 'bit' → logprob: -10.886566162109375
    7. '   ' → logprob: -11.136566162109375
    8. ' h' → logprob: -11.511566162109375
    9. 'es' → logprob: -12.011566162109375
    10. ' ' → logprob: -12.261566162109375

Token 717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008538239635527134
    2. '       ' → logprob: -8.000853538513184
    3. '[i' → logprob: -8.250853538513184
    4. '   ' → logprob: -9.375853538513184
    5. '),' → logprob: -10.375853538513184
    6. ' ,' → logprob: -10.375853538513184
    7. '[' → logprob: -10.375853538513184
    8. ')' → logprob: -10.875853538513184
    9. ',
' → logprob: -11.500853538513184
    10. ',i' → logprob: -12.000853538513184

Token 718: ' tin' (ID: 17325)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.11150006949901581
    2. ' history' → logprob: -2.9865000247955322
    3. 'tin' → logprob: -4.236500263214111
    4. 'cs' → logprob: -4.736500263214111
    5. 'i' → logprob: -4.861500263214111
    6. 'bit' → logprob: -4.861500263214111
    7. ' tin' → logprob: -5.111500263214111
    8. 'h' → logprob: -5.111500263214111
    9. ' cs' → logprob: -6.736500263214111
    10. ' i' → logprob: -7.361500263214111

Token 719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025919382460415363
    2. '   ' → logprob: -9.375259399414062
    3. ' ,' → logprob: -9.375259399414062
    4. ',h' → logprob: -11.250259399414062
    5. ')' → logprob: -11.375259399414062
    6. '       ' → logprob: -11.375259399414062
    7. '),' → logprob: -11.500259399414062
    8. ',
' → logprob: -11.625259399414062
    9. '(history' → logprob: -12.125259399414062
    10. 'history' → logprob: -12.125259399414062

Token 720: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.002593015553429723
    2. ' tout' → logprob: -6.627593040466309
    3. 'history' → logprob: -7.002593040466309
    4. ' history' → logprob: -9.752593040466309
    5. '   ' → logprob: -9.752593040466309
    6. 'cs' → logprob: -9.877593040466309
    7. 't' → logprob: -10.502593040466309
    8. 'todo' → logprob: -10.627593040466309
    9. '```' → logprob: -10.627593040466309
    10. 'bit' → logprob: -11.127593040466309

Token 721: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.828512363834307e-05
    2. '   ' → logprob: -10.500088691711426
    3. '       ' → logprob: -10.625088691711426
    4. ' ,' → logprob: -11.125088691711426
    5. '),' → logprob: -12.375088691711426
    6. ',
' → logprob: -12.750088691711426
    7. ')' → logprob: -13.000088691711426
    8. 'history' → logprob: -13.500088691711426
    9. '```' → logprob: -13.625088691711426
    10. '(history' → logprob: -13.625088691711426

Token 722: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.06818816810846329
    2. 'history' → logprob: -2.818188190460205
    3. ' bit' → logprob: -5.818188190460205
    4. 'cs' → logprob: -6.693188190460205
    5. 'h' → logprob: -7.443188190460205
    6. ' history' → logprob: -7.818188190460205
    7. '   ' → logprob: -8.318187713623047
    8. 'i' → logprob: -8.318187713623047
    9. ' cs' → logprob: -9.443187713623047
    10. 'v' → logprob: -9.443187713623047

Token 723: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008553589577786624
    2. ')' → logprob: -7.375855445861816
    3. '   ' → logprob: -9.375855445861816
    4. '       ' → logprob: -9.625855445861816
    5. ' ,' → logprob: -9.875855445861816
    6. '),' → logprob: -11.750855445861816
    7. ',h' → logprob: -12.375855445861816
    8. ')
' → logprob: -12.625855445861816
    9. '(history' → logprob: -13.250855445861816
    10. ',
' → logprob: -13.500855445861816

Token 724: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.011298207566142082
    2. ' history' → logprob: -4.761298179626465
    3. 'cs' → logprob: -6.761298179626465
    4. 'i' → logprob: -7.261298179626465
    5. '   ' → logprob: -7.886298179626465
    6. 'h' → logprob: -8.136298179626465
    7. ' cs' → logprob: -9.761298179626465
    8. '  ' → logprob: -11.011298179626465
    9. ' i' → logprob: -11.011298179626465
    10. ' ' → logprob: -11.636298179626465

Token 725: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21433182060718536
    2. ',' → logprob: -1.839331865310669
    3. '
' → logprob: -4.21433162689209
    4. 'return' → logprob: -4.83933162689209
    5. '       ' → logprob: -5.21433162689209
    6. 'def' → logprob: -6.58933162689209
    7. ')' → logprob: -6.71433162689209
    8. '    
' → logprob: -7.08933162689209
    9. ')
' → logprob: -7.33933162689209
    10. '        
' → logprob: -7.46433162689209

Token 726: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12261604517698288
    2. 'i' → logprob: -3.4976160526275635
    3. 'history' → logprob: -3.4976160526275635
    4. ' h' → logprob: -3.6226160526275635
    5. 'cs' → logprob: -4.622615814208984
    6. ' i' → logprob: -5.747615814208984
    7. ' cs' → logprob: -5.872615814208984
    8. ' history' → logprob: -5.997615814208984
    9. ')' → logprob: -6.247615814208984
    10. 'bit' → logprob: -6.372615814208984

Token 727: 'list' (ID: 2641)
  Prédit: 'istory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istory' → logprob: -0.13587768375873566
    2. 'list' → logprob: -2.7608776092529297
    3. 'ist' → logprob: -2.7608776092529297
    4. 'history' → logprob: -8.38587760925293
    5. 'i' → logprob: -9.26087760925293
    6. '[' → logprob: -10.26087760925293
    7. '   ' → logprob: -10.63587760925293
    8. 'is' → logprob: -10.63587760925293
    9. 'ISTORY' → logprob: -11.13587760925293
    10. 'istor' → logprob: -11.51087760925293

Token 728: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.898323118686676
    2. '       ' → logprob: -1.7733230590820312
    3. '   ' → logprob: -2.0233230590820312
    4. '<|end|>' → logprob: -2.1483230590820312
    5. ')
' → logprob: -2.3983230590820312
    6. ',' → logprob: -2.6483230590820312
    7. '
' → logprob: -5.773323059082031
    8. 'return' → logprob: -5.898323059082031
    9. ' return' → logprob: -6.148323059082031
    10. '<|end|>' → logprob: -6.398323059082031

Token 729: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7627957463264465
    2. '<|end|>' → logprob: -1.0127956867218018
    3. '       ' → logprob: -2.2627956867218018
    4. 'def' → logprob: -3.1377956867218018
    5. ')' → logprob: -4.512795925140381
    6. ',' → logprob: -4.762795925140381
    7. '<|end|>' → logprob: -6.887795925140381
    8. ' def' → logprob: -7.887795925140381
    9. '    ' → logprob: -8.387795448303223
    10. '    
' → logprob: -8.387795448303223

Token 730: ' pn' (ID: 80046)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0040531097911298275
    2. 'return' → logprob: -6.129053115844727
    3. 'def' → logprob: -6.629053115844727
    4. ' return' → logprob: -8.004053115844727
    5. '       ' → logprob: -8.629053115844727
    6. '<|end|>' → logprob: -11.004053115844727
    7. '	return' → logprob: -12.379053115844727
    8. ',' → logprob: -13.254053115844727
    9. ')' → logprob: -13.254053115844727
    10. '  ' → logprob: -13.504053115844727

Token 731: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4950560331344604
    2. 't' → logprob: -1.4950560331344604
    3. 'um' → logprob: -1.7450560331344604
    4. ' =' → logprob: -2.12005615234375
    5. ',' → logprob: -2.24505615234375
    6. 'ot' → logprob: -3.24505615234375
    7. 'ext' → logprob: -3.49505615234375
    8. 'rev' → logprob: -3.62005615234375
    9. 'ew' → logprob: -4.12005615234375
    10. 'def' → logprob: -4.62005615234375

Token 732: ' ans' (ID: 3345)
  Prédit: 'pn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pn' → logprob: -1.681286096572876
    2. 'p' → logprob: -1.931286096572876
    3. 'history' → logprob: -2.056286096572876
    4. ' pn' → logprob: -2.056286096572876
    5. 'ph' → logprob: -3.056286096572876
    6. ' history' → logprob: -3.056286096572876
    7. ' p' → logprob: -3.181286096572876
    8. 'h' → logprob: -3.556286096572876
    9. 'v' → logprob: -3.806286096572876
    10. 'prev' → logprob: -3.931286096572876

Token 733: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7322204113006592
    2. '=' → logprob: -0.8572204113006592
    3. ' =' → logprob: -2.357220411300659
    4. ' ,' → logprob: -9.732220649719238
    5. '   ' → logprob: -10.357220649719238
    6. ' ' → logprob: -11.857220649719238
    7. ' +=' → logprob: -12.482220649719238
    8. '+=' → logprob: -12.482220649719238
    9. '=
' → logprob: -12.982220649719238
    10. '[' → logprob: -13.107220649719238

Token 734: ' handle' (ID: 5318)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8708122968673706
    2. 'len' → logprob: -1.1208122968673706
    3. ' len' → logprob: -2.12081241607666
    4. ' process' → logprob: -3.24581241607666
    5. 'process' → logprob: -3.24581241607666
    6. ' ' → logprob: -3.62081241607666
    7. '1' → logprob: -4.74581241607666
    8. 'get' → logprob: -5.99581241607666
    9. ' get' → logprob: -5.99581241607666
    10. ' (' → logprob: -6.24581241607666

Token 735: '_remaining' (ID: 102167)
  Prédit: '(history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(history' → logprob: -1.0366336107254028
    2. '_color' → logprob: -2.4116334915161133
    3. '_components' → logprob: -2.6616334915161133
    4. '_history' → logprob: -2.7866334915161133
    5. '_parent' → logprob: -2.7866334915161133
    6. 'history' → logprob: -3.0366334915161133
    7. '(cs' → logprob: -3.0366334915161133
    8. '_previous' → logprob: -3.5366334915161133
    9. 'color' → logprob: -3.6616334915161133
    10. '_p' → logprob: -3.7866334915161133

Token 736: '_sub' (ID: 11572)
  Prédit: '(history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(history' → logprob: -0.8261308073997498
    2. ',' → logprob: -1.2011308670043945
    3. '_nodes' → logprob: -1.9511308670043945
    4. '(cs' → logprob: -3.4511308670043945
    5. '_components' → logprob: -3.5761308670043945
    6. '_history' → logprob: -4.8261308670043945
    7. 's' → logprob: -4.9511308670043945
    8. '_colors' → logprob: -5.4511308670043945
    9. '_n' → logprob: -5.5761308670043945
    10. '=' → logprob: -5.7011308670043945

Token 737: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.11899310350418091
    2. 'trees' → logprob: -2.243993043899536
    3. 'components' → logprob: -6.368993282318115
    4. 'graph' → logprob: -6.618993282318115
    5. 'nodes' → logprob: -6.993993282318115
    6. '(tree' → logprob: -7.493993282318115
    7. 'ans' → logprob: -7.618993282318115
    8. 'sets' → logprob: -8.493992805480957
    9. 'graphs' → logprob: -8.743992805480957
    10. '(ans' → logprob: -9.243992805480957

Token 738: '(bit' (ID: 123258)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.12544451653957367
    2. '(history' → logprob: -3.6254444122314453
    3. '(es' → logprob: -3.6254444122314453
    4. '(bit' → logprob: -3.8754444122314453
    5. '(tree' → logprob: -4.500444412231445
    6. 's' → logprob: -4.500444412231445
    7. '(' → logprob: -5.750444412231445
    8. '(nodes' → logprob: -5.875444412231445
    9. '_nodes' → logprob: -5.875444412231445
    10. 'es' → logprob: -6.250444412231445

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017921553226187825
    2. '(N' → logprob: -7.376791954040527
    3. '   ' → logprob: -8.376791954040527
    4. '[' → logprob: -8.376791954040527
    5. ' ,' → logprob: -8.626791954040527
    6. ')' → logprob: -8.876791954040527
    7. '(' → logprob: -9.001791954040527
    8. '[N' → logprob: -9.126791954040527
    9. ',N' → logprob: -9.751791954040527
    10. '(),' → logprob: -9.876791954040527

Token 740: ' N' (ID: 478)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3545469641685486
    2. 'N' → logprob: -2.1045470237731934
    3. 'cs' → logprob: -2.6045470237731934
    4. 'history' → logprob: -3.4795470237731934
    5. 'tin' → logprob: -3.6045470237731934
    6. 'pn' → logprob: -4.229547023773193
    7. 'tout' → logprob: -4.229547023773193
    8. ' ans' → logprob: -5.479547023773193
    9. ' tin' → logprob: -6.104547023773193
    10. 'v' → logprob: -6.479547023773193

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04137361794710159
    2. '   ' → logprob: -3.5413737297058105
    3. ')
' → logprob: -4.9163737297058105
    4. ')' → logprob: -5.6663737297058105
    5. '[' → logprob: -8.541373252868652
    6. ',
' → logprob: -8.916373252868652
    7. ' ,' → logprob: -9.041373252868652
    8. 'def' → logprob: -9.166373252868652
    9. '):
' → logprob: -10.541373252868652
    10. '(),' → logprob: -10.541373252868652

Token 742: ' ans' (ID: 3345)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.9343749284744263
    2. 'ans' → logprob: -1.5593749284744263
    3. ' history' → logprob: -1.6843749284744263
    4. 'pn' → logprob: -2.4343748092651367
    5. ' ans' → logprob: -2.9343748092651367
    6. ' pn' → logprob: -3.6843748092651367
    7. 'cs' → logprob: -3.8093748092651367
    8. ' cs' → logprob: -4.309374809265137
    9. ' tin' → logprob: -6.309374809265137
    10. '   ' → logprob: -6.434374809265137

Token 743: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10826568305492401
    2. '   ' → logprob: -3.1082656383514404
    3. ')
' → logprob: -3.3582656383514404
    4. ')' → logprob: -3.8582656383514404
    5. ',
' → logprob: -6.9832658767700195
    6. '[' → logprob: -7.7332658767700195
    7. 'def' → logprob: -7.9832658767700195
    8. '):
' → logprob: -9.48326587677002
    9. ' ,' → logprob: -10.23326587677002
    10. '
' → logprob: -10.48326587677002

Token 744: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.217951886355877e-05
    2. 'return' → logprob: -10.500061988830566
    3. 'def' → logprob: -10.750061988830566
    4. ' return' → logprob: -12.250061988830566
    5. '       ' → logprob: -12.375061988830566
    6. '<|end|>' → logprob: -13.250061988830566
    7. '	return' → logprob: -13.625061988830566
    8. ',' → logprob: -15.375061988830566
    9. '```' → logprob: -15.375061988830566
    10. '    ' → logprob: -16.000062942504883

Token 745: ' restore' (ID: 24540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060517121106386185
    2. 'return' → logprob: -3.3105170726776123
    3. ' return' → logprob: -4.060517311096191
    4. 'def' → logprob: -5.685517311096191
    5. 'history' → logprob: -7.310517311096191
    6. ' history' → logprob: -7.810517311096191
    7. ' for' → logprob: -9.185517311096191
    8. 'bit' → logprob: -9.560517311096191
    9. 'for' → logprob: -9.685517311096191
    10. '       ' → logprob: -9.810517311096191

Token 746: '_bit' (ID: 39574)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.0205269455909729
    2. '_history' → logprob: -4.270526885986328
    3. '(history' → logprob: -5.645526885986328
    4. '_components' → logprob: -7.270526885986328
    5. '_bit' → logprob: -7.395526885986328
    6. '_sub' → logprob: -7.770526885986328
    7. '_states' → logprob: -8.020526885986328
    8. '_state' → logprob: -8.520526885986328
    9. '(tree' → logprob: -9.395526885986328
    10. '_nodes' → logprob: -9.645526885986328

Token 747: '_state' (ID: 9479)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.00045164540642872453
    2. '(history' → logprob: -8.125452041625977
    3. '(' → logprob: -9.250452041625977
    4. '(tree' → logprob: -10.125452041625977
    5. '   ' → logprob: -12.375452041625977
    6. '(hist' → logprob: -12.750452041625977
    7. '(bits' → logprob: -12.875452041625977
    8. ' (' → logprob: -13.000452041625977
    9. '(Bit' → logprob: -13.125452041625977
    10. '(p' → logprob: -13.625452041625977

Token 748: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.0009767174487933517
    2. '(history' → logprob: -7.0009765625
    3. '(' → logprob: -10.1259765625
    4. '(hist' → logprob: -11.3759765625
    5. '(Bit' → logprob: -12.8759765625
    6. '(bits' → logprob: -13.0009765625
    7. ' (' → logprob: -13.0009765625
    8. '   ' → logprob: -13.0009765625
    9. '(tree' → logprob: -13.6259765625
    10. '(rest' → logprob: -14.1259765625

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4861355721950531
    2. '(history' → logprob: -0.9861356019973755
    3. '(bit' → logprob: -4.486135482788086
    4. '(' → logprob: -7.486135482788086
    5. ')' → logprob: -10.236135482788086
    6. ' ,' → logprob: -10.236135482788086
    7. '(hist' → logprob: -10.611135482788086
    8. 'history' → logprob: -10.861135482788086
    9. ' (' → logprob: -10.986135482788086
    10. '(h' → logprob: -11.986135482788086

Token 750: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.006666112691164017
    2. ' history' → logprob: -5.75666618347168
    3. 'pn' → logprob: -6.00666618347168
    4. 'N' → logprob: -7.50666618347168
    5. 'bit' → logprob: -8.38166618347168
    6. '   ' → logprob: -9.13166618347168
    7. ' pn' → logprob: -9.88166618347168
    8. 'len' → logprob: -10.88166618347168
    9. 'hn' → logprob: -11.88166618347168
    10. 'cs' → logprob: -12.25666618347168

Token 751: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002500152215361595
    2. ')' → logprob: -6.127500057220459
    3. '   ' → logprob: -8.127500534057617
    4. ')
' → logprob: -11.252500534057617
    5. ' ,' → logprob: -12.127500534057617
    6. 'def' → logprob: -15.127500534057617
    7. ')

' → logprob: -15.752500534057617
    8. '[' → logprob: -15.877500534057617
    9. '  ' → logprob: -16.002500534057617
    10. ' ' → logprob: -16.127500534057617

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1819172501564026
    2. 'def' → logprob: -1.8069171905517578
    3. '
' → logprob: -6.556917190551758
    4. '<|end|>' → logprob: -8.181917190551758
    5. 'return' → logprob: -8.806917190551758
    6. ' def' → logprob: -9.806917190551758
    7. '	return' → logprob: -10.181917190551758
    8. ' return' → logprob: -10.556917190551758
    9. '    
' → logprob: -10.681917190551758
    10. ':' → logprob: -10.681917190551758

Token 753: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006337318569421768
    2. 'def' → logprob: -5.3813371658325195
    3. 'return' (adapté à ' return') → logprob: -6.3813371658325195
    4. '	return' → logprob: -11.25633716583252
    5. ' return' → logprob: -12.00633716583252
    6. '       ' → logprob: -13.38133716583252
    7. '	' → logprob: -14.38133716583252
    8. '```' → logprob: -15.13133716583252
    9. '  ' → logprob: -15.25633716583252
    10. '    ' → logprob: -15.38133716583252

Token 754: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07892746478319168
    2. ' ans' → logprob: -2.578927516937256
    3. '(ans' → logprob: -10.453927040100098
    4. '   ' → logprob: -12.203927040100098
    5. '	ans' → logprob: -12.703927040100098
    6. ' ' → logprob: -15.703927040100098
    7. 'int' → logprob: -16.328927993774414
    8. 'answer' → logprob: -16.453927993774414
    9. '
' → logprob: -16.703927993774414
    10. '_ans' → logprob: -16.703927993774414

Token 755: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20882515609264374
    2. ':' → logprob: -1.8338251113891602
    3. '<|end|>' → logprob: -4.58382511138916
    4. '
' → logprob: -5.58382511138916
    5. ':def' → logprob: -5.58382511138916
    6. ':
' → logprob: -5.83382511138916
    7. '[' → logprob: -6.08382511138916
    8. '```' → logprob: -6.33382511138916
    9. ' def' → logprob: -6.58382511138916
    10. '<|end|>' → logprob: -7.95882511138916

Token 756: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001446611131541431
    2. '
' → logprob: -8.875144958496094
    3. '```' → logprob: -13.000144958496094
    4. ':def' → logprob: -14.125144958496094
    5. ' def' → logprob: -14.500144958496094
    6. 'ndef' → logprob: -14.625144958496094
    7. '    
' → logprob: -16.125144958496094
    8. '	def' → logprob: -16.125144958496094
    9. '#' → logprob: -16.125144958496094
    10. '\' → logprob: -16.625144958496094

Token 757: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.11768142133951187
    2. 'main' → logprob: -2.6176815032958984
    3. ' process' → logprob: -3.8676815032958984
    4. 'calc' → logprob: -4.867681503295898
    5. ' main' → logprob: -5.492681503295898
    6. 'handle' → logprob: -6.492681503295898
    7. 'subtract' → logprob: -6.617681503295898
    8. 'get' → logprob: -7.242681503295898
    9. 'solve' → logprob: -7.742681503295898
    10. 'calculate' → logprob: -8.492681503295898

Token 758: '_vertex' (ID: 65291)
  Prédit: '_vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertex' → logprob: -2.4987974029500037e-05
    2. '_v' → logprob: -11.250024795532227
    3. '_vertices' → logprob: -11.875024795532227
    4. '_' → logprob: -12.875024795532227
    5. '_VERTEX' → logprob: -14.250024795532227
    6. '_token' → logprob: -14.750024795532227
    7. ' _' → logprob: -16.000024795532227
    8. '_vert' → logprob: -16.000024795532227
    9. '(vertex' → logprob: -16.125024795532227
    10. '_vector' → logprob: -16.125024795532227

Token 759: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -3.523948907968588e-05
    2. '(v' → logprob: -10.625035285949707
    3. 'components' → logprob: -11.750035285949707
    4. '(' → logprob: -13.250035285949707
    5. '```' → logprob: -15.250035285949707
    6. '_component' → logprob: -15.625035285949707
    7. '_vertices' → logprob: -15.875035285949707
    8. 'Components' → logprob: -16.00003433227539
    9. '(vertex' → logprob: -16.12503433227539
    10. 's' → logprob: -16.12503433227539

Token 760: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.8087270038668066e-05
    2. '(' → logprob: -10.500027656555176
    3. '(vertex' → logprob: -15.250027656555176
    4. '(
' → logprob: -15.500027656555176
    5. '(V' → logprob: -18.750028610229492
    6. ' (' → logprob: -19.250028610229492
    7. ',' → logprob: -19.375028610229492
    8. '(vc' → logprob: -19.375028610229492
    9. '(node' → logprob: -19.875028610229492
    10. '(s' → logprob: -20.125028610229492

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ' ,' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.25001049041748
    4. 'def' → logprob: -15.87501049041748
    5. '):' → logprob: -16.375011444091797
    6. ',
' → logprob: -16.875011444091797
    7. '_,' → logprob: -17.375011444091797
    8. '‌,' → logprob: -17.500011444091797
    9. ' es' → logprob: -17.875011444091797
    10. '):
' → logprob: -18.250011444091797

Token 762: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3484629690647125
    2. ' es' → logprob: -1.2234629392623901
    3. '	es' → logprob: -11.72346305847168
    4. '...' → logprob: -12.97346305847168
    5. 'def' → logprob: -13.47346305847168
    6. '   ' → logprob: -13.59846305847168
    7. ' ' → logprob: -13.84846305847168
    8. 'e' → logprob: -14.34846305847168
    9. ')' → logprob: -14.59846305847168
    10. '_es' → logprob: -15.16096305847168

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.35706390615087e-05
    2. ' ,' → logprob: -10.500033378601074
    3. ',t' → logprob: -12.625033378601074
    4. '   ' → logprob: -13.375033378601074
    5. ',
' → logprob: -14.875033378601074
    6. 'def' → logprob: -15.375033378601074
    7. ',v' → logprob: -16.12503433227539
    8. '_,' → logprob: -16.25003433227539
    9. ')' → logprob: -16.50003433227539
    10. '):' → logprob: -17.00003433227539

Token 764: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.027340270578861237
    2. ' tin' → logprob: -3.6523401737213135
    3. 'bit' → logprob: -7.777340412139893
    4. 'tout' → logprob: -8.027339935302734
    5. 't' → logprob: -8.902339935302734
    6. '   ' → logprob: -10.152339935302734
    7. ' bit' → logprob: -10.652339935302734
    8. ',' → logprob: -10.652339935302734
    9. '```' → logprob: -11.277339935302734
    10. ' ' → logprob: -11.402339935302734

Token 765: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010604646377032623
    2. ',t' → logprob: -9.625105857849121
    3. ' ,' → logprob: -11.125105857849121
    4. ',
' → logprob: -11.500105857849121
    5. 'def' → logprob: -12.125105857849121
    6. '   ' → logprob: -12.500105857849121
    7. ',v' → logprob: -13.375105857849121
    8. ')' → logprob: -13.375105857849121
    9. '[' → logprob: -14.500105857849121
    10. '),' → logprob: -14.625105857849121

Token 766: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.0013271415373310447
    2. ' tout' → logprob: -6.626327037811279
    3. 't' → logprob: -14.126327514648438
    4. 'Tout' → logprob: -16.126327514648438
    5. 'v' → logprob: -16.126327514648438
    6. 'todo' → logprob: -16.876327514648438
    7. 'tou' → logprob: -16.876327514648438
    8. '```' → logprob: -16.876327514648438
    9. ' ' → logprob: -17.501327514648438
    10. '   ' → logprob: -17.501327514648438

Token 767: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.664371848164592e-05
    2. ' ,' → logprob: -11.250016212463379
    3. '   ' → logprob: -12.875016212463379
    4. ',
' → logprob: -14.750016212463379
    5. '_,' → logprob: -16.000017166137695
    6. '):' → logprob: -16.125017166137695
    7. '):
' → logprob: -16.250017166137695
    8. ',b' → logprob: -16.500017166137695
    9. 'def' → logprob: -16.750017166137695
    10. ',t' → logprob: -17.250017166137695

Token 768: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.007613017223775387
    2. ' bit' → logprob: -4.882613182067871
    3. '   ' → logprob: -12.382613182067871
    4. ' ' → logprob: -14.132613182067871
    5. '(bit' → logprob: -14.632613182067871
    6. '  ' → logprob: -15.007613182067871
    7. 'b' → logprob: -15.507613182067871
    8. '```' → logprob: -15.632613182067871
    9. '    ' → logprob: -16.007612228393555
    10. '
' → logprob: -16.132612228393555

Token 769: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07905469834804535
    2. '):
' → logprob: -2.579054594039917
    3. '):
' → logprob: -9.579054832458496
    4. ',' → logprob: -9.829054832458496
    5. '   ' → logprob: -10.204054832458496
    6. ')' → logprob: -12.829054832458496
    7. '):

' → logprob: -14.204054832458496
    8. ':' → logprob: -14.204054832458496
    9. ' ):' → logprob: -14.704054832458496
    10. 'def' → logprob: -15.954054832458496

Token 770: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.22102141380310059
    2. '   ' → logprob: -1.7210214138031006
    3. 'count' → logprob: -4.59602165222168
    4. ' cnt' → logprob: -4.97102165222168
    5. 'res' → logprob: -7.97102165222168
    6. 'history' → logprob: -7.97102165222168
    7. '```' → logprob: -8.34602165222168
    8. '	cnt' → logprob: -8.59602165222168
    9. 'ret' → logprob: -8.97102165222168
    10. 'sub' → logprob: -9.22102165222168

Token 771: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.01862546056509018
    2. 'count' → logprob: -4.518625259399414
    3. '   ' → logprob: -5.893625259399414
    4. 'ans' → logprob: -7.143625259399414
    5. 'res' → logprob: -7.268625259399414
    6. 'ret' → logprob: -7.643625259399414
    7. ' cnt' → logprob: -7.893625259399414
    8. 'total' → logprob: -8.768625259399414
    9. 'c' → logprob: -8.893625259399414
    10. 'sum' → logprob: -9.143625259399414

Token 772: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08012256026268005
    2. ' =' → logprob: -2.580122470855713
    3. ',' → logprob: -6.705122470855713
    4. '   ' → logprob: -12.205122947692871
    5. ' ' → logprob: -14.080122947692871
    6. '=
' → logprob: -14.830122947692871
    7. 'def' → logprob: -15.080122947692871
    8. 'v' → logprob: -15.205122947692871
    9. ' ,' → logprob: -15.705122947692871
    10. '```' → logprob: -16.080121994018555

Token 773: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3900205194950104
    2. '0' → logprob: -1.140020489692688
    3. ' ' → logprob: -6.390020370483398
    4. 'bit' → logprob: -6.765020370483398
    5. 'Binary' → logprob: -9.265020370483398
    6. '[' → logprob: -9.890020370483398
    7. '-' → logprob: -10.265020370483398
    8. 'len' → logprob: -10.640020370483398
    9. '   ' → logprob: -11.265020370483398
    10. ' bit' → logprob: -11.577520370483398

Token 774: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14012935757637024
    2. '0' → logprob: -2.390129327774048
    3. 'bit' → logprob: -3.265129327774048
    4. '-' → logprob: -7.265129566192627
    5. 'len' → logprob: -9.390129089355469
    6. 'sum' → logprob: -10.515129089355469
    7. 'Binary' → logprob: -10.890129089355469
    8. 'int' → logprob: -11.265129089355469
    9. '(bit' → logprob: -11.515129089355469
    10. ' ' → logprob: -11.890129089355469

Token 775: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18541981279850006
    2. '   ' → logprob: -1.8104197978973389
    3. ',
' → logprob: -6.185420036315918
    4. '
' → logprob: -6.810420036315918
    5. '<|end|>' → logprob: -6.810420036315918
    6. ')' → logprob: -8.310420036315918
    7. 'def' → logprob: -9.310420036315918
    8. ' ,' → logprob: -9.560420036315918
    9. ',h' → logprob: -9.560420036315918
    10. '<|end|>' → logprob: -9.560420036315918

Token 776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38190361857414246
    2. ',' → logprob: -1.3819036483764648
    3. '
' → logprob: -3.381903648376465
    4. '<|end|>' → logprob: -4.506903648376465
    5. ';' → logprob: -5.506903648376465
    6. ',
' → logprob: -6.006903648376465
    7. '+' → logprob: -6.131903648376465
    8. ' for' → logprob: -6.256903648376465
    9. '    
' → logprob: -6.381903648376465
    10. 'for' → logprob: -6.631903648376465

Token 777: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.3032604157924652
    2. 'history' → logprob: -1.6782604455947876
    3. 'for' → logprob: -2.678260326385498
    4. '   ' → logprob: -5.678260326385498
    5. 'bit' → logprob: -7.053260326385498
    6. 'return' → logprob: -7.428260326385498
    7. 'v' → logprob: -7.678260326385498
    8. 'hist' → logprob: -8.803260803222656
    9. 'hl' → logprob: -8.928260803222656
    10. 'res' → logprob: -10.053260803222656

Token 778: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003384422743692994
    2. 'istory' → logprob: -8.500338554382324
    3. 'ist' → logprob: -9.625338554382324
    4. '_list' → logprob: -9.875338554382324
    5. 'history' → logprob: -12.125338554382324
    6. '   ' → logprob: -13.250338554382324
    7. '[]' → logprob: -13.375338554382324
    8. '[' → logprob: -13.500338554382324
    9. 'List' → logprob: -13.625338554382324
    10. ' =' → logprob: -13.625338554382324

Token 779: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11295359581708908
    2. ' =' → logprob: -2.2379536628723145
    3. '=[]' → logprob: -9.237953186035156
    4. ',' → logprob: -10.362953186035156
    5. '   ' → logprob: -14.112953186035156
    6. '[]' → logprob: -14.987953186035156
    7. '=[' → logprob: -15.112953186035156
    8. '.append' → logprob: -15.362953186035156
    9. '[' → logprob: -15.487953186035156
    10. ' ' → logprob: -15.862953186035156

Token 780: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.33105671405792236
    2. '[]
' → logprob: -1.3310567140579224
    3. '[(' → logprob: -4.081056594848633
    4. '[v' → logprob: -7.706056594848633
    5. '[' → logprob: -8.206056594848633
    6. '[]

' → logprob: -10.956056594848633
    7. '[
' → logprob: -13.081056594848633
    8. '[])' → logprob: -14.081056594848633
    9. '[((' → logprob: -14.206056594848633
    10. '[]}' → logprob: -14.456056594848633

Token 781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19674615561962128
    2. 'for' → logprob: -1.9467461109161377
    3. ' for' → logprob: -3.5717461109161377
    4. 'bit' → logprob: -4.946746349334717
    5. 'h' → logprob: -8.696745872497559
    6. 'history' → logprob: -8.821745872497559
    7. ' bit' → logprob: -9.196745872497559
    8. 'def' → logprob: -10.321745872497559
    9. 'v' → logprob: -10.446745872497559
    10. '+' → logprob: -10.696745872497559

Token 782: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0594375915825367
    2. 'bit' → logprob: -3.4344375133514404
    3. '   ' → logprob: -4.0594377517700195
    4. ' for' → logprob: -5.3094377517700195
    5. 'h' → logprob: -5.9344377517700195
    6. 'history' → logprob: -8.18443775177002
    7. 'return' → logprob: -9.43443775177002
    8. 'cnt' → logprob: -9.93443775177002
    9. '```' → logprob: -10.30943775177002
    10. ' bit' → logprob: -10.43443775177002

Token 783: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.02630726806819439
    2. 'u' → logprob: -3.7763073444366455
    3. 'w' → logprob: -6.526307106018066
    4. 'e' → logprob: -7.526307106018066
    5. 'nv' → logprob: -8.276307106018066
    6. 'x' → logprob: -8.401307106018066
    7. ' to' → logprob: -8.776307106018066
    8. 't' → logprob: -9.401307106018066
    9. 'nx' → logprob: -9.526307106018066
    10. 'n' → logprob: -10.276307106018066

Token 784: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14273282885551453
    2. 'in' → logprob: -2.017732858657837
    3. ',' → logprob: -10.767732620239258
    4. ' ' → logprob: -10.892732620239258
    5. '	in' → logprob: -12.017732620239258
    6. 's' → logprob: -12.767732620239258
    7. 'es' → logprob: -13.392732620239258
    8. ' ,' → logprob: -14.392732620239258
    9. '[' → logprob: -14.392732620239258
    10. '<|end|>' → logprob: -14.642732620239258

Token 785: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -5.3358446166384965e-05
    2. ' es' → logprob: -9.875053405761719
    3. 'bit' → logprob: -14.625053405761719
    4. '	es' → logprob: -15.000053405761719
    5. '[' → logprob: -15.125053405761719
    6. '   ' → logprob: -15.500053405761719
    7. '
' → logprob: -16.50005340576172
    8. 'et' → logprob: -16.62505340576172
    9. '(es' → logprob: -16.62505340576172
    10. ' ' → logprob: -16.87505340576172

Token 786: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00018006093159783632
    2. 'v' → logprob: -8.6251802444458
    3. '[' → logprob: -15.1251802444458
    4. ' [' → logprob: -16.750179290771484
    5. '[
' → logprob: -17.125179290771484
    6. '	v' → logprob: -17.250179290771484
    7. '```' → logprob: -17.250179290771484
    8. '
' → logprob: -17.500179290771484
    9. '<v' → logprob: -18.000179290771484
    10. '   ' → logprob: -18.125179290771484

Token 787: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3921196758747101
    2. ']:
' → logprob: -1.1421196460723877
    3. ':' → logprob: -5.517119884490967
    4. '[' → logprob: -8.142119407653809
    5. ']:
' → logprob: -8.517119407653809
    6. '   ' → logprob: -8.642119407653809
    7. ':
' → logprob: -8.767119407653809
    8. ']' → logprob: -8.767119407653809
    9. '       ' → logprob: -9.892119407653809
    10. '],' → logprob: -10.267119407653809

Token 788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022289952263236046
    2. ':' → logprob: -3.897289991378784
    3. ':
' → logprob: -6.897289752960205
    4. ' if' → logprob: -8.397290229797363
    5. '[' → logprob: -8.522290229797363
    6. ',' → logprob: -8.647290229797363
    7. '<|end|>' → logprob: -9.897290229797363
    8. '        
' → logprob: -10.897290229797363
    9. '   ' → logprob: -11.522290229797363
    10. 'if' → logprob: -12.022290229797363

Token 789: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014499234966933727
    2. '       ' → logprob: -4.264499187469482
    3. ' if' → logprob: -8.13949966430664
    4. '   ' → logprob: -10.13949966430664
    5. '	if' → logprob: -13.63949966430664
    6. '```' → logprob: -14.01449966430664
    7. '           ' → logprob: -14.51449966430664
    8. 'from' → logprob: -14.76449966430664
    9. ';if' → logprob: -15.26449966430664
    10. '#' → logprob: -15.88949966430664

Token 790: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.4527413249015808
    2. 'not' → logprob: -1.2027413845062256
    3. 'is' → logprob: -2.9527413845062256
    4. ' tin' → logprob: -5.7027411460876465
    5. 'bit' → logprob: -6.3277411460876465
    6. '(not' → logprob: -6.7027411460876465
    7. ' not' → logprob: -6.7027411460876465
    8. 'tout' → logprob: -6.9527411460876465
    9. 'in' → logprob: -7.4527411460876465
    10. '(t' → logprob: -8.390241622924805

Token 791: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.6355782151222229
    2. '[v' → logprob: -0.7605782151222229
    3. '[' → logprob: -6.510578155517578
    4. 'to' → logprob: -7.510578155517578
    5. 'v' → logprob: -7.635578155517578
    6. ' [' → logprob: -9.760578155517578
    7. '>' → logprob: -9.948078155517578
    8. '[t' → logprob: -10.260578155517578
    9. '```' → logprob: -10.448078155517578
    10. '   ' → logprob: -11.010578155517578

Token 792: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12633857131004333
    2. '>' → logprob: -2.876338481903076
    3. ']>' → logprob: -3.501338481903076
    4. '[' → logprob: -4.126338481903076
    5. ' >' → logprob: -4.751338481903076
    6. ' ]' → logprob: -5.876338481903076
    7. ']>=' → logprob: -6.751338481903076
    8. ' <' → logprob: -7.126338481903076
    9. ']<' → logprob: -7.126338481903076
    10. '<' → logprob: -7.251338481903076

Token 793: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5002877712249756
    2. ' >' → logprob: -1.0002877712249756
    3. ' <' → logprob: -4.125288009643555
    4. '<' → logprob: -4.875288009643555
    5. '>=' → logprob: -7.250288009643555
    6. ' >=' → logprob: -7.625288009643555
    7. ' <=' → logprob: -8.125288009643555
    8. '[' → logprob: -8.625288009643555
    9. '<=' → logprob: -8.750288009643555
    10. ' ' → logprob: -9.625288009643555

Token 794: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.000293751887511462
    2. ' tin' → logprob: -8.625293731689453
    3. '0' → logprob: -10.125293731689453
    4. '=' → logprob: -11.000293731689453
    5. '   ' → logprob: -11.750293731689453
    6. 'tout' → logprob: -12.000293731689453
    7. 't' → logprob: -12.125293731689453
    8. 'tain' → logprob: -12.375293731689453
    9. 'tn' → logprob: -12.375293731689453
    10. 'tid' → logprob: -12.625293731689453

Token 795: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.005327793303877115
    2. 'v' → logprob: -5.3803277015686035
    3. '[to' → logprob: -7.3803277015686035
    4. 'to' → logprob: -9.630328178405762
    5. '[t' → logprob: -12.505328178405762
    6. '[' → logprob: -12.630328178405762
    7. '   ' → logprob: -13.005328178405762
    8. '(v' → logprob: -13.630328178405762
    9. ' v' → logprob: -14.005328178405762
    10. '	v' → logprob: -14.005328178405762

Token 796: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038971420377492905
    2. ' or' → logprob: -3.913971424102783
    3. 'or' → logprob: -4.788971424102783
    4. 'and' → logprob: -5.788971424102783
    5. ']:' → logprob: -6.288971424102783
    6. ']<' → logprob: -6.663971424102783
    7. ' and' → logprob: -6.788971424102783
    8. ']:
' → logprob: -6.788971424102783
    9. ']+' → logprob: -7.913971424102783
    10. ' ]' → logprob: -8.038970947265625

Token 797: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5091713666915894
    2. '           ' → logprob: -1.3841713666915894
    3. 'continue' → logprob: -2.134171485900879
    4. '       ' → logprob: -3.634171485900879
    5. '	continue' → logprob: -6.509171485900879
    6. '   ' → logprob: -7.884171485900879
    7. '	       ' → logprob: -8.134171485900879
    8. '               ' → logprob: -8.509171485900879
    9. '```' → logprob: -8.509171485900879
    10. '		' → logprob: -8.634171485900879

Token 798: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043460296001285315
    2. '   ' → logprob: -8.750434875488281
    3. ' if' → logprob: -9.750434875488281
    4. 'continue' → logprob: -9.750434875488281
    5. ' continue' → logprob: -10.000434875488281
    6. '           ' → logprob: -10.125434875488281
    7. 'if' → logprob: -11.000434875488281
    8. ' h' → logprob: -11.125434875488281
    9. '```' → logprob: -11.625434875488281
    10. 'h' → logprob: -11.875434875488281

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000855597376357764
    2. '           ' → logprob: -8.250855445861816
    3. '   ' → logprob: -8.875855445861816
    4. ' if' → logprob: -9.000855445861816
    5. '```' → logprob: -9.125855445861816
    6. ' and' → logprob: -9.625855445861816
    7. '<|end|>' → logprob: -9.875855445861816
    8. ' continue' → logprob: -11.000855445861816
    9. ' h' → logprob: -11.125855445861816
    10. ' ' → logprob: -11.250855445861816

Token 800: ' num' (ID: 2269)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26541051268577576
    2. 'h' → logprob: -2.5154104232788086
    3. 'cnt' → logprob: -2.6404104232788086
    4. 'bit' → logprob: -4.015410423278809
    5. '   ' → logprob: -4.015410423278809
    6. 'w' → logprob: -4.765410423278809
    7. 'count' → logprob: -5.015410423278809
    8. ' if' → logprob: -5.015410423278809
    9. '       ' → logprob: -5.390410423278809
    10. 'l' → logprob: -5.390410423278809

Token 801: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01576710119843483
    2. '=' → logprob: -4.2657670974731445
    3. ',' → logprob: -6.7657670974731445
    4. '   ' → logprob: -9.140767097473145
    5. '_nodes' → logprob: -9.890767097473145
    6. 'w' → logprob: -10.140767097473145
    7. ' ' → logprob: -10.390767097473145
    8. '  ' → logprob: -10.765767097473145
    9. 'to' → logprob: -10.890767097473145
    10. 's' → logprob: -10.890767097473145

Token 802: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.07107847929000854
    2. ' bit' → logprob: -2.6960785388946533
    3. 'get' → logprob: -8.071078300476074
    4. 'count' → logprob: -8.321078300476074
    5. '   ' → logprob: -9.071078300476074
    6. ' get' → logprob: -9.821078300476074
    7. ' count' → logprob: -9.946078300476074
    8. '(bit' → logprob: -9.946078300476074
    9. 'calc' → logprob: -9.946078300476074
    10. '1' → logprob: -10.446078300476074

Token 803: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -3.976922744186595e-05
    2. 'sum' → logprob: -10.500040054321289
    3. '.' → logprob: -12.500040054321289
    4. '._' → logprob: -12.625040054321289
    5. ' .' → logprob: -13.125040054321289
    6. '   ' → logprob: -13.875040054321289
    7. '.add' → logprob: -14.750040054321289
    8. ',sum' → logprob: -14.875040054321289
    9. '	sum' → logprob: -14.875040054321289
    10. '.bit' → logprob: -15.250040054321289

Token 804: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00036049127811565995
    2. '(' → logprob: -8.000360488891602
    3. '(to' → logprob: -12.250360488891602
    4. '((' → logprob: -12.375360488891602
    5. '(n' → logprob: -13.000360488891602
    6. '(
' → logprob: -13.500360488891602
    7. 't' → logprob: -13.625360488891602
    8. ' (' → logprob: -13.750360488891602
    9. '(v' → logprob: -13.750360488891602
    10. '(max' → logprob: -13.875360488891602

Token 805: 'in' (ID: 258)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.12028154730796814
    2. '(v' → logprob: -2.995281457901001
    3. 'in' → logprob: -3.620281457901001
    4. '(' → logprob: -4.49528169631958
    5. '(to' → logprob: -4.87028169631958
    6. 'tin' → logprob: -5.87028169631958
    7. 'to' → logprob: -6.24528169631958
    8. 'int' → logprob: -6.37028169631958
    9. 'n' → logprob: -6.37028169631958
    10. 't' → logprob: -6.62028169631958

Token 806: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.06704482436180115
    2. '[v' → logprob: -3.442044734954834
    3. '(to' → logprob: -3.817044734954834
    4. '[t' → logprob: -4.692044734954834
    5. '(v' → logprob: -7.067044734954834
    6. 'to' → logprob: -7.692044734954834
    7. '[' → logprob: -9.192045211791992
    8. 'v' → logprob: -9.317045211791992
    9. '(t' → logprob: -9.442045211791992
    10. '   ' → logprob: -11.317045211791992

Token 807: '],' (ID: 2155)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.07964051514863968
    2. '[t' → logprob: -2.8296406269073486
    3. ',' → logprob: -4.5796403884887695
    4. '(to' → logprob: -5.4546403884887695
    5. '[' → logprob: -6.4546403884887695
    6. ',to' → logprob: -7.5796403884887695
    7. '[v' → logprob: -8.70464038848877
    8. ' [' → logprob: -9.07964038848877
    9. ' ,' → logprob: -9.20464038848877
    10. '(t' → logprob: -9.32964038848877

Token 808: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.0008197537390515208
    2. ' tout' → logprob: -7.125819683074951
    3. '   ' → logprob: -11.62582015991211
    4. 'todo' → logprob: -13.50082015991211
    5. 't' → logprob: -13.50082015991211
    6. 'tin' → logprob: -14.00082015991211
    7. '\t' → logprob: -14.50082015991211
    8. 'tou' → logprob: -14.75082015991211
    9. '	t' → logprob: -15.12582015991211
    10. '    ' → logprob: -15.37582015991211

Token 809: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.282920129597187e-05
    2. '[v' → logprob: -11.625012397766113
    3. 'to' → logprob: -13.000012397766113
    4. '[' → logprob: -14.375012397766113
    5. '(to' → logprob: -14.375012397766113
    6. ',to' → logprob: -15.750012397766113
    7. ')' → logprob: -16.62501335144043
    8. ' [' → logprob: -17.00001335144043
    9. '   ' → logprob: -17.50001335144043
    10. 'v' → logprob: -17.50001335144043

Token 810: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09051501750946045
    2. '])
' → logprob: -2.71551513671875
    3. ')' → logprob: -4.21551513671875
    4. '+' → logprob: -6.46551513671875
    5. '[' → logprob: -6.84051513671875
    6. ']+' → logprob: -7.21551513671875
    7. ')
' → logprob: -7.46551513671875
    8. ']' → logprob: -7.96551513671875
    9. ')+' → logprob: -7.96551513671875
    10. '])
' → logprob: -8.59051513671875

Token 811: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33061152696609497
    2. '   ' → logprob: -2.20561146736145
    3. '+' → logprob: -2.95561146736145
    4. ' +' → logprob: -3.08061146736145
    5. ',' → logprob: -3.33061146736145
    6. '
' → logprob: -4.330611705780029
    7. ')' → logprob: -4.830611705780029
    8. '<|end|>' → logprob: -5.205611705780029
    9. '```' → logprob: -5.205611705780029
    10. '           ' → logprob: -6.455611705780029

Token 812: ' h' (ID: 312)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8021875619888306
    2. '   ' → logprob: -1.4271875619888306
    3. ' cnt' → logprob: -1.6771875619888306
    4. '       ' → logprob: -3.177187442779541
    5. ' h' → logprob: -3.302187442779541
    6. 'cnt' → logprob: -3.427187442779541
    7. 'if' → logprob: -4.802187442779541
    8. 'h' (adapté à ' h') → logprob: -5.677187442779541
    9. '           ' → logprob: -7.802187442779541
    10. '```' → logprob: -8.0521879196167

Token 813: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.027795331552624702
    2. 'istory' → logprob: -3.6527953147888184
    3. '       ' → logprob: -7.277795314788818
    4. '   ' → logprob: -8.152795791625977
    5. '[' → logprob: -8.902795791625977
    6. 'ist' → logprob: -9.402795791625977
    7. '.append' → logprob: -10.402795791625977
    8. '=' → logprob: -10.652795791625977
    9. '+=' → logprob: -10.652795791625977
    10. '_list' → logprob: -10.652795791625977

Token 814: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014370749704539776
    2. '.' → logprob: -8.875144004821777
    3. ' .' → logprob: -13.875144004821777
    4. ',' → logprob: -14.125144004821777
    5. 'append' → logprob: -14.500144004821777
    6. '.app' → logprob: -14.500144004821777
    7. 'Append' → logprob: -14.750144004821777
    8. '   ' → logprob: -15.500144004821777
    9. '.extend' → logprob: -15.500144004821777
    10. '.push' → logprob: -16.50014305114746

Token 815: '(num' (ID: 15828)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.010352903977036476
    2. '(num' → logprob: -5.135353088378906
    3. '(to' → logprob: -5.885353088378906
    4. '(' → logprob: -6.885353088378906
    5. '(t' → logprob: -7.635353088378906
    6. '(('' → logprob: -9.385353088378906
    7. '((-' → logprob: -11.010353088378906
    8. '(("' → logprob: -11.885353088378906
    9. 'to' → logprob: -12.635353088378906
    10. 'num' → logprob: -12.760353088378906

Token 816: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1221487745642662
    2. ')
' → logprob: -2.3721487522125244
    3. '       ' → logprob: -3.8721487522125244
    4. '<|end|>' → logprob: -7.6221489906311035
    5. '   ' → logprob: -8.622148513793945
    6. ',' → logprob: -9.747148513793945
    7. '<|end|>' → logprob: -10.247148513793945
    8. ' )' → logprob: -10.997148513793945
    9. '           ' → logprob: -11.122148513793945
    10. ')
' → logprob: -11.497148513793945

Token 817: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17064855992794037
    2. '   ' → logprob: -2.4206485748291016
    3. '<|end|>' → logprob: -2.9206485748291016
    4. ',' → logprob: -4.920648574829102
    5. '
' → logprob: -6.545648574829102
    6. '           ' → logprob: -6.670648574829102
    7. '```' → logprob: -6.670648574829102
    8. ')' → logprob: -7.295648574829102
    9. '<|end|>' → logprob: -7.670648574829102
    10. ' return' → logprob: -8.420648574829102

Token 818: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006734438240528107
    2. '<|end|>' → logprob: -5.131734371185303
    3. '       ' → logprob: -8.756734848022461
    4. '
' → logprob: -9.006734848022461
    5. ')' → logprob: -9.131734848022461
    6. '    ' → logprob: -9.381734848022461
    7. ',' → logprob: -9.881734848022461
    8. '+' → logprob: -9.881734848022461
    9. ' ' → logprob: -10.506734848022461
    10. '[' → logprob: -10.631734848022461

Token 819: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0605679526925087
    2. '(cnt' → logprob: -3.310567855834961
    3. ' cnt' → logprob: -3.810567855834961
    4. ' (' → logprob: -9.560567855834961
    5. '[cnt' → logprob: -10.185567855834961
    6. '   ' → logprob: -10.810567855834961
    7. '	cnt' → logprob: -12.060567855834961
    8. '(' → logprob: -13.560567855834961
    9. ' ' → logprob: -13.935567855834961
    10. 'count' → logprob: -14.435567855834961

Token 820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012558852904476225
    2. '<|end|>' → logprob: -9.750125885009766
    3. ' ,' → logprob: -10.125125885009766
    4. ',
' → logprob: -11.125125885009766
    5. '   ' → logprob: -12.375125885009766
    6. ',h' → logprob: -13.375125885009766
    7. ',None' → logprob: -13.500125885009766
    8. ',v' → logprob: -14.250125885009766
    9. ',\
' → logprob: -14.875125885009766
    10. ')' → logprob: -14.875125885009766

Token 821: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.32146286964416504
    2. ' h' → logprob: -1.321462869644165
    3. '[h' → logprob: -4.946462631225586
    4. ' [' → logprob: -7.696462631225586
    5. '[' → logprob: -7.821462631225586
    6. '[]' → logprob: -9.821462631225586
    7. '	h' → logprob: -9.821462631225586
    8. '   ' → logprob: -10.321462631225586
    9. '(h' → logprob: -10.821462631225586
    10. ' []' → logprob: -11.571462631225586

Token 822: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.09858684986829758
    2. 'ist' → logprob: -2.4735867977142334
    3. '[' → logprob: -4.7235870361328125
    4. 'istory' → logprob: -8.223587036132812
    5. '['' → logprob: -8.848587036132812
    6. 'lst' → logprob: -9.348587036132812
    7. '[-' → logprob: -10.473587036132812
    8. '["' → logprob: -10.473587036132812
    9. '[]' → logprob: -10.723587036132812
    10. 'x' → logprob: -11.098587036132812

Token 823: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 824: 'def' (ID: 1314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1081947088241577
    2. '   ' → logprob: -1.2331947088241577
    3. '<|end|>' → logprob: -1.2331947088241577
    4. ')' → logprob: -3.3581948280334473
    5. '```' → logprob: -4.108194828033447
    6. ',' → logprob: -4.233194828033447
    7. 'def' → logprob: -4.858194828033447
    8. '
' → logprob: -5.858194828033447
    9. '        ' → logprob: -5.983194828033447
    10. '[' → logprob: -6.858194828033447

Token 825: ' subtract' (ID: 71973)
  Prédit: 'subtract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subtract' → logprob: -0.020566998049616814
    2. ' subtract' → logprob: -5.145566940307617
    3. 'add' → logprob: -5.770566940307617
    4. 'increase' → logprob: -6.020566940307617
    5. 'process' → logprob: -6.395566940307617
    6. 'def' → logprob: -6.520566940307617
    7. 'handle' → logprob: -7.145566940307617
    8. 'calc' → logprob: -7.395566940307617
    9. 'bit' → logprob: -7.520566940307617
    10. 'increment' → logprob: -7.520566940307617

Token 826: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.0002273774443892762
    2. '_' → logprob: -9.250226974487305
    3. '```' → logprob: -10.250226974487305
    4. '(' → logprob: -10.375226974487305
    5. '_com' → logprob: -10.500226974487305
    6. '_component' → logprob: -11.625226974487305
    7. '_parts' → logprob: -11.625226974487305
    8. '(_' → logprob: -12.625226974487305
    9. '_elements' → logprob: -12.750226974487305
    10. '_comp' → logprob: -13.125226974487305

Token 827: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.125015258789062
    3. '(answer' → logprob: -15.000015258789062
    4. '(
' → logprob: -16.375015258789062
    5. '(def' → logprob: -17.875015258789062
    6. ' (' → logprob: -19.000015258789062
    7. '(acc' → logprob: -19.125015258789062
    8. '(old' → logprob: -19.500015258789062
    9. '(prev' → logprob: -20.000015258789062
    10. '   ' → logprob: -20.000015258789062

Token 828: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002694416616577655
    2. '(ans' → logprob: -8.750269889831543
    3. ' ans' → logprob: -9.500269889831543
    4. ' ,' → logprob: -10.750269889831543
    5. '   ' → logprob: -11.250269889831543
    6. 'ans' → logprob: -14.000269889831543
    7. ',
' → logprob: -15.125269889831543
    8. '	ans' → logprob: -16.000268936157227
    9. '<|end|>' → logprob: -16.375268936157227
    10. '<|end|>' → logprob: -16.625268936157227

Token 829: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1133115142583847
    2. ' v' → logprob: -2.238311529159546
    3. '   ' → logprob: -8.863311767578125
    4. 'ans' → logprob: -9.363311767578125
    5. '_v' → logprob: -9.863311767578125
    6. ' ans' → logprob: -10.488311767578125
    7. 'vertex' → logprob: -10.863311767578125
    8. '```' → logprob: -10.988311767578125
    9. ' ' → logprob: -11.363311767578125
    10. '_' → logprob: -11.488311767578125

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014048899174667895
    2. ' ,' → logprob: -9.000140190124512
    3. '   ' → logprob: -11.500140190124512
    4. ',
' → logprob: -12.750140190124512
    5. ',v' → logprob: -13.625140190124512
    6. '-' → logprob: -14.000140190124512
    7. ' -' → logprob: -15.375140190124512
    8. 'def' → logprob: -15.500140190124512
    9. '),' → logprob: -15.750140190124512
    10. '_,' → logprob: -15.750140190124512

Token 831: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.09711813181638718
    2. ' cnt' → logprob: -2.8471181392669678
    3. 'history' → logprob: -3.7221181392669678
    4. 'h' → logprob: -5.597117900848389
    5. ' history' → logprob: -6.097117900848389
    6. 'ans' → logprob: -6.722117900848389
    7. ' ans' → logprob: -7.222117900848389
    8. 'v' → logprob: -8.097118377685547
    9. '1' → logprob: -8.097118377685547
    10. '-' → logprob: -8.347118377685547

Token 832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. '   ' → logprob: -11.375017166137695
    3. ' ,' → logprob: -12.375017166137695
    4. ',v' → logprob: -14.125017166137695
    5. ',
' → logprob: -14.250017166137695
    6. '):
' → logprob: -16.750017166137695
    7. '‌,' → logprob: -17.125017166137695
    8. '```' → logprob: -17.250017166137695
    9. '_,' → logprob: -17.625017166137695
    10. ',b' → logprob: -17.625017166137695

Token 833: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.49608319997787476
    2. ' es' → logprob: -1.1210832595825195
    3. 'bit' → logprob: -3.1210832595825195
    4. ' bit' → logprob: -3.8710832595825195
    5. '	es' → logprob: -9.99608325958252
    6. ',' → logprob: -10.37108325958252
    7. ' ' → logprob: -10.87108325958252
    8. '   ' → logprob: -10.87108325958252
    9. 'cs' → logprob: -11.87108325958252
    10. ' et' → logprob: -12.05858325958252

Token 834: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ' ,' → logprob: -11.87501049041748
    3. ',t' → logprob: -12.75001049041748
    4. ',
' → logprob: -15.25001049041748
    5. '<|end|>' → logprob: -15.87501049041748
    6. '   ' → logprob: -16.000011444091797
    7. ',v' → logprob: -17.000011444091797
    8. '[' → logprob: -17.125011444091797
    9. '_,' → logprob: -17.250011444091797
    10. '‌,' → logprob: -17.500011444091797

Token 835: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.20144207775592804
    2. ' tin' → logprob: -1.7014421224594116
    3. '   ' → logprob: -10.951441764831543
    4. ' ' → logprob: -13.076441764831543
    5. 't' → logprob: -13.076441764831543
    6. '  ' → logprob: -13.826441764831543
    7. '           ' → logprob: -14.201441764831543
    8. '```' → logprob: -14.576441764831543
    9. '    ' → logprob: -14.826441764831543
    10. 'Tin' → logprob: -14.826441764831543

Token 836: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017874970217235386
    2. ',t' → logprob: -9.125178337097168
    3. ' ,' → logprob: -9.875178337097168
    4. '   ' → logprob: -11.375178337097168
    5. ',
' → logprob: -13.250178337097168
    6. '<|end|>' → logprob: -13.250178337097168
    7. '[' → logprob: -13.500178337097168
    8. ')' → logprob: -14.625178337097168
    9. 'def' → logprob: -15.500178337097168
    10. '[t' → logprob: -15.625178337097168

Token 837: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.0017035098280757666
    2. ' tout' → logprob: -6.37670373916626
    3. 't' → logprob: -14.626703262329102
    4. '   ' → logprob: -15.126703262329102
    5. '        ' → logprob: -15.626703262329102
    6. '```' → logprob: -15.751703262329102
    7. '    ' → logprob: -16.3767032623291
    8. 'tou' → logprob: -16.5017032623291
    9. 'Tout' → logprob: -16.8767032623291
    10. '
' → logprob: -17.6267032623291

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',
' → logprob: -14.500001907348633
    4. '   ' → logprob: -16.625001907348633
    5. ' bit' → logprob: -17.375001907348633
    6. ',b' → logprob: -17.500001907348633
    7. 'bit' → logprob: -17.875001907348633
    8. '),' → logprob: -18.625001907348633
    9. '_,' → logprob: -18.625001907348633
    10. '```' → logprob: -19.500001907348633

Token 839: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0067156096920371056
    2. ' bit' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.256715774536133
    4. 'b' → logprob: -17.006715774536133
    5. ' ' → logprob: -17.631715774536133
    6. '```' → logprob: -17.881715774536133
    7. '(bit' → logprob: -18.381715774536133
    8. '_bit' → logprob: -19.006715774536133
    9. '.bit' → logprob: -19.131715774536133
    10. 'bitr' → logprob: -19.506715774536133

Token 840: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3915141355246305e-05
    2. '   ' → logprob: -10.75002384185791
    3. ' ,' → logprob: -13.62502384185791
    4. ',
' → logprob: -14.75002384185791
    5. ',h' → logprob: -15.12502384185791
    6. ',v' → logprob: -15.25002384185791
    7. ',b' → logprob: -16.875024795532227
    8. '):
' → logprob: -17.750024795532227
    9. ',y' → logprob: -17.750024795532227
    10. '       ' → logprob: -18.125024795532227

Token 841: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.004708038177341223
    2. ' history' → logprob: -5.3797078132629395
    3. '   ' → logprob: -9.379708290100098
    4. '
' → logprob: -13.879708290100098
    5. '    
' → logprob: -14.629708290100098
    6. ' ' → logprob: -14.879708290100098
    7. '  ' → logprob: -14.879708290100098
    8. '       ' → logprob: -15.379708290100098
    9. '    ' → logprob: -15.379708290100098
    10. '_history' → logprob: -16.00470733642578

Token 842: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.869017852295656e-06
    2. ',v' → logprob: -12.375006675720215
    3. ' ,' → logprob: -13.250006675720215
    4. '   ' → logprob: -14.250006675720215
    5. ',
' → logprob: -16.50000762939453
    6. '):
' → logprob: -17.00000762939453
    7. '):' → logprob: -17.50000762939453
    8. '_,' → logprob: -18.37500762939453
    9. ',y' → logprob: -18.50000762939453
    10. ')' → logprob: -19.12500762939453

Token 843: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.008977348916232586
    2. ' h' → logprob: -4.75897741317749
    3. '   ' → logprob: -8.258976936340332
    4. 'history' → logprob: -10.258976936340332
    5. 'v' → logprob: -10.883976936340332
    6. '    ' → logprob: -11.633976936340332
    7. '       ' → logprob: -11.758976936340332
    8. ' ' → logprob: -11.758976936340332
    9. '  ' → logprob: -12.008976936340332
    10. '	h' → logprob: -12.758976936340332

Token 844: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.5941604690160602e-05
    2. 'ist' → logprob: -10.625025749206543
    3. 'istory' → logprob: -14.375025749206543
    4. '_list' → logprob: -15.000025749206543
    5. 'ilist' → logprob: -15.375025749206543
    6. '[' → logprob: -16.00002670288086
    7. 'lst' → logprob: -16.87502670288086
    8. ' list' → logprob: -17.25002670288086
    9. 'ilst' → logprob: -17.62502670288086
    10. 'List' → logprob: -17.62502670288086

Token 845: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28835511207580566
    2. '):' → logprob: -1.5383551120758057
    3. '   ' → logprob: -3.7883551120758057
    4. ':' → logprob: -4.538354873657227
    5. ',' → logprob: -6.663354873657227
    6. ':
' → logprob: -6.913354873657227
    7. '):
' → logprob: -9.163354873657227
    8. ')' → logprob: -11.163354873657227
    9. '():
' → logprob: -11.413354873657227
    10. 'def' → logprob: -11.663354873657227

Token 846: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003917395602911711
    2. '```' → logprob: -5.878917217254639
    3. ' ans' → logprob: -8.003917694091797
    4. ' history' → logprob: -8.128917694091797
    5. '``' → logprob: -9.003917694091797
    6. '	ans' → logprob: -9.753917694091797
    7. '
' → logprob: -10.253917694091797
    8. '       ' → logprob: -10.378917694091797
    9. ',' → logprob: -10.378917694091797
    10. '    ' → logprob: -10.628917694091797

Token 847: ' cnt' (ID: 27340)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.19771292805671692
    2. '   ' → logprob: -2.0727128982543945
    3. ' ans' → logprob: -3.5727128982543945
    4. 'for' → logprob: -4.6977128982543945
    5. 'history' → logprob: -4.9477128982543945
    6. 'cnt' (adapté à ' cnt') → logprob: -5.6977128982543945
    7. 'bit' → logprob: -6.0727128982543945
    8. ' for' → logprob: -6.9477128982543945
    9. ' history' → logprob: -7.5727128982543945
    10. 'new' → logprob: -8.072712898254395

Token 848: '_local' (ID: 29253)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6912092566490173
    2. ',' → logprob: -1.816209316253662
    3. '-=' → logprob: -1.816209316253662
    4. '=' → logprob: -2.316209316253662
    5. ' +=' → logprob: -3.566209316253662
    6. '+=' → logprob: -3.816209316253662
    7. ' =' → logprob: -4.316209316253662
    8. '-' → logprob: -4.816209316253662
    9. '   ' → logprob: -6.191209316253662
    10. ' ,' → logprob: -8.191208839416504

Token 849: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19848138093948364
    2. '=' → logprob: -2.198481321334839
    3. ',' → logprob: -3.448481321334839
    4. ' +=' → logprob: -3.823481321334839
    5. ' -=' → logprob: -4.448481559753418
    6. '+=' → logprob: -6.073481559753418
    7. '-=' → logprob: -7.698481559753418
    8. ' ,' → logprob: -7.948481559753418
    9. '-' → logprob: -8.323481559753418
    10. '   ' → logprob: -8.698481559753418

Token 850: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8498812317848206
    2. ' cnt' → logprob: -1.2248811721801758
    3. '1' → logprob: -1.5998811721801758
    4. ' ' → logprob: -3.474881172180176
    5. '0' → logprob: -3.599881172180176
    6. ' ans' → logprob: -5.099881172180176
    7. '(cnt' → logprob: -6.099881172180176
    8. 'len' → logprob: -6.224881172180176
    9. 'ans' → logprob: -6.224881172180176
    10. ' len' → logprob: -6.349881172180176

Token 851: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3878280520439148
    2. '
' → logprob: -2.5128281116485596
    3. ' -' → logprob: -3.0128281116485596
    4. '-' → logprob: -3.0128281116485596
    5. '<|end|>' → logprob: -3.0128281116485596
    6. ' +' → logprob: -3.2628281116485596
    7. '+' → logprob: -3.8878281116485596
    8. ',' → logprob: -4.2628278732299805
    9. '<|end|>' → logprob: -5.1378278732299805
    10. 'def' → logprob: -5.2628278732299805

Token 852: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031537387520074844
    2. ' +' → logprob: -4.9065375328063965
    3. '-' → logprob: -5.0315375328063965
    4. ',' → logprob: -5.4065375328063965
    5. '
' → logprob: -5.7815375328063965
    6. '+' → logprob: -5.9065375328063965
    7. ' for' → logprob: -6.5315375328063965
    8. ' -' → logprob: -6.5315375328063965
    9. '<|end|>' → logprob: -6.6565375328063965
    10. '```' → logprob: -7.0315375328063965

Token 853: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.192124605178833
    2. 'history' → logprob: -2.067124605178833
    3. '   ' → logprob: -3.567124605178833
    4. ' for' → logprob: -4.817124366760254
    5. 'ans' → logprob: -5.442124366760254
    6. 'bit' → logprob: -5.567124366760254
    7. 'if' → logprob: -5.942124366760254
    8. ' history' → logprob: -7.442124366760254
    9. 'cnt' → logprob: -9.067124366760254
    10. '```' → logprob: -9.192124366760254

Token 854: ' ind' (ID: 1383)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1316847950220108
    2. 'h' → logprob: -2.8816847801208496
    3. 'x' → logprob: -3.6316847801208496
    4. 'i' → logprob: -4.50668478012085
    5. 'val' → logprob: -5.63168478012085
    6. 'to' → logprob: -5.63168478012085
    7. 'c' → logprob: -5.63168478012085
    8. 'cnt' → logprob: -5.63168478012085
    9. 'w' → logprob: -6.00668478012085
    10. 'idx' → logprob: -6.38168478012085

Token 855: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5308064818382263
    2. 'in' → logprob: -1.280806541442871
    3. ',' → logprob: -2.030806541442871
    4. ' ,' → logprob: -6.155806541442871
    5. '	in' → logprob: -8.905806541442871
    6. ' ' → logprob: -8.905806541442871
    7. ',v' → logprob: -9.155806541442871
    8. ',h' → logprob: -9.280806541442871
    9. '```' → logprob: -9.905806541442871
    10. '<|end|>' → logprob: -10.280806541442871

Token 856: ' to' (ID: 316)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2465052604675293
    2. 'h' → logprob: -2.1215052604675293
    3. 'x' → logprob: -3.2465052604675293
    4. 'val' → logprob: -4.121505260467529
    5. 'to' → logprob: -4.996505260467529
    6. 'c' → logprob: -4.996505260467529
    7. 'w' → logprob: -5.121505260467529
    8. 'value' → logprob: -5.621505260467529
    9. ' num' → logprob: -5.996505260467529
    10. 'cnt' → logprob: -5.996505260467529

Token 857: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.440934419631958
    2. ' in' → logprob: -1.065934419631958
    3. ',' → logprob: -4.440934181213379
    4. ' ,' → logprob: -9.315934181213379
    5. '_in' → logprob: -9.940934181213379
    6. ' ' → logprob: -10.565934181213379
    7. ')' → logprob: -10.690934181213379
    8. '	in' → logprob: -10.815934181213379
    9. 's' → logprob: -11.065934181213379
    10. ' _' → logprob: -11.440934181213379

Token 858: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.6015977263450623
    2. 'enumer' → logprob: -0.8515977263450623
    3. 'es' → logprob: -3.976597785949707
    4. ' es' → logprob: -6.601597785949707
    5. 'range' → logprob: -6.726597785949707
    6. ' zip' → logprob: -6.851597785949707
    7. 'zip' → logprob: -7.226597785949707
    8. 'h' → logprob: -7.351597785949707
    9. 'cs' → logprob: -7.476597785949707
    10. ' range' → logprob: -8.351597785949707

Token 859: '(es' (ID: 89947)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03860170394182205
    2. 'cs' → logprob: -3.4136016368865967
    3. 'h' → logprob: -5.788601875305176
    4. '(es' → logprob: -7.288601875305176
    5. 'history' → logprob: -7.913601875305176
    6. ' es' → logprob: -8.038601875305176
    7. 'bit' → logprob: -9.038601875305176
    8. '(cs' → logprob: -9.163601875305176
    9. '[' → logprob: -9.913601875305176
    10. 'range' → logprob: -10.163601875305176

Token 860: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0009155054576694965
    2. 'v' → logprob: -7.12591552734375
    3. '[' → logprob: -10.12591552734375
    4. ',v' → logprob: -11.37591552734375
    5. ')' → logprob: -11.62591552734375
    6. '   ' → logprob: -12.00091552734375
    7. ',' → logprob: -12.12591552734375
    8. ')v' → logprob: -12.25091552734375
    9. '[
' → logprob: -12.50091552734375
    10. 'def' → logprob: -12.62591552734375

Token 861: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.328386515378952
    2. ']):
' → logprob: -1.9533865451812744
    3. '[v' → logprob: -2.0783865451812744
    4. ']' → logprob: -4.828386306762695
    5. '])' → logprob: -6.953386306762695
    6. '][' → logprob: -7.078386306762695
    7. '[' → logprob: -7.203386306762695
    8. 'v' → logprob: -7.328386306762695
    9. ']:' → logprob: -7.578386306762695
    10. '],' → logprob: -8.203386306762695

Token 862: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03960032761096954
    2. ':' → logprob: -4.414600372314453
    3. ':
' → logprob: -4.539600372314453
    4. ' if' → logprob: -4.914600372314453
    5. '   ' → logprob: -5.664600372314453
    6. '[' → logprob: -6.789600372314453
    7. '      ' → logprob: -7.414600372314453
    8. '():
' → logprob: -7.414600372314453
    9. '<|end|>' → logprob: -7.914600372314453
    10. ',' → logprob: -7.914600372314453

Token 863: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.29205843806266785
    2. 'if' (adapté à ' if') → logprob: -1.5420584678649902
    3. '       ' → logprob: -3.9170584678649902
    4. '   ' → logprob: -5.04205846786499
    5. ':' → logprob: -5.29205846786499
    6. ' history' → logprob: -5.66705846786499
    7. 'history' → logprob: -6.91705846786499
    8. '           ' → logprob: -7.16705846786499
    9. ' ' → logprob: -8.167057991027832
    10. ' x' → logprob: -8.292057991027832

Token 864: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.012289006263017654
    2. ' tin' → logprob: -4.512289047241211
    3. '   ' → logprob: -7.137289047241211
    4. 'not' → logprob: -8.387289047241211
    5. '           ' → logprob: -10.012289047241211
    6. ' not' → logprob: -10.637289047241211
    7. '               ' → logprob: -10.762289047241211
    8. '       ' → logprob: -10.887289047241211
    9. 't' → logprob: -11.137289047241211
    10. ' ' → logprob: -11.762289047241211

Token 865: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -8.756989700486884e-05
    2. 'to' → logprob: -9.62508773803711
    3. '[' → logprob: -11.87508773803711
    4. '(to' → logprob: -12.37508773803711
    5. ' [' → logprob: -12.50008773803711
    6. '[v' → logprob: -12.75008773803711
    7. '   ' → logprob: -14.62508773803711
    8. '>' → logprob: -14.87508773803711
    9. ' to' → logprob: -15.00008773803711
    10. '<' → logprob: -15.12508773803711

Token 866: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02339210920035839
    2. '<' → logprob: -4.648392200469971
    3. ' >=' → logprob: -5.148392200469971
    4. ' >' → logprob: -5.523392200469971
    5. '>' → logprob: -6.898392200469971
    6. '[' → logprob: -6.898392200469971
    7. '<v' → logprob: -7.523392200469971
    8. '>=' → logprob: -7.648392200469971
    9. '[v' → logprob: -8.023391723632812
    10. ' <=' → logprob: -9.023391723632812

Token 867: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5354477763175964
    2. ' <' → logprob: -0.9104477763175964
    3. '>=' → logprob: -5.035447597503662
    4. ' >=' → logprob: -5.785447597503662
    5. '>' → logprob: -6.410447597503662
    6. '<v' → logprob: -7.535447597503662
    7. ' >' → logprob: -8.28544807434082
    8. '[' → logprob: -9.91044807434082
    9. '<=' → logprob: -10.66044807434082
    10. '<t' → logprob: -10.97294807434082

Token 868: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.005942779127508402
    2. ' tin' → logprob: -5.1309428215026855
    3. '0' → logprob: -12.880942344665527
    4. 'v' → logprob: -13.005942344665527
    5. '   ' → logprob: -13.255942344665527
    6. 't' → logprob: -13.255942344665527
    7. ' ' → logprob: -13.755942344665527
    8. 'vin' → logprob: -14.505942344665527
    9. 'Tin' → logprob: -14.630942344665527
    10. '	t' → logprob: -14.880942344665527

Token 869: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0006448837229982018
    2. 'v' → logprob: -7.375644683837891
    3. '(v' → logprob: -12.00064468383789
    4. '[to' → logprob: -12.37564468383789
    5. ' v' → logprob: -13.62564468383789
    6. '   ' → logprob: -13.62564468383789
    7. '<v' → logprob: -13.75064468383789
    8. '[' → logprob: -13.75064468383789
    9. '[t' → logprob: -14.37564468383789
    10. 'to' → logprob: -14.50064468383789

Token 870: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6142818927764893
    2. ':' → logprob: -1.2392818927764893
    3. '):' → logprob: -1.9892818927764893
    4. '           ' → logprob: -4.48928165435791
    5. '       ' → logprob: -4.73928165435791
    6. ']:
' → logprob: -5.48928165435791
    7. ':
' → logprob: -5.73928165435791
    8. '):
' → logprob: -6.23928165435791
    9. ':return' → logprob: -7.36428165435791
    10. ' or' → logprob: -7.48928165435791

Token 871: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.02437915839254856
    2. '           ' → logprob: -4.024379253387451
    3. 'continue' → logprob: -5.274379253387451
    4. '       ' → logprob: -7.149379253387451
    5. '	continue' → logprob: -9.274378776550293
    6. ' continues' → logprob: -9.399378776550293
    7. '+' → logprob: -10.149378776550293
    8. '               ' → logprob: -10.899378776550293
    9. '_continue' → logprob: -11.899378776550293
    10. '	       ' → logprob: -11.899378776550293

Token 872: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18917493522167206
    2. '   ' → logprob: -1.9391748905181885
    3. '           ' → logprob: -4.189175128936768
    4. '```' → logprob: -5.064175128936768
    5. ':
' → logprob: -5.564175128936768
    6. '<|end|>' → logprob: -7.314175128936768
    7. ',' → logprob: -7.564175128936768
    8. '):
' → logprob: -7.689175128936768
    9. ':' → logprob: -8.06417465209961
    10. '
' → logprob: -8.43917465209961

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01387704350054264
    2. '   ' → logprob: -5.013876914978027
    3. '           ' → logprob: -5.513876914978027
    4. ',' → logprob: -7.138876914978027
    5. ':' → logprob: -7.388876914978027
    6. '```' → logprob: -7.638876914978027
    7. ':
' → logprob: -8.138876914978027
    8. '+' → logprob: -8.388876914978027
    9. ' and' → logprob: -8.763876914978027
    10. ' +' → logprob: -8.888876914978027

Token 874: ' num' (ID: 2269)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.9890169501304626
    2. 'cnt' → logprob: -1.2390170097351074
    3. 'ans' → logprob: -2.1140170097351074
    4. '       ' → logprob: -2.8640170097351074
    5. 'history' → logprob: -2.9890170097351074
    6. 'num' (adapté à ' num') → logprob: -3.2390170097351074
    7. 'if' → logprob: -3.3640170097351074
    8. '   ' → logprob: -3.8640170097351074
    9. 'val' → logprob: -5.739017009735107
    10. 'ind' → logprob: -6.239017009735107

Token 875: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49978673458099365
    2. '=' → logprob: -0.9997867345809937
    3. ',' → logprob: -3.874786853790283
    4. '   ' → logprob: -6.249786853790283
    5. ' -=' → logprob: -6.499786853790283
    6. '-' → logprob: -7.749786853790283
    7. ' ,' → logprob: -8.624786376953125
    8. ' -' → logprob: -8.749786376953125
    9. '-=' → logprob: -9.374786376953125
    10. ' ' → logprob: -9.374786376953125

Token 876: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04522465169429779
    2. ' h' → logprob: -3.170224666595459
    3. 'bit' → logprob: -6.420224666595459
    4. ' bit' → logprob: -7.670224666595459
    5. '   ' → logprob: -10.0452241897583
    6. 'history' → logprob: -10.7952241897583
    7. '           ' → logprob: -11.1702241897583
    8. '       ' → logprob: -11.6702241897583
    9. '	h' → logprob: -11.6702241897583
    10. '-h' → logprob: -12.1702241897583

Token 877: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0015859126579016447
    2. 'istory' → logprob: -6.751585960388184
    3. '_list' → logprob: -9.251585960388184
    4. 'ist' → logprob: -9.376585960388184
    5. 'history' → logprob: -10.001585960388184
    6. 'old' → logprob: -10.376585960388184
    7. 'local' → logprob: -10.626585960388184
    8. '_history' → logprob: -11.001585960388184
    9. 'l' → logprob: -11.126585960388184
    10. '[' → logprob: -11.376585960388184

Token 878: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.375000953674316
    3. '       ' → logprob: -15.750000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '```' → logprob: -16.000001907348633
    6. ' [' → logprob: -16.625001907348633
    7. '[-' → logprob: -17.750001907348633
    8. 'ind' → logprob: -17.750001907348633
    9. '
' → logprob: -18.000001907348633
    10. '(ind' → logprob: -18.500001907348633

Token 879: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5290098190307617
    2. ']
' → logprob: -0.9040098190307617
    3. ']+' → logprob: -6.279009819030762
    4. ']-' → logprob: -6.279009819030762
    5. ')' → logprob: -7.029009819030762
    6. ')
' → logprob: -8.404009819030762
    7. '-' → logprob: -8.529009819030762
    8. '])' → logprob: -9.029009819030762
    9. ']
' → logprob: -9.154009819030762
    10. '   ' → logprob: -9.154009819030762

Token 880: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031846018973737955
    2. '   ' → logprob: -6.503184795379639
    3. '```' → logprob: -6.628184795379639
    4. ' bit' → logprob: -8.50318431854248
    5. 'bit' → logprob: -9.50318431854248
    6. '           ' → logprob: -10.25318431854248
    7. ',' → logprob: -11.50318431854248
    8. '``' → logprob: -12.00318431854248
    9. '
' → logprob: -12.12818431854248
    10. ' for' → logprob: -12.37818431854248

Token 881: ' ans' (ID: 3345)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6829097867012024
    2. '   ' → logprob: -1.5579097270965576
    3. 'ans' (adapté à ' ans') → logprob: -1.6829097270965576
    4. 'cnt' → logprob: -2.6829097270965576
    5. 'if' → logprob: -4.307909965515137
    6. 'history' → logprob: -4.682909965515137
    7. '       ' → logprob: -5.557909965515137
    8. ' ans' → logprob: -6.682909965515137
    9. ' bit' → logprob: -6.807909965515137
    10. ' cnt' → logprob: -8.057909965515137

Token 882: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.47515323758125305
    2. '-=' → logprob: -0.9751532077789307
    3. '-' → logprob: -7.35015344619751
    4. '   ' → logprob: -8.100152969360352
    5. '=' → logprob: -9.225152969360352
    6. '+=' → logprob: -11.600152969360352
    7. ' =' → logprob: -12.350152969360352
    8. '```' → logprob: -12.350152969360352
    9. '[' → logprob: -12.600152969360352
    10. '	' → logprob: -12.850152969360352

Token 883: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.013820844702422619
    2. '(num' → logprob: -5.013820648193359
    3. 'get' → logprob: -5.138820648193359
    4. ' num' → logprob: -7.388820648193359
    5. 'bit' → logprob: -8.38882064819336
    6. '(' → logprob: -9.01382064819336
    7. 'cnt' → logprob: -10.13882064819336
    8. '   ' → logprob: -10.26382064819336
    9. '((' → logprob: -10.26382064819336
    10. '(get' → logprob: -10.26382064819336

Token 884: '*(' (ID: 14793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16149789094924927
    2. '
' → logprob: -2.1614978313446045
    3. '   ' → logprob: -3.4114978313446045
    4. ' +' → logprob: -8.036498069763184
    5. '
' → logprob: -8.286498069763184
    6. '+' → logprob: -8.911498069763184
    7. '           ' → logprob: -9.661498069763184
    8. ',' → logprob: -10.286498069763184
    9. '```' → logprob: -10.411498069763184
    10. ')
' → logprob: -10.536498069763184

Token 885: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00034988581319339573
    2. '(num' → logprob: -8.000349998474121
    3. ' num' → logprob: -12.125349998474121
    4. '	num' → logprob: -12.875349998474121
    5. '=num' → logprob: -13.125349998474121
    6. '<num' → logprob: -13.750349998474121
    7. '$num' → logprob: -14.125349998474121
    8. 'cnt' → logprob: -14.375349998474121
    9. ')' → logprob: -14.750349998474121
    10. '[num' → logprob: -14.875349998474121

Token 886: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3338208794593811
    2. '-' → logprob: -1.7088208198547363
    3. ' +' → logprob: -2.7088208198547363
    4. ' -' → logprob: -3.3338208198547363
    5. ')' → logprob: -8.458821296691895
    6. '```' → logprob: -8.958821296691895
    7. '   ' → logprob: -9.583821296691895
    8. '<|end|>' → logprob: -11.458821296691895
    9. '
' → logprob: -11.708821296691895
    10. '+)' → logprob: -11.708821296691895

Token 887: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.717296517104842e-05
    2. '-' → logprob: -10.125057220458984
    3. '
' → logprob: -11.625057220458984
    4. '```' → logprob: -12.750057220458984
    5. ' ' → logprob: -13.250057220458984
    6. '   ' → logprob: -14.125057220458984
    7. '+' → logprob: -14.500057220458984
    8. ' -' → logprob: -15.250057220458984
    9. 'to' → logprob: -15.250057220458984
    10. 'def' → logprob: -15.375057220458984

Token 888: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.31347012519836426
    2. ')' → logprob: -1.3134701251983643
    3. ')>>' → logprob: -9.188469886779785
    4. ' )' → logprob: -9.313469886779785
    5. '//' → logprob: -11.688469886779785
    6. '   ' → logprob: -13.188469886779785
    7. ')
' → logprob: -13.313469886779785
    8. ')/' → logprob: -13.813469886779785
    9. ')`' → logprob: -14.563469886779785
    10. '```' → logprob: -14.938469886779785

Token 889: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -12.375012397766113
    3. '1' → logprob: -12.625012397766113
    4. '   ' → logprob: -12.750012397766113
    5. '```' → logprob: -13.625012397766113
    6. 'def' → logprob: -16.00001335144043
    7. '       ' → logprob: -16.25001335144043
    8. '  ' → logprob: -16.87501335144043
    9. '
' → logprob: -17.00001335144043
    10. 'from' → logprob: -17.00001335144043

Token 890: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1644005924463272
    2. '       ' → logprob: -2.164400577545166
    3. '
' → logprob: -3.414400577545166
    4. '```' → logprob: -6.289400577545166
    5. '           ' → logprob: -6.789400577545166
    6. '[' → logprob: -8.539401054382324
    7. ',' → logprob: -8.789401054382324
    8. '    
' → logprob: -9.289401054382324
    9. '<|end|>' → logprob: -9.539401054382324
    10. ' bit' → logprob: -9.664401054382324

Token 891: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03586624190211296
    2. '
' → logprob: -4.1608662605285645
    3. '```' → logprob: -4.9108662605285645
    4. '<|end|>' → logprob: -6.2858662605285645
    5. ',' → logprob: -6.4108662605285645
    6. '    
' → logprob: -6.5358662605285645
    7. '       ' → logprob: -6.5358662605285645
    8. ' ' → logprob: -6.5358662605285645
    9. ' 
' → logprob: -6.6608662605285645
    10. '  
' → logprob: -7.4108662605285645

Token 892: ' cnt' (ID: 27340)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.4653075635433197
    2. '   ' → logprob: -1.590307593345642
    3. 'history' → logprob: -1.840307593345642
    4. '       ' → logprob: -4.715307712554932
    5. ' bit' → logprob: -8.965307235717773
    6. 'for' → logprob: -9.340307235717773
    7. ' history' → logprob: -9.715307235717773
    8. 'cnt' (adapté à ' cnt') → logprob: -9.965307235717773
    9. '           ' → logprob: -10.090307235717773
    10. '```' → logprob: -10.965307235717773

Token 893: '_local' (ID: 29253)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3535745441913605
    2. '+=' → logprob: -2.103574514389038
    3. ' +=' → logprob: -2.228574514389038
    4. '-=' → logprob: -2.728574514389038
    5. '-' → logprob: -6.478574752807617
    6. '   ' → logprob: -7.103574752807617
    7. '=' → logprob: -8.353574752807617
    8. '    ' → logprob: -9.478574752807617
    9. '  ' → logprob: -10.478574752807617
    10. '+' → logprob: -10.603574752807617

Token 894: ' +=' (ID: 2757)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.9797373414039612
    2. ' +=' → logprob: -1.1047372817993164
    3. '+=' → logprob: -1.3547372817993164
    4. '-=' → logprob: -3.3547372817993164
    5. '-' → logprob: -8.479737281799316
    6. '   ' → logprob: -9.604737281799316
    7. '=' → logprob: -9.979737281799316
    8. '+' → logprob: -11.604737281799316
    9. '+=(' → logprob: -12.229737281799316
    10. ' ' → logprob: -12.604737281799316

Token 895: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0017195657128468156
    2. ' num' → logprob: -6.3767194747924805
    3. '1' → logprob: -11.37671947479248
    4. 'bit' → logprob: -12.50171947479248
    5. 'h' → logprob: -14.25171947479248
    6. '(num' → logprob: -14.87671947479248
    7. '	num' → logprob: -15.62671947479248
    8. 'n' → logprob: -15.87671947479248
    9. '   ' → logprob: -16.001720428466797
    10. ' ' → logprob: -16.251720428466797

Token 896: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014710577204823494
    2. '
' → logprob: -4.264710426330566
    3. ' history' → logprob: -8.389710426330566
    4. ',' → logprob: -9.389710426330566
    5. '       ' → logprob: -9.514710426330566
    6. '```' → logprob: -10.139710426330566
    7. 'history' → logprob: -10.514710426330566
    8. '
' → logprob: -10.514710426330566
    9. '    
' → logprob: -11.014710426330566
    10. 'History' → logprob: -11.264710426330566

Token 897: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037012822926044464
    2. 'history' → logprob: -3.537012815475464
    3. ' history' → logprob: -5.037013053894043
    4. '       ' → logprob: -7.412013053894043
    5. '```' → logprob: -9.287013053894043
    6. '
' → logprob: -10.912013053894043
    7. '           ' → logprob: -11.912013053894043
    8. '(history' → logprob: -12.037013053894043
    9. '_history' → logprob: -12.787013053894043
    10. 'def' → logprob: -13.037013053894043

Token 898: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.647729218006134
    2. 'history' → logprob: -0.772729218006134
    3. ' history' → logprob: -4.522729396820068
    4. 'ans' → logprob: -6.147729396820068
    5. 'bit' (adapté à ' bit') → logprob: -6.397729396820068
    6. ' ans' → logprob: -8.77272891998291
    7. ' bit' → logprob: -10.39772891998291
    8. 'for' → logprob: -10.52272891998291
    9. '_history' → logprob: -10.64772891998291
    10. 'answer' → logprob: -10.77272891998291

Token 899: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.000145137935760431
    2. '.' → logprob: -8.875144958496094
    3. '.remove' → logprob: -13.375144958496094
    4. ' .' → logprob: -13.875144958496094
    5. '   ' → logprob: -14.125144958496094
    6. '```' → logprob: -14.875144958496094
    7. '.bit' → logprob: -15.250144958496094
    8. '.delete' → logprob: -15.875144958496094
    9. '.subtract' → logprob: -16.000144958496094
    10. 'add' → logprob: -16.125144958496094

Token 900: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.875000953674316
    3. 't' → logprob: -15.250000953674316
    4. '	t' → logprob: -18.625001907348633
    5. '(v' → logprob: -18.875001907348633
    6. '(T' → logprob: -19.375001907348633
    7. '((' → logprob: -19.375001907348633
    8. '[t' → logprob: -19.750001907348633
    9. 's' → logprob: -20.375001907348633
    10. 'v' → logprob: -20.375001907348633

Token 901: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.007390333339571953
    2. '(in' → logprob: -5.88239049911499
    3. '[in' → logprob: -6.38239049911499
    4. '(t' → logprob: -6.50739049911499
    5. 'i' → logprob: -7.38239049911499
    6. 'tin' → logprob: -8.882390022277832
    7. '(v' → logprob: -9.132390022277832
    8. 'int' → logprob: -9.882390022277832
    9. ' in' → logprob: -10.257390022277832
    10. '   ' → logprob: -10.382390022277832

Token 902: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.020340995863080025
    2. '(v' → logprob: -4.020340919494629
    3. 'v' → logprob: -6.145340919494629
    4. '[' → logprob: -11.020340919494629
    5. ')v' → logprob: -11.270340919494629
    6. ')' → logprob: -12.645340919494629
    7. '```' → logprob: -12.645340919494629
    8. ',v' → logprob: -12.895340919494629
    9. '	v' → logprob: -13.270340919494629
    10. '<v' → logprob: -13.770340919494629

Token 903: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008983621373772621
    2. ' ,' → logprob: -7.875898361206055
    3. '[' → logprob: -8.250898361206055
    4. '],' → logprob: -8.625898361206055
    5. '),' → logprob: -10.500898361206055
    6. '   ' → logprob: -10.875898361206055
    7. '0' → logprob: -12.250898361206055
    8. '```' → logprob: -12.500898361206055
    9. ']' → logprob: -12.625898361206055
    10. '-' → logprob: -12.625898361206055

Token 904: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00325222359970212
    2. ' -' → logprob: -5.878252029418945
    3. '-w' → logprob: -9.253252029418945
    4. '-f' → logprob: -9.628252029418945
    5. '-int' → logprob: -10.003252029418945
    6. '-n' → logprob: -10.503252029418945
    7. '-l' → logprob: -10.878252029418945
    8. '-in' → logprob: -10.878252029418945
    9. '   ' → logprob: -11.003252029418945
    10. '-t' → logprob: -11.128252029418945

Token 905: 'cnt' (ID: 33160)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011796315666288137
    2. 'cnt' → logprob: -6.7511796951293945
    3. '   ' → logprob: -12.001179695129395
    4. ' ' → logprob: -14.126179695129395
    5. '(cnt' → logprob: -14.251179695129395
    6. '       ' → logprob: -14.876179695129395
    7. ' cnt' → logprob: -15.251179695129395
    8. '           ' → logprob: -15.501179695129395
    9. '	cnt' → logprob: -15.626179695129395
    10. '[cnt' → logprob: -16.063678741455078

Token 906: '_local' (ID: 29253)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01817791908979416
    2. ')
' → logprob: -4.0181779861450195
    3. '   ' → logprob: -10.64317798614502
    4. ')
' → logprob: -13.26817798614502
    5. '[' → logprob: -14.14317798614502
    6. ')

' → logprob: -14.76817798614502
    7. ' )' → logprob: -15.14317798614502
    8. ')return' → logprob: -15.14317798614502
    9. '<|end|>' → logprob: -16.018177032470703
    10. '1' → logprob: -16.268177032470703

Token 907: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003886086633428931
    2. ')
' → logprob: -7.8753886222839355
    3. ' )' → logprob: -12.625388145446777
    4. '<|end|>' → logprob: -12.750388145446777
    5. '   ' → logprob: -13.625388145446777
    6. ')return' → logprob: -14.250388145446777
    7. ')
' → logprob: -16.250389099121094
    8. ')#' → logprob: -16.375389099121094
    9. ')

' → logprob: -16.500389099121094
    10. '),' → logprob: -16.625389099121094

Token 908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015872348740231246
    2. 'history' → logprob: -9.625158309936523
    3. ' history' → logprob: -10.125158309936523
    4. '```' → logprob: -10.250158309936523
    5. 'return' → logprob: -11.625158309936523
    6. ' return' → logprob: -12.375158309936523
    7. '       ' → logprob: -13.375158309936523
    8. '[' → logprob: -14.000158309936523
    9. '    ' → logprob: -15.625158309936523
    10. '_history' → logprob: -15.750158309936523

Token 909: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' (adapté à ' history') → logprob: -0.0005588700296357274
    2. '   ' → logprob: -7.500558853149414
    3. ' history' → logprob: -12.125558853149414
    4. 'return' → logprob: -14.750558853149414
    5. '.history' → logprob: -17.375558853149414
    6. '(history' → logprob: -18.250558853149414
    7. '_history' → logprob: -18.375558853149414
    8. 'hist' → logprob: -18.500558853149414
    9. '-history' → logprob: -18.875558853149414
    10. '
' → logprob: -19.250558853149414

Token 910: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011783202644437551
    2. '.' → logprob: -6.75117826461792
    3. '.ap' → logprob: -12.626178741455078
    4. '.app' → logprob: -12.751178741455078
    5. 'append' → logprob: -14.501178741455078
    6. '.push' → logprob: -14.876178741455078
    7. '.extend' → logprob: -15.001178741455078
    8. ' .' → logprob: -15.376178741455078
    9. '=' → logprob: -16.251178741455078
    10. '.pop' → logprob: -16.376178741455078

Token 911: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08046647161245346
    2. '(t' → logprob: -2.5804665088653564
    3. '(' → logprob: -6.455466270446777
    4. '([' → logprob: -12.955466270446777
    5. '(T' → logprob: -14.955466270446777
    6. ' (' → logprob: -15.705466270446777
    7. '(v' → logprob: -15.830466270446777
    8. '(
' → logprob: -16.330467224121094
    9. '(('' → logprob: -16.705467224121094
    10. '(("' → logprob: -17.080467224121094

Token 912: 'tin' (ID: 63664)
  Prédit: 'tin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.00067966926144436
    2. '(t' → logprob: -7.3756794929504395
    3. ' tin' → logprob: -10.250679969787598
    4. '   ' → logprob: -12.000679969787598
    5. '(' → logprob: -12.625679969787598
    6. '(v' → logprob: -13.000679969787598
    7. ' (' → logprob: -13.750679969787598
    8. 'ti' → logprob: -14.625679969787598
    9. '[t' → logprob: -14.625679969787598
    10. '  ' → logprob: -14.750679969787598

Token 913: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.002193563850596547
    2. 'v' → logprob: -6.127193450927734
    3. ',v' → logprob: -13.127193450927734
    4. '[' → logprob: -13.377193450927734
    5. '<|end|>' → logprob: -13.502193450927734
    6. '(v' → logprob: -13.627193450927734
    7. '[
' → logprob: -14.502193450927734
    8. '	v' → logprob: -14.752193450927734
    9. ')v' → logprob: -14.877193450927734
    10. '```' → logprob: -15.002193450927734

Token 914: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009920800803229213
    2. '],' → logprob: -7.875992298126221
    3. ' ,' → logprob: -8.250991821289062
    4. '),' → logprob: -8.375991821289062
    5. ',c' → logprob: -9.750991821289062
    6. 'cnt' → logprob: -10.875991821289062
    7. '‌,' → logprob: -12.000991821289062
    8. '   ' → logprob: -12.000991821289062
    9. '[cnt' → logprob: -12.000991821289062
    10. ',
' → logprob: -12.625991821289062

Token 915: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.006422140169888735
    2. ' cnt' → logprob: -5.13142204284668
    3. '-c' → logprob: -7.75642204284668
    4. ' -' → logprob: -10.50642204284668
    5. '-' → logprob: -11.00642204284668
    6. '	cnt' → logprob: -12.00642204284668
    7. '(cnt' → logprob: -12.00642204284668
    8. '   ' → logprob: -13.38142204284668
    9. '[cnt' → logprob: -13.50642204284668
    10. ')' → logprob: -14.13142204284668

Token 916: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -6.511406809295295e-06
    2. 'local' → logprob: -12.125006675720215
    3. 'ocal' → logprob: -14.000006675720215
    4. '_LOCAL' → logprob: -16.7500057220459
    5. 'Local' → logprob: -17.2500057220459
    6. ')local' → logprob: -17.2500057220459
    7. '_loc' → logprob: -17.6250057220459
    8. '))' → logprob: -18.0000057220459
    9. ')' → logprob: -18.2500057220459
    10. ' local' → logprob: -18.3750057220459

Token 917: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0855054184794426
    2. ')' → logprob: -2.585505485534668
    3. '))
' → logprob: -5.085505485534668
    4. ')
' → logprob: -7.835505485534668
    5. '   ' → logprob: -11.585505485534668
    6. ')))' → logprob: -13.835505485534668
    7. ',' → logprob: -14.085505485534668
    8. '))

' → logprob: -14.585505485534668
    9. '));' → logprob: -14.710505485534668
    10. ' ))' → logprob: -15.960505485534668

Token 918: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027815964072942734
    2. 'def' → logprob: -3.6528160572052
    3. '<|end|>' → logprob: -6.777815818786621
    4. '```' → logprob: -8.152815818786621
    5. ')' → logprob: -10.402815818786621
    6. '       ' → logprob: -10.777815818786621
    7. '[]' → logprob: -11.402815818786621
    8. '...' → logprob: -12.027815818786621
    9. '[' → logprob: -12.277815818786621
    10. '.' → logprob: -12.902815818786621

Token 919: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010318557906430215
    2. '       ' → logprob: -10.625102996826172
    3. '```' → logprob: -10.625102996826172
    4. '<|end|>' → logprob: -10.875102996826172
    5. 'return' (adapté à ' return') → logprob: -11.250102996826172
    6. '   ' → logprob: -11.875102996826172
    7. '...' → logprob: -12.875102996826172
    8. '(' → logprob: -12.875102996826172
    9. '	return' → logprob: -13.000102996826172
    10. '[' → logprob: -13.375102996826172

Token 920: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001860174525063485
    2. '(ans' → logprob: -8.7501859664917
    3. ' ans' → logprob: -10.5001859664917
    4. '   ' → logprob: -17.875186920166016
    5. '	ans' → logprob: -18.875186920166016
    6. '(' → logprob: -19.625186920166016
    7. ' (' → logprob: -21.000186920166016
    8. '_ans' → logprob: -21.375186920166016
    9. 'answer' → logprob: -21.750186920166016
    10. '0' → logprob: -21.750186920166016

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002844460541382432
    2. 'history' → logprob: -6.002844333648682
    3. 'def' → logprob: -8.62784481048584
    4. ',h' → logprob: -10.25284481048584
    5. ',v' → logprob: -10.62784481048584
    6. ' history' → logprob: -10.75284481048584
    7. ' ,' → logprob: -10.87784481048584
    8. '<|end|>' → logprob: -11.00284481048584
    9. '(history' → logprob: -11.12784481048584
    10. ',
' → logprob: -11.62784481048584

Token 922: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.00023119196703191847
    2. ' history' → logprob: -8.62523078918457
    3. '(history' → logprob: -9.87523078918457
    4. '   ' → logprob: -17.25023078918457
    5. 'histor' → logprob: -17.25023078918457
    6. '.history' → logprob: -17.62523078918457
    7. '_history' → logprob: -18.62523078918457
    8. 'hist' → logprob: -18.75023078918457
    9. 'h' → logprob: -18.87523078918457
    10. '/history' → logprob: -19.37523078918457

Token 923: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023265292402356863
    2. '<|end|>' → logprob: -6.127326488494873
    3. '```' → logprob: -9.002326965332031
    4. '#' → logprob: -11.752326965332031
    5. '<|end|>' → logprob: -12.627326965332031
    6. ')' → logprob: -13.127326965332031
    7. ' def' → logprob: -13.252326965332031
    8. '
' → logprob: -14.377326965332031
    9. 'ndef' → logprob: -15.002326965332031
    10. '``' → logprob: -15.127326965332031

Token 924: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.8325677703833207e-05
    2. '```' → logprob: -10.500028610229492
    3. 'Def' → logprob: -15.750028610229492
    4. '#' → logprob: -16.000028610229492
    5. '
' → logprob: -16.000028610229492
    6. 'ndef' → logprob: -16.125028610229492
    7. 'The' → logprob: -16.750028610229492
    8. ' def' → logprob: -17.000028610229492
    9. '``' → logprob: -17.375028610229492
    10. '[' → logprob: -17.875028610229492

Token 925: ' handle' (ID: 5318)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006217320449650288
    2. 'handle' → logprob: -5.2562174797058105
    3. 'solve' → logprob: -7.6312174797058105
    4. 'calc' → logprob: -8.756217002868652
    5. ' main' → logprob: -9.756217002868652
    6. 'calculate' → logprob: -9.756217002868652
    7. 'def' → logprob: -9.756217002868652
    8. 'prepare' → logprob: -10.131217002868652
    9. 'process' → logprob: -10.381217002868652
    10. 'run' → logprob: -10.506217002868652

Token 926: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.002721183467656374
    2. 'bit' → logprob: -6.877721309661865
    3. '_sub' → logprob: -7.002721309661865
    4. '_bit' → logprob: -7.877721309661865
    5. '_wh' → logprob: -9.127720832824707
    6. 'Remaining' → logprob: -9.127720832824707
    7. 'remaining' → logprob: -9.252720832824707
    8. '(bit' → logprob: -10.627720832824707
    9. 'def' → logprob: -11.127720832824707
    10. '```' → logprob: -11.502720832824707

Token 927: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.005484660156071186
    2. 'sub' → logprob: -5.630484580993652
    3. '_bit' → logprob: -7.255484580993652
    4. 'bit' → logprob: -7.255484580993652
    5. 'def' → logprob: -8.380484580993652
    6. '(bit' → logprob: -8.505484580993652
    7. '```' → logprob: -10.880484580993652
    8. 'Sub' → logprob: -12.255484580993652
    9. '_subset' → logprob: -13.380484580993652
    10. '_remaining' → logprob: -13.380484580993652

Token 928: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.00016992862219922245
    2. 'ree' → logprob: -9.62516975402832
    3. '(tree' → logprob: -9.87516975402832
    4. 'tre' → logprob: -10.37516975402832
    5. 't' → logprob: -11.62516975402832
    6. '_tree' → logprob: -11.87516975402832
    7. 'bit' → logprob: -13.37516975402832
    8. 'trees' → logprob: -13.50016975402832
    9. '(bit' → logprob: -14.00016975402832
    10. 'TREE' → logprob: -15.00016975402832

Token 929: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.625001907348633
    3. '(def' → logprob: -14.625001907348633
    4. '(Bit' → logprob: -14.875001907348633
    5. '(b' → logprob: -15.625001907348633
    6. 'def' → logprob: -16.875001907348633
    7. '(bits' → logprob: -17.000001907348633
    8. ' (' → logprob: -17.375001907348633
    9. '(bin' → logprob: -19.000001907348633
    10. '(bt' → logprob: -19.625001907348633

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -13.50000286102295
    3. ',N' → logprob: -13.87500286102295
    4. 'def' → logprob: -15.50000286102295
    5. ',
' → logprob: -15.50000286102295
    6. ' bit' → logprob: -16.125003814697266
    7. '(bit' → logprob: -17.000003814697266
    8. '   ' → logprob: -18.000003814697266
    9. '```' → logprob: -18.250003814697266
    10. 'bit' → logprob: -18.250003814697266

Token 931: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.016108034178614616
    2. ' N' → logprob: -4.14110803604126
    3. 'size' → logprob: -10.516107559204102
    4. 'bit' → logprob: -10.891107559204102
    5. 'n' → logprob: -11.641107559204102
    6. ' bit' → logprob: -12.391107559204102
    7. ' size' → logprob: -12.391107559204102
    8. '   ' → logprob: -12.516107559204102
    9. ',' → logprob: -13.766107559204102
    10. ',N' → logprob: -13.891107559204102

Token 932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',
' → logprob: -14.750003814697266
    4. '   ' → logprob: -15.250003814697266
    5. ',b' → logprob: -17.250003814697266
    6. '(bit' → logprob: -17.250003814697266
    7. ' bit' → logprob: -17.875003814697266
    8. 'def' → logprob: -17.875003814697266
    9. 'bit' → logprob: -18.875003814697266
    10. '```' → logprob: -19.250003814697266

Token 933: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014170088805258274
    2. ' ans' → logprob: -4.264170169830322
    3. '   ' → logprob: -12.514169692993164
    4. '	ans' → logprob: -13.889169692993164
    5. 'bit' → logprob: -14.389169692993164
    6. '(ans' → logprob: -14.639169692993164
    7. 'answer' → logprob: -15.264169692993164
    8. ' ' → logprob: -16.014169692993164
    9. '```' → logprob: -16.389169692993164
    10. ')' → logprob: -16.764169692993164

Token 934: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015574880875647068
    2. '   ' → logprob: -4.640574932098389
    3. '):' → logprob: -5.640574932098389
    4. '):
' → logprob: -6.140574932098389
    5. '(bit' → logprob: -10.01557445526123
    6. ':' → logprob: -11.01557445526123
    7. ')' → logprob: -11.76557445526123
    8. '):
' → logprob: -12.01557445526123
    9. ' bit' → logprob: -12.01557445526123
    10. ',b' → logprob: -12.39057445526123

Token 935: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44326990842819214
    2. 'pn' → logprob: -1.068269968032837
    3. 'cnt' → logprob: -4.443269729614258
    4. ' pn' → logprob: -6.068269729614258
    5. ' cnt' → logprob: -9.318269729614258
    6. 'p' → logprob: -9.443269729614258
    7. 'num' → logprob: -9.443269729614258
    8. '```' → logprob: -9.818269729614258
    9. 'bit' → logprob: -11.318269729614258
    10. '``' → logprob: -11.943269729614258

Token 936: ' pn' (ID: 80046)
  Prédit: 'pn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pn' (adapté à ' pn') → logprob: -0.001140453852713108
    2. 'cnt' → logprob: -6.876140594482422
    3. '   ' → logprob: -10.626140594482422
    4. 'p' → logprob: -10.751140594482422
    5. 'ans' → logprob: -11.001140594482422
    6. 'num' → logprob: -11.751140594482422
    7. 'return' → logprob: -12.001140594482422
    8. ' pn' → logprob: -12.501140594482422
    9. 'rest' → logprob: -13.001140594482422
    10. 'last' → logprob: -13.001140594482422

Token 937: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4305606186389923
    2. '=' → logprob: -1.05556058883667
    3. ',' → logprob: -6.30556058883667
    4. '=sum' → logprob: -11.305561065673828
    5. '   ' → logprob: -11.805561065673828
    6. 'sum' → logprob: -13.055561065673828
    7. 'def' → logprob: -13.180561065673828
    8. '=int' → logprob: -13.305561065673828
    9. '_sum' → logprob: -14.055561065673828
    10. 'num' → logprob: -14.305561065673828

Token 938: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0036805979907512665
    2. ' bit' → logprob: -5.75368070602417
    3. 'Binary' → logprob: -7.87868070602417
    4. 'bin' → logprob: -9.878680229187012
    5. '0' → logprob: -11.253680229187012
    6. '(bit' → logprob: -11.628680229187012
    7. ' Binary' → logprob: -11.878680229187012
    8. '1' → logprob: -12.003680229187012
    9. 'Bit' → logprob: -12.128680229187012
    10. 'N' → logprob: -12.253680229187012

Token 939: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.18082775175571442
    2. '._' → logprob: -1.8058277368545532
    3. '.' → logprob: -7.430827617645264
    4. '_sum' → logprob: -8.430828094482422
    5. 'sum' → logprob: -8.930828094482422
    6. ' .' → logprob: -9.430828094482422
    7. '   ' → logprob: -10.430828094482422
    8. '[' → logprob: -11.805828094482422
    9. '(' → logprob: -12.180828094482422
    10. '.N' → logprob: -13.180828094482422

Token 940: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031840058509260416
    2. '0' → logprob: -5.753183841705322
    3. ' (' → logprob: -12.75318431854248
    4. 'def' → logprob: -13.62818431854248
    5. '   ' → logprob: -13.75318431854248
    6. ' ' → logprob: -15.25318431854248
    7. 't' → logprob: -16.378183364868164
    8. '[' → logprob: -16.503183364868164
    9. '1' → logprob: -16.753183364868164
    10. '```' → logprob: -16.815683364868164

Token 941: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004533142491709441
    2. '(' → logprob: -7.750453472137451
    3. '   ' → logprob: -11.625452995300293
    4. ' ' → logprob: -11.750452995300293
    5. ')' → logprob: -12.875452995300293
    6. '1' → logprob: -14.125452995300293
    7. '       ' → logprob: -14.750452995300293
    8. '  ' → logprob: -15.125452995300293
    9. '     ' → logprob: -15.125452995300293
    10. '    ' → logprob: -15.375452995300293

Token 942: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004541673231869936
    2. '(' → logprob: -6.254541873931885
    3. ',N' → logprob: -6.504541873931885
    4. '(N' → logprob: -7.129541873931885
    5. ' ,' → logprob: -9.004541397094727
    6. '0' → logprob: -9.254541397094727
    7. '   ' → logprob: -9.754541397094727
    8. 'N' → logprob: -10.629541397094727
    9. '1' → logprob: -12.754541397094727
    10. 'def' → logprob: -13.129541397094727

Token 943: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.796184723294573e-06
    2. 'bit' → logprob: -12.750005722045898
    3. ' N' → logprob: -13.000005722045898
    4. '   ' → logprob: -15.250005722045898
    5. '	N' → logprob: -16.3750057220459
    6. 'len' → logprob: -16.5000057220459
    7. '>N' → logprob: -17.2500057220459
    8. '_N' → logprob: -18.5000057220459
    9. ' bit' → logprob: -18.7500057220459
    10. '  ' → logprob: -18.7500057220459

Token 944: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0495028980076313
    2. ')
' → logprob: -3.0495028495788574
    3. ',' → logprob: -7.299502849578857
    4. '   ' → logprob: -8.424503326416016
    5. ' )' → logprob: -12.049503326416016
    6. '),' → logprob: -12.799503326416016
    7. ')
' → logprob: -13.174503326416016
    8. 'def' → logprob: -13.674503326416016
    9. ' )
' → logprob: -13.799503326416016
    10. ')

' → logprob: -13.924503326416016

Token 945: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013059526681900024
    2. ' ans' → logprob: -7.126306056976318
    3. 'ans' → logprob: -7.876306056976318
    4. '	ans' → logprob: -9.37630558013916
    5. '(ans' → logprob: -11.00130558013916
    6. ',' → logprob: -11.00130558013916
    7. '_ans' → logprob: -13.50130558013916
    8. '
' → logprob: -14.12630558013916
    9. '  ' → logprob: -14.62630558013916
    10. '```' → logprob: -15.62630558013916

Token 946: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.8074162653647363e-05
    2. 'return' → logprob: -11.500018119812012
    3. ' ans' → logprob: -12.250018119812012
    4. '   ' → logprob: -12.750018119812012
    5. 'new' → logprob: -16.625017166137695
    6. '	ans' → logprob: -16.750017166137695
    7. 'if' → logprob: -16.875017166137695
    8. '(ans' → logprob: -17.750017166137695
    9. 'res' → logprob: -18.875017166137695
    10. 'answer' → logprob: -19.500017166137695

Token 947: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.2907935082912445
    2. ' -=' → logprob: -1.415793538093567
    3. '+=' → logprob: -5.165793418884277
    4. '=' → logprob: -6.415793418884277
    5. '   ' → logprob: -7.290793418884277
    6. '-' → logprob: -7.540793418884277
    7. ',' → logprob: -7.540793418884277
    8. ' +=' → logprob: -7.665793418884277
    9. ' =' → logprob: -10.915793418884277
    10. '  ' → logprob: -12.415793418884277

Token 948: ' pn' (ID: 80046)
  Prédit: 'pn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pn' → logprob: -0.0011715330183506012
    2. ' pn' → logprob: -6.751171588897705
    3. 'get' → logprob: -14.251171112060547
    4. '   ' → logprob: -14.751171112060547
    5. '
' → logprob: -16.126171112060547
    6. ' ' → logprob: -17.376171112060547
    7. '  ' → logprob: -17.626171112060547
    8. ' get' → logprob: -18.126171112060547
    9. '```' → logprob: -18.376171112060547
    10. '(p' → logprob: -18.626171112060547

Token 949: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.014176442287862301
    2. '*' → logprob: -4.264176368713379
    3. '(p' → logprob: -12.264176368713379
    4. '*p' → logprob: -12.389176368713379
    5. 'pn' → logprob: -12.889176368713379
    6. ' *' → logprob: -14.139176368713379
    7. '*((' → logprob: -15.014176368713379
    8. 'PN' → logprob: -16.389177322387695
    9. '*[' → logprob: -16.389177322387695
    10. '
' → logprob: -16.389177322387695

Token 950: 'pn' (ID: 25801)
  Prédit: 'pn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pn' → logprob: -3.054500666621607e-06
    2. ' pn' → logprob: -13.50000286102295
    3. 'p' → logprob: -13.87500286102295
    4. '1' → logprob: -14.62500286102295
    5. 'pmn' → logprob: -16.375003814697266
    6. '(p' → logprob: -16.625003814697266
    7. 'pm' → logprob: -19.625003814697266
    8. '```' → logprob: -20.500003814697266
    9. 'pq' → logprob: -20.625003814697266
    10. 'PN' → logprob: -20.875003814697266

Token 951: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.749814019713085e-06
    2. ' +' → logprob: -12.000006675720215
    3. '-' → logprob: -15.375006675720215
    4. '1' → logprob: -16.00000762939453
    5. '```' → logprob: -16.50000762939453
    6. '+
' → logprob: -17.37500762939453
    7. '   ' → logprob: -17.50000762939453
    8. '()+' → logprob: -17.87500762939453
    9. '+)' → logprob: -19.25000762939453
    10. '＋' → logprob: -19.87500762939453

Token 952: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. '+' → logprob: -11.375021934509277
    3. ' ' → logprob: -12.375021934509277
    4. '
' → logprob: -13.500021934509277
    5. '```' → logprob: -13.500021934509277
    6. '=' → logprob: -13.625021934509277
    7. '   ' → logprob: -13.750021934509277
    8. '-' → logprob: -15.250021934509277
    9. '{' → logprob: -16.125022888183594
    10. '``' → logprob: -16.500022888183594

Token 953: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6460502743721008
    2. ')//' → logprob: -0.7710502743721008
    3. ')' → logprob: -5.021050453186035
    4. '()' → logprob: -5.146050453186035
    5. ' //' → logprob: -7.646050453186035
    6. '   ' → logprob: -8.521050453186035
    7. '```' → logprob: -9.146050453186035
    8. ')>>' → logprob: -9.896050453186035
    9. 'def' → logprob: -10.646050453186035
    10. ' ' → logprob: -10.896050453186035

Token 954: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.125001907348633
    3. '1' → logprob: -15.125001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '```' → logprob: -16.125001907348633
    6. '
' → logprob: -17.250001907348633
    7. '0' → logprob: -17.687501907348633
    8. '=' → logprob: -18.062501907348633
    9. '       ' → logprob: -18.437501907348633
    10. '4' → logprob: -18.437501907348633

Token 955: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005172899691388011
    2. 'return' → logprob: -7.75051736831665
    3. ' return' → logprob: -9.375516891479492
    4. '	return' → logprob: -13.750516891479492
    5. ',' → logprob: -14.375516891479492
    6. '```' → logprob: -16.125516891479492
    7. '_return' → logprob: -17.125516891479492
    8. '{return' → logprob: -17.375516891479492
    9. ':return' → logprob: -17.500516891479492
    10. '       ' → logprob: -18.375516891479492

Token 956: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.704273118884885e-07
    2. 'return' → logprob: -15.125000953674316
    3. '```' → logprob: -15.250000953674316
    4. ' return' → logprob: -17.125
    5. '	return' → logprob: -17.875
    6. '       ' → logprob: -18.375
    7. '<|end|>' → logprob: -19.375
    8. '   ' → logprob: -19.75
    9. ',' → logprob: -20.125
    10. '  ' → logprob: -20.75

Token 957: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1604471206665039
    2. '   ' → logprob: -1.910447120666504
    3. ' return' → logprob: -8.410447120666504
    4. '	return' → logprob: -16.160446166992188
    5. ' ' → logprob: -16.535446166992188
    6. '  ' → logprob: -16.535446166992188
    7. 'def' → logprob: -16.785446166992188
    8. '
' → logprob: -17.410446166992188
    9. 'eturn' → logprob: -17.785446166992188
    10. '```' → logprob: -18.285446166992188

Token 958: ' pn' (ID: 80046)
  Prédit: 'pn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pn' → logprob: -2.463036435074173e-05
    2. ' pn' → logprob: -10.625024795532227
    3. '(p' → logprob: -15.375024795532227
    4. '0' → logprob: -17.500024795532227
    5. '-' → logprob: -17.875024795532227
    6. '(' → logprob: -17.875024795532227
    7. 'history' → logprob: -18.500024795532227
    8. 'ans' → logprob: -19.500024795532227
    9. '(-' → logprob: -20.250024795532227
    10. '-p' → logprob: -20.250024795532227

Token 959: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ' ,' → logprob: -13.000003814697266
    3. 'def' → logprob: -14.000003814697266
    4. '   ' → logprob: -14.500003814697266
    5. ',
' → logprob: -17.000003814697266
    6. '```' → logprob: -17.125003814697266
    7. 'import' → logprob: -18.250003814697266
    8. ' ans' → logprob: -19.250003814697266
    9. 'ans' → logprob: -19.500003814697266
    10. 'and' → logprob: -19.750003814697266

Token 960: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00020377879263833165
    2. ' ans' → logprob: -8.500204086303711
    3. '(ans' → logprob: -16.00020408630371
    4. '	ans' → logprob: -16.62520408630371
    5. 'answer' → logprob: -18.12520408630371
    6. '   ' → logprob: -18.25020408630371
    7. 'an' → logprob: -18.37520408630371
    8. 'ann' → logprob: -18.87520408630371
    9. '_ans' → logprob: -19.62520408630371
    10. 'anst' → logprob: -19.87520408630371

Token 961: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8193366486229934e-05
    2. '<|end|>' → logprob: -11.375018119812012
    3. '```' → logprob: -12.125018119812012
    4. ' def' → logprob: -14.625018119812012
    5. '
' → logprob: -15.750018119812012
    6. 'import' → logprob: -15.750018119812012
    7. '#' → logprob: -15.875018119812012
    8. '<|end|>' → logprob: -17.000019073486328
    9. '   ' → logprob: -17.375019073486328
    10. 'return' → logprob: -17.375019073486328

Token 962: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -12.875003814697266
    3. ' def' → logprob: -15.000003814697266
    4. '#' → logprob: -15.625003814697266
    5. '<|end|>' → logprob: -15.875003814697266
    6. 'from' → logprob: -16.125003814697266
    7. 'de' → logprob: -17.750003814697266
    8. 'import' → logprob: -17.750003814697266
    9. 'ndef' → logprob: -18.000003814697266
    10. ':def' → logprob: -18.375003814697266

Token 963: ' restore' (ID: 24540)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0010884242365136743
    2. 'def' → logprob: -7.001088619232178
    3. ' main' → logprob: -9.00108814239502
    4. 'restore' → logprob: -10.00108814239502
    5. '__' → logprob: -12.50108814239502
    6. 'solve' → logprob: -13.37608814239502
    7. 'run' → logprob: -14.00108814239502
    8. '_main' → logprob: -14.12608814239502
    9. 'read' → logprob: -14.62608814239502
    10. 'process' → logprob: -14.87608814239502

Token 964: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.003448729868978262
    2. 'def' → logprob: -6.378448963165283
    3. 'bit' → logprob: -6.628448963165283
    4. '(bit' → logprob: -8.003448486328125
    5. '```' → logprob: -9.878448486328125
    6. '_def' → logprob: -10.878448486328125
    7. '_state' → logprob: -11.753448486328125
    8. '_bits' → logprob: -11.878448486328125
    9. ' bit' → logprob: -13.378448486328125
    10. '_BIT' → logprob: -14.128448486328125

Token 965: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.048716362565755844
    2. '(bit' → logprob: -3.0487163066864014
    3. '_states' → logprob: -9.92371654510498
    4. 'state' → logprob: -10.42371654510498
    5. '```' → logprob: -11.42371654510498
    6. '(' → logprob: -11.67371654510498
    7. 'State' → logprob: -11.92371654510498
    8. '(def' → logprob: -12.29871654510498
    9. '_STATE' → logprob: -12.42371654510498
    10. 'def' → logprob: -12.42371654510498

Token 966: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -7.896309739408025e-07
    2. 'def' → logprob: -15.000000953674316
    3. '(def' → logprob: -15.250000953674316
    4. '(Bit' → logprob: -16.375
    5. '(b' → logprob: -17.0
    6. '(bits' → logprob: -17.125
    7. '(tree' → logprob: -18.25
    8. '```' → logprob: -18.875
    9. ' (' → logprob: -19.25
    10. 'bit' → logprob: -19.875

Token 967: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. '(bit' → logprob: -11.875008583068848
    3. ' ,' → logprob: -14.125008583068848
    4. ' bit' → logprob: -15.125008583068848
    5. '(history' → logprob: -15.500008583068848
    6. 'bit' → logprob: -15.500008583068848
    7. ',b' → logprob: -16.500009536743164
    8. '   ' → logprob: -17.125009536743164
    9. 'history' → logprob: -18.125009536743164
    10. ',
' → logprob: -18.625009536743164

Token 968: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.0007099286303855479
    2. ' history' → logprob: -7.2507100105285645
    3. '(history' → logprob: -17.000709533691406
    4. '   ' → logprob: -17.125709533691406
    5. '_history' → logprob: -17.875709533691406
    6. '.history' → logprob: -19.250709533691406
    7. 'hist' → logprob: -20.000709533691406
    8. 'History' → logprob: -20.250709533691406
    9. 'h' → logprob: -20.250709533691406
    10. ' ' → logprob: -20.375709533691406

Token 969: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021320602390915155
    2. '(bit' → logprob: -6.252131938934326
    3. '   ' → logprob: -9.377132415771484
    4. '):
' → logprob: -9.752132415771484
    5. '):' → logprob: -10.127132415771484
    6. ' bit' → logprob: -11.752132415771484
    7. 'bit' → logprob: -11.877132415771484
    8. ',b' → logprob: -13.002132415771484
    9. ' ,' → logprob: -13.127132415771484
    10. ',
' → logprob: -14.752132415771484

Token 970: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10024980455636978
    2. 'for' → logprob: -2.350249767303467
    3. ' for' → logprob: -10.725250244140625
    4. '```' → logprob: -10.850250244140625
    5. 'while' → logprob: -13.475250244140625
    6. '	for' → logprob: -14.975250244140625
    7. '``' → logprob: -16.975250244140625
    8. 'def' → logprob: -16.975250244140625
    9. '       ' → logprob: -18.100250244140625
    10. '`' → logprob: -19.725250244140625

Token 971: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009131324477493763
    2. '   ' → logprob: -7.000913143157959
    3. ' for' → logprob: -13.5009126663208
    4. '```' → logprob: -15.0009126663208
    5. 'while' → logprob: -17.500913619995117
    6. '	for' → logprob: -19.000913619995117
    7. '``' → logprob: -19.875913619995117
    8. 'def' → logprob: -22.000913619995117
    9. '
' → logprob: -23.125913619995117
    10. 'For' → logprob: -23.125913619995117

Token 972: ' a' (ID: 261)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.14830179512500763
    2. 'idx' → logprob: -2.773301839828491
    3. 'x' → logprob: -2.898301839828491
    4. 'i' → logprob: -4.148301601409912
    5. 'p' → logprob: -6.273301601409912
    6. 'k' → logprob: -7.148301601409912
    7. 'v' → logprob: -7.398301601409912
    8. 'index' → logprob: -8.52330207824707
    9. '(pos' → logprob: -8.52330207824707
    10. 't' → logprob: -8.77330207824707

Token 973: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008651299867779016
    2. ',t' → logprob: -7.2508649826049805
    3. ',v' → logprob: -9.62586498260498
    4. 'a' → logprob: -11.00086498260498
    5. ',a' → logprob: -11.00086498260498
    6. ' ,' → logprob: -11.25086498260498
    7. ',h' → logprob: -11.50086498260498
    8. 't' → logprob: -11.75086498260498
    9. '_,' → logprob: -12.25086498260498
    10. 'v' → logprob: -12.62586498260498

Token 974: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05688899755477905
    2. 'w' → logprob: -3.056889057159424
    3. 'c' → logprob: -4.931889057159424
    4. 'cnt' → logprob: -7.556889057159424
    5. 'v' → logprob: -7.931889057159424
    6. 'x' → logprob: -9.556888580322266
    7. 'd' → logprob: -10.306888580322266
    8. ' b' → logprob: -10.931888580322266
    9. 'val' → logprob: -11.056888580322266
    10. 'num' → logprob: -11.181888580322266

Token 975: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9440615773200989
    2. ',' → logprob: -1.069061517715454
    3. ' in' → logprob: -1.319061517715454
    4. '   ' → logprob: -8.944061279296875
    5. ' ,' → logprob: -9.569061279296875
    6. ',b' → logprob: -11.819061279296875
    7. ',in' → logprob: -12.444061279296875
    8. 's' → logprob: -12.944061279296875
    9. 'In' → logprob: -13.069061279296875
    10. '  ' → logprob: -13.069061279296875

Token 976: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -1.2664456789934775e-06
    2. ' history' → logprob: -13.625000953674316
    3. 're' → logprob: -16.875001907348633
    4. '(history' → logprob: -18.625001907348633
    5. 'histor' → logprob: -19.250001907348633
    6. '.history' → logprob: -20.250001907348633
    7. 'reverse' → logprob: -20.625001907348633
    8. 'History' → logprob: -21.625001907348633
    9. 'hist' → logprob: -21.875001907348633
    10. '_history' → logprob: -22.250001907348633

Token 977: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09355296939611435
    2. ':' → logprob: -2.468553066253662
    3. '   ' → logprob: -5.843553066253662
    4. ',' → logprob: -6.843553066253662
    5. ' in' → logprob: -7.968553066253662
    6. '[::-' → logprob: -8.593552589416504
    7. '):
' → logprob: -9.968552589416504
    8. ':
' → logprob: -10.593552589416504
    9. 'in' → logprob: -11.593552589416504
    10. '       ' → logprob: -11.843552589416504

Token 978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007717476109974086
    2. '   ' → logprob: -7.250771522521973
    3. 'bit' → logprob: -9.750771522521973
    4. ' bit' → logprob: -12.625771522521973
    5. '      ' → logprob: -16.62577247619629
    6. '     ' → logprob: -16.75077247619629
    7. '           ' → logprob: -17.00077247619629
    8. 'bitr' → logprob: -17.50077247619629
    9. '```' → logprob: -17.62577247619629
    10. 'b' → logprob: -18.75077247619629

Token 979: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.000431861262768507
    2. ' bit' → logprob: -8.000432014465332
    3. '   ' → logprob: -9.250432014465332
    4. '       ' → logprob: -14.875432014465332
    5. 'bitr' → logprob: -18.375431060791016
    6. 'b' → logprob: -18.625431060791016
    7. '```' → logprob: -19.000431060791016
    8. '           ' → logprob: -19.875431060791016
    9. ' ' → logprob: -20.000431060791016
    10. '_bit' → logprob: -20.250431060791016

Token 980: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002639582962729037
    2. '.' → logprob: -8.250264167785645
    3. ' .' → logprob: -13.875264167785645
    4. ').' → logprob: -14.750264167785645
    5. '>.' → logprob: -15.000264167785645
    6. '   ' → logprob: -15.125264167785645
    7. '`.' → logprob: -15.750264167785645
    8. '```' → logprob: -15.875264167785645
    9. '.append' → logprob: -16.125263214111328
    10. '].' → logprob: -16.250263214111328

Token 981: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -15.375
    3. '(' → logprob: -17.0
    4. '```' → logprob: -20.875
    5. ' (' → logprob: -21.125
    6. '(
' → logprob: -21.625
    7. ' a' → logprob: -21.75
    8. '   ' → logprob: -22.875
    9. '	a' → logprob: -23.25
    10. '`' → logprob: -23.75

Token 982: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038086410495452583
    2. ',b' → logprob: -8.000380516052246
    3. ' ,' → logprob: -10.000380516052246
    4. 'b' → logprob: -16.875381469726562
    5. ',-' → logprob: -17.750381469726562
    6. '   ' → logprob: -18.125381469726562
    7. '```' → logprob: -18.500381469726562
    8. '       ' → logprob: -18.625381469726562
    9. ',
' → logprob: -19.250381469726562
    10. '_,' → logprob: -20.125381469726562

Token 983: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.5491004129871726e-05
    2. ' b' → logprob: -10.000045776367188
    3. '	b' → logprob: -22.125045776367188
    4. ')b' → logprob: -22.125045776367188
    5. '+b' → logprob: -23.125045776367188
    6. '   ' → logprob: -23.625045776367188
    7. '+' → logprob: -24.625045776367188
    8. '*b' → logprob: -25.000045776367188
    9. '>b' → logprob: -25.125045776367188
    10. '    ' → logprob: -26.375045776367188

Token 984: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ')
' → logprob: -12.250005722045898
    3. '<|end|>' → logprob: -14.375005722045898
    4. ' )' → logprob: -14.875005722045898
    5. ')return' → logprob: -16.3750057220459
    6. ')#' → logprob: -16.7500057220459
    7. ')}' → logprob: -17.1250057220459
    8. ')

' → logprob: -17.3750057220459
    9. '}' → logprob: -17.8750057220459
    10. '),' → logprob: -18.1250057220459

Token 985: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1310424655675888
    2. 'if' → logprob: -2.13104248046875
    3. 'import' → logprob: -6.38104248046875
    4. '#' → logprob: -7.00604248046875
    5. '```' → logprob: -7.00604248046875
    6. 'n' → logprob: -8.13104248046875
    7. 'print' → logprob: -9.00604248046875
    8. 'for' → logprob: -9.00604248046875
    9. ' if' → logprob: -10.75604248046875
    10. 'from' → logprob: -11.25604248046875

Token 986: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10413439571857452
    2. ' main' → logprob: -2.3541343212127686
    3. 'def' → logprob: -5.604134559631348
    4. 'set' → logprob: -9.479134559631348
    5. ' def' → logprob: -9.979134559631348
    6. 'solve' → logprob: -10.229134559631348
    7. 'run' → logprob: -10.604134559631348
    8. '__' → logprob: -11.479134559631348
    9. 'read' → logprob: -11.604134559631348
    10. '_main' → logprob: -11.729134559631348

Token 987: '_all' (ID: 13305)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008006958523765206
    2. '(input' → logprob: -7.500800609588623
    3. '():
' → logprob: -8.375801086425781
    4. ' ():' → logprob: -11.000801086425781
    5. '()' → logprob: -15.625801086425781
    6. '(INPUT' → logprob: -16.50080108642578
    7. '():
' → logprob: -16.62580108642578
    8. '(' → logprob: -16.75080108642578
    9. '():

' → logprob: -17.00080108642578
    10. 'def' → logprob: -17.12580108642578

Token 988: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01632690243422985
    2. '(input' → logprob: -4.266326904296875
    3. '():
' → logprob: -6.141326904296875
    4. ' ():' → logprob: -12.141326904296875
    5. '():
' → logprob: -13.891326904296875
    6. '()' → logprob: -14.391326904296875
    7. '(' → logprob: -14.766326904296875
    8. '(INPUT' → logprob: -15.391326904296875
    9. '():

' → logprob: -15.516326904296875
    10. '(inp' → logprob: -15.891326904296875

Token 989: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.0536883615423e-05
    2. '):' → logprob: -9.625080108642578
    3. ' ,' → logprob: -11.375080108642578
    4. '   ' → logprob: -13.750080108642578
    5. '):
' → logprob: -14.500080108642578
    6. ',C' → logprob: -14.500080108642578
    7. ',
' → logprob: -14.875080108642578
    8. ')' → logprob: -16.125080108642578
    9. ',c' → logprob: -16.125080108642578
    10. ':' → logprob: -16.875080108642578

Token 990: ' cs' (ID: 14980)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4914109408855438
    2. 'es' → logprob: -0.9914109706878662
    3. 'cs' → logprob: -5.116410732269287
    4. 'M' → logprob: -6.116410732269287
    5. ' C' → logprob: -6.241410732269287
    6. ' es' → logprob: -6.366410732269287
    7. 'AB' → logprob: -6.491410732269287
    8. 'E' → logprob: -7.366410732269287
    9. 'K' → logprob: -7.366410732269287
    10. 'CS' → logprob: -7.366410732269287

Token 991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.629921436891891e-05
    2. ' ,' → logprob: -11.25002670288086
    3. '):
' → logprob: -12.50002670288086
    4. '   ' → logprob: -12.62502670288086
    5. '):' → logprob: -12.87502670288086
    6. 'def' → logprob: -13.25002670288086
    7. ',
' → logprob: -14.00002670288086
    8. ',s' → logprob: -15.62502670288086
    9. ' es' → logprob: -15.75002670288086
    10. ',N' → logprob: -16.12502670288086

Token 992: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.006745093036442995
    2. ' es' → logprob: -5.006744861602783
    3. 'cs' → logprob: -12.006745338439941
    4. 'C' → logprob: -12.006745338439941
    5. ' ' → logprob: -13.256745338439941
    6. '   ' → logprob: -13.381745338439941
    7. 'e' → logprob: -13.506745338439941
    8. '	es' → logprob: -13.506745338439941
    9. '...' → logprob: -13.631745338439941
    10. 'esz' → logprob: -13.881745338439941

Token 993: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012865237891674042
    2. '):
' → logprob: -5.01286506652832
    3. '):' → logprob: -5.13786506652832
    4. '   ' → logprob: -8.38786506652832
    5. 'def' → logprob: -11.13786506652832
    6. '):
' → logprob: -12.01286506652832
    7. ')' → logprob: -12.63786506652832
    8. ',
' → logprob: -12.76286506652832
    9. ' ,' → logprob: -12.76286506652832
    10. '):

' → logprob: -14.01286506652832

Token 994: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.009805790148675442
    2. ' tin' → logprob: -4.634805679321289
    3. 't' → logprob: -11.134805679321289
    4. '   ' → logprob: -11.259805679321289
    5. ' ' → logprob: -11.634805679321289
    6. 'tan' → logprob: -13.759805679321289
    7. '```' → logprob: -13.759805679321289
    8. 'ti' → logprob: -13.884805679321289
    9. 'cs' → logprob: -14.134805679321289
    10. ')' → logprob: -14.134805679321289

Token 995: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.125210297293961e-05
    2. ',t' → logprob: -9.875081062316895
    3. ',
' → logprob: -11.375081062316895
    4. ' ,' → logprob: -11.500081062316895
    5. 'def' → logprob: -12.250081062316895
    6. '   ' → logprob: -13.625081062316895
    7. ')' → logprob: -14.250081062316895
    8. 't' → logprob: -15.125081062316895
    9. '_,' → logprob: -15.125081062316895
    10. '),' → logprob: -15.375081062316895

Token 996: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.0009139667963609099
    2. ' tout' → logprob: -7.000914096832275
    3. 't' → logprob: -14.500913619995117
    4. 'todo' → logprob: -14.875913619995117
    5. '```' → logprob: -15.000913619995117
    6. '   ' → logprob: -15.000913619995117
    7. 'tou' → logprob: -15.125913619995117
    8. '
' → logprob: -15.500913619995117
    9. ' ' → logprob: -15.625913619995117
    10. 'Tout' → logprob: -15.750913619995117

Token 997: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3915141355246305e-05
    2. '):
' → logprob: -11.50002384185791
    3. '   ' → logprob: -11.87502384185791
    4. '):' → logprob: -12.12502384185791
    5. ' ,' → logprob: -14.37502384185791
    6. ',
' → logprob: -15.25002384185791
    7. ',k' → logprob: -15.87502384185791
    8. 'def' → logprob: -16.000024795532227
    9. '_,' → logprob: -16.625024795532227
    10. ',b' → logprob: -17.000024795532227

Token 998: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.11458573490381241
    2. 'k' → logprob: -2.2395856380462646
    3. ' bit' → logprob: -6.489585876464844
    4. ' k' → logprob: -9.239585876464844
    5. 'cs' → logprob: -10.364585876464844
    6. 'K' → logprob: -11.239585876464844
    7. 'bin' → logprob: -11.239585876464844
    8. 'bt' → logprob: -11.364585876464844
    9. 't' → logprob: -11.614585876464844
    10. '   ' → logprob: -11.739585876464844

Token 999: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.675710916519165
    2. '):' → logprob: -0.800710916519165
    3. ',' → logprob: -3.175710916519165
    4. '   ' → logprob: -8.175710678100586
    5. '):
' → logprob: -9.050710678100586
    6. ')' → logprob: -11.175710678100586
    7. '):

' → logprob: -12.050710678100586
    8. 'def' → logprob: -12.550710678100586
    9. ' ):' → logprob: -13.175710678100586
    10. ':' → logprob: -13.425710678100586

Token 1000: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03548215329647064
    2. 'ans' → logprob: -3.410482168197632
    3. 'res' → logprob: -7.035481929779053
    4. 'total' → logprob: -7.910481929779053
    5. '	ans' → logprob: -8.785482406616211
    6. 'result' → logprob: -8.910482406616211
    7. 'answer' → logprob: -9.035482406616211
    8. 'results' → logprob: -9.535482406616211
    9. 'answers' → logprob: -10.410482406616211
    10. ' ans' → logprob: -10.535482406616211

Token 1001: ' result' (ID: 1534)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06478311866521835
    2. 'res' → logprob: -2.9397830963134766
    3. 'answer' → logprob: -5.564783096313477
    4. 'total' → logprob: -5.689783096313477
    5. 'ret' → logprob: -6.564783096313477
    6. 'result' (adapté à ' result') → logprob: -6.939783096313477
    7. 'answers' → logprob: -9.314783096313477
    8. 'results' → logprob: -9.564783096313477
    9. 'all' → logprob: -10.064783096313477
    10. 'tot' → logprob: -10.939783096313477

Token 1002: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06343227624893188
    2. '=' → logprob: -2.813432216644287
    3. '   ' → logprob: -7.313432216644287
    4. 's' → logprob: -7.563432216644287
    5. 'def' → logprob: -8.563432693481445
    6. '=[]' → logprob: -10.438432693481445
    7. '[]' → logprob: -10.938432693481445
    8. '=[]
' → logprob: -11.938432693481445
    9. '[' → logprob: -12.063432693481445
    10. '```' → logprob: -12.188432693481445

Token 1003: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7548263669013977
    2. '[]' → logprob: -1.504826307296753
    3. '[]
' → logprob: -1.754826307296753
    4. '0' → logprob: -2.004826307296753
    5. '[]

' → logprob: -9.129826545715332
    6. ' [' → logprob: -9.754826545715332
    7. ' []' → logprob: -10.754826545715332
    8. '[
' → logprob: -10.879826545715332
    9. ' []
' → logprob: -11.629826545715332
    10. ' ' → logprob: -12.129826545715332

Token 1004: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036363035906106234
    2. ' for' → logprob: -5.753636360168457
    3. 'for' → logprob: -8.003636360168457
    4. 'def' → logprob: -9.378636360168457
    5. '	for' → logprob: -11.378636360168457
    6. '<|end|>' → logprob: -11.378636360168457
    7. ' def' → logprob: -11.628636360168457
    8. '    ' → logprob: -13.128636360168457
    9. '```' → logprob: -13.378636360168457
    10. '[' → logprob: -13.628636360168457

Token 1005: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07923994958400726
    2. '   ' → logprob: -2.829239845275879
    3. ' for' → logprob: -4.079239845275879
    4. '	for' → logprob: -8.579239845275879
    5. '```' → logprob: -11.579239845275879
    6. '
' → logprob: -12.704239845275879
    7. ' ' → logprob: -13.079239845275879
    8. '  ' → logprob: -14.579239845275879
    9. 'def' → logprob: -15.079239845275879
    10. '``' → logprob: -15.829239845275879

Token 1006: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02011915110051632
    2. ' i' → logprob: -4.0201191902160645
    3. 'color' → logprob: -6.5201191902160645
    4. 'c' → logprob: -8.645118713378906
    5. '   ' → logprob: -8.645118713378906
    6. ' color' → logprob: -9.020118713378906
    7. ' c' → logprob: -11.520118713378906
    8. ' ' → logprob: -12.270118713378906
    9. '       ' → logprob: -13.895118713378906
    10. '```' → logprob: -14.020118713378906

Token 1007: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12796097993850708
    2. 'in' → logprob: -2.1279609203338623
    3. ',' → logprob: -7.877961158752441
    4. '[' → logprob: -7.877961158752441
    5. '   ' → logprob: -9.502961158752441
    6. '	in' → logprob: -10.252961158752441
    7. '0' → logprob: -10.502961158752441
    8. '_in' → logprob: -10.752961158752441
    9. ' ,' → logprob: -10.877961158752441
    10. '(' → logprob: -11.377961158752441

Token 1008: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. 'cs' → logprob: -17.37502670288086
    4. '
' → logprob: -18.00002670288086
    5. '(range' → logprob: -18.00002670288086
    6. 'ran' → logprob: -19.00002670288086
    7. '   ' → logprob: -19.00002670288086
    8. 'rang' → logprob: -19.50002670288086
    9. 'r' → logprob: -19.62502670288086
    10. '	range' → logprob: -19.87502670288086

Token 1009: '(N' (ID: 10564)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00157771329395473
    2. '(len' → logprob: -6.501577854156494
    3. ' len' → logprob: -9.501577377319336
    4. '   ' → logprob: -14.876577377319336
    5. 'N' → logprob: -15.876577377319336
    6. ',len' → logprob: -16.251577377319336
    7. '	len' → logprob: -17.876577377319336
    8. '[len' → logprob: -18.001577377319336
    9. '=len' → logprob: -18.126577377319336
    10. '(' → logprob: -18.876577377319336

Token 1010: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20386825501918793
    2. '):' → logprob: -1.7038682699203491
    3. '   ' → logprob: -6.203868389129639
    4. '+' → logprob: -8.07886791229248
    5. '       ' → logprob: -11.07886791229248
    6. ')' → logprob: -11.07886791229248
    7. ':' → logprob: -11.07886791229248
    8. ',' → logprob: -11.32886791229248
    9. ':
' → logprob: -11.45386791229248
    10. '  ' → logprob: -11.57886791229248

Token 1011: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08746114373207092
    2. '   ' → logprob: -2.587461233139038
    3. 'if' → logprob: -5.337460994720459
    4. 'result' → logprob: -6.462460994720459
    5. ' if' → logprob: -7.087460994720459
    6. ':' → logprob: -7.462460994720459
    7. '```' → logprob: -7.837460994720459
    8. ' result' → logprob: -8.712461471557617
    9. '[' → logprob: -9.962461471557617
    10. 'def' → logprob: -11.087461471557617

Token 1012: ' r' (ID: 428)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02009975165128708
    2. '       ' → logprob: -4.895099639892578
    3. 'if' → logprob: -5.020099639892578
    4. '   ' → logprob: -5.770099639892578
    5. ' result' → logprob: -6.145099639892578
    6. 'res' → logprob: -7.895099639892578
    7. ' if' → logprob: -9.520099639892578
    8. 'ans' → logprob: -9.770099639892578
    9. '```' → logprob: -11.520099639892578
    10. 'c' → logprob: -12.145099639892578

Token 1013: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9813581109046936
    2. '=' → logprob: -1.2313580513000488
    3. ' =' → logprob: -1.6063580513000488
    4. '.append' → logprob: -2.106358051300049
    5. 'e' → logprob: -5.731358051300049
    6. '=result' → logprob: -5.731358051300049
    7. ' ' → logprob: -6.606358051300049
    8. 's' → logprob: -7.231358051300049
    9. 'append' → logprob: -7.731358051300049
    10. '   ' → logprob: -7.981358051300049

Token 1014: ' solve' (ID: 17722)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.029918953776359558
    2. ' calc' → logprob: -3.529918909072876
    3. '0' → logprob: -9.529918670654297
    4. 'cs' → logprob: -9.904918670654297
    5. '   ' → logprob: -11.529918670654297
    6. '(calc' → logprob: -11.654918670654297
    7. 'solve' → logprob: -11.654918670654297
    8. 'result' → logprob: -12.529918670654297
    9. 'len' → logprob: -12.654918670654297
    10. 'calculate' → logprob: -12.779918670654297

Token 1015: '_for' (ID: 11903)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.1839568167924881
    2. '(i' → logprob: -1.8089568614959717
    3. 'cs' → logprob: -6.183956623077393
    4. '(N' → logprob: -6.308956623077393
    5. 'i' → logprob: -9.68395709991455
    6. 'all' → logprob: -9.80895709991455
    7. '(len' → logprob: -10.43395709991455
    8. '	cs' → logprob: -10.68395709991455
    9. '(' → logprob: -10.93395709991455
    10. 'color' → logprob: -11.18395709991455

Token 1016: '_color' (ID: 15576)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08821777254343033
    2. 'cs' → logprob: -2.5882177352905273
    3. 'color' → logprob: -5.838217735290527
    4. ' i' → logprob: -5.963217735290527
    5. '(i' → logprob: -6.088217735290527
    6. '   ' → logprob: -7.213217735290527
    7. '(cs' → logprob: -7.963217735290527
    8. '_color' → logprob: -9.088217735290527
    9. 'range' → logprob: -9.838217735290527
    10. ' cs' → logprob: -9.963217735290527

Token 1017: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.0008708444074727595
    2. '(i' → logprob: -7.375870704650879
    3. 'cs' → logprob: -8.375870704650879
    4. '(es' → logprob: -12.625870704650879
    5. '	cs' → logprob: -12.875870704650879
    6. ' cs' → logprob: -13.500870704650879
    7. '```' → logprob: -13.625870704650879
    8. 'i' → logprob: -13.875870704650879
    9. '(Cs' → logprob: -14.125870704650879
    10. '(ci' → logprob: -14.125870704650879

Token 1018: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6081330180168152
    2. '[i' → logprob: -0.9831330180168152
    3. ',i' → logprob: -2.60813307762146
    4. '(i' → logprob: -5.233132839202881
    5. ' ,' → logprob: -7.483132839202881
    6. '[' → logprob: -7.608132839202881
    7. 'i' → logprob: -7.858132839202881
    8. '   ' → logprob: -7.983132839202881
    9. ',[' → logprob: -8.733133316040039
    10. '```' → logprob: -9.233133316040039

Token 1019: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013512482109945267
    2. ' i' → logprob: -9.25013542175293
    3. 'es' → logprob: -10.87513542175293
    4. 'bit' → logprob: -11.12513542175293
    5. '   ' → logprob: -12.50013542175293
    6. '       ' → logprob: -14.87513542175293
    7. '```' → logprob: -15.12513542175293
    8. '[i' → logprob: -15.75013542175293
    9. ')' → logprob: -16.12513542175293
    10. 'r' → logprob: -16.25013542175293

Token 1020: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27741652727127075
    2. '(es' → logprob: -1.652416467666626
    3. '(bit' → logprob: -3.027416467666626
    4. ')' → logprob: -7.277416706085205
    5. '(i' → logprob: -7.402416706085205
    6. '   ' → logprob: -8.402416229248047
    7. '       ' → logprob: -8.777416229248047
    8. ',i' → logprob: -9.027416229248047
    9. ' ,' → logprob: -9.652416229248047
    10. '(' → logprob: -9.777416229248047

Token 1021: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.004155210684984922
    2. ' es' → logprob: -5.504155158996582
    3. '   ' → logprob: -9.754155158996582
    4. 'cs' → logprob: -12.004155158996582
    5. ' ' → logprob: -12.379155158996582
    6. '  ' → logprob: -12.754155158996582
    7. '    ' → logprob: -13.254155158996582
    8. '	es' → logprob: -14.379155158996582
    9. 'N' → logprob: -14.504155158996582
    10. ' N' → logprob: -15.004155158996582

Token 1022: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5027299822540954e-05
    2. ' ,' → logprob: -10.000055313110352
    3. '   ' → logprob: -12.375055313110352
    4. ',
' → logprob: -12.750055313110352
    5. ',t' → logprob: -14.125055313110352
    6. '```' → logprob: -14.500055313110352
    7. '       ' → logprob: -15.125055313110352
    8. ')' → logprob: -15.125055313110352
    9. '[' → logprob: -15.375055313110352
    10. ',b' → logprob: -16.25005531311035

Token 1023: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0009137284359894693
    2. ' tin' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.750913619995117
    4. 't' → logprob: -14.250913619995117
    5. '
' → logprob: -15.000913619995117
    6. 'tan' → logprob: -16.875913619995117
    7. ' ' → logprob: -16.875913619995117
    8. 'rin' → logprob: -17.875913619995117
    9. 'tet' → logprob: -18.125913619995117
    10. '    
' → logprob: -18.500913619995117

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024168188974726945
    2. ',t' → logprob: -8.50024127960205
    3. ' ,' → logprob: -10.25024127960205
    4. ',
' → logprob: -13.25024127960205
    5. '   ' → logprob: -15.00024127960205
    6. ',b' → logprob: -15.75024127960205
    7. 'tout' → logprob: -15.75024127960205
    8. ',n' → logprob: -16.375242233276367
    9. '       ' → logprob: -16.750242233276367
    10. ',out' → logprob: -16.875242233276367

Token 1025: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.00026217024424113333
    2. ' tout' → logprob: -8.250262260437012
    3. 'bit' → logprob: -15.125262260437012
    4. 't' → logprob: -15.875262260437012
    5. '```' → logprob: -16.125261306762695
    6. '   ' → logprob: -16.500261306762695
    7. 'todo' → logprob: -16.625261306762695
    8. 'tou' → logprob: -16.625261306762695
    9. 'Tout' → logprob: -16.875261306762695
    10. '
' → logprob: -17.000261306762695

Token 1026: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.523948907968588e-05
    2. ' ,' → logprob: -10.375035285949707
    3. 'bit' → logprob: -13.125035285949707
    4. ',
' → logprob: -13.750035285949707
    5. '```' → logprob: -15.125035285949707
    6. ' bit' → logprob: -15.750035285949707
    7. ',b' → logprob: -16.00003433227539
    8. '(bit' → logprob: -16.25003433227539
    9. ')' → logprob: -16.87503433227539
    10. '   ' → logprob: -17.00003433227539

Token 1027: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.001170225441455841
    2. ' bit' → logprob: -6.7511701583862305
    3. '(bit' → logprob: -19.501171112060547
    4. '   ' → logprob: -19.626171112060547
    5. '
' → logprob: -20.501171112060547
    6. ' ' → logprob: -20.751171112060547
    7. 'b' → logprob: -20.876171112060547
    8. '```' → logprob: -21.751171112060547
    9. '_bit' → logprob: -22.001171112060547
    10. '.bit' → logprob: -22.251171112060547

Token 1028: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10042092204093933
    2. ')' → logprob: -2.3504209518432617
    3. '       ' → logprob: -8.975420951843262
    4. '   ' → logprob: -9.850420951843262
    5. ')
' → logprob: -11.100420951843262
    6. ',)' → logprob: -11.725420951843262
    7. ',
' → logprob: -12.850420951843262
    8. '```' → logprob: -13.350420951843262
    9. '),' → logprob: -13.725420951843262
    10. '<|end|>' → logprob: -14.100420951843262

Token 1029: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.639096970204264e-05
    2. ' N' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.875096321105957
    4. '  ' → logprob: -17.250097274780273
    5. ')' → logprob: -17.500097274780273
    6. ' ' → logprob: -18.125097274780273
    7. '    ' → logprob: -18.500097274780273
    8. '       ' → logprob: -18.625097274780273
    9. '          ' → logprob: -18.875097274780273
    10. '	N' → logprob: -18.875097274780273

Token 1030: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005810055881738663
    2. ')
' → logprob: -5.380810260772705
    3. ',' → logprob: -7.505810260772705
    4. '   ' → logprob: -7.755810260772705
    5. '       ' → logprob: -8.505809783935547
    6. ')`' → logprob: -13.130809783935547
    7. '```' → logprob: -13.880809783935547
    8. ',
' → logprob: -14.630809783935547
    9. '):
' → logprob: -14.630809783935547
    10. ')`
' → logprob: -14.755809783935547

Token 1031: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.453069806098938
    2. '   ' → logprob: -1.953069806098938
    3. 'def' → logprob: -2.8280696868896484
    4. ':' → logprob: -3.0780696868896484
    5. '```' → logprob: -3.2030696868896484
    6. ',' → logprob: -3.5780696868896484
    7. '[' → logprob: -4.453069686889648
    8. ':
' → logprob: -4.828069686889648
    9. '(' → logprob: -5.203069686889648
    10. '(
' → logprob: -5.453069686889648

Token 1032: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.1304512917995453
    2. ' result' → logprob: -2.130451202392578
    3. '   ' → logprob: -6.880451202392578
    4. ')' → logprob: -7.005451202392578
    5. '       ' → logprob: -7.880451202392578
    6. '.append' → logprob: -8.005451202392578
    7. '```' → logprob: -8.630451202392578
    8. ',' → logprob: -8.880451202392578
    9. ',result' → logprob: -8.880451202392578
    10. 'append' → logprob: -9.005451202392578

Token 1033: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.65101717156358e-05
    2. '.' → logprob: -9.375096321105957
    3. '.extend' → logprob: -11.750096321105957
    4. '.app' → logprob: -13.625096321105957
    5. '```' → logprob: -14.375096321105957
    6. '.push' → logprob: -14.500096321105957
    7. '.Append' → logprob: -15.000096321105957
    8. '_append' → logprob: -15.500096321105957
    9. 'append' → logprob: -15.625096321105957
    10. ').' → logprob: -15.625096321105957

Token 1034: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.023500990122556686
    2. 'r' → logprob: -3.773500919342041
    3. '(' → logprob: -8.6485013961792
    4. ' r' → logprob: -9.5235013961792
    5. 'str' → logprob: -13.0235013961792
    6. '(
' → logprob: -13.0235013961792
    7. '(str' → logprob: -13.1485013961792
    8. ' (' → logprob: -15.7735013961792
    9. '0' → logprob: -16.273500442504883
    10. '[r' → logprob: -16.398500442504883

Token 1035: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000933017407078296
    2. ')
' → logprob: -7.2509331703186035
    3. '   ' → logprob: -9.000932693481445
    4. '       ' → logprob: -10.250932693481445
    5. '[' → logprob: -10.500932693481445
    6. '+' → logprob: -11.500932693481445
    7. '())' → logprob: -11.875932693481445
    8. ' +' → logprob: -12.750932693481445
    9. '()' → logprob: -13.000932693481445
    10. '```' → logprob: -13.250932693481445

Token 1036: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9247080087661743
    2. '   ' → logprob: -1.2997080087661743
    3. '```' → logprob: -1.4247080087661743
    4. '<|end|>' → logprob: -3.6747078895568848
    5. '[' → logprob: -3.7997078895568848
    6. ')' → logprob: -4.924707889556885
    7. '       ' → logprob: -4.924707889556885
    8. '_' → logprob: -5.174707889556885
    9. '(' → logprob: -5.299707889556885
    10. ' def' → logprob: -6.299707889556885

Token 1037: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07197418808937073
    2. 'def' → logprob: -4.071974277496338
    3. '	return' → logprob: -4.571974277496338
    4. '<|end|>' → logprob: -4.571974277496338
    5. '\n' → logprob: -5.196974277496338
    6. '    
' → logprob: -5.321974277496338
    7. 'return' (adapté à ' return') → logprob: -5.696974277496338
    8. '       ' → logprob: -5.946974277496338
    9. '
' → logprob: -5.946974277496338
    10. '[' → logprob: -6.196974277496338

Token 1038: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0002998312993440777
    2. ' result' → logprob: -8.500299453735352
    3. '[result' → logprob: -9.250299453735352
    4. '[' → logprob: -16.62529945373535
    5. '(result' → logprob: -17.00029945373535
    6. '[
' → logprob: -18.37529945373535
    7. '```' → logprob: -18.50029945373535
    8. '[]' → logprob: -18.75029945373535
    9. '	result' → logprob: -19.00029945373535
    10. '
' → logprob: -20.12529945373535

Token 1039: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020837903022766113
    2. '```' → logprob: -3.8958377838134766
    3. '   ' → logprob: -8.770837783813477
    4. '``' → logprob: -9.270837783813477
    5. ' def' → logprob: -10.770837783813477
    6. '    
' → logprob: -11.770837783813477
    7. '<|end|>' → logprob: -12.645837783813477
    8. '(
' → logprob: -12.645837783813477
    9. '
' → logprob: -13.145837783813477
    10. ':def' → logprob: -13.520837783813477

Token 1040: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004085758700966835
    2. '```' → logprob: -5.504085540771484
    3. '``' → logprob: -12.004085540771484
    4. ':def' → logprob: -15.004085540771484
    5. '-def' → logprob: -15.129085540771484
    6. ' def' → logprob: -15.254085540771484
    7. '
' → logprob: -15.379085540771484
    8. '_def' → logprob: -16.504085540771484
    9. '[' → logprob: -16.754085540771484
    10. '`' → logprob: -17.754085540771484

Token 1041: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0006311862962320447
    2. ' solve' → logprob: -7.375631332397461
    3. 'sol' → logprob: -14.125631332397461
    4. 's' → logprob: -14.250631332397461
    5. 'save' → logprob: -14.375631332397461
    6. 'sort' → logprob: -15.125631332397461
    7. 'build' → logprob: -15.250631332397461
    8. 'for' → logprob: -15.375631332397461
    9. 'solver' → logprob: -15.500631332397461
    10. '.solve' → logprob: -15.750631332397461

Token 1042: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -7.3458322731312364e-06
    2. 'for' → logprob: -12.000007629394531
    3. '```' → logprob: -14.750007629394531
    4. '(' → logprob: -15.250007629394531
    5. 'def' → logprob: -15.750007629394531
    6. '_FOR' → logprob: -16.12500762939453
    7. '_all' → logprob: -16.62500762939453
    8. 'For' → logprob: -17.00000762939453
    9. '(for' → logprob: -17.62500762939453
    10. '(_' → logprob: -18.87500762939453

Token 1043: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.2014196664094925
    2. 'color' → logprob: -1.701419711112976
    3. ' color' → logprob: -12.576419830322266
    4. 'for' → logprob: -14.201419830322266
    5. '(color' → logprob: -14.451419830322266
    6. 'solve' → logprob: -14.576419830322266
    7. '_for' → logprob: -15.201419830322266
    8. 'c' → logprob: -15.701419830322266
    9. '```' → logprob: -16.076419830322266
    10. '_colors' → logprob: -16.076419830322266

Token 1044: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -12.000007629394531
    3. '(Cs' → logprob: -14.250007629394531
    4. '(
' → logprob: -15.750007629394531
    5. 'cs' → logprob: -16.87500762939453
    6. '(es' → logprob: -17.12500762939453
    7. '(ci' → logprob: -17.75000762939453
    8. '(s' → logprob: -17.75000762939453
    9. '(bit' → logprob: -18.12500762939453
    10. '(cm' → logprob: -18.25000762939453

Token 1045: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012761499965563416
    2. '(cs' → logprob: -9.625127792358398
    3. 'cs' → logprob: -10.375127792358398
    4. ',s' → logprob: -11.000127792358398
    5. '[' → logprob: -12.625127792358398
    6. ',
' → logprob: -12.875127792358398
    7. ',c' → logprob: -12.875127792358398
    8. ' ,' → logprob: -13.250127792358398
    9. 'def' → logprob: -13.500127792358398
    10. '_,' → logprob: -14.875127792358398

Token 1046: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.033278170973062515
    2. ' i' → logprob: -3.533278226852417
    3. 'color' → logprob: -6.033277988433838
    4. 'cs' → logprob: -7.658277988433838
    5. ' color' → logprob: -8.158278465270996
    6. 'c' → logprob: -8.908278465270996
    7. 'es' → logprob: -9.408278465270996
    8. '   ' → logprob: -9.908278465270996
    9. 'N' → logprob: -11.033278465270996
    10. ' cs' → logprob: -11.283278465270996

Token 1047: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005010428838431835
    2. '(cs' → logprob: -5.380010604858398
    3. 'cs' → logprob: -8.380010604858398
    4. ',
' → logprob: -9.630010604858398
    5. 'def' → logprob: -10.380010604858398
    6. '(' → logprob: -11.005010604858398
    7. ',s' → logprob: -11.755010604858398
    8. ' ,' → logprob: -11.880010604858398
    9. ',c' → logprob: -12.005010604858398
    10. ' cs' → logprob: -12.380010604858398

Token 1048: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0020057226065546274
    2. ' es' → logprob: -6.252005577087402
    3. 'cs' → logprob: -9.502005577087402
    4. '   ' → logprob: -13.752005577087402
    5. '	es' → logprob: -14.252005577087402
    6. ' cs' → logprob: -15.127005577087402
    7. '(es' → logprob: -16.37700653076172
    8. 'e' → logprob: -16.87700653076172
    9. '...' → logprob: -16.87700653076172
    10. ' ' → logprob: -17.00200653076172

Token 1049: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -13.125004768371582
    3. ',t' → logprob: -14.250004768371582
    4. ',
' → logprob: -14.375004768371582
    5. 'def' → logprob: -14.750004768371582
    6. '```' → logprob: -15.500004768371582
    7. '_,' → logprob: -15.625004768371582
    8. ',s' → logprob: -15.750004768371582
    9. ',b' → logprob: -16.500003814697266
    10. ',c' → logprob: -16.750003814697266

Token 1050: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0005549400229938328
    2. ' tin' → logprob: -7.500555038452148
    3. 't' → logprob: -13.625555038452148
    4. '   ' → logprob: -14.750555038452148
    5. 'bit' → logprob: -16.50055503845215
    6. 'tout' → logprob: -17.00055503845215
    7. ' ' → logprob: -17.50055503845215
    8. '```' → logprob: -17.50055503845215
    9. '
' → logprob: -17.75055503845215
    10. 'cs' → logprob: -17.75055503845215

Token 1051: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.947715832618997e-05
    2. ' ,' → logprob: -10.000089645385742
    3. 'def' → logprob: -11.625089645385742
    4. ')' → logprob: -11.625089645385742
    5. ',t' → logprob: -11.875089645385742
    6. ',
' → logprob: -12.125089645385742
    7. ',s' → logprob: -13.000089645385742
    8. '[' → logprob: -13.250089645385742
    9. '   ' → logprob: -13.375089645385742
    10. '<|end|>' → logprob: -13.375089645385742

Token 1052: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.0024881421122699976
    2. 'bit' → logprob: -6.252488136291504
    3. ' tout' → logprob: -7.502488136291504
    4. ' bit' → logprob: -12.752488136291504
    5. 'todo' → logprob: -13.627488136291504
    6. '```' → logprob: -14.127488136291504
    7. 'Tout' → logprob: -14.377488136291504
    8. 'N' → logprob: -14.502488136291504
    9. 't' → logprob: -14.502488136291504
    10. '
' → logprob: -15.127488136291504

Token 1053: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ',
' → logprob: -13.12500286102295
    3. ' ,' → logprob: -15.12500286102295
    4. 'bit' → logprob: -16.125001907348633
    5. ',b' → logprob: -17.000001907348633
    6. ' bit' → logprob: -17.500001907348633
    7. 'def' → logprob: -17.750001907348633
    8. ')' → logprob: -17.875001907348633
    9. '):
' → logprob: -18.000001907348633
    10. '```' → logprob: -18.000001907348633

Token 1054: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0005530327325686812
    2. ' bit' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.500553131103516
    4. '(bit' → logprob: -19.125553131103516
    5. '```' → logprob: -20.000553131103516
    6. ' ' → logprob: -20.375553131103516
    7. 'N' → logprob: -20.500553131103516
    8. 'bin' → logprob: -20.875553131103516
    9. 'bits' → logprob: -21.125553131103516
    10. '  ' → logprob: -21.875553131103516

Token 1055: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. '   ' → logprob: -12.500009536743164
    3. ',
' → logprob: -12.625009536743164
    4. '):' → logprob: -13.125009536743164
    5. '):
' → logprob: -14.750009536743164
    6. ' ,' → logprob: -15.625009536743164
    7. ',i' → logprob: -16.500009536743164
    8. ',N' → logprob: -16.625009536743164
    9. ',b' → logprob: -17.000009536743164
    10. ',n' → logprob: -17.250009536743164

Token 1056: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.623244553338736e-05
    2. ' N' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.12506675720215
    4. ' ' → logprob: -19.37506675720215
    5. 'bit' → logprob: -19.37506675720215
    6. '
' → logprob: -20.00006675720215
    7. '```' → logprob: -20.50006675720215
    8. ')' → logprob: -21.00006675720215
    9. '  ' → logprob: -21.12506675720215
    10. '	N' → logprob: -21.12506675720215

Token 1057: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6933329105377197
    2. '):' → logprob: -0.6933329105377197
    3. '   ' → logprob: -8.94333267211914
    4. ')' → logprob: -10.69333267211914
    5. '):
' → logprob: -10.94333267211914
    6. ',' → logprob: -11.44333267211914
    7. '):

' → logprob: -12.94333267211914
    8. ':' → logprob: -14.31833267211914
    9. 'def' → logprob: -14.81833267211914
    10. '```' → logprob: -15.69333267211914

Token 1058: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25341132283210754
    2. 'ans' → logprob: -1.6284112930297852
    3. ' ans' → logprob: -4.378411293029785
    4. 'cs' → logprob: -4.753411293029785
    5. 'cnt' → logprob: -6.128411293029785
    6. 'if' → logprob: -6.628411293029785
    7. '```' → logprob: -7.128411293029785
    8. 'bit' → logprob: -7.378411293029785
    9. ' cs' → logprob: -8.128411293029785
    10. ' if' → logprob: -8.253411293029785

Token 1059: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.27919235825538635
    2. 'return' → logprob: -1.779192328453064
    3. 'if' → logprob: -3.0291924476623535
    4. 'cs' → logprob: -4.2791924476623535
    5. 'bit' → logprob: -5.4041924476623535
    6. 'cnt' → logprob: -5.5291924476623535
    7. 'pn' → logprob: -5.9041924476623535
    8. '   ' → logprob: -7.5291924476623535
    9. 'for' → logprob: -9.279191970825195
    10. 'answer' → logprob: -9.279191970825195

Token 1060: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688158988952637
    2. ' =' → logprob: -1.1368815898895264
    3. '   ' → logprob: -12.261881828308105
    4. ',' → logprob: -13.386881828308105
    5. '=
' → logprob: -13.511881828308105
    6. 'def' → logprob: -14.636881828308105
    7. ' =
' → logprob: -14.761881828308105
    8. ')' → logprob: -14.886881828308105
    9. ' +=' → logprob: -14.886881828308105
    10. '```' → logprob: -15.136881828308105

Token 1061: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.3622792363166809
    2. 'calc' → logprob: -1.6122791767120361
    3. '0' → logprob: -2.737279176712036
    4. 'N' → logprob: -3.737279176712036
    5. 'len' → logprob: -4.237279415130615
    6. 'cs' → logprob: -8.362278938293457
    7. ' get' → logprob: -8.362278938293457
    8. ' calc' → logprob: -8.862278938293457
    9. 'bit' → logprob: -9.112278938293457
    10. 'sum' → logprob: -9.112278938293457

Token 1062: '_wh' (ID: 86186)
  Prédit: '_wh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wh' → logprob: -0.006743439007550478
    2. 'whole' → logprob: -5.006743431091309
    3. '_color' → logprob: -11.756743431091309
    4. '\' → logprob: -12.006743431091309
    5. 'wh' → logprob: -12.631743431091309
    6. '_white' → logprob: -13.381743431091309
    7. 'Whole' → logprob: -13.381743431091309
    8. '_all' → logprob: -13.756743431091309
    9. 'len' → logprob: -14.006743431091309
    10. 'color' → logprob: -14.131743431091309

Token 1063: 'ole' (ID: 1491)
  Prédit: 'ole'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ole' → logprob: -0.008265982381999493
    2. '   ' → logprob: -5.758265972137451
    3. 'olle' → logprob: -5.883265972137451
    4. '       ' → logprob: -7.883265972137451
    5. '[i' → logprob: -8.13326644897461
    6. '_' → logprob: -8.38326644897461
    7. '```' → logprob: -8.63326644897461
    8. '[' → logprob: -8.88326644897461
    9. 'o' → logprob: -9.25826644897461
    10. '__' → logprob: -9.25826644897461

Token 1064: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007940204231999815
    2. 'N' → logprob: -7.250793933868408
    3. '```' → logprob: -10.625794410705566
    4. '(len' → logprob: -11.125794410705566
    5. '(i' → logprob: -11.375794410705566
    6. '(' → logprob: -11.750794410705566
    7. 'cs' → logprob: -12.000794410705566
    8. '[N' → logprob: -12.000794410705566
    9. '(cs' → logprob: -12.125794410705566
    10. '(n' → logprob: -12.875794410705566

Token 1065: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09234534204006195
    2. ')
' → logprob: -2.4673452377319336
    3. '   ' → logprob: -5.717345237731934
    4. ')-' → logprob: -9.967345237731934
    5. '()' → logprob: -10.592345237731934
    6. '())
' → logprob: -11.592345237731934
    7. '())' → logprob: -11.717345237731934
    8. '-' → logprob: -11.717345237731934
    9. ')
' → logprob: -12.842345237731934
    10. 'def' → logprob: -13.217345237731934

Token 1066: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008339279447682202
    2. ')' → logprob: -8.125833511352539
    3. '
' → logprob: -8.500833511352539
    4. '<|end|>' → logprob: -8.625833511352539
    5. '    
' → logprob: -10.125833511352539
    6. ',' → logprob: -10.750833511352539
    7. ' bit' → logprob: -11.250833511352539
    8. '```' → logprob: -11.375833511352539
    9. 'def' → logprob: -11.875833511352539
    10. ' ans' → logprob: -12.125833511352539

Token 1067: ' cs' (ID: 14980)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7978036403656006
    2. 'for' → logprob: -1.5478036403656006
    3. 'return' → logprob: -2.0478036403656006
    4. 'cs' (adapté à ' cs') → logprob: -2.0478036403656006
    5. 'bit' → logprob: -3.0478036403656006
    6. '   ' → logprob: -4.04780387878418
    7. 'history' → logprob: -4.79780387878418
    8. 'if' → logprob: -6.17280387878418
    9. 'restore' → logprob: -6.29780387878418
    10. 'cnt' → logprob: -7.54780387878418

Token 1068: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.145118848304264e-05
    2. '[' → logprob: -10.125051498413086
    3. '   ' → logprob: -12.625051498413086
    4. '[I' → logprob: -13.750051498413086
    5. 'def' → logprob: -13.875051498413086
    6. ',i' → logprob: -14.000051498413086
    7. '```' → logprob: -14.000051498413086
    8. '\[' → logprob: -14.125051498413086
    9. '[s' → logprob: -14.500051498413086
    10. '[
' → logprob: -14.875051498413086

Token 1069: '].' (ID: 1651)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3359423875808716
    2. ' =' → logprob: -2.460942268371582
    3. 'def' → logprob: -2.835942268371582
    4. '=' → logprob: -3.710942268371582
    5. '   ' → logprob: -3.960942268371582
    6. ')==' → logprob: -3.960942268371582
    7. ',' → logprob: -4.085942268371582
    8. '==' → logprob: -4.585942268371582
    9. '[i' → logprob: -4.585942268371582
    10. '.clear' → logprob: -5.460942268371582

Token 1070: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.21716797351837158
    2. 'clear' → logprob: -1.7171679735183716
    3. 'reverse' → logprob: -4.592167854309082
    4. 'def' → logprob: -6.592167854309082
    5. '.clear' → logprob: -6.592167854309082
    6. '.sort' → logprob: -6.842167854309082
    7. 'append' → logprob: -6.967167854309082
    8. 'copy' → logprob: -8.842167854309082
    9. '.reverse' → logprob: -9.342167854309082
    10. '=' → logprob: -9.467167854309082

Token 1071: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.4995255470275879
    2. '()' → logprob: -0.9995255470275879
    3. '()
' → logprob: -4.249525547027588
    4. 'key' → logprob: -4.874525547027588
    5. '(reverse' → logprob: -5.999525547027588
    6. '(' → logprob: -7.999525547027588
    7. 'def' → logprob: -8.49952507019043
    8. 'reverse' → logprob: -10.24952507019043
    9. '(lambda' → logprob: -10.24952507019043
    10. ' key' → logprob: -10.62452507019043

Token 1072: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.020605186000466347
    2. '=' → logprob: -3.8956050872802734
    3. '=
' → logprob: -10.395605087280273
    4. '(lambda' → logprob: -11.020605087280273
    5. 'lambda' → logprob: -11.520605087280273
    6. '=None' → logprob: -12.895605087280273
    7. '=(' → logprob: -14.020605087280273
    8. '(' → logprob: -14.895605087280273
    9. '=function' → logprob: -15.020605087280273
    10. ')=' → logprob: -15.145605087280273

Token 1073: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.22111688554286957
    2. '=lambda' → logprob: -1.7211169004440308
    3. ' lambda' → logprob: -4.59611701965332
    4. 'x' → logprob: -5.09611701965332
    5. '(lambda' → logprob: -6.72111701965332
    6. ':' → logprob: -6.84611701965332
    7. ' x' → logprob: -7.22111701965332
    8. '=' → logprob: -8.59611701965332
    9. '```' → logprob: -10.09611701965332
    10. '   ' → logprob: -10.72111701965332

Token 1074: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07160361111164093
    2. '=' → logprob: -2.696603536605835
    3. '=lambda' → logprob: -6.446603775024414
    4. 'lambda' → logprob: -9.696603775024414
    5. '   ' → logprob: -11.321603775024414
    6. ' :' → logprob: -13.196603775024414
    7. ':
' → logprob: -13.696603775024414
    8. 'def' → logprob: -14.446603775024414
    9. ':=' → logprob: -14.446603775024414
    10. ' =' → logprob: -14.571603775024414

Token 1075: ' -' (ID: 533)
  Prédit: '-t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-t' → logprob: -0.19381429255008698
    2. 'tin' → logprob: -1.8188142776489258
    3. ' -' → logprob: -4.943814277648926
    4. '-' → logprob: -5.318814277648926
    5. ' tin' → logprob: -6.443814277648926
    6. 't' → logprob: -9.693814277648926
    7. ' ' → logprob: -10.318814277648926
    8. '   ' → logprob: -10.443814277648926
    9. 'lambda' → logprob: -10.693814277648926
    10. '-ti' → logprob: -10.818814277648926

Token 1076: 'tin' (ID: 63664)
  Prédit: 'tin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -1.6047699318733066e-05
    2. ' tin' → logprob: -11.250016212463379
    3. '   ' → logprob: -14.125016212463379
    4. 'tan' → logprob: -15.000016212463379
    5. 't' → logprob: -15.000016212463379
    6. '(t' → logprob: -15.375016212463379
    7. 'tn' → logprob: -15.750016212463379
    8. 'ti' → logprob: -16.000015258789062
    9. '
' → logprob: -16.000015258789062
    10. 'tid' → logprob: -16.375015258789062

Token 1077: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.796184723294573e-06
    2. '(x' → logprob: -12.625005722045898
    3. 'x' → logprob: -13.625005722045898
    4. '[' → logprob: -14.500005722045898
    5. '```' → logprob: -14.750005722045898
    6. '\[' → logprob: -16.5000057220459
    7. '{x' → logprob: -17.6250057220459
    8. '[
' → logprob: -17.8750057220459
    9. '   ' → logprob: -17.8750057220459
    10. '[v' → logprob: -17.8750057220459

Token 1078: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8999243378639221
    2. ')' → logprob: -1.0249242782592773
    3. '])
' → logprob: -2.1499242782592773
    4. '])' → logprob: -2.3999242782592773
    5. '[x' → logprob: -4.399924278259277
    6. '))
' → logprob: -4.774924278259277
    7. '))' → logprob: -5.524924278259277
    8. '[v' → logprob: -6.399924278259277
    9. '[])
' → logprob: -8.649924278259277
    10. '   ' → logprob: -9.024924278259277

Token 1079: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00849921628832817
    2. '
' → logprob: -5.2584991455078125
    3. ')' → logprob: -6.1334991455078125
    4. '```' → logprob: -7.3834991455078125
    5. ' history' → logprob: -9.133499145507812
    6. ',' → logprob: -9.133499145507812
    7. 'history' → logprob: -9.508499145507812
    8. '    
' → logprob: -10.133499145507812
    9. ')
' → logprob: -10.383499145507812
    10. ' for' → logprob: -10.883499145507812

Token 1080: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' (adapté à ' history') → logprob: -0.011758861131966114
    2. 'for' → logprob: -5.261758804321289
    3. 'bit' → logprob: -5.886758804321289
    4. 'ans' → logprob: -6.136758804321289
    5. 'cnt' → logprob: -7.136758804321289
    6. '   ' → logprob: -7.886758804321289
    7. '```' → logprob: -9.261758804321289
    8. 'cs' → logprob: -9.636758804321289
    9. 'h' → logprob: -10.011758804321289
    10. 'pn' → logprob: -10.136758804321289

Token 1081: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08038584142923355
    2. ' =' → logprob: -2.58038592338562
    3. '=[]' → logprob: -6.705385684967041
    4. '[:]' → logprob: -9.3303861618042
    5. '   ' → logprob: -9.8303861618042
    6. '=[]
' → logprob: -10.0803861618042
    7. '.append' → logprob: -10.4553861618042
    8. '.clear' → logprob: -10.4553861618042
    9. ')' → logprob: -11.7053861618042
    10. ',' → logprob: -12.3303861618042

Token 1082: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0009124171338044107
    2. '[]
' → logprob: -7.000912189483643
    3. '[]

' → logprob: -14.5009126663208
    4. ' []' → logprob: -15.1259126663208
    5. '[' → logprob: -16.875911712646484
    6. '=[]' → logprob: -17.000911712646484
    7. '[]}' → logprob: -17.125911712646484
    8. '[])' → logprob: -17.125911712646484
    9. '[],' → logprob: -17.750911712646484
    10. '[]>' → logprob: -18.375911712646484

Token 1083: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0978911966085434
    2. 'for' → logprob: -2.472891092300415
    3. ' for' → logprob: -5.347891330718994
    4. '```' → logprob: -5.722891330718994
    5. 'cnt' → logprob: -7.472891330718994
    6. '
' → logprob: -8.722890853881836
    7. 'def' → logprob: -9.597890853881836
    8. '``' → logprob: -10.597890853881836
    9. 'bit' → logprob: -11.222890853881836
    10. ')' → logprob: -11.972890853881836

Token 1084: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.729906196298543e-06
    2. '   ' → logprob: -12.000009536743164
    3. ' for' → logprob: -13.375009536743164
    4. '```' → logprob: -13.375009536743164
    5. 'cnt' → logprob: -15.375009536743164
    6. 'ans' → logprob: -17.125009536743164
    7. 'bit' → logprob: -17.125009536743164
    8. '
' → logprob: -17.625009536743164
    9. 'def' → logprob: -17.750009536743164
    10. '``' → logprob: -18.125009536743164

Token 1085: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00018244501552544534
    2. ' v' → logprob: -8.625182151794434
    3. '   ' → logprob: -12.875182151794434
    4. 'c' → logprob: -15.750182151794434
    5. '```' → logprob: -16.00018310546875
    6. 'color' → logprob: -17.50018310546875
    7. '	v' → logprob: -17.62518310546875
    8. '       ' → logprob: -18.37518310546875
    9. '`' → logprob: -18.37518310546875
    10. 'vertex' → logprob: -18.62518310546875

Token 1086: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021608758717775345
    2. 'in' → logprob: -3.896608829498291
    3. ',' → logprob: -6.896608829498291
    4. ' ,' → logprob: -10.771608352661133
    5. '   ' → logprob: -11.146608352661133
    6. '	in' → logprob: -12.646608352661133
    7. ',in' → logprob: -13.146608352661133
    8. ' ' → logprob: -13.396608352661133
    9. 's' → logprob: -13.521608352661133
    10. '_in' → logprob: -13.646608352661133

Token 1087: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -2.570319702499546e-05
    2. ' cs' → logprob: -10.625025749206543
    3. '
' → logprob: -14.750025749206543
    4. '   ' → logprob: -14.750025749206543
    5. 'c' → logprob: -16.250024795532227
    6. 'range' → logprob: -16.375024795532227
    7. '	cs' → logprob: -16.500024795532227
    8. '```' → logprob: -16.500024795532227
    9. '(cs' → logprob: -16.625024795532227
    10. '[' → logprob: -17.000024795532227

Token 1088: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.9875325708417222e-05
    2. '[' → logprob: -11.000029563903809
    3. '```' → logprob: -12.000029563903809
    4. '[
' → logprob: -12.375029563903809
    5. '[I' → logprob: -14.750029563903809
    6. 'i' → logprob: -14.750029563903809
    7. '(i' → logprob: -15.375029563903809
    8. ',' → logprob: -15.500029563903809
    9. ',i' → logprob: -15.625029563903809
    10. ' [' → logprob: -15.750029563903809

Token 1089: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9393053650856018
    2. ']:
' → logprob: -1.064305305480957
    3. ':' → logprob: -1.564305305480957
    4. ']:' → logprob: -3.439305305480957
    5. '       ' → logprob: -4.314305305480957
    6. '):
' → logprob: -4.814305305480957
    7. '   ' → logprob: -7.939305305480957
    8. '):' → logprob: -7.939305305480957
    9. '():
' → logprob: -8.064305305480957
    10. ',' → logprob: -10.189305305480957

Token 1090: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006843181326985359
    2. '```' → logprob: -7.5006842613220215
    3. ',' → logprob: -9.62568473815918
    4. '   ' → logprob: -10.37568473815918
    5. '    ' → logprob: -11.75068473815918
    6. '<|end|>' → logprob: -12.00068473815918
    7. '
' → logprob: -13.00068473815918
    8. '...' → logprob: -13.12568473815918
    9. '        
' → logprob: -13.62568473815918
    10. '[' → logprob: -13.62568473815918

Token 1091: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.06241957098245621
    2. '       ' → logprob: -2.8124196529388428
    3. ' cnt' → logprob: -7.937419414520264
    4. '	cnt' → logprob: -10.312419891357422
    5. '   ' → logprob: -10.562419891357422
    6. '(cnt' → logprob: -10.812419891357422
    7. '[cnt' → logprob: -12.562419891357422
    8. 'count' → logprob: -12.812419891357422
    9. '```' → logprob: -12.812419891357422
    10. '           ' → logprob: -13.062419891357422

Token 1092: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000622249732259661
    2. '=' → logprob: -7.500622272491455
    3. ' ,' → logprob: -10.750621795654297
    4. ' =' → logprob: -11.000621795654297
    5. '<|end|>' → logprob: -11.500621795654297
    6. ',
' → logprob: -11.625621795654297
    7. '   ' → logprob: -13.375621795654297
    8. ' ' → logprob: -13.875621795654297
    9. ',v' → logprob: -14.000621795654297
    10. ',user' → logprob: -14.000621795654297

Token 1093: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.857719275401905e-05
    2. ' ' → logprob: -10.500038146972656
    3. '   ' → logprob: -12.000038146972656
    4. '0' → logprob: -12.625038146972656
    5. '       ' → logprob: -14.500038146972656
    6. 'process' → logprob: -15.000038146972656
    7. 'v' → logprob: -15.500038146972656
    8. '=' → logprob: -16.375038146972656
    9. 'bit' → logprob: -16.500038146972656
    10. '```' → logprob: -16.625038146972656

Token 1094: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.000001907348633
    3. '0' → logprob: -14.375001907348633
    4. 'process' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.625001907348633
    6. 'v' → logprob: -18.062501907348633
    7. 'bit' → logprob: -18.062501907348633
    8. '=' → logprob: -18.437501907348633
    9. '```' → logprob: -18.625001907348633
    10. 'cnt' → logprob: -18.750001907348633

Token 1095: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11875125020742416
    2. '<|end|>' → logprob: -2.493751287460327
    3. '       ' → logprob: -4.368751049041748
    4. ',
' → logprob: -4.993751049041748
    5. '
' → logprob: -5.493751049041748
    6. '   ' → logprob: -6.493751049041748
    7. '<|end|>' → logprob: -6.618751049041748
    8. ',v' → logprob: -7.493751049041748
    9. '	' → logprob: -7.493751049041748
    10. '```' → logprob: -8.368751525878906

Token 1096: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15637177228927612
    2. '       ' → logprob: -2.031371831893921
    3. ',
' → logprob: -5.781371593475342
    4. ',v' → logprob: -5.906371593475342
    5. '   ' → logprob: -6.156371593475342
    6. 'for' → logprob: -6.656371593475342
    7. ' for' → logprob: -6.781371593475342
    8. '	' → logprob: -7.156371593475342
    9. '<|end|>' → logprob: -7.781371593475342
    10. '	for' → logprob: -7.906371593475342

Token 1097: ' for' (ID: 395)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07505808025598526
    2. 'for' (adapté à ' for') → logprob: -2.7000579833984375
    3. '       ' → logprob: -6.0750579833984375
    4. '   ' → logprob: -6.3250579833984375
    5. '	h' → logprob: -8.075057983398438
    6. 'history' → logprob: -8.200057983398438
    7. ' for' → logprob: -8.700057983398438
    8. ' h' → logprob: -9.075057983398438
    9. 'to' → logprob: -9.700057983398438
    10. '```' → logprob: -10.325057983398438

Token 1098: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.003605178790166974
    2. ' to' → logprob: -5.628605365753174
    3. '```' → logprob: -12.628604888916016
    4. '   ' → logprob: -14.253604888916016
    5. '`' → logprob: -15.253604888916016
    6. ' ' → logprob: -15.878604888916016
    7. 'v' → logprob: -15.878604888916016
    8. '	to' → logprob: -16.003604888916016
    9. 't' → logprob: -16.253604888916016
    10. '[to' → logprob: -16.378604888916016

Token 1099: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014176442287862301
    2. 'in' → logprob: -4.264176368713379
    3. '	in' → logprob: -12.014176368713379
    4. '_in' → logprob: -13.514176368713379
    5. ',' → logprob: -14.014176368713379
    6. 'es' → logprob: -14.139176368713379
    7. 's' → logprob: -14.139176368713379
    8. ' ' → logprob: -14.264176368713379
    9. '```' → logprob: -14.764176368713379
    10. 'import' → logprob: -15.139176368713379

Token 1100: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.007698314264416695
    2. ' es' → logprob: -4.8826985359191895
    3. 'cs' → logprob: -9.632698059082031
    4. '
' → logprob: -11.507698059082031
    5. '	es' → logprob: -12.007698059082031
    6. '[' → logprob: -13.007698059082031
    7. '(es' → logprob: -13.382698059082031
    8. 'v' → logprob: -13.507698059082031
    9. 'range' → logprob: -14.382698059082031
    10. 'e' → logprob: -14.632698059082031

Token 1101: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.572941179503687e-05
    2. 'v' → logprob: -10.000045776367188
    3. '[i' → logprob: -16.000045776367188
    4. '[' → logprob: -16.875045776367188
    5. '[
' → logprob: -17.250045776367188
    6. '```' → logprob: -17.375045776367188
    7. '(v' → logprob: -17.500045776367188
    8. '   ' → logprob: -17.750045776367188
    9. '[u' → logprob: -18.125045776367188
    10. '	v' → logprob: -18.375045776367188

Token 1102: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11619003117084503
    2. ':' → logprob: -2.241189956665039
    3. '           ' → logprob: -6.116189956665039
    4. '       ' → logprob: -7.116189956665039
    5. ']:
' → logprob: -8.616189956665039
    6. '   ' → logprob: -10.241189956665039
    7. '[' → logprob: -10.241189956665039
    8. '):
' → logprob: -10.866189956665039
    9. '```' → logprob: -11.616189956665039
    10. '():
' → logprob: -11.616189956665039

Token 1103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031470584217458963
    2. '```' → logprob: -6.128147125244141
    3. 'if' → logprob: -8.00314712524414
    4. ' if' → logprob: -8.37814712524414
    5. ':' → logprob: -8.75314712524414
    6. '       ' → logprob: -9.87814712524414
    7. '               ' → logprob: -10.12814712524414
    8. ':
' → logprob: -10.50314712524414
    9. '<|end|>' → logprob: -10.50314712524414
    10. '[' → logprob: -11.12814712524414

Token 1104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10980349034070969
    2. 'if' (adapté à ' if') → logprob: -2.4848034381866455
    3. '           ' → logprob: -4.234803676605225
    4. '               ' → logprob: -5.484803676605225
    5. ' 
' → logprob: -7.734803676605225
    6. '            ' → logprob: -7.734803676605225
    7. '```' → logprob: -7.859803676605225
    8. '       ' → logprob: -8.484803199768066
    9. ' ' → logprob: -9.109803199768066
    10. '                ' → logprob: -9.609803199768066

Token 1105: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0263811182230711
    2. ' tin' → logprob: -3.651381015777588
    3. 't' → logprob: -11.276381492614746
    4. 'to' → logprob: -11.526381492614746
    5. '```' → logprob: -11.526381492614746
    6. '   ' → logprob: -11.901381492614746
    7. ' ' → logprob: -12.151381492614746
    8. 'not' → logprob: -12.776381492614746
    9. '               ' → logprob: -12.776381492614746
    10. '           ' → logprob: -12.901381492614746

Token 1106: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.006829513236880302
    2. 'to' → logprob: -5.006829738616943
    3. '(to' → logprob: -9.131829261779785
    4. '[v' → logprob: -13.506829261779785
    5. ' to' → logprob: -13.631829261779785
    6. '[' → logprob: -13.631829261779785
    7. 'v' → logprob: -14.381829261779785
    8. '```' → logprob: -14.506829261779785
    9. 'To' → logprob: -15.756829261779785
    10. ',to' → logprob: -15.881829261779785

Token 1107: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00259539601393044
    2. '<' → logprob: -6.3775954246521
    3. '<v' → logprob: -8.252594947814941
    4. '[v' → logprob: -8.502594947814941
    5. ' >' → logprob: -9.127594947814941
    6. '[' → logprob: -9.252594947814941
    7. ']' → logprob: -9.252594947814941
    8. '```' → logprob: -10.377594947814941
    9. '>' → logprob: -10.752594947814941
    10. '<p' → logprob: -11.002594947814941

Token 1108: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01670948974788189
    2. '<' → logprob: -4.141709327697754
    3. '<v' → logprob: -8.266709327697754
    4. '[' → logprob: -8.891709327697754
    5. ' >' → logprob: -9.266709327697754
    6. ' >=' → logprob: -9.391709327697754
    7. '>' → logprob: -10.516709327697754
    8. ' <=' → logprob: -11.141709327697754
    9. '<p' → logprob: -11.266709327697754
    10. '[v' → logprob: -11.516709327697754

Token 1109: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0011766550596803427
    2. ' tin' → logprob: -6.751176834106445
    3. 't' → logprob: -13.376176834106445
    4. '0' → logprob: -13.876176834106445
    5. '   ' → logprob: -14.251176834106445
    6. '[t' → logprob: -14.251176834106445
    7. 'tout' → logprob: -14.751176834106445
    8. ' ' → logprob: -15.376176834106445
    9. '[' → logprob: -15.876176834106445
    10. '
' → logprob: -15.876176834106445

Token 1110: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.07327497750520706
    2. 'v' → logprob: -2.948275089263916
    3. '[to' → logprob: -4.073275089263916
    4. 'to' → logprob: -6.823275089263916
    5. '```' → logprob: -10.073274612426758
    6. '[' → logprob: -11.073274612426758
    7. '(v' → logprob: -11.323274612426758
    8. '[t' → logprob: -11.698274612426758
    9. '[u' → logprob: -12.198274612426758
    10. '   ' → logprob: -12.323274612426758

Token 1111: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001535812160000205
    2. ':
' → logprob: -7.501535892486572
    3. ':return' → logprob: -7.876535892486572
    4. '           ' → logprob: -8.751535415649414
    5. ' continue' → logprob: -8.876535415649414
    6. '               ' → logprob: -9.251535415649414
    7. 'continue' → logprob: -9.501535415649414
    8. ' :' → logprob: -9.876535415649414
    9. '):' → logprob: -10.251535415649414
    10. '():' → logprob: -10.626535415649414

Token 1112: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5358096957206726
    2. ' continue' → logprob: -1.0358097553253174
    3. 'continue' → logprob: -2.9108097553253174
    4. ':' → logprob: -5.410809516906738
    5. '```' → logprob: -8.285809516906738
    6. 'Continue' → logprob: -8.660809516906738
    7. '_continue' → logprob: -8.660809516906738
    8. ' continues' → logprob: -9.535809516906738
    9. '           ' → logprob: -9.660809516906738
    10. '	continue' → logprob: -9.660809516906738

Token 1113: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.02107628621160984
    2. 'continue' (adapté à ' continue') → logprob: -4.021076202392578
    3. '               ' → logprob: -5.896076202392578
    4. '                   ' → logprob: -8.771076202392578
    5. '           ' → logprob: -12.146076202392578
    6. '	continue' → logprob: -12.521076202392578
    7. '                ' → logprob: -12.771076202392578
    8. '_continue' → logprob: -13.521076202392578
    9. '```' → logprob: -14.021076202392578
    10. '                       ' → logprob: -14.771076202392578

Token 1114: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030102422460913658
    2. '               ' → logprob: -3.530102491378784
    3. '```' → logprob: -8.905102729797363
    4. ',' → logprob: -9.280102729797363
    5. '       ' → logprob: -9.655102729797363
    6. 'bit' → logprob: -11.280102729797363
    7. ':
' → logprob: -11.905102729797363
    8. ' bit' → logprob: -12.030102729797363
    9. '                   ' → logprob: -12.155102729797363
    10. '   ' → logprob: -12.530102729797363

Token 1115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00804674532264471
    2. '       ' → logprob: -5.633046627044678
    3. '               ' → logprob: -6.008046627044678
    4. 'bit' → logprob: -6.508046627044678
    5. '```' → logprob: -8.133047103881836
    6. ' bit' → logprob: -10.133047103881836
    7. '
' → logprob: -10.258047103881836
    8. 'num' → logprob: -10.383047103881836
    9. '   ' → logprob: -10.758047103881836
    10. ',' → logprob: -11.258047103881836

Token 1116: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.06667619943618774
    2. 'cnt' → logprob: -3.191676139831543
    3. '           ' → logprob: -4.316676139831543
    4. ' num' → logprob: -5.066676139831543
    5. 'ans' → logprob: -6.941676139831543
    6. ' cnt' → logprob: -7.066676139831543
    7. 'bit' → logprob: -7.191676139831543
    8. '               ' → logprob: -7.441676139831543
    9. '   ' → logprob: -9.191676139831543
    10. '       ' → logprob: -9.191676139831543

Token 1117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22603803873062134
    2. '=' → logprob: -1.6010379791259766
    3. ',' → logprob: -7.726037979125977
    4. '   ' → logprob: -9.976037979125977
    5. '=num' → logprob: -9.976037979125977
    6. ' +=' → logprob: -11.101037979125977
    7. '=
' → logprob: -11.601037979125977
    8. '+=' → logprob: -11.601037979125977
    9. '=int' → logprob: -11.726037979125977
    10. '           ' → logprob: -11.851037979125977

Token 1118: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.011059137992560863
    2. ' bit' → logprob: -4.511059284210205
    3. '0' → logprob: -12.386058807373047
    4. '1' → logprob: -12.386058807373047
    5. '(bit' → logprob: -13.636058807373047
    6. '   ' → logprob: -14.886058807373047
    7. ' ' → logprob: -15.386058807373047
    8. 'bits' → logprob: -15.511058807373047
    9. '.bit' → logprob: -16.136058807373047
    10. 'b' → logprob: -16.386058807373047

Token 1119: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.005495564546436071
    2. '.add' → logprob: -5.255495548248291
    3. '.' → logprob: -8.63049602508545
    4. 'sum' → logprob: -9.63049602508545
    5. ' .' → logprob: -11.13049602508545
    6. ' sum' → logprob: -14.50549602508545
    7. '   ' → logprob: -14.88049602508545
    8. '(sum' → logprob: -15.00549602508545
    9. '.s' → logprob: -15.38049602508545
    10. ',sum' → logprob: -15.38049602508545

Token 1120: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.3451433409936726e-05
    2. '(' → logprob: -10.375033378601074
    3. ' (' → logprob: -14.250033378601074
    4. 't' → logprob: -14.500033378601074
    5. '```' → logprob: -14.625033378601074
    6. '(
' → logprob: -14.875033378601074
    7. '   ' → logprob: -17.25003433227539
    8. '	t' → logprob: -17.25003433227539
    9. '((' → logprob: -17.62503433227539
    10. '(T' → logprob: -17.62503433227539

Token 1121: 'in' (ID: 258)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.09235241264104843
    2. 'tin' → logprob: -2.5923523902893066
    3. ' tin' → logprob: -4.967352390289307
    4. '[t' → logprob: -5.717352390289307
    5. 't' → logprob: -6.217352390289307
    6. 'in' → logprob: -8.592352867126465
    7. ' (' → logprob: -8.967352867126465
    8. 'int' → logprob: -9.092352867126465
    9. 'n' → logprob: -9.217352867126465
    10. '(' → logprob: -9.217352867126465

Token 1122: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.7690621018409729
    2. '(to' → logprob: -0.8940621018409729
    3. '(v' → logprob: -2.644062042236328
    4. '[v' → logprob: -2.894062042236328
    5. '[t' → logprob: -7.769062042236328
    6. '(t' → logprob: -8.394062042236328
    7. 'v' → logprob: -8.644062042236328
    8. 'to' → logprob: -8.894062042236328
    9. '[' → logprob: -10.019062042236328
    10. '(' → logprob: -10.144062042236328

Token 1123: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014670114032924175
    2. ' ,' → logprob: -7.376467227935791
    3. ',t' → logprob: -8.001466751098633
    4. '(),' → logprob: -8.251466751098633
    5. '(t' → logprob: -8.751466751098633
    6. '           ' → logprob: -10.876466751098633
    7. ',
' → logprob: -11.376466751098633
    8. '[t' → logprob: -11.876466751098633
    9. ',to' → logprob: -11.876466751098633
    10. '[' → logprob: -12.001466751098633

Token 1124: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.0001805377542041242
    2. ' tout' → logprob: -8.6251802444458
    3. '```' → logprob: -15.8751802444458
    4. '           ' → logprob: -16.125181198120117
    5. '            ' → logprob: -16.125181198120117
    6. '               ' → logprob: -16.375181198120117
    7. '        ' → logprob: -16.500181198120117
    8. '             ' → logprob: -16.500181198120117
    9. 'todo' → logprob: -16.625181198120117
    10. '   ' → logprob: -16.875181198120117

Token 1125: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.9504606825648807e-05
    2. '[v' → logprob: -11.250019073486328
    3. '(to' → logprob: -12.625019073486328
    4. 'to' → logprob: -13.000019073486328
    5. '[' → logprob: -14.625019073486328
    6. '```' → logprob: -15.250019073486328
    7. 'v' → logprob: -16.625019073486328
    8. '[
' → logprob: -17.625019073486328
    9. '   ' → logprob: -18.000019073486328
    10. '[next' → logprob: -18.125019073486328

Token 1126: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14677807688713074
    2. ')
' → logprob: -2.021778106689453
    3. '+' → logprob: -5.896778106689453
    4. '       ' → logprob: -8.146778106689453
    5. ')+' → logprob: -8.146778106689453
    6. '           ' → logprob: -8.771778106689453
    7. '```' → logprob: -9.146778106689453
    8. ' +' → logprob: -9.396778106689453
    9. '):
' → logprob: -9.521778106689453
    10. '])' → logprob: -10.271778106689453

Token 1127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10460874438285828
    2. '               ' → logprob: -3.3546087741851807
    3. '       ' → logprob: -4.354608535766602
    4. '+' → logprob: -4.604608535766602
    5. '[' → logprob: -4.729608535766602
    6. ')' → logprob: -4.729608535766602
    7. '```' → logprob: -4.729608535766602
    8. '<|end|>' → logprob: -5.354608535766602
    9. '   ' → logprob: -6.479608535766602
    10. '(' → logprob: -6.604608535766602

Token 1128: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.045734602957963943
    2. ' history' → logprob: -3.2957346439361572
    3. ' bit' → logprob: -6.170734405517578
    4. 'history' → logprob: -6.295734405517578
    5. ' ans' → logprob: -6.295734405517578
    6. '   ' → logprob: -6.670734405517578
    7. '       ' → logprob: -8.545734405517578
    8. '```' → logprob: -8.670734405517578
    9. 'bit' → logprob: -9.420734405517578
    10. '               ' → logprob: -10.295734405517578

Token 1129: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.030941547825932503
    2. '-=' → logprob: -3.6559414863586426
    3. '   ' → logprob: -6.280941486358643
    4. '           ' → logprob: -6.530941486358643
    5. '-' → logprob: -7.155941486358643
    6. '       ' → logprob: -8.5309419631958
    7. '    ' → logprob: -8.9059419631958
    8. '```' → logprob: -9.5309419631958
    9. '            ' → logprob: -10.5309419631958
    10. '          ' → logprob: -10.6559419631958

Token 1130: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.018151583150029182
    2. ' num' → logprob: -4.018151760101318
    3. '   ' → logprob: -14.14315128326416
    4. '(num' → logprob: -14.26815128326416
    5. '```' → logprob: -15.89315128326416
    6. '           ' → logprob: -16.018152236938477
    7. '	num' → logprob: -16.143152236938477
    8. ' ' → logprob: -17.768152236938477
    9. '
' → logprob: -18.018152236938477
    10. '       ' → logprob: -18.268152236938477

Token 1131: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00038705902989022434
    2. '*' → logprob: -8.000387191772461
    3. ' *' → logprob: -10.000387191772461
    4. '*num' → logprob: -12.375387191772461
    5. '(num' → logprob: -14.125387191772461
    6. '*((' → logprob: -14.375387191772461
    7. ' *(' → logprob: -15.000387191772461
    8. '```' → logprob: -16.00038719177246
    9. '   ' → logprob: -16.37538719177246
    10. ')*(' → logprob: -17.25038719177246

Token 1132: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0025183463003486395
    2. '(num' → logprob: -6.002518177032471
    3. '1' → logprob: -10.127518653869629
    4. ' num' → logprob: -13.252518653869629
    5. '```' → logprob: -15.627518653869629
    6. '	num' → logprob: -15.752518653869629
    7. '   ' → logprob: -15.752518653869629
    8. 'ans' → logprob: -16.377517700195312
    9. '2' → logprob: -16.627517700195312
    10. '
' → logprob: -16.877517700195312

Token 1133: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.625003814697266
    3. '+
' → logprob: -14.000003814697266
    4. ' +' → logprob: -14.500003814697266
    5. '()+' → logprob: -14.625003814697266
    6. '-' → logprob: -16.750003814697266
    7. '+=' → logprob: -16.875003814697266
    8. ')+' → logprob: -17.000003814697266
    9. '(num' → logprob: -17.000003814697266
    10. 'num' → logprob: -17.250003814697266

Token 1134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. '   ' → logprob: -12.500008583068848
    3. ' ' → logprob: -13.000008583068848
    4. '
' → logprob: -14.000008583068848
    5. '```' → logprob: -14.312508583068848
    6. '       ' → logprob: -15.000008583068848
    7. 'to' → logprob: -16.187509536743164
    8. '``' → logprob: -16.500009536743164
    9. '           ' → logprob: -16.562509536743164
    10. '    ' → logprob: -16.625009536743164

Token 1135: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.021801698952913284
    2. '```' → logprob: -4.271801471710205
    3. ')//' → logprob: -5.146801471710205
    4. '()' → logprob: -6.521801471710205
    5. ')' → logprob: -8.396801948547363
    6. '   ' → logprob: -10.521801948547363
    7. 'def' → logprob: -10.896801948547363
    8. ' //' → logprob: -11.146801948547363
    9. '       ' → logprob: -12.021801948547363
    10. '``' → logprob: -12.146801948547363

Token 1136: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011876109056174755
    2. '1' → logprob: -6.751187801361084
    3. '```' → logprob: -11.126187324523926
    4. ' ' → logprob: -13.251187324523926
    5. 'def' → logprob: -15.501187324523926
    6. '   ' → logprob: -15.626187324523926
    7. '0' → logprob: -15.876187324523926
    8. '
' → logprob: -15.876187324523926
    9. '3' → logprob: -16.126188278198242
    10. '``' → logprob: -16.251188278198242

Token 1137: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11426433175802231
    2. '<|end|>' → logprob: -2.4892642498016357
    3. '       ' → logprob: -4.614264488220215
    4. '[' → logprob: -5.239264488220215
    5. ')' → logprob: -5.864264488220215
    6. '<|end|>' → logprob: -6.614264488220215
    7. '   ' → logprob: -6.989264488220215
    8. '
' → logprob: -7.114264488220215
    9. '               ' → logprob: -7.489264488220215
    10. '          ' → logprob: -7.864264488220215

Token 1138: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7383652925491333
    2. '[' → logprob: -1.2383652925491333
    3. '       ' → logprob: -2.2383651733398438
    4. ')' → logprob: -3.2383651733398438
    5. '   ' → logprob: -3.3633651733398438
    6. '           ' → logprob: -3.6133651733398438
    7. '``' → logprob: -5.488365173339844
    8. '               ' → logprob: -6.363365173339844
    9. '=' → logprob: -6.488365173339844
    10. ',' → logprob: -6.488365173339844

Token 1139: ' cnt' (ID: 27340)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5814747214317322
    2. 'cnt' (adapté à ' cnt') → logprob: -0.8314747214317322
    3. '       ' → logprob: -5.831474781036377
    4. ' cnt' → logprob: -6.206474781036377
    5. 'count' → logprob: -8.831474304199219
    6. '	cnt' → logprob: -9.081474304199219
    7. '   ' → logprob: -9.456474304199219
    8. '               ' → logprob: -9.706474304199219
    9. '```' → logprob: -9.956474304199219
    10. '[cnt' → logprob: -10.581474304199219

Token 1140: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09181413054466248
    2. '+=' → logprob: -2.4668140411376953
    3. '```' → logprob: -6.591814041137695
    4. '+' → logprob: -7.216814041137695
    5. '   ' → logprob: -8.216814041137695
    6. '=' → logprob: -8.966814041137695
    7. ',' → logprob: -9.716814041137695
    8. ' -=' → logprob: -10.091814041137695
    9. ' +' → logprob: -10.091814041137695
    10. ')' → logprob: -10.341814041137695

Token 1141: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.47407862544059753
    2. ' num' → logprob: -0.9740786552429199
    3. 'bit' → logprob: -13.974078178405762
    4. ' bit' → logprob: -14.724078178405762
    5. '1' → logprob: -15.724078178405762
    6. '_num' → logprob: -16.849079132080078
    7. '	num' → logprob: -16.849079132080078
    8. '(num' → logprob: -16.849079132080078
    9. '=num' → logprob: -17.224079132080078
    10. ' ' → logprob: -17.849079132080078

Token 1142: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1143: '       ' (ID: 309)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.06655419617891312
    2. 'bit' → logprob: -3.316554307937622
    3. '   ' → logprob: -3.816554307937622
    4. '```' → logprob: -5.191554069519043
    5. '           ' → logprob: -8.316554069519043
    6. '       ' → logprob: -8.441554069519043
    7. '.bit' → logprob: -10.816554069519043
    8. '``' → logprob: -10.816554069519043
    9. '(bit' → logprob: -10.941554069519043
    10. '_bit' → logprob: -11.441554069519043

Token 1144: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.41219353675842285
    2. '   ' → logprob: -1.6621935367584229
    3. 'bit' (adapté à ' bit') → logprob: -1.9121935367584229
    4. '       ' → logprob: -8.662193298339844
    5. '```' → logprob: -8.912193298339844
    6. '           ' → logprob: -11.537193298339844
    7. '(bit' → logprob: -12.287193298339844
    8. '.bit' → logprob: -13.912193298339844
    9. '``' → logprob: -14.037193298339844
    10. '
' → logprob: -14.412193298339844

Token 1145: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00018732868193183094
    2. '.' → logprob: -8.625186920166016
    3. ' .' → logprob: -12.250186920166016
    4. '   ' → logprob: -13.500186920166016
    5. '```' → logprob: -14.500186920166016
    6. 'add' → logprob: -14.750186920166016
    7. '.append' → logprob: -15.125186920166016
    8. ').' → logprob: -15.875186920166016
    9. '`.' → logprob: -17.000186920166016
    10. '       ' → logprob: -17.250186920166016

Token 1146: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -16.25
    3. 't' → logprob: -16.25
    4. '   ' → logprob: -16.25
    5. '(
' → logprob: -17.125
    6. '```' → logprob: -17.375
    7. ' (' → logprob: -18.0
    8. '	t' → logprob: -18.0
    9. '(T' → logprob: -18.125
    10. '       ' → logprob: -18.625

Token 1147: 'in' (ID: 258)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.00690055126324296
    2. '[v' → logprob: -5.381900787353516
    3. 'v' → logprob: -7.131900787353516
    4. '[t' → logprob: -7.381900787353516
    5. ' tin' → logprob: -8.381900787353516
    6. 'vin' → logprob: -8.506900787353516
    7. '(v' → logprob: -8.506900787353516
    8. '   ' → logprob: -9.881900787353516
    9. '[' → logprob: -10.631900787353516
    10. '```' → logprob: -11.006900787353516

Token 1148: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.166338137816638e-05
    2. 'v' → logprob: -10.625031471252441
    3. '(v' → logprob: -12.000031471252441
    4. '```' → logprob: -14.375031471252441
    5. '[' → logprob: -15.000031471252441
    6. '   ' → logprob: -16.000032424926758
    7. '	v' → logprob: -16.625032424926758
    8. '       ' → logprob: -18.125032424926758
    9. '<v' → logprob: -18.375032424926758
    10. '[
' → logprob: -18.500032424926758

Token 1149: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01690584048628807
    2. '[v' → logprob: -4.266905784606934
    3. ',v' → logprob: -6.266905784606934
    4. '```' → logprob: -8.016905784606934
    5. ' ,' → logprob: -9.266905784606934
    6. '(v' → logprob: -9.391905784606934
    7. '[' → logprob: -9.516905784606934
    8. '   ' → logprob: -9.766905784606934
    9. '`,' → logprob: -10.141905784606934
    10. 'v' → logprob: -10.141905784606934

Token 1150: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.039231304079294205
    2. ' -' → logprob: -3.289231300354004
    3. '-t' → logprob: -7.539231300354004
    4. '-c' → logprob: -8.664231300354004
    5. '-code' → logprob: -9.289231300354004
    6. '-counter' → logprob: -9.414231300354004
    7. '-token' → logprob: -10.039231300354004
    8. '-C' → logprob: -10.164231300354004
    9. '-int' → logprob: -10.414231300354004
    10. '-n' → logprob: -10.789231300354004

Token 1151: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -6.869017852295656e-06
    2. '1' → logprob: -12.375006675720215
    3. '(cnt' → logprob: -13.250006675720215
    4. ' cnt' → logprob: -14.500006675720215
    5. '	cnt' → logprob: -15.875006675720215
    6. '[cnt' → logprob: -16.12500762939453
    7. 'count' → logprob: -16.25000762939453
    8. 'ctr' → logprob: -18.00000762939453
    9. '       ' → logprob: -18.62500762939453
    10. 'ct' → logprob: -19.25000762939453

Token 1152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005558936391025782
    2. ')
' → logprob: -8.000555992126465
    3. '   ' → logprob: -9.125555992126465
    4. '<|end|>' → logprob: -9.500555992126465
    5. ',' → logprob: -10.500555992126465
    6. ')return' → logprob: -12.750555992126465
    7. '```' → logprob: -13.125555992126465
    8. '       ' → logprob: -13.625555992126465
    9. '<|end|>' → logprob: -13.875555992126465
    10. '),' → logprob: -14.250555992126465

Token 1153: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6174779534339905
    2. ' history' → logprob: -1.3674778938293457
    3. 'history' → logprob: -1.9924778938293457
    4. '```' → logprob: -2.8674778938293457
    5. '<|end|>' → logprob: -4.867477893829346
    6. '(history' → logprob: -6.242477893829346
    7. '_history' → logprob: -6.867477893829346
    8. '[' → logprob: -7.492477893829346
    9. '       ' → logprob: -7.742477893829346
    10. ')' → logprob: -8.117478370666504

Token 1154: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' (adapté à ' history') → logprob: -0.0013653546338900924
    2. ' history' → logprob: -7.0013651847839355
    3. '   ' → logprob: -7.7513651847839355
    4. '```' → logprob: -11.001365661621094
    5. '       ' → logprob: -12.251365661621094
    6. '_history' → logprob: -14.251365661621094
    7. '.history' → logprob: -14.376365661621094
    8. '(history' → logprob: -14.751365661621094
    9. '	h' → logprob: -14.876365661621094
    10. 'History' → logprob: -15.751365661621094

Token 1155: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001175343873910606
    2. '.' → logprob: -6.751175403594971
    3. '.app' → logprob: -13.126174926757812
    4. 'append' → logprob: -13.751174926757812
    5. '.extend' → logprob: -14.376174926757812
    6. '.push' → logprob: -14.501174926757812
    7. 'Append' → logprob: -15.751174926757812
    8. '       ' → logprob: -15.876174926757812
    9. '.Append' → logprob: -15.876174926757812
    10. ' .' → logprob: -16.251174926757812

Token 1156: '((' (ID: 2054)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.011624542996287346
    2. '((' → logprob: -4.511624336242676
    3. ' (' → logprob: -8.136624336242676
    4. '(' → logprob: -8.761624336242676
    5. '   ' → logprob: -9.261624336242676
    6. '(T' → logprob: -11.511624336242676
    7. '```' → logprob: -12.011624336242676
    8. '       ' → logprob: -12.386624336242676
    9. '(
' → logprob: -12.636624336242676
    10. '[(' → logprob: -13.261624336242676

Token 1157: 'tin' (ID: 63664)
  Prédit: 'tin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0004281659494154155
    2. ' tin' → logprob: -8.500428199768066
    3. '(t' → logprob: -8.625428199768066
    4. '   ' → logprob: -11.000428199768066
    5. 't' → logprob: -11.125428199768066
    6. '	t' → logprob: -12.750428199768066
    7. '```' → logprob: -12.750428199768066
    8. '\t' → logprob: -14.250428199768066
    9. 'tan' → logprob: -14.250428199768066
    10. ' (' → logprob: -14.375428199768066

Token 1158: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.534558552724775e-05
    2. 'v' → logprob: -10.750025749206543
    3. '[' → logprob: -13.500025749206543
    4. '(v' → logprob: -13.750025749206543
    5. ',v' → logprob: -14.000025749206543
    6. '```' → logprob: -15.000025749206543
    7. '	v' → logprob: -16.000024795532227
    8. '<v' → logprob: -16.875024795532227
    9. '[
' → logprob: -17.500024795532227
    10. ')v' → logprob: -17.625024795532227

Token 1159: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ',
' → logprob: -13.125007629394531
    3. '‌,' → logprob: -13.625007629394531
    4. '),' → logprob: -13.750007629394531
    5. ',),' → logprob: -14.000007629394531
    6. '<|end|>' → logprob: -14.000007629394531
    7. '```' → logprob: -15.125007629394531
    8. ' ,' → logprob: -15.125007629394531
    9. '`,' → logprob: -15.500007629394531
    10. '       ' → logprob: -15.875007629394531

Token 1160: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -9.65101717156358e-05
    2. ' cnt' → logprob: -9.250096321105957
    3. '(cnt' → logprob: -15.750096321105957
    4. '	cnt' → logprob: -16.250097274780273
    5. '[cnt' → logprob: -16.875097274780273
    6. '
' → logprob: -17.750097274780273
    7. 'counter' → logprob: -20.000097274780273
    8. '   ' → logprob: -20.375097274780273
    9. ' ' → logprob: -21.375097274780273
    10. '_cnt' → logprob: -21.500097274780273

Token 1161: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5772197246551514
    2. '))' → logprob: -0.8272197246551514
    3. ')
' → logprob: -7.2022199630737305
    4. '))
' → logprob: -7.5772199630737305
    5. ')))' → logprob: -12.20221996307373
    6. '   ' → logprob: -12.32721996307373
    7. '),' → logprob: -12.70221996307373
    8. '       ' → logprob: -13.45221996307373
    9. ')}' → logprob: -13.45221996307373
    10. '```' → logprob: -13.95221996307373

Token 1162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7237274646759033
    2. '```' → logprob: -0.7237274646759033
    3. ')' → logprob: -4.473727226257324
    4. 'def' → logprob: -4.973727226257324
    5. '<|end|>' → logprob: -4.973727226257324
    6. '
' → logprob: -6.473727226257324
    7. '       ' → logprob: -6.848727226257324
    8. '``' → logprob: -7.098727226257324
    9. ' for' → logprob: -8.223727226257324
    10. ')
' → logprob: -8.348727226257324

Token 1163: ' pn' (ID: 80046)
  Prédit: 'restore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'restore' → logprob: -0.44334083795547485
    2. '   ' → logprob: -1.19334077835083
    3. 'for' → logprob: -3.19334077835083
    4. 'def' → logprob: -4.69334077835083
    5. '```' → logprob: -5.69334077835083
    6. 'return' → logprob: -7.31834077835083
    7. ' restore' → logprob: -8.318341255187988
    8. ' for' → logprob: -8.318341255187988
    9. '
' → logprob: -9.193341255187988
    10. '    
' → logprob: -11.068341255187988

Token 1164: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0124563192948699
    2. '=' → logprob: -4.63745641708374
    3. ' =' → logprob: -6.13745641708374
    4. '   ' → logprob: -7.88745641708374
    5. ')' → logprob: -10.137455940246582
    6. ' ,' → logprob: -10.137455940246582
    7. '[' → logprob: -10.387455940246582
    8. ',
' → logprob: -11.262455940246582
    9. '```' → logprob: -11.262455940246582
    10. ',p' → logprob: -11.387455940246582

Token 1165: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2519293427467346
    2. ' bit' → logprob: -1.5019292831420898
    3. '(bit' → logprob: -15.87692928314209
    4. '0' → logprob: -17.001930236816406
    5. '.bit' → logprob: -18.251930236816406
    6. 'bits' → logprob: -18.251930236816406
    7. 'b' → logprob: -18.501930236816406
    8. 'Bit' → logprob: -18.751930236816406
    9. '_bit' → logprob: -18.751930236816406
    10. '   ' → logprob: -18.876930236816406

Token 1166: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.019968653097748756
    2. 'sum' → logprob: -4.394968509674072
    3. '=sum' → logprob: -5.644968509674072
    4. '_sum' → logprob: -6.019968509674072
    5. '.add' → logprob: -7.394968509674072
    6. ' =' → logprob: -7.394968509674072
    7. '.' → logprob: -9.89496898651123
    8. '=' → logprob: -10.01996898651123
    9. ',sum' → logprob: -10.01996898651123
    10. '   ' → logprob: -11.14496898651123

Token 1167: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.676981345459353e-06
    2. '0' → logprob: -12.500005722045898
    3. '```' → logprob: -13.375005722045898
    4. ' (' → logprob: -15.125005722045898
    5. '(
' → logprob: -16.0000057220459
    6. '[' → logprob: -18.8750057220459
    7. '   ' → logprob: -19.8750057220459
    8. '`' → logprob: -20.2500057220459
    9. ',' → logprob: -20.3750057220459
    10. 'def' → logprob: -20.5000057220459

Token 1168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.000017166137695
    3. '```' → logprob: -17.500017166137695
    4. ' ' → logprob: -18.125017166137695
    5. '(
' → logprob: -19.250017166137695
    6. '۰' → logprob: -19.875017166137695
    7. ')' → logprob: -20.250017166137695
    8. ',' → logprob: -20.250017166137695
    9. '０' → logprob: -20.625017166137695
    10. '[' → logprob: -21.000017166137695

Token 1169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013500562636181712
    2. '0' → logprob: -10.25013542175293
    3. ',p' → logprob: -10.37513542175293
    4. ' ,' → logprob: -10.75013542175293
    5. '   ' → logprob: -10.87513542175293
    6. '(' → logprob: -11.62513542175293
    7. '```' → logprob: -11.87513542175293
    8. ',n' → logprob: -12.37513542175293
    9. '(),' → logprob: -13.12513542175293
    10. '`,' → logprob: -13.62513542175293

Token 1170: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011951648048125207
    2. 'len' → logprob: -9.37511920928955
    3. ' N' → logprob: -10.37511920928955
    4. '   ' → logprob: -13.75011920928955
    5. '0' → logprob: -13.87511920928955
    6. '```' → logprob: -14.62511920928955
    7. 'n' → logprob: -14.87511920928955
    8. ' len' → logprob: -16.000120162963867
    9. ',N' → logprob: -16.375120162963867
    10. '	N' → logprob: -16.750120162963867

Token 1171: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4461953639984131
    2. '   ' → logprob: -1.321195363998413
    3. ')' → logprob: -2.946195363998413
    4. ')
' → logprob: -3.446195363998413
    5. '```' → logprob: -4.821195602416992
    6. ',
' → logprob: -8.321195602416992
    7. ',p' → logprob: -9.696195602416992
    8. '),' → logprob: -9.821195602416992
    9. '-' → logprob: -9.946195602416992
    10. '``' → logprob: -10.071195602416992

Token 1172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026943039149045944
    2. '```' → logprob: -3.6519429683685303
    3. 'ans' → logprob: -8.52694320678711
    4. '``' → logprob: -9.15194320678711
    5. '<|end|>' → logprob: -9.15194320678711
    6. '	ans' → logprob: -9.27694320678711
    7. ' ans' → logprob: -9.40194320678711
    8. '(ans' → logprob: -11.15194320678711
    9. '
' → logprob: -11.40194320678711
    10. '       ' → logprob: -11.90194320678711

Token 1173: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47528278827667236
    2. 'ans' (adapté à ' ans') → logprob: -0.9752827882766724
    3. ' ans' → logprob: -7.225282669067383
    4. '	ans' → logprob: -7.850282669067383
    5. '```' → logprob: -9.600282669067383
    6. '(ans' → logprob: -11.475282669067383
    7. '_ans' → logprob: -11.975282669067383
    8. '``' → logprob: -14.100282669067383
    9. 'anst' → logprob: -14.350282669067383
    10. 'answer' → logprob: -14.475282669067383

Token 1174: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.019935818389058113
    2. '   ' → logprob: -4.019935607910156
    3. '-=' → logprob: -6.519935607910156
    4. '```' → logprob: -8.269935607910156
    5. '-' → logprob: -10.019935607910156
    6. '  ' → logprob: -13.394935607910156
    7. '=' → logprob: -13.519935607910156
    8. '    ' → logprob: -13.519935607910156
    9. ')' → logprob: -13.769935607910156
    10. '       ' → logprob: -14.019935607910156

Token 1175: ' pn' (ID: 80046)
  Prédit: 'pn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pn' → logprob: -0.20141363143920898
    2. ' pn' → logprob: -1.701413631439209
    3. 'p' → logprob: -15.201414108276367
    4. ' penn' → logprob: -17.326414108276367
    5. '```' → logprob: -17.701414108276367
    6. '   ' → logprob: -17.826414108276367
    7. 'pmn' → logprob: -17.951414108276367
    8. '	p' → logprob: -18.451414108276367
    9. ' ' → logprob: -18.701414108276367
    10. '[p' → logprob: -18.701414108276367

Token 1176: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0007235141238197684
    2. '*' → logprob: -7.250723361968994
    3. ' *' → logprob: -11.375723838806152
    4. '```' → logprob: -13.500723838806152
    5. '**' → logprob: -14.625723838806152
    6. '*((' → logprob: -16.250722885131836
    7. '`' → logprob: -16.750722885131836
    8. ' *(' → logprob: -17.250722885131836
    9. '   ' → logprob: -17.625722885131836
    10. '*num' → logprob: -17.625722885131836

Token 1177: 'pn' (ID: 25801)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.01023138128221035
    2. '*(' → logprob: -5.5102314949035645
    3. '(ans' → logprob: -5.6352314949035645
    4. 'pn' → logprob: -6.6352314949035645
    5. '(' → logprob: -7.1352314949035645
    6. '*' → logprob: -8.010231018066406
    7. '(P' → logprob: -10.135231018066406
    8. 'ans' → logprob: -10.510231018066406
    9. '*p' → logprob: -11.385231018066406
    10. ' (' → logprob: -11.385231018066406

Token 1178: '+' (ID: 10)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.055661287158727646
    2. '+' → logprob: -3.805661201477051
    3. '```' → logprob: -3.930661201477051
    4. '*' → logprob: -4.680661201477051
    5. '2' → logprob: -6.555661201477051
    6. ')*(' → logprob: -7.180661201477051
    7. '(' → logprob: -8.05566120147705
    8. '``' → logprob: -8.80566120147705
    9. '**' → logprob: -9.18066120147705
    10. '[' → logprob: -9.80566120147705

Token 1179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007812766125425696
    2. '2' → logprob: -7.375781059265137
    3. '(' → logprob: -9.125781059265137
    4. 'pn' → logprob: -11.125781059265137
    5. '*(' → logprob: -12.000781059265137
    6. '
' → logprob: -12.125781059265137
    7. '(p' → logprob: -12.250781059265137
    8. '   ' → logprob: -12.375781059265137
    9. '*' → logprob: -12.875781059265137
    10. ' ' → logprob: -13.000781059265137

Token 1180: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.005777811631560326
    2. '()' → logprob: -5.505777835845947
    3. '```' → logprob: -7.005777835845947
    4. ')//' → logprob: -7.255777835845947
    5. ' //' → logprob: -10.380777359008789
    6. '   ' → logprob: -10.630777359008789
    7. ')' → logprob: -11.505777359008789
    8. '
' → logprob: -12.380777359008789
    9. '}//' → logprob: -12.630777359008789
    10. '']//' → logprob: -13.130777359008789

Token 1181: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012724831700325012
    2. '1' → logprob: -4.387724876403809
    3. '```' → logprob: -8.512724876403809
    4. '   ' → logprob: -12.262724876403809
    5. '0' → logprob: -12.512724876403809
    6. ' ' → logprob: -13.012724876403809
    7. '//' → logprob: -13.512724876403809
    8. '/' → logprob: -14.262724876403809
    9. 'def' → logprob: -14.637724876403809
    10. '``' → logprob: -15.387724876403809

Token 1182: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022165674716234207
    2. '
' → logprob: -3.8971657752990723
    3. ' history' → logprob: -7.522165775299072
    4. '```' → logprob: -7.647165775299072
    5. ' bit' → logprob: -8.772165298461914
    6. ')' → logprob: -9.022165298461914
    7. 'history' → logprob: -9.272165298461914
    8. '<|end|>' → logprob: -9.772165298461914
    9. '    
' → logprob: -10.272165298461914
    10. ')
' → logprob: -10.272165298461914

Token 1183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0249775517731905
    2. '
' → logprob: -4.399977684020996
    3. 'history' → logprob: -6.024977684020996
    4. '<|end|>' → logprob: -6.149977684020996
    5. '```' → logprob: -6.149977684020996
    6. 'bit' → logprob: -6.274977684020996
    7. ')' → logprob: -6.649977684020996
    8. ' history' → logprob: -6.774977684020996
    9. ' bit' → logprob: -7.774977684020996
    10. '[' → logprob: -8.524977684020996

Token 1184: ' for' (ID: 395)
  Prédit: 'restore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'restore' → logprob: -0.043683864176273346
    2. 'history' → logprob: -3.9186837673187256
    3. '   ' → logprob: -4.168684005737305
    4. 'for' (adapté à ' for') → logprob: -5.543684005737305
    5. 'return' → logprob: -6.043684005737305
    6. '```' → logprob: -7.543684005737305
    7. ' restore' → logprob: -8.043684005737305
    8. 'bit' → logprob: -9.168684005737305
    9. ' history' → logprob: -9.668684005737305
    10. 'rest' → logprob: -10.168684005737305

Token 1185: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00026646157493814826
    2. '_,' → logprob: -8.750266075134277
    3. '(a' → logprob: -10.125266075134277
    4. ' a' → logprob: -10.375266075134277
    5. '   ' → logprob: -11.375266075134277
    6. 'v' → logprob: -11.625266075134277
    7. '_a' → logprob: -12.000266075134277
    8. ',a' → logprob: -12.875266075134277
    9. '(_,' → logprob: -13.500266075134277
    10. ',' → logprob: -13.750266075134277

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ' ,' → logprob: -12.625006675720215
    3. ',b' → logprob: -13.250006675720215
    4. ',
' → logprob: -14.125006675720215
    5. ',a' → logprob: -14.500006675720215
    6. ',h' → logprob: -15.250006675720215
    7. '```' → logprob: -16.00000762939453
    8. ' in' → logprob: -16.12500762939453
    9. ',t' → logprob: -16.25000762939453
    10. ',v' → logprob: -16.50000762939453

Token 1187: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. 'a' → logprob: -18.37520408630371
    4. '```' → logprob: -18.62520408630371
    5. '	b' → logprob: -19.12520408630371
    6. ',b' → logprob: -19.50020408630371
    7. '_b' → logprob: -20.62520408630371
    8. '   ' → logprob: -20.62520408630371
    9. ',' → logprob: -22.50020408630371
    10. '_,' → logprob: -22.87520408630371

Token 1188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7324305176734924
    2. 'in' → logprob: -0.8574305176734924
    3. ',' → logprob: -2.3574304580688477
    4. '   ' → logprob: -8.232430458068848
    5. '```' → logprob: -10.482430458068848
    6. ' ,' → logprob: -10.732430458068848
    7. 'history' → logprob: -12.107430458068848
    8. '
' → logprob: -12.232430458068848
    9. '       ' → logprob: -12.482430458068848
    10. '	in' → logprob: -12.607430458068848

Token 1189: ' history' (ID: 5678)
  Prédit: 'history'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'history' → logprob: -0.004079470410943031
    2. ' history' → logprob: -5.504079341888428
    3. '_history' → logprob: -14.629079818725586
    4. '(history' → logprob: -15.004079818725586
    5. '
' → logprob: -15.504079818725586
    6. 'History' → logprob: -17.254079818725586
    7. 'in' → logprob: -17.254079818725586
    8. '.history' → logprob: -17.504079818725586
    9. '   ' → logprob: -17.754079818725586
    10. ' in' → logprob: -18.129079818725586

Token 1190: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14814184606075287
    2. ':' → logprob: -2.023141860961914
    3. '   ' → logprob: -6.023141860961914
    4. ',' → logprob: -6.273141860961914
    5. '       ' → logprob: -6.898141860961914
    6. '):
' → logprob: -9.898141860961914
    7. '[' → logprob: -10.273141860961914
    8. '=' → logprob: -11.023141860961914
    9. ' in' → logprob: -11.398141860961914
    10. '[::-' → logprob: -11.898141860961914

Token 1191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26007524132728577
    2. '   ' → logprob: -1.6350752115249634
    3. '```' → logprob: -3.510075330734253
    4. 'bit' → logprob: -6.510075092315674
    5. ' bit' → logprob: -6.510075092315674
    6. ':' → logprob: -7.760075092315674
    7. '``' → logprob: -9.010075569152832
    8. ':
' → logprob: -9.135075569152832
    9. '(bit' → logprob: -9.260075569152832
    10. '):
' → logprob: -9.635075569152832

Token 1192: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.018175575882196426
    2. ' bit' → logprob: -4.0181756019592285
    3. '       ' → logprob: -10.76817512512207
    4. '   ' → logprob: -12.64317512512207
    5. '```' → logprob: -13.64317512512207
    6. '           ' → logprob: -16.51817512512207
    7. '_bit' → logprob: -17.76817512512207
    8. '(bit' → logprob: -18.14317512512207
    9. 'bits' → logprob: -18.39317512512207
    10. '.bit' → logprob: -18.51817512512207

Token 1193: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.24179228907451e-05
    2. '.' → logprob: -9.750061988830566
    3. '```' → logprob: -12.625061988830566
    4. ' .' → logprob: -15.625061988830566
    5. 'add' → logprob: -15.625061988830566
    6. '   ' → logprob: -16.000062942504883
    7. '`.' → logprob: -16.375062942504883
    8. '+.' → logprob: -16.875062942504883
    9. '.Add' → logprob: -17.000062942504883
    10. ').' → logprob: -17.250062942504883

Token 1194: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00012773419439326972
    2. 'a' → logprob: -9.250127792358398
    3. '(' → logprob: -10.375127792358398
    4. ' (' → logprob: -16.1251277923584
    5. '(
' → logprob: -16.3751277923584
    6. '```' → logprob: -16.6251277923584
    7. ' a' → logprob: -16.7501277923584
    8. '   ' → logprob: -18.5001277923584
    9. '	a' → logprob: -19.7501277923584
    10. '\(' → logprob: -21.3751277923584

Token 1195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020069109741598368
    2. ',b' → logprob: -6.252007007598877
    3. 'b' → logprob: -10.002006530761719
    4. ' ,' → logprob: -11.002006530761719
    5. '```' → logprob: -11.502006530761719
    6. ' b' → logprob: -12.502006530761719
    7. ',a' → logprob: -14.252006530761719
    8. '`,' → logprob: -14.752006530761719
    9. 'a' → logprob: -14.752006530761719
    10. ',
' → logprob: -15.002006530761719

Token 1196: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02324547804892063
    2. ' b' → logprob: -3.7732455730438232
    3. ')b' → logprob: -19.523244857788086
    4. '+' → logprob: -19.773244857788086
    5. '+b' → logprob: -20.148244857788086
    6. '	b' → logprob: -21.523244857788086
    7. '>b' → logprob: -21.648244857788086
    8. '    ' → logprob: -22.273244857788086
    9. '```' → logprob: -22.648244857788086
    10. '   ' → logprob: -22.898244857788086

Token 1197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018934207037091255
    2. '   ' → logprob: -4.89393424987793
    3. '```' → logprob: -5.39393424987793
    4. '<|end|>' → logprob: -5.76893424987793
    5. ')
' → logprob: -6.14393424987793
    6. ',' → logprob: -7.01893424987793
    7. '       ' → logprob: -8.76893424987793
    8. '
' → logprob: -9.26893424987793
    9. 'def' → logprob: -9.89393424987793
    10. '``' → logprob: -10.26893424987793

Token 1198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011154505191370845
    2. '<|end|>' → logprob: -7.126115322113037
    3. ')' → logprob: -9.126115798950195
    4. '    
' → logprob: -9.376115798950195
    5. '```' → logprob: -10.001115798950195
    6. '
' → logprob: -10.376115798950195
    7. 'return' → logprob: -11.501115798950195
    8. '       ' → logprob: -12.251115798950195
    9. ' return' → logprob: -12.501115798950195
    10. ']' → logprob: -12.626115798950195

Token 1199: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003309361054562032
    2. 'return' (adapté à ' return') → logprob: -8.125330924987793
    3. '<|end|>' → logprob: -10.875330924987793
    4. 'def' → logprob: -12.250330924987793
    5. '```' → logprob: -12.500330924987793
    6. '       ' → logprob: -13.375330924987793
    7. ')' → logprob: -13.500330924987793
    8. ' return' → logprob: -13.500330924987793
    9. '	return' → logprob: -13.875330924987793
    10. '    
' → logprob: -14.625330924987793

Token 1200: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.7697225252486533e-06
    2. ' ans' → logprob: -12.500003814697266
    3. '(ans' → logprob: -19.500003814697266
    4. '	ans' → logprob: -21.250003814697266
    5. '   ' → logprob: -22.750003814697266
    6. '
' → logprob: -24.000003814697266
    7. 'int' → logprob: -24.625003814697266
    8. 'answer' → logprob: -24.625003814697266
    9. '_ans' → logprob: -24.625003814697266
    10. 'ANS' → logprob: -25.500003814697266

Token 1201: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019833441823720932
    2. 'if' → logprob: -4.144833564758301
    3. '<|end|>' → logprob: -6.144833564758301
    4. '#' → logprob: -7.019833564758301
    5. 'import' → logprob: -7.894833564758301
    6. 'for' → logprob: -8.8948335647583
    7. '```' → logprob: -9.0198335647583
    8. '
' → logprob: -10.3948335647583
    9. ' if' → logprob: -10.8948335647583
    10. ')' → logprob: -10.8948335647583

Token 1202: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3085596561431885
    2. '<|end|>' → logprob: -1.4335596561431885
    3. '#' → logprob: -4.183559417724609
    4. ')' → logprob: -5.808559417724609
    5. '[' → logprob: -6.058559417724609
    6. '```' → logprob: -6.308559417724609
    7. '<|end|>' → logprob: -6.308559417724609
    8. '
' → logprob: -6.933559417724609
    9. '.' → logprob: -7.683559417724609
    10. 'import' → logprob: -8.05855941772461

Token 1203: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3544423381972592e-05
    2. ' main' → logprob: -11.25001335144043
    3. '_main' → logprob: -14.62501335144043
    4. '	main' → logprob: -17.37501335144043
    5. 'run' → logprob: -18.12501335144043
    6. 'def' → logprob: -18.62501335144043
    7. 'if' → logprob: -19.50001335144043
    8. 'solve' → logprob: -19.62501335144043
    9. '__' → logprob: -19.87501335144043
    10. '```' → logprob: -20.12501335144043

Token 1204: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016374750062823296
    2. '_result' → logprob: -5.391374588012695
    3. '(
' → logprob: -5.766374588012695
    4. '("("' → logprob: -6.266374588012695
    5. '_results' → logprob: -6.516374588012695
    6. '()' → logprob: -7.016374588012695
    7. '("_' → logprob: -7.141374588012695
    8. '('' → logprob: -7.266374588012695
    9. '(_' → logprob: -7.391374588012695
    10. '(result' → logprob: -7.391374588012695

Token 1205: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7861482501029968
    2. '():' → logprob: -1.0361483097076416
    3. '(result' → logprob: -2.0361483097076416
    4. '():
' → logprob: -4.0361480712890625
    5. '(_' → logprob: -4.6611480712890625
    6. '()' → logprob: -4.6611480712890625
    7. '(s' → logprob: -5.1611480712890625
    8. 's' → logprob: -6.0361480712890625
    9. '("("' → logprob: -6.2861480712890625
    10. '_' → logprob: -6.4111480712890625

Token 1206: 's' (ID: 82)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6193478107452393
    2. '):
' → logprob: -0.9943478107452393
    3. 's' → logprob: -2.7443478107452393
    4. '   ' → logprob: -4.49434757232666
    5. '(ans' → logprob: -5.36934757232666
    6. ')' → logprob: -5.49434757232666
    7. ',' → logprob: -6.36934757232666
    8. '```' → logprob: -6.49434757232666
    9. ')(' → logprob: -6.99434757232666
    10. '(' → logprob: -7.49434757232666

Token 1207: '):
' (ID: 1883)
  Prédit: '(es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -1.0699896812438965
    2. '(ans' → logprob: -1.3199896812438965
    3. '(' → logprob: -1.5699896812438965
    4. 's' → logprob: -2.6949896812438965
    5. '):' → logprob: -3.0699896812438965
    6. 'es' → logprob: -4.1949896812438965
    7. '):
' → logprob: -4.1949896812438965
    8. '   ' → logprob: -4.5699896812438965
    9. '```' → logprob: -5.3199896812438965
    10. '(
' → logprob: -5.6949896812438965

Token 1208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19332973659038544
    2. 'def' → logprob: -2.4433298110961914
    3. '```' → logprob: -2.5683298110961914
    4. 'for' → logprob: -4.443329811096191
    5. ' for' → logprob: -8.318329811096191
    6. ':' → logprob: -8.943329811096191
    7. '``' → logprob: -10.318329811096191
    8. '`' → logprob: -10.693329811096191
    9. '
' → logprob: -11.068329811096191
    10. ' def' → logprob: -11.068329811096191

Token 1209: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.93579563125968e-05
    2. '   ' → logprob: -9.500089645385742
    3. ' for' → logprob: -11.250089645385742
    4. '```' → logprob: -13.750089645385742
    5. 'print' (adapté à ' print') → logprob: -14.750089645385742
    6. '``' → logprob: -18.250089645385742
    7. 'def' → logprob: -18.750089645385742
    8. '
' → logprob: -18.875089645385742
    9. '	for' → logprob: -19.625089645385742
    10. '`' → logprob: -20.375089645385742

Token 1210: '(*' (ID: 9000)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4830477237701416
    2. '(*' → logprob: -0.9830477237701416
    3. '(' → logprob: -5.7330474853515625
    4. '(ans' → logprob: -6.2330474853515625
    5. '('' → logprob: -6.3580474853515625
    6. '('\' → logprob: -7.2330474853515625
    7. '*' → logprob: -7.9830474853515625
    8. 'ans' → logprob: -8.108047485351562
    9. '(len' → logprob: -8.983047485351562
    10. '("")' → logprob: -9.108047485351562

Token 1211: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.226628895296017e-06
    2. '(ans' → logprob: -11.875007629394531
    3. 'anns' → logprob: -15.375007629394531
    4. '[' → logprob: -17.25000762939453
    5. '	ans' → logprob: -18.37500762939453
    6. '*' → logprob: -19.00000762939453
    7. '(*' → logprob: -19.12500762939453
    8. ' ans' → logprob: -19.25000762939453
    9. 'anst' → logprob: -19.25000762939453
    10. 'ann' → logprob: -19.62500762939453

Token 1212: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010218516690656543
    2. 'ts' → logprob: -7.001021862030029
    3. 'ans' → logprob: -10.376021385192871
    4. '_s' → logprob: -11.501021385192871
    5. '```' → logprob: -11.501021385192871
    6. ''s' → logprob: -11.876021385192871
    7. '`s' → logprob: -12.126021385192871
    8. 't' → logprob: -12.126021385192871
    9. ')s' → logprob: -12.251021385192871
    10. ',' → logprob: -12.501021385192871

Token 1213: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005620754323899746
    2. ',' → logprob: -5.255620956420898
    3. '())' → logprob: -8.380620956420898
    4. '()' → logprob: -8.880620956420898
    5. ',)' → logprob: -12.505620956420898
    6. ')`' → logprob: -12.755620956420898
    7. '   ' → logprob: -12.880620956420898
    8. '`)' → logprob: -13.005620956420898
    9. '))' → logprob: -13.755620956420898
    10. '(),' → logprob: -13.880620956420898

Token 1214: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0038205066230148077
    2. ' sep' → logprob: -6.253820419311523
    3. 'se' → logprob: -6.753820419311523
    4. 'end' → logprob: -7.253820419311523
    5. ')' → logprob: -11.753820419311523
    6. 'separator' → logprob: -12.003820419311523
    7. '   ' → logprob: -13.378820419311523
    8. 'Sep' → logprob: -15.878820419311523
    9. ' ' → logprob: -16.128820419311523
    10. ' end' → logprob: -16.503820419311523

Token 1215: '='\' (ID: 106410)
  Prédit: '='\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='\' → logprob: -0.1688038557767868
    2. '='' → logprob: -1.9188038110733032
    3. '="\' → logprob: -5.043803691864014
    4. ''' → logprob: -7.168803691864014
    5. ''\' → logprob: -7.418803691864014
    6. '="' → logprob: -7.793803691864014
    7. '=' → logprob: -8.918804168701172
    8. '"' → logprob: -9.168804168701172
    9. '"\' → logprob: -10.668804168701172
    10. '=\' → logprob: -10.793804168701172

Token 1216: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.38712501525878906
    2. 'n' → logprob: -1.137125015258789
    3. '
' → logprob: -8.762125015258789
    4. 'newline' → logprob: -10.262125015258789
    5. '')' → logprob: -11.137125015258789
    6. ''' → logprob: -11.137125015258789
    7. '\' → logprob: -11.262125015258789
    8. ''\' → logprob: -11.387125015258789
    9. ''n' → logprob: -13.012125015258789
    10. 'new' → logprob: -14.137125015258789

Token 1217: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12696193158626556
    2. '')' → logprob: -2.1269619464874268
    3. '")' → logprob: -10.751961708068848
    4. '`)' → logprob: -11.626961708068848
    5. 'def' → logprob: -14.626961708068848
    6. '```' → logprob: -14.751961708068848
    7. '<|end|>' → logprob: -15.126961708068848
    8. '())' → logprob: -15.251961708068848
    9. ')
' → logprob: -15.376961708068848
    10. ')`' → logprob: -15.376961708068848

Token 1218: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07082340866327286
    2. 'if' → logprob: -2.8208234310150146
    3. 'import' → logprob: -5.4458231925964355
    4. '```' → logprob: -5.4458231925964355
    5. '#' → logprob: -8.820823669433594
    6. 'for' → logprob: -11.445823669433594
    7. ' if' → logprob: -11.445823669433594
    8. '#!/' → logprob: -12.320823669433594
    9. '``' → logprob: -12.570823669433594
    10. 'print' → logprob: -13.320823669433594

Token 1219: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00043102685594931245
    2. ' main' → logprob: -7.750431060791016
    3. 'if' → logprob: -15.625431060791016
    4. '_main' → logprob: -15.875431060791016
    5. '__' → logprob: -18.250431060791016
    6. 'def' → logprob: -18.375431060791016
    7. '	main' → logprob: -21.625431060791016
    8. 'run' → logprob: -21.875431060791016
    9. 'set' → logprob: -22.250431060791016
    10. 'Main' → logprob: -22.875431060791016

Token 1220: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0015262868255376816
    2. '():
' → logprob: -6.501526355743408
    3. ' ():' → logprob: -10.75152587890625
    4. '()' → logprob: -13.12652587890625
    5. '():
' → logprob: -15.12652587890625
    6. '(' → logprob: -16.00152587890625
    7. '_' → logprob: -16.87652587890625
    8. ':' → logprob: -17.12652587890625
    9. 'def' → logprob: -17.62652587890625
    10. '():

' → logprob: -17.87652587890625

Token 1221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017024369444698095
    2. 'input' → logprob: -6.876702308654785
    3. ' input' → logprob: -7.376702308654785
    4. 'set' → logprob: -10.751702308654785
    5. ' set' → logprob: -11.376702308654785
    6. '```' → logprob: -12.501702308654785
    7. 'import' → logprob: -13.126702308654785
    8. '(input' → logprob: -13.501702308654785
    9. 'def' → logprob: -14.126702308654785
    10. ',input' → logprob: -14.251702308654785

Token 1222: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.578843891620636
    2. '   ' → logprob: -0.828843891620636
    3. 'input' → logprob: -6.20384407043457
    4. ' set' → logprob: -7.20384407043457
    5. 'N' → logprob: -9.45384407043457
    6. ' input' → logprob: -10.82884407043457
    7. 'import' → logprob: -10.95384407043457
    8. 'n' → logprob: -11.20384407043457
    9. '	set' → logprob: -12.70384407043457
    10. ' N' → logprob: -14.07884407043457

Token 1223: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -2.5776860184123507e-06
    2. 'rec' → logprob: -13.50000286102295
    3. '_' → logprob: -13.87500286102295
    4. '_recursive' → logprob: -16.875001907348633
    5. '()' → logprob: -17.500001907348633
    6. '_sys' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. '(_' → logprob: -18.250001907348633
    9. '_def' → logprob: -18.500001907348633
    10. '_re' → logprob: -18.750001907348633

Token 1224: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -3.054500666621607e-06
    2. 'urs' → logprob: -13.37500286102295
    3. '_' → logprob: -14.00000286102295
    4. '```' → logprob: -16.500003814697266
    5. 'ursor' → logprob: -16.625003814697266
    6. 'ursive' → logprob: -16.625003814697266
    7. 'ur' → logprob: -16.750003814697266
    8. '   ' → logprob: -16.875003814697266
    9. 'usion' → logprob: -16.875003814697266
    10. 'ersion' → logprob: -17.250003814697266

Token 1225: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.12692947685718536
    2. 'limit' → logprob: -2.126929521560669
    3. '_' → logprob: -14.87692928314209
    4. ' limit' → logprob: -15.37692928314209
    5. '_LIMIT' → logprob: -15.37692928314209
    6. 'Limit' → logprob: -15.62692928314209
    7. '_limits' → logprob: -16.251930236816406
    8. '_depth' → logprob: -16.376930236816406
    9. 'limits' → logprob: -17.001930236816406
    10. 'lim' → logprob: -17.001930236816406

Token 1226: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012880703434348106
    2. '(' → logprob: -9.375128746032715
    3. '()
' → logprob: -10.125128746032715
    4. ' ()' → logprob: -13.250128746032715
    5. '();' → logprob: -14.250128746032715
    6. '()`' → logprob: -14.625128746032715
    7. '()

' → logprob: -15.500128746032715
    8. '():' → logprob: -16.25012969970703
    9. '(()' → logprob: -16.25012969970703
    10. '())' → logprob: -16.25012969970703

Token 1227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007845571264624596
    2. 'input' → logprob: -5.507845401763916
    3. '```' → logprob: -5.632845401763916
    4. 'n' → logprob: -9.257845878601074
    5. '    
' → logprob: -10.007845878601074
    6. '(input' → logprob: -11.507845878601074
    7. '``' → logprob: -11.882845878601074
    8. 'import' → logprob: -12.007845878601074
    9. '
' → logprob: -12.007845878601074
    10. ' input' → logprob: -12.257845878601074

Token 1228: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.00031186718842945993
    2. '   ' → logprob: -8.500311851501465
    3. 'N' → logprob: -9.500311851501465
    4. 'n' → logprob: -11.000311851501465
    5. ' input' → logprob: -11.000311851501465
    6. 'import' → logprob: -16.00031280517578
    7. '```' → logprob: -18.25031280517578
    8. '	input' → logprob: -19.25031280517578
    9. ' ' → logprob: -19.37531280517578
    10. 'Input' → logprob: -19.50031280517578

Token 1229: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0009686299599707127
    2. '()' → logprob: -7.2509684562683105
    3. '_' → logprob: -9.125968933105469
    4. '_function' → logprob: -9.875968933105469
    5. '_fn' → logprob: -10.125968933105469
    6. 'func' → logprob: -10.250968933105469
    7. '_fun' → logprob: -12.000968933105469
    8. '_f' → logprob: -12.250968933105469
    9. '_line' → logprob: -12.625968933105469
    10. '=' → logprob: -13.125968933105469

Token 1230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18103298544883728
    2. ' =' → logprob: -1.8060330152511597
    3. '()' → logprob: -6.681033134460449
    4. '(' → logprob: -11.93103313446045
    5. ',' → logprob: -12.43103313446045
    6. '=sys' → logprob: -12.55603313446045
    7. '   ' → logprob: -12.55603313446045
    8. '<|end|>' → logprob: -12.93103313446045
    9. ')' → logprob: -13.05603313446045
    10. '=input' → logprob: -13.30603313446045

Token 1231: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5995844602584839
    2. 'sys' → logprob: -0.8495844602584839
    3. ' sys' → logprob: -4.349584579467773
    4. ' get' → logprob: -4.599584579467773
    5. 'read' → logprob: -7.849584579467773
    6. ' read' → logprob: -11.849584579467773
    7. '=sys' → logprob: -13.974584579467773
    8. 'input' → logprob: -14.224584579467773
    9. '(sys' → logprob: -15.099584579467773
    10. 'stdin' → logprob: -15.849584579467773

Token 1232: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.03494930639863014
    2. 'sys' → logprob: -4.53494930267334
    3. '_sys' → logprob: -4.53494930267334
    4. '_' → logprob: -4.90994930267334
    5. 'input' → logprob: -5.90994930267334
    6. ' sys' → logprob: -6.90994930267334
    7. '(sys' → logprob: -7.90994930267334
    8. '(input' → logprob: -8.03494930267334
    9. '_func' → logprob: -8.40994930267334
    10. ' input' → logprob: -8.65994930267334

Token 1233: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.0021852378267794847
    2. '_func' → logprob: -6.627185344696045
    3. '()' → logprob: -7.127185344696045
    4. 'function' → logprob: -10.377184867858887
    5. 'func' → logprob: -11.252184867858887
    6. '().' → logprob: -11.877184867858887
    7. '()
' → logprob: -13.377184867858887
    8. '```' → logprob: -14.377184867858887
    9. '_line' → logprob: -14.877184867858887
    10. '()[' → logprob: -14.877184867858887

Token 1234: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008394123986363411
    2. '
' → logprob: -5.383394241333008
    3. '    
' → logprob: -6.383394241333008
    4. '()' → logprob: -6.633394241333008
    5. '()
' → logprob: -8.008394241333008
    6. '```' → logprob: -8.758394241333008
    7. '(n' → logprob: -8.883394241333008
    8. '(' → logprob: -10.758394241333008
    9. '<|end|>' → logprob: -10.883394241333008
    10. 'n' → logprob: -11.008394241333008

Token 1235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003505515167489648
    2. 'n' → logprob: -5.753505706787109
    3. 'N' → logprob: -8.25350570678711
    4. '```' → logprob: -9.62850570678711
    5. ' n' → logprob: -14.37850570678711
    6. '
' → logprob: -14.87850570678711
    7. '	n' → logprob: -15.37850570678711
    8. '    
' → logprob: -16.25350570678711
    9. ' N' → logprob: -16.62850570678711
    10. '``' → logprob: -16.75350570678711

Token 1236: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.3342716693878174
    2. 'n' → logprob: -1.8342716693878174
    3. '   ' → logprob: -2.0842716693878174
    4. ' N' → logprob: -12.084271430969238
    5. '```' → logprob: -12.459271430969238
    6. ' n' → logprob: -13.084271430969238
    7. '	n' → logprob: -14.959271430969238
    8. '  ' → logprob: -15.084271430969238
    9. ' ' → logprob: -15.334271430969238
    10. '    
' → logprob: -15.834271430969238

Token 1237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.050775472074747086
    2. ' =' → logprob: -3.0507755279541016
    3. ',' → logprob: -6.175775527954102
    4. '   ' → logprob: -9.175775527954102
    5. '=int' → logprob: -13.425775527954102
    6. ')' → logprob: -15.675775527954102
    7. '=N' → logprob: -15.675775527954102
    8. ' ,' → logprob: -15.800775527954102
    9. '=input' → logprob: -15.800775527954102
    10. '	' → logprob: -15.800775527954102

Token 1238: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10091601312160492
    2. ' read' → logprob: -2.3509159088134766
    3. 'int' → logprob: -7.725915908813477
    4. ' int' → logprob: -8.225915908813477
    5. '	read' → logprob: -16.225915908813477
    6. '   ' → logprob: -17.475915908813477
    7. '(read' → logprob: -17.975915908813477
    8. '_read' → logprob: -19.350915908813477
    9. 'n' → logprob: -19.350915908813477
    10. '=int' → logprob: -19.475915908813477

Token 1239: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.27372509241104126
    2. '(input' → logprob: -1.6487250328063965
    3. '(' → logprob: -4.2737250328063965
    4. 'n' → logprob: -4.5237250328063965
    5. '_func' → logprob: -5.1487250328063965
    6. 'input' → logprob: -5.1487250328063965
    7. '()' → logprob: -5.8987250328063965
    8. '_' → logprob: -6.2737250328063965
    9. 'N' → logprob: -6.5237250328063965
    10. '_(' → logprob: -7.5237250328063965

Token 1240: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.8074162653647363e-05
    2. '(' → logprob: -11.250018119812012
    3. 'input' → logprob: -13.125018119812012
    4. '=input' → logprob: -13.875018119812012
    5. '(
' → logprob: -14.000018119812012
    6. ',input' → logprob: -14.250018119812012
    7. '```' → logprob: -15.125018119812012
    8. '[input' → logprob: -15.875018119812012
    9. '()' → logprob: -16.875017166137695
    10. '
' → logprob: -17.125017166137695

Token 1241: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -8.77627644513268e-06
    2. 'func' → logprob: -11.750008583068848
    3. '```' → logprob: -15.125008583068848
    4. ')' → logprob: -15.250008583068848
    5. ')_' → logprob: -15.875008583068848
    6. 'Func' → logprob: -16.250009536743164
    7. '_function' → logprob: -17.750009536743164
    8. '_FUNC' → logprob: -17.875009536743164
    9. '_' → logprob: -18.125009536743164
    10. '(_' → logprob: -18.250009536743164

Token 1242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040256205946207047
    2. '())' → logprob: -3.2902562618255615
    3. '()' → logprob: -6.290256023406982
    4. ')
' → logprob: -8.16525650024414
    5. '())
' → logprob: -9.79025650024414
    6. '   ' → logprob: -11.54025650024414
    7. '()
' → logprob: -12.16525650024414
    8. ' )' → logprob: -13.91525650024414
    9. '();)' → logprob: -15.04025650024414
    10. ')#' → logprob: -15.16525650024414

Token 1243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16033877432346344
    2. 'C' → logprob: -1.9103387594223022
    3. ' C' → logprob: -9.285338401794434
    4. 'A' → logprob: -12.160338401794434
    5. ' ' → logprob: -12.410338401794434
    6. '	C' → logprob: -12.660338401794434
    7. '```' → logprob: -12.910338401794434
    8. '  ' → logprob: -13.035338401794434
    9. '   ' → logprob: -14.410338401794434
    10. 'c' → logprob: -14.660338401794434

Token 1244: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.011067979969084263
    2. '   ' → logprob: -4.511067867279053
    3. ' C' → logprob: -11.261068344116211
    4. '```' → logprob: -13.886068344116211
    5. '	C' → logprob: -14.136068344116211
    6. 'Cs' → logprob: -14.136068344116211
    7. 'es' → logprob: -14.261068344116211
    8. '
' → logprob: -14.261068344116211
    9. ' ' → logprob: -14.386068344116211
    10. 'c' → logprob: -14.511068344116211

Token 1245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1803434193134308
    2. '=' → logprob: -1.8053433895111084
    3. '   ' → logprob: -7.8053436279296875
    4. ',' → logprob: -8.680343627929688
    5. ')' → logprob: -11.805343627929688
    6. '_' → logprob: -12.805343627929688
    7. '=input' → logprob: -12.930343627929688
    8. ' ' → logprob: -13.430343627929688
    9. '[' → logprob: -13.555343627929688
    10. '    ' → logprob: -13.805343627929688

Token 1246: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.09382890909910202
    2. ' read' → logprob: -3.0938289165496826
    3. 'list' → logprob: -3.3438289165496826
    4. ' list' → logprob: -4.7188286781311035
    5. ' [' → logprob: -12.843829154968262
    6. '[' → logprob: -12.843829154968262
    7. '[list' → logprob: -14.843829154968262
    8. '   ' → logprob: -15.468829154968262
    9. '[]' → logprob: -16.093828201293945
    10. '	read' → logprob: -16.593828201293945

Token 1247: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.16056104004383087
    2. '_func' → logprob: -1.9105610847473145
    3. '(input' → logprob: -8.910560607910156
    4. 'func' → logprob: -9.285560607910156
    5. 'c' → logprob: -9.535560607910156
    6. '```' → logprob: -11.535560607910156
    7. 'C' → logprob: -12.410560607910156
    8. '(func' → logprob: -12.660560607910156
    9. '(' → logprob: -12.910560607910156
    10. '_code' → logprob: -13.035560607910156

Token 1248: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.2961512513575144e-05
    2. 'input' → logprob: -10.750022888183594
    3. '```' → logprob: -14.500022888183594
    4. '(' → logprob: -14.625022888183594
    5. '[input' → logprob: -15.500022888183594
    6. ',input' → logprob: -15.625022888183594
    7. '=input' → logprob: -16.375022888183594
    8. ' input' → logprob: -17.125022888183594
    9. '(
' → logprob: -18.125022888183594
    10. ' (' → logprob: -18.750022888183594

Token 1249: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -7.696077227592468e-05
    2. 'func' → logprob: -9.500077247619629
    3. '_function' → logprob: -13.250077247619629
    4. '```' → logprob: -15.750077247619629
    5. 'Func' → logprob: -17.375076293945312
    6. '(func' → logprob: -17.500076293945312
    7. '(_' → logprob: -18.250076293945312
    8. '_FUNC' → logprob: -18.500076293945312
    9. '_fun' → logprob: -18.750076293945312
    10. ')' → logprob: -18.875076293945312

Token 1250: ')
' (ID: 446)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3325262665748596
    2. ')' → logprob: -1.3325262069702148
    3. '())
' → logprob: -4.207526206970215
    4. '()' → logprob: -5.832526206970215
    5. ')
' → logprob: -6.832526206970215
    6. '   ' → logprob: -9.207526206970215
    7. '()
' → logprob: -9.457526206970215
    8. ' ())' → logprob: -12.457526206970215
    9. '();)' → logprob: -13.707526206970215
    10. '())
' → logprob: -13.707526206970215

Token 1251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04874008893966675
    2. 'AB' → logprob: -3.0487401485443115
    3. 'es' → logprob: -9.04874038696289
    4. '```' → logprob: -10.92374038696289
    5. 'ES' → logprob: -11.79874038696289
    6. ' es' → logprob: -12.67374038696289
    7. '  ' → logprob: -13.54874038696289
    8. ' AB' → logprob: -13.54874038696289
    9. '       ' → logprob: -14.29874038696289
    10. ' ' → logprob: -14.79874038696289

Token 1252: ' AB' (ID: 16520)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' (adapté à ' AB') → logprob: -0.1602654606103897
    2. '   ' → logprob: -1.9102654457092285
    3. ' AB' → logprob: -10.535265922546387
    4. '```' → logprob: -12.285265922546387
    5. ' ' → logprob: -12.660265922546387
    6. 'A' → logprob: -13.535265922546387
    7. '  ' → logprob: -13.660265922546387
    8. 'ABC' → logprob: -14.160265922546387
    9. '_AB' → logprob: -14.285265922546387
    10. '
' → logprob: -14.410265922546387

Token 1253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931977272033691
    2. ' =' → logprob: -0.6931977272033691
    3. '   ' → logprob: -10.318197250366211
    4. '=input' → logprob: -11.193197250366211
    5. 's' → logprob: -13.943197250366211
    6. ' ' → logprob: -14.318197250366211
    7. ',' → logprob: -14.693197250366211
    8. '(input' → logprob: -14.943197250366211
    9. '_' → logprob: -15.318197250366211
    10. '(' → logprob: -15.568197250366211

Token 1254: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1602267622947693
    2. ' read' → logprob: -1.910226821899414
    3. '[' → logprob: -13.410226821899414
    4. '(read' → logprob: -14.410226821899414
    5. '   ' → logprob: -14.660226821899414
    6. '	read' → logprob: -16.285226821899414
    7. ' [' → logprob: -17.535226821899414
    8. '.read' → logprob: -17.785226821899414
    9. '_read' → logprob: -18.035226821899414
    10. 'list' → logprob: -18.160226821899414

Token 1255: '_ab' (ID: 53632)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.3144935965538025
    2. '(input' → logprob: -1.3144936561584473
    3. 'input' → logprob: -7.689493656158447
    4. 'n' → logprob: -7.689493656158447
    5. '```' → logprob: -9.439493179321289
    6. '_c' → logprob: -9.564493179321289
    7. '=input' → logprob: -9.939493179321289
    8. '[input' → logprob: -10.189493179321289
    9. '_ab' → logprob: -10.939493179321289
    10. 'func' → logprob: -11.564493179321289

Token 1256: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000568998686503619
    2. 'input' → logprob: -7.500568866729736
    3. ' input' → logprob: -12.000569343566895
    4. '```' → logprob: -12.000569343566895
    5. '[input' → logprob: -13.125569343566895
    6. '=input' → logprob: -13.875569343566895
    7. ',input' → logprob: -14.250569343566895
    8. '<input' → logprob: -16.375568389892578
    9. '(' → logprob: -17.875568389892578
    10. '``' → logprob: -18.000568389892578

Token 1257: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0011706985533237457
    2. 'func' → logprob: -7.126170635223389
    3. '_function' → logprob: -8.501171112060547
    4. '```' → logprob: -9.376171112060547
    5. '(input' → logprob: -9.501171112060547
    6. '_input' → logprob: -14.126171112060547
    7. 'Func' → logprob: -14.251171112060547
    8. '(func' → logprob: -15.001171112060547
    9. 'input' → logprob: -15.126171112060547
    10. '_fun' → logprob: -15.626171112060547

Token 1258: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.8714966177940369
    2. ',' → logprob: -1.1214966773986816
    3. '(input' → logprob: -1.3714966773986816
    4. '[input' → logprob: -7.371496677398682
    5. '=input' → logprob: -7.496496677398682
    6. 'input' → logprob: -7.746496677398682
    7. '```' → logprob: -8.496496200561523
    8. ' input' → logprob: -9.246496200561523
    9. '   ' → logprob: -9.496496200561523
    10. ')' → logprob: -9.621496200561523

Token 1259: ' N' (ID: 478)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006721756421029568
    2. ' input' → logprob: -5.0067219734191895
    3. '(input' → logprob: -12.381721496582031
    4. '=input' → logprob: -13.881721496582031
    5. '<input' → logprob: -14.506721496582031
    6. '[input' → logprob: -14.506721496582031
    7. '```' → logprob: -16.25672149658203
    8. ',input' → logprob: -16.75672149658203
    9. ')' → logprob: -17.00672149658203
    10. '	input' → logprob: -17.13172149658203

Token 1260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005925712641328573
    2. ')
' → logprob: -5.25592565536499
    3. '   ' → logprob: -7.38092565536499
    4. '(input' → logprob: -9.880926132202148
    5. 'input' → logprob: -12.255926132202148
    6. ')

' → logprob: -13.005926132202148
    7. ',' → logprob: -13.630926132202148
    8. '())' → logprob: -14.005926132202148
    9. ',input' → logprob: -14.005926132202148
    10. ')
' → logprob: -14.130926132202148

Token 1261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005375929642468691
    2. 'es' → logprob: -5.380375862121582
    3. ' es' → logprob: -7.505375862121582
    4. '    
' → logprob: -9.755375862121582
    5. '
' → logprob: -10.005375862121582
    6. '	es' → logprob: -10.005375862121582
    7. '```' → logprob: -10.005375862121582
    8. 'ES' → logprob: -13.505375862121582
    9. '  
' → logprob: -13.630375862121582
    10. '   ' → logprob: -13.755375862121582

Token 1262: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -0.3316105604171753
    2. '   ' → logprob: -1.5816105604171753
    3. ' es' → logprob: -2.581610679626465
    4. 'cs' → logprob: -7.581610679626465
    5. '```' → logprob: -8.331610679626465
    6. ' cs' → logprob: -9.456610679626465
    7. '
' → logprob: -10.581610679626465
    8. '``' → logprob: -10.706610679626465
    9. '	es' → logprob: -10.706610679626465
    10. 'def' → logprob: -11.956610679626465

Token 1263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575968861579895
    2. '=' → logprob: -0.825968861579895
    3. ',' → logprob: -10.575968742370605
    4. '   ' → logprob: -12.825968742370605
    5. ' es' → logprob: -14.950968742370605
    6. '＝' → logprob: -15.200968742370605
    7. '=create' → logprob: -15.575968742370605
    8. '=
' → logprob: -16.075969696044922
    9. '=[]' → logprob: -16.700969696044922
    10. ' ' → logprob: -16.950969696044922

Token 1264: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.0031777136027812958
    2. ' build' → logprob: -5.753177642822266
    3. '	build' → logprob: -17.503177642822266
    4. '[' → logprob: -17.628177642822266
    5. '(build' → logprob: -17.753177642822266
    6. '   ' → logprob: -17.753177642822266
    7. '[]' → logprob: -18.628177642822266
    8. '_build' → logprob: -18.878177642822266
    9. '.build' → logprob: -19.378177642822266
    10. 'building' → logprob: -19.378177642822266

Token 1265: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.0014605928445234895
    2. 'es' → logprob: -6.751460552215576
    3. '_es' → logprob: -8.501461029052734
    4. 'empty' → logprob: -10.376461029052734
    5. '(es' → logprob: -10.626461029052734
    6. '_graph' → logprob: -11.626461029052734
    7. '_edge' → logprob: -11.876461029052734
    8. ' es' → logprob: -12.126461029052734
    9. '_edges' → logprob: -12.501461029052734
    10. 'graph' → logprob: -12.751461029052734

Token 1266: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.005291157402098179
    2. 'graph' → logprob: -5.255290985107422
    3. 'es' → logprob: -9.880290985107422
    4. 'Graph' → logprob: -12.505290985107422
    5. '_es' → logprob: -13.880290985107422
    6. '(n' → logprob: -14.005290985107422
    7. '(N' → logprob: -14.755290985107422
    8. '(graph' → logprob: -16.005290985107422
    9. '```' → logprob: -16.380290985107422
    10. '_GRAPH' → logprob: -16.755290985107422

Token 1267: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.630610641877865e-06
    2. 'N' → logprob: -12.875006675720215
    3. '   ' → logprob: -13.375006675720215
    4. '```' → logprob: -13.875006675720215
    5. '(' → logprob: -14.000006675720215
    6. ' (' → logprob: -15.750006675720215
    7. 'def' → logprob: -16.2500057220459
    8. ',' → logprob: -16.5000057220459
    9. '(n' → logprob: -16.8750057220459
    10. '(
' → logprob: -17.0000057220459

Token 1268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0200613085180521
    2. ')
' → logprob: -4.145061492919922
    3. '   ' → logprob: -5.520061492919922
    4. '())' → logprob: -12.395061492919922
    5. '()' → logprob: -12.645061492919922
    6. '    
' → logprob: -14.020061492919922
    7. ',' → logprob: -14.145061492919922
    8. 'def' → logprob: -14.270061492919922
    9. '())
' → logprob: -14.395061492919922
    10. ' )' → logprob: -14.395061492919922

Token 1269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03807293251156807
    2. 'build' → logprob: -3.2880728244781494
    3. '```' → logprob: -11.03807258605957
    4. ' build' → logprob: -11.78807258605957
    5. '	build' → logprob: -12.41307258605957
    6. 'for' → logprob: -13.91307258605957
    7. '(build' → logprob: -13.91307258605957
    8. 'def' → logprob: -14.28807258605957
    9. '_build' → logprob: -14.91307258605957
    10. '.build' → logprob: -15.16307258605957

Token 1270: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -9.253090865968261e-06
    2. '   ' → logprob: -12.250009536743164
    3. ' build' → logprob: -12.375009536743164
    4. '(build' → logprob: -16.625009536743164
    5. 'for' → logprob: -17.000009536743164
    6. '```' → logprob: -17.375009536743164
    7. '_build' → logprob: -17.500009536743164
    8. '.build' → logprob: -18.250009536743164
    9. '	build' → logprob: -18.250009536743164
    10. '
' → logprob: -19.375009536743164

Token 1271: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -4.632542913896032e-05
    2. 'graph' → logprob: -10.625046730041504
    3. '_edges' → logprob: -11.125046730041504
    4. '_edge' → logprob: -11.875046730041504
    5. 'edges' → logprob: -16.000045776367188
    6. '(graph' → logprob: -16.500045776367188
    7. 'raph' → logprob: -17.125045776367188
    8. '```' → logprob: -17.500045776367188
    9. 'Graph' → logprob: -17.875045776367188
    10. '	graph' → logprob: -18.000045776367188

Token 1272: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -5.512236498361744e-07
    2. '(edges' → logprob: -15.625000953674316
    3. '_es' → logprob: -15.875000953674316
    4. 'edges' → logprob: -16.25
    5. '```' → logprob: -17.25
    6. '_edge' → logprob: -17.625
    7. '_ed' → logprob: -17.875
    8. 'Edges' → logprob: -18.0
    9. 'es' → logprob: -18.75
    10. 's' → logprob: -18.75

Token 1273: '(es' (ID: 89947)
  Prédit: '(es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: 0.0
    2. 'es' → logprob: -18.375
    3. '(ed' → logprob: -20.75
    4. '	es' → logprob: -20.875
    5. '(' → logprob: -21.125
    6. ' (' → logprob: -21.5
    7. '(
' → logprob: -21.5
    8. '(er' → logprob: -21.625
    9. '```' → logprob: -21.625
    10. '/es' → logprob: -21.875

Token 1274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03388173133134842
    2. '(' → logprob: -3.408881664276123
    3. ' ,' → logprob: -9.158882141113281
    4. 'AB' → logprob: -9.783882141113281
    5. '   ' → logprob: -10.283882141113281
    6. ',(' → logprob: -11.283882141113281
    7. '(es' → logprob: -11.408882141113281
    8. ' (' → logprob: -12.783882141113281
    9. ' AB' → logprob: -12.908882141113281
    10. ')' → logprob: -13.283882141113281

Token 1275: ' AB' (ID: 16520)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.0001584850688232109
    2. ' AB' → logprob: -8.750158309936523
    3. '_AB' → logprob: -17.500158309936523
    4. '   ' → logprob: -18.750158309936523
    5. ' ' → logprob: -21.000158309936523
    6. ')' → logprob: -21.375158309936523
    7. 'ABB' → logprob: -22.000158309936523
    8. '(' → logprob: -22.375158309936523
    9. '[' → logprob: -22.875158309936523
    10. 'ABL' → logprob: -23.000158309936523

Token 1276: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000533732702024281
    2. '   ' → logprob: -7.750533580780029
    3. ')
' → logprob: -10.000534057617188
    4. '<|end|>' → logprob: -10.250534057617188
    5. ',' → logprob: -10.875534057617188
    6. '<|end|>' → logprob: -13.875534057617188
    7. ' )' → logprob: -14.750534057617188
    8. ')

' → logprob: -15.125534057617188
    9. '),' → logprob: -15.250534057617188
    10. ')#' → logprob: -15.500534057617188

Token 1277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012828173115849495
    2. 'cs' → logprob: -4.387828350067139
    3. '```' → logprob: -9.01282787322998
    4. ' cs' → logprob: -9.51282787322998
    5. '
' → logprob: -10.13782787322998
    6. 'tin' → logprob: -10.51282787322998
    7. '	cs' → logprob: -11.13782787322998
    8. 'CS' → logprob: -11.13782787322998
    9. '    
' → logprob: -12.01282787322998
    10. ' tin' → logprob: -12.13782787322998

Token 1278: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' (adapté à ' cs') → logprob: -0.007759361527860165
    2. '   ' → logprob: -4.8827595710754395
    3. 'tin' → logprob: -9.757759094238281
    4. '```' → logprob: -9.882759094238281
    5. ' cs' → logprob: -10.632759094238281
    6. ' ' → logprob: -11.632759094238281
    7. '``' → logprob: -13.132759094238281
    8. '
' → logprob: -13.382759094238281
    9. '	cs' → logprob: -13.757759094238281
    10. 'for' → logprob: -13.882759094238281

Token 1279: ' =' (ID: 314)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.3774459958076477
    2. ' =' → logprob: -1.502445936203003
    3. '=' → logprob: -2.502445936203003
    4. ',' → logprob: -5.002446174621582
    5. 'cs' → logprob: -7.002446174621582
    6. '(' → logprob: -7.002446174621582
    7. '[' → logprob: -7.877446174621582
    8. '   ' → logprob: -8.127446174621582
    9. '	cs' → logprob: -8.502446174621582
    10. '(c' → logprob: -9.752446174621582

Token 1280: ' build' (ID: 3024)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00913340225815773
    2. ' [[]' → logprob: -4.759133338928223
    3. 'build' → logprob: -8.009133338928223
    4. '[[' → logprob: -8.759133338928223
    5. ' build' → logprob: -10.509133338928223
    6. ' [[' → logprob: -14.009133338928223
    7. ' [' → logprob: -14.509133338928223
    8. '[['' → logprob: -14.634133338928223
    9. ' ' → logprob: -16.25913429260254
    10. '   ' → logprob: -16.38413429260254

Token 1281: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.24788546562194824
    2. '[' → logprob: -2.6228854656219482
    3. '_color' → logprob: -2.6228854656219482
    4. '([' → logprob: -3.7478854656219482
    5. '[N' → logprob: -4.247885704040527
    6. 'cs' → logprob: -4.747885704040527
    7. '(N' → logprob: -5.122885704040527
    8. 'empty' → logprob: -5.872885704040527
    9. '[n' → logprob: -5.997885704040527
    10. '[[' → logprob: -5.997885704040527

Token 1282: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.16137655079364777
    2. 'graph' → logprob: -1.9113765954971313
    3. '_nodes' → logprob: -8.036376953125
    4. 'cs' → logprob: -8.661376953125
    5. '(N' → logprob: -8.911376953125
    6. '_color' → logprob: -9.036376953125
    7. '[' → logprob: -9.661376953125
    8. '_cs' → logprob: -9.911376953125
    9. '```' → logprob: -10.036376953125
    10. '(n' → logprob: -10.286376953125

Token 1283: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3264477849006653
    2. '(len' → logprob: -1.4514477252960205
    3. '(max' → logprob: -3.2014477252960205
    4. '(C' → logprob: -6.0764479637146
    5. '(' → logprob: -7.8264479637146
    6. 'max' → logprob: -7.8264479637146
    7. 'len' → logprob: -7.9514479637146
    8. '((' → logprob: -9.701447486877441
    9. 'N' → logprob: -10.451447486877441
    10. '=len' → logprob: -12.201447486877441

Token 1284: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38709303736686707
    2. ')
' → logprob: -1.1370930671691895
    3. '   ' → logprob: -9.137092590332031
    4. 'def' → logprob: -9.887092590332031
    5. '(C' → logprob: -11.137092590332031
    6. '(N' → logprob: -11.262092590332031
    7. '(' → logprob: -11.387092590332031
    8. '())
' → logprob: -11.887092590332031
    9. ')

' → logprob: -12.387092590332031
    10. ')
' → logprob: -12.887092590332031

Token 1285: '   ' (ID: 271)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.0812007337808609
    2. '   ' → logprob: -2.5812008380889893
    3. ' build' → logprob: -6.08120059967041
    4. '	build' → logprob: -11.83120059967041
    5. '```' → logprob: -12.33120059967041
    6. '(build' → logprob: -12.45620059967041
    7. '  ' → logprob: -12.95620059967041
    8. 'for' → logprob: -13.45620059967041
    9. '
' → logprob: -13.95620059967041
    10. ' ' → logprob: -14.20620059967041

Token 1286: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -5.512236498361744e-07
    2. ' build' → logprob: -15.250000953674316
    3. 'for' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.125
    5. '```' → logprob: -17.125
    6. '(build' → logprob: -18.875
    7. '
' → logprob: -19.25
    8. '	build' → logprob: -19.75
    9. 'prepare' → logprob: -20.125
    10. '_build' → logprob: -20.5

Token 1287: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0004311460361350328
    2. 'color' → logprob: -7.750431060791016
    3. ' color' → logprob: -15.875431060791016
    4. 'olor' → logprob: -16.375431060791016
    5. '_edge' → logprob: -16.500431060791016
    6. 'Color' → logprob: -17.000431060791016
    7. '_c' → logprob: -17.250431060791016
    8. '_colors' → logprob: -17.625431060791016
    9. '```' → logprob: -17.625431060791016
    10. '_code' → logprob: -17.750431060791016

Token 1288: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.004094308707863092
    2. '_node' → logprob: -5.504094123840332
    3. 'nodes' → logprob: -11.379094123840332
    4. '_color' → logprob: -13.129094123840332
    5. '
' → logprob: -14.129094123840332
    6. '```' → logprob: -14.504094123840332
    7. '(nodes' → logprob: -14.504094123840332
    8. '_code' → logprob: -15.754094123840332
    9. '_n' → logprob: -16.37909507751465
    10. 'Nodes' → logprob: -16.50409507751465

Token 1289: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -4.320199877838604e-07
    2. 'cs' → logprob: -15.0
    3. '	cs' → logprob: -17.875
    4. '```' → logprob: -17.875
    5. '(Cs' → logprob: -18.5
    6. '(es' → logprob: -19.0
    7. ' cs' → logprob: -19.125
    8. '(css' → logprob: -19.5
    9. ' (' → logprob: -20.0
    10. '(ci' → logprob: -20.5

Token 1290: ',' (ID: 11)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.6149290800094604
    2. ',' → logprob: -1.3649290800094604
    3. '(C' → logprob: -1.6149290800094604
    4. '(Cs' → logprob: -5.36492919921875
    5. ',C' → logprob: -8.23992919921875
    6. '   ' → logprob: -9.98992919921875
    7. ' ,' → logprob: -11.73992919921875
    8. 'cs' → logprob: -11.73992919921875
    9. '	cs' → logprob: -13.11492919921875
    10. ' cs' → logprob: -13.23992919921875

Token 1291: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0021905910689383745
    2. ' C' → logprob: -6.127190589904785
    3. '   ' → logprob: -12.127190589904785
    4. '(C' → logprob: -17.6271915435791
    5. '[C' → logprob: -17.6271915435791
    6. ' ' → logprob: -18.1271915435791
    7. '  ' → logprob: -18.3771915435791
    8. '	C' → logprob: -18.6271915435791
    9. ')' → logprob: -19.0021915435791
    10. '*C' → logprob: -19.1271915435791

Token 1292: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012035090912831947
    2. ')
' → logprob: -9.125120162963867
    3. '   ' → logprob: -12.375120162963867
    4. 'def' → logprob: -13.000120162963867
    5. ',' → logprob: -13.125120162963867
    6. ')

' → logprob: -14.125120162963867
    7. ' )' → logprob: -14.375120162963867
    8. ')#' → logprob: -15.250120162963867
    9. '<|end|>' → logprob: -15.875120162963867
    10. '))' → logprob: -15.875120162963867

Token 1293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00791192427277565
    2. 'tin' → logprob: -5.1329121589660645
    3. ' tin' → logprob: -6.7579121589660645
    4. 'prepare' → logprob: -7.8829121589660645
    5. 'run' → logprob: -9.007911682128906
    6. ' prepare' → logprob: -9.257911682128906
    7. '```' → logprob: -9.382911682128906
    8. '
' → logprob: -10.257911682128906
    9. ' run' → logprob: -10.507911682128906
    10. '    
' → logprob: -10.507911682128906

Token 1294: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' (adapté à ' tin') → logprob: -0.00924916286021471
    2. '   ' → logprob: -4.759249210357666
    3. ' tin' → logprob: -8.009248733520508
    4. '```' → logprob: -8.259248733520508
    5. '``' → logprob: -11.509248733520508
    6. ' ' → logprob: -11.759248733520508
    7. '    
' → logprob: -11.759248733520508
    8. '`' → logprob: -12.509248733520508
    9. 'tan' → logprob: -13.509248733520508
    10. '  ' → logprob: -13.509248733520508

Token 1295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0071754250675439835
    2. ',t' → logprob: -5.007175445556641
    3. '[' → logprob: -8.88217544555664
    4. '[t' → logprob: -9.25717544555664
    5. '_,' → logprob: -9.88217544555664
    6. '(t' → logprob: -10.50717544555664
    7. ',
' → logprob: -10.50717544555664
    8. ' ,' → logprob: -10.88217544555664
    9. 'def' → logprob: -10.88217544555664
    10. ',v' → logprob: -11.00717544555664

Token 1296: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.0031784253660589457
    2. ' tout' → logprob: -5.753178596496582
    3. '   ' → logprob: -15.878178596496582
    4. ' ' → logprob: -16.128177642822266
    5. '[t' → logprob: -16.253177642822266
    6. 'Tout' → logprob: -16.253177642822266
    7. 't' → logprob: -16.628177642822266
    8. '  ' → logprob: -16.628177642822266
    9. '[' → logprob: -16.628177642822266
    10. ' ' → logprob: -17.503177642822266

Token 1297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26055559515953064
    2. ' =' → logprob: -1.510555624961853
    3. ',' → logprob: -4.760555744171143
    4. '   ' → logprob: -10.760555267333984
    5. ' ' → logprob: -13.385555267333984
    6. ',t' → logprob: -13.510555267333984
    7. '=t' → logprob: -13.760555267333984
    8. ' ,' → logprob: -14.510555267333984
    9. '=N' → logprob: -15.010555267333984
    10. ',N' → logprob: -15.260555267333984

Token 1298: ' prepare' (ID: 13708)
  Prédit: 'prepare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prepare' → logprob: -0.008616108447313309
    2. ' prepare' → logprob: -4.758615970611572
    3. '   ' → logprob: -14.50861644744873
    4. 'prep' → logprob: -15.38361644744873
    5. ' ' → logprob: -15.50861644744873
    6. '.prepare' → logprob: -15.75861644744873
    7. '[' → logprob: -15.88361644744873
    8. '_prepare' → logprob: -15.88361644744873
    9. '(' → logprob: -16.258615493774414
    10. '[-' → logprob: -17.008615493774414

Token 1299: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.14114166796207428
    2. '(N' → logprob: -2.141141653060913
    3. 't' → logprob: -5.141141891479492
    4. 'tin' → logprob: -5.141141891479492
    5. '(t' → logprob: -6.891141891479492
    6. '(' → logprob: -7.891141891479492
    7. '(T' → logprob: -8.641141891479492
    8. '```' → logprob: -9.141141891479492
    9. '   ' → logprob: -9.391141891479492
    10. '(n' → logprob: -9.641141891479492

Token 1300: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.005661767907440662
    2. '(N' → logprob: -5.880661964416504
    3. 'tin' → logprob: -6.005661964416504
    4. 'int' → logprob: -9.130661964416504
    5. '(n' → logprob: -9.755661964416504
    6. '(in' → logprob: -10.130661964416504
    7. '(' → logprob: -10.255661964416504
    8. 'N' → logprob: -10.630661964416504
    9. '(t' → logprob: -10.755661964416504
    10. '(T' → logprob: -11.130661964416504

Token 1301: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0030641069170087576
    2. 'tout' → logprob: -5.878064155578613
    3. 't' → logprob: -9.253064155578613
    4. 'Tout' → logprob: -9.503064155578613
    5. 'out' → logprob: -10.753064155578613
    6. 'v' → logprob: -11.253064155578613
    7. ',' → logprob: -11.503064155578613
    8. '(N' → logprob: -11.753064155578613
    9. '_v' → logprob: -12.003064155578613
    10. '(v' → logprob: -12.128064155578613

Token 1302: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.00021951000962872058
    2. 'tout' → logprob: -9.000219345092773
    3. '[' → logprob: -10.000219345092773
    4. 'ou' → logprob: -10.375219345092773
    5. '[out' → logprob: -12.250219345092773
    6. '(' → logprob: -12.625219345092773
    7. 'ot' → logprob: -12.875219345092773
    8. '```' → logprob: -13.250219345092773
    9. '[-' → logprob: -13.500219345092773
    10. '[N' → logprob: -13.625219345092773

Token 1303: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.954393079970032e-05
    2. 'N' → logprob: -10.000049591064453
    3. '(len' → logprob: -13.500049591064453
    4. '   ' → logprob: -14.375049591064453
    5. ',N' → logprob: -14.375049591064453
    6. ' (' → logprob: -14.750049591064453
    7. '(' → logprob: -14.750049591064453
    8. '```' → logprob: -15.500049591064453
    9. '
' → logprob: -15.625049591064453
    10. ',' → logprob: -15.750049591064453

Token 1304: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4954589605331421
    2. ')' → logprob: -1.370458960533142
    3. '   ' → logprob: -1.995458960533142
    4. ',' → logprob: -7.245459079742432
    5. '
' → logprob: -11.120458602905273
    6. ')
' → logprob: -12.120458602905273
    7. '),' → logprob: -12.495458602905273
    8. ',t' → logprob: -12.745458602905273
    9. ' )
' → logprob: -12.870458602905273
    10. ')t' → logprob: -13.120458602905273

Token 1305: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.39371728897094727
    2. '   ' → logprob: -1.1437172889709473
    3. 'run' → logprob: -5.643717288970947
    4. 'prepare' → logprob: -5.893717288970947
    5. ' k' → logprob: -8.393716812133789
    6. '```' → logprob: -8.393716812133789
    7. ' prepare' → logprob: -11.143716812133789
    8. '  ' → logprob: -11.268716812133789
    9. ' run' → logprob: -11.518716812133789
    10. '``' → logprob: -11.768716812133789

Token 1306: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0017614520620554686
    2. 'prepare' → logprob: -6.751761436462402
    3. 'run' → logprob: -7.876761436462402
    4. '   ' → logprob: -8.626761436462402
    5. ' k' → logprob: -11.126761436462402
    6. 'K' → logprob: -12.876761436462402
    7. 'ks' → logprob: -13.001761436462402
    8. 'dfs' → logprob: -13.626761436462402
    9. ' prepare' → logprob: -14.001761436462402
    10. '  ' → logprob: -14.001761436462402

Token 1307: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -0.011372823268175125
    2. ' =' → logprob: -5.136373043060303
    3. '[' → logprob: -6.011373043060303
    4. '=' → logprob: -6.761373043060303
    5. '=_' → logprob: -7.386373043060303
    6. '=[' → logprob: -8.136372566223145
    7. '   ' → logprob: -8.511372566223145
    8. '```' → logprob: -8.636372566223145
    9. '[_' → logprob: -9.386372566223145
    10. '_' → logprob: -9.886372566223145

Token 1308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4758804738521576
    2. ' =' → logprob: -0.97588050365448
    3. '[' → logprob: -6.4758806228637695
    4. '=[' → logprob: -8.72588062286377
    5. '   ' → logprob: -9.35088062286377
    6. ' =[' → logprob: -11.85088062286377
    7. '=
' → logprob: -13.60088062286377
    8. '	' → logprob: -13.85088062286377
    9. ':' → logprob: -14.85088062286377
    10. '```' → logprob: -14.97588062286377

Token 1309: ' prepare' (ID: 13708)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0206720617134124e-05
    2. ' [' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.875009536743164
    4. '=[' → logprob: -19.125009536743164
    5. '[-' → logprob: -19.750009536743164
    6. '0' → logprob: -20.875009536743164
    7. '([' → logprob: -21.625009536743164
    8. '[k' → logprob: -21.875009536743164
    9. ' ' → logprob: -22.000009536743164
    10. '[i' → logprob: -22.875009536743164

Token 1310: '_k' (ID: 11637)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4673309028148651
    2. '_k' → logprob: -1.4673309326171875
    3. '_t' → logprob: -2.3423309326171875
    4. 'k' → logprob: -3.0923309326171875
    5. '```' → logprob: -7.5923309326171875
    6. '(' → logprob: -8.592330932617188
    7. 't' → logprob: -9.217330932617188
    8. '=[' → logprob: -9.342330932617188
    9. '[k' → logprob: -9.467330932617188
    10. '   ' → logprob: -9.592330932617188

Token 1311: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12229583412408829
    2. '
' → logprob: -2.49729585647583
    3. '()
' → logprob: -4.37229585647583
    4. 'run' → logprob: -4.37229585647583
    5. '()' → logprob: -5.87229585647583
    6. '(run' → logprob: -6.24729585647583
    7. '    
' → logprob: -6.99729585647583
    8. ')
' → logprob: -7.99729585647583
    9. ' run' → logprob: -7.99729585647583
    10. '```' → logprob: -8.122295379638672

Token 1312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027139227837324142
    2. 'run' → logprob: -3.652139186859131
    3. ' run' → logprob: -7.402139186859131
    4. 'dfs' → logprob: -8.652139663696289
    5. '```' → logprob: -10.527139663696289
    6. '
' → logprob: -11.152139663696289
    7. '    
' → logprob: -13.027139663696289
    8. ' dfs' → logprob: -13.152139663696289
    9. '  ' → logprob: -13.152139663696289
    10. '	run' → logprob: -13.402139663696289

Token 1313: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.0179129708558321
    2. ' run' → logprob: -4.392912864685059
    3. '   ' → logprob: -5.267912864685059
    4. 'dfs' → logprob: -8.392912864685059
    5. '
' → logprob: -13.017912864685059
    6. ' dfs' → logprob: -13.267912864685059
    7. '	run' → logprob: -13.892912864685059
    8. '```' → logprob: -13.892912864685059
    9. '(run' → logprob: -14.642912864685059
    10. ' ' → logprob: -14.892912864685059

Token 1314: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.1398757123970427e-05
    2. 'dfs' → logprob: -11.750011444091797
    3. '_' → logprob: -13.125011444091797
    4. 'DFS' → logprob: -14.750011444091797
    5. '(' → logprob: -14.875011444091797
    6. '\' → logprob: -15.125011444091797
    7. '_df' → logprob: -16.375011444091797
    8. '(_' → logprob: -16.500011444091797
    9. '
' → logprob: -16.750011444091797
    10. ' dfs' → logprob: -16.875011444091797

Token 1315: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -2.2200749754119897e-06
    2. 'f' → logprob: -13.625001907348633
    3. 'FS' → logprob: -14.125001907348633
    4. '_fs' → logprob: -15.375001907348633
    5. '(fs' → logprob: -18.125001907348633
    6. ' fs' → logprob: -18.250001907348633
    7. 'dfs' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.000001907348633
    9. 'efs' → logprob: -20.125001907348633
    10. 'fsi' → logprob: -21.000001907348633

Token 1316: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00016563729150220752
    2. '(' → logprob: -8.750165939331055
    3. ' (' → logprob: -12.125165939331055
    4. '```' → logprob: -14.250165939331055
    5. '\(' → logprob: -15.250165939331055
    6. '(len' → logprob: -15.375165939331055
    7. '(n' → logprob: -16.000165939331055
    8. '   ' → logprob: -16.125165939331055
    9. '(None' → logprob: -16.500165939331055
    10. '(
' → logprob: -16.875165939331055

Token 1317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.947715832618997e-05
    2. ' ,' → logprob: -10.000089645385742
    3. '   ' → logprob: -10.250089645385742
    4. ',
' → logprob: -12.625089645385742
    5. ')' → logprob: -13.750089645385742
    6. '=' → logprob: -13.875089645385742
    7. '
' → logprob: -14.375089645385742
    8. ' es' → logprob: -14.750089645385742
    9. '```' → logprob: -14.750089645385742
    10. '  ' → logprob: -15.375089645385742

Token 1318: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0005556552205234766
    2. ' es' → logprob: -7.500555515289307
    3. '   ' → logprob: -13.250555992126465
    4. '-es' → logprob: -15.000555992126465
    5. '	es' → logprob: -15.500555992126465
    6. ' ' → logprob: -15.875555992126465
    7. '    ' → logprob: -16.62555503845215
    8. '```' → logprob: -17.00055503845215
    9. '  ' → logprob: -17.50055503845215
    10. 'Es' → logprob: -17.50055503845215

Token 1319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010020548506872728
    2. ' ,' → logprob: -9.500100135803223
    3. '   ' → logprob: -11.250100135803223
    4. ',t' → logprob: -11.375100135803223
    5. ',
' → logprob: -14.125100135803223
    6. ',k' → logprob: -17.62510108947754
    7. '
' → logprob: -17.62510108947754
    8. ',s' → logprob: -18.12510108947754
    9. '  ' → logprob: -18.75010108947754
    10. '‌,' → logprob: -18.75010108947754

Token 1320: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.004080301150679588
    2. ' tin' → logprob: -5.504080295562744
    3. '   ' → logprob: -13.504080772399902
    4. 't' → logprob: -15.129080772399902
    5. 'Tin' → logprob: -16.754079818725586
    6. '
' → logprob: -17.004079818725586
    7. 'tout' → logprob: -17.004079818725586
    8. ' ' → logprob: -17.129079818725586
    9. 'ti' → logprob: -17.629079818725586
    10. '```' → logprob: -17.879079818725586

Token 1321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0391463193809614e-05
    2. ',t' → logprob: -9.875060081481934
    3. ',
' → logprob: -12.250060081481934
    4. ' ,' → logprob: -12.500060081481934
    5. '   ' → logprob: -15.000060081481934
    6. 't' → logprob: -16.75006103515625
    7. '```' → logprob: -17.50006103515625
    8. ')' → logprob: -17.75006103515625
    9. ',

' → logprob: -18.00006103515625
    10. '
' → logprob: -18.37506103515625

Token 1322: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.0380435548722744
    2. ' tout' → logprob: -3.28804349899292
    3. '```' → logprob: -14.663043975830078
    4. '   ' → logprob: -14.788043975830078
    5. '
' → logprob: -15.413043975830078
    6. ' ' → logprob: -15.663043975830078
    7. 'todo' → logprob: -15.788043975830078
    8. 't' → logprob: -15.913043975830078
    9. '
' → logprob: -15.913043975830078
    10. ' todo' → logprob: -16.038043975830078

Token 1323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ',k' → logprob: -11.750011444091797
    3. ' ,' → logprob: -12.500011444091797
    4. '   ' → logprob: -15.875011444091797
    5. ',
' → logprob: -16.125011444091797
    6. ')' → logprob: -18.875011444091797
    7. 'k' → logprob: -19.000011444091797
    8. '```' → logprob: -19.625011444091797
    9. '
' → logprob: -20.250011444091797
    10. '‌,' → logprob: -20.750011444091797

Token 1324: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00033546582562848926
    2. ' k' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.875335693359375
    4. ' ' → logprob: -20.125335693359375
    5. '	k' → logprob: -20.500335693359375
    6. ')' → logprob: -21.875335693359375
    7. '
' → logprob: -22.125335693359375
    8. '{k' → logprob: -22.625335693359375
    9. '[k' → logprob: -22.875335693359375
    10. '    ' → logprob: -23.125335693359375

Token 1325: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -5.512236498361744e-07
    2. 'holder' → logprob: -14.500000953674316
    3. '-holder' → logprob: -18.125
    4. '	holder' → logprob: -18.125
    5. '_owner' → logprob: -18.25
    6. '_keeper' → logprob: -19.375
    7. 'Holder' → logprob: -19.375
    8. '[' → logprob: -19.5
    9. 'older' → logprob: -19.625
    10. ' holder' → logprob: -19.875

Token 1326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.551721889991313e-05
    2. ')
' → logprob: -10.375065803527832
    3. '   ' → logprob: -10.375065803527832
    4. '<|end|>' → logprob: -13.375065803527832
    5. ' )' → logprob: -14.250065803527832
    6. ')

' → logprob: -15.250065803527832
    7. '
' → logprob: -16.125064849853516
    8. '())' → logprob: -16.625064849853516
    9. ' ' → logprob: -16.750064849853516
    10. '```' → logprob: -16.875064849853516

Token 1327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062046896666288376
    2. 'bit' → logprob: -2.812047004699707
    3. '```' → logprob: -9.687047004699707
    4. ' bit' → logprob: -11.312047004699707
    5. '    
' → logprob: -13.812047004699707
    6. '``' → logprob: -13.937047004699707
    7. '
' → logprob: -14.062047004699707
    8. '  ' → logprob: -14.187047004699707
    9. '(bit' → logprob: -14.687047004699707
    10. ' ' → logprob: -14.812047004699707

Token 1328: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.00014406509581021965
    2. '   ' → logprob: -8.875144004821777
    3. '```' → logprob: -12.875144004821777
    4. ' bit' → logprob: -13.625144004821777
    5. '
' → logprob: -15.000144004821777
    6. '``' → logprob: -16.250144958496094
    7. '    
' → logprob: -16.875144958496094
    8. 'def' → logprob: -17.375144958496094
    9. 'for' → logprob: -19.125144958496094
    10. '(bit' → logprob: -19.250144958496094

Token 1329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245595395565033
    2. '=' → logprob: -3.7732455730438232
    3. ',' → logprob: -17.898244857788086
    4. ' =
' → logprob: -18.023244857788086
    5. ' ' → logprob: -18.148244857788086
    6. '   ' → logprob: -18.148244857788086
    7. '＝' → logprob: -18.398244857788086
    8. '  ' → logprob: -18.648244857788086
    9. '=
' → logprob: -19.023244857788086
    10. '=create' → logprob: -19.523244857788086

Token 1330: ' Binary' (ID: 32672)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.38687169551849365
    2. ' Binary' → logprob: -1.1368716955184937
    3. '   ' → logprob: -14.636871337890625
    4. '(Binary' → logprob: -15.386871337890625
    5. ' ' → logprob: -17.261871337890625
    6. ' binary' → logprob: -17.386871337890625
    7. 'Bit' → logprob: -19.011871337890625
    8. '  ' → logprob: -19.386871337890625
    9. '_binary' → logprob: -19.886871337890625
    10. '.Binary' → logprob: -20.136871337890625

Token 1331: 'Indexed' (ID: 78900)
  Prédit: 'Indexed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indexed' → logprob: -2.45848218582978e-06
    2. 'Indented' → logprob: -13.87500286102295
    3. ' Indexed' → logprob: -14.50000286102295
    4. 'Sized' → logprob: -14.75000286102295
    5. 'indexed' → logprob: -15.12500286102295
    6. 'Index' → logprob: -17.625001907348633
    7. 'Initialized' → logprob: -17.625001907348633
    8. '```' → logprob: -17.875001907348633
    9. 'I' → logprob: -18.250001907348633
    10. 'Fen' → logprob: -18.375001907348633

Token 1332: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.8624639324116288e-06
    2. 'tree' → logprob: -13.500001907348633
    3. '_tree' → logprob: -16.125001907348633
    4. 'Bit' → logprob: -16.375001907348633
    5. 'Trees' → logprob: -17.000001907348633
    6. '```' → logprob: -17.250001907348633
    7. 'T' → logprob: -17.875001907348633
    8. '[' → logprob: -18.000001907348633
    9. '(Tree' → logprob: -18.125001907348633
    10. 'ree' → logprob: -18.125001907348633

Token 1333: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0015051016816869378
    2. 'N' → logprob: -6.501504898071289
    3. '   ' → logprob: -13.376504898071289
    4. '```' → logprob: -14.376504898071289
    5. '[N' → logprob: -15.501504898071289
    6. '(' → logprob: -15.501504898071289
    7. '(
' → logprob: -16.00150489807129
    8. '(n' → logprob: -16.50150489807129
    9. ' (' → logprob: -17.12650489807129
    10. '	N' → logprob: -17.50150489807129

Token 1334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008058178937062621
    2. ')
' → logprob: -7.125805854797363
    3. '   ' → logprob: -14.500805854797363
    4. ' )' → logprob: -14.750805854797363
    5. ')
' → logprob: -15.250805854797363
    6. ')

' → logprob: -16.375804901123047
    7. '<|end|>' → logprob: -16.750804901123047
    8. '),' → logprob: -17.125804901123047
    9. '))' → logprob: -17.500804901123047
    10. ')`' → logprob: -18.000804901123047

Token 1335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05559474229812622
    2. 'init' → logprob: -2.9305946826934814
    3. ' init' → logprob: -7.4305949211120605
    4. '
' → logprob: -9.930594444274902
    5. '```' → logprob: -10.305594444274902
    6. '_init' → logprob: -10.930594444274902
    7. '	init' → logprob: -11.805594444274902
    8. '    
' → logprob: -12.180594444274902
    9. '(init' → logprob: -13.180594444274902
    10. ')init' → logprob: -14.555594444274902

Token 1336: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' (adapté à ' init') → logprob: -1.2948405128554441e-05
    2. ' init' → logprob: -11.50001335144043
    3. '   ' → logprob: -13.00001335144043
    4. '```' → logprob: -15.25001335144043
    5. '_init' → logprob: -15.75001335144043
    6. 'for' → logprob: -16.37501335144043
    7. 'bit' → logprob: -17.12501335144043
    8. '	init' → logprob: -17.50001335144043
    9. '
' → logprob: -18.00001335144043
    10. '(init' → logprob: -18.37501335144043

Token 1337: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.003143612528219819
    2. '(bit' → logprob: -6.003143787384033
    3. 'bit' → logprob: -7.378143787384033
    4. ' bit' → logprob: -10.128143310546875
    5. '_BIT' → logprob: -13.878143310546875
    6. '_bits' → logprob: -14.128143310546875
    7. '_' → logprob: -15.253143310546875
    8. '_b' → logprob: -15.503143310546875
    9. '```' → logprob: -15.753143310546875
    10. ' бит' → logprob: -15.878143310546875

Token 1338: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. '(tree' → logprob: -14.250001907348633
    4. '```' → logprob: -15.875001907348633
    5. 'bit' → logprob: -16.875001907348633
    6. '(Bit' → logprob: -17.125001907348633
    7. ' (' → logprob: -17.375001907348633
    8. '(b' → logprob: -17.625001907348633
    9. '(bits' → logprob: -17.625001907348633
    10. '(
' → logprob: -18.000001907348633

Token 1339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ',N' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.625007629394531
    4. ' ,' → logprob: -13.750007629394531
    5. ')' → logprob: -16.12500762939453
    6. ',
' → logprob: -16.37500762939453
    7. '```' → logprob: -18.37500762939453
    8. '(N' → logprob: -18.50000762939453
    9. 'import' → logprob: -18.75000762939453
    10. '
' → logprob: -19.00000762939453

Token 1340: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.15310683415737e-05
    2. ' N' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.37502098083496
    4. '	N' → logprob: -19.37502098083496
    5. ')' → logprob: -21.62502098083496
    6. '```' → logprob: -21.87502098083496
    7. '[N' → logprob: -23.25002098083496
    8. '>N' → logprob: -23.37502098083496
    9. '<N' → logprob: -23.62502098083496
    10. '(N' → logprob: -23.75002098083496

Token 1341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010020548506872728
    2. '   ' → logprob: -9.375100135803223
    3. ')
' → logprob: -11.125100135803223
    4. ' )' → logprob: -15.250100135803223
    5. '<|end|>' → logprob: -15.750100135803223
    6. ')#' → logprob: -17.25010108947754
    7. '),' → logprob: -17.25010108947754
    8. ')

' → logprob: -17.37510108947754
    9. '())' → logprob: -17.50010108947754
    10. ')n' → logprob: -18.00010108947754

Token 1342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037955286097712815
    2. 'ans' → logprob: -8.62537956237793
    3. '    
' → logprob: -9.50037956237793
    4. '
' → logprob: -9.50037956237793
    5. '	ans' → logprob: -11.00037956237793
    6. '```' → logprob: -11.00037956237793
    7. 'result' → logprob: -11.62537956237793
    8. ' ans' → logprob: -13.12537956237793
    9. '<|end|>' → logprob: -13.50037956237793
    10. '(ans' → logprob: -14.00037956237793

Token 1343: ' an' (ID: 448)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.020130600780248642
    2. 'result' → logprob: -4.020130634307861
    3. '   ' → logprob: -6.395130634307861
    4. 'res' → logprob: -9.145130157470703
    5. 'results' → logprob: -9.270130157470703
    6. 'answer' → logprob: -9.770130157470703
    7. 'answers' → logprob: -10.895130157470703
    8. '```' → logprob: -11.020130157470703
    9. ' ans' → logprob: -12.395130157470703
    10. '    
' → logprob: -12.645130157470703

Token 1344: 'ss' (ID: 1087)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008274241350591183
    2. 'ss' → logprob: -5.008274078369141
    3. 'swer' → logprob: -7.008274078369141
    4. 'sss' → logprob: -8.00827407836914
    5. 'sns' → logprob: -8.50827407836914
    6. 'sw' → logprob: -9.88327407836914
    7. 'ns' → logprob: -10.00827407836914
    8. 'ssss' → logprob: -12.00827407836914
    9. 'n' → logprob: -12.75827407836914
    10. 'sses' → logprob: -13.13327407836914

Token 1345: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019461384043097496
    2. '=' → logprob: -4.019461154937744
    3. ' =' → logprob: -6.644461154937744
    4. '=s' → logprob: -11.769461631774902
    5. '=
' → logprob: -14.019461631774902
    6. '   ' → logprob: -16.019460678100586
    7. '=[]' → logprob: -16.019460678100586
    8. '=[]
' → logprob: -16.144460678100586
    9. ''s' → logprob: -16.519460678100586
    10. ' s' → logprob: -16.519460678100586

Token 1346: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0011709370883181691
    2. ' solve' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.376171112060547
    4. '.solve' → logprob: -17.501171112060547
    5. 'sol' → logprob: -18.126171112060547
    6. '[]' → logprob: -18.126171112060547
    7. 'save' → logprob: -18.376171112060547
    8. ' ' → logprob: -18.501171112060547
    9. '[s' → logprob: -18.876171112060547
    10. '[]
' → logprob: -19.376171112060547

Token 1347: '_all' (ID: 13305)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.003193993354216218
    2. '_all' → logprob: -5.7531938552856445
    3. '_' → logprob: -11.128193855285645
    4. 'for' → logprob: -13.753193855285645
    5. '```' → logprob: -15.753193855285645
    6. '_
' → logprob: -16.25319480895996
    7. 'For' → logprob: -16.87819480895996
    8. '__' → logprob: -17.00319480895996
    9. 'all' → logprob: -17.00319480895996
    10. ')_' → logprob: -17.25319480895996

Token 1348: '(N' (ID: 10564)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cs' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.375005722045898
    3. '(Cs' → logprob: -14.000005722045898
    4. '```' → logprob: -15.375005722045898
    5. '(
' → logprob: -15.500005722045898
    6. '(C' → logprob: -15.875005722045898
    7. ' (' → logprob: -17.3750057220459
    8. '(ci' → logprob: -17.3750057220459
    9. '	cs' → logprob: -17.6250057220459
    10. '(css' → logprob: -18.1250057220459

Token 1349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16035450994968414
    2. '(cs' → logprob: -1.910354495048523
    3. '(Cs' → logprob: -10.035354614257812
    4. '(' → logprob: -10.160354614257812
    5. '(C' → logprob: -10.785354614257812
    6. '   ' → logprob: -11.535354614257812
    7. '```' → logprob: -12.160354614257812
    8. 'cs' → logprob: -12.285354614257812
    9. ' ,' → logprob: -13.160354614257812
    10. ',C' → logprob: -13.285354614257812

Token 1350: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -5.848420551046729e-05
    2. ' cs' → logprob: -9.7500581741333
    3. '	cs' → logprob: -16.875059127807617
    4. 'csrf' → logprob: -18.375059127807617
    5. '(cs' → logprob: -18.625059127807617
    6. '_cs' → logprob: -19.750059127807617
    7. 'c' → logprob: -21.625059127807617
    8. '.cs' → logprob: -21.750059127807617
    9. '   ' → logprob: -22.125059127807617
    10. 'css' → logprob: -22.500059127807617

Token 1351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.266944157890975e-05
    2. ' ,' → logprob: -9.625072479248047
    3. ' es' → logprob: -12.500072479248047
    4. '   ' → logprob: -13.750072479248047
    5. ')' → logprob: -14.875072479248047
    6. ',
' → logprob: -15.125072479248047
    7. '```' → logprob: -15.375072479248047
    8. '(bit' → logprob: -16.000072479248047
    9. 'es' → logprob: -16.250072479248047
    10. 'bit' → logprob: -16.250072479248047

Token 1352: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.006719991099089384
    2. ' es' → logprob: -5.006720066070557
    3. '   ' → logprob: -13.006719589233398
    4. ' ' → logprob: -14.131719589233398
    5. 'bit' → logprob: -14.756719589233398
    6. 'Es' → logprob: -15.131719589233398
    7. '	es' → logprob: -15.256719589233398
    8. 'N' → logprob: -15.506719589233398
    9. '
' → logprob: -16.5067195892334
    10. 'e' → logprob: -16.6317195892334

Token 1353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. ',t' → logprob: -10.500031471252441
    3. ' ,' → logprob: -13.000031471252441
    4. '   ' → logprob: -13.625031471252441
    5. ',
' → logprob: -14.375031471252441
    6. '```' → logprob: -17.000032424926758
    7. ',n' → logprob: -18.125032424926758
    8. ',T' → logprob: -18.375032424926758
    9. ',N' → logprob: -19.000032424926758
    10. ')' → logprob: -19.250032424926758

Token 1354: ' tin' (ID: 17325)
  Prédit: 'tin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0004271004581823945
    2. ' tin' → logprob: -7.87542724609375
    3. 'tout' → logprob: -10.00042724609375
    4. '   ' → logprob: -14.25042724609375
    5. 't' → logprob: -15.00042724609375
    6. ' ' → logprob: -15.25042724609375
    7. '```' → logprob: -16.00042724609375
    8. 'bit' → logprob: -16.25042724609375
    9. '  ' → logprob: -17.00042724609375
    10. 'tou' → logprob: -17.37542724609375

Token 1355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7954958821064793e-05
    2. ',t' → logprob: -11.500018119812012
    3. '   ' → logprob: -12.250018119812012
    4. ',
' → logprob: -13.375018119812012
    5. ' ,' → logprob: -14.125018119812012
    6. '```' → logprob: -15.250018119812012
    7. 't' → logprob: -16.625017166137695
    8. '[' → logprob: -16.750017166137695
    9. 'def' → logprob: -16.750017166137695
    10. '`,' → logprob: -17.000017166137695

Token 1356: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.011048408225178719
    2. ' tout' → logprob: -4.511048316955566
    3. 't' → logprob: -14.761048316955566
    4. '   ' → logprob: -16.761049270629883
    5. 'Tout' → logprob: -17.011049270629883
    6. '    ' → logprob: -17.511049270629883
    7. 'tou' → logprob: -17.636049270629883
    8. ' ' → logprob: -18.386049270629883
    9. 'todo' → logprob: -18.886049270629883
    10. '  ' → logprob: -19.136049270629883

Token 1357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.500001907348633
    3. 'bit' → logprob: -15.125001907348633
    4. ',
' → logprob: -16.750001907348633
    5. ' bit' → logprob: -16.750001907348633
    6. ',b' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.625001907348633
    8. ')' → logprob: -17.875001907348633
    9. '```' → logprob: -18.875001907348633
    10. '(bit' → logprob: -20.000001907348633

Token 1358: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.16022412478923798
    2. ' bit' → logprob: -1.9102240800857544
    3. '(bit' → logprob: -20.78522491455078
    4. '_bit' → logprob: -23.16022491455078
    5. '-bit' → logprob: -23.28522491455078
    6. 'Bit' → logprob: -23.28522491455078
    7. '
' → logprob: -23.41022491455078
    8. '.bit' → logprob: -23.53522491455078
    9. ' ' → logprob: -23.91022491455078
    10. 'b' → logprob: -24.03522491455078

Token 1359: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12694595754146576
    2. ')' → logprob: -2.126945972442627
    3. ')
' → logprob: -11.251945495605469
    4. '   ' → logprob: -12.376945495605469
    5. ')`
' → logprob: -15.001945495605469
    6. ')

' → logprob: -15.251945495605469
    7. ' )
' → logprob: -16.37694549560547
    8. ')`' → logprob: -18.00194549560547
    9. ' ' → logprob: -18.12694549560547
    10. ')#' → logprob: -18.37694549560547

Token 1360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027731433510780334
    2. 'print' → logprob: -6.002773284912109
    3. '
' → logprob: -8.62777328491211
    4. ' print' → logprob: -9.37777328491211
    5. '```' → logprob: -10.37777328491211
    6. '    
' → logprob: -13.25277328491211
    7. '	print' → logprob: -15.00277328491211
    8. '(print' → logprob: -15.25277328491211
    9. '``' → logprob: -15.75277328491211
    10. '`' → logprob: -16.75277328491211

Token 1361: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002537104592192918
    2. '   ' → logprob: -8.500253677368164
    3. ' print' → logprob: -10.000253677368164
    4. '```' → logprob: -12.250253677368164
    5. '
' → logprob: -16.875253677368164
    6. '``' → logprob: -17.625253677368164
    7. '_print' → logprob: -18.125253677368164
    8. '	print' → logprob: -18.125253677368164
    9. '#print' → logprob: -18.125253677368164
    10. '`' → logprob: -18.375253677368164

Token 1362: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0006498866132460535
    2. '(*' → logprob: -7.375649929046631
    3. '(' → logprob: -11.875649452209473
    4. '_results' → logprob: -12.375649452209473
    5. '(ans' → logprob: -12.875649452209473
    6. 'Result' → logprob: -13.125649452209473
    7. 'result' → logprob: -13.125649452209473
    8. 's' → logprob: -13.375649452209473
    9. '(result' → logprob: -14.125649452209473
    10. '   ' → logprob: -14.375649452209473

Token 1363: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.190178904333152e-05
    2. 'ans' → logprob: -10.500031471252441
    3. '(answer' → logprob: -12.875031471252441
    4. '```' → logprob: -14.000031471252441
    5. '(' → logprob: -15.250031471252441
    6. ' (' → logprob: -15.875031471252441
    7. '(abs' → logprob: -16.000032424926758
    8. '(ord' → logprob: -16.375032424926758
    9. '(`' → logprob: -16.500032424926758
    10. '	ans' → logprob: -17.000032424926758

Token 1364: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.246537173457909e-06
    2. 'ss' → logprob: -13.000003814697266
    3. '(ans' → logprob: -14.250003814697266
    4. 'ans' → logprob: -14.750003814697266
    5. ')s' → logprob: -15.250003814697266
    6. ')' → logprob: -15.500003814697266
    7. '(s' → logprob: -16.000003814697266
    8. '`s' → logprob: -16.250003814697266
    9. ''s' → logprob: -17.250003814697266
    10. '_s' → logprob: -17.750003814697266

Token 1365: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5011276006698608
    2. '()' → logprob: -1.6261276006698608
    3. '())' → logprob: -1.6261276006698608
    4. '()
' → logprob: -7.50112771987915
    5. ')
' → logprob: -9.751127243041992
    6. '())
' → logprob: -9.876127243041992
    7. '   ' → logprob: -10.501127243041992
    8. '```' → logprob: -10.626127243041992
    9. '(' → logprob: -11.251127243041992
    10. ' )' → logprob: -11.501127243041992

Token 1366: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.921253225300461e-05
    2. '```' → logprob: -10.000069618225098
    3. ' if' → logprob: -10.875069618225098
    4. '<|end|>' → logprob: -13.000069618225098
    5. '
' → logprob: -13.250069618225098
    6. '#' → logprob: -15.125069618225098
    7. '    
' → logprob: -15.750069618225098
    8. '  
' → logprob: -15.750069618225098
    9. 'main' → logprob: -16.37506866455078
    10. 'import' → logprob: -17.37506866455078

Token 1367: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1365
Tokens correctement prédits (1ère position, stricte): 613
Tokens correctement prédits (1ère position, avec adaptation): 680
Tokens correctement prédits (top 10): 1207
Précision stricte (1ère position): 44.91%
Précision adaptée (1ère position): 49.82%
Précision (top 10): 88.42%
================================================================================
