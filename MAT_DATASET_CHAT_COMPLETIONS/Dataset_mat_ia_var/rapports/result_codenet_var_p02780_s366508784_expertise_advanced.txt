================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate
from operator import add

def main():
    N, K = map(int, input().split())
    dice = list(map(int, input().split()))
    expected = [(p + 1) / 2 for p in dice]
    prefix = [0, *accumulate(expected)]
    max_E = max(prefix[i + K] - prefix[i] for i in range(N - K + 1))
    print(max_E)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2794735431671143
    2. 'product' → logprob: -1.5294735431671143
    3. 'per' → logprob: -1.6544735431671143
    4. 'com' → logprob: -1.9044735431671143
    5. ' permutations' → logprob: -2.7794735431671143
    6. ' product' → logprob: -3.5294735431671143
    7. 'cycle' → logprob: -3.6544735431671143
    8. 'chain' → logprob: -4.654473304748535
    9. 'group' → logprob: -4.654473304748535
    10. ' cycle' → logprob: -4.904473304748535

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00045259902253746986
    2. '(
' → logprob: -8.375452995300293
    3. '.' → logprob: -8.750452995300293
    4. '\(' → logprob: -10.875452995300293
    5. ',' → logprob: -11.625452995300293
    6. '()' → logprob: -11.750452995300293
    7. '```' → logprob: -11.875452995300293
    8. 'import' → logprob: -13.000452995300293
    9. '((' → logprob: -13.125452995300293
    10. '(

' → logprob: -13.125452995300293

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006830069469287992
    2. '(
' → logprob: -7.500682830810547
    3. '.' → logprob: -9.750682830810547
    4. '\(' → logprob: -10.375682830810547
    5. '```' → logprob: -11.875682830810547
    6. ',' → logprob: -11.875682830810547
    7. '(

' → logprob: -12.125682830810547
    8. '`' → logprob: -12.500682830810547
    9. '#' → logprob: -13.125682830810547
    10. '\n' → logprob: -13.375682830810547

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5101304650306702
    2. ' operator' → logprob: -1.1351304054260254
    3. 'math' → logprob: -3.6351304054260254
    4. ' functools' → logprob: -3.6351304054260254
    5. ' collections' → logprob: -4.385130405426025
    6. 'operator' → logprob: -4.635130405426025
    7. 'collections' → logprob: -6.260130405426025
    8. 'fun' → logprob: -7.135130405426025
    9. ' itertools' → logprob: -8.885130882263184
    10. ' sys' → logprob: -9.260130882263184

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06885962933301926
    2. 'import' → logprob: -2.818859577178955
    3. '.' → logprob: -5.443859577178955
    4. ' ' → logprob: -6.068859577178955
    5. ' .' → logprob: -9.193860054016113
    6. '<|end|>' → logprob: -9.568860054016113
    7. '.import' → logprob: -10.568860054016113
    8. '	import' → logprob: -11.568860054016113
    9. '_import' → logprob: -12.318860054016113
    10. '_' → logprob: -13.193860054016113

Token 8: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.11558586359024048
    2. ' add' → logprob: -2.2405858039855957
    3. ' ' → logprob: -6.615585803985596
    4. 'mul' → logprob: -8.115586280822754
    5. 'import' → logprob: -8.490586280822754
    6. ' ad' → logprob: -8.615586280822754
    7. '	add' → logprob: -8.615586280822754
    8. '.add' → logprob: -9.115586280822754
    9. '```' → logprob: -9.365586280822754
    10. '  ' → logprob: -9.740586280822754

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16928787529468536
    2. '(
' → logprob: -1.919287919998169
    3. '\n' → logprob: -5.79428768157959
    4. '\' → logprob: -6.04428768157959
    5. ',' → logprob: -7.41928768157959
    6. '(

' → logprob: -7.41928768157959
    7. '`' → logprob: -7.79428768157959
    8. '
' → logprob: -7.79428768157959
    9. '```' → logprob: -8.16928768157959
    10. ',
' → logprob: -8.29428768157959

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07040540874004364
    2. '(
' → logprob: -3.5704054832458496
    3. 'a' → logprob: -4.07040548324585
    4. 'result' → logprob: -4.44540548324585
    5. 'x' → logprob: -5.94540548324585
    6. '`' → logprob: -6.69540548324585
    7. '#' → logprob: -7.19540548324585
    8. 'data' → logprob: -7.57040548324585
    9. ')' → logprob: -7.57040548324585
    10. 'n' → logprob: -7.82040548324585

Token 11: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0643310621380806
    2. ' accumulate' → logprob: -3.3143310546875
    3. ' space' → logprob: -5.0643310546875
    4. ' add' → logprob: -5.1893310546875
    5. ' sum' → logprob: -5.9393310546875
    6. ' calculate' → logprob: -6.1893310546875
    7. ' my' → logprob: -6.4393310546875
    8. ' cumulative' → logprob: -6.5643310546875
    9. ' accumulated' → logprob: -7.4393310546875
    10. '_' → logprob: -7.4393310546875

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004883344518020749
    2. '():' → logprob: -8.12548828125
    3. '(:' → logprob: -9.12548828125
    4. ':' → logprob: -10.50048828125
    5. ' (' → logprob: -11.25048828125
    6. '(
' → logprob: -11.62548828125
    7. '```' → logprob: -12.25048828125
    8. '(`' → logprob: -12.87548828125
    9. '):' → logprob: -13.00048828125
    10. '('' → logprob: -13.00048828125

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048097822815179825
    2. '    ' → logprob: -3.423097848892212
    3. ' result' → logprob: -5.423097610473633
    4. 'result' → logprob: -6.298097610473633
    5. ' ' → logprob: -6.673097610473633
    6. ' a' → logprob: -6.673097610473633
    7. ' return' → logprob: -6.923097610473633
    8. 'a' → logprob: -7.298097610473633
    9. '    
' → logprob: -7.298097610473633
    10. 'n' → logprob: -7.423097610473633

Token 14: ' N' (ID: 478)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.8946182727813721
    2. ' nums' → logprob: -2.019618272781372
    3. ' data' → logprob: -2.394618272781372
    4. '   ' → logprob: -2.769618272781372
    5. ' result' → logprob: -2.894618272781372
    6. ' sequence' → logprob: -3.019618272781372
    7. 'numbers' → logprob: -3.019618272781372
    8. 'nums' → logprob: -3.144618272781372
    9. 'data' → logprob: -3.519618272781372
    10. ' arr' → logprob: -4.269618034362793

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027467506006360054
    2. '=' → logprob: -4.277467727661133
    3. ' ' → logprob: -4.402467727661133
    4. ' ,' → logprob: -7.777467727661133
    5. ',' → logprob: -8.652467727661133
    6. '  ' → logprob: -8.777467727661133
    7. '   ' → logprob: -9.777467727661133
    8. ' >' → logprob: -10.402467727661133
    9. '    ' → logprob: -10.402467727661133
    10. ' )' → logprob: -11.027467727661133

Token 16: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.6013966202735901
    2. ' M' → logprob: -1.8513965606689453
    3. ' ' → logprob: -2.1013965606689453
    4. 'K' → logprob: -2.2263965606689453
    5. 'M' → logprob: -3.1013965606689453
    6. 'input' → logprob: -5.101396560668945
    7. ' input' → logprob: -6.476396560668945
    8. ' =' → logprob: -6.601396560668945
    9. '  ' → logprob: -6.851396560668945
    10. 'data' → logprob: -6.976396560668945

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005236717872321606
    2. '=' → logprob: -5.255236625671387
    3. ',' → logprob: -13.505236625671387
    4. ' ' → logprob: -13.880236625671387
    5. ' =
' → logprob: -15.630236625671387
    6. '=int' → logprob: -16.505237579345703
    7. ')' → logprob: -16.505237579345703
    8. ' =",' → logprob: -16.630237579345703
    9. '  ' → logprob: -16.755237579345703
    10. '=input' → logprob: -17.380237579345703

Token 18: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01853524148464203
    2. 'map' → logprob: -4.018535137176514
    3. ' ' → logprob: -8.518535614013672
    4. ' input' → logprob: -9.518535614013672
    5. '10' → logprob: -10.143535614013672
    6. '20' → logprob: -11.268535614013672
    7. ' list' → logprob: -11.893535614013672
    8. 'input' → logprob: -12.018535614013672
    9. '45' → logprob: -12.143535614013672
    10. '5' → logprob: -12.143535614013672

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1307801753282547
    2. '(' → logprob: -2.1307802200317383
    3. '(input' → logprob: -5.630780220031738
    4. '(str' → logprob: -8.380780220031738
    5. '(lambda' → logprob: -11.130780220031738
    6. 'int' → logprob: -11.755780220031738
    7. 'input' → logprob: -13.130780220031738
    8. '(eval' → logprob: -13.505780220031738
    9. '(list' → logprob: -13.755780220031738
    10. '(
' → logprob: -13.880780220031738

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00992241594940424
    2. ',input' → logprob: -4.634922504425049
    3. 'input' → logprob: -8.88492202758789
    4. ' ,' → logprob: -11.50992202758789
    5. '(input' → logprob: -12.00992202758789
    6. '(' → logprob: -12.13492202758789
    7. ' input' → logprob: -13.13492202758789
    8. ',int' → logprob: -13.88492202758789
    9. ')' → logprob: -14.13492202758789
    10. '(),' → logprob: -14.50992202758789

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3132670223712921
    2. 'input' → logprob: -1.3132669925689697
    3. ' ' → logprob: -13.06326675415039
    4. ')' → logprob: -13.81326675415039
    5. '(input' → logprob: -13.81326675415039
    6. ',input' → logprob: -14.93826675415039
    7. '=input' → logprob: -14.93826675415039
    8. '	input' → logprob: -15.56326675415039
    9. ' )' → logprob: -16.06326675415039
    10. '   ' → logprob: -16.81326675415039

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004334933590143919
    2. '())' → logprob: -6.004334926605225
    3. ')' → logprob: -6.504334926605225
    4. '()' → logprob: -8.004335403442383
    5. '(' → logprob: -11.379335403442383
    6. '(),' → logprob: -12.254335403442383
    7. '()))' → logprob: -13.629335403442383
    8. '()[' → logprob: -13.629335403442383
    9. '());' → logprob: -13.754335403442383
    10. '))' → logprob: -13.879335403442383

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.41866585687967e-06
    2. 'strip' → logprob: -11.875008583068848
    3. ' split' → logprob: -13.750008583068848
    4. 'rstrip' → logprob: -15.750008583068848
    5. '(split' → logprob: -16.25000762939453
    6. ')' → logprob: -16.75000762939453
    7. 'spl' → logprob: -17.00000762939453
    8. 'read' → logprob: -17.62500762939453
    9. '().' → logprob: -20.50000762939453
    10. '```' → logprob: -20.50000762939453

Token 24: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014185951091349125
    2. '))' → logprob: -4.264185905456543
    3. '())' → logprob: -12.014185905456543
    4. '()' → logprob: -12.264185905456543
    5. '),' → logprob: -12.639185905456543
    6. '(' → logprob: -13.014185905456543
    7. ')))' → logprob: -13.389185905456543
    8. ')
' → logprob: -13.639185905456543
    9. ')")' → logprob: -14.014185905456543
    10. ')`' → logprob: -14.264185905456543

Token 25: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' dice' (ID: 22078)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.38866961002349854
    2. 'A' → logprob: -2.888669490814209
    3. 'arr' → logprob: -2.888669490814209
    4. ' arr' → logprob: -3.013669490814209
    5. ' a' → logprob: -3.263669490814209
    6. ' data' → logprob: -4.138669490814209
    7. 'a' → logprob: -4.138669490814209
    8. ' numbers' → logprob: -4.263669490814209
    9. 'data' → logprob: -4.513669490814209
    10. ' array' → logprob: -4.763669490814209

Token 27: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31027382612228394
    2. ' =' → logprob: -1.5602738857269287
    3. '_s' → logprob: -4.18527364730835
    4. '=' → logprob: -4.68527364730835
    5. '_values' → logprob: -4.68527364730835
    6. '_' → logprob: -4.81027364730835
    7. '_roll' → logprob: -4.93527364730835
    8. '_faces' → logprob: -5.56027364730835
    9. '_counts' → logprob: -5.81027364730835
    10. ' ' → logprob: -8.560274124145508

Token 28: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7148222327232361
    2. ' list' → logprob: -0.7148222327232361
    3. '[' → logprob: -4.464822292327881
    4. 'list' → logprob: -4.839822292327881
    5. '[list' → logprob: -6.714822292327881
    6. ' []' → logprob: -7.964822292327881
    7. '[]' → logprob: -8.339821815490723
    8. '[int' → logprob: -9.214821815490723
    9. ' map' → logprob: -10.964821815490723
    10. ' ' → logprob: -10.964821815490723

Token 29: '(map' (ID: 16946)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.6352614164352417
    2. '(map' → logprob: -1.1352614164352417
    3. '(' → logprob: -2.1352615356445312
    4. '(range' → logprob: -3.6352615356445312
    5. '(int' → logprob: -5.760261535644531
    6. '()' → logprob: -8.385261535644531
    7. '(chain' → logprob: -8.510261535644531
    8. '(input' → logprob: -9.010261535644531
    9. '(filter' → logprob: -9.010261535644531
    10. '(com' → logprob: -9.385261535644531

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025234611239284277
    2. '(' → logprob: -6.002523422241211
    3. 'int' → logprob: -10.252523422241211
    4. '[int' → logprob: -12.627523422241211
    5. '<int' → logprob: -13.127523422241211
    6. '=int' → logprob: -13.127523422241211
    7. '(lambda' → logprob: -13.127523422241211
    8. ',int' → logprob: -13.627523422241211
    9. '(
' → logprob: -14.877523422241211
    10. ' (' → logprob: -15.127523422241211

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04650488868355751
    2. ',input' → logprob: -3.6715049743652344
    3. '(input' → logprob: -4.046504974365234
    4. '(' → logprob: -6.046504974365234
    5. 'input' → logprob: -8.921504974365234
    6. ')' → logprob: -11.921504974365234
    7. '(),' → logprob: -12.546504974365234
    8. ' ,' → logprob: -12.671504974365234
    9. '=input' → logprob: -13.796504974365234
    10. '),' → logprob: -13.921504974365234

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269369274377823
    2. ' input' → logprob: -2.126936912536621
    3. '(input' → logprob: -12.501936912536621
    4. ' ' → logprob: -13.501936912536621
    5. ',input' → logprob: -13.876936912536621
    6. ')' → logprob: -14.001936912536621
    7. '	input' → logprob: -14.001936912536621
    8. '=input' → logprob: -14.251936912536621
    9. '   ' → logprob: -16.001937866210938
    10. '<input' → logprob: -16.501937866210938

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00034702493576332927
    2. '()' → logprob: -8.250347137451172
    3. '(' → logprob: -9.750347137451172
    4. ')' → logprob: -11.875347137451172
    5. '(.' → logprob: -11.875347137451172
    6. ' ().' → logprob: -12.000347137451172
    7. '.' → logprob: -13.125347137451172
    8. '())' → logprob: -13.875347137451172
    9. '('').' → logprob: -14.000347137451172
    10. ' .' → logprob: -14.625347137451172

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. ' split' → logprob: -14.125000953674316
    3. '(split' → logprob: -15.875000953674316
    4. 'strip' → logprob: -15.875000953674316
    5. 'rstrip' → logprob: -17.125001907348633
    6. 'spl' → logprob: -17.250001907348633
    7. '.split' → logprob: -19.875001907348633
    8. ')' → logprob: -20.500001907348633
    9. 'plit' → logprob: -20.875001907348633
    10. 's' → logprob: -21.625001907348633

Token 35: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03354011848568916
    2. '())' → logprob: -3.7835400104522705
    3. '()' → logprob: -4.90854024887085
    4. '))' → logprob: -6.03354024887085
    5. '(' → logprob: -8.283539772033691
    6. ')' → logprob: -9.158539772033691
    7. '()))
' → logprob: -10.158539772033691
    8. '())))' → logprob: -10.533539772033691
    9. '()));' → logprob: -11.033539772033691
    10. '(),' → logprob: -12.033539772033691

Token 36: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7764397859573364
    2. '   ' → logprob: -1.2764397859573364
    3. ')' → logprob: -2.401439666748047
    4. '    
' → logprob: -2.651439666748047
    5. '<|end|>' → logprob: -3.276439666748047
    6. ' ' → logprob: -4.151439666748047
    7. ' 
' → logprob: -4.151439666748047
    8. '  
' → logprob: -5.026439666748047
    9. '   
' → logprob: -5.901439666748047
    10. '```' → logprob: -6.276439666748047

Token 37: ' expected' (ID: 5930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8353220224380493
    2. 'dp' → logprob: -1.3353220224380493
    3. ' dp' → logprob: -2.7103219032287598
    4. '
' → logprob: -2.8353219032287598
    5. '    
' → logprob: -2.8353219032287598
    6. ')' → logprob: -4.08532190322876
    7. ' 
' → logprob: -4.08532190322876
    8. 'prefix' → logprob: -4.96032190322876
    9. 'total' → logprob: -5.08532190322876
    10. 'DP' → logprob: -5.46032190322876

Token 38: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37162643671035767
    2. '_value' → logprob: -1.621626377105713
    3. '_values' → logprob: -2.621626377105713
    4. ' =' → logprob: -3.871626377105713
    5. '=' → logprob: -4.371626377105713
    6. '_score' → logprob: -6.496626377105713
    7. '_val' → logprob: -6.746626377105713
    8. '_scores' → logprob: -7.121626377105713
    9. '_sum' → logprob: -7.246626377105713
    10. '_points' → logprob: -7.746626377105713

Token 39: ' [(' (ID: 43900)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6087294816970825
    2. ' [' → logprob: -1.3587294816970825
    3. '[' → logprob: -1.9837294816970825
    4. ' ' → logprob: -3.358729362487793
    5. ' sum' → logprob: -4.108729362487793
    6. 'sum' → logprob: -5.108729362487793
    7. ' K' → logprob: -6.733729362487793
    8. '[len' → logprob: -7.108729362487793
    9. 'dice' → logprob: -7.608729362487793
    10. ' dice' → logprob: -8.108729362487793

Token 40: 'p' (ID: 79)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.48311442136764526
    2. 'dice' → logprob: -1.98311448097229
    3. 'd' → logprob: -2.48311448097229
    4. '1' → logprob: -2.85811448097229
    5. 'p' → logprob: -3.35811448097229
    6. 'die' → logprob: -3.85811448097229
    7. 'K' → logprob: -5.358114242553711
    8. 'i' → logprob: -5.483114242553711
    9. '(d' → logprob: -5.483114242553711
    10. 'k' → logprob: -5.608114242553711

Token 41: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5824475884437561
    2. ' +' → logprob: -1.2074475288391113
    3. ' *' → logprob: -2.8324475288391113
    4. '*' → logprob: -3.8324475288391113
    5. ')' → logprob: -4.707447528839111
    6. '-' → logprob: -4.707447528839111
    7. '+d' → logprob: -5.332447528839111
    8. 'd' → logprob: -5.457447528839111
    9. ' /' → logprob: -5.457447528839111
    10. ' -' → logprob: -5.457447528839111

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2106720209121704
    2. 'q' → logprob: -1.4606720209121704
    3. ' q' → logprob: -1.7106720209121704
    4. ' K' → logprob: -2.585671901702881
    5. 'K' → logprob: -2.960671901702881
    6. ' ' → logprob: -3.085671901702881
    7. 'dice' → logprob: -3.710671901702881
    8. ' dice' → logprob: -3.710671901702881
    9. ' (' → logprob: -4.085671901702881
    10. ')' → logprob: -4.210671901702881

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30956435203552246
    2. 'K' → logprob: -1.8095643520355225
    3. 'q' → logprob: -3.5595643520355225
    4. 'dice' → logprob: -3.5595643520355225
    5. 'd' → logprob: -4.184564590454102
    6. '(' → logprob: -4.934564590454102
    7. 'k' → logprob: -5.934564590454102
    8. ' ' → logprob: -6.059564590454102
    9. 'p' → logprob: -6.184564590454102
    10. 'N' → logprob: -6.184564590454102

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004102385137230158
    2. ')/' → logprob: -6.5041022300720215
    3. ' )' → logprob: -6.6291022300720215
    4. ')*' → logprob: -6.8791022300720215
    5. ',' → logprob: -9.75410270690918
    6. '/' → logprob: -10.37910270690918
    7. ')/(' → logprob: -10.37910270690918
    8. '）' → logprob: -11.50410270690918
    9. '`)' → logprob: -11.69160270690918
    10. ')**' → logprob: -12.06660270690918

Token 45: ' /' (ID: 820)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.183892011642456
    2. ' *' → logprob: -1.308892011642456
    3. '*' → logprob: -1.933892011642456
    4. '/' → logprob: -2.183892011642456
    5. ')' → logprob: -2.683892011642456
    6. ' /' → logprob: -2.933892011642456
    7. 'for' → logprob: -3.308892011642456
    8. ' ' → logprob: -5.433892250061035
    9. '   ' → logprob: -6.558892250061035
    10. '    ' → logprob: -7.558892250061035

Token 46: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5536368489265442
    2. 'K' → logprob: -0.9286368489265442
    3. '2' → logprob: -4.4286370277404785
    4. 'N' → logprob: -4.9286370277404785
    5. ' ' → logprob: -5.6786370277404785
    6. ' K' → logprob: -5.6786370277404785
    7. 'len' → logprob: -6.1786370277404785
    8. '   ' → logprob: -8.17863655090332
    9. '(' → logprob: -8.55363655090332
    10. 'M' → logprob: -8.92863655090332

Token 47: '2' (ID: 17)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7523812055587769
    2. 'K' → logprob: -0.7523812055587769
    3. '2' → logprob: -3.5023813247680664
    4. 'N' → logprob: -3.7523813247680664
    5. ' ' → logprob: -6.877381324768066
    6. ' K' → logprob: -7.252381324768066
    7. 'len' → logprob: -7.877381324768066
    8. '(' → logprob: -8.252381324768066
    9. '   ' → logprob: -8.752381324768066
    10. '36' → logprob: -8.877381324768066

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06758613884449005
    2. 'for' → logprob: -3.1925861835479736
    3. ')' → logprob: -4.0675859451293945
    4. ' ' → logprob: -5.0675859451293945
    5. ']' → logprob: -8.317585945129395
    6. ' )' → logprob: -8.692585945129395
    7. '   ' → logprob: -8.942585945129395
    8. '  ' → logprob: -9.567585945129395
    9. ',' → logprob: -9.942585945129395
    10. ')]' → logprob: -10.067585945129395

Token 49: ' p' (ID: 275)
  Prédit: ' dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.1525631844997406
    2. 'dice' → logprob: -2.1525630950927734
    3. ' range' → logprob: -4.277563095092773
    4. ' p' → logprob: -5.027563095092773
    5. 'range' → logprob: -6.277563095092773
    6. 'p' → logprob: -6.277563095092773
    7. 'd' → logprob: -8.152563095092773
    8. ' die' → logprob: -8.402563095092773
    9. ' ' → logprob: -8.402563095092773
    10. ' d' → logprob: -8.902563095092773

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003849955275654793
    2. 'in' → logprob: -5.878849983215332
    3. 'dice' → logprob: -7.503849983215332
    4. ')' → logprob: -8.503849983215332
    5. ' dice' → logprob: -9.128849983215332
    6. ' ' → logprob: -9.878849983215332
    7. ']' → logprob: -10.128849983215332
    8. ' ]' → logprob: -10.628849983215332
    9. 'd' → logprob: -10.878849983215332
    10. ' )' → logprob: -11.753849983215332

Token 51: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.3135555386543274
    2. ' dice' → logprob: -1.3135554790496826
    3. ' range' → logprob: -9.313555717468262
    4. ' ' → logprob: -9.438555717468262
    5. 'range' → logprob: -9.563555717468262
    6. 'd' → logprob: -10.438555717468262
    7. '   ' → logprob: -11.438555717468262
    8. 'p' → logprob: -12.813555717468262
    9. '  ' → logprob: -13.313555717468262
    10. 'Dice' → logprob: -13.438555717468262

Token 52: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01004386693239212
    2. ')' → logprob: -5.135044097900391
    3. ')]' → logprob: -5.635044097900391
    4. ' ]' → logprob: -7.760044097900391
    5. '])' → logprob: -9.38504409790039
    6. '   ' → logprob: -11.51004409790039
    7. ' )' → logprob: -12.13504409790039
    8. ']
' → logprob: -12.88504409790039
    9. ')])' → logprob: -13.26004409790039
    10. '])]' → logprob: -13.38504409790039

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6775597333908081
    2. '
' → logprob: -0.9275597333908081
    3. '<|end|>' → logprob: -2.9275598526000977
    4. ')' → logprob: -4.427559852600098
    5. '    
' → logprob: -4.677559852600098
    6. ' ' → logprob: -4.927559852600098
    7. '\n' → logprob: -5.802559852600098
    8. ' 
' → logprob: -6.052559852600098
    9. '<|end|>' → logprob: -6.802559852600098
    10. '[' → logprob: -6.927559852600098

Token 54: ' prefix' (ID: 18633)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.96061772108078
    2. 'dp' → logprob: -1.2106177806854248
    3. ' dp' → logprob: -1.9606177806854248
    4. ' expected' → logprob: -3.085617780685425
    5. ' for' → logprob: -3.335617780685425
    6. '   ' → logprob: -4.085617542266846
    7. 'for' → logprob: -4.210617542266846
    8. 'acc' → logprob: -4.460617542266846
    9. 'result' → logprob: -4.960617542266846
    10. ' cumulative' → logprob: -4.960617542266846

Token 55: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5338312983512878
    2. '_s' → logprob: -1.5338313579559326
    3. '_sum' → logprob: -2.1588313579559326
    4. 's' → logprob: -2.6588313579559326
    5. '=' → logprob: -5.1588311195373535
    6. 'sum' → logprob: -5.5338311195373535
    7. ' =' → logprob: -6.1588311195373535
    8. '_=' → logprob: -8.283831596374512
    9. 'es' → logprob: -9.283831596374512
    10. ' sums' → logprob: -10.158831596374512

Token 56: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.17776276171207428
    2. ' list' → logprob: -2.052762746810913
    3. '[' → logprob: -3.552762746810913
    4. ' [' → logprob: -5.177762985229492
    5. '[list' → logprob: -9.177762985229492
    6. 'acc' → logprob: -9.677762985229492
    7. '(list' → logprob: -11.427762985229492
    8. ' accumulate' → logprob: -12.052762985229492
    9. '   ' → logprob: -13.302762985229492
    10. '=list' → logprob: -13.677762985229492

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.6457742175552994e-05
    2. ' ' → logprob: -9.875056266784668
    3. '   ' → logprob: -12.750056266784668
    4. '*' → logprob: -13.875056266784668
    5. '1' → logprob: -15.750056266784668
    6. '
' → logprob: -15.750056266784668
    7. 'x' → logprob: -15.937556266784668
    8. '[' → logprob: -16.437557220458984
    9. '  ' → logprob: -16.437557220458984
    10. '=' → logprob: -16.687557220458984

Token 58: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017958412354346365
    2. ']+' → logprob: -9.000179290771484
    3. ',' → logprob: -9.875179290771484
    4. ' ]' → logprob: -13.500179290771484
    5. '`]' → logprob: -13.625179290771484
    6. ']
' → logprob: -14.500179290771484
    7. '0' → logprob: -14.875179290771484
    8. '+]' → logprob: -15.250179290771484
    9. '.]' → logprob: -16.000179290771484
    10. '1' → logprob: -16.125179290771484

Token 59: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.35447272658348083
    2. '*' → logprob: -1.2294727563858032
    3. ']' → logprob: -5.854472637176514
    4. '*p' → logprob: -6.479472637176514
    5. ']+' → logprob: -7.604472637176514
    6. '0' → logprob: -7.604472637176514
    7. ' ]' → logprob: -8.229473114013672
    8. '*(' → logprob: -9.354473114013672
    9. '*n' → logprob: -10.354473114013672
    10. ' *(' → logprob: -10.479473114013672

Token 60: 'acc' (ID: 3717)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.479891836643219
    2. 'acc' → logprob: -0.979891836643219
    3. 'expected' → logprob: -5.229891777038574
    4. ' list' → logprob: -7.979891777038574
    5. ' accumulate' → logprob: -9.729891777038574
    6. 'ac' → logprob: -11.854891777038574
    7. 'expect' → logprob: -12.104891777038574
    8. 'prefix' → logprob: -12.104891777038574
    9. '(acc' → logprob: -12.104891777038574
    10. '   ' → logprob: -12.604891777038574

Token 61: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.018498387187719345
    2. 'ulate' → logprob: -4.018498420715332
    3. 'ul' → logprob: -8.268498420715332
    4. 'uminate' → logprob: -10.518498420715332
    5. 'um' → logprob: -10.643498420715332
    6. 'culate' → logprob: -11.518498420715332
    7. 'ulated' → logprob: -11.893498420715332
    8. 'ulum' → logprob: -12.018498420715332
    9. 'aculate' → logprob: -12.643498420715332
    10. 'umul' → logprob: -12.643498420715332

Token 62: '(expected' (ID: 26332)
  Prédit: '(expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expected' → logprob: -0.03813697025179863
    2. '(add' → logprob: -3.2881369590759277
    3. '(' → logprob: -9.788137435913086
    4. 'expected' → logprob: -10.788137435913086
    5. ' (' → logprob: -12.538137435913086
    6. '(expect' → logprob: -12.538137435913086
    7. ')add' → logprob: -12.913137435913086
    8. ')' → logprob: -13.163137435913086
    9. '(Expected' → logprob: -13.913137435913086
    10. '(operator' → logprob: -14.038137435913086

Token 63: ')]
' (ID: 11587)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004314991645514965
    2. ')]' → logprob: -5.50431489944458
    3. ' ,' → logprob: -9.004315376281738
    4. '(add' → logprob: -10.254315376281738
    5. 'add' → logprob: -10.379315376281738
    6. ')' → logprob: -11.504315376281738
    7. ')]
' → logprob: -11.629315376281738
    8. ')])' → logprob: -11.754315376281738
    9. ')],' → logprob: -12.004315376281738
    10. '   ' → logprob: -12.879315376281738

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19411486387252808
    2. '    
' → logprob: -2.319114923477173
    3. '
' → logprob: -3.069114923477173
    4. 'result' → logprob: -4.194114685058594
    5. ' 
' → logprob: -6.319114685058594
    6. '  
' → logprob: -6.444114685058594
    7. ' result' → logprob: -6.444114685058594
    8. ' for' → logprob: -6.444114685058594
    9. 'max' → logprob: -6.569114685058594
    10. 'for' → logprob: -6.819114685058594

Token 65: ' max' (ID: 2999)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6309688091278076
    2. 'dp' → logprob: -1.2559688091278076
    3. ' max' → logprob: -2.6309688091278076
    4. ' ans' → logprob: -2.7559688091278076
    5. 'max' (adapté à ' max') → logprob: -4.380969047546387
    6. '   ' → logprob: -4.755969047546387
    7. ' result' → logprob: -4.880969047546387
    8. 'result' → logprob: -5.380969047546387
    9. 'ans' → logprob: -5.630969047546387
    10. ' answer' → logprob: -6.380969047546387

Token 66: '_E' (ID: 6584)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.545127809047699
    2. '_' → logprob: -1.4201278686523438
    3. '_value' → logprob: -2.6701278686523438
    4. '_expected' → logprob: -2.7951278686523438
    5. '_val' → logprob: -4.045127868652344
    6. '_score' → logprob: -4.045127868652344
    7. '_prefix' → logprob: -6.295127868652344
    8. 'sum' → logprob: -6.420127868652344
    9. '_total' → logprob: -6.545127868652344
    10. '_prob' → logprob: -6.795127868652344

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2850014865398407
    2. '=' → logprob: -1.535001516342163
    3. 'x' → logprob: -3.910001516342163
    4. 'xp' → logprob: -5.535001277923584
    5. '_x' → logprob: -6.035001277923584
    6. '_' → logprob: -6.535001277923584
    7. '```' → logprob: -7.535001277923584
    8. '_value' → logprob: -7.910001277923584
    9. '_sum' → logprob: -8.035001754760742
    10. ' ' → logprob: -8.035001754760742

Token 68: ' max' (ID: 2999)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.9512512683868408
    2. '0' → logprob: -1.3262512683868408
    3. ' max' → logprob: -1.9512512683868408
    4. ' ' → logprob: -2.201251268386841
    5. 'prefix' → logprob: -2.826251268386841
    6. ' float' → logprob: -4.076251029968262
    7. ' -' → logprob: -4.451251029968262
    8. 'max' → logprob: -5.451251029968262
    9. 'float' → logprob: -6.576251029968262
    10. '-' → logprob: -6.701251029968262

Token 69: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.02768239937722683
    2. '(' → logprob: -3.652682304382324
    3. '([' → logprob: -7.777682304382324
    4. ' (' → logprob: -7.902682304382324
    5. 'prefix' → logprob: -8.652682304382324
    6. '((' → logprob: -8.902682304382324
    7. '(expected' → logprob: -9.777682304382324
    8. '(sum' → logprob: -9.777682304382324
    9. ' prefix' → logprob: -10.152682304382324
    10. '(max' → logprob: -10.402682304382324

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3135955035686493
    2. ')' → logprob: -2.3135955333709717
    3. '[K' → logprob: -2.4385955333709717
    4. '[-' → logprob: -3.1885955333709717
    5. '[' → logprob: -3.8135955333709717
    6. '[N' → logprob: -4.938595294952393
    7. '[j' → logprob: -5.188595294952393
    8. '[:' → logprob: -6.063595294952393
    9. '[min' → logprob: -7.063595294952393
    10. '[k' → logprob: -7.063595294952393

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6808786988258362
    2. ' +' → logprob: -0.8058786988258362
    3. ']' → logprob: -3.1808786392211914
    4. ':' → logprob: -6.055878639221191
    5. '   ' → logprob: -7.180878639221191
    6. '+i' → logprob: -7.555878639221191
    7. ':]' → logprob: -7.680878639221191
    8. ' ' → logprob: -8.055878639221191
    9. '+k' → logprob: -8.430878639221191
    10. ' ]' → logprob: -8.430878639221191

Token 72: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.038886573165655136
    2. ' K' → logprob: -3.288886547088623
    3. '1' → logprob: -7.788886547088623
    4. ' ' → logprob: -7.913886547088623
    5. '   ' → logprob: -10.663887023925781
    6. '(' → logprob: -11.538887023925781
    7. '  ' → logprob: -12.288887023925781
    8. '	K' → logprob: -12.413887023925781
    9. '0' → logprob: -12.538887023925781
    10. ' (' → logprob: -12.663887023925781

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016029367689043283
    2. ' ]' → logprob: -6.501603126525879
    3. ']-' → logprob: -10.501603126525879
    4. '])' → logprob: -11.001603126525879
    5. ')' → logprob: -11.126603126525879
    6. ')]' → logprob: -11.251603126525879
    7. ':]' → logprob: -11.876603126525879
    8. ':' → logprob: -12.376603126525879
    9. ' ' → logprob: -12.876603126525879
    10. '   ' → logprob: -13.001603126525879

Token 74: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22547504305839539
    2. '-' → logprob: -1.6004750728607178
    3. ' ' → logprob: -9.850475311279297
    4. '  ' → logprob: -12.475475311279297
    5. ')' → logprob: -13.225475311279297
    6. '   ' → logprob: -13.350475311279297
    7. '-i' → logprob: -14.350475311279297
    8. ' ' → logprob: -14.350475311279297
    9. '```' → logprob: -14.975475311279297
    10. ' –' → logprob: -15.600475311279297

Token 75: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.6931529641151428
    2. 'prefix' → logprob: -0.6931529641151428
    3. '(prefix' → logprob: -12.193153381347656
    4. '_prefix' → logprob: -15.068153381347656
    5. ' ' → logprob: -16.318153381347656
    6. 'refix' → logprob: -16.443153381347656
    7. ' ' → logprob: -17.443153381347656
    8. '.prefix' → logprob: -17.443153381347656
    9. '```' → logprob: -17.443153381347656
    10. ' prefixes' → logprob: -17.818153381347656

Token 76: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1809418648481369
    2. '[i' → logprob: -1.8059418201446533
    3. ' i' → logprob: -7.930942058563232
    4. '(i' → logprob: -7.930942058563232
    5. ')i' → logprob: -8.180941581726074
    6. '	i' → logprob: -9.430941581726074
    7. '```' → logprob: -9.680941581726074
    8. '{i' → logprob: -11.180941581726074
    9. ')' → logprob: -11.555941581726074
    10. '_i' → logprob: -11.680941581726074

Token 77: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009140860638581216
    2. ')]' → logprob: -7.625914096832275
    3. '])' → logprob: -8.375913619995117
    4. ')])' → logprob: -8.875913619995117
    5. ' )' → logprob: -10.375913619995117
    6. ']' → logprob: -11.625913619995117
    7. ' for' → logprob: -11.625913619995117
    8. ')
' → logprob: -13.500913619995117
    9. ' ' → logprob: -13.875913619995117
    10. '))' → logprob: -13.875913619995117

Token 78: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018485743552446365
    2. ' for' → logprob: -4.0184855461120605
    3. 'for' → logprob: -8.268486022949219
    4. ' )' → logprob: -9.643486022949219
    5. ' ' → logprob: -11.518486022949219
    6. ')
' → logprob: -13.643486022949219
    7. '   ' → logprob: -14.643486022949219
    8. '))' → logprob: -14.893486022949219
    9. ')]' → logprob: -15.018486022949219
    10. ')`' → logprob: -15.018486022949219

Token 79: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01105159055441618
    2. 'i' → logprob: -4.511051654815674
    3. ' range' → logprob: -13.011051177978516
    4. '	i' → logprob: -13.761051177978516
    5. ' ' → logprob: -15.386051177978516
    6. 'range' → logprob: -15.761051177978516
    7. ' ' → logprob: -17.011051177978516
    8. '```' → logprob: -17.261051177978516
    9. '<|end|>' → logprob: -17.386051177978516
    10. '  ' → logprob: -18.636051177978516

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00041863700607791543
    2. 'in' → logprob: -8.375418663024902
    3. '<|end|>' → logprob: -9.000418663024902
    4. ' range' → logprob: -9.875418663024902
    5. 'range' → logprob: -11.500418663024902
    6. ' ' → logprob: -12.875418663024902
    7. ' i' → logprob: -15.625418663024902
    8. ' xrange' → logprob: -16.000417709350586
    9. '<|end|>' → logprob: -16.125417709350586
    10. ')' → logprob: -17.000417709350586

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.313269704580307
    2. 'range' → logprob: -1.3132697343826294
    3. '	range' → logprob: -12.18826961517334
    4. '(range' → logprob: -13.56326961517334
    5. ' ' → logprob: -13.93826961517334
    6. ' xrange' → logprob: -14.31326961517334
    7. '_range' → logprob: -17.438270568847656
    8. '   ' → logprob: -18.063270568847656
    9. '.range' → logprob: -18.188270568847656
    10. '  ' → logprob: -18.188270568847656

Token 82: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04901038855314255
    2. '(' → logprob: -3.0490102767944336
    3. '(len' → logprob: -8.549010276794434
    4. ' (' → logprob: -8.674010276794434
    5. ' N' → logprob: -10.924010276794434
    6. ' ' → logprob: -11.049010276794434
    7. '(n' → logprob: -11.924010276794434
    8. '(
' → logprob: -12.049010276794434
    9. '   ' → logprob: -12.049010276794434
    10. ')' → logprob: -13.174010276794434

Token 83: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03035629354417324
    2. '-' → logprob: -3.9053564071655273
    3. '-K' → logprob: -4.655356407165527
    4. '   ' → logprob: -9.155356407165527
    5. ' ' → logprob: -9.405356407165527
    6. '-N' → logprob: -9.905356407165527
    7. '+' → logprob: -11.905356407165527
    8. '  ' → logprob: -12.405356407165527
    9. ')' → logprob: -12.780356407165527
    10. '))' → logprob: -13.405356407165527

Token 84: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4288087487220764
    2. ' K' → logprob: -1.0538086891174316
    3. ' ' → logprob: -9.67880916595459
    4. '	K' → logprob: -10.67880916595459
    5. '<|end|>' → logprob: -12.05380916595459
    6. '   ' → logprob: -12.17880916595459
    7. '+' → logprob: -12.80380916595459
    8. '    ' → logprob: -13.17880916595459
    9. ' (' → logprob: -13.67880916595459
    10. ')' → logprob: -13.92880916595459

Token 85: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31945866346359253
    2. ' +' → logprob: -1.4444587230682373
    3. '))' → logprob: -3.3194587230682373
    4. ' ))' → logprob: -6.944458484649658
    5. ')' → logprob: -7.944458484649658
    6. ' )' → logprob: -10.319458961486816
    7. ' ' → logprob: -10.444458961486816
    8. '1' → logprob: -11.194458961486816
    9. ')))' → logprob: -12.944458961486816
    10. '```' → logprob: -13.319458961486816

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007608278188854456
    2. ' ' → logprob: -4.882608413696289
    3. ')' → logprob: -14.132608413696289
    4. '   ' → logprob: -14.820108413696289
    5. '  ' → logprob: -15.445108413696289
    6. '```' → logprob: -15.445108413696289
    7. ' ' → logprob: -16.50760841369629
    8. ' )' → logprob: -16.63260841369629
    9. '１' → logprob: -16.82010841369629
    10. '<|end|>' → logprob: -17.07010841369629

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. ')' → logprob: -15.625041007995605
    4. '   ' → logprob: -16.62504005432129
    5. '１' → logprob: -17.12504005432129
    6. '0' → logprob: -17.18754005432129
    7. '```' → logprob: -17.43754005432129
    8. '  ' → logprob: -17.81254005432129
    9. '2' → logprob: -17.81254005432129
    10. '{' → logprob: -18.43754005432129

Token 88: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005238140933215618
    2. '))' → logprob: -5.255238056182861
    3. ')
' → logprob: -13.38023853302002
    4. ')))' → logprob: -13.63023853302002
    5. ' )' → logprob: -13.88023853302002
    6. ')}' → logprob: -15.25523853302002
    7. ')")' → logprob: -16.630237579345703
    8. ')`' → logprob: -16.755237579345703
    9. '})' → logprob: -17.380237579345703
    10. ')**' → logprob: -17.380237579345703

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41708123683929443
    2. '<|end|>' → logprob: -1.6670812368392944
    3. '
' → logprob: -1.9170812368392944
    4. ')' → logprob: -5.667081356048584
    5. '    
' → logprob: -7.667081356048584
    6. '```' → logprob: -7.792081356048584
    7. '\n' → logprob: -8.042080879211426
    8. '<|end|>' → logprob: -8.167080879211426
    9. 'print' → logprob: -9.917080879211426
    10. '  
' → logprob: -10.292080879211426

Token 90: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030088428407907486
    2. 'print' (adapté à ' print') → logprob: -3.530088424682617
    3. '
' → logprob: -8.655088424682617
    4. ' print' → logprob: -9.155088424682617
    5. '<|end|>' → logprob: -10.280088424682617
    6. '    
' → logprob: -11.155088424682617
    7. '```' → logprob: -12.405088424682617
    8. '	print' → logprob: -13.155088424682617
    9. 'return' → logprob: -13.405088424682617
    10. '       ' → logprob: -15.280088424682617

Token 91: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.06198359653353691
    2. '(' → logprob: -2.811983585357666
    3. '(round' → logprob: -12.186984062194824
    4. '(f' → logprob: -12.186984062194824
    5. 'max' → logprob: -13.936984062194824
    6. ' (' → logprob: -13.936984062194824
    7. '("("' → logprob: -14.436984062194824
    8. '((' → logprob: -14.561984062194824
    9. '('' → logprob: -14.561984062194824
    10. '(
' → logprob: -14.561984062194824

Token 92: '_E' (ID: 6584)
  Prédit: '_E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_E' → logprob: -1.7432603272027336e-06
    2. ' _' → logprob: -14.375001907348633
    3. ')_' → logprob: -14.750001907348633
    4. ')' → logprob: -15.250001907348633
    5. '_EOL' → logprob: -16.125001907348633
    6. '```' → logprob: -16.750001907348633
    7. '\E' → logprob: -16.875001907348633
    8. '_' → logprob: -17.000001907348633
    9. 'E' → logprob: -17.000001907348633
    10. '(E' → logprob: -17.250001907348633

Token 93: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ' )' → logprob: -12.125008583068848
    3. ')
' → logprob: -13.500008583068848
    4. '))' → logprob: -13.875008583068848
    5. ')`' → logprob: -14.875008583068848
    6. ')}' → logprob: -15.625008583068848
    7. '`)' → logprob: -16.250009536743164
    8. '   ' → logprob: -17.250009536743164
    9. '')' → logprob: -17.500009536743164
    10. ')**' → logprob: -17.625009536743164

Token 94: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011057134717702866
    2. '__' → logprob: -4.511056900024414
    3. ' ' → logprob: -12.136056900024414
    4. ' ' → logprob: -12.636056900024414
    5. 'name' → logprob: -15.386056900024414
    6. '  ' → logprob: -16.136056900024414
    7. '_name' → logprob: -16.261056900024414
    8. '_' → logprob: -16.886056900024414
    9. '___' → logprob: -16.886056900024414
    10. '/__' → logprob: -17.011056900024414

Token 96: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000614624354057014
    2. '==' → logprob: -8.625614166259766
    3. '__.__' → logprob: -8.625614166259766
    4. ' __' → logprob: -9.000614166259766
    5. ' ==' → logprob: -9.875614166259766
    6. '_' → logprob: -10.375614166259766
    7. '__.' → logprob: -10.500614166259766
    8. '.__' → logprob: -12.375614166259766
    9. '___' → logprob: -12.375614166259766
    10. '__["' → logprob: -12.625614166259766

Token 97: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007066874299198389
    2. '__.__' → logprob: -5.00706672668457
    3. '__.' → logprob: -8.75706672668457
    4. '.__' → logprob: -9.63206672668457
    5. '==' → logprob: -10.00706672668457
    6. '_' → logprob: -10.50706672668457
    7. '___' → logprob: -11.00706672668457
    8. '__["' → logprob: -11.50706672668457
    9. '____' → logprob: -11.63206672668457
    10. ' ==' → logprob: -12.25706672668457

Token 98: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17674241960048676
    2. '__' → logprob: -2.4267423152923584
    3. '==' → logprob: -2.6767423152923584
    4. '=="' → logprob: -5.9267425537109375
    5. '=='' → logprob: -7.8017425537109375
    6. '.__' → logprob: -7.8017425537109375
    7. '_' → logprob: -7.9267425537109375
    8. '.' → logprob: -8.426742553710938
    9. '__.__' → logprob: -8.801742553710938
    10. '[' → logprob: -9.051742553710938

Token 99: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47495153546333313
    2. '"' → logprob: -0.9749515056610107
    3. ' "' → logprob: -8.47495174407959
    4. '__' → logprob: -8.47495174407959
    5. ' '' → logprob: -8.47495174407959
    6. ' "__' → logprob: -9.09995174407959
    7. ' '__' → logprob: -9.59995174407959
    8. '"user' → logprob: -10.47495174407959
    9. ' __' → logprob: -11.47495174407959
    10. ''user' → logprob: -11.72495174407959

Token 100: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006825724616646767
    2. 'py' → logprob: -5.631825923919678
    3. 'python' → logprob: -7.256825923919678
    4. '__' → logprob: -7.381825923919678
    5. 'code' → logprob: -8.00682544708252
    6. 'name' → logprob: -8.25682544708252
    7. '__":
' → logprob: -8.75682544708252
    8. ' "__' → logprob: -9.50682544708252
    9. '"' → logprob: -9.88182544708252
    10. 'html' → logprob: -9.88182544708252

Token 101: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.14691682159900665
    2. '__' → logprob: -2.0219168663024902
    3. '__':
' → logprob: -5.64691686630249
    4. '__:' → logprob: -7.89691686630249
    5. '():
' → logprob: -8.646916389465332
    6. '__
' → logprob: -10.021916389465332
    7. '__["' → logprob: -10.396916389465332
    8. '__()
' → logprob: -10.896916389465332
    9. ':' → logprob: -11.146916389465332
    10. '__.' → logprob: -11.896916389465332

Token 102: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.002942401682958007
    2. '   ' → logprob: -6.6279425621032715
    3. 'main' → logprob: -6.7529425621032715
    4. '	main' → logprob: -8.127942085266113
    5. '    
' → logprob: -9.377942085266113
    6. ' 
' → logprob: -11.377942085266113
    7. '_main' → logprob: -11.502942085266113
    8. ' run' → logprob: -11.877942085266113
    9. '    ' → logprob: -12.002942085266113
    10. '(main' → logprob: -12.252942085266113

Token 103: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0067154900170862675
    2. ' main' → logprob: -5.006715297698975
    3. '	main' → logprob: -16.256715774536133
    4. '   ' → logprob: -19.381715774536133
    5. 'ma' → logprob: -20.631715774536133
    6. '_main' → logprob: -20.756715774536133
    7. '.main' → logprob: -21.131715774536133
    8. 'maine' → logprob: -21.256715774536133
    9. 'mai' → logprob: -22.006715774536133
    10. 'Main' → logprob: -22.256715774536133

Token 104: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15045300126075745
    2. '(' → logprob: -2.9004530906677246
    3. '<|end|>' → logprob: -3.1504530906677246
    4. '\n' → logprob: -3.5254530906677246
    5. ')' → logprob: -5.525453090667725
    6. '
' → logprob: -5.650453090667725
    7. '()
' → logprob: -6.650453090667725
    8. '(
' → logprob: -6.900453090667725
    9. '```' → logprob: -7.025453090667725
    10. '\' → logprob: -7.150453090667725


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 44.12%
Précision adaptée (1ère position): 45.10%
Précision (top 10): 81.37%
================================================================================
