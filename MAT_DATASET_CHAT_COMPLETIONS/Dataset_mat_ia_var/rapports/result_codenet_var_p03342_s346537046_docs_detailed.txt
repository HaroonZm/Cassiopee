================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def count_subarrays_with_unique_sum_xor():
    """
    Reads an integer n from input and a list A of n integers.
    Computes the total number of contiguous subarrays (segments [l, r))
    where the sum of the elements is equal to their XOR.
    This function uses the two-pointer (sliding window) technique for an efficient solution.
    Prints the final answer.
    """
    n = int(input())
    A = list(map(int, input().split()))
    # ans stores the final count of valid subarrays
    ans = 0
    # r is the right endpoint of the current window (exclusive)
    r = 0
    # nowsum is the current sum of the window [l, r)
    nowsum = 0
    # nowxsum is the current XOR of the window [l, r)
    nowxsum = 0

    for l in range(n):
        # Expand the right boundary (r) of the window as much as possible
        # while the condition is satisfied: sum == xor
        while r < n and (nowsum + A[r] == (nowxsum ^ A[r])):
            nowsum += A[r]        # Add A[r] to current sum
            nowxsum ^= A[r]       # XOR A[r] to current xor
            r += 1                # Move right boundary to the right

        # The window [l, r) is the largest for this l satisfying the condition
        ans += r - l              # Count all valid subarrays starting at l

        # Shrink the window from the left by removing A[l]
        nowsum -= A[l]            # Remove A[l] from sum
        nowxsum ^= A[l]           # Remove A[l] from xor

    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' count' (ID: 3605)
  → Token d'amorce (pas de prédiction)

Token 2: '_sub' (ID: 11572)
  → Token d'amorce (pas de prédiction)

Token 3: 'arrays' (ID: 158630)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7740311622619629
    2. '_s' → logprob: -0.7740311622619629
    3. 's' → logprob: -2.649031162261963
    4. '_sequences' → logprob: -5.899031162261963
    5. 'string' → logprob: -7.149031162261963
    6. 'strings' → logprob: -7.399031162261963
    7. '```' → logprob: -7.649031162261963
    8. '_str' → logprob: -7.649031162261963
    9. 'sequence' → logprob: -8.399030685424805
    10. '_string' → logprob: -8.649030685424805

Token 4: '_with' (ID: 14161)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020196957513689995
    2. '_' → logprob: -4.020196914672852
    3. '```' → logprob: -7.020196914672852
    4. '(_' → logprob: -8.520196914672852
    5. '(_:' → logprob: -8.645196914672852
    6. '_count' → logprob: -9.395196914672852
    7. '(:' → logprob: -9.645196914672852
    8. '_:' → logprob: -9.645196914672852
    9. '**' → logprob: -9.770196914672852
    10. '_with' → logprob: -9.895196914672852

Token 5: '_unique' (ID: 51840)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.261383593082428
    2. '_sum' → logprob: -1.6363835334777832
    3. '_at' → logprob: -4.511383533477783
    4. '_k' → logprob: -5.136383533477783
    5. '_max' → logprob: -5.136383533477783
    6. '_g' → logprob: -5.761383533477783
    7. '_a' → logprob: -7.011383533477783
    8. ' ' → logprob: -7.011383533477783
    9. '_unique' → logprob: -7.136383533477783
    10. '_given' → logprob: -7.136383533477783

Token 6: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014511697925627232
    2. 's' → logprob: -5.014511585235596
    3. '(' → logprob: -5.514511585235596
    4. '_s' → logprob: -6.139511585235596
    5. '```' → logprob: -6.889511585235596
    6. '_count' → logprob: -9.389512062072754
    7. '_(' → logprob: -10.014512062072754
    8. '(_' → logprob: -10.014512062072754
    9. '_counts' → logprob: -10.389512062072754
    10. '_:' → logprob: -10.389512062072754

Token 7: '_x' (ID: 7054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039540864527225494
    2. '_' → logprob: -5.62895393371582
    3. '(:' → logprob: -9.12895393371582
    4. '(_:' → logprob: -9.37895393371582
    5. '(_' → logprob: -10.50395393371582
    6. '```' → logprob: -10.75395393371582
    7. '_:' → logprob: -11.00395393371582
    8. ':' → logprob: -11.25395393371582
    9. '():' → logprob: -11.50395393371582
    10. '('' → logprob: -11.50395393371582

Token 8: 'or' (ID: 267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016605151817202568
    2. '(:' → logprob: -5.016605377197266
    3. '(_:' → logprob: -5.766605377197266
    4. '_' → logprob: -6.141605377197266
    5. '```' → logprob: -6.641605377197266
    6. '():' → logprob: -6.891605377197266
    7. '(_' → logprob: -7.141605377197266
    8. '_:' → logprob: -7.766605377197266
    9. '(":' → logprob: -8.391605377197266
    10. ':' → logprob: -8.516605377197266

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004636368714272976
    2. '(:' → logprob: -5.754636287689209
    3. '():' → logprob: -7.004636287689209
    4. '(_:' → logprob: -8.879636764526367
    5. '_' → logprob: -9.004636764526367
    6. ':' → logprob: -9.379636764526367
    7. '```' → logprob: -10.004636764526367
    8. '_:' → logprob: -10.629636764526367
    9. '(":' → logprob: -11.004636764526367
    10. '(_' → logprob: -11.004636764526367

Token 10: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7787629961967468
    2. ':' → logprob: -1.4037630558013916
    3. '():' → logprob: -1.4037630558013916
    4. '(:' → logprob: -3.6537630558013916
    5. '```' → logprob: -4.4037628173828125
    6. '   ' → logprob: -4.9037628173828125
    7. '(":' → logprob: -7.2787628173828125
    8. '\' → logprob: -7.5287628173828125
    9. '[:]' → logprob: -8.028762817382812
    10. '_' → logprob: -8.028762817382812

Token 11: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6019952297210693
    2. '```' → logprob: -1.7269952297210693
    3. '(' → logprob: -1.8519952297210693
    4. '\' → logprob: -2.1019952297210693
    5. ' ' → logprob: -2.3519952297210693
    6. '    ' → logprob: -2.7269952297210693
    7. ''' → logprob: -3.8519952297210693
    8. '\n' → logprob: -3.9769952297210693
    9. ' 
' → logprob: -4.351995468139648
    10. '_' → logprob: -4.351995468139648

Token 12: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.24580805003643036
    2. 'Calculate' → logprob: -2.1208081245422363
    3. 'Count' → logprob: -2.9958081245422363
    4. ''''' → logprob: -4.870808124542236
    5. 'Find' → logprob: -4.995808124542236
    6. '   ' → logprob: -5.245808124542236
    7. ' Count' → logprob: -5.495808124542236
    8. 'Calcul' → logprob: -5.870808124542236
    9. 'A' → logprob: -5.995808124542236
    10. ' Calculate' → logprob: -6.370808124542236

Token 13: ' Reads' (ID: 88839)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Count' → logprob: -0.3451720178127289
    2. 'Calculate' → logprob: -1.9701720476150513
    3. 'Counts' → logprob: -2.8451719284057617
    4. 'Returns' → logprob: -3.7201719284057617
    5. '"""' → logprob: -3.8451719284057617
    6. 'Calcul' → logprob: -4.095171928405762
    7. '   ' → logprob: -4.845171928405762
    8. 'Return' → logprob: -5.345171928405762
    9. 'Find' → logprob: -5.470171928405762
    10. 'C' → logprob: -5.595171928405762

Token 14: ' an' (ID: 448)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0297237634658813
    2. ' the' → logprob: -1.6547237634658813
    3. 'input' → logprob: -1.7797237634658813
    4. ' lines' → logprob: -2.529723644256592
    5. '   ' → logprob: -2.654723644256592
    6. ' a' → logprob: -3.529723644256592
    7. 'the' → logprob: -3.904723644256592
    8. 's' → logprob: -4.404723644256592
    9. ' data' → logprob: -4.779723644256592
    10. ' code' → logprob: -4.779723644256592

Token 15: ' integer' (ID: 16336)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.3956044614315033
    2. 'array' → logprob: -1.5206044912338257
    3. ' integer' → logprob: -2.645604372024536
    4. ' input' → logprob: -4.020604610443115
    5. 'integer' → logprob: -4.145604610443115
    6. 'input' → logprob: -6.270604610443115
    7. '   ' → logprob: -7.770604610443115
    8. ' ' → logprob: -8.270604133605957
    9. 'rray' → logprob: -8.645604133605957
    10. 'int' → logprob: -9.020604133605957

Token 16: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1551010608673096
    2. ' n' → logprob: -1.1551010608673096
    3. ' ' → logprob: -1.7801010608673096
    4. ',' → logprob: -3.1551010608673096
    5. ' from' → logprob: -3.1551010608673096
    6. '   ' → logprob: -3.2801010608673096
    7. ' and' → logprob: -4.1551008224487305
    8. 's' → logprob: -4.6551008224487305
    9. ' input' → logprob: -4.9051008224487305
    10. 'from' → logprob: -5.0301008224487305

Token 17: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7569399476051331
    2. '   ' → logprob: -0.8819399476051331
    3. ' ,' → logprob: -3.1319398880004883
    4. ' ' → logprob: -3.8819398880004883
    5. ' and' → logprob: -4.131939888000488
    6. '    ' → logprob: -4.256939888000488
    7. '  ' → logprob: -4.756939888000488
    8. '```' → logprob: -5.381939888000488
    9. ')' → logprob: -6.131939888000488
    10. ' )' → logprob: -7.381939888000488

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.027930157259106636
    2. 'input' → logprob: -3.77793025970459
    3. ' the' → logprob: -5.40293025970459
    4. 'the' → logprob: -9.52793025970459
    5. ' user' → logprob: -10.27793025970459
    6. ' a' → logprob: -10.65293025970459
    7. ' stdin' → logprob: -10.90293025970459
    8. 'stdin' → logprob: -11.27793025970459
    9. ' standard' → logprob: -13.02793025970459
    10. 'a' → logprob: -13.90293025970459

Token 19: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.712210476398468
    2. '\n' → logprob: -1.0872104167938232
    3. ',' → logprob: -2.2122104167938232
    4. '```' → logprob: -4.337210655212402
    5. ')' → logprob: -4.587210655212402
    6. '\' → logprob: -4.837210655212402
    7. '
' → logprob: -4.837210655212402
    8. 'newline' → logprob: -5.337210655212402
    9. 'n' → logprob: -5.462210655212402
    10. ' and' → logprob: -5.962210655212402

Token 20: ' a' (ID: 261)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.2764939069747925
    2. ' calculates' → logprob: -1.9014939069747925
    3. ' finds' → logprob: -2.776494026184082
    4. ' returns' → logprob: -4.776494026184082
    5. 'counts' → logprob: -4.776494026184082
    6. '   ' → logprob: -5.776494026184082
    7. ' computes' → logprob: -6.026494026184082
    8. ' processes' → logprob: -6.276494026184082
    9. ' then' → logprob: -6.526494026184082
    10. ' reads' → logprob: -6.776494026184082

Token 21: ' list' (ID: 1562)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.5095770359039307
    2. 'n' → logprob: -1.1345770359039307
    3. ' list' → logprob: -3.5095770359039307
    4. ' ' → logprob: -3.8845770359039307
    5. ' n' → logprob: -4.134576797485352
    6. ' sub' → logprob: -5.384576797485352
    7. ' sequence' → logprob: -6.134576797485352
    8. ' array' → logprob: -6.634576797485352
    9. 'r' → logprob: -7.509576797485352
    10. 'array' → logprob: -7.759576797485352

Token 22: ' A' (ID: 355)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.019335122779011726
    2. '[' → logprob: -5.2693352699279785
    3. ',' → logprob: -5.6443352699279785
    4. '[int' → logprob: -6.0193352699279785
    5. ')' → logprob: -6.8943352699279785
    6. '<|end|>' → logprob: -7.2693352699279785
    7. 'of' → logprob: -7.3943352699279785
    8. '[]' → logprob: -7.3943352699279785
    9. ' ' → logprob: -7.5193352699279785
    10. '_' → logprob: -7.5193352699279785

Token 23: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35267648100852966
    2. ',' → logprob: -1.977676510810852
    3. '<|end|>' → logprob: -3.1026763916015625
    4. ' of' → logprob: -3.4776763916015625
    5. '.' → logprob: -3.7276763916015625
    6. '<|end|>' → logprob: -3.9776763916015625
    7. ')' → logprob: -4.3526763916015625
    8. '```' → logprob: -5.3526763916015625
    9. '[' → logprob: -5.9776763916015625
    10. ',
' → logprob: -5.9776763916015625

Token 24: ' n' (ID: 297)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.001709328847937286
    2. 'inte' → logprob: -6.751709461212158
    3. 'n' → logprob: -8.876708984375
    4. ' values' → logprob: -9.376708984375
    5. ' n' → logprob: -9.876708984375
    6. 'int' → logprob: -9.876708984375
    7. ' numbers' → logprob: -10.126708984375
    8. '<|end|>' → logprob: -10.376708984375
    9. ' int' → logprob: -10.751708984375
    10. ' ' → logprob: -11.001708984375

Token 25: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.032125022262334824
    2. ' elements' → logprob: -3.5321249961853027
    3. ')' → logprob: -7.282124996185303
    4. 'elements' → logprob: -7.657124996185303
    5. 'inte' → logprob: -7.782124996185303
    6. '_elements' → logprob: -7.907124996185303
    7. '<|end|>' → logprob: -9.282125473022461
    8. ' ' → logprob: -9.532125473022461
    9. ' numbers' → logprob: -10.032125473022461
    10. '```' → logprob: -10.157125473022461

Token 26: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14592522382736206
    2. ',' → logprob: -2.645925283432007
    3. '
' → logprob: -3.770925283432007
    4. '\n' → logprob: -4.520925045013428
    5. '    
' → logprob: -4.645925045013428
    6. '.' → logprob: -5.020925045013428
    7. '```' → logprob: -5.395925045013428
    8. ')' → logprob: -5.770925045013428
    9. ',
' → logprob: -5.895925045013428
    10. '\' → logprob: -6.895925045013428

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03608233109116554
    2. '    
' → logprob: -3.9110822677612305
    3. '
' → logprob: -4.7860822677612305
    4. ' 
' → logprob: -6.1610822677612305
    5. '    ' → logprob: -6.9110822677612305
    6. '   
' → logprob: -7.0360822677612305
    7. '     
' → logprob: -7.0360822677612305
    8. '  
' → logprob: -7.4110822677612305
    9. '\n' → logprob: -7.7860822677612305
    10. 'def' → logprob: -8.03608226776123

Token 28: ' Computes' (ID: 165922)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013425381854176521
    2. '\n' → logprob: -5.263425350189209
    3. '    
' → logprob: -5.263425350189209
    4. '
' → logprob: -7.013425350189209
    5. '"""' → logprob: -7.013425350189209
    6. '  
' → logprob: -7.763425350189209
    7. '    ' → logprob: -8.888425827026367
    8. '   
' → logprob: -9.263425827026367
    9. ' 
' → logprob: -9.263425827026367
    10. '```' → logprob: -9.888425827026367

Token 29: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.021268386393785477
    2. 'the' → logprob: -3.896268367767334
    3. '   ' → logprob: -7.521268367767334
    4. ' ' → logprob: -9.771268844604492
    5. ' number' → logprob: -9.896268844604492
    6. ' and' → logprob: -10.271268844604492
    7. '  ' → logprob: -11.271268844604492
    8. '    ' → logprob: -11.396268844604492
    9. 'number' → logprob: -12.521268844604492
    10. 'and' → logprob: -12.896268844604492

Token 30: ' total' (ID: 3609)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.008101854473352432
    2. 'number' → logprob: -5.633101940155029
    3. ' ' → logprob: -6.133101940155029
    4. ' total' → logprob: -7.008101940155029
    5. ' length' → logprob: -7.758101940155029
    6. ' maximum' → logprob: -7.883101940155029
    7. ' count' → logprob: -7.883101940155029
    8. '   ' → logprob: -9.508101463317871
    9. ' longest' → logprob: -9.758101463317871
    10. ' sum' → logprob: -11.008101463317871

Token 31: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.005426085088402033
    2. 'number' → logprob: -5.380425930023193
    3. '_' → logprob: -7.505425930023193
    4. ' _' → logprob: -9.255426406860352
    5. '_number' → logprob: -10.005426406860352
    6. ' ' → logprob: -10.005426406860352
    7. ' count' → logprob: -10.755426406860352
    8. '  ' → logprob: -11.505426406860352
    9. ' amount' → logprob: -11.505426406860352
    10. '<|end|>' → logprob: -12.005426406860352

Token 32: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07754949480295181
    2. ' of' → logprob: -2.827549457550049
    3. '_of' → logprob: -5.452549457550049
    4. 'of' → logprob: -5.702549457550049
    5. 's' → logprob: -6.077549457550049
    6. ''' → logprob: -6.327549457550049
    7. ' ' → logprob: -6.702549457550049
    8. '"' → logprob: -7.702549457550049
    9. 'o' → logprob: -7.952549457550049
    10. ' _' → logprob: -7.952549457550049

Token 33: ' contiguous' (ID: 130997)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.7873079776763916
    2. '_' → logprob: -1.2873079776763916
    3. ' ' → logprob: -1.5373079776763916
    4. '_sub' → logprob: -3.6623079776763916
    5. 'sub' → logprob: -4.2873077392578125
    6. ' _' → logprob: -5.2873077392578125
    7. ' unique' → logprob: -5.9123077392578125
    8. ''' → logprob: -6.1623077392578125
    9. '  ' → logprob: -6.6623077392578125
    10. '"' → logprob: -7.5373077392578125

Token 34: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.4779641330242157
    2. '_' → logprob: -1.227964162826538
    3. '_sub' → logprob: -2.852964162826538
    4. 'sub' → logprob: -4.352963924407959
    5. ' ' → logprob: -5.102963924407959
    6. ' subse' → logprob: -5.602963924407959
    7. ' _' → logprob: -6.227963924407959
    8. ' sequences' → logprob: -6.477963924407959
    9. ' segments' → logprob: -6.852963924407959
    10. ' space' → logprob: -7.352963924407959

Token 35: 'arrays' (ID: 158630)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4129769504070282
    2. 'arrays' → logprob: -1.1629769802093506
    3. '_a' → logprob: -4.7879767417907715
    4. '_arrays' → logprob: -4.9129767417907715
    5. 'a' → logprob: -5.1629767417907715
    6. 'arr' → logprob: -6.1629767417907715
    7. 'array' → logprob: -6.5379767417907715
    8. ' arrays' → logprob: -8.78797721862793
    9. '_arr' → logprob: -8.91297721862793
    10. 'ar' → logprob: -8.91297721862793

Token 36: ' (' (ID: 350)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.1209570169448853
    2. '   ' → logprob: -1.2459570169448853
    3. '_' → logprob: -1.9959570169448853
    4. ' whose' → logprob: -2.2459568977355957
    5. ' ' → logprob: -2.9959568977355957
    6. '    ' → logprob: -3.1209568977355957
    7. ' _' → logprob: -3.6209568977355957
    8. ' that' → logprob: -4.745956897735596
    9. '<|end|>' → logprob: -6.120956897735596
    10. ' `' → logprob: -6.120956897735596

Token 37: 'segments' (ID: 110314)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.13541647791862488
    2. ')' → logprob: -2.1354165077209473
    3. ' with' → logprob: -5.510416507720947
    4. ' whose' → logprob: -6.510416507720947
    5. '   ' → logprob: -6.760416507720947
    6. ' ' → logprob: -6.760416507720947
    7. '    ' → logprob: -8.635416030883789
    8. ' where' → logprob: -8.760416030883789
    9. 'with' → logprob: -10.010416030883789
    10. 's' → logprob: -10.010416030883789

Token 38: ' [' (ID: 723)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.3262745440006256
    2. ')' → logprob: -1.3262745141983032
    3. ' whose' → logprob: -5.076274394989014
    4. ' with' → logprob: -6.451274394989014
    5. ' of' → logprob: -6.576274394989014
    6. ' ' → logprob: -6.951274394989014
    7. ' that' → logprob: -7.326274394989014
    8. 's' → logprob: -7.326274394989014
    9. '_' → logprob: -7.701274394989014
    10. '   ' → logprob: -7.951274394989014

Token 39: 'l' (ID: 75)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18809853494167328
    2. ')' → logprob: -2.688098430633545
    3. 'A' → logprob: -2.688098430633545
    4. 'l' → logprob: -3.563098430633545
    5. ' i' → logprob: -5.938098430633545
    6. 'a' → logprob: -6.688098430633545
    7. 'the' → logprob: -6.938098430633545
    8. ' A' → logprob: -7.563098430633545
    9. '0' → logprob: -8.063098907470703
    10. 'start' → logprob: -8.563098907470703

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047096991911530495
    2. ':' → logprob: -6.254709720611572
    3. ' ,' → logprob: -6.504709720611572
    4. ',r' → logprob: -7.504709720611572
    5. ',l' → logprob: -9.254709243774414
    6. ']' → logprob: -9.504709243774414
    7. ' :' → logprob: -9.629709243774414
    8. ',i' → logprob: -10.004709243774414
    9. '=' → logprob: -10.004709243774414
    10. ',
' → logprob: -10.379709243774414

Token 41: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004636249504983425
    2. ' r' → logprob: -5.379636287689209
    3. 'l' → logprob: -12.12963581085205
    4. ' ' → logprob: -12.50463581085205
    5. '   ' → logprob: -13.62963581085205
    6. ' ' → logprob: -13.75463581085205
    7. '	r' → logprob: -14.00463581085205
    8. '```' → logprob: -14.25463581085205
    9. ',r' → logprob: -14.37963581085205
    10. ',' → logprob: -14.50463581085205

Token 42: '))
' (ID: 2210)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.040274642407894135
    2. ']' → logprob: -3.5402746200561523
    3. ')' → logprob: -4.665274620056152
    4. '])
' → logprob: -8.290274620056152
    5. '```' → logprob: -8.415274620056152
    6. ' ])' → logprob: -9.415274620056152
    7. ' ' → logprob: -9.790274620056152
    8. '],' → logprob: -9.915274620056152
    9. 's' → logprob: -10.165274620056152
    10. ']])' → logprob: -10.165274620056152

Token 43: '   ' (ID: 271)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.8907238245010376
    2. '_' → logprob: -1.3907238245010376
    3. '   ' → logprob: -1.6407238245010376
    4. ' that' → logprob: -3.140723705291748
    5. ' ' → logprob: -3.515723705291748
    6. ')' → logprob: -3.640723705291748
    7. ' _' → logprob: -4.015723705291748
    8. '```' → logprob: -4.890723705291748
    9. 'with' → logprob: -5.390723705291748
    10. ' of' → logprob: -5.390723705291748

Token 44: ' where' (ID: 1919)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3495931625366211
    2. ' with' → logprob: -1.724593162536621
    3. '   ' → logprob: -3.349593162536621
    4. '_' → logprob: -3.349593162536621
    5. ' that' → logprob: -4.224593162536621
    6. ')' → logprob: -5.099593162536621
    7. '    ' → logprob: -5.224593162536621
    8. ' )' → logprob: -5.349593162536621
    9. ',' → logprob: -5.974593162536621
    10. ' _' → logprob: -6.724593162536621

Token 45: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.05135057121515274
    2. 'the' → logprob: -3.6763505935668945
    3. ' all' → logprob: -3.9263505935668945
    4. ' A' → logprob: -6.8013505935668945
    5. ' each' → logprob: -6.8013505935668945
    6. '   ' → logprob: -7.1763505935668945
    7. 'all' → logprob: -7.5513505935668945
    8. 'A' → logprob: -8.051350593566895
    9. ' every' → logprob: -8.051350593566895
    10. ' there' → logprob: -8.676350593566895

Token 46: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.276999831199646
    2. 'sum' → logprob: -3.0269999504089355
    3. ' xor' → logprob: -3.2769999504089355
    4. ' cumulative' → logprob: -3.4019999504089355
    5. ' total' → logprob: -4.0269999504089355
    6. 's' → logprob: -4.2769999504089355
    7. ' length' → logprob: -4.2769999504089355
    8. ' bit' → logprob: -4.4019999504089355
    9. ' XOR' → logprob: -4.5269999504089355
    10. 'xor' → logprob: -4.7769999504089355

Token 47: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10722285509109497
    2. ' of' → logprob: -2.60722279548645
    3. ' _' → logprob: -3.73222279548645
    4. ' =' → logprob: -7.357223033905029
    5. ' ' → logprob: -7.482223033905029
    6. 's' → logprob: -7.607223033905029
    7. ')' → logprob: -7.607223033905029
    8. '(' → logprob: -8.107222557067871
    9. ' is' → logprob: -8.357222557067871
    10. '   ' → logprob: -8.607222557067871

Token 48: ' the' (ID: 290)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7559147477149963
    2. ' A' → logprob: -1.2559146881103516
    3. ' the' → logprob: -1.7559146881103516
    4. 'the' → logprob: -3.1309146881103516
    5. ' elements' → logprob: -3.8809146881103516
    6. 'elements' → logprob: -5.380914688110352
    7. ')' → logprob: -6.380914688110352
    8. ' all' → logprob: -6.755914688110352
    9. 's' → logprob: -8.130914688110352
    10. '```' → logprob: -9.005914688110352

Token 49: ' elements' (ID: 8632)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.8484330177307129
    2. 'elements' → logprob: -1.348433017730713
    3. ' elements' → logprob: -1.723433017730713
    4. ' sub' → logprob: -2.598433017730713
    5. 'A' → logprob: -3.723433017730713
    6. 'segment' → logprob: -4.473433017730713
    7. ')' → logprob: -4.848433017730713
    8. 'array' → logprob: -4.848433017730713
    9. ' segment' → logprob: -5.973433017730713
    10. 'current' → logprob: -6.723433017730713

Token 50: ' is' (ID: 382)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.26029372215271
    2. ' is' → logprob: -1.26029372215271
    3. ' from' → logprob: -2.51029372215271
    4. ')' → logprob: -2.88529372215271
    5. 'from' → logprob: -2.88529372215271
    6. '   ' → logprob: -3.01029372215271
    7. ' of' → logprob: -3.01029372215271
    8. 'A' → logprob: -3.76029372215271
    9. ' in' → logprob: -4.010293960571289
    10. ' ^=' → logprob: -4.010293960571289

Token 51: ' equal' (ID: 12629)
  Prédit: ' equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.031076529994606972
    2. 'equal' → logprob: -3.531076431274414
    3. ' ' → logprob: -7.406076431274414
    4. ' unique' → logprob: -7.906076431274414
    5. ' exactly' → logprob: -8.906076431274414
    6. ' the' → logprob: -10.281076431274414
    7. 'unique' → logprob: -10.656076431274414
    8. ' not' → logprob: -10.906076431274414
    9. ' equals' → logprob: -11.031076431274414
    10. '```' → logprob: -11.406076431274414

Token 52: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.42898324131965637
    2. 'to' → logprob: -1.053983211517334
    3. '  ' → logprob: -9.428983688354492
    4. '<|end|>' → logprob: -9.803983688354492
    5. '_to' → logprob: -10.553983688354492
    6. ' ' → logprob: -10.553983688354492
    7. '<|end|>' → logprob: -10.553983688354492
    8. '   ' → logprob: -11.178983688354492
    9. '	to' → logprob: -11.178983688354492
    10. '_' → logprob: -11.303983688354492

Token 53: ' their' (ID: 1043)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13079890608787537
    2. 'the' → logprob: -2.755798816680908
    3. ' their' → logprob: -2.880798816680908
    4. 'their' → logprob: -5.880798816680908
    5. ' ' → logprob: -9.380799293518066
    6. ' xor' → logprob: -11.630799293518066
    7. 'xor' → logprob: -11.630799293518066
    8. ' a' → logprob: -12.005799293518066
    9. ' XOR' → logprob: -12.005799293518066
    10. '```' → logprob: -12.005799293518066

Token 54: ' XOR' (ID: 147209)
  Prédit: ' xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xor' → logprob: -0.12307971715927124
    2. ' XOR' → logprob: -2.623079776763916
    3. 'xor' → logprob: -3.248079776763916
    4. ' ' → logprob: -5.748079776763916
    5. ' bit' → logprob: -7.248079776763916
    6. ' cumulative' → logprob: -9.248079299926758
    7. ' x' → logprob: -9.623079299926758
    8. 's' → logprob: -10.248079299926758
    9. ' unique' → logprob: -10.373079299926758
    10. ' ^' → logprob: -10.373079299926758

Token 55: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6981003880500793
    2. ':' → logprob: -1.1981003284454346
    3. '(' → logprob: -2.4481003284454346
    4. '```' → logprob: -3.5731003284454346
    5. '.' → logprob: -3.8231003284454346
    6. '\' → logprob: -4.198100566864014
    7. '   ' → logprob: -4.948100566864014
    8. '():' → logprob: -5.073100566864014
    9. '_:' → logprob: -5.323100566864014
    10. '\n' → logprob: -5.448100566864014

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07879923284053802
    2. '\n' → logprob: -3.203799247741699
    3. '\' → logprob: -4.578799247741699
    4. '    ' → logprob: -5.328799247741699
    5. '"' → logprob: -5.453799247741699
    6. '    
' → logprob: -5.453799247741699
    7. '```' → logprob: -5.703799247741699
    8. ' 
' → logprob: -6.578799247741699
    9. '
' → logprob: -7.078799247741699
    10. ' ' → logprob: -7.078799247741699

Token 57: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39561331272125244
    2. '\n' → logprob: -1.2706133127212524
    3. '\' → logprob: -4.520613193511963
    4. '"""' → logprob: -4.770613193511963
    5. '    ' → logprob: -5.145613193511963
    6. '
' → logprob: -5.520613193511963
    7. '    
' → logprob: -5.645613193511963
    8. '```' → logprob: -5.770613193511963
    9. ' 
' → logprob: -5.895613193511963
    10. '"' → logprob: -6.020613193511963

Token 58: ' function' (ID: 1114)
  Prédit: ' function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.6736105680465698
    2. ' is' → logprob: -0.9236105680465698
    3. ' condition' → logprob: -3.2986106872558594
    4. ' code' → logprob: -4.173610687255859
    5. ' can' → logprob: -4.298610687255859
    6. ' def' → logprob: -4.798610687255859
    7. ' problem' → logprob: -6.048610687255859
    8. '\n' → logprob: -6.173610687255859
    9. ' requires' → logprob: -6.798610687255859
    10. ' corresponds' → logprob: -6.798610687255859

Token 59: ' uses' (ID: 8844)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7221494913101196
    2. '   ' → logprob: -0.8471494913101196
    3. ' continues' → logprob: -3.59714937210083
    4. ':' → logprob: -4.47214937210083
    5. ' def' → logprob: -4.59714937210083
    6. '_' → logprob: -4.84714937210083
    7. ' continued' → logprob: -5.97214937210083
    8. 'def' → logprob: -6.09714937210083
    9. ' 
' → logprob: -6.34714937210083
    10. ' continue' → logprob: -6.34714937210083

Token 60: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.023210769519209862
    2. ' an' → logprob: -4.6482110023498535
    3. ' the' → logprob: -4.7732110023498535
    4. ' prefix' → logprob: -5.7732110023498535
    5. ' two' → logprob: -7.5232110023498535
    6. ' space' → logprob: -7.5232110023498535
    7. ' hashing' → logprob: -8.398210525512695
    8. 'a' → logprob: -8.523210525512695
    9. ' dynamic' → logprob: -8.898210525512695
    10. ' defaultdict' → logprob: -10.523210525512695

Token 61: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.3180833160877228
    2. ' sliding' → logprob: -1.4430832862854004
    3. 'two' → logprob: -3.9430832862854004
    4. 'sl' → logprob: -4.5680832862854
    5. ' prefix' → logprob: -5.8180832862854
    6. ' "' → logprob: -6.9430832862854
    7. ' concept' → logprob: -7.4430832862854
    8. ' sl' → logprob: -7.9430832862854
    9. '```' → logprob: -8.193083763122559
    10. ' Two' → logprob: -8.318083763122559

Token 62: '-pointer' (ID: 94894)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11065816879272461
    2. '-' → logprob: -2.8606581687927246
    3. '-pointer' → logprob: -3.6106581687927246
    4. ' ' → logprob: -4.735658168792725
    5. '_pointer' → logprob: -5.110658168792725
    6. '_p' → logprob: -6.110658168792725
    7. ' _' → logprob: -6.360658168792725
    8. ' pointer' → logprob: -7.110658168792725
    9. '-p' → logprob: -8.110658645629883
    10. ' -' → logprob: -8.610658645629883

Token 63: ' (' (ID: 350)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.7686518430709839
    2. ' technique' → logprob: -0.7686518430709839
    3. ' ' → logprob: -2.6436519622802734
    4. ' method' → logprob: -7.393651962280273
    5. '   ' → logprob: -8.393651962280273
    6. '    ' → logprob: -8.768651962280273
    7. ' ```' → logprob: -9.143651962280273
    8. ' sliding' → logprob: -9.268651962280273
    9. 'appro' → logprob: -9.768651962280273
    10. ' techni' → logprob: -9.893651962280273

Token 64: 'sl' (ID: 4500)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2960100769996643
    2. ' technique' → logprob: -2.0460100173950195
    3. ' sliding' → logprob: -3.1710100173950195
    4. 'sl' → logprob: -3.6710100173950195
    5. ' approach' → logprob: -3.6710100173950195
    6. ' )' → logprob: -3.9210100173950195
    7. '   ' → logprob: -4.5460100173950195
    8. ' ' → logprob: -7.0460100173950195
    9. 'tech' → logprob: -7.5460100173950195
    10. 's' → logprob: -7.7960100173950195

Token 65: 'iding' (ID: 7069)
  Prédit: 'iding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iding' → logprob: -0.004927866160869598
    2. 'ide' → logprob: -5.879927635192871
    3. 'ice' → logprob: -7.254927635192871
    4. 'id' → logprob: -7.379927635192871
    5. 'i' → logprob: -8.879927635192871
    6. ')' → logprob: -9.254927635192871
    7. 'idi' → logprob: -9.504927635192871
    8. '```' → logprob: -9.754927635192871
    9. ']' → logprob: -9.879927635192871
    10. '}' → logprob: -10.129927635192871

Token 66: ' window' (ID: 5734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27157944440841675
    2. ' window' → logprob: -2.0215795040130615
    3. '_window' → logprob: -2.5215795040130615
    4. 'window' → logprob: -4.521579265594482
    5. ')' → logprob: -4.771579265594482
    6. ' ' → logprob: -5.521579265594482
    7. ' _' → logprob: -7.146579265594482
    8. ' technique' → logprob: -8.02157974243164
    9. '-window' → logprob: -8.77157974243164
    10. ' approach' → logprob: -9.39657974243164

Token 67: ')' (ID: 8)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.3244686424732208
    2. ')' → logprob: -1.9494686126708984
    3. ' technique' → logprob: -2.5744686126708984
    4. ' )' → logprob: -3.6994686126708984
    5. '   ' → logprob: -3.8244686126708984
    6. ' ' → logprob: -4.824468612670898
    7. '```' → logprob: -6.824468612670898
    8. 'appro' → logprob: -7.074468612670898
    9. '    ' → logprob: -7.199468612670898
    10. 'tech' → logprob: -7.574468612670898

Token 68: ' technique' (ID: 16410)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.8014269471168518
    2. '   ' → logprob: -1.051426887512207
    3. ' technique' → logprob: -1.676426887512207
    4. ' ' → logprob: -5.676426887512207
    5. 'tech' → logprob: -5.801426887512207
    6. '```' → logprob: -6.176426887512207
    7. '    ' → logprob: -6.176426887512207
    8. 'appro' → logprob: -6.426426887512207
    9. '  ' → logprob: -7.801426887512207
    10. '"""
' → logprob: -8.051426887512207

Token 69: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09414957463741302
    2. ' to' → logprob: -3.219149589538574
    3. ':' → logprob: -3.344149589538574
    4. ',' → logprob: -5.469149589538574
    5. ' ' → logprob: -5.844149589538574
    6. ' for' → logprob: -6.719149589538574
    7. '    
' → logprob: -6.844149589538574
    8. '.' → logprob: -7.094149589538574
    9. ' :' → logprob: -7.219149589538574
    10. '    ' → logprob: -7.219149589538574

Token 70: ' an' (ID: 448)
  Prédit: ' maintaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maintaining' → logprob: -0.9547263383865356
    2. ' ' → logprob: -1.8297263383865356
    3. ' the' → logprob: -2.204726219177246
    4. ' finding' → logprob: -2.454726219177246
    5. ' expanding' → logprob: -2.954726219177246
    6. ' efficient' → logprob: -3.329726219177246
    7. ' a' → logprob: -3.329726219177246
    8. ' efficiently' → logprob: -3.454726219177246
    9. ' an' → logprob: -4.204726219177246
    10. ' counting' → logprob: -4.329726219177246

Token 71: ' efficient' (ID: 12430)
  Prédit: ' efficient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficient' → logprob: -0.5881038904190063
    2. ' optimal' → logprob: -1.7131038904190063
    3. 'efficient' → logprob: -1.9631038904190063
    4. ' ' → logprob: -3.588103771209717
    5. 'optimal' → logprob: -3.588103771209717
    6. '   ' → logprob: -3.963103771209717
    7. 'O' → logprob: -4.213103771209717
    8. ' O' → logprob: -4.338103771209717
    9. ' optimized' → logprob: -4.838103771209717
    10. 'optimized' → logprob: -5.838103771209717

Token 72: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.22788900136947632
    2. ' approach' → logprob: -1.852889060974121
    3. ' implementation' → logprob: -3.102889060974121
    4. ' count' → logprob: -6.977889060974121
    5. ' counting' → logprob: -8.477889060974121
    6. ' ' → logprob: -8.602889060974121
    7. 'solution' → logprob: -8.727889060974121
    8. ' method' → logprob: -9.227889060974121
    9. '   ' → logprob: -9.352889060974121
    10. ' expansion' → logprob: -9.852889060974121

Token 73: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033549562096595764
    2. ':' → logprob: -4.033549785614014
    3. '
' → logprob: -4.783549785614014
    4. '    
' → logprob: -5.533549785614014
    5. '):' → logprob: -7.408549785614014
    6. '.' → logprob: -7.533549785614014
    7. '```' → logprob: -8.033549308776855
    8. ',' → logprob: -8.408549308776855
    9. ')' → logprob: -8.533549308776855
    10. '\n' → logprob: -8.658549308776855

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03443092852830887
    2. '"""' → logprob: -3.659430980682373
    3. '
' → logprob: -5.534430980682373
    4. '```' → logprob: -6.159430980682373
    5. '    
' → logprob: -7.034430980682373
    6. '"' → logprob: -7.909430980682373
    7. '"""
' → logprob: -8.409430503845215
    8. '    ' → logprob: -8.909430503845215
    9. '\n' → logprob: -9.409430503845215
    10. '""' → logprob: -9.534430503845215

Token 75: ' Prints' (ID: 92195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06782087683677673
    2. '    
' → logprob: -3.5678207874298096
    3. '"""' → logprob: -4.567821025848389
    4. '
' → logprob: -4.817821025848389
    5. '\n' → logprob: -4.817821025848389
    6. '```' → logprob: -5.067821025848389
    7. '   
' → logprob: -7.067821025848389
    8. '    ' → logprob: -7.067821025848389
    9. '  
' → logprob: -7.317821025848389
    10. ' 
' → logprob: -7.692821025848389

Token 76: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6646937727928162
    2. '(' → logprob: -0.7896937727928162
    3. 'the' → logprob: -3.914693832397461
    4. '(total' → logprob: -5.914693832397461
    5. '("' → logprob: -6.289693832397461
    6. '   ' → logprob: -6.539693832397461
    7. '(len' → logprob: -6.539693832397461
    8. ' ' → logprob: -7.039693832397461
    9. '('' → logprob: -7.289693832397461
    10. '()' → logprob: -7.289693832397461

Token 77: ' final' (ID: 1721)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.034744031727313995
    2. 'total' → logprob: -3.9097440242767334
    3. ' number' → logprob: -4.4097442626953125
    4. ' count' → logprob: -7.1597442626953125
    5. 'number' → logprob: -7.5347442626953125
    6. ' result' → logprob: -7.6597442626953125
    7. 'count' → logprob: -9.659744262695312
    8. 'result' → logprob: -10.159744262695312
    9. ' answer' → logprob: -10.534744262695312
    10. ' maximum' → logprob: -11.284744262695312

Token 78: ' answer' (ID: 6052)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.19351384043693542
    2. ' result' → logprob: -1.9435138702392578
    3. ' number' → logprob: -4.193513870239258
    4. ' answer' → logprob: -4.443513870239258
    5. 'count' → logprob: -5.443513870239258
    6. 'result' → logprob: -7.068513870239258
    7. ' ' → logprob: -8.318513870239258
    8. '   ' → logprob: -9.443513870239258
    9. '_count' → logprob: -9.568513870239258
    10. 'answer' → logprob: -9.568513870239258

Token 79: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05144059285521507
    2. ')' → logprob: -4.301440715789795
    3. '"""' → logprob: -4.551440715789795
    4. '```' → logprob: -4.551440715789795
    5. '
' → logprob: -5.301440715789795
    6. '):' → logprob: -5.676440715789795
    7. ':' → logprob: -5.801440715789795
    8. '    
' → logprob: -7.176440715789795
    9. '"""
' → logprob: -7.426440715789795
    10. '\n' → logprob: -7.551440715789795

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1333620399236679
    2. '```' → logprob: -2.633362054824829
    3. '
' → logprob: -3.383362054824829
    4. '"""' → logprob: -4.50836181640625
    5. '"""
' → logprob: -5.63336181640625
    6. '    
' → logprob: -5.88336181640625
    7. '\n' → logprob: -7.25836181640625
    8. '    ' → logprob: -8.38336181640625
    9. '``' → logprob: -8.88336181640625
    10. '"' → logprob: -9.00836181640625

Token 81: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34894827008247375
    2. '"""' → logprob: -1.3489482402801514
    3. '```' → logprob: -3.8489482402801514
    4. '"""
' (adapté à ' """
') → logprob: -5.3489484786987305
    5. '
' → logprob: -5.4739484786987305
    6. '"' → logprob: -5.9739484786987305
    7. ')' → logprob: -7.3489484786987305
    8. '\n' → logprob: -7.7239484786987305
    9. '""' → logprob: -7.9739484786987305
    10. '    
' → logprob: -8.22394847869873

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3541567027568817
    2. '
' → logprob: -1.479156732559204
    3. 'n' → logprob: -3.354156732559204
    4. '    
' → logprob: -3.604156732559204
    5. '```' → logprob: -5.229156494140625
    6. '\n' → logprob: -6.604156494140625
    7. '\' → logprob: -7.979156494140625
    8. '   
' → logprob: -8.104156494140625
    9. '     
' → logprob: -8.604156494140625
    10. ' 
' → logprob: -8.854156494140625

Token 83: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.16737309098243713
    2. '   ' → logprob: -1.9173730611801147
    3. ' n' → logprob: -5.667373180389404
    4. '
' → logprob: -6.292373180389404
    5. '```' → logprob: -7.042373180389404
    6. '\n' → logprob: -7.167373180389404
    7. '    
' → logprob: -9.167372703552246
    8. 'import' → logprob: -10.667372703552246
    9. '\' → logprob: -10.917372703552246
    10. ' 
' → logprob: -12.042372703552246

Token 84: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7094119787216187
    2. ' =' → logprob: -0.9594119787216187
    3. '=' → logprob: -2.084412097930908
    4. ')' → logprob: -8.33441162109375
    5. ' ,' → logprob: -8.70941162109375
    6. ' ' → logprob: -9.58441162109375
    7. '   ' → logprob: -10.33441162109375
    8. '_' → logprob: -10.70941162109375
    9. '=input' → logprob: -11.70941162109375
    10. '=int' → logprob: -11.83441162109375

Token 85: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.003178544342517853
    2. 'int' → logprob: -5.753178596496582
    3. ' ' → logprob: -14.128178596496582
    4. ' len' → logprob: -16.503177642822266
    5. ' map' → logprob: -18.628177642822266
    6. '=int' → logprob: -18.878177642822266
    7. '	int' → logprob: -19.628177642822266
    8. '[int' → logprob: -20.003177642822266
    9. ' input' → logprob: -20.128177642822266
    10. ' ' → logprob: -20.503177642822266

Token 86: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.024264095351099968
    2. '(' → logprob: -3.774264097213745
    3. 'input' → logprob: -6.899263858795166
    4. ' input' → logprob: -11.899264335632324
    5. '=input' → logprob: -13.899264335632324
    6. ' (' → logprob: -14.274264335632324
    7. '()' → logprob: -14.649264335632324
    8. '(
' → logprob: -14.774264335632324
    9. '_input' → logprob: -16.774263381958008
    10. '	input' → logprob: -16.899263381958008

Token 87: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6495110988616943
    2. '())' → logprob: -0.8995110988616943
    3. ')' → logprob: -2.6495110988616943
    4. '(' → logprob: -8.524511337280273
    5. '()
' → logprob: -11.274511337280273
    6. '().' → logprob: -11.899511337280273
    7. '())
' → logprob: -12.399511337280273
    8. '('' → logprob: -12.899511337280273
    9. '')' → logprob: -13.024511337280273
    10. ' ())' → logprob: -13.149511337280273

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.939575731754303
    2. ' A' → logprob: -1.4395756721496582
    3. '
' → logprob: -2.064575672149658
    4. 'A' → logprob: -2.189575672149658
    5. '    
' → logprob: -2.689575672149658
    6. 'n' → logprob: -4.064575672149658
    7. ' 
' → logprob: -4.439575672149658
    8. '<|end|>' → logprob: -4.564575672149658
    9. '```' → logprob: -4.939575672149658
    10. '    ' → logprob: -5.189575672149658

Token 89: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.2885991036891937
    2. ' A' → logprob: -1.4135991334915161
    3. '   ' → logprob: -4.913599014282227
    4. '```' → logprob: -10.538599014282227
    5. '	A' → logprob: -11.538599014282227
    6. ' ' → logprob: -11.538599014282227
    7. '    ' → logprob: -11.788599014282227
    8. '    
' → logprob: -12.538599014282227
    9. '`' → logprob: -12.663599014282227
    10. 'a' → logprob: -12.663599014282227

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044068340212106705
    2. '=' → logprob: -3.1690683364868164
    3. '[' → logprob: -6.919068336486816
    4. '.' → logprob: -10.419068336486816
    5. '[]' → logprob: -11.294068336486816
    6. '[:]' → logprob: -11.294068336486816
    7. ' ' → logprob: -11.669068336486816
    8. ' =[' → logprob: -12.044068336486816
    9. ')' → logprob: -13.044068336486816
    10. '_' → logprob: -13.169068336486816

Token 91: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.04858771339058876
    2. 'list' → logprob: -3.0485877990722656
    3. ' [' → logprob: -15.798587799072266
    4. '[list' → logprob: -15.923587799072266
    5. '=list' → logprob: -17.173587799072266
    6. '[' → logprob: -17.298587799072266
    7. '	list' → logprob: -19.173587799072266
    8. 'List' → logprob: -20.548587799072266
    9. ' ' → logprob: -21.298587799072266
    10. ':list' → logprob: -21.798587799072266

Token 92: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21576781570911407
    2. '(map' → logprob: -1.7157678604125977
    3. '(int' → logprob: -4.340767860412598
    4. '(input' → logprob: -6.840767860412598
    5. '()' → logprob: -9.965767860412598
    6. '(eval' → logprob: -10.590767860412598
    7. '(list' → logprob: -11.215767860412598
    8. ' (' → logprob: -11.465767860412598
    9. '(

' → logprob: -11.465767860412598
    10. '(
' → logprob: -11.590767860412598

Token 93: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012619714252650738
    2. '(' → logprob: -4.387619495391846
    3. '(input' → logprob: -10.012619972229004
    4. 'int' → logprob: -10.762619972229004
    5. '(str' → logprob: -11.137619972229004
    6. '(
' → logprob: -11.137619972229004
    7. '[int' → logprob: -12.637619972229004
    8. '<int' → logprob: -12.887619972229004
    9. '=int' → logprob: -13.012619972229004
    10. ' (' → logprob: -13.387619972229004

Token 94: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5991397500038147
    2. '(input' → logprob: -0.8491397500038147
    3. ',' → logprob: -3.97413969039917
    4. 'input' → logprob: -5.97413969039917
    5. '(' → logprob: -7.22413969039917
    6. ' ,' → logprob: -7.34913969039917
    7. '   ' → logprob: -10.099140167236328
    8. ' input' → logprob: -10.099140167236328
    9. '=input' → logprob: -10.349140167236328
    10. '(),' → logprob: -10.599140167236328

Token 95: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004079470410943031
    2. ' input' → logprob: -5.504079341888428
    3. '   ' → logprob: -15.254079818725586
    4. '(input' → logprob: -15.379079818725586
    5. ',input' → logprob: -15.379079818725586
    6. ')' → logprob: -15.504079818725586
    7. 'int' → logprob: -16.379079818725586
    8. ' ' → logprob: -17.004079818725586
    9. '	input' → logprob: -17.129079818725586
    10. '=input' → logprob: -17.254079818725586

Token 96: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018089536752086133
    2. '()' → logprob: -8.875181198120117
    3. '()))' → logprob: -10.750181198120117
    4. '())' → logprob: -11.000181198120117
    5. ')' → logprob: -14.000181198120117
    6. '(' → logprob: -14.250181198120117
    7. ' ().' → logprob: -15.000181198120117
    8. '()));' → logprob: -15.125181198120117
    9. '())))' → logprob: -15.375181198120117
    10. '))' → logprob: -15.875181198120117

Token 97: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007104054093360901
    2. 'strip' → logprob: -7.250710487365723
    3. 'rstrip' → logprob: -14.875710487365723
    4. ' split' → logprob: -16.125709533691406
    5. '(split' → logprob: -17.500709533691406
    6. 'spl' → logprob: -17.750709533691406
    7. 's' → logprob: -20.500709533691406
    8. '_split' → logprob: -21.250709533691406
    9. ' strip' → logprob: -21.500709533691406
    10. 'read' → logprob: -21.750709533691406

Token 98: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0252740029245615
    2. '()' → logprob: -4.40027379989624
    3. '))' → logprob: -4.65027379989624
    4. '())' → logprob: -5.90027379989624
    5. '(' → logprob: -8.150274276733398
    6. ')' → logprob: -10.025274276733398
    7. '()))
' → logprob: -10.525274276733398
    8. '()));' → logprob: -11.525274276733398
    9. '())))' → logprob: -11.775274276733398
    10. '()))

' → logprob: -13.275274276733398

Token 99: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01867952197790146
    2. '   ' → logprob: -4.143679618835449
    3. '    
' → logprob: -6.518679618835449
    4. '```' → logprob: -7.643679618835449
    5. 'n' → logprob: -8.39367961883545
    6. ' ans' → logprob: -9.39367961883545
    7. '

' → logprob: -9.64367961883545
    8. '   
' → logprob: -10.26867961883545
    9. '     
' → logprob: -10.51867961883545
    10. '``' → logprob: -10.64367961883545

Token 100: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20921029150485992
    2. 'n' → logprob: -2.4592103958129883
    3. 'ans' → logprob: -2.9592103958129883
    4. 'answer' → logprob: -3.9592103958129883
    5. '
' → logprob: -4.334210395812988
    6. ' ans' → logprob: -4.959210395812988
    7. 'left' → logprob: -5.709210395812988
    8. ' n' → logprob: -5.709210395812988
    9. ' answer' → logprob: -6.709210395812988
    10. 'res' → logprob: -7.209210395812988

Token 101: ' ans' (ID: 3345)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.23425300419330597
    2. ' left' → logprob: -2.6092529296875
    3. 'l' → logprob: -2.8592529296875
    4. 'ans' → logprob: -3.3592529296875
    5. 'answer' → logprob: -3.9842529296875
    6. ' l' → logprob: -5.3592529296875
    7. 'sum' → logprob: -5.8592529296875
    8. 'prefix' → logprob: -6.1092529296875
    9. 'i' → logprob: -6.2342529296875
    10. ' answer' → logprob: -6.3592529296875

Token 102: ' stores' (ID: 14604)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026304252445697784
    2. '=' → logprob: -3.651304244995117
    3. ',' → logprob: -12.776304244995117
    4. '_' → logprob: -14.026304244995117
    5. ' ' → logprob: -16.026304244995117
    6. ' +=' → logprob: -16.526304244995117
    7. '  ' → logprob: -17.401304244995117
    8. '_=' → logprob: -17.401304244995117
    9. ')' → logprob: -17.776304244995117
    10. '   ' → logprob: -18.026304244995117

Token 103: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5800553560256958
    2. '0' → logprob: -0.8300553560256958
    3. ' the' → logprob: -5.580055236816406
    4. 'the' → logprob: -8.080055236816406
    5. '   ' → logprob: -11.080055236816406
    6. '  ' → logprob: -12.205055236816406
    7. ' total' → logprob: -12.830055236816406
    8. ' ans' → logprob: -14.455055236816406
    9. 'total' → logprob: -14.455055236816406
    10. '    ' → logprob: -14.955055236816406

Token 104: ' final' (ID: 1721)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3601907789707184
    2. 'total' → logprob: -1.860190749168396
    3. ' number' → logprob: -2.7351908683776855
    4. ' count' → logprob: -3.6101908683776855
    5. 'count' → logprob: -3.8601908683776855
    6. 'number' → logprob: -4.2351908683776855
    7. ' answer' → logprob: -4.8601908683776855
    8. 'answer' → logprob: -5.2351908683776855
    9. ' result' → logprob: -6.1101908683776855
    10. '0' → logprob: -6.4851908683776855

Token 105: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5458488464355469
    2. 'count' → logprob: -2.045848846435547
    3. ' answer' → logprob: -2.170848846435547
    4. ' =' → logprob: -2.670848846435547
    5. ' number' → logprob: -3.545848846435547
    6. 'answer' → logprob: -3.920848846435547
    7. '_' → logprob: -4.420848846435547
    8. '_answer' → logprob: -4.545848846435547
    9. ' ' → logprob: -4.670848846435547
    10. '_count' → logprob: -5.045848846435547

Token 106: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005217039957642555
    2. '=' → logprob: -5.6302170753479
    3. '   ' → logprob: -6.5052170753479
    4. ' ans' → logprob: -9.630216598510742
    5. ',' → logprob: -10.630216598510742
    6. '	ans' → logprob: -11.505216598510742
    7. '_ans' → logprob: -11.630216598510742
    8. 'ans' → logprob: -12.255216598510742
    9. '(ans' → logprob: -13.005216598510742
    10. '_' → logprob: -13.255216598510742

Token 107: ' valid' (ID: 4529)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.18574270606040955
    2. 'sub' → logprob: -2.4357426166534424
    3. ' valid' → logprob: -2.5607426166534424
    4. ' contiguous' → logprob: -6.3107428550720215
    5. 'valid' → logprob: -6.4357428550720215
    6. ' good' → logprob: -7.8107428550720215
    7. ' the' → logprob: -7.9357428550720215
    8. ' all' → logprob: -8.310742378234863
    9. ' ' → logprob: -9.185742378234863
    10. '   ' → logprob: -10.435742378234863

Token 108: ' sub' (ID: 1543)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.6978263258934021
    2. ' sub' → logprob: -0.8228263258934021
    3. 'sub' → logprob: -3.197826385498047
    4. '_' → logprob: -4.322826385498047
    5. '   ' → logprob: -5.572826385498047
    6. ' ' → logprob: -5.697826385498047
    7. '_ans' → logprob: -7.697826385498047
    8. ' ans' → logprob: -7.822826385498047
    9. ' =' → logprob: -8.197826385498047
    10. '  ' → logprob: -8.947826385498047

Token 109: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.0006246338016353548
    2. 'array' → logprob: -7.625624656677246
    3. ' arrays' → logprob: -9.875624656677246
    4. '_arrays' → logprob: -10.000624656677246
    5. 'arr' → logprob: -10.625624656677246
    6. '   ' → logprob: -11.375624656677246
    7. 'ar' → logprob: -13.125624656677246
    8. 'arra' → logprob: -13.750624656677246
    9. 'arry' → logprob: -15.375624656677246
    10. 'a' → logprob: -15.375624656677246

Token 110: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5439237356185913
    2. ' ans' → logprob: -1.4189237356185913
    3. 'ans' → logprob: -1.7939237356185913
    4. '	ans' → logprob: -4.918923854827881
    5. '(ans' → logprob: -6.418923854827881
    6. '_ans' → logprob: -7.418923854827881
    7. '    
' → logprob: -7.793923854827881
    8. '
' → logprob: -7.793923854827881
    9. ' =' → logprob: -7.918923854827881
    10. ',' → logprob: -8.668923377990723

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007126538082957268
    2. '
' → logprob: -5.757126331329346
    3. ' ans' → logprob: -6.007126331329346
    4. '    
' → logprob: -7.507126331329346
    5. 'ans' → logprob: -7.507126331329346
    6. ',' → logprob: -9.382126808166504
    7. '```' → logprob: -9.632126808166504
    8. '    ' → logprob: -9.757126808166504
    9. '	ans' → logprob: -9.757126808166504
    10. 'n' → logprob: -10.632126808166504

Token 112: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.004443885758519173
    2. ' ans' → logprob: -5.504444122314453
    3. '   ' → logprob: -8.254444122314453
    4. 'answer' → logprob: -9.379444122314453
    5. 'n' → logprob: -12.254444122314453
    6. '	ans' → logprob: -12.254444122314453
    7. '
' → logprob: -12.879444122314453
    8. '(ans' → logprob: -13.254444122314453
    9. '_ans' → logprob: -13.879444122314453
    10. 'left' → logprob: -14.004444122314453

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164448715746403
    2. '=' → logprob: -4.264164447784424
    3. ' +=' → logprob: -14.889164924621582
    4. ' ' → logprob: -15.014164924621582
    5. ',' → logprob: -15.639164924621582
    6. ' =
' → logprob: -16.764163970947266
    7. '   ' → logprob: -16.764163970947266
    8. ')' → logprob: -17.389163970947266
    9. ' =)' → logprob: -17.514163970947266
    10. '  ' → logprob: -18.389163970947266

Token 114: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012512002140283585
    2. ' ' → logprob: -4.38751220703125
    3. '   ' → logprob: -13.01251220703125
    4. '  ' → logprob: -16.82501220703125
    5. '۰' → logprob: -17.82501220703125
    6. '    ' → logprob: -18.20001220703125
    7. '000' → logprob: -18.38751220703125
    8. '=' → logprob: -18.38751220703125
    9. ' ' → logprob: -18.57501220703125
    10. '	' → logprob: -18.76251220703125

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.6250057220459
    4. '۰' → logprob: -19.1875057220459
    5. '000' → logprob: -19.5000057220459
    6. '(' → logprob: -19.5000057220459
    7. '=' → logprob: -19.7500057220459
    8. '  ' → logprob: -19.8750057220459
    9. '０' → logprob: -19.8750057220459
    10. 'int' → logprob: -20.0000057220459

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07723494619131088
    2. ' prefix' → logprob: -3.577234983444214
    3. ' current' → logprob: -4.452234745025635
    4. 'prefix' → logprob: -4.827234745025635
    5. ' left' → logprob: -5.327234745025635
    6. ' l' → logprob: -5.577234745025635
    7. ' xor' → logprob: -5.702234745025635
    8. ' cur' → logprob: -6.327234745025635
    9. ' i' → logprob: -6.577234745025635
    10. ' s' → logprob: -6.577234745025635

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024779871106147766
    2. ' l' → logprob: -4.774779796600342
    3. ' left' → logprob: -4.774779796600342
    4. 'l' → logprob: -6.149779796600342
    5. ' current' → logprob: -6.274779796600342
    6. ' prefix' → logprob: -6.774779796600342
    7. 'left' → logprob: -7.774779796600342
    8. ' i' → logprob: -8.0247802734375
    9. ' sum' → logprob: -8.3997802734375
    10. ' start' → logprob: -8.5247802734375

Token 118: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6313052177429199
    2. 'l' → logprob: -1.63130521774292
    3. 'xor' → logprob: -2.63130521774292
    4. 'j' → logprob: -2.75630521774292
    5. '   ' → logprob: -3.13130521774292
    6. 'i' → logprob: -3.50630521774292
    7. 'prefix' → logprob: -3.75630521774292
    8. 'sum' → logprob: -4.38130521774292
    9. 'start' → logprob: -5.00630521774292
    10. 'from' → logprob: -5.50630521774292

Token 119: ' r' (ID: 428)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.39673787355422974
    2. 'j' → logprob: -2.396737813949585
    3. 'l' → logprob: -2.521737813949585
    4. 'xor' → logprob: -3.146737813949585
    5. ' left' → logprob: -3.646737813949585
    6. 'i' → logprob: -3.771737813949585
    7. 'start' → logprob: -4.021738052368164
    8. 'from' → logprob: -4.146738052368164
    9. 'prefix' → logprob: -4.771738052368164
    10. 'sum' → logprob: -5.021738052368164

Token 120: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011057492345571518
    2. '=' → logprob: -4.511057376861572
    3. ',' → logprob: -11.63605785369873
    4. ' ' → logprob: -15.38605785369873
    5. '=int' → logprob: -15.76105785369873
    6. ')' → logprob: -15.76105785369873
    7. '   ' → logprob: -15.88605785369873
    8. '  ' → logprob: -16.261056900024414
    9. '```' → logprob: -17.011056900024414
    10. ' ,' → logprob: -18.011056900024414

Token 121: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5765629410743713
    2. ' ' → logprob: -0.8265629410743713
    3. ' -' → logprob: -8.451562881469727
    4. '  ' → logprob: -9.076562881469727
    5. '   ' → logprob: -9.326562881469727
    6. '-' → logprob: -9.826562881469727
    7. '    ' → logprob: -9.951562881469727
    8. '<|end|>' → logprob: -10.326562881469727
    9. ' r' → logprob: -10.701562881469727
    10. '1' → logprob: -11.201562881469727

Token 122: ' right' (ID: 1849)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10384410619735718
    2. ' ' → logprob: -2.353844165802002
    3. ' left' → logprob: -6.478844165802002
    4. 'left' → logprob: -7.103844165802002
    5. 'r' → logprob: -7.478844165802002
    6. ' r' → logprob: -8.228843688964844
    7. '   ' → logprob: -9.103843688964844
    8. '1' → logprob: -9.853843688964844
    9. 'start' → logprob: -9.853843688964844
    10. ' -' → logprob: -10.228843688964844

Token 123: ' endpoint' (ID: 29703)
  Prédit: '_pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pointer' → logprob: -1.2286142110824585
    2. ' pointer' → logprob: -1.3536142110824585
    3. 'pointer' → logprob: -1.7286142110824585
    4. ' =' → logprob: -1.8536142110824585
    5. '-pointer' → logprob: -3.478614330291748
    6. '   ' → logprob: -3.853614330291748
    7. '=' → logprob: -4.103614330291748
    8. ' ' → logprob: -4.103614330291748
    9. '_ptr' → logprob: -4.978614330291748
    10. '  ' → logprob: -5.353614330291748

Token 124: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14889957010746002
    2. ' =' → logprob: -2.773899555206299
    3. '<|end|>' → logprob: -3.023899555206299
    4. ',' → logprob: -5.148899555206299
    5. '<|end|>' → logprob: -5.148899555206299
    6. '    ' → logprob: -5.273899555206299
    7. '  ' → logprob: -5.648899555206299
    8. ' ' → logprob: -5.773899555206299
    9. '=' → logprob: -6.148899555206299
    10. ' for' → logprob: -7.898899555206299

Token 125: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10288463532924652
    2. 'the' → logprob: -2.352884531021118
    3. '<|end|>' → logprob: -6.477884769439697
    4. ' a' → logprob: -7.602884769439697
    5. ' ' → logprob: -7.977884769439697
    6. '   ' → logprob: -9.602884292602539
    7. 'a' → logprob: -9.977884292602539
    8. ' current' → logprob: -10.602884292602539
    9. '  ' → logprob: -10.852884292602539
    10. 's' → logprob: -10.852884292602539

Token 126: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5516429543495178
    2. ' window' → logprob: -0.9266429543495178
    3. 'window' → logprob: -4.051642894744873
    4. 'current' → logprob: -4.926642894744873
    5. ' sub' → logprob: -6.301642894744873
    6. ' sliding' → logprob: -7.301642894744873
    7. 'sub' → logprob: -8.426643371582031
    8. ' valid' → logprob: -8.676643371582031
    9. ' currently' → logprob: -8.801643371582031
    10. ' range' → logprob: -9.426643371582031

Token 127: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.27566564083099365
    2. 'window' → logprob: -1.6506656408309937
    3. ' sub' → logprob: -3.525665760040283
    4. '   ' → logprob: -4.775665760040283
    5. 'sub' → logprob: -5.275665760040283
    6. ' ' → logprob: -6.650665760040283
    7. ' segment' → logprob: -6.650665760040283
    8. ' sliding' → logprob: -6.900665760040283
    9. ' l' → logprob: -7.900665760040283
    10. '_window' → logprob: -8.025665283203125

Token 128: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14585578441619873
    2. ' =' → logprob: -2.0208559036254883
    3. '=' → logprob: -6.270855903625488
    4. 'r' → logprob: -7.520855903625488
    5. ',' → logprob: -8.145855903625488
    6. '
' → logprob: -8.770855903625488
    7. '  ' → logprob: -9.645855903625488
    8. '    
' → logprob: -9.895855903625488
    9. '    ' → logprob: -10.020855903625488
    10. ' r' → logprob: -10.270855903625488

Token 129: 'exclusive' (ID: 196957)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08422699570655823
    2. '   ' → logprob: -3.3342270851135254
    3. 'r' → logprob: -3.9592270851135254
    4. '0' → logprob: -4.084227085113525
    5. ' )' → logprob: -5.334227085113525
    6. ' ' → logprob: -6.834227085113525
    7. ' r' → logprob: -7.084227085113525
    8. '  ' → logprob: -7.834227085113525
    9. '=' → logprob: -8.584226608276367
    10. 'n' → logprob: -8.584226608276367

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008517975220456719
    2. '   ' → logprob: -7.250851631164551
    3. ' )' → logprob: -9.62585163116455
    4. ')
' → logprob: -9.87585163116455
    5. ',' → logprob: -10.87585163116455
    6. ' ' → logprob: -13.62585163116455
    7. '  ' → logprob: -13.87585163116455
    8. 'r' → logprob: -14.25085163116455
    9. '    ' → logprob: -14.50085163116455
    10. '),' → logprob: -14.75085163116455

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06373230367898941
    2. 'r' → logprob: -3.438732385635376
    3. ' r' → logprob: -3.938732385635376
    4. '
' → logprob: -4.938732147216797
    5. ',' → logprob: -6.188732147216797
    6. '    
' → logprob: -7.938732147216797
    7. '  ' → logprob: -9.438732147216797
    8. 'l' → logprob: -9.563732147216797
    9. ' ,' → logprob: -9.938732147216797
    10. ' l' → logprob: -9.938732147216797

Token 132: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.023850373923778534
    2. ' r' → logprob: -3.773850440979004
    3. '   ' → logprob: -7.648850440979004
    4. 'l' → logprob: -9.898850440979004
    5. ' ' → logprob: -10.398850440979004
    6. 'sum' → logprob: -11.648850440979004
    7. '0' → logprob: -12.023850440979004
    8. ' l' → logprob: -12.023850440979004
    9. 'xor' → logprob: -12.273850440979004
    10. '  ' → logprob: -12.773850440979004

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693041563034058
    2. '=' → logprob: -2.1269304752349854
    3. ',' → logprob: -14.001930236816406
    4. ')' → logprob: -14.876930236816406
    5. ' ' → logprob: -15.001930236816406
    6. '=int' → logprob: -15.251930236816406
    7. '   ' → logprob: -15.376930236816406
    8. '  ' → logprob: -16.251930236816406
    9. ' +=' → logprob: -17.001930236816406
    10. '```' → logprob: -17.001930236816406

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.125204086303711
    4. '-' → logprob: -17.12520408630371
    5. '1' → logprob: -19.25020408630371
    6. ' -' → logprob: -19.25020408630371
    7. '  ' → logprob: -19.37520408630371
    8. '    ' → logprob: -20.12520408630371
    9. '```' → logprob: -20.37520408630371
    10. '=' → logprob: -20.50020408630371

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.250014305114746
    3. '-' → logprob: -14.500014305114746
    4. '1' → logprob: -15.250014305114746
    5. '   ' → logprob: -15.375014305114746
    6. ' -' → logprob: -16.81251335144043
    7. '  ' → logprob: -17.25001335144043
    8. '```' → logprob: -17.81251335144043
    9. '۰' → logprob: -18.62501335144043
    10. '    ' → logprob: -18.62501335144043

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02323383092880249
    2. '
' → logprob: -4.398233890533447
    3. 'sum' → logprob: -5.898233890533447
    4. '    
' → logprob: -6.148233890533447
    5. 'prefix' → logprob: -7.023233890533447
    6. ' prefix' → logprob: -7.148233890533447
    7. 's' → logprob: -7.523233890533447
    8. 'current' → logprob: -7.648233890533447
    9. ' sum' → logprob: -7.773233890533447
    10. ' current' → logprob: -7.898233890533447

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15865300595760345
    2. '
' → logprob: -2.2836530208587646
    3. 's' → logprob: -4.1586527824401855
    4. 'sum' → logprob: -4.6586527824401855
    5. '    
' → logprob: -5.2836527824401855
    6. ' xor' → logprob: -5.5336527824401855
    7. ',' → logprob: -6.1586527824401855
    8. ' s' → logprob: -6.2836527824401855
    9. 'xor' → logprob: -6.5336527824401855
    10. ' 
' → logprob: -7.0336527824401855

Token 138: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7561673521995544
    2. 'current' → logprob: -1.7561674118041992
    3. 'curr' → logprob: -2.381167411804199
    4. 's' → logprob: -2.756167411804199
    5. 'cur' → logprob: -2.756167411804199
    6. 'prefix' → logprob: -3.256167411804199
    7. 'xor' → logprob: -3.256167411804199
    8. '   ' → logprob: -3.631167411804199
    9. 'from' → logprob: -4.381167411804199
    10. '_sum' → logprob: -5.006167411804199

Token 139: ' n' (ID: 297)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.963144063949585
    2. 'curr' → logprob: -1.588144063949585
    3. 'sum' → logprob: -1.838144063949585
    4. 'cur' → logprob: -2.088144063949585
    5. 's' → logprob: -3.213144063949585
    6. 'prefix' → logprob: -3.713144063949585
    7. 'xor' → logprob: -3.963144063949585
    8. 'from' → logprob: -4.338144302368164
    9. ' current' → logprob: -4.338144302368164
    10. 'window' → logprob: -5.463144302368164

Token 140: 'ows' (ID: 1513)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2850397825241089
    2. '=' → logprob: -1.9100397825241089
    3. '   ' → logprob: -2.4100399017333984
    4. ',' → logprob: -6.285039901733398
    5. ' is' → logprob: -6.410039901733398
    6. ')' → logprob: -6.785039901733398
    7. '
' → logprob: -6.910039901733398
    8. '  ' → logprob: -7.285039901733398
    9. '    ' → logprob: -7.660039901733398
    10. 's' → logprob: -7.660039901733398

Token 141: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.07171779125928879
    2. '_sum' → logprob: -2.6967177391052246
    3. '_' → logprob: -7.446717739105225
    4. 'sum' → logprob: -7.696717739105225
    5. ' =' → logprob: -8.321718215942383
    6. '_um' → logprob: -9.071718215942383
    7. 'ums' → logprob: -9.196718215942383
    8. 'u' → logprob: -9.696718215942383
    9. 'Sum' → logprob: -10.196718215942383
    10. '_unique' → logprob: -10.321718215942383

Token 142: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48411184549331665
    2. '=' → logprob: -0.9841118454933167
    3. ',' → logprob: -4.609111785888672
    4. ' ,' → logprob: -11.859111785888672
    5. ' ' → logprob: -11.984111785888672
    6. '_' → logprob: -12.859111785888672
    7. '<|end|>' → logprob: -13.109111785888672
    8. '   ' → logprob: -13.609111785888672
    9. '=int' → logprob: -14.109111785888672
    10. ')' → logprob: -14.359111785888672

Token 143: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011101586744189262
    2. ' ' → logprob: -4.511101722717285
    3. 'n' → logprob: -10.636101722717285
    4. '   ' → logprob: -10.761101722717285
    5. 'the' → logprob: -12.886101722717285
    6. ' the' → logprob: -13.636101722717285
    7. ' n' → logprob: -13.636101722717285
    8. '  ' → logprob: -13.636101722717285
    9. 'current' → logprob: -14.511101722717285
    10. 'A' → logprob: -15.136101722717285

Token 144: ' current' (ID: 2208)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012802277691662312
    2. ' ' → logprob: -4.3878021240234375
    3. 'current' → logprob: -8.762802124023438
    4. 'n' → logprob: -9.762802124023438
    5. ' current' → logprob: -9.887802124023438
    6. 'sum' → logprob: -11.137802124023438
    7. 'A' → logprob: -12.762802124023438
    8. ' n' → logprob: -12.762802124023438
    9. '  ' → logprob: -13.637802124023438
    10. ' sum' → logprob: -14.012802124023438

Token 145: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49883726239204407
    2. '_sum' → logprob: -1.4988372325897217
    3. 'sum' → logprob: -2.6238372325897217
    4. '0' → logprob: -2.7488372325897217
    5. ' ' → logprob: -4.998837471008301
    6. 'xor' → logprob: -5.373837471008301
    7. ' _' → logprob: -5.623837471008301
    8. '_x' → logprob: -5.623837471008301
    9. '<|end|>' → logprob: -6.248837471008301
    10. '_s' → logprob: -6.248837471008301

Token 146: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8898584842681885
    2. ' =' → logprob: -1.3898584842681885
    3. '<|end|>' → logprob: -1.6398584842681885
    4. '=' → logprob: -2.5148584842681885
    5. ',' → logprob: -3.8898584842681885
    6. '<|end|>' → logprob: -4.389858245849609
    7. ' ' → logprob: -4.514858245849609
    8. '_' → logprob: -4.889858245849609
    9. '    ' → logprob: -5.264858245849609
    10. '  ' → logprob: -5.889858245849609

Token 147: ' the' (ID: 290)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07340392470359802
    2. '0' → logprob: -2.698403835296631
    3. ' A' → logprob: -5.823403835296631
    4. 'the' → logprob: -8.573404312133789
    5. ' ' → logprob: -8.948404312133789
    6. ')' → logprob: -9.698404312133789
    7. ' the' → logprob: -10.448404312133789
    8. 'elements' → logprob: -10.448404312133789
    9. '   ' → logprob: -10.823404312133789
    10. 'current' → logprob: -11.448404312133789

Token 148: ' window' (ID: 5734)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04770635440945625
    2. '0' → logprob: -3.422706365585327
    3. ' A' → logprob: -5.297706127166748
    4. 'current' → logprob: -6.047706127166748
    5. 'window' → logprob: -6.547706127166748
    6. 'sub' → logprob: -6.797706127166748
    7. '   ' → logprob: -6.922706127166748
    8. ')' → logprob: -6.922706127166748
    9. ' current' → logprob: -7.547706127166748
    10. ' ' → logprob: -8.172706604003906

Token 149: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01083050761371851
    2. 'n' → logprob: -5.510830402374268
    3. '<|end|>' → logprob: -6.385830402374268
    4. '=' → logprob: -6.760830402374268
    5. '    ' → logprob: -7.010830402374268
    6. ' =' → logprob: -7.635830402374268
    7. ' ' → logprob: -7.635830402374268
    8. '    
' → logprob: -7.635830402374268
    9. '  ' → logprob: -7.635830402374268
    10. '<|end|>' → logprob: -7.760830402374268

Token 150: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04216387867927551
    2. 'i' → logprob: -3.667163848876953
    3. '   ' → logprob: -4.667163848876953
    4. ' l' → logprob: -5.542163848876953
    5. ',' → logprob: -7.417163848876953
    6. ')' → logprob: -8.042163848876953
    7. 'r' → logprob: -8.292163848876953
    8. ']' → logprob: -8.417163848876953
    9. ' i' → logprob: -8.417163848876953
    10. ' ' → logprob: -8.792163848876953

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044424962252378464
    2. '   ' → logprob: -4.294425010681152
    3. ']' → logprob: -4.919425010681152
    4. ',r' → logprob: -5.044425010681152
    5. ':' → logprob: -5.419425010681152
    6. ' ,' → logprob: -5.544425010681152
    7. ' ' → logprob: -5.669425010681152
    8. ':r' → logprob: -6.794425010681152
    9. ' :' → logprob: -7.169425010681152
    10. ',
' → logprob: -7.294425010681152

Token 152: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0020390336867421865
    2. ' r' → logprob: -6.252038955688477
    3. '0' → logprob: -9.377038955688477
    4. 'l' → logprob: -11.502038955688477
    5. '   ' → logprob: -12.127038955688477
    6. ',' → logprob: -12.877038955688477
    7. ' ' → logprob: -13.127038955688477
    8. ',r' → logprob: -13.377038955688477
    9. 'n' → logprob: -13.502038955688477
    10. ')' → logprob: -14.127038955688477

Token 153: ')
' (ID: 446)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3750133216381073
    2. ']' → logprob: -1.3750133514404297
    3. ')' → logprob: -2.8750133514404297
    4. '])
' → logprob: -6.75001335144043
    5. '   ' → logprob: -7.12501335144043
    6. ' ])' → logprob: -8.00001335144043
    7. ')]' → logprob: -8.25001335144043
    8. ']
' → logprob: -8.62501335144043
    9. ')
' → logprob: -9.12501335144043
    10. ')])' → logprob: -9.37501335144043

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001764551387168467
    2. '    
' → logprob: -7.00176477432251
    3. 'n' → logprob: -7.50176477432251
    4. '
' → logprob: -9.251764297485352
    5. ',' → logprob: -9.501764297485352
    6. '    ' → logprob: -9.876764297485352
    7. '  ' → logprob: -10.626764297485352
    8. '   
' → logprob: -11.376764297485352
    9. ' ' → logprob: -11.501764297485352
    10. '```' → logprob: -12.376764297485352

Token 155: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3240106701850891
    2. '   ' → logprob: -1.3240106105804443
    3. ' n' → logprob: -4.574010848999023
    4. ' ' → logprob: -8.699010848999023
    5. '    ' → logprob: -10.199010848999023
    6. '	n' → logprob: -10.199010848999023
    7. '  ' → logprob: -10.324010848999023
    8. '    
' → logprob: -10.449010848999023
    9. '
' → logprob: -10.949010848999023
    10. '\n' → logprob: -11.699010848999023

Token 156: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -0.001922087394632399
    2. '_' → logprob: -6.751922130584717
    3. 'ow' → logprob: -8.376921653747559
    4. 'o' → logprob: -9.126921653747559
    5. 'n' → logprob: -9.251921653747559
    6. '_n' → logprob: -9.876921653747559
    7. 'ws' → logprob: -10.001921653747559
    8. ' =' → logprob: -10.251921653747559
    9. '=' → logprob: -10.626921653747559
    10. 'w' → logprob: -10.751921653747559

Token 157: 'um' (ID: 394)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0028014369308948517
    2. 'um' → logprob: -6.252801418304443
    3. '=' → logprob: -7.627801418304443
    4. '=sum' → logprob: -8.627801895141602
    5. '_sum' → logprob: -9.127801895141602
    6. ' =' → logprob: -9.627801895141602
    7. '   ' → logprob: -11.127801895141602
    8. ' sum' → logprob: -12.002801895141602
    9. 's' → logprob: -12.877801895141602
    10. 'umsum' → logprob: -13.127801895141602

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868747651576996
    2. ' =' → logprob: -1.136874794960022
    3. '   ' → logprob: -13.38687515258789
    4. ',' → logprob: -13.51187515258789
    5. '_' → logprob: -15.26187515258789
    6. ')' → logprob: -15.51187515258789
    7. ' +=' → logprob: -16.51187515258789
    8. ' ' → logprob: -16.51187515258789
    9. ' =
' → logprob: -16.88687515258789
    10. '=

' → logprob: -17.01187515258789

Token 159: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.875075340270996
    4. 'A' → logprob: -17.50007438659668
    5. '  ' → logprob: -19.37507438659668
    6. '00' → logprob: -19.87507438659668
    7. '=' → logprob: -19.87507438659668
    8. '```' → logprob: -19.87507438659668
    9. '۰' → logprob: -19.87507438659668
    10. ' A' → logprob: -20.25007438659668

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. 'A' → logprob: -15.75000286102295
    4. '۰' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.562501907348633
    6. '```' → logprob: -17.625001907348633
    7. '00' → logprob: -17.812501907348633
    8. '=' → logprob: -18.062501907348633
    9. '000' → logprob: -18.375001907348633
    10. '०' → logprob: -18.875001907348633

Token 161: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020880463998764753
    2. 'n' → logprob: -7.2520880699157715
    3. '    
' → logprob: -8.002087593078613
    4. '    ' → logprob: -8.502087593078613
    5. ' for' → logprob: -8.502087593078613
    6. '  ' → logprob: -9.127087593078613
    7. ' ' → logprob: -9.377087593078613
    8. '
' → logprob: -9.377087593078613
    9. ' n' → logprob: -9.377087593078613
    10. '<|end|>' → logprob: -9.377087593078613

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004441393539309502
    2. 'n' → logprob: -5.629441261291504
    3. ' n' → logprob: -8.504441261291504
    4. '
' → logprob: -8.629441261291504
    5. '    
' → logprob: -9.004441261291504
    6. 'for' → logprob: -9.629441261291504
    7. ' for' → logprob: -9.754441261291504
    8. ' ' → logprob: -10.004441261291504
    9. '	n' → logprob: -10.129441261291504
    10. '  ' → logprob: -10.254441261291504

Token 163: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07090981304645538
    2. '   ' → logprob: -3.0709097385406494
    3. 'now' → logprob: -4.3209099769592285
    4. ' n' → logprob: -5.3209099769592285
    5. 'for' → logprob: -5.9459099769592285
    6. ' for' → logprob: -7.8209099769592285
    7. ' ' → logprob: -8.19590950012207
    8. ' now' → logprob: -8.69590950012207
    9. 'nown' → logprob: -8.82090950012207
    10. 'l' → logprob: -9.19590950012207

Token 164: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0005106182070448995
    2. 'n' → logprob: -8.625510215759277
    3. ' now' → logprob: -9.250510215759277
    4. 'xor' → logprob: -9.500510215759277
    5. 'nown' → logprob: -9.875510215759277
    6. 'Now' → logprob: -10.500510215759277
    7. '```' → logprob: -11.250510215759277
    8. 'from' → logprob: -11.625510215759277
    9. 'cur' → logprob: -11.625510215759277
    10. '	now' → logprob: -11.625510215759277

Token 165: 'x' (ID: 87)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -2.129266067640856e-05
    2. 'x' → logprob: -11.375020980834961
    3. 'xr' → logprob: -12.500020980834961
    4. '_x' → logprob: -13.500020980834961
    5. 'or' → logprob: -13.500020980834961
    6. 'xo' → logprob: -14.375020980834961
    7. 'val' → logprob: -14.500020980834961
    8. ' xor' → logprob: -15.000020980834961
    9. 'X' → logprob: -15.125020980834961
    10. 'r' → logprob: -15.375020980834961

Token 166: 'sum' (ID: 12298)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -5.6100132496794686e-05
    2. 'xor' → logprob: -10.375056266784668
    3. 'r' → logprob: -12.000056266784668
    4. '   ' → logprob: -12.500056266784668
    5. 'orr' → logprob: -12.875056266784668
    6. 'ors' → logprob: -13.000056266784668
    7. ' xor' → logprob: -13.000056266784668
    8. '_x' → logprob: -13.375056266784668
    9. ' or' → logprob: -13.625056266784668
    10. '_or' → logprob: -14.000056266784668

Token 167: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193002820014954
    2. '=' → logprob: -1.5019299983978271
    3. ' ' → logprob: -14.376930236816406
    4. '   ' → logprob: -16.001930236816406
    5. ',' → logprob: -16.376930236816406
    6. ' is' → logprob: -16.376930236816406
    7. '<|end|>' → logprob: -17.501930236816406
    8. ')' → logprob: -17.626930236816406
    9. '  ' → logprob: -17.876930236816406
    10. '0' → logprob: -18.001930236816406

Token 168: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033657338470220566
    2. ' ' → logprob: -3.4086573123931885
    3. '   ' → logprob: -11.53365707397461
    4. 'the' → logprob: -14.28365707397461
    5. ' the' → logprob: -14.65865707397461
    6. '  ' → logprob: -14.90865707397461
    7. ' ' → logprob: -16.65865707397461
    8. 'n' → logprob: -16.78365707397461
    9. 'current' → logprob: -16.90865707397461
    10. ' current' → logprob: -17.47115707397461

Token 169: ' current' (ID: 2208)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0243520587682724
    2. ' ' → logprob: -3.7743520736694336
    3. 'current' → logprob: -7.399352073669434
    4. ' current' → logprob: -7.774352073669434
    5. 'xor' → logprob: -10.399352073669434
    6. '   ' → logprob: -11.149352073669434
    7. 'now' → logprob: -11.774352073669434
    8. 'n' → logprob: -12.649352073669434
    9. ' xor' → logprob: -12.649352073669434
    10. '  ' → logprob: -12.774352073669434

Token 170: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.02140631712973118
    2. ' xor' → logprob: -4.271406173706055
    3. 'x' → logprob: -5.646406173706055
    4. '^' → logprob: -6.021406173706055
    5. ' ^' → logprob: -7.896406173706055
    6. '0' → logprob: -7.896406173706055
    7. ' ' → logprob: -8.771406173706055
    8. ' XOR' → logprob: -8.896406173706055
    9. ' ^=' → logprob: -9.146406173706055
    10. '_x' → logprob: -9.896406173706055

Token 171: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6244136095046997
    2. '=' → logprob: -0.8744136095046997
    3. '   ' → logprob: -3.12441349029541
    4. ' of' → logprob: -6.74941349029541
    5. '<|end|>' → logprob: -6.87441349029541
    6. ' ' → logprob: -7.49941349029541
    7. '<|end|>' → logprob: -7.87441349029541
    8. '  ' → logprob: -9.74941349029541
    9. '    ' → logprob: -10.12441349029541
    10. '0' → logprob: -10.12441349029541

Token 172: ' the' (ID: 290)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3708176016807556
    2. ' A' → logprob: -1.6208176612854004
    3. '0' → logprob: -2.7458176612854004
    4. ' the' → logprob: -3.3708176612854004
    5. 'the' → logprob: -4.6208176612854
    6. ' ' → logprob: -5.6208176612854
    7. ' elements' → logprob: -11.495817184448242
    8. '   ' → logprob: -11.495817184448242
    9. 'The' → logprob: -11.620817184448242
    10. 'elements' → logprob: -12.370817184448242

Token 173: ' window' (ID: 5734)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7286861538887024
    2. 'window' → logprob: -0.9786861538887024
    3. ' window' → logprob: -2.6036860942840576
    4. ' A' → logprob: -2.7286860942840576
    5. ' current' → logprob: -7.728686332702637
    6. '   ' → logprob: -7.978686332702637
    7. 'current' → logprob: -8.228686332702637
    8. ' ' → logprob: -8.353686332702637
    9. 'w' → logprob: -8.728686332702637
    10. ' elements' → logprob: -8.853686332702637

Token 174: ' [' (ID: 723)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5670624375343323
    2. '   ' → logprob: -1.3170623779296875
    3. '=' → logprob: -1.8170623779296875
    4. ' ' → logprob: -6.9420623779296875
    5. '<|end|>' → logprob: -6.9420623779296875
    6. '[' → logprob: -8.942062377929688
    7. '0' → logprob: -9.567062377929688
    8. '  ' → logprob: -9.692062377929688
    9. '_' → logprob: -9.942062377929688
    10. '    ' → logprob: -10.192062377929688

Token 175: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.165027217415627e-05
    2. 'r' → logprob: -11.000021934509277
    3. ' l' → logprob: -13.000021934509277
    4. 'A' → logprob: -13.625021934509277
    5. '   ' → logprob: -14.250021934509277
    6. 'n' → logprob: -14.875021934509277
    7. ',' → logprob: -15.875021934509277
    8. ')' → logprob: -16.25002098083496
    9. '	l' → logprob: -16.87502098083496
    10. '```' → logprob: -17.00002098083496

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0235501267015934
    2. ',r' → logprob: -4.023550033569336
    3. 'r' → logprob: -5.398550033569336
    4. 'x' → logprob: -7.523550033569336
    5. '   ' → logprob: -9.273550033569336
    6. ' ,' → logprob: -9.273550033569336
    7. ',x' → logprob: -9.523550033569336
    8. ' r' → logprob: -11.523550033569336
    9. ',
' → logprob: -11.648550033569336
    10. ' ' → logprob: -11.898550033569336

Token 177: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00019817621796391904
    2. ' r' → logprob: -8.625198364257812
    3. '0' → logprob: -11.125198364257812
    4. '   ' → logprob: -13.000198364257812
    5. ' ' → logprob: -14.250198364257812
    6. ']' → logprob: -15.125198364257812
    7. ')' → logprob: -15.500198364257812
    8. 'x' → logprob: -15.750198364257812
    9. '```' → logprob: -17.000198364257812
    10. '  ' → logprob: -17.250198364257812

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002193908003391698
    2. '_)' → logprob: -9.750219345092773
    3. ')
' → logprob: -9.875219345092773
    4. '])' → logprob: -10.000219345092773
    5. '_' → logprob: -11.250219345092773
    6. '   ' → logprob: -11.375219345092773
    7. '))' → logprob: -12.125219345092773
    8. ' )' → logprob: -12.125219345092773
    9. '()' → logprob: -12.375219345092773
    10. ')`' → logprob: -12.750219345092773

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44301313161849976
    2. ' now' → logprob: -1.0680131912231445
    3. 'now' → logprob: -4.5680131912231445
    4. ' =' → logprob: -5.8180131912231445
    5. '=' → logprob: -7.8180131912231445
    6. '	now' → logprob: -8.693013191223145
    7. ' ' → logprob: -8.943013191223145
    8. '  ' → logprob: -9.443013191223145
    9. '[now' → logprob: -10.693013191223145
    10. '    ' → logprob: -11.068013191223145

Token 180: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.02095395140349865
    2. ' now' → logprob: -3.895953893661499
    3. '   ' → logprob: -8.145954132080078
    4. '0' → logprob: -9.145954132080078
    5. 'n' → logprob: -12.145954132080078
    6. ' ' → logprob: -12.395954132080078
    7. '	now' → logprob: -13.020954132080078
    8. '  ' → logprob: -13.895954132080078
    9. '[now' → logprob: -14.020954132080078
    10. '    ' → logprob: -14.770954132080078

Token 181: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.6550729419104755e-05
    2. 'xor' → logprob: -10.750036239624023
    3. '_x' → logprob: -11.875036239624023
    4. 'xs' → logprob: -12.375036239624023
    5. ' x' → logprob: -13.375036239624023
    6. '=' → logprob: -14.125036239624023
    7. '_' → logprob: -15.375036239624023
    8. 'xes' → logprob: -15.625036239624023
    9. 's' → logprob: -15.625036239624023
    10. '^' → logprob: -15.750036239624023

Token 182: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1629275381565094
    2. 's' → logprob: -1.912927508354187
    3. 'xor' → logprob: -6.537927627563477
    4. '=' → logprob: -7.537927627563477
    5. ' =' → logprob: -8.162927627563477
    6. 'x' → logprob: -9.162927627563477
    7. ' ^=' → logprob: -9.912927627563477
    8. '   ' → logprob: -9.912927627563477
    9. '^' → logprob: -10.287927627563477
    10. '_' → logprob: -10.412927627563477

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.251930236816406
    4. '   ' → logprob: -18.001930236816406
    5. '0' → logprob: -18.376930236816406
    6. ')' → logprob: -18.376930236816406
    7. '=

' → logprob: -18.751930236816406
    8. ' =
' → logprob: -19.126930236816406
    9. '=
' → logprob: -19.126930236816406
    10. ' ' → logprob: -19.626930236816406

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004889304982498288
    2. ' ' → logprob: -7.625488758087158
    3. '   ' → logprob: -13.875489234924316
    4. '  ' → logprob: -18.25048828125
    5. '<|end|>' → logprob: -18.25048828125
    6. '۰' → logprob: -19.00048828125
    7. '```' → logprob: -19.50048828125
    8. '=' → logprob: -20.25048828125
    9. ' ' → logprob: -20.62548828125
    10. '    ' → logprob: -20.68798828125

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.0
    4. '۰' → logprob: -19.0
    5. '000' → logprob: -20.0
    6. '00' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. '=' → logprob: -21.375
    9. '०' → logprob: -21.5
    10. '<|end|>' → logprob: -21.5

Token 186: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004950531758368015
    2. 'for' → logprob: -6.004950523376465
    3. ' for' → logprob: -6.504950523376465
    4. '
' → logprob: -7.004950523376465
    5. '    
' → logprob: -10.004950523376465
    6. '```' → logprob: -11.504950523376465
    7. '  ' → logprob: -13.004950523376465
    8. '	for' → logprob: -13.004950523376465
    9. '  
' → logprob: -13.129950523376465
    10. ' ' → logprob: -13.504950523376465

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031216692179441452
    2. 'for' → logprob: -3.531216621398926
    3. ' for' → logprob: -6.531216621398926
    4. '```' → logprob: -12.281216621398926
    5. 'def' → logprob: -13.406216621398926
    6. '	for' → logprob: -14.156216621398926
    7. '
' → logprob: -15.156216621398926
    8. '    
' → logprob: -15.156216621398926
    9. '   ' → logprob: -16.031217575073242
    10. 'l' → logprob: -16.406217575073242

Token 188: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00010568885772954673
    2. '   ' → logprob: -9.250105857849121
    3. ' for' → logprob: -11.625105857849121
    4. '```' → logprob: -14.875105857849121
    5. 'def' → logprob: -15.750105857849121
    6. '
' → logprob: -17.000104904174805
    7. 'l' → logprob: -17.000104904174805
    8. 'n' → logprob: -17.250104904174805
    9. 'from' → logprob: -17.875104904174805
    10. '	for' → logprob: -18.250104904174805

Token 189: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.008131654933094978
    2. 'l' → logprob: -4.883131504058838
    3. ' i' → logprob: -7.633131504058838
    4. ' ' → logprob: -10.758131980895996
    5. 'i' → logprob: -11.008131980895996
    6. '	l' → logprob: -13.883131980895996
    7. ' _' → logprob: -14.008131980895996
    8. ' ' → logprob: -14.383131980895996
    9. '_' → logprob: -15.133131980895996
    10. '_l' → logprob: -15.383131980895996

Token 190: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01605607196688652
    2. 'in' → logprob: -4.141056060791016
    3. ' ' → logprob: -11.516056060791016
    4. '   ' → logprob: -12.266056060791016
    5. '    ' → logprob: -12.766056060791016
    6. '	in' → logprob: -13.141056060791016
    7. ',' → logprob: -14.391056060791016
    8. 'n' → logprob: -15.016056060791016
    9. '_in' → logprob: -15.266056060791016
    10. 'In' → logprob: -15.641056060791016

Token 191: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022798418998718
    2. ' range' → logprob: -1.9102280139923096
    3. 'in' → logprob: -13.16022777557373
    4. '(range' → logprob: -14.41022777557373
    5. ' in' → logprob: -14.41022777557373
    6. '   ' → logprob: -14.78522777557373
    7. '	range' → logprob: -15.53522777557373
    8. ')' → logprob: -16.035228729248047
    9. ' ' → logprob: -16.785228729248047
    10. '```' → logprob: -17.035228729248047

Token 192: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011050770990550518
    2. '(' → logprob: -4.511050701141357
    3. '(len' → logprob: -13.511051177978516
    4. ' (' → logprob: -14.136051177978516
    5. '(
' → logprob: -14.386051177978516
    6. 'n' → logprob: -15.511051177978516
    7. '   ' → logprob: -16.636051177978516
    8. '(l' → logprob: -17.636051177978516
    9. '((' → logprob: -18.386051177978516
    10. '(N' → logprob: -18.511051177978516

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008424387313425541
    2. '):
' → logprob: -4.883424282073975
    3. '   ' → logprob: -7.383424282073975
    4. ' ):' → logprob: -9.133424758911133
    5. ')' → logprob: -9.883424758911133
    6. '+' → logprob: -11.133424758911133
    7. ':' → logprob: -11.383424758911133
    8. '       ' → logprob: -11.883424758911133
    9. ' ):
' → logprob: -13.883424758911133
    10. ' ' → logprob: -14.258424758911133

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00504910247400403
    2. '   ' → logprob: -5.630049228668213
    3. '    ' → logprob: -7.505049228668213
    4. '        
' → logprob: -7.505049228668213
    5. '<|end|>' → logprob: -9.380048751831055
    6. ' ' → logprob: -9.630048751831055
    7. ' 
' → logprob: -10.380048751831055
    8. '    
' → logprob: -10.380048751831055
    9. ' while' → logprob: -10.505048751831055
    10. ':' → logprob: -11.005048751831055

Token 195: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1279306560754776
    2. 'while' → logprob: -2.1279306411743164
    3. ' while' → logprob: -7.002930641174316
    4. '   ' → logprob: -9.502930641174316
    5. '	while' → logprob: -11.377930641174316
    6. '    ' → logprob: -13.127930641174316
    7. '        
' → logprob: -13.502930641174316
    8. 'While' → logprob: -13.752930641174316
    9. '```' → logprob: -14.252930641174316
    10. '           ' → logprob: -14.627930641174316

Token 196: ' Expand' (ID: 81299)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0004255508247297257
    2. ' while' → logprob: -8.000425338745117
    3. '       ' → logprob: -10.000425338745117
    4. '   ' → logprob: -10.375425338745117
    5. 'While' → logprob: -11.500425338745117
    6. '           ' → logprob: -13.875425338745117
    7. '#' → logprob: -14.250425338745117
    8. '
' → logprob: -14.375425338745117
    9. '	while' → logprob: -14.375425338745117
    10. '    ' → logprob: -15.375425338745117

Token 197: ' the' (ID: 290)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6981664299964905
    2. ' while' → logprob: -0.8231664299964905
    3. ' the' → logprob: -2.9481663703918457
    4. 'the' → logprob: -5.323166370391846
    5. '   ' → logprob: -5.948166370391846
    6. '       ' → logprob: -6.073166370391846
    7. '	while' → logprob: -7.823166370391846
    8. 'r' → logprob: -7.823166370391846
    9. '    ' → logprob: -8.448166847229004
    10. ' r' → logprob: -8.948166847229004

Token 198: ' right' (ID: 1849)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0015622387873008847
    2. ' while' → logprob: -6.501562118530273
    3. '   ' → logprob: -10.376562118530273
    4. '       ' → logprob: -10.501562118530273
    5. ' ' → logprob: -14.751562118530273
    6. '    ' → logprob: -15.251562118530273
    7. '	while' → logprob: -15.626562118530273
    8. '           ' → logprob: -15.751562118530273
    9. '  ' → logprob: -16.001562118530273
    10. '```' → logprob: -16.376562118530273

Token 199: ' boundary' (ID: 35021)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3845893144607544
    2. 'endpoint' → logprob: -1.6345893144607544
    3. ' endpoint' → logprob: -3.134589195251465
    4. ' while' → logprob: -3.759589195251465
    5. '_endpoint' → logprob: -4.509589195251465
    6. '   ' → logprob: -4.509589195251465
    7. 'pointer' → logprob: -4.634589195251465
    8. '       ' → logprob: -4.884589195251465
    9. 'boundary' → logprob: -5.634589195251465
    10. ')' → logprob: -6.134589195251465

Token 200: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0269461702555418
    2. ' while' → logprob: -4.151946067810059
    3. 'while' → logprob: -4.526946067810059
    4. '	while' → logprob: -11.526946067810059
    5. ' to' → logprob: -12.151946067810059
    6. '           ' → logprob: -12.276946067810059
    7. '   ' → logprob: -12.276946067810059
    8. '<|end|>' → logprob: -12.526946067810059
    9. ',' → logprob: -13.026946067810059
    10. '        ' → logprob: -13.276946067810059

Token 201: 'r' (ID: 81)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04241470992565155
    2. ' while' → logprob: -3.542414665222168
    3. 'r' → logprob: -4.417414665222168
    4. ')' → logprob: -7.792414665222168
    5. '       ' → logprob: -10.167414665222168
    6. ' r' → logprob: -10.917414665222168
    7. '   ' → logprob: -11.417414665222168
    8. '	while' → logprob: -11.542414665222168
    9. '           ' → logprob: -11.667414665222168
    10. 'While' → logprob: -12.042414665222168

Token 202: ')' (ID: 8)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.33400118350982666
    2. ' while' → logprob: -1.3340011835098267
    3. ')' → logprob: -4.084001064300537
    4. '       ' → logprob: -6.459001064300537
    5. '	while' → logprob: -7.459001064300537
    6. '           ' → logprob: -7.959001064300537
    7. '   ' → logprob: -8.084001541137695
    8. ',' → logprob: -8.459001541137695
    9. 'While' → logprob: -9.084001541137695
    10. '<|end|>' → logprob: -9.834001541137695

Token 203: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4209759831428528
    2. 'while' → logprob: -1.545975923538208
    3. ' while' → logprob: -2.045975923538208
    4. '<|end|>' → logprob: -7.920976161956787
    5. ',' → logprob: -8.170975685119629
    6. '	while' → logprob: -8.420975685119629
    7. '        ' → logprob: -9.545975685119629
    8. '        
' → logprob: -9.795975685119629
    9. '           ' → logprob: -9.920975685119629
    10. ' if' → logprob: -10.545975685119629

Token 204: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11897965520620346
    2. 'the' → logprob: -2.2439796924591064
    3. ' while' → logprob: -5.743979454040527
    4. 'while' → logprob: -5.993979454040527
    5. '<|end|>' → logprob: -8.868979454040527
    6. 'A' → logprob: -9.243979454040527
    7. '   ' → logprob: -9.618979454040527
    8. ' A' → logprob: -9.868979454040527
    9. 'r' → logprob: -11.118979454040527
    10. ' ' → logprob: -11.743979454040527

Token 205: ' window' (ID: 5734)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.41173210740089417
    2. ' while' → logprob: -1.1617320775985718
    3. 'window' → logprob: -4.411732196807861
    4. ' window' → logprob: -4.536732196807861
    5. '   ' → logprob: -6.536732196807861
    6. ' current' → logprob: -8.786731719970703
    7. 'current' → logprob: -9.786731719970703
    8. ' ' → logprob: -11.536731719970703
    9. '       ' → logprob: -11.661731719970703
    10. '  ' → logprob: -12.286731719970703

Token 206: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04158463329076767
    2. ' while' → logprob: -3.2915847301483154
    3. 'while' → logprob: -5.666584491729736
    4. ' to' → logprob: -10.791584968566895
    5. '	while' → logprob: -10.916584968566895
    6. ',' → logprob: -11.416584968566895
    7. '        
' → logprob: -12.041584968566895
    8. '        ' → logprob: -12.166584968566895
    9. '           ' → logprob: -12.541584968566895
    10. '<|end|>' → logprob: -12.541584968566895

Token 207: ' much' (ID: 2009)
  Prédit: ' long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' long' → logprob: -0.6965831518173218
    2. 'long' → logprob: -0.6965831518173218
    3. 'while' → logprob: -6.446583271026611
    4. '   ' → logprob: -7.196583271026611
    5. '       ' → logprob: -8.446582794189453
    6. 'far' → logprob: -8.446582794189453
    7. ' far' → logprob: -8.571582794189453
    8. 'much' → logprob: -8.571582794189453
    9. '           ' → logprob: -8.946582794189453
    10. ' much' → logprob: -9.321582794189453

Token 208: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.13022275269031525
    2. 'as' → logprob: -2.130222797393799
    3. '    ' → logprob: -6.255222797393799
    4. '   ' → logprob: -7.755222797393799
    5. '       ' → logprob: -8.13022232055664
    6. '           ' → logprob: -8.38022232055664
    7. '        ' → logprob: -8.63022232055664
    8. '          ' → logprob: -9.75522232055664
    9. '            ' → logprob: -9.88022232055664
    10. '      ' → logprob: -10.38022232055664

Token 209: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.1605934202671051
    2. ' possible' → logprob: -1.9105933904647827
    3. '   ' → logprob: -8.535593032836914
    4. 'r' → logprob: -9.910593032836914
    5. 'A' → logprob: -10.035593032836914
    6. '_possible' → logprob: -10.035593032836914
    7. 'while' → logprob: -11.785593032836914
    8. ' posible' → logprob: -12.035593032836914
    9. ' r' → logprob: -12.160593032836914
    10. ' A' → logprob: -12.785593032836914

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024344492703676224
    2. ' while' → logprob: -3.8993444442749023
    3. 'while' → logprob: -5.649344444274902
    4. ',' → logprob: -8.899344444274902
    5. ' to' → logprob: -9.774344444274902
    6. '        ' → logprob: -11.274344444274902
    7. '        
' → logprob: -11.274344444274902
    8. '	while' → logprob: -11.399344444274902
    9. ':' → logprob: -11.649344444274902
    10. ' with' → logprob: -12.024344444274902

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018885541707277298
    2. ' while' → logprob: -4.143885612487793
    3. 'while' → logprob: -5.893885612487793
    4. '        
' → logprob: -10.643885612487793
    5. ',' → logprob: -11.018885612487793
    6. ' to' → logprob: -11.393885612487793
    7. '           ' → logprob: -11.518885612487793
    8. '	while' → logprob: -11.893885612487793
    9. '        ' → logprob: -12.018885612487793
    10. ' with' → logprob: -12.518885612487793

Token 212: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.725297212600708
    2. 'while' → logprob: -0.975297212600708
    3. '       ' → logprob: -1.975297212600708
    4. '   ' → logprob: -11.725296974182129
    5. '	while' → logprob: -11.725296974182129
    6. '    ' → logprob: -14.100296974182129
    7. 'While' → logprob: -14.225296974182129
    8. '           ' → logprob: -14.475296974182129
    9. '        ' → logprob: -14.600296974182129
    10. '      ' → logprob: -16.225297927856445

Token 213: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7986970543861389
    2. ' while' → logprob: -1.1736969947814941
    3. '       ' → logprob: -1.4236969947814941
    4. '   ' → logprob: -11.048697471618652
    5. '	while' → logprob: -11.423697471618652
    6. 'While' → logprob: -12.048697471618652
    7. '        ' → logprob: -12.798697471618652
    8. '    ' → logprob: -13.173697471618652
    9. '           ' → logprob: -13.298697471618652
    10. '```' → logprob: -14.923697471618652

Token 214: ' the' (ID: 290)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04320197552442551
    2. ' r' → logprob: -3.1682019233703613
    3. '(r' → logprob: -9.04320240020752
    4. 'n' → logprob: -10.66820240020752
    5. '   ' → logprob: -10.79320240020752
    6. ' (' → logprob: -10.91820240020752
    7. ' ' → logprob: -12.04320240020752
    8. ' n' → logprob: -12.54320240020752
    9. '(' → logprob: -13.16820240020752
    10. '(
' → logprob: -13.29320240020752

Token 215: ' condition' (ID: 7060)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007628988474607468
    2. ' r' → logprob: -4.882628917694092
    3. '   ' → logprob: -11.00762939453125
    4. ' ' → logprob: -13.13262939453125
    5. '
' → logprob: -13.63262939453125
    6. '(r' → logprob: -14.13262939453125
    7. '       ' → logprob: -14.25762939453125
    8. '	r' → logprob: -15.13262939453125
    9. '_r' → logprob: -15.38262939453125
    10. '           ' → logprob: -15.63262939453125

Token 216: ' is' (ID: 382)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5846288204193115
    2. 'r' → logprob: -1.7096288204193115
    3. ' n' → logprob: -2.0846288204193115
    4. ' A' → logprob: -3.2096288204193115
    5. ' (' → logprob: -3.2096288204193115
    6. 'A' → logprob: -3.9596288204193115
    7. '   ' → logprob: -4.209629058837891
    8. 'n' → logprob: -4.334629058837891
    9. ' ' → logprob: -5.584629058837891
    10. '(r' → logprob: -6.584629058837891

Token 217: ' satisfied' (ID: 23121)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2740992605686188
    2. ' r' → logprob: -1.5240992307662964
    3. ' n' → logprob: -5.024099349975586
    4. 'n' → logprob: -5.274099349975586
    5. ' (' → logprob: -5.774099349975586
    6. '   ' → logprob: -5.899099349975586
    7. '(r' → logprob: -5.899099349975586
    8. '(n' → logprob: -7.274099349975586
    9. 'A' → logprob: -8.899099349975586
    10. ' A' → logprob: -9.274099349975586

Token 218: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015449762577190995
    2. ' while' → logprob: -6.751544952392578
    3. 'while' → logprob: -8.626544952392578
    4. '        
' → logprob: -9.126544952392578
    5. '
' → logprob: -10.501544952392578
    6. '        ' → logprob: -11.126544952392578
    7. '           ' → logprob: -11.626544952392578
    8. '   ' → logprob: -11.751544952392578
    9. ',' → logprob: -12.001544952392578
    10. '	while' → logprob: -12.876544952392578

Token 219: ' sum' (ID: 4215)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.858900249004364
    2. ' while' → logprob: -1.1089003086090088
    3. '       ' → logprob: -1.6089003086090088
    4. ' r' → logprob: -4.10890007019043
    5. '           ' → logprob: -4.35890007019043
    6. 'r' → logprob: -4.35890007019043
    7. 'if' → logprob: -6.60890007019043
    8. ' if' → logprob: -6.85890007019043
    9. '   ' → logprob: -7.10890007019043
    10. '        ' → logprob: -7.10890007019043

Token 220: ' ==' (ID: 951)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03557924926280975
    2. '+' → logprob: -3.660579204559326
    3. '   ' → logprob: -4.785579204559326
    4. '_' → logprob: -8.285579681396484
    5. 'A' → logprob: -8.910579681396484
    6. ' ' → logprob: -9.285579681396484
    7. '    ' → logprob: -9.535579681396484
    8. ' ==' → logprob: -9.785579681396484
    9. '+A' → logprob: -10.035579681396484
    10. ' +=' → logprob: -10.410579681396484

Token 221: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.3600049912929535
    2. 'now' → logprob: -1.6100050210952759
    3. ' now' → logprob: -2.9850049018859863
    4. ' xor' → logprob: -3.6100049018859863
    5. '(now' → logprob: -4.735004901885986
    6. ' (' → logprob: -5.610004901885986
    7. 'X' → logprob: -6.110004901885986
    8. 'x' → logprob: -6.235004901885986
    9. '(n' → logprob: -6.485004901885986
    10. ' XOR' → logprob: -6.610004901885986

Token 222: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005524366861209273
    2. ' while' → logprob: -8.6255521774292
    3. ' and' → logprob: -9.0005521774292
    4. '        
' → logprob: -9.1255521774292
    5. ',' → logprob: -10.2505521774292
    6. 'while' → logprob: -10.8755521774292
    7. '           ' → logprob: -11.0005521774292
    8. '   ' → logprob: -11.0005521774292
    9. '
' → logprob: -11.1255521774292
    10. '<|end|>' → logprob: -12.1255521774292

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.452426608419046e-05
    2. ' while' → logprob: -11.12503433227539
    3. '        
' → logprob: -11.87503433227539
    4. 'while' → logprob: -12.00003433227539
    5. '           ' → logprob: -13.25003433227539
    6. '
' → logprob: -13.62503433227539
    7. '   ' → logprob: -13.75003433227539
    8. '```' → logprob: -14.00003433227539
    9. ',' → logprob: -15.00003433227539
    10. '	while' → logprob: -15.12503433227539

Token 224: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.12886911630630493
    2. '       ' → logprob: -2.12886905670166
    3. ' while' → logprob: -6.25386905670166
    4. '   ' → logprob: -11.75386905670166
    5. '	while' → logprob: -11.87886905670166
    6. '```' → logprob: -14.50386905670166
    7. '           ' → logprob: -14.75386905670166
    8. 'While' → logprob: -14.87886905670166
    9. '    ' → logprob: -17.128870010375977
    10. '	' → logprob: -17.253870010375977

Token 225: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.348550945520401
    2. ' r' → logprob: -1.2235509157180786
    3. '   ' → logprob: -9.223550796508789
    4. ' ' → logprob: -12.973550796508789
    5. '(r' → logprob: -13.223550796508789
    6. '	r' → logprob: -13.223550796508789
    7. '
' → logprob: -14.973550796508789
    8. ' ' → logprob: -15.348550796508789
    9. ' (' → logprob: -15.598550796508789
    10. '_r' → logprob: -15.723550796508789

Token 226: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.027167540043592453
    2. '<' → logprob: -3.777167558670044
    3. '<n' → logprob: -5.652167320251465
    4. '<len' → logprob: -7.902167320251465
    5. ' <=' → logprob: -10.902167320251465
    6. '<size' → logprob: -12.027167320251465
    7. '<=' → logprob: -12.777167320251465
    8. '   ' → logprob: -13.277167320251465
    9. ' ' → logprob: -13.777167320251465
    10. '<num' → logprob: -14.027167320251465

Token 227: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015860427811276168
    2. ' n' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.375158309936523
    4. '
' → logprob: -17.375158309936523
    5. '	n' → logprob: -17.625158309936523
    6. ')n' → logprob: -19.500158309936523
    7. '```' → logprob: -20.250158309936523
    8. ')' → logprob: -21.125158309936523
    9. ' ' → logprob: -21.250158309936523
    10. '<n' → logprob: -21.500158309936523

Token 228: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519362270832062
    2. 'and' → logprob: -1.5019361972808838
    3. ' ' → logprob: -12.751935958862305
    4. '   ' → logprob: -12.751935958862305
    5. '    ' → logprob: -14.126935958862305
    6. '	and' → logprob: -16.001935958862305
    7. '           ' → logprob: -16.126935958862305
    8. '       ' → logprob: -16.251935958862305
    9. '        ' → logprob: -16.501935958862305
    10. ' ' → logprob: -16.751935958862305

Token 229: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05781617760658264
    2. ' (' → logprob: -3.55781626701355
    3. '((' → logprob: -4.432816028594971
    4. 'n' → logprob: -4.557816028594971
    5. '(A' → logprob: -5.432816028594971
    6. '   ' → logprob: -8.432816505432129
    7. ' n' → logprob: -8.682816505432129
    8. '(' → logprob: -8.932816505432129
    9. ' ((' → logprob: -9.557816505432129
    10. '(not' → logprob: -9.807816505432129

Token 230: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5235021710395813
    2. '(n' → logprob: -0.8985021710395813
    3. ' (' → logprob: -9.273502349853516
    4. '(' → logprob: -9.648502349853516
    5. '((' → logprob: -9.773502349853516
    6. '(A' → logprob: -9.898502349853516
    7. 'now' → logprob: -10.398502349853516
    8. ' n' → logprob: -10.773502349853516
    9. '(now' → logprob: -11.148502349853516
    10. '   ' → logprob: -11.398502349853516

Token 231: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -6.630610641877865e-06
    2. 'ow' → logprob: -12.750006675720215
    3. 'n' → logprob: -13.375006675720215
    4. ')' → logprob: -15.375006675720215
    5. ' +' → logprob: -15.375006675720215
    6. 'ws' → logprob: -15.750006675720215
    7. '+' → logprob: -15.875006675720215
    8. '   ' → logprob: -15.875006675720215
    9. 'o' → logprob: -15.875006675720215
    10. 'ots' → logprob: -16.0000057220459

Token 232: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0006164124351926148
    2. 'sum' → logprob: -7.500616550445557
    3. '+' → logprob: -10.250616073608398
    4. 'up' → logprob: -12.000616073608398
    5. '   ' → logprob: -12.250616073608398
    6. 'u' → logprob: -12.875616073608398
    7. 'ум' → logprob: -12.875616073608398
    8. ' ' → logprob: -13.375616073608398
    9. ' +' → logprob: -13.875616073608398
    10. '-' → logprob: -13.875616073608398

Token 233: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4291027784347534
    2. ' +' → logprob: -1.0541027784347534
    3. '   ' → logprob: -8.179102897644043
    4. ' ' → logprob: -10.054102897644043
    5. '    ' → logprob: -10.679102897644043
    6. ')' → logprob: -10.679102897644043
    7. ' ' → logprob: -12.304102897644043
    8. '  ' → logprob: -12.304102897644043
    9. ' plus' → logprob: -12.304102897644043
    10. '     ' → logprob: -12.554102897644043

Token 234: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003013809327967465
    2. ' A' → logprob: -8.125301361083984
    3. '   ' → logprob: -12.250301361083984
    4. ' ' → logprob: -15.500301361083984
    5. '           ' → logprob: -15.875301361083984
    6. '       ' → logprob: -16.000301361083984
    7. ')' → logprob: -17.375301361083984
    8. '	A' → logprob: -17.500301361083984
    9. '
' → logprob: -17.625301361083984
    10. '```' → logprob: -17.750301361083984

Token 235: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -13.000003814697266
    3. 'r' → logprob: -13.500003814697266
    4. '[
' → logprob: -15.375003814697266
    5. ' [' → logprob: -17.250003814697266
    6. '_r' → logprob: -17.250003814697266
    7. '	r' → logprob: -17.500003814697266
    8. '
' → logprob: -17.625003814697266
    9. '[n' → logprob: -17.750003814697266
    10. '

' → logprob: -17.875003814697266

Token 236: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015148617094382644
    2. ')==' → logprob: -7.126514911651611
    3. '==' → logprob: -7.626514911651611
    4. ' )' → logprob: -8.876514434814453
    5. ' ==' → logprob: -9.501514434814453
    6. '[' → logprob: -13.126514434814453
    7. ' ' → logprob: -13.251514434814453
    8. '   ' → logprob: -14.001514434814453
    9. ')^' → logprob: -14.376514434814453
    10. ')
' → logprob: -15.001514434814453

Token 237: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025766486302018166
    2. '==' → logprob: -3.900766372680664
    3. ')==' → logprob: -5.900766372680664
    4. ' ==' → logprob: -6.150766372680664
    5. ' )' → logprob: -8.150766372680664
    6. ' ' → logprob: -10.525766372680664
    7. '   ' → logprob: -11.775766372680664
    8. '+' → logprob: -12.525766372680664
    9. '=' → logprob: -12.650766372680664
    10. '[' → logprob: -13.275766372680664

Token 238: ' (' (ID: 350)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.1658543199300766
    2. '(now' → logprob: -2.7908542156219482
    3. '(n' → logprob: -3.0408542156219482
    4. ' now' → logprob: -3.7908542156219482
    5. 'n' → logprob: -4.415854454040527
    6. '   ' → logprob: -5.165854454040527
    7. '[now' → logprob: -6.790854454040527
    8. ' (' → logprob: -6.790854454040527
    9. ' n' → logprob: -7.915854454040527
    10. ' ' → logprob: -8.165854454040527

Token 239: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.00022690063633490354
    2. ' now' → logprob: -8.750226974487305
    3. '   ' → logprob: -10.625226974487305
    4. 'n' → logprob: -10.750226974487305
    5. '[now' → logprob: -11.250226974487305
    6. '(now' → logprob: -12.125226974487305
    7. 'nown' → logprob: -13.750226974487305
    8. '	now' → logprob: -13.750226974487305
    9. ' ' → logprob: -14.250226974487305
    10. ')' → logprob: -14.500226974487305

Token 240: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.988221684878226e-06
    2. 'xor' → logprob: -12.000006675720215
    3. ' x' → logprob: -15.625006675720215
    4. 'r' → logprob: -16.50000762939453
    5. ')' → logprob: -16.75000762939453
    6. 'xs' → logprob: -16.87500762939453
    7. 's' → logprob: -17.25000762939453
    8. '```' → logprob: -17.31250762939453
    9. '
' → logprob: -17.37500762939453
    10. ')x' → logprob: -17.43750762939453

Token 241: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00014573395310435444
    2. 's' → logprob: -9.25014591217041
    3. 'xor' → logprob: -10.12514591217041
    4. 'now' → logprob: -12.25014591217041
    5. 'or' → logprob: -12.87514591217041
    6. 'x' → logprob: -14.37514591217041
    7. ')' → logprob: -14.50014591217041
    8. 'um' → logprob: -15.75014591217041
    9. '```' → logprob: -16.000144958496094
    10. '   ' → logprob: -16.000144958496094

Token 242: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.5237830877304077
    2. '^' → logprob: -0.8987830877304077
    3. ' ' → logprob: -7.648783206939697
    4. ')' → logprob: -9.273782730102539
    5. ' ' → logprob: -10.148782730102539
    6. ' xor' → logprob: -10.648782730102539
    7. '   ' → logprob: -12.148782730102539
    8. ')^' → logprob: -12.523782730102539
    9. 'xor' → logprob: -12.898782730102539
    10. '^)' → logprob: -13.023782730102539

Token 243: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03808223456144333
    2. ' A' → logprob: -3.2880821228027344
    3. '   ' → logprob: -10.913082122802734
    4. ' ' → logprob: -10.913082122802734
    5. '  ' → logprob: -13.163082122802734
    6. '    ' → logprob: -14.038082122802734
    7. '       ' → logprob: -14.663082122802734
    8. '     ' → logprob: -15.038082122802734
    9. '         ' → logprob: -15.538082122802734
    10. '      ' → logprob: -15.663082122802734

Token 244: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0007108822464942932
    2. 'r' → logprob: -7.250710964202881
    3. '[' → logprob: -14.625710487365723
    4. '[
' → logprob: -14.875710487365723
    5. '	r' → logprob: -17.37571144104004
    6. '   ' → logprob: -17.37571144104004
    7. '
' → logprob: -17.37571144104004
    8. ')' → logprob: -17.87571144104004
    9. ' r' → logprob: -17.87571144104004
    10. '(r' → logprob: -18.00071144104004

Token 245: '])):
' (ID: 145266)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.2059747278690338
    2. ')):' → logprob: -1.7059746980667114
    3. '))' → logprob: -5.830974578857422
    4. ')' → logprob: -6.580974578857422
    5. ')):
' → logprob: -9.705974578857422
    6. '):
' → logprob: -10.205974578857422
    7. ' ' → logprob: -10.330974578857422
    8. '):' → logprob: -10.455974578857422
    9. '')):
' → logprob: -11.080974578857422
    10. '   ' → logprob: -11.080974578857422

Token 246: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7392183542251587
    2. ':' → logprob: -0.8642183542251587
    3. '           ' → logprob: -3.364218235015869
    4. '):' → logprob: -3.364218235015869
    5. ':
' → logprob: -3.739218235015869
    6. '):
' → logprob: -5.489218235015869
    7. ' :' → logprob: -6.489218235015869
    8. ')' → logprob: -7.239218235015869
    9. '<|end|>' → logprob: -8.489218711853027
    10. ',' → logprob: -8.489218711853027

Token 247: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6287758350372314
    2. 'n' (adapté à ' n') → logprob: -0.8787758350372314
    3. '       ' → logprob: -3.0037758350372314
    4. '           ' → logprob: -6.753775596618652
    5. '               ' → logprob: -7.503775596618652
    6. '   ' → logprob: -9.753775596618652
    7. '	n' → logprob: -10.753775596618652
    8. ' ' → logprob: -11.503775596618652
    9. '_n' → logprob: -11.878775596618652
    10. '(n' → logprob: -11.878775596618652

Token 248: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -1.4259644558478612e-05
    2. 'ow' → logprob: -11.500014305114746
    3. '       ' → logprob: -13.500014305114746
    4. '           ' → logprob: -14.500014305114746
    5. ' +=' → logprob: -14.750014305114746
    6. '   ' → logprob: -14.750014305114746
    7. 'oys' → logprob: -14.750014305114746
    8. 'owski' → logprob: -16.50001335144043
    9. '+=' → logprob: -16.62501335144043
    10. ')' → logprob: -16.75001335144043

Token 249: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0032006469555199146
    2. 'sum' → logprob: -6.003200531005859
    3. 'r' → logprob: -7.503200531005859
    4. '   ' → logprob: -9.62820053100586
    5. 'up' → logprob: -10.25320053100586
    6. '=' → logprob: -10.75320053100586
    7. '           ' → logprob: -12.37820053100586
    8. 'u' → logprob: -12.50320053100586
    9. ' +=' → logprob: -12.62820053100586
    10. 'ow' → logprob: -12.62820053100586

Token 250: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5985786318778992
    2. ' +=' → logprob: -0.8485786318778992
    3. '+' → logprob: -3.848578691482544
    4. ' +' → logprob: -7.223578453063965
    5. '   ' → logprob: -8.598578453063965
    6. '=' → logprob: -9.598578453063965
    7. '    ' → logprob: -9.723578453063965
    8. ']+=' → logprob: -11.848578453063965
    9. '       ' → logprob: -12.348578453063965
    10. '  ' → logprob: -12.348578453063965

Token 251: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.061968132853507996
    2. ' A' → logprob: -2.8119680881500244
    3. '   ' → logprob: -14.811967849731445
    4. '           ' → logprob: -16.561967849731445
    5. '	A' → logprob: -18.186967849731445
    6. ' ' → logprob: -18.436967849731445
    7. '       ' → logprob: -20.436967849731445
    8. '  ' → logprob: -20.686967849731445
    9. '    ' → logprob: -20.686967849731445
    10. '               ' → logprob: -20.811967849731445

Token 252: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.125000953674316
    3. 'r' → logprob: -15.875000953674316
    4. ' [' → logprob: -17.75
    5. '   ' → logprob: -19.75
    6. '[R' → logprob: -20.0
    7. '[
' → logprob: -21.625
    8. '(r' → logprob: -22.0
    9. '```' → logprob: -22.125
    10. '\[' → logprob: -22.625

Token 253: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3584509789943695
    2. ']
' → logprob: -1.233451008796692
    3. '[r' → logprob: -4.858450889587402
    4. '   ' → logprob: -6.983450889587402
    5. ')' → logprob: -8.108450889587402
    6. ' ]' → logprob: -8.358450889587402
    7. ')
' → logprob: -8.358450889587402
    8. '[
' → logprob: -8.608450889587402
    9. '       ' → logprob: -9.108450889587402
    10. 'r' → logprob: -9.858450889587402

Token 254: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008807079866528511
    2. '
' → logprob: -5.508807182312012
    3. ' now' → logprob: -6.758807182312012
    4. '       ' → logprob: -6.883807182312012
    5. ' 
' → logprob: -7.258807182312012
    6. '            
' → logprob: -7.633807182312012
    7. '               ' → logprob: -8.133807182312012
    8. '[now' → logprob: -8.383807182312012
    9. '   ' → logprob: -8.883807182312012
    10. '<|end|>' → logprob: -8.883807182312012

Token 255: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02339385822415352
    2. 'r' → logprob: -4.148393630981445
    3. '       ' → logprob: -5.523393630981445
    4. '<|end|>' → logprob: -7.273393630981445
    5. '               ' → logprob: -7.523393630981445
    6. '
' → logprob: -7.648393630981445
    7. '            
' → logprob: -8.023393630981445
    8. ')' → logprob: -8.273393630981445
    9. '   ' → logprob: -8.273393630981445
    10. ' 
' → logprob: -8.648393630981445

Token 256: ' Add' (ID: 4063)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.07948506623506546
    2. ' now' → logprob: -2.5794851779937744
    3. 'r' → logprob: -7.954484939575195
    4. '           ' → logprob: -8.579484939575195
    5. '   ' → logprob: -10.954484939575195
    6. ' r' → logprob: -12.204484939575195
    7. 'n' → logprob: -12.204484939575195
    8. '	now' → logprob: -12.204484939575195
    9. '<|end|>' → logprob: -12.329484939575195
    10. '    ' → logprob: -12.829484939575195

Token 257: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2014213353395462
    2. ' A' → logprob: -1.7014213800430298
    3. '   ' → logprob: -12.951421737670898
    4. ' ' → logprob: -13.201421737670898
    5. ')' → logprob: -13.951421737670898
    6. '<|end|>' → logprob: -13.951421737670898
    7. '	A' → logprob: -14.701421737670898
    8. '    ' → logprob: -14.826421737670898
    9. '           ' → logprob: -15.326421737670898
    10. '(A' → logprob: -15.326421737670898

Token 258: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.625003814697266
    3. 'r' → logprob: -14.500003814697266
    4. '   ' → logprob: -15.125003814697266
    5. ' [' → logprob: -16.000003814697266
    6. '       ' → logprob: -18.000003814697266
    7. '[
' → logprob: -18.125003814697266
    8. '[R' → logprob: -18.625003814697266
    9. '           ' → logprob: -18.750003814697266
    10. '```' → logprob: -18.875003814697266

Token 259: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07498299330472946
    2. ']
' → logprob: -2.8249828815460205
    3. ')' → logprob: -5.1999831199646
    4. '[r' → logprob: -5.1999831199646
    5. ')
' → logprob: -6.8249831199646
    6. '])' → logprob: -7.9499831199646
    7. '   ' → logprob: -8.449982643127441
    8. ' ]' → logprob: -9.449982643127441
    9. '       ' → logprob: -10.449982643127441
    10. '           ' → logprob: -10.824982643127441

Token 260: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: ' current' (ID: 2208)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02015700750052929
    2. ' n' → logprob: -4.0201568603515625
    3. ' the' → logprob: -6.8951568603515625
    4. 'the' → logprob: -7.2701568603515625
    5. 'sum' → logprob: -8.645156860351562
    6. 'r' → logprob: -9.770156860351562
    7. 'now' → logprob: -10.645156860351562
    8. ' sum' → logprob: -10.895156860351562
    9. ' now' → logprob: -12.395156860351562
    10. '   ' → logprob: -12.520156860351562

Token 262: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09982354938983917
    2. 'n' → logprob: -2.474823474884033
    3. ' sum' → logprob: -4.599823474884033
    4. ' n' → logprob: -7.849823474884033
    5. 'r' → logprob: -8.849823951721191
    6. '_sum' → logprob: -9.224823951721191
    7. 's' → logprob: -10.224823951721191
    8. '<|end|>' → logprob: -10.224823951721191
    9. 'token' → logprob: -11.099823951721191
    10. ')' → logprob: -11.099823951721191

Token 263: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00911084283143282
    2. '       ' → logprob: -6.009110927581787
    3. 'r' → logprob: -6.134110927581787
    4. '
' → logprob: -6.259110927581787
    5. '            
' → logprob: -6.759110927581787
    6. '               ' → logprob: -8.509110450744629
    7. '<|end|>' → logprob: -8.759110450744629
    8. '   ' → logprob: -8.884110450744629
    9. 'n' → logprob: -9.009110450744629
    10. ' 
' → logprob: -9.134110450744629

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02942296676337719
    2. ' now' → logprob: -3.7794229984283447
    3. 'now' → logprob: -5.154422760009766
    4. '[now' → logprob: -8.404422760009766
    5. '            
' → logprob: -10.279422760009766
    6. '       ' → logprob: -10.779422760009766
    7. '               ' → logprob: -11.029422760009766
    8. 'r' → logprob: -11.279422760009766
    9. '```' → logprob: -11.279422760009766
    10. ',' → logprob: -11.779422760009766

Token 265: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.03844420984387398
    2. ' now' → logprob: -3.4134442806243896
    3. '           ' → logprob: -5.4134440422058105
    4. 'r' → logprob: -8.288444519042969
    5. '   ' → logprob: -10.413444519042969
    6. '               ' → logprob: -10.538444519042969
    7. '            ' → logprob: -11.413444519042969
    8. '       ' → logprob: -12.788444519042969
    9. '```' → logprob: -13.163444519042969
    10. ' r' → logprob: -13.163444519042969

Token 266: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. 'xor' → logprob: -15.375000953674316
    3. ' x' → logprob: -15.875000953674316
    4. 'xs' → logprob: -17.25
    5. '_x' → logprob: -17.375
    6. 'r' → logprob: -17.75
    7. '```' → logprob: -17.875
    8. 's' → logprob: -18.3125
    9. 'xr' → logprob: -18.75
    10. '=' → logprob: -19.0

Token 267: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0002966127940453589
    2. 's' → logprob: -9.000296592712402
    3. 'xor' → logprob: -9.000296592712402
    4. '^' → logprob: -10.500296592712402
    5. 'x' → logprob: -11.250296592712402
    6. '   ' → logprob: -13.375296592712402
    7. ' ^=' → logprob: -13.500296592712402
    8. ' xor' → logprob: -13.750296592712402
    9. ' ^' → logprob: -14.250296592712402
    10. 'now' → logprob: -14.375296592712402

Token 268: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.20320536196231842
    2. ' ^=' → logprob: -1.7032053470611572
    3. '=' → logprob: -6.328205585479736
    4. ' ^' → logprob: -13.703205108642578
    5. ' ' → logprob: -13.953205108642578
    6. '   ' → logprob: -14.078205108642578
    7. ' =' → logprob: -14.078205108642578
    8. '^)' → logprob: -14.328205108642578
    9. '^{' → logprob: -15.578205108642578
    10. '^

' → logprob: -15.578205108642578

Token 269: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014163747429847717
    2. ' A' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.764163970947266
    4. ' ' → logprob: -17.014163970947266
    5. '           ' → logprob: -17.014163970947266
    6. '	A' → logprob: -17.514163970947266
    7. '  ' → logprob: -18.889163970947266
    8. '_A' → logprob: -19.014163970947266
    9. '       ' → logprob: -19.889163970947266
    10. '    ' → logprob: -19.889163970947266

Token 270: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00018077615823131055
    2. 'r' → logprob: -8.625181198120117
    3. '[' → logprob: -14.250181198120117
    4. 'A' → logprob: -15.750181198120117
    5. ' [' → logprob: -15.750181198120117
    6. ' r' → logprob: -15.875181198120117
    7. '[
' → logprob: -16.750181198120117
    8. '   ' → logprob: -17.000181198120117
    9. '(r' → logprob: -17.125181198120117
    10. '[A' → logprob: -17.875181198120117

Token 271: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1972673237323761
    2. '[r' → logprob: -1.8222672939300537
    3. ')' → logprob: -4.322267532348633
    4. '])' → logprob: -6.197267532348633
    5. ' ]' → logprob: -7.447267532348633
    6. '           ' → logprob: -7.447267532348633
    7. '   ' → logprob: -8.197267532348633
    8. '       ' → logprob: -8.822267532348633
    9. ']
' → logprob: -8.947267532348633
    10. 'r' → logprob: -9.072267532348633

Token 272: '      ' (ID: 1699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011881973594427109
    2. 'r' → logprob: -5.2618818283081055
    3. '<|end|>' → logprob: -6.0118818283081055
    4. ')' → logprob: -6.2618818283081055
    5. '       ' → logprob: -6.6368818283081055
    6. '   ' → logprob: -8.511881828308105
    7. '
' → logprob: -8.761881828308105
    8. ' r' → logprob: -8.886881828308105
    9. '               ' → logprob: -9.386881828308105
    10. ' ' → logprob: -9.511881828308105

Token 273: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007264424115419388
    2. 'r' → logprob: -5.132264614105225
    3. '
' → logprob: -7.257264614105225
    4. ' r' → logprob: -8.382264137268066
    5. '   ' → logprob: -8.757264137268066
    6. '       ' → logprob: -9.132264137268066
    7. '            
' → logprob: -9.632264137268066
    8. '    
' → logprob: -11.132264137268066
    9. '          ' → logprob: -11.632264137268066
    10. ' 
' → logprob: -11.757264137268066

Token 274: ' XOR' (ID: 147209)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.4844607710838318
    2. 'now' → logprob: -1.3594608306884766
    3. 'A' → logprob: -2.1094608306884766
    4. ' A' → logprob: -5.734460830688477
    5. 'Add' → logprob: -6.609460830688477
    6. 'X' → logprob: -7.484460830688477
    7. '^' → logprob: -8.234460830688477
    8. 'Now' → logprob: -8.984460830688477
    9. ' Add' → logprob: -9.234460830688477
    10. ' ^=' → logprob: -9.359460830688477

Token 275: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.35142552852630615
    2. ' A' → logprob: -1.2264255285263062
    3. '           ' → logprob: -5.851425647735596
    4. '   ' → logprob: -10.101425170898438
    5. 'r' → logprob: -11.351425170898438
    6. ' ' → logprob: -11.851425170898438
    7. '=A' → logprob: -12.226425170898438
    8. '          ' → logprob: -12.351425170898438
    9. ' ^=' → logprob: -12.601425170898438
    10. ' r' → logprob: -12.601425170898438

Token 276: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.368984107510187e-05
    2. '[' → logprob: -10.750033378601074
    3. 'r' → logprob: -11.375033378601074
    4. '   ' → logprob: -14.875033378601074
    5. '[
' → logprob: -15.875033378601074
    6. ' [' → logprob: -16.37503433227539
    7. '(r' → logprob: -16.87503433227539
    8. '```' → logprob: -17.00003433227539
    9. '	r' → logprob: -17.12503433227539
    10. '       ' → logprob: -17.37503433227539

Token 277: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3338702321052551
    2. ')' → logprob: -1.8338701725006104
    3. '[r' → logprob: -2.4588701725006104
    4. '           ' → logprob: -3.9588701725006104
    5. '])' → logprob: -4.7088704109191895
    6. '^' → logprob: -5.7088704109191895
    7. ' ^' → logprob: -5.9588704109191895
    8. '       ' → logprob: -6.8338704109191895
    9. ']^' → logprob: -7.0838704109191895
    10. '   ' → logprob: -7.2088704109191895

Token 278: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008893063059076667
    2. '[r' → logprob: -8.250889778137207
    3. 'r' → logprob: -8.500889778137207
    4. '<|end|>' → logprob: -8.875889778137207
    5. '   ' → logprob: -9.000889778137207
    6. '       ' → logprob: -9.875889778137207
    7. ' r' → logprob: -10.875889778137207
    8. '<|end|>' → logprob: -11.000889778137207
    9. '            
' → logprob: -11.375889778137207
    10. ')' → logprob: -11.875889778137207

Token 279: ' current' (ID: 2208)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.06200231611728668
    2. ' now' → logprob: -2.812002420425415
    3. 'current' → logprob: -10.437002182006836
    4. ' current' → logprob: -12.562002182006836
    5. '[now' → logprob: -14.312002182006836
    6. '	now' → logprob: -15.187002182006836
    7. ' ' → logprob: -15.437002182006836
    8. '```' → logprob: -15.437002182006836
    9. '(now' → logprob: -16.062002182006836
    10. '   ' → logprob: -16.187002182006836

Token 280: ' xor' (ID: 106402)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007268482004292309
    2. 'xor' → logprob: -7.500726699829102
    3. 'now' → logprob: -8.750726699829102
    4. 'sum' → logprob: -11.500726699829102
    5. ' now' → logprob: -13.000726699829102
    6. ' x' → logprob: -13.625726699829102
    7. '   ' → logprob: -14.125726699829102
    8. '```' → logprob: -14.500726699829102
    9. '
' → logprob: -15.375726699829102
    10. '_x' → logprob: -16.2507266998291

Token 281: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000840715249069035
    2. 'r' → logprob: -7.500840663909912
    3. '       ' → logprob: -8.62584114074707
    4. '   ' → logprob: -10.12584114074707
    5. '<|end|>' → logprob: -10.75084114074707
    6. ' r' → logprob: -11.12584114074707
    7. '            
' → logprob: -11.12584114074707
    8. ',' → logprob: -12.62584114074707
    9. '          ' → logprob: -13.00084114074707
    10. '               ' → logprob: -13.12584114074707

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021962920436635613
    2. 'r' → logprob: -8.500219345092773
    3. '       ' → logprob: -11.750219345092773
    4. '```' → logprob: -12.375219345092773
    5. ' r' → logprob: -13.000219345092773
    6. '   ' → logprob: -14.125219345092773
    7. '            
' → logprob: -14.875219345092773
    8. '          ' → logprob: -15.000219345092773
    9. '<|end|>' → logprob: -15.500219345092773
    10. '	       ' → logprob: -17.125219345092773

Token 283: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.004353455733507872
    2. '           ' → logprob: -5.7543535232543945
    3. ' r' → logprob: -6.7543535232543945
    4. '       ' → logprob: -11.879353523254395
    5. '   ' → logprob: -13.129353523254395
    6. '               ' → logprob: -15.504353523254395
    7. '	r' → logprob: -17.379352569580078
    8. '          ' → logprob: -17.879352569580078
    9. ' ' → logprob: -18.004352569580078
    10. '```' → logprob: -18.004352569580078

Token 284: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.021985974162817
    2. '+' → logprob: -4.52198600769043
    3. ' +=' → logprob: -4.52198600769043
    4. '=' → logprob: -12.27198600769043
    5. ']+=' → logprob: -13.27198600769043
    6. '<|end|>' → logprob: -13.64698600769043
    7. '+='' → logprob: -13.64698600769043
    8. '+="' → logprob: -14.14698600769043
    9. '   ' → logprob: -14.39698600769043
    10. '++' → logprob: -14.89698600769043

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '```' → logprob: -17.256715774536133
    4. '   ' → logprob: -18.631715774536133
    5. ' ' → logprob: -19.631715774536133
    6. '+' → logprob: -20.194215774536133
    7. '<|end|>' → logprob: -20.194215774536133
    8. '`' → logprob: -20.256715774536133
    9. 'r' → logprob: -20.381715774536133
    10. '  ' → logprob: -20.569215774536133

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -19.0
    4. '１' → logprob: -19.875
    5. '   ' → logprob: -20.0
    6. 'r' → logprob: -21.1875
    7. '
' → logprob: -21.375
    8. 's' → logprob: -21.875
    9. '۱' → logprob: -22.1875
    10. '`' → logprob: -22.625

Token 287: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01771729625761509
    2. '
' → logprob: -4.392717361450195
    3. '<|end|>' → logprob: -5.642717361450195
    4. '        
' → logprob: -6.767717361450195
    5. '```' → logprob: -8.767717361450195
    6. '   ' → logprob: -9.017717361450195
    7. '  
' → logprob: -9.767717361450195
    8. ')' → logprob: -10.267717361450195
    9. ',' → logprob: -10.392717361450195
    10. '<|end|>' → logprob: -10.517717361450195

Token 288: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008991966024041176
    2. '
' → logprob: -7.625899314880371
    3. '   ' → logprob: -8.500899314880371
    4. '           ' → logprob: -9.750899314880371
    5. '        
' → logprob: -9.875899314880371
    6. '```' → logprob: -10.000899314880371
    7. '<|end|>' → logprob: -10.250899314880371
    8. '  
' → logprob: -12.375899314880371
    9. 'ans' → logprob: -12.875899314880371
    10. ',' → logprob: -13.125899314880371

Token 289: ' Move' (ID: 25485)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4998057186603546
    2. 'continue' → logprob: -1.2498056888580322
    3. 'Continue' → logprob: -2.6248056888580322
    4. '<|end|>' → logprob: -4.874805927276611
    5. ' Continue' → logprob: -5.124805927276611
    6. ' ' → logprob: -5.499805927276611
    7. '1' → logprob: -5.999805927276611
    8. '           ' → logprob: -6.124805927276611
    9. '       ' → logprob: -6.249805927276611
    10. 'Increment' → logprob: -6.874805927276611

Token 290: ' right' (ID: 1849)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03999017924070358
    2. ' r' → logprob: -3.289990186691284
    3. '<|end|>' → logprob: -6.789989948272705
    4. 'right' → logprob: -7.539989948272705
    5. ' ' → logprob: -9.289990425109863
    6. '    ' → logprob: -10.289990425109863
    7. ' right' → logprob: -10.289990425109863
    8. ' the' → logprob: -10.539990425109863
    9. 'the' → logprob: -10.789990425109863
    10. '           ' → logprob: -11.289990425109863

Token 291: ' boundary' (ID: 35021)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4825390875339508
    2. '<|end|>' → logprob: -0.9825390577316284
    3. '        
' → logprob: -5.607539176940918
    4. '<|end|>' → logprob: -5.732539176940918
    5. '```' → logprob: -7.482539176940918
    6. '   ' → logprob: -8.357539176940918
    7. '  
' → logprob: -9.232539176940918
    8. '           ' → logprob: -9.357539176940918
    9. '            
' → logprob: -9.357539176940918
    10. ')' → logprob: -9.607539176940918

Token 293: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.005390868987888098
    2. ' the' → logprob: -5.505390644073486
    3. 'right' → logprob: -6.755390644073486
    4. 'next' → logprob: -8.880391120910645
    5. '```' → logprob: -12.880391120910645
    6. ' right' → logprob: -13.630391120910645
    7. '   ' → logprob: -13.630391120910645
    8. 'r' → logprob: -13.630391120910645
    9. ' next' → logprob: -13.755391120910645
    10. ' ' → logprob: -15.755391120910645

Token 294: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0016251911874860525
    2. ' right' → logprob: -7.001625061035156
    3. 'next' → logprob: -7.251625061035156
    4. ' next' → logprob: -12.501625061035156
    5. '```' → logprob: -15.001625061035156
    6. 'r' → logprob: -16.501625061035156
    7. 'left' → logprob: -16.876625061035156
    8. 'Right' → logprob: -16.876625061035156
    9. '	right' → logprob: -16.876625061035156
    10. '_right' → logprob: -17.626625061035156

Token 295: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007160080131143332
    2. '   ' → logprob: -8.000716209411621
    3. '
' → logprob: -8.500716209411621
    4. '```' → logprob: -9.125716209411621
    5. '        
' → logprob: -10.375716209411621
    6. '<|end|>' → logprob: -11.000716209411621
    7. '           ' → logprob: -11.375716209411621
    8. '  
' → logprob: -13.375716209411621
    9. '    
' → logprob: -13.500716209411621
    10. ',' → logprob: -14.125716209411621

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008706163614988327
    2. '   ' → logprob: -4.758706092834473
    3. '```' → logprob: -10.008706092834473
    4. 'ans' → logprob: -10.258706092834473
    5. '
' → logprob: -12.508706092834473
    6. '           ' → logprob: -13.133706092834473
    7. '        
' → logprob: -13.383706092834473
    8. '      ' → logprob: -14.133706092834473
    9. '	ans' → logprob: -14.258706092834473
    10. '     ' → logprob: -14.633706092834473

Token 297: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.30735841393470764
    2. '       ' → logprob: -1.5573583841323853
    3. '   ' → logprob: -2.932358503341675
    4. ' ans' → logprob: -7.807358264923096
    5. '	ans' → logprob: -9.182358741760254
    6. '```' → logprob: -9.307358741760254
    7. ' ' → logprob: -11.307358741760254
    8. 'answer' → logprob: -11.682358741760254
    9. '#' (adapté à ' #') → logprob: -11.682358741760254
    10. '  ' → logprob: -12.307358741760254

Token 298: ' The' (ID: 623)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00022654302301816642
    2. '#' → logprob: -8.500226974487305
    3. '       ' → logprob: -11.625226974487305
    4. '   ' → logprob: -11.625226974487305
    5. ' ans' → logprob: -12.625226974487305
    6. '	ans' → logprob: -13.875226974487305
    7. '
' → logprob: -15.375226974487305
    8. '(ans' → logprob: -15.750226974487305
    9. '```' → logprob: -15.750226974487305
    10. 'answer' → logprob: -16.375226974487305

Token 299: ' window' (ID: 5734)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07077787071466446
    2. '#' → logprob: -2.6957778930664062
    3. '       ' → logprob: -7.695777893066406
    4. '   ' → logprob: -8.445777893066406
    5. ' ans' → logprob: -9.445777893066406
    6. 'answer' → logprob: -9.695777893066406
    7. ' #' → logprob: -11.570777893066406
    8. '	ans' → logprob: -12.570777893066406
    9. '           ' → logprob: -12.820777893066406
    10. '
' → logprob: -13.070777893066406

Token 300: ' [' (ID: 723)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.15180043876171112
    2. ' size' → logprob: -2.0268003940582275
    3. 'length' → logprob: -5.151800632476807
    4. '_size' → logprob: -7.026800632476807
    5. '   ' → logprob: -7.276800632476807
    6. '[' → logprob: -7.401800632476807
    7. ' length' → logprob: -7.901800632476807
    8. '#' → logprob: -8.651800155639648
    9. '[size' → logprob: -8.651800155639648
    10. 'len' → logprob: -9.526800155639648

Token 301: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3856492842023727e-06
    2. ' l' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '	l' → logprob: -16.750001907348633
    5. '       ' → logprob: -18.625001907348633
    6. '
' → logprob: -19.625001907348633
    7. '           ' → logprob: -20.250001907348633
    8. ' ' → logprob: -20.375001907348633
    9. ',l' → logprob: -20.750001907348633
    10. '```' → logprob: -20.875001907348633

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024292023852467537
    2. ',r' → logprob: -3.7742919921875
    3. ' ,' → logprob: -7.5242919921875
    4. ')' → logprob: -9.2742919921875
    5. ',right' → logprob: -9.3992919921875
    6. ',l' → logprob: -9.6492919921875
    7. ',end' → logprob: -9.7742919921875
    8. ',s' → logprob: -10.1492919921875
    9. '   ' → logprob: -10.1492919921875
    10. ',len' → logprob: -11.0242919921875

Token 303: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.505351095460355e-05
    2. ' r' → logprob: -9.500075340270996
    3. ',' → logprob: -16.12507438659668
    4. '
' → logprob: -16.87507438659668
    5. '...' → logprob: -17.75007438659668
    6. ' ' → logprob: -18.25007438659668
    7. '   ' → logprob: -18.37507438659668
    8. ',r' → logprob: -18.37507438659668
    9. '	r' → logprob: -19.12507438659668
    10. '```' → logprob: -19.62507438659668

Token 304: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004192330234218389
    2. ')
' → logprob: -8.125419616699219
    3. ']' → logprob: -10.500419616699219
    4. ')`' → logprob: -10.750419616699219
    5. '   ' → logprob: -10.875419616699219
    6. ')]' → logprob: -11.250419616699219
    7. '）' → logprob: -11.500419616699219
    8. ' )' → logprob: -12.125419616699219
    9. '`)' → logprob: -12.250419616699219
    10. ')**' → logprob: -12.375419616699219

Token 305: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6274245381355286
    2. '   ' → logprob: -1.2524244785308838
    3. ' covers' → logprob: -3.377424478530884
    4. 'covers' → logprob: -3.752424478530884
    5. 'contains' → logprob: -3.877424478530884
    6. 'includes' → logprob: -4.127424716949463
    7. 'adds' → logprob: -4.252424716949463
    8. 'con' → logprob: -4.377424716949463
    9. ' contains' → logprob: -4.752424716949463
    10. '#' → logprob: -4.752424716949463

Token 306: ' the' (ID: 290)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.20062659680843353
    2. ' valid' → logprob: -1.9506266117095947
    3. '   ' → logprob: -4.200626373291016
    4. '       ' → logprob: -4.200626373291016
    5. 'count' → logprob: -5.450626373291016
    6. '           ' → logprob: -7.325626373291016
    7. 'now' → logprob: -7.575626373291016
    8. '#' → logprob: -7.825626373291016
    9. 'already' → logprob: -7.825626373291016
    10. 'all' → logprob: -7.950626373291016

Token 307: ' largest' (ID: 10574)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.7668188810348511
    2. 'valid' → logprob: -1.516818881034851
    3. 'current' → logprob: -1.766818881034851
    4. 'answer' → logprob: -3.1418190002441406
    5. 'count' → logprob: -3.3918190002441406
    6. '#' → logprob: -4.016819000244141
    7. 'long' → logprob: -4.641819000244141
    8. 'largest' → logprob: -5.141819000244141
    9. 'sub' → logprob: -5.516819000244141
    10. 'right' → logprob: -5.516819000244141

Token 308: ' for' (ID: 395)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.5573781728744507
    2. ' valid' → logprob: -0.9323781728744507
    3. ' that' → logprob: -4.68237829208374
    4. 'sub' → logprob: -5.05737829208374
    5. ' for' → logprob: -5.93237829208374
    6. ' with' → logprob: -6.18237829208374
    7. 'that' → logprob: -6.18237829208374
    8. '   ' → logprob: -6.43237829208374
    9. 'possible' → logprob: -6.55737829208374
    10. 'with' → logprob: -6.55737829208374

Token 309: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -1.2911163568496704
    2. ' which' → logprob: -1.2911163568496704
    3. 'this' → logprob: -1.5411163568496704
    4. 'which' → logprob: -1.9161163568496704
    5. ' the' → logprob: -2.916116237640381
    6. 'the' → logprob: -3.541116237640381
    7. ' current' → logprob: -5.916116237640381
    8. 'current' → logprob: -6.791116237640381
    9. 'valid' → logprob: -6.916116237640381
    10. '   ' → logprob: -8.416116714477539

Token 310: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02141437493264675
    2. 'position' → logprob: -4.646414279937744
    3. ' l' → logprob: -5.146414279937744
    4. 'left' → logprob: -5.521414279937744
    5. ' position' → logprob: -7.021414279937744
    6. ' left' → logprob: -8.521414756774902
    7. 'starting' → logprob: -8.646414756774902
    8. 'for' → logprob: -8.771414756774902
    9. 'start' → logprob: -9.146414756774902
    10. '   ' → logprob: -9.396414756774902

Token 311: ' satisfying' (ID: 52718)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015700951917096972
    2. '   ' → logprob: -6.501570224761963
    3. ',' → logprob: -10.126569747924805
    4. '
' → logprob: -11.876569747924805
    5. '        
' → logprob: -11.876569747924805
    6. ' ans' → logprob: -13.001569747924805
    7. '<|end|>' → logprob: -13.001569747924805
    8. '           ' → logprob: -13.126569747924805
    9. '```' → logprob: -13.251569747924805
    10. '      ' → logprob: -13.501569747924805

Token 312: ' the' (ID: 290)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0016184075502678752
    2. ' ans' → logprob: -7.001618385314941
    3. '       ' → logprob: -8.126618385314941
    4. '   ' → logprob: -8.376618385314941
    5. 'the' → logprob: -8.876618385314941
    6. '	ans' → logprob: -11.501618385314941
    7. '           ' → logprob: -11.876618385314941
    8. '
' → logprob: -11.876618385314941
    9. ' the' → logprob: -12.501618385314941
    10. '```' → logprob: -12.626618385314941

Token 313: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.00027575582498684525
    2. 'while' → logprob: -9.375275611877441
    3. 'sum' → logprob: -9.750275611877441
    4. ' condition' → logprob: -10.125275611877441
    5. 'property' → logprob: -10.250275611877441
    6. 'conditions' → logprob: -10.875275611877441
    7. 'current' → logprob: -11.250275611877441
    8. 'if' → logprob: -11.750275611877441
    9. '#' → logprob: -12.500275611877441
    10. 'problem' → logprob: -13.250275611877441

Token 314: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.318597674369812
    2. '   ' → logprob: -1.318597674369812
    3. 'ans' → logprob: -5.318597793579102
    4. ' ans' → logprob: -7.943597793579102
    5. '	ans' → logprob: -9.943597793579102
    6. ' ' → logprob: -11.943597793579102
    7. '  ' → logprob: -12.693597793579102
    8. '```' → logprob: -13.193597793579102
    9. '    ' → logprob: -13.318597793579102
    10. '(ans' → logprob: -13.693597793579102

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02706729806959629
    2. '   ' → logprob: -3.652067184448242
    3. 'ans' → logprob: -7.277067184448242
    4. ' ans' → logprob: -10.402067184448242
    5. '```' → logprob: -10.527067184448242
    6. '	ans' → logprob: -12.527067184448242
    7. '    ' → logprob: -12.777067184448242
    8. '      ' → logprob: -12.777067184448242
    9. '           ' → logprob: -13.402067184448242
    10. '     ' → logprob: -13.402067184448242

Token 316: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0032594730146229267
    2. '   ' → logprob: -5.753259658813477
    3. ' ans' → logprob: -9.753259658813477
    4. '       ' → logprob: -10.753259658813477
    5. '	ans' → logprob: -13.378259658813477
    6. ' ' → logprob: -15.628259658813477
    7. '  ' → logprob: -15.878259658813477
    8. 'answer' → logprob: -15.878259658813477
    9. '
' → logprob: -16.253259658813477
    10. '(ans' → logprob: -16.378259658813477

Token 317: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012526365928351879
    2. ' +=' → logprob: -4.387526512145996
    3. '+=(' → logprob: -12.012526512145996
    4. '+' → logprob: -12.512526512145996
    5. '   ' → logprob: -12.637526512145996
    6. ']+=' → logprob: -12.887526512145996
    7. '```' → logprob: -14.512526512145996
    8. '	' → logprob: -15.137526512145996
    9. '+="' → logprob: -16.26252555847168
    10. '=' → logprob: -16.38752555847168

Token 318: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015116469003260136
    2. '(r' → logprob: -6.751511573791504
    3. ' r' → logprob: -8.001511573791504
    4. ' (' → logprob: -12.001511573791504
    5. '   ' → logprob: -15.501511573791504
    6. '(' → logprob: -16.25151252746582
    7. ' ' → logprob: -19.12651252746582
    8. '	r' → logprob: -19.25151252746582
    9. '_r' → logprob: -19.50151252746582
    10. '[r' → logprob: -19.50151252746582

Token 319: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20230014622211456
    2. '-' → logprob: -1.7023001909255981
    3. '   ' → logprob: -7.202300071716309
    4. '<|end|>' → logprob: -10.202300071716309
    5. ' ' → logprob: -10.702300071716309
    6. '```' → logprob: -11.077300071716309
    7. '-l' → logprob: -11.452300071716309
    8. '`' → logprob: -11.702300071716309
    9. '  ' → logprob: -11.952300071716309
    10. 's' → logprob: -12.202300071716309

Token 320: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0280383548888494e-06
    2. ' l' → logprob: -13.875000953674316
    3. '	l' → logprob: -18.750001907348633
    4. '_l' → logprob: -19.375001907348633
    5. '<|end|>' → logprob: -19.375001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '```' → logprob: -20.250001907348633
    8. '[l' → logprob: -20.750001907348633
    9. '$l' → logprob: -20.875001907348633
    10. '*l' → logprob: -21.250001907348633

Token 321: '             ' (ID: 1698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.073235422372818
    2. '       ' → logprob: -3.198235511779785
    3. 'n' → logprob: -3.948235511779785
    4. '
' → logprob: -5.073235511779785
    5. '    
' → logprob: -6.073235511779785
    6. '        
' → logprob: -6.948235511779785
    7. '  
' → logprob: -8.198235511779785
    8. '```' → logprob: -8.198235511779785
    9. '   
' → logprob: -8.823235511779785
    10. ' n' → logprob: -9.448235511779785

Token 322: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42002367973327637
    2. 'if' → logprob: -1.1700236797332764
    3. '   ' → logprob: -4.0450239181518555
    4. 'n' → logprob: -4.2950239181518555
    5. ' if' → logprob: -6.9200239181518555
    6. '```' → logprob: -8.045023918151855
    7. '        
' → logprob: -9.420023918151855
    8. ' n' → logprob: -11.045023918151855
    9. '#' (adapté à ' #') → logprob: -11.045023918151855
    10. '
' → logprob: -11.170023918151855

Token 323: ' Count' (ID: 6789)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8764470219612122
    2. '1' → logprob: -1.0014469623565674
    3. 'Subtract' → logprob: -3.0014469623565674
    4. '   ' → logprob: -3.3764469623565674
    5. 'count' → logprob: -3.5014469623565674
    6. 'print' → logprob: -3.7514469623565674
    7. 'Remove' → logprob: -3.8764469623565674
    8. 'r' → logprob: -4.1264472007751465
    9. 'Continue' → logprob: -4.8764472007751465
    10. '
' → logprob: -4.8764472007751465

Token 324: ' all' (ID: 722)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' valid' (ID: 4529)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.2990420162677765
    2. 'valid' → logprob: -1.549041986465454
    3. ' valid' → logprob: -3.674041986465454
    4. ' sub' → logprob: -3.924041986465454
    5. 'the' → logprob: -8.174041748046875
    6. '   ' → logprob: -8.924041748046875
    7. '       ' → logprob: -8.924041748046875
    8. 'possible' → logprob: -9.049041748046875
    9. '```' → logprob: -9.674041748046875
    10. ' the' → logprob: -10.424041748046875

Token 326: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.07908520102500916
    2. ' sub' → logprob: -2.579085111618042
    3. '       ' → logprob: -9.204085350036621
    4. 'windows' → logprob: -10.079085350036621
    5. '   ' → logprob: -10.954085350036621
    6. '_sub' → logprob: -11.329085350036621
    7. '```' → logprob: -11.704085350036621
    8. '
' → logprob: -13.079085350036621
    9. '           ' → logprob: -13.079085350036621
    10. ' windows' → logprob: -13.204085350036621

Token 327: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -4.191489642835222e-05
    2. 'windows' → logprob: -10.500041961669922
    3. 'ranges' → logprob: -11.875041961669922
    4. ' arrays' → logprob: -12.500041961669922
    5. '   ' → logprob: -13.625041961669922
    6. 'array' → logprob: -13.875041961669922
    7. 'sub' → logprob: -14.875041961669922
    8. 'ar' → logprob: -15.000041961669922
    9. 'arr' → logprob: -15.125041961669922
    10. 'interval' → logprob: -15.500041961669922

Token 328: ' starting' (ID: 8601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10079444944858551
    2. '   ' → logprob: -2.350794553756714
    3. 'n' → logprob: -7.725794315338135
    4. '```' → logprob: -9.100794792175293
    5. '        
' → logprob: -11.350794792175293
    6. '           ' → logprob: -11.725794792175293
    7. ' n' → logprob: -12.725794792175293
    8. '    
' → logprob: -13.350794792175293
    9. '      ' → logprob: -13.600794792175293
    10. '  ' → logprob: -13.600794792175293

Token 329: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6222237944602966
    2. 'from' → logprob: -0.8722237944602966
    3. ' at' → logprob: -3.1222238540649414
    4. ' from' → logprob: -6.872223854064941
    5. 'with' → logprob: -9.622223854064941
    6. '   ' → logprob: -10.372223854064941
    7. '       ' → logprob: -11.497223854064941
    8. 'here' → logprob: -11.497223854064941
    9. '	at' → logprob: -12.247223854064941
    10. ' ' → logprob: -12.372223854064941

Token 330: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015029559144750237
    2. ' l' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.376502990722656
    4. '_l' → logprob: -17.501502990722656
    5. '```' → logprob: -17.751502990722656
    6. '	l' → logprob: -18.001502990722656
    7. '`' → logprob: -18.251502990722656
    8. '       ' → logprob: -18.626502990722656
    9. ' ' → logprob: -19.001502990722656
    10. '  ' → logprob: -20.501502990722656

Token 331: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06127691641449928
    2. 'n' → logprob: -3.436276912689209
    3. '   ' → logprob: -3.686276912689209
    4. 'if' → logprob: -6.186276912689209
    5. ' n' → logprob: -9.811277389526367
    6. ' if' → logprob: -10.311277389526367
    7. '```' → logprob: -10.311277389526367
    8. '           ' → logprob: -13.186277389526367
    9. '#' → logprob: -13.186277389526367
    10. ' ' → logprob: -13.811277389526367

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10799402743577957
    2. '   ' → logprob: -2.8579940795898438
    3. 'n' → logprob: -3.1079940795898438
    4. '```' → logprob: -8.232994079589844
    5. ' n' → logprob: -11.357994079589844
    6. '	n' → logprob: -12.357994079589844
    7. 'if' → logprob: -12.482994079589844
    8. '``' → logprob: -13.357994079589844
    9. '           ' → logprob: -13.482994079589844
    10. '        
' → logprob: -14.232994079589844

Token 333: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005687850061804056
    2. '       ' → logprob: -5.255687713623047
    3. '#' (adapté à ' #') → logprob: -7.755687713623047
    4. '   ' → logprob: -10.755687713623047
    5. '```' → logprob: -13.005687713623047
    6. 'if' → logprob: -13.880687713623047
    7. ' n' → logprob: -14.505687713623047
    8. '
' → logprob: -15.380687713623047
    9. '	n' → logprob: -15.505687713623047
    10. '        
' → logprob: -15.880687713623047

Token 334: ' Shr' (ID: 83952)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011350543238222599
    2. 'if' → logprob: -5.011350631713867
    3. '#' → logprob: -5.386350631713867
    4. '   ' → logprob: -10.511350631713867
    5. '       ' → logprob: -11.011350631713867
    6. ' n' → logprob: -13.761350631713867
    7. '           ' → logprob: -15.386350631713867
    8. ' if' → logprob: -15.636350631713867
    9. '	n' → logprob: -15.886350631713867
    10. '```' → logprob: -15.886350631713867

Token 335: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -3.583550642360933e-05
    2. '       ' → logprob: -10.875036239624023
    3. '   ' → logprob: -11.500036239624023
    4. '#' → logprob: -13.875036239624023
    5. '```' → logprob: -13.875036239624023
    6. 'inking' → logprob: -14.000036239624023
    7. '           ' → logprob: -14.000036239624023
    8. '        ' → logprob: -14.125036239624023
    9. 'INK' → logprob: -14.500036239624023
    10. 'inks' → logprob: -15.125036239624023

Token 336: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.313652515411377
    2. 'n' → logprob: -1.438652515411377
    3. ' the' → logprob: -1.563652515411377
    4. '   ' → logprob: -1.938652515411377
    5. 'the' → logprob: -2.688652515411377
    6. ' n' → logprob: -2.688652515411377
    7. 'if' → logprob: -6.688652515411377
    8. ' if' → logprob: -7.063652515411377
    9. '(n' → logprob: -7.438652515411377
    10. 'window' → logprob: -7.938652515411377

Token 337: ' window' (ID: 5734)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020666377618908882
    2. '   ' → logprob: -4.645666599273682
    3. 'window' → logprob: -4.645666599273682
    4. ' n' → logprob: -7.770666599273682
    5. '```' → logprob: -8.395666122436523
    6. 'if' → logprob: -8.520666122436523
    7. '       ' → logprob: -8.770666122436523
    8. ' window' → logprob: -9.395666122436523
    9. '#' → logprob: -10.020666122436523
    10. '
' → logprob: -11.020666122436523

Token 338: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000897289311978966
    2. ' by' → logprob: -8.000897407531738
    3. '   ' → logprob: -8.125897407531738
    4. 'n' → logprob: -8.625897407531738
    5. '        
' → logprob: -11.125897407531738
    6. '```' → logprob: -11.125897407531738
    7. '           ' → logprob: -11.250897407531738
    8. 'from' → logprob: -11.375897407531738
    9. ' from' → logprob: -12.125897407531738
    10. 'by' → logprob: -12.250897407531738

Token 339: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.09456156194210052
    2. 'left' → logprob: -3.0945615768432617
    3. 'l' → logprob: -3.2195615768432617
    4. ' the' → logprob: -5.844561576843262
    5. 'n' → logprob: -6.219561576843262
    6. '   ' → logprob: -10.094561576843262
    7. ' left' → logprob: -11.094561576843262
    8. '```' → logprob: -11.719561576843262
    9. '       ' → logprob: -12.719561576843262
    10. '#' → logprob: -12.969561576843262

Token 340: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -5.1093578804284334e-05
    2. ' left' → logprob: -10.000051498413086
    3. 'l' → logprob: -12.375051498413086
    4. '   ' → logprob: -15.000051498413086
    5. '```' → logprob: -15.000051498413086
    6. '_left' → logprob: -16.000051498413086
    7. '[left' → logprob: -16.125051498413086
    8. '	left' → logprob: -16.250051498413086
    9. '       ' → logprob: -16.375051498413086
    10. '#' → logprob: -16.500051498413086

Token 341: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034525298979133368
    2. 'n' → logprob: -5.753452301025391
    3. '   ' → logprob: -8.75345230102539
    4. ' n' → logprob: -9.87845230102539
    5. '        
' → logprob: -10.12845230102539
    6. '```' → logprob: -11.75345230102539
    7. ',' → logprob: -12.75345230102539
    8. '           ' → logprob: -13.00345230102539
    9. '(n' → logprob: -13.12845230102539
    10. ' by' → logprob: -13.37845230102539

Token 342: ' removing' (ID: 28559)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.2512347996234894
    2. 'n' → logprob: -1.751234769821167
    3. 'subtract' → logprob: -3.626234769821167
    4. '       ' → logprob: -4.376235008239746
    5. '   ' → logprob: -5.501235008239746
    6. ' removing' → logprob: -5.876235008239746
    7. 'A' → logprob: -7.126235008239746
    8. ' n' → logprob: -7.751235008239746
    9. ' subtract' → logprob: -7.751235008239746
    10. '```' → logprob: -8.626235008239746

Token 343: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0031890016980469227
    2. ' A' → logprob: -5.8781890869140625
    3. '   ' → logprob: -7.8781890869140625
    4. '```' → logprob: -13.503189086914062
    5. '       ' → logprob: -13.628189086914062
    6. 'the' → logprob: -13.878189086914062
    7. ' the' → logprob: -14.253189086914062
    8. ' ' → logprob: -14.628189086914062
    9. '    ' → logprob: -15.753189086914062
    10. '  ' → logprob: -15.753189086914062

Token 344: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.625000953674316
    3. 'l' → logprob: -15.000000953674316
    4. '[' → logprob: -15.750000953674316
    5. ' [' → logprob: -16.875001907348633
    6. '       ' → logprob: -17.125001907348633
    7. '```' → logprob: -17.625001907348633
    8. '\[' → logprob: -17.625001907348633
    9. '[left' → logprob: -18.000001907348633
    10. '[
' → logprob: -18.250001907348633

Token 345: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.662396252155304
    2. ']' → logprob: -0.912396252155304
    3. ')
' → logprob: -3.412396192550659
    4. ']
' → logprob: -4.037396430969238
    5. ')]' → logprob: -4.412396430969238
    6. '   ' → logprob: -5.037396430969238
    7. '       ' → logprob: -5.162396430969238
    8. '])' → logprob: -5.412396430969238
    9. ')]
' → logprob: -6.912396430969238
    10. '])
' → logprob: -7.412396430969238

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011801271699368954
    2. 'n' → logprob: -4.511801242828369
    3. '   ' → logprob: -7.511801242828369
    4. ' n' → logprob: -8.761801719665527
    5. '        
' → logprob: -10.636801719665527
    6. '```' → logprob: -11.261801719665527
    7. '
' → logprob: -12.511801719665527
    8. '           ' → logprob: -13.136801719665527
    9. '  
' → logprob: -13.886801719665527
    10. '    
' → logprob: -14.011801719665527

Token 347: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.05043322592973709
    2. '       ' → logprob: -3.0504331588745117
    3. ' n' → logprob: -6.550433158874512
    4. '   ' → logprob: -7.800433158874512
    5. '	n' → logprob: -13.675433158874512
    6. ' ' → logprob: -13.925433158874512
    7. '```' → logprob: -14.050433158874512
    8. '           ' → logprob: -14.425433158874512
    9. '
' → logprob: -14.925433158874512
    10. '``' → logprob: -15.550433158874512

Token 348: 'ows' (ID: 1513)
  Prédit: 'ows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ows' → logprob: -1.6240566083070007e-06
    2. 'ow' → logprob: -13.625001907348633
    3. 'ws' → logprob: -16.125001907348633
    4. '```' → logprob: -17.625001907348633
    5. 'ots' → logprob: -18.125001907348633
    6. 'os' → logprob: -18.125001907348633
    7. '#' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.250001907348633
    9. 'ays' → logprob: -18.375001907348633
    10. 'ys' → logprob: -18.375001907348633

Token 349: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00861729308962822
    2. 'sum' → logprob: -4.758617401123047
    3. '   ' → logprob: -14.133617401123047
    4. ' sum' → logprob: -14.508617401123047
    5. 's' → logprob: -14.883617401123047
    6. '_sum' → logprob: -15.258617401123047
    7. 'u' → logprob: -15.258617401123047
    8. 'umsum' → logprob: -16.133617401123047
    9. '	sum' → logprob: -16.508617401123047
    10. 'un' → logprob: -16.508617401123047

Token 350: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.008036813698709011
    2. '-' → logprob: -5.0080366134643555
    3. ' -=' → logprob: -6.6330366134643555
    4. '=' → logprob: -13.008036613464355
    5. '   ' → logprob: -13.258036613464355
    6. ' -' → logprob: -15.508036613464355
    7. '+=' → logprob: -16.633037567138672
    8. '```' → logprob: -17.008037567138672
    9. '  ' → logprob: -18.383037567138672
    10. '[' → logprob: -18.758037567138672

Token 351: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.2729995988775045e-06
    2. ' A' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.2500057220459
    4. '	A' → logprob: -20.8750057220459
    5. '       ' → logprob: -23.2500057220459
    6. '```' → logprob: -23.7500057220459
    7. '`' → logprob: -24.1250057220459
    8. '_A' → logprob: -24.5000057220459
    9. '           ' → logprob: -24.7500057220459
    10. 'Ａ' → logprob: -25.7500057220459

Token 352: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.000001907348633
    3. 'l' → logprob: -14.375001907348633
    4. '[
' → logprob: -16.500001907348633
    5. '```' → logprob: -16.625001907348633
    6. '\[' → logprob: -16.625001907348633
    7. ' [' → logprob: -17.250001907348633
    8. '[L' → logprob: -18.125001907348633
    9. '	l' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.500001907348633

Token 353: ']' (ID: 60)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07269152998924255
    2. ')' → logprob: -2.6976914405822754
    3. ']
' → logprob: -6.322691440582275
    4. ']' → logprob: -7.697691440582275
    5. '   ' → logprob: -7.822691440582275
    6. '       ' → logprob: -9.572691917419434
    7. ' )
' → logprob: -10.947691917419434
    8. ')
' → logprob: -11.822691917419434
    9. ' )' → logprob: -13.197691917419434
    10. '）
' → logprob: -13.447691917419434

Token 354: '           ' (ID: 352)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.6338065266609192
    2. '       ' → logprob: -0.8838065266609192
    3. ' now' → logprob: -2.8838064670562744
    4. '   ' → logprob: -8.758806228637695
    5. '[now' → logprob: -9.008806228637695
    6. '	now' → logprob: -11.133806228637695
    7. '           ' → logprob: -12.133806228637695
    8. '(now' → logprob: -13.883806228637695
    9. '.now' → logprob: -14.508806228637695
    10. '     ' → logprob: -14.883806228637695

Token 355: ' #' (ID: 1069)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.044600095599889755
    2. '       ' → logprob: -3.294600009918213
    3. ' now' → logprob: -5.044600009918213
    4. '[now' → logprob: -9.419600486755371
    5. '           ' → logprob: -12.294600486755371
    6. '   ' → logprob: -12.294600486755371
    7. '	now' → logprob: -13.294600486755371
    8. '(now' → logprob: -14.794600486755371
    9. '.now' → logprob: -15.044600486755371
    10. '               ' → logprob: -16.419599533081055

Token 356: ' Remove' (ID: 18141)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0052619799971580505
    2. ' now' → logprob: -5.2552618980407715
    3. '[now' → logprob: -10.88026237487793
    4. 'A' → logprob: -12.75526237487793
    5. '       ' → logprob: -13.25526237487793
    6. '	now' → logprob: -13.63026237487793
    7. '           ' → logprob: -13.75526237487793
    8. '<|end|>' → logprob: -13.88026237487793
    9. '
' → logprob: -14.63026237487793
    10. '(now' → logprob: -15.13026237487793

Token 357: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005234121344983578
    2. ' A' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.130233764648438
    4. '```' → logprob: -17.630233764648438
    5. ' ' → logprob: -18.380233764648438
    6. '       ' → logprob: -18.630233764648438
    7. '	A' → logprob: -19.005233764648438
    8. 'a' → logprob: -19.255233764648438
    9. '    ' → logprob: -19.880233764648438
    10. ')' → logprob: -20.380233764648438

Token 358: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -3.128163257315464e-07
    2. 'l' → logprob: -15.875
    3. '[' → logprob: -16.625
    4. 'A' → logprob: -19.0
    5. '	l' → logprob: -19.125
    6. '[
' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. '[L' → logprob: -20.375
    9. '\[' → logprob: -20.625
    10. '[left' → logprob: -20.875

Token 359: ']' (ID: 60)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12856201827526093
    2. ')' → logprob: -2.1285619735717773
    3. ']
' → logprob: -7.128561973571777
    4. '       ' → logprob: -7.878561973571777
    5. ']' → logprob: -8.128561973571777
    6. '   ' → logprob: -9.503561973571777
    7. ')
' → logprob: -9.878561973571777
    8. '           ' → logprob: -11.378561973571777
    9. ' )
' → logprob: -12.378561973571777
    10. '）
' → logprob: -12.628561973571777

Token 360: ' from' (ID: 591)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.03401505574584007
    2. ' now' → logprob: -3.534014940261841
    3. '[now' → logprob: -6.03401517868042
    4. '       ' → logprob: -6.40901517868042
    5. '           ' → logprob: -9.284014701843262
    6. '   ' → logprob: -9.534014701843262
    7. '
' → logprob: -10.784014701843262
    8. '	now' → logprob: -11.409014701843262
    9. '```' → logprob: -12.409014701843262
    10. '(now' → logprob: -12.784014701843262

Token 361: ' sum' (ID: 4215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005010855966247618
    2. ' n' → logprob: -7.6255011558532715
    3. 'the' → logprob: -11.875500679016113
    4. ' the' → logprob: -12.500500679016113
    5. 'now' → logprob: -13.750500679016113
    6. 'A' → logprob: -14.500500679016113
    7. '   ' → logprob: -15.375500679016113
    8. ' now' → logprob: -15.750500679016113
    9. 'current' → logprob: -15.875500679016113
    10. ')' → logprob: -16.00050163269043

Token 362: '
' (ID: 198)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.3151019811630249
    2. '       ' → logprob: -1.565101981163025
    3. ' now' → logprob: -2.9401021003723145
    4. '   ' → logprob: -4.8151021003723145
    5. '[now' → logprob: -8.565101623535156
    6. '	now' → logprob: -10.315101623535156
    7. '           ' → logprob: -10.940101623535156
    8. '```' → logprob: -12.940101623535156
    9. ' ' → logprob: -13.190101623535156
    10. '(now' → logprob: -13.315101623535156

Token 363: '       ' (ID: 309)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.05178679898381233
    2. '   ' → logprob: -3.5517868995666504
    3. '       ' → logprob: -4.30178689956665
    4. ' now' → logprob: -4.80178689956665
    5. '           ' → logprob: -11.051786422729492
    6. '	now' → logprob: -11.801786422729492
    7. '[now' → logprob: -12.051786422729492
    8. '```' → logprob: -12.301786422729492
    9. ' ' → logprob: -14.301786422729492
    10. '               ' → logprob: -15.051786422729492

Token 364: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.002812363440170884
    2. ' now' → logprob: -6.002812385559082
    3. '       ' → logprob: -8.002812385559082
    4. '   ' → logprob: -13.252812385559082
    5. '[now' → logprob: -15.252812385559082
    6. '	now' → logprob: -16.002811431884766
    7. '```' → logprob: -17.502811431884766
    8. '           ' → logprob: -18.752811431884766
    9. ' ' → logprob: -18.877811431884766
    10. '(now' → logprob: -19.127811431884766

Token 365: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.339278580620885e-06
    2. 'xor' → logprob: -13.000001907348633
    3. 'now' → logprob: -16.750001907348633
    4. ' x' → logprob: -17.750001907348633
    5. '```' → logprob: -18.250001907348633
    6. 's' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '^' → logprob: -19.125001907348633
    9. '_x' → logprob: -19.500001907348633
    10. ' now' → logprob: -19.500001907348633

Token 366: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.007910270243883133
    2. 's' → logprob: -5.007910251617432
    3. 'xor' → logprob: -7.132910251617432
    4. 'x' → logprob: -7.882910251617432
    5. 'now' → logprob: -11.63291072845459
    6. '^' → logprob: -12.75791072845459
    7. 'sup' → logprob: -13.00791072845459
    8. ' ^=' → logprob: -13.88291072845459
    9. 'sub' → logprob: -14.13291072845459
    10. '   ' → logprob: -14.38291072845459

Token 367: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.023246755823493004
    2. ' ^=' → logprob: -3.7732467651367188
    3. '=' → logprob: -14.148246765136719
    4. '^

' → logprob: -15.523246765136719
    5. '-=' → logprob: -15.898246765136719
    6. '^^' → logprob: -16.77324676513672
    7. '^)' → logprob: -16.89824676513672
    8. 'xor' → logprob: -17.02324676513672
    9. '_^' → logprob: -17.14824676513672
    10. '   ' → logprob: -17.52324676513672

Token 368: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0024756586644798517
    2. ' A' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.37747573852539
    4. '	A' → logprob: -19.87747573852539
    5. ' ' → logprob: -20.50247573852539
    6. '[A' → logprob: -22.25247573852539
    7. '  ' → logprob: -22.37747573852539
    8. '_A' → logprob: -22.50247573852539
    9. '       ' → logprob: -22.87747573852539
    10. '```' → logprob: -23.50247573852539

Token 369: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00037490393151529133
    2. 'l' → logprob: -8.000374794006348
    3. 'A' → logprob: -10.250374794006348
    4. '[A' → logprob: -12.500374794006348
    5. '[' → logprob: -15.875374794006348
    6. '[L' → logprob: -16.000375747680664
    7. '[a' → logprob: -17.250375747680664
    8. '	l' → logprob: -17.625375747680664
    9. '[n' → logprob: -18.750375747680664
    10. '[
' → logprob: -18.750375747680664

Token 370: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000837384897749871
    2. ')' → logprob: -8.625837326049805
    3. '   ' → logprob: -8.750837326049805
    4. '<|end|>' → logprob: -8.875837326049805
    5. '[l' → logprob: -9.000837326049805
    6. ' ]' → logprob: -9.375837326049805
    7. '       ' → logprob: -9.625837326049805
    8. 'A' → logprob: -10.625837326049805
    9. '           ' → logprob: -11.250837326049805
    10. ']
' → logprob: -11.250837326049805

Token 371: '          ' (ID: 3550)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' Remove' (ID: 18141)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02324768900871277
    2. ' A' → logprob: -3.773247718811035
    3. ' ' → logprob: -14.148247718811035
    4. '   ' → logprob: -14.273247718811035
    5. ' now' → logprob: -15.398247718811035
    6. '       ' → logprob: -15.773247718811035
    7. ')' → logprob: -16.27324676513672
    8. '           ' → logprob: -16.27324676513672
    9. '```' → logprob: -16.52324676513672
    10. 'now' → logprob: -16.77324676513672

Token 374: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07888989895582199
    2. ' A' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.578889846801758
    4. '   ' → logprob: -17.203889846801758
    5. '	A' → logprob: -17.203889846801758
    6. '_A' → logprob: -18.828889846801758
    7. ' ' → logprob: -19.203889846801758
    8. '```' → logprob: -19.453889846801758
    9. '`' → logprob: -20.203889846801758
    10. '  ' → logprob: -20.453889846801758

Token 375: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.1160349458805285e-05
    2. '[A' → logprob: -11.750011444091797
    3. 'A' → logprob: -12.875011444091797
    4. 'l' → logprob: -14.750011444091797
    5. '[L' → logprob: -15.750011444091797
    6. '[' → logprob: -16.375011444091797
    7. '[
' → logprob: -18.000011444091797
    8. '\[' → logprob: -18.125011444091797
    9. '[n' → logprob: -18.500011444091797
    10. '```' → logprob: -18.625011444091797

Token 376: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11590036749839783
    2. ')' → logprob: -2.2409002780914307
    3. '   ' → logprob: -6.61590051651001
    4. '<|end|>' → logprob: -7.24090051651001
    5. '```' → logprob: -8.115900039672852
    6. '       ' → logprob: -8.740900039672852
    7. ')
' → logprob: -9.365900039672852
    8. ']
' → logprob: -9.490900039672852
    9. '}' → logprob: -9.740900039672852
    10. 'from' → logprob: -9.740900039672852

Token 377: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: ' xor' (ID: 106402)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0011766550596803427
    2. ' now' → logprob: -6.751176834106445
    3. 'xor' → logprob: -12.001176834106445
    4. 'x' → logprob: -16.251176834106445
    5. '	now' → logprob: -16.751176834106445
    6. '   ' → logprob: -16.876176834106445
    7. '[now' → logprob: -16.876176834106445
    8. ' ' → logprob: -17.626176834106445
    9. '(now' → logprob: -18.001176834106445
    10. '```' → logprob: -19.126176834106445

Token 379: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6936162710189819
    2. 'print' (adapté à ' print') → logprob: -0.6936162710189819
    3. '```' → logprob: -7.6936163902282715
    4. ' print' → logprob: -11.318615913391113
    5. 'return' → logprob: -14.318615913391113
    6. '	print' → logprob: -15.318615913391113
    7. '``' → logprob: -15.443615913391113
    8. '       ' → logprob: -17.19361686706543
    9. '`' → logprob: -17.44361686706543
    10. '(print' → logprob: -17.56861686706543

Token 382: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0024780353996902704
    2. '(' → logprob: -6.002478122711182
    3. ' (' → logprob: -13.752477645874023
    4. '()' → logprob: -14.627477645874023
    5. '(answer' → logprob: -14.877477645874023
    6. '(
' → logprob: -15.127477645874023
    7. 'ans' → logprob: -16.377477645874023
    8. '(abs' → logprob: -17.127477645874023
    9. '('' → logprob: -18.127477645874023
    10. '(

' → logprob: -18.127477645874023

Token 383: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.125
    3. ')`' → logprob: -16.75
    4. ' )' → logprob: -17.0
    5. '())' → logprob: -17.625
    6. '))' → logprob: -18.25
    7. ')
' → logprob: -18.375
    8. '')' → logprob: -18.875
    9. '`)' → logprob: -19.5
    10. ')}' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 381
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 268
Précision stricte (1ère position): 30.18%
Précision adaptée (1ère position): 33.60%
Précision (top 10): 70.34%
================================================================================
