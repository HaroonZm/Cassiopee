================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Appel de la fonction input() sans stocker le résultat.
# On utilise souvent cette ligne pour forcer la lecture d'une entrée,
# par exemple pour ignorer ou passer une ligne dans certains contextes (comme des titres).
input()

# On demande une saisie utilisateur via le clavier grâce à la fonction input().
# Cette saisie est ensuite stockée dans la variable s pour être utilisée plus tard.
s = input()

# On utilise la méthode count() sur la chaîne s.
# .count("R") retourne le nombre d'occurrences du caractère "R" dans s.
# .count("B") fait la même chose pour le caractère "B".
# On compare ces deux quantités grâce à l'opérateur > (supérieur à).
if s.count("R") > s.count("B"):
    # Si le nombre de "R" est strictement supérieur au nombre de "B" dans la chaîne s,
    # on entre dans ce bloc et on exécute print("Yes").
    # La fonction print() affiche le texte 'Yes' à l'écran.
    print("Yes")
else:
    # Sinon, c'est-à-dire si le nombre de "R" n'est pas strictement supérieur au nombre de "B"
    # (donc si "R" est égal ou inférieur), on exécute ce bloc.
    # La fonction print() affiche alors le texte 'No' à l'écran.
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' App' (ID: 2583)
  → Token d'amorce (pas de prédiction)

Token 2: 'el' (ID: 296)
  → Token d'amorce (pas de prédiction)

Token 3: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025960255414247513
    2. '.' → logprob: -4.150960445404053
    3. ''' → logprob: -5.650960445404053
    4. ':' → logprob: -6.150960445404053
    5. '_' → logprob: -6.400960445404053
    6. ' (' → logprob: -7.275960445404053
    7. '(
' → logprob: -8.275959968566895
    8. '[' → logprob: -8.525959968566895
    9. '(.' → logprob: -8.525959968566895
    10. '```' → logprob: -8.525959968566895

Token 4: ' la' (ID: 557)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.5390706062316895
    2. ' ' → logprob: -2.0390706062316895
    3. ' la' → logprob: -2.2890706062316895
    4. 'f' → logprob: -3.5390706062316895
    5. 'function' → logprob: -4.0390706062316895
    6. ' fonction' → logprob: -4.0390706062316895
    7. 'fon' → logprob: -4.1640706062316895
    8. 'l' → logprob: -4.4140706062316895
    9. '(' → logprob: -4.5390706062316895
    10. 'def' → logprob: -4.6640706062316895

Token 5: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.03541138768196106
    2. 'fon' → logprob: -4.910411357879639
    3. 'function' → logprob: -5.160411357879639
    4. 'def' → logprob: -5.285411357879639
    5. ' fonction' → logprob: -5.410411357879639
    6. ' ' → logprob: -5.785411357879639
    7. 'bibli' → logprob: -6.410411357879639
    8. 'f' → logprob: -6.535411357879639
    9. 'main' → logprob: -6.660411357879639
    10. 'mé' → logprob: -7.410411357879639

Token 6: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002903539687395096
    2. ' (' → logprob: -6.252903461456299
    3. ')' → logprob: -8.502903938293457
    4. '#' → logprob: -9.127903938293457
    5. '_' → logprob: -9.252903938293457
    6. '\' → logprob: -9.252903938293457
    7. '```' → logprob: -9.502903938293457
    8. '`' → logprob: -9.627903938293457
    9. '(
' → logprob: -9.627903938293457
    10. '()' → logprob: -10.002903938293457

Token 7: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005004895501770079
    2. '()' → logprob: -8.125500679016113
    3. '(
' → logprob: -9.375500679016113
    4. '_' → logprob: -10.000500679016113
    5. '#' → logprob: -11.125500679016113
    6. '('' → logprob: -11.625500679016113
    7. '("' → logprob: -11.875500679016113
    8. '```' → logprob: -12.125500679016113
    9. 's' → logprob: -12.250500679016113
    10. ' (' → logprob: -12.375500679016113

Token 8: ' sans' (ID: 9828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014235555194318295
    2. '.' → logprob: -6.014235496520996
    3. '_' → logprob: -6.139235496520996
    4. ')' → logprob: -6.389235496520996
    5. '\' → logprob: -6.389235496520996
    6. ' (' → logprob: -6.514235496520996
    7. '```' → logprob: -6.889235496520996
    8. '()' → logprob: -7.389235496520996
    9. '#' → logprob: -7.389235496520996
    10. ''' → logprob: -7.514235496520996

Token 9: ' stock' (ID: 6546)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.28269556164741516
    2. 'argument' → logprob: -2.9076955318450928
    3. 'param' → logprob: -3.1576955318450928
    4. '_parent' → logprob: -3.2826955318450928
    5. '()' → logprob: -3.5326955318450928
    6. 'arguments' → logprob: -3.7826955318450928
    7. '_' → logprob: -4.282695770263672
    8. 'prompt' → logprob: -4.407695770263672
    9. '(' → logprob: -4.532695770263672
    10. 's' → logprob: -5.532695770263672

Token 10: 'er' (ID: 259)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47110116481781006
    2. 'e' → logprob: -1.47110116481781
    3. '_' → logprob: -2.7211012840270996
    4. 'r' → logprob: -3.0961012840270996
    5. ' (' → logprob: -4.4711012840271
    6. 'é' → logprob: -5.5961012840271
    7. 'a' → logprob: -5.7211012840271
    8. ')' → logprob: -5.8461012840271
    9. '()' → logprob: -5.8461012840271
    10. '.' → logprob: -5.9711012840271

Token 11: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10574748367071152
    2. '()' → logprob: -3.2307474613189697
    3. '(
' → logprob: -3.6057474613189697
    4. '\n' → logprob: -4.105747699737549
    5. '#' → logprob: -5.230747699737549
    6. ')' → logprob: -6.105747699737549
    7. '()
' → logprob: -6.605747699737549
    8. '
' → logprob: -6.730747699737549
    9. '\' → logprob: -6.855747699737549
    10. '  
' → logprob: -6.980747699737549

Token 12: ' résultat' (ID: 62556)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.671022891998291
    2. ' ' → logprob: -1.671022891998291
    3. ' résultat' → logprob: -1.671022891998291
    4. 'result' → logprob: -2.046022891998291
    5. 'val' → logprob: -2.296022891998291
    6. '\n' → logprob: -2.421022891998291
    7. 'r' → logprob: -3.921022891998291
    8. 's' → logprob: -4.296022891998291
    9. ' \' → logprob: -4.421022891998291
    10. ' resultat' → logprob: -5.046022891998291

Token 13: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5905229449272156
    2. '\n' → logprob: -1.0905230045318604
    3. '
' → logprob: -3.3405230045318604
    4. '(
' → logprob: -3.9655230045318604
    5. '()' → logprob: -4.090522766113281
    6. ')' → logprob: -4.590522766113281
    7. '#' → logprob: -5.090522766113281
    8. '\' → logprob: -5.590522766113281
    9. '()
' → logprob: -5.590522766113281
    10. '' → logprob: -5.965522766113281

Token 14: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9684519171714783
    2. '(' → logprob: -1.468451976776123
    3. '
' → logprob: -2.093451976776123
    4. '' → logprob: -2.468451976776123
    5. '#' → logprob: -3.093451976776123
    6. '\' → logprob: -3.718451976776123
    7. '  
' → logprob: -3.718451976776123
    8. ')' → logprob: -3.843451976776123
    9. '```' → logprob: -4.093451976776123
    10. '(
' → logprob: -4.843451976776123

Token 15: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30545204877853394
    2. '#' → logprob: -2.1804521083831787
    3. '\n' → logprob: -2.9304521083831787
    4. 'input' → logprob: -3.8054521083831787
    5. ' 
' → logprob: -4.1804518699646
    6. '  
' → logprob: -4.1804518699646
    7. '
' → logprob: -4.6804518699646
    8. '_' → logprob: -5.0554518699646
    9. ' input' → logprob: -5.0554518699646
    10. ' #' → logprob: -5.4304518699646

Token 16: ' utilise' (ID: 70283)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -2.315147638320923
    2. ' demande' → logprob: -2.315147638320923
    3. 'aff' → logprob: -2.440147638320923
    4. ' attend' → logprob: -2.815147638320923
    5. ' ne' → logprob: -3.065147638320923
    6. ' utilise' → logprob: -3.065147638320923
    7. 'n' → logprob: -3.190147638320923
    8. 'ne' → logprob: -3.190147638320923
    9. 'dem' → logprob: -3.190147638320923
    10. 'print' → logprob: -3.315147638320923

Token 17: ' souvent' (ID: 28137)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08269596844911575
    2. ' input' → logprob: -2.832695960998535
    3. '_' → logprob: -4.207695960998535
    4. '_input' → logprob: -6.457695960998535
    5. '```' → logprob: -6.957695960998535
    6. 'l' → logprob: -7.457695960998535
    7. 'la' → logprob: -7.832695960998535
    8. ' la' → logprob: -8.082695960998535
    9. 'print' → logprob: -8.207695960998535
    10. ' ' → logprob: -8.207695960998535

Token 18: ' cette' (ID: 7696)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10692831128835678
    2. ' input' → logprob: -2.3569283485412598
    3. '_' → logprob: -6.23192834854126
    4. 'l' → logprob: -6.23192834854126
    5. ' l' → logprob: -7.48192834854126
    6. '`' → logprob: -7.85692834854126
    7. '```' → logprob: -7.85692834854126
    8. 'print' → logprob: -8.356927871704102
    9. '_input' → logprob: -8.606927871704102
    10. ' la' → logprob: -8.606927871704102

Token 19: ' ligne' (ID: 19583)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.6805273294448853
    2. 'fonction' → logprob: -0.8055273294448853
    3. 'mé' → logprob: -5.055527210235596
    4. ' méthode' → logprob: -5.055527210235596
    5. 'fois' → logprob: -5.180527210235596
    6. ' ' → logprob: -5.430527210235596
    7. 'entrée' → logprob: -5.680527210235596
    8. ' technique' → logprob: -5.680527210235596
    9. 'f' → logprob: -6.180527210235596
    10. ' fonctionnal' → logprob: -6.555527210235596

Token 20: ' pour' (ID: 1930)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004469758365303278
    2. ' input' → logprob: -6.004469871520996
    3. ':' → logprob: -7.629469871520996
    4. 'pour' → logprob: -7.754469871520996
    5. '```' → logprob: -8.004469871520996
    6. '(input' → logprob: -8.754469871520996
    7. '=input' → logprob: -9.004469871520996
    8. ' pour' → logprob: -9.629469871520996
    9. ',' → logprob: -10.004469871520996
    10. 'for' → logprob: -10.254469871520996

Token 21: ' for' (ID: 395)
  Prédit: ' faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faire' → logprob: -2.214808464050293
    2. 'pause' → logprob: -2.214808464050293
    3. 'faire' → logprob: -2.214808464050293
    4. 'vider' → logprob: -2.464808464050293
    5. 'att' → logprob: -2.464808464050293
    6. ' stopper' → logprob: -2.964808464050293
    7. 'forcer' → logprob: -3.089808464050293
    8. ' pause' → logprob: -3.214808464050293
    9. ' ' → logprob: -3.214808464050293
    10. 'pa' → logprob: -3.464808464050293

Token 22: 'cer' (ID: 3308)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4097420573234558
    2. ' i' → logprob: -1.2847421169281006
    3. '_' → logprob: -2.9097421169281006
    4. ' input' → logprob: -6.6597418785095215
    5. 'i' → logprob: -6.7847418785095215
    6. ' range' → logprob: -6.9097418785095215
    7. ' ' → logprob: -7.6597418785095215
    8. ' (' → logprob: -8.40974235534668
    9. 'range' → logprob: -8.40974235534668
    10. ' for' → logprob: -9.78474235534668

Token 23: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.32135578989982605
    2. 'l' → logprob: -1.3213558197021484
    3. ' une' → logprob: -5.321355819702148
    4. ' un' → logprob: -6.696355819702148
    5. ' ' → logprob: -7.696355819702148
    6. 'une' → logprob: -7.821355819702148
    7. ' ' → logprob: -8.446355819702148
    8. '	l' → logprob: -8.821355819702148
    9. ' la' → logprob: -9.071355819702148
    10. ' user' → logprob: -9.321355819702148

Token 24: ' lecture' (ID: 31993)
  Prédit: 'pause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pause' → logprob: -0.3165457248687744
    2. 'fin' → logprob: -2.5665457248687744
    3. 'f' → logprob: -3.1915457248687744
    4. 'continu' → logprob: -3.3165457248687744
    5. 'console' → logprob: -3.9415457248687744
    6. 'contin' → logprob: -4.066545486450195
    7. 'fer' → logprob: -4.316545486450195
    8. 'program' → logprob: -4.691545486450195
    9. 'programme' → logprob: -4.816545486450195
    10. '```' → logprob: -4.941545486450195

Token 25: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.729025661945343
    2. ' ' → logprob: -1.1040256023406982
    3. ' de' → logprob: -3.2290256023406982
    4. '()' → logprob: -3.3540256023406982
    5. ')' → logprob: -3.7290256023406982
    6. ' d' → logprob: -4.104025840759277
    7. '(' → logprob: -4.229025840759277
    8. 's' → logprob: -4.854025840759277
    9. ' (' → logprob: -5.104025840759277
    10. '\' → logprob: -5.104025840759277

Token 26: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.14418624341487885
    2. ''un' → logprob: -3.14418625831604
    3. 'e' → logprob: -3.89418625831604
    4. 'u' → logprob: -4.144186019897461
    5. 'une' → logprob: -4.269186019897461
    6. ''utilisateur' → logprob: -4.519186019897461
    7. ''entrée' → logprob: -5.019186019897461
    8. ''' → logprob: -5.269186019897461
    9. 'entrée' → logprob: -5.769186019897461
    10. 'l' → logprob: -5.769186019897461

Token 27: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.2792949676513672
    2. 'ligne' → logprob: -2.654294967651367
    3. 'nou' → logprob: -2.904294967651367
    4. ' ' → logprob: -3.154294967651367
    5. ' nouvelle' → logprob: -3.779294967651367
    6. 's' → logprob: -4.154294967651367
    7. ' ligne' → logprob: -4.779294967651367
    8. ' ' → logprob: -5.529294967651367
    9. '```' → logprob: -5.904294967651367
    10. 'chaine' → logprob: -6.154294967651367

Token 28: ',
' (ID: 412)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1388267278671265
    2. '.' → logprob: -2.013826847076416
    3. ')' → logprob: -2.513826847076416
    4. '\' → logprob: -2.638826847076416
    5. '' → logprob: -3.013826847076416
    6. '_' → logprob: -3.013826847076416
    7. '#' → logprob: -3.138826847076416
    8. '\n' → logprob: -3.263826847076416
    9. '<|end|>' → logprob: -3.513826847076416
    10. '```' → logprob: -3.513826847076416

Token 29: '#' (ID: 2)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.3036454916000366
    2. ' afin' → logprob: -1.9286454916000366
    3. '#' → logprob: -2.303645610809326
    4. 'par' → logprob: -2.428645610809326
    5. '```' → logprob: -3.053645610809326
    6. 'e' → logprob: -3.053645610809326
    7. ',' → logprob: -3.803645610809326
    8. '()' → logprob: -3.928645610809326
    9. '...' → logprob: -4.178645610809326
    10. 's' → logprob: -4.428645610809326

Token 30: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6018656492233276
    2. 'par' → logprob: -1.1018656492233276
    3. ' ce' → logprob: -3.976865768432617
    4. ' afin' → logprob: -4.101865768432617
    5. ' mais' → logprob: -4.476865768432617
    6. 'sans' → logprob: -4.851865768432617
    7. 'pour' → logprob: -5.476865768432617
    8. ' même' → logprob: -5.601865768432617
    9. 'sou' → logprob: -5.601865768432617
    10. ' sans' → logprob: -5.726865768432617

Token 31: ' exemple' (ID: 26320)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.713172197341919
    2. ' exemple' → logprob: -0.838172197341919
    3. ' example' → logprob: -3.588172197341919
    4. ' ex' → logprob: -3.963172197341919
    5. 'example' → logprob: -3.963172197341919
    6. 'e' → logprob: -5.46317195892334
    7. '	ex' → logprob: -5.96317195892334
    8. 'fois' → logprob: -6.21317195892334
    9. ' ' → logprob: -7.71317195892334
    10. ' e' → logprob: -8.08817195892334

Token 32: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -1.0952448844909668
    2. ' avant' → logprob: -1.3452448844909668
    3. ' dans' → logprob: -2.595244884490967
    4. 'avant' → logprob: -2.720244884490967
    5. ' afin' → logprob: -2.845244884490967
    6. 'pour' → logprob: -3.095244884490967
    7. ' lors' → logprob: -3.470244884490967
    8. 'dans' → logprob: -3.595244884490967
    9. ' en' → logprob: -4.095244884490967
    10. ' lorsqu' → logprob: -4.595244884490967

Token 33: ' ign' (ID: 8769)
  Prédit: ' maintenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maintenir' → logprob: -1.8622134923934937
    2. ' empêcher' → logprob: -1.8622134923934937
    3. ' mar' → logprob: -2.112213611602783
    4. ' blo' → logprob: -2.737213611602783
    5. 'maint' → logprob: -2.987213611602783
    6. 'att' → logprob: -3.237213611602783
    7. ' stopper' → logprob: -3.487213611602783
    8. 'pause' → logprob: -3.487213611602783
    9. ' garder' → logprob: -3.612213611602783
    10. ' pause' → logprob: -3.737213611602783

Token 34: 'orer' (ID: 13634)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07730390876531601
    2. 'iter' → logprob: -3.202303886413574
    3. 'ter' → logprob: -3.702303886413574
    4. 'erer' → logprob: -6.327303886413574
    5. 'orer' → logprob: -6.452303886413574
    6. '   ' → logprob: -6.702303886413574
    7. 'érer' → logprob: -6.952303886413574
    8. ' iter' → logprob: -7.702303886413574
    9. 'rer' → logprob: -7.702303886413574
    10. 'fer' → logprob: -7.827303886413574

Token 35: ' ou' (ID: 2031)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9986004829406738
    2. ' l' → logprob: -1.6236004829406738
    3. ' la' → logprob: -1.6236004829406738
    4. 'l' → logprob: -2.498600482940674
    5. 'la' → logprob: -3.248600482940674
    6. ' un' → logprob: -3.248600482940674
    7. 'une' → logprob: -3.998600482940674
    8. ' ' → logprob: -4.373600482940674
    9. ' ' → logprob: -4.748600482940674
    10. 'le' → logprob: -5.123600482940674

Token 36: ' passer' (ID: 27727)
  Prédit: ' attendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' attendre' → logprob: -1.6934187412261963
    2. ' stopper' → logprob: -2.3184187412261963
    3. 'r' → logprob: -2.5684187412261963
    4. ' cons' → logprob: -3.1309187412261963
    5. ' continuer' → logprob: -3.1934187412261963
    6. 's' → logprob: -3.1934187412261963
    7. ' blo' → logprob: -3.2559187412261963
    8. 'pause' → logprob: -3.2559187412261963
    9. 'att' → logprob: -3.3809187412261963
    10. ' pause' → logprob: -3.5684187412261963

Token 37: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5019940733909607
    2. ' la' → logprob: -2.3769941329956055
    3. 'l' → logprob: -2.6269941329956055
    4. ' l' → logprob: -2.8769941329956055
    5. ' à' → logprob: -3.0019941329956055
    6. ' ' → logprob: -3.5019941329956055
    7. 'la' → logprob: -3.6269941329956055
    8. 'une' → logprob: -3.8769941329956055
    9. 'à' → logprob: -4.0019941329956055
    10. '#' → logprob: -5.5019941329956055

Token 38: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.306568443775177
    2. ' ligne' → logprob: -2.1815683841705322
    3. 'entrée' → logprob: -2.4315683841705322
    4. 's' → logprob: -3.3065683841705322
    5. ' ' → logprob: -4.556568622589111
    6. 'l' → logprob: -5.556568622589111
    7. 'ent' → logprob: -6.056568622589111
    8. 'commande' → logprob: -6.306568622589111
    9. '   ' → logprob: -7.306568622589111
    10. 'pause' → logprob: -7.431568622589111

Token 39: ' dans' (ID: 2671)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2486424744129181
    2. '\n' → logprob: -2.4986424446105957
    3. '
' → logprob: -2.9986424446105957
    4. '.' → logprob: -3.2486424446105957
    5. '\' → logprob: -4.498642444610596
    6. '```' → logprob: -5.123642444610596
    7. '_' → logprob: -5.623642444610596
    8. 'entrée' → logprob: -5.873642444610596
    9. '#' → logprob: -5.873642444610596
    10. '' → logprob: -5.998642444610596

Token 40: ' certains' (ID: 30681)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.16302862763404846
    2. 'un' → logprob: -2.9130287170410156
    3. 'le' → logprob: -3.5380287170410156
    4. ' le' → logprob: -4.538028717041016
    5. 'une' → logprob: -4.538028717041016
    6. 'les' → logprob: -4.663028717041016
    7. ' une' → logprob: -4.788028717041016
    8. 'l' → logprob: -4.913028717041016
    9. ' l' → logprob: -5.538028717041016
    10. 'la' → logprob: -5.663028717041016

Token 41: ' context' (ID: 3814)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.7612295150756836
    2. 'cas' → logprob: -1.0112295150756836
    3. 'context' → logprob: -3.1362295150756836
    4. ' context' → logprob: -3.5112295150756836
    5. 'scripts' → logprob: -3.5112295150756836
    6. ' scripts' → logprob: -4.386229515075684
    7. ' environ' → logprob: -4.636229515075684
    8. '#' → logprob: -4.761229515075684
    9. 's' → logprob: -4.886229515075684
    10. ' programmes' → logprob: -5.386229515075684

Token 42: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00410380819812417
    2. 'e' → logprob: -5.629103660583496
    3. 's' → logprob: -8.254103660583496
    4. '```' → logprob: -9.379103660583496
    5. '#' → logprob: -10.129103660583496
    6. ')' → logprob: -10.629103660583496
    7. '.' → logprob: -10.754103660583496
    8. ' es' → logprob: -11.379103660583496
    9. '.es' → logprob: -11.941603660583496
    10. '`' → logprob: -12.254103660583496

Token 43: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5832215547561646
    2. '\n' → logprob: -1.5832215547561646
    3. '()' → logprob: -2.708221435546875
    4. '(' → logprob: -2.833221435546875
    5. '\' → logprob: -3.333221435546875
    6. '```' → logprob: -4.083221435546875
    7. '_' → logprob: -4.583221435546875
    8. '' → logprob: -4.583221435546875
    9. 'input' → logprob: -4.958221435546875
    10. ')' → logprob: -4.958221435546875

Token 44: 'comme' (ID: 126724)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014551167842000723
    2. ').' → logprob: -6.876455307006836
    3. '#' → logprob: -8.751455307006836
    4. ' )' → logprob: -9.501455307006836
    5. 'input' → logprob: -10.126455307006836
    6. '):' → logprob: -10.501455307006836
    7. ',' → logprob: -10.501455307006836
    8. ')#' → logprob: -10.751455307006836
    9. '),' → logprob: -11.251455307006836
    10. 'dans' → logprob: -11.501455307006836

Token 45: ' des' (ID: 731)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.554995059967041
    2. 'dans' → logprob: -1.554995059967041
    3. ' un' → logprob: -1.804995059967041
    4. 'un' → logprob: -2.054995059967041
    5. 'une' → logprob: -2.679995059967041
    6. ' les' → logprob: -3.179995059967041
    7. 'l' → logprob: -3.179995059967041
    8. ' dans' → logprob: -3.554995059967041
    9. ' une' → logprob: -3.554995059967041
    10. ' des' → logprob: -4.554995059967041

Token 46: ' titres' (ID: 103122)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.654961884021759
    2. 'scripts' → logprob: -2.1549618244171143
    3. 'je' → logprob: -2.9049618244171143
    4. 's' → logprob: -3.0299618244171143
    5. 'interfaces' → logprob: -3.0299618244171143
    6. ' fichiers' → logprob: -3.2799618244171143
    7. 'entr' → logprob: -3.5299618244171143
    8. 'tests' → logprob: -3.7799618244171143
    9. 'program' → logprob: -4.029962062835693
    10. 'inputs' → logprob: -4.154962062835693

Token 47: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01633862778544426
    2. ').' → logprob: -4.26633882522583
    3. ',' → logprob: -7.26633882522583
    4. ' ou' → logprob: -7.89133882522583
    5. '#' → logprob: -8.391338348388672
    6. ' )' → logprob: -8.516338348388672
    7. ')\' → logprob: -9.516338348388672
    8. '),' → logprob: -9.891338348388672
    9. '\n' → logprob: -10.016338348388672
    10. ')
' → logprob: -10.016338348388672

Token 48: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0839980840682983
    2. '_' → logprob: -1.4589980840682983
    3. '(' → logprob: -1.8339980840682983
    4. '\n' → logprob: -2.458998203277588
    5. '' → logprob: -2.708998203277588
    6. '
' → logprob: -3.083998203277588
    7. '\' → logprob: -3.833998203277588
    8. '(
' → logprob: -4.458998203277588
    9. '()' → logprob: -5.208998203277588
    10. ')' → logprob: -5.458998203277588

Token 49: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42877164483070374
    2. '()' → logprob: -1.0537716150283813
    3. ' ()' → logprob: -10.42877197265625
    4. ' (' → logprob: -10.80377197265625
    5. '(
' → logprob: -11.92877197265625
    6. '("")' → logprob: -12.55377197265625
    7. '()`' → logprob: -13.42877197265625
    8. '(

' → logprob: -13.67877197265625
    9. '('' → logprob: -13.80377197265625
    10. '（）' → logprob: -13.80377197265625

Token 50: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4779699444770813
    2. '<|end|>' → logprob: -1.7279698848724365
    3. ' ' → logprob: -2.6029698848724365
    4. ')' → logprob: -3.4779698848724365
    5. '\n' → logprob: -3.6029698848724365
    6. '```' → logprob: -3.8529698848724365
    7. '
' → logprob: -4.352970123291016
    8. '()' → logprob: -4.477970123291016
    9. '\' → logprob: -5.102970123291016
    10. '  
' → logprob: -5.727970123291016

Token 51: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07444912940263748
    2. ' ' → logprob: -3.324449062347412
    3. 'print' → logprob: -4.449449062347412
    4. '\n' → logprob: -4.949449062347412
    5. '<|end|>' → logprob: -5.199449062347412
    6. 'input' → logprob: -5.949449062347412
    7. '\' → logprob: -6.199449062347412
    8. ')' → logprob: -6.574449062347412
    9. '```' → logprob: -6.699449062347412
    10. '<|end|>' → logprob: -7.199449062347412

Token 52: ' demande' (ID: 26737)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7880198359489441
    2. ' ' → logprob: -1.9130198955535889
    3. ' #' → logprob: -2.163019895553589
    4. ' continue' → logprob: -2.538019895553589
    5. ' a' → logprob: -3.288019895553589
    6. 'n' → logprob: -4.41301965713501
    7. ' print' → logprob: -4.66301965713501
    8. '_' → logprob: -4.66301965713501
    9. ' input' → logprob: -4.66301965713501
    10. 'print' → logprob: -4.91301965713501

Token 53: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6557980179786682
    2. ' (' → logprob: -2.2807979583740234
    3. ' à' → logprob: -2.2807979583740234
    4. '()' → logprob: -2.7807979583740234
    5. ' la' → logprob: -3.2807979583740234
    6. '("' → logprob: -3.2807979583740234
    7. ' ' → logprob: -3.5307979583740234
    8. ' l' → logprob: -3.6557979583740234
    9. 'l' → logprob: -4.030797958374023
    10. ' a' → logprob: -4.405797958374023

Token 54: ' sais' (ID: 30010)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.9243867993354797
    2. ' nom' → logprob: -1.924386739730835
    3. 'nom' → logprob: -1.924386739730835
    4. 'nombre' → logprob: -2.674386739730835
    5. ' nombre' → logprob: -3.299386739730835
    6. 'chaine' → logprob: -3.424386739730835
    7. ' chaîne' → logprob: -3.424386739730835
    8. 'val' → logprob: -3.674386739730835
    9. ' ' → logprob: -4.174386978149414
    10. 'texte' → logprob: -4.424386978149414

Token 55: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00028290803311392665
    2. 's' → logprob: -8.625283241271973
    3. 'es' → logprob: -9.500283241271973
    4. 'ie' → logprob: -11.250283241271973
    5. 'sie' → logprob: -11.375283241271973
    6. 'te' → logprob: -13.500283241271973
    7. 't' → logprob: -13.875283241271973
    8. '#' → logprob: -14.375283241271973
    9. 'se' → logprob: -14.500283241271973
    10. 'ss' → logprob: -15.750283241271973

Token 56: ' utilisateur' (ID: 115595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016179239377379417
    2. '()' → logprob: -5.266179084777832
    3. 'user' → logprob: -5.391179084777832
    4. '("' → logprob: -6.641179084777832
    5. 's' → logprob: -7.016179084777832
    6. '('' → logprob: -7.266179084777832
    7. '(
' → logprob: -7.266179084777832
    8. ' (' → logprob: -7.641179084777832
    9. ',' → logprob: -7.891179084777832
    10. ' ' → logprob: -8.141179084777832

Token 57: ' via' (ID: 4493)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4578920006752014
    2. 'user' → logprob: -2.2078919410705566
    3. 's' → logprob: -2.7078919410705566
    4. '()' → logprob: -2.9578919410705566
    5. ':' → logprob: -3.4578919410705566
    6. ')' → logprob: -3.9578919410705566
    7. ',' → logprob: -4.082891941070557
    8. ' )' → logprob: -4.082891941070557
    9. ' ' → logprob: -5.082891941070557
    10. ' (' → logprob: -5.082891941070557

Token 58: ' le' (ID: 505)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0296614170074463
    2. 'input' → logprob: -1.1546614170074463
    3. ' une' → logprob: -2.5296614170074463
    4. 'une' → logprob: -2.5296614170074463
    5. 'l' → logprob: -2.9046614170074463
    6. ' la' → logprob: -3.4046614170074463
    7. ' l' → logprob: -3.4046614170074463
    8. '()' → logprob: -5.029661178588867
    9. ' un' → logprob: -5.279661178588867
    10. 'la' → logprob: -5.279661178588867

Token 59: ' clavier' (ID: 187878)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.46897006034851074
    2. ' message' → logprob: -1.9689700603485107
    3. 'input' → logprob: -2.2189700603485107
    4. ' clavier' → logprob: -3.5939700603485107
    5. '()' → logprob: -4.09397029876709
    6. ' prompt' → logprob: -4.21897029876709
    7. 'message' → logprob: -4.21897029876709
    8. 's' → logprob: -5.21897029876709
    9. ' ' → logprob: -5.21897029876709
    10. 'print' → logprob: -5.34397029876709

Token 60: ' grâce' (ID: 31589)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.2903767228126526
    2. '(' → logprob: -2.790376663208008
    3. 's' → logprob: -2.915376663208008
    4. ',' → logprob: -3.915376663208008
    5. 'input' → logprob: -3.915376663208008
    6. ')' → logprob: -4.165376663208008
    7. '#' → logprob: -4.165376663208008
    8. '()' → logprob: -4.540376663208008
    9. 'username' → logprob: -4.665376663208008
    10. 'print' → logprob: -4.665376663208008

Token 61: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.009433992207050323
    2. ' au' → logprob: -5.509434223175049
    3. ' a' → logprob: -6.384434223175049
    4. 'à' → logprob: -6.384434223175049
    5. 'au' → logprob: -7.259434223175049
    6. ' ' → logprob: -7.259434223175049
    7. ' to' → logprob: -8.88443374633789
    8. ' ' → logprob: -8.88443374633789
    9. 'a' → logprob: -10.00943374633789
    10. ''à' → logprob: -10.00943374633789

Token 62: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6826722025871277
    2. ' input' → logprob: -0.9326722025871277
    3. 'l' → logprob: -3.3076722621917725
    4. ' la' → logprob: -3.8076722621917725
    5. ' l' → logprob: -4.182672023773193
    6. ' ' → logprob: -4.807672023773193
    7. ' ' → logprob: -4.932672023773193
    8. ' une' → logprob: -5.807672023773193
    9. 'la' → logprob: -5.807672023773193
    10. 'une' → logprob: -6.682672023773193

Token 63: ' fonction' (ID: 17610)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.41974928975105286
    2. ' input' → logprob: -1.2947492599487305
    3. 'message' → logprob: -4.1697492599487305
    4. ' message' → logprob: -4.4197492599487305
    5. 'fonction' → logprob: -4.6697492599487305
    6. ' clavier' → logprob: -4.6697492599487305
    7. 'print' → logprob: -4.9197492599487305
    8. 'texte' → logprob: -5.0447492599487305
    9. ' prompt' → logprob: -6.2947492599487305
    10. 'prompt' → logprob: -6.4197492599487305

Token 64: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28943556547164917
    2. 'input' → logprob: -1.539435625076294
    3. ' input' → logprob: -3.789435625076294
    4. '(input' → logprob: -4.664435386657715
    5. '()' → logprob: -6.789435386657715
    6. ' (' → logprob: -6.914435386657715
    7. '('' → logprob: -7.789435386657715
    8. ' )' → logprob: -7.789435386657715
    9. '("' → logprob: -8.039435386657715
    10. ')' → logprob: -8.164435386657715

Token 65: '().
' (ID: 58434)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28153201937675476
    2. '(' → logprob: -1.4065320491790771
    3. '('' → logprob: -8.781532287597656
    4. '("' → logprob: -9.031532287597656
    5. '("")' → logprob: -11.031532287597656
    6. ' ()' → logprob: -11.531532287597656
    7. '("("' → logprob: -11.531532287597656
    8. '();' → logprob: -11.781532287597656
    9. '("""' → logprob: -11.781532287597656
    10. 's' → logprob: -12.031532287597656

Token 66: '#' (ID: 2)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.08337441831827164
    2. 'username' → logprob: -4.083374500274658
    3. 'nom' → logprob: -4.208374500274658
    4. 'util' → logprob: -4.333374500274658
    5. 's' → logprob: -4.708374500274658
    6. 'message' → logprob: -5.333374500274658
    7. 'print' → logprob: -5.333374500274658
    8. 'n' → logprob: -5.833374500274658
    9. 'name' → logprob: -5.958374500274658
    10. 'u' → logprob: -6.083374500274658

Token 67: ' Cette' (ID: 27383)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.23426347970962524
    2. 's' → logprob: -2.7342634201049805
    3. 'nom' → logprob: -2.9842634201049805
    4. 'username' → logprob: -3.8592634201049805
    5. 'name' → logprob: -4.2342634201049805
    6. 'result' → logprob: -4.3592634201049805
    7. 'print' → logprob: -4.8592634201049805
    8. '#' → logprob: -5.1092634201049805
    9. 'message' → logprob: -5.1092634201049805
    10. 'value' → logprob: -5.3592634201049805

Token 68: ' sais' (ID: 30010)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.4473668336868286
    2. ' sais' → logprob: -1.4473668336868286
    3. '()' → logprob: -1.8223668336868286
    4. ' valeur' → logprob: -2.447366714477539
    5. ' chaîne' → logprob: -2.822366714477539
    6. ' est' → logprob: -3.322366714477539
    7. ' fonction' → logprob: -3.447366714477539
    8. ' entrée' → logprob: -3.947366714477539
    9. 's' → logprob: -4.197366714477539
    10. '(' → logprob: -4.322366714477539

Token 69: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.055069699883461
    2. 'ie' → logprob: -3.0550696849823
    3. 's' → logprob: -5.555069923400879
    4. 'i' → logprob: -6.805069923400879
    5. 'es' → logprob: -7.680069923400879
    6. 't' → logprob: -8.555069923400879
    7. 'is' → logprob: -9.180069923400879
    8. 'n' → logprob: -9.430069923400879
    9. 'se' → logprob: -9.555069923400879
    10. 'l' → logprob: -9.555069923400879

Token 70: ' est' (ID: 893)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32844290137290955
    2. ' utilisateur' → logprob: -1.828442931175232
    3. ' est' → logprob: -3.3284428119659424
    4. ' ' → logprob: -3.5784428119659424
    5. '(' → logprob: -4.2034430503845215
    6. ' )' → logprob: -5.4534430503845215
    7. 'user' → logprob: -5.7034430503845215
    8. ' de' → logprob: -5.8284430503845215
    9. ' peut' → logprob: -5.9534430503845215
    10. ' (' → logprob: -6.0784430503845215

Token 71: ' ensuite' (ID: 39713)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.8490747213363647
    2. ' souvent' → logprob: -1.8490747213363647
    3. ' généralement' → logprob: -1.8490747213363647
    4. ' convert' → logprob: -2.4740748405456543
    5. ' utilisée' → logprob: -3.0990748405456543
    6. ' une' → logprob: -3.3490748405456543
    7. ' ensuite' → logprob: -3.8490748405456543
    8. 'r' → logprob: -4.724074840545654
    9. 'stock' → logprob: -4.724074840545654
    10. ' transform' → logprob: -4.849074840545654

Token 72: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.017118429765105247
    2. 'stock' → logprob: -4.267118453979492
    3. ' assign' → logprob: -7.142118453979492
    4. ' convert' → logprob: -7.142118453979492
    5. ' affect' → logprob: -7.267118453979492
    6. 'assign' → logprob: -8.517118453979492
    7. ' utilisée' → logprob: -9.142118453979492
    8. 'convert' → logprob: -9.267118453979492
    9. ' transform' → logprob: -10.267118453979492
    10. '_stock' → logprob: -10.392118453979492

Token 73: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.69317626953125
    2. 'ée' → logprob: -0.69317626953125
    3. ' é' → logprob: -10.81817626953125
    4. 'ê' → logprob: -13.19317626953125
    5. 'ä' → logprob: -13.56817626953125
    6. 'e' → logprob: -13.56817626953125
    7. 'ė' → logprob: -13.69317626953125
    8. 'ées' → logprob: -14.44317626953125
    9. 'á' → logprob: -14.94317626953125
    10. 'è' → logprob: -15.19317626953125

Token 74: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05882701277732849
    2. ' dans' → logprob: -3.5588269233703613
    3. '_' → logprob: -4.183826923370361
    4. 'dans' → logprob: -5.183826923370361
    5. 's' → logprob: -6.183826923370361
    6. ' =' → logprob: -6.683826923370361
    7. '  ' → logprob: -7.058826923370361
    8. '=' → logprob: -7.308826923370361
    9. ')' → logprob: -7.683826923370361
    10. ' a' → logprob: -7.683826923370361

Token 75: ' la' (ID: 557)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.8050525784492493
    2. ' une' → logprob: -1.5550525188446045
    3. ' ' → logprob: -1.6800525188446045
    4. ' la' → logprob: -2.5550525188446045
    5. ' nom' → logprob: -3.5550525188446045
    6. ' a' → logprob: -4.305052757263184
    7. ' ma' → logprob: -4.805052757263184
    8. ' user' → logprob: -4.930052757263184
    9. ' un' → logprob: -5.680052757263184
    10. 'variable' → logprob: -5.930052757263184

Token 76: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.7627052664756775
    2. 'variable' → logprob: -1.6377053260803223
    3. 'a' → logprob: -1.8877053260803223
    4. 's' → logprob: -2.2627053260803223
    5. ' a' → logprob: -3.8877053260803223
    6. 'une' → logprob: -4.762705326080322
    7. ' s' → logprob: -5.012705326080322
    8. ' nom' → logprob: -5.012705326080322
    9. 'e' → logprob: -5.137705326080322
    10. '_' → logprob: -5.637705326080322

Token 77: ' s' (ID: 265)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.9895927906036377
    2. ' nom' → logprob: -1.4895927906036377
    3. ' ' → logprob: -1.7395927906036377
    4. 'nom' → logprob: -2.6145927906036377
    5. 'user' → logprob: -2.9895927906036377
    6. ' name' → logprob: -3.6145927906036377
    7. 's' → logprob: -4.364592552185059
    8. 'n' → logprob: -4.364592552185059
    9. ' username' → logprob: -4.364592552185059
    10. 'name' → logprob: -4.739592552185059

Token 78: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1397455632686615
    2. 's' → logprob: -2.3897454738616943
    3. '=' → logprob: -3.8897454738616943
    4. ' ' → logprob: -5.014745712280273
    5. '_' → logprob: -5.139745712280273
    6. '_s' → logprob: -6.389745712280273
    7. ',' → logprob: -7.014745712280273
    8. 'u' → logprob: -7.139745712280273
    9. '.' → logprob: -7.264745712280273
    10. '1' → logprob: -8.139745712280273

Token 79: ' être' (ID: 9104)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23100700974464417
    2. ' pouvoir' → logprob: -2.2310070991516113
    3. ' être' → logprob: -2.9810070991516113
    4. ' continuer' → logprob: -4.231007099151611
    5. ' une' → logprob: -5.231007099151611
    6. ' s' → logprob: -5.481007099151611
    7. 'être' → logprob: -5.856007099151611
    8. '_' → logprob: -5.981007099151611
    9. ' permettre' → logprob: -6.106007099151611
    10. ' e' → logprob: -6.231007099151611

Token 80: ' utilisée' (ID: 106548)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5719502568244934
    2. ' trait' → logprob: -1.5719501972198486
    3. ' utilisée' → logprob: -2.0719501972198486
    4. ' utilis' → logprob: -3.9469501972198486
    5. ' manipul' → logprob: -4.446950435638428
    6. ' explo' → logprob: -4.446950435638428
    7. ' ' → logprob: -4.696950435638428
    8. 'trait' → logprob: -4.821950435638428
    9. ' u' → logprob: -4.821950435638428
    10. 'util' → logprob: -5.071950435638428

Token 81: ' plus' (ID: 2932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6371467709541321
    2. ' s' → logprob: -2.1371467113494873
    3. ' dans' → logprob: -2.1371467113494873
    4. '.' → logprob: -2.2621467113494873
    5. 's' → logprob: -3.2621467113494873
    6. ' a' → logprob: -3.6371467113494873
    7. '_' → logprob: -4.262146949768066
    8. ',' → logprob: -5.012146949768066
    9. ' .' → logprob: -5.137146949768066
    10. ' afin' → logprob: -5.262146949768066

Token 82: ' tard' (ID: 30225)
  Prédit: ' tard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tard' → logprob: -0.0013915427261963487
    2. 't' → logprob: -6.876391410827637
    3. ' t' → logprob: -8.626391410827637
    4. ' tarde' → logprob: -9.251391410827637
    5. ' loin' → logprob: -10.751391410827637
    6. ' adelante' → logprob: -11.376391410827637
    7. ' ' → logprob: -11.501391410827637
    8. ' ' → logprob: -11.751391410827637
    9. ' longtemps' → logprob: -11.751391410827637
    10. ' tâ' → logprob: -11.876391410827637

Token 83: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011905835708603263
    2. ' s' → logprob: -6.876190662384033
    3. '.' → logprob: -10.376190185546875
    4. ',' → logprob: -10.501190185546875
    5. 'a' → logprob: -10.751190185546875
    6. '```' → logprob: -11.126190185546875
    7. 'n' → logprob: -11.376190185546875
    8. ' ' → logprob: -11.501190185546875
    9. ':' → logprob: -11.626190185546875
    10. '_s' → logprob: -11.876190185546875

Token 84: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.584239938296378e-06
    2. '```' → logprob: -11.875007629394531
    3. '`s' → logprob: -15.125007629394531
    4. ' s' → logprob: -15.375007629394531
    5. '`' → logprob: -17.00000762939453
    6. '``' → logprob: -18.25000762939453
    7. 'n' → logprob: -18.62500762939453
    8. '
' → logprob: -18.75000762939453
    9. '#' → logprob: -19.62500762939453
    10. 'name' → logprob: -20.25000762939453

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018345076590776443
    2. '=' → logprob: -4.018344879150391
    3. ' ' → logprob: -8.76834487915039
    4. '.' → logprob: -11.14334487915039
    5. ' =
' → logprob: -11.89334487915039
    6. 's' → logprob: -12.26834487915039
    7. ',' → logprob: -12.51834487915039
    8. ' ' → logprob: -12.89334487915039
    9. 'space' → logprob: -13.14334487915039
    10. ' ,' → logprob: -13.89334487915039

Token 86: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.009760456159710884
    2. 'input' → logprob: -4.63476037979126
    3. ' ' → logprob: -13.134760856628418
    4. ' ' → logprob: -13.634760856628418
    5. ' inp' → logprob: -15.134760856628418
    6. '=input' → logprob: -15.134760856628418
    7. '(input' → logprob: -15.384760856628418
    8. '	input' → logprob: -16.0097599029541
    9. ' in' → logprob: -16.1347599029541
    10. ' "' → logprob: -16.5097599029541

Token 87: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4895270764827728
    2. '(' → logprob: -0.9895271062850952
    3. '("' → logprob: -4.364527225494385
    4. '("("' → logprob: -6.989527225494385
    5. '("")' → logprob: -7.114527225494385
    6. '('' → logprob: -7.114527225494385
    7. ' ()' → logprob: -11.114526748657227
    8. '("""' → logprob: -11.364526748657227
    9. '("(' → logprob: -11.489526748657227
    10. ' (' → logprob: -12.614526748657227

Token 88: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1178311109542847
    2. '(' → logprob: -1.1178311109542847
    3. '.' → logprob: -2.117831230163574
    4. ')' → logprob: -2.742831230163574
    5. '<|end|>' → logprob: -2.992831230163574
    6. ' ' → logprob: -3.492831230163574
    7. '```' → logprob: -3.992831230163574
    8. '[' → logprob: -3.992831230163574
    9. ''' → logprob: -4.242831230163574
    10. '\' → logprob: -5.242831230163574

Token 89: ' On' (ID: 2160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5515002608299255
    2. '#' → logprob: -1.5515003204345703
    3. ')' → logprob: -2.9265003204345703
    4. '.' → logprob: -3.1765003204345703
    5. ' ' → logprob: -3.8015003204345703
    6. ''' → logprob: -3.9265003204345703
    7. 's' → logprob: -3.9265003204345703
    8. '"' → logprob: -4.17650032043457
    9. 'print' → logprob: -4.17650032043457
    10. '+' → logprob: -5.42650032043457

Token 90: ' utilise' (ID: 70283)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8486695289611816
    2. ' =' → logprob: -2.2236695289611816
    3. 'print' → logprob: -2.5986695289611816
    4. '(' → logprob: -2.7236695289611816
    5. '#' → logprob: -2.8486695289611816
    6. '('' → logprob: -3.3486695289611816
    7. '_' → logprob: -3.5986695289611816
    8. ')' → logprob: -3.7236695289611816
    9. '()' → logprob: -3.8486695289611816
    10. ''' → logprob: -3.8486695289611816

Token 91: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03989602252840996
    2. '("' → logprob: -3.539896011352539
    3. '('' → logprob: -5.414896011352539
    4. '()' → logprob: -5.914896011352539
    5. '("""' → logprob: -6.414896011352539
    6. '(s' → logprob: -7.789896011352539
    7. ' (' → logprob: -8.289896011352539
    8. ' ' → logprob: -8.664896011352539
    9. 's' → logprob: -8.789896011352539
    10. ' ("' → logprob: -9.914896011352539

Token 92: ' méthode' (ID: 71490)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1482502222061157
    2. 's' → logprob: -1.1482502222061157
    3. ' ' → logprob: -2.148250102996826
    4. '.strip' → logprob: -3.023250102996826
    5. ',' → logprob: -4.023250102996826
    6. '+' → logprob: -4.148250102996826
    7. 'len' → logprob: -4.273250102996826
    8. ')' → logprob: -4.398250102996826
    9. '.lower' → logprob: -4.523250102996826
    10. '=' → logprob: -4.523250102996826

Token 93: ' count' (ID: 3605)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010615098290145397
    2. '(' → logprob: -8.25106143951416
    3. '.s' → logprob: -8.50106143951416
    4. '.lower' → logprob: -8.50106143951416
    5. '.strip' → logprob: -8.75106143951416
    6. '()' → logprob: -9.37606143951416
    7. 's' → logprob: -9.62606143951416
    8. '().' → logprob: -9.87606143951416
    9. '.upper' → logprob: -11.37606143951416
    10. ' .' → logprob: -12.50106143951416

Token 94: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14991801977157593
    2. '('' → logprob: -2.0249180793762207
    3. '("("' → logprob: -5.149918079376221
    4. '("' → logprob: -6.899918079376221
    5. '('.')' → logprob: -8.274917602539062
    6. '("")' → logprob: -10.649917602539062
    7. '(
' → logprob: -10.774917602539062
    8. ''' → logprob: -10.899917602539062
    9. '("""' → logprob: -11.024917602539062
    10. '()' → logprob: -11.024917602539062

Token 95: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04997836798429489
    2. '('' → logprob: -3.049978256225586
    3. '("("' → logprob: -6.799978256225586
    4. '("' → logprob: -9.174978256225586
    5. ''' → logprob: -10.174978256225586
    6. '(
' → logprob: -10.299978256225586
    7. '('.')' → logprob: -10.424978256225586
    8. '.' → logprob: -10.549978256225586
    9. ' (' → logprob: -11.049978256225586
    10. '("""' → logprob: -12.549978256225586

Token 96: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6559008359909058
    2. 's' → logprob: -0.9059008359909058
    3. '(s' → logprob: -3.2809009552001953
    4. ' la' → logprob: -3.4059009552001953
    5. ' ' → logprob: -6.530900955200195
    6. ' une' → logprob: -6.655900955200195
    7. '(' → logprob: -7.280900955200195
    8. ' l' → logprob: -7.655900955200195
    9. 'a' → logprob: -8.155900955200195
    10. 'l' → logprob: -8.280900955200195

Token 97: ' chaîne' (ID: 89288)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.40568777918815613
    2. 's' → logprob: -1.1556878089904785
    3. ' string' → logprob: -4.5306878089904785
    4. ' chaîne' → logprob: -5.9056878089904785
    5. 'string' → logprob: -6.4056878089904785
    6. 'a' → logprob: -7.4056878089904785
    7. ' ' → logprob: -7.6556878089904785
    8. 'chaine' → logprob: -7.9056878089904785
    9. ' variable' → logprob: -8.03068733215332
    10. ' chaine' → logprob: -8.53068733215332

Token 98: ' s' (ID: 265)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42297425866127014
    2. '('' → logprob: -1.2979742288589478
    3. '("' → logprob: -3.0479743480682373
    4. 's' → logprob: -4.297974109649658
    5. '("("' → logprob: -5.422974109649658
    6. '(s' → logprob: -6.047974109649658
    7. ''' → logprob: -7.047974109649658
    8. '(
' → logprob: -7.547974109649658
    9. '()' → logprob: -7.922974109649658
    10. ' (' → logprob: -8.172974586486816

Token 99: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05755173787474632
    2. '('' → logprob: -2.932551622390747
    3. '("("' → logprob: -6.682551860809326
    4. '("' → logprob: -7.182551860809326
    5. '('.')' → logprob: -8.432551383972168
    6. '(
' → logprob: -9.057551383972168
    7. ' (' → logprob: -9.182551383972168
    8. '.' → logprob: -9.307551383972168
    9. ''' → logprob: -10.182551383972168
    10. 's' → logprob: -10.682551383972168

Token 100: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11034959554672241
    2. '('' → logprob: -2.360349655151367
    3. 's' → logprob: -5.235349655151367
    4. '("' → logprob: -6.360349655151367
    5. '(s' → logprob: -6.485349655151367
    6. '("("' → logprob: -7.235349655151367
    7. '('.')' → logprob: -8.735349655151367
    8. ''' → logprob: -8.735349655151367
    9. '(
' → logprob: -8.860349655151367
    10. '.' → logprob: -8.985349655151367

Token 101: ' .' (ID: 887)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.112006776034832
    2. '('' → logprob: -2.487006664276123
    3. ''' → logprob: -4.237006664276123
    4. 's' → logprob: -5.862006664276123
    5. '("("' → logprob: -6.487006664276123
    6. '("' → logprob: -6.612006664276123
    7. ' (' → logprob: -6.987006664276123
    8. '(s' → logprob: -7.737006664276123
    9. '"' → logprob: -8.237007141113281
    10. '('.')' → logprob: -8.362007141113281

Token 102: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45961251854896545
    2. 's' → logprob: -2.2096126079559326
    3. 'print' → logprob: -2.4596126079559326
    4. ''' → logprob: -2.4596126079559326
    5. '"' → logprob: -3.9596126079559326
    6. ')' → logprob: -4.2096123695373535
    7. ' count' → logprob: -4.2096123695373535
    8. '(' → logprob: -4.9596123695373535
    9. ''s' → logprob: -5.4596123695373535
    10. ' ' → logprob: -5.5846123695373535

Token 103: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6623584628105164
    2. '(' → logprob: -0.7873584628105164
    3. '("("' → logprob: -3.787358522415161
    4. '("' → logprob: -5.037358283996582
    5. '("")' → logprob: -10.287358283996582
    6. '(
' → logprob: -10.662358283996582
    7. '('.')' → logprob: -10.912358283996582
    8. '("""' → logprob: -10.912358283996582
    9. ''' → logprob: -11.287358283996582
    10. ' (' → logprob: -11.662358283996582

Token 104: 'R' (ID: 49)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.306407630443573
    2. 'e' → logprob: -1.6814076900482178
    3. ' ")' → logprob: -3.3064076900482178
    4. 'o' → logprob: -4.056407451629639
    5. '")' → logprob: -5.306407451629639
    6. 'l' → logprob: -5.431407451629639
    7. '"' → logprob: -5.806407451629639
    8. 'i' → logprob: -6.056407451629639
    9. ' "' → logprob: -6.556407451629639
    10. ''' → logprob: -7.181407451629639

Token 105: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.1725134402513504
    2. 'e' → logprob: -2.547513484954834
    3. 'ed' → logprob: -4.297513484954834
    4. 'o' → logprob: -4.422513484954834
    5. 'a' → logprob: -4.672513484954834
    6. 'ose' → logprob: -5.172513484954834
    7. 'em' → logprob: -5.922513484954834
    8. 'R' → logprob: -6.047513484954834
    9. 'osa' → logprob: -6.297513484954834
    10. 'é' → logprob: -6.297513484954834

Token 106: ' retourne' (ID: 178818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2779178321361542
    2. ')' → logprob: -2.0279178619384766
    3. '("' → logprob: -2.4029178619384766
    4. 'R' → logprob: -4.902917861938477
    5. '(
' → logprob: -5.402917861938477
    6. '('' → logprob: -6.402917861938477
    7. 's' → logprob: -6.402917861938477
    8. ' ' → logprob: -6.652917861938477
    9. '(R' → logprob: -7.027917861938477
    10. '"' → logprob: -7.152917861938477

Token 107: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.06452945619821548
    2. ' ' → logprob: -2.9395294189453125
    3. ' la' → logprob: -5.6895294189453125
    4. ' s' → logprob: -6.1895294189453125
    5. ' l' → logprob: -6.4395294189453125
    6. 'le' → logprob: -7.4395294189453125
    7. 's' → logprob: -7.6895294189453125
    8. ' combien' → logprob: -7.6895294189453125
    9. ' the' → logprob: -8.189529418945312
    10. ' len' → logprob: -8.314529418945312

Token 108: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.04131253808736801
    2. 'nombre' → logprob: -3.2913124561309814
    3. ' ' → logprob: -6.4163126945495605
    4. ' nomb' → logprob: -7.6663126945495605
    5. ' nombres' → logprob: -8.166312217712402
    6. 'n' → logprob: -8.791312217712402
    7. ' nom' → logprob: -8.916312217712402
    8. ' nombr' → logprob: -9.041312217712402
    9. ' n' → logprob: -9.166312217712402
    10. ' ' → logprob: -9.541312217712402

Token 109: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.544158935546875
    2. ' de' → logprob: -1.169158935546875
    3. ' des' → logprob: -2.669158935546875
    4. ' d' → logprob: -3.794158935546875
    5. '<|end|>' → logprob: -4.794158935546875
    6. 'de' → logprob: -5.794158935546875
    7. '  ' → logprob: -6.669158935546875
    8. 's' → logprob: -6.919158935546875
    9. ' )' → logprob: -7.044158935546875
    10. 'des' → logprob: -7.044158935546875

Token 110: ''occ' (ID: 158932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7721809148788452
    2. ' occurrences' → logprob: -0.8971809148788452
    3. ' '' → logprob: -3.3971810340881348
    4. 's' → logprob: -3.8971810340881348
    5. '<|end|>' → logprob: -4.147181034088135
    6. ''occ' → logprob: -4.397181034088135
    7. '  ' → logprob: -4.647181034088135
    8. ''' → logprob: -5.397181034088135
    9. ' s' → logprob: -5.397181034088135
    10. ' "' → logprob: -5.522181034088135

Token 111: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.0010712771909311414
    2. 'u' → logprob: -7.501071453094482
    3. 'ur' → logprob: -8.251070976257324
    4. 'urrencies' → logprob: -8.751070976257324
    5. ' occurrences' → logprob: -10.376070976257324
    6. 'URRENC' → logprob: -10.626070976257324
    7. 'urr' → logprob: -11.126070976257324
    8. 'urrence' → logprob: -12.126070976257324
    9. '```' → logprob: -12.376070976257324
    10. 'orr' → logprob: -12.876070976257324

Token 112: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6859676837921143
    2. ' de' → logprob: -0.9359676837921143
    3. 's' → logprob: -3.3109676837921143
    4. '"' → logprob: -4.310967445373535
    5. ')' → logprob: -4.435967445373535
    6. '(' → logprob: -4.560967445373535
    7. ' )' → logprob: -4.810967445373535
    8. 'r' → logprob: -5.560967445373535
    9. ' R' → logprob: -5.685967445373535
    10. ' (' → logprob: -5.810967445373535

Token 113: ' caractère' (ID: 80509)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5673980712890625
    2. 'R' → logprob: -1.0673980712890625
    3. ' R' → logprob: -3.0673980712890625
    4. ' "' → logprob: -3.9423980712890625
    5. ''' → logprob: -4.0673980712890625
    6. ' '' → logprob: -5.9423980712890625
    7. ' ' → logprob: -6.8173980712890625
    8. ' caract' → logprob: -7.3173980712890625
    9. ' caractère' → logprob: -8.067398071289062
    10. 'car' → logprob: -8.692398071289062

Token 114: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0691429376602173
    2. ' R' → logprob: -1.4441429376602173
    3. 'R' → logprob: -1.6941429376602173
    4. ' "' → logprob: -2.4441428184509277
    5. ''' → logprob: -2.6941428184509277
    6. ' ' → logprob: -3.0691428184509277
    7. ' '' → logprob: -3.4441428184509277
    8. 'r' → logprob: -6.694142818450928
    9. 's' → logprob: -7.069142818450928
    10. ')' → logprob: -8.631643295288086

Token 115: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.013315049931406975
    2. '"' → logprob: -4.388315200805664
    3. ' R' → logprob: -8.263315200805664
    4. '")' → logprob: -8.388315200805664
    5. ''' → logprob: -9.013315200805664
    6. ')' → logprob: -10.513315200805664
    7. 'a' → logprob: -10.638315200805664
    8. '"""' → logprob: -10.763315200805664
    9. 'r' → logprob: -10.888315200805664
    10. 'e' → logprob: -10.888315200805664

Token 116: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.009007937274873257
    2. '"' → logprob: -5.009007930755615
    3. ')' → logprob: -6.634007930755615
    4. ' ")' → logprob: -7.884007930755615
    5. '",' → logprob: -8.634008407592773
    6. 'r' → logprob: -9.759008407592773
    7. ')")' → logprob: -9.884008407592773
    8. ' dans' → logprob: -9.884008407592773
    9. '.")' → logprob: -10.134008407592773
    10. 's' → logprob: -10.509008407592773

Token 117: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6713982224464417
    2. ')' → logprob: -0.7963982224464417
    3. '.' → logprob: -4.796398162841797
    4. '(' → logprob: -4.921398162841797
    5. 'r' → logprob: -5.546398162841797
    6. ' s' → logprob: -5.671398162841797
    7. ',' → logprob: -5.921398162841797
    8. '(s' → logprob: -6.046398162841797
    9. ' )' → logprob: -6.171398162841797
    10. 'print' → logprob: -6.421398162841797

Token 118: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3152635395526886
    2. 's' → logprob: -1.3152635097503662
    3. ' la' → logprob: -6.940263748168945
    4. ' ' → logprob: -7.190263748168945
    5. 'la' → logprob: -8.940263748168945
    6. ' ' → logprob: -9.690263748168945
    7. 'l' → logprob: -10.565263748168945
    8. ' l' → logprob: -11.065263748168945
    9. '(s' → logprob: -11.690263748168945
    10. 'a' → logprob: -12.315263748168945

Token 119: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1843712031841278
    2. 's' → logprob: -2.55937123298645
    3. ')' → logprob: -3.18437123298645
    4. 'r' → logprob: -3.30937123298645
    5. '.' → logprob: -4.934370994567871
    6. 'R' → logprob: -5.934370994567871
    7. '#' → logprob: -7.309370994567871
    8. 'result' → logprob: -7.934370994567871
    9. ' print' → logprob: -8.059370994567871
    10. 'count' → logprob: -8.184370994567871

Token 120: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.456682950258255
    2. 'r' → logprob: -1.2066829204559326
    3. 'R' → logprob: -3.3316829204559326
    4. 's' → logprob: -3.9566829204559326
    5. 'result' → logprob: -5.456683158874512
    6. 'n' → logprob: -5.831683158874512
    7. 'count' → logprob: -5.831683158874512
    8. 'p' → logprob: -7.581683158874512
    9. 'res' → logprob: -8.206683158874512
    10. 'nombre' → logprob: -8.206683158874512

Token 121: ' .' (ID: 887)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013361270539462566
    2. 'count' → logprob: -5.13836145401001
    3. 'r' → logprob: -5.38836145401001
    4. 'result' → logprob: -6.01336145401001
    5. 'n' → logprob: -9.138360977172852
    6. 'nombre' → logprob: -9.388360977172852
    7. 'occ' → logprob: -9.763360977172852
    8. 'res' → logprob: -10.138360977172852
    9. 'R' → logprob: -10.513360977172852
    10. 'occur' → logprob: -10.763360977172852

Token 122: 'count' (ID: 5420)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2147899866104126
    2. 'count' → logprob: -1.7147899866104126
    3. 'r' → logprob: -4.589789867401123
    4. 's' → logprob: -7.089789867401123
    5. ' print' → logprob: -7.464789867401123
    6. '#' → logprob: -7.714789867401123
    7. 'result' → logprob: -8.089790344238281
    8. 'R' → logprob: -8.464790344238281
    9. ' count' → logprob: -8.714790344238281
    10. 'c' → logprob: -9.464790344238281

Token 123: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09036397933959961
    2. '(' → logprob: -2.7153639793395996
    3. '("("' → logprob: -3.9653639793395996
    4. '('' → logprob: -6.9653639793396
    5. '("")' → logprob: -8.590364456176758
    6. '()' → logprob: -10.465364456176758
    7. '("_' → logprob: -10.840364456176758
    8. '(">' → logprob: -11.215364456176758
    9. '(
' → logprob: -11.340364456176758
    10. '("="' → logprob: -11.590364456176758

Token 124: 'B' (ID: 33)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.29326966404914856
    2. 'R' → logprob: -2.168269634246826
    3. 'a' → logprob: -3.293269634246826
    4. ' ")' → logprob: -3.793269634246826
    5. 'e' → logprob: -4.043269634246826
    6. 'A' → logprob: -4.543269634246826
    7. '")' → logprob: -4.793269634246826
    8. '"' → logprob: -4.918269634246826
    9. 'o' → logprob: -5.418269634246826
    10. 'E' → logprob: -5.918269634246826

Token 125: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0033901643473654985
    2. 'R' → logprob: -6.503390312194824
    3. '"' → logprob: -6.753390312194824
    4. ' ")' → logprob: -9.003390312194824
    5. ')")' → logprob: -9.253390312194824
    6. 'r' → logprob: -9.253390312194824
    7. ')' → logprob: -9.503390312194824
    8. 'B' → logprob: -10.128390312194824
    9. '("' → logprob: -10.253390312194824
    10. 'a' → logprob: -10.503390312194824

Token 126: ' fait' (ID: 7473)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34064552187919617
    2. ')' → logprob: -1.4656455516815186
    3. 's' → logprob: -3.7156455516815186
    4. ' retourne' → logprob: -4.7156453132629395
    5. '(s' → logprob: -5.4656453132629395
    6. 'ret' → logprob: -5.4656453132629395
    7. '(' → logprob: -5.7156453132629395
    8. '())' → logprob: -5.9656453132629395
    9. 'return' → logprob: -5.9656453132629395
    10. ' s' → logprob: -6.5906453132629395

Token 127: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4682016670703888
    2. '("' → logprob: -1.4682016372680664
    3. '(s' → logprob: -2.8432016372680664
    4. ')' → logprob: -3.4682016372680664
    5. 's' → logprob: -3.7182016372680664
    6. '("")' → logprob: -4.468201637268066
    7. '()' → logprob: -5.593201637268066
    8. ' ' → logprob: -5.718201637268066
    9. 'e' → logprob: -6.718201637268066
    10. ' la' → logprob: -6.718201637268066

Token 128: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.5310310125350952
    2. 'm' → logprob: -0.9060310125350952
    3. ' m' → logprob: -6.281031131744385
    4. ' same' → logprob: -6.406031131744385
    5. 'same' → logprob: -6.531031131744385
    6. 'nombre' → logprob: -7.031031131744385
    7. ' ' → logprob: -7.531031131744385
    8. ' pareil' → logprob: -7.906031131744385
    9. ' mêmes' → logprob: -8.531030654907227
    10. ' meme' → logprob: -8.656030654907227

Token 129: ' chose' (ID: 15505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7137428522109985
    2. '(s' → logprob: -1.9637428522109985
    3. '()' → logprob: -2.088742733001709
    4. '(' → logprob: -2.463742733001709
    5. 's' → logprob: -2.588742733001709
    6. ')' → logprob: -3.088742733001709
    7. '.' → logprob: -4.588742733001709
    8. ' ' → logprob: -4.588742733001709
    9. '("")' → logprob: -5.088742733001709
    10. ' s' → logprob: -5.963742733001709

Token 130: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3439745903015137
    2. '.' → logprob: -1.5939745903015137
    3. '("' → logprob: -1.8439745903015137
    4. '(' → logprob: -1.9689745903015137
    5. ')' → logprob: -2.2189745903015137
    6. '(s' → logprob: -2.8439745903015137
    7. ',' → logprob: -3.5939745903015137
    8. ' s' → logprob: -4.468974590301514
    9. '(
' → logprob: -4.468974590301514
    10. ' ' → logprob: -5.343974590301514

Token 131: ' le' (ID: 505)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.751262903213501
    2. '"' → logprob: -0.876262903213501
    3. ' "' → logprob: -2.251262903213501
    4. ' ' → logprob: -5.876262664794922
    5. 's' → logprob: -6.626262664794922
    6. '("' → logprob: -7.126262664794922
    7. ' s' → logprob: -7.376262664794922
    8. '"s' → logprob: -8.751262664794922
    9. ' B' → logprob: -8.876262664794922
    10. ''' → logprob: -9.001262664794922

Token 132: ' caractère' (ID: 80509)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.3228698670864105
    2. '"' → logprob: -1.322869896888733
    3. ' "' → logprob: -5.947869777679443
    4. 'B' → logprob: -6.072869777679443
    5. ''' → logprob: -6.072869777679443
    6. ' ' → logprob: -6.947869777679443
    7. ' B' → logprob: -7.697869777679443
    8. 'R' → logprob: -8.197870254516602
    9. '")' → logprob: -9.322870254516602
    10. '  ' → logprob: -9.447870254516602

Token 133: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09238741546869278
    2. '"B' → logprob: -2.9673874378204346
    3. ' "' → logprob: -3.4673874378204346
    4. '"O' → logprob: -6.3423871994018555
    5. ' ' → logprob: -6.4673871994018555
    6. ''' → logprob: -7.0923871994018555
    7. '"A' → logprob: -7.4673871994018555
    8. ' R' → logprob: -9.217387199401855
    9. '"I' → logprob: -9.467387199401855
    10. '("' → logprob: -9.467387199401855

Token 134: 'B' (ID: 33)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.660513162612915
    2. 'B' → logprob: -1.535513162612915
    3. '"' → logprob: -1.785513162612915
    4. '"B' → logprob: -2.410513162612915
    5. '")' → logprob: -5.035512924194336
    6. ''' → logprob: -6.410512924194336
    7. '"""' → logprob: -8.035512924194336
    8. 'O' → logprob: -8.285512924194336
    9. ')' → logprob: -8.535512924194336
    10. '"O' → logprob: -9.035512924194336

Token 135: '".
' (ID: 26880)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00297223380766809
    2. ')' → logprob: -6.37797212600708
    3. ')")' → logprob: -7.50297212600708
    4. '"' → logprob: -7.75297212600708
    5. 's' → logprob: -8.502972602844238
    6. '").' → logprob: -10.627972602844238
    7. ')"' → logprob: -10.627972602844238
    8. '")
' → logprob: -11.877972602844238
    9. ' ")' → logprob: -12.127972602844238
    10. '.")' → logprob: -12.377972602844238

Token 136: '#' (ID: 2)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.29838475584983826
    2. 'print' → logprob: -1.6733847856521606
    3. 'R' → logprob: -3.673384666442871
    4. 'result' → logprob: -3.798384666442871
    5. 's' → logprob: -5.423384666442871
    6. 'n' → logprob: -5.548384666442871
    7. 'count' → logprob: -5.798384666442871
    8. 'total' → logprob: -5.923384666442871
    9. '"' → logprob: -6.298384666442871
    10. 'res' → logprob: -6.923384666442871

Token 137: ' On' (ID: 2160)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5833033919334412
    2. 'print' → logprob: -1.083303451538086
    3. 'result' → logprob: -3.083303451538086
    4. 'count' → logprob: -3.708303451538086
    5. 'total' → logprob: -4.333303451538086
    6. 'n' → logprob: -5.083303451538086
    7. 'nombre' → logprob: -5.833303451538086
    8. 'nb' → logprob: -5.958303451538086
    9. 'rb' → logprob: -6.333303451538086
    10. 'R' → logprob: -6.458303451538086

Token 138: ' compare' (ID: 12221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05974912643432617
    2. ' print' → logprob: -3.934749126434326
    3. 'r' → logprob: -4.184749126434326
    4. 's' → logprob: -4.559749126434326
    5. '#' → logprob: -5.559749126434326
    6. 'pr' → logprob: -6.809749126434326
    7. 'total' → logprob: -6.809749126434326
    8. 'count' → logprob: -6.934749126434326
    9. 'p' → logprob: -7.309749126434326
    10. 'R' → logprob: -7.559749126434326

Token 139: ' ces' (ID: 10532)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7859640121459961
    2. ' s' → logprob: -0.9109640121459961
    3. '(s' → logprob: -2.660964012145996
    4. '(' → logprob: -2.785964012145996
    5. ' (' → logprob: -5.535964012145996
    6. ' if' → logprob: -6.160964012145996
    7. ' le' → logprob: -6.785964012145996
    8. ' ' → logprob: -7.160964012145996
    9. '(
' → logprob: -7.410964012145996
    10. ' les' → logprob: -7.410964012145996

Token 140: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.4092596173286438
    2. ' ' → logprob: -1.659259557723999
    3. ')' → logprob: -3.159259557723999
    4. ' two' → logprob: -3.909259557723999
    5. ' counts' → logprob: -4.159259796142578
    6. 's' → logprob: -4.159259796142578
    7. ' nombres' → logprob: -4.659259796142578
    8. ' )' → logprob: -4.784259796142578
    9. ' s' → logprob: -5.034259796142578
    10. ' count' → logprob: -5.659259796142578

Token 141: ' quant' (ID: 8237)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4134035110473633
    2. '_' → logprob: -1.9134035110473633
    3. ' ' → logprob: -2.5384035110473633
    4. 'count' → logprob: -2.5384035110473633
    5. ' )' → logprob: -2.7884035110473633
    6. ' counts' → logprob: -2.9134035110473633
    7. 's' → logprob: -3.0384035110473633
    8. '(' → logprob: -3.2884035110473633
    9. '()' → logprob: -3.4134035110473633
    10. '_count' → logprob: -3.5384035110473633

Token 142: 'ités' (ID: 12479)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.5601341128349304
    2. 'e' → logprob: -1.3101341724395752
    3. 'ite' → logprob: -3.185134172439575
    4. 'al' → logprob: -3.185134172439575
    5. 'ités' → logprob: -3.935134172439575
    6. 'it' → logprob: -4.185133934020996
    7. 'ity' → logprob: -4.935133934020996
    8. 'um' → logprob: -5.435133934020996
    9. 'es' → logprob: -5.935133934020996
    10. 'el' → logprob: -6.060133934020996

Token 143: ' grâce' (ID: 31589)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8249307870864868
    2. ',' → logprob: -2.3249306678771973
    3. '.' → logprob: -2.5749306678771973
    4. ' if' → logprob: -2.6999306678771973
    5. 'if' → logprob: -2.6999306678771973
    6. '(' → logprob: -2.9499306678771973
    7. ':' → logprob: -2.9499306678771973
    8. ')' → logprob: -2.9499306678771973
    9. ' ' → logprob: -3.1999306678771973
    10. ' :' → logprob: -4.824930667877197

Token 144: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.016517799347639084
    2. ' au' → logprob: -5.016517639160156
    3. 'à' → logprob: -5.016517639160156
    4. ' a' → logprob: -6.516517639160156
    5. 'au' → logprob: -7.641517639160156
    6. 'a' → logprob: -8.391517639160156
    7. ' ' → logprob: -8.516517639160156
    8. ''à' → logprob: -8.516517639160156
    9. '<|end|>' → logprob: -8.891517639160156
    10. 's' → logprob: -9.141517639160156

Token 145: ' l' (ID: 305)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4559594690799713
    2. 's' → logprob: -1.830959439277649
    3. ' >' → logprob: -2.8309595584869385
    4. '>' → logprob: -3.2059595584869385
    5. ' ' → logprob: -3.8309595584869385
    6. ' >=' → logprob: -4.705959320068359
    7. ' "' → logprob: -4.830959320068359
    8. ' l' → logprob: -5.080959320068359
    9. ' '' → logprob: -5.080959320068359
    10. '">' → logprob: -5.330959320068359

Token 146: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.529035747051239
    2. ''' → logprob: -2.029035806655884
    3. ''ex' → logprob: -2.154035806655884
    4. ''op' → logprob: -2.654035806655884
    5. 'es' → logprob: -3.279035806655884
    6. ''in' → logprob: -4.529035568237305
    7. 'a' → logprob: -5.029035568237305
    8. 'if' → logprob: -5.154035568237305
    9. ''<' → logprob: -5.779035568237305
    10. '`' → logprob: -5.779035568237305

Token 147: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.3002890646457672
    2. 'er' → logprob: -1.8002890348434448
    3. 'ération' → logprob: -3.1752891540527344
    4. 'ér' → logprob: -4.050289154052734
    5. '=' → logprob: -5.175289154052734
    6. '<=' → logprob: -5.550289154052734
    7. '==' → logprob: -5.800289154052734
    8. '>' → logprob: -5.925289154052734
    9. '()' → logprob: -6.425289154052734
    10. 'é' → logprob: -6.550289154052734

Token 148: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4384510815143585
    2. ' >' → logprob: -1.9384510517120361
    3. '==' → logprob: -2.313451051712036
    4. ' >=' → logprob: -3.438451051712036
    5. '>' → logprob: -3.813451051712036
    6. ' <=' → logprob: -4.188451290130615
    7. ' ' → logprob: -4.688451290130615
    8. ' <' → logprob: -4.813451290130615
    9. '=' → logprob: -5.188451290130615
    10. '<|end|>' → logprob: -5.938451290130615

Token 149: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2597804069519043
    2. ':' → logprob: -1.5097804069519043
    3. 's' → logprob: -2.0097804069519043
    4. ' :' → logprob: -2.0097804069519043
    5. ')' → logprob: -2.6347804069519043
    6. ' s' → logprob: -2.8847804069519043
    7. ',' → logprob: -3.3847804069519043
    8. '(' → logprob: -4.259780406951904
    9. ' .' → logprob: -4.634780406951904
    10. ' ' → logprob: -4.634780406951904

Token 150: 'sup' (ID: 41100)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6577629446983337
    2. ' )' → logprob: -0.7827629446983337
    3. ' s' → logprob: -4.4077630043029785
    4. 's' → logprob: -5.0327630043029785
    5. ' ' → logprob: -5.9077630043029785
    6. 'count' → logprob: -7.6577630043029785
    7. ' ")' → logprob: -8.03276252746582
    8. '"' → logprob: -8.15776252746582
    9. ' "' → logprob: -8.40776252746582
    10. ' count' → logprob: -8.53276252746582

Token 151: 'érieur' (ID: 24251)
  Prédit: 'érieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieur' → logprob: -0.09274819493293762
    2. 'é' → logprob: -2.7177481651306152
    3. 'érieure' → logprob: -3.9677481651306152
    4. 'érieures' → logprob: -6.217748165130615
    5. 'érieurs' → logprob: -7.092748165130615
    6. 'éri' → logprob: -8.092748641967773
    7. 'érie' → logprob: -8.342748641967773
    8. '>' → logprob: -9.717748641967773
    9. 'er' → logprob: -10.092748641967773
    10. 'éry' → logprob: -10.092748641967773

Token 152: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04773874953389168
    2. ' )' → logprob: -4.547738552093506
    3. 'e' → logprob: -5.047738552093506
    4. ' ' → logprob: -5.297738552093506
    5. ' ou' → logprob: -5.297738552093506
    6. '.' → logprob: -5.547738552093506
    7. ',' → logprob: -6.047738552093506
    8. 's' → logprob: -6.297738552093506
    9. ' à' → logprob: -6.547738552093506
    10. '=' → logprob: -6.672738552093506

Token 153: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05973396450281143
    2. ' )' → logprob: -3.6847338676452637
    3. ').' → logprob: -3.8097338676452637
    4. 's' → logprob: -5.434733867645264
    5. '):' → logprob: -5.934733867645264
    6. ' s' → logprob: -7.184733867645264
    7. ' ).' → logprob: -7.184733867645264
    8. ')
' → logprob: -7.684733867645264
    9. '.' → logprob: -7.934733867645264
    10. ',' → logprob: -8.434734344482422

Token 154: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3454580008983612
    2. 'print' → logprob: -1.5954580307006836
    3. 'result' → logprob: -2.7204580307006836
    4. 'r' → logprob: -4.845458030700684
    5. ' if' → logprob: -4.845458030700684
    6. '
' → logprob: -5.845458030700684
    7. 's' → logprob: -6.845458030700684
    8. 'res' → logprob: -6.970458030700684
    9. 'b' → logprob: -8.095458030700684
    10. ' 
' → logprob: -8.220458030700684

Token 155: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0028507597744464874
    2. 's' → logprob: -5.877850532531738
    3. ' ' → logprob: -10.377850532531738
    4. ' ' → logprob: -11.502850532531738
    5. ' (' → logprob: -13.377850532531738
    6. '(s' → logprob: -14.252850532531738
    7. ' "' → logprob: -14.252850532531738
    8. ' '' → logprob: -14.377850532531738
    9. '	s' → logprob: -14.815350532531738
    10. '_s' → logprob: -15.440350532531738

Token 156: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.020578207448124886
    2. '.' → logprob: -3.895578145980835
    3. ' .' → logprob: -10.395578384399414
    4. ').' → logprob: -13.520578384399414
    5. '.Count' → logprob: -13.520578384399414
    6. '.c' → logprob: -14.270578384399414
    7. ' ' → logprob: -14.895578384399414
    8. '.startswith' → logprob: -14.895578384399414
    9. '>.' → logprob: -14.895578384399414
    10. '.upper' → logprob: -15.270578384399414

Token 157: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0020602114964276552
    2. '(' → logprob: -6.252060413360596
    3. '("("' → logprob: -9.002059936523438
    4. '('' → logprob: -11.752059936523438
    5. ' ("' → logprob: -15.752059936523438
    6. '"' → logprob: -16.127059936523438
    7. '(
' → logprob: -16.252059936523438
    8. '(("' → logprob: -17.502059936523438
    9. '(">' → logprob: -17.502059936523438
    10. '("="' → logprob: -17.752059936523438

Token 158: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0021759546361863613
    2. '"' → logprob: -6.377175807952881
    3. 'B' → logprob: -7.877175807952881
    4. ''' → logprob: -9.877176284790039
    5. '")' → logprob: -10.502176284790039
    6. ' R' → logprob: -11.502176284790039
    7. '"B' → logprob: -13.127176284790039
    8. 'RB' → logprob: -14.502176284790039
    9. '\"' → logprob: -14.627176284790039
    10. '"""' → logprob: -14.877176284790039

Token 159: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00017767686222214252
    2. ')' → logprob: -9.125177383422852
    3. '"' → logprob: -10.375177383422852
    4. ' ")' → logprob: -10.750177383422852
    5. '>' → logprob: -11.375177383422852
    6. ')")' → logprob: -13.000177383422852
    7. '')' → logprob: -14.500177383422852
    8. '")
' → logprob: -14.625177383422852
    9. '">' → logprob: -14.750177383422852
    10. '”)' → logprob: -16.00017738342285

Token 160: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07893539220094681
    2. '>' → logprob: -2.578935384750366
    3. ' ' → logprob: -10.203935623168945
    4. ' ' → logprob: -12.453935623168945
    5. ')' → logprob: -13.078935623168945
    6. '()>' → logprob: -14.203935623168945
    7. '">' → logprob: -14.578935623168945
    8. ')>' → logprob: -15.328935623168945
    9. ' >
' → logprob: -15.453935623168945
    10. '  ' → logprob: -15.578935623168945

Token 161: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31328821182250977
    2. 's' → logprob: -1.3132882118225098
    3. ' ' → logprob: -10.938287734985352
    4. '0' → logprob: -12.938287734985352
    5. ' ' → logprob: -13.188287734985352
    6. '(s' → logprob: -13.438287734985352
    7. '	s' → logprob: -13.813287734985352
    8. '_s' → logprob: -15.313287734985352
    9. ')' → logprob: -15.688287734985352
    10. '=' → logprob: -15.938287734985352

Token 162: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.062094174325466156
    2. '.' → logprob: -2.812094211578369
    3. ' .' → logprob: -9.062093734741211
    4. '.c' → logprob: -12.437093734741211
    5. '.Count' → logprob: -12.562093734741211
    6. ''.' → logprob: -13.937093734741211
    7. 'count' → logprob: -14.437093734741211
    8. ' ' → logprob: -14.812093734741211
    9. '.cont' → logprob: -16.06209373474121
    10. ').' → logprob: -16.06209373474121

Token 163: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0033616507425904274
    2. '(' → logprob: -5.753361701965332
    3. '("("' → logprob: -8.628361701965332
    4. '('' → logprob: -12.878361701965332
    5. '(
' → logprob: -14.378361701965332
    6. '("""' → logprob: -14.878361701965332
    7. '"' → logprob: -15.128361701965332
    8. '(("' → logprob: -15.378361701965332
    9. '("")' → logprob: -15.503361701965332
    10. '()' → logprob: -15.503361701965332

Token 164: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002248984295874834
    2. '"B' → logprob: -6.127248764038086
    3. '"' → logprob: -9.877248764038086
    4. ' B' → logprob: -11.877248764038086
    5. ''' → logprob: -13.127248764038086
    6. '")' → logprob: -13.502248764038086
    7. '`' → logprob: -15.127248764038086
    8. '>B' → logprob: -15.439748764038086
    9. '	B' → logprob: -15.439748764038086
    10. ')' → logprob: -15.564748764038086

Token 165: '"):
' (ID: 33645)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5920318365097046
    2. '"):' → logprob: -0.8420318365097046
    3. ')' → logprob: -4.467031955718994
    4. '")' → logprob: -6.092031955718994
    5. ':' → logprob: -6.592031955718994
    6. '":' → logprob: -7.592031955718994
    7. '"):
' → logprob: -9.092031478881836
    8. '):
' → logprob: -9.467031478881836
    9. '"' → logprob: -9.592031478881836
    10. ''):' → logprob: -10.842031478881836

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17100711166858673
    2. 'print' → logprob: -2.1710071563720703
    3. ' print' → logprob: -3.5460071563720703
    4. '"' → logprob: -5.67100715637207
    5. '
' → logprob: -5.79600715637207
    6. ' ' → logprob: -6.29600715637207
    7. '\n' → logprob: -6.54600715637207
    8. '	print' → logprob: -6.54600715637207
    9. '    
' → logprob: -7.67100715637207
    10. ''' → logprob: -7.67100715637207

Token 167: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002860866254195571
    2. ' print' → logprob: -6.002861022949219
    3. '   ' → logprob: -7.877861022949219
    4. 'pr' → logprob: -13.377861022949219
    5. 'prin' → logprob: -13.377861022949219
    6. '	print' → logprob: -13.752861022949219
    7. ' ' → logprob: -14.002861022949219
    8. 'prit' → logprob: -15.252861022949219
    9. '
' → logprob: -15.502861022949219
    10. 'p' → logprob: -15.877861022949219

Token 168: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006840402726083994
    2. ' print' → logprob: -5.006840229034424
    3. 'prin' → logprob: -9.881840705871582
    4. '   ' → logprob: -10.631840705871582
    5. 'pr' → logprob: -10.631840705871582
    6. 'p' → logprob: -11.256840705871582
    7. 'pass' → logprob: -12.506840705871582
    8. 'r' → logprob: -12.756840705871582
    9. ' ' → logprob: -13.381840705871582
    10. 'prit' → logprob: -14.131840705871582

Token 169: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8060018420219421
    2. '   ' → logprob: -1.181001901626587
    3. ' print' → logprob: -1.431001901626587
    4. ' ' → logprob: -5.431001663208008
    5. '    ' → logprob: -7.056001663208008
    6. 's' → logprob: -7.556001663208008
    7. ' s' → logprob: -7.806001663208008
    8. ' ' → logprob: -8.056001663208008
    9. '"' → logprob: -8.556001663208008
    10. '  ' → logprob: -8.931001663208008

Token 170: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21214459836483002
    2. ' print' → logprob: -1.7121446132659912
    3. '   ' → logprob: -5.712144374847412
    4. 's' → logprob: -6.337144374847412
    5. 'prin' → logprob: -6.337144374847412
    6. ' prin' → logprob: -6.837144374847412
    7. ' ' → logprob: -6.962144374847412
    8. 'pr' → logprob: -7.087144374847412
    9. ' s' → logprob: -7.837144374847412
    10. 'r' → logprob: -9.46214485168457

Token 171: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6285684704780579
    2. ' d' → logprob: -0.8785684704780579
    3. ' des' → logprob: -4.003568649291992
    4. ' ' → logprob: -4.253568649291992
    5. 'de' → logprob: -5.378568649291992
    6. 'd' → logprob: -5.503568649291992
    7. ' of' → logprob: -6.128568649291992
    8. '  ' → logprob: -6.253568649291992
    9. '   ' → logprob: -6.628568649291992
    10. 's' → logprob: -6.878568649291992

Token 172: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08971785008907318
    2. ''' → logprob: -3.0897178649902344
    3. ' "' → logprob: -3.8397178649902344
    4. 'R' → logprob: -4.464717864990234
    5. ' R' → logprob: -5.839717864990234
    6. 's' → logprob: -6.089717864990234
    7. ' '' → logprob: -6.964717864990234
    8. ' ' → logprob: -7.714717864990234
    9. '"s' → logprob: -8.464717864990234
    10. ' s' → logprob: -8.714717864990234

Token 173: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.009714782238006592
    2. '"' → logprob: -5.134714603424072
    3. ' R' → logprob: -5.759714603424072
    4. ' "' → logprob: -8.00971508026123
    5. 's' → logprob: -9.13471508026123
    6. ''' → logprob: -9.50971508026123
    7. ' ' → logprob: -10.25971508026123
    8. '")' → logprob: -10.25971508026123
    9. ')' → logprob: -11.88471508026123
    10. ' ")' → logprob: -11.88471508026123

Token 174: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04494022578001022
    2. ' "' → logprob: -3.419940233230591
    3. 's' → logprob: -5.044939994812012
    4. ' est' → logprob: -5.794939994812012
    5. '">' → logprob: -7.544939994812012
    6. ' s' → logprob: -8.044939994812012
    7. '"s' → logprob: -8.044939994812012
    8. '")' → logprob: -8.794939994812012
    9. ' ' → logprob: -9.794939994812012
    10. ' ' → logprob: -9.794939994812012

Token 175: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09474027156829834
    2. ' ' → logprob: -2.969740390777588
    3. ' est' → logprob: -4.094740390777588
    4. '>' → logprob: -4.719740390777588
    5. '   ' → logprob: -5.094740390777588
    6. ' >=' → logprob: -6.094740390777588
    7. ' s' → logprob: -6.719740390777588
    8. 's' → logprob: -7.344740390777588
    9. ' ' → logprob: -7.344740390777588
    10. ' ==' → logprob: -7.719740390777588

Token 176: ' strict' (ID: 12035)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.20282934606075287
    2. ' plus' → logprob: -2.827829360961914
    3. 'plus' → logprob: -2.827829360961914
    4. 'strict' → logprob: -3.077829360961914
    5. 'sup' → logprob: -4.827829360961914
    6. ' strict' → logprob: -5.327829360961914
    7. ' strictly' → logprob: -6.202829360961914
    8. ' ' → logprob: -6.952829360961914
    9. 'super' → logprob: -7.077829360961914
    10. '>' → logprob: -7.327829360961914

Token 177: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.00024001303245313466
    2. 'e' → logprob: -9.750240325927734
    3. 'emen' → logprob: -9.750240325927734
    4. 'ment' → logprob: -10.250240325927734
    5. 'em' → logprob: -11.000240325927734
    6. 'lement' → logprob: -11.375240325927734
    7. 'ements' → logprob: -11.375240325927734
    8. '>' → logprob: -11.875240325927734
    9. '   ' → logprob: -12.125240325927734
    10. 'ly' → logprob: -12.375240325927734

Token 178: ' supérieur' (ID: 98491)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.06366898864507675
    2. ' supérieur' → logprob: -2.938668966293335
    3. 'super' → logprob: -5.188669204711914
    4. 'plus' → logprob: -5.938669204711914
    5. 'su' → logprob: -8.688669204711914
    6. ' sup' → logprob: -8.813669204711914
    7. '>' → logprob: -8.938669204711914
    8. 'greater' → logprob: -10.063669204711914
    9. ' plus' → logprob: -11.438669204711914
    10. 'supp' → logprob: -11.938669204711914

Token 179: ' au' (ID: 2791)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13346384465694427
    2. '   ' → logprob: -2.3834638595581055
    3. ' :' → logprob: -3.6334638595581055
    4. ',' → logprob: -6.0084638595581055
    5. ' à' → logprob: -6.2584638595581055
    6. ' ' → logprob: -7.0084638595581055
    7. ':
' → logprob: -8.758463859558105
    8. ' a' → logprob: -9.008463859558105
    9. 'à' → logprob: -9.258463859558105
    10. '  ' → logprob: -9.258463859558105

Token 180: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.05310646817088127
    2. ' nombre' → logprob: -3.0531065464019775
    3. ' ' → logprob: -6.053106307983398
    4. '"' → logprob: -6.553106307983398
    5. 'n' → logprob: -8.053106307983398
    6. 's' → logprob: -8.803106307983398
    7. ' ' → logprob: -9.553106307983398
    8. 'nb' → logprob: -10.053106307983398
    9. ''' → logprob: -10.178106307983398
    10. 'b' → logprob: -10.428106307983398

Token 181: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20391006767749786
    2. ' d' → logprob: -1.9539101123809814
    3. ' des' → logprob: -3.9539101123809814
    4. ' ' → logprob: -4.328909873962402
    5. 'de' → logprob: -5.828909873962402
    6. '   ' → logprob: -6.203909873962402
    7. 'd' → logprob: -6.703909873962402
    8. '    ' → logprob: -6.953909873962402
    9. ' of' → logprob: -6.953909873962402
    10. '  ' → logprob: -7.078909873962402

Token 182: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.16081349551677704
    2. '"' → logprob: -2.285813570022583
    3. ' ' → logprob: -3.535813570022583
    4. ' "' → logprob: -5.035813331604004
    5. ''' → logprob: -5.160813331604004
    6. 'B' → logprob: -5.535813331604004
    7. ' B' → logprob: -7.785813331604004
    8. ' ' → logprob: -8.285813331604004
    9. '   ' → logprob: -8.410813331604004
    10. 's' → logprob: -8.535813331604004

Token 183: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07205349206924438
    2. '"B' → logprob: -2.6970534324645996
    3. '"' → logprob: -6.4470534324646
    4. ''' → logprob: -8.322053909301758
    5. ' B' → logprob: -8.572053909301758
    6. 's' → logprob: -10.947053909301758
    7. ' ' → logprob: -11.197053909301758
    8. '>B' → logprob: -11.822053909301758
    9. ' "' → logprob: -12.072053909301758
    10. '```' → logprob: -12.072053909301758

Token 184: '"' (ID: 1)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.540503203868866
    2. ':' → logprob: -1.0405032634735107
    3. ' :' → logprob: -3.1655032634735107
    4. '   ' → logprob: -5.165503025054932
    5. ' ,' → logprob: -5.540503025054932
    6. ':
' → logprob: -5.665503025054932
    7. '):' → logprob: -5.915503025054932
    8. 's' → logprob: -6.665503025054932
    9. ' :
' → logprob: -6.790503025054932
    10. '":' → logprob: -6.915503025054932

Token 185: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02441161870956421
    2. '   ' → logprob: -4.649411678314209
    3. ':
' → logprob: -4.649411678314209
    4. ',' → logprob: -5.399411678314209
    5. ' :' → logprob: -8.27441120147705
    6. 'print' → logprob: -9.64941120147705
    7. ' :
' → logprob: -10.14941120147705
    8. '.' → logprob: -11.02441120147705
    9. '):' → logprob: -11.14941120147705
    10. ',
' → logprob: -11.14941120147705

Token 186: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3492143452167511
    2. 's' → logprob: -1.2242143154144287
    3. '   ' → logprob: -7.599214553833008
    4. ' ' → logprob: -9.224214553833008
    5. ' la' → logprob: -9.224214553833008
    6. 'la' → logprob: -11.099214553833008
    7. ' ' → logprob: -11.224214553833008
    8. '	s' → logprob: -11.974214553833008
    9. '"' → logprob: -12.224214553833008
    10. ' the' → logprob: -12.599214553833008

Token 187: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1833539456129074
    2. ' s' → logprob: -1.9333539009094238
    3. '   ' → logprob: -4.183353900909424
    4. ' ' → logprob: -5.933353900909424
    5. 'chaine' → logprob: -6.058353900909424
    6. ':' → logprob: -7.183353900909424
    7. 'string' → logprob: -7.558353900909424
    8. 'print' → logprob: -8.433354377746582
    9. '"' → logprob: -8.808354377746582
    10. ' string' → logprob: -9.183354377746582

Token 188: ' s' (ID: 265)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9465532898902893
    2. '   ' → logprob: -0.9465532898902893
    3. ',' → logprob: -2.4465532302856445
    4. 's' → logprob: -2.6965532302856445
    5. ' :' → logprob: -3.1965532302856445
    6. ' s' → logprob: -4.0715532302856445
    7. ':
' → logprob: -5.6965532302856445
    8. ' ' → logprob: -6.3215532302856445
    9. ' ,' → logprob: -6.3215532302856445
    10. ' :
' → logprob: -7.0715532302856445

Token 189: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037670738995075226
    2. ':
' → logprob: -3.412670850753784
    3. '   ' → logprob: -5.662670612335205
    4. ' :' → logprob: -8.287671089172363
    5. ',' → logprob: -8.787671089172363
    6. ' :
' → logprob: -9.662671089172363
    7. 'print' → logprob: -10.537671089172363
    8. '):' → logprob: -11.037671089172363
    9. ' print' → logprob: -11.912671089172363
    10. ':
' → logprob: -12.412671089172363

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05882970616221428
    2. ' print' → logprob: -3.0588297843933105
    3. 'print' → logprob: -5.0588297843933105
    4. '    ' → logprob: -6.4338297843933105
    5. '       ' → logprob: -6.8088297843933105
    6. '    
' → logprob: -7.6838297843933105
    7. '   ' → logprob: -8.808829307556152
    8. '
' → logprob: -8.933829307556152
    9. ' ' → logprob: -9.308829307556152
    10. ' ' → logprob: -9.933829307556152

Token 191: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07095278054475784
    2. ' print' → logprob: -3.195952892303467
    3. 'print' → logprob: -3.695952892303467
    4. '    ' → logprob: -6.570952892303467
    5. '       ' → logprob: -7.445952892303467
    6. '    
' → logprob: -8.195952415466309
    7. ' ' → logprob: -8.820952415466309
    8. '
' → logprob: -9.445952415466309
    9. '   ' → logprob: -9.445952415466309
    10. '	print' → logprob: -10.195952415466309

Token 192: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6114991903305054
    2. '   ' → logprob: -0.8614991903305054
    3. 'print' → logprob: -3.361499309539795
    4. '    ' → logprob: -9.611498832702637
    5. '   ' → logprob: -9.861498832702637
    6. ' ' → logprob: -9.986498832702637
    7. '	print' → logprob: -10.361498832702637
    8. ' ' → logprob: -11.361498832702637
    9. '       ' → logprob: -11.361498832702637
    10. '    
' → logprob: -11.861498832702637

Token 193: ' entre' (ID: 3853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7089871168136597
    2. '   ' → logprob: -1.2089871168136597
    3. ' print' → logprob: -1.5839871168136597
    4. '    ' → logprob: -6.333987236022949
    5. 'pr' → logprob: -6.708987236022949
    6. ' ' → logprob: -8.08398723602295
    7. '   ' → logprob: -8.58398723602295
    8. '	print' → logprob: -8.70898723602295
    9. ' ' → logprob: -9.20898723602295
    10. '  ' → logprob: -9.33398723602295

Token 194: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15903782844543457
    2. ' dans' → logprob: -2.7840378284454346
    3. ':' → logprob: -3.4090378284454346
    4. 'print' → logprob: -4.9090375900268555
    5. ' ' → logprob: -5.0340375900268555
    6. ' print' → logprob: -5.1590375900268555
    7. ' un' → logprob: -5.2840375900268555
    8. ' la' → logprob: -5.2840375900268555
    9. ' :' → logprob: -5.5340375900268555
    10. ' en' → logprob: -5.6590375900268555

Token 195: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42693254351615906
    2. ' la' → logprob: -1.8019325733184814
    3. ' le' → logprob: -2.4269325733184814
    4. ':' → logprob: -3.5519325733184814
    5. ' l' → logprob: -3.8019325733184814
    6. 'le' → logprob: -4.051932334899902
    7. 'la' → logprob: -5.301932334899902
    8. 'l' → logprob: -5.426932334899902
    9. ' cette' → logprob: -5.551932334899902
    10. ' ' → logprob: -6.301932334899902

Token 196: ' bloc' (ID: 51218)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.785728394985199
    2. '   ' → logprob: -0.910728394985199
    3. ' bloc' → logprob: -2.7857284545898438
    4. ' :' → logprob: -3.2857284545898438
    5. ' ' → logprob: -4.660728454589844
    6. 'bloc' → logprob: -5.035728454589844
    7. ' block' → logprob: -5.535728454589844
    8. 'if' → logprob: -5.660728454589844
    9. ' ' → logprob: -6.285728454589844
    10. ':
' → logprob: -6.410728454589844

Token 197: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25714462995529175
    2. '   ' → logprob: -1.5071446895599365
    3. ':
' → logprob: -5.882144451141357
    4. ' :' → logprob: -6.757144451141357
    5. 'print' → logprob: -7.007144451141357
    6. ' print' → logprob: -8.757144927978516
    7. '       ' → logprob: -10.132144927978516
    8. '.' → logprob: -10.257144927978516
    9. '    ' → logprob: -10.757144927978516
    10. ' :
' → logprob: -10.757144927978516

Token 198: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.13205349445343018
    2. 'print' → logprob: -2.3820533752441406
    3. '   ' → logprob: -3.5070533752441406
    4. '    ' → logprob: -8.00705337524414
    5. '	print' → logprob: -8.38205337524414
    6. ' ' → logprob: -8.50705337524414
    7. ' ' → logprob: -8.63205337524414
    8. '   ' → logprob: -9.25705337524414
    9. 'pr' → logprob: -9.38205337524414
    10. '    
' → logprob: -10.13205337524414

Token 199: ' ex' (ID: 513)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3171534240245819
    2. ' print' → logprob: -1.6921534538269043
    3. '   ' → logprob: -2.4421534538269043
    4. 'pr' → logprob: -8.317152976989746
    5. '	print' → logprob: -8.942152976989746
    6. '    ' → logprob: -9.192152976989746
    7. ' ' → logprob: -9.942152976989746
    8. '   ' → logprob: -10.692152976989746
    9. '  ' → logprob: -11.067152976989746
    10. '       ' → logprob: -11.067152976989746

Token 200: 'éc' (ID: 5675)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47624605894088745
    2. 'ecute' → logprob: -1.2262461185455322
    3. '   ' → logprob: -3.1012461185455322
    4. 'plore' → logprob: -4.476245880126953
    5. 'pr' → logprob: -4.851245880126953
    6. 'éc' → logprob: -4.976245880126953
    7. '       ' → logprob: -5.851245880126953
    8. '	print' → logprob: -6.351245880126953
    9. 'p' → logprob: -6.476245880126953
    10. 'ec' → logprob: -6.601245880126953

Token 201: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -2.9160102712921798e-05
    2. '   ' → logprob: -11.125029563903809
    3. 'u' → logprob: -12.000029563903809
    4. 'cute' → logprob: -13.125029563903809
    5. 'ut' → logprob: -13.500029563903809
    6. 'ure' → logprob: -14.500029563903809
    7. '       ' → logprob: -14.625029563903809
    8. 'ution' → logprob: -14.625029563903809
    9. ' ute' → logprob: -14.625029563903809
    10. 'ecute' → logprob: -14.625029563903809

Token 202: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031118249520659447
    2. ' print' → logprob: -3.781118154525757
    3. 'print' → logprob: -4.906118392944336
    4. '   ' → logprob: -9.281118392944336
    5. '	print' → logprob: -9.406118392944336
    6. '    
' → logprob: -9.656118392944336
    7. '    ' → logprob: -9.906118392944336
    8. ' la' → logprob: -10.531118392944336
    9. ' ' → logprob: -10.656118392944336
    10. '  ' → logprob: -11.031118392944336

Token 203: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02982235886156559
    2. '(' → logprob: -3.52982234954834
    3. '('' → logprob: -10.15482234954834
    4. '()' → logprob: -10.77982234954834
    5. '(s' → logprob: -12.65482234954834
    6. '(
' → logprob: -12.77982234954834
    7. '("")' → logprob: -13.40482234954834
    8. '("("' → logprob: -13.90482234954834
    9. ' ("' → logprob: -14.40482234954834
    10. '   ' → logprob: -14.65482234954834

Token 204: 'Yes' (ID: 13022)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.8283149003982544
    2. 'Rou' → logprob: -1.4533149003982544
    3. 'Red' → logprob: -2.203314781188965
    4. 'RO' → logprob: -2.828314781188965
    5. 'RED' → logprob: -2.828314781188965
    6. 'G' → logprob: -3.953314781188965
    7. '"' → logprob: -4.203314781188965
    8. 'YES' → logprob: -4.703314781188965
    9. 'Yes' → logprob: -5.078314781188965
    10. 'True' → logprob: -5.828314781188965

Token 205: '").
' (ID: 88948)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -8.816591434879228e-05
    2. ')")' → logprob: -10.25008773803711
    3. '()' → logprob: -11.00008773803711
    4. ')' → logprob: -11.12508773803711
    5. '")
' → logprob: -11.62508773803711
    6. '"' → logprob: -12.37508773803711
    7. '!")' → logprob: -12.62508773803711
    8. '("' → logprob: -13.62508773803711
    9. '").' → logprob: -13.87508773803711
    10. '")
' → logprob: -14.12508773803711

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013242880813777447
    2. ':' → logprob: -7.50132417678833
    3. '       ' → logprob: -7.62632417678833
    4. '
' → logprob: -8.876324653625488
    5. 'print' → logprob: -9.751324653625488
    6. '    
' → logprob: -10.001324653625488
    7. ')' → logprob: -11.626324653625488
    8. ':
' → logprob: -11.751324653625488
    9. '   ' → logprob: -11.876324653625488
    10. ' print' → logprob: -12.126324653625488

Token 207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005521982675418258
    2. 'print' → logprob: -8.1255521774292
    3. '       ' → logprob: -8.6255521774292
    4. ' print' → logprob: -9.6255521774292
    5. '
' → logprob: -12.3755521774292
    6. '   ' → logprob: -12.3755521774292
    7. '    
' → logprob: -13.2505521774292
    8. '```' → logprob: -15.6255521774292
    9. '	print' → logprob: -15.8755521774292
    10. '  ' → logprob: -17.250553131103516

Token 208: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05353277176618576
    2. 'print' → logprob: -3.303532838821411
    3. ' print' → logprob: -4.178532600402832
    4. '       ' → logprob: -10.428532600402832
    5. '
' → logprob: -12.053532600402832
    6. ' ' → logprob: -12.803532600402832
    7. '    ' → logprob: -12.803532600402832
    8. '  ' → logprob: -12.928532600402832
    9. '   ' → logprob: -12.928532600402832
    10. '	print' → logprob: -13.303532600402832

Token 209: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37636759877204895
    2. '   ' → logprob: -1.7513675689697266
    3. ' print' → logprob: -2.0013675689697266
    4. ' ' → logprob: -5.626367568969727
    5. '  ' → logprob: -7.751367568969727
    6. '
' → logprob: -8.251367568969727
    7. '    
' → logprob: -9.126367568969727
    8. '    ' → logprob: -9.376367568969727
    9. ' ' → logprob: -9.501367568969727
    10. 'else' → logprob: -9.626367568969727

Token 210: ' print' (ID: 2123)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2766086459159851
    2. '("' → logprob: -1.7766087055206299
    3. 'print' → logprob: -3.15160870552063
    4. '(print' → logprob: -4.526608467102051
    5. ' print' → logprob: -4.776608467102051
    6. '()' → logprob: -4.901608467102051
    7. '('' → logprob: -6.651608467102051
    8. '(
' → logprob: -6.651608467102051
    9. ')' → logprob: -8.90160846710205
    10. '("""' → logprob: -9.40160846710205

Token 211: '()' (ID: 416)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.016106978058815002
    2. '(' → logprob: -4.141107082366943
    3. '("("' → logprob: -10.391106605529785
    4. ' ' → logprob: -11.766106605529785
    5. '(
' → logprob: -11.891106605529785
    6. '("")' → logprob: -12.016106605529785
    7. '('' → logprob: -12.141106605529785
    8. '()' → logprob: -12.391106605529785
    9. '("""' → logprob: -12.891106605529785
    10. ')("' → logprob: -12.891106605529785

Token 212: ' affiche' (ID: 127479)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.023500638082623482
    2. '(' → logprob: -3.773500680923462
    3. '('' → logprob: -9.023500442504883
    4. '("")' → logprob: -10.273500442504883
    5. '()' → logprob: -10.898500442504883
    6. ')' → logprob: -11.148500442504883
    7. '   ' → logprob: -11.273500442504883
    8. ' ' → logprob: -11.648500442504883
    9. '(
' → logprob: -11.898500442504883
    10. '("\' → logprob: -12.023500442504883

Token 213: ' le' (ID: 505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007633127737790346
    2. '(' → logprob: -4.882633209228516
    3. '"' → logprob: -11.132633209228516
    4. '(
' → logprob: -12.132633209228516
    5. '('' → logprob: -13.007633209228516
    6. ' ' → logprob: -13.132633209228516
    7. '()' → logprob: -14.007633209228516
    8. '   ' → logprob: -14.382633209228516
    9. '("")' → logprob: -15.007633209228516
    10. '  ' → logprob: -15.382633209228516

Token 214: ' texte' (ID: 53492)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6543529629707336
    2. '("' → logprob: -0.7793529629707336
    3. '(' → logprob: -4.154353141784668
    4. 'Yes' → logprob: -6.279353141784668
    5. ' ' → logprob: -7.154353141784668
    6. '(
' → logprob: -7.279353141784668
    7. ' Yes' → logprob: -7.779353141784668
    8. ' "' → logprob: -7.779353141784668
    9. 'string' → logprob: -8.279353141784668
    10. ' string' → logprob: -8.529353141784668

Token 215: ' '' (ID: 461)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0031855558045208454
    2. '(' → logprob: -5.753185749053955
    3. '(
' → logprob: -13.003185272216797
    4. '('' → logprob: -13.003185272216797
    5. ' ' → logprob: -13.628185272216797
    6. '   ' → logprob: -14.753185272216797
    7. '()' → logprob: -14.753185272216797
    8. '("")' → logprob: -15.253185272216797
    9. '("\' → logprob: -15.503185272216797
    10. '("""' → logprob: -15.628185272216797

Token 216: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.00471100676804781
    2. '"' → logprob: -5.379711151123047
    3. ' Yes' → logprob: -10.129711151123047
    4. 'Oui' → logprob: -10.379711151123047
    5. 'YES' → logprob: -12.254711151123047
    6. '")' → logprob: -13.004711151123047
    7. 'R' → logprob: -13.004711151123047
    8. ''' → logprob: -13.129711151123047
    9. '("' → logprob: -13.254711151123047
    10. '“Yes' → logprob: -13.629711151123047

Token 217: ''' (ID: 6)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0010367410723119974
    2. '')' → logprob: -7.251036643981934
    3. ')' → logprob: -9.001036643981934
    4. '("' → logprob: -9.376036643981934
    5. '"' → logprob: -9.876036643981934
    6. '")
' → logprob: -10.126036643981934
    7. ')")' → logprob: -11.126036643981934
    8. '()' → logprob: -13.001036643981934
    9. '")
' → logprob: -13.251036643981934
    10. ' ")' → logprob: -13.251036643981934

Token 218: ' à' (ID: 1221)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.056995294988155365
    2. '   ' → logprob: -3.056995391845703
    3. ')' → logprob: -5.181995391845703
    4. '(' → logprob: -6.806995391845703
    5. '")' → logprob: -7.806995391845703
    6. '()' → logprob: -8.181995391845703
    7. '       ' → logprob: -8.556995391845703
    8. '('' → logprob: -9.056995391845703
    9. '):' → logprob: -9.181995391845703
    10. '("\' → logprob: -9.181995391845703

Token 219: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.3188903331756592
    2. 'l' → logprob: -1.4438903331756592
    3. 'Yes' → logprob: -1.9438903331756592
    4. '   ' → logprob: -2.568890333175659
    5. ' Yes' → logprob: -3.068890333175659
    6. 'la' → logprob: -3.318890333175659
    7. ')' → logprob: -3.443890333175659
    8. '"' → logprob: -3.443890333175659
    9. 'é' → logprob: -3.568890333175659
    10. ' la' → logprob: -3.818890333175659

Token 220: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.036161087453365326
    2. 'a' → logprob: -4.036160945892334
    3. 'é' → logprob: -4.411160945892334
    4. ''utilisateur' → logprob: -6.286160945892334
    5. '’écran' → logprob: -6.786160945892334
    6. '   ' → logprob: -7.286160945892334
    7. 'e' → logprob: -7.536160945892334
    8. ''é' → logprob: -7.786160945892334
    9. ''intérieur' → logprob: -8.286161422729492
    10. ' écran' → logprob: -8.286161422729492

Token 221: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08857786655426025
    2. ':' → logprob: -3.3385777473449707
    3. ':
' → logprob: -4.088577747344971
    4. '):' → logprob: -4.338577747344971
    5. '):
' → logprob: -4.838577747344971
    6. ')' → logprob: -5.088577747344971
    7. '       ' → logprob: -5.838577747344971
    8. '
' → logprob: -6.463577747344971
    9. '():' → logprob: -9.088578224182129
    10. '("' → logprob: -9.213578224182129

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006165308877825737
    2. 'print' → logprob: -5.131165504455566
    3. ' print' → logprob: -9.006165504455566
    4. '       ' → logprob: -9.256165504455566
    5. '    
' → logprob: -11.756165504455566
    6. '   ' → logprob: -12.131165504455566
    7. '
' → logprob: -13.381165504455566
    8. '	print' → logprob: -13.506165504455566
    9. '```' → logprob: -14.256165504455566
    10. '  ' → logprob: -14.881165504455566

Token 223: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20616711676120758
    2. 'print' (adapté à ' print') → logprob: -1.7061671018600464
    3. ' print' → logprob: -5.581167221069336
    4. '       ' → logprob: -7.081167221069336
    5. '
' → logprob: -9.956167221069336
    6. '    
' → logprob: -10.081167221069336
    7. '   ' → logprob: -10.956167221069336
    8. '```' → logprob: -11.706167221069336
    9. '	print' → logprob: -12.081167221069336
    10. '  ' → logprob: -13.456167221069336

Token 224: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00015395533409900963
    2. '(' → logprob: -8.875153541564941
    3. ' ("' → logprob: -11.250153541564941
    4. ' ' → logprob: -14.625153541564941
    5. '('' → logprob: -15.125153541564941
    6. '   ' → logprob: -16.125154495239258
    7. '("("' → logprob: -16.625154495239258
    8. '  ' → logprob: -17.000154495239258
    9. ')("' → logprob: -17.500154495239258
    10. ' (' → logprob: -17.500154495239258

Token 225: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.9361264946837764e-07
    2. ' Yes' → logprob: -16.25
    3. 'Ye' → logprob: -17.125
    4. 'Y' → logprob: -17.75
    5. 'Oui' → logprob: -18.875
    6. 'YES' → logprob: -19.625
    7. 'R' → logprob: -20.375
    8. '.Yes' → logprob: -21.625
    9. 'No' → logprob: -22.0
    10. 'Yeah' → logprob: -22.125

Token 226: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -6.575563020305708e-05
    2. '")
' → logprob: -9.750065803527832
    3. ')")' → logprob: -12.375065803527832
    4. ')' → logprob: -12.875065803527832
    5. '")
' → logprob: -15.000065803527832
    6. '"' → logprob: -16.125064849853516
    7. '')' → logprob: -16.750064849853516
    8. ' ")' → logprob: -17.125064849853516
    9. '!")' → logprob: -17.250064849853516
    10. '”)' → logprob: -17.375064849853516

Token 227: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03224276751279831
    2. 'elif' → logprob: -3.782242774963379
    3. ' else' → logprob: -4.782242774963379
    4. '<|end|>' → logprob: -7.907242774963379
    5. '
' → logprob: -8.907242774963379
    6. ' elif' → logprob: -10.282242774963379
    7. ')' → logprob: -11.782242774963379
    8. '```' → logprob: -12.032242774963379
    9. 'el' → logprob: -12.157242774963379
    10. 'elser' → logprob: -12.407242774963379

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06198897212743759
    2. ':
' → logprob: -2.8119890689849854
    3. '   ' → logprob: -11.561988830566406
    4. ' :
' → logprob: -12.061988830566406
    5. ' :' → logprob: -12.436988830566406
    6. ':
' → logprob: -14.561988830566406
    7. '():
' → logprob: -14.561988830566406
    8. ':

' → logprob: -14.686988830566406
    9. '():' → logprob: -15.061988830566406
    10. 'print' → logprob: -15.936988830566406

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010334034450352192
    2. 'print' → logprob: -7.376033306121826
    3. ' print' → logprob: -8.001033782958984
    4. '    
' → logprob: -9.876033782958984
    5. '    ' → logprob: -12.001033782958984
    6. '
' → logprob: -12.876033782958984
    7. '   ' → logprob: -13.126033782958984
    8. ' 
' → logprob: -13.251033782958984
    9. '	print' → logprob: -13.251033782958984
    10. '       ' → logprob: -13.876033782958984

Token 230: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.44368287920951843
    2. ' print' → logprob: -1.1936829090118408
    3. '   ' → logprob: -2.943682909011841
    4. '    
' → logprob: -7.068682670593262
    5. ' 
' → logprob: -7.693682670593262
    6. '    ' → logprob: -7.818682670593262
    7. '
' → logprob: -7.943682670593262
    8. '	print' → logprob: -9.068682670593262
    9. '(print' → logprob: -9.943682670593262
    10. '  
' → logprob: -10.068682670593262

Token 231: ' Sinon' (ID: 154924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2323192059993744
    2. 'print' → logprob: -1.6073192358016968
    3. ' print' → logprob: -4.982319355010986
    4. '    ' → logprob: -11.482318878173828
    5. '   ' → logprob: -12.482318878173828
    6. '    
' → logprob: -12.857318878173828
    7. '	print' → logprob: -13.107318878173828
    8. ' ' → logprob: -13.232318878173828
    9. '  ' → logprob: -13.857318878173828
    10. '
' → logprob: -14.357318878173828

Token 232: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002420606790110469
    2. 'print' → logprob: -6.877420425415039
    3. '
' → logprob: -8.002420425415039
    4. ':' → logprob: -8.002420425415039
    5. ':
' → logprob: -8.252420425415039
    6. ' print' → logprob: -8.502420425415039
    7. '    
' → logprob: -9.002420425415039
    8. '    ' → logprob: -9.877420425415039
    9. '       ' → logprob: -10.002420425415039
    10. ',' → logprob: -11.752420425415039

Token 233: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2599778175354004
    2. ' print' → logprob: -1.6349778175354004
    3. 'print' → logprob: -3.3849778175354004
    4. '    ' → logprob: -9.634977340698242
    5. '	print' → logprob: -11.384977340698242
    6. '   ' → logprob: -12.259977340698242
    7. ' ' → logprob: -12.884977340698242
    8. ' ' → logprob: -12.884977340698242
    9. '    
' → logprob: -13.009977340698242
    10. '       ' → logprob: -13.384977340698242

Token 234: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03372868150472641
    2. '   ' → logprob: -3.65872859954834
    3. 'ode' → logprob: -5.78372859954834
    4. ' print' → logprob: -5.90872859954834
    5. '  ' → logprob: -7.28372859954834
    6. 'on' → logprob: -8.03372859954834
    7. '#' → logprob: -8.40872859954834
    8. ' ' → logprob: -8.65872859954834
    9. '	print' → logprob: -10.53372859954834
    10. '```' → logprob: -10.53372859954834

Token 235: '-à' (ID: 56297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3486446738243103
    2. 'print' → logprob: -1.973644733428955
    3. ' print' → logprob: -2.473644733428955
    4. ':' → logprob: -3.598644733428955
    5. '  ' → logprob: -3.848644733428955
    6. '    ' → logprob: -4.473644733428955
    7. ' ' → logprob: -5.723644733428955
    8. '    
' → logprob: -6.348644733428955
    9. ' ' → logprob: -6.723644733428955
    10. '("' → logprob: -6.973644733428955

Token 236: '-dire' (ID: 76064)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qual' → logprob: -1.755789041519165
    2. 'gal' → logprob: -1.880789041519165
    3. 'x' → logprob: -2.130789041519165
    4. 'c' → logprob: -2.380789041519165
    5. 'n' → logprob: -2.630789041519165
    6. 'a' → logprob: -3.005789041519165
    7. 'quiv' → logprob: -3.005789041519165
    8. '#' → logprob: -3.505789041519165
    9. 'à' → logprob: -3.505789041519165
    10. '"' → logprob: -3.505789041519165

Token 237: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012511172099038959
    2. '    ' → logprob: -9.37512493133545
    3. '    
' → logprob: -11.12512493133545
    4. 'print' → logprob: -11.75012493133545
    5. ' print' → logprob: -11.87512493133545
    6. '   ' → logprob: -12.37512493133545
    7. '  ' → logprob: -13.25012493133545
    8. ' ' → logprob: -13.62512493133545
    9. ' ' → logprob: -14.00012493133545
    10. ' if' → logprob: -14.62512493133545

Token 238: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16029195487499237
    2. 's' → logprob: -1.9102919101715088
    3. ' not' → logprob: -10.41029167175293
    4. 'not' → logprob: -11.53529167175293
    5. '   ' → logprob: -12.16029167175293
    6. ' ' → logprob: -12.16029167175293
    7. 'print' → logprob: -12.66029167175293
    8. '    ' → logprob: -13.16029167175293
    9. ' ' → logprob: -13.16029167175293
    10. '(s' → logprob: -13.28529167175293

Token 239: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12781663239002228
    2. ' s' → logprob: -2.127816677093506
    3. ' nombre' → logprob: -7.877816677093506
    4. 'nombre' → logprob: -8.127816200256348
    5. 'print' → logprob: -10.252816200256348
    6. ' ' → logprob: -10.377816200256348
    7. ' not' → logprob: -10.377816200256348
    8. 'count' → logprob: -10.627816200256348
    9. '   ' → logprob: -10.752816200256348
    10. ' count' → logprob: -11.502816200256348

Token 240: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14199502766132355
    2. 'de' → logprob: -2.8919949531555176
    3. '   ' → logprob: -3.3919949531555176
    4. 's' → logprob: -4.141994953155518
    5. ' of' → logprob: -5.266994953155518
    6. '("' → logprob: -5.391994953155518
    7. '  ' → logprob: -5.766994953155518
    8. 'of' → logprob: -6.016994953155518
    9. ')' → logprob: -6.141994953155518
    10. '    ' → logprob: -6.891994953155518

Token 241: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23096990585327148
    2. ' s' → logprob: -2.2309699058532715
    3. '"B' → logprob: -2.7309699058532715
    4. '"' → logprob: -3.8559699058532715
    5. '"s' → logprob: -5.6059699058532715
    6. 'B' → logprob: -5.9809699058532715
    7. 'R' → logprob: -6.3559699058532715
    8. ' B' → logprob: -6.7309699058532715
    9. 'print' → logprob: -6.8559699058532715
    10. ' "' → logprob: -7.1059699058532715

Token 242: 'R' (ID: 49)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.18022547662258148
    2. 'R' → logprob: -1.8052254915237427
    3. '"B' → logprob: -8.680225372314453
    4. 's' → logprob: -9.305225372314453
    5. '"' → logprob: -9.305225372314453
    6. ' B' → logprob: -9.430225372314453
    7. ' R' → logprob: -11.180225372314453
    8. 'r' → logprob: -12.180225372314453
    9. ' ' → logprob: -12.180225372314453
    10. 'Rs' → logprob: -12.180225372314453

Token 243: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07104038447141647
    2. '"' → logprob: -3.071040391921997
    3. ' ")' → logprob: -4.071040153503418
    4. 'B' → logprob: -5.946040153503418
    5. 's' → logprob: -6.696040153503418
    6. '"B' → logprob: -8.321040153503418
    7. '"""' → logprob: -8.321040153503418
    8. '">' → logprob: -8.821040153503418
    9. ')' → logprob: -9.196040153503418
    10. '"s' → logprob: -9.196040153503418

Token 244: ' n' (ID: 297)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0700713396072388
    2. ' >=' → logprob: -1.6950713396072388
    3. '>=' → logprob: -2.445071220397949
    4. ' is' → logprob: -2.695071220397949
    5. ')' → logprob: -2.820071220397949
    6. 's' → logprob: -3.070071220397949
    7. ' <=' → logprob: -3.070071220397949
    8. 'est' → logprob: -3.195071220397949
    9. ' n' → logprob: -3.320071220397949
    10. '<=' → logprob: -3.320071220397949

Token 245: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.47416234016418457
    2. '<=' → logprob: -1.3491623401641846
    3. 'est' → logprob: -2.5991623401641846
    4. ' <=' → logprob: -4.2241621017456055
    5. 'o' → logprob: -4.8491621017456055
    6. ' est' → logprob: -5.5991621017456055
    7. '>=' → logprob: -5.8491621017456055
    8. 'print' → logprob: -5.8491621017456055
    9. ''' → logprob: -6.3491621017456055
    10. '<' → logprob: -6.3491621017456055

Token 246: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.011243632063269615
    2. ' pas' → logprob: -4.51124382019043
    3. 'p' → logprob: -9.38624382019043
    4. 'strict' → logprob: -10.01124382019043
    5. '_pas' → logprob: -10.76124382019043
    6. 's' → logprob: -10.88624382019043
    7. '#' → logprob: -12.01124382019043
    8. 't' → logprob: -12.26124382019043
    9. '>' → logprob: -12.76124382019043
    10. '```' → logprob: -13.13624382019043

Token 247: ' strict' (ID: 12035)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.150949165225029
    2. '>' → logprob: -2.650949239730835
    3. ' strictly' → logprob: -3.150949239730835
    4. ' supérieur' → logprob: -4.025949001312256
    5. 'sup' → logprob: -5.025949001312256
    6. ' strict' → logprob: -6.275949001312256
    7. '(strict' → logprob: -8.900949478149414
    8. ' >' → logprob: -9.025949478149414
    9. ' sup' → logprob: -9.150949478149414
    10. 'super' → logprob: -11.400949478149414

Token 248: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0372575968503952
    2. 'ict' → logprob: -4.412257671356201
    3. 'ément' → logprob: -4.912257671356201
    4. 'iquement' → logprob: -5.662257671356201
    5. '>' → logprob: -5.912257671356201
    6. 'èrement' → logprob: -6.287257671356201
    7. 'rement' → logprob: -6.287257671356201
    8. 'amment' → logprob: -6.412257671356201
    9. 'é' → logprob: -6.662257671356201
    10. 'ly' → logprob: -7.662257671356201

Token 249: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.09077665209770203
    2. 'sup' → logprob: -2.8407766819000244
    3. '>' → logprob: -3.5907766819000244
    4. 'super' → logprob: -7.840776443481445
    5. ' sup' → logprob: -8.340776443481445
    6. 'su' → logprob: -9.340776443481445
    7. ' supérieure' → logprob: -10.090776443481445
    8. ' superior' → logprob: -11.090776443481445
    9. 'greater' → logprob: -11.340776443481445
    10. ' >' → logprob: -11.465776443481445

Token 250: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010647591203451157
    2. ':' → logprob: -5.010647773742676
    3. 'à' → logprob: -5.760647773742676
    4. ' à' → logprob: -7.385647773742676
    5. ':
' → logprob: -10.385647773742676
    6. 'print' → logprob: -10.510647773742676
    7. 'au' → logprob: -10.760647773742676
    8. '  ' → logprob: -11.135647773742676
    9. ' ' → logprob: -11.135647773742676
    10. ',' → logprob: -11.260647773742676

Token 251: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.58777916431427
    2. '"' → logprob: -0.96277916431427
    3. ' nombre' → logprob: -3.8377790451049805
    4. 's' → logprob: -3.9627790451049805
    5. '"B' → logprob: -5.3377790451049805
    6. '"s' → logprob: -5.4627790451049805
    7. 'b' → logprob: -5.7127790451049805
    8. 'n' → logprob: -5.9627790451049805
    9. ' ' → logprob: -6.5877790451049805
    10. 'print' → logprob: -6.8377790451049805

Token 252: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5783736705780029
    2. 'de' → logprob: -0.8283736705780029
    3. '#' → logprob: -6.828373908996582
    4. '   ' → logprob: -7.203373908996582
    5. 'des' → logprob: -8.578373908996582
    6. 'd' → logprob: -8.828373908996582
    7. ' of' → logprob: -9.453373908996582
    8. ' des' → logprob: -10.078373908996582
    9. ' ' → logprob: -10.328373908996582
    10. '  ' → logprob: -10.453373908996582

Token 253: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.015138296410441399
    2. 'B' → logprob: -4.515138149261475
    3. '"' → logprob: -6.140138149261475
    4. ' "' → logprob: -6.640138149261475
    5. ' ' → logprob: -7.765138149261475
    6. ' B' → logprob: -9.265138626098633
    7. ''' → logprob: -9.890138626098633
    8. '("' → logprob: -11.640138626098633
    9. ' ' → logprob: -12.015138626098633
    10. '   ' → logprob: -12.265138626098633

Token 254: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.044127315282821655
    2. '"B' → logprob: -3.1691272258758545
    3. '"' → logprob: -7.044127464294434
    4. ''' → logprob: -8.794127464294434
    5. ' B' → logprob: -9.419127464294434
    6. ' "' → logprob: -12.294127464294434
    7. ' ' → logprob: -12.419127464294434
    8. '```' → logprob: -13.169127464294434
    9. '")' → logprob: -13.294127464294434
    10. '`' → logprob: -13.419127464294434

Token 255: '"
' (ID: 1092)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.4210245907306671
    2. '):' → logprob: -2.2960245609283447
    3. '"):
' → logprob: -2.2960245609283447
    4. ':' → logprob: -2.4210245609283447
    5. '")' → logprob: -3.4210245609283447
    6. '"' → logprob: -4.671024799346924
    7. ',' → logprob: -5.421024799346924
    8. ')' → logprob: -6.171024799346924
    9. '   ' → logprob: -6.296024799346924
    10. '):
' → logprob: -6.671024799346924

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.202259823679924
    2. ':' → logprob: -1.7022597789764404
    3. ',' → logprob: -7.8272600173950195
    4. ':
' → logprob: -8.57726001739502
    5. '):' → logprob: -8.82726001739502
    6. '       ' → logprob: -10.20226001739502
    7. ')' → logprob: -10.32726001739502
    8. '  ' → logprob: -12.07726001739502
    9. '```' → logprob: -12.20226001739502
    10. 'print' → logprob: -12.70226001739502

Token 257: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14311648905277252
    2. ':' → logprob: -2.0181164741516113
    3. 'print' → logprob: -8.51811695098877
    4. ':
' → logprob: -8.89311695098877
    5. '       ' → logprob: -10.14311695098877
    6. ',' → logprob: -10.39311695098877
    7. ' :' → logprob: -11.39311695098877
    8. ' print' → logprob: -12.14311695098877
    9. '    ' → logprob: -12.51811695098877
    10. '   ' → logprob: -12.89311695098877

Token 258: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017614520620554686
    2. 'print' → logprob: -6.376761436462402
    3. ':' → logprob: -10.001761436462402
    4. ' print' → logprob: -11.876761436462402
    5. '       ' → logprob: -12.876761436462402
    6. '    
' → logprob: -13.501761436462402
    7. '   ' → logprob: -13.626761436462402
    8. '
' → logprob: -14.251761436462402
    9. ':
' → logprob: -15.001761436462402
    10. '    ' → logprob: -15.501761436462402

Token 259: 'don' (ID: 22130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14365440607070923
    2. 'print' → logprob: -2.0186543464660645
    3. ' print' → logprob: -7.7686543464660645
    4. ')' → logprob: -8.143654823303223
    5. '  ' → logprob: -9.393654823303223
    6. '   ' → logprob: -10.143654823303223
    7. 'if' → logprob: -10.268654823303223
    8. '    ' → logprob: -10.893654823303223
    9. ' ' → logprob: -11.143654823303223
    10. ' ' → logprob: -11.268654823303223

Token 260: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8119123578071594
    2. 't' → logprob: -0.8119123578071594
    3. 'e' → logprob: -2.3119122982025146
    4. 'nées' → logprob: -4.811912536621094
    5. 'cé' → logprob: -6.686912536621094
    6. '   ' → logprob: -6.811912536621094
    7. ''t' → logprob: -7.936912536621094
    8. 'es' → logprob: -8.436912536621094
    9. 's' → logprob: -8.436912536621094
    10. 'it' → logprob: -9.061912536621094

Token 261: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030691593885421753
    2. 'print' → logprob: -3.655691623687744
    3. ' print' → logprob: -6.280691623687744
    4. '  ' → logprob: -7.405691623687744
    5. ' soit' → logprob: -7.655691623687744
    6. 'if' → logprob: -8.405691146850586
    7. '    ' → logprob: -8.530691146850586
    8. ' ' → logprob: -8.655691146850586
    9. ' either' → logprob: -8.655691146850586
    10. 's' → logprob: -9.155691146850586

Token 262: ' "' (ID: 392)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.17979919910430908
    2. 's' → logprob: -1.804799199104309
    3. ' ' → logprob: -10.92979907989502
    4. ' ' → logprob: -11.42979907989502
    5. '(s' → logprob: -12.67979907989502
    6. '  ' → logprob: -12.92979907989502
    7. '	s' → logprob: -12.92979907989502
    8. '   ' → logprob: -13.24229907989502
    9. ')' → logprob: -13.30479907989502
    10. '    ' → logprob: -13.55479907989502

Token 263: 'R' (ID: 49)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0889841690659523
    2. 'R' → logprob: -2.713984251022339
    3. ' s' → logprob: -4.71398401260376
    4. 'B' → logprob: -5.21398401260376
    5. ' R' → logprob: -5.96398401260376
    6. '"' → logprob: -7.58898401260376
    7. ' B' → logprob: -8.088984489440918
    8. 'r' → logprob: -8.088984489440918
    9. '"s' → logprob: -8.463984489440918
    10. ')' → logprob: -8.713984489440918

Token 264: '"' (ID: 1)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.5306981801986694
    2. '")' → logprob: -1.5306981801986694
    3. '"' → logprob: -2.030698299407959
    4. 'count' → logprob: -3.155698299407959
    5. ')' → logprob: -4.405698299407959
    6. 's' → logprob: -5.655698299407959
    7. ' count' → logprob: -6.280698299407959
    8. '"s' → logprob: -7.030698299407959
    9. '"""' → logprob: -7.405698299407959
    10. '_count' → logprob: -7.905698299407959

Token 265: ' est' (ID: 893)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.37413886189460754
    2. ')' → logprob: -1.9991388320922852
    3. 'count' → logprob: -1.9991388320922852
    4. ' count' → logprob: -3.749138832092285
    5. ' n' → logprob: -5.374138832092285
    6. 'n' → logprob: -6.124138832092285
    7. ' )' → logprob: -6.374138832092285
    8. 's' → logprob: -6.374138832092285
    9. '<=' → logprob: -6.499138832092285
    10. '<count' → logprob: -6.499138832092285

Token 266: ' égal' (ID: 15059)
  Prédit: ' inférieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.2525178790092468
    2. 'inf' → logprob: -2.2525179386138916
    3. '<=' → logprob: -3.0025179386138916
    4. 'moins' → logprob: -3.8775179386138916
    5. 'infer' → logprob: -4.1275177001953125
    6. 'strict' → logprob: -4.7525177001953125
    7. ' inf' → logprob: -5.2525177001953125
    8. '<' → logprob: -5.6275177001953125
    9. ' moindre' → logprob: -5.6275177001953125
    10. 'égal' → logprob: -6.1275177001953125

Token 267: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -1.0862212181091309
    2. ' or' → logprob: -1.7112212181091309
    3. ')' → logprob: -2.086221218109131
    4. ' à' → logprob: -2.211221218109131
    5. '"' → logprob: -2.586221218109131
    6. 'à' → logprob: -2.711221218109131
    7. '  ' → logprob: -3.711221218109131
    8. ' ' → logprob: -3.961221218109131
    9. 'au' → logprob: -4.211221218109131
    10. 's' → logprob: -4.586221218109131

Token 268: ' inférieur' (ID: 191498)
  Prédit: ' inférieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.32058966159820557
    2. ' moins' → logprob: -2.070589542388916
    3. 'moins' → logprob: -2.320589542388916
    4. ' moindre' → logprob: -3.445589542388916
    5. 'infer' → logprob: -5.320589542388916
    6. ' less' → logprob: -5.820589542388916
    7. 'inf' → logprob: -6.070589542388916
    8. 'less' → logprob: -6.570589542388916
    9. '"' → logprob: -7.320589542388916
    10. ' menor' → logprob: -7.445589542388916

Token 269: '),' (ID: 936)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.09185142815113068
    2. 'à' → logprob: -2.9668514728546143
    3. ' au' → logprob: -3.9668514728546143
    4. ')' → logprob: -4.841851234436035
    5. 'au' → logprob: -5.091851234436035
    6. ''à' → logprob: -6.716851234436035
    7. ' ' → logprob: -7.341851234436035
    8. ' ou' → logprob: -7.716851234436035
    9. ' to' → logprob: -8.341851234436035
    10. ' aux' → logprob: -8.966851234436035

Token 270: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014673690311610699
    2. 'print' → logprob: -7.001467227935791
    3. ' print' → logprob: -7.501467227935791
    4. '       ' → logprob: -13.50146770477295
    5. '    ' → logprob: -13.87646770477295
    6. '   ' → logprob: -14.50146770477295
    7. '  ' → logprob: -15.75146770477295
    8. '
' → logprob: -16.001466751098633
    9. '    
' → logprob: -16.126466751098633
    10. '	print' → logprob: -16.376466751098633

Token 271: ' ex' (ID: 513)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09783510118722916
    2. 'print' → logprob: -2.722835063934326
    3. ' print' → logprob: -3.597835063934326
    4. '   ' → logprob: -10.097835540771484
    5. '	print' → logprob: -10.972835540771484
    6. 'pr' → logprob: -11.222835540771484
    7. '  ' → logprob: -11.347835540771484
    8. '    ' → logprob: -11.597835540771484
    9. ' ' → logprob: -11.597835540771484
    10. '       ' → logprob: -12.222835540771484

Token 272: 'éc' (ID: 5675)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.06405762583017349
    2. 'éc' → logprob: -3.1890575885772705
    3. 'ec' → logprob: -4.18905782699585
    4. 'print' → logprob: -5.43905782699585
    5. '   ' → logprob: -7.43905782699585
    6. 'cute' → logprob: -8.314057350158691
    7. 'e' → logprob: -9.439057350158691
    8. 'é' → logprob: -9.564057350158691
    9. 'ecut' → logprob: -9.564057350158691
    10. 'prime' → logprob: -9.814057350158691

Token 273: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.0370054692029953
    2. 'cute' → logprob: -3.4120054244995117
    3. 'cut' → logprob: -6.162005424499512
    4. 'ut' → logprob: -7.037005424499512
    5. 'ecute' → logprob: -8.412005424499512
    6. 'pute' → logprob: -10.662005424499512
    7. 'utte' → logprob: -10.662005424499512
    8. 'print' → logprob: -11.037005424499512
    9. '#' → logprob: -11.412005424499512
    10. 'r' → logprob: -11.787005424499512

Token 274: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.79903244972229
    2. 'print' → logprob: -0.79903244972229
    3. ' print' → logprob: -2.29903244972229
    4. '```' → logprob: -10.549032211303711
    5. '(print' → logprob: -10.549032211303711
    6. '    ' → logprob: -11.174032211303711
    7. '       ' → logprob: -11.674032211303711
    8. '  ' → logprob: -11.674032211303711
    9. '	print' → logprob: -11.799032211303711
    10. ' ' → logprob: -12.049032211303711

Token 275: ' bloc' (ID: 51218)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.047687262296676636
    2. ' print' → logprob: -3.297687292098999
    3. '   ' → logprob: -4.67268705368042
    4. '("' → logprob: -8.797687530517578
    5. '(' → logprob: -10.047687530517578
    6. '(print' → logprob: -10.672687530517578
    7. ':' → logprob: -12.297687530517578
    8. ' ' → logprob: -12.672687530517578
    9. '	print' → logprob: -12.672687530517578
    10. '```' → logprob: -12.672687530517578

Token 276: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005732063204050064
    2. 'print' → logprob: -5.50573205947876
    3. ':' → logprob: -6.63073205947876
    4. ' print' → logprob: -9.005732536315918
    5. ':
' → logprob: -9.380732536315918
    6. '       ' → logprob: -9.630732536315918
    7. '
' → logprob: -10.630732536315918
    8. '    
' → logprob: -10.880732536315918
    9. '```' → logprob: -12.005732536315918
    10. '   ' → logprob: -13.380732536315918

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009772143326699734
    2. 'print' → logprob: -4.634772300720215
    3. ' print' → logprob: -11.384772300720215
    4. '       ' → logprob: -12.634772300720215
    5. '```' → logprob: -14.009772300720215
    6. '   ' → logprob: -15.009772300720215
    7. '	print' → logprob: -15.509772300720215
    8. '    
' → logprob: -16.2597713470459
    9. '  ' → logprob: -16.8847713470459
    10. '    ' → logprob: -17.1347713470459

Token 278: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048879388719797134
    2. 'print' → logprob: -3.048879384994507
    3. ' print' → logprob: -8.173879623413086
    4. '       ' → logprob: -11.798879623413086
    5. '   ' → logprob: -14.298879623413086
    6. '```' → logprob: -14.298879623413086
    7. '    
' → logprob: -14.673879623413086
    8. '	print' → logprob: -14.673879623413086
    9. '    ' → logprob: -16.048879623413086
    10. '
' → logprob: -16.298879623413086

Token 279: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20226675271987915
    2. '   ' → logprob: -1.7022666931152344
    3. ' print' → logprob: -7.077266693115234
    4. '       ' → logprob: -12.702266693115234
    5. '	print' → logprob: -13.827266693115234
    6. '   ' → logprob: -13.952266693115234
    7. ' ' → logprob: -14.077266693115234
    8. 'pr' → logprob: -14.202266693115234
    9. '  ' → logprob: -14.327266693115234
    10. '```' → logprob: -14.702266693115234

Token 280: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.0948158382670954e-05
    2. ' print' → logprob: -10.875030517578125
    3. '   ' → logprob: -11.500030517578125
    4. 'pr' → logprob: -13.750030517578125
    5. 'prin' → logprob: -14.375030517578125
    6. ' ' → logprob: -16.000030517578125
    7. 'pass' → logprob: -17.500030517578125
    8. '  ' → logprob: -17.500030517578125
    9. 'prit' → logprob: -17.500030517578125
    10. 'printf' → logprob: -18.375030517578125

Token 281: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.048611097037792206
    2. ' print' → logprob: -3.0486111640930176
    3. '   ' → logprob: -11.04861068725586
    4. '(print' → logprob: -11.92361068725586
    5. '.print' → logprob: -14.67361068725586
    6. '	print' → logprob: -15.04861068725586
    7. ' ' → logprob: -16.04861068725586
    8. 'pr' → logprob: -16.17361068725586
    9. '(' → logprob: -16.42361068725586
    10. '_print' → logprob: -16.92361068725586

Token 282: '()' (ID: 416)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001221774611622095
    2. '(' → logprob: -6.751221656799316
    3. '()' → logprob: -10.001221656799316
    4. '("")' → logprob: -12.626221656799316
    5. '('' → logprob: -13.126221656799316
    6. ' ' → logprob: -15.001221656799316
    7. '("("' → logprob: -15.876221656799316
    8. '("\' → logprob: -16.501222610473633
    9. '(
' → logprob: -16.751222610473633
    10. '("""' → logprob: -16.876222610473633

Token 283: ' affiche' (ID: 127479)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0009217040496878326
    2. '(' → logprob: -7.625921726226807
    3. 'print' → logprob: -7.875921726226807
    4. '('' → logprob: -10.625921249389648
    5. '(print' → logprob: -10.750921249389648
    6. '("")' → logprob: -12.625921249389648
    7. '()' → logprob: -13.250921249389648
    8. ' print' → logprob: -14.250921249389648
    9. '("""' → logprob: -14.500921249389648
    10. '(
' → logprob: -14.875921249389648

Token 284: ' alors' (ID: 17971)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0028533751610666513
    2. '(' → logprob: -5.8778533935546875
    3. '('' → logprob: -10.877853393554688
    4. '("")' → logprob: -10.877853393554688
    5. '()' → logprob: -11.752853393554688
    6. '(
' → logprob: -13.377853393554688
    7. '(False' → logprob: -14.627853393554688
    8. '"' → logprob: -15.002853393554688
    9. '(""' → logprob: -15.877853393554688
    10. ' ("' → logprob: -16.377853393554688

Token 285: ' le' (ID: 505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007878291653469205
    2. '(' → logprob: -7.250787734985352
    3. '"' → logprob: -10.125787734985352
    4. '"No' → logprob: -10.625787734985352
    5. '('' → logprob: -11.875787734985352
    6. '("")' → logprob: -13.250787734985352
    7. ' ("' → logprob: -13.375787734985352
    8. '()' → logprob: -14.125787734985352
    9. '(
' → logprob: -14.125787734985352
    10. '(No' → logprob: -14.375787734985352

Token 286: ' texte' (ID: 53492)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.24064403772354126
    2. '("' → logprob: -1.6156439781188965
    3. 'No' → logprob: -4.2406439781188965
    4. '"' → logprob: -7.9906439781188965
    5. '(No' → logprob: -8.365644454956055
    6. '“No' → logprob: -9.990644454956055
    7. '>No' → logprob: -10.740644454956055
    8. '('' → logprob: -10.865644454956055
    9. 'no' → logprob: -11.115644454956055
    10. ' No' → logprob: -11.115644454956055

Token 287: ' '' (ID: 461)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00022010602697264403
    2. '(' → logprob: -9.12522029876709
    3. '"No' → logprob: -9.37522029876709
    4. '"' → logprob: -10.87522029876709
    5. '('' → logprob: -12.37522029876709
    6. 'No' → logprob: -13.12522029876709
    7. '"B' → logprob: -14.50022029876709
    8. '(No' → logprob: -15.12522029876709
    9. '("")' → logprob: -15.75022029876709
    10. '(
' → logprob: -16.250219345092773

Token 288: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0037427213974297047
    2. '"No' → logprob: -5.628742694854736
    3. ''' → logprob: -9.503743171691895
    4. '"' → logprob: -10.128743171691895
    5. ' No' → logprob: -10.753743171691895
    6. 'Yes' → logprob: -13.628743171691895
    7. 'N' → logprob: -14.003743171691895
    8. 'NO' → logprob: -14.628743171691895
    9. 'Nos' → logprob: -15.003743171691895
    10. '_No' → logprob: -15.003743171691895

Token 289: ''' (ID: 6)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00013166792632546276
    2. '("' → logprob: -9.625131607055664
    3. '")
' → logprob: -9.875131607055664
    4. ')' → logprob: -12.250131607055664
    5. '()' → logprob: -12.875131607055664
    6. '")
' → logprob: -12.875131607055664
    7. '')' → logprob: -13.125131607055664
    8. ')")' → logprob: -13.750131607055664
    9. 'No' → logprob: -14.375131607055664
    10. '"' → logprob: -15.750131607055664

Token 290: ' à' (ID: 1221)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -6.837811088189483e-05
    2. '   ' → logprob: -10.750068664550781
    3. '(' → logprob: -11.000068664550781
    4. ')' → logprob: -11.250068664550781
    5. 'print' → logprob: -12.125068664550781
    6. '('' → logprob: -12.750068664550781
    7. '(No' → logprob: -13.250068664550781
    8. '("")' → logprob: -14.000068664550781
    9. '(
' → logprob: -14.000068664550781
    10. '()' → logprob: -14.125068664550781

Token 291: ' l' (ID: 305)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5995486974716187
    2. '"' → logprob: -1.0995486974716187
    3. '"No' → logprob: -2.474548816680908
    4. ')' → logprob: -4.599548816680908
    5. '(' → logprob: -5.224548816680908
    6. '()' → logprob: -6.224548816680908
    7. 'screen' → logprob: -6.224548816680908
    8. 'l' → logprob: -6.224548816680908
    9. '")' → logprob: -6.474548816680908
    10. 'print' → logprob: -6.474548816680908

Token 292: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.09289508312940598
    2. '("' → logprob: -3.217895030975342
    3. '"' → logprob: -4.342895030975342
    4. 'creen' → logprob: -4.467895030975342
    5. '('' → logprob: -5.092895030975342
    6. ' écran' → logprob: -5.467895030975342
    7. '’écran' → logprob: -5.717895030975342
    8. 'screen' → logprob: -6.342895030975342
    9. ''' → logprob: -6.342895030975342
    10. ''é' → logprob: -6.717895030975342

Token 293: '.
' (ID: 558)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.8472052216529846
    2. '   ' → logprob: -1.3472051620483398
    3. '()' → logprob: -1.9722051620483398
    4. ')' → logprob: -2.72220516204834
    5. '()
' → logprob: -3.09720516204834
    6. 'print' → logprob: -3.09720516204834
    7. ')
' → logprob: -4.34720516204834
    8. '")' → logprob: -6.47220516204834
    9. '(' → logprob: -7.22220516204834
    10. '("\' → logprob: -8.72220516204834

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003365350130479783
    2. 'print' → logprob: -8.000336647033691
    3. '```' → logprob: -14.625336647033691
    4. '    
' → logprob: -14.875336647033691
    5. ' print' → logprob: -15.500336647033691
    6. '   ' → logprob: -17.000335693359375
    7. '       ' → logprob: -17.500335693359375
    8. '	print' → logprob: -17.625335693359375
    9. '
' → logprob: -19.375335693359375
    10. '  ' → logprob: -20.500335693359375

Token 295: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872477412223816
    2. 'print' (adapté à ' print') → logprob: -1.1372478008270264
    3. ' print' → logprob: -7.887247562408447
    4. '       ' → logprob: -14.637248039245605
    5. '	print' → logprob: -15.137248039245605
    6. '```' → logprob: -15.512248039245605
    7. '  ' → logprob: -16.26224708557129
    8. 'pr' → logprob: -16.88724708557129
    9. '   ' → logprob: -16.88724708557129
    10. ' ' → logprob: -16.88724708557129

Token 296: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.596781946020201e-05
    2. '(' → logprob: -10.000045776367188
    3. '('' → logprob: -15.250045776367188
    4. '()' → logprob: -16.250045776367188
    5. '("")' → logprob: -16.375045776367188
    6. ')("' → logprob: -17.750045776367188
    7. ' ("' → logprob: -18.125045776367188
    8. '("("' → logprob: -18.125045776367188
    9. '("""' → logprob: -18.250045776367188
    10. '(
' → logprob: -18.625045776367188

Token 297: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -6.2729995988775045e-06
    2. '"No' → logprob: -12.000006675720215
    3. ' No' → logprob: -17.2500057220459
    4. 'N' → logprob: -18.7500057220459
    5. '"' → logprob: -19.0000057220459
    6. '")' → logprob: -21.5000057220459
    7. '_No' → logprob: -22.1250057220459
    8. '“No' → logprob: -23.7500057220459
    9. '>No' → logprob: -23.8750057220459
    10. '"N' → logprob: -24.0000057220459

Token 298: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -13.00000286102295
    3. ')")' → logprob: -14.12500286102295
    4. '')' → logprob: -17.125003814697266
    5. '")
' → logprob: -17.375003814697266
    6. '()' → logprob: -18.500003814697266
    7. '"' → logprob: -19.125003814697266
    8. '!")' → logprob: -20.500003814697266
    9. ' ")' → logprob: -20.750003814697266
    10. '("' → logprob: -20.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 296
Tokens correctement prédits (1ère position, stricte): 77
Tokens correctement prédits (1ère position, avec adaptation): 77
Tokens correctement prédits (top 10): 158
Précision stricte (1ère position): 26.01%
Précision adaptée (1ère position): 26.01%
Précision (top 10): 53.38%
================================================================================
