================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter

# Lecture et conversion en entier via une compréhension à un seul élément dans une map avec lambda
a = list(map(lambda x: int(x), filter(lambda x: len(x) > 0, input().split())))

# Récupérer les indices 2,0,1 mais en utilisant itemgetter sur les indices fournis par une permutation
indices = reduce(lambda x, y: x + [y], [[2],[0],[1]], [])

print(*itemgetter(*indices)(a))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.2578085660934448
    2. 'partial' → logprob: -1.7578085660934448
    3. 'reduce' → logprob: -3.3828086853027344
    4. ' wraps' → logprob: -4.007808685302734
    5. 'l' → logprob: -6.757808685302734
    6. ' partial' → logprob: -7.257808685302734
    7. 'cache' → logprob: -8.382808685302734
    8. '```' → logprob: -8.632808685302734
    9. 'cached' → logprob: -9.007808685302734
    10. 'cmp' → logprob: -9.257808685302734

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010978259146213531
    2. '(lambda' → logprob: -4.6359782218933105
    3. ' (' → logprob: -7.6359782218933105
    4. ',' → logprob: -8.510978698730469
    5. '```' → logprob: -8.760978698730469
    6. 'def' → logprob: -9.135978698730469
    7. '.' → logprob: -9.760978698730469
    8. '(
' → logprob: -9.760978698730469
    9. 'a' → logprob: -10.385978698730469
    10. 'lambda' → logprob: -10.510978698730469

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11344912648200989
    2. '\' → logprob: -2.6134490966796875
    3. 'def' → logprob: -4.1134490966796875
    4. '```' → logprob: -5.6134490966796875
    5. '(lambda' → logprob: -5.7384490966796875
    6. ',' → logprob: -5.9884490966796875
    7. '\n' → logprob: -6.2384490966796875
    8. '(
' → logprob: -6.6134490966796875
    9. '\(' → logprob: -6.9884490966796875
    10. '.' → logprob: -7.2384490966796875

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9003138542175293
    2. ' operator' → logprob: -1.4003138542175293
    3. ' collections' → logprob: -1.7753138542175293
    4. ' itertools' → logprob: -1.7753138542175293
    5. ' os' → logprob: -5.025313854217529
    6. 'operator' → logprob: -7.400313854217529
    7. ' sys' → logprob: -8.525314331054688
    8. ' typing' → logprob: -8.525314331054688
    9. 'math' → logprob: -8.775314331054688
    10. 'collections' → logprob: -8.900314331054688

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06689119338989258
    2. 'import' → logprob: -2.8168911933898926
    3. '.' → logprob: -5.941891193389893
    4. ' ' → logprob: -6.191891193389893
    5. ' .' → logprob: -9.066890716552734
    6. '.import' → logprob: -9.566890716552734
    7. '	import' → logprob: -10.691890716552734
    8. '_import' → logprob: -11.816890716552734
    9. '<|end|>' → logprob: -12.191890716552734
    10. '-import' → logprob: -13.441890716552734

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.10536035150289536
    2. ' import' → logprob: -3.355360269546509
    3. 'add' → logprob: -3.480360269546509
    4. ' mul' → logprob: -3.605360269546509
    5. ' ' → logprob: -5.605360507965088
    6. 'mul' → logprob: -6.605360507965088
    7. 'import' → logprob: -6.730360507965088
    8. ' item' → logprob: -7.730360507965088
    9. ' icon' → logprob: -9.48036003112793
    10. 'item' → logprob: -9.98036003112793

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.006860651075839996
    2. 'get' → logprob: -5.006860733032227
    3. 'getitem' → logprob: -9.131860733032227
    4. 'gett' → logprob: -10.256860733032227
    5. 'item' → logprob: -14.256860733032227
    6. 'g' → logprob: -14.381860733032227
    7. '_get' → logprob: -15.881860733032227
    8. 'ge' → logprob: -16.131860733032227
    9. '.get' → logprob: -16.506860733032227
    10. '```' → logprob: -16.756860733032227

Token 10: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8920332193374634
    2. '.' → logprob: -1.6420332193374634
    3. '(' → logprob: -1.7670332193374634
    4. '\n' → logprob: -2.017033100128174
    5. '(
' → logprob: -4.392033100128174
    6. ',' → logprob: -4.392033100128174
    7. '[' → logprob: -4.642033100128174
    8. 'def' → logprob: -4.642033100128174
    9. 'newline' → logprob: -4.642033100128174
    10. '`' → logprob: -5.017033100128174

Token 11: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09218762814998627
    2. '(
' → logprob: -3.5921876430511475
    3. '\' → logprob: -4.092187404632568
    4. ',' → logprob: -4.092187404632568
    5. '.' → logprob: -4.967187404632568
    6. 'def' → logprob: -4.967187404632568
    7. '\n' → logprob: -5.842187404632568
    8. '#' → logprob: -6.592187404632568
    9. '[' → logprob: -6.592187404632568
    10. '=' → logprob: -6.592187404632568

Token 12: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15919622778892517
    2. ' sorted' → logprob: -3.284196138381958
    3. 'sorted' → logprob: -4.784196376800537
    4. ' group' → logprob: -4.909196376800537
    5. ' The' → logprob: -5.034196376800537
    6. 'd' → logprob: -5.034196376800537
    7. 'sum' → logprob: -5.159196376800537
    8. ' reduce' → logprob: -5.409196376800537
    9. 'reduce' → logprob: -5.534196376800537
    10. ' sum' → logprob: -5.596696376800537

Token 13: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5455251932144165
    2. '_' → logprob: -1.6705251932144165
    3. 's' → logprob: -2.545525074005127
    4. '_notes' → logprob: -2.920525074005127
    5. ' ' → logprob: -3.170525074005127
    6. ',' → logprob: -4.670525074005127
    7. '=' → logprob: -4.795525074005127
    8. ':' → logprob: -5.045525074005127
    9. 'def' → logprob: -5.295525074005127
    10. ' notes' → logprob: -5.670525074005127

Token 14: ' conversion' (ID: 22165)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.38898277282714844
    2. ' ' → logprob: -1.7639827728271484
    3. ' manipulation' → logprob: -3.1389827728271484
    4. ',' → logprob: -4.013982772827148
    5. ' #' → logprob: -4.638982772827148
    6. ' de' → logprob: -4.638982772827148
    7. ' ' → logprob: -4.638982772827148
    8. ' d' → logprob: -4.763982772827148
    9. ' l' → logprob: -5.013982772827148
    10. '  ' → logprob: -5.388982772827148

Token 15: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3663824200630188
    2. '_' → logprob: -1.616382360458374
    3. 's' → logprob: -3.616382360458374
    4. 'd' → logprob: -4.241382598876953
    5. 'de' → logprob: -4.741382598876953
    6. 'des' → logprob: -4.741382598876953
    7. ' (' → logprob: -5.116382598876953
    8. ' ' → logprob: -5.116382598876953
    9. 'data' → logprob: -5.366382598876953
    10. ' d' → logprob: -5.616382598876953

Token 16: ' entier' (ID: 80473)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.0823099613189697
    2. 'int' → logprob: -2.4573099613189697
    3. 'list' → logprob: -2.4573099613189697
    4. ' pandas' → logprob: -2.5823099613189697
    5. ' liste' → logprob: -2.8323099613189697
    6. ' données' → logprob: -3.0823099613189697
    7. 'd' → logprob: -3.5823099613189697
    8. '```' → logprob: -3.7073099613189697
    9. 'str' → logprob: -3.8323099613189697
    10. ' dataframe' → logprob: -3.8323099613189697

Token 17: ' via' (ID: 4493)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2170900106430054
    2. 'n' → logprob: -1.3420900106430054
    3. '(' → logprob: -1.5920900106430054
    4. 's' → logprob: -2.842090129852295
    5. 'numbers' → logprob: -2.842090129852295
    6. 'l' → logprob: -4.092090129852295
    7. 'd' → logprob: -4.467090129852295
    8. '\' → logprob: -4.717090129852295
    9. '\n' → logprob: -4.717090129852295
    10. 'values' → logprob: -4.717090129852295

Token 18: ' une' (ID: 2463)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.1018348932266235
    2. 'int' → logprob: -1.4768348932266235
    3. ' map' → logprob: -1.4768348932266235
    4. 'map' → logprob: -2.851834774017334
    5. ' list' → logprob: -3.101834774017334
    6. ' la' → logprob: -3.351834774017334
    7. 'list' → logprob: -3.351834774017334
    8. ' l' → logprob: -5.101834774017334
    9. 'l' → logprob: -5.226834774017334
    10. 'la' → logprob: -5.851834774017334

Token 19: ' compréhension' (ID: 142333)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.2985297441482544
    2. 'list' → logprob: -1.7985297441482544
    3. 'lambda' → logprob: -1.7985297441482544
    4. 'liste' → logprob: -1.9235297441482544
    5. 'fonction' → logprob: -2.298529624938965
    6. 'clé' → logprob: -3.798529624938965
    7. 'chaine' → logprob: -4.048529624938965
    8. 'int' → logprob: -4.423529624938965
    9. 'compr' → logprob: -4.423529624938965
    10. 'com' → logprob: -4.548529624938965

Token 20: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22855348885059357
    2. 'list' → logprob: -3.228553533554077
    3. 'liste' → logprob: -3.478553533554077
    4. ']' → logprob: -3.603553533554077
    5. '[n' → logprob: -4.228553295135498
    6. '[
' → logprob: -4.353553295135498
    7. 'lst' → logprob: -4.353553295135498
    8. 'ligne' → logprob: -4.478553295135498
    9. 'n' → logprob: -4.728553295135498
    10. '[int' → logprob: -5.478553295135498

Token 21: ' un' (ID: 537)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5934667587280273
    2. 'liste' → logprob: -1.7184667587280273
    3. '[' → logprob: -2.3434667587280273
    4. 'l' → logprob: -3.2184667587280273
    5. 'la' → logprob: -3.3434667587280273
    6. 'list' → logprob: -3.4684667587280273
    7. '```' → logprob: -4.218466758728027
    8. 'int' → logprob: -4.468466758728027
    9. 'base' → logprob: -4.718466758728027
    10. '[i' → logprob: -4.843466758728027

Token 22: ' seul' (ID: 33041)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5252369046211243
    2. 'ligne' → logprob: -2.4002368450164795
    3. 'tour' → logprob: -3.0252368450164795
    4. 'jet' → logprob: -3.2752368450164795
    5. 'niveau' → logprob: -3.4002368450164795
    6. 'e' → logprob: -3.7752368450164795
    7. 'se' → logprob: -4.150237083435059
    8. 'n' → logprob: -4.150237083435059
    9. 'token' → logprob: -4.150237083435059
    10. 'c' → logprob: -4.400237083435059

Token 23: ' élément' (ID: 99627)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.6349183917045593
    2. 'n' → logprob: -2.509918451309204
    3. 'élé' → logprob: -2.634918451309204
    4. 'jet' → logprob: -3.009918451309204
    5. 'ligne' → logprob: -3.134918451309204
    6. 'token' → logprob: -3.134918451309204
    7. 'for' → logprob: -3.134918451309204
    8. 'indice' → logprob: -4.009918212890625
    9. '[' → logprob: -4.259918212890625
    10. ' niveau' → logprob: -4.884918212890625

Token 24: ' dans' (ID: 2671)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5003225207328796
    2. ']' → logprob: -2.2503225803375244
    3. 'numbers' → logprob: -2.8753225803375244
    4. 'n' → logprob: -3.0003225803375244
    5. 'ligne' → logprob: -4.000322341918945
    6. 'data' → logprob: -4.000322341918945
    7. 'values' → logprob: -4.250322341918945
    8. ',' → logprob: -4.625322341918945
    9. '[]' → logprob: -4.625322341918945
    10. 'lst' → logprob: -4.625322341918945

Token 25: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.101589560508728
    2. 'la' → logprob: -1.476589560508728
    3. '[' → logprob: -1.601589560508728
    4. 'une' → logprob: -1.976589560508728
    5. ' la' → logprob: -3.4765896797180176
    6. 'l' → logprob: -4.101589679718018
    7. ' une' → logprob: -4.476589679718018
    8. 'le' → logprob: -4.726589679718018
    9. 'list' → logprob: -4.976589679718018
    10. '[...]' → logprob: -5.476589679718018

Token 26: ' map' (ID: 4014)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4170224070549011
    2. 'ligne' → logprob: -1.917022466659546
    3. 'list' → logprob: -2.417022466659546
    4. 'f' → logprob: -3.167022466659546
    5. ' liste' → logprob: -3.667022466659546
    6. '[' → logprob: -4.667022228240967
    7. ' ligne' → logprob: -4.667022228240967
    8. ' list' → logprob: -5.042022228240967
    9. '[]' → logprob: -5.667022228240967
    10. 'l' → logprob: -6.667022228240967

Token 27: ' avec' (ID: 3937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010648652911186218
    2. '(
' → logprob: -4.885648727416992
    3. ',' → logprob: -6.635648727416992
    4. 's' → logprob: -8.010648727416992
    5. '(lambda' → logprob: -8.510648727416992
    6. 'def' → logprob: -8.760648727416992
    7. ')' → logprob: -8.885648727416992
    8. '[' → logprob: -9.010648727416992
    9. '#' → logprob: -9.635648727416992
    10. ' (' → logprob: -9.885648727416992

Token 28: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8978956341743469
    2. 'int' → logprob: -1.3978955745697021
    3. 'list' → logprob: -2.272895574569702
    4. ' lambda' → logprob: -2.397895574569702
    5. ' int' → logprob: -2.897895574569702
    6. 'str' → logprob: -3.022895574569702
    7. ' str' → logprob: -4.147895812988281
    8. ' list' → logprob: -4.147895812988281
    9. ' la' → logprob: -5.022895812988281
    10. 'l' → logprob: -6.272895812988281

Token 29: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032547205686569214
    2. 'map' → logprob: -4.5325469970703125
    3. 'result' → logprob: -5.4075469970703125
    4. '(
' → logprob: -5.5325469970703125
    5. ' (' → logprob: -6.4075469970703125
    6. ',' → logprob: -6.5325469970703125
    7. '[' → logprob: -6.5325469970703125
    8. 's' → logprob: -6.7825469970703125
    9. '(map' → logprob: -7.1575469970703125
    10. 'def' → logprob: -7.4075469970703125

Token 30: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4763013124465942
    2. 'result' → logprob: -1.9763013124465942
    3. 'numbers' → logprob: -2.1013011932373047
    4. 'map' → logprob: -2.2263011932373047
    5. 'values' → logprob: -2.3513011932373047
    6. 'n' → logprob: -2.9763011932373047
    7. '[' → logprob: -3.4763011932373047
    8. 'val' → logprob: -3.6013011932373047
    9. 'data' → logprob: -3.8513011932373047
    10. ',' → logprob: -3.8513011932373047

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2955738604068756
    2. 'rg' → logprob: -1.7955738306045532
    3. '=' → logprob: -3.2955739498138428
    4. 'r' → logprob: -3.4205739498138428
    5. 's' → logprob: -5.170573711395264
    6. '_' → logprob: -5.795573711395264
    7. '_r' → logprob: -6.295573711395264
    8. '_map' → logprob: -6.545573711395264
    9. 'rray' → logprob: -6.920573711395264
    10. 'rr' → logprob: -7.045573711395264

Token 32: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6529296040534973
    2. 'list' → logprob: -1.0279295444488525
    3. ' map' → logprob: -2.7779295444488525
    4. 'map' → logprob: -2.9029295444488525
    5. '[' → logprob: -6.652929782867432
    6. ' int' → logprob: -6.777929782867432
    7. 'int' → logprob: -6.902929782867432
    8. ' [' → logprob: -7.152929782867432
    9. ' ' → logprob: -9.902929306030273
    10. '[int' → logprob: -10.152929306030273

Token 33: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.16025742888450623
    2. '(' → logprob: -1.9102574586868286
    3. '(
' → logprob: -10.910257339477539
    4. '(m' → logprob: -12.285257339477539
    5. '(int' → logprob: -12.910257339477539
    6. '(filter' → logprob: -13.410257339477539
    7. '(

' → logprob: -13.410257339477539
    8. 'map' → logprob: -14.035257339477539
    9. '((' → logprob: -14.285257339477539
    10. '(ma' → logprob: -14.660257339477539

Token 34: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.00882551446557045
    2. '(' → logprob: -4.758825302124023
    3. '(int' → logprob: -8.508825302124023
    4. 'lambda' → logprob: -12.383825302124023
    5. '(
' → logprob: -13.133825302124023
    6. ' (' → logprob: -13.883825302124023
    7. '(\' → logprob: -14.758825302124023
    8. ' lambda' → logprob: -14.758825302124023
    9. '(l' → logprob: -15.008825302124023
    10. '(f' → logprob: -15.383825302124023

Token 35: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06246113404631615
    2. 'x' → logprob: -2.8124611377716064
    3. ' s' → logprob: -8.437460899353027
    4. ' i' → logprob: -9.687460899353027
    5. ' ' → logprob: -10.062460899353027
    6. 's' → logprob: -10.187460899353027
    7. ' int' → logprob: -10.937460899353027
    8. ' item' → logprob: -11.062460899353027
    9. ' line' → logprob: -11.187460899353027
    10. ' t' → logprob: -11.312460899353027

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010104998014867306
    2. ':int' → logprob: -5.260105133056641
    3. ' :' → logprob: -5.385105133056641
    4. '[int' → logprob: -9.26010513305664
    5. 'int' → logprob: -9.51010513305664
    6. ':x' → logprob: -10.63510513305664
    7. ',' → logprob: -10.76010513305664
    8. ',int' → logprob: -11.88510513305664
    9. 'x' → logprob: -11.88510513305664
    10. '=int' → logprob: -11.88510513305664

Token 37: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.42930853366851807
    2. ' int' → logprob: -1.054308533668518
    3. ' x' → logprob: -8.554308891296387
    4. 'x' → logprob: -8.679308891296387
    5. '[int' → logprob: -8.679308891296387
    6. '<int' → logprob: -11.179308891296387
    7. '(int' → logprob: -11.179308891296387
    8. '	int' → logprob: -11.679308891296387
    9. ' ' → logprob: -11.679308891296387
    10. 'a' → logprob: -11.804308891296387

Token 38: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.033662643283605576
    2. '(' → logprob: -3.4086625576019287
    3. 'x' → logprob: -11.783662796020508
    4. ')' → logprob: -13.033662796020508
    5. '(s' → logprob: -13.033662796020508
    6. ' ' → logprob: -13.658662796020508
    7. ' (' → logprob: -14.033662796020508
    8. '(
' → logprob: -14.533662796020508
    9. ' x' → logprob: -14.658662796020508
    10. '((' → logprob: -15.033662796020508

Token 39: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05079676955938339
    2. '[' → logprob: -3.9257967472076416
    3. ')' → logprob: -4.300796985626221
    4. '.strip' → logprob: -4.425796985626221
    5. ')))' → logprob: -6.550796985626221
    6. '.split' → logprob: -6.800796985626221
    7. ' ),' → logprob: -7.925796985626221
    8. ''),' → logprob: -8.675796508789062
    9. '['' → logprob: -8.800796508789062
    10. ' ' → logprob: -8.925796508789062

Token 40: ' filter' (ID: 6690)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4280318319797516
    2. ' input' → logprob: -1.4280318021774292
    3. '['' → logprob: -3.6780319213867188
    4. 'line' → logprob: -4.303031921386719
    5. ' line' → logprob: -4.553031921386719
    6. ''' → logprob: -4.803031921386719
    7. '[' → logprob: -5.053031921386719
    8. ' ['' → logprob: -5.428031921386719
    9. 'a' → logprob: -5.553031921386719
    10. 'data' → logprob: -5.553031921386719

Token 41: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0021487155463546515
    2. '(' → logprob: -6.252148628234863
    3. '(str' → logprob: -9.127148628234863
    4. '(None' → logprob: -9.502148628234863
    5. 'lambda' → logprob: -11.127148628234863
    6. '(len' → logprob: -12.377148628234863
    7. '('' → logprob: -12.752148628234863
    8. '(item' → logprob: -12.877148628234863
    9. '(
' → logprob: -13.252148628234863
    10. '(is' → logprob: -13.502148628234863

Token 42: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6355078816413879
    2. 'x' → logprob: -0.7605078816413879
    3. 'y' → logprob: -7.135508060455322
    4. ' y' → logprob: -7.510508060455322
    5. ' s' → logprob: -8.135507583618164
    6. 'c' → logprob: -8.260507583618164
    7. ' c' → logprob: -8.385507583618164
    8. 's' → logprob: -8.510507583618164
    9. ' ' → logprob: -8.885507583618164
    10. 'e' → logprob: -9.260507583618164

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03417704626917839
    2. ' x' → logprob: -4.034176826477051
    3. ' :' → logprob: -4.284176826477051
    4. 'x' → logprob: -6.659176826477051
    5. '=' → logprob: -7.784176826477051
    6. '=lambda' → logprob: -8.90917682647705
    7. ':x' → logprob: -9.15917682647705
    8. 'isdigit' → logprob: -9.53417682647705
    9. ' ' → logprob: -10.65917682647705
    10. 'lambda' → logprob: -11.53417682647705

Token 44: ' len' (ID: 4631)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5766628384590149
    2. ' x' → logprob: -0.8266628384590149
    3. 'len' → logprob: -7.951663017272949
    4. ' len' → logprob: -8.70166301727295
    5. ' ' → logprob: -9.70166301727295
    6. 'str' → logprob: -10.20166301727295
    7. 'lambda' → logprob: -10.82666301727295
    8. ' str' → logprob: -10.95166301727295
    9. 'isdigit' → logprob: -11.45166301727295
    10. ''x' → logprob: -11.57666301727295

Token 45: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0031876976136118174
    2. '(' → logprob: -5.753187656402588
    3. '(s' → logprob: -12.503188133239746
    4. 'x' → logprob: -12.753188133239746
    5. '(str' → logprob: -14.128188133239746
    6. '(
' → logprob: -14.753188133239746
    7. '(a' → logprob: -14.878188133239746
    8. ' (' → logprob: -15.003188133239746
    9. '(i' → logprob: -15.503188133239746
    10. ' ' → logprob: -15.628188133239746

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08478548377752304
    2. ')>' → logprob: -2.5847854614257812
    3. ')==' → logprob: -6.084785461425781
    4. '>' → logprob: -6.334785461425781
    5. ' )' → logprob: -7.084785461425781
    6. ')>=' → logprob: -7.834785461425781
    7. '.strip' → logprob: -8.459785461425781
    8. ')!=' → logprob: -9.209785461425781
    9. ' >' → logprob: -9.709785461425781
    10. '),' → logprob: -9.834785461425781

Token 47: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7463093996047974
    2. '>' → logprob: -0.9963093996047974
    3. ')' → logprob: -2.246309280395508
    4. ' ==' → logprob: -3.996309280395508
    5. '==' → logprob: -4.621309280395508
    6. ')>' → logprob: -4.746309280395508
    7. ' )' → logprob: -5.746309280395508
    8. '),' → logprob: -5.996309280395508
    9. ' ' → logprob: -5.996309280395508
    10. ' >=' → logprob: -6.246309280395508

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08837328106164932
    2. ' ' → logprob: -2.8383731842041016
    3. '1' → logprob: -3.7133731842041016
    4. '2' → logprob: -6.713373184204102
    5. '3' → logprob: -7.963373184204102
    6. '4' → logprob: -9.963373184204102
    7. '5' → logprob: -11.525873184204102
    8. '  ' → logprob: -11.963373184204102
    9. '   ' → logprob: -11.963373184204102
    10. '6' → logprob: -12.650873184204102

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06307944655418396
    2. '1' → logprob: -3.063079357147217
    3. ' ' → logprob: -4.438079357147217
    4. '2' → logprob: -6.188079357147217
    5. '3' → logprob: -7.813079357147217
    6. '4' → logprob: -9.688079833984375
    7. '5' → logprob: -11.438079833984375
    8. '   ' → logprob: -12.313079833984375
    9. '-' → logprob: -12.438079833984375
    10. '  ' → logprob: -12.750579833984375

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008609137497842312
    2. '),' → logprob: -5.633609294891357
    3. ' ,' → logprob: -6.133609294891357
    4. 'a' → logprob: -7.133609294891357
    5. ')))' → logprob: -7.758609294891357
    6. ')' → logprob: -8.1336088180542
    7. ',a' → logprob: -8.3836088180542
    8. '(' → logprob: -8.3836088180542
    9. '(x' → logprob: -8.8836088180542
    10. ')),' → logprob: -9.0086088180542

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20255553722381592
    2. ' input' → logprob: -2.7025556564331055
    3. 'line' → logprob: -2.8275556564331055
    4. ' line' → logprob: -4.2025556564331055
    5. 's' → logprob: -5.3275556564331055
    6. '['' → logprob: -5.4525556564331055
    7. '"' → logprob: -5.5775556564331055
    8. 'open' → logprob: -5.5775556564331055
    9. 'map' → logprob: -6.0775556564331055
    10. ''' → logprob: -6.0775556564331055

Token 52: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5557256937026978
    2. '().' → logprob: -1.1807256937026978
    3. '()' → logprob: -2.305725574493408
    4. '('' → logprob: -4.180725574493408
    5. '("' → logprob: -6.180725574493408
    6. '("("' → logprob: -6.930725574493408
    7. '(()' → logprob: -7.305725574493408
    8. '()))' → logprob: -9.305726051330566
    9. '("").' → logprob: -9.305726051330566
    10. '('').' → logprob: -9.305726051330566

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04887745901942253
    2. 'strip' → logprob: -3.048877477645874
    3. ' split' → logprob: -8.298877716064453
    4. 'rstrip' → logprob: -10.423877716064453
    5. ' strip' → logprob: -11.673877716064453
    6. 'replace' → logprob: -13.173877716064453
    7. 'read' → logprob: -14.923877716064453
    8. ' ' → logprob: -15.548877716064453
    9. 'spl' → logprob: -15.798877716064453
    10. ')' → logprob: -16.048877716064453

Token 54: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.8202984929084778
    2. '())' → logprob: -1.445298433303833
    3. '()' → logprob: -1.695298433303833
    4. '('' → logprob: -3.195298433303833
    5. '()))' → logprob: -3.445298433303833
    6. ')))' → logprob: -3.445298433303833
    7. '(' → logprob: -3.945298433303833
    8. ')' → logprob: -4.695298671722412
    9. '))))' → logprob: -5.695298671722412
    10. '())))
' → logprob: -6.195298671722412

Token 55: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02330394648015499
    2. '))' → logprob: -3.773303985595703
    3. ')))' → logprob: -9.898303985595703
    4. ' )' → logprob: -12.398303985595703
    5. ')
' → logprob: -13.398303985595703
    6. '[' → logprob: -13.773303985595703
    7. ')`' → logprob: -15.398303985595703
    8. '),' → logprob: -15.523303985595703
    9. '])' → logprob: -15.898303985595703
    10. '))
' → logprob: -16.148303985595703

Token 56: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5629653930664062
    2. '[' → logprob: -1.6879653930664062
    3. '.' → logprob: -1.9379653930664062
    4. '#' → logprob: -3.3129653930664062
    5. ',' → logprob: -4.187965393066406
    6. ')' → logprob: -4.562965393066406
    7. '' → logprob: -5.187965393066406
    8. '[
' → logprob: -5.437965393066406
    9. '<|end|>' → logprob: -5.687965393066406
    10. 'a' → logprob: -5.687965393066406

Token 57: ' R' (ID: 460)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.3209599256515503
    2. 'result' → logprob: -1.4459599256515503
    3. 's' → logprob: -1.8209599256515503
    4. 'print' → logprob: -2.32096004486084
    5. 'total' → logprob: -2.44596004486084
    6. 'n' → logprob: -3.07096004486084
    7. '#' → logprob: -4.19596004486084
    8. 'max' → logprob: -4.32096004486084
    9. ' result' → logprob: -4.57096004486084
    10. 'sorted' → logprob: -4.82096004486084

Token 58: 'éc' (ID: 5675)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7432634830474854
    2. 'e' → logprob: -1.2432634830474854
    3. 'ed' → logprob: -1.9932634830474854
    4. 'esize' → logprob: -3.4932634830474854
    5. 'ange' → logprob: -4.243263244628906
    6. '#' → logprob: -4.243263244628906
    7. 'eturn' → logprob: -4.993263244628906
    8. 'ead' → logprob: -5.618263244628906
    9. 'a' → logprob: -5.743263244628906
    10. 'educ' → logprob: -5.868263244628906

Token 59: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.0036691983696073294
    2. 'uper' → logprob: -6.628669261932373
    3. 'u' → logprob: -7.128669261932373
    4. 'upr' → logprob: -7.503669261932373
    5. 'upart' → logprob: -8.753668785095215
    6. 'ursion' → logprob: -8.878668785095215
    7. 'urrence' → logprob: -8.878668785095215
    8. 'urs' → logprob: -9.128668785095215
    9. 'ur' → logprob: -9.128668785095215
    10. 'ap' → logprob: -9.503668785095215

Token 60: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1702345907688141
    2. 'ération' → logprob: -2.5452346801757812
    3. 'érer' → logprob: -2.7952346801757812
    4. 'é' → logprob: -5.295234680175781
    5. 'érant' → logprob: -5.295234680175781
    6. 'ér' → logprob: -6.170234680175781
    7. 'e' → logprob: -6.420234680175781
    8. 'érateur' → logprob: -7.170234680175781
    9. 'erer' → logprob: -7.670234680175781
    10. 'ère' → logprob: -8.045234680175781

Token 61: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1583715677261353
    2. '(' → logprob: -1.4083715677261353
    3. '[' → logprob: -2.0333714485168457
    4. '_' → logprob: -2.6583714485168457
    5. 'le' → logprob: -3.0333714485168457
    6. 'the' → logprob: -3.2833714485168457
    7. 'max' → logprob: -3.9083714485168457
    8. 'indices' → logprob: -3.9083714485168457
    9. ' ' → logprob: -4.033371448516846
    10. 'items' → logprob: -4.158371448516846

Token 62: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.5344957709312439
    2. 'indices' → logprob: -2.2844958305358887
    3. 'de' → logprob: -2.9094958305358887
    4. 'prem' → logprob: -3.0344958305358887
    5. ' ' → logprob: -3.2844958305358887
    6. ' n' → logprob: -3.5344958305358887
    7. 'élé' → logprob: -3.7844958305358887
    8. 'me' → logprob: -4.409495830535889
    9. 'n' → logprob: -4.784495830535889
    10. ' plus' → logprob: -4.909495830535889

Token 63: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2704068124294281
    2. '_' → logprob: -2.395406723022461
    3. 's' → logprob: -2.645406723022461
    4. '[' → logprob: -3.645406723022461
    5. 'a' → logprob: -3.895406723022461
    6. 'indices' → logprob: -4.770406723022461
    7. 'of' → logprob: -4.895406723022461
    8. '=' → logprob: -5.895406723022461
    9. 'range' → logprob: -6.395406723022461
    10. 'des' → logprob: -6.770406723022461

Token 64: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27628207206726074
    2. '(' → logprob: -2.0262820720672607
    3. 'a' → logprob: -2.5262820720672607
    4. '0' → logprob: -3.9012820720672607
    5. 'des' → logprob: -5.65128231048584
    6. 's' → logprob: -6.90128231048584
    7. ',' → logprob: -7.40128231048584
    8. 'range' → logprob: -7.40128231048584
    9. ' [' → logprob: -7.90128231048584
    10. '([' → logprob: -7.90128231048584

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0982469767332077
    2. ':' → logprob: -2.4732470512390137
    3. ' ,' → logprob: -5.723247051239014
    4. ' :' → logprob: -6.348247051239014
    5. '[' → logprob: -6.848247051239014
    6. '3' → logprob: -7.348247051239014
    7. '2' → logprob: -7.473247051239014
    8. '-' → logprob: -7.598247051239014
    9. ' ' → logprob: -8.223246574401855
    10. '1' → logprob: -8.473246574401855

Token 66: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.48841872811317444
    2. ' ' → logprob: -1.363418698310852
    3. '3' → logprob: -2.3634188175201416
    4. '5' → logprob: -3.3634188175201416
    5. '6' → logprob: -6.9884185791015625
    6. '7' → logprob: -7.6134185791015625
    7. '1' → logprob: -8.863418579101562
    8. '0' → logprob: -9.613418579101562
    9. '9' → logprob: -9.613418579101562
    10. '8' → logprob: -9.738418579101562

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03795002028346062
    2. '(' → logprob: -3.787950038909912
    3. '[' → logprob: -5.037950038909912
    4. ' ,' → logprob: -5.287950038909912
    5. ',[' → logprob: -6.787950038909912
    6. ')' → logprob: -7.537950038909912
    7. '([' → logprob: -7.912950038909912
    8. ' (' → logprob: -8.412949562072754
    9. 'a' → logprob: -8.662949562072754
    10. ',item' → logprob: -8.787949562072754

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5303398966789246
    2. '3' → logprob: -1.2803399562835693
    3. '4' → logprob: -2.4053399562835693
    4. ' ' → logprob: -3.7803399562835693
    5. '2' → logprob: -4.65533971786499
    6. '5' → logprob: -5.28033971786499
    7. ' and' → logprob: -5.90533971786499
    8. 'and' → logprob: -6.15533971786499
    9. ',' → logprob: -8.030340194702148
    10. '7' → logprob: -8.655340194702148

Token 69: ' mais' (ID: 2899)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07559262961149216
    2. ',' → logprob: -3.450592517852783
    3. '([' → logprob: -3.825592517852783
    4. 'a' → logprob: -4.450592517852783
    5. '(a' → logprob: -6.200592517852783
    6. '[' → logprob: -6.200592517852783
    7. '(item' → logprob: -6.450592517852783
    8. ')' → logprob: -7.575592517852783
    9. ' (' → logprob: -7.825592517852783
    10. 'item' → logprob: -8.575592994689941

Token 70: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3654293715953827
    2. ')' → logprob: -1.740429401397705
    3. ',' → logprob: -2.990429401397705
    4. 'a' → logprob: -4.115429401397705
    5. '[:]' → logprob: -4.365429401397705
    6. ']' → logprob: -4.740429401397705
    7. ' ' → logprob: -4.865429401397705
    8. ':' → logprob: -4.990429401397705
    9. '[::-' → logprob: -5.240429401397705
    10. '#' → logprob: -5.990429401397705

Token 71: ' utilisant' (ID: 92474)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.6588189601898193
    2. ' ordre' → logprob: -2.6588189601898193
    3. ' utilisant' → logprob: -2.7838189601898193
    4. 'util' → logprob: -3.2838189601898193
    5. 're' → logprob: -3.7838189601898193
    6. '```' → logprob: -4.158819198608398
    7. ' respect' → logprob: -4.283819198608398
    8. 'ordon' → logprob: -4.408819198608398
    9. 'une' → logprob: -4.408819198608398
    10. 'fonction' → logprob: -4.533819198608398

Token 72: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.523325502872467
    2. ' item' → logprob: -0.898325502872467
    3. 'operator' → logprob: -10.27332592010498
    4. 'getitem' → logprob: -10.64832592010498
    5. 'reverse' → logprob: -10.77332592010498
    6. 'partial' → logprob: -10.77332592010498
    7. '[item' → logprob: -10.89832592010498
    8. '=item' → logprob: -11.14832592010498
    9. '(item' → logprob: -11.64832592010498
    10. '	item' → logprob: -12.02332592010498

Token 73: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00023977462842594832
    2. 'get' → logprob: -8.500239372253418
    3. 's' → logprob: -10.750239372253418
    4. 'getitem' → logprob: -12.125239372253418
    5. 'g' → logprob: -13.250239372253418
    6. ' getter' → logprob: -13.750239372253418
    7. '(get' → logprob: -13.750239372253418
    8. '(s' → logprob: -13.875239372253418
    9. '(' → logprob: -13.875239372253418
    10. '_get' → logprob: -13.875239372253418

Token 74: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44704681634902954
    2. 'item' → logprob: -1.0720467567443848
    3. '(item' → logprob: -4.572046756744385
    4. '2' → logprob: -5.197046756744385
    5. ' item' → logprob: -7.322046756744385
    6. ')' → logprob: -8.447047233581543
    7. '`' → logprob: -8.447047233581543
    8. '([' → logprob: -8.822047233581543
    9. ' (' → logprob: -8.822047233581543
    10. 'getitem' → logprob: -8.947047233581543

Token 75: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0971150398254395
    2. '[' → logprob: -1.3471150398254395
    3. 'a' → logprob: -1.8471150398254395
    4. 'range' → logprob: -1.8471150398254395
    5. '(range' → logprob: -3.7221150398254395
    6. ' (' → logprob: -4.0971150398254395
    7. ' a' → logprob: -4.3471150398254395
    8. ' range' → logprob: -4.5971150398254395
    9. '([' → logprob: -4.7221150398254395
    10. ' [' → logprob: -4.9721150398254395

Token 76: ' indices' (ID: 30378)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0103483200073242
    2. 'a' → logprob: -1.5103483200073242
    3. '(' → logprob: -1.6353483200073242
    4. 'range' → logprob: -2.885348320007324
    5. 'indices' → logprob: -3.260348320007324
    6. ' [' → logprob: -3.385348320007324
    7. ' (' → logprob: -3.385348320007324
    8. ' range' → logprob: -4.760348320007324
    9. ' a' → logprob: -4.885348320007324
    10. ' indices' → logprob: -5.260348320007324

Token 77: ' four' (ID: 4242)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035477783530950546
    2. ' (' → logprob: -3.785477876663208
    3. '2' → logprob: -4.910477638244629
    4. '[' → logprob: -6.160477638244629
    5. 'indices' → logprob: -7.035477638244629
    6. '([' → logprob: -7.660477638244629
    7. '3' → logprob: -8.285477638244629
    8. '((' → logprob: -8.535477638244629
    9. '0' → logprob: -8.535477638244629
    10. ')' → logprob: -9.160477638244629

Token 78: 'nis' (ID: 12113)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10225816816091537
    2. '[' → logprob: -3.3522582054138184
    3. 'indices' → logprob: -3.3522582054138184
    4. '2' → logprob: -4.977258205413818
    5. 'a' → logprob: -5.352258205413818
    6. '([' → logprob: -5.602258205413818
    7. ' (' → logprob: -5.727258205413818
    8. 'item' → logprob: -6.227258205413818
    9. ')' → logprob: -6.477258205413818
    10. '(indices' → logprob: -6.727258205413818

Token 80: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8683375120162964
    2. '(' → logprob: -1.2433375120162964
    3. 'item' → logprob: -2.243337631225586
    4. ' [' → logprob: -2.618337631225586
    5. ' item' → logprob: -2.743337631225586
    6. ' (' → logprob: -3.243337631225586
    7. 'range' → logprob: -5.993337631225586
    8. '<|end|>' → logprob: -6.743337631225586
    9. ' a' → logprob: -6.993337631225586
    10. 'a' → logprob: -6.993337631225586

Token 81: ' permutation' (ID: 135200)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '
' (ID: 198)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.902446985244751
    2. '(' → logprob: -1.152446985244751
    3. 'per' → logprob: -2.402446985244751
    4. '[' → logprob: -2.902446985244751
    5. 'perm' → logprob: -3.277446985244751
    6. ')' → logprob: -3.402446985244751
    7. '([' → logprob: -3.902446985244751
    8. '(indices' → logprob: -4.777446746826172
    9. 'indice' → logprob: -5.152446746826172
    10. ' (' → logprob: -5.527446746826172

Token 83: 'indices' (ID: 30992)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6505591869354248
    2. '(' → logprob: -1.6505591869354248
    3. 'perm' → logprob: -1.6505591869354248
    4. 'item' → logprob: -3.025559186935425
    5. '[' → logprob: -4.275559425354004
    6. 'p' → logprob: -5.025559425354004
    7. 'indices' → logprob: -5.400559425354004
    8. 'a' → logprob: -5.650559425354004
    9. ' perm' → logprob: -6.025559425354004
    10. '2' → logprob: -6.150559425354004

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002345010638237
    2. '=' → logprob: -2.3502345085144043
    3. ' ' → logprob: -11.600234031677246
    4. '(' → logprob: -11.725234031677246
    5. 's' → logprob: -12.600234031677246
    6. ' =(' → logprob: -14.100234031677246
    7. ')' → logprob: -14.475234031677246
    8. ' =[' → logprob: -14.475234031677246
    9. '=[' → logprob: -14.600234031677246
    10. '=(' → logprob: -14.600234031677246

Token 85: ' reduce' (ID: 10389)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.4773934781551361
    2. 'item' → logprob: -0.9773935079574585
    3. ' list' → logprob: -6.727393627166748
    4. 'list' → logprob: -6.727393627166748
    5. ' [' → logprob: -7.977393627166748
    6. '[' → logprob: -8.47739315032959
    7. ' (' → logprob: -9.47739315032959
    8. '(' → logprob: -9.47739315032959
    9. ' ' → logprob: -9.85239315032959
    10. '(item' → logprob: -10.85239315032959

Token 86: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.2857445776462555
    2. '(' → logprob: -1.410744547843933
    3. '(
' → logprob: -6.160744667053223
    4. '(operator' → logprob: -6.285744667053223
    5. '(item' → logprob: -7.535744667053223
    6. '((' → logprob: -10.660744667053223
    7. 'lambda' → logprob: -11.160744667053223
    8. ' (' → logprob: -11.660744667053223
    9. '(tuple' → logprob: -11.910744667053223
    10. '<|end|>' → logprob: -12.410744667053223

Token 87: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.19388265907764435
    2. ' x' → logprob: -2.193882703781128
    3. 'lambda' → logprob: -2.943882703781128
    4. 'x' → logprob: -5.318882465362549
    5. ',' → logprob: -6.568882465362549
    6. ' ' → logprob: -6.818882465362549
    7. '(lambda' → logprob: -7.068882465362549
    8. ' acc' → logprob: -7.443882465362549
    9. ' item' → logprob: -7.568882465362549
    10. ' a' → logprob: -7.568882465362549

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031236447393894196
    2. ' ,' → logprob: -5.878123760223389
    3. 'lambda' → logprob: -9.37812328338623
    4. ',y' → logprob: -10.00312328338623
    5. ',x' → logprob: -10.25312328338623
    6. '=lambda' → logprob: -11.12812328338623
    7. ':' → logprob: -11.25312328338623
    8. ' lambda' → logprob: -11.37812328338623
    9. '1' → logprob: -11.50312328338623
    10. 'x' → logprob: -11.62812328338623

Token 89: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08178013563156128
    2. 'lambda' → logprob: -2.706780195236206
    3. ' y' → logprob: -4.706779956817627
    4. ' lambda' → logprob: -6.331779956817627
    5. '   ' → logprob: -8.206780433654785
    6. '(lambda' → logprob: -8.331780433654785
    7. ' ' → logprob: -8.581780433654785
    8. '  ' → logprob: -9.581780433654785
    9. '    ' → logprob: -10.081780433654785
    10. '	y' → logprob: -10.456780433654785

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01301033515483141
    2. ',' → logprob: -4.888010501861572
    3. ' :' → logprob: -5.263010501861572
    4. ':item' → logprob: -9.888010025024414
    5. ',:' → logprob: -10.138010025024414
    6. '=' → logprob: -11.263010025024414
    7. '=lambda' → logprob: -11.263010025024414
    8. ' ,' → logprob: -11.388010025024414
    9. '=item' → logprob: -11.763010025024414
    10. 'x' → logprob: -11.888010025024414

Token 91: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.958214282989502
    2. ' lambda' → logprob: -1.958214282989502
    3. ' x' → logprob: -2.083214282989502
    4. 'x' → logprob: -2.208214282989502
    5. '(lambda' → logprob: -2.458214282989502
    6. ' (' → logprob: -3.583214282989502
    7. '[x' → logprob: -3.958214282989502
    8. ' y' → logprob: -3.958214282989502
    9. '(' → logprob: -4.083214282989502
    10. '(x' → logprob: -4.208214282989502

Token 92: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.052860140800476
    2. ' +' → logprob: -1.677860140800476
    3. '[y' → logprob: -2.0528602600097656
    4. '[item' → logprob: -2.3028602600097656
    5. 'y' → logprob: -2.9278602600097656
    6. '+y' → logprob: -3.1778602600097656
    7. ',' → logprob: -3.6778602600097656
    8. ' if' → logprob: -3.8028602600097656
    9. '[' → logprob: -3.9278602600097656
    10. '.append' → logprob: -4.177860260009766

Token 93: ' [' (ID: 723)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08306345343589783
    2. ' y' → logprob: -2.8330633640289307
    3. '[' → logprob: -4.83306360244751
    4. '[y' → logprob: -4.83306360244751
    5. 'item' → logprob: -6.20806360244751
    6. '(y' → logprob: -7.08306360244751
    7. ',y' → logprob: -7.83306360244751
    8. 'list' → logprob: -7.83306360244751
    9. '[item' → logprob: -8.208063125610352
    10. ' [' → logprob: -8.708063125610352

Token 94: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00019781860464718193
    2. ' y' → logprob: -8.875197410583496
    3. 'indices' → logprob: -10.875197410583496
    4. 'a' → logprob: -11.750197410583496
    5. 'item' → logprob: -12.125197410583496
    6. ']' → logprob: -12.375197410583496
    7. ' ' → logprob: -13.000197410583496
    8. ')y' → logprob: -13.250197410583496
    9. '	y' → logprob: -13.375197410583496
    10. '[y' → logprob: -13.375197410583496

Token 95: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0045898607932031155
    2. '[y' → logprob: -5.754590034484863
    3. ']' → logprob: -7.754590034484863
    4. '(y' → logprob: -8.129590034484863
    5. '[' → logprob: -8.629590034484863
    6. '[x' → logprob: -9.004590034484863
    7. '],
' → logprob: -9.629590034484863
    8. ' ],' → logprob: -9.754590034484863
    9. '(x' → logprob: -9.879590034484863
    10. ']),' → logprob: -10.504590034484863

Token 96: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5405865907669067
    2. 'item' → logprob: -1.2905865907669067
    3. '[item' → logprob: -2.290586471557617
    4. ' [' → logprob: -4.040586471557617
    5. 'range' → logprob: -4.915586471557617
    6. 'list' → logprob: -5.040586471557617
    7. ' item' → logprob: -5.915586471557617
    8. '[]' → logprob: -6.540586471557617
    9. 'map' → logprob: -6.790586471557617
    10. '[i' → logprob: -6.790586471557617

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004460428317543119
    2. ' ' → logprob: -8.000446319580078
    3. '1' → logprob: -10.125446319580078
    4. 'i' → logprob: -10.875446319580078
    5. '

' → logprob: -11.250446319580078
    6. '   ' → logprob: -11.750446319580078
    7. '0' → logprob: -12.000446319580078
    8. '  ' → logprob: -12.250446319580078
    9. '
' → logprob: -13.000446319580078
    10. 'a' → logprob: -13.437946319580078

Token 98: '],[' (ID: 32964)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006129555404186249
    2. ' ,' → logprob: -7.625612735748291
    3. '0' → logprob: -9.12561321258545
    4. ']' → logprob: -12.37561321258545
    5. ',
' → logprob: -12.62561321258545
    6. '],' → logprob: -12.62561321258545
    7. '3' → logprob: -13.75061321258545
    8. ' ' → logprob: -14.25061321258545
    9. ',

' → logprob: -14.25061321258545
    10. '<|end|>' → logprob: -14.50061321258545

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015435494715347886
    2. ' ' → logprob: -6.5015435218811035
    3. '1' → logprob: -10.376543998718262
    4. ',' → logprob: -12.001543998718262
    5. '   ' → logprob: -13.564043998718262
    6. '2' → logprob: -14.314043998718262
    7. '  ' → logprob: -14.751543998718262
    8. ' ,' → logprob: -15.189043998718262
    9. '3' → logprob: -16.001543045043945
    10. '(' → logprob: -16.064043045043945

Token 100: '],[' (ID: 32964)
  Prédit: '],['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],[' → logprob: -0.009346368722617626
    2. '],' → logprob: -4.7593464851379395
    3. ',' → logprob: -7.5093464851379395
    4. ' ],' → logprob: -8.884346008300781
    5. ']' → logprob: -11.009346008300781
    6. '],
' → logprob: -11.759346008300781
    7. ',[' → logprob: -11.884346008300781
    8. ']],' → logprob: -12.884346008300781
    9. '   ' → logprob: -13.509346008300781
    10. ' ' → logprob: -13.509346008300781

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -9.875052452087402
    3. '   ' → logprob: -15.125052452087402
    4. '  ' → logprob: -16.500051498413086
    5. ']' → logprob: -17.312551498413086
    6. '۱' → logprob: -17.500051498413086
    7. '１' → logprob: -17.750051498413086
    8. '' → logprob: -18.000051498413086
    9. '[' → logprob: -18.250051498413086
    10. '
' → logprob: -18.437551498413086

Token 102: ']],' (ID: 37171)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.48469308018684387
    2. ']],' → logprob: -0.9846930503845215
    3. ']' → logprob: -4.9846930503845215
    4. ']]' → logprob: -6.4846930503845215
    5. '])' → logprob: -6.9846930503845215
    6. '],' → logprob: -7.8596930503845215
    7. ']),' → logprob: -8.60969352722168
    8. '])]' → logprob: -8.73469352722168
    9. ')])' → logprob: -9.23469352722168
    10. ']])
' → logprob: -9.23469352722168

Token 103: ' [])

' (ID: 124233)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.3142739534378052
    2. '[]' → logprob: -1.3142739534378052
    3. ' [])' → logprob: -7.314273834228516
    4. ')' → logprob: -8.689273834228516
    5. ']' → logprob: -9.814273834228516
    6. '])' → logprob: -10.064273834228516
    7. '[])
' → logprob: -10.564273834228516
    8. '[]
' → logprob: -11.189273834228516
    9. '[]

' → logprob: -11.314273834228516
    10. '[' → logprob: -11.939273834228516

Token 104: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009019993245601654
    2. ')
' → logprob: -5.25901985168457
    3. 'indices' → logprob: -6.88401985168457
    4. '(' → logprob: -7.00901985168457
    5. '(indices' → logprob: -7.63401985168457
    6. '[' → logprob: -7.88401985168457
    7. ' )' → logprob: -8.38401985168457
    8. '())' → logprob: -8.75901985168457
    9. '))' → logprob: -9.50901985168457
    10. '[:' → logprob: -9.75901985168457

Token 105: '(*' (ID: 9000)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.48432090878486633
    2. '(' → logprob: -0.984320878982544
    3. '(list' → logprob: -4.734321117401123
    4. '(a' → logprob: -6.984321117401123
    5. '(tuple' → logprob: -8.359320640563965
    6. '(indices' → logprob: -9.609320640563965
    7. 'item' → logprob: -10.359320640563965
    8. '((' → logprob: -10.484320640563965
    9. '(items' → logprob: -10.984320640563965
    10. 'a' → logprob: -11.234320640563965

Token 106: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.0011013990733772516
    2. 'map' → logprob: -7.001101493835449
    3. 'list' → logprob: -9.50110149383545
    4. ' item' → logprob: -9.87610149383545
    5. '(item' → logprob: -10.25110149383545
    6. '[item' → logprob: -11.00110149383545
    7. 'sorted' → logprob: -11.87610149383545
    8. 'a' → logprob: -13.00110149383545
    9. '[' → logprob: -14.62610149383545
    10. ')' → logprob: -15.00110149383545

Token 107: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00014215784904081374
    2. 'get' → logprob: -8.875142097473145
    3. 'getitem' → logprob: -13.750142097473145
    4. '(get' → logprob: -14.375142097473145
    5. '.get' → logprob: -15.875142097473145
    6. ' ' → logprob: -16.12514305114746
    7. 'Getter' → logprob: -16.37514305114746
    8. '  ' → logprob: -16.75014305114746
    9. 'picker' → logprob: -16.75014305114746
    10. ' getter' → logprob: -17.25014305114746

Token 108: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.004511058330535889
    2. '(indices' → logprob: -5.504510879516602
    3. 'indices' → logprob: -8.254510879516602
    4. '(' → logprob: -8.754510879516602
    5. ' (*' → logprob: -12.504510879516602
    6. '(*(' → logprob: -12.504510879516602
    7. '"indices' → logprob: -13.754510879516602
    8. '0' → logprob: -14.004510879516602
    9. '*' → logprob: -14.004510879516602
    10. 'a' → logprob: -14.254510879516602

Token 109: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.0001450187264708802
    2. ' indices' → logprob: -9.250144958496094
    3. '(indices' → logprob: -10.000144958496094
    4. 'indice' → logprob: -12.875144958496094
    5. 'indexes' → logprob: -14.750144958496094
    6. '"indices' → logprob: -15.125144958496094
    7. '.indices' → logprob: -16.250144958496094
    8. 'inds' → logprob: -16.750144958496094
    9. '[' → logprob: -17.125144958496094
    10. 'ind' → logprob: -17.875144958496094

Token 110: ')(' (ID: 4898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6621781587600708
    2. '))' → logprob: -0.7871781587600708
    3. ')a' → logprob: -4.162178039550781
    4. ')(' → logprob: -4.412178039550781
    5. '(a' → logprob: -7.037178039550781
    6. ')))' → logprob: -8.287178039550781
    7. 'a' → logprob: -9.162178039550781
    8. ' )' → logprob: -10.412178039550781
    9. '))(' → logprob: -10.537178039550781
    10. ')`' → logprob: -10.912178039550781

Token 111: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.2378600735682994e-05
    2. ' a' → logprob: -10.375032424926758
    3. '(a' → logprob: -14.750032424926758
    4. ')a' → logprob: -15.250032424926758
    5. '[a' → logprob: -15.500032424926758
    6. '   ' → logprob: -16.375032424926758
    7. ',a' → logprob: -16.375032424926758
    8. '#a' → logprob: -17.250032424926758
    9. '	a' → logprob: -17.500032424926758
    10. ''a' → logprob: -17.625032424926758

Token 112: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003184959525242448
    2. ')' → logprob: -5.753184795379639
    3. ')))' → logprob: -12.253185272216797
    4. '))
' → logprob: -13.503185272216797
    5. ' ))' → logprob: -14.503185272216797
    6. '),' → logprob: -14.753185272216797
    7. '()))' → logprob: -17.253185272216797
    8. ')a' → logprob: -17.628185272216797
    9. ''))' → logprob: -18.128185272216797
    10. ' )' → logprob: -18.128185272216797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 37.27%
Précision adaptée (1ère position): 37.27%
Précision (top 10): 60.00%
================================================================================
