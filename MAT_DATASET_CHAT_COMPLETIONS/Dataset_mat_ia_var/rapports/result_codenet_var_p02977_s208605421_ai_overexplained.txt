================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de fournir une entrée, qui sera traitée comme une chaîne de caractères par défaut.
# La fonction int() convertit cette chaîne de caractères en un entier, que nous stockons dans la variable n.
n = int(input())

# Si n est inférieur ou égal à 2, ou égal à 4, nous entrons dans ce bloc conditionnel.
if n <= 2 or n == 4:
    # Afficher "No" pour indiquer que la condition du problème n'est pas satisfaite pour ces valeurs
    print("No")

# Si n est exactement égal à 3, nous voulons traiter ce cas particulier séparément.
elif n == 3:
    # Afficher "Yes" pour indiquer que la condition est satisfaite pour n == 3
    print("Yes")
    # Boucle for avec la variable i prenant les valeurs de 0 à 4 (c'est-à-dire 5 itérations)
    for i in range(5):
        # Affiche deux nombres: i+1 et i+2
        # Ceci génère les paires (1,2), (2,3), (3,4), (4,5), (5,6)
        print(i + 1, i + 2)

# Si n est pair (multiple de 2), nous entrons dans ce cas
elif n % 2 == 0:
    # nn reçoit le nombre de bits nécessaires pour représenter n en binaire
    # Par exemple, si n=8, n.bit_length() retourne 4, car 8 en binaire est 1000 (4 chiffres)
    nn = n.bit_length()
    # Si n est une puissance de 2 (exactement 2^(nn-1)), on traite un cas particulier
    if n == 2 ** (nn - 1):
        # Afficher "No" car on ne satisfait pas la condition pour ce cas
        print("No")
    else:
        # Sinon (n > 4, n pair, mais pas une puissance de 2), on continue
        print("Yes")
        # Imprimer successivement des paires de nombres qui peuvent représenter des arêtes ou relations
        # Exemple : pour n=6, on aurait (1,2), (2,3), etc.
        print(1, 2)
        print(2, 3)
        print(3, n + 1)
        print(n + 1, n + 2)
        print(n + 2, n + 3)
        # Boucle pour i allant de 4 à n-1 inclus (n étant exclu par range), donc (4, ..., n-1)
        for i in range(4, n):
            # Imprime une paire où le premier élément est n+1 et le second est i
            print(n + 1, i)
            # Vérifie la parité de i : si i est pair (reste de la division de i par 2 est 0)
            if i % 2 == 0:
                # Si i est pair, imprime la paire (i, i + n + 1)
                print(i, i + n + 1)
            else:
                # Si i est impair, imprime la paire (i, i + n - 1)
                print(i, i + n - 1)
        # Après la boucle, nous définissons deux variables, n1 et n2
        # n1 est la plus grande puissance de 2 qui est inférieure ou égale à n
        n1 = 2 ** (nn - 1)
        # n2 est la différence entre (n + 1) et cette même puissance de 2
        n2 = (n + 1) - 2 ** (nn - 1)
        # On imprime les paires finales
        print(n1, n)
        print(n2, 2 * n)

# Enfin, pour tous les autres cas (n est impair, n > 3), on utilise le else
else:
    # Affiche "Yes" pour indiquer que la solution est possible
    print("Yes")
    # Imprimer les mêmes premiers liens fixes que dans le cas pair
    print(1, 2)
    print(2, 3)
    print(3, n + 1)
    print(n + 1, n + 2)
    print(n + 2, n + 3)
    # Boucle de i de 4 à n inclus, donc (4, ..., n)
    for i in range(4, n + 1):
        # Imprime la paire (1, i)
        print(1, i)
        # Vérifie si i est pair
        if i % 2 == 0:
            # Si pair, imprime (i, i + n + 1)
            print(i, i + n + 1)
        else:
            # Si impair, imprime (i, i + n - 1)
            print(i, i + n - 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4347496032714844
    2. '_la' → logprob: -2.4347496032714844
    3. '_l' → logprob: -2.9347496032714844
    4. ' =' → logprob: -3.1847496032714844
    5. ' la' → logprob: -3.3097496032714844
    6. '_le' → logprob: -3.4347496032714844
    7. ' à' → logprob: -3.9347496032714844
    8. ' ' → logprob: -4.684749603271484
    9. '```' → logprob: -4.684749603271484
    10. '_a' → logprob: -4.809749603271484

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1463419646024704
    2. 'util' → logprob: -2.1463420391082764
    3. 'user' → logprob: -4.646341800689697
    4. ' l' → logprob: -4.771341800689697
    5. 'input' → logprob: -7.521341800689697
    6. ' user' → logprob: -9.146342277526855
    7. 'un' → logprob: -9.271342277526855
    8. 'u' → logprob: -9.396342277526855
    9. 'la' → logprob: -9.771342277526855
    10. 'us' → logprob: -10.396342277526855

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.17725136876106262
    2. 'util' → logprob: -2.3022513389587402
    3. ' utilisateur' → logprob: -3.3022513389587402
    4. '’utilisateur' → logprob: -4.17725133895874
    5. 'u' → logprob: -5.55225133895874
    6. 'a' → logprob: -5.92725133895874
    7. ''' → logprob: -6.80225133895874
    8. 'user' → logprob: -7.55225133895874
    9. '_util' → logprob: -7.92725133895874
    10. 'us' → logprob: -7.92725133895874

Token 6: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4691339135169983
    2. 's' → logprob: -1.9691338539123535
    3. 'name' → logprob: -3.3441338539123535
    4. '_' → logprob: -3.4691338539123535
    5. 'input' → logprob: -3.5941338539123535
    6. 'u' → logprob: -3.8441338539123535
    7. 'nom' → logprob: -3.9691338539123535
    8. 'n' → logprob: -4.2191338539123535
    9. '#' → logprob: -4.4691338539123535
    10. 'user' → logprob: -5.0941338539123535

Token 7: ' fournir' (ID: 83313)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09746392071247101
    2. 'entr' → logprob: -3.097463846206665
    3. ' saisir' → logprob: -3.597463846206665
    4. 'r' → logprob: -4.222464084625244
    5. ' entrer' → logprob: -6.597464084625244
    6. '```' → logprob: -6.847464084625244
    7. 'entrée' → logprob: -7.597464084625244
    8. 'ent' → logprob: -7.722464084625244
    9. 'input' → logprob: -7.722464084625244
    10. 'enter' → logprob: -8.347463607788086

Token 8: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7550092935562134
    2. ' une' → logprob: -1.6300092935562134
    3. ' l' → logprob: -2.005009174346924
    4. ' son' → logprob: -2.880009174346924
    5. 's' → logprob: -3.755009174346924
    6. 'l' → logprob: -3.755009174346924
    7. ' ' → logprob: -4.255009174346924
    8. '_' → logprob: -4.630009174346924
    9. 'un' → logprob: -4.755009174346924
    10. 'une' → logprob: -4.755009174346924

Token 9: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2696627080440521
    2. 'nom' → logprob: -2.769662618637085
    3. 's' → logprob: -3.269662618637085
    4. 'chaine' → logprob: -3.394662618637085
    5. 'n' → logprob: -3.894662618637085
    6. '_' → logprob: -4.019662857055664
    7. 'entrée' → logprob: -4.269662857055664
    8. ' chaîne' → logprob: -4.894662857055664
    9. ' nom' → logprob: -5.269662857055664
    10. 'input' → logprob: -5.394662857055664

Token 10: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7000421285629272
    2. 'user' → logprob: -1.3250421285629272
    3. '_' → logprob: -1.7000421285629272
    4. 'u' → logprob: -3.450042247772217
    5. 'i' → logprob: -4.200042247772217
    6. 'in' → logprob: -6.575042247772217
    7. '```' → logprob: -6.950042247772217
    8. 'print' → logprob: -7.075042247772217
    9. 'n' → logprob: -7.200042247772217
    10. 'username' → logprob: -7.325042247772217

Token 11: ' qui' (ID: 2780)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04668579250574112
    2. '_' → logprob: -4.046685695648193
    3. 'user' → logprob: -5.171685695648193
    4. ' input' → logprob: -5.296685695648193
    5. ' ' → logprob: -5.796685695648193
    6. '`' → logprob: -5.921685695648193
    7. '```' → logprob: -5.921685695648193
    8. 'i' → logprob: -6.171685695648193
    9. 'entrée' → logprob: -7.046685695648193
    10. 's' → logprob: -7.171685695648193

Token 12: ' sera' (ID: 15511)
  Prédit: ' sera'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.449727326631546
    2. 's' → logprob: -1.8247272968292236
    3. ' ' → logprob: -2.9497272968292236
    4. '_' → logprob: -3.3247272968292236
    5. ' s' → logprob: -3.5747272968292236
    6. ' est' → logprob: -3.9497272968292236
    7. ' =' → logprob: -4.324727535247803
    8. 'est' → logprob: -4.824727535247803
    9. 'ser' → logprob: -4.824727535247803
    10. 'sera' → logprob: -5.074727535247803

Token 13: ' trait' (ID: 15458)
  Prédit: ' utilisée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.4176841974258423
    2. 'util' → logprob: -2.0426840782165527
    3. ' une' → logprob: -3.0426840782165527
    4. ' stock' → logprob: -3.5426840782165527
    5. ' input' → logprob: -3.6676840782165527
    6. 'input' → logprob: -3.7926840782165527
    7. ' trait' → logprob: -4.167684078216553
    8. 'trait' → logprob: -4.167684078216553
    9. 'une' → logprob: -4.292684078216553
    10. ' utilis' → logprob: -4.667684078216553

Token 14: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4773165285587311
    2. 'é' → logprob: -0.9773164987564087
    3. 'e' → logprob: -5.852316379547119
    4. '#' → logprob: -8.727316856384277
    5. '```' → logprob: -10.477316856384277
    6. ' ' → logprob: -10.477316856384277
    7. '_' → logprob: -10.602316856384277
    8. 'ement' → logprob: -11.102316856384277
    9. 'er' → logprob: -11.227316856384277
    10. '�' → logprob: -11.227316856384277

Token 15: ' comme' (ID: 7971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5133900046348572
    2. 'input' → logprob: -1.388390064239502
    3. 'user' → logprob: -2.763390064239502
    4. '```' → logprob: -3.763390064239502
    5. '`' → logprob: -4.263390064239502
    6. '.' → logprob: -4.888390064239502
    7. 'i' → logprob: -5.138390064239502
    8. 's' → logprob: -5.388390064239502
    9. '\' → logprob: -5.513390064239502
    10. '(' → logprob: -5.763390064239502

Token 16: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.1791566163301468
    2. ' une' → logprob: -2.429156541824341
    3. 'du' → logprob: -2.929156541824341
    4. 'input' → logprob: -5.42915678024292
    5. 'chaine' → logprob: -5.55415678024292
    6. 'un' → logprob: -5.67915678024292
    7. 'texte' → logprob: -5.67915678024292
    8. 'la' → logprob: -6.30415678024292
    9. '```' → logprob: -6.30415678024292
    10. ' du' → logprob: -7.05415678024292

Token 17: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.8652741312980652
    2. 'string' → logprob: -0.9902741312980652
    3. 'cha' → logprob: -1.99027419090271
    4. ' chaîne' → logprob: -3.36527419090271
    5. 'str' → logprob: -3.99027419090271
    6. 'texte' → logprob: -4.990273952484131
    7. '```' → logprob: -5.865273952484131
    8. ' string' → logprob: -6.240273952484131
    9. 's' → logprob: -6.365273952484131
    10. 'entrée' → logprob: -6.990273952484131

Token 18: ' de' (ID: 334)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.36615827679634094
    2. 'user' → logprob: -1.3661582469940186
    3. '_' → logprob: -4.241158485412598
    4. 'u' → logprob: -4.741158485412598
    5. 'i' → logprob: -5.116158485412598
    6. 'in' → logprob: -5.616158485412598
    7. 'x' → logprob: -5.991158485412598
    8. '`' → logprob: -6.116158485412598
    9. '```' → logprob: -6.116158485412598
    10. 'username' → logprob: -6.241158485412598

Token 19: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.004189398139715195
    2. 'texte' → logprob: -5.879189491271973
    3. ' caractères' → logprob: -6.629189491271973
    4. '#' → logprob: -11.004189491271973
    5. 'entrée' → logprob: -11.379189491271973
    6. 'chars' → logprob: -11.629189491271973
    7. '```' → logprob: -12.004189491271973
    8. 'text' → logprob: -12.129189491271973
    9. 'char' → logprob: -12.879189491271973
    10. 'characters' → logprob: -13.379189491271973

Token 20: ' par' (ID: 686)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5441120266914368
    2. 'input' → logprob: -0.9191120266914368
    3. 'u' → logprob: -5.544112205505371
    4. '```' → logprob: -5.669112205505371
    5. 'username' → logprob: -6.169112205505371
    6. 'x' → logprob: -6.419112205505371
    7. '`' → logprob: -6.544112205505371
    8. 'i' → logprob: -6.669112205505371
    9. 'n' → logprob: -6.794112205505371
    10. 'entrée' → logprob: -6.919112205505371

Token 21: ' défaut' (ID: 79375)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11785263568162918
    2. ' input' → logprob: -2.6178526878356934
    3. '`' → logprob: -4.117852687835693
    4. 'la' → logprob: -4.367852687835693
    5. ' la' → logprob: -5.992852687835693
    6. '=input' → logprob: -6.117852687835693
    7. 'l' → logprob: -6.867852687835693
    8. 'default' → logprob: -6.867852687835693
    9. '```' → logprob: -6.992852687835693
    10. 'une' → logprob: -7.492852687835693

Token 22: '.
' (ID: 558)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21370375156402588
    2. 'user' → logprob: -2.4637036323547363
    3. 'i' → logprob: -3.2137036323547363
    4. '_' → logprob: -3.7137036323547363
    5. 'u' → logprob: -4.463703632354736
    6. '`' → logprob: -5.338703632354736
    7. 'x' → logprob: -5.463703632354736
    8. 'n' → logprob: -5.588703632354736
    9. '```' → logprob: -5.588703632354736
    10. '\' → logprob: -6.088703632354736

Token 23: '#' (ID: 2)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.3306396007537842
    2. 'input' → logprob: -1.3306396007537842
    3. 'entrée' → logprob: -5.205639839172363
    4. '\' → logprob: -5.705639839172363
    5. '```' → logprob: -6.455639839172363
    6. '_' → logprob: -6.580639839172363
    7. '`' → logprob: -7.205639839172363
    8. 'entr' → logprob: -7.330639839172363
    9. 's' → logprob: -7.455639839172363
    10. 'ent' → logprob: -7.455639839172363

Token 24: ' La' (ID: 3038)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.07787574827671051
    2. 'input' → logprob: -2.702875852584839
    3. ' user' → logprob: -5.07787561416626
    4. 'entrée' → logprob: -7.45287561416626
    5. ' input' → logprob: -7.70287561416626
    6. 'username' → logprob: -8.702876091003418
    7. 'ent' → logprob: -9.327876091003418
    8. 's' → logprob: -10.077876091003418
    9. 'name' → logprob: -10.077876091003418
    10. 'entr' → logprob: -10.202876091003418

Token 25: ' fonction' (ID: 17610)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.6614957451820374
    2. 'user' → logprob: -1.0364956855773926
    3. 'input' → logprob: -2.9114956855773926
    4. 'ent' → logprob: -3.7864956855773926
    5. 's' → logprob: -4.411495685577393
    6. 'chaine' → logprob: -4.786495685577393
    7. ' user' → logprob: -5.161495685577393
    8. 'variable' → logprob: -5.286495685577393
    9. 'entr' → logprob: -5.411495685577393
    10. 'entry' → logprob: -5.661495685577393

Token 26: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1624198704957962
    2. ' input' → logprob: -1.9124199151992798
    3. 'def' → logprob: -6.16241979598999
    4. 'print' → logprob: -10.662420272827148
    5. ' ' → logprob: -11.037420272827148
    6. '=input' → logprob: -11.412420272827148
    7. ' def' → logprob: -11.787420272827148
    8. 's' → logprob: -12.037420272827148
    9. '   ' → logprob: -12.162420272827148
    10. '	input' → logprob: -12.787420272827148

Token 27: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018598433583974838
    2. '()' → logprob: -4.018598556518555
    3. '(
' → logprob: -8.893598556518555
    4. '#' → logprob: -9.018598556518555
    5. '('' → logprob: -9.518598556518555
    6. ')' → logprob: -10.643598556518555
    7. 'def' → logprob: -10.768598556518555
    8. '("")' → logprob: -11.143598556518555
    9. '(

' → logprob: -11.268598556518555
    10. '("' → logprob: -12.268598556518555

Token 28: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011359314667060971
    2. '()' → logprob: -7.75113582611084
    3. '#' → logprob: -8.12613582611084
    4. '(
' → logprob: -8.50113582611084
    5. ')' → logprob: -9.12613582611084
    6. ' (' → logprob: -10.87613582611084
    7. '('' → logprob: -11.12613582611084
    8. 'def' → logprob: -11.37613582611084
    9. 'convert' → logprob: -11.75113582611084
    10. ',' → logprob: -12.37613582611084

Token 29: 'it' (ID: 278)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.4781872034072876
    2. 'er' → logprob: -1.8531872034072876
    3. 'ira' → logprob: -2.603187084197998
    4. 'it' → logprob: -2.728187084197998
    5. 'i' → logprob: -2.978187084197998
    6. 'ie' → logprob: -4.728187084197998
    7. 'e' → logprob: -4.978187084197998
    8. '#' → logprob: -5.103187084197998
    9. 'era' → logprob: -6.603187084197998
    10. 'issez' → logprob: -6.603187084197998

Token 30: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2169320583343506
    2. ' la' → logprob: -1.4669320583343506
    3. 'l' → logprob: -1.9669320583343506
    4. '()' → logprob: -2.0919320583343506
    5. ' l' → logprob: -2.2169320583343506
    6. 'la' → logprob: -3.3419320583343506
    7. ' une' → logprob: -3.8419320583343506
    8. '('' → logprob: -4.09193229675293
    9. 'une' → logprob: -5.09193229675293
    10. ' (' → logprob: -5.84193229675293

Token 31: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1565924733877182
    2. ' entrée' → logprob: -2.28159236907959
    3. 'entrée' → logprob: -3.90659236907959
    4. ' valeur' → logprob: -4.53159236907959
    5. ' chaine' → logprob: -5.40659236907959
    6. 'chaine' → logprob: -5.78159236907959
    7. ' string' → logprob: -7.15659236907959
    8. '()' → logprob: -7.65659236907959
    9. ' entr' → logprob: -7.65659236907959
    10. ' input' → logprob: -7.78159236907959

Token 32: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019310165662318468
    2. '('' → logprob: -7.751931190490723
    3. ')' → logprob: -8.001931190490723
    4. '#' → logprob: -8.126931190490723
    5. '(
' → logprob: -8.126931190490723
    6. '()' → logprob: -8.501931190490723
    7. ',' → logprob: -8.876931190490723
    8. ' (' → logprob: -10.251931190490723
    9. '.' → logprob: -10.626931190490723
    10. '("' → logprob: -10.751931190490723

Token 33: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.09957721829414368
    2. ' caractère' → logprob: -3.9745771884918213
    3. ' type' → logprob: -4.0995774269104
    4. 'car' → logprob: -4.3495774269104
    5. 'texte' → logprob: -5.0995774269104
    6. ' l' → logprob: -5.2245774269104
    7. ' caracteres' → logprob: -5.5995774269104
    8. ' texte' → logprob: -5.7245774269104
    9. ' ' → logprob: -5.9745774269104
    10. '```' → logprob: -6.0995774269104

Token 34: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0161479189991951
    2. ',' → logprob: -5.391148090362549
    3. ')' → logprob: -5.391148090362549
    4. '(
' → logprob: -6.266148090362549
    5. '()' → logprob: -6.766148090362549
    6. '#' → logprob: -6.766148090362549
    7. 's' → logprob: -7.266148090362549
    8. '.' → logprob: -7.641148090362549
    9. '(input' → logprob: -8.39114761352539
    10. '('' → logprob: -8.51614761352539

Token 35: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.02478417567908764
    2. 'un' → logprob: -4.399784088134766
    3. ' nombre' → logprob: -5.399784088134766
    4. ' une' → logprob: -5.774784088134766
    5. ' ' → logprob: -6.524784088134766
    6. ' entier' → logprob: -6.899784088134766
    7. 'ent' → logprob: -7.149784088134766
    8. 'une' → logprob: -8.024784088134766
    9. 'nombre' → logprob: -8.024784088134766
    10. ' ' → logprob: -8.399784088134766

Token 36: ' entier' (ID: 80473)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8364511728286743
    2. ' entier' → logprob: -0.9614511728286743
    3. 'ent' → logprob: -2.0864510536193848
    4. 'nombre' → logprob: -2.8364510536193848
    5. ' ' → logprob: -7.461451053619385
    6. ' ent' → logprob: -7.836451053619385
    7. ' espace' → logprob: -7.961451053619385
    8. ' integer' → logprob: -9.586451530456543
    9. ' type' → logprob: -9.711451530456543
    10. ' nombres' → logprob: -10.836451530456543

Token 37: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6122245788574219
    2. 'user' → logprob: -2.237224578857422
    3. 'u' → logprob: -2.237224578857422
    4. '#' → logprob: -2.612224578857422
    5. 'x' → logprob: -3.362224578857422
    6. 'e' → logprob: -3.612224578857422
    7. 'entr' → logprob: -3.987224578857422
    8. 'i' → logprob: -4.487224578857422
    9. 'entrée' → logprob: -4.487224578857422
    10. 'ent' → logprob: -4.612224578857422

Token 38: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7439061999320984
    2. 'n' → logprob: -1.3689062595367432
    3. 'a' → logprob: -3.368906259536743
    4. ' )' → logprob: -3.368906259536743
    5. ' n' → logprob: -3.618906259536743
    6. 's' → logprob: -3.618906259536743
    7. ' valeur' → logprob: -4.243906021118164
    8. 'x' → logprob: -4.368906021118164
    9. ')' → logprob: -4.493906021118164
    10. 'r' → logprob: -4.993906021118164

Token 39: ' nous' (ID: 6176)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6729729175567627
    2. '_' → logprob: -1.9229729175567627
    3. ' ' → logprob: -2.0479729175567627
    4. ' user' → logprob: -2.5479729175567627
    5. ' input' → logprob: -2.5479729175567627
    6. '`' → logprob: -2.7979729175567627
    7. ''' → logprob: -3.2979729175567627
    8. ' )' → logprob: -3.4229729175567627
    9. ' n' → logprob: -3.5479729175567627
    10. ' l' → logprob: -3.5479729175567627

Token 40: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.3001755177974701
    2. ' assign' → logprob: -2.050175428390503
    3. 'assign' → logprob: -2.675175428390503
    4. ' affect' → logprob: -3.425175428390503
    5. 'stock' → logprob: -4.300175666809082
    6. ' pouvons' → logprob: -5.300175666809082
    7. ' allons' → logprob: -6.050175666809082
    8. 'aff' → logprob: -6.050175666809082
    9. ' utilis' → logprob: -6.175175666809082
    10. 'util' → logprob: -7.300175666809082

Token 41: 'ons' (ID: 1808)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.04100114107131958
    2. 'e' → logprob: -3.416001081466675
    3. 'er' → logprob: -5.541001319885254
    4. '_' → logprob: -6.791001319885254
    5. 'ée' → logprob: -7.166001319885254
    6. 'ons' → logprob: -7.291001319885254
    7. 'a' → logprob: -7.791001319885254
    8. '=' → logprob: -9.166001319885254
    9. 'o' → logprob: -9.416001319885254
    10. 'on' → logprob: -9.541001319885254

Token 42: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.32416704297065735
    2. '_' → logprob: -2.199167013168335
    3. ' ' → logprob: -2.824167013168335
    4. 'dans' → logprob: -2.949167013168335
    5. ' a' → logprob: -4.324167251586914
    6. ' ' → logprob: -4.949167251586914
    7. ' user' → logprob: -5.074167251586914
    8. 's' → logprob: -5.324167251586914
    9. ' input' → logprob: -5.574167251586914
    10. ' i' → logprob: -6.324167251586914

Token 43: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5952023267745972
    2. ' variable' → logprob: -2.2202024459838867
    3. ' ' → logprob: -2.5952024459838867
    4. 'une' → logprob: -2.7202024459838867
    5. 'la' → logprob: -2.7202024459838867
    6. ' une' → logprob: -2.9702024459838867
    7. ' nombre' → logprob: -3.9702024459838867
    8. ' n' → logprob: -3.9702024459838867
    9. 'variable' → logprob: -4.595202445983887
    10. ' a' → logprob: -4.720202445983887

Token 44: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.8186889290809631
    2. ' variable' → logprob: -1.1936888694763184
    3. 'nombre' → logprob: -2.0686888694763184
    4. ' nombre' → logprob: -2.3186888694763184
    5. 'a' → logprob: -4.318688869476318
    6. 'x' → logprob: -6.193688869476318
    7. ' a' → logprob: -6.443688869476318
    8. 'ent' → logprob: -6.693688869476318
    9. 'n' → logprob: -6.693688869476318
    10. 'result' → logprob: -6.818688869476318

Token 45: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9203824400901794
    2. 'nombre' → logprob: -1.4203824996948242
    3. ' n' → logprob: -2.045382499694824
    4. ' nombre' → logprob: -2.170382499694824
    5. ' `' → logprob: -3.670382499694824
    6. 'age' → logprob: -3.920382499694824
    7. '`' → logprob: -3.920382499694824
    8. ' age' → logprob: -4.170382499694824
    9. ' ' → logprob: -5.045382499694824
    10. 'user' → logprob: -5.170382499694824

Token 46: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00013083349040243775
    2. '
' → logprob: -9.625130653381348
    3. '#' → logprob: -10.375130653381348
    4. 'x' → logprob: -12.125130653381348
    5. '

' → logprob: -12.375130653381348
    6. '.' → logprob: -12.625130653381348
    7. 'nombre' → logprob: -12.875130653381348
    8. '```' → logprob: -12.875130653381348
    9. ',' → logprob: -13.125130653381348
    10. 'a' → logprob: -13.500130653381348

Token 47: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5690089639974758e-05
    2. '```' → logprob: -11.875015258789062
    3. '#' → logprob: -12.500015258789062
    4. '
' → logprob: -13.500015258789062
    5. '

' → logprob: -14.250015258789062
    6. '\' → logprob: -14.500015258789062
    7. '\n' → logprob: -14.500015258789062
    8. 'x' → logprob: -14.625015258789062
    9. '`' → logprob: -14.625015258789062
    10. 'i' → logprob: -15.500015258789062

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01263513881713152
    2. '=' → logprob: -4.387635231018066
    3. '_' → logprob: -10.012635231018066
    4. 'um' → logprob: -11.012635231018066
    5. 'umber' → logprob: -11.387635231018066
    6. ' ' → logprob: -11.512635231018066
    7. ' ' → logprob: -11.512635231018066
    8. ' =
' → logprob: -11.637635231018066
    9. 'u' → logprob: -12.012635231018066
    10. 'o' → logprob: -12.512635231018066

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34877076745033264
    2. 'int' → logprob: -1.2237707376480103
    3. ' input' → logprob: -8.473771095275879
    4. 'input' → logprob: -9.098771095275879
    5. ' ' → logprob: -12.848771095275879
    6. ' ' → logprob: -13.348771095275879
    7. '=int' → logprob: -14.723771095275879
    8. '```' → logprob: -15.473771095275879
    9. '<int' → logprob: -15.973771095275879
    10. '	int' → logprob: -16.098770141601562

Token 50: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0789048820734024
    2. '(' → logprob: -2.578904867172241
    3. 'input' → logprob: -11.82890510559082
    4. ' (' → logprob: -12.70390510559082
    5. '('' → logprob: -13.07890510559082
    6. '(
' → logprob: -14.20390510559082
    7. '(user' → logprob: -14.45390510559082
    8. '()' → logprob: -14.82890510559082
    9. '(in' → logprob: -15.70390510559082
    10. '(`' → logprob: -15.82890510559082

Token 51: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3236183822154999
    2. '('' → logprob: -2.0736184120178223
    3. '("("' → logprob: -2.1986184120178223
    4. '("' → logprob: -3.8236184120178223
    5. '()' → logprob: -4.198618412017822
    6. '())' → logprob: -6.948618412017822
    7. '(""))' → logprob: -7.323618412017822
    8. '("")' → logprob: -7.698618412017822
    9. '(">' → logprob: -7.948618412017822
    10. '("(' → logprob: -8.448617935180664

Token 52: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.739558756351471
    2. ' ' → logprob: -1.6145586967468262
    3. ')' → logprob: -1.8645586967468262
    4. '()' → logprob: -2.239558696746826
    5. '#' → logprob: -3.364558696746826
    6. '<|end|>' → logprob: -5.114558696746826
    7. '+' → logprob: -5.864558696746826
    8. ' )' → logprob: -5.989558696746826
    9. '*' → logprob: -6.114558696746826
    10. '.' → logprob: -6.239558696746826

Token 53: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7964953184127808
    2. 'if' → logprob: -1.6714953184127808
    3. 'for' → logprob: -1.9214953184127808
    4. '#' → logprob: -2.5464954376220703
    5. ' for' → logprob: -2.6714954376220703
    6. 'print' → logprob: -3.6714954376220703
    7. ' #' → logprob: -3.9214954376220703
    8. 'factor' → logprob: -4.29649543762207
    9. ' print' → logprob: -5.92149543762207
    10. 'result' → logprob: -6.79649543762207

Token 54: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00678038876503706
    2. 'n' → logprob: -5.006780624389648
    3. ' ' → logprob: -10.006780624389648
    4. ' ' → logprob: -10.881780624389648
    5. ' (' → logprob: -14.506780624389648
    6. '  ' → logprob: -15.756780624389648
    7. '	n' → logprob: -15.881780624389648
    8. '(n' → logprob: -16.13178062438965
    9. ' ' → logprob: -16.75678062438965
    10. ' ‌' → logprob: -16.75678062438965

Token 55: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10958214104175568
    2. ' %' → logprob: -3.3595821857452393
    3. ' <' → logprob: -3.3595821857452393
    4. ' <=' → logprob: -4.48458194732666
    5. ' ==' → logprob: -4.85958194732666
    6. '>' → logprob: -5.23458194732666
    7. ' ' → logprob: -5.23458194732666
    8. '%' → logprob: -6.10958194732666
    9. ' >=' → logprob: -6.23458194732666
    10. '<' → logprob: -8.60958194732666

Token 56: ' inférieur' (ID: 191498)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.7903625965118408
    2. ' ' → logprob: -1.5403625965118408
    3. ' >' → logprob: -1.7903625965118408
    4. ' n' → logprob: -2.540362596511841
    5. ' inférieur' → logprob: -4.290362358093262
    6. '>' → logprob: -4.290362358093262
    7. 'sup' → logprob: -4.790362358093262
    8. 'n' → logprob: -4.790362358093262
    9. ' sup' → logprob: -4.915362358093262
    10. ' divisible' → logprob: -5.415362358093262

Token 57: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.12831711769104004
    2. 'à' → logprob: -2.25331711769104
    3. ' ' → logprob: -5.253316879272461
    4. '<|end|>' → logprob: -5.503316879272461
    5. '=' → logprob: -6.753316879272461
    6. ' a' → logprob: -7.128316879272461
    7. ' to' → logprob: -7.128316879272461
    8. '  ' → logprob: -7.503316879272461
    9. 'a' → logprob: -7.753316879272461
    10. ' or' → logprob: -8.128316879272461

Token 58: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.15672335028648376
    2. 'égal' → logprob: -2.2817232608795166
    3. ' ég' → logprob: -3.6567232608795166
    4. '=' → logprob: -4.656723499298096
    5. 'à' → logprob: -6.031723499298096
    6. ' à' → logprob: -6.156723499298096
    7. 'é' → logprob: -7.031723499298096
    8. 'ég' → logprob: -7.656723499298096
    9. ' supérieur' → logprob: -7.906723499298096
    10. 'égalité' → logprob: -8.031723022460938

Token 59: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08488897234201431
    2. 'à' → logprob: -3.4598889350891113
    3. ' ' → logprob: -3.7098889350891113
    4. '<|end|>' → logprob: -3.9598889350891113
    5. ' ' → logprob: -6.334888935089111
    6. ' to' → logprob: -6.709888935089111
    7. 'to' → logprob: -7.334888935089111
    8. '  ' → logprob: -7.459888935089111
    9. ''à' → logprob: -7.834888935089111
    10. 's' → logprob: -7.834888935089111

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08708129078149796
    2. '0' → logprob: -2.58708119392395
    3. '10' → logprob: -5.212081432342529
    4. '5' → logprob: -6.337081432342529
    5. '20' → logprob: -8.462080955505371
    6. '1' → logprob: -8.962080955505371
    7. '3' → logprob: -9.212080955505371
    8. '50' → logprob: -9.462080955505371
    9. '2' → logprob: -9.712080955505371
    10. '7' → logprob: -9.837080955505371

Token 61: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07902319729328156
    2. ' ' → logprob: -2.9540231227874756
    3. '10' → logprob: -3.9540231227874756
    4. '5' → logprob: -5.954023361206055
    5. '20' → logprob: -7.579023361206055
    6. '1' → logprob: -7.954023361206055
    7. '3' → logprob: -8.329023361206055
    8. '50' → logprob: -8.329023361206055
    9. '100' → logprob: -8.579023361206055
    10. '2' → logprob: -9.079023361206055

Token 62: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03818114846944809
    2. ' :' → logprob: -3.2881810665130615
    3. ':
' → logprob: -9.16318130493164
    4. ' :
' → logprob: -10.78818130493164
    5. ',' → logprob: -11.91318130493164
    6. ' ' → logprob: -13.53818130493164
    7. ' or' → logprob: -13.53818130493164
    8. '   ' → logprob: -14.16318130493164
    9. ' and' → logprob: -14.28818130493164
    10. ' if' → logprob: -14.66318130493164

Token 63: ' ou' (ID: 2031)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.09503420442342758
    2. '   ' → logprob: -3.345034122467041
    3. 'print' → logprob: -3.470034122467041
    4. ' on' → logprob: -4.220034122467041
    5. '    ' → logprob: -5.595034122467041
    6. ' ' → logprob: -6.720034122467041
    7. ' ' → logprob: -6.845034122467041
    8. ' n' → logprob: -7.095034122467041
    9. ' afficher' → logprob: -7.845034122467041
    10. '    
' → logprob: -8.2200345993042

Token 64: ' égal' (ID: 15059)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.042585622519254684
    2. 'n' → logprob: -3.417585611343384
    3. ' if' → logprob: -5.167585849761963
    4. ' si' → logprob: -7.042585849761963
    5. ':' → logprob: -7.417585849761963
    6. ' ' → logprob: -7.542585849761963
    7. '```' → logprob: -8.042585372924805
    8. ' ' → logprob: -8.167585372924805
    9. 'if' → logprob: -8.917585372924805
    10. '  ' → logprob: -9.417585372924805

Token 65: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3092381954193115
    2. ' ' → logprob: -2.1842381954193115
    3. ' a' → logprob: -2.5592381954193115
    4. '(' → logprob: -2.8092381954193115
    5. 'e' → logprob: -5.059238433837891
    6. 'à' → logprob: -6.309238433837891
    7. 'a' → logprob: -6.809238433837891
    8. '1' → logprob: -6.934238433837891
    9. '0' → logprob: -7.309238433837891
    10. '  ' → logprob: -7.434238433837891

Token 66: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3170693814754486
    2. '3' → logprob: -1.317069411277771
    3. '1' → logprob: -6.1920695304870605
    4. '0' → logprob: -6.4420695304870605
    5. '4' → logprob: -10.067069053649902
    6. '  ' → logprob: -10.442069053649902
    7. ' ' → logprob: -10.942069053649902
    8. '```' → logprob: -11.317069053649902
    9. '   ' → logprob: -11.442069053649902
    10. '5' → logprob: -11.879569053649902

Token 67: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07949993014335632
    2. ' ' → logprob: -2.7044999599456787
    3. '0' → logprob: -4.9544997215271
    4. '1' → logprob: -6.0794997215271
    5. '4' → logprob: -9.329500198364258
    6. '5' → logprob: -11.079500198364258
    7. '10' → logprob: -11.517000198364258
    8. 'None' → logprob: -11.642000198364258
    9. '   ' → logprob: -12.017000198364258
    10. '  ' → logprob: -12.329500198364258

Token 68: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016247965395450592
    2. ' :' → logprob: -4.641247749328613
    3. ',' → logprob: -5.141247749328613
    4. ':
' → logprob: -7.766247749328613
    5. ' or' → logprob: -9.266247749328613
    6. ' ,' → logprob: -9.891247749328613
    7. ' :
' → logprob: -10.141247749328613
    8. ' if' → logprob: -12.891247749328613
    9. 'if' → logprob: -13.516247749328613
    10. ',:' → logprob: -13.891247749328613

Token 69: ' nous' (ID: 6176)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24030154943466187
    2. ' :' → logprob: -1.6153016090393066
    3. ' print' → logprob: -4.615301609039307
    4. ' :
' → logprob: -6.615301609039307
    5. ' or' → logprob: -6.990301609039307
    6. '   ' → logprob: -7.490301609039307
    7. ':
' → logprob: -7.490301609039307
    8. ' ' → logprob: -8.115301132202148
    9. ',' → logprob: -8.115301132202148
    10. 'print' → logprob: -8.615301132202148

Token 70: ' entr' (ID: 7072)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.12366790324449539
    2. 'print' → logprob: -2.3736679553985596
    3. ' n' → logprob: -4.3736677169799805
    4. ' pass' → logprob: -5.4986677169799805
    5. ' affich' → logprob: -6.3736677169799805
    6. 'n' → logprob: -6.7486677169799805
    7. ' quit' → logprob: -7.3736677169799805
    8. ' return' → logprob: -7.9986677169799805
    9. ' afficher' → logprob: -7.9986677169799805
    10. ' imprim' → logprob: -8.24866771697998

Token 71: 'ons' (ID: 1808)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09342322498559952
    2. 'e' → logprob: -2.7184231281280518
    3. 'if' → logprob: -4.468423366546631
    4. 'ons' → logprob: -5.718423366546631
    5. '   ' → logprob: -6.218423366546631
    6. '```' → logprob: -6.343423366546631
    7. 'ée' → logprob: -6.718423366546631
    8. '#' → logprob: -7.593423366546631
    9. 'ées' → logprob: -7.718423366546631
    10. 'print' → logprob: -7.968423366546631

Token 72: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2358851134777069
    2. ' :' → logprob: -1.6108851432800293
    3. ' into' → logprob: -6.110885143280029
    4. ' if' → logprob: -6.360885143280029
    5. ' une' → logprob: -6.860885143280029
    6. ' in' → logprob: -7.110885143280029
    7. '   ' → logprob: -7.360885143280029
    8. '  ' → logprob: -7.610885143280029
    9. ' un' → logprob: -7.860885143280029
    10. ' a' → logprob: -7.985885143280029

Token 73: ' ce' (ID: 2357)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1319634914398193
    2. ' l' → logprob: -2.0069634914398193
    3. ' un' → logprob: -2.0069634914398193
    4. ' la' → logprob: -2.0069634914398193
    5. ' une' → logprob: -2.1319634914398193
    6. ' le' → logprob: -3.1319634914398193
    7. ' :' → logprob: -3.6319634914398193
    8. 'le' → logprob: -3.7569634914398193
    9. 'une' → logprob: -3.7569634914398193
    10. ' a' → logprob: -4.881963729858398

Token 74: ' bloc' (ID: 51218)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.7601431608200073
    2. ':' → logprob: -1.1351431608200073
    3. ' if' → logprob: -2.135143280029297
    4. ' case' → logprob: -3.385143280029297
    5. 'if' → logprob: -3.760143280029297
    6. ' espace' → logprob: -5.260143280029297
    7. '```' → logprob: -5.510143280029297
    8. ' ```' → logprob: -5.635143280029297
    9. ' :' → logprob: -5.760143280029297
    10. ' bloc' → logprob: -5.885143280029297

Token 75: ' condition' (ID: 7060)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03244750574231148
    2. ':
' → logprob: -3.782447576522827
    3. ' :' → logprob: -5.282447338104248
    4. ' :
' → logprob: -5.532447338104248
    5. ':

' → logprob: -10.657447814941406
    6. ' :
' → logprob: -10.657447814941406
    7. ',' → logprob: -10.907447814941406
    8. '```' → logprob: -11.032447814941406
    9. '.' → logprob: -11.407447814941406
    10. ':
' → logprob: -11.532447814941406

Token 76: 'nel' (ID: 10085)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28396347165107727
    2. ':' → logprob: -2.033963441848755
    3. 'al' → logprob: -2.783963441848755
    4. 'nel' → logprob: -3.533963441848755
    5. ' if' → logprob: -4.658963680267334
    6. 'el' → logprob: -5.783963680267334
    7. 'e' → logprob: -5.783963680267334
    8. 'ale' → logprob: -6.033963680267334
    9. 'elif' → logprob: -6.283963680267334
    10. 'nelle' → logprob: -6.908963680267334

Token 77: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019492246210575104
    2. ':
' → logprob: -4.019492149353027
    3. ' :' → logprob: -7.269492149353027
    4. ' :
' → logprob: -7.519492149353027
    5. ',' → logprob: -10.394492149353027
    6. '.' → logprob: -10.894492149353027
    7. '```' → logprob: -10.894492149353027
    8. ':

' → logprob: -11.019492149353027
    9. '[' → logprob: -12.394492149353027
    10. 'if' → logprob: -13.019492149353027

Token 78: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7465255856513977
    2. '```' → logprob: -0.7465255856513977
    3. ':' → logprob: -4.246525764465332
    4. '
' → logprob: -4.371525764465332
    5. ' if' → logprob: -4.371525764465332
    6. '``' → logprob: -4.871525764465332
    7. ':
' → logprob: -5.496525764465332
    8. 'n' → logprob: -9.496525764465332
    9. 'elif' → logprob: -9.746525764465332
    10. '<|end|>' → logprob: -9.996525764465332

Token 79: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00014072739577386528
    2. 'n' → logprob: -9.500141143798828
    3. ' ' → logprob: -9.750141143798828
    4. ' ' → logprob: -12.500141143798828
    5. ' (' → logprob: -13.000141143798828
    6. ' not' → logprob: -14.500141143798828
    7. '	n' → logprob: -14.625141143798828
    8. '(n' → logprob: -16.125141143798828
    9. '  ' → logprob: -16.375141143798828
    10. '```' → logprob: -16.562641143798828

Token 80: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.006877460982650518
    2. '<=' → logprob: -5.006877422332764
    3. ' ' → logprob: -9.131877899169922
    4. ' in' → logprob: -10.381877899169922
    5. ' <' → logprob: -10.881877899169922
    6. ' ==' → logprob: -13.881877899169922
    7. '  ' → logprob: -14.631877899169922
    8. ' ≤' → logprob: -14.756877899169922
    9. ' %' → logprob: -14.881877899169922
    10. '<' → logprob: -15.006877899169922

Token 81: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31326204538345337
    2. '2' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.563261985778809
    4. '  ' → logprob: -16.563262939453125
    5. '```' → logprob: -17.438262939453125
    6. '1' → logprob: -17.750762939453125
    7. '２' → logprob: -18.063262939453125
    8. '3' → logprob: -18.125762939453125
    9. '۲' → logprob: -18.500762939453125
    10. '   ' → logprob: -18.938262939453125

Token 82: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -16.000051498413086
    4. '`' → logprob: -17.687551498413086
    5. '۲' → logprob: -17.937551498413086
    6. '２' → logprob: -18.000051498413086
    7. ''' → logprob: -18.312551498413086
    8. '  ' → logprob: -18.312551498413086
    9. '3' → logprob: -18.375051498413086
    10. '"' → logprob: -18.375051498413086

Token 83: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03377455472946167
    2. ' ' → logprob: -3.4087746143341064
    3. 'or' → logprob: -9.158774375915527
    4. ' ou' → logprob: -11.158774375915527
    5. ' :' → logprob: -12.783774375915527
    6. ' ' → logprob: -13.033774375915527
    7. ' o' → logprob: -13.158774375915527
    8. '  ' → logprob: -13.408774375915527
    9. '```' → logprob: -16.033775329589844
    10. '   ' → logprob: -16.408775329589844

Token 84: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.003139451378956437
    2. 'n' → logprob: -6.003139495849609
    3. ' ' → logprob: -7.378139495849609
    4. ' ' → logprob: -10.25313949584961
    5. '4' → logprob: -13.25313949584961
    6. ' (' → logprob: -14.75313949584961
    7. '	n' → logprob: -14.87813949584961
    8. '```' → logprob: -15.12813949584961
    9. ' "' → logprob: -16.37813949584961
    10. ' ' → logprob: -16.50313949584961

Token 85: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07117638736963272
    2. '==' → logprob: -2.696176290512085
    3. ' ' → logprob: -7.071176528930664
    4. '=' → logprob: -8.446176528930664
    5. ' =' → logprob: -8.946176528930664
    6. '4' → logprob: -10.821176528930664
    7. '```' → logprob: -12.196176528930664
    8. ' ' → logprob: -12.446176528930664
    9. '2' → logprob: -13.196176528930664
    10. ' !=' → logprob: -13.508676528930664

Token 86: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38687583804130554
    2. '4' → logprob: -1.136875867843628
    3. ''' → logprob: -13.136876106262207
    4. ' ' → logprob: -13.386876106262207
    5. '"' → logprob: -14.636876106262207
    6. '2' → logprob: -16.01187515258789
    7. '  ' → logprob: -16.26187515258789
    8. '3' → logprob: -16.26187515258789
    9. '' → logprob: -16.51187515258789
    10. ' '' → logprob: -16.57437515258789

Token 87: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. ''' → logprob: -16.750431060791016
    4. '' → logprob: -17.125431060791016
    5. '۴' → logprob: -18.125431060791016
    6. '```' → logprob: -18.125431060791016
    7. '"' → logprob: -18.250431060791016
    8. '４' → logprob: -18.375431060791016
    9. '  ' → logprob: -18.625431060791016
    10. '٤' → logprob: -18.625431060791016

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12694185972213745
    2. ' :' → logprob: -2.1269419193267822
    3. ' :
' → logprob: -12.126941680908203
    4. ':
' → logprob: -12.251941680908203
    5. ' :
' → logprob: -14.376941680908203
    6. ':**' → logprob: -14.376941680908203
    7. ' or' → logprob: -14.501941680908203
    8. ':return' → logprob: -14.751941680908203
    9. ':def' → logprob: -15.501941680908203
    10. ',' → logprob: -15.876941680908203

Token 89: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27816373109817505
    2. ' :' → logprob: -1.5281636714935303
    3. ' :
' → logprob: -4.278163909912109
    4. '   ' → logprob: -4.903163909912109
    5. ':
' → logprob: -6.028163909912109
    6. ' print' → logprob: -7.153163909912109
    7. '    ' → logprob: -7.528163909912109
    8. 'print' → logprob: -8.40316390991211
    9. ' ' → logprob: -8.90316390991211
    10. ' :
' → logprob: -9.15316390991211

Token 90: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.22836214303970337
    2. '   ' → logprob: -2.2283620834350586
    3. 'print' → logprob: -2.9783620834350586
    4. ' 
' → logprob: -3.6033620834350586
    5. ' ' → logprob: -5.353362083435059
    6. '    
' → logprob: -5.478362083435059
    7. '    ' → logprob: -5.728362083435059
    8. '     
' → logprob: -5.978362083435059
    9. ':' → logprob: -7.228362083435059
    10. '   
' → logprob: -7.353362083435059

Token 91: ' Aff' (ID: 13741)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1506805568933487
    2. 'print' → logprob: -2.0256805419921875
    3. '   ' → logprob: -4.9006805419921875
    4. '    ' → logprob: -8.400680541992188
    5. ' pass' → logprob: -9.400680541992188
    6. ' ' → logprob: -9.650680541992188
    7. 'pr' → logprob: -10.400680541992188
    8. '	print' → logprob: -10.775680541992188
    9. 'pass' → logprob: -11.150680541992188
    10. '  ' → logprob: -11.275680541992188

Token 92: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.023218920454382896
    2. '   ' → logprob: -4.648219108581543
    3. 'ich' → logprob: -5.273219108581543
    4. 'iche' → logprob: -5.523219108581543
    5. 'ichage' → logprob: -6.148219108581543
    6. 'i' → logprob: -7.523219108581543
    7. 'ic' → logprob: -7.773219108581543
    8. '```' → logprob: -8.023219108581543
    9. '#' → logprob: -8.398219108581543
    10. '       ' → logprob: -9.023219108581543

Token 93: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45692041516304016
    2. '("' → logprob: -1.3319203853607178
    3. '"' → logprob: -2.8319203853607178
    4. ' ' → logprob: -4.456920623779297
    5. ' "' → logprob: -4.706920623779297
    6. ' (' → logprob: -4.956920623779297
    7. ' ("' → logprob: -5.206920623779297
    8. '(False' → logprob: -5.456920623779297
    9. '('' → logprob: -6.331920623779297
    10. '(True' → logprob: -6.956920623779297

Token 94: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.5355404019355774
    2. 'YES' → logprob: -2.2855403423309326
    3. 'True' → logprob: -2.7855403423309326
    4. 'Yes' → logprob: -2.9105403423309326
    5. 'a' → logprob: -3.5355403423309326
    6. '"' → logprob: -3.9105403423309326
    7. 'False' → logprob: -4.160540580749512
    8. ' NO' → logprob: -4.285540580749512
    9. 'No' → logprob: -4.285540580749512
    10. '4' → logprob: -4.410540580749512

Token 95: '"' (ID: 1)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02735906094312668
    2. ' t' → logprob: -4.1523590087890625
    3. 'n' → logprob: -4.5273590087890625
    4. ' n' → logprob: -9.152359008789062
    5. 'nt' → logprob: -9.777359008789062
    6. 'r' → logprob: -9.902359008789062
    7. '  
' → logprob: -9.902359008789062
    8. ' ' → logprob: -10.152359008789062
    9. 'it' → logprob: -11.589859008789062
    10. 'ne' → logprob: -11.777359008789062

Token 96: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4539787769317627
    2. '   ' → logprob: -1.7039787769317627
    3. ':' → logprob: -2.5789787769317627
    4. 'print' → logprob: -2.7039787769317627
    5. '\n' → logprob: -4.078978538513184
    6. ':
' → logprob: -4.828978538513184
    7. 'n' → logprob: -5.453978538513184
    8. ' print' → logprob: -5.828978538513184
    9. ')' → logprob: -5.953978538513184
    10. '    
' → logprob: -7.078978538513184

Token 97: ' ind' (ID: 1383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8169047236442566
    2. '<|end|>' → logprob: -1.1919047832489014
    3. ' "' → logprob: -2.5669047832489014
    4. '  ' → logprob: -3.0669047832489014
    5. ' les' → logprob: -3.9419047832489014
    6. '"' → logprob: -4.066904544830322
    7. '```' → logprob: -4.191904544830322
    8. '  
' → logprob: -4.566904544830322
    9. '    ' → logprob: -5.066904544830322
    10. '<|end|>' → logprob: -5.066904544830322

Token 98: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.003869785461574793
    2. 'iqué' → logprob: -6.628870010375977
    3. 'ique' → logprob: -6.878870010375977
    4. 'iqu' → logprob: -7.003870010375977
    5. 'er' → logprob: -8.253870010375977
    6. 'iq' → logprob: -9.003870010375977
    7. 'iquant' → logprob: -9.503870010375977
    8. 'ex' → logprob: -9.628870010375977
    9. 'e' → logprob: -10.878870010375977
    10. 'é' → logprob: -11.628870010375977

Token 99: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.488504558801651
    2. ' ' → logprob: -1.1135045289993286
    3. '   ' → logprob: -3.363504648208618
    4. ' "' → logprob: -4.988504409790039
    5. '  ' → logprob: -5.363504409790039
    6. '<|end|>' → logprob: -6.113504409790039
    7. ' qu' → logprob: -6.238504409790039
    8. ' that' → logprob: -6.863504409790039
    9. ' a' → logprob: -6.988504409790039
    10. '```' → logprob: -7.363504409790039

Token 100: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0683737993240356
    2. ' le' → logprob: -2.318373680114746
    3. ' "' → logprob: -2.693373680114746
    4. '   ' → logprob: -2.693373680114746
    5. ' l' → logprob: -2.943373680114746
    6. ' la' → logprob: -2.943373680114746
    7. '"' → logprob: -2.943373680114746
    8. ' n' → logprob: -3.193373680114746
    9. '  
' → logprob: -3.318373680114746
    10. ' les' → logprob: -3.318373680114746

Token 101: ' condition' (ID: 7060)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8639503717422485
    2. ' number' → logprob: -0.9889503717422485
    3. ' nombre' → logprob: -2.363950252532959
    4. 'nombre' → logprob: -3.238950252532959
    5. ' n' → logprob: -3.488950252532959
    6. 'number' → logprob: -3.613950252532959
    7. ' ' → logprob: -4.738950252532959
    8. ' code' → logprob: -6.863950252532959
    9. ' answer' → logprob: -7.238950252532959
    10. ' valeur' → logprob: -7.488950252532959

Token 102: ' du' (ID: 1462)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3976544141769409
    2. ' ' → logprob: -1.147654414176941
    3. 'n' → logprob: -5.1476545333862305
    4. ' ne' → logprob: -6.3976545333862305
    5. ' "' → logprob: -6.3976545333862305
    6. '  ' → logprob: -7.8976545333862305
    7. ' is' → logprob: -8.14765453338623
    8. 's' → logprob: -8.39765453338623
    9. ' est' → logprob: -9.14765453338623
    10. ' ' → logprob: -9.14765453338623

Token 103: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.23011812567710876
    2. ' nombre' → logprob: -2.1051180362701416
    3. ' code' → logprob: -4.355118274688721
    4. 'n' → logprob: -4.480118274688721
    5. 'nombre' → logprob: -4.605118274688721
    6. ' problem' → logprob: -4.605118274688721
    7. ' probleme' → logprob: -5.480118274688721
    8. '```' → logprob: -5.605118274688721
    9. 'a' → logprob: -6.230118274688721
    10. ' probl' → logprob: -6.230118274688721

Token 104: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04188612475991249
    2. ' ' → logprob: -4.166886329650879
    3. 'n' → logprob: -4.291886329650879
    4. ' ne' → logprob: -4.791886329650879
    5. 's' → logprob: -6.291886329650879
    6. ' est' → logprob: -7.791886329650879
    7. ' is' → logprob: -8.291886329650879
    8. ' "' → logprob: -8.416886329650879
    9. ' not' → logprob: -8.416886329650879
    10. 'est' → logprob: -9.166886329650879

Token 105: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.13609349727630615
    2. ''' → logprob: -2.5110936164855957
    3. ' n' → logprob: -4.261093616485596
    4. 'e' → logprob: -4.636093616485596
    5. '’est' → logprob: -5.386093616485596
    6. 'est' → logprob: -5.511093616485596
    7. 'n' → logprob: -5.511093616485596
    8. 'et' → logprob: -6.761093616485596
    9. ' '' → logprob: -7.011093616485596
    10. 'pas' → logprob: -7.011093616485596

Token 106: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.031837303191423416
    2. 'pas' → logprob: -3.531837224960327
    3. ' not' → logprob: -7.031837463378906
    4. 's' → logprob: -8.031837463378906
    5. ' jamais' → logprob: -8.531837463378906
    6. 't' → logprob: -8.531837463378906
    7. ' met' → logprob: -8.781837463378906
    8. 'not' → logprob: -8.906837463378906
    9. '<|end|>' → logprob: -10.156837463378906
    10. ' rempl' → logprob: -10.406837463378906

Token 107: ' satis' (ID: 56317)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18116366863250732
    2. ' rempl' → logprob: -2.806163787841797
    3. ' respect' → logprob: -3.056163787841797
    4. 'respect' → logprob: -3.931163787841797
    5. ' satis' → logprob: -3.931163787841797
    6. '
' → logprob: -5.431163787841797
    7. ' met' → logprob: -5.806163787841797
    8. ' satisf' → logprob: -6.056163787841797
    9. ' satisfied' → logprob: -6.806163787841797
    10. 'f' → logprob: -7.056163787841797

Token 108: 'faite' (ID: 69848)
  Prédit: 'faite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.37110280990600586
    2. 'ais' → logprob: -1.2461028099060059
    3. 'ait' → logprob: -4.371102809906006
    4. 'aites' → logprob: -5.371102809906006
    5. 'a' → logprob: -6.246102809906006
    6. 'aiste' → logprob: -6.996102809906006
    7. 'aise' → logprob: -6.996102809906006
    8. 'ai' → logprob: -8.121103286743164
    9. 'aits' → logprob: -8.621103286743164
    10. 'ainte' → logprob: -8.621103286743164

Token 109: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.572795033454895
    2. ':' → logprob: -1.447795033454895
    3. '
' → logprob: -2.3227949142456055
    4. 'print' → logprob: -3.1977949142456055
    5. 'n' → logprob: -3.8227949142456055
    6. ')' → logprob: -4.4477949142456055
    7. ' print' → logprob: -4.5727949142456055
    8. '.' → logprob: -5.1977949142456055
    9. ':
' → logprob: -5.4477949142456055
    10. '```' → logprob: -6.4477949142456055

Token 110: ' ces' (ID: 10532)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.886585533618927
    2. ' this' → logprob: -1.8865854740142822
    3. ' ce' → logprob: -2.5115854740142822
    4. '"' → logprob: -2.5115854740142822
    5. ' cette' → logprob: -2.7615854740142822
    6. ' "' → logprob: -2.8865854740142822
    7. ' ' → logprob: -3.3865854740142822
    8. ' les' → logprob: -3.6365854740142822
    9. ' the' → logprob: -3.6365854740142822
    10. ' le' → logprob: -4.136585712432861

Token 111: ' valeurs' (ID: 73668)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.7043763995170593
    2. ' nombres' → logprob: -0.9543763995170593
    3. ' cases' → logprob: -3.454376459121704
    4. ' valeurs' → logprob: -3.579376459121704
    5. ' n' → logprob: -3.704376459121704
    6. 'n' → logprob: -4.204376220703125
    7. ' numbers' → logprob: -4.704376220703125
    8. ' ' → logprob: -5.454376220703125
    9. ' ' → logprob: -5.954376220703125
    10. ' nombre' → logprob: -6.454376220703125

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7137569189071655
    2. '
' → logprob: -1.8387569189071655
    3. ':' → logprob: -2.213757038116455
    4. ')' → logprob: -2.338757038116455
    5. '.' → logprob: -2.463757038116455
    6. 'print' → logprob: -3.963757038116455
    7. 'n' → logprob: -4.338757038116455
    8. ',' → logprob: -5.213757038116455
    9. ':
' → logprob: -5.213757038116455
    10. '<|end|>' → logprob: -5.463757038116455

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33923250436782837
    2. '
' → logprob: -2.3392324447631836
    3. ':' → logprob: -2.4642324447631836
    4. 'print' → logprob: -2.5892324447631836
    5. ' print' → logprob: -4.089232444763184
    6. ':
' → logprob: -4.964232444763184
    7. 'n' → logprob: -6.589232444763184
    8. '```' → logprob: -6.839232444763184
    9. '    
' → logprob: -6.964232444763184
    10. ')' → logprob: -7.214232444763184

Token 114: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.7663397192955017
    2. ' print' → logprob: -1.0163397789001465
    3. '   ' → logprob: -1.7663397789001465
    4. '
' → logprob: -6.1413397789001465
    5. '	print' → logprob: -9.641339302062988
    6. ' 
' → logprob: -10.141339302062988
    7. '    ' → logprob: -10.266339302062988
    8. '       ' → logprob: -10.391339302062988
    9. '```' → logprob: -10.391339302062988
    10. '    
' → logprob: -10.641339302062988

Token 115: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.252135694026947
    2. '(' → logprob: -1.5021357536315918
    3. '('' → logprob: -8.627135276794434
    4. '("")' → logprob: -12.002135276794434
    5. '("("' → logprob: -12.002135276794434
    6. '(
' → logprob: -12.127135276794434
    7. '()' → logprob: -12.502135276794434
    8. '("""' → logprob: -13.002135276794434
    9. '(

' → logprob: -13.752135276794434
    10. '(""' → logprob: -13.752135276794434

Token 116: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -6.392202976712724e-06
    2. ' No' → logprob: -12.500006675720215
    3. '"No' → logprob: -13.875006675720215
    4. 'N' → logprob: -14.000006675720215
    5. 'Yes' → logprob: -14.125006675720215
    6. 'NO' → logprob: -16.3750057220459
    7. '"' → logprob: -17.1250057220459
    8. '```' → logprob: -17.3750057220459
    9. '_No' → logprob: -17.5000057220459
    10. 'Not' → logprob: -18.2500057220459

Token 117: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.8828707804204896e-05
    2. '")
' → logprob: -10.000048637390137
    3. '")
' → logprob: -13.250048637390137
    4. '"' → logprob: -14.500048637390137
    5. ')' → logprob: -14.875048637390137
    6. ')")' → logprob: -14.875048637390137
    7. '")

' → logprob: -15.250048637390137
    8. '");' → logprob: -17.000049591064453
    9. '”)' → logprob: -17.125049591064453
    10. ' ")' → logprob: -17.500049591064453

Token 118: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6619728803634644
    2. 'else' → logprob: -0.7869728803634644
    3. ')' → logprob: -4.411972999572754
    4. ' else' → logprob: -4.411972999572754
    5. ' elif' → logprob: -6.161972999572754
    6. 'e' → logprob: -6.911972999572754
    7. '<|end|>' → logprob: -7.411972999572754
    8. ':' → logprob: -7.536972999572754
    9. 'el' → logprob: -9.161972999572754
    10. '```' → logprob: -9.661972999572754

Token 119: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03489324077963829
    2. 'else' → logprob: -3.409893274307251
    3. ' elif' → logprob: -7.034893035888672
    4. ' else' → logprob: -8.284893035888672
    5. 'el' → logprob: -9.159893035888672
    6. 'elseif' → logprob: -13.409893035888672
    7. 'eli' → logprob: -13.659893035888672
    8. 'els' → logprob: -13.659893035888672
    9. '```' → logprob: -14.034893035888672
    10. '#' → logprob: -14.284893035888672

Token 120: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0028600357472896576
    2. 'n' → logprob: -6.502860069274902
    3. ' ' → logprob: -7.127860069274902
    4. ' not' → logprob: -8.377860069274902
    5. ' elif' → logprob: -9.252860069274902
    6. ' else' → logprob: -9.377860069274902
    7. ' ' → logprob: -10.127860069274902
    8. ' (' → logprob: -10.877860069274902
    9. '	n' → logprob: -11.315360069274902
    10. 'else' → logprob: -11.565360069274902

Token 121: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.0468387603759766
    2. '%' → logprob: -1.1718387603759766
    3. ' ==' → logprob: -1.6718387603759766
    4. '>' → logprob: -2.5468387603759766
    5. '==' → logprob: -3.1718387603759766
    6. ' %' → logprob: -3.9218387603759766
    7. 'elif' → logprob: -5.796838760375977
    8. 'else' → logprob: -6.046838760375977
    9. ' not' → logprob: -6.046838760375977
    10. ' elif' → logprob: -7.046838760375977

Token 122: ' exactement' (ID: 108701)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8120987415313721
    2. ' divisible' → logprob: -1.312098741531372
    3. ' not' → logprob: -3.187098741531372
    4. 'div' → logprob: -3.312098741531372
    5. '3' → logprob: -3.437098741531372
    6. ' un' → logprob: -3.687098741531372
    7. ' supérieur' → logprob: -4.187098503112793
    8. ' equal' → logprob: -4.687098503112793
    9. '>' → logprob: -4.687098503112793
    10. ' égal' → logprob: -4.812098503112793

Token 123: ' égal' (ID: 15059)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3295109272003174
    2. '3' → logprob: -1.3295109272003174
    3. '1' → logprob: -4.954510688781738
    4. '5' → logprob: -5.329510688781738
    5. '6' → logprob: -5.954510688781738
    6. '7' → logprob: -7.704510688781738
    7. '=' → logprob: -8.204510688781738
    8. '9' → logprob: -9.204510688781738
    9. '100' → logprob: -9.329510688781738
    10. '2' → logprob: -9.579510688781738

Token 124: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.43338337540626526
    2. 'à' → logprob: -1.4333833456039429
    3. '<|end|>' → logprob: -2.8083834648132324
    4. 'a' → logprob: -3.5583834648132324
    5. ' ' → logprob: -4.433383464813232
    6. ' a' → logprob: -5.183383464813232
    7. ' to' → logprob: -6.183383464813232
    8. ''à' → logprob: -6.808383464813232
    9. '```' → logprob: -6.933383464813232
    10. '  ' → logprob: -7.433383464813232

Token 125: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2866569757461548
    2. ' ' → logprob: -1.4116569757461548
    3. '1' → logprob: -5.411656856536865
    4. '5' → logprob: -7.911656856536865
    5. '6' → logprob: -8.286657333374023
    6. '0' → logprob: -8.286657333374023
    7. '7' → logprob: -10.161657333374023
    8. '8' → logprob: -10.411657333374023
    9. '2' → logprob: -10.661657333374023
    10. '   ' → logprob: -11.411657333374023

Token 126: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004459674004465342
    2. '1' → logprob: -6.379459857940674
    3. '5' → logprob: -6.629459857940674
    4. ' ' → logprob: -7.254459857940674
    5. '6' → logprob: -7.754459857940674
    6. '7' → logprob: -8.629459381103516
    7. '0' → logprob: -9.754459381103516
    8. '2' → logprob: -11.129459381103516
    9. '8' → logprob: -11.254459381103516
    10. '36' → logprob: -11.629459381103516

Token 127: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03389579802751541
    2. 'elif' → logprob: -3.40889573097229
    3. 'else' → logprob: -9.158895492553711
    4. ',' → logprob: -9.783895492553711
    5. ':
' → logprob: -10.033895492553711
    6. ' elif' → logprob: -10.658895492553711
    7. ' or' → logprob: -11.408895492553711
    8. ' :' → logprob: -12.408895492553711
    9. '.' → logprob: -13.658895492553711
    10. 'or' → logprob: -14.158895492553711

Token 128: ' nous' (ID: 6176)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3520539104938507
    2. ':' → logprob: -1.2270538806915283
    3. ':
' → logprob: -5.852054119110107
    4. ' print' → logprob: -8.60205364227295
    5. ' :' → logprob: -9.22705364227295
    6. '  ' → logprob: -9.22705364227295
    7. 'print' → logprob: -9.72705364227295
    8. '    ' → logprob: -9.85205364227295
    9. '
' → logprob: -9.97705364227295
    10. 'elif' → logprob: -10.10205364227295

Token 129: ' voulons' (ID: 195442)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05395178869366646
    2. ' print' → logprob: -3.3039517402648926
    3. ':
' → logprob: -4.928951740264893
    4. ' :' → logprob: -5.803951740264893
    5. 'print' → logprob: -5.928951740264893
    6. '   ' → logprob: -6.428951740264893
    7. ' continue' → logprob: -8.30395221710205
    8. '```' → logprob: -9.05395221710205
    9. ' continuer' → logprob: -9.42895221710205
    10. '<|end|>' → logprob: -9.42895221710205

Token 130: ' traiter' (ID: 105852)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.010984182357788
    2. ' print' → logprob: -1.260984182357788
    3. '   ' → logprob: -1.385984182357788
    4. 'print' → logprob: -2.885984182357788
    5. ':
' → logprob: -3.260984182357788
    6. '    ' → logprob: -6.010984420776367
    7. '    
' → logprob: -7.010984420776367
    8. ' ' → logprob: -7.010984420776367
    9. '
' → logprob: -7.135984420776367
    10. '  ' → logprob: -7.260984420776367

Token 131: ' ce' (ID: 2357)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04184794798493385
    2. ' :' → logprob: -4.291848182678223
    3. ' the' → logprob: -4.541848182678223
    4. ' la' → logprob: -5.291848182678223
    5. '   ' → logprob: -6.041848182678223
    6. ' n' → logprob: -6.541848182678223
    7. ' le' → logprob: -6.791848182678223
    8. ' un' → logprob: -7.041848182678223
    9. '<|end|>' → logprob: -7.416848182678223
    10. 'le' → logprob: -7.666848182678223

Token 132: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.05058837682008743
    2. 'cas' → logprob: -3.300588369369507
    3. ' case' → logprob: -5.300588607788086
    4. ' bloc' → logprob: -6.300588607788086
    5. ' code' → logprob: -6.925588607788086
    6. '#' → logprob: -6.925588607788086
    7. 'case' → logprob: -7.050588607788086
    8. '```' → logprob: -7.300588607788086
    9. 'n' → logprob: -8.050588607788086
    10. ':' → logprob: -8.050588607788086

Token 133: ' particulier' (ID: 47842)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021262088790535927
    2. ' :' → logprob: -3.8962621688842773
    3. '   ' → logprob: -8.271262168884277
    4. ',' → logprob: -8.896262168884277
    5. ' elif' → logprob: -9.396262168884277
    6. ':
' → logprob: -9.396262168884277
    7. '.' → logprob: -10.271262168884277
    8. ' :
' → logprob: -10.396262168884277
    9. ' else' → logprob: -10.771262168884277
    10. 'elif' → logprob: -11.021262168884277

Token 134: ' sépar' (ID: 97160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007372042746283114
    2. ' :' → logprob: -7.875737190246582
    3. ':
' → logprob: -8.875737190246582
    4. ',' → logprob: -9.000737190246582
    5. '   ' → logprob: -9.500737190246582
    6. '):' → logprob: -11.750737190246582
    7. '.' → logprob: -12.125737190246582
    8. '  ' → logprob: -14.000737190246582
    9. ')' → logprob: -14.000737190246582
    10. ' :
' → logprob: -14.125737190246582

Token 135: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.09173919260501862
    2. 'ement' → logprob: -2.4667391777038574
    3. 'é' → logprob: -6.091739177703857
    4. 'ment' → logprob: -8.591739654541016
    5. 'elif' → logprob: -8.966739654541016
    6. 'ém' → logprob: -9.716739654541016
    7. 'è' → logprob: -9.716739654541016
    8. 'ely' → logprob: -10.841739654541016
    9. 'emment' → logprob: -10.966739654541016
    10. '```' → logprob: -11.466739654541016

Token 136: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015181333583313972
    2. ' :' → logprob: -9.125151634216309
    3. ':
' → logprob: -10.500151634216309
    4. ',' → logprob: -11.375151634216309
    5. '   ' → logprob: -13.250151634216309
    6. '.' → logprob: -13.375151634216309
    7. ' :
' → logprob: -16.250152587890625
    8. '):' → logprob: -16.250152587890625
    9. ')' → logprob: -16.750152587890625
    10. ';' → logprob: -16.875152587890625

Token 137: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.022729724645614624
    2. ':' → logprob: -4.022729873657227
    3. ' elif' → logprob: -5.522729873657227
    4. 'else' → logprob: -8.147729873657227
    5. ':
' → logprob: -8.897729873657227
    6. '   ' → logprob: -9.522729873657227
    7. '```' → logprob: -11.272729873657227
    8. 'el' → logprob: -11.272729873657227
    9. 'if' → logprob: -11.522729873657227
    10. '
' → logprob: -11.647729873657227

Token 138: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0009084834600798786
    2. 'n' → logprob: -7.125908374786377
    3. ' ' → logprob: -9.750908851623535
    4. ' ' → logprob: -10.000908851623535
    5. '	n' → logprob: -15.500908851623535
    6. ' (' → logprob: -15.625908851623535
    7. '  ' → logprob: -17.12590789794922
    8. ' ' → logprob: -17.37590789794922
    9. ' \(' → logprob: -17.75090789794922
    10. '(n' → logprob: -18.00090789794922

Token 139: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020566998049616814
    2. '==' → logprob: -3.895566940307617
    3. ' ' → logprob: -10.770566940307617
    4. ' ' → logprob: -13.270566940307617
    5. '=' → logprob: -14.270566940307617
    6. '%' → logprob: -15.020566940307617
    7. ' =' → logprob: -15.395566940307617
    8. ')' → logprob: -16.020566940307617
    9. '```' → logprob: -16.020566940307617
    10. '3' → logprob: -16.270566940307617

Token 140: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42870569229125977
    2. '3' → logprob: -1.0537056922912598
    3. ' ' → logprob: -12.428705215454102
    4. '```' → logprob: -14.803705215454102
    5. '<|end|>' → logprob: -15.928705215454102
    6. '1' → logprob: -16.8662052154541
    7. ' 
' → logprob: -16.9287052154541
    8. '0' → logprob: -16.9912052154541
    9. '"' → logprob: -16.9912052154541
    10. '4' → logprob: -17.2412052154541

Token 141: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '4' → logprob: -16.87537956237793
    4. '```' → logprob: -17.25037956237793
    5. '"' → logprob: -17.31287956237793
    6. '2' → logprob: -17.50037956237793
    7. '1' → logprob: -17.62537956237793
    8. '۳' → logprob: -17.93787956237793
    9. '<|end|>' → logprob: -18.06287956237793
    10. '`' → logprob: -18.25037956237793

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008639270439743996
    2. ':
' → logprob: -4.758639335632324
    3. ' :' → logprob: -10.758639335632324
    4. ' :
' → logprob: -13.258639335632324
    5. ':

' → logprob: -14.133639335632324
    6. ':
' → logprob: -14.633639335632324
    7. '   ' → logprob: -15.133639335632324
    8. '):' → logprob: -16.258638381958008
    9. 'print' → logprob: -16.383638381958008
    10. '=' → logprob: -17.008638381958008

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4471032917499542
    2. ':' → logprob: -1.0721032619476318
    3. 'print' → logprob: -4.572103500366211
    4. ':
' → logprob: -5.072103500366211
    5. ' print' → logprob: -6.572103500366211
    6. ' :' → logprob: -9.197103500366211
    7. '
' → logprob: -10.697103500366211
    8. '	print' → logprob: -10.697103500366211
    9. ' :
' → logprob: -11.322103500366211
    10. '    
' → logprob: -11.322103500366211

Token 144: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002903658663854003
    2. '   ' → logprob: -5.877903461456299
    3. ' print' → logprob: -9.377903938293457
    4. '#' (adapté à ' #') → logprob: -12.627903938293457
    5. '```' → logprob: -13.252903938293457
    6. '  ' → logprob: -13.502903938293457
    7. '	print' → logprob: -13.502903938293457
    8. '
' → logprob: -13.502903938293457
    9. ' ' → logprob: -13.627903938293457
    10. 'Yes' → logprob: -14.127903938293457

Token 145: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003996596205979586
    2. ' print' → logprob: -5.8789963722229
    3. 'Yes' → logprob: -7.1289963722229
    4. '   ' → logprob: -9.253996849060059
    5. 'No' → logprob: -9.378996849060059
    6. 'pr' → logprob: -9.753996849060059
    7. ' ' → logprob: -10.378996849060059
    8. 'Print' → logprob: -11.003996849060059
    9. ' Yes' → logprob: -11.003996849060059
    10. '  ' → logprob: -11.128996849060059

Token 146: 'icher' (ID: 13617)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7254324555397034
    2. 'icher' → logprob: -1.2254323959350586
    3. 'er' → logprob: -2.2254323959350586
    4. '   ' → logprob: -2.6004323959350586
    5. 'acer' → logprob: -4.725432395935059
    6. ' print' → logprob: -5.225432395935059
    7. 'iler' → logprob: -5.600432395935059
    8. 'érer' → logprob: -5.975432395935059
    9. 'ichier' → logprob: -6.100432395935059
    10. 'iche' → logprob: -6.100432395935059

Token 147: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.43816250562667847
    2. '"No' → logprob: -1.1881625652313232
    3. 'Yes' → logprob: -3.4381625652313232
    4. ' "' → logprob: -5.063162326812744
    5. 'No' → logprob: -5.188162326812744
    6. ' Yes' → logprob: -5.938162326812744
    7. ' No' → logprob: -7.188162326812744
    8. '("' → logprob: -7.938162326812744
    9. ''' → logprob: -7.938162326812744
    10. 'print' → logprob: -8.063162803649902

Token 148: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.01404468435794115
    2. 'No' → logprob: -4.514044761657715
    3. 'Ye' → logprob: -6.139044761657715
    4. '"' → logprob: -7.389044761657715
    5. '```' → logprob: -9.639044761657715
    6. 'YES' → logprob: -10.014044761657715
    7. '"No' → logprob: -10.514044761657715
    8. '"""' → logprob: -10.639044761657715
    9. 'yes' → logprob: -11.514044761657715
    10. ' Yes' → logprob: -12.139044761657715

Token 149: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.42917731404304504
    2. '")' → logprob: -1.0541772842407227
    3. '<|end|>' → logprob: -7.804177284240723
    4. '"""' → logprob: -11.054177284240723
    5. '\n' → logprob: -11.554177284240723
    6. ')' → logprob: -12.054177284240723
    7. '",' → logprob: -12.429177284240723
    8. ' ")' → logprob: -12.679177284240723
    9. '```' → logprob: -12.679177284240723
    10. '");' → logprob: -12.679177284240723

Token 150: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' ind' (ID: 1383)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.0004911953583359718
    2. 'iqu' → logprob: -7.875491142272949
    3. 'ique' → logprob: -10.12549114227295
    4. 'iquant' → logprob: -11.25049114227295
    5. 'i' → logprob: -11.50049114227295
    6. 'iq' → logprob: -11.75049114227295
    7. 'quer' → logprob: -12.00049114227295
    8. 'di' → logprob: -12.25049114227295
    9. 'iqué' → logprob: -12.50049114227295
    10. 'd' → logprob: -12.62549114227295

Token 153: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5518040060997009
    2. ' the' → logprob: -2.5518040657043457
    3. '"' → logprob: -2.8018040657043457
    4. '<|end|>' → logprob: -2.8018040657043457
    5. ' "' → logprob: -3.0518040657043457
    6. ' ' → logprob: -3.5518040657043457
    7. ' le' → logprob: -3.6768040657043457
    8. 'n' → logprob: -3.9268040657043457
    9. ' l' → logprob: -4.301804065704346
    10. ' n' → logprob: -4.301804065704346

Token 155: ' condition' (ID: 7060)
  Prédit: ' condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.7080405950546265
    2. 'condition' → logprob: -0.7080405950546265
    3. ' réponse' → logprob: -4.958040714263916
    4. 'cond' → logprob: -5.333040714263916
    5. 'ré' → logprob: -7.208040714263916
    6. ' solution' → logprob: -8.145540237426758
    7. '#' → logprob: -8.208040237426758
    8. 'conditions' → logprob: -9.333040237426758
    9. ' answer' → logprob: -9.395540237426758
    10. 'solution' → logprob: -9.395540237426758

Token 156: ' est' (ID: 893)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.8164764642715454
    2. ' est' → logprob: -1.1914764642715454
    3. ' is' → logprob: -1.8164764642715454
    4. 'du' → logprob: -3.941476345062256
    5. ' de' → logprob: -4.316476345062256
    6. 's' → logprob: -4.566476345062256
    7. ' ' → logprob: -5.066476345062256
    8. '<|end|>' → logprob: -5.066476345062256
    9. ' of' → logprob: -5.191476345062256
    10. ' "' → logprob: -5.566476345062256

Token 157: ' satis' (ID: 56317)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09546598792076111
    2. ' satis' → logprob: -2.845465898513794
    3. ' satisf' → logprob: -3.845465898513794
    4. ' rempl' → logprob: -5.345466136932373
    5. ' satisfait' → logprob: -6.345466136932373
    6. ' respect' → logprob: -7.157966136932373
    7. 'sat' → logprob: -7.407966136932373
    8. ' satisfied' → logprob: -7.532966136932373
    9. 'respect' → logprob: -7.907966136932373
    10. '
' → logprob: -7.907966136932373

Token 158: 'faite' (ID: 69848)
  Prédit: 'faite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.019739709794521332
    2. 'f' → logprob: -4.144739627838135
    3. 'fa' → logprob: -6.644739627838135
    4. 's' → logprob: -8.019740104675293
    5. 'fait' → logprob: -8.644740104675293
    6. 'te' → logprob: -8.769740104675293
    7. 'nte' → logprob: -8.894740104675293
    8. 'fi' → logprob: -9.144740104675293
    9. '#' → logprob: -9.144740104675293
    10. '1' → logprob: -9.144740104675293

Token 159: ' pour' (ID: 1930)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12988708913326263
    2. '   ' → logprob: -2.754887104034424
    3. '("' → logprob: -3.379887104034424
    4. '()' → logprob: -4.504887104034424
    5. ')' → logprob: -5.379887104034424
    6. '"' → logprob: -5.504887104034424
    7. 'print' → logprob: -6.754887104034424
    8. '("")' → logprob: -7.004887104034424
    9. '<|end|>' → logprob: -7.379887104034424
    10. '(' → logprob: -8.004886627197266

Token 160: ' n' (ID: 297)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.44205406308174133
    2. ' cette' → logprob: -1.192054033279419
    3. ' cet' → logprob: -4.192054271697998
    4. ' this' → logprob: -4.442054271697998
    5. ' n' → logprob: -4.817054271697998
    6. 'c' → logprob: -5.442054271697998
    7. ' ' → logprob: -5.567054271697998
    8. 'cet' → logprob: -6.192054271697998
    9. 'ce' → logprob: -6.317054271697998
    10. 'n' → logprob: -6.442054271697998

Token 161: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43778276443481445
    2. '==' → logprob: -1.1877827644348145
    3. '=' → logprob: -3.3127827644348145
    4. ' =' → logprob: -4.5627827644348145
    5. '<|end|>' → logprob: -6.6877827644348145
    6. ' ' → logprob: -6.8127827644348145
    7. '3' → logprob: -9.187782287597656
    8. ')' → logprob: -9.937782287597656
    9. '%' → logprob: -10.312782287597656
    10. '=="' → logprob: -10.687782287597656

Token 162: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17975258827209473
    2. '3' → logprob: -1.8047525882720947
    3. ' ' → logprob: -12.429752349853516
    4. '"' → logprob: -13.429752349853516
    5. ' "' → logprob: -13.929752349853516
    6. ' n' → logprob: -14.929752349853516
    7. 'n' → logprob: -14.929752349853516
    8. '  ' → logprob: -15.304752349853516
    9. '```' → logprob: -15.554752349853516
    10. 'Yes' → logprob: -16.867252349853516

Token 163: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16023235023021698
    2. ' ' → logprob: -1.9102323055267334
    3. '"' → logprob: -12.285232543945312
    4. ' ' → logprob: -13.285232543945312
    5. '```' → logprob: -14.785232543945312
    6. ' "' → logprob: -15.535232543945312
    7. 'n' → logprob: -15.722732543945312
    8. '")' → logprob: -15.722732543945312
    9. ' n' → logprob: -16.160232543945312
    10. '1' → logprob: -16.160232543945312

Token 164: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5479585528373718
    2. '")' → logprob: -1.2979586124420166
    3. ')' → logprob: -1.9229586124420166
    4. 'print' → logprob: -7.0479583740234375
    5. '
' → logprob: -7.7979583740234375
    6. '"' → logprob: -8.422958374023438
    7. '  ' → logprob: -8.547958374023438
    8. '<|end|>' → logprob: -8.672958374023438
    9. ' ")' → logprob: -9.172958374023438
    10. ' print' → logprob: -9.297958374023438

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004226558841764927
    2. 'print' → logprob: -5.7542266845703125
    3. '
' → logprob: -7.7542266845703125
    4. ')' → logprob: -7.8792266845703125
    5. ' print' → logprob: -9.004226684570312
    6. '<|end|>' → logprob: -10.129226684570312
    7. '")' → logprob: -10.504226684570312
    8. '  ' → logprob: -11.254226684570312
    9. ')
' → logprob: -11.379226684570312
    10. '```' → logprob: -12.004226684570312

Token 166: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5636155009269714
    2. '
' → logprob: -0.9386155009269714
    3. ' print' → logprob: -3.938615560531616
    4. '   ' → logprob: -3.938615560531616
    5. '  
' → logprob: -8.688615798950195
    6. '    
' → logprob: -8.813615798950195
    7. '<|end|>' → logprob: -9.063615798950195
    8. ')
' → logprob: -9.938615798950195
    9. '\n' → logprob: -10.313615798950195
    10. '```' → logprob: -10.438615798950195

Token 167: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00014001218369230628
    2. '(' → logprob: -8.875140190124512
    3. '(
' → logprob: -16.375139236450195
    4. '('' → logprob: -17.125139236450195
    5. '()' → logprob: -17.875139236450195
    6. '("")' → logprob: -18.125139236450195
    7. '(

' → logprob: -19.125139236450195
    8. '("("' → logprob: -19.375139236450195
    9. ' ("' → logprob: -19.750139236450195
    10. '"' → logprob: -19.875139236450195

Token 168: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.00024953833781182766
    2. 'No' → logprob: -8.500249862670898
    3. 'Ye' → logprob: -10.750249862670898
    4. '"' → logprob: -10.875249862670898
    5. ' Yes' → logprob: -13.125249862670898
    6. 'YES' → logprob: -13.500249862670898
    7. 'Y' → logprob: -14.000249862670898
    8. '")' → logprob: -14.625249862670898
    9. '"No' → logprob: -15.875249862670898
    10. '“Yes' → logprob: -15.875249862670898

Token 169: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00029279827140271664
    2. '"' → logprob: -8.875292778015137
    3. '")
' → logprob: -9.500292778015137
    4. ')' → logprob: -9.875292778015137
    5. '()' → logprob: -11.500292778015137
    6. 'else' → logprob: -12.750292778015137
    7. '#' → logprob: -13.250292778015137
    8. ')")' → logprob: -13.500292778015137
    9. '!")' → logprob: -13.875292778015137
    10. ' ")' → logprob: -13.875292778015137

Token 170: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9079151153564453
    2. 'elif' → logprob: -0.9079151153564453
    3. '<|end|>' → logprob: -1.7829151153564453
    4. ')' → logprob: -4.157915115356445
    5. '#' → logprob: -5.157915115356445
    6. '```' → logprob: -6.782915115356445
    7. ' else' → logprob: -6.907915115356445
    8. '<|end|>' → logprob: -6.907915115356445
    9. ' elif' → logprob: -8.907915115356445
    10. '
' → logprob: -9.407915115356445

Token 171: ' #' (ID: 1069)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4690397083759308
    2. 'else' → logprob: -1.0940396785736084
    3. ')' → logprob: -3.9690396785736084
    4. '   ' → logprob: -5.0940399169921875
    5. '#' (adapté à ' #') → logprob: -5.3440399169921875
    6. '
' → logprob: -6.5940399169921875
    7. 'print' → logprob: -6.8440399169921875
    8. ' ' → logprob: -6.8440399169921875
    9. '3' → logprob: -6.9690399169921875
    10. 'n' → logprob: -7.3440399169921875

Token 172: ' Bou' (ID: 33816)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4879237711429596
    2. 'exit' → logprob: -1.9879237413406372
    3. '   ' → logprob: -2.7379238605499268
    4. 'for' → logprob: -2.9879238605499268
    5. '1' → logprob: -3.7379238605499268
    6. '3' → logprob: -3.8629238605499268
    7. ' print' → logprob: -4.237923622131348
    8. ' ' → logprob: -4.362923622131348
    9. '0' → logprob: -4.487923622131348
    10. 'else' → logprob: -4.612923622131348

Token 173: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.01078664418309927
    2. 'for' → logprob: -5.510786533355713
    3. 'cles' → logprob: -6.135786533355713
    4. 'r' → logprob: -6.260786533355713
    5. '   ' → logprob: -7.510786533355713
    6. 'cler' → logprob: -7.510786533355713
    7. 'ch' → logprob: -7.760786533355713
    8. 'clé' → logprob: -8.010787010192871
    9. 'c' → logprob: -8.260787010192871
    10. 'k' → logprob: -8.635787010192871

Token 174: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3504845201969147
    2. 'for' → logprob: -1.3504844903945923
    3. ' ' → logprob: -3.725484609603882
    4. '(' → logprob: -5.475484371185303
    5. '
' → logprob: -5.850484371185303
    6. '   ' → logprob: -6.975484371185303
    7. '    ' → logprob: -6.975484371185303
    8. ':' → logprob: -7.225484371185303
    9. ' (' → logprob: -7.475484371185303
    10. '<|end|>' → logprob: -7.975484371185303

Token 175: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05808110907673836
    2. ' i' → logprob: -3.3080811500549316
    3. ' for' → logprob: -4.183081150054932
    4. 'for' → logprob: -6.308081150054932
    5. ' (' → logprob: -6.683081150054932
    6. ' n' → logprob: -7.683081150054932
    7. '  ' → logprob: -8.308080673217773
    8. '<|end|>' → logprob: -8.808080673217773
    9. '    ' → logprob: -8.933080673217773
    10. 'i' → logprob: -9.058080673217773

Token 176: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3370025157928467
    2. ' range' → logprob: -1.7120025157928467
    3. ' _' → logprob: -3.3370025157928467
    4. 'i' → logprob: -3.4620025157928467
    5. ' ' → logprob: -4.212002754211426
    6. '_' → logprob: -4.462002754211426
    7. 'range' → logprob: -4.962002754211426
    8. '  ' → logprob: -7.087002754211426
    9. ' a' → logprob: -7.212002754211426
    10. '1' → logprob: -7.337002754211426

Token 177: ' variable' (ID: 11076)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08288010954856873
    2. 'range' → logprob: -2.7078800201416016
    3. 'r' → logprob: -5.582880020141602
    4. ' for' → logprob: -6.207880020141602
    5. 'for' → logprob: -6.957880020141602
    6. ' ' → logprob: -6.957880020141602
    7. ')' → logprob: -7.645380020141602
    8. ' space' → logprob: -7.770380020141602
    9. ' in' → logprob: -8.145380020141602
    10. ' r' → logprob: -8.207880020141602

Token 178: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22109319269657135
    2. ' ' → logprob: -2.09609317779541
    3. 'i' → logprob: -2.84609317779541
    4. ' _' → logprob: -4.72109317779541
    5. '_' → logprob: -4.84609317779541
    6. ' ' → logprob: -8.97109317779541
    7. '  ' → logprob: -9.34609317779541
    8. ' ‌' → logprob: -9.34609317779541
    9. '	i' → logprob: -10.09609317779541
    10. 'space' → logprob: -10.47109317779541

Token 179: ' prenant' (ID: 140375)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08074812591075897
    2. ' ' → logprob: -2.8307480812072754
    3. 'in' → logprob: -4.080748081207275
    4. ' i' → logprob: -6.955748081207275
    5. ' for' → logprob: -8.330748558044434
    6. '  ' → logprob: -9.080748558044434
    7. ' =' → logprob: -9.580748558044434
    8. ',' → logprob: -9.705748558044434
    9. ' range' → logprob: -10.080748558044434
    10. 'range' → logprob: -10.330748558044434

Token 180: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' valeurs' (ID: 73668)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.889102578163147
    2. ' valeurs' → logprob: -1.139102578163147
    3. 'val' → logprob: -2.0141024589538574
    4. 'values' → logprob: -2.6391024589538574
    5. ' val' → logprob: -3.2641024589538574
    6. ' ' → logprob: -4.264102458953857
    7. ' range' → logprob: -5.764102458953857
    8. ' valori' → logprob: -6.389102458953857
    9. ' valeur' → logprob: -6.514102458953857
    10. ' valores' → logprob: -6.764102458953857

Token 182: ' de' (ID: 334)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9826509356498718
    2. '1' → logprob: -1.7326509952545166
    3. ' ' → logprob: -1.8576509952545166
    4. ' de' → logprob: -1.9826509952545166
    5. ' in' → logprob: -2.8576509952545166
    6. 'range' → logprob: -3.4826509952545166
    7. ' from' → logprob: -3.8576509952545166
    8. '3' → logprob: -4.3576507568359375
    9. '2' → logprob: -5.2326507568359375
    10. '0' → logprob: -5.3576507568359375

Token 183: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.19655363261699677
    2. ' ' → logprob: -2.3215537071228027
    3. 'range' → logprob: -3.0715537071228027
    4. '1' → logprob: -3.4465537071228027
    5. '2' → logprob: -6.571553707122803
    6. '0' → logprob: -7.821553707122803
    7. '3' → logprob: -8.821553230285645
    8. '	range' → logprob: -10.571553230285645
    9. '_' → logprob: -10.946553230285645
    10. ' [' → logprob: -10.946553230285645

Token 184: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2047947645187378
    2. '0' → logprob: -2.0797948837280273
    3. 'range' → logprob: -3.4547948837280273
    4. ' ' → logprob: -4.329794883728027
    5. '2' → logprob: -4.579794883728027
    6. ' range' → logprob: -5.329794883728027
    7. '3' → logprob: -8.454794883728027
    8. '[' → logprob: -10.642294883728027
    9. '4' → logprob: -11.579794883728027
    10. '"' → logprob: -11.579794883728027

Token 185: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15798906981945038
    2. ' to' → logprob: -2.157989025115967
    3. ' à' → logprob: -4.282989025115967
    4. ',' → logprob: -5.157989025115967
    5. '<|end|>' → logprob: -5.532989025115967
    6. ' ,' → logprob: -5.782989025115967
    7. 'to' → logprob: -6.157989025115967
    8. ' range' → logprob: -7.282989025115967
    9. 'range' → logprob: -8.282989501953125
    10. ' in' → logprob: -8.282989501953125

Token 186: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5040160417556763
    2. '2' → logprob: -1.2540160417556763
    3. '1' → logprob: -2.2540159225463867
    4. '3' → logprob: -6.004015922546387
    5. ' n' → logprob: -6.629015922546387
    6. '4' → logprob: -7.129015922546387
    7. 'n' → logprob: -7.629015922546387
    8. '5' → logprob: -8.504015922546387
    9. '6' → logprob: -9.879015922546387
    10. '9' → logprob: -10.004015922546387

Token 187: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23629526793956757
    2. '1' → logprob: -1.861295223236084
    3. 'n' → logprob: -3.986295223236084
    4. ' ' → logprob: -3.986295223236084
    5. '3' → logprob: -4.736295223236084
    6. '0' → logprob: -5.486295223236084
    7. '4' → logprob: -6.111295223236084
    8. ' n' → logprob: -6.486295223236084
    9. '9' → logprob: -8.111295700073242
    10. '5' → logprob: -8.111295700073242

Token 188: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00566816795617342
    2. ' :' → logprob: -5.5056681632995605
    3. ':
' → logprob: -7.3806681632995605
    4. 'for' → logprob: -7.7556681632995605
    5. ' for' → logprob: -8.005668640136719
    6. 'range' → logprob: -9.880668640136719
    7. ' in' → logprob: -10.130668640136719
    8. ' :
' → logprob: -10.255668640136719
    9. ',' → logprob: -10.755668640136719
    10. 'in' → logprob: -10.880668640136719

Token 189: 'c' (ID: 66)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1636137217283249
    2. ' range' → logprob: -2.538613796234131
    3. '4' → logprob: -3.663613796234131
    4. '5' → logprob: -3.913613796234131
    5. ' )' → logprob: -4.163613796234131
    6. 'range' → logprob: -5.538613796234131
    7. ')' → logprob: -5.788613796234131
    8. '   ' → logprob: -6.913613796234131
    9. '    ' → logprob: -7.163613796234131
    10. '  ' → logprob: -7.288613796234131

Token 190: ''est' (ID: 6616)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.8239112496376038
    2. '5' → logprob: -1.323911190032959
    3. 'range' → logprob: -2.073911190032959
    4. ' ' → logprob: -2.323911190032959
    5. ' range' → logprob: -2.948911190032959
    6. '3' → logprob: -5.323911190032959
    7. 'in' → logprob: -5.698911190032959
    8. '   ' → logprob: -6.323911190032959
    9. '9' → logprob: -6.823911190032959
    10. 'r' → logprob: -7.073911190032959

Token 191: '-à' (ID: 56297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23736481368541718
    2. '5' → logprob: -1.7373647689819336
    3. '4' → logprob: -3.9873647689819336
    4. ' )' → logprob: -5.862364768981934
    5. 'range' → logprob: -5.987364768981934
    6. '6' → logprob: -6.237364768981934
    7. 'n' → logprob: -6.487364768981934
    8. '```' → logprob: -6.924864768981934
    9. ' range' → logprob: -6.987364768981934
    10. ' n' → logprob: -7.049864768981934

Token 192: '-dire' (ID: 76064)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7339051365852356
    2. '5' → logprob: -1.6089050769805908
    3. 'range' → logprob: -1.7339050769805908
    4. ' range' → logprob: -2.108905076980591
    5. '3' → logprob: -4.48390531539917
    6. '1' → logprob: -5.98390531539917
    7. '6' → logprob: -6.35890531539917
    8. '10' → logprob: -6.48390531539917
    9. '9' → logprob: -6.48390531539917
    10. ' ' → logprob: -6.60890531539917

Token 193: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08976785838603973
    2. '4' → logprob: -3.2147679328918457
    3. '5' → logprob: -3.2147679328918457
    4. ' range' → logprob: -5.714767932891846
    5. 'range' → logprob: -7.339767932891846
    6. '    ' → logprob: -7.464767932891846
    7. '   ' → logprob: -7.964767932891846
    8. '3' → logprob: -8.339767456054688
    9. '  ' → logprob: -9.214767456054688
    10. '1' → logprob: -9.839767456054688

Token 194: '5' (ID: 20)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0601623058319092
    2. '4' → logprob: -1.1851623058319092
    3. '5' → logprob: -1.1851623058319092
    4. ' range' → logprob: -3.935162305831909
    5. 'range' → logprob: -4.060162544250488
    6. '   ' → logprob: -5.435162544250488
    7. '    ' → logprob: -7.560162544250488
    8. '3' → logprob: -9.435162544250488
    9. '  ' → logprob: -9.622662544250488
    10. ')' → logprob: -9.997662544250488

Token 195: ' it' (ID: 480)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.48495247960090637
    2. '):' → logprob: -1.109952449798584
    3. ' )' → logprob: -3.484952449798584
    4. ')' → logprob: -4.109952449798584
    5. ' :' → logprob: -5.359952449798584
    6. ' ):
' → logprob: -7.234952449798584
    7. ':' → logprob: -7.484952449798584
    8. ' ' → logprob: -7.484952449798584
    9. '):
' → logprob: -7.609952449798584
    10. ' range' → logprob: -8.234952926635742

Token 196: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.9906624555587769
    2. 'range' → logprob: -1.1156624555587769
    3. ' range' → logprob: -2.3656625747680664
    4. 'er' → logprob: -2.7406625747680664
    5. '   ' → logprob: -3.2406625747680664
    6. 'éra' → logprob: -3.7406625747680664
    7. 'ération' → logprob: -3.8656625747680664
    8. 'ranges' → logprob: -5.490662574768066
    9. 'érés' → logprob: -5.740662574768066
    10. 'érées' → logprob: -5.740662574768066

Token 197: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5251579880714417
    2. '):' → logprob: -1.5251579284667969
    3. ' :' → logprob: -2.025157928466797
    4. ' ):' → logprob: -2.900157928466797
    5. ')' → logprob: -6.025157928466797
    6. ' )' → logprob: -7.150157928466797
    7. '):
' → logprob: -8.775157928466797
    8. '():' → logprob: -8.900157928466797
    9. ' ):
' → logprob: -9.150157928466797
    10. ',' → logprob: -9.400157928466797

Token 198: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8050163984298706
    2. ' for' → logprob: -1.3050163984298706
    3. 'for' → logprob: -1.3050163984298706
    4. ':
' → logprob: -4.80501651763916
    5. '   ' → logprob: -6.30501651763916
    6. ' :' → logprob: -8.30501651763916
    7. '
' → logprob: -8.93001651763916
    8. ' :
' → logprob: -9.18001651763916
    9. '```' → logprob: -10.93001651763916
    10. '	for' → logprob: -11.55501651763916

Token 199: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5531091094017029
    2. 'for' (adapté à ' for') → logprob: -0.9281091094017029
    3. ':' → logprob: -4.178109169006348
    4. '   ' → logprob: -4.303109169006348
    5. ' :' → logprob: -8.678109169006348
    6. '    ' → logprob: -9.053109169006348
    7. '	for' → logprob: -9.428109169006348
    8. ':
' → logprob: -9.428109169006348
    9. ' ' → logprob: -9.928109169006348
    10. '
' → logprob: -10.178109169006348

Token 200: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0016011487459763885
    2. ' ' → logprob: -6.626601219177246
    3. 'i' → logprob: -8.376601219177246
    4. ' range' → logprob: -10.501601219177246
    5. ' ' → logprob: -12.501601219177246
    6. '	i' → logprob: -12.626601219177246
    7. ' _' → logprob: -12.626601219177246
    8. '  ' → logprob: -13.126601219177246
    9. '_' → logprob: -13.501601219177246
    10. ')' → logprob: -14.001601219177246

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016341092064976692
    2. 'in' → logprob: -4.266341209411621
    3. ' ' → logprob: -6.141341209411621
    4. ' i' → logprob: -12.141341209411621
    5. '  ' → logprob: -12.891341209411621
    6. ',' → logprob: -13.016341209411621
    7. 'range' → logprob: -13.266341209411621
    8. ')' → logprob: -13.391341209411621
    9. '	in' → logprob: -13.891341209411621
    10. '<|end|>' → logprob: -13.891341209411621

Token 202: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0008405959815718234
    2. 'range' → logprob: -7.250840663909912
    3. ' ' → logprob: -9.000840187072754
    4. '	range' → logprob: -12.250840187072754
    5. '  ' → logprob: -14.125840187072754
    6. '[' → logprob: -14.500840187072754
    7. ' xrange' → logprob: -15.375840187072754
    8. '(range' → logprob: -15.500840187072754
    9. ' ' → logprob: -15.875840187072754
    10. ' rang' → logprob: -16.37584114074707

Token 203: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. '5' → logprob: -13.500001907348633
    3. ' (' → logprob: -15.250001907348633
    4. '6' → logprob: -16.125001907348633
    5. '(
' → logprob: -16.250001907348633
    6. '4' → logprob: -16.500001907348633
    7. '3' → logprob: -17.875001907348633
    8. '((' → logprob: -17.875001907348633
    9. '()' → logprob: -18.375001907348633
    10. 's' → logprob: -18.375001907348633

Token 204: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00021915239631198347
    2. ' ' → logprob: -8.875219345092773
    3. '0' → logprob: -9.750219345092773
    4. '4' → logprob: -11.625219345092773
    5. '   ' → logprob: -12.875219345092773
    6. '3' → logprob: -13.000219345092773
    7. '(' → logprob: -13.000219345092773
    8. '6' → logprob: -13.562719345092773
    9. ')' → logprob: -13.937719345092773
    10. '1' → logprob: -14.187719345092773

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001680536544881761
    2. ' ):' → logprob: -6.876680374145508
    3. ')' → logprob: -8.251680374145508
    4. '):
' → logprob: -8.501680374145508
    5. ':' → logprob: -8.751680374145508
    6. '   ' → logprob: -11.876680374145508
    7. '():' → logprob: -13.001680374145508
    8. ',' → logprob: -13.126680374145508
    9. '*' → logprob: -13.251680374145508
    10. '+' → logprob: -13.501680374145508

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33232784271240234
    2. '   ' → logprob: -1.8323278427124023
    3. ':' → logprob: -2.2073278427124023
    4. '<|end|>' → logprob: -4.957327842712402
    5. ' :' → logprob: -6.457327842712402
    6. '    ' → logprob: -6.832327842712402
    7. ' ' → logprob: -7.582327842712402
    8. '	' → logprob: -7.957327842712402
    9. '    
' → logprob: -8.082327842712402
    10. '  ' → logprob: -8.582327842712402

Token 207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6010363101959229
    2. '       ' → logprob: -1.2260363101959229
    3. '    ' → logprob: -2.851036310195923
    4. ' print' → logprob: -3.351036310195923
    5. 'print' → logprob: -3.851036310195923
    6. '    
' → logprob: -3.976036310195923
    7. ' ' → logprob: -4.226036071777344
    8. ' 
' → logprob: -6.101036071777344
    9. '     
' → logprob: -6.101036071777344
    10. '        
' → logprob: -6.226036071777344

Token 208: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12396524846553802
    2. ' print' → logprob: -2.248965263366699
    3. 'for' → logprob: -5.373965263366699
    4. '   ' → logprob: -5.623965263366699
    5. 'if' → logprob: -6.623965263366699
    6. ' for' → logprob: -7.123965263366699
    7. ' ' → logprob: -8.2489652633667
    8. ' if' → logprob: -8.4989652633667
    9. '    ' → logprob: -9.7489652633667
    10. '#' → logprob: -10.2489652633667

Token 209: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.006984249223023653
    2. '   ' → logprob: -5.756984233856201
    3. 'iche' → logprob: -6.506984233856201
    4. '#' → logprob: -7.256984233856201
    5. 'cher' → logprob: -7.256984233856201
    6. 'ic' → logprob: -8.38198471069336
    7. '       ' → logprob: -8.50698471069336
    8. 'ichage' → logprob: -8.63198471069336
    9. 'ich' → logprob: -9.50698471069336
    10. '

' → logprob: -10.13198471069336

Token 210: ' deux' (ID: 10301)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.21676784753799438
    2. '(' → logprob: -1.7167677879333496
    3. '(i' → logprob: -5.09176778793335
    4. '("*' → logprob: -5.34176778793335
    5. '('' → logprob: -6.34176778793335
    6. '()' → logprob: -6.96676778793335
    7. '("")' → logprob: -7.46676778793335
    8. '("#' → logprob: -7.71676778793335
    9. '(
' → logprob: -9.216768264770508
    10. 'f' → logprob: -9.716768264770508

Token 211: ' nombres' (ID: 76205)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16204403340816498
    2. ' ' → logprob: -3.412044048309326
    3. ' "' → logprob: -3.537044048309326
    4. '("' → logprob: -4.037044048309326
    5. '(' → logprob: -4.912044048309326
    6. 'end' → logprob: -5.037044048309326
    7. '   ' → logprob: -5.037044048309326
    8. '(i' → logprob: -5.037044048309326
    9. '()' → logprob: -5.412044048309326
    10. ''' → logprob: -5.412044048309326

Token 212: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8889136910438538
    2. '()' → logprob: -1.138913631439209
    3. '(i' → logprob: -2.138913631439209
    4. '("' → logprob: -3.513913631439209
    5. ' ' → logprob: -3.763913631439209
    6. ' (' → logprob: -3.763913631439209
    7. ',' → logprob: -4.138913631439209
    8. '('' → logprob: -4.138913631439209
    9. ' ,' → logprob: -4.388913631439209
    10. '       ' → logprob: -5.013913631439209

Token 213: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7064153552055359
    2. ' i' → logprob: -0.9564153552055359
    3. '0' → logprob: -2.4564154148101807
    4. ' ' → logprob: -4.081415176391602
    5. '1' → logprob: -4.331415176391602
    6. '"' → logprob: -6.581415176391602
    7. '2' → logprob: -6.831415176391602
    8. '(i' → logprob: -6.956415176391602
    9. ' f' → logprob: -7.081415176391602
    10. '3' → logprob: -7.581415176391602

Token 214: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16350077092647552
    2. ' ,' → logprob: -2.0385007858276367
    3. '*' → logprob: -4.288500785827637
    4. ' *' → logprob: -6.288500785827637
    5. ',i' → logprob: -6.663500785827637
    6. '+' → logprob: -6.913500785827637
    7. ' ' → logprob: -7.038500785827637
    8. ',end' → logprob: -7.663500785827637
    9. '*i' → logprob: -7.663500785827637
    10. ' +' → logprob: -8.288500785827637

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05211727321147919
    2. ' ' → logprob: -3.302117347717285
    3. '2' → logprob: -4.427117347717285
    4. '3' → logprob: -7.302117347717285
    5. ' i' → logprob: -7.302117347717285
    6. 'i' → logprob: -7.927117347717285
    7. '4' → logprob: -9.427117347717285
    8. '0' → logprob: -10.302117347717285
    9. '7' → logprob: -10.302117347717285
    10. '  ' → logprob: -10.552117347717285

Token 216: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03072512336075306
    2. ' ,' → logprob: -3.5307252407073975
    3. ',end' → logprob: -7.405725002288818
    4. ',
' → logprob: -9.155725479125977
    5. ',i' → logprob: -9.530725479125977
    6. ')' → logprob: -10.405725479125977
    7. '   ' → logprob: -10.530725479125977
    8. ' ,
' → logprob: -10.655725479125977
    9. 'print' → logprob: -10.905725479125977
    10. 'end' → logprob: -11.280725479125977

Token 217: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5465155243873596
    2. 'i' → logprob: -0.9215155243873596
    3. ' ' → logprob: -4.921515464782715
    4. '"' → logprob: -5.171515464782715
    5. '5' → logprob: -6.046515464782715
    6. '2' → logprob: -6.421515464782715
    7. '(i' → logprob: -6.671515464782715
    8. ' n' → logprob: -6.796515464782715
    9. '3' → logprob: -7.046515464782715
    10. ' (' → logprob: -7.296515464782715

Token 218: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08099396526813507
    2. ' +' → logprob: -3.080993890762329
    3. ',' → logprob: -4.205994129180908
    4. ' ,' → logprob: -4.330994129180908
    5. ',i' → logprob: -6.455994129180908
    6. '+i' → logprob: -7.205994129180908
    7. ' i' → logprob: -8.20599365234375
    8. ' ' → logprob: -8.33099365234375
    9. ',end' → logprob: -8.70599365234375
    10. '-' → logprob: -8.83099365234375

Token 219: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.434398353099823
    2. '2' → logprob: -1.0593984127044678
    3. ' ' → logprob: -5.434398174285889
    4. '3' → logprob: -7.059398174285889
    5. '6' → logprob: -8.934398651123047
    6. '4' → logprob: -9.434398651123047
    7. '5' → logprob: -9.684398651123047
    8. '7' → logprob: -10.184398651123047
    9. 'i' → logprob: -10.434398651123047
    10. '32' → logprob: -10.684398651123047

Token 220: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1633097231388092
    2. '   ' → logprob: -2.5383098125457764
    3. ')' → logprob: -3.4133098125457764
    4. ' ,' → logprob: -4.163309574127197
    5. '       ' → logprob: -4.163309574127197
    6. 'print' → logprob: -6.038309574127197
    7. '()' → logprob: -6.788309574127197
    8. '    ' → logprob: -6.913309574127197
    9. ' )' → logprob: -7.163309574127197
    10. ' print' → logprob: -7.413309574127197

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18580813705921173
    2. ',' → logprob: -1.9358081817626953
    3. '   ' → logprob: -4.185808181762695
    4. 'print' → logprob: -5.810808181762695
    5. ' ,' → logprob: -5.810808181762695
    6. ' print' → logprob: -6.185808181762695
    7. ')' → logprob: -6.810808181762695
    8. '(' → logprob: -8.310808181762695
    9. '           ' → logprob: -9.310808181762695
    10. '    ' → logprob: -9.560808181762695

Token 222: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5166244506835938
    2. '       ' → logprob: -1.1416244506835938
    3. 'print' → logprob: -2.5166244506835938
    4. '   ' → logprob: -5.766624450683594
    5. ' ' → logprob: -9.516624450683594
    6. '    ' → logprob: -10.016624450683594
    7. '	print' → logprob: -10.016624450683594
    8. ' ' → logprob: -10.266624450683594
    9. ',' → logprob: -10.516624450683594
    10. '     ' → logprob: -11.016624450683594

Token 223: ' Ceci' (ID: 144699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07578504085540771
    2. ' print' → logprob: -3.3257851600646973
    3. 'print' → logprob: -3.3257851600646973
    4. '   ' → logprob: -7.075785160064697
    5. ' ' → logprob: -9.825784683227539
    6. ' ' → logprob: -9.950784683227539
    7. '    ' → logprob: -10.325784683227539
    8. ',' → logprob: -10.950784683227539
    9. '    ' → logprob: -10.950784683227539
    10. '	print' → logprob: -11.075784683227539

Token 224: ' gén' (ID: 15330)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3781903982162476
    2. 'print' → logprob: -1.6281903982162476
    3. ':' → logprob: -1.7531903982162476
    4. ')' → logprob: -2.253190517425537
    5. ' print' → logprob: -2.503190517425537
    6. '<|end|>' → logprob: -2.503190517425537
    7. '   ' → logprob: -3.128190517425537
    8. '       ' → logprob: -4.628190517425537
    9. ' ' → logprob: -4.628190517425537
    10. '    ' → logprob: -4.753190517425537

Token 225: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0008004573755897582
    2. 'ere' → logprob: -7.250800609588623
    3. 'èr' → logprob: -10.750800132751465
    4. 'f' → logprob: -11.000800132751465
    5. 'è' → logprob: -11.875800132751465
    6. 'er' → logprob: -12.125800132751465
    7. '#' → logprob: -12.375800132751465
    8. 'ére' → logprob: -12.750800132751465
    9. 'èrent' → logprob: -12.875800132751465
    10. 'r' → logprob: -12.875800132751465

Token 226: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23085059225559235
    2. ' ' → logprob: -2.9808506965637207
    3. '"' → logprob: -3.4808506965637207
    4. 'i' → logprob: -3.6058506965637207
    5. '(i' → logprob: -3.7308506965637207
    6. ' "' → logprob: -3.9808506965637207
    7. ' (' → logprob: -4.480850696563721
    8. ' f' → logprob: -4.605850696563721
    9. 'f' → logprob: -4.730850696563721
    10. ')' → logprob: -5.355850696563721

Token 227: ' p' (ID: 275)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.4991922974586487
    2. ' i' → logprob: -1.499192237854004
    3. ' ' → logprob: -2.749192237854004
    4. 'i' → logprob: -3.624192237854004
    5. ' nombres' → logprob: -4.374192237854004
    6. ' f' → logprob: -4.374192237854004
    7. '1' → logprob: -4.874192237854004
    8. ' (' → logprob: -4.999192237854004
    9. '"' → logprob: -5.124192237854004
    10. 'pairs' → logprob: -5.624192237854004

Token 228: 'aires' (ID: 8507)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.5107177862082608e-05
    2. 'print' → logprob: -11.500024795532227
    3. 'rin' → logprob: -12.250024795532227
    4. 'airs' → logprob: -13.375024795532227
    5. '#' → logprob: -13.375024795532227
    6. 'a' → logprob: -14.000024795532227
    7. '```' → logprob: -14.125024795532227
    8. ' r' → logprob: -14.125024795532227
    9. 'ri' → logprob: -14.250024795532227
    10. 'air' → logprob: -14.625024795532227

Token 229: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7318511009216309
    2. '()' → logprob: -1.6068511009216309
    3. ' (' → logprob: -1.9818511009216309
    4. '(' → logprob: -1.9818511009216309
    5. '(f' → logprob: -4.231851100921631
    6. ' ' → logprob: -4.856851100921631
    7. 'f' → logprob: -6.231851100921631
    8. ' ()' → logprob: -6.356851100921631
    9. '("' → logprob: -6.481851100921631
    10. ',' → logprob: -6.481851100921631

Token 230: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7359172701835632
    2. ' i' → logprob: -1.110917329788208
    3. '1' → logprob: -1.985917329788208
    4. '{i' → logprob: -3.985917329788208
    5. '(i' → logprob: -4.235917091369629
    6. ' ' → logprob: -4.360917091369629
    7. ')' → logprob: -5.485917091369629
    8. ' (' → logprob: -6.110917091369629
    9. '{' → logprob: -7.610917091369629
    10. '{}' → logprob: -7.860917091369629

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11675120890140533
    2. ' ,' → logprob: -2.241751194000244
    3. ' ' → logprob: -6.491751194000244
    4. ')' → logprob: -7.116751194000244
    5. ' ,
' → logprob: -7.366751194000244
    6. ' )' → logprob: -8.116751670837402
    7. '2' → logprob: -8.616751670837402
    8. ',
' → logprob: -8.741751670837402
    9. '1' → logprob: -8.866751670837402
    10. '+' → logprob: -9.366751670837402

Token 232: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.36965060234069824
    2. ' ' → logprob: -1.8696506023406982
    3. ' i' → logprob: -2.2446506023406982
    4. 'i' → logprob: -3.1196506023406982
    5. ')' → logprob: -5.869650840759277
    6. ' )' → logprob: -6.744650840759277
    7. '3' → logprob: -8.994650840759277
    8. '(i' → logprob: -9.119650840759277
    9. '   ' → logprob: -9.244650840759277
    10. 'end' → logprob: -9.869650840759277

Token 233: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006803844007663429
    2. '),' → logprob: -8.000679969787598
    3. ',' → logprob: -8.625679969787598
    4. ' )' → logprob: -8.875679969787598
    5. '")' → logprob: -11.625679969787598
    6. ')
' → logprob: -11.750679969787598
    7. ')")' → logprob: -13.375679969787598
    8. 'print' → logprob: -13.750679969787598
    9. '):' → logprob: -13.750679969787598
    10. '   ' → logprob: -14.375679969787598

Token 234: ' (' (ID: 350)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.9556888937950134
    2. 'end' → logprob: -1.2056889533996582
    3. ' (' → logprob: -1.5806889533996582
    4. '(' → logprob: -2.955688953399658
    5. ' ' → logprob: -3.580688953399658
    6. '       ' → logprob: -4.705688953399658
    7. '2' → logprob: -4.955688953399658
    8. ')' → logprob: -5.955688953399658
    9. ' i' → logprob: -6.330688953399658
    10. '    ' → logprob: -6.330688953399658

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10832579433917999
    2. '3' → logprob: -2.733325719833374
    3. ' ' → logprob: -3.358325719833374
    4. 'i' → logprob: -6.608325958251953
    5. ' i' → logprob: -6.983325958251953
    6. '1' → logprob: -7.483325958251953
    7. '   ' → logprob: -11.733325958251953
    8. ')' → logprob: -11.983325958251953
    9. '  ' → logprob: -12.483325958251953
    10. ',' → logprob: -13.233325958251953

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009662496158853173
    2. ' ,' → logprob: -7.0009660720825195
    3. '3' → logprob: -10.00096607208252
    4. ',
' → logprob: -12.50096607208252
    5. '+' → logprob: -12.87596607208252
    6. ')' → logprob: -14.00096607208252
    7. '```' → logprob: -15.00096607208252
    8. '),' → logprob: -15.12596607208252
    9. '   ' → logprob: -15.12596607208252
    10. ' ' → logprob: -15.37596607208252

Token 237: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.016034485772252083
    2. ' ' → logprob: -4.1410346031188965
    3. ' ' → logprob: -16.891035079956055
    4. '```' → logprob: -17.016035079956055
    5. ')' → logprob: -17.391035079956055
    6. ' 
' → logprob: -17.641035079956055
    7. ',' → logprob: -18.016035079956055
    8. '  
' → logprob: -18.641035079956055
    9. '  ' → logprob: -19.016035079956055
    10. ' )' → logprob: -19.203535079956055

Token 238: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10071608424186707
    2. ')' → logprob: -2.3507161140441895
    3. ',' → logprob: -8.475715637207031
    4. 'print' → logprob: -8.975715637207031
    5. ' ),' → logprob: -9.850715637207031
    6. ')
' → logprob: -9.850715637207031
    7. '),
' → logprob: -10.100715637207031
    8. '),(' → logprob: -11.725715637207031
    9. '   ' → logprob: -12.350715637207031
    10. ' )' → logprob: -12.725715637207031

Token 239: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03495816886425018
    2. '(' → logprob: -3.4099581241607666
    3. 'end' → logprob: -7.784958362579346
    4. ' ' → logprob: -8.284957885742188
    5. ' end' → logprob: -8.659957885742188
    6. ')' → logprob: -8.784957885742188
    7. ',' → logprob: -9.159957885742188
    8. '       ' → logprob: -9.659957885742188
    9. ' ,' → logprob: -10.534957885742188
    10. '(end' → logprob: -11.034957885742188

Token 240: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007074329070746899
    2. ' ' → logprob: -5.007074356079102
    3. ' i' → logprob: -9.257074356079102
    4. ' (' → logprob: -9.382074356079102
    5. ')' → logprob: -9.507074356079102
    6. ',' → logprob: -10.132074356079102
    7. 'i' → logprob: -10.632074356079102
    8. ' ,' → logprob: -11.507074356079102
    9. ' )' → logprob: -11.632074356079102
    10. '(' → logprob: -12.132074356079102

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032384360674768686
    2. ' ,' → logprob: -5.753238201141357
    3. '4' → logprob: -9.878238677978516
    4. '+' → logprob: -13.003238677978516
    5. ',
' → logprob: -13.503238677978516
    6. ')' → logprob: -13.878238677978516
    7. '3' → logprob: -14.128238677978516
    8. '   ' → logprob: -14.378238677978516
    9. '```' → logprob: -14.378238677978516
    10. '),' → logprob: -14.628238677978516

Token 242: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00091217877343297
    2. ' ' → logprob: -7.000912189483643
    3. ')' → logprob: -15.500911712646484
    4. '<|end|>' → logprob: -15.500911712646484
    5. '```' → logprob: -16.375911712646484
    6. '5' → logprob: -16.625911712646484
    7. '  ' → logprob: -16.750911712646484
    8. '3' → logprob: -16.875911712646484
    9. '1' → logprob: -17.375911712646484
    10. '2' → logprob: -17.375911712646484

Token 243: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004917073994874954
    2. ')' → logprob: -5.379917144775391
    3. ',' → logprob: -8.50491714477539
    4. ' ),' → logprob: -9.75491714477539
    5. '),(' → logprob: -11.12991714477539
    6. '),
' → logprob: -11.37991714477539
    7. '   ' → logprob: -13.00491714477539
    8. 'print' → logprob: -13.12991714477539
    9. '"),' → logprob: -13.62991714477539
    10. ')
' → logprob: -14.12991714477539

Token 244: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02667134255170822
    2. '(' → logprob: -3.6516714096069336
    3. ' ' → logprob: -9.651671409606934
    4. ' print' → logprob: -9.901671409606934
    5. ' end' → logprob: -9.901671409606934
    6. 'print' → logprob: -9.901671409606934
    7. 'end' → logprob: -9.901671409606934
    8. ',' → logprob: -10.776671409606934
    9. '       ' → logprob: -11.026671409606934
    10. '4' → logprob: -11.526671409606934

Token 245: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0037121959030628204
    2. ' ' → logprob: -5.628712177276611
    3. ' i' → logprob: -10.37871265411377
    4. ')' → logprob: -10.50371265411377
    5. 'i' → logprob: -10.62871265411377
    6. ',' → logprob: -11.00371265411377
    7. ' )' → logprob: -12.50371265411377
    8. ' ,' → logprob: -13.00371265411377
    9. '3' → logprob: -13.25371265411377
    10. '2' → logprob: -13.62871265411377

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007211300544440746
    2. ' ,' → logprob: -7.250720977783203
    3. '5' → logprob: -11.875720977783203
    4. ',
' → logprob: -13.750720977783203
    5. '   ' → logprob: -14.375720977783203
    6. '```' → logprob: -14.750720977783203
    7. ')' → logprob: -14.875720977783203
    8. '1' → logprob: -15.000720977783203
    9. ' ' → logprob: -15.250720977783203
    10. '6' → logprob: -15.250720977783203

Token 247: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -17.375261306762695
    4. '  ' → logprob: -18.500261306762695
    5. '   ' → logprob: -18.750261306762695
    6. ')' → logprob: -19.375261306762695
    7. ' )' → logprob: -19.750261306762695
    8. ' 
' → logprob: -20.687761306762695
    9. 'end' → logprob: -20.812761306762695
    10. '3' → logprob: -21.062761306762695

Token 248: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3505052626132965
    2. ')' → logprob: -1.2255052328109741
    3. ',' → logprob: -6.850505352020264
    4. 'print' → logprob: -7.850505352020264
    5. '):' → logprob: -8.975504875183105
    6. '"),' → logprob: -9.225504875183105
    7. '   ' → logprob: -9.225504875183105
    8. '")' → logprob: -9.475504875183105
    9. ')
' → logprob: -9.600504875183105
    10. ' ),' → logprob: -10.100504875183105

Token 249: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06997112184762955
    2. '(' → logprob: -2.6949710845947266
    3. '<|end|>' → logprob: -11.944971084594727
    4. 'print' → logprob: -12.069971084594727
    5. ' ' → logprob: -12.069971084594727
    6. '       ' → logprob: -12.444971084594727
    7. ' print' → logprob: -12.819971084594727
    8. 'end' → logprob: -13.194971084594727
    9. ')' → logprob: -13.694971084594727
    10. '('' → logprob: -13.819971084594727

Token 250: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.01416738796979189
    2. ' ' → logprob: -4.264167308807373
    3. ' (' → logprob: -13.764167785644531
    4. ')' → logprob: -14.514167785644531
    5. '(' → logprob: -14.951667785644531
    6. ' 
' → logprob: -15.076667785644531
    7. '  
' → logprob: -15.201667785644531
    8. '  ' → logprob: -15.326667785644531
    9. ' ' → logprob: -15.639167785644531
    10. ' )' → logprob: -16.07666778564453

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014776040916331112
    2. '6' → logprob: -9.125147819519043
    3. ' ,' → logprob: -10.250147819519043
    4. ')' → logprob: -13.125147819519043
    5. ',)' → logprob: -14.500147819519043
    6. ',
' → logprob: -15.125147819519043
    7. '),' → logprob: -16.125146865844727
    8. ',

' → logprob: -16.375146865844727
    9. '```' → logprob: -16.625146865844727
    10. '5' → logprob: -16.875146865844727

Token 252: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '5' → logprob: -17.375085830688477
    4. '<|end|>' → logprob: -18.750085830688477
    5. 'i' → logprob: -18.875085830688477
    6. '```' → logprob: -19.750085830688477
    7. '' → logprob: -19.812585830688477
    8. ')' → logprob: -20.062585830688477
    9. '7' → logprob: -20.125085830688477
    10. '٦' → logprob: -20.375085830688477

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11435896158218384
    2. '")' → logprob: -2.739358901977539
    3. '):' → logprob: -3.489358901977539
    4. ')")' → logprob: -4.489358901977539
    5. '"):' → logprob: -7.489358901977539
    6. ')
' → logprob: -7.739358901977539
    7. '   ' → logprob: -8.614358901977539
    8. '):
' → logprob: -8.739358901977539
    9. ')"' → logprob: -9.239358901977539
    10. '")
' → logprob: -9.239358901977539

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006845565512776375
    2. '   ' → logprob: -7.62568473815918
    3. ' print' → logprob: -9.62568473815918
    4. ':' → logprob: -9.75068473815918
    5. 'print' → logprob: -10.25068473815918
    6. ',' → logprob: -11.00068473815918
    7. '           ' → logprob: -13.00068473815918
    8. ')' → logprob: -13.12568473815918
    9. '```' → logprob: -13.12568473815918
    10. '     ' → logprob: -13.25068473815918

Token 255: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33007994294166565
    2. '   ' → logprob: -1.3300799131393433
    3. 'print' (adapté à ' print') → logprob: -4.580080032348633
    4. ' print' → logprob: -5.080080032348633
    5. '    ' → logprob: -10.080080032348633
    6. ' ' → logprob: -10.205080032348633
    7. '   ' → logprob: -10.205080032348633
    8. '           ' → logprob: -11.205080032348633
    9. '    ' → logprob: -11.330080032348633
    10. '     ' → logprob: -11.705080032348633

Token 256: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.0033853515051305e-05
    2. '(' → logprob: -10.000060081481934
    3. '((' → logprob: -11.625060081481934
    4. '(f' → logprob: -12.125060081481934
    5. '("' → logprob: -15.625060081481934
    6. ' (' → logprob: -16.250059127807617
    7. '("",' → logprob: -19.750059127807617
    8. 'f' → logprob: -19.875059127807617
    9. 'i' → logprob: -20.000059127807617
    10. '(x' → logprob: -20.000059127807617

Token 257: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006527314893901348
    2. ' +' → logprob: -5.131527423858643
    3. ',' → logprob: -7.631527423858643
    4. ')' → logprob: -10.131526947021484
    5. ' ,' → logprob: -10.631526947021484
    6. '+i' → logprob: -11.256526947021484
    7. ')+' → logprob: -11.381526947021484
    8. '+,' → logprob: -11.756526947021484
    9. '   ' → logprob: -12.131526947021484
    10. ' ' → logprob: -12.506526947021484

Token 258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '<|end|>' → logprob: -16.750139236450195
    4. '  ' → logprob: -17.750139236450195
    5. '   ' → logprob: -17.750139236450195
    6. '```' → logprob: -17.875139236450195
    7. '2' → logprob: -19.312639236450195
    8. '`' → logprob: -19.500139236450195
    9. '１' → logprob: -19.812639236450195
    10. '
' → logprob: -20.000139236450195

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -17.000030517578125
    4. '   ' → logprob: -17.750030517578125
    5. '  ' → logprob: -17.812530517578125
    6. '2' → logprob: -17.812530517578125
    7. '```' → logprob: -18.062530517578125
    8. '`' → logprob: -18.875030517578125
    9. '
' → logprob: -18.937530517578125
    10. '0' → logprob: -19.125030517578125

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018429221585392952
    2. ',i' → logprob: -4.018429279327393
    3. ' ,' → logprob: -8.393428802490234
    4. '(i' → logprob: -10.643428802490234
    5. 'i' → logprob: -11.393428802490234
    6. ',end' → logprob: -11.893428802490234
    7. 'print' → logprob: -12.518428802490234
    8. ',
' → logprob: -13.268428802490234
    9. ' i' → logprob: -13.393428802490234
    10. '   ' → logprob: -14.268428802490234

Token 261: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31326669454574585
    2. ' i' → logprob: -1.3132667541503906
    3. ' ' → logprob: -12.56326675415039
    4. ' 
' → logprob: -14.93826675415039
    5. '    ' → logprob: -15.56326675415039
    6. '(i' → logprob: -15.56326675415039
    7. '   ' → logprob: -15.56326675415039
    8. '	i' → logprob: -15.68826675415039
    9. ')' → logprob: -15.81326675415039
    10. '{i' → logprob: -16.06326675415039

Token 262: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14275772869586945
    2. ' +' → logprob: -2.0177576541900635
    3. '2' → logprob: -9.642757415771484
    4. ' ' → logprob: -12.392757415771484
    5. '   ' → logprob: -12.642757415771484
    6. ')' → logprob: -13.392757415771484
    7. ' +
' → logprob: -13.642757415771484
    8. '+
' → logprob: -14.017757415771484
    9. ')+' → logprob: -14.017757415771484
    10. ' plus' → logprob: -14.142757415771484

Token 263: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005929863080382347
    2. ' ' → logprob: -5.130929946899414
    3. '1' → logprob: -13.880929946899414
    4. '  ' → logprob: -16.380929946899414
    5. ')' → logprob: -16.755929946899414
    6. 'space' → logprob: -17.255929946899414
    7. '<|end|>' → logprob: -17.505929946899414
    8. '۲' → logprob: -17.880929946899414
    9. '```' → logprob: -17.880929946899414
    10. '3' → logprob: -18.255929946899414

Token 264: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '1' → logprob: -17.437639236450195
    4. '```' → logprob: -17.500139236450195
    5. '۲' → logprob: -17.562639236450195
    6. '   ' → logprob: -17.687639236450195
    7. '  ' → logprob: -17.937639236450195
    8. '２' → logprob: -18.500139236450195
    9. '...' → logprob: -19.312639236450195
    10. '3' → logprob: -19.312639236450195

Token 265: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. '")' → logprob: -13.500003814697266
    3. ')
' → logprob: -13.625003814697266
    4. ' )' → logprob: -14.750003814697266
    5. ')")' → logprob: -15.125003814697266
    6. '))' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.250003814697266
    8. ')`' → logprob: -17.875003814697266
    9. ')}' → logprob: -18.000003814697266
    10. ')#' → logprob: -18.625003814697266

Token 266: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0007106438861228526
    2. 'elif' → logprob: -7.250710487365723
    3. ' else' → logprob: -14.375710487365723
    4. '```' → logprob: -16.00071144104004
    5. '#' → logprob: -19.00071144104004
    6. 'elseif' → logprob: -19.87571144104004
    7. '#else' → logprob: -19.87571144104004
    8. 'elser' → logprob: -20.37571144104004
    9. 'elses' → logprob: -21.25071144104004
    10. '_else' → logprob: -21.37571144104004

Token 267: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.003636065172031522
    2. 'elif' → logprob: -5.628635883331299
    3. ' else' → logprob: -10.253636360168457
    4. '#' → logprob: -15.003636360168457
    5. '```' → logprob: -16.12863540649414
    6. '#else' → logprob: -16.37863540649414
    7. 'elseif' → logprob: -16.75363540649414
    8. 'elser' → logprob: -17.00363540649414
    9. ' elif' → logprob: -17.37863540649414
    10. '_else' → logprob: -17.50363540649414

Token 268: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1310930699110031
    2. 'n' → logprob: -2.1310930252075195
    3. 'else' → logprob: -5.8810930252075195
    4. 'elif' → logprob: -7.6310930252075195
    5. ' else' → logprob: -7.7560930252075195
    6. ' ' → logprob: -8.88109302520752
    7. ' elif' → logprob: -9.63109302520752
    8. ' not' → logprob: -10.00609302520752
    9. '...' → logprob: -10.13109302520752
    10. 'not' → logprob: -10.63109302520752

Token 269: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05561211705207825
    2. '>' → logprob: -3.055612087249756
    3. '%' → logprob: -5.930612087249756
    4. ' ==' → logprob: -6.430612087249756
    5. ' not' → logprob: -7.055612087249756
    6. ' !=' → logprob: -7.305612087249756
    7. ' %' → logprob: -7.930612087249756
    8. 'else' → logprob: -8.180612564086914
    9. ' ' → logprob: -8.805612564086914
    10. '==' → logprob: -8.930612564086914

Token 270: ' pair' (ID: 10610)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.984484851360321
    2. '5' → logprob: -2.109484910964966
    3. ' ' → logprob: -2.109484910964966
    4. ' not' → logprob: -2.109484910964966
    5. '>' → logprob: -2.984484910964966
    6. 'not' → logprob: -3.359484910964966
    7. 'n' → logprob: -3.609484910964966
    8. '7' → logprob: -3.609484910964966
    9. '6' → logprob: -3.609484910964966
    10. ' else' → logprob: -3.859484910964966

Token 271: ' (' (ID: 350)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0005426656571216881
    2. ':' → logprob: -8.625542640686035
    3. 'and' → logprob: -8.750542640686035
    4. ' elif' → logprob: -9.250542640686035
    5. '%' → logprob: -9.750542640686035
    6. ' and' → logprob: -10.625542640686035
    7. 'el' → logprob: -11.125542640686035
    8. 'else' → logprob: -11.875542640686035
    9. ',' → logprob: -13.750542640686035
    10. 'e' → logprob: -14.500542640686035

Token 272: 'multiple' (ID: 76466)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3197779655456543
    2. ' n' → logprob: -1.4447779655456543
    3. 'elif' → logprob: -3.3197779655456543
    4. ' elif' → logprob: -7.069777965545654
    5. 'else' → logprob: -7.569777965545654
    6. ')' → logprob: -8.319778442382812
    7. ' else' → logprob: -10.069778442382812
    8. '%' → logprob: -10.444778442382812
    9. ' )' → logprob: -11.944778442382812
    10. '(n' → logprob: -11.944778442382812

Token 273: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19283734261989594
    2. 'de' → logprob: -1.8178373575210571
    3. '=' → logprob: -5.067837238311768
    4. ')' → logprob: -5.317837238311768
    5. '(n' → logprob: -7.692837238311768
    6. 's' → logprob: -8.067837715148926
    7. 'n' → logprob: -8.192837715148926
    8. ' n' → logprob: -8.692837715148926
    9. ' of' → logprob: -8.817837715148926
    10. ' ' → logprob: -9.067837715148926

Token 274: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02055484801530838
    2. ' ' → logprob: -3.895554780960083
    3. '```' → logprob: -12.145554542541504
    4. ' ' → logprob: -13.270554542541504
    5. ' n' → logprob: -13.520554542541504
    6. 'n' → logprob: -13.770554542541504
    7. ' deux' → logprob: -14.395554542541504
    8. 'de' → logprob: -14.520554542541504
    9. '4' → logprob: -15.020554542541504
    10. '1' → logprob: -15.145554542541504

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.0590548703912646e-05
    2. ' ' → logprob: -10.500030517578125
    3. '```' → logprob: -13.125030517578125
    4. '4' → logprob: -15.500030517578125
    5. ')' → logprob: -15.625030517578125
    6. 'n' → logprob: -15.750030517578125
    7. '   ' → logprob: -15.875030517578125
    8. '1' → logprob: -16.250030517578125
    9. '  ' → logprob: -17.125030517578125
    10. '==' → logprob: -17.500030517578125

Token 276: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07456906884908676
    2. ')' → logprob: -2.9495689868927
    3. 'elif' → logprob: -4.199569225311279
    4. '):
' → logprob: -5.574569225311279
    5. 'and' → logprob: -8.324568748474121
    6. '):

' → logprob: -8.824568748474121
    7. ':' → logprob: -9.199568748474121
    8. '),' → logprob: -9.199568748474121
    9. ' and' → logprob: -10.324568748474121
    10. 'else' → logprob: -10.574568748474121

Token 277: ' nous' (ID: 6176)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0004734486574307084
    2. ' elif' → logprob: -7.750473499298096
    3. 'else' → logprob: -10.125473022460938
    4. ':' → logprob: -13.000473022460938
    5. 'elseif' → logprob: -16.125473022460938
    6. 'el' → logprob: -16.125473022460938
    7. '#elif' → logprob: -16.375473022460938
    8. '   ' → logprob: -16.750473022460938
    9. ' else' → logprob: -16.875473022460938
    10. 'if' → logprob: -16.875473022460938

Token 278: ' entr' (ID: 7072)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.17024946212768555
    2. 'else' → logprob: -2.2952494621276855
    3. ':' → logprob: -2.9202494621276855
    4. ' elif' → logprob: -7.4202494621276855
    5. ' else' → logprob: -7.5452494621276855
    6. ' continue' → logprob: -8.670249938964844
    7. 'el' → logprob: -8.920249938964844
    8. 'continue' → logprob: -9.045249938964844
    9. 'els' → logprob: -9.795249938964844
    10. ' :' → logprob: -9.795249938964844

Token 279: 'ons' (ID: 1808)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.07013794034719467
    2. 'ter' → logprob: -3.4451379776000977
    3. 't' → logprob: -3.5701379776000977
    4. 'tre' → logprob: -5.820137977600098
    5. ' elif' → logprob: -6.570137977600098
    6. 'e' → logprob: -6.695137977600098
    7. 'er' → logprob: -7.570137977600098
    8. '```' → logprob: -8.445137977600098
    9. 'el' → logprob: -8.695137977600098
    10. 'trer' → logprob: -8.695137977600098

Token 280: ' dans' (ID: 2671)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0031344667077064514
    2. ' elif' → logprob: -6.003134250640869
    3. ':' → logprob: -7.878134250640869
    4. 'else' → logprob: -8.378134727478027
    5. 'el' → logprob: -10.753134727478027
    6. ' in' → logprob: -12.128134727478027
    7. 'if' → logprob: -12.628134727478027
    8. ' dans' → logprob: -13.003134727478027
    9. 'le' → logprob: -13.378134727478027
    10. ' into' → logprob: -13.503134727478027

Token 281: ' ce' (ID: 2357)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5824898481369019
    2. 'n' → logprob: -1.3324898481369019
    3. 'elif' → logprob: -1.9574898481369019
    4. ' elif' → logprob: -4.457489967346191
    5. ' the' → logprob: -5.207489967346191
    6. ' la' → logprob: -5.332489967346191
    7. 'else' → logprob: -5.832489967346191
    8. ' a' → logprob: -6.082489967346191
    9. ':' → logprob: -6.207489967346191
    10. ' le' → logprob: -6.332489967346191

Token 282: ' cas' (ID: 2108)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10811343789100647
    2. 'else' → logprob: -2.8581135272979736
    3. ' elif' → logprob: -4.2331132888793945
    4. ' bloc' → logprob: -4.3581132888793945
    5. ':' → logprob: -4.7331132888793945
    6. ' else' → logprob: -5.2331132888793945
    7. ' block' → logprob: -6.3581132888793945
    8. 'bloc' → logprob: -6.7331132888793945
    9. 'block' → logprob: -8.608113288879395
    10. 'el' → logprob: -9.108113288879395

Token 283: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0001757696009008214
    2. ' elif' → logprob: -8.875175476074219
    3. ':' → logprob: -10.375175476074219
    4. 'else' → logprob: -12.750175476074219
    5. ':
' → logprob: -14.500175476074219
    6. 'elseif' → logprob: -14.750175476074219
    7. 'el' → logprob: -15.000175476074219
    8. '#elif' → logprob: -15.875175476074219
    9. 'eli' → logprob: -16.25017547607422
    10. 'elsif' → logprob: -16.50017547607422

Token 284: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.700132997939363e-05
    2. ' elif' → logprob: -11.000017166137695
    3. 'else' → logprob: -15.875017166137695
    4. ':' → logprob: -16.875017166137695
    5. 'elseif' → logprob: -17.750017166137695
    6. '#elif' → logprob: -17.875017166137695
    7. 'el' → logprob: -18.625017166137695
    8. 'if' → logprob: -18.625017166137695
    9. '```' → logprob: -19.250017166137695
    10. 'eli' → logprob: -20.250017166137695

Token 285: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25193095207214355
    2. 'n' → logprob: -1.5019309520721436
    3. ' ' → logprob: -13.876931190490723
    4. '	n' → logprob: -14.376931190490723
    5. '   ' → logprob: -15.626931190490723
    6. '(n' → logprob: -15.876931190490723
    7. ' ' → logprob: -17.001930236816406
    8. ' н' → logprob: -17.126930236816406
    9. '  ' → logprob: -17.626930236816406
    10. ' (' → logprob: -18.251930236816406

Token 286: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20146265625953674
    2. '%' → logprob: -1.7014626264572144
    3. ' ' → logprob: -9.951462745666504
    4. ' ' → logprob: -14.201462745666504
    5. '```' → logprob: -15.201462745666504
    6. '>' → logprob: -15.451462745666504
    7. ' %
' → logprob: -15.701462745666504
    8. '	' → logprob: -16.201461791992188
    9. '   ' → logprob: -16.701461791992188
    10. '
' → logprob: -17.076461791992188

Token 287: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005606581107713282
    2. ' ' → logprob: -7.500560760498047
    3. '==' → logprob: -12.250560760498047
    4. '```' → logprob: -13.375560760498047
    5. ' ==' → logprob: -15.063060760498047
    6. '   ' → logprob: -15.375560760498047
    7. '  ' → logprob: -15.813060760498047
    8. '4' → logprob: -16.250560760498047
    9. '=' → logprob: -16.250560760498047
    10. '...' → logprob: -16.688060760498047

Token 288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -11.250016212463379
    3. '4' → logprob: -13.312516212463379
    4. '```' → logprob: -14.187516212463379
    5. '3' → logprob: -15.500016212463379
    6. '   ' → logprob: -16.000017166137695
    7. '6' → logprob: -16.250017166137695
    8. '==' → logprob: -16.375017166137695
    9. '>' → logprob: -16.375017166137695
    10. '1' → logprob: -16.625017166137695

Token 289: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20145133137702942
    2. ' ==' → logprob: -1.701451301574707
    3. '0' → logprob: -10.701451301574707
    4. '=' → logprob: -12.076451301574707
    5. '==
' → logprob: -12.326451301574707
    6. '()==' → logprob: -13.451451301574707
    7. '```' → logprob: -13.951451301574707
    8. '===' → logprob: -14.076451301574707
    9. ')==' → logprob: -14.451451301574707
    10. ':' → logprob: -14.701451301574707

Token 290: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018154505640268326
    2. ' ' → logprob: -4.018154621124268
    3. '1' → logprob: -13.26815414428711
    4. '   ' → logprob: -14.08065414428711
    5. '  ' → logprob: -14.26815414428711
    6. '2' → logprob: -14.83065414428711
    7. ' ' → logprob: -15.64315414428711
    8. '	' → logprob: -16.08065414428711
    9. '00' → logprob: -16.08065414428711
    10. '```' → logprob: -16.14315414428711

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.2987729102605954e-05
    2. '1' → logprob: -10.375042915344238
    3. ' ' → logprob: -11.625042915344238
    4. '2' → logprob: -13.875042915344238
    5. '
' → logprob: -14.000042915344238
    6. '```' → logprob: -14.750042915344238
    7. '   ' → logprob: -16.250043869018555
    8. '

' → logprob: -16.687543869018555
    9. '4' → logprob: -16.812543869018555
    10. '  
' → logprob: -17.000043869018555

Token 292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004079470410943031
    2. ':
' → logprob: -5.504079341888428
    3. ':
' → logprob: -15.254079818725586
    4. '   ' → logprob: -15.254079818725586
    5. ' :' → logprob: -15.379079818725586
    6. ':

' → logprob: -15.879079818725586
    7. '):' → logprob: -16.004079818725586
    8. '):
' → logprob: -16.629079818725586
    9. ' and' → logprob: -17.379079818725586
    10. ' :
' → logprob: -18.004079818725586

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024205099791288376
    2. 'print' → logprob: -4.024205207824707
    3. ':
' → logprob: -5.524205207824707
    4. ':' → logprob: -6.274205207824707
    5. ' print' → logprob: -9.024205207824707
    6. ' ' → logprob: -11.649205207824707
    7. '  ' → logprob: -11.899205207824707
    8. '):
' → logprob: -12.024205207824707
    9. '	print' → logprob: -12.399205207824707
    10. 'and' → logprob: -12.524205207824707

Token 294: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22558236122131348
    2. '   ' → logprob: -1.6005823612213135
    3. '#' (adapté à ' #') → logprob: -9.350582122802734
    4. ' print' → logprob: -9.725582122802734
    5. ' ' → logprob: -12.475582122802734
    6. '
' → logprob: -12.600582122802734
    7. '	print' → logprob: -12.850582122802734
    8. 'def' → logprob: -12.975582122802734
    9. '  ' → logprob: -13.225582122802734
    10. '```' → logprob: -13.475582122802734

Token 295: ' nn' (ID: 17674)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013804041780531406
    2. '   ' → logprob: -4.513803958892822
    3. '#' → logprob: -6.263803958892822
    4. ' print' → logprob: -7.138803958892822
    5. ' ' → logprob: -11.13880443572998
    6. 'for' → logprob: -11.76380443572998
    7. '  ' → logprob: -12.01380443572998
    8. 'k' → logprob: -12.63880443572998
    9. 'n' → logprob: -12.63880443572998
    10. '#print' → logprob: -12.76380443572998

Token 296: ' reçoit' (ID: 151051)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017399987205863
    2. '=' → logprob: -4.142399787902832
    3. 'n' → logprob: -7.017399787902832
    4. '_' → logprob: -9.267399787902832
    5. 'w' → logprob: -9.517399787902832
    6. ' ' → logprob: -9.767399787902832
    7. '//' → logprob: -10.267399787902832
    8. '   ' → logprob: -10.392399787902832
    9. '2' → logprob: -10.642399787902832
    10. '=int' → logprob: -10.642399787902832

Token 297: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44167351722717285
    2. ' n' → logprob: -1.0666735172271729
    3. '"' → logprob: -4.691673278808594
    4. ' ' → logprob: -7.066673278808594
    5. '(n' → logprob: -7.191673278808594
    6. ' (' → logprob: -7.566673278808594
    7. ' "' → logprob: -8.066673278808594
    8. 'str' → logprob: -8.191673278808594
    9. ' str' → logprob: -8.566673278808594
    10. '   ' → logprob: -8.566673278808594

Token 298: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11410949379205704
    2. ' n' → logprob: -2.239109516143799
    3. '"' → logprob: -7.739109516143799
    4. '(n' → logprob: -8.11410903930664
    5. ' ' → logprob: -8.48910903930664
    6. '   ' → logprob: -9.23910903930664
    7. ' (' → logprob: -9.23910903930664
    8. 'int' → logprob: -10.36410903930664
    9. '(' → logprob: -11.23910903930664
    10. '2' → logprob: -11.36410903930664

Token 299: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8817641735076904
    2. '=' → logprob: -1.1317641735076904
    3. 'n' → logprob: -1.6317641735076904
    4. ' n' → logprob: -4.0067644119262695
    5. 'de' → logprob: -4.3817644119262695
    6. '=n' → logprob: -4.5067644119262695
    7. ' de' → logprob: -4.6317644119262695
    8. '   ' → logprob: -5.2567644119262695
    9. ' ' → logprob: -5.3817644119262695
    10. 'div' → logprob: -6.3817644119262695

Token 300: ' bits' (ID: 18189)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3882611393928528
    2. 'n' → logprob: -1.138261079788208
    3. ' ' → logprob: -7.638261318206787
    4. '(n' → logprob: -8.513260841369629
    5. ' (' → logprob: -8.513260841369629
    6. '2' → logprob: -9.263260841369629
    7. '1' → logprob: -9.763260841369629
    8. '0' → logprob: -9.763260841369629
    9. 'print' → logprob: -9.763260841369629
    10. 'pairs' → logprob: -9.763260841369629

Token 301: ' nécessaires' (ID: 74402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6422736644744873
    2. '=' → logprob: -0.7672736644744873
    3. 'n' → logprob: -5.392273902893066
    4. '=n' → logprob: -6.142273902893066
    5. '   ' → logprob: -6.392273902893066
    6. ' n' → logprob: -7.267273902893066
    7. 's' → logprob: -8.517273902893066
    8. ' ' → logprob: -8.767273902893066
    9. '  ' → logprob: -10.642273902893066
    10. 'd' → logprob: -11.017273902893066

Token 302: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1608448624610901
    2. ' =' → logprob: -2.0358448028564453
    3. '   ' → logprob: -4.285844802856445
    4. '=n' → logprob: -6.160844802856445
    5. 'n' → logprob: -7.535844802856445
    6. '(n' → logprob: -7.660844802856445
    7. ' to' → logprob: -7.785844802856445
    8. 'to' → logprob: -8.785844802856445
    9. ',' → logprob: -9.035844802856445
    10. '(' → logprob: -9.660844802856445

Token 303: ' représ' (ID: 31534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0029843561351299286
    2. '(n' → logprob: -6.252984523773193
    3. ' n' → logprob: -6.877984523773193
    4. ' représ' → logprob: -12.127984046936035
    5. ' ' → logprob: -12.377984046936035
    6. 'repr' → logprob: -12.502984046936035
    7. '(' → logprob: -12.877984046936035
    8. ' (' → logprob: -13.502984046936035
    9. ')n' → logprob: -13.627984046936035
    10. '	n' → logprob: -13.877984046936035

Token 304: 'enter' (ID: 3547)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6190406680107117
    2. 'ent' → logprob: -1.3690407276153564
    3. 'enter' → logprob: -2.3690407276153564
    4. 'er' → logprob: -3.2440407276153564
    5. '   ' → logprob: -3.4940407276153564
    6. 'endre' → logprob: -4.244040489196777
    7. '(n' → logprob: -4.744040489196777
    8. 're' → logprob: -5.119040489196777
    9. ' n' → logprob: -5.869040489196777
    10. 'éter' → logprob: -5.994040489196777

Token 305: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11299065500497818
    2. ' n' → logprob: -2.237990617752075
    3. '(n' → logprob: -8.862990379333496
    4. ' (' → logprob: -11.737990379333496
    5. '	n' → logprob: -12.737990379333496
    6. '   ' → logprob: -13.112990379333496
    7. ' ' → logprob: -13.362990379333496
    8. '(' → logprob: -13.487990379333496
    9. ')n' → logprob: -13.612990379333496
    10. 'a' → logprob: -14.050490379333496

Token 306: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034083493053913116
    2. '=' → logprob: -3.409083604812622
    3. '   ' → logprob: -8.159083366394043
    4. 'n' → logprob: -9.659083366394043
    5. '=n' → logprob: -10.284083366394043
    6. ' ' → logprob: -10.534083366394043
    7. ',' → logprob: -12.409083366394043
    8. ' n' → logprob: -12.409083366394043
    9. 'nn' → logprob: -12.409083366394043
    10. ' nn' → logprob: -13.034083366394043

Token 307: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3319545388221741
    2. 'binary' → logprob: -2.0819544792175293
    3. 'bin' → logprob: -2.7069544792175293
    4. ' binary' → logprob: -2.7069544792175293
    5. 'n' → logprob: -4.581954479217529
    6. ' bin' → logprob: -5.081954479217529
    7. ' b' → logprob: -5.206954479217529
    8. '2' → logprob: -6.706954479217529
    9. ' n' → logprob: -7.206954479217529
    10. 'bits' → logprob: -8.706954956054688

Token 308: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1362096071243286
    2. 'inaire' → logprob: -2.261209487915039
    3. 'inary' → logprob: -4.136209487915039
    4. 'it' → logprob: -5.136209487915039
    5. 'its' → logprob: -7.261209487915039
    6. ''' → logprob: -8.886209487915039
    7. '"' → logprob: -9.261209487915039
    8. 'n' → logprob: -9.636209487915039
    9. 'iné' → logprob: -10.011209487915039
    10. 'inar' → logprob: -10.136209487915039

Token 309: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022921523079276085
    2. '=' → logprob: -3.897921562194824
    3. '   ' → logprob: -6.272921562194824
    4. 'n' → logprob: -8.147921562194824
    5. '=n' → logprob: -8.897921562194824
    6. 'nn' → logprob: -11.147921562194824
    7. ',' → logprob: -11.272921562194824
    8. ' ' → logprob: -11.522921562194824
    9. '
' → logprob: -11.772921562194824
    10. ' n' → logprob: -12.272921562194824

Token 310: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18527403473854065
    2. 'nn' → logprob: -3.060274124145508
    3. '=' → logprob: -3.185274124145508
    4. 'n' → logprob: -3.435274124145508
    5. '   ' → logprob: -3.560274124145508
    6. '
' → logprob: -4.810274124145508
    7. '(nn' → logprob: -5.810274124145508
    8. ' nn' → logprob: -6.185274124145508
    9. ':' → logprob: -6.310274124145508
    10. ',' → logprob: -6.810274124145508

Token 311: ' #' (ID: 1069)
  Prédit: 'nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nn' → logprob: -0.04302510991692543
    2. '   ' → logprob: -3.543025016784668
    3. ' nn' → logprob: -4.418025016784668
    4. 'n' → logprob: -6.918025016784668
    5. 'bits' → logprob: -10.793025016784668
    6. ' ' → logprob: -10.918025016784668
    7. '
' → logprob: -10.918025016784668
    8. '.nn' → logprob: -11.168025016784668
    9. '(nn' → logprob: -11.293025016784668
    10. 'nb' → logprob: -11.293025016784668

Token 312: ' Par' (ID: 3371)
  Prédit: 'nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nn' → logprob: -0.3173970580101013
    2. '   ' → logprob: -1.942397117614746
    3. ' nn' → logprob: -2.067397117614746
    4. 'n' → logprob: -6.817397117614746
    5. 'bits' → logprob: -8.442397117614746
    6. ' n' → logprob: -8.692397117614746
    7. ' ' → logprob: -8.817397117614746
    8. '    ' → logprob: -9.567397117614746
    9. '
' → logprob: -9.692397117614746
    10. 'bit' → logprob: -9.817397117614746

Token 313: ' exemple' (ID: 26320)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.617520272731781
    2. 'bin' → logprob: -1.9925203323364258
    3. 'bits' → logprob: -2.242520332336426
    4. 'n' → logprob: -2.492520332336426
    5. 'nn' → logprob: -3.367520332336426
    6. 't' → logprob: -3.742520332336426
    7. 'b' → logprob: -4.367520332336426
    8. 'binary' → logprob: -4.992520332336426
    9. 'e' → logprob: -5.242520332336426
    10. '=' → logprob: -5.242520332336426

Token 314: ',' (ID: 11)
  Prédit: ' nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nn' → logprob: -0.41274407505989075
    2. '   ' → logprob: -2.0377440452575684
    3. ' n' → logprob: -2.5377440452575684
    4. 'nn' → logprob: -2.9127440452575684
    5. 'n' → logprob: -3.2877440452575684
    6. '    ' → logprob: -3.6627440452575684
    7. ':' → logprob: -6.162744045257568
    8. ',' → logprob: -6.662744045257568
    9. '
' → logprob: -6.662744045257568
    10. '=' → logprob: -7.287744045257568

Token 315: ' si' (ID: 1784)
  Prédit: ' nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nn' → logprob: -0.7776846289634705
    2. 'nn' → logprob: -0.9026846289634705
    3. ' n' → logprob: -2.9026846885681152
    4. 'n' → logprob: -3.1526846885681152
    5. '   ' → logprob: -4.527684688568115
    6. 'num' → logprob: -5.402684688568115
    7. ' bit' → logprob: -5.527684688568115
    8. 'bits' → logprob: -5.777684688568115
    9. 'bit' → logprob: -5.902684688568115
    10. ' bits' → logprob: -6.152684688568115

Token 316: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13579308986663818
    2. ' n' → logprob: -2.1357932090759277
    3. 'bin' → logprob: -5.510793209075928
    4. ' bin' → logprob: -6.010793209075928
    5. 'nn' → logprob: -7.760793209075928
    6. 'len' → logprob: -8.44829273223877
    7. '2' → logprob: -9.19829273223877
    8. ' ' → logprob: -9.32329273223877
    9. '1' → logprob: -9.38579273223877
    10. '
' → logprob: -9.38579273223877

Token 317: '=' (ID: 28)
  Prédit: '.bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.04597789794206619
    2. 'n' → logprob: -4.17097806930542
    3. '==' → logprob: -4.92097806930542
    4. '=' → logprob: -5.04597806930542
    5. '.n' → logprob: -5.04597806930542
    6. ' ==' → logprob: -5.79597806930542
    7. '>' → logprob: -6.67097806930542
    8. 'bit' → logprob: -6.67097806930542
    9. '.' → logprob: -6.79597806930542
    10. ' .' → logprob: -7.42097806930542

Token 318: '8' (ID: 23)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4106263816356659
    2. '10' → logprob: -1.2856264114379883
    3. '16' → logprob: -4.160626411437988
    4. '12' → logprob: -4.410626411437988
    5. '8' → logprob: -4.660626411437988
    6. ' n' → logprob: -5.285626411437988
    7. '15' → logprob: -5.410626411437988
    8. '6' → logprob: -5.910626411437988
    9. '18' → logprob: -5.910626411437988
    10. '20' → logprob: -6.410626411437988

Token 319: ',' (ID: 11)
  Prédit: 'nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nn' → logprob: -1.3207370042800903
    2. ',' → logprob: -1.4457370042800903
    3. ' =' → logprob: -1.9457370042800903
    4. 'n' → logprob: -2.320736885070801
    5. '   ' → logprob: -3.070736885070801
    6. ' nn' → logprob: -3.195736885070801
    7. ' ,' → logprob: -3.570736885070801
    8. ' n' → logprob: -3.570736885070801
    9. '=' → logprob: -4.070736885070801
    10. ':' → logprob: -4.070736885070801

Token 320: ' n' (ID: 297)
  Prédit: 'nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nn' → logprob: -0.048598501831293106
    2. '   ' → logprob: -3.548598527908325
    3. ' nn' → logprob: -4.048598289489746
    4. 'n' → logprob: -7.173598289489746
    5. 'bits' → logprob: -9.423598289489746
    6. 'bit' → logprob: -9.423598289489746
    7. 'nb' → logprob: -9.798598289489746
    8. ' ' → logprob: -9.923598289489746
    9. '    ' → logprob: -10.048598289489746
    10. '  ' → logprob: -10.048598289489746

Token 321: '.bit' (ID: 61866)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12535712122917175
    2. '.bit' → logprob: -2.250357151031494
    3. '.' → logprob: -4.750357151031494
    4. '_bits' → logprob: -6.875357151031494
    5. ' .' → logprob: -7.500357151031494
    6. 'bit' → logprob: -7.625357151031494
    7. 'nn' → logprob: -7.750357151031494
    8. '_bit' → logprob: -8.125356674194336
    9. '.n' → logprob: -8.625356674194336
    10. ' =' → logprob: -9.000356674194336

Token 322: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.0206720617134124e-05
    2. 'length' → logprob: -11.62501049041748
    3. '_' → logprob: -14.00001049041748
    4. '_l' → logprob: -15.87501049041748
    5. '_LENGTH' → logprob: -16.500009536743164
    6. 'ength' → logprob: -16.750009536743164
    7. 's' → logprob: -17.625009536743164
    8. '```' → logprob: -17.750009536743164
    9. '_leg' → logprob: -18.125009536743164
    10. 'leng' → logprob: -18.375009536743164

Token 323: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00040421701851300895
    2. '()+' → logprob: -9.000404357910156
    3. '())' → logprob: -9.250404357910156
    4. ' ()' → logprob: -9.625404357910156
    5. '()-' → logprob: -10.000404357910156
    6. '()
' → logprob: -10.375404357910156
    7. ')' → logprob: -11.125404357910156
    8. '//' → logprob: -12.375404357910156
    9. '()`' → logprob: -12.375404357910156
    10. '()>' → logprob: -12.375404357910156

Token 324: ' retourne' (ID: 178818)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7368089556694031
    2. '   ' → logprob: -1.3618090152740479
    3. '=' → logprob: -2.736809015274048
    4. ' -' → logprob: -2.986809015274048
    5. '//' → logprob: -2.986809015274048
    6. ' =' → logprob: -4.236808776855469
    7. '#' → logprob: -4.361808776855469
    8. ')' → logprob: -4.486808776855469
    9. '()' → logprob: -4.486808776855469
    10. ' //' → logprob: -4.486808776855469

Token 325: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.001228561857715249
    2. ' ' → logprob: -6.751228332519531
    3. '3' → logprob: -10.001228332519531
    4. '5' → logprob: -12.376228332519531
    5. '   ' → logprob: -12.626228332519531
    6. '```' → logprob: -13.376228332519531
    7. '(' → logprob: -13.626228332519531
    8. 'n' → logprob: -14.626228332519531
    9. '  ' → logprob: -14.876228332519531
    10. ' n' → logprob: -15.126228332519531

Token 326: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.297462171758525e-05
    2. ' ' → logprob: -10.625033378601074
    3. '3' → logprob: -12.625033378601074
    4. '```' → logprob: -12.875033378601074
    5. '5' → logprob: -14.125033378601074
    6. '   ' → logprob: -14.500033378601074
    7. 'n' → logprob: -14.625033378601074
    8. '``' → logprob: -15.125033378601074
    9. '' → logprob: -16.312532424926758
    10. '7' → logprob: -16.562532424926758

Token 327: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029601560905575752
    2. ':' → logprob: -4.904601573944092
    3. '
' → logprob: -5.029601573944092
    4. ':
' → logprob: -5.029601573944092
    5. 'n' → logprob: -5.529601573944092
    6. ' nn' → logprob: -7.029601573944092
    7. 'nn' → logprob: -7.029601573944092
    8. '       ' → logprob: -7.154601573944092
    9. ' n' → logprob: -7.404601573944092
    10. '    
' → logprob: -8.154601097106934

Token 328: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013917014934122562
    2. 'n' → logprob: -4.763916969299316
    3. ' n' → logprob: -6.138916969299316
    4. '
' → logprob: -6.513916969299316
    5. ' nn' → logprob: -7.763916969299316
    6. 'nn' → logprob: -8.013916969299316
    7. '    
' → logprob: -8.513916969299316
    8. '    ' → logprob: -8.888916969299316
    9. '#' → logprob: -9.138916969299316
    10. '  ' → logprob: -9.263916969299316

Token 329: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.10900410264730453
    2. ' ' → logprob: -2.859004020690918
    3. ' n' → logprob: -3.859004020690918
    4. 'n' → logprob: -3.859004020690918
    5. 'len' → logprob: -7.109004020690918
    6. '4' → logprob: -7.234004020690918
    7. '9' → logprob: -7.359004020690918
    8. '(' → logprob: -8.109004020690918
    9. 'bin' → logprob: -8.234004020690918
    10. '3' → logprob: -8.484004020690918

Token 330: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.004402820952236652
    2. '100' → logprob: -6.2544026374816895
    3. ' ' → logprob: -7.0044026374816895
    4. 'n' → logprob: -7.0044026374816895
    5. 'bin' → logprob: -8.129403114318848
    6. '   ' → logprob: -9.379403114318848
    7. 'len' → logprob: -9.379403114318848
    8. '(' → logprob: -10.129403114318848
    9. '  ' → logprob: -10.754403114318848
    10. '10' → logprob: -10.879403114318848

Token 331: ' en' (ID: 469)
  Prédit: '.bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.08264657855033875
    2. ' has' → logprob: -3.332646608352661
    3. ' requires' → logprob: -3.957646608352661
    4. ' is' → logprob: -5.707646369934082
    5. '=' → logprob: -5.832646369934082
    6. '.requires' → logprob: -5.957646369934082
    7. 'has' → logprob: -6.082646369934082
    8. 'requires' → logprob: -6.332646369934082
    9. ' =' → logprob: -6.582646369934082
    10. ' represents' → logprob: -6.582646369934082

Token 332: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3260817527770996
    2. ' binary' → logprob: -1.8260817527770996
    3. ' b' → logprob: -2.3260817527770996
    4. 'binary' → logprob: -3.9510817527770996
    5. ' base' → logprob: -9.201082229614258
    6. ' bin' → logprob: -9.326082229614258
    7. 'bin' → logprob: -9.576082229614258
    8. ' ' → logprob: -10.826082229614258
    9. 'base' → logprob: -11.701082229614258
    10. 'python' → logprob: -12.951082229614258

Token 333: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.44012027978897095
    2. 'in' → logprob: -1.3151202201843262
    3. 'inary' → logprob: -2.690120220184326
    4. 'b' → logprob: -5.190120220184326
    5. 'it' → logprob: -5.315120220184326
    6. '1' → logprob: -6.815120220184326
    7. 'iné' → logprob: -6.940120220184326
    8. 'ine' → logprob: -6.940120220184326
    9. 'its' → logprob: -7.065120220184326
    10. 'inal' → logprob: -7.065120220184326

Token 334: ' est' (ID: 893)
  Prédit: '.bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0076009430922567844
    2. '   ' → logprob: -6.257600784301758
    3. '().' → logprob: -6.757600784301758
    4. ' .' → logprob: -7.257600784301758
    5. 'bit' → logprob: -7.257600784301758
    6. '-' → logprob: -7.507600784301758
    7. 'n' → logprob: -7.507600784301758
    8. '.n' → logprob: -7.882600784301758
    9. ' ' → logprob: -7.882600784301758
    10. ' -' → logprob: -8.132600784301758

Token 335: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2584340274333954
    2. '100' → logprob: -1.5084340572357178
    3. ' '' → logprob: -5.633433818817139
    4. '"' → logprob: -6.008433818817139
    5. ' ' → logprob: -8.383434295654297
    6. ''b' → logprob: -9.383434295654297
    7. '   ' → logprob: -9.633434295654297
    8. 'b' → logprob: -10.133434295654297
    9. '`' → logprob: -11.008434295654297
    10. ' "' → logprob: -12.508434295654297

Token 336: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5772235989570618
    2. ''' → logprob: -0.8272235989570618
    3. '"' → logprob: -6.702223777770996
    4. ' ' → logprob: -10.327223777770996
    5. ' '' → logprob: -12.077223777770996
    6. '`' → logprob: -12.077223777770996
    7. 'b' → logprob: -12.452223777770996
    8. '   ' → logprob: -13.327223777770996
    9. ''''' → logprob: -13.702223777770996
    10. '4' → logprob: -14.077223777770996

Token 337: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.300750494003296
    2. ' =' → logprob: -1.550750494003296
    3. '.bit' → logprob: -1.800750494003296
    4. '   ' → logprob: -2.800750494003296
    5. ' ' → logprob: -2.925750494003296
    6. ' n' → logprob: -2.925750494003296
    7. '=' → logprob: -3.300750494003296
    8. ' -' → logprob: -3.550750494003296
    9. '>>' → logprob: -4.050750732421875
    10. ')' → logprob: -4.050750732421875

Token 338: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05786197632551193
    2. '
' → logprob: -4.307861804962158
    3. 'nn' → logprob: -4.682861804962158
    4. '-' → logprob: -5.057861804962158
    5. 'n' → logprob: -5.057861804962158
    6. ':' → logprob: -5.682861804962158
    7. ' =' → logprob: -5.682861804962158
    8. ' -' → logprob: -5.682861804962158
    9. '       ' → logprob: -5.932861804962158
    10. ':
' → logprob: -6.182861804962158

Token 339: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.10143820196390152
    2. 'len' → logprob: -3.601438283920288
    3. '100' → logprob: -4.226438045501709
    4. 'n' → logprob: -4.351438045501709
    5. ')' → logprob: -4.601438045501709
    6. '   ' → logprob: -4.601438045501709
    7. '#' → logprob: -5.226438045501709
    8. 'b' → logprob: -5.851438045501709
    9. '3' → logprob: -6.101438045501709
    10. 'print' → logprob: -6.226438045501709

Token 340: ' chiffres' (ID: 105565)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.2237159013748169
    2. ')' → logprob: -1.848715901374817
    3. ' bits' → logprob: -3.2237157821655273
    4. 'bits' → logprob: -6.348715782165527
    5. ' ")' → logprob: -7.848715782165527
    6. ' ).' → logprob: -8.473715782165527
    7. ' ' → logprob: -8.848715782165527
    8. ' digits' → logprob: -8.973715782165527
    9. 'digits' → logprob: -9.473715782165527
    10. ' ' → logprob: -9.473715782165527

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010960459476336837
    2. ' )' → logprob: -7.251096248626709
    3. ')
' → logprob: -8.75109577178955
    4. '))' → logprob: -9.50109577178955
    5. '()' → logprob: -10.00109577178955
    6. ').' → logprob: -10.50109577178955
    7. '())' → logprob: -11.25109577178955
    8. '")' → logprob: -11.62609577178955
    9. '),' → logprob: -11.75109577178955
    10. '):' → logprob: -12.00109577178955

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0408066026866436
    2. 'nn' → logprob: -4.290806770324707
    3. ':' → logprob: -4.415806770324707
    4. 'n' → logprob: -5.165806770324707
    5. ':
' → logprob: -5.165806770324707
    6. ' nn' → logprob: -6.540806770324707
    7. '       ' → logprob: -8.290806770324707
    8. ' n' → logprob: -8.540806770324707
    9. '```' → logprob: -8.915806770324707
    10. '    
' → logprob: -9.415806770324707

Token 343: ' nn' (ID: 17674)
  Prédit: 'nn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nn' (adapté à ' nn') → logprob: -0.3611721694469452
    2. ' nn' → logprob: -1.8611721992492676
    3. '   ' → logprob: -1.9861721992492676
    4. 'n' → logprob: -5.861172199249268
    5. 'm' → logprob: -6.361172199249268
    6. 'k' → logprob: -6.486172199249268
    7. 'half' → logprob: -6.986172199249268
    8. 'print' → logprob: -7.611172199249268
    9. ' ' → logprob: -8.23617172241211
    10. 'mid' → logprob: -8.36117172241211

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687485456466675
    2. ' =' → logprob: -1.1368749141693115
    3. ' ' → logprob: -13.76187515258789
    4. '=n' → logprob: -14.13687515258789
    5. 'n' → logprob: -14.51187515258789
    6. '=int' → logprob: -15.01187515258789
    7. '＝' → logprob: -15.26187515258789
    8. ',' → logprob: -15.76187515258789
    9. ' ' → logprob: -15.76187515258789
    10. '   ' → logprob: -15.88687515258789

Token 345: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759552121162415
    2. 'n' → logprob: -0.8259552121162415
    3. '   ' → logprob: -11.450955390930176
    4. ' (' → logprob: -13.450955390930176
    5. '	n' → logprob: -13.825955390930176
    6. '(n' → logprob: -14.075955390930176
    7. ' ' → logprob: -14.200955390930176
    8. '(' → logprob: -14.950955390930176
    9. '2' → logprob: -15.825955390930176
    10. '  ' → logprob: -15.825955390930176

Token 346: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0007696056272834539
    2. '-' → logprob: -7.87576961517334
    3. '.' → logprob: -8.50076961517334
    4. '//' → logprob: -9.12576961517334
    5. ' //' → logprob: -10.50076961517334
    6. 'bit' → logprob: -11.12576961517334
    7. '>>' → logprob: -11.37576961517334
    8. '   ' → logprob: -11.62576961517334
    9. ' bit' → logprob: -12.25076961517334
    10. '#' → logprob: -13.12576961517334

Token 347: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -13.750000953674316
    3. '_size' → logprob: -16.500001907348633
    4. '_len' → logprob: -17.000001907348633
    5. '_width' → logprob: -17.125001907348633
    6. ' _' → logprob: -17.375001907348633
    7. '_l' → logprob: -17.500001907348633
    8. '_bit' → logprob: -17.500001907348633
    9. '_count' → logprob: -17.750001907348633
    10. '_le' → logprob: -18.125001907348633

Token 348: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.36574100604048e-06
    2. ' ()' → logprob: -13.500004768371582
    3. '()
' → logprob: -13.750004768371582
    4. '(' → logprob: -14.625004768371582
    5. '()+' → logprob: -14.750004768371582
    6. '()>' → logprob: -15.125004768371582
    7. '())' → logprob: -15.500004768371582
    8. '()`' → logprob: -16.000003814697266
    9. '()-' → logprob: -16.375003814697266
    10. '()

' → logprob: -16.625003814697266

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13700397312641144
    2. ':' → logprob: -2.1370038986206055
    3. '
' → logprob: -5.3870038986206055
    4. '<|end|>' → logprob: -5.7620038986206055
    5. ':
' → logprob: -7.7620038986206055
    6. '    
' → logprob: -7.7620038986206055
    7. ')' → logprob: -7.8870038986206055
    8. ' :' → logprob: -8.762003898620605
    9. ',' → logprob: -8.887003898620605
    10. '#' → logprob: -9.387003898620605

Token 350: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07140229642391205
    2. 'print' → logprob: -3.0714023113250732
    3. 'if' → logprob: -4.946402072906494
    4. '    
' → logprob: -5.196402072906494
    5. '
' → logprob: -6.071402072906494
    6. 'k' → logprob: -7.071402072906494
    7. ' print' → logprob: -7.196402072906494
    8. ' if' → logprob: -7.321402072906494
    9. 'n' → logprob: -7.321402072906494
    10. 'm' → logprob: -7.321402072906494

Token 351: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.060279008001089096
    2. 'if' → logprob: -3.31027889251709
    3. 'm' → logprob: -5.18527889251709
    4. '#' → logprob: -6.06027889251709
    5. 'k' → logprob: -6.43527889251709
    6. 'nn' → logprob: -6.68527889251709
    7. 'p' → logprob: -6.93527889251709
    8. 'a' → logprob: -7.06027889251709
    9. 'for' → logprob: -7.06027889251709
    10. 'x' → logprob: -7.18527889251709

Token 352: ' n' (ID: 297)
  Prédit: 'nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nn' → logprob: -0.411954790353775
    2. ' nn' → logprob: -1.1619547605514526
    3. 'n' → logprob: -4.161954879760742
    4. '(nn' → logprob: -5.161954879760742
    5. ' n' → logprob: -6.286954879760742
    6. '(n' → logprob: -7.411954879760742
    7. ' (' → logprob: -7.786954879760742
    8. '(' → logprob: -7.911954879760742
    9. '2' → logprob: -9.286954879760742
    10. ' ' → logprob: -9.536954879760742

Token 353: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6619662642478943
    2. '==' → logprob: -1.536966323852539
    3. ' >' → logprob: -2.661966323852539
    4. ' <' → logprob: -3.536966323852539
    5. '>' → logprob: -3.786966323852539
    6. ' <=' → logprob: -3.786966323852539
    7. ' !=' → logprob: -4.036966323852539
    8. ' &' → logprob: -4.036966323852539
    9. ' >=' → logprob: -4.411966323852539
    10. ' %' → logprob: -4.536966323852539

Token 354: ' une' (ID: 2463)
  Prédit: 'nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nn' → logprob: -0.14019909501075745
    2. 'n' → logprob: -2.3901991844177246
    3. ' nn' → logprob: -4.140199184417725
    4. '2' → logprob: -5.015199184417725
    5. 'not' → logprob: -5.640199184417725
    6. ' not' → logprob: -5.765199184417725
    7. '1' → logprob: -6.390199184417725
    8. '3' → logprob: -6.515199184417725
    9. ' n' → logprob: -6.765199184417725
    10. '   ' → logprob: -6.765199184417725

Token 355: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.007795775309205055
    2. ' puissance' → logprob: -5.257795810699463
    3. 'power' → logprob: -7.132795810699463
    4. '   ' → logprob: -7.257795810699463
    5. 'pot' → logprob: -8.257795333862305
    6. 'pow' → logprob: -9.007795333862305
    7. 'p' → logprob: -9.132795333862305
    8. '2' → logprob: -9.257795333862305
    9. ' ' → logprob: -9.632795333862305
    10. '
' → logprob: -10.132795333862305

Token 356: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12272338569164276
    2. 'de' → logprob: -2.372723340988159
    3. 'of' → logprob: -4.372723579406738
    4. ' of' → logprob: -4.997723579406738
    5. '   ' → logprob: -6.122723579406738
    6. '2' → logprob: -8.497723579406738
    7. ' ' → logprob: -8.997723579406738
    8. '_de' → logprob: -9.372723579406738
    9. '  ' → logprob: -9.747723579406738
    10. '(' → logprob: -9.872723579406738

Token 357: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031387361232191324
    2. 'de' → logprob: -6.003138542175293
    3. 'two' → logprob: -7.753138542175293
    4. ' ' → logprob: -8.628138542175293
    5. ' two' → logprob: -10.628138542175293
    6. ' deux' → logprob: -10.753138542175293
    7. '```' → logprob: -12.003138542175293
    8. '1' → logprob: -14.378138542175293
    9. 'Two' → logprob: -14.628138542175293
    10. 'Deux' → logprob: -15.253138542175293

Token 358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08974464982748032
    2. 'de' → logprob: -2.4647445678710938
    3. 'two' → logprob: -7.339744567871094
    4. ' ' → logprob: -9.214744567871094
    5. '```' → logprob: -10.964744567871094
    6. ' deux' → logprob: -10.964744567871094
    7. '   ' → logprob: -12.714744567871094
    8. ' two' → logprob: -12.964744567871094
    9. 'Deux' → logprob: -13.089744567871094
    10. '4' → logprob: -13.214744567871094

Token 359: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07183773070573807
    2. 'and' → logprob: -2.6968376636505127
    3. '   ' → logprob: -6.446837902069092
    4. ':' → logprob: -8.571837425231934
    5. ' ' → logprob: -9.946837425231934
    6. 'if' → logprob: -11.321837425231934
    7. '    ' → logprob: -11.571837425231934
    8. '  ' → logprob: -11.571837425231934
    9. ':
' → logprob: -11.696837425231934
    10. ' or' → logprob: -11.821837425231934

Token 360: 'exact' (ID: 86898)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8954171538352966
    2. ' n' → logprob: -1.0204172134399414
    3. ' (' → logprob: -2.2704172134399414
    4. '(n' → logprob: -2.7704172134399414
    5. '   ' → logprob: -3.2704172134399414
    6. ' and' → logprob: -4.645417213439941
    7. '(' → logprob: -5.395417213439941
    8. 'and' → logprob: -6.020417213439941
    9. ' ' → logprob: -6.395417213439941
    10. ')' → logprob: -6.395417213439941

Token 361: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.23679368197917938
    2. 'ément' → logprob: -2.1117937564849854
    3. 'e' → logprob: -2.4867937564849854
    4. 'ely' → logprob: -5.986793518066406
    5. 'if' → logprob: -6.611793518066406
    6. 'ly' → logprob: -7.111793518066406
    7. '=' → logprob: -7.736793518066406
    8. 'ment' → logprob: -8.236793518066406
    9. 'ument' → logprob: -8.361793518066406
    10. 'elif' → logprob: -8.486793518066406

Token 362: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1286886930465698
    2. ' (' → logprob: -1.1286886930465698
    3. 'n' → logprob: -2.6286888122558594
    4. '1' → logprob: -2.7536888122558594
    5. '(n' → logprob: -2.7536888122558594
    6. 'nn' → logprob: -2.8786888122558594
    7. '(nn' → logprob: -3.5036888122558594
    8. 'and' → logprob: -4.378688812255859
    9. ' n' → logprob: -4.378688812255859
    10. ' and' → logprob: -4.503688812255859

Token 363: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46003231406211853
    2. '(' → logprob: -2.2100322246551514
    3. 'n' → logprob: -2.7100322246551514
    4. ' (' → logprob: -3.0850322246551514
    5. 'nn' → logprob: -3.0850322246551514
    6. '(nn' → logprob: -3.2100322246551514
    7. '(n' → logprob: -3.3350322246551514
    8. ' ' → logprob: -4.8350324630737305
    9. 'and' → logprob: -5.5850324630737305
    10. ' and' → logprob: -5.8350324630737305

Token 364: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.023434145376086235
    2. ' **' → logprob: -3.7734341621398926
    3. '**)' → logprob: -9.648433685302734
    4. ')' → logprob: -10.023433685302734
    5. ' ==' → logprob: -10.523433685302734
    6. '*' → logprob: -11.148433685302734
    7. '==' → logprob: -11.398433685302734
    8. ')**' → logprob: -11.898433685302734
    9. ' ' → logprob: -12.898433685302734
    10. 'n' → logprob: -12.898433685302734

Token 365: 'nn' (ID: 16998)
  Prédit: 'nn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nn' → logprob: -0.0006627569673582911
    2. '(nn' → logprob: -7.625662803649902
    3. ' nn' → logprob: -8.750662803649902
    4. 'n' → logprob: -12.000662803649902
    5. '(n' → logprob: -12.000662803649902
    6. '
' → logprob: -13.625662803649902
    7. '   ' → logprob: -13.750662803649902
    8. '(' → logprob: -14.250662803649902
    9. ' (' → logprob: -14.875662803649902
    10. ' ' → logprob: -15.375662803649902

Token 366: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08903085440397263
    2. ' -' → logprob: -2.4640307426452637
    3. ')' → logprob: -9.464031219482422
    4. ' ' → logprob: -12.464031219482422
    5. 'n' → logprob: -13.089031219482422
    6. '   ' → logprob: -13.464031219482422
    7. '1' → logprob: -13.464031219482422
    8. ')-' → logprob: -13.589031219482422
    9. '```' → logprob: -14.464031219482422
    10. '
' → logprob: -14.464031219482422

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002334568416699767
    2. ' ' → logprob: -8.37523365020752
    3. '   ' → logprob: -14.62523365020752
    4. '
' → logprob: -14.68773365020752
    5. '  ' → logprob: -15.18773365020752
    6. '```' → logprob: -15.18773365020752
    7. '-' → logprob: -15.43773365020752
    8. '

' → logprob: -15.43773365020752
    9. '`' → logprob: -15.56273365020752
    10. ')' → logprob: -15.87523365020752

Token 368: ')),' (ID: 12098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023163605481386185
    2. '))' → logprob: -4.273163795471191
    3. ')==' → logprob: -5.773163795471191
    4. ')),' → logprob: -6.148163795471191
    5. ' )' → logprob: -6.398163795471191
    6. ')):' → logprob: -6.398163795471191
    7. ' ))' → logprob: -9.023163795471191
    8. '):' → logprob: -9.148163795471191
    9. '),' → logprob: -10.148163795471191
    10. ' ' → logprob: -11.023163795471191

Token 369: ' on' (ID: 402)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3348642587661743
    2. ' if' → logprob: -2.2098641395568848
    3. '   ' → logprob: -2.7098641395568848
    4. ' and' → logprob: -3.0848641395568848
    5. 'n' → logprob: -3.3348641395568848
    6. 'if' → logprob: -3.7098641395568848
    7. 'and' → logprob: -6.209864139556885
    8. '    ' → logprob: -9.084864616394043
    9. '  ' → logprob: -9.584864616394043
    10. '(n' → logprob: -9.584864616394043

Token 370: ' traite' (ID: 180696)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.9569959044456482
    2. ' continue' → logprob: -1.206995964050293
    3. '   ' → logprob: -1.581995964050293
    4. ':' → logprob: -2.581995964050293
    5. '    ' → logprob: -4.456995964050293
    6. 'print' → logprob: -4.831995964050293
    7. ' :' → logprob: -5.581995964050293
    8. ' n' → logprob: -5.831995964050293
    9. 'continue' → logprob: -6.206995964050293
    10. '       ' → logprob: -6.706995964050293

Token 371: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8594122529029846
    2. 'if' → logprob: -1.7344121932983398
    3. 'le' → logprob: -1.8594121932983398
    4. ' le' → logprob: -2.73441219329834
    5. 'print' → logprob: -2.85941219329834
    6. 'n' → logprob: -3.10941219329834
    7. ' ce' → logprob: -4.23441219329834
    8. ' n' → logprob: -4.85941219329834
    9. 'elif' → logprob: -4.98441219329834
    10. ' if' → logprob: -5.10941219329834

Token 372: ' cas' (ID: 2108)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.08277428150177
    2. ' cas' → logprob: -1.33277428150177
    3. '   ' → logprob: -1.70777428150177
    4. 'e' → logprob: -2.2077741622924805
    5. 'else' → logprob: -3.3327741622924805
    6. 'print' → logprob: -4.3327741622924805
    7. ' peu' → logprob: -4.4577741622924805
    8. '#' → logprob: -4.7077741622924805
    9. 'elif' → logprob: -4.7077741622924805
    10. 'cas' → logprob: -5.3327741622924805

Token 373: ' particulier' (ID: 47842)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026272663846611977
    2. ':' → logprob: -4.901272773742676
    3. 'if' → logprob: -4.901272773742676
    4. ' if' → logprob: -5.026272773742676
    5. '       ' → logprob: -6.776272773742676
    6. '    ' → logprob: -7.276272773742676
    7. 'elif' → logprob: -8.026272773742676
    8. ' n' → logprob: -8.276272773742676
    9. 'n' → logprob: -8.276272773742676
    10. '  ' → logprob: -8.401272773742676

Token 374: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10717253386974335
    2. ' and' → logprob: -2.3571724891662598
    3. ':' → logprob: -5.60717248916626
    4. 'and' → logprob: -6.23217248916626
    5. ' if' → logprob: -6.98217248916626
    6. 'if' → logprob: -8.857172966003418
    7. ' =' → logprob: -9.732172966003418
    8. '       ' → logprob: -10.357172966003418
    9. ',' → logprob: -10.482172966003418
    10. '    ' → logprob: -10.857172966003418

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04950561001896858
    2. ' and' → logprob: -3.1745057106018066
    3. 'and' → logprob: -5.299505710601807
    4. ':' → logprob: -7.549505710601807
    5. 'if' → logprob: -7.549505710601807
    6. ' if' → logprob: -8.049505233764648
    7. ' ==' → logprob: -10.424505233764648
    8. '  ' → logprob: -10.924505233764648
    9. '==' → logprob: -11.049505233764648
    10. ' ' → logprob: -11.049505233764648

Token 376: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07444227486848831
    2. ' and' → logprob: -3.1994423866271973
    3. ' if' → logprob: -4.074442386627197
    4. 'if' (adapté à ' if') → logprob: -4.574442386627197
    5. 'and' → logprob: -5.699442386627197
    6. ':' → logprob: -8.949441909790039
    7. ' ' → logprob: -9.824441909790039
    8. '  ' → logprob: -10.324441909790039
    9. '    ' → logprob: -10.949441909790039
    10. ' ==' → logprob: -11.324441909790039

Token 377: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6349078416824341
    2. 'n' → logprob: -0.7599078416824341
    3. '2' → logprob: -6.8849077224731445
    4. '(' → logprob: -7.6349077224731445
    5. ' ' → logprob: -7.7599077224731445
    6. '(n' → logprob: -8.759907722473145
    7. ' (' → logprob: -9.134907722473145
    8. '1' → logprob: -10.259907722473145
    9. '   ' → logprob: -10.384907722473145
    10. '	n' → logprob: -11.009907722473145

Token 378: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38704365491867065
    2. '==' → logprob: -1.1370437145233154
    3. '=' → logprob: -9.012043952941895
    4. ' ' → logprob: -11.012043952941895
    5. '==
' → logprob: -11.637043952941895
    6. ' =' → logprob: -12.012043952941895
    7. ' !=' → logprob: -12.137043952941895
    8. '==(' → logprob: -12.512043952941895
    9. '!=' → logprob: -12.887043952941895
    10. '```' → logprob: -13.512043952941895

Token 379: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8122724890708923
    2. ' ' → logprob: -0.8122724890708923
    3. '1' → logprob: -2.187272548675537
    4. '(' → logprob: -9.937272071838379
    5. ' (' → logprob: -10.937272071838379
    6. 'pow' → logprob: -12.312272071838379
    7. '
' → logprob: -12.562272071838379
    8. '   ' → logprob: -13.062272071838379
    9. '  ' → logprob: -13.187272071838379
    10. '```' → logprob: -13.812272071838379

Token 380: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20161448419094086
    2. '1' → logprob: -1.701614499092102
    3. '(' → logprob: -8.826614379882812
    4. ' ' → logprob: -9.826614379882812
    5. ' (' → logprob: -15.951614379882812
    6. 'pow' → logprob: -16.326614379882812
    7. '```' → logprob: -16.826614379882812
    8. '   ' → logprob: -17.076614379882812
    9. '  ' → logprob: -18.201614379882812
    10. '{' → logprob: -18.576614379882812

Token 381: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0789012461900711
    2. ' **' → logprob: -2.5789012908935547
    3. '*' → logprob: -11.828901290893555
    4. ' *' → logprob: -12.578901290893555
    5. ' ' → logprob: -14.953901290893555
    6. ' ' → logprob: -15.703901290893555
    7. '```' → logprob: -16.578901290893555
    8. '*(' → logprob: -17.078901290893555
    9. ' **
' → logprob: -17.078901290893555
    10. '   ' → logprob: -17.203901290893555

Token 382: ' (' (ID: 350)
  Prédit: '(nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nn' → logprob: -0.013226109556853771
    2. ' (' → logprob: -4.51322603225708
    3. '(n' → logprob: -6.13822603225708
    4. '   ' → logprob: -12.263226509094238
    5. '(' → logprob: -12.638226509094238
    6. '  ' → logprob: -12.638226509094238
    7. ' ' → logprob: -13.013226509094238
    8. 'nn' → logprob: -14.263226509094238
    9. '    ' → logprob: -14.388226509094238
    10. '(nd' → logprob: -14.388226509094238

Token 383: 'nn' (ID: 16998)
  Prédit: 'nn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nn' → logprob: -0.0012245126999914646
    2. '(nn' → logprob: -6.751224517822266
    3. ' nn' → logprob: -9.876224517822266
    4. '(n' → logprob: -13.626224517822266
    5. '   ' → logprob: -14.251224517822266
    6. '(' → logprob: -14.876224517822266
    7. 'n' → logprob: -15.251224517822266
    8. ' (' → logprob: -15.251224517822266
    9. '
' → logprob: -16.876224517822266
    10. '.nn' → logprob: -17.001224517822266

Token 384: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.043004110455513
    2. ' -' → logprob: -3.168004035949707
    3. ' ' → logprob: -13.293004035949707
    4. '   ' → logprob: -13.418004035949707
    5. ')' → logprob: -14.293004035949707
    6. '1' → logprob: -14.418004035949707
    7. '  ' → logprob: -15.793004035949707
    8. ')-' → logprob: -15.918004035949707
    9. '−' → logprob: -17.043004989624023
    10. '[' → logprob: -17.168004989624023

Token 385: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001450187264708802
    2. ' ' → logprob: -8.875144958496094
    3. '   ' → logprob: -12.250144958496094
    4. '  ' → logprob: -15.500144958496094
    5. ')' → logprob: -16.250144958496094
    6. '    ' → logprob: -16.750144958496094
    7. '2' → logprob: -17.500144958496094
    8. '```' → logprob: -17.875144958496094
    9. '
' → logprob: -18.125144958496094
    10. '

' → logprob: -18.875144958496094

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.50000286102295
    4. '<|end|>' → logprob: -16.750001907348633
    5. ')' → logprob: -17.125001907348633
    6. '2' → logprob: -18.000001907348633
    7. '```' → logprob: -18.125001907348633
    8. '
' → logprob: -18.250001907348633
    9. '  ' → logprob: -18.500001907348633
    10. '

' → logprob: -19.625001907348633

Token 387: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005967780947685242
    2. '):
' → logprob: -5.130967617034912
    3. ' ):' → logprob: -10.88096809387207
    4. ')' → logprob: -11.00596809387207
    5. '):
' → logprob: -13.00596809387207
    6. '   ' → logprob: -14.25596809387207
    7. ':' → logprob: -14.63096809387207
    8. '):

' → logprob: -15.75596809387207
    9. ' ):
' → logprob: -16.63096809387207
    10. ' ' → logprob: -17.25596809387207

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011844152584671974
    2. ':
' → logprob: -5.386844158172607
    3. '   ' → logprob: -5.511844158172607
    4. ':' → logprob: -6.136844158172607
    5. 'print' → logprob: -7.011844158172607
    6. ' print' → logprob: -10.51184368133545
    7. '):
' → logprob: -10.63684368133545
    8. '
' → logprob: -11.38684368133545
    9. '     ' → logprob: -11.88684368133545
    10. '           ' → logprob: -12.13684368133545

Token 389: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.631332516670227
    2. '   ' → logprob: -1.006332516670227
    3. '       ' → logprob: -2.6313323974609375
    4. ' print' → logprob: -3.5063323974609375
    5. '
' → logprob: -8.381332397460938
    6. ' ' → logprob: -8.756332397460938
    7. '  ' → logprob: -9.756332397460938
    8. '     ' → logprob: -10.256332397460938
    9. '           ' → logprob: -10.756332397460938
    10. '    ' → logprob: -11.006332397460938

Token 390: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000611763505730778
    2. '       ' → logprob: -8.250611305236816
    3. ' print' → logprob: -8.500611305236816
    4. '   ' → logprob: -8.875611305236816
    5. '           ' → logprob: -12.875611305236816
    6. ' ' → logprob: -13.250611305236816
    7. '  ' → logprob: -13.625611305236816
    8. '#' → logprob: -15.000611305236816
    9. '     ' → logprob: -15.250611305236816
    10. '      ' → logprob: -15.500611305236816

Token 391: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.007778052240610123
    2. 'ich' → logprob: -6.132778167724609
    3. 'print' → logprob: -6.132778167724609
    4. 'iche' → logprob: -6.632778167724609
    5. 'cher' → logprob: -7.132778167724609
    6. '   ' → logprob: -7.132778167724609
    7. 'ic' → logprob: -8.38277816772461
    8. '       ' → logprob: -9.50777816772461
    9. 'ichier' → logprob: -10.25777816772461
    10. '#' → logprob: -10.38277816772461

Token 392: ' "' (ID: 392)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.016700122505426407
    2. '"' → logprob: -4.391700267791748
    3. ' "' → logprob: -5.891700267791748
    4. 'No' → logprob: -6.766700267791748
    5. '("' → logprob: -8.64169979095459
    6. ' No' → logprob: -10.51669979095459
    7. '“No' → logprob: -11.01669979095459
    8. '   ' → logprob: -11.01669979095459
    9. 'Yes' → logprob: -11.89169979095459
    10. ''' → logprob: -12.26669979095459

Token 393: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.014281149953603745
    2. 'Yes' → logprob: -4.264281272888184
    3. '"No' → logprob: -9.389281272888184
    4. '"' → logprob: -10.639281272888184
    5. 'NO' → logprob: -12.264281272888184
    6. '-' → logprob: -13.389281272888184
    7. ' No' → logprob: -13.764281272888184
    8. 'no' → logprob: -14.514281272888184
    9. 'YES' → logprob: -14.514281272888184
    10. 'Ye' → logprob: -15.889281272888184

Token 394: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -9.579495235811919e-05
    2. ')' → logprob: -9.75009536743164
    3. '"' → logprob: -10.75009536743164
    4. '")
' → logprob: -11.62509536743164
    5. '```' → logprob: -12.25009536743164
    6. '<|end|>' → logprob: -13.87509536743164
    7. '");' → logprob: -14.75009536743164
    8. ' ")' → logprob: -15.12509536743164
    9. '')' → logprob: -15.62509536743164
    10. '"""' → logprob: -16.12509536743164

Token 395: ' car' (ID: 1669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' on' (ID: 402)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9987664222717285
    2. ' n' → logprob: -1.1237664222717285
    3. ' ce' → logprob: -1.7487664222717285
    4. ' cette' → logprob: -3.1237664222717285
    5. ' le' → logprob: -3.2487664222717285
    6. 'n' → logprob: -4.6237664222717285
    7. ' on' → logprob: -5.2487664222717285
    8. ' this' → logprob: -5.3737664222717285
    9. '       ' → logprob: -5.4987664222717285
    10. ' il' → logprob: -5.7487664222717285

Token 397: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.059062566608190536
    2. 'ne' → logprob: -3.6840624809265137
    3. 'n' → logprob: -3.9340624809265137
    4. ' n' → logprob: -5.059062480926514
    5. ' considère' → logprob: -5.434062480926514
    6. ' suppose' → logprob: -7.559062480926514
    7. ' cannot' → logprob: -8.559062957763672
    8. ' continue' → logprob: -8.559062957763672
    9. '#' → logprob: -9.059062957763672
    10. '       ' → logprob: -9.184062957763672

Token 398: ' satisfait' (ID: 174890)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.4395294785499573
    2. ' peut' → logprob: -1.0645294189453125
    3. 's' → logprob: -5.4395294189453125
    4. ' peux' → logprob: -6.6895294189453125
    5. 'pas' → logprob: -7.1895294189453125
    6. ' considère' → logprob: -7.3145294189453125
    7. 'p' → logprob: -7.4395294189453125
    8. '#' → logprob: -7.4395294189453125
    9. 'print' → logprob: -7.6895294189453125
    10. ' ne' → logprob: -8.064529418945312

Token 399: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.0890403464436531
    2. 'pas' → logprob: -2.4640402793884277
    3. '_pas' → logprob: -10.464040756225586
    4. ' jamais' → logprob: -11.089040756225586
    5. ' ' → logprob: -11.464040756225586
    6. 't' → logprob: -11.464040756225586
    7. ' aucune' → logprob: -11.464040756225586
    8. 'Pas' → logprob: -12.714040756225586
    9. '   ' → logprob: -12.714040756225586
    10. '"' → logprob: -12.839040756225586

Token 400: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15962524712085724
    2. ' les' → logprob: -2.159625291824341
    3. ' l' → logprob: -4.909625053405762
    4. '")' → logprob: -5.284625053405762
    5. 'les' → logprob: -5.784625053405762
    6. '"' → logprob: -5.909625053405762
    7. ' le' → logprob: -6.034625053405762
    8. ' the' → logprob: -6.659625053405762
    9. '       ' → logprob: -6.784625053405762
    10. '   ' → logprob: -6.909625053405762

Token 401: ' condition' (ID: 7060)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.1962418556213379
    2. 'proble' → logprob: -2.696241855621338
    3. 'condition' → logprob: -2.946241855621338
    4. 'problem' → logprob: -3.446241855621338
    5. ' problème' → logprob: -3.946241855621338
    6. 'print' → logprob: -5.696241855621338
    7. '#' → logprob: -7.071241855621338
    8. 'test' → logprob: -7.696241855621338
    9. '```' → logprob: -7.946241855621338
    10. 'conditions' → logprob: -8.19624137878418

Token 402: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9470393061637878
    2. ')' → logprob: -1.0720393657684326
    3. '")' → logprob: -1.8220393657684326
    4. '           ' → logprob: -3.3220393657684326
    5. '   ' → logprob: -3.3220393657684326
    6. '()' → logprob: -4.0720391273498535
    7. '<|end|>' → logprob: -5.1970391273498535
    8. '("' → logprob: -5.6970391273498535
    9. '\n' → logprob: -5.8220391273498535
    10. '"' → logprob: -6.1970391273498535

Token 403: ' ce' (ID: 2357)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.20661728084087372
    2. ' ces' → logprob: -2.2066173553466797
    3. ' ce' → logprob: -3.3316173553466797
    4. 'ce' → logprob: -3.9566173553466797
    5. 'les' → logprob: -4.58161735534668
    6. ' cette' → logprob: -5.33161735534668
    7. 'cet' → logprob: -5.58161735534668
    8. 'c' → logprob: -6.58161735534668
    9. ' cet' → logprob: -7.45661735534668
    10. ' les' → logprob: -7.58161735534668

Token 404: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.41650518774986267
    2. 'n' → logprob: -1.291505217552185
    3. 'case' → logprob: -3.4165050983428955
    4. 'nombre' → logprob: -4.666505336761475
    5. 'type' → logprob: -4.791505336761475
    6. 'val' → logprob: -5.041505336761475
    7. ' cas' → logprob: -5.416505336761475
    8. '```' → logprob: -6.166505336761475
    9. 'value' → logprob: -7.041505336761475
    10. 's' → logprob: -8.666504859924316

Token 405: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.380341112613678
    2. '           ' → logprob: -1.7553410530090332
    3. ')' → logprob: -2.130341053009033
    4. '<|end|>' → logprob: -4.630341053009033
    5. '")' → logprob: -5.255341053009033
    6. '   ' → logprob: -5.755341053009033
    7. '```' → logprob: -6.005341053009033
    8. 'print' → logprob: -7.130341053009033
    9. '               ' → logprob: -7.130341053009033
    10. ')
' → logprob: -7.380341053009033

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003331233514472842
    2. '           ' → logprob: -5.878331184387207
    3. '
' → logprob: -8.003331184387207
    4. '```' → logprob: -9.628331184387207
    5. 'print' → logprob: -10.003331184387207
    6. '   ' → logprob: -10.003331184387207
    7. '        
' → logprob: -11.378331184387207
    8. '\n' → logprob: -12.378331184387207
    9. 'n' → logprob: -12.628331184387207
    10. ')
' → logprob: -12.878331184387207

Token 407: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00318163656629622
    2. ' print' → logprob: -5.753181457519531
    3. '       ' → logprob: -12.628181457519531
    4. '           ' → logprob: -14.378181457519531
    5. '   ' → logprob: -16.25318145751953
    6. '	print' → logprob: -18.37818145751953
    7. ' ' → logprob: -19.00318145751953
    8. 'Print' → logprob: -19.87818145751953
    9. 'return' → logprob: -19.87818145751953
    10. '```' → logprob: -19.87818145751953

Token 408: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002614550176076591
    2. '(' → logprob: -8.250261306762695
    3. '('' → logprob: -16.125261306762695
    4. ' ("' → logprob: -17.375261306762695
    5. '(
' → logprob: -18.000261306762695
    6. '()' → logprob: -18.875261306762695
    7. '("")' → logprob: -19.250261306762695
    8. '(No' → logprob: -20.500261306762695
    9. '("""' → logprob: -20.625261306762695
    10. '(

' → logprob: -20.875261306762695

Token 409: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -7.896309739408025e-07
    2. '"No' → logprob: -14.125000953674316
    3. ' No' → logprob: -19.625
    4. 'Yes' → logprob: -20.25
    5. '"' → logprob: -20.5
    6. 'N' → logprob: -22.25
    7. 'NO' → logprob: -22.75
    8. '_No' → logprob: -22.875
    9. '```' → logprob: -23.0
    10. 'no' → logprob: -23.875

Token 410: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0013726113829761744
    2. '")
' → logprob: -6.626372814178467
    3. ')' → logprob: -10.376372337341309
    4. '   ' → logprob: -12.001372337341309
    5. '")
' → logprob: -12.376372337341309
    6. ')")' → logprob: -12.876372337341309
    7. '```' → logprob: -13.751372337341309
    8. '')' → logprob: -14.876372337341309
    9. ' ")' → logprob: -15.251372337341309
    10. '"' → logprob: -15.751372337341309

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5768654942512512
    2. 'else' → logprob: -0.8268654942512512
    3. 'elif' → logprob: -8.201865196228027
    4. ' else' → logprob: -8.201865196228027
    5. '<|end|>' → logprob: -8.326865196228027
    6. '    
' → logprob: -9.951865196228027
    7. '
' → logprob: -10.326865196228027
    8. ')' → logprob: -10.451865196228027
    9. '<|end|>' → logprob: -12.076865196228027
    10. '	else' → logprob: -12.201865196228027

Token 412: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.008288432843983173
    2. ' else' → logprob: -4.883288383483887
    3. 'elif' → logprob: -7.758288383483887
    4. '   ' → logprob: -8.383288383483887
    5. ')' → logprob: -11.258288383483887
    6. '	else' → logprob: -12.758288383483887
    7. '    
' → logprob: -13.133288383483887
    8. ':' → logprob: -13.258288383483887
    9. '<|end|>' → logprob: -13.383288383483887
    10. '
' → logprob: -14.133288383483887

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25216859579086304
    2. ':
' → logprob: -1.5021686553955078
    3. '   ' → logprob: -8.502168655395508
    4. '       ' → logprob: -10.877168655395508
    5. ' :' → logprob: -12.002168655395508
    6. ' :
' → logprob: -12.002168655395508
    7. ':
' → logprob: -12.877168655395508
    8. ':

' → logprob: -13.627168655395508
    9. '):
' → logprob: -14.002168655395508
    10. '```' → logprob: -15.877168655395508

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00507009495049715
    2. '   ' → logprob: -5.755070209503174
    3. ':' → logprob: -6.380070209503174
    4. 'print' → logprob: -9.005069732666016
    5. ':
' → logprob: -10.255069732666016
    6. ' print' → logprob: -10.630069732666016
    7. ' :' → logprob: -12.380069732666016
    8. '#' → logprob: -13.005069732666016
    9. '           ' → logprob: -13.255069732666016
    10. '     ' → logprob: -14.130069732666016

Token 415: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6904194355010986
    2. 'print' → logprob: -0.8154194355010986
    3. ' print' → logprob: -3.0654194355010986
    4. '       ' → logprob: -4.6904191970825195
    5. ':' → logprob: -9.56541919708252
    6. '"' → logprob: -9.69041919708252
    7. '           ' → logprob: -9.81541919708252
    8. ' ' → logprob: -10.06541919708252
    9. '#' (adapté à ' #') → logprob: -10.19041919708252
    10. '    ' → logprob: -10.56541919708252

Token 416: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002033799421042204
    2. '   ' → logprob: -6.627033710479736
    3. '#' → logprob: -8.127034187316895
    4. ' print' → logprob: -8.252034187316895
    5. 'else' → logprob: -9.252034187316895
    6. '       ' → logprob: -10.377034187316895
    7. '
' → logprob: -12.377034187316895
    8. 'n' → logprob: -12.377034187316895
    9. ' ' → logprob: -12.627034187316895
    10. '#print' → logprob: -13.752034187316895

Token 417: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30202198028564453
    2. ':
' → logprob: -1.8020219802856445
    3. '       ' → logprob: -2.8020219802856445
    4. '   ' → logprob: -3.9270219802856445
    5. 'print' → logprob: -4.5520219802856445
    6. '           ' → logprob: -5.6770219802856445
    7. ' print' → logprob: -7.1770219802856445
    8. ' :' → logprob: -7.9270219802856445
    9. ' :
' → logprob: -8.802021980285645
    10. '```' → logprob: -11.177021980285645

Token 418: 'n' (ID: 77)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7273156046867371
    2. '       ' → logprob: -0.7273156046867371
    3. 'print' → logprob: -3.727315664291382
    4. ' print' → logprob: -5.852315425872803
    5. ')' → logprob: -6.102315425872803
    6. '           ' → logprob: -6.352315425872803
    7. ':' → logprob: -6.852315425872803
    8. '    ' → logprob: -7.602315425872803
    9. '#' → logprob: -7.852315425872803
    10. ' n' → logprob: -8.977315902709961

Token 419: ' >' (ID: 1424)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.173457145690918
    2. ':' → logprob: -1.798457145690918
    3. ' =' → logprob: -1.923457145690918
    4. 'print' → logprob: -2.173457145690918
    5. '=' → logprob: -2.673457145690918
    6. ')' → logprob: -3.048457145690918
    7. ' print' → logprob: -3.048457145690918
    8. ' ==' → logprob: -4.173457145690918
    9. '%' → logprob: -4.173457145690918
    10. '):' → logprob: -4.423457145690918

Token 420: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.539334774017334
    2. '2' → logprob: -0.914334774017334
    3. '4' → logprob: -4.789334774017334
    4. '0' → logprob: -5.414334774017334
    5. ' n' → logprob: -7.539334774017334
    6. '=' → logprob: -7.664334774017334
    7. '3' → logprob: -7.664334774017334
    8. '1' → logprob: -7.914334774017334
    9. '       ' → logprob: -8.289335250854492
    10. 'n' → logprob: -8.289335250854492

Token 421: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005609253887087107
    2. '4' → logprob: -5.755609035491943
    3. ' ' → logprob: -6.380609035491943
    4. '0' → logprob: -7.755609035491943
    5. '1' → logprob: -8.755609512329102
    6. '   ' → logprob: -9.255609512329102
    7. '3' → logprob: -10.255609512329102
    8. '(' → logprob: -11.755609512329102
    9. '       ' → logprob: -12.880609512329102
    10. '=' → logprob: -13.380609512329102

Token 422: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39919301867485046
    2. '):
' → logprob: -1.2741930484771729
    3. '),' → logprob: -4.149192810058594
    4. '       ' → logprob: -4.399192810058594
    5. ' and' → logprob: -4.774192810058594
    6. ')' → logprob: -5.149192810058594
    7. '   ' → logprob: -5.649192810058594
    8. ':' → logprob: -6.399192810058594
    9. '):
' → logprob: -7.399192810058594
    10. 'and' → logprob: -8.399192810058594

Token 423: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7568864822387695
    2. '       ' → logprob: -0.8818864822387695
    3. ' print' → logprob: -3.2568864822387695
    4. ')' → logprob: -3.6318864822387695
    5. 'print' → logprob: -4.1318864822387695
    6. ' n' → logprob: -5.0068864822387695
    7. '           ' → logprob: -5.1318864822387695
    8. '    ' → logprob: -5.3818864822387695
    9. '
' → logprob: -5.6318864822387695
    10. '    
' → logprob: -6.1318864822387695

Token 424: ' pair' (ID: 10610)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.3697988986968994
    2. '%' → logprob: -1.4947988986968994
    3. ' !=' → logprob: -1.4947988986968994
    4. ' >' → logprob: -1.8697988986968994
    5. '>' → logprob: -2.8697988986968994
    6. '!=' → logprob: -3.9947988986968994
    7. ')' → logprob: -4.11979866027832
    8. ' <=' → logprob: -4.36979866027832
    9. ' ' → logprob: -4.61979866027832
    10. ' //' → logprob: -4.99479866027832

Token 425: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5946263670921326
    2. '):' → logprob: -1.5946264266967773
    3. '):
' → logprob: -1.7196264266967773
    4. ')' → logprob: -3.3446264266967773
    5. '       ' → logprob: -3.7196264266967773
    6. ' et' → logprob: -6.344626426696777
    7. '   ' → logprob: -6.469626426696777
    8. ' and' → logprob: -7.344626426696777
    9. '):

' → logprob: -7.469626426696777
    10. ',' → logprob: -7.719626426696777

Token 426: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3280115127563477
    2. ' n' → logprob: -1.3280115127563477
    3. '       ' → logprob: -2.0780115127563477
    4. ' print' → logprob: -2.3280115127563477
    5. '   ' → logprob: -2.7030115127563477
    6. ' )' → logprob: -2.9530115127563477
    7. '):' → logprob: -3.4530115127563477
    8. ' et' → logprob: -4.078011512756348
    9. '    ' → logprob: -4.203011512756348
    10. ' and' → logprob: -4.453011512756348

Token 427: ' pas' (ID: 2173)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.743614673614502
    2. ' n' → logprob: -1.368614673614502
    3. ' not' → logprob: -1.493614673614502
    4. 'not' → logprob: -3.368614673614502
    5. ' pas' → logprob: -4.993614673614502
    6. 'pas' → logprob: -5.493614673614502
    7. 'non' → logprob: -9.993614196777344
    8. ' non' → logprob: -10.243614196777344
    9. ' ' → logprob: -10.368614196777344
    10. '(n' → logprob: -10.743614196777344

Token 428: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.2997272312641144
    2. ' une' → logprob: -1.799727201461792
    3. 'pu' → logprob: -2.674727201461792
    4. ' puissance' → logprob: -4.299727439880371
    5. ' ' → logprob: -5.424727439880371
    6. '   ' → logprob: -6.924727439880371
    7. 'exact' → logprob: -7.174727439880371
    8. '2' → logprob: -7.299727439880371
    9. ' power' → logprob: -7.674727439880371
    10. 'power' → logprob: -7.799727439880371

Token 429: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.012896307744085789
    2. 'power' → logprob: -4.887896537780762
    3. ' puissance' → logprob: -5.387896537780762
    4. 'pow' → logprob: -7.637896537780762
    5. ' power' → logprob: -9.262896537780762
    6. ' ' → logprob: -9.762896537780762
    7. ' puiss' → logprob: -11.387896537780762
    8. '   ' → logprob: -11.512896537780762
    9. '2' → logprob: -11.512896537780762
    10. '```' → logprob: -11.887896537780762

Token 430: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.287628173828125
    2. 'de' → logprob: -1.412628173828125
    3. '       ' → logprob: -5.287628173828125
    4. ' of' → logprob: -7.912628173828125
    5. '   ' → logprob: -7.912628173828125
    6. ' ' → logprob: -8.787628173828125
    7. '_de' → logprob: -9.037628173828125
    8. 'of' → logprob: -9.412628173828125
    9. '#' → logprob: -9.787628173828125
    10. 'def' → logprob: -10.162628173828125

Token 431: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009351630578748882
    2. ' ' → logprob: -7.000935077667236
    3. 'de' → logprob: -11.375935554504395
    4. ' deux' → logprob: -12.125935554504395
    5. ' two' → logprob: -12.875935554504395
    6. 'two' → logprob: -13.125935554504395
    7. 'Deux' → logprob: -14.750935554504395
    8. '```' → logprob: -14.875935554504395
    9. '   ' → logprob: -15.000935554504395
    10. ' Deux' → logprob: -15.938435554504395

Token 432: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. ' two' → logprob: -15.750096321105957
    4. 'two' → logprob: -16.250097274780273
    5. ')' → logprob: -16.750097274780273
    6. '```' → logprob: -17.375097274780273
    7. ' deux' → logprob: -17.750097274780273
    8. '２' → logprob: -18.375097274780273
    9. ',' → logprob: -18.375097274780273
    10. '   ' → logprob: -18.375097274780273

Token 433: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41200774908065796
    2. '):
' → logprob: -1.7870078086853027
    3. '),' → logprob: -2.0370078086853027
    4. ')' → logprob: -3.4120078086853027
    5. ':' → logprob: -5.912007808685303
    6. '   ' → logprob: -6.287007808685303
    7. ' ):' → logprob: -7.537007808685303
    8. '):

' → logprob: -7.912007808685303
    9. ' ):
' → logprob: -7.912007808685303
    10. '       ' → logprob: -8.287007331848145

Token 434: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4050610363483429
    2. 'print' → logprob: -1.1550610065460205
    3. '       ' → logprob: -4.6550612449646
    4. ' print' → logprob: -4.7800612449646
    5. '
' → logprob: -10.280060768127441
    6. '           ' → logprob: -10.655060768127441
    7. ' ' → logprob: -10.780060768127441
    8. '    ' → logprob: -11.655060768127441
    9. '  ' → logprob: -11.905060768127441
    10. '#' → logprob: -12.405060768127441

Token 435: ' continue' (ID: 4901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08608057349920273
    2. ' print' → logprob: -2.961080551147461
    3. '       ' → logprob: -4.336080551147461
    4. '   ' → logprob: -4.461080551147461
    5. ':' → logprob: -5.961080551147461
    6. '#' → logprob: -7.211080551147461
    7. '           ' → logprob: -7.336080551147461
    8. ':
' → logprob: -7.586080551147461
    9. '    ' → logprob: -8.086080551147461
    10. '
' → logprob: -8.961080551147461

Token 436: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11161331087350845
    2. ':
' → logprob: -3.1116132736206055
    3. '   ' → logprob: -3.2366132736206055
    4. 'print' → logprob: -4.2366132736206055
    5. '       ' → logprob: -4.9866132736206055
    6. '           ' → logprob: -8.736613273620605
    7. 'with' → logprob: -9.236613273620605
    8. ' print' → logprob: -9.236613273620605
    9. '(print' → logprob: -10.111613273620605
    10. ' with' → logprob: -11.486613273620605

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10243658721446991
    2. '   ' → logprob: -2.3524365425109863
    3. 'print' → logprob: -6.602436542510986
    4. ':' → logprob: -7.102436542510986
    5. '           ' → logprob: -11.102437019348145
    6. ' print' → logprob: -11.852437019348145
    7. '```' → logprob: -11.852437019348145
    8. 'else' → logprob: -12.352437019348145
    9. ':
' → logprob: -12.602437019348145
    10. '	   ' → logprob: -13.727437019348145

Token 438: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.026799706742167473
    2. '   ' → logprob: -4.02679967880249
    3. '       ' → logprob: -5.02679967880249
    4. ' print' → logprob: -6.27679967880249
    5. 'else' → logprob: -9.526800155639648
    6. ' ' → logprob: -10.401800155639648
    7. '           ' → logprob: -10.651800155639648
    8. '#' → logprob: -11.401800155639648
    9. 'n' → logprob: -11.651800155639648
    10. '
' → logprob: -12.526800155639648

Token 439: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00012403888104017824
    2. '(' → logprob: -9.000123977661133
    3. '('' → logprob: -14.250123977661133
    4. ' ("' → logprob: -17.625123977661133
    5. '"' → logprob: -17.750123977661133
    6. '(
' → logprob: -18.000123977661133
    7. 'Yes' → logprob: -18.375123977661133
    8. '()' → logprob: -19.500123977661133
    9. '(No' → logprob: -20.250123977661133
    10. '   ' → logprob: -20.625123977661133

Token 440: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -6.153795766294934e-06
    2. '"' → logprob: -12.125005722045898
    3. 'No' → logprob: -15.125005722045898
    4. 'YES' → logprob: -15.625005722045898
    5. ' Yes' → logprob: -15.875005722045898
    6. 'Oui' → logprob: -16.7500057220459
    7. '“Yes' → logprob: -17.2500057220459
    8. 'Ye' → logprob: -17.8750057220459
    9. 'Yeah' → logprob: -20.1250057220459
    10. 'Sure' → logprob: -20.7500057220459

Token 441: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.014824982732534409
    2. '")
' → logprob: -4.264824867248535
    3. ')' → logprob: -7.514824867248535
    4. ')
' → logprob: -10.514824867248535
    5. '   ' → logprob: -10.889824867248535
    6. '"' → logprob: -10.889824867248535
    7. '")
' → logprob: -10.889824867248535
    8. 'n' → logprob: -11.639824867248535
    9. ' ")' → logprob: -12.014824867248535
    10. '(n' → logprob: -12.514824867248535

Token 442: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7450127005577087
    2. 'for' → logprob: -1.3700127601623535
    3. '<|end|>' → logprob: -1.8700127601623535
    4. ' for' → logprob: -2.3700127601623535
    5. ')' → logprob: -4.4950127601623535
    6. '<|end|>' → logprob: -5.9950127601623535
    7. ' ' → logprob: -6.3700127601623535
    8. ':' → logprob: -6.8700127601623535
    9. '  
' → logprob: -6.8700127601623535
    10. '    
' → logprob: -7.2450127601623535

Token 443: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2574206590652466
    2. ' for' → logprob: -1.8824206590652466
    3. '       ' → logprob: -2.632420539855957
    4. '   ' → logprob: -7.132420539855957
    5. 'i' → logprob: -7.382420539855957
    6. 'n' → logprob: -7.632420539855957
    7. 'pairs' → logprob: -7.882420539855957
    8. 'k' → logprob: -8.507420539855957
    9. ' pairs' → logprob: -9.882420539855957
    10. ' i' → logprob: -10.132420539855957

Token 444: ' Im' (ID: 3133)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1475638747215271
    2. 'pairs' → logprob: -2.647563934326172
    3. 'edges' → logprob: -3.147563934326172
    4. 'k' → logprob: -5.772563934326172
    5. 'm' → logprob: -5.897563934326172
    6. 'a' → logprob: -5.897563934326172
    7. 'step' → logprob: -6.022563934326172
    8. 'print' → logprob: -6.397563934326172
    9. 'x' → logprob: -6.522563934326172
    10. 'count' → logprob: -6.772563934326172

Token 445: 'primer' (ID: 55821)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.048773352056741714
    2. 'for' → logprob: -3.1737732887268066
    3. '   ' → logprob: -5.423773288726807
    4. 'print' → logprob: -7.923773288726807
    5. 'prim' → logprob: -8.423773765563965
    6. ' for' → logprob: -8.798773765563965
    7. 'prime' → logprob: -8.798773765563965
    8. '       ' → logprob: -9.298773765563965
    9. 'primer' → logprob: -9.548773765563965
    10. '    ' → logprob: -9.673773765563965

Token 446: ' success' (ID: 3505)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.37957704067230225
    2. 'n' → logprob: -1.3795770406723022
    3. '(' → logprob: -3.379577159881592
    4. '()' → logprob: -4.254577159881592
    5. '((' → logprob: -5.504577159881592
    6. ' (' → logprob: -6.004577159881592
    7. '(i' → logprob: -6.254577159881592
    8. '0' → logprob: -6.379577159881592
    9. ' n' → logprob: -6.754577159881592
    10. 'i' → logprob: -7.004577159881592

Token 447: 'ivement' (ID: 37978)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.812748372554779
    2. 'ion' → logprob: -1.9377484321594238
    3. 'ively' → logprob: -2.312748432159424
    4. 'ivement' → logprob: -2.437748432159424
    5. 'e' → logprob: -2.687748432159424
    6. 's' → logprob: -3.062748432159424
    7. 'ive' → logprob: -3.312748432159424
    8. '   ' → logprob: -3.812748432159424
    9. 'if' → logprob: -3.937748432159424
    10. ' ' → logprob: -5.312748432159424

Token 448: ' des' (ID: 731)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9368821382522583
    2. 'i' → logprob: -1.6868821382522583
    3. 'n' → logprob: -1.8118821382522583
    4. '(n' → logprob: -2.3118820190429688
    5. '(' → logprob: -2.5618820190429688
    6. '1' → logprob: -3.0618820190429688
    7. '0' → logprob: -3.6868820190429688
    8. 'for' → logprob: -5.811882019042969
    9. '2' → logprob: -6.311882019042969
    10. '((' → logprob: -6.561882019042969

Token 449: ' p' (ID: 275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.212678074836731
    2. 'pairs' → logprob: -1.837678074836731
    3. 'i' → logprob: -1.962678074836731
    4. '(n' → logprob: -2.0876779556274414
    5. '(i' → logprob: -2.2126779556274414
    6. '0' → logprob: -3.2126779556274414
    7. '1' → logprob: -3.2126779556274414
    8. '(' → logprob: -3.7126779556274414
    9. 'nn' → logprob: -3.7126779556274414
    10. '2' → logprob: -4.462677955627441

Token 450: 'aires' (ID: 8507)
  Prédit: 'airs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.04269494116306305
    2. 'r' → logprob: -3.5426950454711914
    3. 'air' → logprob: -5.042695045471191
    4. 'ar' → logprob: -6.292695045471191
    5. 'aires' → logprob: -7.042695045471191
    6. '1' → logprob: -7.042695045471191
    7. 'a' → logprob: -7.167695045471191
    8. 'i' → logprob: -7.917695045471191
    9. '(' → logprob: -8.292695045471191
    10. 'pairs' → logprob: -8.292695045471191

Token 451: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.032041214406490326
    2. '(' → logprob: -3.532041311264038
    3. 'for' → logprob: -7.032041072845459
    4. '(range' → logprob: -7.782041072845459
    5. '((' → logprob: -8.532041549682617
    6. '(n' → logprob: -8.782041549682617
    7. ' (' → logprob: -8.782041549682617
    8. 'i' → logprob: -8.907041549682617
    9. '(
' → logprob: -9.407041549682617
    10. ' i' → logprob: -10.032041549682617

Token 452: ' nombres' (ID: 76205)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7641565799713135
    2. 'n' → logprob: -1.2641565799713135
    3. 'numbers' → logprob: -2.6391565799713135
    4. '(i' → logprob: -3.0141565799713135
    5. '(n' → logprob: -3.2641565799713135
    6. '1' → logprob: -3.6391565799713135
    7. '(' → logprob: -3.6391565799713135
    8. '0' → logprob: -3.6391565799713135
    9. '2' → logprob: -5.264156341552734
    10. ' i' → logprob: -6.139156341552734

Token 453: ' qui' (ID: 2780)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03022930957376957
    2. '(' → logprob: -3.655229330062866
    3. '(n' → logprob: -7.030229091644287
    4. ' (' → logprob: -7.280229091644287
    5. ' for' → logprob: -7.405229091644287
    6. ' i' → logprob: -7.405229091644287
    7. 'for' → logprob: -7.655229091644287
    8. 'i' → logprob: -8.530229568481445
    9. ',' → logprob: -9.280229568481445
    10. '(range' → logprob: -9.405229568481445

Token 454: ' peuvent' (ID: 21321)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.866263508796692
    2. 'for' → logprob: -1.866263508796692
    3. ' i' → logprob: -2.3662633895874023
    4. 's' → logprob: -2.4912633895874023
    5. ' n' → logprob: -2.4912633895874023
    6. 'i' → logprob: -2.6162633895874023
    7. ' form' → logprob: -2.8662633895874023
    8. ' ' → logprob: -2.9912633895874023
    9. 'n' → logprob: -3.1162633895874023
    10. ' connect' → logprob: -3.3662633895874023

Token 455: ' représ' (ID: 31534)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2022204399108887
    2. ' form' → logprob: -2.0772204399108887
    3. 's' → logprob: -2.2022204399108887
    4. 'form' → logprob: -2.4522204399108887
    5. ' i' → logprob: -2.5772204399108887
    6. 'represent' → logprob: -2.9522204399108887
    7. 'range' → logprob: -3.0772204399108887
    8. ' be' → logprob: -3.4522204399108887
    9. 'n' → logprob: -3.4522204399108887
    10. ' ' → logprob: -3.8272204399108887

Token 456: 'enter' (ID: 3547)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7410092353820801
    2. 'ent' → logprob: -0.7410092353820801
    3. 'n' → logprob: -3.99100923538208
    4. 'enter' → logprob: -4.24100923538208
    5. 'ont' → logprob: -5.74100923538208
    6. 'ter' → logprob: -5.99100923538208
    7. 'iter' → logprob: -6.61600923538208
    8. 're' → logprob: -6.74100923538208
    9. 'onter' → logprob: -6.74100923538208
    10. 'nt' → logprob: -7.11600923538208

Token 457: ' des' (ID: 731)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4906277656555176
    2. 'n' → logprob: -1.6156277656555176
    3. '(' → logprob: -1.7406277656555176
    4. ' (' → logprob: -1.8656277656555176
    5. '(i' → logprob: -2.9906277656555176
    6. '(n' → logprob: -3.1156277656555176
    7. ' i' → logprob: -3.1156277656555176
    8. ' n' → logprob: -3.4906277656555176
    9. ' ' → logprob: -3.6156277656555176
    10. '1' → logprob: -3.8656277656555176

Token 458: ' ar' (ID: 646)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.653099000453949
    2. ' i' → logprob: -1.4030990600585938
    3. 'edges' → logprob: -2.9030990600585938
    4. 'n' → logprob: -3.1530990600585938
    5. ' ' → logprob: -3.4030990600585938
    6. 'ar' → logprob: -4.403099060058594
    7. 'connections' → logprob: -4.528099060058594
    8. ' edges' → logprob: -4.653099060058594
    9. ' n' → logprob: -4.653099060058594
    10. ' pairs' → logprob: -4.903099060058594

Token 459: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.6130157113075256
    2. 'cs' → logprob: -0.9880157113075256
    3. 'r' → logprob: -2.988015651702881
    4. 'e' → logprob: -4.238015651702881
    5. 'istas' → logprob: -5.113015651702881
    6. 'gs' → logprob: -5.238015651702881
    7. 'ches' → logprob: -5.863015651702881
    8. 'istes' → logprob: -6.988015651702881
    9. 'g' → logprob: -7.238015651702881
    10. 'c' → logprob: -7.238015651702881

Token 460: ' ou' (ID: 2031)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1260404735803604
    2. ' i' → logprob: -2.751040458679199
    3. '(' → logprob: -3.626040458679199
    4. ' (' → logprob: -4.626040458679199
    5. 'i' → logprob: -5.126040458679199
    6. '(n' → logprob: -5.626040458679199
    7. ' for' → logprob: -6.001040458679199
    8. 'for' → logprob: -6.376040458679199
    9. '   ' → logprob: -7.251040458679199
    10. '       ' → logprob: -7.501040458679199

Token 461: ' relations' (ID: 5523)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.594771146774292
    2. ' des' → logprob: -0.969771146774292
    3. 'connections' → logprob: -3.344771146774292
    4. 'conn' → logprob: -4.219771385192871
    5. 'relations' → logprob: -4.719771385192871
    6. 'li' → logprob: -6.219771385192871
    7. '#' → logprob: -6.844771385192871
    8. ' connections' → logprob: -7.469771385192871
    9. 'une' → logprob: -7.469771385192871
    10. 's' → logprob: -7.719771385192871

Token 462: '
' (ID: 198)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.32732829451560974
    2. '(' → logprob: -1.5773283243179321
    3. 'for' → logprob: -3.8273282051086426
    4. ' for' → logprob: -3.9523282051086426
    5. ' i' → logprob: -4.952328205108643
    6. '(n' → logprob: -5.202328205108643
    7. ' (' → logprob: -5.577328205108643
    8. '   ' → logprob: -5.827328205108643
    9. ' between' → logprob: -5.827328205108643
    10. '()' → logprob: -6.577328205108643

Token 463: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3140993118286133
    2. 'for' → logprob: -1.5640993118286133
    3. '(i' → logprob: -3.9390993118286133
    4. ' i' → logprob: -4.189099311828613
    5. '(' → logprob: -4.564099311828613
    6. ' (' → logprob: -5.314099311828613
    7. '(n' → logprob: -5.814099311828613
    8. 'i' → logprob: -6.564099311828613
    9. '       ' → logprob: -7.189099311828613
    10. ')' → logprob: -7.314099311828613

Token 464: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03378136083483696
    2. ' for' → logprob: -3.4087812900543213
    3. 'i' → logprob: -9.283781051635742
    4. '       ' → logprob: -10.408781051635742
    5. ' i' → logprob: -12.283781051635742
    6. '   ' → logprob: -12.533781051635742
    7. 'print' → logprob: -13.408781051635742
    8. 'n' → logprob: -14.033781051635742
    9. '        
' → logprob: -14.533781051635742
    10. 'j' → logprob: -14.908781051635742

Token 465: ' Exemple' (ID: 142783)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09152263402938843
    2. ' for' → logprob: -2.466522693634033
    3. '       ' → logprob: -6.091522693634033
    4. 'i' → logprob: -8.591522216796875
    5. ' i' → logprob: -10.216522216796875
    6. 'print' → logprob: -10.216522216796875
    7. '   ' → logprob: -10.466522216796875
    8. 'j' → logprob: -12.591522216796875
    9. '        
' → logprob: -12.591522216796875
    10. '1' → logprob: -12.716522216796875

Token 466: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3951719403266907
    2. ' for' → logprob: -1.270171880722046
    3. 'for' → logprob: -3.270171880722046
    4. '   ' → logprob: -5.895172119140625
    5. '           ' → logprob: -6.395172119140625
    6. ' i' → logprob: -6.895172119140625
    7. '```' → logprob: -8.270172119140625
    8. '        ' → logprob: -8.395172119140625
    9. '(' → logprob: -8.395172119140625
    10. ' (' → logprob: -8.520172119140625

Token 467: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2107454091310501
    2. 'print' → logprob: -2.460745334625244
    3. '1' → logprob: -2.710745334625244
    4. '0' → logprob: -4.210745334625244
    5. ' for' → logprob: -4.210745334625244
    6. '(' → logprob: -6.210745334625244
    7. 'i' → logprob: -6.210745334625244
    8. ' print' → logprob: -6.835745334625244
    9. '   ' → logprob: -7.085745334625244
    10. 'n' → logprob: -7.085745334625244

Token 468: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33502396941185
    2. ' i' → logprob: -1.3350239992141724
    3. 'n' → logprob: -5.585023880004883
    4. ' n' → logprob: -5.710023880004883
    5. '1' → logprob: -5.835023880004883
    6. '0' → logprob: -6.335023880004883
    7. 'j' → logprob: -6.585023880004883
    8. ' j' → logprob: -6.585023880004883
    9. ' ' → logprob: -6.710023880004883
    10. 'for' → logprob: -6.960023880004883

Token 469: '=' (ID: 28)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5332230925559998
    2. '//' → logprob: -1.7832231521606445
    3. '   ' → logprob: -2.5332231521606445
    4. ' ' → logprob: -2.7832231521606445
    5. ',' → logprob: -3.9082231521606445
    6. '=' → logprob: -4.0332231521606445
    7. ' =' → logprob: -4.1582231521606445
    8. ' ,' → logprob: -5.2832231521606445
    9. '       ' → logprob: -5.4082231521606445
    10. '  ' → logprob: -5.5332231521606445

Token 470: '6' (ID: 21)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07110101729631424
    2. '6' → logprob: -3.196100950241089
    3. '4' → logprob: -4.196101188659668
    4. ' n' → logprob: -5.446101188659668
    5. '10' → logprob: -5.821101188659668
    6. '8' → logprob: -5.946101188659668
    7. ' ' → logprob: -7.196101188659668
    8. '(n' → logprob: -7.321101188659668
    9. '(' → logprob: -7.696101188659668
    10. '2' → logprob: -7.946101188659668

Token 471: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6197764277458191
    2. '   ' → logprob: -2.119776487350464
    3. ' for' → logprob: -2.244776487350464
    4. 'for' → logprob: -2.744776487350464
    5. ',' → logprob: -2.869776487350464
    6. '           ' → logprob: -3.744776487350464
    7. ':' → logprob: -4.244776248931885
    8. '(' → logprob: -4.244776248931885
    9. ' (' → logprob: -4.244776248931885
    10. ':
' → logprob: -4.744776248931885

Token 472: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32756441831588745
    2. 'for' → logprob: -1.3275644779205322
    3. ' i' → logprob: -5.452564239501953
    4. 'print' → logprob: -5.702564239501953
    5. ' print' → logprob: -5.702564239501953
    6. 'i' → logprob: -7.327564239501953
    7. ' ' → logprob: -7.452564239501953
    8. '0' → logprob: -7.702564239501953
    9. ' n' → logprob: -7.827564239501953
    10. '1' → logprob: -8.202564239501953

Token 473: ' aurait' (ID: 48306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5122182369232178
    2. ' for' → logprob: -1.7622182369232178
    3. ' print' → logprob: -1.8872182369232178
    4. 'print' → logprob: -2.6372182369232178
    5. 'range' → logprob: -5.887218475341797
    6. ' range' → logprob: -6.137218475341797
    7. '```' → logprob: -8.387218475341797
    8. '       ' → logprob: -9.137218475341797
    9. ' ' → logprob: -9.512218475341797
    10. '           ' → logprob: -9.637218475341797

Token 474: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10141493380069733
    2. 'print' → logprob: -2.726414918899536
    3. '(' → logprob: -4.601415157318115
    4. '0' → logprob: -5.226415157318115
    5. '2' → logprob: -5.351415157318115
    6. 'n' → logprob: -5.976415157318115
    7. ' ' → logprob: -5.976415157318115
    8. 'for' → logprob: -6.851415157318115
    9. '3' → logprob: -7.101415157318115
    10. 'i' → logprob: -7.101415157318115

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011549005284905434
    2. ' ' → logprob: -5.88654899597168
    3. 'i' → logprob: -6.01154899597168
    4. 'n' → logprob: -6.13654899597168
    5. '2' → logprob: -6.63654899597168
    6. 'nn' → logprob: -6.63654899597168
    7. '(' → logprob: -7.88654899597168
    8. '(n' → logprob: -8.13654899597168
    9. '3' → logprob: -8.26154899597168
    10. '(nn' → logprob: -9.01154899597168

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033903174102306366
    2. ' ,' → logprob: -3.783903121948242
    3. ' ' → logprob: -4.783903121948242
    4. '2' → logprob: -6.283903121948242
    5. '1' → logprob: -8.158903121948242
    6. '+' → logprob: -10.533903121948242
    7. ' +' → logprob: -11.533903121948242
    8. '3' → logprob: -11.783903121948242
    9. '```' → logprob: -11.908903121948242
    10. '-' → logprob: -12.283903121948242

Token 477: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4659399092197418
    2. '3' → logprob: -1.0909398794174194
    3. ' ' → logprob: -3.590939998626709
    4. '4' → logprob: -5.715939998626709
    5. 'n' → logprob: -5.715939998626709
    6. '5' → logprob: -7.215939998626709
    7. '7' → logprob: -7.840939998626709
    8. ' n' → logprob: -7.840939998626709
    9. '(' → logprob: -8.21593952178955
    10. '6' → logprob: -8.34093952178955

Token 478: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06422532349824905
    2. ')
' → logprob: -2.939225435256958
    3. '),' → logprob: -5.189225196838379
    4. ',' → logprob: -6.814225196838379
    5. ' )' → logprob: -6.939225196838379
    6. ' ' → logprob: -7.439225196838379
    7. ' )
' → logprob: -8.064225196838379
    8. '),
' → logprob: -8.439225196838379
    9. '1' → logprob: -9.314225196838379
    10. '7' → logprob: -9.814225196838379

Token 479: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2813216745853424
    2. '(' → logprob: -1.40632164478302
    3. '2' → logprob: -9.15632152557373
    4. ' ' → logprob: -11.15632152557373
    5. 'print' → logprob: -11.28132152557373
    6. '1' → logprob: -11.40632152557373
    7. ' print' → logprob: -11.90632152557373
    8. '       ' → logprob: -12.78132152557373
    9. '(i' → logprob: -12.90632152557373
    10. '```' → logprob: -12.90632152557373

Token 480: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01719014346599579
    2. '1' → logprob: -4.767189979553223
    3. ' ' → logprob: -5.267189979553223
    4. '3' → logprob: -5.767189979553223
    5. 'n' → logprob: -9.267189979553223
    6. 'i' → logprob: -10.392189979553223
    7. ' n' → logprob: -10.454689979553223
    8. '(' → logprob: -10.454689979553223
    9. ' i' → logprob: -10.892189979553223
    10. ' (' → logprob: -11.204689979553223

Token 481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013287403620779514
    2. '3' → logprob: -4.888287544250488
    3. ' ,' → logprob: -5.763287544250488
    4. ' ' → logprob: -6.013287544250488
    5. '1' → logprob: -9.888287544250488
    6. ',n' → logprob: -11.888287544250488
    7. ' n' → logprob: -12.013287544250488
    8. 'n' → logprob: -12.388287544250488
    9. ')' → logprob: -12.763287544250488
    10. '2' → logprob: -13.388287544250488

Token 482: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008055794751271605
    2. ' ' → logprob: -7.125805377960205
    3. '4' → logprob: -14.500805854797363
    4. '1' → logprob: -15.250805854797363
    5. '7' → logprob: -16.125804901123047
    6. '(' → logprob: -16.250804901123047
    7. '5' → logprob: -17.000804901123047
    8. '  ' → logprob: -17.125804901123047
    9. '```' → logprob: -17.250804901123047
    10. ')' → logprob: -17.500804901123047

Token 483: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6647557020187378
    2. '),' → logprob: -1.0397557020187378
    3. ')
' → logprob: -2.0397558212280273
    4. '),
' → logprob: -7.539755821228027
    5. ',' → logprob: -7.664755821228027
    6. 'print' → logprob: -7.789755821228027
    7. '),(' → logprob: -9.289755821228027
    8. ')
' → logprob: -9.789755821228027
    9. ')n' → logprob: -9.789755821228027
    10. ' )' → logprob: -9.914755821228027

Token 484: ' etc' (ID: 5178)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11283039301633835
    2. '(' → logprob: -2.237830400466919
    3. '...' → logprob: -12.98783016204834
    4. ' ' → logprob: -13.48783016204834
    5. ',' → logprob: -13.86283016204834
    6. '       ' → logprob: -13.86283016204834
    7. 'print' → logprob: -14.23783016204834
    8. '    ' → logprob: -14.86283016204834
    9. '        ' → logprob: -15.23783016204834
    10. ')' → logprob: -15.86283016204834

Token 485: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04846358671784401
    2. 'for' → logprob: -3.4234635829925537
    3. ' for' → logprob: -5.048463821411133
    4. '
' → logprob: -5.423463821411133
    5. ',' → logprob: -7.048463821411133
    6. ')' → logprob: -7.173463821411133
    7. '```' → logprob: -7.298463821411133
    8. ')
' → logprob: -8.048463821411133
    9. 'print' → logprob: -8.298463821411133
    10. '   ' → logprob: -8.298463821411133

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20928555727005005
    2. 'for' → logprob: -1.9592854976654053
    3. ' for' → logprob: -3.0842854976654053
    4. '```' → logprob: -6.709285736083984
    5. '   ' → logprob: -7.209285736083984
    6. '<|end|>' → logprob: -10.459285736083984
    7. '
' → logprob: -10.584285736083984
    8. '        
' → logprob: -10.584285736083984
    9. '	for' → logprob: -10.834285736083984
    10. 'print' → logprob: -11.209285736083984

Token 487: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07916759699583054
    2. ' for' → logprob: -2.579167604446411
    3. '       ' → logprob: -8.329167366027832
    4. '1' → logprob: -11.704167366027832
    5. 'print' (adapté à ' print') → logprob: -11.704167366027832
    6. 'n' → logprob: -12.204167366027832
    7. ' ' → logprob: -12.454167366027832
    8. '   ' → logprob: -12.954167366027832
    9. '0' → logprob: -13.204167366027832
    10. '	for' → logprob: -13.579167366027832

Token 488: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003701973706483841
    2. '(n' → logprob: -5.628702163696289
    3. '1' → logprob: -10.003702163696289
    4. '((' → logprob: -10.628702163696289
    5. '("' → logprob: -10.753702163696289
    6. '(*' → logprob: -13.003702163696289
    7. '(i' → logprob: -13.128702163696289
    8. '()' → logprob: -13.128702163696289
    9. ' (' → logprob: -13.503702163696289
    10. '('' → logprob: -13.753702163696289

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005569182801991701
    2. 'n' → logprob: -5.255568981170654
    3. '(' → logprob: -8.380569458007812
    4. '(n' → logprob: -10.005569458007812
    5. '"' → logprob: -10.130569458007812
    6. '2' → logprob: -11.255569458007812
    7. ' ' → logprob: -13.255569458007812
    8. '3' → logprob: -13.880569458007812
    9. '0' → logprob: -13.880569458007812
    10. 'nn' → logprob: -14.380569458007812

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005370667786337435
    2. ' ,' → logprob: -7.875536918640137
    3. '2' → logprob: -8.875536918640137
    4. ',n' → logprob: -12.000536918640137
    5. ',end' → logprob: -12.250536918640137
    6. ' ' → logprob: -13.625536918640137
    7. '1' → logprob: -13.625536918640137
    8. ')' → logprob: -13.875536918640137
    9. ',
' → logprob: -14.750536918640137
    10. '   ' → logprob: -14.750536918640137

Token 491: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00924360379576683
    2. '3' → logprob: -5.384243488311768
    3. 'n' → logprob: -5.384243488311768
    4. '(n' → logprob: -11.509243965148926
    5. '(' → logprob: -12.634243965148926
    6. ' ' → logprob: -12.634243965148926
    7. 'nn' → logprob: -13.009243965148926
    8. '4' → logprob: -13.259243965148926
    9. ' n' → logprob: -14.009243965148926
    10. '```' → logprob: -14.134243965148926

Token 492: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014376122271642089
    2. '3' → logprob: -6.751437664031982
    3. 'n' → logprob: -8.251437187194824
    4. '(n' → logprob: -12.876437187194824
    5. 'nn' → logprob: -13.251437187194824
    6. '(' → logprob: -13.876437187194824
    7. '4' → logprob: -14.251437187194824
    8. ' ' → logprob: -15.376437187194824
    9. '```' → logprob: -16.75143814086914
    10. '   ' → logprob: -17.12643814086914

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03805239871144295
    2. ')
' → logprob: -3.2880523204803467
    3. ')
' → logprob: -11.788052558898926
    4. '   ' → logprob: -12.913052558898926
    5. ')

' → logprob: -15.788052558898926
    6. '")' → logprob: -15.788052558898926
    7. ' )' → logprob: -15.788052558898926
    8. ',' → logprob: -15.788052558898926
    9. '),' → logprob: -16.53805160522461
    10. '       ' → logprob: -17.28805160522461

Token 494: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13803626596927643
    2. 'for' → logprob: -2.2630362510681152
    3. ' for' → logprob: -4.263036251068115
    4. '   ' → logprob: -5.888036251068115
    5. '       ' → logprob: -5.888036251068115
    6. ' print' → logprob: -6.263036251068115
    7. '1' → logprob: -6.888036251068115
    8. ' ' → logprob: -7.263036251068115
    9. '<|end|>' → logprob: -7.888036251068115
    10. '2' → logprob: -8.263036727905273

Token 495: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14437951147556305
    2. 'print' (adapté à ' print') → logprob: -2.3943796157836914
    3. 'for' → logprob: -3.1443796157836914
    4. ' for' → logprob: -10.144379615783691
    5. '2' → logprob: -10.644379615783691
    6. 'n' → logprob: -11.269379615783691
    7. '1' → logprob: -11.394379615783691
    8. '   ' → logprob: -11.394379615783691
    9. ' print' → logprob: -12.644379615783691
    10. 'i' → logprob: -12.644379615783691

Token 496: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40119636058807373
    2. '2' → logprob: -1.1511963605880737
    3. '(n' → logprob: -4.526196479797363
    4. '1' → logprob: -5.901196479797363
    5. 'n' → logprob: -7.901196479797363
    6. '3' → logprob: -8.276196479797363
    7. '((' → logprob: -10.651196479797363
    8. ' (' → logprob: -12.526196479797363
    9. '(nn' → logprob: -12.651196479797363
    10. ' ' → logprob: -13.151196479797363

Token 497: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008699901401996613
    2. '1' → logprob: -5.133699893951416
    3. 'n' → logprob: -6.383699893951416
    4. '(' → logprob: -7.258699893951416
    5. '3' → logprob: -8.258700370788574
    6. '(n' → logprob: -9.133700370788574
    7. 'nn' → logprob: -12.758700370788574
    8. ' ' → logprob: -13.508700370788574
    9. '4' → logprob: -14.571200370788574
    10. '((' → logprob: -14.883700370788574

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005576779949478805
    2. ' ,' → logprob: -7.750557899475098
    3. '3' → logprob: -9.000557899475098
    4. '```' → logprob: -13.625557899475098
    5. ',
' → logprob: -14.625557899475098
    6. ' ' → logprob: -14.875557899475098
    7. ',end' → logprob: -15.125557899475098
    8. '4' → logprob: -15.250557899475098
    9. ',n' → logprob: -15.250557899475098
    10. '`,' → logprob: -15.625557899475098

Token 499: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003812217037193477
    2. ' ' → logprob: -7.875380992889404
    3. '4' → logprob: -13.875381469726562
    4. 'n' → logprob: -15.875381469726562
    5. '   ' → logprob: -18.000381469726562
    6. '1' → logprob: -18.375381469726562
    7. ' n' → logprob: -19.000381469726562
    8. ',' → logprob: -19.375381469726562
    9. '۳' → logprob: -19.375381469726562
    10. '３' → logprob: -19.750381469726562

Token 500: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.250006675720215
    3. '4' → logprob: -13.375006675720215
    4. 'n' → logprob: -16.6250057220459
    5. '5' → logprob: -19.0000057220459
    6. '３' → logprob: -19.2500057220459
    7. '1' → logprob: -19.6250057220459
    8. '   ' → logprob: -20.0000057220459
    9. '۳' → logprob: -20.1250057220459
    10. '  ' → logprob: -21.8125057220459

Token 501: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0622822530567646
    2. ')' → logprob: -2.8122823238372803
    3. '   ' → logprob: -8.81228256225586
    4. 'print' → logprob: -9.81228256225586
    5. '       ' → logprob: -10.31228256225586
    6. '```' → logprob: -10.43728256225586
    7. '``' → logprob: -11.43728256225586
    8. '
' → logprob: -11.43728256225586
    9. ')
' → logprob: -11.81228256225586
    10. '<|end|>' → logprob: -11.93728256225586

Token 502: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08235174417495728
    2. '       ' → logprob: -2.7073516845703125
    3. ' print' → logprob: -4.9573516845703125
    4. '<|end|>' → logprob: -6.3323516845703125
    5. '```' → logprob: -6.3323516845703125
    6. '   ' → logprob: -7.0823516845703125
    7. 'for' → logprob: -7.4573516845703125
    8. ' for' → logprob: -8.832351684570312
    9. '``' → logprob: -9.832351684570312
    10. '(' → logprob: -10.332351684570312

Token 503: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02522517740726471
    2. 'for' → logprob: -3.9002251625061035
    3. '       ' → logprob: -5.4002251625061035
    4. ' print' → logprob: -9.650225639343262
    5. ' for' → logprob: -9.900225639343262
    6. '```' → logprob: -10.900225639343262
    7. '<|end|>' → logprob: -11.775225639343262
    8. '3' → logprob: -12.275225639343262
    9. '   ' → logprob: -12.775225639343262
    10. '1' → logprob: -13.400225639343262

Token 504: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016642319038510323
    2. '3' → logprob: -4.266642093658447
    3. '(n' → logprob: -6.016642093658447
    4. '2' → logprob: -11.391642570495605
    5. '((' → logprob: -11.391642570495605
    6. 'n' → logprob: -11.766642570495605
    7. ' (' → logprob: -12.391642570495605
    8. ' ' → logprob: -13.766642570495605
    9. '1' → logprob: -14.266642570495605
    10. ',' → logprob: -14.766642570495605

Token 505: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005228186957538128
    2. '2' → logprob: -5.380228042602539
    3. '1' → logprob: -7.755228042602539
    4. 'n' → logprob: -9.130228042602539
    5. '(' → logprob: -9.755228042602539
    6. '(n' → logprob: -11.505228042602539
    7. '4' → logprob: -13.255228042602539
    8. ' ' → logprob: -14.630228042602539
    9. 'print' → logprob: -15.630228042602539
    10. '```' → logprob: -16.25522804260254

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005430120043456554
    2. ' ,' → logprob: -5.505430221557617
    3. '4' → logprob: -6.630430221557617
    4. '2' → logprob: -11.130430221557617
    5. '3' → logprob: -12.130430221557617
    6. ' ' → logprob: -12.880430221557617
    7. '(' → logprob: -13.255430221557617
    8. ')' → logprob: -13.630430221557617
    9. '1' → logprob: -13.755430221557617
    10. '```' → logprob: -13.755430221557617

Token 507: ' n' (ID: 297)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0002153378736693412
    2. ' ' → logprob: -8.625215530395508
    3. '1' → logprob: -11.000215530395508
    4. 'n' → logprob: -11.250215530395508
    5. '5' → logprob: -13.250215530395508
    6. '(' → logprob: -13.375215530395508
    7. '(n' → logprob: -14.000215530395508
    8. ' n' → logprob: -14.375215530395508
    9. '2' → logprob: -14.625215530395508
    10. '```' → logprob: -15.875215530395508

Token 508: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25413358211517334
    2. '-' → logprob: -1.6291335821151733
    3. ')' → logprob: -4.379133701324463
    4. ' -' → logprob: -4.504133701324463
    5. ' ,' → logprob: -6.254133701324463
    6. '4' → logprob: -6.379133701324463
    7. '//' → logprob: -7.879133701324463
    8. ' ' → logprob: -8.754133224487305
    9. '   ' → logprob: -8.879133224487305
    10. ',n' → logprob: -9.379133224487305

Token 509: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005949775222688913
    2. '-' → logprob: -5.630949974060059
    3. '4' → logprob: -6.755949974060059
    4. '2' → logprob: -6.755949974060059
    5. '0' → logprob: -12.130949974060059
    6. '3' → logprob: -12.505949974060059
    7. '(' → logprob: -12.505949974060059
    8. ' ' → logprob: -13.380949974060059
    9. '(-' → logprob: -13.505949974060059
    10. '5' → logprob: -14.255949974060059

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007450680714100599
    2. '-' → logprob: -7.3757452964782715
    3. '2' → logprob: -9.125744819641113
    4. '3' → logprob: -12.250744819641113
    5. '4' → logprob: -12.875744819641113
    6. ' ' → logprob: -15.250744819641113
    7. ' -' → logprob: -15.250744819641113
    8. '0' → logprob: -15.313244819641113
    9. '(' → logprob: -15.375744819641113
    10. '/' → logprob: -15.500744819641113

Token 511: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029770854860544205
    2. ')
' → logprob: -3.529770851135254
    3. ')
' → logprob: -12.279770851135254
    4. '   ' → logprob: -12.654770851135254
    5. '")' → logprob: -13.154770851135254
    6. 'print' → logprob: -13.404770851135254
    7. '4' → logprob: -13.404770851135254
    8. ',' → logprob: -13.404770851135254
    9. ' )' → logprob: -13.529770851135254
    10. '')' → logprob: -14.529770851135254

Token 512: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008417880744673312
    2. '<|end|>' → logprob: -7.7508416175842285
    3. '       ' → logprob: -8.500842094421387
    4. ' print' → logprob: -8.750842094421387
    5. '   ' → logprob: -11.375842094421387
    6. '```' → logprob: -11.750842094421387
    7. '	print' → logprob: -12.250842094421387
    8. '(print' → logprob: -12.250842094421387
    9. 'for' → logprob: -12.750842094421387
    10. '4' → logprob: -12.875842094421387

Token 513: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008801387157291174
    2. '       ' → logprob: -7.750880241394043
    3. 'for' → logprob: -8.125880241394043
    4. '4' → logprob: -9.125880241394043
    5. ' print' → logprob: -10.625880241394043
    6. '3' → logprob: -11.250880241394043
    7. 'n' → logprob: -13.125880241394043
    8. '<|end|>' → logprob: -13.750880241394043
    9. '1' → logprob: -13.875880241394043
    10. ' for' → logprob: -14.500880241394043

Token 514: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43457964062690735
    2. '(n' → logprob: -1.059579610824585
    3. '4' → logprob: -5.684579849243164
    4. '3' → logprob: -6.309579849243164
    5. '1' → logprob: -8.184579849243164
    6. 'n' → logprob: -8.559579849243164
    7. '((' → logprob: -9.434579849243164
    8. '2' → logprob: -9.434579849243164
    9. '(m' → logprob: -13.747079849243164
    10. '5' → logprob: -13.809579849243164

Token 515: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.44069239497184753
    2. ',' → logprob: -1.31569242477417
    3. '4' → logprob: -3.06569242477417
    4. ' -' → logprob: -3.56569242477417
    5. ' ' → logprob: -5.19069242477417
    6. ' ,' → logprob: -5.44069242477417
    7. '1' → logprob: -6.44069242477417
    8. '2' → logprob: -8.065691947937012
    9. '+' → logprob: -8.190691947937012
    10. '//' → logprob: -8.315691947937012

Token 516: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28790703415870667
    2. '2' → logprob: -1.4129070043563843
    3. '4' → logprob: -5.662907123565674
    4. '3' → logprob: -5.912907123565674
    5. '-' → logprob: -7.787907123565674
    6. '5' → logprob: -9.787906646728516
    7. ' ' → logprob: -10.975406646728516
    8. '0' → logprob: -11.412906646728516
    9. '   ' → logprob: -11.475406646728516
    10. '(' → logprob: -11.975406646728516

Token 517: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04245492070913315
    2. '1' → logprob: -3.542454957962036
    3. '3' → logprob: -4.667454719543457
    4. '4' → logprob: -5.792454719543457
    5. '-' → logprob: -9.542454719543457
    6. '5' → logprob: -9.917454719543457
    7. '```' → logprob: -11.729954719543457
    8. '
' → logprob: -12.167454719543457
    9. '`' → logprob: -12.604954719543457
    10. '(' → logprob: -12.729954719543457

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011949112638831139
    2. ',n' → logprob: -5.136949062347412
    3. ' ,' → logprob: -6.011949062347412
    4. '4' → logprob: -6.261949062347412
    5. 'n' → logprob: -7.261949062347412
    6. '1' → logprob: -7.511949062347412
    7. ' n' → logprob: -9.13694953918457
    8. ')' → logprob: -9.38694953918457
    9. '2' → logprob: -9.63694953918457
    10. '3' → logprob: -9.76194953918457

Token 519: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4450930953025818
    2. '1' → logprob: -1.8200931549072266
    3. '4' → logprob: -1.8200931549072266
    4. '3' → logprob: -3.4450931549072266
    5. '2' → logprob: -5.820093154907227
    6. ' n' → logprob: -8.695093154907227
    7. '(n' → logprob: -9.320093154907227
    8. ' ' → logprob: -10.695093154907227
    9. '5' → logprob: -11.195093154907227
    10. ')' → logprob: -11.195093154907227

Token 520: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0500937700271606
    2. '-' → logprob: -1.5500937700271606
    3. '2' → logprob: -2.175093650817871
    4. ')' → logprob: -2.175093650817871
    5. '4' → logprob: -2.300093650817871
    6. '```' → logprob: -3.175093650817871
    7. ',' → logprob: -3.675093650817871
    8. ' +' → logprob: -4.800093650817871
    9. '1' → logprob: -4.925093650817871
    10. ' -' → logprob: -5.050093650817871

Token 521: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004658233083318919
    2. '4' → logprob: -8.875465393066406
    3. '3' → logprob: -9.625465393066406
    4. '1' → logprob: -9.875465393066406
    5. '24' → logprob: -10.125465393066406
    6. '224' → logprob: -10.625465393066406
    7. '22' → logprob: -10.750465393066406
    8. '21' → logprob: -11.250465393066406
    9. '254' → logprob: -11.937965393066406
    10. '211' → logprob: -11.937965393066406

Token 522: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008451338857412338
    2. '4' → logprob: -4.883451461791992
    3. '3' → logprob: -7.133451461791992
    4. '1' → logprob: -10.633451461791992
    5. '```' → logprob: -11.883451461791992
    6. '5' → logprob: -12.070951461791992
    7. '{' → logprob: -13.570951461791992
    8. '
' → logprob: -13.945951461791992
    9. ' ' → logprob: -14.008451461791992
    10. '``' → logprob: -14.258451461791992

Token 523: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760596394538879
    2. ')
' → logprob: -0.8260596394538879
    3. 'print' → logprob: -9.201059341430664
    4. '   ' → logprob: -11.576059341430664
    5. ')
' → logprob: -11.826059341430664
    6. '       ' → logprob: -13.951059341430664
    7. '```' → logprob: -14.576059341430664
    8. ')

' → logprob: -15.326059341430664
    9. ' )
' → logprob: -15.701059341430664
    10. '``' → logprob: -16.076059341430664

Token 524: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006565337534993887
    2. '       ' → logprob: -6.006565570831299
    3. '```' → logprob: -6.256565570831299
    4. '<|end|>' → logprob: -6.506565570831299
    5. ' print' → logprob: -8.00656509399414
    6. '        
' → logprob: -8.75656509399414
    7. '(print' → logprob: -9.63156509399414
    8. '   ' → logprob: -10.50656509399414
    9. '``' → logprob: -10.88156509399414
    10. '[' → logprob: -11.00656509399414

Token 525: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.45848218582978e-06
    2. '       ' → logprob: -13.75000286102295
    3. 'for' → logprob: -14.25000286102295
    4. ' print' → logprob: -14.62500286102295
    5. '```' → logprob: -16.625001907348633
    6. '(print' → logprob: -16.750001907348633
    7. 'n' → logprob: -17.500001907348633
    8. '	print' → logprob: -18.500001907348633
    9. '        
' → logprob: -18.625001907348633
    10. '(n' → logprob: -18.625001907348633

Token 526: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11361950635910034
    2. 'n' → logprob: -2.988619565963745
    3. '(' → logprob: -3.113619565963745
    4. '1' → logprob: -4.988619327545166
    5. '3' → logprob: -5.238619327545166
    6. '4' → logprob: -7.863619327545166
    7. '2' → logprob: -9.363619804382324
    8. 'print' → logprob: -12.363619804382324
    9. '5' → logprob: -13.926119804382324
    10. '((' → logprob: -13.988619804382324

Token 527: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2681739330291748
    2. '+' → logprob: -2.018173933029175
    3. ' -' → logprob: -2.768173933029175
    4. ',' → logprob: -3.643173933029175
    5. ' +' → logprob: -4.893174171447754
    6. ' ' → logprob: -5.768174171447754
    7. ' ,' → logprob: -6.768174171447754
    8. '1' → logprob: -7.393174171447754
    9. '//' → logprob: -8.143174171447754
    10. '2' → logprob: -8.143174171447754

Token 528: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.939851037808694e-05
    2. '3' → logprob: -11.125029563903809
    3. '1' → logprob: -11.250029563903809
    4. ' ' → logprob: -14.125029563903809
    5. '0' → logprob: -15.312529563903809
    6. '4' → logprob: -15.500029563903809
    7. '۲' → logprob: -16.750028610229492
    8. '```' → logprob: -16.750028610229492
    9. '２' → logprob: -16.875028610229492
    10. '5' → logprob: -17.750028610229492

Token 529: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.334533878136426e-05
    2. '3' → logprob: -10.375042915344238
    3. '1' → logprob: -11.500042915344238
    4. '4' → logprob: -14.062542915344238
    5. ' ' → logprob: -15.250042915344238
    6. '```' → logprob: -16.062543869018555
    7. '２' → logprob: -16.250043869018555
    8. '۲' → logprob: -16.312543869018555
    9. '5' → logprob: -16.562543869018555
    10. '{' → logprob: -16.687543869018555

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012623480521142483
    2. ',n' → logprob: -4.887623310089111
    3. ' ,' → logprob: -6.262623310089111
    4. '1' → logprob: -6.387623310089111
    5. 'n' → logprob: -7.887623310089111
    6. ' n' → logprob: -8.01262378692627
    7. '4' → logprob: -8.13762378692627
    8. '(n' → logprob: -8.76262378692627
    9. '3' → logprob: -9.38762378692627
    10. ' ' → logprob: -10.38762378692627

Token 531: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32198578119277954
    2. '3' → logprob: -1.8219857215881348
    3. 'n' → logprob: -2.3219857215881348
    4. '2' → logprob: -4.821985721588135
    5. '4' → logprob: -4.946985721588135
    6. ' ' → logprob: -8.696986198425293
    7. ' n' → logprob: -9.196986198425293
    8. '5' → logprob: -10.321986198425293
    9. '(n' → logprob: -10.946986198425293
    10. '   ' → logprob: -11.446986198425293

Token 532: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014134238474071026
    2. ' +' → logprob: -4.514134407043457
    3. '-' → logprob: -6.014134407043457
    4. '1' → logprob: -7.889134407043457
    5. ' -' → logprob: -9.014134407043457
    6. '3' → logprob: -9.264134407043457
    7. ' ' → logprob: -11.264134407043457
    8. '+
' → logprob: -12.389134407043457
    9. '4' → logprob: -12.701634407043457
    10. ')' → logprob: -12.701634407043457

Token 533: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.896309739408025e-07
    2. '4' → logprob: -14.875000953674316
    3. '1' → logprob: -15.625000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '2' → logprob: -19.5
    6. '３' → logprob: -19.75
    7. '۳' → logprob: -19.875
    8. '5' → logprob: -20.375
    9. '0' → logprob: -20.625
    10. '```' → logprob: -21.1875

Token 534: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16039563715457916
    2. '1' → logprob: -1.910395622253418
    3. '4' → logprob: -8.785395622253418
    4. '2' → logprob: -12.035395622253418
    5. '```' → logprob: -12.910395622253418
    6. '5' → logprob: -13.035395622253418
    7. '(' → logprob: -13.035395622253418
    8. '0' → logprob: -13.285395622253418
    9. '10' → logprob: -14.535395622253418
    10. '6' → logprob: -14.847895622253418

Token 535: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005236956290900707
    2. ')
' → logprob: -5.255237102508545
    3. '   ' → logprob: -14.505236625671387
    4. ')
' → logprob: -14.505236625671387
    5. '```' → logprob: -14.755236625671387
    6. ' )' → logprob: -14.880236625671387
    7. 'print' → logprob: -15.005236625671387
    8. ')

' → logprob: -15.255236625671387
    9. '")' → logprob: -15.380236625671387
    10. '<|end|>' → logprob: -15.505236625671387

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3658302426338196
    2. 'for' → logprob: -1.3658301830291748
    3. '<|end|>' → logprob: -3.490830183029175
    4. ' for' → logprob: -3.990830183029175
    5. 'print' → logprob: -7.365830421447754
    6. '```' → logprob: -7.490830421447754
    7. '[' → logprob: -7.740830421447754
    8. '   ' → logprob: -8.240830421447754
    9. '<|end|>' → logprob: -8.740830421447754
    10. '	for' → logprob: -9.865830421447754

Token 537: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.68022444692906e-05
    2. ' print' → logprob: -11.000046730041504
    3. 'for' → logprob: -11.500046730041504
    4. '(print' → logprob: -11.500046730041504
    5. '       ' → logprob: -12.125046730041504
    6. '.print' → logprob: -13.875046730041504
    7. '        
' → logprob: -14.250046730041504
    8. '(' → logprob: -14.375046730041504
    9. '<|end|>' → logprob: -14.375046730041504
    10. '(n' → logprob: -14.375046730041504

Token 538: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20589974522590637
    2. 'print' → logprob: -1.705899715423584
    3. 'i' → logprob: -5.455899715423584
    4. 'current' → logprob: -9.830900192260742
    5. 'j' → logprob: -10.455900192260742
    6. 'range' → logprob: -10.830900192260742
    7. 'start' → logprob: -11.080900192260742
    8. 'k' → logprob: -11.205900192260742
    9. '```' → logprob: -11.205900192260742
    10. ' for' → logprob: -11.330900192260742

Token 539: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4032597243785858
    2. ' for' → logprob: -1.7782597541809082
    3. 'r' → logprob: -2.028259754180908
    4. '	for' → logprob: -3.778259754180908
    5. '   ' → logprob: -5.528259754180908
    6. '       ' → logprob: -5.528259754180908
    7. 'k' → logprob: -8.52825927734375
    8. 'reak' → logprob: -9.52825927734375
    9. '```' → logprob: -9.52825927734375
    10. 'rk' → logprob: -10.27825927734375

Token 540: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08902005851268768
    2. 'for' → logprob: -2.464020013809204
    3. '	for' → logprob: -10.214019775390625
    4. '```' → logprob: -10.964019775390625
    5. '       ' → logprob: -11.339019775390625
    6. '   ' → logprob: -11.589019775390625
    7. '(' → logprob: -12.839019775390625
    8. ':' → logprob: -14.089019775390625
    9. '(for' → logprob: -14.464019775390625
    10. ' (' → logprob: -14.964019775390625

Token 541: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43176791071891785
    2. ' i' → logprob: -1.0567679405212402
    3. ' for' → logprob: -6.80676794052124
    4. '_' → logprob: -7.18176794052124
    5. 'for' → logprob: -7.18176794052124
    6. ' range' → logprob: -8.181767463684082
    7. ' _' → logprob: -9.431767463684082
    8. 'range' → logprob: -10.181767463684082
    9. '	i' → logprob: -11.931767463684082
    10. ' j' → logprob: -12.181767463684082

Token 542: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11297265440225601
    2. 'in' → logprob: -2.2379727363586426
    3. 'for' → logprob: -9.862972259521484
    4. ' for' → logprob: -10.362972259521484
    5. '(n' → logprob: -11.112972259521484
    6. '   ' → logprob: -11.362972259521484
    7. '(' → logprob: -11.612972259521484
    8. ' i' → logprob: -12.237972259521484
    9. 'i' → logprob: -12.237972259521484
    10. '       ' → logprob: -12.487972259521484

Token 543: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19902881979942322
    2. 'de' → logprob: -2.449028730392456
    3. 'in' → logprob: -2.824028730392456
    4. 'en' → logprob: -3.824028730392456
    5. '4' → logprob: -5.449028968811035
    6. 'range' → logprob: -5.449028968811035
    7. 'dans' → logprob: -6.199028968811035
    8. ' in' → logprob: -7.074028968811035
    9. ' de' → logprob: -7.949028968811035
    10. '(' → logprob: -8.199028968811035

Token 544: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6142095923423767
    2. '4' → logprob: -0.8642095923423767
    3. '3' → logprob: -3.3642096519470215
    4. ' range' → logprob: -6.7392096519470215
    5. '(' → logprob: -6.8642096519470215
    6. '1' → logprob: -8.239209175109863
    7. '0' → logprob: -8.614209175109863
    8. '2' → logprob: -9.489209175109863
    9. '5' → logprob: -9.489209175109863
    10. '6' → logprob: -10.239209175109863

Token 545: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.009937404654920101
    2. '3' → logprob: -4.759937286376953
    3. 'range' → logprob: -7.384937286376953
    4. '1' → logprob: -7.509937286376953
    5. '0' → logprob: -9.634937286376953
    6. '5' → logprob: -9.759937286376953
    7. '2' → logprob: -11.259937286376953
    8. '(' → logprob: -11.509937286376953
    9. '6' → logprob: -12.384937286376953
    10. ' ' → logprob: -14.134937286376953

Token 546: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9679389595985413
    2. 'to' → logprob: -1.2179388999938965
    3. 'in' → logprob: -1.5929388999938965
    4. ' to' → logprob: -2.7179388999938965
    5. ',' → logprob: -2.9679388999938965
    6. 'range' → logprob: -6.7179388999938965
    7. 'for' → logprob: -7.0929388999938965
    8. '(' → logprob: -8.217939376831055
    9. '(range' → logprob: -8.342939376831055
    10. '       ' → logprob: -8.842939376831055

Token 547: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012543906457722187
    2. ' n' → logprob: -4.387543678283691
    3. '(n' → logprob: -10.887543678283691
    4. '   ' → logprob: -12.137543678283691
    5. '(' → logprob: -13.387543678283691
    6. ' ' → logprob: -13.387543678283691
    7. '	n' → logprob: -13.512543678283691
    8. '2' → logprob: -13.637543678283691
    9. 'range' → logprob: -14.012543678283691
    10. '4' → logprob: -14.012543678283691

Token 548: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7665228843688965
    2. ' for' → logprob: -1.2665228843688965
    3. ' in' → logprob: -2.2665228843688965
    4. 'for' → logprob: -2.3915228843688965
    5. '   ' → logprob: -3.5165228843688965
    6. ' ,' → logprob: -4.7665228843688965
    7. 'in' → logprob: -5.1415228843688965
    8. ':' → logprob: -6.1415228843688965
    9. '```' → logprob: -6.1415228843688965
    10. '(' → logprob: -6.5165228843688965

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0187721848487854
    2. '3' → logprob: -4.393772125244141
    3. '4' → logprob: -5.143772125244141
    4. '2' → logprob: -7.893772125244141
    5. '+' → logprob: -10.89377212524414
    6. ' ' → logprob: -11.76877212524414
    7. '5' → logprob: -13.14377212524414
    8. 'n' → logprob: -13.26877212524414
    9. '```' → logprob: -13.51877212524414
    10. '(' → logprob: -13.64377212524414

Token 550: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5720961093902588
    2. '   ' → logprob: -1.8220961093902588
    3. ' for' → logprob: -1.8220961093902588
    4. 'for' → logprob: -2.322096109390259
    5. ':
' → logprob: -4.82209587097168
    6. '```' → logprob: -5.57209587097168
    7. '       ' → logprob: -7.32209587097168
    8. ',' → logprob: -7.69709587097168
    9. '	for' → logprob: -8.19709587097168
    10. ' :' → logprob: -8.69709587097168

Token 551: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6541174054145813
    2. 'for' → logprob: -0.9041174054145813
    3. ':' → logprob: -3.0291173458099365
    4. '   ' → logprob: -3.9041173458099365
    5. '```' → logprob: -6.279117584228516
    6. ' in' → logprob: -6.529117584228516
    7. '       ' → logprob: -6.779117584228516
    8. ':
' → logprob: -7.029117584228516
    9. '	for' → logprob: -7.279117584228516
    10. ',' → logprob: -8.779117584228516

Token 552: 'n' (ID: 77)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1561380624771118
    2. ' range' → logprob: -1.2811380624771118
    3. 'range' → logprob: -1.9061380624771118
    4. '4' → logprob: -2.1561379432678223
    5. 'for' → logprob: -2.2811379432678223
    6. ')' → logprob: -4.406137943267822
    7. '   ' → logprob: -4.781137943267822
    8. ' n' → logprob: -5.531137943267822
    9. ' in' → logprob: -5.656137943267822
    10. ':' → logprob: -5.781137943267822

Token 553: ' étant' (ID: 47869)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09180217236280441
    2. ' +' → logprob: -3.0918021202087402
    3. '```' → logprob: -4.09180212020874
    4. '-' → logprob: -4.71680212020874
    5. ':' → logprob: -5.34180212020874
    6. ')' → logprob: -5.34180212020874
    7. ' -' → logprob: -5.96680212020874
    8. '):' → logprob: -6.21680212020874
    9. '   ' → logprob: -6.71680212020874
    10. '):
' → logprob: -7.96680212020874

Token 554: ' excl' (ID: 57282)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2273746132850647
    2. 'n' → logprob: -2.35237455368042
    3. ' range' → logprob: -3.35237455368042
    4. '+' → logprob: -3.72737455368042
    5. '4' → logprob: -3.85237455368042
    6. ' n' → logprob: -4.85237455368042
    7. '   ' → logprob: -4.97737455368042
    8. ')' → logprob: -5.10237455368042
    9. '3' → logprob: -6.60237455368042
    10. '```' → logprob: -6.60237455368042

Token 555: 'u' (ID: 84)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5882360935211182
    2. 'uded' → logprob: -1.9632360935211182
    3. 'ude' → logprob: -2.213236093521118
    4. ')' → logprob: -2.713236093521118
    5. 'u' → logprob: -3.338236093521118
    6. 'e' → logprob: -3.963236093521118
    7. 'us' → logprob: -4.463235855102539
    8. 't' → logprob: -4.463235855102539
    9. '   ' → logprob: -4.588235855102539
    10. 'range' → logprob: -5.088235855102539

Token 556: ' par' (ID: 686)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11125031113624573
    2. '):' → logprob: -3.236250400543213
    3. ':
' → logprob: -3.861250400543213
    4. '):
' → logprob: -3.986250400543213
    5. ',' → logprob: -4.611250400543213
    6. '       ' → logprob: -5.111250400543213
    7. '   ' → logprob: -5.611250400543213
    8. ' :' → logprob: -6.361250400543213
    9. ')' → logprob: -6.486250400543213
    10. ' in' → logprob: -6.861250400543213

Token 557: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029757322743535042
    2. ' range' → logprob: -3.529757261276245
    3. ')' → logprob: -13.154757499694824
    4. '   ' → logprob: -13.154757499694824
    5. 'n' → logprob: -14.029757499694824
    6. '  ' → logprob: -14.154757499694824
    7. ' ' → logprob: -14.529757499694824
    8. '	range' → logprob: -15.154757499694824
    9. '```' → logprob: -15.529757499694824
    10. '    ' → logprob: -16.529756546020508

Token 558: '),' (ID: 936)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1017053872346878
    2. ',' → logprob: -2.601705312728882
    3. '(n' → logprob: -4.101705551147461
    4. '4' → logprob: -5.476705551147461
    5. ' ,' → logprob: -7.226705551147461
    6. ' (' → logprob: -7.976705551147461
    7. '   ' → logprob: -8.601705551147461
    8. ')' → logprob: -8.601705551147461
    9. '(i' → logprob: -9.476705551147461
    10. '(range' → logprob: -9.726705551147461

Token 559: ' donc' (ID: 14206)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7721073627471924
    2. '   ' → logprob: -1.3971073627471924
    3. 'for' → logprob: -2.1471073627471924
    4. ' range' → logprob: -2.6471073627471924
    5. 'range' → logprob: -3.1471073627471924
    6. '    ' → logprob: -3.8971073627471924
    7. ' in' → logprob: -4.647107124328613
    8. '```' → logprob: -5.022107124328613
    9. ' 
' → logprob: -5.647107124328613
    10. '4' → logprob: -5.772107124328613

Token 560: ' (' (ID: 350)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.582575261592865
    2. 'range' → logprob: -0.832575261592865
    3. '   ' → logprob: -5.83257532119751
    4. '4' → logprob: -6.58257532119751
    5. ' for' → logprob: -7.33257532119751
    6. 'for' → logprob: -7.45757532119751
    7. ' in' → logprob: -7.70757532119751
    8. ' n' → logprob: -8.457574844360352
    9. 'n' → logprob: -9.582574844360352
    10. '(range' → logprob: -9.707574844360352

Token 561: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.07228784263134003
    2. 'for' → logprob: -3.4472877979278564
    3. 'range' → logprob: -3.4472877979278564
    4. 'n' → logprob: -5.9472880363464355
    5. 'i' → logprob: -6.3222880363464355
    6. ' for' → logprob: -7.6972880363464355
    7. ' range' → logprob: -7.8222880363464355
    8. ' ' → logprob: -7.9472880363464355
    9. ')' → logprob: -8.822287559509277
    10. '   ' → logprob: -9.822287559509277

Token 562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010843710973858833
    2. ',n' → logprob: -4.760843753814697
    3. '   ' → logprob: -6.760843753814697
    4. ' ,' → logprob: -7.885843753814697
    5. ')' → logprob: -8.010843276977539
    6. '```' → logprob: -8.760843276977539
    7. 'n' → logprob: -9.885843276977539
    8. '       ' → logprob: -10.385843276977539
    9. ',
' → logprob: -10.510843276977539
    10. '(n' → logprob: -10.760843276977539

Token 563: ' ...,' (ID: 126708)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6936146020889282
    2. ' n' → logprob: -0.6936146020889282
    3. '4' → logprob: -8.693614959716797
    4. ')' → logprob: -9.693614959716797
    5. ')n' → logprob: -9.693614959716797
    6. '	n' → logprob: -9.818614959716797
    7. '   ' → logprob: -10.068614959716797
    8. ' ' → logprob: -10.318614959716797
    9. '    ' → logprob: -11.818614959716797
    10. ',' → logprob: -12.193614959716797

Token 564: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10023234039545059
    2. ' n' → logprob: -2.3502323627471924
    3. '   ' → logprob: -10.975232124328613
    4. ')' → logprob: -12.975232124328613
    5. '	n' → logprob: -12.975232124328613
    6. ' ' → logprob: -13.975232124328613
    7. ')n' → logprob: -13.975232124328613
    8. '4' → logprob: -14.225232124328613
    9. 'range' → logprob: -14.975232124328613
    10. '    ' → logprob: -14.975232124328613

Token 565: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5323891043663025
    2. '):' → logprob: -1.2823891639709473
    3. ')' → logprob: -2.6573891639709473
    4. '-' → logprob: -3.6573891639709473
    5. ' +' → logprob: -3.9073891639709473
    6. ',' → logprob: -4.532389163970947
    7. ' -' → logprob: -6.032389163970947
    8. '   ' → logprob: -6.532389163970947
    9. '):
' → logprob: -6.532389163970947
    10. '```' → logprob: -6.782389163970947

Token 566: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03220028057694435
    2. ')' → logprob: -4.157200336456299
    3. '1' → logprob: -4.407200336456299
    4. '```' → logprob: -6.657200336456299
    5. 'n' → logprob: -7.032200336456299
    6. ' +' → logprob: -7.157200336456299
    7. '4' → logprob: -8.65719985961914
    8. '(n' → logprob: -9.53219985961914
    9. '   ' → logprob: -9.53219985961914
    10. '):' → logprob: -9.53219985961914

Token 567: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3493417501449585
    2. '):
' → logprob: -1.7243417501449585
    3. ',' → logprob: -2.224341869354248
    4. '   ' → logprob: -5.974341869354248
    5. ')' → logprob: -6.099341869354248
    6. ':' → logprob: -6.724341869354248
    7. '```' → logprob: -6.974341869354248
    8. '+' → logprob: -7.099341869354248
    9. '):
' → logprob: -8.84934139251709
    10. 'for' → logprob: -9.47434139251709

Token 568: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16220025718212128
    2. ' for' → logprob: -2.4122002124786377
    3. '   ' → logprob: -2.9122002124786377
    4. '(range' → logprob: -5.912200450897217
    5. '(' → logprob: -6.787200450897217
    6. ':' → logprob: -7.412200450897217
    7. '```' → logprob: -8.412199974060059
    8. ')' → logprob: -8.412199974060059
    9. ':
' → logprob: -8.662199974060059
    10. 'range' → logprob: -8.912199974060059

Token 569: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.027543358504772186
    2. ' for' → logprob: -3.652543306350708
    3. '   ' → logprob: -7.027543544769287
    4. '```' → logprob: -8.652543067932129
    5. '       ' → logprob: -9.402543067932129
    6. ':' → logprob: -10.152543067932129
    7. 'range' → logprob: -10.277543067932129
    8. '	for' → logprob: -11.527543067932129
    9. '(' → logprob: -12.277543067932129
    10. ')' → logprob: -12.777543067932129

Token 570: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759828686714172
    2. ' i' → logprob: -0.8259828686714172
    3. '	i' → logprob: -10.075983047485352
    4. '```' → logprob: -14.825983047485352
    5. 'I' → logprob: -15.575983047485352
    6. ' ' → logprob: -15.700983047485352
    7. '   ' → logprob: -15.825983047485352
    8. '_i' → logprob: -15.950983047485352
    9. ' ' → logprob: -16.82598304748535
    10. '(i' → logprob: -17.32598304748535

Token 571: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006850938778370619
    2. 'in' → logprob: -5.006850719451904
    3. ' ' → logprob: -9.006851196289062
    4. '	in' → logprob: -12.756851196289062
    5. '   ' → logprob: -13.131851196289062
    6. '4' → logprob: -13.631851196289062
    7. ' i' → logprob: -13.631851196289062
    8. '  ' → logprob: -13.756851196289062
    9. ',' → logprob: -14.006851196289062
    10. 'range' → logprob: -14.381851196289062

Token 572: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019291093340143561
    2. ' range' → logprob: -6.25192928314209
    3. '(range' → logprob: -15.50192928314209
    4. '4' → logprob: -16.376928329467773
    5. '	range' → logprob: -16.501928329467773
    6. ' ' → logprob: -16.751928329467773
    7. '   ' → logprob: -17.001928329467773
    8. '  ' → logprob: -18.376928329467773
    9. 'rang' → logprob: -20.126928329467773
    10. '    ' → logprob: -20.251928329467773

Token 573: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018006093159783632
    2. '4' → logprob: -8.6251802444458
    3. '(
' → logprob: -14.7501802444458
    4. ' (' → logprob: -16.125179290771484
    5. '(
' → logprob: -19.250179290771484
    6. '' → logprob: -19.375179290771484
    7. '	' → logprob: -19.875179290771484
    8. '```' → logprob: -20.125179290771484
    9. ' ' → logprob: -20.250179290771484
    10. '   ' → logprob: -20.625179290771484

Token 574: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '４' → logprob: -19.375
    4. '' → logprob: -20.375
    5. '۴' → logprob: -20.75
    6. '৪' → logprob: -21.125
    7. '४' → logprob: -21.125
    8. '٤' → logprob: -21.25
    9. '   ' → logprob: -21.375
    10. '5' → logprob: -21.875

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011653638648567721
    2. ',n' → logprob: -9.125116348266602
    3. ' ,' → logprob: -11.875116348266602
    4. 'n' → logprob: -15.125116348266602
    5. ',i' → logprob: -16.2501163482666
    6. ',
' → logprob: -16.3751163482666
    7. '‌,' → logprob: -17.7501163482666
    8. '+' → logprob: -18.1251163482666
    9. '```' → logprob: -18.1251163482666
    10. '   ' → logprob: -18.2501163482666

Token 576: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4855663721391466e-05
    2. ' n' → logprob: -11.125015258789062
    3. '(n' → logprob: -17.500015258789062
    4. '	n' → logprob: -17.875015258789062
    5. ')n' → logprob: -18.000015258789062
    6. ')' → logprob: -20.125015258789062
    7. '_n' → logprob: -20.125015258789062
    8. ',n' → logprob: -20.500015258789062
    9. '{' → logprob: -20.625015258789062
    10. '<n' → logprob: -20.625015258789062

Token 577: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05244096741080284
    2. '+' → logprob: -3.677440881729126
    3. '):
' → logprob: -3.677440881729126
    4. ' +' → logprob: -8.802440643310547
    5. ')' → logprob: -9.177440643310547
    6. '-' → logprob: -9.302440643310547
    7. ',' → logprob: -9.802440643310547
    8. '   ' → logprob: -9.927440643310547
    9. ':' → logprob: -10.802440643310547
    10. ' ):' → logprob: -10.802440643310547

Token 578: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6543880701065063
    2. '       ' → logprob: -1.0293880701065063
    3. '   ' → logprob: -2.154387950897217
    4. ' print' → logprob: -5.029387950897217
    5. '           ' → logprob: -8.529388427734375
    6. '	print' → logprob: -8.904388427734375
    7. '	   ' → logprob: -10.029388427734375
    8. '```' → logprob: -10.404388427734375
    9. '<|end|>' → logprob: -11.029388427734375
    10. ' ' → logprob: -11.029388427734375

Token 579: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006939699524082243
    2. '   ' → logprob: -8.250694274902344
    3. ' print' → logprob: -8.250694274902344
    4. '           ' → logprob: -8.750694274902344
    5. '	print' → logprob: -11.875694274902344
    6. '       ' → logprob: -12.375694274902344
    7. 'if' → logprob: -13.750694274902344
    8. ' ' → logprob: -14.250694274902344
    9. '  ' → logprob: -15.625694274902344
    10. '```' → logprob: -17.750694274902344

Token 580: ' Im' (ID: 3133)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.8219583075260743e-05
    2. 'if' → logprob: -10.875038146972656
    3. '           ' → logprob: -11.625038146972656
    4. '   ' → logprob: -12.125038146972656
    5. ' print' → logprob: -12.375038146972656
    6. '       ' → logprob: -14.875038146972656
    7. '	print' → logprob: -15.375038146972656
    8. ' ' → logprob: -18.000038146972656
    9. '  ' → logprob: -18.125038146972656
    10. 'printf' → logprob: -18.375038146972656

Token 581: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.040330059826374054
    2. 'print' → logprob: -3.540330171585083
    3. 'primer' → logprob: -4.915329933166504
    4. 'pr' → logprob: -6.665329933166504
    5. 'prim' → logprob: -6.665329933166504
    6. 'primir' → logprob: -8.540329933166504
    7. '#' → logprob: -9.040329933166504
    8. 'press' → logprob: -9.540329933166504
    9. 'port' → logprob: -9.665329933166504
    10. 'pres' → logprob: -9.790329933166504

Token 582: ' une' (ID: 2463)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.11481331288814545
    2. 'i' → logprob: -2.2398133277893066
    3. 'print' → logprob: -6.989813327789307
    4. '(' → logprob: -7.239813327789307
    5. '1' → logprob: -8.364812850952148
    6. '(n' → logprob: -9.864812850952148
    7. '   ' → logprob: -10.864812850952148
    8. ' i' → logprob: -10.989812850952148
    9. '2' → logprob: -11.364812850952148
    10. '3' → logprob: -12.364812850952148

Token 583: ' paire' (ID: 148856)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4448365569114685
    2. 'i' → logprob: -1.1948366165161133
    3. 'print' → logprob: -3.0698366165161133
    4. '(' → logprob: -5.694836616516113
    5. ' (' → logprob: -5.819836616516113
    6. ' i' → logprob: -6.319836616516113
    7. '{i' → logprob: -7.194836616516113
    8. 'pair' → logprob: -7.944836616516113
    9. ' ' → logprob: -8.944836616516113
    10. '   ' → logprob: -9.444836616516113

Token 584: ' où' (ID: 15113)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003377270477358252
    2. ' i' → logprob: -8.750337600708008
    3. 'i' → logprob: -9.250337600708008
    4. '(' → logprob: -10.000337600708008
    5. ' (' → logprob: -10.625337600708008
    6. '{i' → logprob: -12.000337600708008
    7. 'print' → logprob: -12.125337600708008
    8. '           ' → logprob: -14.750337600708008
    9. '   ' → logprob: -15.000337600708008
    10. ' print' → logprob: -15.625337600708008

Token 585: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0026541322004050016
    2. 'print' → logprob: -6.252654075622559
    3. '(i' → logprob: -7.627654075622559
    4. ' i' → logprob: -8.502654075622559
    5. '   ' → logprob: -11.752654075622559
    6. '1' → logprob: -12.127654075622559
    7. '(' → logprob: -12.377654075622559
    8. 'n' → logprob: -12.377654075622559
    9. '           ' → logprob: -12.627654075622559
    10. '3' → logprob: -12.627654075622559

Token 586: ' premier' (ID: 15506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2814362943172455
    2. 'print' → logprob: -1.4064363241195679
    3. 'first' → logprob: -8.7814359664917
    4. ' print' → logprob: -9.7814359664917
    5. ' i' → logprob: -10.1564359664917
    6. '(i' → logprob: -11.1564359664917
    7. 'pr' → logprob: -12.1564359664917
    8. 'previous' → logprob: -12.7814359664917
    9. '#print' → logprob: -13.2814359664917
    10. 'num' → logprob: -13.5314359664917

Token 587: ' élément' (ID: 99627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005343567114323378
    2. ' i' → logprob: -6.130343437194824
    3. 'print' → logprob: -6.630343437194824
    4. ',' → logprob: -6.755343437194824
    5. '(i' → logprob: -7.630343437194824
    6. ' ,' → logprob: -10.005343437194824
    7. '(' → logprob: -10.005343437194824
    8. '=' → logprob: -10.630343437194824
    9. ',i' → logprob: -10.880343437194824
    10. ' (' → logprob: -11.505343437194824

Token 588: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18055441975593567
    2. ',' → logprob: -2.3055543899536133
    3. 'i' → logprob: -3.9305543899536133
    4. '=i' → logprob: -3.9305543899536133
    5. 'print' → logprob: -4.430554389953613
    6. ' =' → logprob: -5.055554389953613
    7. ' i' → logprob: -5.930554389953613
    8. '           ' → logprob: -6.555554389953613
    9. '(i' → logprob: -6.555554389953613
    10. ',i' → logprob: -6.555554389953613

Token 589: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.264322317088954e-05
    2. 'n' → logprob: -10.500052452087402
    3. '1' → logprob: -11.875052452087402
    4. ' i' → logprob: -11.875052452087402
    5. '   ' → logprob: -12.625052452087402
    6. '           ' → logprob: -13.125052452087402
    7. '(i' → logprob: -13.625052452087402
    8. '0' → logprob: -13.750052452087402
    9. 'print' → logprob: -14.125052452087402
    10. '       ' → logprob: -14.375052452087402

Token 590: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33707255125045776
    2. '+' → logprob: -1.5870726108551025
    3. ' +' → logprob: -3.3370726108551025
    4. 'i' → logprob: -3.5870726108551025
    5. ' i' → logprob: -5.837072372436523
    6. '-' → logprob: -5.837072372436523
    7. '+i' → logprob: -6.087072372436523
    8. ' ,' → logprob: -6.337072372436523
    9. ',i' → logprob: -6.337072372436523
    10. 'and' → logprob: -6.587072372436523

Token 591: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002844576956704259
    2. '2' → logprob: -8.375284194946289
    3. '1' → logprob: -10.250284194946289
    4. '(i' → logprob: -11.875284194946289
    5. ' i' → logprob: -12.000284194946289
    6. '3' → logprob: -12.500284194946289
    7. '{i' → logprob: -13.750284194946289
    8. '(' → logprob: -15.625284194946289
    9. '```' → logprob: -16.75028419494629
    10. '   ' → logprob: -16.87528419494629

Token 592: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009406952187418938
    2. ',i' → logprob: -5.884407043457031
    3. ' ,' → logprob: -6.259407043457031
    4. '+' → logprob: -6.509407043457031
    5. 'and' → logprob: -7.009407043457031
    6. 'i' → logprob: -7.259407043457031
    7. '           ' → logprob: -7.509407043457031
    8. '+i' → logprob: -8.009407043457031
    9. ' and' → logprob: -8.384407043457031
    10. 'print' → logprob: -8.884407043457031

Token 593: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028223509434610605
    2. ' i' → logprob: -6.127822399139404
    3. 'the' → logprob: -8.002821922302246
    4. 'le' → logprob: -8.252821922302246
    5. 'second' → logprob: -10.877821922302246
    6. '   ' → logprob: -12.002821922302246
    7. '           ' → logprob: -12.127821922302246
    8. ' le' → logprob: -12.502821922302246
    9. ' the' → logprob: -13.002821922302246
    10. 'print' → logprob: -13.877821922302246

Token 594: ' second' (ID: 3099)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007351516745984554
    2. 'second' → logprob: -5.507351398468018
    3. 'print' → logprob: -5.757351398468018
    4. ' i' → logprob: -9.507351875305176
    5. '#' → logprob: -11.382351875305176
    6. ' second' → logprob: -11.882351875305176
    7. 'n' → logprob: -12.882351875305176
    8. '   ' → logprob: -13.007351875305176
    9. '2' → logprob: -13.257351875305176
    10. '`' → logprob: -13.757351875305176

Token 595: ' est' (ID: 893)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3244521915912628
    2. 'is' → logprob: -1.8244521617889404
    3. ' is' → logprob: -2.4494521617889404
    4. ' i' → logprob: -3.9494521617889404
    5. ',' → logprob: -4.6994524002075195
    6. ',i' → logprob: -8.07445240020752
    7. '           ' → logprob: -8.07445240020752
    8. '+' → logprob: -8.69945240020752
    9. '(i' → logprob: -9.32445240020752
    10. '=i' → logprob: -10.07445240020752

Token 596: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.625866030342877e-05
    2. 'n' → logprob: -9.500085830688477
    3. ' i' → logprob: -11.500085830688477
    4. '   ' → logprob: -13.875085830688477
    5. '```' → logprob: -16.625085830688477
    6. '`' → logprob: -17.250085830688477
    7. '    ' → logprob: -17.375085830688477
    8. '(i' → logprob: -17.500085830688477
    9. '​' → logprob: -17.625085830688477
    10. ' ' → logprob: -17.875085830688477

Token 597: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09560120850801468
    2. ' ,' → logprob: -3.4706013202667236
    3. 'print' → logprob: -3.5956013202667236
    4. ',n' → logprob: -3.7206013202667236
    5. 'n' → logprob: -5.5956010818481445
    6. '(n' → logprob: -5.8456010818481445
    7. '+' → logprob: -7.5956010818481445
    8. ' print' → logprob: -7.7206010818481445
    9. ' n' → logprob: -7.9706010818481445
    10. '           ' → logprob: -7.9706010818481445

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03277715668082237
    2. 'print' → logprob: -3.5327770709991455
    3. ' print' → logprob: -6.532777309417725
    4. '       ' → logprob: -6.782777309417725
    5. '   ' → logprob: -8.532776832580566
    6. '               ' → logprob: -9.157776832580566
    7. ':' → logprob: -9.282776832580566
    8. 'n' → logprob: -11.532776832580566
    9. '```' → logprob: -11.907776832580566
    10. ':
' → logprob: -12.532776832580566

Token 599: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003975577652454376
    2. '           ' → logprob: -6.0039753913879395
    3. ' print' → logprob: -6.5039753913879395
    4. '   ' → logprob: -14.253975868225098
    5. '	print' → logprob: -14.878975868225098
    6. '       ' → logprob: -15.628975868225098
    7. ' ' → logprob: -16.75397491455078
    8. '               ' → logprob: -16.87897491455078
    9. '  ' → logprob: -17.75397491455078
    10. '          ' → logprob: -18.50397491455078

Token 600: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03811034560203552
    2. 'n' → logprob: -3.2881102561950684
    3. '(' → logprob: -9.663110733032227
    4. ' n' → logprob: -12.663110733032227
    5. '	n' → logprob: -14.038110733032227
    6. ' (' → logprob: -14.038110733032227
    7. '(
' → logprob: -15.538110733032227
    8. '   ' → logprob: -16.163110733032227
    9. ',n' → logprob: -16.913110733032227
    10. '((' → logprob: -17.413110733032227

Token 601: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005237075500190258
    2. ' +' → logprob: -5.255237102508545
    3. '+i' → logprob: -13.755236625671387
    4. '+
' → logprob: -14.130236625671387
    5. '   ' → logprob: -14.505236625671387
    6. ' ' → logprob: -14.755236625671387
    7. '＋' → logprob: -16.005237579345703
    8. '1' → logprob: -16.130237579345703
    9. '+k' → logprob: -16.817737579345703
    10. '  ' → logprob: -16.880237579345703

Token 602: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.668304245569743e-05
    2. ' ' → logprob: -10.125046730041504
    3. 'i' → logprob: -12.250046730041504
    4. '2' → logprob: -13.750046730041504
    5. ' i' → logprob: -15.812546730041504
    6. '   ' → logprob: -15.937546730041504
    7. '  ' → logprob: -16.437545776367188
    8. '+' → logprob: -16.687545776367188
    9. '(i' → logprob: -16.687545776367188
    10. '3' → logprob: -17.125045776367188

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023501921445131302
    2. 'i' → logprob: -3.7735018730163574
    3. '2' → logprob: -9.148502349853516
    4. ' ' → logprob: -9.273502349853516
    5. ' i' → logprob: -10.148502349853516
    6. '(i' → logprob: -11.648502349853516
    7. '   ' → logprob: -13.398502349853516
    8. '[i' → logprob: -14.148502349853516
    9. '3' → logprob: -14.148502349853516
    10. '+' → logprob: -14.273502349853516

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00596991553902626
    2. ',i' → logprob: -5.130970001220703
    3. ' ,' → logprob: -10.505970001220703
    4. ',n' → logprob: -11.755970001220703
    5. 'i' → logprob: -12.255970001220703
    6. ',end' → logprob: -14.880970001220703
    7. ' i' → logprob: -15.130970001220703
    8. ',
' → logprob: -15.505970001220703
    9. '(i' → logprob: -15.755970001220703
    10. '   ' → logprob: -16.005970001220703

Token 605: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002475777640938759
    2. ' i' → logprob: -6.002475738525391
    3. '	i' → logprob: -15.87747573852539
    4. ' ' → logprob: -18.62747573852539
    5. '   ' → logprob: -19.00247573852539
    6. ')i' → logprob: -19.87747573852539
    7. ',i' → logprob: -20.12747573852539
    8. '{i' → logprob: -20.25247573852539
    9. ')' → logprob: -20.50247573852539
    10. '(i' → logprob: -20.87747573852539

Token 606: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.56233171664644e-05
    2. ' )' → logprob: -10.500055313110352
    3. '+' → logprob: -10.625055313110352
    4. ')
' → logprob: -12.750055313110352
    5. ' +' → logprob: -15.125055313110352
    6. '   ' → logprob: -15.750055313110352
    7. '))' → logprob: -16.37505531311035
    8. '+)' → logprob: -16.50005531311035
    9. '),' → logprob: -16.62505531311035
    10. ')#' → logprob: -16.87505531311035

Token 607: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 608: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' Vér' (ID: 159169)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016682932619005442
    2. ' print' → logprob: -9.250166893005371
    3. 'n' → logprob: -10.000166893005371
    4. 'for' → logprob: -11.375166893005371
    5. '<|end|>' → logprob: -12.125166893005371
    6. '```' → logprob: -12.375166893005371
    7. '       ' → logprob: -13.875166893005371
    8. '#' → logprob: -14.250166893005371
    9. 'i' → logprob: -14.625166893005371
    10. '(print' → logprob: -14.875166893005371

Token 610: 'ifie' (ID: 46409)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00635532708838582
    2. 'ifie' → logprob: -6.131355285644531
    3. 'ifier' → logprob: -6.381355285644531
    4. 'ifiez' → logprob: -6.756355285644531
    5. 'print' → logprob: -6.881355285644531
    6. 'ify' → logprob: -9.381355285644531
    7. 'ifi' → logprob: -9.381355285644531
    8. '#' → logprob: -10.631355285644531
    9. 'f' → logprob: -11.006355285644531
    10. '```' → logprob: -11.131355285644531

Token 611: ' la' (ID: 557)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0157206058502197
    2. ' i' → logprob: -1.1407206058502197
    3. ' n' → logprob: -1.5157206058502197
    4. 'i' → logprob: -3.5157206058502197
    5. 'if' → logprob: -3.7657206058502197
    6. 'n' → logprob: -3.8907206058502197
    7. '(n' → logprob: -4.265720367431641
    8. ' ' → logprob: -5.265720367431641
    9. ' (' → logprob: -5.515720367431641
    10. '(i' → logprob: -7.015720367431641

Token 612: ' par' (ID: 686)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4541206657886505
    2. 'n' → logprob: -1.7041206359863281
    3. ' i' → logprob: -2.204120635986328
    4. ' n' → logprob: -3.079120635986328
    5. '(n' → logprob: -4.079120635986328
    6. 'if' → logprob: -5.204120635986328
    7. '(i' → logprob: -6.454120635986328
    8. ' if' → logprob: -6.704120635986328
    9. '(' → logprob: -8.704120635986328
    10. ' ' → logprob: -8.829120635986328

Token 613: 'ité' (ID: 3761)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1972673237323761
    2. '(n' → logprob: -2.5722672939300537
    3. 'if' → logprob: -2.8222672939300537
    4. 'i' → logprob: -4.197267532348633
    5. '%' → logprob: -5.197267532348633
    6. 'nt' → logprob: -5.447267532348633
    7. '(i' → logprob: -5.572267532348633
    8. 't' → logprob: -6.072267532348633
    9. 'n' → logprob: -6.322267532348633
    10. '(' → logprob: -6.697267532348633

Token 614: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.054032549262046814
    2. 'if' → logprob: -3.554032564163208
    3. '   ' → logprob: -4.929032325744629
    4. '%' → logprob: -5.304032325744629
    5. ' %' → logprob: -5.804032325744629
    6. ' ' → logprob: -6.304032325744629
    7. '<|end|>' → logprob: -6.679032325744629
    8. ' i' → logprob: -6.679032325744629
    9. ' (' → logprob: -7.179032325744629
    10. ',' → logprob: -7.429032325744629

Token 615: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008346432005055249
    2. ' i' → logprob: -7.1258344650268555
    3. 'n' → logprob: -11.375834465026855
    4. '   ' → logprob: -11.750834465026855
    5. '(i' → logprob: -12.125834465026855
    6. '	i' → logprob: -13.125834465026855
    7. ' ' → logprob: -13.750834465026855
    8. '(' → logprob: -14.125834465026855
    9. ' (' → logprob: -15.125834465026855
    10. '  ' → logprob: -15.375834465026855

Token 616: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4561641216278076
    2. ' if' → logprob: -1.7061641216278076
    3. ' ' → logprob: -2.7061641216278076
    4. '<|end|>' → logprob: -2.7061641216278076
    5. 'if' → logprob: -3.9561641216278076
    6. '       ' → logprob: -4.706164360046387
    7. '    ' → logprob: -4.956164360046387
    8. '  ' → logprob: -5.331164360046387
    9. ',' → logprob: -6.206164360046387
    10. '    
' → logprob: -6.331164360046387

Token 617: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23926709592342377
    2. 'if' → logprob: -1.864267110824585
    3. ' i' → logprob: -4.114266872406006
    4. ' ' → logprob: -4.239266872406006
    5. ' 
' → logprob: -4.864266872406006
    6. '   ' → logprob: -5.489266872406006
    7. 'i' → logprob: -5.864266872406006
    8. '<|end|>' → logprob: -6.114266872406006
    9. '    
' → logprob: -6.489266872406006
    10. '           ' → logprob: -6.489266872406006

Token 618: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20151078701019287
    2. ' i' → logprob: -1.7015107870101929
    3. '(i' → logprob: -9.701510429382324
    4. ' (' → logprob: -10.951510429382324
    5. '(' → logprob: -11.076510429382324
    6. ' ' → logprob: -13.576510429382324
    7. ' ' → logprob: -13.951510429382324
    8. ' not' → logprob: -14.701510429382324
    9. 'not' → logprob: -15.576510429382324
    10. '   ' → logprob: -15.576510429382324

Token 619: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31330612301826477
    2. '%' → logprob: -1.3133060932159424
    3. ' ' → logprob: -10.063305854797363
    4. ' ' → logprob: -13.938305854797363
    5. '%i' → logprob: -15.438305854797363
    6. ' %
' → logprob: -15.688305854797363
    7. '```' → logprob: -15.813305854797363
    8. '[' → logprob: -16.31330680847168
    9. '   ' → logprob: -16.56330680847168
    10. '  ' → logprob: -16.81330680847168

Token 620: ' pair' (ID: 10610)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8575987815856934
    2. 'i' → logprob: -1.4825987815856934
    3. '(i' → logprob: -2.1075987815856934
    4. ' i' → logprob: -2.7325987815856934
    5. 'not' → logprob: -3.1075987815856934
    6. 'even' → logprob: -3.2325987815856934
    7. ' not' → logprob: -3.6075987815856934
    8. ' %' → logprob: -4.232598781585693
    9. 'odd' → logprob: -4.982598781585693
    10. 'n' → logprob: -5.107598781585693

Token 621: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23865628242492676
    2. ':' → logprob: -1.7386562824249268
    3. 'and' → logprob: -3.9886562824249268
    4. ',' → logprob: -4.988656044006348
    5. ':
' → logprob: -4.988656044006348
    6. '   ' → logprob: -6.613656044006348
    7. '==' → logprob: -7.363656044006348
    8. ' or' → logprob: -7.988656044006348
    9. ' ' → logprob: -8.113656044006348
    10. '<|end|>' → logprob: -8.113656044006348

Token 622: 'reste' (ID: 84661)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31374141573905945
    2. 'i' → logprob: -1.3137414455413818
    3. ')' → logprob: -7.938741207122803
    4. '(i' → logprob: -9.813741683959961
    5. ' (' → logprob: -11.188741683959961
    6. ' ' → logprob: -11.438741683959961
    7. ',' → logprob: -11.813741683959961
    8. 'if' → logprob: -12.063741683959961
    9. ',i' → logprob: -12.438741683959961
    10. ' if' → logprob: -12.438741683959961

Token 623: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18026527762413025
    2. '==' → logprob: -1.8052653074264526
    3. ' ' → logprob: -8.305265426635742
    4. '()==' → logprob: -8.805265426635742
    5. '=' → logprob: -10.180265426635742
    6. ')==' → logprob: -10.930265426635742
    7. '```' → logprob: -11.055265426635742
    8. ' ===' → logprob: -11.805265426635742
    9. '%' → logprob: -11.930265426635742
    10. ' =' → logprob: -11.930265426635742

Token 624: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15230555832386017
    2. 'i' → logprob: -2.4023056030273438
    3. ' ' → logprob: -3.4023056030273438
    4. '0' → logprob: -4.152305603027344
    5. '1' → logprob: -7.277305603027344
    6. '(i' → logprob: -7.777305603027344
    7. '2' → logprob: -7.902305603027344
    8. '```' → logprob: -9.027305603027344
    9. '[i' → logprob: -10.902305603027344
    10. '=i' → logprob: -11.277305603027344

Token 625: ' division' (ID: 21629)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006461578421294689
    2. ' ' → logprob: -5.1314616203308105
    3. '0' → logprob: -8.131461143493652
    4. ' i' → logprob: -9.256461143493652
    5. '```' → logprob: -9.881461143493652
    6. 'i' → logprob: -10.256461143493652
    7. 'n' → logprob: -11.381461143493652
    8. '1' → logprob: -11.506461143493652
    9. '%i' → logprob: -11.506461143493652
    10. 'div' → logprob: -11.881461143493652

Token 626: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3768687844276428
    2. '==' → logprob: -1.376868724822998
    3. '(i' → logprob: -3.501868724822998
    4. ' i' → logprob: -3.876868724822998
    5. ')' → logprob: -5.626868724822998
    6. 'i' → logprob: -5.876868724822998
    7. ')==' → logprob: -6.626868724822998
    8. '()==' → logprob: -6.876868724822998
    9. ' ' → logprob: -7.001868724822998
    10. '=' → logprob: -8.751869201660156

Token 627: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39070263504981995
    2. ' i' → logprob: -1.2657026052474976
    3. '2' → logprob: -3.265702724456787
    4. ' ' → logprob: -5.765702724456787
    5. '```' → logprob: -10.515702247619629
    6. '1' → logprob: -10.890702247619629
    7. '%i' → logprob: -11.515702247619629
    8. '0' → logprob: -11.765702247619629
    9. '   ' → logprob: -12.765702247619629
    10. '	i' → logprob: -13.015702247619629

Token 628: ' par' (ID: 686)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1992112100124359
    2. '==' → logprob: -1.9492112398147583
    3. '%' → logprob: -4.324211120605469
    4. ')' → logprob: -4.574211120605469
    5. ' ' → logprob: -5.199211120605469
    6. ')==' → logprob: -5.699211120605469
    7. ' %' → logprob: -6.199211120605469
    8. '=' → logprob: -6.449211120605469
    9. '```' → logprob: -7.199211120605469
    10. ' i' → logprob: -7.574211120605469

Token 629: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023259222507476807
    2. ' ' → logprob: -3.773259162902832
    3. '```' → logprob: -11.523259162902832
    4. ' i' → logprob: -14.148259162902832
    5. '1' → logprob: -14.273259162902832
    6. ')' → logprob: -14.898259162902832
    7. '  ' → logprob: -15.023259162902832
    8. 'i' → logprob: -15.148259162902832
    9. '   ' → logprob: -15.148259162902832
    10. '4' → logprob: -15.523259162902832

Token 630: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000912774819880724
    2. ' ' → logprob: -7.000912666320801
    3. '```' → logprob: -14.2509126663208
    4. '4' → logprob: -15.6259126663208
    5. '  ' → logprob: -16.000913619995117
    6. '   ' → logprob: -16.125913619995117
    7. '<|end|>' → logprob: -16.375913619995117
    8. '3' → logprob: -16.750913619995117
    9. '1' → logprob: -17.313413619995117
    10. 'i' → logprob: -17.563413619995117

Token 631: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2549346685409546
    2. '==' → logprob: -1.5049346685409546
    3. ')' → logprob: -6.379934787750244
    4. ')==' → logprob: -6.754934787750244
    5. ' ' → logprob: -10.004934310913086
    6. '=' → logprob: -10.629934310913086
    7. '```' → logprob: -10.754934310913086
    8. ' )' → logprob: -11.004934310913086
    9. '),' → logprob: -11.379934310913086
    10. ']==' → logprob: -11.879934310913086

Token 632: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09489110112190247
    2. ' ' → logprob: -2.46989107131958
    3. '==' → logprob: -5.84489107131958
    4. '=' → logprob: -6.34489107131958
    5. ' ==' → logprob: -7.21989107131958
    6. ' =' → logprob: -8.219891548156738
    7. '1' → logprob: -8.719891548156738
    8. '2' → logprob: -9.844891548156738
    9. '```' → logprob: -10.844891548156738
    10. '<|end|>' → logprob: -11.094891548156738

Token 633: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017947778105735779
    2. ' ' → logprob: -6.376794815063477
    3. '==' → logprob: -10.001794815063477
    4. '=' → logprob: -10.126794815063477
    5. '1' → logprob: -12.876794815063477
    6. ' ==' → logprob: -13.251794815063477
    7. '```' → logprob: -13.501794815063477
    8. ' =' → logprob: -14.501794815063477
    9. '<|end|>' → logprob: -15.501794815063477
    10. '2' → logprob: -15.626794815063477

Token 634: ')
' (ID: 446)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.393694669008255
    2. '==' → logprob: -1.1436946392059326
    3. ')' → logprob: -5.768694877624512
    4. ')==' → logprob: -6.143694877624512
    5. '),' → logprob: -7.018694877624512
    6. '):' → logprob: -8.143694877624512
    7. '```' → logprob: -8.518694877624512
    8. ' ' → logprob: -10.268694877624512
    9. '()==' → logprob: -10.643694877624512
    10. '=' → logprob: -10.768694877624512

Token 635: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5894087553024292
    2. ':' → logprob: -1.7144087553024292
    3. '       ' → logprob: -1.7144087553024292
    4. ' if' → logprob: -1.9644087553024292
    5. ' ==' → logprob: -2.3394088745117188
    6. '==' → logprob: -2.7144088745117188
    7. 'if' → logprob: -2.9644088745117188
    8. '           ' → logprob: -3.5894088745117188
    9. ' ' → logprob: -3.7144088745117188
    10. ' =' → logprob: -4.714408874511719

Token 636: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13039730489253998
    2. ' if' → logprob: -2.880397319793701
    3. '   ' → logprob: -3.630397319793701
    4. '       ' → logprob: -4.130397319793701
    5. '               ' → logprob: -4.755397319793701
    6. 'if' (adapté à ' if') → logprob: -5.880397319793701
    7. '		' → logprob: -6.005397319793701
    8. ' ' → logprob: -6.130397319793701
    9. '	       ' → logprob: -6.130397319793701
    10. '	' → logprob: -6.380397319793701

Token 637: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2014208436012268
    2. 'i' → logprob: -1.701420783996582
    3. '(i' → logprob: -12.201420783996582
    4. '	i' → logprob: -13.326420783996582
    5. ' (' → logprob: -14.701420783996582
    6. '   ' → logprob: -15.451420783996582
    7. ' ' → logprob: -16.3264217376709
    8. ' ' → logprob: -16.3264217376709
    9. '_i' → logprob: -17.0764217376709
    10. '(' → logprob: -17.2014217376709

Token 638: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.100285604596138
    2. '%' → logprob: -2.350285530090332
    3. ' ' → logprob: -9.475285530090332
    4. '   ' → logprob: -14.475285530090332
    5. ' ' → logprob: -14.725285530090332
    6. '  ' → logprob: -15.225285530090332
    7. ')' → logprob: -15.350285530090332
    8. ' ==' → logprob: -15.350285530090332
    9. '[' → logprob: -16.47528648376465
    10. '()%' → logprob: -16.72528648376465

Token 639: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031879288144409657
    2. ' ' → logprob: -5.753188133239746
    3. '```' → logprob: -12.253188133239746
    4. '<|end|>' → logprob: -13.378188133239746
    5. '   ' → logprob: -13.878188133239746
    6. '=' → logprob: -13.878188133239746
    7. '==' → logprob: -14.628188133239746
    8. '  ' → logprob: -15.003188133239746
    9. '1' → logprob: -15.253188133239746
    10. '0' → logprob: -15.628188133239746

Token 640: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016158436483237892
    2. ' ' → logprob: -8.750161170959473
    3. '```' → logprob: -14.250161170959473
    4. '   ' → logprob: -14.375161170959473
    5. '==' → logprob: -14.562661170959473
    6. '  ' → logprob: -15.125161170959473
    7. ' ==' → logprob: -15.937661170959473
    8. '4' → logprob: -15.937661170959473
    9. '1' → logprob: -16.12516212463379
    10. '0' → logprob: -16.37516212463379

Token 641: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12732554972171783
    2. ' ==' → logprob: -2.1273255348205566
    3. '0' → logprob: -8.252326011657715
    4. ')==' → logprob: -9.502326011657715
    5. '=' → logprob: -10.877326011657715
    6. ')' → logprob: -11.502326011657715
    7. '<|end|>' → logprob: -11.752326011657715
    8. '()==' → logprob: -12.002326011657715
    9. ']==' → logprob: -12.002326011657715
    10. '==
' → logprob: -12.252326011657715

Token 642: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0037360643036663532
    2. ' ' → logprob: -5.6287360191345215
    3. '2' → logprob: -9.00373649597168
    4. '1' → logprob: -11.62873649597168
    5. '==' → logprob: -13.25373649597168
    6. '=' → logprob: -13.37873649597168
    7. '```' → logprob: -15.12873649597168
    8. '   ' → logprob: -15.87873649597168
    9. '  ' → logprob: -16.19123649597168
    10. ' ==' → logprob: -16.37873649597168

Token 643: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015123621560633183
    2. '2' → logprob: -6.62651252746582
    3. ' ' → logprob: -8.75151252746582
    4. '1' → logprob: -10.50151252746582
    5. '==' → logprob: -15.37651252746582
    6. '```' → logprob: -15.62651252746582
    7. '   ' → logprob: -16.00151252746582
    8. '=' → logprob: -17.18901252746582
    9. '  ' → logprob: -17.25151252746582
    10. '<|end|>' → logprob: -18.37651252746582

Token 644: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0488726906478405
    2. '               ' → logprob: -3.423872709274292
    3. ':
' → logprob: -4.423872470855713
    4. '           ' → logprob: -5.923872470855713
    5. '=' → logprob: -9.298872947692871
    6. '==' → logprob: -9.798872947692871
    7. 'print' → logprob: -10.048872947692871
    8. ' and' → logprob: -10.048872947692871
    9. '       ' → logprob: -10.173872947692871
    10. ' =' → logprob: -10.423872947692871

Token 645: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006767826154828072
    2. '           ' → logprob: -5.256767749786377
    3. ' print' → logprob: -7.256767749786377
    4. 'print' → logprob: -7.631767749786377
    5. ':' → logprob: -8.756768226623535
    6. '       ' → logprob: -10.256768226623535
    7. '   ' → logprob: -10.381768226623535
    8. ':
' → logprob: -11.006768226623535
    9. '              ' → logprob: -11.256768226623535
    10. ' :' → logprob: -11.506768226623535

Token 646: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013579712249338627
    2. ' print' → logprob: -6.6263580322265625
    3. '                   ' → logprob: -11.251358032226562
    4. '               ' → logprob: -11.626358032226562
    5. '           ' → logprob: -12.126358032226562
    6. '   ' → logprob: -12.501358032226562
    7. ' ' → logprob: -15.001358032226562
    8. '	print' → logprob: -15.126358032226562
    9. '       ' → logprob: -15.501358032226562
    10. 'continue' → logprob: -16.501358032226562

Token 647: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.9875325708417222e-05
    2. ' print' → logprob: -10.625029563903809
    3. '               ' → logprob: -12.750029563903809
    4. '   ' → logprob: -14.250029563903809
    5. 'break' → logprob: -14.375029563903809
    6. '           ' → logprob: -14.500029563903809
    7. '                   ' → logprob: -14.750029563903809
    8. 'continue' → logprob: -15.125029563903809
    9. '	print' → logprob: -15.750029563903809
    10. '       ' → logprob: -16.750030517578125

Token 648: ' i' (ID: 575)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07553814351558685
    2. ' print' → logprob: -3.200538158416748
    3. 'i' → logprob: -4.075538158416748
    4. ' i' → logprob: -4.700538158416748
    5. 'n' → logprob: -6.700538158416748
    6. ' n' → logprob: -6.700538158416748
    7. 'True' → logprob: -6.700538158416748
    8. ' True' → logprob: -6.700538158416748
    9. '(n' → logprob: -8.20053768157959
    10. '   ' → logprob: -8.57553768157959

Token 649: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8302271962165833
    2. ' ==' → logprob: -1.2052271366119385
    3. '%' → logprob: -1.9552271366119385
    4. ' %' → logprob: -2.2052271366119385
    5. ' !=' → logprob: -5.705227375030518
    6. '+' → logprob: -6.330227375030518
    7. '!=' → logprob: -6.455227375030518
    8. '   ' → logprob: -6.830227375030518
    9. '%n' → logprob: -6.955227375030518
    10. ' ' → logprob: -7.205227375030518

Token 650: ' pair' (ID: 10610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5173782110214233
    2. 'pair' → logprob: -1.8923782110214233
    3. 'i' → logprob: -2.392378330230713
    4. 'not' → logprob: -2.517378330230713
    5. 'im' → logprob: -3.642378330230713
    6. 'imp' → logprob: -4.892378330230713
    7. ' not' → logprob: -4.892378330230713
    8. '1' → logprob: -5.267378330230713
    9. '0' → logprob: -5.392378330230713
    10. ' n' → logprob: -5.517378330230713

Token 651: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6116349697113037
    2. '                   ' → logprob: -1.4866349697113037
    3. ':
' → logprob: -1.6116349697113037
    4. ',' → logprob: -3.7366349697113037
    5. '               ' → logprob: -5.736635208129883
    6. 'print' → logprob: -6.236635208129883
    7. ' print' → logprob: -6.486635208129883
    8. '           ' → logprob: -7.361635208129883
    9. ' :' → logprob: -8.736635208129883
    10. '   ' → logprob: -8.861635208129883

Token 652: ' imprime' (ID: 195564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07976104319095612
    2. ' print' → logprob: -2.579761028289795
    3. '                   ' → logprob: -7.704761028289795
    4. '               ' → logprob: -7.829761028289795
    5. '           ' → logprob: -11.704761505126953
    6. '   ' → logprob: -12.204761505126953
    7. 'continue' → logprob: -12.829761505126953
    8. '                ' → logprob: -13.329761505126953
    9. '	print' → logprob: -13.954761505126953
    10. '       ' → logprob: -14.204761505126953

Token 653: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.203014075756073
    2. '(i' → logprob: -1.7030141353607178
    3. '(' → logprob: -6.953013896942139
    4. '(f' → logprob: -8.203014373779297
    5. '("' → logprob: -8.578014373779297
    6. 'i' → logprob: -10.078014373779297
    7. 'n' → logprob: -10.078014373779297
    8. '"' → logprob: -10.453014373779297
    9. ' (' → logprob: -10.703014373779297
    10. '((' → logprob: -11.453014373779297

Token 654: ' paire' (ID: 148856)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.63526451587677
    2. '(n' → logprob: -1.01026451587677
    3. 'n' → logprob: -3.2602643966674805
    4. ' print' → logprob: -4.0102643966674805
    5. '(i' → logprob: -4.1352643966674805
    6. 'i' → logprob: -4.7602643966674805
    7. ' i' → logprob: -5.0102643966674805
    8. 'prem' → logprob: -5.3852643966674805
    9. ' paire' → logprob: -6.2602643966674805
    10. ' n' → logprob: -6.5102643966674805

Token 655: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.23622721433639526
    2. '(i' → logprob: -1.61122727394104
    3. '(' → logprob: -4.611227035522461
    4. ' (' → logprob: -7.361227035522461
    5. '("' → logprob: -10.361227035522461
    6. '               ' → logprob: -10.486227035522461
    7. '((' → logprob: -10.611227035522461
    8. ' i' → logprob: -10.861227035522461
    9. 'n' → logprob: -11.236227035522461
    10. 'i' → logprob: -11.361227035522461

Token 656: 'i' (ID: 72)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47743144631385803
    2. 'i' → logprob: -0.9774314165115356
    3. ' n' → logprob: -7.227431297302246
    4. '2' → logprob: -7.602431297302246
    5. ' i' → logprob: -7.602431297302246
    6. '   ' → logprob: -7.602431297302246
    7. '1' → logprob: -8.102431297302246
    8. '(n' → logprob: -8.227431297302246
    9. '3' → logprob: -8.477431297302246
    10. '(i' → logprob: -8.852431297302246

Token 657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03242523968219757
    2. '+' → logprob: -3.9074251651763916
    3. ',n' → logprob: -5.407425403594971
    4. ' +' → logprob: -6.157425403594971
    5. ' ,' → logprob: -6.157425403594971
    6. ',i' → logprob: -6.782425403594971
    7. '-' → logprob: -8.032424926757812
    8. ' ' → logprob: -8.032424926757812
    9. '(n' → logprob: -8.407424926757812
    10. 'i' → logprob: -8.532424926757812

Token 658: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.49559327960014343
    2. 'i' → logprob: -0.9955933094024658
    3. ' n' → logprob: -4.245593070983887
    4. ' i' → logprob: -4.995593070983887
    5. ')' → logprob: -9.495593070983887
    6. ' ' → logprob: -9.995593070983887
    7. '3' → logprob: -10.620593070983887
    8. '   ' → logprob: -11.745593070983887
    9. '1' → logprob: -12.120593070983887
    10. '"' → logprob: -12.245593070983887

Token 659: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2823590934276581
    2. ' +' → logprob: -1.4073591232299805
    3. ',' → logprob: -7.5323591232299805
    4. '-' → logprob: -8.28235912322998
    5. ' ' → logprob: -8.90735912322998
    6. ' -' → logprob: -9.03235912322998
    7. ' ,' → logprob: -9.65735912322998
    8. '+,' → logprob: -10.28235912322998
    9. '1' → logprob: -11.03235912322998
    10. '   ' → logprob: -11.40735912322998

Token 660: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006049798685126007
    2. ' ' → logprob: -7.50060510635376
    3. '2' → logprob: -9.875604629516602
    4. '   ' → logprob: -15.250604629516602
    5. '3' → logprob: -15.875604629516602
    6. '  ' → logprob: -16.5006046295166
    7. '```' → logprob: -17.6881046295166
    8. ')' → logprob: -17.9381046295166
    9. '4' → logprob: -18.4381046295166
    10. ' ' → logprob: -18.5006046295166

Token 661: ' +' (ID: 659)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9789354801177979
    2. ')' → logprob: -1.4789354801177979
    3. '+' → logprob: -1.4789354801177979
    4. '2' → logprob: -2.103935480117798
    5. '1' → logprob: -4.228935241699219
    6. ' +' → logprob: -4.478935241699219
    7. '//' → logprob: -4.728935241699219
    8. ' ' → logprob: -4.853935241699219
    9. '4' → logprob: -7.103935241699219
    10. '```' → logprob: -7.228935241699219

Token 662: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3896539807319641
    2. '1' → logprob: -1.3896539211273193
    3. '3' → logprob: -2.6396539211273193
    4. ' ' → logprob: -6.264654159545898
    5. '4' → logprob: -8.389654159545898
    6. '   ' → logprob: -10.764654159545898
    7. '  ' → logprob: -12.639654159545898
    8. '5' → logprob: -13.014654159545898
    9. '0' → logprob: -13.952154159545898
    10. ')' → logprob: -14.327154159545898

Token 663: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6666093468666077
    2. '2' → logprob: -0.7916093468666077
    3. '1' → logprob: -3.416609287261963
    4. ' ' → logprob: -7.791609287261963
    5. '4' → logprob: -8.666609764099121
    6. ')' → logprob: -10.666609764099121
    7. '  ' → logprob: -13.791609764099121
    8. '+' → logprob: -13.791609764099121
    9. '(' → logprob: -14.354109764099121
    10. '   ' → logprob: -14.416609764099121

Token 664: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047750159865245223
    2. ')
' → logprob: -8.00047779083252
    3. ' )' → logprob: -9.87547779083252
    4. '               ' → logprob: -10.37547779083252
    5. '")' → logprob: -11.37547779083252
    6. '+' → logprob: -11.75047779083252
    7. '       ' → logprob: -11.87547779083252
    8. '           ' → logprob: -11.87547779083252
    9. ',' → logprob: -12.25047779083252
    10. ')`' → logprob: -12.50047779083252

Token 665: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06508029252290726
    2. '                   ' → logprob: -2.940080404281616
    3. ':' → logprob: -4.940080165863037
    4. '           ' → logprob: -7.315080165863037
    5. ')' → logprob: -7.815080165863037
    6. '(' → logprob: -8.440080642700195
    7. ' :' → logprob: -8.440080642700195
    8. ' (' → logprob: -8.565080642700195
    9. '                ' → logprob: -8.565080642700195
    10. '                       ' → logprob: -8.690080642700195

Token 666: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006984487641602755
    2. ' print' → logprob: -5.006984710693359
    3. '               ' → logprob: -8.25698471069336
    4. '(print' → logprob: -12.00698471069336
    5. '                   ' → logprob: -13.50698471069336
    6. '           ' → logprob: -14.13198471069336
    7. '(' → logprob: -14.75698471069336
    8. ' (' → logprob: -15.38198471069336
    9. '(i' → logprob: -15.38198471069336
    10. '.print' → logprob: -16.00698471069336

Token 667: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001170225441455841
    2. '(' → logprob: -6.7511701583862305
    3. '(n' → logprob: -17.876171112060547
    4. '"' → logprob: -18.251171112060547
    5. '("' → logprob: -18.251171112060547
    6. ' (' → logprob: -18.751171112060547
    7. '(
' → logprob: -18.876171112060547
    8. 'i' → logprob: -19.001171112060547
    9. '(f' → logprob: -20.001171112060547
    10. '((' → logprob: -20.251171112060547

Token 668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005485133267939091
    2. ' ,' → logprob: -5.8804850578308105
    3. '+' → logprob: -6.1304850578308105
    4. ',i' → logprob: -8.380485534667969
    5. ' +' → logprob: -8.630485534667969
    6. ',n' → logprob: -10.005485534667969
    7. '+i' → logprob: -10.880485534667969
    8. ',
' → logprob: -12.005485534667969
    9. ' ' → logprob: -12.130485534667969
    10. ')' → logprob: -12.255485534667969

Token 669: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.35684627294540405
    2. 'i' → logprob: -1.2318463325500488
    3. '"' → logprob: -5.481846332550049
    4. ' n' → logprob: -5.981846332550049
    5. ' ' → logprob: -7.106846332550049
    6. 'n' → logprob: -7.856846332550049
    7. ''' → logprob: -8.10684585571289
    8. ')' → logprob: -10.48184585571289
    9. '(i' → logprob: -10.48184585571289
    10. ' "' → logprob: -10.60684585571289

Token 670: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2813480496406555
    2. '+' → logprob: -1.4063479900360107
    3. ' ' → logprob: -9.28134822845459
    4. '   ' → logprob: -9.65634822845459
    5. ')' → logprob: -11.40634822845459
    6. '    ' → logprob: -11.90634822845459
    7. '+n' → logprob: -12.28134822845459
    8. ',' → logprob: -12.40634822845459
    9. '  ' → logprob: -12.65634822845459
    10. ' ,' → logprob: -12.90634822845459

Token 671: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012438016710802913
    2. '2' → logprob: -7.251243591308594
    3. ' ' → logprob: -7.751243591308594
    4. 'n' → logprob: -9.251243591308594
    5. '"' → logprob: -12.251243591308594
    6. ' n' → logprob: -13.751243591308594
    7. '3' → logprob: -14.626243591308594
    8. '`' → logprob: -15.376243591308594
    9. '(n' → logprob: -15.501243591308594
    10. '4' → logprob: -16.126243591308594

Token 672: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03038867376744747
    2. ' +' → logprob: -3.530388593673706
    3. '1' → logprob: -7.405388832092285
    4. ' ' → logprob: -10.530388832092285
    5. '   ' → logprob: -13.905388832092285
    6. '2' → logprob: -14.780388832092285
    7. '+
' → logprob: -14.905388832092285
    8. '<|end|>' → logprob: -15.030388832092285
    9. '```' → logprob: -15.405388832092285
    10. ')' → logprob: -15.405388832092285

Token 673: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019376773852854967
    2. '3' → logprob: -6.7519378662109375
    3. '2' → logprob: -7.7519378662109375
    4. ' ' → logprob: -8.001937866210938
    5. '+' → logprob: -13.501937866210938
    6. '  ' → logprob: -14.876937866210938
    7. '   ' → logprob: -15.001937866210938
    8. ')' → logprob: -15.126937866210938
    9. '<|end|>' → logprob: -17.064437866210938
    10. '4' → logprob: -17.751937866210938

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020902375399600714
    2. '3' → logprob: -8.750208854675293
    3. '2' → logprob: -10.250208854675293
    4. ' ' → logprob: -11.125208854675293
    5. '+' → logprob: -15.375208854675293
    6. '   ' → logprob: -16.37520980834961
    7. '```' → logprob: -17.50020980834961
    8. '  ' → logprob: -17.87520980834961
    9. '4' → logprob: -19.00020980834961
    10. ')' → logprob: -19.00020980834961

Token 675: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.2987729102605954e-05
    2. ')
' → logprob: -10.250042915344238
    3. ' )' → logprob: -12.500042915344238
    4. '")' → logprob: -13.000042915344238
    5. '+' → logprob: -14.250042915344238
    6. '')' → logprob: -15.875042915344238
    7. '))' → logprob: -16.250043869018555
    8. ')}' → logprob: -16.375043869018555
    9. ')

' → logprob: -16.500043869018555
    10. '()' → logprob: -16.625043869018555

Token 676: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 677: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7123064398765564
    2. '<|end|>' → logprob: -0.8373064398765564
    3. ' else' → logprob: -2.837306499481201
    4. '```' → logprob: -5.087306499481201
    5. '       ' → logprob: -5.337306499481201
    6. 'elif' → logprob: -5.712306499481201
    7. ')' → logprob: -7.337306499481201
    8. ' ' → logprob: -7.462306499481201
    9. '<|end|>' → logprob: -7.837306499481201
    10. '   ' → logprob: -7.837306499481201

Token 678: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3426990211009979
    2. ':
' → logprob: -1.5926990509033203
    3. '               ' → logprob: -3.3426990509033203
    4. '           ' → logprob: -4.21769905090332
    5. '       ' → logprob: -4.34269905090332
    6. '```' → logprob: -4.46769905090332
    7. '{' → logprob: -5.46769905090332
    8. ' :
' → logprob: -5.96769905090332
    9. ' :' → logprob: -6.09269905090332
    10. '   ' → logprob: -7.09269905090332

Token 679: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000983743229880929
    2. '           ' → logprob: -7.500983715057373
    3. 'print' → logprob: -8.375984191894531
    4. '```' → logprob: -9.125984191894531
    5. ' print' → logprob: -10.625984191894531
    6. '                
' → logprob: -10.875984191894531
    7. '                   ' → logprob: -11.750984191894531
    8. '	           ' → logprob: -11.875984191894531
    9. '       ' → logprob: -12.375984191894531
    10. '			' → logprob: -12.625984191894531

Token 680: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3134094774723053
    2. ' print' → logprob: -1.313409447669983
    3. '               ' → logprob: -9.188409805297852
    4. '           ' → logprob: -10.563409805297852
    5. '```' → logprob: -11.688409805297852
    6. '(print' → logprob: -12.688409805297852
    7. '            ' → logprob: -13.438409805297852
    8. '	print' → logprob: -13.438409805297852
    9. '.print' → logprob: -13.688409805297852
    10. '                ' → logprob: -14.188409805297852

Token 681: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022944467142224312
    2. ' print' → logprob: -4.022944450378418
    3. '               ' → logprob: -5.397944450378418
    4. '           ' → logprob: -8.522944450378418
    5. '   ' → logprob: -10.897944450378418
    6. '       ' → logprob: -11.022944450378418
    7. '```' → logprob: -11.522944450378418
    8. '	print' → logprob: -11.897944450378418
    9. '                   ' → logprob: -13.272944450378418
    10. '            ' → logprob: -13.272944450378418

Token 682: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.057841721922159195
    2. 'i' → logprob: -2.9328417778015137
    3. ' print' → logprob: -6.307841777801514
    4. '   ' → logprob: -8.057841300964355
    5. '    ' → logprob: -8.432841300964355
    6. 'print' → logprob: -8.682841300964355
    7. ' not' → logprob: -8.932841300964355
    8. ' ' → logprob: -9.432841300964355
    9. ' (' → logprob: -9.932841300964355
    10. ' ' → logprob: -10.307841300964355

Token 683: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054850462824106216
    2. '               ' → logprob: -4.5548505783081055
    3. 'print' → logprob: -4.6798505783081055
    4. '==' → logprob: -4.9298505783081055
    5. ' print' → logprob: -4.9298505783081055
    6. ':
' → logprob: -5.5548505783081055
    7. 'else' → logprob: -5.6798505783081055
    8. '   ' → logprob: -5.8048505783081055
    9. '%' → logprob: -6.1798505783081055
    10. ' ==' → logprob: -6.4298505783081055

Token 684: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.7532700300216675
    2. ' impair' → logprob: -0.7532700300216675
    3. 'odd' → logprob: -3.128270149230957
    4. 'im' → logprob: -4.753270149230957
    5. ' imp' → logprob: -6.128270149230957
    6. 'pair' → logprob: -6.378270149230957
    7. ' odd' → logprob: -6.503270149230957
    8. ' impar' → logprob: -8.878270149230957
    9. '```' → logprob: -9.378270149230957
    10. 'n' → logprob: -9.878270149230957

Token 685: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007518365513533354
    2. ':' → logprob: -5.757518291473389
    3. '           ' → logprob: -6.007518291473389
    4. 'print' → logprob: -7.507518291473389
    5. ':
' → logprob: -7.757518291473389
    6. '```' → logprob: -8.132518768310547
    7. '                   ' → logprob: -8.382518768310547
    8. '   ' → logprob: -8.507518768310547
    9. ' print' → logprob: -9.257518768310547
    10. '       ' → logprob: -10.632518768310547

Token 686: ' imprime' (ID: 195564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10146006941795349
    2. ' print' → logprob: -2.7264599800109863
    3. '               ' → logprob: -3.4764599800109863
    4. '           ' → logprob: -9.351460456848145
    5. '                   ' → logprob: -11.726460456848145
    6. '```' → logprob: -11.726460456848145
    7. '   ' → logprob: -12.601460456848145
    8. '	print' → logprob: -12.601460456848145
    9. '       ' → logprob: -13.476460456848145
    10. '              ' → logprob: -13.976460456848145

Token 687: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004680391866713762
    2. '(n' → logprob: -6.004680156707764
    3. '(' → logprob: -6.254680156707764
    4. '(f' → logprob: -9.629680633544922
    5. '"' → logprob: -9.754680633544922
    6. ' (' → logprob: -9.879680633544922
    7. '("' → logprob: -10.004680633544922
    8. 'i' → logprob: -10.629680633544922
    9. '('' → logprob: -11.254680633544922
    10. ' i' → logprob: -11.379680633544922

Token 688: ' paire' (ID: 148856)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01872164011001587
    2. 'i' → logprob: -4.643721580505371
    3. '(' → logprob: -5.393721580505371
    4. '(n' → logprob: -5.518721580505371
    5. 'print' → logprob: -9.143721580505371
    6. ' (' → logprob: -9.643721580505371
    7. 'n' → logprob: -9.893721580505371
    8. ' i' → logprob: -9.893721580505371
    9. '"' → logprob: -11.143721580505371
    10. ' ' → logprob: -11.393721580505371

Token 689: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.012568989768624306
    2. '(' → logprob: -4.512568950653076
    3. '(n' → logprob: -6.512568950653076
    4. ' (' → logprob: -10.387569427490234
    5. '```' → logprob: -13.762569427490234
    6. '(print' → logprob: -13.887569427490234
    7. '((' → logprob: -14.512569427490234
    8. 'i' → logprob: -15.012569427490234
    9. '(j' → logprob: -15.137569427490234
    10. 'print' → logprob: -15.262569427490234

Token 690: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.304016228066757e-05
    2. '(i' → logprob: -10.125082969665527
    3. ' i' → logprob: -10.500082969665527
    4. 'n' → logprob: -11.750082969665527
    5. '(' → logprob: -12.375082969665527
    6. '   ' → logprob: -13.375082969665527
    7. '1' → logprob: -14.625082969665527
    8. '(n' → logprob: -14.625082969665527
    9. '```' → logprob: -16.000083923339844
    10. ' (' → logprob: -16.250083923339844

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007877098978497088
    2. '+' → logprob: -7.375787734985352
    3. ' +' → logprob: -9.375787734985352
    4. ' ,' → logprob: -10.000787734985352
    5. ',i' → logprob: -11.000787734985352
    6. ',
' → logprob: -12.750787734985352
    7. ',n' → logprob: -13.000787734985352
    8. ')' → logprob: -13.375787734985352
    9. '-' → logprob: -13.750787734985352
    10. '`,' → logprob: -13.750787734985352

Token 692: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3902553915977478
    2. ' i' → logprob: -1.1402554512023926
    3. ' n' → logprob: -6.265255451202393
    4. 'n' → logprob: -6.765255451202393
    5. ' ' → logprob: -8.515254974365234
    6. ' (' → logprob: -10.640254974365234
    7. '(i' → logprob: -10.765254974365234
    8. ' ' → logprob: -11.640254974365234
    9. '"' → logprob: -11.890254974365234
    10. '1' → logprob: -11.890254974365234

Token 693: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35440659523010254
    2. ' +' → logprob: -1.2294065952301025
    3. ',' → logprob: -5.229406356811523
    4. '+n' → logprob: -7.979406356811523
    5. ' ,' → logprob: -8.854406356811523
    6. '+,' → logprob: -10.354406356811523
    7. ' ' → logprob: -10.479406356811523
    8. '1' → logprob: -11.479406356811523
    9. ' n' → logprob: -11.854406356811523
    10. 'n' → logprob: -12.479406356811523

Token 694: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2761557102203369
    2. ' n' → logprob: -1.526155710220337
    3. '1' → logprob: -4.401155471801758
    4. '2' → logprob: -4.651155471801758
    5. ' ' → logprob: -6.401155471801758
    6. '3' → logprob: -9.151155471801758
    7. '(n' → logprob: -9.401155471801758
    8. '"' → logprob: -9.526155471801758
    9. '4' → logprob: -9.901155471801758
    10. ' (' → logprob: -10.401155471801758

Token 695: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026544693857431412
    2. ' +' → logprob: -3.6515448093414307
    3. ')' → logprob: -8.901544570922852
    4. '<|end|>' → logprob: -9.151544570922852
    5. '+)' → logprob: -14.651544570922852
    6. '<|end|>' → logprob: -15.026544570922852
    7. ')+' → logprob: -15.276544570922852
    8. '-' → logprob: -15.776544570922852
    9. '```' → logprob: -15.901544570922852
    10. ' )' → logprob: -16.02654457092285

Token 696: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02214118279516697
    2. '2' → logprob: -3.897141218185425
    3. '3' → logprob: -6.772140979766846
    4. ' ' → logprob: -7.772140979766846
    5. '4' → logprob: -10.647141456604004
    6. '   ' → logprob: -13.522141456604004
    7. '+' → logprob: -13.647141456604004
    8. 'n' → logprob: -13.772141456604004
    9. '-' → logprob: -14.022141456604004
    10. '(' → logprob: -14.272141456604004

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011181746609508991
    2. '3' → logprob: -5.136181831359863
    3. '2' → logprob: -5.261181831359863
    4. '4' → logprob: -10.136181831359863
    5. ' ' → logprob: -11.636181831359863
    6. '5' → logprob: -14.136181831359863
    7. '+' → logprob: -15.261181831359863
    8. '7' → logprob: -15.386181831359863
    9. '-' → logprob: -15.886181831359863
    10. '```' → logprob: -16.386180877685547

Token 698: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008315980434417725
    2. ')
' → logprob: -5.5083160400390625
    3. ' )' → logprob: -6.0083160400390625
    4. '               ' → logprob: -7.0083160400390625
    5. ' +' → logprob: -7.7583160400390625
    6. '+' → logprob: -8.508316040039062
    7. ' )
' → logprob: -9.383316040039062
    8. '           ' → logprob: -9.633316040039062
    9. '   ' → logprob: -10.508316040039062
    10. ')
' → logprob: -11.258316040039062

Token 699: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03630238398909569
    2. '```' → logprob: -3.661302328109741
    3. '           ' → logprob: -5.53630256652832
    4. 'print' → logprob: -6.03630256652832
    5. '(print' → logprob: -6.41130256652832
    6. '``' → logprob: -6.91130256652832
    7. ' print' → logprob: -8.28630256652832
    8. '                   ' → logprob: -8.28630256652832
    9. '                
' → logprob: -8.78630256652832
    10. '(' → logprob: -9.66130256652832

Token 700: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00033665422233752906
    2. ' print' → logprob: -8.000336647033691
    3. '(print' → logprob: -13.875336647033691
    4. '               ' → logprob: -15.500336647033691
    5. '```' → logprob: -17.000337600708008
    6. '.print' → logprob: -17.750337600708008
    7. 'i' → logprob: -18.500337600708008
    8. '           ' → logprob: -18.625337600708008
    9. '(i' → logprob: -18.750337600708008
    10. '	print' → logprob: -19.000337600708008

Token 701: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003631137660704553
    2. 'i' → logprob: -8.50036334991455
    3. '(' → logprob: -8.75036334991455
    4. ' i' → logprob: -13.75036334991455
    5. ' (' → logprob: -15.75036334991455
    6. '(
' → logprob: -18.000362396240234
    7. '	i' → logprob: -19.000362396240234
    8. '(n' → logprob: -20.250362396240234
    9. '{i' → logprob: -20.625362396240234
    10. '   ' → logprob: -21.250362396240234

Token 702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005047772428952157
    2. ' ,' → logprob: -7.625504970550537
    3. ')' → logprob: -12.250504493713379
    4. '+' → logprob: -12.375504493713379
    5. ' +' → logprob: -12.875504493713379
    6. ',i' → logprob: -13.375504493713379
    7. ',n' → logprob: -13.625504493713379
    8. '```' → logprob: -14.000504493713379
    9. ',
' → logprob: -14.125504493713379
    10. '   ' → logprob: -15.375504493713379

Token 703: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38697314262390137
    2. ' i' → logprob: -1.1369731426239014
    3. ' n' → logprob: -9.63697338104248
    4. 'n' → logprob: -11.01197338104248
    5. ' ' → logprob: -11.13697338104248
    6. ' ' → logprob: -12.51197338104248
    7. '`' → logprob: -14.51197338104248
    8. '   ' → logprob: -14.88697338104248
    9. '(i' → logprob: -15.26197338104248
    10. '	i' → logprob: -15.51197338104248

Token 704: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4745155870914459
    2. ' +' → logprob: -0.9745155572891235
    3. '-' → logprob: -8.474515914916992
    4. '+n' → logprob: -9.349515914916992
    5. ' ' → logprob: -10.099515914916992
    6. ',' → logprob: -10.224515914916992
    7. ' -' → logprob: -10.974515914916992
    8. ' ,' → logprob: -10.974515914916992
    9. ')' → logprob: -11.099515914916992
    10. ''' → logprob: -13.349515914916992

Token 705: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -11.500012397766113
    3. '3' → logprob: -13.000012397766113
    4. '2' → logprob: -15.250012397766113
    5. '7' → logprob: -17.00001335144043
    6. '   ' → logprob: -18.37501335144043
    7. '  ' → logprob: -19.25001335144043
    8. '4' → logprob: -19.25001335144043
    9. '9' → logprob: -19.25001335144043
    10. '5' → logprob: -19.50001335144043

Token 706: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.261530339717865
    2. ' -' → logprob: -1.5115303993225098
    3. '+' → logprob: -4.76153039932251
    4. ' +' → logprob: -7.13653039932251
    5. ' ' → logprob: -9.136529922485352
    6. ')' → logprob: -9.511529922485352
    7. '```' → logprob: -12.011529922485352
    8. '   ' → logprob: -12.636529922485352
    9. '  ' → logprob: -13.386529922485352
    10. '`' → logprob: -13.699029922485352

Token 707: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008329743286594748
    2. ' ' → logprob: -7.125833034515381
    3. '3' → logprob: -10.625832557678223
    4. '   ' → logprob: -13.000832557678223
    5. '2' → logprob: -13.500832557678223
    6. '  ' → logprob: -15.750832557678223
    7. '    ' → logprob: -16.37583351135254
    8. '+' → logprob: -17.37583351135254
    9. '           ' → logprob: -17.50083351135254
    10. '<|end|>' → logprob: -17.62583351135254

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6696149840718135e-05
    2. '3' → logprob: -10.375056266784668
    3. '2' → logprob: -11.250056266784668
    4. ' ' → logprob: -11.375056266784668
    5. '   ' → logprob: -15.000056266784668
    6. '0' → logprob: -15.750056266784668
    7. '4' → logprob: -15.875056266784668
    8. '<|end|>' → logprob: -15.875056266784668
    9. '```' → logprob: -16.250057220458984
    10. '5' → logprob: -17.125057220458984

Token 709: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016611411410849541
    2. ')
' → logprob: -8.750165939331055
    3. '```' → logprob: -13.250165939331055
    4. '       ' → logprob: -13.375165939331055
    5. '()' → logprob: -13.500165939331055
    6. '           ' → logprob: -14.500165939331055
    7. '<|end|>' → logprob: -14.750165939331055
    8. '())' → logprob: -14.875165939331055
    9. ' )' → logprob: -15.000165939331055
    10. '))' → logprob: -15.250165939331055

Token 710: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 711: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5363003015518188
    2. '<|end|>' → logprob: -1.2863003015518188
    3. '```' → logprob: -3.0363001823425293
    4. 'else' → logprob: -3.1613001823425293
    5. '       ' → logprob: -3.5363001823425293
    6. '#' (adapté à ' #') → logprob: -4.411300182342529
    7. 'elif' → logprob: -5.286300182342529
    8. '   ' → logprob: -8.161300659179688
    9. '<|end|>' → logprob: -8.411300659179688
    10. '...' → logprob: -8.411300659179688

Token 712: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00735305855050683
    2. '<|end|>' → logprob: -5.757352828979492
    3. '#' → logprob: -6.507352828979492
    4. 'else' → logprob: -6.632352828979492
    5. '```' → logprob: -7.507352828979492
    6. '       ' → logprob: -8.257352828979492
    7. ' print' → logprob: -8.257352828979492
    8. 'elif' → logprob: -9.257352828979492
    9. '...' → logprob: -10.382352828979492
    10. '<|end|>' → logprob: -10.382352828979492

Token 713: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008810923318378627
    2. '   ' → logprob: -8.75088119506836
    3. '(n' → logprob: -8.87588119506836
    4. ' print' → logprob: -9.25088119506836
    5. 'n' → logprob: -9.37588119506836
    6. '```' → logprob: -9.75088119506836
    7. '#' → logprob: -10.00088119506836
    8. 'the' → logprob: -10.00088119506836
    9. 'range' → logprob: -10.12588119506836
    10. '<|end|>' → logprob: -10.12588119506836

Token 714: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16676534712314606
    2. 'bou' → logprob: -1.9167653322219849
    3. 'print' → logprob: -5.416765213012695
    4. 'loop' → logprob: -6.666765213012695
    5. ' boucle' → logprob: -7.916765213012695
    6. '#' → logprob: -9.291765213012695
    7. 'range' → logprob: -9.291765213012695
    8. 'last' → logprob: -9.666765213012695
    9. ' for' → logprob: -9.666765213012695
    10. '```' → logprob: -10.666765213012695

Token 715: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0626809298992157
    2. '       ' → logprob: -2.812680959701538
    3. ' print' → logprob: -7.312680721282959
    4. '   ' → logprob: -10.562681198120117
    5. 'for' → logprob: -11.562681198120117
    6. '```' → logprob: -12.312681198120117
    7. '	print' → logprob: -13.937681198120117
    8. '           ' → logprob: -14.062681198120117
    9. '<|end|>' → logprob: -14.062681198120117
    10. '#' → logprob: -14.187681198120117

Token 716: ' nous' (ID: 6176)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03067413903772831
    2. '       ' → logprob: -3.5306742191314697
    3. ' print' → logprob: -7.030673980712891
    4. '   ' → logprob: -10.65567398071289
    5. '#' → logprob: -11.90567398071289
    6. '```' → logprob: -12.28067398071289
    7. '           ' → logprob: -13.65567398071289
    8. '	print' → logprob: -13.90567398071289
    9. ' ' → logprob: -14.03067398071289
    10. 'for' → logprob: -14.28067398071289

Token 717: ' défin' (ID: 57890)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11805298179388046
    2. '       ' → logprob: -2.2430529594421387
    3. ' print' → logprob: -5.368052959442139
    4. '   ' → logprob: -7.743052959442139
    5. '#' → logprob: -9.493053436279297
    6. '           ' → logprob: -11.368053436279297
    7. '#print' → logprob: -11.743053436279297
    8. '	print' → logprob: -11.993053436279297
    9. ' ' → logprob: -12.868053436279297
    10. 'for' → logprob: -13.118053436279297

Token 718: 'issons' (ID: 56456)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0412300825119019
    2. 'issons' → logprob: -1.2912300825119019
    3. 'n' → logprob: -1.7912300825119019
    4. 'print' → logprob: -2.2912302017211914
    5. 'ons' → logprob: -2.9162302017211914
    6. '           ' → logprob: -4.166230201721191
    7. 'issions' → logprob: -5.041230201721191
    8. 'sons' → logprob: -5.416230201721191
    9. '   ' → logprob: -5.541230201721191
    10. '#' → logprob: -5.916230201721191

Token 719: ' deux' (ID: 10301)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34108224511146545
    2. 'n' → logprob: -2.2160823345184326
    3. 'a' → logprob: -2.7160823345184326
    4. 'm' → logprob: -3.9660823345184326
    5. 'nn' → logprob: -3.9660823345184326
    6. 'un' → logprob: -4.5910820960998535
    7. 'x' → logprob: -4.5910820960998535
    8. 'l' → logprob: -4.7160820960998535
    9. 'j' → logprob: -4.8410820960998535
    10. 'k' → logprob: -5.4660820960998535

Token 720: ' variables' (ID: 13955)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009414391592144966
    2. 'for' → logprob: -5.759414196014404
    3. 'n' → logprob: -6.634414196014404
    4. 'l' → logprob: -7.134414196014404
    5. 'variables' → logprob: -7.259414196014404
    6. 'prints' → logprob: -7.509414196014404
    7. 'pairs' → logprob: -7.634414196014404
    8. ' print' → logprob: -7.759414196014404
    9. 'ar' → logprob: -8.009414672851562
    10. '```' → logprob: -8.259414672851562

Token 721: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7064939141273499
    2. '=' → logprob: -0.9564939141273499
    3. 'x' → logprob: -2.706493854522705
    4. 'n' → logprob: -4.956493854522705
    5. ' =' → logprob: -4.956493854522705
    6. '       ' → logprob: -5.206493854522705
    7. 'k' → logprob: -5.581493854522705
    8. 'u' → logprob: -5.706493854522705
    9. 'j' → logprob: -5.831493854522705
    10. 'p' → logprob: -5.831493854522705

Token 722: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0020909309387207
    2. 'x' → logprob: -1.1270909309387207
    3. 'n' → logprob: -2.1270909309387207
    4. 'nn' → logprob: -3.3770909309387207
    5. 'k' → logprob: -3.8770909309387207
    6. 'm' → logprob: -4.252090930938721
    7. 'l' → logprob: -4.377090930938721
    8. 'j' → logprob: -4.377090930938721
    9. 'p' → logprob: -4.502090930938721
    10. 'ans' → logprob: -5.002090930938721

Token 723: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015392106026411057
    2. 'plus' → logprob: -5.265392303466797
    3. '_plus' → logprob: -5.265392303466797
    4. 'n' → logprob: -6.765392303466797
    5. ' +' → logprob: -7.015392303466797
    6. '1' → logprob: -7.015392303466797
    7. '2' → logprob: -7.265392303466797
    8. '-' → logprob: -7.640392303466797
    9. '_' → logprob: -7.765392303466797
    10. 'a' → logprob: -9.515392303466797

Token 724: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5866323709487915
    2. ' =' → logprob: -0.8366323709487915
    3. ',' → logprob: -4.586632251739502
    4. '=n' → logprob: -8.08663272857666
    5. ' and' → logprob: -9.46163272857666
    6. ',n' → logprob: -11.08663272857666
    7. 'n' → logprob: -11.33663272857666
    8. '       ' → logprob: -11.58663272857666
    9. '   ' → logprob: -11.96163272857666
    10. '1' → logprob: -12.46163272857666

Token 725: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026317719370126724
    2. ' n' → logprob: -3.651317834854126
    3. 'nn' → logprob: -11.901317596435547
    4. '   ' → logprob: -13.151317596435547
    5. '3' → logprob: -13.401317596435547
    6. '(n' → logprob: -13.776317596435547
    7. '	n' → logprob: -13.776317596435547
    8. ' ' → logprob: -14.151317596435547
    9. '2' → logprob: -14.151317596435547
    10. '4' → logprob: -14.276317596435547

Token 726: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09162172675132751
    2. '2' → logprob: -3.3416216373443604
    3. '+' → logprob: -3.9666216373443604
    4. 'n' → logprob: -3.9666216373443604
    5. '-' → logprob: -4.5916218757629395
    6. '=' → logprob: -5.9666218757629395
    7. '```' → logprob: -6.9666218757629395
    8. '+=' → logprob: -8.966621398925781
    9. '_' → logprob: -8.966621398925781
    10. ' =' → logprob: -9.091621398925781

Token 727: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40531784296035767
    2. '=' → logprob: -1.155317783355713
    3. 'n' → logprob: -5.155317783355713
    4. '=n' → logprob: -5.155317783355713
    5. '(n' → logprob: -6.280317783355713
    6. ',' → logprob: -6.780317783355713
    7. '   ' → logprob: -6.780317783355713
    8. '=
' → logprob: -7.155317783355713
    9. '       ' → logprob: -7.405317783355713
    10. '```' → logprob: -7.655317783355713

Token 728: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5578548908233643
    2. ' =' → logprob: -1.9328548908233643
    3. 'n' → logprob: -2.3078548908233643
    4. '	n' → logprob: -2.6828548908233643
    5. '=n' → logprob: -3.0578548908233643
    6. '[n' → logprob: -3.9328548908233643
    7. '(n' → logprob: -4.182854652404785
    8. '   ' → logprob: -4.682854652404785
    9. '	' → logprob: -5.432854652404785
    10. '       ' → logprob: -5.932854652404785

Token 729: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7333329319953918
    2. '       ' → logprob: -0.8583329319953918
    3. '	' → logprob: -3.483332872390747
    4. '		
' → logprob: -4.108333110809326
    5. '	n' → logprob: -4.233333110809326
    6. '\n' → logprob: -4.983333110809326
    7. '   ' → logprob: -5.233333110809326
    8. '        
' → logprob: -5.233333110809326
    9. '(n' → logprob: -5.608333110809326
    10. '[n' → logprob: -5.858333110809326

Token 730: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4757303297519684
    2. 'n' → logprob: -0.975730299949646
    3. ' n' → logprob: -7.2257304191589355
    4. '	' → logprob: -7.3507304191589355
    5. '	n' → logprob: -8.725729942321777
    6. '   ' → logprob: -9.600729942321777
    7. '           ' → logprob: -11.100729942321777
    8. '```' → logprob: -11.475729942321777
    9. '\n' → logprob: -12.600729942321777
    10. '               ' → logprob: -12.850729942321777

Token 731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. '_' → logprob: -10.75002384185791
    3. '+' → logprob: -13.50002384185791
    4. '=' → logprob: -15.12502384185791
    5. ' =' → logprob: -15.50002384185791
    6. ',' → logprob: -16.000022888183594
    7. '2' → logprob: -16.875022888183594
    8. '```' → logprob: -16.875022888183594
    9. ' ' → logprob: -17.250022888183594
    10. 'n' → logprob: -17.375022888183594

Token 732: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935070157051086
    2. ' =' → logprob: -0.6935070157051086
    3. ',' → logprob: -7.943507194519043
    4. '=n' → logprob: -12.568507194519043
    5. 'n' → logprob: -15.193507194519043
    6. ',n' → logprob: -15.443507194519043
    7. '=int' → logprob: -15.693507194519043
    8. '=
' → logprob: -15.693507194519043
    9. ' =
' → logprob: -15.943507194519043
    10. ' ' → logprob: -16.193506240844727

Token 733: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2123561054468155
    2. ' n' → logprob: -1.7123560905456543
    3. '=' → logprob: -4.962356090545654
    4. ' =' → logprob: -6.462356090545654
    5. '4' → logprob: -6.837356090545654
    6. '=n' → logprob: -7.837356090545654
    7. '2' → logprob: -8.212356567382812
    8. '3' → logprob: -9.087356567382812
    9. '1' → logprob: -9.337356567382812
    10. ' ' → logprob: -9.587356567382812

Token 734: ' plus' (ID: 2932)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0043960558250546455
    2. ' n' → logprob: -6.129395961761475
    3. '(n' → logprob: -6.254395961761475
    4. '4' → logprob: -9.254396438598633
    5. 'nn' → logprob: -9.754396438598633
    6. '2' → logprob: -10.254396438598633
    7. '=' → logprob: -10.879396438598633
    8. ' (' → logprob: -11.129396438598633
    9. 'print' → logprob: -11.254396438598633
    10. '3' → logprob: -12.254396438598633

Token 735: ' grande' (ID: 10094)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6461268067359924
    2. 'n' → logprob: -1.2711267471313477
    3. '+' → logprob: -2.2711267471313477
    4. ' n' → logprob: -3.5211267471313477
    5. ' +' → logprob: -3.7711267471313477
    6. ' ' → logprob: -4.021126747131348
    7. 'plus' → logprob: -5.396126747131348
    8. '2' → logprob: -5.771126747131348
    9. ' plus' → logprob: -6.146126747131348
    10. 'grand' → logprob: -6.771126747131348

Token 736: ' puissance' (ID: 63494)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5865940451622009
    2. ' =' → logprob: -1.3365941047668457
    3. 'n' → logprob: -2.2115941047668457
    4. '+' → logprob: -3.0865941047668457
    5. '1' → logprob: -4.711594104766846
    6. '=n' → logprob: -4.961594104766846
    7. ' n' → logprob: -5.211594104766846
    8. ' +' → logprob: -6.711594104766846
    9. ',' → logprob: -6.836594104766846
    10. '_' → logprob: -6.961594104766846

Token 737: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6810237169265747
    2. '_' → logprob: -1.1810237169265747
    3. 'de' → logprob: -2.556023597717285
    4. '_de' → logprob: -3.056023597717285
    5. '   ' → logprob: -3.931023597717285
    6. 'of' → logprob: -4.056023597717285
    7. '_of' → logprob: -5.056023597717285
    8. ' of' → logprob: -5.056023597717285
    9. ' ' → logprob: -5.806023597717285
    10. '2' → logprob: -6.181023597717285

Token 738: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002888682356569916
    2. ' ' → logprob: -8.500288963317871
    3. ' two' → logprob: -10.250288963317871
    4. 'two' → logprob: -10.250288963317871
    5. '1' → logprob: -11.625288963317871
    6. '```' → logprob: -13.000288963317871
    7. 'n' → logprob: -13.625288963317871
    8. '_two' → logprob: -14.250288963317871
    9. ' deux' → logprob: -14.875288963317871
    10. '`' → logprob: -15.500288963317871

Token 739: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7968066206085496e-05
    2. 'two' → logprob: -11.250027656555176
    3. ' ' → logprob: -11.750027656555176
    4. '1' → logprob: -13.125027656555176
    5. '```' → logprob: -13.125027656555176
    6. ' two' → logprob: -13.875027656555176
    7. 'n' → logprob: -14.500027656555176
    8. '`' → logprob: -15.125027656555176
    9. 'Two' → logprob: -15.250027656555176
    10. 'de' → logprob: -15.750027656555176

Token 740: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26154935359954834
    2. '=' → logprob: -1.5115493535995483
    3. '   ' → logprob: -5.761549472808838
    4. ' (' → logprob: -6.886549472808838
    5. 'n' → logprob: -7.136549472808838
    6. ' ' → logprob: -7.511549472808838
    7. '2' → logprob: -7.761549472808838
    8. ',' → logprob: -7.761549472808838
    9. '(n' → logprob: -7.761549472808838
    10. '
' → logprob: -8.01154899597168

Token 741: ' est' (ID: 893)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5734146237373352
    2. '<=' → logprob: -0.9484146237373352
    3. '=' → logprob: -3.1984145641326904
    4. ' <=' → logprob: -5.9484148025512695
    5. ' <' → logprob: -6.1984148025512695
    6. '<n' → logprob: -6.3234148025512695
    7. '>=' → logprob: -7.9484148025512695
    8. '>' → logprob: -8.07341480255127
    9. ' =' → logprob: -8.44841480255127
    10. '<int' → logprob: -9.19841480255127

Token 742: ' inf' (ID: 5603)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6988294720649719
    2. 'n' → logprob: -2.198829412460327
    3. ' <=' → logprob: -2.198829412460327
    4. 'inf' → logprob: -2.573829412460327
    5. ' inf' → logprob: -2.823829412460327
    6. '2' → logprob: -2.823829412460327
    7. '1' → logprob: -3.698829412460327
    8. ' n' → logprob: -3.823829412460327
    9. '<' → logprob: -5.198829650878906
    10. '<n' → logprob: -5.198829650878906

Token 743: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.5018824338912964
    2. 'er' → logprob: -1.6268824338912964
    3. 'érieur' → logprob: -1.6268824338912964
    4. 'é' → logprob: -7.376882553100586
    5. 'érie' → logprob: -9.001882553100586
    6. 'ner' → logprob: -9.126882553100586
    7. 'érieurs' → logprob: -9.376882553100586
    8. 'ér' → logprob: -9.376882553100586
    9. '```' → logprob: -9.376882553100586
    10. 'érieures' → logprob: -9.501882553100586

Token 744: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9668703079223633
    2. 'à' → logprob: -0.9668703079223633
    3. 'ou' → logprob: -2.3418703079223633
    4. ' à' → logprob: -3.0918703079223633
    5. ' =' → logprob: -3.4668703079223633
    6. ' ou' → logprob: -3.9668703079223633
    7. '   ' → logprob: -4.841870307922363
    8. '       ' → logprob: -4.841870307922363
    9. 'n' → logprob: -4.966870307922363
    10. ' or' → logprob: -5.091870307922363

Token 745: ' ég' (ID: 33150)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13286857306957245
    2. 'à' → logprob: -3.882868528366089
    3. 'strict' → logprob: -3.882868528366089
    4. '=n' → logprob: -4.507868766784668
    5. ' ég' → logprob: -4.632868766784668
    6. '=' → logprob: -4.632868766784668
    7. 'égal' → logprob: -4.882868766784668
    8. '<|end|>' → logprob: -5.132868766784668
    9. '...' → logprob: -5.382868766784668
    10. '(n' → logprob: -5.382868766784668

Token 746: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.2519526183605194
    2. 'al' → logprob: -1.5019526481628418
    3. 'n' → logprob: -12.001952171325684
    4. 'alee' → logprob: -13.126952171325684
    5. '```' → logprob: -13.126952171325684
    6. 'aux' → logprob: -13.251952171325684
    7. 'ual' → logprob: -13.376952171325684
    8. 'a' → logprob: -13.626952171325684
    9. '1' → logprob: -13.626952171325684
    10. 'e' → logprob: -14.001952171325684

Token 747: ' à' (ID: 1221)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7979960441589355
    2. '=' → logprob: -0.9229960441589355
    3. ' =' → logprob: -2.7979960441589355
    4. ' à' → logprob: -3.6729960441589355
    5. 'à' → logprob: -4.1729960441589355
    6. 'n' → logprob: -4.4229960441589355
    7. '=n' → logprob: -4.6729960441589355
    8. ',' → logprob: -4.6729960441589355
    9. '   ' → logprob: -4.7979960441589355
    10. 'to' → logprob: -5.7979960441589355

Token 748: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038842421025037766
    2. ' n' → logprob: -3.2888424396514893
    3. '2' → logprob: -8.16384220123291
    4. '(n' → logprob: -8.41384220123291
    5. 'nn' → logprob: -8.66384220123291
    6. ' nn' → logprob: -10.16384220123291
    7. ' (' → logprob: -10.66384220123291
    8. ' ' → logprob: -10.91384220123291
    9. '   ' → logprob: -11.91384220123291
    10. '```' → logprob: -12.03884220123291

Token 749: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11520146578550339
    2. '=' → logprob: -2.240201473236084
    3. '
' → logprob: -7.240201473236084
    4. '1' → logprob: -7.740201473236084
    5. '       ' → logprob: -7.740201473236084
    6. 'n' → logprob: -8.115200996398926
    7. '   ' → logprob: -8.740200996398926
    8. '=n' → logprob: -9.240200996398926
    9. ' =
' → logprob: -9.490200996398926
    10. '=
' → logprob: -9.615200996398926

Token 750: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4788527190685272
    2. ' =' → logprob: -0.9788527488708496
    3. 'n' → logprob: -5.97885274887085
    4. '=
' → logprob: -6.72885274887085
    5. '=n' → logprob: -7.10385274887085
    6. ' =
' → logprob: -9.353852272033691
    7. ' n' → logprob: -10.103852272033691
    8. '   ' → logprob: -10.353852272033691
    9. '```' → logprob: -10.603852272033691
    10. '(n' → logprob: -12.353852272033691

Token 751: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.024618562310934067
    2. '   ' → logprob: -4.274618625640869
    3. '       ' → logprob: -5.024618625640869
    4. ' n' → logprob: -5.774618625640869
    5. ' =' → logprob: -8.149618148803711
    6. '=' → logprob: -8.524618148803711
    7. '	n' → logprob: -9.774618148803711
    8. '(n' → logprob: -10.399618148803711
    9. ' ' → logprob: -10.649618148803711
    10. '```' → logprob: -10.774618148803711

Token 752: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.707997428951785e-05
    2. '_' → logprob: -9.875077247619629
    3. '=' → logprob: -11.000077247619629
    4. ' =' → logprob: -12.500077247619629
    5. '//' → logprob: -13.250077247619629
    6. '```' → logprob: -13.625077247619629
    7. 'n' → logprob: -14.625077247619629
    8. '_=' → logprob: -15.500077247619629
    9. ' ' → logprob: -15.875077247619629
    10. ' //' → logprob: -15.875077247619629

Token 753: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740816056728363
    2. ' =' → logprob: -0.9740816354751587
    3. '=n' → logprob: -13.349081993103027
    4. ',' → logprob: -13.599081993103027
    5. '=int' → logprob: -14.224081993103027
    6. '＝' → logprob: -15.349081993103027
    7. '=

' → logprob: -15.349081993103027
    8. ' ' → logprob: -16.34908103942871
    9. 'n' → logprob: -16.34908103942871
    10. '=
' → logprob: -16.59908103942871

Token 754: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1269545704126358
    2. '1' → logprob: -2.1269545555114746
    3. ' ' → logprob: -10.751955032348633
    4. 'n' → logprob: -12.376955032348633
    5. '10' → logprob: -15.376955032348633
    6. '(' → logprob: -15.376955032348633
    7. 'pow' → logprob: -15.876955032348633
    8. 'int' → logprob: -16.501955032348633
    9. 'max' → logprob: -16.876955032348633
    10. '4' → logprob: -17.001955032348633

Token 755: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07889562100172043
    2. '1' → logprob: -2.5788955688476562
    3. 'n' → logprob: -12.203895568847656
    4. ' ' → logprob: -14.828895568847656
    5. 'max' → logprob: -16.078895568847656
    6. '(' → logprob: -16.203895568847656
    7. 'pow' → logprob: -16.703895568847656
    8. 'int' → logprob: -17.078895568847656
    9. 'nn' → logprob: -17.203895568847656
    10. '10' → logprob: -17.828895568847656

Token 756: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0009139667963609099
    2. ' **' → logprob: -7.000914096832275
    3. '(n' → logprob: -13.750913619995117
    4. '*' → logprob: -14.625913619995117
    5. '*(' → logprob: -15.500913619995117
    6. ' ' → logprob: -15.750913619995117
    7. '
' → logprob: -16.125913619995117
    8. '```' → logprob: -16.125913619995117
    9. 'n' → logprob: -16.375913619995117
    10. '`' → logprob: -16.625913619995117

Token 757: ' (' (ID: 350)
  Prédit: '(nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nn' → logprob: -0.0008784697856754065
    2. '(n' → logprob: -7.12587833404541
    3. ' (' → logprob: -10.00087833404541
    4. 'nn' → logprob: -11.12587833404541
    5. '(' → logprob: -12.25087833404541
    6. '((' → logprob: -12.37587833404541
    7. '(int' → logprob: -13.62587833404541
    8. '(nx' → logprob: -13.87587833404541
    9. '(nd' → logprob: -14.62587833404541
    10. '(ns' → logprob: -14.75087833404541

Token 758: 'nn' (ID: 16998)
  Prédit: '(nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nn' → logprob: -0.07043329626321793
    2. 'nn' → logprob: -2.6954333782196045
    3. '(n' → logprob: -7.820433139801025
    4. ' (' → logprob: -9.945433616638184
    5. 'n' → logprob: -10.820433616638184
    6. ' nn' → logprob: -10.945433616638184
    7. '(' → logprob: -12.945433616638184
    8. '((' → logprob: -12.945433616638184
    9. '{' → logprob: -13.570433616638184
    10. '   ' → logprob: -14.320433616638184

Token 759: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007615848444402218
    2. ' -' → logprob: -4.88261604309082
    3. ' ' → logprob: -12.38261604309082
    4. '1' → logprob: -12.63261604309082
    5. '   ' → logprob: -14.63261604309082
    6. ')' → logprob: -15.38261604309082
    7. ' ' → logprob: -15.63261604309082
    8. '2' → logprob: -15.63261604309082
    9. '#' → logprob: -16.00761604309082
    10. '0' → logprob: -16.25761604309082

Token 760: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000810936326161027
    2. '2' → logprob: -7.1258111000061035
    3. ' ' → logprob: -12.000810623168945
    4. '   ' → logprob: -15.250810623168945
    5. '
' → logprob: -18.375810623168945
    6. '  ' → logprob: -18.625810623168945
    7. '3' → logprob: -19.625810623168945
    8. '    ' → logprob: -19.688310623168945
    9. '１' → logprob: -19.875810623168945
    10. '```' → logprob: -19.938310623168945

Token 761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17975367605686188
    2. '2' → logprob: -1.8047536611557007
    3. ' ' → logprob: -12.054753303527832
    4. '   ' → logprob: -13.054753303527832
    5. '
' → logprob: -15.304753303527832
    6. '3' → logprob: -15.429753303527832
    7. '  ' → logprob: -16.05475425720215
    8. '```' → logprob: -16.24225425720215
    9. '﻿' → logprob: -17.24225425720215
    10. '

' → logprob: -17.55475425720215

Token 762: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014716495061293244
    2. ')
' → logprob: -6.626471519470215
    3. '<|end|>' → logprob: -9.376471519470215
    4. ')n' → logprob: -11.001471519470215
    5. ' )' → logprob: -11.126471519470215
    6. 'n' → logprob: -12.001471519470215
    7. '-' → logprob: -12.251471519470215
    8. '
' → logprob: -12.626471519470215
    9. '#' → logprob: -12.751471519470215
    10. '+' → logprob: -13.126471519470215

Token 763: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005989041528664529
    2. '   ' → logprob: -8.625598907470703
    3. '```' → logprob: -8.750598907470703
    4. ' n' → logprob: -9.125598907470703
    5. '	n' → logprob: -9.500598907470703
    6. '       ' → logprob: -10.500598907470703
    7. '``' → logprob: -11.500598907470703
    8. '\n' → logprob: -12.000598907470703
    9. '_n' → logprob: -12.250598907470703
    10. ' ' → logprob: -12.750598907470703

Token 764: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00039385363925248384
    2. '       ' → logprob: -8.375393867492676
    3. '   ' → logprob: -9.125393867492676
    4. '```' → logprob: -10.875393867492676
    5. ' n' → logprob: -11.000393867492676
    6. '	n' → logprob: -11.375393867492676
    7. '#' (adapté à ' #') → logprob: -13.250393867492676
    8. '`' → logprob: -14.250393867492676
    9. '+' → logprob: -14.250393867492676
    10. '_n' → logprob: -14.625393867492676

Token 765: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00017362393555231392
    2. 'print' → logprob: -8.750173568725586
    3. ' n' → logprob: -11.875173568725586
    4. '   ' → logprob: -12.875173568725586
    5. '       ' → logprob: -13.750173568725586
    6. '#' → logprob: -13.750173568725586
    7. 'nn' → logprob: -14.125173568725586
    8. '
' → logprob: -14.750173568725586
    9. 'm' → logprob: -15.500173568725586
    10. 'for' → logprob: -15.625173568725586

Token 766: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -13.875004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '-' → logprob: -14.000004768371582
    5. '
' → logprob: -14.250004768371582
    6. ' -' → logprob: -14.625004768371582
    7. '1' → logprob: -15.125004768371582
    8. '```' → logprob: -15.125004768371582
    9. '#' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.7500057220459

Token 767: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. ' ' → logprob: -14.785224914550781
    4. ',' → logprob: -15.535224914550781
    5. 's' → logprob: -16.78522491455078
    6. ')' → logprob: -16.91022491455078
    7. '```' → logprob: -17.03522491455078
    8. '=
' → logprob: -17.16022491455078
    9. ' =
' → logprob: -17.16022491455078
    10. ' ' → logprob: -17.16022491455078

Token 768: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6492902636528015
    2. 'n' → logprob: -0.8992902636528015
    3. ' n' → logprob: -2.8992903232574463
    4. ' ' → logprob: -4.399290084838867
    5. '(' → logprob: -6.899290084838867
    6. '   ' → logprob: -7.149290084838867
    7. '(n' → logprob: -7.649290084838867
    8. ' (' → logprob: -8.149290084838867
    9. '4' → logprob: -8.274290084838867
    10. '1' → logprob: -8.274290084838867

Token 769: ' différence' (ID: 79196)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35440465807914734
    2. 'n' → logprob: -1.2294046878814697
    3. '(' → logprob: -6.479404449462891
    4. '(n' → logprob: -6.604404449462891
    5. ' n' → logprob: -6.729404449462891
    6. '1' → logprob: -7.229404449462891
    7. ' ' → logprob: -7.479404449462891
    8. '3' → logprob: -7.979404449462891
    9. ' (' → logprob: -10.10440444946289
    10. 'int' → logprob: -10.22940444946289

Token 770: ' entre' (ID: 3853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12696599960327148
    2. ' =' → logprob: -2.1269659996032715
    3. 'n' → logprob: -10.37696647644043
    4. '=n' → logprob: -12.37696647644043
    5. ' n' → logprob: -14.00196647644043
    6. ' ' → logprob: -14.62696647644043
    7. '   ' → logprob: -14.87696647644043
    8. '```' → logprob: -15.37696647644043
    9. '       ' → logprob: -15.50196647644043
    10. 'between' → logprob: -16.25196647644043

Token 771: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00029613598599098623
    2. ' n' → logprob: -8.250296592712402
    3. '2' → logprob: -11.125296592712402
    4. '   ' → logprob: -11.500296592712402
    5. '(' → logprob: -12.125296592712402
    6. '(n' → logprob: -13.000296592712402
    7. '    ' → logprob: -14.875296592712402
    8. '1' → logprob: -15.125296592712402
    9. '3' → logprob: -15.250296592712402
    10. ' ' → logprob: -15.250296592712402

Token 772: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006821724819019437
    2. '2' → logprob: -7.875682353973389
    3. ' n' → logprob: -8.87568187713623
    4. '3' → logprob: -9.75068187713623
    5. '(' → logprob: -9.75068187713623
    6. '(n' → logprob: -10.37568187713623
    7. 'nn' → logprob: -12.25068187713623
    8. '   ' → logprob: -12.50068187713623
    9. '1' → logprob: -13.12568187713623
    10. ' (' → logprob: -13.50068187713623

Token 773: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6101155877113342
    2. ' +' → logprob: -1.6101155281066895
    3. ' and' → logprob: -1.9851155281066895
    4. 'n' → logprob: -3.3601155281066895
    5. '*' → logprob: -3.6101155281066895
    6. ')' → logprob: -4.6101155281066895
    7. 'and' → logprob: -4.7351155281066895
    8. ' n' → logprob: -4.7351155281066895
    9. ',' → logprob: -4.9851155281066895
    10. ' -' → logprob: -4.9851155281066895

Token 774: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5257178544998169
    2. 'n' → logprob: -1.275717854499817
    3. ' n' → logprob: -2.7757177352905273
    4. 'nn' → logprob: -4.025717735290527
    5. ' ' → logprob: -4.150717735290527
    6. '2' → logprob: -4.650717735290527
    7. '(n' → logprob: -4.775717735290527
    8. '3' → logprob: -5.025717735290527
    9. ' (' → logprob: -6.025717735290527
    10. '(' → logprob: -6.025717735290527

Token 775: '1' (ID: 16)
  Prédit: 'nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nn' → logprob: -0.9160376191139221
    2. 'n' → logprob: -1.0410375595092773
    3. '1' → logprob: -1.9160375595092773
    4. '(n' → logprob: -3.2910375595092773
    5. '3' → logprob: -3.2910375595092773
    6. '(nn' → logprob: -4.291037559509277
    7. '2' → logprob: -4.916037559509277
    8. '(' → logprob: -5.666037559509277
    9. '4' → logprob: -7.916037559509277
    10. '5' → logprob: -9.791037559509277

Token 776: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24194373190402985
    2. '-' → logprob: -1.8669437170028687
    3. ' -' → logprob: -2.866943836212158
    4. '+' → logprob: -6.366943836212158
    5. ' )' → logprob: -7.366943836212158
    6. '-n' → logprob: -7.741943836212158
    7. ',' → logprob: -8.616943359375
    8. ' ' → logprob: -9.241943359375
    9. '#' → logprob: -9.241943359375
    10. ')-' → logprob: -9.741943359375

Token 777: ' et' (ID: 859)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.647822916507721
    2. '+' → logprob: -1.2728228569030762
    3. ' -' → logprob: -1.7728228569030762
    4. '-' → logprob: -4.272822856903076
    5. ' and' → logprob: -4.647822856903076
    6. ' ' → logprob: -6.397822856903076
    7. ',' → logprob: -7.522822856903076
    8. 'and' → logprob: -7.647822856903076
    9. '```' → logprob: -8.772823333740234
    10. '   ' → logprob: -9.147823333740234

Token 778: ' cette' (ID: 7696)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1451406031847
    2. ' n' → logprob: -2.0201406478881836
    3. '(n' → logprob: -6.270140647888184
    4. '(' → logprob: -8.145140647888184
    5. ' (' → logprob: -8.770140647888184
    6. '2' → logprob: -9.520140647888184
    7. '1' → logprob: -10.395140647888184
    8. ' ' → logprob: -11.520140647888184
    9. '   ' → logprob: -12.520140647888184
    10. '
' → logprob: -12.520140647888184

Token 779: ' même' (ID: 9679)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014534254558384418
    2. ' n' → logprob: -4.2645344734191895
    3. '(n' → logprob: -8.639533996582031
    4. '2' → logprob: -9.889533996582031
    5. '1' → logprob: -10.014533996582031
    6. '```' → logprob: -10.264533996582031
    7. ' (' → logprob: -10.764533996582031
    8. '
' → logprob: -11.514533996582031
    9. '`' → logprob: -11.639533996582031
    10. '(' → logprob: -11.764533996582031

Token 780: ' puissance' (ID: 63494)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010180408135056496
    2. '(n' → logprob: -7.251018047332764
    3. '(' → logprob: -8.626017570495605
    4. ' n' → logprob: -9.626017570495605
    5. 'pu' → logprob: -10.751017570495605
    6. ' (' → logprob: -11.501017570495605
    7. '```' → logprob: -11.501017570495605
    8. '`' → logprob: -12.001017570495605
    9. '
' → logprob: -12.501017570495605
    10. '2' → logprob: -12.501017570495605

Token 781: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2003730535507202
    2. '2' → logprob: -1.5753730535507202
    3. '_' → logprob: -1.8253730535507202
    4. '(n' → logprob: -1.8253730535507202
    5. '(' → logprob: -3.0753731727600098
    6. 'n' → logprob: -4.07537317276001
    7. ' =' → logprob: -4.20037317276001
    8. ' -' → logprob: -4.32537317276001
    9. ' (' → logprob: -4.32537317276001
    10. '=' → logprob: -4.45037317276001

Token 782: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.097437315271236e-05
    2. ' ' → logprob: -10.00005054473877
    3. '1' → logprob: -12.50005054473877
    4. '(' → logprob: -14.50005054473877
    5. 'n' → logprob: -14.87505054473877
    6. '```' → logprob: -15.12505054473877
    7. ' two' → logprob: -15.50005054473877
    8. 'two' → logprob: -15.50005054473877
    9. ' (' → logprob: -16.500051498413086
    10. '<|end|>' → logprob: -16.750051498413086

Token 783: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03394754230976105
    2. '1' → logprob: -3.408947467803955
    3. '(' → logprob: -8.408947944641113
    4. ' ' → logprob: -9.908947944641113
    5. 'n' → logprob: -11.533947944641113
    6. '```' → logprob: -11.783947944641113
    7. '(n' → logprob: -11.908947944641113
    8. ' (' → logprob: -13.658947944641113
    9. '`' → logprob: -14.033947944641113
    10. '{' → logprob: -14.533947944641113

Token 784: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20161916315555573
    2. ' =' → logprob: -1.7016191482543945
    3. '=
' → logprob: -8.951619148254395
    4. '=n' → logprob: -10.701619148254395
    5. '(n' → logprob: -10.951619148254395
    6. ' =
' → logprob: -10.951619148254395
    7. ',' → logprob: -12.076619148254395
    8. 'n' → logprob: -12.701619148254395
    9. '[n' → logprob: -13.201619148254395
    10. '
' → logprob: -13.701619148254395

Token 785: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10093831270933151
    2. ' =' → logprob: -2.850938320159912
    3. '=' → logprob: -3.350938320159912
    4. ' n' → logprob: -6.225938320159912
    5. '=n' → logprob: -7.350938320159912
    6. '       ' → logprob: -8.225937843322754
    7. '(n' → logprob: -8.850937843322754
    8. '=
' → logprob: -10.100937843322754
    9. '```' → logprob: -10.725937843322754
    10. '	n' → logprob: -11.225937843322754

Token 786: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: 0.0
    2. ' n' → logprob: -17.625
    3. '```' → logprob: -21.125
    4. 'print' → logprob: -21.375
    5. '	n' → logprob: -21.375
    6. '
' → logprob: -22.25
    7. '`' → logprob: -22.5
    8. '   ' → logprob: -22.75
    9. '(n' → logprob: -22.75
    10. '
' → logprob: -22.875

Token 787: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002222516923211515
    2. '1' → logprob: -9.125222206115723
    3. ' ' → logprob: -10.375222206115723
    4. '+' → logprob: -10.625222206115723
    5. '
' → logprob: -11.375222206115723
    6. '```' → logprob: -11.500222206115723
    7. '_' → logprob: -11.625222206115723
    8. 'n' → logprob: -11.875222206115723
    9. '=' → logprob: -12.000222206115723
    10. '-' → logprob: -12.875222206115723

Token 788: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '=n' → logprob: -18.018150329589844
    4. '＝' → logprob: -18.393150329589844
    5. '=}' → logprob: -19.268150329589844
    6. '=

' → logprob: -19.518150329589844
    7. '=
' → logprob: -19.768150329589844
    8. '=int' → logprob: -19.768150329589844
    9. ')' → logprob: -19.768150329589844
    10. ' ' → logprob: -20.518150329589844

Token 789: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3950360417366028
    2. '(n' → logprob: -1.145035982131958
    3. 'n' → logprob: -5.145036220550537
    4. ' n' → logprob: -6.145036220550537
    5. '(' → logprob: -8.770035743713379
    6. '   ' → logprob: -14.145035743713379
    7. ' ' → logprob: -14.145035743713379
    8. '	n' → logprob: -15.145035743713379
    9. '(N' → logprob: -15.395035743713379
    10. '_n' → logprob: -15.395035743713379

Token 790: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000157293034135364
    2. '(n' → logprob: -8.875157356262207
    3. ' n' → logprob: -11.000157356262207
    4. '   ' → logprob: -14.750157356262207
    5. '(' → logprob: -15.625157356262207
    6. ' (' → logprob: -16.50015640258789
    7. ')n' → logprob: -16.50015640258789
    8. '	n' → logprob: -17.25015640258789
    9. '1' → logprob: -17.50015640258789
    10. '_n' → logprob: -17.87515640258789

Token 791: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033656876534223557
    2. ' +' → logprob: -3.4086568355560303
    3. '1' → logprob: -12.65865707397461
    4. 'n' → logprob: -12.78365707397461
    5. ' ' → logprob: -13.53365707397461
    6. '+
' → logprob: -13.78365707397461
    7. ' plus' → logprob: -14.53365707397461
    8. 'plus' → logprob: -14.65865707397461
    9. '>' → logprob: -15.28365707397461
    10. '
' → logprob: -15.28365707397461

Token 792: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.375036239624023
    4. '
' → logprob: -18.250036239624023
    5. '  ' → logprob: -18.625036239624023
    6. '2' → logprob: -18.875036239624023
    7. ')' → logprob: -19.187536239624023
    8. '<|end|>' → logprob: -19.562536239624023
    9. ' ' → logprob: -19.625036239624023
    10. '```' → logprob: -19.687536239624023

Token 793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.125017166137695
    4. '
' → logprob: -16.625017166137695
    5. '  ' → logprob: -17.250017166137695
    6. '2' → logprob: -18.000017166137695
    7. '```' → logprob: -18.000017166137695
    8. '    ' → logprob: -18.750017166137695
    9. ')' → logprob: -18.875017166137695
    10. '     ' → logprob: -19.000017166137695

Token 794: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1821642965078354
    2. ' -' → logprob: -2.057164192199707
    3. '-' → logprob: -3.307164192199707
    4. ' )' → logprob: -6.307164192199707
    5. ' ' → logprob: -8.682164192199707
    6. ',' → logprob: -10.307164192199707
    7. '   ' → logprob: -10.807164192199707
    8. '#' → logprob: -11.432164192199707
    9. '    ' → logprob: -12.307164192199707
    10. ' n' → logprob: -12.432164192199707

Token 795: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14273199439048767
    2. ' -' → logprob: -2.0177319049835205
    3. ' ' → logprob: -10.517731666564941
    4. '-n' → logprob: -11.517731666564941
    5. '   ' → logprob: -12.142731666564941
    6. 'n' → logprob: -12.892731666564941
    7. '#' → logprob: -13.017731666564941
    8. '
' → logprob: -13.392731666564941
    9. '       ' → logprob: -13.767731666564941
    10. '=' → logprob: -14.017731666564941

Token 796: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.2729995988775045e-06
    2. ' n' → logprob: -12.375006675720215
    3. '(' → logprob: -13.625006675720215
    4. '2' → logprob: -14.125006675720215
    5. '(n' → logprob: -19.1250057220459
    6. '	n' → logprob: -19.1250057220459
    7. ' (' → logprob: -19.6250057220459
    8. '   ' → logprob: -20.6250057220459
    9. '_n' → logprob: -20.8750057220459
    10. '```' → logprob: -21.1250057220459

Token 797: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.45848218582978e-06
    2. '2' → logprob: -13.75000286102295
    3. ' n' → logprob: -13.87500286102295
    4. '(' → logprob: -15.00000286102295
    5. '(n' → logprob: -18.125001907348633
    6. '	n' → logprob: -19.875001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '```' → logprob: -21.875001907348633
    9. ' ' → logprob: -22.250001907348633
    10. '**' → logprob: -22.500001907348633

Token 798: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5431779026985168
    2. 'n' → logprob: -1.168177843093872
    3. '(n' → logprob: -2.668177843093872
    4. '1' → logprob: -3.793177843093872
    5. ' n' → logprob: -4.418178081512451
    6. ' **' → logprob: -5.793178081512451
    7. '`' → logprob: -8.168177604675293
    8. '(' → logprob: -8.293177604675293
    9. '*' → logprob: -9.043177604675293
    10. ' ' → logprob: -9.293177604675293

Token 799: ' (' (ID: 350)
  Prédit: '(nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nn' → logprob: -0.003489954397082329
    2. '(n' → logprob: -5.753489971160889
    3. ' (' → logprob: -8.25348949432373
    4. '(' → logprob: -9.87848949432373
    5. 'nn' → logprob: -15.87848949432373
    6. '(nx' → logprob: -16.253490447998047
    7. '(nb' → logprob: -16.503490447998047
    8. '   ' → logprob: -16.628490447998047
    9. '(nt' → logprob: -17.128490447998047
    10. '(ns' → logprob: -17.128490447998047

Token 800: 'nn' (ID: 16998)
  Prédit: '(nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nn' → logprob: -0.0029355064034461975
    2. '(n' → logprob: -5.877935409545898
    3. ' (' → logprob: -9.127935409545898
    4. 'nn' → logprob: -11.002935409545898
    5. 'n' → logprob: -13.127935409545898
    6. '(' → logprob: -13.252935409545898
    7. '   ' → logprob: -14.627935409545898
    8. '  ' → logprob: -15.002935409545898
    9. '{' → logprob: -15.252935409545898
    10. ' ' → logprob: -15.502935409545898

Token 801: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11940598487854004
    2. '-' → logprob: -2.49440598487854
    3. ' (' → logprob: -3.86940598487854
    4. '(n' → logprob: -4.869405746459961
    5. ' -' → logprob: -6.744405746459961
    6. '(-' → logprob: -8.494405746459961
    7. '   ' → logprob: -10.744405746459961
    8. ' ' → logprob: -11.244405746459961
    9. '       ' → logprob: -11.869405746459961
    10. '(prev' → logprob: -12.244405746459961

Token 802: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '2' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '0' → logprob: -17.750001907348633
    6. '(' → logprob: -18.375001907348633
    7. '```' → logprob: -18.500001907348633
    8. '3' → logprob: -20.250001907348633
    9. '<|end|>' → logprob: -20.687501907348633
    10. '       ' → logprob: -20.687501907348633

Token 803: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '2' → logprob: -12.250004768371582
    3. ' ' → logprob: -15.875004768371582
    4. '```' → logprob: -16.8750057220459
    5. '0' → logprob: -18.1250057220459
    6. '   ' → logprob: -18.3125057220459
    7. '(' → logprob: -18.8750057220459
    8. '
' → logprob: -18.8750057220459
    9. '3' → logprob: -19.6250057220459
    10. '１' → logprob: -19.6875057220459

Token 804: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -13.125003814697266
    3. ')
' → logprob: -13.750003814697266
    4. '")' → logprob: -16.500003814697266
    5. '')' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.750003814697266
    7. ')

' → logprob: -16.875003814697266
    8. '))' → logprob: -17.000003814697266
    9. ')n' → logprob: -17.125003814697266
    10. '}' → logprob: -17.125003814697266

Token 805: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3881908357143402
    2. 'print' → logprob: -1.1381908655166626
    3. 'n' → logprob: -8.138191223144531
    4. ' print' → logprob: -8.388191223144531
    5. '#' → logprob: -8.513191223144531
    6. '```' → logprob: -8.763191223144531
    7. '<|end|>' → logprob: -9.013191223144531
    8. '        
' → logprob: -9.263191223144531
    9. '   ' → logprob: -9.513191223144531
    10. '
' → logprob: -10.013191223144531

Token 806: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026421980932354927
    2. '       ' → logprob: -3.6514220237731934
    3. 'n' → logprob: -9.776421546936035
    4. ' print' → logprob: -10.651421546936035
    5. 'for' → logprob: -10.776421546936035
    6. '#' (adapté à ' #') → logprob: -11.901421546936035
    7. '```' → logprob: -12.026421546936035
    8. '   ' → logprob: -13.151421546936035
    9. '        
' → logprob: -13.776421546936035
    10. '#print' → logprob: -14.276421546936035

Token 807: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00042292833677493036
    2. 'for' → logprob: -8.500422477722168
    3. 'if' → logprob: -8.875422477722168
    4. '       ' → logprob: -9.500422477722168
    5. 'n' → logprob: -13.625422477722168
    6. ' print' → logprob: -14.000422477722168
    7. 'while' → logprob: -14.000422477722168
    8. '   ' → logprob: -14.250422477722168
    9. '#' → logprob: -14.375422477722168
    10. '#print' → logprob: -15.375422477722168

Token 808: ' imprime' (ID: 195564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04714111238718033
    2. ' print' → logprob: -3.7971410751342773
    3. '       ' → logprob: -4.047141075134277
    4. 'for' → logprob: -5.422141075134277
    5. ' for' → logprob: -6.672141075134277
    6. '#' → logprob: -9.422141075134277
    7. '   ' → logprob: -9.422141075134277
    8. 'continue' → logprob: -9.422141075134277
    9. 'if' → logprob: -9.797141075134277
    10. ' #' → logprob: -10.422141075134277

Token 809: ' les' (ID: 1341)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6423193216323853
    2. 'print' → logprob: -1.3923193216323853
    3. 'n' → logprob: -1.5173193216323853
    4. '(' → logprob: -5.267319202423096
    5. '(print' → logprob: -7.767319202423096
    6. '1' → logprob: -8.017319679260254
    7. '   ' → logprob: -9.642319679260254
    8. '2' → logprob: -10.392319679260254
    9. '((' → logprob: -10.767319679260254
    10. ' print' → logprob: -10.892319679260254

Token 810: ' p' (ID: 275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02395676076412201
    2. 'print' → logprob: -4.523956775665283
    3. '(n' → logprob: -4.523956775665283
    4. '1' → logprob: -6.898956775665283
    5. '4' → logprob: -8.398956298828125
    6. '2' → logprob: -8.523956298828125
    7. ' n' → logprob: -8.648956298828125
    8. '(' → logprob: -8.898956298828125
    9. 'nn' → logprob: -9.023956298828125
    10. '3' → logprob: -9.898956298828125

Token 811: 'aires' (ID: 8507)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013382920995354652
    2. 'print' → logprob: -4.388382911682129
    3. '(n' → logprob: -7.638382911682129
    4. 'rin' → logprob: -9.138382911682129
    5. '1' → logprob: -9.388382911682129
    6. 'int' → logprob: -10.013382911682129
    7. 'n' → logprob: -10.138382911682129
    8. '#print' → logprob: -10.263382911682129
    9. '(r' → logprob: -11.013382911682129
    10. 'air' → logprob: -11.138382911682129

Token 812: ' finales' (ID: 74387)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06737252324819565
    2. '(' → logprob: -3.0673725605010986
    3. 'print' → logprob: -4.1923723220825195
    4. '(print' → logprob: -5.6923723220825195
    5. '((' → logprob: -9.56737232208252
    6. '       ' → logprob: -10.31737232208252
    7. '   ' → logprob: -11.56737232208252
    8. 'n' → logprob: -11.81737232208252
    9. '```' → logprob: -12.94237232208252
    10. ' print' → logprob: -13.56737232208252

Token 813: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018207067623734474
    2. '       ' → logprob: -4.01820707321167
    3. '(n' → logprob: -10.143206596374512
    4. ' print' → logprob: -11.268206596374512
    5. '(' → logprob: -12.893206596374512
    6. 'n' → logprob: -13.518206596374512
    7. '(print' → logprob: -14.268206596374512
    8. '```' → logprob: -14.893206596374512
    9. 'for' → logprob: -15.643206596374512
    10. '.print' → logprob: -17.393207550048828

Token 814: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. '(n' → logprob: -13.75000286102295
    3. ' print' → logprob: -13.87500286102295
    4. '(print' → logprob: -14.75000286102295
    5. 'for' → logprob: -15.12500286102295
    6. '```' → logprob: -16.000003814697266
    7. '(' → logprob: -16.625003814697266
    8. '       ' → logprob: -16.875003814697266
    9. 'n' → logprob: -18.375003814697266
    10. '.print' → logprob: -18.875003814697266

Token 815: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. '       ' → logprob: -15.000000953674316
    3. ' print' → logprob: -16.375
    4. '```' → logprob: -18.875
    5. 'for' → logprob: -20.25
    6. '   ' → logprob: -21.125
    7. '(print' → logprob: -21.875
    8. '#print' → logprob: -22.0
    9. '	print' → logprob: -22.25
    10. '.print' → logprob: -22.875

Token 816: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0053129736334085464
    2. '(' → logprob: -5.255312919616699
    3. 'n' → logprob: -10.1303129196167
    4. '(nn' → logprob: -10.5053129196167
    5. '((' → logprob: -11.5053129196167
    6. '1' → logprob: -13.8803129196167
    7. '2' → logprob: -15.8803129196167
    8. '("' → logprob: -16.130313873291016
    9. ' (' → logprob: -16.630313873291016
    10. '(int' → logprob: -16.630313873291016

Token 817: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5955713987350464
    2. '1' → logprob: -1.2205713987350464
    3. ' +' → logprob: -2.220571517944336
    4. ',' → logprob: -3.845571517944336
    5. '-' → logprob: -4.470571517944336
    6. '2' → logprob: -4.970571517944336
    7. ' -' → logprob: -5.470571517944336
    8. ' ,' → logprob: -7.095571517944336
    9. ' ' → logprob: -8.970571517944336
    10. '   ' → logprob: -9.595571517944336

Token 818: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035291595850139856
    2. '+' → logprob: -6.503529071807861
    3. ',n' → logprob: -6.753529071807861
    4. ' ,' → logprob: -7.378529071807861
    5. ' +' → logprob: -8.62852954864502
    6. '-' → logprob: -10.87852954864502
    7. '+n' → logprob: -11.37852954864502
    8. '   ' → logprob: -12.50352954864502
    9. ' -' → logprob: -12.50352954864502
    10. ' ' → logprob: -12.87852954864502

Token 819: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0023698240984231234
    2. '2' → logprob: -6.3773698806762695
    3. ' n' → logprob: -7.5023698806762695
    4. '1' → logprob: -9.62736988067627
    5. '(n' → logprob: -10.50236988067627
    6. '(' → logprob: -11.62736988067627
    7. '3' → logprob: -12.25236988067627
    8. '4' → logprob: -12.87736988067627
    9. 'nn' → logprob: -13.12736988067627
    10. ' ' → logprob: -13.62736988067627

Token 820: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00990978628396988
    2. ' +' → logprob: -5.009909629821777
    3. '-' → logprob: -7.009909629821777
    4. '+n' → logprob: -7.134909629821777
    5. '+,' → logprob: -7.509909629821777
    6. '2' → logprob: -7.634909629821777
    7. ',' → logprob: -8.759909629821777
    8. 'n' → logprob: -9.009909629821777
    9. '1' → logprob: -9.634909629821777
    10. ' n' → logprob: -10.634909629821777

Token 821: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012822408229112625
    2. '<|end|>' → logprob: -5.13782262802124
    3. '       ' → logprob: -5.63782262802124
    4. '```' → logprob: -7.01282262802124
    5. '   ' → logprob: -7.13782262802124
    6. '(n' → logprob: -7.63782262802124
    7. 'n' → logprob: -8.012822151184082
    8. '+' → logprob: -8.262822151184082
    9. ')' → logprob: -8.387822151184082
    10. '(' → logprob: -9.137822151184082

Token 822: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.875
    3. '       ' → logprob: -17.125
    4. '```' → logprob: -19.625
    5. '#print' → logprob: -20.875
    6. 'n' → logprob: -21.125
    7. '(print' → logprob: -21.375
    8. '	print' → logprob: -21.5
    9. '   ' → logprob: -21.75
    10. '.print' → logprob: -22.125

Token 823: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5375725626945496
    2. 'n' → logprob: -0.9125725626945496
    3. '(' → logprob: -4.787572383880615
    4. '1' → logprob: -6.037572383880615
    5. 'nn' → logprob: -6.162572383880615
    6. '(nn' → logprob: -6.787572383880615
    7. '2' → logprob: -8.037572860717773
    8. '0' → logprob: -10.787572860717773
    9. '((' → logprob: -11.162572860717773
    10. '3' → logprob: -11.787572860717773

Token 824: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3220927119255066
    2. ',' → logprob: -1.4470927715301514
    3. '1' → logprob: -4.072092533111572
    4. '-' → logprob: -4.697092533111572
    5. ' +' → logprob: -4.947092533111572
    6. 'n' → logprob: -6.197092533111572
    7. '2' → logprob: -6.822092533111572
    8. ')' → logprob: -6.947092533111572
    9. ' ,' → logprob: -7.072092533111572
    10. ' -' → logprob: -8.07209300994873

Token 825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03237122297286987
    2. '+' → logprob: -3.5323712825775146
    3. ' +' → logprob: -6.1573710441589355
    4. ' ,' → logprob: -8.157371520996094
    5. ',n' → logprob: -9.282371520996094
    6. ')' → logprob: -10.282371520996094
    7. '-' → logprob: -10.532371520996094
    8. '+n' → logprob: -10.657371520996094
    9. '   ' → logprob: -11.282371520996094
    10. 'n' → logprob: -11.782371520996094

Token 826: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010785458609461784
    2. ' n' → logprob: -5.1357855796813965
    3. '2' → logprob: -5.7607855796813965
    4. '1' → logprob: -6.8857855796813965
    5. 'nn' → logprob: -8.010785102844238
    6. '3' → logprob: -9.260785102844238
    7. '   ' → logprob: -9.385785102844238
    8. ' ' → logprob: -9.635785102844238
    9. '4' → logprob: -9.885785102844238
    10. ' nn' → logprob: -11.760785102844238

Token 827: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00463078822940588
    2. '2' → logprob: -5.5046305656433105
    3. '1' → logprob: -8.379631042480469
    4. 'nn' → logprob: -8.504631042480469
    5. ' n' → logprob: -10.004631042480469
    6. '3' → logprob: -10.629631042480469
    7. '(n' → logprob: -10.629631042480469
    8. '(' → logprob: -11.254631042480469
    9. '4' → logprob: -12.629631042480469
    10. '0' → logprob: -12.754631042480469

Token 828: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05716801434755325
    2. '+' → logprob: -3.5571680068969727
    3. '-' → logprob: -4.307168006896973
    4. ' +' → logprob: -4.807168006896973
    5. ' -' → logprob: -5.557168006896973
    6. 'n' → logprob: -8.057168006896973
    7. '**' → logprob: -8.057168006896973
    8. '*' → logprob: -8.682168006896973
    9. '(n' → logprob: -8.932168006896973
    10. '<|end|>' → logprob: -9.557168006896973

Token 829: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0023836148902773857
    2. '(n' → logprob: -6.127383708953857
    3. '(' → logprob: -8.6273832321167
    4. ' n' → logprob: -11.2523832321167
    5. '2' → logprob: -13.1273832321167
    6. ' (' → logprob: -13.2523832321167
    7. 'nn' → logprob: -13.8773832321167
    8. '`' → logprob: -14.8773832321167
    9. '```' → logprob: -15.0023832321167
    10. '   ' → logprob: -15.3773832321167

Token 830: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2603505253791809
    2. '+' → logprob: -1.5103504657745361
    3. '-' → logprob: -5.010350704193115
    4. ' +' → logprob: -6.635350704193115
    5. ' -' → logprob: -8.635350227355957
    6. ' )' → logprob: -9.260350227355957
    7. ')
' → logprob: -9.760350227355957
    8. '   ' → logprob: -11.010350227355957
    9. '+)' → logprob: -11.010350227355957
    10. '1' → logprob: -12.260350227355957

Token 831: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 832: ' Enfin' (ID: 85274)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -6.704273118884885e-07
    2. 'elif' → logprob: -14.500000953674316
    3. ' else' → logprob: -16.25
    4. '```' → logprob: -17.375
    5. '#' → logprob: -19.75
    6. '#else' → logprob: -20.125
    7. '_else' → logprob: -22.5
    8. 'Else' → logprob: -23.0
    9. '...' → logprob: -23.5
    10. 'endif' → logprob: -24.25

Token 833: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0019505366217345
    2. 'elif' → logprob: -6.751950740814209
    3. ':' → logprob: -7.251950740814209
    4. ' else' → logprob: -9.75195026397705
    5. '```' → logprob: -12.12695026397705
    6. '...' → logprob: -12.62695026397705
    7. 'elser' → logprob: -13.75195026397705
    8. 'el' → logprob: -14.25195026397705
    9. ':
' → logprob: -14.37695026397705
    10. '#' → logprob: -14.50195026397705

Token 834: ' pour' (ID: 1930)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.7432603272027336e-06
    2. '#' → logprob: -13.500001907348633
    3. ' else' → logprob: -15.625001907348633
    4. 'elif' → logprob: -15.750001907348633
    5. '```' → logprob: -17.625001907348633
    6. '#else' → logprob: -19.125001907348633
    7. 'print' → logprob: -19.375001907348633
    8. '...' → logprob: -20.500001907348633
    9. '   ' → logprob: -20.875001907348633
    10. 'otherwise' → logprob: -22.875001907348633

Token 835: ' tous' (ID: 10688)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00016158436483237892
    2. ' else' → logprob: -9.500161170959473
    3. 'elif' → logprob: -10.250161170959473
    4. '#' → logprob: -10.625161170959473
    5. '_' → logprob: -11.500161170959473
    6. 'n' → logprob: -12.000161170959473
    7. 'e' → logprob: -13.000161170959473
    8. 'l' → logprob: -13.125161170959473
    9. '_else' → logprob: -13.125161170959473
    10. 'els' → logprob: -13.250161170959473

Token 836: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.14123192429542542
    2. '#' → logprob: -2.2662320137023926
    3. 'else' → logprob: -4.016232013702393
    4. ' les' → logprob: -5.141232013702393
    5. 'le' → logprob: -5.641232013702393
    6. 'els' → logprob: -9.516231536865234
    7. 'elif' → logprob: -9.641231536865234
    8. 'l' → logprob: -9.766231536865234
    9. 'es' → logprob: -10.016231536865234
    10. 'aut' → logprob: -10.141231536865234

Token 837: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.0018311807652935386
    2. ' autres' → logprob: -7.5018310546875
    3. ''autres' → logprob: -7.6268310546875
    4. '#' → logprob: -8.1268310546875
    5. 'else' → logprob: -8.2518310546875
    6. 'other' → logprob: -9.0018310546875
    7. 'cas' → logprob: -10.2518310546875
    8. '’autres' → logprob: -11.0018310546875
    9. 'ailleurs' → logprob: -11.0018310546875
    10. 'rest' → logprob: -11.1268310546875

Token 838: ' cas' (ID: 2108)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47441381216049194
    2. 'else' → logprob: -0.9744138121604919
    3. 'elif' → logprob: -8.599413871765137
    4. 'cases' → logprob: -9.849413871765137
    5. ' else' → logprob: -9.974413871765137
    6. ':
' → logprob: -11.599413871765137
    7. 'elses' → logprob: -11.724413871765137
    8. ':#' → logprob: -12.099413871765137
    9. ' cases' → logprob: -12.224413871765137
    10. 'es' → logprob: -12.349413871765137

Token 839: ' (' (ID: 350)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00013166792632546276
    2. ':' → logprob: -9.000131607055664
    3. ' else' → logprob: -11.875131607055664
    4. 'elif' → logprob: -13.750131607055664
    5. ':
' → logprob: -16.875131607055664
    6. '_else' → logprob: -17.000131607055664
    7. '```' → logprob: -17.750131607055664
    8. 'elses' → logprob: -18.000131607055664
    9. 'elser' → logprob: -18.500131607055664
    10. 'e' → logprob: -19.875131607055664

Token 840: 'n' (ID: 77)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0016369777731597424
    2. ':' → logprob: -6.501636981964111
    3. ':
' → logprob: -9.001636505126953
    4. ' else' → logprob: -11.626636505126953
    5. '):
' → logprob: -13.876636505126953
    6. '```' → logprob: -14.376636505126953
    7. '):' → logprob: -14.626636505126953
    8. '   ' → logprob: -15.251636505126953
    9. '_else' → logprob: -16.251636505126953
    10. 'elser' → logprob: -16.876636505126953

Token 841: ' est' (ID: 893)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1002659872174263
    2. ':' → logprob: -2.3502659797668457
    3. ' else' → logprob: -10.100266456604004
    4. 'elif' → logprob: -11.600266456604004
    5. '):' → logprob: -12.975266456604004
    6. '```' → logprob: -13.100266456604004
    7. '_else' → logprob: -13.100266456604004
    8. ':
' → logprob: -13.225266456604004
    9. 'e' → logprob: -15.100266456604004
    10. 'elser' → logprob: -15.600266456604004

Token 842: ' impair' (ID: 64113)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7510654926300049
    2. '#' → logprob: -1.1260654926300049
    3. 'not' → logprob: -3.376065492630005
    4. '...' → logprob: -3.501065492630005
    5. 'odd' → logprob: -3.626065492630005
    6. ':' → logprob: -3.876065492630005
    7. '>' → logprob: -4.001065254211426
    8. ' odd' → logprob: -4.126065254211426
    9. '```' → logprob: -4.376065254211426
    10. ' not' → logprob: -4.501065254211426

Token 843: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0003374886582605541
    2. ':' → logprob: -8.875337600708008
    3. ' else' → logprob: -9.125337600708008
    4. '):' → logprob: -10.125337600708008
    5. 'elif' → logprob: -10.875337600708008
    6. '):
' → logprob: -11.125337600708008
    7. ')' → logprob: -11.500337600708008
    8. '_else' → logprob: -13.375337600708008
    9. ':
' → logprob: -14.000337600708008
    10. '),' → logprob: -14.250337600708008

Token 844: ' n' (ID: 297)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0005598236457444727
    2. ' else' → logprob: -8.25055980682373
    3. ':' → logprob: -9.25055980682373
    4. '#' → logprob: -9.87555980682373
    5. '):' → logprob: -10.00055980682373
    6. '):
' → logprob: -10.50055980682373
    7. 'except' → logprob: -10.75055980682373
    8. '   ' → logprob: -11.37555980682373
    9. ')' → logprob: -11.50055980682373
    10. 'and' → logprob: -11.62555980682373

Token 845: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.19414156675338745
    2. '%' → logprob: -2.1941416263580322
    3. ' >' → logprob: -3.1941416263580322
    4. 'else' → logprob: -3.8191416263580322
    5. '!=' → logprob: -7.069141387939453
    6. '==' → logprob: -8.194141387939453
    7. ' not' → logprob: -8.569141387939453
    8. '>=' → logprob: -8.694141387939453
    9. 'elif' → logprob: -8.819141387939453
    10. ' else' → logprob: -9.069141387939453

Token 846: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.339278580620885e-06
    2. '3' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '5' → logprob: -15.375001907348633
    5. '=' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '2' → logprob: -17.125001907348633
    8. '```' → logprob: -17.375001907348633
    9. ')' → logprob: -18.375001907348633
    10. '6' → logprob: -18.500001907348633

Token 847: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0007270866190083325
    2. '3' → logprob: -7.25072717666626
    3. '2' → logprob: -11.000726699829102
    4. '5' → logprob: -14.750726699829102
    5. ' ' → logprob: -16.3757266998291
    6. '6' → logprob: -17.5007266998291
    7. '```' → logprob: -17.8757266998291
    8. '４' → logprob: -18.1257266998291
    9. '=' → logprob: -18.6257266998291
    10. '10' → logprob: -18.6257266998291

Token 848: '),' (ID: 936)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0037171770818531513
    2. 'elif' → logprob: -6.503716945648193
    3. ':' → logprob: -6.878716945648193
    4. '):' → logprob: -7.003716945648193
    5. ')' → logprob: -8.753717422485352
    6. '):
' → logprob: -9.753717422485352
    7. ' else' → logprob: -10.003717422485352
    8. '),' → logprob: -12.378717422485352
    9. ':
' → logprob: -12.503717422485352
    10. ',' → logprob: -12.878717422485352

Token 849: ' on' (ID: 402)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.6087021473795176e-05
    2. 'elif' → logprob: -10.000045776367188
    3. ' else' → logprob: -15.000045776367188
    4. ':' → logprob: -15.125045776367188
    5. '   ' → logprob: -18.000045776367188
    6. '_else' → logprob: -19.750045776367188
    7. '```' → logprob: -19.875045776367188
    8. 'elses' → logprob: -21.250045776367188
    9. '...' → logprob: -21.375045776367188
    10. 'elser' → logprob: -21.375045776367188

Token 850: ' utilise' (ID: 70283)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31391745805740356
    2. 'else' → logprob: -1.3139173984527588
    3. ':
' → logprob: -8.06391716003418
    4. 'elif' → logprob: -8.06391716003418
    5. ' else' → logprob: -11.18891716003418
    6. '   ' → logprob: -12.56391716003418
    7. ' :' → logprob: -12.56391716003418
    8. '_else' → logprob: -13.81391716003418
    9. 'elser' → logprob: -14.43891716003418
    10. '```' → logprob: -14.56391716003418

Token 851: ' le' (ID: 505)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.704065213445574e-05
    2. ' else' → logprob: -10.625046730041504
    3. '   ' → logprob: -11.250046730041504
    4. 'elif' → logprob: -12.250046730041504
    5. ':' → logprob: -13.250046730041504
    6. '```' → logprob: -13.250046730041504
    7. '_else' → logprob: -15.000046730041504
    8. 'print' → logprob: -15.625046730041504
    9. '"' → logprob: -15.625046730041504
    10. '#else' → logprob: -15.750046730041504

Token 852: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -8.41866585687967e-06
    2. ' else' → logprob: -11.750008583068848
    3. '```' → logprob: -15.125008583068848
    4. 'elif' → logprob: -16.25000762939453
    5. '#else' → logprob: -16.87500762939453
    6. '   ' → logprob: -17.12500762939453
    7. '_else' → logprob: -17.25000762939453
    8. 'print' → logprob: -17.25000762939453
    9. 'els' → logprob: -19.12500762939453
    10. 'elses' → logprob: -19.25000762939453

Token 853: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.023511815816164017
    2. ':' → logprob: -3.7735118865966797
    3. ':
' → logprob: -8.27351188659668
    4. ' else' → logprob: -11.52351188659668
    5. '```' → logprob: -14.27351188659668
    6. '_else' → logprob: -15.52351188659668
    7. 'elif' → logprob: -15.64851188659668
    8. '   ' → logprob: -17.14851188659668
    9. ':

' → logprob: -17.39851188659668
    10. 'e' → logprob: -17.64851188659668

Token 854: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.8624639324116288e-06
    2. ' else' → logprob: -13.500001907348633
    3. ':' → logprob: -15.000001907348633
    4. '```' → logprob: -16.750001907348633
    5. '_else' → logprob: -18.750001907348633
    6. 'elif' → logprob: -19.000001907348633
    7. 'elses' → logprob: -20.000001907348633
    8. 'Else' → logprob: -20.875001907348633
    9. '#else' → logprob: -21.375001907348633
    10. 'elser' → logprob: -21.375001907348633

Token 855: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05490327253937721
    2. ':
' → logprob: -2.929903268814087
    3. ':
' → logprob: -12.054903030395508
    4. '   ' → logprob: -12.179903030395508
    5. ' :' → logprob: -12.179903030395508
    6. ':

' → logprob: -13.054903030395508
    7. ' :
' → logprob: -13.554903030395508
    8. 'print' → logprob: -15.304903030395508
    9. '():
' → logprob: -15.679903030395508
    10. '```' → logprob: -15.929903030395508

Token 856: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05947039648890495
    2. '```' → logprob: -3.8094704151153564
    3. ' print' → logprob: -4.059470176696777
    4. '   ' → logprob: -4.309470176696777
    5. 'Yes' → logprob: -5.559470176696777
    6. ' Yes' → logprob: -8.559470176696777
    7. '(print' → logprob: -8.684470176696777
    8. '``' → logprob: -8.684470176696777
    9. ':
' → logprob: -9.059470176696777
    10. ':' → logprob: -9.684470176696777

Token 857: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025115699972957373
    2. '   ' → logprob: -6.002511501312256
    3. ' print' → logprob: -10.377511978149414
    4. '```' → logprob: -12.377511978149414
    5. '	print' → logprob: -15.377511978149414
    6. '#' (adapté à ' #') → logprob: -15.377511978149414
    7. ' ' → logprob: -17.002511978149414
    8. '``' → logprob: -18.127511978149414
    9. '#print' → logprob: -18.627511978149414
    10. '       ' → logprob: -18.877511978149414

Token 858: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.816093228830141e-06
    2. '   ' → logprob: -13.00000286102295
    3. ' print' → logprob: -15.00000286102295
    4. '```' → logprob: -16.500001907348633
    5. '#' → logprob: -18.375001907348633
    6. 'n' → logprob: -18.750001907348633
    7. ' ' → logprob: -19.625001907348633
    8. '	print' → logprob: -20.000001907348633
    9. 'pass' → logprob: -20.875001907348633
    10. 'for' → logprob: -21.250001907348633

Token 859: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0022432736586779356
    2. 'ich' → logprob: -6.2522430419921875
    3. 'iché' → logprob: -9.252243041992188
    4. 'cher' → logprob: -9.627243041992188
    5. 'ichage' → logprob: -10.252243041992188
    6. 'print' → logprob: -10.252243041992188
    7. '#' → logprob: -10.627243041992188
    8. 'iche' → logprob: -10.752243041992188
    9. 'ichier' → logprob: -11.377243041992188
    10. 'r' → logprob: -12.377243041992188

Token 860: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -4.723352049040841e-06
    2. '"' → logprob: -13.000004768371582
    3. '(' → logprob: -13.000004768371582
    4. '('' → logprob: -16.750003814697266
    5. '"No' → logprob: -17.125003814697266
    6. '(
' → logprob: -17.375003814697266
    7. 'print' → logprob: -18.375003814697266
    8. 'Yes' → logprob: -19.125003814697266
    9. 'No' → logprob: -20.000003814697266
    10. '   ' → logprob: -20.125003814697266

Token 861: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0002979240380227566
    2. 'No' → logprob: -8.250297546386719
    3. '"' → logprob: -10.250297546386719
    4. '"No' → logprob: -13.875297546386719
    5. '("' → logprob: -16.12529754638672
    6. '“Yes' → logprob: -16.87529754638672
    7. ' Yes' → logprob: -17.12529754638672
    8. 'Oui' → logprob: -17.75029754638672
    9. 'YES' → logprob: -19.87529754638672
    10. '```' → logprob: -20.50029754638672

Token 862: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5258491039276123
    2. ')' → logprob: -1.4008491039276123
    3. '")' → logprob: -1.9008491039276123
    4. '()' → logprob: -4.900849342346191
    5. 'print' → logprob: -6.275849342346191
    6. '"' → logprob: -6.525849342346191
    7. '```' → logprob: -6.650849342346191
    8. ')
' → logprob: -7.650849342346191
    9. '<|end|>' → logprob: -9.400849342346191
    10. '")
' → logprob: -9.525849342346191

Token 863: ' pour' (ID: 1930)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.48718681931495667
    2. '   ' → logprob: -1.2371867895126343
    3. '<|end|>' → logprob: -2.737186908721924
    4. 'print' → logprob: -4.362186908721924
    5. '    
' → logprob: -5.237186908721924
    6. '()' → logprob: -5.862186908721924
    7. '(' → logprob: -5.987186908721924
    8. '  
' → logprob: -6.487186908721924
    9. '
' → logprob: -6.487186908721924
    10. '``' → logprob: -6.987186908721924

Token 864: ' ind' (ID: 1383)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4130689203739166
    2. 'print' → logprob: -1.5380688905715942
    3. 'Yes' → logprob: -3.413069009780884
    4. '   ' → logprob: -3.913069009780884
    5. '(n' → logprob: -4.038068771362305
    6. '(True' → logprob: -4.538068771362305
    7. '<|end|>' → logprob: -4.538068771362305
    8. 'True' → logprob: -5.038068771362305
    9. '("' → logprob: -5.163068771362305
    10. '")' → logprob: -5.288068771362305

Token 865: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.00036810929304920137
    2. 'ique' → logprob: -8.125368118286133
    3. 'iqu' → logprob: -9.875368118286133
    4. 'iqué' → logprob: -11.375368118286133
    5. 'icate' → logprob: -13.125368118286133
    6. 'i' → logprob: -13.500368118286133
    7. 'iquant' → logprob: -13.625368118286133
    8. 'iker' → logprob: -13.750368118286133
    9. 'iq' → logprob: -13.875368118286133
    10. '"' → logprob: -14.000368118286133

Token 866: ' que' (ID: 661)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0010619866661727428
    2. '(' → logprob: -6.876061916351318
    3. '()' → logprob: -11.376062393188477
    4. '('' → logprob: -11.876062393188477
    5. '(
' → logprob: -12.126062393188477
    6. '"' → logprob: -12.876062393188477
    7. '```' → logprob: -14.501062393188477
    8. ')' → logprob: -15.001062393188477
    9. '("")' → logprob: -15.001062393188477
    10. '(n' → logprob: -15.126062393188477

Token 867: ' la' (ID: 557)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5744264721870422
    2. 'n' → logprob: -1.6994264125823975
    3. 'print' → logprob: -2.0744264125823975
    4. 'la' → logprob: -3.5744264125823975
    5. ' True' → logprob: -3.9494264125823975
    6. '"' → logprob: -4.324426651000977
    7. '(n' → logprob: -4.449426651000977
    8. '(True' → logprob: -4.449426651000977
    9. ' n' → logprob: -4.574426651000977
    10. ' la' → logprob: -4.574426651000977

Token 868: ' solution' (ID: 7578)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.5512497425079346
    2. ' condition' → logprob: -1.4262497425079346
    3. 'print' → logprob: -1.9262497425079346
    4. 'n' → logprob: -4.1762495040893555
    5. '```' → logprob: -5.0512495040893555
    6. ' code' → logprob: -5.4262495040893555
    7. ' print' → logprob: -6.1762495040893555
    8. 'code' → logprob: -6.3012495040893555
    9. ' n' → logprob: -6.5512495040893555
    10. 'user' → logprob: -6.8012495040893555

Token 869: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8684592247009277
    2. 'print' → logprob: -0.8684592247009277
    3. '("' → logprob: -2.4934592247009277
    4. '"' → logprob: -3.3684592247009277
    5. ':' → logprob: -4.743459224700928
    6. '```' → logprob: -4.993459224700928
    7. ' est' → logprob: -5.118459224700928
    8. 'est' → logprob: -5.618459224700928
    9. '()' → logprob: -5.743459224700928
    10. '(' → logprob: -5.743459224700928

Token 870: ' possible' (ID: 4149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25317275524139404
    2. 'Yes' → logprob: -2.2531728744506836
    3. 'possible' → logprob: -2.2531728744506836
    4. 'valid' → logprob: -5.503172874450684
    5. '```' → logprob: -5.753172874450684
    6. 'Oui' → logprob: -6.128172874450684
    7. 'oui' → logprob: -6.378172874450684
    8. '"' → logprob: -6.878172874450684
    9. 'affirm' → logprob: -8.253172874450684
    10. 'correct' → logprob: -8.378172874450684

Token 871: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8679577708244324
    2. '   ' → logprob: -1.2429578304290771
    3. 'print' → logprob: -1.2429578304290771
    4. 'Yes' → logprob: -6.617957592010498
    5. '``' → logprob: -6.867957592010498
    6. '
' → logprob: -8.242958068847656
    7. '    
' → logprob: -8.742958068847656
    8. ' print' → logprob: -8.742958068847656
    9. '\n' → logprob: -9.992958068847656
    10. '(print' → logprob: -10.242958068847656

Token 872: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5461845397949219
    2. '   ' → logprob: -1.0461845397949219
    3. '```' → logprob: -2.671184539794922
    4. '``' → logprob: -8.796184539794922
    5. ' print' → logprob: -9.171184539794922
    6. 'Yes' → logprob: -9.671184539794922
    7. '    
' → logprob: -10.296184539794922
    8. '
' → logprob: -10.921184539794922
    9. '(print' → logprob: -12.046184539794922
    10. 'Print' → logprob: -12.171184539794922

Token 873: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.36574100604048e-06
    2. 'Yes' → logprob: -12.500004768371582
    3. ' print' → logprob: -14.875004768371582
    4. '```' → logprob: -15.875004768371582
    5. '   ' → logprob: -16.750003814697266
    6. 'Print' → logprob: -20.250003814697266
    7. '``' → logprob: -20.750003814697266
    8. '	print' → logprob: -21.625003814697266
    9. ' Yes' → logprob: -21.875003814697266
    10. '(print' → logprob: -22.500003814697266

Token 874: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.50001049041748
    3. '('' → logprob: -18.625009536743164
    4. '("("' → logprob: -20.500009536743164
    5. '(
' → logprob: -21.750009536743164
    6. '()' → logprob: -22.500009536743164
    7. '("")' → logprob: -22.625009536743164
    8. ' ("' → logprob: -22.625009536743164
    9. '"' → logprob: -23.125009536743164
    10. '("""' → logprob: -23.750009536743164

Token 875: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.0564331205387134e-05
    2. '"' → logprob: -11.50001049041748
    3. ' Yes' → logprob: -15.25001049041748
    4. 'Oui' → logprob: -16.125011444091797
    5. '“Yes' → logprob: -17.750011444091797
    6. 'No' → logprob: -18.125011444091797
    7. 'YES' → logprob: -18.125011444091797
    8. '("' → logprob: -19.250011444091797
    9. '")' → logprob: -19.250011444091797
    10. '.Yes' → logprob: -19.375011444091797

Token 876: '")
' (ID: 1896)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6052640080451965
    2. ')' → logprob: -0.8552640080451965
    3. ')
' → logprob: -4.355264186859131
    4. '()' → logprob: -4.855264186859131
    5. '")' → logprob: -5.105264186859131
    6. '```' → logprob: -7.480264186859131
    7. '()
' → logprob: -8.355263710021973
    8. '
' → logprob: -8.355263710021973
    9. '(n' → logprob: -8.355263710021973
    10. 'print' → logprob: -8.605263710021973

Token 877: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13009412586688995
    2. '   ' → logprob: -2.130094051361084
    3. 'for' → logprob: -6.130094051361084
    4. '```' → logprob: -7.130094051361084
    5. ' print' → logprob: -9.005094528198242
    6. '``' → logprob: -11.255094528198242
    7. ' for' → logprob: -11.505094528198242
    8. 'n' → logprob: -11.505094528198242
    9. '(' → logprob: -11.755094528198242
    10. '       ' → logprob: -11.880094528198242

Token 878: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008658303879201412
    2. 'for' → logprob: -4.758658409118652
    3. '   ' → logprob: -10.258658409118652
    4. '```' → logprob: -12.758658409118652
    5. 'n' → logprob: -13.258658409118652
    6. ' print' → logprob: -13.758658409118652
    7. '1' → logprob: -13.883658409118652
    8. 'i' → logprob: -14.008658409118652
    9. '#' (adapté à ' #') → logprob: -14.508658409118652
    10. '2' → logprob: -15.258658409118652

Token 879: ' Im' (ID: 3133)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004089916590601206
    2. 'for' → logprob: -5.504089832305908
    3. '   ' → logprob: -12.629090309143066
    4. '```' → logprob: -12.879090309143066
    5. 'i' → logprob: -13.129090309143066
    6. 'a' → logprob: -14.129090309143066
    7. '#' → logprob: -14.254090309143066
    8. ' print' → logprob: -14.629090309143066
    9. 'start' → logprob: -15.004090309143066
    10. 'first' → logprob: -15.129090309143066

Token 880: 'primer' (ID: 55821)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.00040695868665352464
    2. 'for' → logprob: -8.750407218933105
    3. '   ' → logprob: -9.375407218933105
    4. 'print' → logprob: -10.125407218933105
    5. 'p' → logprob: -10.500407218933105
    6. '
' → logprob: -10.750407218933105
    7. 'range' → logprob: -11.250407218933105
    8. '#' → logprob: -11.250407218933105
    9. 'press' → logprob: -11.250407218933105
    10. 'prime' → logprob: -11.625407218933105

Token 881: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028147496283054352
    2. '(n' → logprob: -3.9031474590301514
    3. '1' → logprob: -4.9031476974487305
    4. '(i' → logprob: -9.02814769744873
    5. 'n' → logprob: -10.77814769744873
    6. '((' → logprob: -12.02814769744873
    7. '(*' → logprob: -13.27814769744873
    8. '("' → logprob: -13.52814769744873
    9. '2' → logprob: -14.52814769744873
    10. '(
' → logprob: -14.77814769744873

Token 882: ' mêmes' (ID: 71634)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04371318593621254
    2. '(' → logprob: -3.918713092803955
    3. '(n' → logprob: -4.543713092803955
    4. 'n' → logprob: -4.918713092803955
    5. 'i' → logprob: -5.543713092803955
    6. '(i' → logprob: -7.293713092803955
    7. 'print' → logprob: -8.168713569641113
    8. '2' → logprob: -9.918713569641113
    9. 'pairs' → logprob: -12.418713569641113
    10. 'range' → logprob: -12.543713569641113

Token 883: ' premiers' (ID: 59140)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026348605751991272
    2. '1' → logprob: -4.77634859085083
    3. '(n' → logprob: -5.02634859085083
    4. '(i' → logprob: -5.52634859085083
    5. 'pairs' → logprob: -5.65134859085083
    6. 'print' → logprob: -6.02634859085083
    7. 'n' → logprob: -7.27634859085083
    8. 'i' → logprob: -8.776349067687988
    9. '("' → logprob: -10.151349067687988
    10. '(p' → logprob: -10.776349067687988

Token 884: ' liens' (ID: 78582)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9907408356666565
    2. '5' → logprob: -1.4907407760620117
    3. '4' → logprob: -1.7407407760620117
    4. 'n' → logprob: -2.6157407760620117
    5. 'print' → logprob: -2.8657407760620117
    6. '2' → logprob: -3.3657407760620117
    7. '(' → logprob: -3.6157407760620117
    8. 'i' → logprob: -4.490740776062012
    9. '1' → logprob: -4.740740776062012
    10. '(n' → logprob: -4.990740776062012

Token 885: ' fixes' (ID: 60095)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011868205183418468
    2. 'print' → logprob: -9.250118255615234
    3. '1' → logprob: -11.375118255615234
    4. '   ' → logprob: -12.250118255615234
    5. '()' → logprob: -13.125118255615234
    6. ' (' → logprob: -13.125118255615234
    7. '```' → logprob: -14.125118255615234
    8. '(print' → logprob: -14.500118255615234
    9. 'for' → logprob: -15.625118255615234
    10. '       ' → logprob: -16.000118255615234

Token 886: ' que' (ID: 661)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4766692817211151
    2. 'print' → logprob: -0.9766693115234375
    3. '1' → logprob: -5.9766693115234375
    4. '(print' → logprob: -10.976669311523438
    5. '```' → logprob: -11.476669311523438
    6. '   ' → logprob: -11.601669311523438
    7. ' print' → logprob: -11.601669311523438
    8. '()' → logprob: -13.601669311523438
    9. '2' → logprob: -13.851669311523438
    10. '7' → logprob: -14.226669311523438

Token 887: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44936108589172363
    2. 'print' → logprob: -1.6993610858917236
    3. '1' → logprob: -1.9493610858917236
    4. 'range' → logprob: -4.4493608474731445
    5. 'for' → logprob: -4.5743608474731445
    6. '   ' → logprob: -4.8243608474731445
    7. '(n' → logprob: -5.6993608474731445
    8. 'n' → logprob: -6.8243608474731445
    9. ' (' → logprob: -7.5743608474731445
    10. '(i' → logprob: -8.074360847473145

Token 888: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11037148535251617
    2. 'range' → logprob: -2.6103715896606445
    3. '1' → logprob: -4.6103715896606445
    4. '2' → logprob: -5.3603715896606445
    5. 'la' → logprob: -5.7353715896606445
    6. '(' → logprob: -5.8603715896606445
    7. '   ' → logprob: -5.9853715896606445
    8. 'for' → logprob: -6.3603715896606445
    9. 'le' → logprob: -6.4853715896606445
    10. '4' → logprob: -7.1103715896606445

Token 889: ' cas' (ID: 2108)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3393348455429077
    2. 'if' → logprob: -1.4643348455429077
    3. 'else' → logprob: -1.8393348455429077
    4. 'for' → logprob: -1.9643348455429077
    5. 'range' → logprob: -2.3393349647521973
    6. '```' → logprob: -3.5893349647521973
    7. 'code' → logprob: -3.8393349647521973
    8. 'elif' → logprob: -3.8393349647521973
    9. 'n' → logprob: -3.9643349647521973
    10. 'first' → logprob: -4.964334964752197

Token 890: ' pair' (ID: 10610)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027386622969061136
    2. '1' → logprob: -6.1277384757995605
    3. '   ' → logprob: -8.252738952636719
    4. 'for' → logprob: -9.002738952636719
    5. '(n' → logprob: -9.377738952636719
    6. 'print' → logprob: -9.752738952636719
    7. '```' → logprob: -11.627738952636719
    8. 'n' → logprob: -12.252738952636719
    9. 'range' → logprob: -12.877738952636719
    10. '3' → logprob: -13.002738952636719

Token 891: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006075148470699787
    2. '   ' → logprob: -5.256075382232666
    3. '```' → logprob: -7.256075382232666
    4. '(' → logprob: -10.006074905395508
    5. '()
' → logprob: -10.381074905395508
    6. ' print' → logprob: -10.756074905395508
    7. '``' → logprob: -11.256074905395508
    8. '()' → logprob: -11.381074905395508
    9. '(print' → logprob: -11.881074905395508
    10. '
' → logprob: -12.631074905395508

Token 892: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.627176768844947e-05
    2. '   ' → logprob: -10.000096321105957
    3. '```' → logprob: -10.250096321105957
    4. '(' → logprob: -12.000096321105957
    5. ' print' → logprob: -12.125096321105957
    6. '(print' → logprob: -13.250096321105957
    7. '``' → logprob: -13.875096321105957
    8. '()
' → logprob: -14.375096321105957
    9. '()' → logprob: -15.000096321105957
    10. '(
' → logprob: -16.25009536743164

Token 893: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.625
    3. '(' → logprob: -16.0
    4. '(print' → logprob: -16.875
    5. '```' → logprob: -18.125
    6. '1' → logprob: -18.375
    7. '   ' → logprob: -19.875
    8. '	print' → logprob: -21.75
    9. 'for' → logprob: -21.875
    10. '.print' → logprob: -22.0

Token 894: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004882152716163546
    2. '1' → logprob: -7.62548828125
    3. '("' → logprob: -16.25048828125
    4. ' (' → logprob: -17.62548828125
    5. ' ' → logprob: -18.75048828125
    6. '((' → logprob: -18.87548828125
    7. '()' → logprob: -19.37548828125
    8. '(
' → logprob: -19.37548828125
    9. '3' → logprob: -19.75048828125
    10. '4' → logprob: -19.87548828125

Token 895: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.875021934509277
    3. ' ' → logprob: -12.875021934509277
    4. '"' → logprob: -15.625021934509277
    5. '   ' → logprob: -15.750021934509277
    6. 'n' → logprob: -16.87502098083496
    7. '2' → logprob: -17.75002098083496
    8. ')' → logprob: -18.00002098083496
    9. '`' → logprob: -18.00002098083496
    10. '0' → logprob: -18.12502098083496

Token 896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015169414109550416
    2. ' ,' → logprob: -9.375151634216309
    3. '2' → logprob: -9.625151634216309
    4. ')' → logprob: -15.375151634216309
    5. '   ' → logprob: -15.375151634216309
    6. ',
' → logprob: -15.625151634216309
    7. ' ' → logprob: -16.000152587890625
    8. '1' → logprob: -16.625152587890625
    9. '```' → logprob: -18.000152587890625
    10. '  ' → logprob: -19.000152587890625

Token 897: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.125009536743164
    4. '3' → logprob: -17.125009536743164
    5. 'n' → logprob: -17.250009536743164
    6. '２' → logprob: -17.937509536743164
    7. '۲' → logprob: -18.125009536743164
    8. '  ' → logprob: -18.250009536743164
    9. ')' → logprob: -18.875009536743164
    10. '```' → logprob: -19.125009536743164

Token 898: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0087516784551553e-05
    2. ' ' → logprob: -11.62501049041748
    3. '3' → logprob: -14.50001049041748
    4. 'n' → logprob: -14.87501049041748
    5. '   ' → logprob: -16.187509536743164
    6. '２' → logprob: -17.125009536743164
    7. '۲' → logprob: -17.187509536743164
    8. '  ' → logprob: -17.937509536743164
    9. '```' → logprob: -18.125009536743164
    10. '(' → logprob: -18.312509536743164

Token 899: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048801738768815994
    2. ')' → logprob: -3.0488016605377197
    3. '   ' → logprob: -8.92380142211914
    4. 'print' → logprob: -9.67380142211914
    5. ')
' → logprob: -12.04880142211914
    6. '``' → logprob: -12.42380142211914
    7. '```' → logprob: -12.54880142211914
    8. ' )
' → logprob: -12.67380142211914
    9. ' ' → logprob: -14.67380142211914
    10. ',' → logprob: -14.92380142211914

Token 900: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014302362687885761
    2. '```' → logprob: -6.876430034637451
    3. '   ' → logprob: -8.37643051147461
    4. ' print' → logprob: -8.75143051147461
    5. '``' → logprob: -12.37643051147461
    6. '(print' → logprob: -13.12643051147461
    7. '	print' → logprob: -13.25143051147461
    8. '.print' → logprob: -14.75143051147461
    9. '    
' → logprob: -15.87643051147461
    10. '<|end|>' → logprob: -16.50143051147461

Token 901: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.500000953674316
    3. ' print' → logprob: -15.125000953674316
    4. '   ' → logprob: -17.875
    5. '2' → logprob: -18.125
    6. '(print' → logprob: -19.25
    7. '	print' → logprob: -20.0
    8. '.print' → logprob: -20.0
    9. '``' → logprob: -20.375
    10. '3' → logprob: -21.25

Token 902: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003212888026610017
    2. '(' → logprob: -5.753212928771973
    3. ' ' → logprob: -11.128212928771973
    4. '3' → logprob: -12.003212928771973
    5. '   ' → logprob: -12.128212928771973
    6. '1' → logprob: -12.253212928771973
    7. 'n' → logprob: -13.378212928771973
    8. '(n' → logprob: -13.628212928771973
    9. ' (' → logprob: -14.003212928771973
    10. '```' → logprob: -16.003211975097656

Token 903: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.632542913896032e-05
    2. '1' → logprob: -10.750046730041504
    3. '3' → logprob: -11.500046730041504
    4. 'n' → logprob: -11.875046730041504
    5. '(' → logprob: -12.000046730041504
    6. ' ' → logprob: -13.875046730041504
    7. '   ' → logprob: -15.687546730041504
    8. '(n' → logprob: -15.687546730041504
    9. '```' → logprob: -16.750045776367188
    10. '２' → logprob: -17.312545776367188

Token 904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002925183391198516
    2. '3' → logprob: -5.877925395965576
    3. ' ,' → logprob: -9.127924919128418
    4. '   ' → logprob: -11.752924919128418
    5. '```' → logprob: -13.002924919128418
    6. '`,' → logprob: -14.252924919128418
    7. ' ' → logprob: -15.002924919128418
    8. '',' → logprob: -16.127925872802734
    9. ',n' → logprob: -16.127925872802734
    10. '``' → logprob: -16.502925872802734

Token 905: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003775264194700867
    2. ' ' → logprob: -8.000377655029297
    3. 'n' → logprob: -10.125377655029297
    4. '1' → logprob: -13.875377655029297
    5. '4' → logprob: -14.250377655029297
    6. ' n' → logprob: -15.250377655029297
    7. '(' → logprob: -16.375377655029297
    8. '(n' → logprob: -16.937877655029297
    9. '   ' → logprob: -17.437877655029297
    10. '2' → logprob: -17.812877655029297

Token 906: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.227250610711053e-05
    2. 'n' → logprob: -10.125041961669922
    3. ' ' → logprob: -13.875041961669922
    4. '1' → logprob: -14.625041961669922
    5. '(' → logprob: -15.125041961669922
    6. '(n' → logprob: -15.500041961669922
    7. '4' → logprob: -15.500041961669922
    8. '2' → logprob: -17.625041961669922
    9. '۳' → logprob: -18.375041961669922
    10. ' n' → logprob: -18.500041961669922

Token 907: ')
' (ID: 446)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4194493293762207
    2. ')' → logprob: -1.9194493293762207
    3. ')
' → logprob: -2.0444493293762207
    4. '   ' → logprob: -2.7944493293762207
    5. '```' → logprob: -5.669449329376221
    6. '``' → logprob: -6.919449329376221
    7. '
' → logprob: -8.169448852539062
    8. ' print' → logprob: -8.294448852539062
    9. '    
' → logprob: -9.294448852539062
    10. '(print' → logprob: -9.794448852539062

Token 908: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.674858301877975e-05
    2. '```' → logprob: -9.500096321105957
    3. '   ' → logprob: -10.875096321105957
    4. ' print' → logprob: -13.000096321105957
    5. '``' → logprob: -15.000096321105957
    6. '	print' → logprob: -15.500096321105957
    7. '(print' → logprob: -17.500097274780273
    8. ' ' → logprob: -18.750097274780273
    9. '.print' → logprob: -19.000097274780273
    10. 'for' → logprob: -19.375097274780273

Token 909: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.000000953674316
    3. ' print' → logprob: -16.375001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '``' → logprob: -18.750001907348633
    6. '(print' → logprob: -20.250001907348633
    7. '	print' → logprob: -20.375001907348633
    8. '.print' → logprob: -21.875001907348633
    9. 'prints' → logprob: -21.875001907348633
    10. '#print' → logprob: -22.250001907348633

Token 910: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014169389382004738
    2. '3' → logprob: -4.264169216156006
    3. 'print' → logprob: -13.014169692993164
    4. ' (' → logprob: -13.389169692993164
    5. '   ' → logprob: -14.014169692993164
    6. ' ' → logprob: -14.514169692993164
    7. '2' → logprob: -15.264169692993164
    8. '(n' → logprob: -15.264169692993164
    9. '1' → logprob: -15.389169692993164
    10. '    
' → logprob: -16.764169692993164

Token 911: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0014971260679885745
    2. '(' → logprob: -6.626497268676758
    3. '1' → logprob: -9.251497268676758
    4. '2' → logprob: -10.126497268676758
    5. '(n' → logprob: -10.751497268676758
    6. 'n' → logprob: -11.626497268676758
    7. ' ' → logprob: -12.751497268676758
    8. '4' → logprob: -13.626497268676758
    9. ' (' → logprob: -15.376497268676758
    10. 'print' → logprob: -15.376497268676758

Token 912: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00406474806368351
    2. 'n' → logprob: -6.504064559936523
    3. ',n' → logprob: -6.629064559936523
    4. ' ,' → logprob: -6.879064559936523
    5. '4' → logprob: -8.879064559936523
    6. ' n' → logprob: -9.754064559936523
    7. '(n' → logprob: -12.754064559936523
    8. '   ' → logprob: -13.504064559936523
    9. ')' → logprob: -13.754064559936523
    10. '`,' → logprob: -14.004064559936523

Token 913: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012163586914539337
    2. '2' → logprob: -4.7621636390686035
    3. '4' → logprob: -5.7621636390686035
    4. '1' → logprob: -8.637163162231445
    5. '(n' → logprob: -9.137163162231445
    6. ' n' → logprob: -10.012163162231445
    7. '3' → logprob: -10.137163162231445
    8. '(' → logprob: -10.762163162231445
    9. '   ' → logprob: -12.762163162231445
    10. '5' → logprob: -13.387163162231445

Token 914: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004742091987282038
    2. ' +' → logprob: -5.50474214553833
    3. '4' → logprob: -7.37974214553833
    4. '+,' → logprob: -11.254741668701172
    5. '   ' → logprob: -12.004741668701172
    6. '+
' → logprob: -12.254741668701172
    7. ',' → logprob: -13.129741668701172
    8. 'plus' → logprob: -13.129741668701172
    9. ' ' → logprob: -13.254741668701172
    10. '-' → logprob: -13.254741668701172

Token 915: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.448370838072151e-05
    2. '2' → logprob: -9.375094413757324
    3. ' ' → logprob: -12.375094413757324
    4. '4' → logprob: -12.625094413757324
    5. '3' → logprob: -13.625094413757324
    6. '   ' → logprob: -15.187594413757324
    7. '
' → logprob: -15.937594413757324
    8. '```' → logprob: -16.43759536743164
    9. '(' → logprob: -17.00009536743164
    10. '5' → logprob: -17.18759536743164

Token 916: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009864849271252751
    2. '2' → logprob: -7.125986576080322
    3. '4' → logprob: -9.000986099243164
    4. '3' → logprob: -9.875986099243164
    5. '5' → logprob: -13.375986099243164
    6. '6' → logprob: -14.063486099243164
    7. '
' → logprob: -14.125986099243164
    8. '(' → logprob: -14.375986099243164
    9. '   ' → logprob: -14.375986099243164
    10. '```' → logprob: -14.938486099243164

Token 917: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1640474498271942
    2. ')
' → logprob: -1.9140474796295166
    3. 'print' → logprob: -5.6640472412109375
    4. '   ' → logprob: -8.039047241210938
    5. '```' → logprob: -11.164047241210938
    6. '``' → logprob: -11.664047241210938
    7. ')
' → logprob: -13.789047241210938
    8. ' print' → logprob: -15.539047241210938
    9. ' )' → logprob: -15.789047241210938
    10. '(print' → logprob: -15.914047241210938

Token 918: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001953133614733815
    2. '```' → logprob: -6.251953125
    3. '``' → logprob: -11.126953125
    4. '   ' → logprob: -11.876953125
    5. ' print' → logprob: -12.876953125
    6. '	print' → logprob: -16.251953125
    7. '(print' → logprob: -16.626953125
    8. '<|end|>' → logprob: -17.626953125
    9. '       ' → logprob: -18.126953125
    10. '.print' → logprob: -18.626953125

Token 919: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.165027217415627e-05
    2. '```' → logprob: -10.750021934509277
    3. ' print' → logprob: -16.25002098083496
    4. '``' → logprob: -16.75002098083496
    5. '   ' → logprob: -18.50002098083496
    6. '	print' → logprob: -20.50002098083496
    7. '(print' → logprob: -20.62502098083496
    8. '#print' → logprob: -21.62502098083496
    9. '.print' → logprob: -22.50002098083496
    10. 'printf' → logprob: -22.75002098083496

Token 920: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00034583290107548237
    2. 'n' → logprob: -8.375346183776855
    3. 'print' → logprob: -9.500346183776855
    4. '(' → logprob: -10.125346183776855
    5. '3' → logprob: -15.625346183776855
    6. '4' → logprob: -16.50034523010254
    7. '1' → logprob: -17.00034523010254
    8. ' (' → logprob: -17.50034523010254
    9. '((' → logprob: -17.50034523010254
    10. '(print' → logprob: -17.62534523010254

Token 921: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815205067396164
    2. ' +' → logprob: -4.018152236938477
    3. '+
' → logprob: -14.018152236938477
    4. '+,' → logprob: -14.268152236938477
    5. ',' → logprob: -15.518152236938477
    6. '   ' → logprob: -15.768152236938477
    7. '＋' → logprob: -16.018152236938477
    8. ' ' → logprob: -16.143152236938477
    9. '1' → logprob: -17.018152236938477
    10. '```' → logprob: -17.518152236938477

Token 922: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.750001907348633
    4. '2' → logprob: -18.125001907348633
    5. '+' → logprob: -18.625001907348633
    6. 'n' → logprob: -19.250001907348633
    7. '  ' → logprob: -19.625001907348633
    8. '0' → logprob: -19.750001907348633
    9. 'print' → logprob: -19.875001907348633
    10. '۱' → logprob: -20.000001907348633

Token 923: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. '2' → logprob: -11.000017166137695
    3. ' ' → logprob: -14.500017166137695
    4. '3' → logprob: -16.875017166137695
    5. 'print' → logprob: -18.125017166137695
    6. '   ' → logprob: -18.250017166137695
    7. '0' → logprob: -19.500017166137695
    8. '+' → logprob: -20.250017166137695
    9. '１' → logprob: -21.000017166137695
    10. '  ' → logprob: -21.000017166137695

Token 924: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0076653016731143
    2. ',n' → logprob: -4.882665157318115
    3. ' ,' → logprob: -10.632665634155273
    4. 'n' → logprob: -11.757665634155273
    5. ')' → logprob: -12.007665634155273
    6. '(n' → logprob: -12.007665634155273
    7. ',end' → logprob: -12.132665634155273
    8. ' n' → logprob: -13.132665634155273
    9. 'print' → logprob: -13.632665634155273
    10. ',num' → logprob: -13.882665634155273

Token 925: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003975416184403002
    2. '1' → logprob: -8.625397682189941
    3. '2' → logprob: -9.375397682189941
    4. '4' → logprob: -9.625397682189941
    5. '3' → logprob: -9.750397682189941
    6. ' n' → logprob: -11.875397682189941
    7. '(n' → logprob: -13.625397682189941
    8. '[n' → logprob: -15.750397682189941
    9. ' ' → logprob: -16.125396728515625
    10. '   ' → logprob: -16.625396728515625

Token 926: ' +' (ID: 659)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002896878868341446
    2. '+' → logprob: -5.877896785736084
    3. '```' → logprob: -9.877897262573242
    4. ' ' → logprob: -10.377897262573242
    5. ' +' → logprob: -12.502897262573242
    6. '`' → logprob: -12.877897262573242
    7. ',' → logprob: -14.002897262573242
    8. '+
' → logprob: -14.752897262573242
    9. '``' → logprob: -15.127897262573242
    10. '+,' → logprob: -15.127897262573242

Token 927: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '3' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '1' → logprob: -17.0
    5. '۲' → logprob: -17.125
    6. '   ' → logprob: -17.5625
    7. '```' → logprob: -18.0625
    8. '4' → logprob: -18.0625
    9. '２' → logprob: -18.6875
    10. '
' → logprob: -18.9375

Token 928: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '3' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '1' → logprob: -15.750001907348633
    5. 'print' → logprob: -16.000001907348633
    6. '4' → logprob: -16.812501907348633
    7. '0' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.625001907348633
    9. '۲' → logprob: -17.687501907348633
    10. 'n' → logprob: -17.812501907348633

Token 929: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25999388098716736
    2. ')
' → logprob: -2.1349937915802
    3. 'print' → logprob: -2.7599937915802
    4. '   ' → logprob: -3.1349937915802
    5. '```' → logprob: -5.759994029998779
    6. '``' → logprob: -7.884994029998779
    7. '<|end|>' → logprob: -9.009993553161621
    8. '
' → logprob: -10.009993553161621
    9. ')n' → logprob: -10.259993553161621
    10. '(print' → logprob: -10.509993553161621

Token 930: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006794355809688568
    2. '```' → logprob: -5.006794452667236
    3. '   ' → logprob: -10.256793975830078
    4. '``' → logprob: -10.381793975830078
    5. ' print' → logprob: -11.381793975830078
    6. '	print' → logprob: -14.006793975830078
    7. '(print' → logprob: -15.131793975830078
    8. '       ' → logprob: -16.006793975830078
    9. '
' → logprob: -16.381793975830078
    10. '#print' → logprob: -16.631793975830078

Token 931: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.023293538717553e-05
    2. '```' → logprob: -10.500030517578125
    3. ' print' → logprob: -13.125030517578125
    4. '``' → logprob: -14.875030517578125
    5. '   ' → logprob: -15.625030517578125
    6. '	print' → logprob: -17.125030517578125
    7. '(print' → logprob: -17.125030517578125
    8. 'prints' → logprob: -19.625030517578125
    9. '.print' → logprob: -19.875030517578125
    10. '#print' → logprob: -20.000030517578125

Token 932: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004690418136306107
    2. '(' → logprob: -7.750469207763672
    3. 'n' → logprob: -10.250469207763672
    4. '3' → logprob: -13.375469207763672
    5. '4' → logprob: -13.750469207763672
    6. 'print' → logprob: -15.250469207763672
    7. '2' → logprob: -16.125469207763672
    8. '1' → logprob: -18.500469207763672
    9. '((' → logprob: -20.000469207763672
    10. '5' → logprob: -20.125469207763672

Token 933: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021961480379105
    2. ' +' → logprob: -2.3502197265625
    3. '```' → logprob: -12.3502197265625
    4. '2' → logprob: -12.7252197265625
    5. '+n' → logprob: -13.3502197265625
    6. '＋' → logprob: -13.8502197265625
    7. ',' → logprob: -13.8502197265625
    8. 'n' → logprob: -14.2252197265625
    9. '1' → logprob: -15.7877197265625
    10. '`' → logprob: -15.7877197265625

Token 934: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1002441942691803
    2. '2' → logprob: -2.3502442836761475
    3. ' ' → logprob: -10.225244522094727
    4. '1' → logprob: -13.850244522094727
    5. '   ' → logprob: -16.225244522094727
    6. '  ' → logprob: -16.725244522094727
    7. '```' → logprob: -16.725244522094727
    8. '
' → logprob: -16.975244522094727
    9. '4' → logprob: -17.600244522094727
    10. 'print' → logprob: -17.912744522094727

Token 935: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.31326597929000854
    2. '2' → logprob: -1.3132660388946533
    3. ' ' → logprob: -12.813265800476074
    4. '1' → logprob: -13.813265800476074
    5. 'n' → logprob: -16.06326675415039
    6. 'print' → logprob: -16.18826675415039
    7. '   ' → logprob: -16.56326675415039
    8. '```' → logprob: -16.56326675415039
    9. '
' → logprob: -17.43826675415039
    10. '  ' → logprob: -17.43826675415039

Token 936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046869185753166676
    2. ',n' → logprob: -5.3796868324279785
    3. '(n' → logprob: -10.379687309265137
    4. ' ,' → logprob: -10.379687309265137
    5. ' n' → logprob: -13.379687309265137
    6. 'n' → logprob: -14.129687309265137
    7. '(' → logprob: -14.254687309265137
    8. '```' → logprob: -15.254687309265137
    9. ',p' → logprob: -15.379687309265137
    10. 'print' → logprob: -15.754687309265137

Token 937: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005018008523620665
    2. '2' → logprob: -8.50050163269043
    3. ' n' → logprob: -8.50050163269043
    4. '1' → logprob: -9.50050163269043
    5. '3' → logprob: -11.25050163269043
    6. '4' → logprob: -12.50050163269043
    7. '   ' → logprob: -13.12550163269043
    8. '(n' → logprob: -14.62550163269043
    9. ' ' → logprob: -14.87550163269043
    10. '	n' → logprob: -16.00050163269043

Token 938: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00761017482727766
    2. ' +' → logprob: -4.882610321044922
    3. '+
' → logprob: -13.382610321044922
    4. '   ' → logprob: -13.382610321044922
    5. ' ' → logprob: -15.132610321044922
    6. '＋' → logprob: -15.257610321044922
    7. '```' → logprob: -16.257610321044922
    8. '3' → logprob: -16.257610321044922
    9. '++' → logprob: -16.757610321044922
    10. ' plus' → logprob: -16.882610321044922

Token 939: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '1' → logprob: -16.375001907348633
    4. '۳' → logprob: -19.500001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '  ' → logprob: -20.625001907348633
    7. '৩' → logprob: -21.375001907348633
    8. '३' → logprob: -21.625001907348633
    9. 'n' → logprob: -21.750001907348633
    10. '<|end|>' → logprob: -21.750001907348633

Token 940: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.750001907348633
    3. '1' → logprob: -14.000001907348633
    4. 'n' → logprob: -16.375001907348633
    5. '(n' → logprob: -19.625001907348633
    6. '۳' → logprob: -19.875001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '(' → logprob: -20.250001907348633
    9. '2' → logprob: -20.375001907348633
    10. '+' → logprob: -21.750001907348633

Token 941: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41775795817375183
    2. 'print' → logprob: -1.2927579879760742
    3. 'for' → logprob: -3.792757987976074
    4. '   ' → logprob: -3.917757987976074
    5. ')
' → logprob: -4.167757987976074
    6. '```' → logprob: -4.917757987976074
    7. '(n' → logprob: -7.417757987976074
    8. '<|end|>' → logprob: -8.167757987976074
    9. '
' → logprob: -8.542757987976074
    10. '``' → logprob: -8.542757987976074

Token 942: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04155820980668068
    2. '   ' → logprob: -3.541558265686035
    3. '```' → logprob: -4.541558265686035
    4. ' for' → logprob: -7.041558265686035
    5. 'print' → logprob: -8.791558265686035
    6. '``' → logprob: -10.291558265686035
    7. '	for' → logprob: -11.166558265686035
    8. '    
' → logprob: -12.416558265686035
    9. '
' → logprob: -13.416558265686035
    10. '       ' → logprob: -15.166558265686035

Token 943: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002776585752144456
    2. 'print' → logprob: -6.252776622772217
    3. '```' → logprob: -7.252776622772217
    4. ' for' → logprob: -9.002776145935059
    5. '   ' → logprob: -11.127776145935059
    6. '``' → logprob: -14.127776145935059
    7. '    
' → logprob: -15.002776145935059
    8. '
' → logprob: -15.252776145935059
    9. '(' → logprob: -16.502777099609375
    10. ' print' → logprob: -16.627777099609375

Token 944: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3425219549390022e-05
    2. '```' → logprob: -11.25001335144043
    3. ' for' → logprob: -15.37501335144043
    4. 'print' → logprob: -16.37501335144043
    5. '   ' → logprob: -16.75001335144043
    6. '``' → logprob: -21.00001335144043
    7. '	for' → logprob: -21.62501335144043
    8. '
' → logprob: -22.62501335144043
    9. '    
' → logprob: -22.87501335144043
    10. 'range' → logprob: -23.87501335144043

Token 945: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038532886654138565
    2. 'r' → logprob: -3.2885329723358154
    3. 'or' → logprob: -7.788532733917236
    4. ' for' → logprob: -10.413533210754395
    5. 'c' → logprob: -10.538533210754395
    6. 'range' → logprob: -11.538533210754395
    7. 'ck' → logprob: -12.288533210754395
    8. 'f' → logprob: -12.788533210754395
    9. 'print' → logprob: -14.163533210754395
    10. 'ar' → logprob: -14.663533210754395

Token 946: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020413640595506877
    2. ' for' → logprob: -8.500204086303711
    3. '```' → logprob: -15.000204086303711
    4. 'from' → logprob: -15.500204086303711
    5. '   ' → logprob: -16.12520408630371
    6. 'in' → logprob: -17.62520408630371
    7. '(' → logprob: -17.87520408630371
    8. '	for' → logprob: -18.50020408630371
    9. '
' → logprob: -18.87520408630371
    10. 'range' → logprob: -19.00020408630371

Token 947: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0842989832162857
    2. 'for' → logprob: -2.584299087524414
    3. '4' → logprob: -5.959299087524414
    4. 'i' → logprob: -6.084299087524414
    5. ' range' → logprob: -7.834299087524414
    6. ' for' → logprob: -9.709299087524414
    7. '(' → logprob: -10.584299087524414
    8. '3' → logprob: -11.209299087524414
    9. '(i' → logprob: -11.584299087524414
    10. 'print' → logprob: -11.584299087524414

Token 948: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5807351469993591
    2. ' in' → logprob: -0.8307351469993591
    3. 'for' → logprob: -5.705735206604004
    4. ' en' → logprob: -7.580735206604004
    5. 'range' → logprob: -8.330735206604004
    6. 'from' → logprob: -8.455735206604004
    7. 'en' → logprob: -8.580735206604004
    8. ' for' → logprob: -8.955735206604004
    9. '(range' → logprob: -9.580735206604004
    10. '(' → logprob: -10.955735206604004

Token 949: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.2018246352672577
    2. 'range' → logprob: -1.70182466506958
    3. '(' → logprob: -8.076824188232422
    4. ' range' → logprob: -9.951824188232422
    5. '3' → logprob: -10.451824188232422
    6. '(range' → logprob: -11.326824188232422
    7. 'for' → logprob: -12.326824188232422
    8. '5' → logprob: -12.826824188232422
    9. ' ' → logprob: -13.826824188232422
    10. '```' → logprob: -13.826824188232422

Token 950: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.000194361709873192
    2. 'range' → logprob: -8.750194549560547
    3. '(' → logprob: -10.625194549560547
    4. '3' → logprob: -11.500194549560547
    5. '5' → logprob: -14.875194549560547
    6. ' range' → logprob: -15.375194549560547
    7. '```' → logprob: -15.625194549560547
    8. ' ' → logprob: -15.750194549560547
    9. '
' → logprob: -16.500194549560547
    10. '(range' → logprob: -16.875194549560547

Token 951: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005390756763517857
    2. 'to' → logprob: -5.505390644073486
    3. '```' → logprob: -7.005390644073486
    4. 'in' → logprob: -8.255391120910645
    5. 'for' → logprob: -10.130391120910645
    6. ' to' → logprob: -10.130391120910645
    7. ',to' → logprob: -11.005391120910645
    8. ',n' → logprob: -11.630391120910645
    9. ' in' → logprob: -11.630391120910645
    10. ' ,' → logprob: -11.755391120910645

Token 952: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006327360169962049
    2. ' n' → logprob: -7.3756327629089355
    3. '(n' → logprob: -12.125632286071777
    4. 'range' → logprob: -15.250632286071777
    5. '   ' → logprob: -15.750632286071777
    6. '```' → logprob: -16.125633239746094
    7. '	n' → logprob: -16.500633239746094
    8. ' (' → logprob: -16.625633239746094
    9. '2' → logprob: -16.875633239746094
    10. '(' → logprob: -17.250633239746094

Token 953: ' inclus' (ID: 11891)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14180748164653778
    2. '+' → logprob: -2.3918075561523438
    3. 'in' → logprob: -4.266807556152344
    4. '```' → logprob: -4.391807556152344
    5. 'for' → logprob: -4.891807556152344
    6. ':' → logprob: -6.391807556152344
    7. ' in' → logprob: -6.891807556152344
    8. '   ' → logprob: -7.016807556152344
    9. ' +' → logprob: -7.266807556152344
    10. ':
' → logprob: -7.266807556152344

Token 954: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6237953305244446
    2. 'in' → logprob: -0.9987953305244446
    3. ',' → logprob: -2.8737952709198
    4. '```' → logprob: -4.373795509338379
    5. '(' → logprob: -4.498795509338379
    6. '(range' → logprob: -4.873795509338379
    7. ' in' → logprob: -5.498795509338379
    8. 'range' → logprob: -6.123795509338379
    9. ' for' → logprob: -7.373795509338379
    10. '(in' → logprob: -8.123795509338379

Token 955: ' donc' (ID: 14206)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5464396476745605
    2. ' for' → logprob: -1.6714396476745605
    3. 'range' → logprob: -2.0464396476745605
    4. ' in' → logprob: -3.0464396476745605
    5. ' range' → logprob: -3.0464396476745605
    6. 'in' → logprob: -5.2964396476745605
    7. ' n' → logprob: -6.7964396476745605
    8. '   ' → logprob: -6.9214396476745605
    9. '```' → logprob: -7.1714396476745605
    10. 'n' → logprob: -7.1714396476745605

Token 956: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10833382606506348
    2. 'range' → logprob: -2.6083338260650635
    3. ' n' → logprob: -3.6083338260650635
    4. '(n' → logprob: -6.858333587646484
    5. ' range' → logprob: -7.108333587646484
    6. 'for' → logprob: -10.733333587646484
    7. '   ' → logprob: -11.483333587646484
    8. '```' → logprob: -11.733333587646484
    9. '(range' → logprob: -12.483333587646484
    10. ' for' → logprob: -13.483333587646484

Token 957: '4' (ID: 19)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1292511224746704
    2. 'range' → logprob: -2.129251003265381
    3. ' n' → logprob: -6.254251003265381
    4. ' range' → logprob: -7.879251003265381
    5. '(n' → logprob: -11.254251480102539
    6. '```' → logprob: -13.129251480102539
    7. '   ' → logprob: -13.504251480102539
    8. 'for' → logprob: -13.879251480102539
    9. 'i' → logprob: -14.379251480102539
    10. '	n' → logprob: -15.629251480102539

Token 958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007044489029794931
    2. ',n' → logprob: -7.375704288482666
    3. ' ,' → logprob: -9.750704765319824
    4. '```' → logprob: -12.000704765319824
    5. 'n' → logprob: -12.375704765319824
    6. ',
' → logprob: -12.625704765319824
    7. 'in' → logprob: -14.000704765319824
    8. ')' → logprob: -14.000704765319824
    9. 'to' → logprob: -14.125704765319824
    10. '   ' → logprob: -14.125704765319824

Token 959: ' ...,' (ID: 126708)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02324652671813965
    2. ' n' → logprob: -3.7732465267181396
    3. '(n' → logprob: -14.398246765136719
    4. '   ' → logprob: -15.273246765136719
    5. '```' → logprob: -15.898246765136719
    6. '	n' → logprob: -16.77324676513672
    7. ')' → logprob: -17.77324676513672
    8. ' ' → logprob: -18.02324676513672
    9. 'range' → logprob: -18.02324676513672
    10. ',' → logprob: -18.39824676513672

Token 960: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019320894498378038
    2. ' n' → logprob: -6.251932144165039
    3. '   ' → logprob: -12.626932144165039
    4. '(n' → logprob: -15.876932144165039
    5. '```' → logprob: -16.25193214416504
    6. ' ' → logprob: -17.62693214416504
    7. '	n' → logprob: -18.12693214416504
    8. '``' → logprob: -19.12693214416504
    9. ' ' → logprob: -19.37693214416504
    10. '2' → logprob: -19.50193214416504

Token 961: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061972394585609436
    2. ' +' → logprob: -2.8119723796844482
    3. '+
' → logprob: -13.186972618103027
    4. '   ' → logprob: -13.811972618103027
    5. '):' → logprob: -14.311972618103027
    6. '):
' → logprob: -14.561972618103027
    7. '+n' → logprob: -15.061972618103027
    8. '```' → logprob: -15.686972618103027
    9. ' +
' → logprob: -16.06197166442871
    10. ')' → logprob: -16.18697166442871

Token 962: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06350801140069962
    2. 'in' → logprob: -3.8135080337524414
    3. ' for' → logprob: -4.563508033752441
    4. '(range' → logprob: -4.813508033752441
    5. 'range' → logprob: -4.938508033752441
    6. ':' → logprob: -5.438508033752441
    7. '```' → logprob: -5.688508033752441
    8. ' in' → logprob: -6.563508033752441
    9. '(' → logprob: -6.813508033752441
    10. ',' → logprob: -6.938508033752441

Token 963: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015181037597358227
    2. 'range' → logprob: -4.265181064605713
    3. 'in' → logprob: -7.890181064605713
    4. '```' → logprob: -8.015180587768555
    5. ' for' → logprob: -8.140180587768555
    6. '(range' → logprob: -11.265180587768555
    7. ' in' → logprob: -12.515180587768555
    8. ' range' → logprob: -13.140180587768555
    9. '(' → logprob: -13.390180587768555
    10. '``' → logprob: -15.265180587768555

Token 964: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11300374567508698
    2. ' i' → logprob: -2.238003730773926
    3. ' in' → logprob: -9.238003730773926
    4. 'in' → logprob: -9.613003730773926
    5. '4' → logprob: -11.863003730773926
    6. 'range' → logprob: -12.488003730773926
    7. ' ' → logprob: -12.863003730773926
    8. ' range' → logprob: -13.488003730773926
    9. '   ' → logprob: -13.738003730773926
    10. '	i' → logprob: -15.363003730773926

Token 965: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22542878985404968
    2. 'in' → logprob: -1.600428819656372
    3. ' ' → logprob: -12.600428581237793
    4. 'n' → logprob: -12.975428581237793
    5. ',' → logprob: -13.350428581237793
    6. 'range' → logprob: -13.475428581237793
    7. 'd' → logprob: -13.725428581237793
    8. 's' → logprob: -14.225428581237793
    9. 'import' → logprob: -14.225428581237793
    10. '	in' → logprob: -14.475428581237793

Token 966: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024758970830589533
    2. ' range' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.62747573852539
    4. ' ' → logprob: -16.87747573852539
    5. '(range' → logprob: -17.50247573852539
    6. '  ' → logprob: -17.62747573852539
    7. '	range' → logprob: -18.50247573852539
    8. '    ' → logprob: -19.12747573852539
    9. 'rang' → logprob: -20.12747573852539
    10. 'in' → logprob: -20.62747573852539

Token 967: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16022534668445587
    2. '4' → logprob: -1.9102253913879395
    3. ' (' → logprob: -15.035224914550781
    4. '   ' → logprob: -15.660224914550781
    5. '' → logprob: -15.910224914550781
    6. '(
' → logprob: -15.910224914550781
    7. ' ' → logprob: -16.03522491455078
    8. '```' → logprob: -16.03522491455078
    9. '۴' → logprob: -16.78522491455078
    10. ',' → logprob: -17.16022491455078

Token 968: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.875001907348633
    4. '(' → logprob: -18.500001907348633
    5. '' → logprob: -18.625001907348633
    6. 'n' → logprob: -18.750001907348633
    7. '۴' → logprob: -18.875001907348633
    8. '```' → logprob: -19.000001907348633
    9. '  ' → logprob: -19.875001907348633
    10. '４' → logprob: -20.000001907348633

Token 969: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034952821442857385
    2. ',n' → logprob: -8.000349998474121
    3. ' ,' → logprob: -11.375349998474121
    4. '   ' → logprob: -14.000349998474121
    5. 'n' → logprob: -14.375349998474121
    6. ',
' → logprob: -14.500349998474121
    7. '‌,' → logprob: -15.375349998474121
    8. ',i' → logprob: -15.750349998474121
    9. ',len' → logprob: -16.875349044799805
    10. ',N' → logprob: -17.250349044799805

Token 970: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.061054359131958e-06
    2. ' n' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.25000762939453
    4. '(n' → logprob: -17.50000762939453
    5. '	n' → logprob: -17.87500762939453
    6. '2' → logprob: -21.25000762939453
    7. '\' → logprob: -21.25000762939453
    8. ')n' → logprob: -21.75000762939453
    9. '```' → logprob: -21.87500762939453
    10. '<|end|>' → logprob: -22.12500762939453

Token 971: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029756393283605576
    2. ' +' → logprob: -3.5297563076019287
    3. '   ' → logprob: -12.904756546020508
    4. '+
' → logprob: -12.904756546020508
    5. '):' → logprob: -14.904756546020508
    6. '):
' → logprob: -15.029756546020508
    7. ' +
' → logprob: -16.529756546020508
    8. '+:' → logprob: -16.654756546020508
    9. '```' → logprob: -17.029756546020508
    10. '+n' → logprob: -17.154756546020508

Token 972: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014716439181938767
    2. '2' → logprob: -8.875146865844727
    3. '3' → logprob: -12.500146865844727
    4. ' ' → logprob: -12.750146865844727
    5. '4' → logprob: -14.500146865844727
    6. '   ' → logprob: -16.000146865844727
    7. '
' → logprob: -18.375146865844727
    8. '```' → logprob: -18.375146865844727
    9. '5' → logprob: -18.625146865844727
    10. '+' → logprob: -18.625146865844727

Token 973: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011129142512800172
    2. '2' → logprob: -9.12511157989502
    3. '3' → logprob: -13.75011157989502
    4. ' ' → logprob: -14.12511157989502
    5. '4' → logprob: -14.50011157989502
    6. '+' → logprob: -18.000110626220703
    7. '
' → logprob: -18.250110626220703
    8. '   ' → logprob: -18.375110626220703
    9. '```' → logprob: -18.437610626220703
    10. '１' → logprob: -19.062610626220703

Token 974: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3916094899177551
    2. '):
' → logprob: -1.1416094303131104
    3. ':' → logprob: -5.5166096687316895
    4. '   ' → logprob: -7.3916096687316895
    5. ':
' → logprob: -9.766609191894531
    6. ')' → logprob: -10.766609191894531
    7. '):
' → logprob: -11.891609191894531
    8. '       ' → logprob: -13.516609191894531
    9. '```' → logprob: -13.516609191894531
    10. '}:' → logprob: -14.266609191894531

Token 975: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01711011491715908
    2. 'print' → logprob: -4.267110347747803
    3. '       ' → logprob: -6.392110347747803
    4. '```' → logprob: -7.267110347747803
    5. ' print' → logprob: -7.517110347747803
    6. '	print' → logprob: -10.767109870910645
    7. '   ' → logprob: -13.142109870910645
    8. '``' → logprob: -13.142109870910645
    9. '(print' → logprob: -15.267109870910645
    10. ' ' → logprob: -15.767109870910645

Token 976: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02088763937354088
    2. '   ' → logprob: -4.270887851715088
    3. ' print' → logprob: -5.145887851715088
    4. '       ' → logprob: -7.145887851715088
    5. '	print' → logprob: -10.02088737487793
    6. '```' → logprob: -10.14588737487793
    7. ' ' → logprob: -12.39588737487793
    8. '(print' → logprob: -14.02088737487793
    9. '.print' → logprob: -14.89588737487793
    10. '``' → logprob: -15.27088737487793

Token 977: ' Im' (ID: 3133)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2352385965641588e-05
    2. ' print' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.625012397766113
    4. '       ' → logprob: -14.000012397766113
    5. '	print' → logprob: -16.750011444091797
    6. '```' → logprob: -17.750011444091797
    7. 'printf' → logprob: -20.125011444091797
    8. ' ' → logprob: -20.375011444091797
    9. '           ' → logprob: -20.625011444091797
    10. 'if' → logprob: -21.250011444091797

Token 978: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.08011332154273987
    2. 'print' → logprob: -2.580113410949707
    3. 'prim' → logprob: -7.580113410949707
    4. 'pr' → logprob: -7.580113410949707
    5. 'primer' → logprob: -9.580113410949707
    6. 'press' → logprob: -9.830113410949707
    7. 'port' → logprob: -10.580113410949707
    8. '#' → logprob: -11.580113410949707
    9. '```' → logprob: -12.080113410949707
    10. 'p' → logprob: -12.205113410949707

Token 979: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10013991594314575
    2. 'n' → logprob: -2.600139856338501
    3. 'print' → logprob: -3.975139856338501
    4. '1' → logprob: -6.97514009475708
    5. 'i' → logprob: -7.72514009475708
    6. '(' → logprob: -7.97514009475708
    7. '(i' → logprob: -7.97514009475708
    8. '3' → logprob: -8.975139617919922
    9. '2' → logprob: -10.850139617919922
    10. '   ' → logprob: -11.100139617919922

Token 980: ' paire' (ID: 148856)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1039978638291359
    2. 'print' → logprob: -2.4789979457855225
    3. '(n' → logprob: -4.478997707366943
    4. 'i' → logprob: -5.978997707366943
    5. '3' → logprob: -7.353997707366943
    6. '1' → logprob: -8.353998184204102
    7. '(i' → logprob: -9.603998184204102
    8. ' n' → logprob: -10.228998184204102
    9. ' print' → logprob: -10.728998184204102
    10. '4' → logprob: -10.853998184204102

Token 981: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11232049763202667
    2. '(i' → logprob: -2.3623204231262207
    3. 'n' → logprob: -5.237320423126221
    4. '(' → logprob: -5.612320423126221
    5. 'i' → logprob: -5.862320423126221
    6. 'print' → logprob: -8.737320899963379
    7. '1' → logprob: -9.987320899963379
    8. '4' → logprob: -11.987320899963379
    9. '(print' → logprob: -12.612320899963379
    10. '((' → logprob: -12.987320899963379

Token 982: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000457605579867959
    2. 'i' → logprob: -7.875457763671875
    3. ' n' → logprob: -10.750457763671875
    4. '(n' → logprob: -10.750457763671875
    5. '1' → logprob: -10.875457763671875
    6. 'print' → logprob: -12.250457763671875
    7. '4' → logprob: -12.375457763671875
    8. '3' → logprob: -12.375457763671875
    9. '   ' → logprob: -13.250457763671875
    10. '(i' → logprob: -16.000457763671875

Token 983: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009094370761886239
    2. ' ,' → logprob: -7.875909328460693
    3. ',n' → logprob: -8.000909805297852
    4. ',i' → logprob: -8.750909805297852
    5. 'i' → logprob: -11.250909805297852
    6. '1' → logprob: -11.500909805297852
    7. ',
' → logprob: -12.875909805297852
    8. '4' → logprob: -13.000909805297852
    9. '2' → logprob: -13.500909805297852
    10. '0' → logprob: -13.750909805297852

Token 984: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019470835104584694
    2. ' i' → logprob: -6.251946926116943
    3. 'n' → logprob: -11.001947402954102
    4. '   ' → logprob: -14.126947402954102
    5. '2' → logprob: -15.001947402954102
    6. ' n' → logprob: -15.626947402954102
    7. '	i' → logprob: -15.876947402954102
    8. ' ' → logprob: -16.2519474029541
    9. ',' → logprob: -16.3769474029541
    10. '       ' → logprob: -16.7519474029541

Token 985: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4894986785948277e-05
    2. ')
' → logprob: -10.125044822692871
    3. '       ' → logprob: -12.875044822692871
    4. ' )' → logprob: -13.750044822692871
    5. '   ' → logprob: -14.750044822692871
    6. ',' → logprob: -15.250044822692871
    7. '),' → logprob: -16.000045776367188
    8. '+' → logprob: -16.500045776367188
    9. ')`' → logprob: -16.625045776367188
    10. ')
' → logprob: -16.750045776367188

Token 986: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7213726043701172
    2. ' print' → logprob: -1.2213726043701172
    3. '       ' → logprob: -2.346372604370117
    4. '   ' → logprob: -2.971372604370117
    5. ')' → logprob: -3.971372604370117
    6. '<|end|>' → logprob: -4.096372604370117
    7. ' 
' → logprob: -4.721372604370117
    8. '    
' → logprob: -4.721372604370117
    9. '(print' → logprob: -5.721372604370117
    10. '        
' → logprob: -5.971372604370117

Token 987: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002614550176076591
    2. ' print' → logprob: -8.250261306762695
    3. '1' → logprob: -16.500261306762695
    4. '   ' → logprob: -16.625261306762695
    5. '       ' → logprob: -17.250261306762695
    6. '```' → logprob: -18.500261306762695
    7. '	print' → logprob: -20.375261306762695
    8. '(print' → logprob: -20.750261306762695
    9. '.print' → logprob: -21.000261306762695
    10. '(' → logprob: -21.125261306762695

Token 988: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0044610933400690556
    2. '(' → logprob: -5.504461288452148
    3. ' ' → logprob: -7.879461288452148
    4. ',' → logprob: -13.129461288452148
    5. ' (' → logprob: -14.004461288452148
    6. '"' → logprob: -15.504461288452148
    7. '```' → logprob: -15.879461288452148
    8. '
' → logprob: -16.00446128845215
    9. '(
' → logprob: -16.00446128845215
    10. 'i' → logprob: -16.00446128845215

Token 989: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'i' → logprob: -15.00001335144043
    4. '   ' → logprob: -16.37501335144043
    5. '```' → logprob: -17.12501335144043
    6. '`' → logprob: -17.50001335144043
    7. '"' → logprob: -17.62501335144043
    8. '(' → logprob: -17.87501335144043
    9. ',' → logprob: -18.50001335144043
    10. '  ' → logprob: -18.62501335144043

Token 990: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00114998291246593
    2. ',i' → logprob: -7.126150131225586
    3. ' ,' → logprob: -8.001150131225586
    4. ',
' → logprob: -12.376150131225586
    5. 'i' → logprob: -12.876150131225586
    6. ')' → logprob: -14.126150131225586
    7. '   ' → logprob: -14.501150131225586
    8. ',",' → logprob: -14.751150131225586
    9. ',n' → logprob: -14.876150131225586
    10. ' i' → logprob: -15.001150131225586

Token 991: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001234428636962548
    2. ' i' → logprob: -9.000123023986816
    3. '	i' → logprob: -18.500123977661133
    4. ')i' → logprob: -20.875123977661133
    5. '   ' → logprob: -21.375123977661133
    6. '<|end|>' → logprob: -22.375123977661133
    7. ')' → logprob: -22.625123977661133
    8. ' ' → logprob: -23.000123977661133
    9. '$i' → logprob: -23.000123977661133
    10. '[i' → logprob: -23.250123977661133

Token 992: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004908377304673195
    2. ')
' → logprob: -7.750490665435791
    3. '       ' → logprob: -10.50049114227295
    4. '   ' → logprob: -10.62549114227295
    5. ' )' → logprob: -12.00049114227295
    6. '+' → logprob: -14.62549114227295
    7. ')`' → logprob: -15.37549114227295
    8. ')
' → logprob: -15.62549114227295
    9. '))' → logprob: -15.75049114227295
    10. ' ' → logprob: -16.000490188598633

Token 993: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3971826434135437
    2. '<|end|>' → logprob: -1.8971827030181885
    3. '       ' → logprob: -2.0221827030181885
    4. ' if' → logprob: -4.772182464599609
    5. '    
' → logprob: -5.147182464599609
    6. '  
' → logprob: -5.147182464599609
    7. '
' → logprob: -5.397182464599609
    8. 'if' → logprob: -5.522182464599609
    9. '```' → logprob: -5.522182464599609
    10. ' ' → logprob: -5.647182464599609

Token 994: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47055816650390625
    2. '       ' → logprob: -1.0955581665039062
    3. ' if' → logprob: -3.3455581665039062
    4. '   ' → logprob: -5.720558166503906
    5. '#' (adapté à ' #') → logprob: -6.595558166503906
    6. '	if' → logprob: -7.595558166503906
    7. '	' → logprob: -7.970558166503906
    8. ' ' → logprob: -9.470558166503906
    9. '```' → logprob: -9.595558166503906
    10. '	   ' → logprob: -10.470558166503906

Token 995: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.327856630785391e-05
    2. ' if' → logprob: -9.875082969665527
    3. '   ' → logprob: -10.750082969665527
    4. 'print' → logprob: -11.625082969665527
    5. '```' → logprob: -14.875082969665527
    6. '	if' → logprob: -15.000082969665527
    7. '       ' → logprob: -15.375082969665527
    8. ' ' → logprob: -15.500082969665527
    9. 'for' → logprob: -15.875082969665527
    10. '  ' → logprob: -16.750083923339844

Token 996: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.03973323106765747
    2. 'if' → logprob: -3.2897331714630127
    3. 'ifiez' → logprob: -7.039733409881592
    4. 'ifier' → logprob: -8.039732933044434
    5. 'ife' → logprob: -8.289732933044434
    6. 'ify' → logprob: -8.914732933044434
    7. 'ifies' → logprob: -9.539732933044434
    8. 'ifi' → logprob: -11.164732933044434
    9. 'ificate' → logprob: -11.539732933044434
    10. 'ifié' → logprob: -12.914732933044434

Token 997: ' si' (ID: 1784)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07530853897333145
    2. 'if' → logprob: -3.2003085613250732
    3. ' i' → logprob: -3.9503085613250732
    4. '(i' → logprob: -4.825308322906494
    5. '   ' → logprob: -6.200308322906494
    6. ' if' → logprob: -6.325308322906494
    7. '(' → logprob: -7.950308322906494
    8. ' (' → logprob: -8.950308799743652
    9. ' ' → logprob: -9.200308799743652
    10. '       ' → logprob: -9.450308799743652

Token 998: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03368096798658371
    2. ' i' → logprob: -3.4086809158325195
    3. '   ' → logprob: -10.40868091583252
    4. '(i' → logprob: -12.90868091583252
    5. ' ' → logprob: -13.53368091583252
    6. '  ' → logprob: -15.03368091583252
    7. '	i' → logprob: -15.03368091583252
    8. ' (' → logprob: -15.53368091583252
    9. '       ' → logprob: -16.158681869506836
    10. '    ' → logprob: -16.283681869506836

Token 999: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22550225257873535
    2. ' %' → logprob: -1.6005022525787354
    3. ' ' → logprob: -9.475502014160156
    4. ')' → logprob: -12.100502014160156
    5. ' ' → logprob: -13.350502014160156
    6. '%
' → logprob: -14.100502014160156
    7. '%i' → logprob: -14.100502014160156
    8. ''' → logprob: -14.475502014160156
    9. ' %
' → logprob: -14.475502014160156
    10. '[' → logprob: -14.975502014160156

Token 1000: ' pair' (ID: 10610)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.13309535384178162
    2. 'pair' → logprob: -2.8830952644348145
    3. ' even' → logprob: -3.2580952644348145
    4. '%' → logprob: -4.2580952644348145
    5. 'odd' → logprob: -4.8830952644348145
    6. ' pair' → logprob: -5.7580952644348145
    7. 'i' → logprob: -5.8830952644348145
    8. ' odd' → logprob: -7.0080952644348145
    9. ' i' → logprob: -7.1330952644348145
    10. ' ' → logprob: -8.258095741271973

Token 1001: '
' (ID: 198)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.3982703685760498
    2. ' ==' → logprob: -1.6482703685760498
    3. ':' → logprob: -1.7732703685760498
    4. '       ' → logprob: -1.7732703685760498
    5. '%' → logprob: -2.02327036857605
    6. ':
' → logprob: -3.52327036857605
    7. ' %' → logprob: -4.023270606994629
    8. ' if' → logprob: -4.148270606994629
    9. 'if' → logprob: -4.523270606994629
    10. '   ' → logprob: -4.648270606994629

Token 1002: '       ' (ID: 309)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.3170982599258423
    2. ' ==' → logprob: -1.9420982599258423
    3. 'if' → logprob: -1.9420982599258423
    4. ':' → logprob: -2.0670981407165527
    5. '       ' → logprob: -2.3170981407165527
    6. ' if' → logprob: -2.5670981407165527
    7. '```' → logprob: -2.5670981407165527
    8. '%' → logprob: -3.8170981407165527
    9. ':
' → logprob: -3.9420981407165527
    10. '   ' → logprob: -4.567098140716553

Token 1003: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6976960301399231
    2. ' if' → logprob: -0.6976960301399231
    3. '       ' → logprob: -5.447696208953857
    4. ' i' → logprob: -8.9476957321167
    5. '```' → logprob: -9.9476957321167
    6. 'i' → logprob: -10.8226957321167
    7. '   ' → logprob: -11.6976957321167
    8. '           ' → logprob: -12.0726957321167
    9. '        ' → logprob: -12.6976957321167
    10. '        
' → logprob: -12.8226957321167

Token 1004: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.061968810856342316
    2. 'i' → logprob: -2.8119688034057617
    3. '(i' → logprob: -13.811968803405762
    4. '	i' → logprob: -16.436969757080078
    5. ' ' → logprob: -16.811969757080078
    6. '   ' → logprob: -16.936969757080078
    7. ' (' → logprob: -17.061969757080078
    8. ' ' → logprob: -18.686969757080078
    9. '(' → logprob: -18.811969757080078
    10. '_i' → logprob: -19.686969757080078

Token 1005: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.043239884078502655
    2. '%' → logprob: -3.1682398319244385
    3. ' ' → logprob: -8.41823959350586
    4. ' ' → logprob: -11.04323959350586
    5. ')' → logprob: -14.66823959350586
    6. ''' → logprob: -14.79323959350586
    7. '[' → logprob: -14.79323959350586
    8. 's' → logprob: -15.35573959350586
    9. '```' → logprob: -15.35573959350586
    10. '`' → logprob: -15.35573959350586

Token 1006: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038046542555093765
    2. ' ' → logprob: -3.2880465984344482
    3. '```' → logprob: -13.163046836853027
    4. '==' → logprob: -13.663046836853027
    5. '   ' → logprob: -14.163046836853027
    6. '=' → logprob: -15.225546836853027
    7. '  ' → logprob: -15.350546836853027
    8. '0' → logprob: -16.10054588317871
    9. ' ==' → logprob: -16.16304588317871
    10. '1' → logprob: -16.22554588317871

Token 1007: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -15.250024795532227
    4. '==' → logprob: -16.250024795532227
    5. '0' → logprob: -16.750024795532227
    6. '=' → logprob: -17.875024795532227
    7. '   ' → logprob: -18.375024795532227
    8. '1' → logprob: -19.062524795532227
    9. '  ' → logprob: -19.312524795532227
    10. '3' → logprob: -19.375024795532227

Token 1008: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132922053337097
    2. '==' → logprob: -1.3132922649383545
    3. '=' → logprob: -10.813292503356934
    4. ' =' → logprob: -13.188292503356934
    5. '==
' → logprob: -13.188292503356934
    6. '```' → logprob: -13.313292503356934
    7. ' ' → logprob: -13.688292503356934
    8. '===' → logprob: -13.813292503356934
    9. ')==' → logprob: -14.313292503356934
    10. ' ' → logprob: -14.563292503356934

Token 1009: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014316666638478637
    2. ' ' → logprob: -6.626431465148926
    3. '==' → logprob: -9.376431465148926
    4. '2' → logprob: -11.251431465148926
    5. '=' → logprob: -12.251431465148926
    6. ' ==' → logprob: -12.751431465148926
    7. '```' → logprob: -15.751431465148926
    8. '1' → logprob: -16.126432418823242
    9. '==
' → logprob: -17.876432418823242
    10. ' =' → logprob: -18.501432418823242

Token 1010: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012833021173719317
    2. ' ' → logprob: -9.000128746032715
    3. '2' → logprob: -12.500128746032715
    4. '1' → logprob: -14.250128746032715
    5. '==' → logprob: -14.625128746032715
    6. '=' → logprob: -17.7501277923584
    7. '```' → logprob: -18.3751277923584
    8. ' ==' → logprob: -18.8751277923584
    9. '   ' → logprob: -19.2501277923584
    10. '00' → logprob: -20.3751277923584

Token 1011: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031226517632603645
    2. ':
' → logprob: -3.781226634979248
    3. '           ' → logprob: -5.031226634979248
    4. '       ' → logprob: -6.656226634979248
    5. 'print' → logprob: -10.90622615814209
    6. ' :' → logprob: -10.90622615814209
    7. '   ' → logprob: -11.03122615814209
    8. '=' → logprob: -11.03122615814209
    9. '):' → logprob: -11.90622615814209
    10. '==' → logprob: -12.03122615814209

Token 1012: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06544346362352371
    2. ':' → logprob: -3.065443515777588
    3. '           ' → logprob: -4.440443515777588
    4. '   ' → logprob: -6.190443515777588
    5. 'print' → logprob: -6.565443515777588
    6. ':
' → logprob: -6.940443515777588
    7. '```' → logprob: -8.56544303894043
    8. ' print' → logprob: -8.94044303894043
    9. '               ' → logprob: -10.31544303894043
    10. '<|end|>' → logprob: -10.56544303894043

Token 1013: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4605301022529602
    2. '               ' → logprob: -1.7105300426483154
    3. '           ' → logprob: -1.8355300426483154
    4. ' print' → logprob: -3.5855300426483154
    5. '       ' → logprob: -7.7105302810668945
    6. '```' → logprob: -8.210530281066895
    7. '	print' → logprob: -9.335530281066895
    8. '   ' → logprob: -9.335530281066895
    9. '	       ' → logprob: -9.710530281066895
    10. '(print' → logprob: -11.210530281066895

Token 1014: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007133854669518769
    2. ' print' → logprob: -7.500713348388672
    3. '           ' → logprob: -8.750713348388672
    4. '               ' → logprob: -13.750713348388672
    5. '   ' → logprob: -15.000713348388672
    6. '	print' → logprob: -15.000713348388672
    7. '       ' → logprob: -15.375713348388672
    8. '```' → logprob: -16.125713348388672
    9. '#' → logprob: -17.125713348388672
    10. '
' → logprob: -17.625713348388672

Token 1015: ' pair' (ID: 10610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5327797532081604
    2. ' print' → logprob: -1.0327796936035156
    3. ' i' → logprob: -3.1577796936035156
    4. 'i' → logprob: -4.282779693603516
    5. '   ' → logprob: -8.032779693603516
    6. '(i' → logprob: -8.282779693603516
    7. ' ' → logprob: -10.282779693603516
    8. '(print' → logprob: -10.407779693603516
    9. '           ' → logprob: -11.407779693603516
    10. '	print' → logprob: -11.532779693603516

Token 1016: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21092422306537628
    2. '           ' → logprob: -2.0859241485595703
    3. ':' → logprob: -3.2109241485595703
    4. ',' → logprob: -4.08592414855957
    5. ':
' → logprob: -5.46092414855957
    6. 'print' → logprob: -6.08592414855957
    7. ' print' → logprob: -6.21092414855957
    8. '   ' → logprob: -9.21092414855957
    9. '       ' → logprob: -9.71092414855957
    10. ' ,' → logprob: -9.83592414855957

Token 1017: ' imprime' (ID: 195564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17901042103767395
    2. ' print' → logprob: -2.3040103912353516
    3. '               ' → logprob: -3.1790103912353516
    4. '           ' → logprob: -3.8040103912353516
    5. '	print' → logprob: -9.679010391235352
    6. '   ' → logprob: -10.554010391235352
    7. '       ' → logprob: -11.304010391235352
    8. '```' → logprob: -11.554010391235352
    9. '	       ' → logprob: -11.929010391235352
    10. '            ' → logprob: -12.679010391235352

Token 1018: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.23522426187992096
    2. '(' → logprob: -1.6102242469787598
    3. '("' → logprob: -6.11022424697876
    4. '1' → logprob: -6.23522424697876
    5. 'print' → logprob: -6.73522424697876
    6. ' i' → logprob: -6.73522424697876
    7. 'i' → logprob: -6.73522424697876
    8. ' (' → logprob: -6.86022424697876
    9. '"' → logprob: -7.61022424697876
    10. ' ' → logprob: -8.485224723815918

Token 1019: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0041307611390948296
    2. '(i' → logprob: -5.629130840301514
    3. '(' → logprob: -8.254130363464355
    4. '1' → logprob: -8.879130363464355
    5. ' i' → logprob: -9.129130363464355
    6. '   ' → logprob: -11.879130363464355
    7. '2' → logprob: -12.504130363464355
    8. '(n' → logprob: -12.754130363464355
    9. 'n' → logprob: -12.879130363464355
    10. 'print' → logprob: -13.254130363464355

Token 1020: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004074354947078973
    2. ',i' → logprob: -8.125407218933105
    3. ' ,' → logprob: -9.375407218933105
    4. '",' → logprob: -12.000407218933105
    5. '`,' → logprob: -12.125407218933105
    6. ',
' → logprob: -12.875407218933105
    7. ' i' → logprob: -13.000407218933105
    8. '(i' → logprob: -13.125407218933105
    9. 'i' → logprob: -13.375407218933105
    10. ' ' → logprob: -13.500407218933105

Token 1021: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18121132254600525
    2. ' i' → logprob: -1.8062113523483276
    3. ' n' → logprob: -7.306211471557617
    4. 'n' → logprob: -7.306211471557617
    5. ' ' → logprob: -10.181211471557617
    6. '1' → logprob: -10.806211471557617
    7. '2' → logprob: -10.931211471557617
    8. '"' → logprob: -11.431211471557617
    9. 'f' → logprob: -12.306211471557617
    10. ' f' → logprob: -12.306211471557617

Token 1022: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5765817165374756
    2. '+' → logprob: -0.8265817165374756
    3. '+n' → logprob: -7.451581954956055
    4. '-' → logprob: -10.576581954956055
    5. ',' → logprob: -10.951581954956055
    6. ' -' → logprob: -12.201581954956055
    7. ' ' → logprob: -12.576581954956055
    8. ' plus' → logprob: -13.326581954956055
    9. '```' → logprob: -13.326581954956055
    10. '+,' → logprob: -13.576581954956055

Token 1023: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05405750125646591
    2. ' n' → logprob: -3.1790575981140137
    3. '1' → logprob: -4.554057598114014
    4. ' ' → logprob: -8.679057121276855
    5. '(n' → logprob: -8.679057121276855
    6. '2' → logprob: -9.429057121276855
    7. '3' → logprob: -10.804057121276855
    8. ' (' → logprob: -11.179057121276855
    9. '(' → logprob: -11.679057121276855
    10. '   ' → logprob: -13.054057121276855

Token 1024: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0339854434132576
    2. ' +' → logprob: -3.4089853763580322
    3. '-' → logprob: -8.158985137939453
    4. ')' → logprob: -10.408985137939453
    5. ' -' → logprob: -11.033985137939453
    6. '1' → logprob: -13.533985137939453
    7. '+)' → logprob: -13.533985137939453
    8. '```' → logprob: -13.533985137939453
    9. ' ' → logprob: -13.783985137939453
    10. '   ' → logprob: -14.283985137939453

Token 1025: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -9.000141143798828
    3. '2' → logprob: -11.125141143798828
    4. '3' → logprob: -12.875141143798828
    5. '+' → logprob: -17.625141143798828
    6. '  ' → logprob: -19.000141143798828
    7. '   ' → logprob: -19.250141143798828
    8. '```' → logprob: -19.375141143798828
    9. '0' → logprob: -20.125141143798828
    10. '4' → logprob: -21.000141143798828

Token 1026: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021152703266125172
    2. ' ' → logprob: -8.875211715698242
    3. '2' → logprob: -9.625211715698242
    4. '3' → logprob: -12.125211715698242
    5. '   ' → logprob: -16.750211715698242
    6. '  ' → logprob: -17.500211715698242
    7. '```' → logprob: -18.125211715698242
    8. '+' → logprob: -18.375211715698242
    9. '0' → logprob: -18.500211715698242
    10. ')' → logprob: -19.187711715698242

Token 1027: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00254415487870574
    2. ')
' → logprob: -6.002543926239014
    3. '           ' → logprob: -9.752544403076172
    4. '       ' → logprob: -12.627544403076172
    5. ' )' → logprob: -12.877544403076172
    6. '               ' → logprob: -13.377544403076172
    7. ')
' → logprob: -13.627544403076172
    8. '")' → logprob: -14.127544403076172
    9. '   ' → logprob: -14.377544403076172
    10. '```' → logprob: -16.127544403076172

Token 1028: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7096386551856995
    2. '               ' → logprob: -0.8346386551856995
    3. 'print' → logprob: -3.2096385955810547
    4. '```' → logprob: -4.209638595581055
    5. '       ' → logprob: -5.584638595581055
    6. '   ' → logprob: -5.584638595581055
    7. '            
' → logprob: -5.959638595581055
    8. '(
' → logprob: -6.834638595581055
    9. '                   ' → logprob: -6.959638595581055
    10. ' print' → logprob: -7.084638595581055

Token 1029: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.034653760492801666
    2. '           ' → logprob: -3.534653663635254
    3. '               ' → logprob: -5.784653663635254
    4. ' print' → logprob: -6.534653663635254
    5. '(print' → logprob: -8.284653663635254
    6. '```' → logprob: -10.034653663635254
    7. '       ' → logprob: -11.034653663635254
    8. '            
' → logprob: -11.409653663635254
    9. '            ' → logprob: -12.034653663635254
    10. '             ' → logprob: -12.034653663635254

Token 1030: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.250005722045898
    3. 'i' → logprob: -14.375005722045898
    4. ' (' → logprob: -19.8750057220459
    5. '(
' → logprob: -20.3750057220459
    6. ' i' → logprob: -21.8750057220459
    7. '   ' → logprob: -23.5000057220459
    8. '(ii' → logprob: -23.5000057220459
    9. ' ' → logprob: -23.6250057220459
    10. '	i' → logprob: -23.8750057220459

Token 1031: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010723850573413074
    2. ' ,' → logprob: -9.625106811523438
    3. ',i' → logprob: -10.125106811523438
    4. ')' → logprob: -14.500106811523438
    5. ',
' → logprob: -15.000106811523438
    6. ',n' → logprob: -16.750106811523438
    7. ' i' → logprob: -17.125106811523438
    8. '',' → logprob: -17.125106811523438
    9. '```' → logprob: -17.500106811523438
    10. '(i' → logprob: -17.875106811523438

Token 1032: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048590321093797684
    2. ' i' → logprob: -3.0485904216766357
    3. ' n' → logprob: -13.798590660095215
    4. 'n' → logprob: -13.923590660095215
    5. ' ' → logprob: -14.673590660095215
    6. '   ' → logprob: -15.423590660095215
    7. ')' → logprob: -15.798590660095215
    8. '(i' → logprob: -16.1735897064209
    9. '	i' → logprob: -16.7985897064209
    10. '    ' → logprob: -17.6735897064209

Token 1033: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08896443992853165
    2. ' +' → logprob: -2.4639644622802734
    3. '+n' → logprob: -10.713964462280273
    4. ' ' → logprob: -14.463964462280273
    5. ')' → logprob: -14.588964462280273
    6. '+
' → logprob: -14.838964462280273
    7. '```' → logprob: -15.088964462280273
    8. '`' → logprob: -15.338964462280273
    9. ' plus' → logprob: -15.588964462280273
    10. 'n' → logprob: -15.713964462280273

Token 1034: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007023199461400509
    2. ' ' → logprob: -5.007023334503174
    3. 'n' → logprob: -8.132022857666016
    4. ' n' → logprob: -11.507022857666016
    5. '2' → logprob: -12.757022857666016
    6. '(n' → logprob: -14.382022857666016
    7. ')' → logprob: -15.632022857666016
    8. '```' → logprob: -16.132022857666016
    9. '`' → logprob: -17.007022857666016
    10. '   ' → logprob: -17.382022857666016

Token 1035: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06984216719865799
    2. ' +' → logprob: -2.8198421001434326
    3. '1' → logprob: -4.944842338562012
    4. ' ' → logprob: -7.944842338562012
    5. ')' → logprob: -8.444842338562012
    6. '2' → logprob: -9.444842338562012
    7. '   ' → logprob: -10.569842338562012
    8. '3' → logprob: -10.944842338562012
    9. '```' → logprob: -11.444842338562012
    10. '[' → logprob: -11.694842338562012

Token 1036: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001254693343071267
    2. ' ' → logprob: -9.000125885009766
    3. '2' → logprob: -13.250125885009766
    4. '3' → logprob: -15.875125885009766
    5. ')' → logprob: -16.750125885009766
    6. '```' → logprob: -17.625125885009766
    7. '  ' → logprob: -17.750125885009766
    8. '"' → logprob: -18.250125885009766
    9. '   ' → logprob: -18.375125885009766
    10. '`' → logprob: -18.375125885009766

Token 1037: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '2' → logprob: -15.625001907348633
    4. '3' → logprob: -15.875001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '```' → logprob: -19.250001907348633
    7. ')' → logprob: -20.000001907348633
    8. '１' → logprob: -20.625001907348633
    9. '+' → logprob: -20.812501907348633
    10. '"' → logprob: -21.062501907348633

Token 1038: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00415248004719615
    2. '       ' → logprob: -5.629152297973633
    3. '   ' → logprob: -8.254152297973633
    4. ')
' → logprob: -9.254152297973633
    5. '```' → logprob: -9.754152297973633
    6. '<|end|>' → logprob: -9.754152297973633
    7. '               ' → logprob: -10.379152297973633
    8. '           ' → logprob: -10.629152297973633
    9. ' )' → logprob: -12.254152297973633
    10. '")' → logprob: -13.004152297973633

Token 1039: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18501071631908417
    2. 'else' → logprob: -1.8100106716156006
    3. ' else' → logprob: -5.31001091003418
    4. '```' → logprob: -9.18501091003418
    5. '   ' → logprob: -9.56001091003418
    6. '	else' → logprob: -10.06001091003418
    7. '           ' → logprob: -10.43501091003418
    8. '	' → logprob: -10.43501091003418
    9. '               ' → logprob: -11.18501091003418
    10. '<|end|>' → logprob: -11.81001091003418

Token 1040: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18598057329654694
    2. 'else' (adapté à ' else') → logprob: -1.8109805583953857
    3. ' else' → logprob: -5.185980796813965
    4. '```' → logprob: -7.560980796813965
    5. '   ' → logprob: -10.310980796813965
    6. '           ' → logprob: -10.560980796813965
    7. '	' → logprob: -11.185980796813965
    8. '	else' → logprob: -11.435980796813965
    9. '<|end|>' → logprob: -12.310980796813965
    10. '               ' → logprob: -12.560980796813965

Token 1041: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7903945446014404
    2. ':' → logprob: -0.9153945446014404
    3. ':
' → logprob: -2.4153945446014404
    4. '       ' → logprob: -3.4153945446014404
    5. '```' → logprob: -4.6653947830200195
    6. '{' → logprob: -5.5403947830200195
    7. '<|end|>' → logprob: -5.7903947830200195
    8. '               ' → logprob: -6.7903947830200195
    9. '   ' → logprob: -6.7903947830200195
    10. '{
' → logprob: -7.1653947830200195

Token 1042: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5048977732658386
    2. '       ' → logprob: -2.1298978328704834
    3. '(print' → logprob: -2.3798978328704834
    4. ' print' → logprob: -3.1298978328704834
    5. '(' → logprob: -3.1298978328704834
    6. '           ' → logprob: -3.5048978328704834
    7. '```' → logprob: -3.5048978328704834
    8. '(
' → logprob: -5.004897594451904
    9. '   ' → logprob: -5.129897594451904
    10. ' 
' → logprob: -5.379897594451904

Token 1043: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013285996101330966
    2. ' print' → logprob: -9.25013256072998
    3. '```' → logprob: -10.25013256072998
    4. '(print' → logprob: -14.12513256072998
    5. '``' → logprob: -14.50013256072998
    6. '           ' → logprob: -16.500133514404297
    7. '	print' → logprob: -17.000133514404297
    8. '.print' → logprob: -17.375133514404297
    9. '       ' → logprob: -17.625133514404297
    10. '   ' → logprob: -18.500133514404297

Token 1044: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.314625690924004e-05
    2. ' print' → logprob: -9.625073432922363
    3. '(print' → logprob: -12.000073432922363
    4. '           ' → logprob: -14.875073432922363
    5. '       ' → logprob: -16.000072479248047
    6. '.print' → logprob: -16.375072479248047
    7. '```' → logprob: -16.375072479248047
    8. '	print' → logprob: -17.000072479248047
    9. '
' → logprob: -17.375072479248047
    10. '               ' → logprob: -18.000072479248047

Token 1045: ' impair' (ID: 64113)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.786005973815918
    2. 'i' → logprob: -0.911005973815918
    3. 'print' → logprob: -2.161005973815918
    4. ' i' → logprob: -3.661005973815918
    5. ' print' → logprob: -6.786005973815918
    6. '	i' → logprob: -10.161005973815918
    7. '[i' → logprob: -10.536005973815918
    8. '```' → logprob: -10.786005973815918
    9. '   ' → logprob: -10.911005973815918
    10. '(' → logprob: -10.911005973815918

Token 1046: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4832875728607178
    2. '           ' → logprob: -1.1082875728607178
    3. ':' → logprob: -3.8582875728607178
    4. 'print' → logprob: -3.9832875728607178
    5. '(print' → logprob: -4.983287811279297
    6. ' print' → logprob: -6.108287811279297
    7. ':
' → logprob: -6.358287811279297
    8. ',' → logprob: -6.608287811279297
    9. '```' → logprob: -8.108287811279297
    10. '(' → logprob: -8.608287811279297

Token 1047: ' imprime' (ID: 195564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07890697568655014
    2. ' print' → logprob: -2.578907012939453
    3. '           ' → logprob: -11.453907012939453
    4. '(print' → logprob: -12.703907012939453
    5. '```' → logprob: -13.078907012939453
    6. '.print' → logprob: -13.703907012939453
    7. '	print' → logprob: -15.703907012939453
    8. '               ' → logprob: -16.703907012939453
    9. '            
' → logprob: -17.578907012939453
    10. '``' → logprob: -17.828907012939453

Token 1048: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.125017166137695
    3. 'i' → logprob: -13.000017166137695
    4. '(
' → logprob: -15.875017166137695
    5. ' (' → logprob: -16.000017166137695
    6. ' i' → logprob: -17.125017166137695
    7. '```' → logprob: -18.000017166137695
    8. 'print' → logprob: -18.125017166137695
    9. '   ' → logprob: -18.125017166137695
    10. '1' → logprob: -18.375017166137695

Token 1049: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0280383548888494e-06
    2. ' i' → logprob: -14.125000953674316
    3. '(i' → logprob: -15.250000953674316
    4. '   ' → logprob: -18.625001907348633
    5. '	i' → logprob: -19.875001907348633
    6. '```' → logprob: -20.250001907348633
    7. ')' → logprob: -20.500001907348633
    8. '{i' → logprob: -21.125001907348633
    9. '1' → logprob: -21.250001907348633
    10. '(' → logprob: -21.375001907348633

Token 1050: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007742508896626532
    2. ',i' → logprob: -7.250774383544922
    3. ' ,' → logprob: -10.250774383544922
    4. '(i' → logprob: -10.750774383544922
    5. '`,' → logprob: -13.125774383544922
    6. '",' → logprob: -13.750774383544922
    7. 'i' → logprob: -13.875774383544922
    8. ',n' → logprob: -13.875774383544922
    9. '',' → logprob: -14.125774383544922
    10. '```' → logprob: -14.375774383544922

Token 1051: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003131784324068576
    2. ' i' → logprob: -8.250312805175781
    3. 'print' → logprob: -9.875312805175781
    4. '(i' → logprob: -14.625312805175781
    5. ' print' → logprob: -17.75031280517578
    6. '   ' → logprob: -18.00031280517578
    7. ''i' → logprob: -18.00031280517578
    8. '{i' → logprob: -18.87531280517578
    9. '```' → logprob: -18.87531280517578
    10. '1' → logprob: -19.25031280517578

Token 1052: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1737586259841919
    2. '+' → logprob: -1.923758625984192
    3. ' +' → logprob: -4.923758506774902
    4. '+n' → logprob: -5.298758506774902
    5. ' ,' → logprob: -7.548758506774902
    6. ',n' → logprob: -7.548758506774902
    7. '+,' → logprob: -9.423758506774902
    8. 'n' → logprob: -11.298758506774902
    9. ')' → logprob: -11.673758506774902
    10. ' n' → logprob: -12.298758506774902

Token 1053: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4741046130657196
    2. 'n' → logprob: -0.974104642868042
    3. ' ' → logprob: -10.849104881286621
    4. '(n' → logprob: -12.849104881286621
    5. '	n' → logprob: -13.224104881286621
    6. '1' → logprob: -13.724104881286621
    7. ' ' → logprob: -13.974104881286621
    8. '_n' → logprob: -14.599104881286621
    9. '2' → logprob: -14.724104881286621
    10. '"' → logprob: -15.599104881286621

Token 1054: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04301563277840614
    2. ' -' → logprob: -3.168015718460083
    3. ' ' → logprob: -11.918015480041504
    4. '+' → logprob: -11.918015480041504
    5. '```' → logprob: -13.793015480041504
    6. ')' → logprob: -14.043015480041504
    7. '<|end|>' → logprob: -15.418015480041504
    8. '   ' → logprob: -15.543015480041504
    9. ' ' → logprob: -15.668015480041504
    10. '−' → logprob: -15.918015480041504

Token 1055: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -16.500015258789062
    4. '   ' → logprob: -17.000015258789062
    5. '7' → logprob: -18.125015258789062
    6. '3' → logprob: -18.250015258789062
    7. '```' → logprob: -19.125015258789062
    8. '<|end|>' → logprob: -19.250015258789062
    9. '0' → logprob: -19.375015258789062
    10. '  ' → logprob: -20.125015258789062

Token 1056: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '2' → logprob: -14.875007629394531
    4. '3' → logprob: -16.37500762939453
    5. '   ' → logprob: -17.87500762939453
    6. '```' → logprob: -18.12500762939453
    7. '7' → logprob: -18.87500762939453
    8. ')' → logprob: -19.93750762939453
    9. '۱' → logprob: -19.93750762939453
    10. '１' → logprob: -20.12500762939453

Token 1057: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008137972326949239
    2. ')
' → logprob: -7.125813961029053
    3. ' )' → logprob: -12.500813484191895
    4. '```' → logprob: -13.250813484191895
    5. ')
' → logprob: -13.875813484191895
    6. '   ' → logprob: -14.250813484191895
    7. '       ' → logprob: -14.375813484191895
    8. '")' → logprob: -14.625813484191895
    9. '           ' → logprob: -15.375813484191895
    10. '+' → logprob: -16.00081443786621

Token 1058: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31952109932899475
    2. '(print' → logprob: -1.6945210695266724
    3. '(i' → logprob: -2.694521188735962
    4. '```' → logprob: -4.194520950317383
    5. ' print' → logprob: -5.944520950317383
    6. '   ' → logprob: -6.444520950317383
    7. '.print' → logprob: -6.694520950317383
    8. '       ' → logprob: -7.319520950317383
    9. '``' → logprob: -8.444520950317383
    10. '(' → logprob: -9.069520950317383

Token 1059: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.836499985889532e-05
    2. ' print' → logprob: -9.7500581741333
    3. '(print' → logprob: -18.250059127807617
    4. '.print' → logprob: -18.625059127807617
    5. '```' → logprob: -19.000059127807617
    6. '	print' → logprob: -20.000059127807617
    7. '           ' → logprob: -22.375059127807617
    8. 'printf' → logprob: -22.625059127807617
    9. '       ' → logprob: -22.875059127807617
    10. '#print' → logprob: -23.125059127807617

Token 1060: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. 'i' → logprob: -16.875001907348633
    4. ' (' → logprob: -18.750001907348633
    5. '(
' → logprob: -19.500001907348633
    6. '"' → logprob: -20.250001907348633
    7. '("' → logprob: -21.500001907348633
    8. '(ii' → logprob: -22.375001907348633
    9. '```' → logprob: -22.375001907348633
    10. ' ' → logprob: -22.500001907348633

Token 1061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011713240382960066
    2. ',i' → logprob: -9.125117301940918
    3. ' ,' → logprob: -11.875117301940918
    4. '(i' → logprob: -14.750117301940918
    5. ',n' → logprob: -15.000117301940918
    6. ')' → logprob: -15.125117301940918
    7. ',end' → logprob: -16.1251163482666
    8. '```' → logprob: -17.2501163482666
    9. '   ' → logprob: -17.3751163482666
    10. ',
' → logprob: -17.3751163482666

Token 1062: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0894164964556694
    2. ' i' → logprob: -2.46441650390625
    3. 'n' → logprob: -8.83941650390625
    4. '"' → logprob: -8.83941650390625
    5. ' n' → logprob: -9.08941650390625
    6. '(i' → logprob: -10.83941650390625
    7. ''' → logprob: -11.21441650390625
    8. ' ' → logprob: -11.33941650390625
    9. ''i' → logprob: -11.58941650390625
    10. ')' → logprob: -11.71441650390625

Token 1063: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7563251852989197
    2. '+' → logprob: -1.2563252449035645
    3. ' -' → logprob: -1.8813252449035645
    4. '-' → logprob: -2.3813252449035645
    5. ',' → logprob: -7.8813252449035645
    6. '+n' → logprob: -8.131324768066406
    7. ')' → logprob: -8.256324768066406
    8. ' ' → logprob: -9.631324768066406
    9. '```' → logprob: -11.006324768066406
    10. ' ,' → logprob: -11.006324768066406

Token 1064: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005238260608166456
    2. ' ' → logprob: -5.255238056182861
    3. '3' → logprob: -13.25523853302002
    4. ' ' → logprob: -13.25523853302002
    5. '2' → logprob: -15.50523853302002
    6. '```' → logprob: -16.005237579345703
    7. ')' → logprob: -16.255237579345703
    8. '  ' → logprob: -16.505237579345703
    9. '
' → logprob: -16.755237579345703
    10. '  
' → logprob: -16.880237579345703

Token 1065: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931681632995605
    2. ' -' → logprob: -0.6931681632995605
    3. '+' → logprob: -11.818168640136719
    4. ')' → logprob: -12.318168640136719
    5. ' ' → logprob: -12.443168640136719
    6. '```' → logprob: -12.943168640136719
    7. ' +' → logprob: -13.818168640136719
    8. ' ' → logprob: -14.818168640136719
    9. '   ' → logprob: -15.193168640136719
    10. '`' → logprob: -15.193168640136719

Token 1066: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. '3' → logprob: -10.87502384185791
    3. ' ' → logprob: -12.37502384185791
    4. '2' → logprob: -14.37502384185791
    5. ')' → logprob: -16.875022888183594
    6. '7' → logprob: -18.250022888183594
    7. '```' → logprob: -18.500022888183594
    8. '5' → logprob: -18.750022888183594
    9. '   ' → logprob: -19.000022888183594
    10. '9' → logprob: -19.500022888183594

Token 1067: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '3' → logprob: -12.125006675720215
    3. ' ' → logprob: -14.375006675720215
    4. '```' → logprob: -16.6250057220459
    5. '2' → logprob: -16.8750057220459
    6. '   ' → logprob: -17.6250057220459
    7. ')' → logprob: -19.0000057220459
    8. '  ' → logprob: -19.5000057220459
    9. '7' → logprob: -19.6250057220459
    10. ' ' → logprob: -20.1250057220459

Token 1068: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2617008400848135e-05
    2. '```' → logprob: -11.125032424926758
    3. '<|end|>' → logprob: -11.750032424926758
    4. ')
' → logprob: -12.625032424926758
    5. '   ' → logprob: -13.000032424926758
    6. '       ' → logprob: -13.750032424926758
    7. '")' → logprob: -14.375032424926758
    8. '}' → logprob: -14.500032424926758
    9. '`)' → logprob: -14.625032424926758
    10. ')n' → logprob: -15.250032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1066
Tokens correctement prédits (1ère position, stricte): 303
Tokens correctement prédits (1ère position, avec adaptation): 332
Tokens correctement prédits (top 10): 706
Précision stricte (1ère position): 28.42%
Précision adaptée (1ère position): 31.14%
Précision (top 10): 66.23%
================================================================================
