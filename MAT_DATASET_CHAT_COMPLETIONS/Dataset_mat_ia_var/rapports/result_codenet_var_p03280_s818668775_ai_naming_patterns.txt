================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
read_int = lambda: int(input())
read_ints = lambda: map(int, input().split())
read_strs = lambda: map(str, input().split())
read_str = lambda: str(input())
read_int_list = lambda: list(map(int, input().split()))
read_str_list = lambda: list(map(str, input().split()))

def main_process():
    int_a, int_b = read_ints()
    result = int_a * int_b - (int_a + int_b - 1)
    print(result)

if __name__ == '__main__':
    main_process()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'read' (ID: 1293)
  → Token d'amorce (pas de prédiction)

Token 1: '_int' (ID: 12285)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' lambda' (ID: 27871)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.943555474281311
    2. ' ' → logprob: -1.193555474281311
    3. ' input' → logprob: -2.0685553550720215
    4. 'int' → logprob: -2.3185553550720215
    5. 'input' → logprob: -2.6935553550720215
    6. '(' → logprob: -5.1935553550720215
    7. ' lambda' → logprob: -5.4435553550720215
    8. ' (' → logprob: -6.1935553550720215
    9. '  ' → logprob: -6.9435553550720215
    10. '(int' → logprob: -7.6935553550720215

Token 4: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.019212331622838974
    2. 'x' → logprob: -4.894212245941162
    3. ' s' → logprob: -5.144212245941162
    4. ' ' → logprob: -6.894212245941162
    5. ' input' → logprob: -7.019212245941162
    6. ' value' → logprob: -7.269212245941162
    7. ' n' → logprob: -7.394212245941162
    8. ' a' → logprob: -7.519212245941162
    9. ' read' → logprob: -7.519212245941162
    10. ' space' → logprob: -8.14421272277832

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10061055421829224
    2. 'int' → logprob: -2.3506104946136475
    3. ' input' → logprob: -7.975610733032227
    4. 'input' → logprob: -10.475610733032227
    5. ' ' → logprob: -11.225610733032227
    6. ' map' → logprob: -11.350610733032227
    7. '(int' → logprob: -13.475610733032227
    8. ' list' → logprob: -13.725610733032227
    9. '<int' → logprob: -13.725610733032227
    10. '=int' → logprob: -14.225610733032227

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932472586631775
    2. '(input' → logprob: -0.6932472586631775
    3. '()' → logprob: -10.193246841430664
    4. 'input' → logprob: -10.443246841430664
    5. '('' → logprob: -11.943246841430664
    6. '(
' → logprob: -12.068246841430664
    7. '(read' → logprob: -12.068246841430664
    8. ' (' → logprob: -12.693246841430664
    9. '(open' → logprob: -13.068246841430664
    10. '(raw' → logprob: -13.193246841430664

Token 7: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2116435468196869
    2. '()' → logprob: -1.7116435766220093
    3. ')' → logprob: -4.836643695831299
    4. '(' → logprob: -6.461643695831299
    5. '()))' → logprob: -8.46164321899414
    6. ' ())' → logprob: -8.83664321899414
    7. '(""))' → logprob: -9.83664321899414
    8. '();)' → logprob: -9.96164321899414
    9. '());' → logprob: -10.08664321899414
    10. '(()' → logprob: -10.33664321899414

Token 8: 'read' (ID: 1293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025178799405694008
    2. '()' → logprob: -4.150178909301758
    3. '(
' → logprob: -4.775178909301758
    4. ')' → logprob: -9.025178909301758
    5. '#' → logprob: -9.400178909301758
    6. ',' → logprob: -9.650178909301758
    7. '(

' → logprob: -9.650178909301758
    8. '\(' → logprob: -9.775178909301758
    9. '()
' → logprob: -9.900178909301758
    10. '\n' → logprob: -10.275178909301758

Token 9: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.429392009973526
    2. '_int' → logprob: -1.0543919801712036
    3. ' _' → logprob: -8.554391860961914
    4. '_)' → logprob: -9.054391860961914
    5. '_in' → logprob: -9.304391860961914
    6. '_

' → logprob: -9.304391860961914
    7. 'int' → logprob: -9.554391860961914
    8. ')' → logprob: -10.804391860961914
    9. '_
' → logprob: -10.929391860961914
    10. '<int' → logprob: -11.179391860961914

Token 10: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005071613122709095
    2. '()' → logprob: -7.875507354736328
    3. '(
' → logprob: -9.875507354736328
    4. '```' → logprob: -11.250507354736328
    5. '<|end|>' → logprob: -11.375507354736328
    6. ' (' → logprob: -11.625507354736328
    7. '(

' → logprob: -12.250507354736328
    8. ')' → logprob: -12.250507354736328
    9. '\' → logprob: -12.375507354736328
    10. '(read' → logprob: -12.375507354736328

Token 11: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06461764127016068
    2. '(' → logprob: -3.31461763381958
    3. '_' → logprob: -3.93961763381958
    4. '<|end|>' → logprob: -6.81461763381958
    5. ' =' → logprob: -6.93961763381958
    6. ' ()' → logprob: -7.06461763381958
    7. '=' → logprob: -7.06461763381958
    8. 's' → logprob: -7.81461763381958
    9. '```' → logprob: -7.81461763381958
    10. ')' → logprob: -8.189618110656738

Token 12: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.47411441802978516
    2. ' lambda' → logprob: -0.9741144180297852
    3. '(lambda' → logprob: -10.224114418029785
    4. 'list' → logprob: -14.849114418029785
    5. '=lambda' → logprob: -14.849114418029785
    6. ' lamb' → logprob: -15.849114418029785
    7. '_lambda' → logprob: -16.84911346435547
    8. ' ' → logprob: -16.97411346435547
    9. 'map' → logprob: -16.97411346435547
    10. 'lam' → logprob: -17.34911346435547

Token 13: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055438339710235596
    2. ':list' → logprob: -3.055438280105591
    3. 'list' → logprob: -5.55543851852417
    4. 'lambda' → logprob: -6.18043851852417
    5. ' :' → logprob: -8.180438041687012
    6. ' list' → logprob: -8.805438041687012
    7. 'input' → logprob: -8.930438041687012
    8. '(lambda' → logprob: -9.180438041687012
    9. ' lambda' → logprob: -9.430438041687012
    10. '=lambda' → logprob: -10.555438041687012

Token 14: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.33704301714897156
    2. 'map' → logprob: -1.587043046951294
    3. ' list' → logprob: -2.587043046951294
    4. ' map' → logprob: -5.087042808532715
    5. '[' → logprob: -8.962042808532715
    6. '[list' → logprob: -10.837042808532715
    7. 'lambda' → logprob: -11.587042808532715
    8. '[int' → logprob: -12.462042808532715
    9. ' [' → logprob: -12.587042808532715
    10. 'input' → logprob: -12.837042808532715

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00016086915275081992
    2. '(' → logprob: -8.750161170959473
    3. 'int' → logprob: -14.500161170959473
    4. '(lambda' → logprob: -14.500161170959473
    5. '<int' → logprob: -14.750161170959473
    6. '(list' → logprob: -14.875161170959473
    7. ' (' → logprob: -15.500161170959473
    8. '(in' → logprob: -16.250160217285156
    9. '=int' → logprob: -16.875160217285156
    10. '(str' → logprob: -17.000160217285156

Token 16: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0024338087532669306
    2. '(' → logprob: -6.627433776855469
    3. ')' → logprob: -7.627433776855469
    4. 'input' → logprob: -8.127433776855469
    5. ')(' → logprob: -9.127433776855469
    6. ',input' → logprob: -9.127433776855469
    7. ' (' → logprob: -9.752433776855469
    8. '=input' → logprob: -10.877433776855469
    9. ' input' → logprob: -11.377433776855469
    10. '(inp' → logprob: -12.752433776855469

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009146820520982146
    2. ' input' → logprob: -7.000914573669434
    3. '(input' → logprob: -13.250914573669434
    4. ')' → logprob: -14.000914573669434
    5. '<input' → logprob: -15.625914573669434
    6. ',input' → logprob: -15.875914573669434
    7. '=input' → logprob: -16.12591552734375
    8. '	input' → logprob: -16.75091552734375
    9. '[input' → logprob: -16.75091552734375
    10. ' ' → logprob: -16.87591552734375

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006685942644253373
    2. '()' → logprob: -7.375668525695801
    3. '())' → logprob: -10.5006685256958
    4. ' ().' → logprob: -11.8756685256958
    5. ')' → logprob: -12.5006685256958
    6. '(' → logprob: -12.7506685256958
    7. '());' → logprob: -15.7506685256958
    8. '('' → logprob: -16.125669479370117
    9. ' ()' → logprob: -16.125669479370117
    10. ' ' → logprob: -16.250669479370117

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016218038217630237
    2. 'strip' → logprob: -8.750162124633789
    3. 'rstrip' → logprob: -12.625162124633789
    4. ' split' → logprob: -15.125162124633789
    5. 'spl' → logprob: -15.875162124633789
    6. '(split' → logprob: -16.87516212463379
    7. 'read' → logprob: -18.62516212463379
    8. ')' → logprob: -19.25016212463379
    9. 's' → logprob: -19.50016212463379
    10. '.split' → logprob: -20.25016212463379

Token 20: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005330401472747326
    2. '()))' → logprob: -5.755330562591553
    3. ')' → logprob: -6.630330562591553
    4. '()' → logprob: -7.380330562591553
    5. '))' → logprob: -8.505330085754395
    6. '())
' → logprob: -13.505330085754395
    7. ' ())' → logprob: -13.630330085754395
    8. '()]' → logprob: -14.880330085754395
    9. '();)' → logprob: -15.005330085754395
    10. '()),' → logprob: -15.755330085754395

Token 21: 'read' (ID: 1293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0419842004776
    2. '\n' → logprob: -1.7919842004776
    3. 'n' → logprob: -2.2919840812683105
    4. '#' → logprob: -2.5419840812683105
    5. '(n' → logprob: -3.4169840812683105
    6. 'def' → logprob: -3.6669840812683105
    7. 'read' → logprob: -3.6669840812683105
    8. ')' → logprob: -3.7919840812683105
    9. 'r' → logprob: -3.7919840812683105
    10. '\' → logprob: -3.9169840812683105

Token 22: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011946285143494606
    2. '_int' → logprob: -4.511946201324463
    3. '_line' → logprob: -8.261946678161621
    4. 's' → logprob: -8.386946678161621
    5. '_s' → logprob: -9.386946678161621
    6. '_)' → logprob: -9.511946678161621
    7. '_in' → logprob: -10.511946678161621
    8. '(' → logprob: -10.761946678161621
    9. '_str' → logprob: -10.886946678161621
    10. ' _' → logprob: -11.011946678161621

Token 23: 's' (ID: 82)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49699437618255615
    2. '=' → logprob: -1.3719943761825562
    3. 'ing' → logprob: -2.1219944953918457
    4. 's' → logprob: -4.121994495391846
    5. 'a' → logprob: -6.621994495391846
    6. '=lambda' → logprob: -8.871994018554688
    7. '_' → logprob: -8.871994018554688
    8. 'g' → logprob: -9.246994018554688
    9. 'ng' → logprob: -9.746994018554688
    10. 'as' → logprob: -10.371994018554688

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015471219085156918
    2. '=' → logprob: -6.501547336578369
    3. ' ' → logprob: -11.126546859741211
    4. '_' → logprob: -11.501546859741211
    5. '<|end|>' → logprob: -11.501546859741211
    6. ')' → logprob: -13.001546859741211
    7. ' =)' → logprob: -13.501546859741211
    8. ' _' → logprob: -13.876546859741211
    9. ' |=' → logprob: -14.001546859741211
    10. '_=' → logprob: -14.626546859741211

Token 25: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.38690656423568726
    2. ' lambda' → logprob: -1.136906623840332
    3. '=lambda' → logprob: -10.761906623840332
    4. '(lambda' → logprob: -11.261906623840332
    5. 'input' → logprob: -14.011906623840332
    6. '_lambda' → logprob: -15.261906623840332
    7. ' lamb' → logprob: -16.011905670166016
    8. ' input' → logprob: -16.136905670166016
    9. ' =' → logprob: -16.261905670166016
    10. '=' → logprob: -16.886905670166016

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13724416494369507
    2. 'lambda' → logprob: -2.13724422454834
    3. 'input' → logprob: -4.76224422454834
    4. '():' → logprob: -7.26224422454834
    5. ' lambda' → logprob: -7.76224422454834
    6. 'str' → logprob: -8.26224422454834
    7. ' :' → logprob: -8.88724422454834
    8. ':str' → logprob: -9.63724422454834
    9. '[]' → logprob: -10.13724422454834
    10. ' input' → logprob: -10.88724422454834

Token 27: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004116750322282314
    2. ' input' → logprob: -5.504116535186768
    3. 'lambda' → logprob: -10.254117012023926
    4. 'list' → logprob: -13.004117012023926
    5. ' lambda' → logprob: -14.754117012023926
    6. 'str' → logprob: -15.004117012023926
    7. '=input' → logprob: -17.12911605834961
    8. '(input' → logprob: -17.25411605834961
    9. '<input' → logprob: -17.87911605834961
    10. '[input' → logprob: -18.62911605834961

Token 28: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -8.41866585687967e-06
    2. 'str' → logprob: -12.375008583068848
    3. '(' → logprob: -12.625008583068848
    4. '(int' → logprob: -14.500008583068848
    5. '(input' → logprob: -15.625008583068848
    6. '=str' → logprob: -15.875008583068848
    7. ' str' → logprob: -16.12500762939453
    8. '	str' → logprob: -17.75000762939453
    9. ' (' → logprob: -17.87500762939453
    10. '[str' → logprob: -18.00000762939453

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00818426813930273
    2. ',input' → logprob: -5.133184432983398
    3. '(),' → logprob: -6.133184432983398
    4. ')' → logprob: -10.133184432983398
    5. ' ,' → logprob: -10.758184432983398
    6. '()' → logprob: -11.508184432983398
    7. '())' → logprob: -12.633184432983398
    8. ',int' → logprob: -12.633184432983398
    9. 'input' → logprob: -13.258184432983398
    10. '(input' → logprob: -14.383184432983398

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008615872822701931
    2. ' input' → logprob: -4.758615970611572
    3. 'str' → logprob: -14.633615493774414
    4. '(input' → logprob: -15.633615493774414
    5. '=input' → logprob: -16.133615493774414
    6. ',input' → logprob: -16.133615493774414
    7. '	input' → logprob: -16.383615493774414
    8. ' ' → logprob: -16.383615493774414
    9. '<input' → logprob: -16.508615493774414
    10. ')' → logprob: -16.883615493774414

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005835341871716082
    2. '()' → logprob: -7.750583648681641
    3. '())' → logprob: -9.37558364868164
    4. ')' → logprob: -9.75058364868164
    5. '.' → logprob: -11.87558364868164
    6. ' ().' → logprob: -14.12558364868164
    7. '(' → logprob: -14.62558364868164
    8. ' .' → logprob: -15.00058364868164
    9. '().__' → logprob: -15.25058364868164
    10. ''s' → logprob: -15.25058364868164

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014286447316408157
    2. ')' → logprob: -4.264286518096924
    3. 'strip' → logprob: -9.639286041259766
    4. 'rstrip' → logprob: -10.639286041259766
    5. '.split' → logprob: -11.389286041259766
    6. '(split' → logprob: -12.264286041259766
    7. '())' → logprob: -12.264286041259766
    8. ' split' → logprob: -12.764286041259766
    9. 'spl' → logprob: -13.139286041259766
    10. '_split' → logprob: -13.139286041259766

Token 33: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37915459275245667
    2. '())' → logprob: -1.3791545629501343
    3. '()' → logprob: -2.754154682159424
    4. '))' → logprob: -10.379154205322266
    5. '`)' → logprob: -10.754154205322266
    6. '(' → logprob: -11.129154205322266
    7. '()
' → logprob: -12.129154205322266
    8. '())
' → logprob: -12.129154205322266
    9. ' )' → logprob: -12.379154205322266
    10. '()))' → logprob: -12.754154205322266

Token 34: 'read' (ID: 1293)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3557734787464142
    2. 'd' → logprob: -1.6057734489440918
    3. 'a' → logprob: -3.605773448944092
    4. 'def' → logprob: -3.730773448944092
    5. '#' → logprob: -4.230773448944092
    6. 't' → logprob: -5.355773448944092
    7. 'r' → logprob: -5.355773448944092
    8. '\' → logprob: -5.480773448944092
    9. '
' → logprob: -5.730773448944092
    10. 'x' → logprob: -5.980773448944092

Token 35: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011565317399799824
    2. '_int' → logprob: -7.251156330108643
    3. '_str' → logprob: -8.8761568069458
    4. '_s' → logprob: -10.1261568069458
    5. '_)' → logprob: -10.2511568069458
    6. '_line' → logprob: -10.2511568069458
    7. '(' → logprob: -10.6261568069458
    8. '__' → logprob: -10.7511568069458
    9. '_i' → logprob: -10.7511568069458
    10. '___' → logprob: -11.2511568069458

Token 36: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -4.990154047845863e-05
    2. '_s' → logprob: -10.000049591064453
    3. ' s' → logprob: -12.875049591064453
    4. '	s' → logprob: -14.875049591064453
    5. '_' → logprob: -15.000049591064453
    6. '()' → logprob: -15.250049591064453
    7. '(s' → logprob: -16.000049591064453
    8. '```' → logprob: -16.125049591064453
    9. '`s' → logprob: -16.375049591064453
    10. 'с' → logprob: -16.750049591064453

Token 37: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.026746544986963272
    2. 'lambda' → logprob: -3.9017465114593506
    3. ' input' → logprob: -5.40174674987793
    4. 'input' → logprob: -6.40174674987793
    5. ' ' → logprob: -11.52674674987793
    6. ' λ' → logprob: -13.15174674987793
    7. '(lambda' → logprob: -13.27674674987793
    8. ' lamb' → logprob: -13.52674674987793
    9. ' str' → logprob: -14.02674674987793
    10. '=input' → logprob: -14.40174674987793

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04881138727068901
    2. ' :' → logprob: -3.048811435699463
    3. ' ' → logprob: -8.923810958862305
    4. ' input' → logprob: -9.923810958862305
    5. 'input' → logprob: -11.048810958862305
    6. ' lambda' → logprob: -11.673810958862305
    7. 'lambda' → logprob: -12.048810958862305
    8. ':str' → logprob: -12.298810958862305
    9. 's' → logprob: -12.923810958862305
    10. '():' → logprob: -13.173810958862305

Token 39: ' str' (ID: 989)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005259014666080475
    2. ' input' → logprob: -5.255259037017822
    3. 'str' → logprob: -10.630258560180664
    4. 'in' → logprob: -15.005258560180664
    5. ' str' → logprob: -15.755258560180664
    6. '(input' → logprob: -15.755258560180664
    7. 'raw' → logprob: -16.630258560180664
    8. 'inp' → logprob: -16.630258560180664
    9. 'int' → logprob: -16.880258560180664
    10. 's' → logprob: -17.255258560180664

Token 40: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008638089522719383
    2. '(' → logprob: -4.75863790512085
    3. 'input' → logprob: -11.383638381958008
    4. '()' → logprob: -12.008638381958008
    5. '(in' → logprob: -13.383638381958008
    6. ' (' → logprob: -13.508638381958008
    7. '(
' → logprob: -13.508638381958008
    8. '(inp' → logprob: -14.758638381958008
    9. '(

' → logprob: -15.133638381958008
    10. ',input' → logprob: -16.008638381958008

Token 41: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03251247480511665
    2. ')' → logprob: -3.5325124263763428
    3. '()' → logprob: -5.907512664794922
    4. ' ())' → logprob: -11.032512664794922
    5. '))' → logprob: -12.032512664794922
    6. '()))' → logprob: -12.157512664794922
    7. '())
' → logprob: -12.282512664794922
    8. '();)' → logprob: -12.657512664794922
    9. ' )' → logprob: -14.032512664794922
    10. '(' → logprob: -14.032512664794922

Token 42: 'read' (ID: 1293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0847069025039673
    2. '\n' → logprob: -1.9597069025039673
    3. '#' → logprob: -2.0847067832946777
    4. 'n' → logprob: -2.2097067832946777
    5. '(' → logprob: -2.4597067832946777
    6. 'a' → logprob: -2.5847067832946777
    7. 'def' → logprob: -3.8347067832946777
    8. 'r' → logprob: -4.209706783294678
    9. ')' → logprob: -4.334706783294678
    10. '[' → logprob: -4.459706783294678

Token 43: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00037967207026667893
    2. '_str' → logprob: -8.00037956237793
    3. '_int' → logprob: -10.75037956237793
    4. '_)' → logprob: -11.62537956237793
    5. '(' → logprob: -12.50037956237793
    6. '_s' → logprob: -13.25037956237793
    7. ')' → logprob: -13.50037956237793
    8. ' _' → logprob: -14.00037956237793
    9. '_i' → logprob: -14.50037956237793
    10. '_]' → logprob: -14.75037956237793

Token 44: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6428320407867432
    2. '(' → logprob: -0.7678320407867432
    3. ')' → logprob: -4.767831802368164
    4. '()' → logprob: -6.767831802368164
    5. '_' → logprob: -8.642831802368164
    6. '(s' → logprob: -8.767831802368164
    7. ' (' → logprob: -10.142831802368164
    8. ' s' → logprob: -10.517831802368164
    9. '_s' → logprob: -10.892831802368164
    10. ']' → logprob: -11.017831802368164

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2810905873775482
    2. ' =' → logprob: -1.6560906171798706
    3. 's' → logprob: -3.156090497970581
    4. '(' → logprob: -5.15609073638916
    5. '_' → logprob: -5.53109073638916
    6. '=lambda' → logprob: -8.15609073638916
    7. '()' → logprob: -8.28109073638916
    8. '[' → logprob: -8.53109073638916
    9. '[:]' → logprob: -8.53109073638916
    10. '=[]' → logprob: -8.78109073638916

Token 46: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3230501711368561
    2. 'lambda' → logprob: -1.3230501413345337
    3. '(lambda' → logprob: -4.698050022125244
    4. 'list' → logprob: -7.948050022125244
    5. ' list' → logprob: -8.448050498962402
    6. '=lambda' → logprob: -9.823050498962402
    7. '_lambda' → logprob: -13.198050498962402
    8. ' λ' → logprob: -13.948050498962402
    9. ' lamb' → logprob: -14.448050498962402
    10. '[]' → logprob: -14.448050498962402

Token 47: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04118693619966507
    2. ':list' → logprob: -4.041186809539795
    3. ' :' → logprob: -4.166186809539795
    4. 'list' → logprob: -6.041186809539795
    5. ' list' → logprob: -6.416186809539795
    6. '[]' → logprob: -6.916186809539795
    7. ' lambda' → logprob: -7.291186809539795
    8. 'lambda' → logprob: -7.416186809539795
    9. '(lambda' → logprob: -7.791186809539795
    10. '[:]' → logprob: -8.416187286376953

Token 48: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16026322543621063
    2. ' list' → logprob: -1.910263180732727
    3. '[list' → logprob: -10.285263061523438
    4. '[' → logprob: -12.910263061523438
    5. '[int' → logprob: -14.535263061523438
    6. ' [' → logprob: -14.910263061523438
    7. '=list' → logprob: -15.285263061523438
    8. 'List' → logprob: -15.410263061523438
    9. '	list' → logprob: -15.535263061523438
    10. 'lis' → logprob: -15.785263061523438

Token 49: '(map' (ID: 16946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5312759280204773
    2. '(' → logprob: -0.9062759280204773
    3. '(input' → logprob: -4.906275749206543
    4. '(read' → logprob: -7.531275749206543
    5. '()' → logprob: -9.531275749206543
    6. '(map' → logprob: -10.531275749206543
    7. '(list' → logprob: -11.406275749206543
    8. '(eval' → logprob: -11.531275749206543
    9. '(

' → logprob: -11.656275749206543
    10. '(lambda' → logprob: -12.156275749206543

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001105448347516358
    2. '(' → logprob: -6.876105308532715
    3. '<int' → logprob: -10.251105308532715
    4. '=int' → logprob: -11.376105308532715
    5. '<|end|>' → logprob: -11.751105308532715
    6. '[int' → logprob: -12.126105308532715
    7. 'int' → logprob: -12.501105308532715
    8. ']int' → logprob: -12.501105308532715
    9. ',int' → logprob: -13.126105308532715
    10. ':int' → logprob: -14.626105308532715

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12713809311389923
    2. ',input' → logprob: -2.127138137817383
    3. '(input' → logprob: -8.752138137817383
    4. ',int' → logprob: -11.002138137817383
    5. '(' → logprob: -11.377138137817383
    6. ' ,' → logprob: -11.502138137817383
    7. 'input' → logprob: -11.502138137817383
    8. '(),' → logprob: -14.252138137817383
    9. '<|end|>' → logprob: -14.752138137817383
    10. ' input' → logprob: -14.752138137817383

Token 52: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03806180879473686
    2. ' input' → logprob: -3.2880618572235107
    3. '(input' → logprob: -11.53806209564209
    4. ',input' → logprob: -11.78806209564209
    5. ')' → logprob: -13.91306209564209
    6. '	input' → logprob: -14.16306209564209
    7. '=input' → logprob: -14.91306209564209
    8. '<input' → logprob: -15.28806209564209
    9. ' ' → logprob: -15.78806209564209
    10. '_input' → logprob: -16.038061141967773

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1517960956552997e-05
    2. '()' → logprob: -11.500011444091797
    3. ')' → logprob: -14.750011444091797
    4. '.' → logprob: -14.875011444091797
    5. '()))' → logprob: -15.750011444091797
    6. '(' → logprob: -16.000011444091797
    7. ' ().' → logprob: -16.125011444091797
    8. '))' → logprob: -16.750011444091797
    9. ' .' → logprob: -16.750011444091797
    10. '.split' → logprob: -17.250011444091797

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.339278580620885e-06
    2. 'strip' → logprob: -13.875001907348633
    3. 'spl' → logprob: -14.500001907348633
    4. ' split' → logprob: -14.625001907348633
    5. 'rstrip' → logprob: -15.375001907348633
    6. ')' → logprob: -15.750001907348633
    7. '(split' → logprob: -17.750001907348633
    8. 'read' → logprob: -18.875001907348633
    9. 's' → logprob: -19.375001907348633
    10. '_split' → logprob: -19.625001907348633

Token 55: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1679166555404663
    2. '))' → logprob: -1.9179166555404663
    3. '()' → logprob: -5.417916774749756
    4. '())' → logprob: -5.917916774749756
    5. ')' → logprob: -7.792916774749756
    6. '()))
' → logprob: -9.167916297912598
    7. '(' → logprob: -11.667916297912598
    8. '()))

' → logprob: -13.042916297912598
    9. '())))' → logprob: -13.667916297912598
    10. ')))' → logprob: -13.792916297912598

Token 56: 'read' (ID: 1293)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6497876048088074
    2. '#' → logprob: -1.7747876644134521
    3. 'def' → logprob: -3.024787664413452
    4. '\n' → logprob: -3.024787664413452
    5. 'd' → logprob: -3.149787664413452
    6. 'a' → logprob: -3.399787664413452
    7. 'r' → logprob: -3.774787664413452
    8. '
' → logprob: -3.774787664413452
    9. '\' → logprob: -3.899787664413452
    10. 'x' → logprob: -4.274787425994873

Token 57: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35411304235458374
    2. '_str' → logprob: -1.2291131019592285
    3. '_int' → logprob: -5.7291131019592285
    4. '_s' → logprob: -7.1041131019592285
    5. '_string' → logprob: -7.8541131019592285
    6. ' _' → logprob: -8.72911262512207
    7. '_list' → logprob: -9.35411262512207
    8. '__' → logprob: -9.47911262512207
    9. '_raw' → logprob: -9.85411262512207
    10. '_

' → logprob: -9.85411262512207

Token 58: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31473493576049805
    2. '(' → logprob: -1.314734935760498
    3. ')' → logprob: -7.314734935760498
    4. '_' → logprob: -8.189735412597656
    5. ' ()' → logprob: -8.314735412597656
    6. ' (' → logprob: -10.189735412597656
    7. '())' → logprob: -10.314735412597656
    8. '()]' → logprob: -10.564735412597656
    9. '()[' → logprob: -10.814735412597656
    10. '[' → logprob: -10.939735412597656

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048594411462545395
    2. '=' → logprob: -3.0485944747924805
    3. '=lambda' → logprob: -11.92359447479248
    4. ' ' → logprob: -15.79859447479248
    5. ' =)' → logprob: -15.92359447479248
    6. '(' → logprob: -16.423593521118164
    7. '_' → logprob: -16.923593521118164
    8. '＝' → logprob: -17.048593521118164
    9. ')' → logprob: -17.423593521118164
    10. ' =
' → logprob: -17.548593521118164

Token 60: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.04864482209086418
    2. 'lambda' → logprob: -3.048644781112671
    3. '(lambda' → logprob: -9.92364501953125
    4. '=lambda' → logprob: -11.92364501953125
    5. 'ambda' → logprob: -14.29864501953125
    6. ' lamb' → logprob: -14.67364501953125
    7. '_lambda' → logprob: -14.67364501953125
    8. ' list' → logprob: -15.79864501953125
    9. 'list' → logprob: -17.42364501953125
    10. ' λ' → logprob: -17.54864501953125

Token 61: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004550338722765446
    2. 'lambda' → logprob: -5.879550457000732
    3. 'list' → logprob: -6.879550457000732
    4. ':list' → logprob: -7.754550457000732
    5. ' :' → logprob: -8.754549980163574
    6. ' lambda' → logprob: -9.254549980163574
    7. '(lambda' → logprob: -11.379549980163574
    8. ' list' → logprob: -11.879549980163574
    9. 'str' → logprob: -12.504549980163574
    10. '=lambda' → logprob: -12.754549980163574

Token 62: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0038817848544567823
    2. ' list' → logprob: -5.628881931304932
    3. 'lambda' → logprob: -8.253881454467773
    4. ' lambda' → logprob: -10.878881454467773
    5. 'str' → logprob: -13.503881454467773
    6. 'map' → logprob: -14.253881454467773
    7. 'read' → logprob: -15.753881454467773
    8. 'li' → logprob: -17.253881454467773
    9. ' str' → logprob: -17.378881454467773
    10. 'lst' → logprob: -17.628881454467773

Token 63: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07983335852622986
    2. '(str' → logprob: -2.5798332691192627
    3. '(' → logprob: -7.204833507537842
    4. '(lambda' → logprob: -8.829833030700684
    5. '(read' → logprob: -10.454833030700684
    6. 'map' → logprob: -11.454833030700684
    7. 'str' → logprob: -11.829833030700684
    8. ' (' → logprob: -13.704833030700684
    9. '(strip' → logprob: -13.829833030700684
    10. '(m' → logprob: -13.829833030700684

Token 64: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0005556552205234766
    2. 'str' → logprob: -7.500555515289307
    3. ' str' → logprob: -13.250555992126465
    4. '(' → logprob: -14.625555992126465
    5. '=str' → logprob: -15.250555992126465
    6. '[str' → logprob: -15.750555992126465
    7. '	str' → logprob: -17.50055503845215
    8. '(lambda' → logprob: -17.50055503845215
    9. ':str' → logprob: -18.87555503845215
    10. ' (' → logprob: -19.00055503845215

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019326817709952593
    2. ',input' → logprob: -6.251932621002197
    3. ' ,' → logprob: -12.876933097839355
    4. 'input' → logprob: -14.126933097839355
    5. '(input' → logprob: -14.251933097839355
    6. ' input' → logprob: -17.12693214416504
    7. '(),' → logprob: -17.25193214416504
    8. ')' → logprob: -17.50193214416504
    9. ',int' → logprob: -17.50193214416504
    10. '،' → logprob: -18.25193214416504

Token 66: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08894316852092743
    2. ' input' → logprob: -2.4639432430267334
    3. '(input' → logprob: -13.088943481445312
    4. ',input' → logprob: -14.838943481445312
    5. '=input' → logprob: -14.838943481445312
    6. '<input' → logprob: -15.463943481445312
    7. '	input' → logprob: -15.588943481445312
    8. ' ' → logprob: -15.838943481445312
    9. 'int' → logprob: -16.713943481445312
    10. '[input' → logprob: -16.713943481445312

Token 67: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00514267710968852
    2. '.split' → logprob: -5.880142688751221
    3. '()' → logprob: -6.380142688751221
    4. '_list' → logprob: -8.380142211914062
    5. '))' → logprob: -8.880142211914062
    6. '()))' → logprob: -10.130142211914062
    7. '.' → logprob: -10.255142211914062
    8. '.input' → logprob: -10.255142211914062
    9. ' .' → logprob: -11.130142211914062
    10. ':' → logprob: -11.380142211914062

Token 68: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. ' split' → logprob: -14.375001907348633
    3. ')' → logprob: -14.500001907348633
    4. 'spl' → logprob: -15.500001907348633
    5. '))' → logprob: -15.875001907348633
    6. '(split' → logprob: -16.250001907348633
    7. '_split' → logprob: -19.000001907348633
    8. 'strip' → logprob: -19.875001907348633
    9. '()' → logprob: -20.125001907348633
    10. 'sl' → logprob: -20.375001907348633

Token 69: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5900280475616455
    2. '))' → logprob: -0.8400280475616455
    3. '()' → logprob: -4.840027809143066
    4. '())' → logprob: -5.465027809143066
    5. ')' → logprob: -6.340027809143066
    6. '()))
' → logprob: -9.590027809143066
    7. '))
' → logprob: -12.215027809143066
    8. ' ))' → logprob: -12.715027809143066
    9. '(' → logprob: -12.965027809143066
    10. '()))

' → logprob: -13.465027809143066

Token 70: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.015657663345337
    2. 'n' → logprob: -1.390657663345337
    3. '#' → logprob: -1.765657663345337
    4. 'a' → logprob: -2.265657663345337
    5. 'r' → logprob: -3.140657663345337
    6. 'def' → logprob: -4.140657424926758
    7. '(' → logprob: -4.515657424926758
    8. '_' → logprob: -4.890657424926758
    9. 'x' → logprob: -5.515657424926758
    10. '
' → logprob: -5.515657424926758

Token 71: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33568641543388367
    2. ' main' → logprob: -1.585686445236206
    3. ' solve' → logprob: -2.960686445236206
    4. ' space' → logprob: -5.460686206817627
    5. ' calculate' → logprob: -5.585686206817627
    6. ' read' → logprob: -5.710686206817627
    7. ' process' → logprob: -5.835686206817627
    8. ' dfs' → logprob: -6.210686206817627
    9. ' my' → logprob: -6.460686206817627
    10. ' add' → logprob: -6.710686206817627

Token 72: '_process' (ID: 25444)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0019965621177107096
    2. '(' → logprob: -6.2519965171813965
    3. '()' → logprob: -9.876996994018555
    4. ' ():' → logprob: -11.876996994018555
    5. '(:' → logprob: -12.126996994018555
    6. ':' → logprob: -13.751996994018555
    7. '():
' → logprob: -13.751996994018555
    8. '(":' → logprob: -14.251996994018555
    9. '()>' → logprob: -15.126996994018555
    10. '):' → logprob: -15.501996994018555

Token 73: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00020509003661572933
    2. ' ():' → logprob: -8.750205039978027
    3. '()' → logprob: -10.625205039978027
    4. '(' → logprob: -10.875205039978027
    5. '():
' → logprob: -13.875205039978027
    6. ':' → logprob: -14.625205039978027
    7. '_output' → logprob: -15.125205039978027
    8. '(":' → logprob: -15.250205039978027
    9. '_input' → logprob: -15.375205039978027
    10. '):' → logprob: -15.625205039978027

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07695860415697098
    2. ' ' → logprob: -3.201958656311035
    3. 'n' → logprob: -4.201958656311035
    4. '    ' → logprob: -4.826958656311035
    5. '(' → logprob: -6.576958656311035
    6. 'r' → logprob: -6.701958656311035
    7. 'a' → logprob: -6.826958656311035
    8. '<|end|>' → logprob: -6.826958656311035
    9. ' readline' → logprob: -7.451958656311035
    10. '    
' → logprob: -7.576958656311035

Token 75: ' int' (ID: 677)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5348116159439087
    2. ' ' → logprob: -1.2848116159439087
    3. 'n' → logprob: -3.284811496734619
    4. 'r' → logprob: -3.409811496734619
    5. ' n' → logprob: -4.159811496734619
    6. 'pass' → logprob: -4.159811496734619
    7. ' r' → logprob: -5.034811496734619
    8. '   ' → logprob: -5.159811496734619
    9. ' input' → logprob: -5.409811496734619
    10. '    ' → logprob: -5.534811496734619

Token 76: '_a' (ID: 10852)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.3202612102031708
    2. 's' → logprob: -2.320261240005493
    3. '_list' → logprob: -2.445261240005493
    4. 'eger' → logprob: -2.820261240005493
    5. '_value' → logprob: -4.070261001586914
    6. '_' → logprob: -5.070261001586914
    7. '_input' → logprob: -6.320261001586914
    8. '_var' → logprob: -7.070261001586914
    9. '_count' → logprob: -7.195261001586914
    10. '_values' → logprob: -7.695261001586914

Token 77: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1031271293759346
    2. '=' → logprob: -2.7281272411346436
    3. '_' → logprob: -3.7281272411346436
    4. ',' → logprob: -5.7281270027160645
    5. ')' → logprob: -6.3531270027160645
    6. ' ' → logprob: -6.7281270027160645
    7. '  ' → logprob: -6.8531270027160645
    8. '()' → logprob: -7.8531270027160645
    9. '   ' → logprob: -9.353127479553223
    10. 's' → logprob: -9.603127479553223

Token 78: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6330544948577881
    2. 'int' → logprob: -0.7580544948577881
    3. ' read' → logprob: -9.383054733276367
    4. 'read' → logprob: -9.383054733276367
    5. ' ' → logprob: -9.508054733276367
    6. '=int' → logprob: -9.508054733276367
    7. '<|end|>' → logprob: -9.758054733276367
    8. 'space' → logprob: -10.883054733276367
    9. '_int' → logprob: -11.008054733276367
    10. '[int' → logprob: -11.633054733276367

Token 79: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.01954660937190056
    2. ',' → logprob: -4.5195465087890625
    3. '_a' → logprob: -4.8945465087890625
    4. ',b' → logprob: -7.7695465087890625
    5. 'b' → logprob: -8.269546508789062
    6. '_' → logprob: -9.269546508789062
    7. '_,' → logprob: -9.769546508789062
    8. 'a' → logprob: -10.519546508789062
    9. ' ,' → logprob: -10.769546508789062
    10. ',_' → logprob: -10.894546508789062

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313289076089859
    2. '=' → logprob: -1.3132890462875366
    3. ',' → logprob: -10.688288688659668
    4. '<|end|>' → logprob: -13.313288688659668
    5. ')' → logprob: -13.563288688659668
    6. ' =)' → logprob: -15.063288688659668
    7. '<|end|>' → logprob: -15.438288688659668
    8. ')=' → logprob: -15.813288688659668
    9. '＝' → logprob: -16.063289642333984
    10. '=int' → logprob: -16.313289642333984

Token 81: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0046349456533789635
    2. 'read' → logprob: -5.379634857177734
    3. ' ' → logprob: -11.504634857177734
    4. '	read' → logprob: -12.754634857177734
    5. '  ' → logprob: -13.879634857177734
    6. '    ' → logprob: -15.629634857177734
    7. ' map' → logprob: -15.879634857177734
    8. ' ' → logprob: -16.004634857177734
    9. '   ' → logprob: -16.254634857177734
    10. '(read' → logprob: -16.254634857177734

Token 82: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0031929241959005594
    2. '_' → logprob: -5.753192901611328
    3. '_str' → logprob: -11.753192901611328
    4. '_Int' → logprob: -12.878192901611328
    5. 'int' → logprob: -13.503192901611328
    6. 'Ints' → logprob: -13.628192901611328
    7. '_s' → logprob: -14.878192901611328
    8. 'Int' → logprob: -14.878192901611328
    9. '_in' → logprob: -15.503192901611328
    10. 'ints' → logprob: -15.503192901611328

Token 83: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10035181045532227
    2. '()' → logprob: -2.3503518104553223
    3. '(),' → logprob: -8.975351333618164
    4. ' ()' → logprob: -11.350351333618164
    5. '(' → logprob: -13.475351333618164
    6. ',' → logprob: -13.725351333618164
    7. '())' → logprob: -13.850351333618164
    8. '(s' → logprob: -14.350351333618164
    9. '();' → logprob: -14.600351333618164
    10. ' s' → logprob: -15.225351333618164

Token 84: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005785312969237566
    2. '()
' → logprob: -8.250578880310059
    3. '(' → logprob: -9.000578880310059
    4. ')' → logprob: -9.125578880310059
    5. ':' → logprob: -9.750578880310059
    6. '():' → logprob: -11.625578880310059
    7. '();' → logprob: -12.000578880310059
    8. '<|end|>' → logprob: -12.875578880310059
    9. '()

' → logprob: -13.000578880310059
    10. '())' → logprob: -14.000578880310059

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7174972295761108
    2. ':' → logprob: -0.9674972295761108
    3. '\n' → logprob: -3.7174973487854004
    4. '    
' → logprob: -3.9674973487854004
    5. '<|end|>' → logprob: -3.9674973487854004
    6. '  
' → logprob: -4.0924973487854
    7. ' ' → logprob: -4.0924973487854
    8. '
' → logprob: -4.4674973487854
    9. ')' → logprob: -5.3424973487854
    10. '\' → logprob: -5.4674973487854

Token 86: ' result' (ID: 1534)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.3402154445648193
    2. ' ' → logprob: -1.4652154445648193
    3. 'result' (adapté à ' result') → logprob: -1.8402154445648193
    4. '   ' → logprob: -2.3402154445648193
    5. ' result' → logprob: -2.8402154445648193
    6. ' if' → logprob: -3.0902154445648193
    7. '    
' → logprob: -3.3402154445648193
    8. 'print' → logprob: -3.9652154445648193
    9. ' return' → logprob: -4.090215682983398
    10. '
' → logprob: -4.715215682983398

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018257059156894684
    2. '=' → logprob: -4.018257141113281
    3. ' ' → logprob: -9.768257141113281
    4. '_' → logprob: -10.268257141113281
    5. '  ' → logprob: -12.393257141113281
    6. ')' → logprob: -12.518257141113281
    7. '.' → logprob: -14.018257141113281
    8. ' =)' → logprob: -14.143257141113281
    9. 'space' → logprob: -14.268257141113281
    10. ' =
' → logprob: -14.393257141113281

Token 88: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029974136501550674
    2. 'int' → logprob: -3.5299742221832275
    3. ' abs' → logprob: -10.279973983764648
    4. '"' → logprob: -10.404973983764648
    5. ' ' → logprob: -10.404973983764648
    6. ''' → logprob: -10.529973983764648
    7. ' a' → logprob: -10.654973983764648
    8. '(int' → logprob: -11.029973983764648
    9. ' max' → logprob: -11.154973983764648
    10. '0' → logprob: -11.529973983764648

Token 89: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.004159602802246809
    2. '_' → logprob: -5.504159450531006
    3. '_b' → logprob: -9.629159927368164
    4. ' _' → logprob: -11.629159927368164
    5. 'a' → logprob: -13.379159927368164
    6. '_c' → logprob: -14.129159927368164
    7. ')_' → logprob: -14.129159927368164
    8. ')' → logprob: -14.504159927368164
    9. '_s' → logprob: -14.504159927368164
    10. '```' → logprob: -15.129159927368164

Token 90: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1136232241988182
    2. '+' → logprob: -2.2386231422424316
    3. ' *' → logprob: -7.488623142242432
    4. '*' → logprob: -8.86362361907959
    5. ' ' → logprob: -9.36362361907959
    6. ' %' → logprob: -12.98862361907959
    7. '-' → logprob: -13.23862361907959
    8. '%' → logprob: -13.36362361907959
    9. ' +
' → logprob: -13.73862361907959
    10. '_' → logprob: -13.86362361907959

Token 91: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1603497415781021
    2. ' int' → logprob: -1.910349726676941
    3. ' ' → logprob: -9.28534984588623
    4. '=int' → logprob: -12.03534984588623
    5. '(int' → logprob: -12.28534984588623
    6. '_int' → logprob: -12.28534984588623
    7. '_' → logprob: -12.28534984588623
    8. '   ' → logprob: -13.16034984588623
    9. ' ' → logprob: -13.16034984588623
    10. ',int' → logprob: -13.41034984588623

Token 92: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0028596781194210052
    2. '_' → logprob: -5.877859592437744
    3. '_a' → logprob: -9.877860069274902
    4. '_c' → logprob: -13.752860069274902
    5. ' _' → logprob: -14.002860069274902
    6. 'b' → logprob: -14.752860069274902
    7. '_s' → logprob: -15.627860069274902
    8. '_space' → logprob: -15.877860069274902
    9. '_p' → logprob: -16.002859115600586
    10. '_f' → logprob: -16.127859115600586

Token 93: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.507784366607666
    2. '
' → logprob: -1.507784366607666
    3. '<|end|>' → logprob: -2.632784366607666
    4. '\n' → logprob: -3.132784366607666
    5. '    
' → logprob: -4.507784366607666
    6. ' ' → logprob: -4.507784366607666
    7. ')' → logprob: -4.632784366607666
    8. ' return' → logprob: -4.757784366607666
    9. 'return' → logprob: -5.007784366607666
    10. '\' → logprob: -5.632784366607666

Token 94: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29120099544525146
    2. 'int' → logprob: -1.7912009954452515
    3. ' ' → logprob: -3.166201114654541
    4. ' (' → logprob: -4.166201114654541
    5. '(int' → logprob: -4.166201114654541
    6. ' int' → logprob: -4.666201114654541
    7. '(' → logprob: -6.416201114654541
    8. '2' → logprob: -7.666201114654541
    9. 'read' → logprob: -7.666201114654541
    10. ' read' → logprob: -9.666200637817383

Token 95: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4465937316417694
    2. '1' → logprob: -1.1965937614440918
    3. ' int' → logprob: -3.946593761444092
    4. 'min' → logprob: -4.071593761444092
    5. '(int' → logprob: -5.321593761444092
    6. ' ' → logprob: -5.446593761444092
    7. ' (' → logprob: -5.821593761444092
    8. '2' → logprob: -5.946593761444092
    9. ' min' → logprob: -5.946593761444092
    10. ')' → logprob: -6.321593761444092

Token 96: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0432891920208931
    2. '_b' → logprob: -3.1682891845703125
    3. '_c' → logprob: -8.918289184570312
    4. 'a' → logprob: -9.793289184570312
    5. '_' → logprob: -9.918289184570312
    6. ')' → logprob: -10.793289184570312
    7. ' _' → logprob: -12.668289184570312
    8. ')_' → logprob: -12.730789184570312
    9. ' ' → logprob: -12.918289184570312
    10. '```' → logprob: -13.168289184570312

Token 97: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13231638073921204
    2. '+' → logprob: -2.2573163509368896
    3. ' -' → logprob: -4.382316589355469
    4. '-' → logprob: -5.882316589355469
    5. ' *' → logprob: -6.757316589355469
    6. ')' → logprob: -6.882316589355469
    7. '<|end|>' → logprob: -7.007316589355469
    8. '*' → logprob: -7.757316589355469
    9. ' ' → logprob: -8.132316589355469
    10. ' )' → logprob: -9.257316589355469

Token 98: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1269504725933075
    2. ' int' → logprob: -2.12695050239563
    3. '1' → logprob: -11.87695026397705
    4. '(int' → logprob: -13.00195026397705
    5. ' ' → logprob: -13.12695026397705
    6. ')' → logprob: -13.12695026397705
    7. '=int' → logprob: -13.12695026397705
    8. '[int' → logprob: -13.75195026397705
    9. '   ' → logprob: -13.87695026397705
    10. '2' → logprob: -13.87695026397705

Token 99: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00045795587357133627
    2. '_' → logprob: -7.750457763671875
    3. ')' → logprob: -11.375457763671875
    4. ')_' → logprob: -11.625457763671875
    5. 'b' → logprob: -12.750457763671875
    6. '_)' → logprob: -13.250457763671875
    7. '_a' → logprob: -14.375457763671875
    8. ' _' → logprob: -14.500457763671875
    9. '_c' → logprob: -15.250457763671875
    10. '_B' → logprob: -16.125457763671875

Token 100: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029391130432486534
    2. ' )' → logprob: -3.654391050338745
    3. ' +' → logprob: -6.279391288757324
    4. '+' → logprob: -6.779391288757324
    5. ' ' → logprob: -11.029391288757324
    6. '))' → logprob: -11.279391288757324
    7. '1' → logprob: -11.654391288757324
    8. ')))' → logprob: -12.029391288757324
    9. '#' → logprob: -12.904391288757324
    10. ')
' → logprob: -12.904391288757324

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022693241480737925
    2. ' ' → logprob: -6.252269268035889
    3. '2' → logprob: -8.127269744873047
    4. ')' → logprob: -10.377269744873047
    5. '3' → logprob: -11.252269744873047
    6. '<|end|>' → logprob: -14.752269744873047
    7. '   ' → logprob: -15.627269744873047
    8. ' )' → logprob: -15.752269744873047
    9. '4' → logprob: -16.502269744873047
    10. '  ' → logprob: -16.564769744873047

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000959700730163604
    2. ' ' → logprob: -7.000959873199463
    3. '2' → logprob: -10.125959396362305
    4. ')' → logprob: -12.125959396362305
    5. '3' → logprob: -13.125959396362305
    6. ' )' → logprob: -16.000959396362305
    7. '  ' → logprob: -16.000959396362305
    8. '   ' → logprob: -16.250959396362305
    9. 'g' → logprob: -17.188459396362305
    10. '4' → logprob: -17.188459396362305

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.599403423024341e-05
    2. ' )' → logprob: -9.750065803527832
    3. ')
' → logprob: -12.500065803527832
    4. '))' → logprob: -13.250065803527832
    5. ')))' → logprob: -14.125065803527832
    6. ' ' → logprob: -15.125065803527832
    7. '   ' → logprob: -15.500065803527832
    8. '+' → logprob: -16.12506675720215
    9. ')*' → logprob: -16.12506675720215
    10. ')return' → logprob: -16.12506675720215

Token 104: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4830171465873718
    2. '   ' → logprob: -1.3580172061920166
    3. '\n' → logprob: -2.6080172061920166
    4. '    
' → logprob: -4.3580169677734375
    5. ' return' → logprob: -5.1080169677734375
    6. '  
' → logprob: -5.2330169677734375
    7. 'return' → logprob: -5.3580169677734375
    8. ' ' → logprob: -5.4830169677734375
    9. '\' → logprob: -5.4830169677734375
    10. '<|end|>' → logprob: -5.4830169677734375

Token 105: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9974379539489746
    2. '   ' → logprob: -1.2474379539489746
    3. '\n' → logprob: -1.4974379539489746
    4. ' ' → logprob: -2.9974379539489746
    5. '\' → logprob: -3.9974379539489746
    6. 'return' → logprob: -4.372437953948975
    7. ' return' → logprob: -4.622437953948975
    8. '    
' → logprob: -4.997437953948975
    9. '' → logprob: -5.247437953948975
    10. ' 
' → logprob: -5.372437953948975

Token 106: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06197518855333328
    2. '(result' → logprob: -2.8119752407073975
    3. ' (' → logprob: -13.061975479125977
    4. '('' → logprob: -13.186975479125977
    5. '(
' → logprob: -13.936975479125977
    6. '(

' → logprob: -14.186975479125977
    7. '("("' → logprob: -14.436975479125977
    8. '()' → logprob: -14.561975479125977
    9. '((' → logprob: -15.311975479125977
    10. '(res' → logprob: -15.936975479125977

Token 107: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')`' → logprob: -18.375
    5. '')' → logprob: -19.125
    6. '))' → logprob: -19.375
    7. ')

' → logprob: -20.25
    8. '`)' → logprob: -20.625
    9. '   ' → logprob: -20.75
    10. '）' → logprob: -21.25

Token 108: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0775468498468399
    2. '\n' → logprob: -2.8275468349456787
    3. 'if' → logprob: -5.327547073364258
    4. '<|end|>' → logprob: -5.952547073364258
    5. '' → logprob: -6.327547073364258
    6. 'newline' → logprob: -6.702547073364258
    7. '#' → logprob: -6.827547073364258
    8. '\' → logprob: -7.077547073364258
    9. '  
' → logprob: -7.577547073364258
    10. ')' → logprob: -7.827547073364258

Token 109: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.010061809793114662
    2. ' ' → logprob: -5.135061740875244
    3. '__' → logprob: -6.260061740875244
    4. '_' → logprob: -6.385061740875244
    5. ' ' → logprob: -8.260062217712402
    6. ' _' → logprob: -9.510062217712402
    7. ' ​' → logprob: -10.010062217712402
    8. '  ' → logprob: -10.260062217712402
    9. ' ‌' → logprob: -10.510062217712402
    10. '<|end|>' → logprob: -11.385062217712402

Token 110: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01730451174080372
    2. ' __' → logprob: -4.767304420471191
    3. ' ==' → logprob: -5.017304420471191
    4. '==' → logprob: -7.392304420471191
    5. '[' → logprob: -7.642304420471191
    6. '_' → logprob: -8.017304420471191
    7. '.__' → logprob: -9.267304420471191
    8. '__.__' → logprob: -9.392304420471191
    9. '__["' → logprob: -9.642304420471191
    10. '__[' → logprob: -9.892304420471191

Token 111: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -13.50000286102295
    3. '__.__' → logprob: -14.87500286102295
    4. '==' → logprob: -15.00000286102295
    5. '__
' → logprob: -15.00000286102295
    6. '__

' → logprob: -15.37500286102295
    7. '___' → logprob: -15.37500286102295
    8. '____' → logprob: -15.50000286102295
    9. '__('' → logprob: -17.500003814697266
    10. '__
' → logprob: -17.625003814697266

Token 112: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13582971692085266
    2. '==' → logprob: -2.7608296871185303
    3. '__' → logprob: -2.7608296871185303
    4. '=="' → logprob: -8.51082992553711
    5. '=' → logprob: -8.63582992553711
    6. ' =' → logprob: -9.38582992553711
    7. '=='' → logprob: -11.38582992553711
    8. '_' → logprob: -11.63582992553711
    9. '.' → logprob: -11.63582992553711
    10. ' =="' → logprob: -11.76082992553711

Token 113: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16024738550186157
    2. ''' → logprob: -1.9102473258972168
    3. ' "' → logprob: -10.910247802734375
    4. ' "__' → logprob: -12.660247802734375
    5. ' '' → logprob: -13.910247802734375
    6. '__' → logprob: -14.785247802734375
    7. '"user' → logprob: -15.160247802734375
    8. ' '__' → logprob: -16.285247802734375
    9. '`' → logprob: -16.910247802734375
    10. ''s' → logprob: -17.410247802734375

Token 114: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001503313542343676
    2. 'name' → logprob: -6.5015034675598145
    3. '__' → logprob: -14.001502990722656
    4. '_main' → logprob: -15.626502990722656
    5. 'm' → logprob: -17.626502990722656
    6. 'ma' → logprob: -17.876502990722656
    7. ' main' → logprob: -18.251502990722656
    8. '```' → logprob: -19.126502990722656
    9. '-main' → logprob: -19.626502990722656
    10. 'code' → logprob: -19.626502990722656

Token 115: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20198741555213928
    2. '__':
' → logprob: -1.701987385749817
    3. '_' → logprob: -7.576987266540527
    4. '__:' → logprob: -9.826987266540527
    5. '':' → logprob: -12.201987266540527
    6. '__":
' → logprob: -13.701987266540527
    7. '__.' → logprob: -14.076987266540527
    8. '___' → logprob: -15.076987266540527
    9. ':' → logprob: -15.451987266540527
    10. '_'' → logprob: -15.576987266540527

Token 116: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3303021192550659
    2. '   ' → logprob: -1.830302119255066
    3. 'main' → logprob: -2.7053022384643555
    4. '	main' → logprob: -3.0803022384643555
    5. '    
' → logprob: -5.3303022384643555
    6. '_main' → logprob: -6.4553022384643555
    7. ' 
' → logprob: -6.9553022384643555
    8. ' ' → logprob: -9.330302238464355
    9. '    ' → logprob: -9.330302238464355
    10. '(main' → logprob: -9.455302238464355

Token 117: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.005234002135694027
    2. ' main' → logprob: -5.2552337646484375
    3. '	main' → logprob: -15.505233764648438
    4. '   ' → logprob: -16.505233764648438
    5. '_main' → logprob: -19.255233764648438
    6. '(main' → logprob: -20.130233764648438
    7. 'Main' → logprob: -21.380233764648438
    8. '.main' → logprob: -21.630233764648438
    9. ' ' → logprob: -21.880233764648438
    10. '  ' → logprob: -22.005233764648438

Token 118: '_process' (ID: 25444)
  Prédit: '_process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_process' → logprob: -0.0002441741817165166
    2. '_' → logprob: -8.375244140625
    3. '_pro' → logprob: -12.125244140625
    4. '__' → logprob: -12.750244140625
    5. '()' → logprob: -13.125244140625
    6. '_processor' → logprob: -14.000244140625
    7. '_Process' → logprob: -14.125244140625
    8. '_proc' → logprob: -15.000244140625
    9. '_p' → logprob: -15.750244140625
    10. '_PROCESS' → logprob: -15.750244140625

Token 119: '()' (ID: 416)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5709636211395264
    2. '<|end|>' → logprob: -1.8209636211395264
    3. '
' → logprob: -2.0709636211395264
    4. ')' → logprob: -2.8209636211395264
    5. '#' → logprob: -3.1959636211395264
    6. '(' → logprob: -3.9459636211395264
    7. '()' → logprob: -4.9459638595581055
    8. '\' → logprob: -4.9459638595581055
    9. '```' → logprob: -5.1959638595581055
    10. 'newline' → logprob: -5.5709638595581055


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 117
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 51
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 42.74%
Précision adaptée (1ère position): 43.59%
Précision (top 10): 83.76%
================================================================================
