================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

N,M = [*map(int, input().split())]

def factors(x):
    p=2
    l=[]
    while p*p<=x:
        if x%p:
            p+=1
        else:
            l.append(p)
            x//=p
    if x>1: l+=[x]
    return l

def C(n,r):
    return reduce(lambda a,b:a*b,range(n-r+1,n+1),1)//reduce(lambda a,b:a*b,range(1,r+1),1) if 0<=r<=n else 0

lst = factors(M)
output = [1]
j=0
while j < len(lst):
    k = 1
    while j+k < len(lst) and lst[j] == lst[j+k]:
        k+=1
    output[0] *= C(N+k-1, k)
    output[0] %= 10**9+7
    j+=k

print(output[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016088567674160004
    2. '(lambda' → logprob: -4.391088485717773
    3. 'def' → logprob: -6.141088485717773
    4. ',' → logprob: -7.391088485717773
    5. '(
' → logprob: -8.391088485717773
    6. '.' → logprob: -9.016088485717773
    7. '\' → logprob: -9.266088485717773
    8. '```' → logprob: -9.641088485717773
    9. 'd' → logprob: -10.016088485717773
    10. '\(' → logprob: -10.391088485717773

Token 6: ',M' (ID: 54127)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5548996925354004
    2. ',' → logprob: -1.8048996925354004
    3. ' =' → logprob: -1.8048996925354004
    4. '_' → logprob: -2.8048996925354004
    5. ' ' → logprob: -4.9298996925354
    6. 'u' → logprob: -5.1798996925354
    7. 'umber' → logprob: -5.1798996925354
    8. 'um' → logprob: -5.3048996925354
    9. '.' → logprob: -5.5548996925354
    10. 'a' → logprob: -6.1798996925354

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2573299705982208
    2. ' =' → logprob: -1.5073299407958984
    3. ',' → logprob: -5.257329940795898
    4. ')' → logprob: -9.257329940795898
    5. ' ' → logprob: -10.757329940795898
    6. ' =
' → logprob: -11.507329940795898
    7. ' ,' → logprob: -11.757329940795898
    8. '_' → logprob: -12.007329940795898
    9. '=
' → logprob: -12.007329940795898
    10. ''' → logprob: -12.507329940795898

Token 8: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1908077746629715
    2. 'map' → logprob: -1.815807819366455
    3. ' ' → logprob: -4.690807819366455
    4. '0' → logprob: -7.690807819366455
    5. 'input' → logprob: -7.815807819366455
    6. ' input' → logprob: -7.815807819366455
    7. '10' → logprob: -8.190807342529297
    8. 'int' → logprob: -9.940807342529297
    9. ' int' → logprob: -10.440807342529297
    10. '100' → logprob: -10.690807342529297

Token 9: '*' (ID: 9)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05943433195352554
    2. ' int' → logprob: -2.934434413909912
    3. '10' → logprob: -5.934434413909912
    4. ' map' → logprob: -7.309434413909912
    5. 'map' → logprob: -7.684434413909912
    6. ' ' → logprob: -8.309433937072754
    7. '0' → logprob: -8.934433937072754
    8. '100' → logprob: -9.184433937072754
    9. '5' → logprob: -9.684433937072754
    10. ']int' → logprob: -9.684433937072754

Token 10: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.002422152552753687
    2. 'input' → logprob: -6.252422332763672
    3. ' map' → logprob: -7.877422332763672
    4. 'range' → logprob: -9.502422332763672
    5. '(map' → logprob: -10.252422332763672
    6. '```' → logprob: -12.877422332763672
    7. ' input' → logprob: -14.377422332763672
    8. '	map' → logprob: -15.002422332763672
    9. 'open' → logprob: -15.252422332763672
    10. '`' → logprob: -15.627422332763672

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003311627544462681
    2. '(' → logprob: -6.003311634063721
    3. 'int' → logprob: -7.253311634063721
    4. '(str' → logprob: -9.253311157226562
    5. ' int' → logprob: -11.753311157226562
    6. ',int' → logprob: -12.128311157226562
    7. ' (' → logprob: -12.503311157226562
    8. '<int' → logprob: -12.628311157226562
    9. ']int' → logprob: -12.878311157226562
    10. '```' → logprob: -13.128311157226562

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13243845105171204
    2. 'input' → logprob: -2.2574384212493896
    3. ',input' → logprob: -4.382438659667969
    4. ')' → logprob: -5.757438659667969
    5. ' input' → logprob: -6.757438659667969
    6. '(' → logprob: -6.757438659667969
    7. ',' → logprob: -6.882438659667969
    8. ')]' → logprob: -8.757438659667969
    9. '```' → logprob: -9.632438659667969
    10. '`' → logprob: -9.632438659667969

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005982123780995607
    2. ' input' → logprob: -5.130981922149658
    3. '(input' → logprob: -10.380982398986816
    4. ')' → logprob: -11.255982398986816
    5. ',input' → logprob: -12.130982398986816
    6. '=input' → logprob: -13.380982398986816
    7. ')]' → logprob: -14.005982398986816
    8. 'open' → logprob: -14.755982398986816
    9. '```' → logprob: -14.880982398986816
    10. '[input' → logprob: -15.005982398986816

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005824613617733121
    2. '()' → logprob: -7.750582695007324
    3. '())' → logprob: -8.875582695007324
    4. '()]' → logprob: -11.625582695007324
    5. ' ().' → logprob: -14.250582695007324
    6. '()].' → logprob: -14.250582695007324
    7. '(' → logprob: -14.750582695007324
    8. ')' → logprob: -15.500582695007324
    9. '());' → logprob: -15.500582695007324
    10. ')]' → logprob: -15.500582695007324

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005882986588403583
    2. 'strip' → logprob: -7.500588417053223
    3. 'rstrip' → logprob: -10.375588417053223
    4. '(split' → logprob: -13.125588417053223
    5. ' split' → logprob: -13.625588417053223
    6. 'spl' → logprob: -14.625588417053223
    7. 'read' → logprob: -15.250588417053223
    8. ')' → logprob: -16.500587463378906
    9. '```' → logprob: -17.125587463378906
    10. '().' → logprob: -17.625587463378906

Token 16: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.43792524933815
    2. ')]' → logprob: -1.0629252195358276
    3. ')' → logprob: -4.937925338745117
    4. '()]' → logprob: -7.312925338745117
    5. ')])' → logprob: -7.562925338745117
    6. '()' → logprob: -8.187925338745117
    7. '))' → logprob: -8.562925338745117
    8. '(' → logprob: -9.312925338745117
    9. '('' → logprob: -9.312925338745117
    10. '()))' → logprob: -9.437925338745117

Token 17: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025037210434675217
    2. ']' → logprob: -6.252503871917725
    3. ')' → logprob: -7.627503871917725
    4. ')])' → logprob: -10.252503395080566
    5. '])]' → logprob: -10.502503395080566
    6. '])' → logprob: -11.377503395080566
    7. '')]' → logprob: -12.627503395080566
    8. ')],' → logprob: -12.627503395080566
    9. '`]' → logprob: -13.252503395080566
    10. ')]
' → logprob: -13.377503395080566

Token 18: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9318044781684875
    2. 'arr' → logprob: -0.9318044781684875
    3. 'A' → logprob: -2.0568044185638428
    4. 'data' → logprob: -3.1818044185638428
    5. 'lst' → logprob: -4.056804656982422
    6. 'array' → logprob: -4.431804656982422
    7. 'numbers' → logprob: -5.181804656982422
    8. 'dp' → logprob: -6.181804656982422
    9. '```' → logprob: -6.931804656982422
    10. 'matrix' → logprob: -7.931804656982422

Token 19: ' factors' (ID: 11652)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.5338085293769836
    2. ' ' → logprob: -1.5338084697723389
    3. ' factorial' → logprob: -2.783808469772339
    4. ' f' → logprob: -3.033808469772339
    5. ' max' → logprob: -4.283808708190918
    6. ' gcd' → logprob: -4.533808708190918
    7. 'reduce' → logprob: -4.783808708190918
    8. ' solve' → logprob: -5.283808708190918
    9. ' factor' → logprob: -5.408808708190918
    10. '_' → logprob: -5.408808708190918

Token 20: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007447252050042152
    2. '_' → logprob: -5.007447242736816
    3. '(n' → logprob: -8.007447242736816
    4. ' (' → logprob: -9.382447242736816
    5. '_list' → logprob: -10.132447242736816
    6. '_of' → logprob: -10.132447242736816
    7. '_(' → logprob: -10.257447242736816
    8. '(x' → logprob: -10.632447242736816
    9. '```' → logprob: -10.757447242736816
    10. '(_' → logprob: -10.882447242736816

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016319748247042298
    2. ')' → logprob: -6.501631736755371
    3. ' ):' → logprob: -9.126631736755371
    4. '):
' → logprob: -11.376631736755371
    5. ':' → logprob: -12.126631736755371
    6. ',' → logprob: -13.626631736755371
    7. ')：' → logprob: -14.626631736755371
    8. '*' → logprob: -15.001631736755371
    9. ' ' → logprob: -15.126631736755371
    10. '=' → logprob: -15.501631736755371

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0074646431021392345
    2. ' ' → logprob: -5.507464408874512
    3. '[' → logprob: -7.132464408874512
    4. ':' → logprob: -7.382464408874512
    5. '    
' → logprob: -8.507464408874512
    6. '  ' → logprob: -8.507464408874512
    7. ' for' → logprob: -8.757464408874512
    8. '    ' → logprob: -9.132464408874512
    9. '	yield' → logprob: -9.132464408874512
    10. '```' → logprob: -9.132464408874512

Token 23: ' p' (ID: 275)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.956352949142456
    2. ' if' → logprob: -2.331352949142456
    3. ' yield' → logprob: -2.331352949142456
    4. ' for' → logprob: -2.456352949142456
    5. 'f' → logprob: -2.581352949142456
    6. ' r' → logprob: -3.081352949142456
    7. '   ' → logprob: -3.331352949142456
    8. ' 
' → logprob: -3.456352949142456
    9. ' i' → logprob: -3.581352949142456
    10. ' ' → logprob: -3.581352949142456

Token 24: '=' (ID: 28)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0898897647857666
    2. ' =' → logprob: -1.0898897647857666
    3. '=' → logprob: -1.3398897647857666
    4. 'ass' → logprob: -2.9648897647857666
    5. 'ro' → logprob: -5.2148895263671875
    6. ' ' → logprob: -6.3398895263671875
    7. '   ' → logprob: -6.8398895263671875
    8. 'def' → logprob: -7.0898895263671875
    9. ' factors' → logprob: -7.2148895263671875
    10. ' r' → logprob: -7.3398895263671875

Token 25: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025081203784793615
    2. ' ' → logprob: -7.002508163452148
    3. '[]' → logprob: -7.127508163452148
    4. '1' → logprob: -7.377508163452148
    5. '[' → logprob: -9.502508163452148
    6. '0' → logprob: -10.502508163452148
    7. ' []' → logprob: -10.502508163452148
    8. 'x' → logprob: -11.252508163452148
    9. '[]
' → logprob: -12.002508163452148
    10. '[x' → logprob: -12.252508163452148

Token 26: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.03593909740448
    2. ' while' → logprob: -1.78593909740448
    3. ':' → logprob: -2.1609392166137695
    4. '<|end|>' → logprob: -2.1609392166137695
    5. '   ' → logprob: -2.5359392166137695
    6. ' ' → logprob: -2.7859392166137695
    7. '
' → logprob: -3.4109392166137695
    8. ',' → logprob: -4.1609392166137695
    9. ' 
' → logprob: -5.0359392166137695
    10. '<|end|>' → logprob: -5.1609392166137695

Token 27: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4709484279155731
    2. ' while' → logprob: -1.0959484577178955
    3. '   ' → logprob: -4.470948219299316
    4. '
' → logprob: -4.970948219299316
    5. ' ' → logprob: -4.970948219299316
    6. ':' → logprob: -5.595948219299316
    7. '	while' → logprob: -5.970948219299316
    8. ',' → logprob: -6.095948219299316
    9. '```' → logprob: -6.345948219299316
    10. '<|end|>' → logprob: -6.720948219299316

Token 28: ' l' (ID: 305)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8400049805641174
    2. 'while' → logprob: -1.3400049209594727
    3. ' while' → logprob: -1.3400049209594727
    4. ' factors' → logprob: -4.090004920959473
    5. '   ' → logprob: -4.215004920959473
    6. ' f' → logprob: -5.090004920959473
    7. ' ' → logprob: -5.965004920959473
    8. 'result' → logprob: -6.090004920959473
    9. 'res' → logprob: -7.090004920959473
    10. ' result' → logprob: -8.465004920959473

Token 29: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.11591862887144089
    2. '=' → logprob: -2.3659186363220215
    3. 'ist' → logprob: -4.9909186363220215
    4. ' =' → logprob: -5.1159186363220215
    5. '=[]
' → logprob: -6.6159186363220215
    6. '=[' → logprob: -7.2409186363220215
    7. '=[]
' → logprob: -8.240918159484863
    8. '   ' → logprob: -9.365918159484863
    9. '[]' → logprob: -9.365918159484863
    10. 'st' → logprob: -9.740918159484863

Token 30: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.31676363945007324
    2. 'while' (adapté à ' while') → logprob: -1.3167636394500732
    3. ' ' → logprob: -6.316763877868652
    4. '   ' → logprob: -6.816763877868652
    5. '```' → logprob: -8.691763877868652
    6. 'While' → logprob: -9.066763877868652
    7. '    ' → logprob: -9.316763877868652
    8. '<|end|>' → logprob: -9.566763877868652
    9. '	while' → logprob: -9.941763877868652
    10. '  ' → logprob: -10.566763877868652

Token 32: ' p' (ID: 275)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6817119717597961
    2. ' p' → logprob: -0.9317119717597961
    3. 'x' → logprob: -2.9317119121551514
    4. 'p' → logprob: -3.0567119121551514
    5. ' ' → logprob: -11.30671215057373
    6. ' (' → logprob: -12.93171215057373
    7. '(p' → logprob: -13.18171215057373
    8. '```' → logprob: -13.55671215057373
    9. ' ' → logprob: -13.68171215057373
    10. '   ' → logprob: -14.18171215057373

Token 33: '*p' (ID: 72579)
  Prédit: '*p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*p' → logprob: -0.3463328182697296
    2. '*' → logprob: -1.8463327884674072
    3. ' *' → logprob: -2.0963327884674072
    4. '<=' → logprob: -4.971333026885986
    5. ' <=' → logprob: -5.346333026885986
    6. '*x' → logprob: -8.596332550048828
    7. '*i' → logprob: -9.971332550048828
    8. '**' → logprob: -10.221332550048828
    9. '*l' → logprob: -11.846332550048828
    10. '*q' → logprob: -12.096332550048828

Token 34: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6326496601104736
    2. ' <=' → logprob: -0.7576496601104736
    3. '<' → logprob: -10.882649421691895
    4. ')<=' → logprob: -11.882649421691895
    5. ']<=' → logprob: -12.007649421691895
    6. '```' → logprob: -12.132649421691895
    7. '<|end|>' → logprob: -12.757649421691895
    8. '=' → logprob: -13.007649421691895
    9. ' ' → logprob: -13.507649421691895
    10. ' <=",' → logprob: -13.632649421691895

Token 35: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00023071514442563057
    2. ' x' → logprob: -8.37523078918457
    3. '	x' → logprob: -15.87523078918457
    4. ' ' → logprob: -17.75023078918457
    5. '   ' → logprob: -18.87523078918457
    6. '```' → logprob: -18.87523078918457
    7. '{x' → logprob: -20.00023078918457
    8. ')x' → logprob: -20.00023078918457
    9. ' ' → logprob: -20.62523078918457
    10. '(x' → logprob: -20.62523078918457

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003154432924930006
    2. ':
' → logprob: -9.00031566619873
    3. ' and' → logprob: -9.00031566619873
    4. ' :' → logprob: -9.75031566619873
    5. 'and' → logprob: -12.62531566619873
    6. ':**' → logprob: -13.37531566619873
    7. '<|end|>' → logprob: -13.37531566619873
    8. '):' → logprob: -13.75031566619873
    9. ',' → logprob: -14.25031566619873
    10. ':

' → logprob: -14.87531566619873

Token 37: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5840297937393188
    2. '       ' → logprob: -1.5840297937393188
    3. '<|end|>' → logprob: -1.9590297937393188
    4. '   ' → logprob: -2.8340296745300293
    5. '    ' → logprob: -4.209029674530029
    6. ':' → logprob: -4.709029674530029
    7. '<|end|>' → logprob: -5.709029674530029
    8. '  ' → logprob: -5.709029674530029
    9. ' :' → logprob: -5.959029674530029
    10. ' 
' → logprob: -6.584029674530029

Token 38: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08842609077692032
    2. '<|end|>' → logprob: -2.713426113128662
    3. ' 
' → logprob: -4.713426113128662
    4. ' if' → logprob: -5.463426113128662
    5. '    ' → logprob: -6.338426113128662
    6. '<|end|>' → logprob: -7.088426113128662
    7. ':' → logprob: -7.713426113128662
    8. ' :' → logprob: -8.088425636291504
    9. '```' → logprob: -8.338425636291504
    10. 'if' (adapté à ' if') → logprob: -8.588425636291504

Token 39: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31326285004615784
    2. 'x' → logprob: -1.3132628202438354
    3. '	x' → logprob: -14.563262939453125
    4. '(x' → logprob: -14.938262939453125
    5. ' ' → logprob: -15.813262939453125
    6. '>x' → logprob: -16.938262939453125
    7. '   ' → logprob: -17.188262939453125
    8. ')x' → logprob: -17.438262939453125
    9. '%x' → logprob: -17.688262939453125
    10. ' (' → logprob: -17.938262939453125

Token 40: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.054982028901576996
    2. ' %' → logprob: -2.9299819469451904
    3. '%x' → logprob: -9.30498218536377
    4. '%i' → logprob: -12.42998218536377
    5. '%e' → logprob: -12.92998218536377
    6. '%b' → logprob: -14.30498218536377
    7. '%c' → logprob: -15.05498218536377
    8. ' ' → logprob: -15.30498218536377
    9. '%n' → logprob: -15.55498218536377
    10. '%A' → logprob: -15.55498218536377

Token 41: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4140441635390744e-05
    2. ' p' → logprob: -11.250014305114746
    3. '2' → logprob: -13.750014305114746
    4. ' ' → logprob: -18.00001335144043
    5. '   ' → logprob: -18.25001335144043
    6. '<|end|>' → logprob: -19.25001335144043
    7. '<p' → logprob: -19.87501335144043
    8. '	p' → logprob: -20.37501335144043
    9. '  ' → logprob: -20.37501335144043
    10. '```' → logprob: -21.00001335144043

Token 42: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08921120315790176
    2. ' ==' → logprob: -2.4642112255096436
    3. ')==' → logprob: -9.339211463928223
    4. '=' → logprob: -9.589211463928223
    5. ']==' → logprob: -10.089211463928223
    6. '===' → logprob: -10.464211463928223
    7. ':' → logprob: -11.214211463928223
    8. ')' → logprob: -11.214211463928223
    9. '0' → logprob: -12.839211463928223
    10. '<|end|>' → logprob: -13.089211463928223

Token 43: '           ' (ID: 352)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3228215277194977
    2. ' +=' → logprob: -1.6978214979171753
    3. '+=' → logprob: -3.322821617126465
    4. 'p' → logprob: -3.947821617126465
    5. '   ' → logprob: -4.197821617126465
    6. '+' → logprob: -4.197821617126465
    7. ' ' → logprob: -6.572821617126465
    8. '       ' → logprob: -6.947821617126465
    9. '+p' → logprob: -7.197821617126465
    10. '	p' → logprob: -7.322821617126465

Token 44: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.474103718996048
    2. 'p' (adapté à ' p') → logprob: -0.9741036891937256
    3. '   ' → logprob: -11.849103927612305
    4. '+' → logprob: -11.849103927612305
    5. '	p' → logprob: -12.099103927612305
    6. '+p' → logprob: -12.849103927612305
    7. '1' → logprob: -13.224103927612305
    8. '+=' → logprob: -14.224103927612305
    9. ' +=' → logprob: -14.849103927612305
    10. '```' → logprob: -15.099103927612305

Token 45: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005626845522783697
    2. ' +=' → logprob: -7.50056266784668
    3. '=' → logprob: -12.12556266784668
    4. '+' → logprob: -12.75056266784668
    5. ']+=' → logprob: -13.75056266784668
    6. '+='' → logprob: -15.37556266784668
    7. '+="' → logprob: -17.00056266784668
    8. '```' → logprob: -17.25056266784668
    9. '+=(' → logprob: -17.87556266784668
    10. '++' → logprob: -17.87556266784668

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.6250057220459
    4. '+' → logprob: -19.0000057220459
    5. '```' → logprob: -19.4375057220459
    6. '<|end|>' → logprob: -19.4375057220459
    7. '१' → logprob: -19.7500057220459
    8. '۱' → logprob: -19.8750057220459
    9. '  ' → logprob: -20.1250057220459
    10. '১' → logprob: -20.2500057220459

Token 47: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8340924978256226
    2. '       ' → logprob: -0.9590924978256226
    3. ' else' → logprob: -1.7090924978256226
    4. '```' → logprob: -7.709092617034912
    5. '   ' → logprob: -7.959092617034912
    6. '	else' → logprob: -8.959092140197754
    7. '
' → logprob: -9.209092140197754
    8. ':
' → logprob: -9.209092140197754
    9. '<|end|>' → logprob: -9.709092140197754
    10. ':' → logprob: -10.209092140197754

Token 48: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6448297500610352
    2. ' else' → logprob: -0.7698297500610352
    3. '       ' → logprob: -4.644829750061035
    4. '   ' → logprob: -6.269829750061035
    5. '	else' → logprob: -7.769829750061035
    6. '```' → logprob: -9.519829750061035
    7. '_else' → logprob: -10.519829750061035
    8. 'continue' → logprob: -10.894829750061035
    9. ' ' → logprob: -10.894829750061035
    10. '<|end|>' → logprob: -10.894829750061035

Token 49: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1621936559677124
    2. ' else' → logprob: -1.9121936559677124
    3. '       ' → logprob: -6.537193775177002
    4. '   ' → logprob: -7.787193775177002
    5. '	else' → logprob: -9.287193298339844
    6. ':
' → logprob: -12.162193298339844
    7. '_else' → logprob: -13.162193298339844
    8. ':' → logprob: -14.037193298339844
    9. '```' → logprob: -14.037193298339844
    10. ' ' → logprob: -14.162193298339844

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5236209630966187
    2. ':
' → logprob: -0.8986209630966187
    3. '           ' → logprob: -8.39862060546875
    4. ':

' → logprob: -9.02362060546875
    5. ':
' → logprob: -10.14862060546875
    6. '       ' → logprob: -10.77362060546875
    7. '   ' → logprob: -10.89862060546875
    8. '```' → logprob: -10.89862060546875
    9. 'x' → logprob: -11.14862060546875
    10. ' :
' → logprob: -11.77362060546875

Token 51: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9165005087852478
    2. '           ' → logprob: -1.0415005683898926
    3. 'x' → logprob: -2.1665005683898926
    4. ' l' → logprob: -2.2915005683898926
    5. 'l' → logprob: -3.9165005683898926
    6. '```' → logprob: -4.791500568389893
    7. ' ' → logprob: -7.166500568389893
    8. '            ' → logprob: -7.166500568389893
    9. '               ' → logprob: -7.916500568389893
    10. '
' → logprob: -8.166500091552734

Token 52: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1028265580534935
    2. ' x' → logprob: -2.3528265953063965
    3. 'l' (adapté à ' l') → logprob: -6.1028265953063965
    4. ' l' → logprob: -8.102826118469238
    5. '           ' → logprob: -9.602826118469238
    6. '               ' → logprob: -12.852826118469238
    7. '	x' → logprob: -12.977826118469238
    8. '   ' → logprob: -13.227826118469238
    9. '```' → logprob: -13.352826118469238
    10. '            ' → logprob: -14.602826118469238

Token 53: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032059962395578623
    2. '.' → logprob: -5.7532057762146
    3. '.ap' → logprob: -11.628206253051758
    4. ' .' → logprob: -11.753206253051758
    5. '.extend' → logprob: -12.628206253051758
    6. '.app' → logprob: -13.128206253051758
    7. '.Append' → logprob: -13.503206253051758
    8. '.setdefault' → logprob: -13.753206253051758
    9. ').' → logprob: -14.128206253051758
    10. '.add' → logprob: -14.128206253051758

Token 54: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00024524700711481273
    2. '(' → logprob: -8.375245094299316
    3. '(x' → logprob: -11.250245094299316
    4. 'p' → logprob: -14.000245094299316
    5. '((' → logprob: -14.250245094299316
    6. '(
' → logprob: -15.750245094299316
    7. ' (' → logprob: -17.375246047973633
    8. '(

' → logprob: -17.375246047973633
    9. ' p' → logprob: -19.125246047973633
    10. 'x' → logprob: -19.625246047973633

Token 55: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12785597145557404
    2. ')' → logprob: -2.1278560161590576
    3. ')
' → logprob: -7.1278557777404785
    4. '           ' → logprob: -9.877856254577637
    5. ')

' → logprob: -10.252856254577637
    6. ' )
' → logprob: -11.627856254577637
    7. '),' → logprob: -12.127856254577637
    8. ')x' → logprob: -12.502856254577637
    9. ')p' → logprob: -13.127856254577637
    10. ',' → logprob: -13.252856254577637

Token 56: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6337472200393677
    2. '           ' → logprob: -0.7587472200393677
    3. ' x' → logprob: -7.133747100830078
    4. '```' → logprob: -9.008747100830078
    5. '       ' → logprob: -9.883747100830078
    6. '		' → logprob: -9.883747100830078
    7. ',' → logprob: -10.383747100830078
    8. ',x' → logprob: -11.258747100830078
    9. '(x' → logprob: -11.508747100830078
    10. '	x' → logprob: -11.633747100830078

Token 57: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.001171056181192398
    2. ' x' → logprob: -6.751171112060547
    3. '	x' → logprob: -14.126171112060547
    4. '```' → logprob: -17.251171112060547
    5. '           ' → logprob: -17.876171112060547
    6. '       ' → logprob: -18.126171112060547
    7. '   ' → logprob: -18.376171112060547
    8. ' ' → logprob: -18.501171112060547
    9. '(x' → logprob: -20.001171112060547
    10. ')x' → logprob: -20.001171112060547

Token 58: '//=' (ID: 171954)
  Prédit: '//='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.0012136871227994561
    2. '=' → logprob: -7.501213550567627
    3. ' //' → logprob: -8.126214027404785
    4. '/=' → logprob: -8.501214027404785
    5. '//' → logprob: -8.751214027404785
    6. ' =' → logprob: -13.126214027404785
    7. '/' → logprob: -14.626214027404785
    8. '=x' → logprob: -14.751214027404785
    9. ' /=' → logprob: -14.751214027404785
    10. '```' → logprob: -17.87621307373047

Token 59: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2664456789934775e-06
    2. ' p' → logprob: -13.625000953674316
    3. '<|end|>' → logprob: -18.750001907348633
    4. '<p' → logprob: -19.250001907348633
    5. '	p' → logprob: -20.375001907348633
    6. '```' → logprob: -21.000001907348633
    7. '2' → logprob: -21.375001907348633
    8. '>' → logprob: -21.500001907348633
    9. '<|end|>' → logprob: -21.500001907348633
    10. '   ' → logprob: -21.625001907348633

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13421671092510223
    2. '
' → logprob: -3.259216785430908
    3. '```' → logprob: -3.634216785430908
    4. 'l' → logprob: -4.509216785430908
    5. ' l' → logprob: -5.009216785430908
    6. 'else' → logprob: -5.134216785430908
    7. ' ' → logprob: -5.384216785430908
    8. '    
' → logprob: -5.509216785430908
    9. 'if' → logprob: -5.634216785430908
    10. 'return' → logprob: -5.634216785430908

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017277203500270844
    2. 'return' → logprob: -4.767277240753174
    3. '```' → logprob: -5.267277240753174
    4. 'l' → logprob: -7.392277240753174
    5. ' return' → logprob: -7.517277240753174
    6. ' ' → logprob: -7.767277240753174
    7. '       ' → logprob: -8.017276763916016
    8. '    
' → logprob: -8.142276763916016
    9. 'while' → logprob: -8.392276763916016
    10. ' l' → logprob: -8.642276763916016

Token 62: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.016204338520765305
    2. 'if' (adapté à ' if') → logprob: -4.391204357147217
    3. '   ' → logprob: -6.016204357147217
    4. '```' → logprob: -7.141204357147217
    5. 'else' → logprob: -8.391203880310059
    6. 'return' → logprob: -9.141203880310059
    7. ' if' → logprob: -9.516203880310059
    8. ' l' → logprob: -10.641203880310059
    9. '``' → logprob: -11.141203880310059
    10. 'while' → logprob: -12.766203880310059

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. '	x' → logprob: -19.005233764648438
    4. '   ' → logprob: -19.755233764648438
    5. ' ' → logprob: -20.255233764648438
    6. '>x' → logprob: -21.380233764648438
    7. '"x' → logprob: -22.505233764648438
    8. ')x' → logprob: -22.755233764648438
    9. '(x' → logprob: -23.005233764648438
    10. '1' → logprob: -23.255233764648438

Token 64: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -4.727905979962088e-05
    2. ' >' → logprob: -10.00004768371582
    3. '">' → logprob: -14.25004768371582
    4. '&gt' → logprob: -15.12504768371582
    5. '!=' → logprob: -15.62504768371582
    6. '1' → logprob: -15.62504768371582
    7. '```' → logprob: -15.87504768371582
    8. '>
' → logprob: -16.62504768371582
    9. '()>' → logprob: -16.62504768371582
    10. '>null' → logprob: -16.87504768371582

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -17.000009536743164
    4. '   ' → logprob: -17.625009536743164
    5. '>' → logprob: -17.875009536743164
    6. '<|end|>' → logprob: -18.875009536743164
    7. '2' → logprob: -19.625009536743164
    8. '۱' → logprob: -20.125009536743164
    9. '  ' → logprob: -20.125009536743164
    10. '`' → logprob: -20.750009536743164

Token 66: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006022418383508921
    2. ':
' → logprob: -8.000601768493652
    3. ':l' → logprob: -8.250601768493652
    4. '   ' → logprob: -13.250601768493652
    5. '       ' → logprob: -13.750601768493652
    6. ':

' → logprob: -14.500601768493652
    7. ',l' → logprob: -14.625601768493652
    8. '=' → logprob: -15.000601768493652
    9. ' :' → logprob: -15.000601768493652
    10. ',' → logprob: -15.500601768493652

Token 67: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.018919818103313446
    2. 'l' → logprob: -4.268919944763184
    3. '       ' → logprob: -5.643919944763184
    4. '   ' → logprob: -7.518919944763184
    5. '	l' → logprob: -7.518919944763184
    6. '```' → logprob: -9.768919944763184
    7. '    ' → logprob: -10.893919944763184
    8. ',l' → logprob: -11.643919944763184
    9. ' ' → logprob: -11.768919944763184
    10. '<|end|>' → logprob: -11.768919944763184

Token 68: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002850402146577835
    2. '.' → logprob: -5.877850532531738
    3. 'append' → logprob: -10.252850532531738
    4. '.app' → logprob: -12.252850532531738
    5. '.Append' → logprob: -13.127850532531738
    6. 'appen' → logprob: -13.252850532531738
    7. '	append' → logprob: -14.752850532531738
    8. 'app' → logprob: -15.127850532531738
    9. '>.' → logprob: -15.252850532531738
    10. ' .' → logprob: -15.502850532531738

Token 69: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.020820152014493942
    2. '[' → logprob: -4.270820140838623
    3. '=' → logprob: -5.020820140838623
    4. 'ist' → logprob: -11.395820617675781
    5. '[x' → logprob: -12.145820617675781
    6. '[p' → logprob: -12.395820617675781
    7. '=[
' → logprob: -12.645820617675781
    8. '[ip' → logprob: -12.895820617675781
    9. '.append' → logprob: -13.395820617675781
    10. '=x' → logprob: -13.520820617675781

Token 70: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1517960956552997e-05
    2. ' x' → logprob: -11.375011444091797
    3. '(x' → logprob: -17.625011444091797
    4. '   ' → logprob: -18.375011444091797
    5. '[x' → logprob: -19.000011444091797
    6. ' ' → logprob: -19.375011444091797
    7. '	x' → logprob: -19.500011444091797
    8. '```' → logprob: -20.500011444091797
    9. '{x' → logprob: -20.750011444091797
    10. '  ' → logprob: -21.375011444091797

Token 71: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4796175956726074
    2. ']
' → logprob: -0.9796175956726074
    3. ']
' → logprob: -5.354617595672607
    4. ']

' → logprob: -7.229617595672607
    5. ' ]' → logprob: -10.854618072509766
    6. ' ]
' → logprob: -11.104618072509766
    7. 'return' → logprob: -11.104618072509766
    8. ']

' → logprob: -11.104618072509766
    9. '];' → logprob: -12.979618072509766
    10. ']


' → logprob: -13.104618072509766

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6036490797996521
    2. 'return' → logprob: -0.8536490797996521
    3. ' return' → logprob: -3.603649139404297
    4. '	return' → logprob: -9.978649139404297
    5. ':return' → logprob: -10.103649139404297
    6. '```' → logprob: -12.103649139404297
    7. ' ' → logprob: -12.478649139404297
    8. '    
' → logprob: -13.228649139404297
    9. '{return' → logprob: -13.978649139404297
    10. '_return' → logprob: -14.103649139404297

Token 73: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04547799378633499
    2. ' return' → logprob: -3.295478105545044
    3. '   ' → logprob: -4.920477867126465
    4. ':return' → logprob: -9.795477867126465
    5. ' ' → logprob: -10.545477867126465
    6. '	return' → logprob: -10.920477867126465
    7. '```' → logprob: -13.045477867126465
    8. '  ' → logprob: -13.045477867126465
    9. '
' → logprob: -13.295477867126465
    10. '_return' → logprob: -13.545477867126465

Token 74: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00029625516617670655
    2. ' l' → logprob: -8.125296592712402
    3. '[l' → logprob: -15.875296592712402
    4. '	l' → logprob: -16.875295639038086
    5. '```' → logprob: -18.250295639038086
    6. '(l' → logprob: -18.375295639038086
    7. ' ' → logprob: -18.625295639038086
    8. 'x' → logprob: -19.375295639038086
    9. '   ' → logprob: -19.750295639038086
    10. 'tuple' → logprob: -20.750295639038086

Token 75: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.788518488407135
    2. 'f' → logprob: -1.4135184288024902
    3. '  
' → logprob: -3.4135184288024902
    4. 'a' → logprob: -3.9135184288024902
    5. 'result' → logprob: -4.03851842880249
    6. 'd' → logprob: -4.03851842880249
    7. '    
' → logprob: -4.28851842880249
    8. 'g' → logprob: -4.28851842880249
    9. '
' → logprob: -4.53851842880249
    10. ' 
' → logprob: -4.53851842880249

Token 76: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8594650626182556
    2. 'f' → logprob: -1.8594651222229004
    3. 'from' → logprob: -2.1094651222229004
    4. 'a' → logprob: -2.3594651222229004
    5. 'A' → logprob: -3.6094651222229004
    6. 'l' → logprob: -3.7344651222229004
    7. 'c' → logprob: -3.7344651222229004
    8. 'g' → logprob: -4.1094651222229
    9. 'F' → logprob: -4.3594651222229
    10. '_' → logprob: -4.3594651222229

Token 77: ' C' (ID: 363)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.06756474077701569
    2. ' l' → logprob: -4.067564964294434
    3. ' g' → logprob: -4.192564964294434
    4. ' main' → logprob: -5.192564964294434
    5. ' reduce' → logprob: -5.317564964294434
    6. ' solve' → logprob: -5.567564964294434
    7. ' factor' → logprob: -5.692564964294434
    8. 'g' → logprob: -6.442564964294434
    9. ' multiply' → logprob: -6.692564964294434
    10. ' union' → logprob: -6.692564964294434

Token 78: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7537103891372681
    2. 'omb' → logprob: -0.8787103891372681
    3. '(n' → logprob: -2.6287102699279785
    4. 'om' → logprob: -4.3787102699279785
    5. '(N' → logprob: -4.7537102699279785
    6. 'ounter' → logprob: -5.5037102699279785
    7. 'ount' → logprob: -5.6287102699279785
    8. '2' → logprob: -6.1287102699279785
    9. 'ombo' → logprob: -6.1287102699279785
    10. '(r' → logprob: -6.2537102699279785

Token 79: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3025343716144562
    2. ',k' → logprob: -1.5525343418121338
    3. ',r' → logprob: -3.052534341812134
    4. 'k' → logprob: -6.927534580230713
    5. 'r' → logprob: -7.177534580230713
    6. ' ,' → logprob: -8.302534103393555
    7. ')' → logprob: -10.677534103393555
    8. '```' → logprob: -11.177534103393555
    9. ',n' → logprob: -11.302534103393555
    10. '   ' → logprob: -11.552534103393555

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005365971941500902
    2. ')' → logprob: -5.25536584854126
    3. '):
' → logprob: -9.005366325378418
    4. ' ):' → logprob: -13.130366325378418
    5. ''):' → logprob: -13.505366325378418
    6. '):
' → logprob: -13.630366325378418
    7. ')：' → logprob: -13.630366325378418
    8. ',' → logprob: -14.505366325378418
    9. '**' → logprob: -14.505366325378418
    10. ')**' → logprob: -14.880366325378418

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0918976441025734
    2. ':' → logprob: -3.21689772605896
    3. ' ' → logprob: -3.71689772605896
    4. '<|end|>' → logprob: -5.841897487640381
    5. '    ' → logprob: -5.966897487640381
    6. '(n' → logprob: -6.216897487640381
    7. ' if' → logprob: -6.216897487640381
    8. ' 
' → logprob: -6.341897487640381
    9. '  ' → logprob: -6.466897487640381
    10. ':
' → logprob: -6.591897487640381

Token 82: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5928530097007751
    2. 'r' → logprob: -1.84285306930542
    3. 'f' → logprob: -1.96785306930542
    4. '   ' → logprob: -3.09285306930542
    5. ' if' → logprob: -3.34285306930542
    6. 'res' → logprob: -3.84285306930542
    7. '1' → logprob: -4.09285306930542
    8. 'from' → logprob: -4.46785306930542
    9. 'import' → logprob: -5.96785306930542
    10. 'return' (adapté à ' return') → logprob: -5.96785306930542

Token 83: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.25566691160202026
    2. '1' → logprob: -1.880666971206665
    3. ' reduce' → logprob: -3.505666971206665
    4. 'factor' → logprob: -3.630666971206665
    5. ' ' → logprob: -4.380666732788086
    6. '0' → logprob: -6.130666732788086
    7. ' factorial' → logprob: -7.005666732788086
    8. 'fact' → logprob: -8.130666732788086
    9. 'int' → logprob: -8.505666732788086
    10. '(' → logprob: -8.880666732788086

Token 84: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0023281944449990988
    2. '(' → logprob: -6.252328395843506
    3. 'lambda' → logprob: -8.002327919006348
    4. '(int' → logprob: -10.127327919006348
    5. '((' → logprob: -11.377327919006348
    6. '(operator' → logprob: -11.627327919006348
    7. '(
' → logprob: -13.252327919006348
    8. '```' → logprob: -13.877327919006348
    9. ' (' → logprob: -14.752327919006348
    10. ' lambda' → logprob: -14.877327919006348

Token 85: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6117025017738342
    2. ' x' → logprob: -0.8617025017738342
    3. 'a' → logprob: -3.4867024421691895
    4. ' a' → logprob: -5.6117024421691895
    5. 'lambda' → logprob: -7.3617024421691895
    6. ' lambda' → logprob: -8.736702919006348
    7. '	x' → logprob: -10.861702919006348
    8. ' ' → logprob: -11.111702919006348
    9. 'acc' → logprob: -11.611702919006348
    10. 'o' → logprob: -12.236702919006348

Token 86: ',b' (ID: 17568)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.4949631989002228
    2. ',' → logprob: -0.9949631690979004
    3. ',x' → logprob: -3.9949631690979004
    4. ',n' → logprob: -6.8699631690979
    5. ',i' → logprob: -8.244963645935059
    6. ',*' → logprob: -8.369963645935059
    7. ',b' → logprob: -8.744963645935059
    8. ',f' → logprob: -9.119963645935059
    9. ',r' → logprob: -9.369963645935059
    10. ',m' → logprob: -9.369963645935059

Token 87: ':a' (ID: 77025)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011483964510262012
    2. ':a' → logprob: -4.636484146118164
    3. 'a' → logprob: -6.761484146118164
    4. ' :' → logprob: -8.011484146118164
    5. ',a' → logprob: -9.261484146118164
    6. ',' → logprob: -9.261484146118164
    7. ':(' → logprob: -11.636484146118164
    8. ':b' → logprob: -11.761484146118164
    9. ' a' → logprob: -11.886484146118164
    10. ':
' → logprob: -12.511484146118164

Token 88: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.2388944774866104
    2. '*' → logprob: -1.6138944625854492
    3. '//' → logprob: -4.488894462585449
    4. '//*' → logprob: -6.488894462585449
    5. ' *' → logprob: -8.86389446258545
    6. '*(' → logprob: -9.11389446258545
    7. '*n' → logprob: -9.36389446258545
    8. '*a' → logprob: -9.73889446258545
    9. ' //*' → logprob: -10.11389446258545
    10. '*r' → logprob: -10.48889446258545

Token 89: ',' (ID: 11)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.009158923290669918
    2. ',' → logprob: -5.384159088134766
    3. ' //' → logprob: -5.634159088134766
    4. ',//' → logprob: -8.509159088134766
    5. 'if' → logprob: -8.759159088134766
    6. ' //(' → logprob: -8.759159088134766
    7. '//=' → logprob: -9.134159088134766
    8. 'range' → logprob: -9.634159088134766
    9. '/(' → logprob: -10.509159088134766
    10. ' ,' → logprob: -10.634159088134766

Token 90: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20139804482460022
    2. ' range' → logprob: -1.9513980150222778
    3. '(range' → logprob: -3.3263981342315674
    4. '[' → logprob: -6.076397895812988
    5. ' [' → logprob: -6.451397895812988
    6. '[i' → logprob: -9.201397895812988
    7. 'list' → logprob: -9.326397895812988
    8. '[*' → logprob: -9.451397895812988
    9. '[list' → logprob: -9.951397895812988
    10. '	range' → logprob: -10.201397895812988

Token 91: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006274910410866141
    2. '(' → logprob: -7.375627517700195
    3. '((' → logprob: -15.125627517700195
    4. '(max' → logprob: -15.375627517700195
    5. ' (' → logprob: -15.625627517700195
    6. 'n' → logprob: -15.875627517700195
    7. '(r' → logprob: -16.875627517700195
    8. '(N' → logprob: -17.375627517700195
    9. '1' → logprob: -18.125627517700195
    10. '(
' → logprob: -18.500627517700195

Token 92: '-r' (ID: 6335)
  Prédit: '-r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.03393704816699028
    2. ',r' → logprob: -3.9089369773864746
    3. 'r' → logprob: -4.783936977386475
    4. ',' → logprob: -5.533936977386475
    5. '-' → logprob: -8.033937454223633
    6. ' -' → logprob: -8.158937454223633
    7. ' ,' → logprob: -8.908937454223633
    8. ',n' → logprob: -9.283937454223633
    9. '-n' → logprob: -9.408937454223633
    10. ' r' → logprob: -10.408937454223633

Token 93: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01252813171595335
    2. ' +' → logprob: -4.387527942657471
    3. '+n' → logprob: -12.387528419494629
    4. ' ' → logprob: -12.512528419494629
    5. ',' → logprob: -12.762528419494629
    6. '1' → logprob: -13.012528419494629
    7. ' ,' → logprob: -13.762528419494629
    8. ',n' → logprob: -14.012528419494629
    9. '+,' → logprob: -14.387528419494629
    10. '+i' → logprob: -14.387528419494629

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -15.250009536743164
    4. '+' → logprob: -17.125009536743164
    5. '<|end|>' → logprob: -17.125009536743164
    6. '2' → logprob: -17.687509536743164
    7. '
' → logprob: -17.812509536743164
    8. ',' → logprob: -18.125009536743164
    9. '   ' → logprob: -18.187509536743164
    10. '１' → logprob: -18.375009536743164

Token 95: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.3897675573825836
    2. ',' → logprob: -1.1397675275802612
    3. ' ,' → logprob: -6.389767646789551
    4. ',r' → logprob: -6.764767646789551
    5. ',num' → logprob: -11.13976764678955
    6. '   ' → logprob: -11.51476764678955
    7. ',b' → logprob: -11.63976764678955
    8. ',N' → logprob: -12.63976764678955
    9. ',end' → logprob: -12.76476764678955
    10. ',p' → logprob: -13.38976764678955

Token 96: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03155055269598961
    2. 'n' → logprob: -3.531550645828247
    3. '+n' → logprob: -6.406550407409668
    4. '1' → logprob: -9.406550407409668
    5. ' n' → logprob: -10.656550407409668
    6. ',n' → logprob: -11.031550407409668
    7. ' +' → logprob: -11.406550407409668
    8. '   ' → logprob: -12.406550407409668
    9. '+r' → logprob: -13.281550407409668
    10. '```' → logprob: -13.406550407409668

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -15.625017166137695
    4. ')' → logprob: -18.000017166137695
    5. '+' → logprob: -18.125017166137695
    6. '   ' → logprob: -18.250017166137695
    7. '2' → logprob: -19.000017166137695
    8. '  ' → logprob: -19.812517166137695
    9. '<|end|>' → logprob: -19.875017166137695
    10. '１' → logprob: -20.000017166137695

Token 98: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08984478563070297
    2. ')' → logprob: -2.5898447036743164
    3. ',' → logprob: -4.714844703674316
    4. '))' → logprob: -7.089844703674316
    5. ' ),' → logprob: -7.214844703674316
    6. ' )' → logprob: -8.589844703674316
    7. ' ,' → logprob: -9.464844703674316
    8. ')+' → logprob: -10.339844703674316
    9. ')*' → logprob: -11.339844703674316
    10. '),(' → logprob: -11.964844703674316

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170460251159966
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.75117015838623
    4. '  ' → logprob: -17.376171112060547
    5. '    ' → logprob: -17.626171112060547
    6. ')' → logprob: -19.751171112060547
    7. '     ' → logprob: -20.126171112060547
    8. '       ' → logprob: -20.251171112060547
    9. '           ' → logprob: -20.876171112060547
    10. '      ' → logprob: -21.126171112060547

Token 100: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010032468708232045
    2. ')//' → logprob: -9.625100135803223
    3. '//' → logprob: -10.500100135803223
    4. ' )' → logprob: -12.375100135803223
    5. ')#' → logprob: -13.875100135803223
    6. ' ' → logprob: -15.500100135803223
    7. ')return' → logprob: -15.750100135803223
    8. ' //' → logprob: -15.875100135803223
    9. ')*' → logprob: -16.00010108947754
    10. ')/' → logprob: -16.00010108947754

Token 101: 'reduce' (ID: 49119)
  Prédit: 'reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.12962837517261505
    2. 'factor' → logprob: -2.1296284198760986
    3. '(' → logprob: -6.8796281814575195
    4. '1' → logprob: -7.2546281814575195
    5. 'range' → logprob: -8.37962818145752
    6. 'math' → logprob: -8.87962818145752
    7. 'pow' → logprob: -9.25462818145752
    8. ' reduce' → logprob: -9.37962818145752
    9. ' factorial' → logprob: -9.37962818145752
    10. '   ' → logprob: -10.37962818145752

Token 102: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -3.3213025744771585e-05
    2. 'lambda' → logprob: -10.750033378601074
    3. '(' → logprob: -11.625033378601074
    4. '=lambda' → logprob: -13.000033378601074
    5. '(operator' → logprob: -16.125032424926758
    6. '```' → logprob: -16.125032424926758
    7. ' (' → logprob: -16.750032424926758
    8. ' lambda' → logprob: -17.000032424926758
    9. '(math' → logprob: -17.750032424926758
    10. '(int' → logprob: -18.125032424926758

Token 103: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006269682198762894
    2. ' a' → logprob: -5.131269454956055
    3. '<|end|>' → logprob: -8.131269454956055
    4. ' ' → logprob: -10.631269454956055
    5. 'lambda' → logprob: -11.506269454956055
    6. '(lambda' → logprob: -13.006269454956055
    7. '  ' → logprob: -13.131269454956055
    8. ' lambda' → logprob: -13.381269454956055
    9. '=lambda' → logprob: -13.756269454956055
    10. '	a' → logprob: -13.756269454956055

Token 104: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0005109758349135518
    2. ',a' → logprob: -7.750511169433594
    3. ' ,' → logprob: -9.875511169433594
    4. ',' → logprob: -10.500511169433594
    5. 'a' → logprob: -13.875511169433594
    6. 'b' → logprob: -15.875511169433594
    7. ',m' → logprob: -16.875511169433594
    8. ',x' → logprob: -17.125511169433594
    9. ',n' → logprob: -17.250511169433594
    10. ',r' → logprob: -17.500511169433594

Token 105: ':a' (ID: 77025)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.07980100065469742
    2. ':a' → logprob: -2.579801082611084
    3. ',' → logprob: -7.704801082611084
    4. 'a' → logprob: -8.329800605773926
    5. ',b' → logprob: -9.704800605773926
    6. ' ,' → logprob: -10.079800605773926
    7. ' :' → logprob: -10.329800605773926
    8. ':' → logprob: -10.454800605773926
    9. '(a' → logprob: -11.079800605773926
    10. 'lambda' → logprob: -11.329800605773926

Token 106: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.0008101018611341715
    2. 'b' → logprob: -7.125810146331787
    3. '*' → logprob: -12.875809669494629
    4. ',b' → logprob: -13.750809669494629
    5. ' *' → logprob: -14.625809669494629
    6. '+b' → logprob: -14.750809669494629
    7. ' b' → logprob: -15.000809669494629
    8. '*a' → logprob: -15.000809669494629
    9. '-b' → logprob: -15.375809669494629
    10. 'a' → logprob: -16.750810623168945

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.363617962459102e-05
    2. 'range' → logprob: -10.250083923339844
    3. ',[' → logprob: -11.000083923339844
    4. ',(' → logprob: -11.250083923339844
    5. ',r' → logprob: -11.750083923339844
    6. '(range' → logprob: -12.000083923339844
    7. ' ,' → logprob: -12.500083923339844
    8. ',int' → logprob: -16.000083923339844
    9. ',map' → logprob: -16.250083923339844
    10. ',b' → logprob: -16.375083923339844

Token 108: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5928495486150496e-05
    2. ' range' → logprob: -11.250016212463379
    3. '(range' → logprob: -12.750016212463379
    4. '	range' → logprob: -18.250015258789062
    5. '   ' → logprob: -21.250015258789062
    6. ' ' → logprob: -22.000015258789062
    7. '
' → logprob: -22.750015258789062
    8. '  ' → logprob: -22.875015258789062
    9. '    ' → logprob: -23.125015258789062
    10. '[' → logprob: -23.375015258789062

Token 109: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014966767048463225
    2. '(r' → logprob: -9.125149726867676
    3. '1' → logprob: -10.125149726867676
    4. 'r' → logprob: -14.500149726867676
    5. ' (' → logprob: -16.87514877319336
    6. ',r' → logprob: -18.87514877319336
    7. '(
' → logprob: -18.87514877319336
    8. '   ' → logprob: -19.50014877319336
    9. '2' → logprob: -19.62514877319336
    10. '```' → logprob: -20.00014877319336

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004960790392942727
    2. 'r' → logprob: -7.750495910644531
    3. '(' → logprob: -9.875495910644531
    4. '2' → logprob: -11.375495910644531
    5. ' ' → logprob: -13.125495910644531
    6. ' r' → logprob: -16.00049591064453
    7. '   ' → logprob: -16.00049591064453
    8. '(r' → logprob: -16.37549591064453
    9. '```' → logprob: -16.37549591064453
    10. '0' → logprob: -17.37549591064453

Token 111: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.0032245332840830088
    2. ',' → logprob: -5.7532243728637695
    3. 'r' → logprob: -10.37822437286377
    4. ' ,' → logprob: -11.12822437286377
    5. ',b' → logprob: -14.75322437286377
    6. ' r' → logprob: -15.62822437286377
    7. ',n' → logprob: -15.87822437286377
    8. '+r' → logprob: -16.003225326538086
    9. ',
' → logprob: -16.378225326538086
    10. '(r' → logprob: -16.878225326538086

Token 112: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.1888679839321412e-05
    2. ' +' → logprob: -10.875021934509277
    3. '1' → logprob: -13.875021934509277
    4. '+,' → logprob: -13.875021934509277
    5. '+r' → logprob: -14.750021934509277
    6. '+b' → logprob: -16.00002098083496
    7. '+
' → logprob: -16.00002098083496
    8. ',' → logprob: -16.12502098083496
    9. '```' → logprob: -16.25002098083496
    10. ')+' → logprob: -16.37502098083496

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. '+' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.125041007995605
    4. 'r' → logprob: -16.75004005432129
    5. '```' → logprob: -16.75004005432129
    6. '   ' → logprob: -17.12504005432129
    7. '+r' → logprob: -19.12504005432129
    8. '{' → logprob: -19.25004005432129
    9. '  ' → logprob: -19.81254005432129
    10. '１' → logprob: -19.87504005432129

Token 114: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01202013436704874
    2. '))' → logprob: -4.512020111083984
    3. '),' → logprob: -7.012020111083984
    4. ')}' → logprob: -10.387020111083984
    5. ' )' → logprob: -11.387020111083984
    6. ')))' → logprob: -11.637020111083984
    7. ')
' → logprob: -12.387020111083984
    8. ',' → logprob: -13.012020111083984
    9. ')+' → logprob: -13.137020111083984
    10. ')}}' → logprob: -13.137020111083984

Token 115: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007217261008918285
    2. '1' → logprob: -7.2507219314575195
    3. ' r' → logprob: -11.37572193145752
    4. ')' → logprob: -15.12572193145752
    5. '```' → logprob: -17.750720977783203
    6. ' ' → logprob: -18.000720977783203
    7. '   ' → logprob: -18.125720977783203
    8. 'b' → logprob: -20.750720977783203
    9. '$r' → logprob: -20.750720977783203
    10. '(r' → logprob: -21.000720977783203

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.875
    3. ')
' → logprob: -18.0
    4. ')#' → logprob: -18.5
    5. ')}' → logprob: -19.0
    6. ')`' → logprob: -19.125
    7. '))' → logprob: -19.75
    8. ')return' → logprob: -19.75
    9. ')**' → logprob: -19.875
    10. ')}}' → logprob: -20.0

Token 117: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7670333385467529
    2. '<|end|>' → logprob: -0.8920333385467529
    3. 'from' → logprob: -3.642033338546753
    4. 'f' → logprob: -3.892033338546753
    5. ')' → logprob: -4.142033576965332
    6. 'factor' → logprob: -5.142033576965332
    7. '  
' → logprob: -5.267033576965332
    8. 'for' → logprob: -5.267033576965332
    9. 'result' → logprob: -5.392033576965332
    10. '    
' → logprob: -5.392033576965332

Token 118: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14538505673408508
    2. ' r' → logprob: -2.0203850269317627
    3. '0' → logprob: -6.145385265350342
    4. 'n' → logprob: -8.270384788513184
    5. ' ' → logprob: -8.645384788513184
    6. ' n' → logprob: -9.020384788513184
    7. '1' → logprob: -12.145384788513184
    8. '(r' → logprob: -13.020384788513184
    9. ' (' → logprob: -14.020384788513184
    10. '(n' → logprob: -14.395384788513184

Token 119: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.040598176419734955
    2. '0' → logprob: -3.290598154067993
    3. ' r' → logprob: -6.165598392486572
    4. 'n' → logprob: -7.915598392486572
    5. ' ' → logprob: -9.915597915649414
    6. '1' → logprob: -10.540597915649414
    7. '(r' → logprob: -12.415597915649414
    8. ' n' → logprob: -12.540597915649414
    9. '(n' → logprob: -14.040597915649414
    10. '2' → logprob: -14.165597915649414

Token 120: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.020087018609046936
    2. '<' → logprob: -4.645087242126465
    3. ' <=' → logprob: -4.645087242126465
    4. '<n' → logprob: -7.520087242126465
    5. ' <' → logprob: -9.395087242126465
    6. '<len' → logprob: -10.645087242126465
    7. '<N' → logprob: -11.270087242126465
    8. '>=' → logprob: -13.020087242126465
    9. '≤' → logprob: -14.020087242126465
    10. '!=' → logprob: -14.520087242126465

Token 121: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002613358374219388
    2. ' r' → logprob: -8.250261306762695
    3. 'n' → logprob: -20.500261306762695
    4. '	r' → logprob: -22.375261306762695
    5. '(r' → logprob: -22.750261306762695
    6. '_r' → logprob: -22.875261306762695
    7. ' ' → logprob: -22.875261306762695
    8. '```' → logprob: -23.250261306762695
    9. '{' → logprob: -23.875261306762695
    10. '
' → logprob: -24.250261306762695

Token 122: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0005152635276317596
    2. 'and' → logprob: -8.12551498413086
    3. ' <=' → logprob: -9.12551498413086
    4. ' and' → logprob: -9.37551498413086
    5. '<len' → logprob: -11.75051498413086
    6. '<' → logprob: -12.00051498413086
    7. '<n' → logprob: -12.50051498413086
    8. '<|end|>' → logprob: -12.75051498413086
    9. '<N' → logprob: -13.25051498413086
    10. ']<=' → logprob: -14.12551498413086

Token 123: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.5491004129871726e-05
    2. ' n' → logprob: -10.000045776367188
    3. '	n' → logprob: -18.500045776367188
    4. '<|end|>' → logprob: -20.500045776367188
    5. '```' → logprob: -20.625045776367188
    6. '_n' → logprob: -20.875045776367188
    7. 'N' → logprob: -21.000045776367188
    8. ')n' → logprob: -21.125045776367188
    9. '(n' → logprob: -21.625045776367188
    10. '<n' → logprob: -22.875045776367188

Token 124: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10021346807479858
    2. 'else' → logprob: -2.3502135276794434
    3. ' and' → logprob: -12.475213050842285
    4. '_else' → logprob: -13.600213050842285
    5. '<|end|>' → logprob: -13.975213050842285
    6. '	else' → logprob: -14.350213050842285
    7. 'and' → logprob: -16.6002140045166
    8. ' ' → logprob: -16.7252140045166
    9. 'elsen' → logprob: -16.8502140045166
    10. 'elses' → logprob: -17.3502140045166

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. 'None' → logprob: -19.500431060791016
    4. '   ' → logprob: -19.750431060791016
    5. ' None' → logprob: -20.250431060791016
    6. '  ' → logprob: -21.625431060791016
    7. '۰' → logprob: -22.000431060791016
    8. ' ' → logprob: -23.375431060791016
    9. '```' → logprob: -23.375431060791016
    10. '０' → logprob: -24.000431060791016

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.375059127807617
    4. 'None' → logprob: -20.500059127807617
    5. '۰' → logprob: -20.812559127807617
    6. '  ' → logprob: -20.937559127807617
    7. 'int' → logprob: -21.250059127807617
    8. '```' → logprob: -21.500059127807617
    9. '000' → logprob: -21.750059127807617
    10. '1' → logprob: -21.875059127807617

Token 127: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1936627626419067
    2. 'f' → logprob: -1.3186627626419067
    3. 'print' → logprob: -1.9436627626419067
    4. 'result' → logprob: -2.568662643432617
    5. 'for' → logprob: -2.943662643432617
    6. 'factor' → logprob: -3.943662643432617
    7. 'n' → logprob: -4.193662643432617
    8. 'res' → logprob: -4.318662643432617
    9. 'a' → logprob: -4.318662643432617
    10. 'ans' → logprob: -4.443662643432617

Token 128: 'lst' (ID: 65430)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2608327865600586
    2. 'result' → logprob: -2.8858327865600586
    3. 'print' → logprob: -3.0108327865600586
    4. 'f' → logprob: -3.1358327865600586
    5. 'factor' → logprob: -4.635832786560059
    6. 'ans' → logprob: -4.760832786560059
    7. 'for' → logprob: -4.885832786560059
    8. 'l' → logprob: -5.135832786560059
    9. 'fact' → logprob: -5.135832786560059
    10. 'answer' → logprob: -5.385832786560059

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22957539558410645
    2. ' =' → logprob: -1.6045753955841064
    3. '=[]' → logprob: -5.604575157165527
    4. ',' → logprob: -9.229575157165527
    5. 's' → logprob: -9.354575157165527
    6. '=[' → logprob: -9.479575157165527
    7. '_' → logprob: -9.729575157165527
    8. '[:]' → logprob: -9.854575157165527
    9. '1' → logprob: -11.104575157165527
    10. '_=' → logprob: -11.229575157165527

Token 130: ' factors' (ID: 11652)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.2891835570335388
    2. 'f' → logprob: -2.2891836166381836
    3. '[]' → logprob: -3.2891836166381836
    4. 'list' → logprob: -3.4141836166381836
    5. '[*' → logprob: -3.6641836166381836
    6. '[' → logprob: -3.9141836166381836
    7. '[list' → logprob: -4.039183616638184
    8. ' [' → logprob: -6.039183616638184
    9. 'factor' → logprob: -6.289183616638184
    10. ' factors' → logprob: -6.414183616638184

Token 131: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.014424268156290054
    2. '(N' → logprob: -4.2644243240356445
    3. '(' → logprob: -8.264424324035645
    4. '(m' → logprob: -14.014424324035645
    5. '((' → logprob: -14.514424324035645
    6. '(S' → logprob: -14.764424324035645
    7. 'M' → logprob: -14.889424324035645
    8. '(n' → logprob: -15.014424324035645
    9. '(
' → logprob: -15.514424324035645
    10. '(C' → logprob: -15.764424324035645

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.125001907348633
    3. ')[' → logprob: -15.375001907348633
    4. ')
' → logprob: -15.625001907348633
    5. ' )' → logprob: -15.750001907348633
    6. '))' → logprob: -15.875001907348633
    7. ']' → logprob: -16.000001907348633
    8. ')`' → logprob: -16.375001907348633
    9. ')**' → logprob: -16.875001907348633
    10. ')#' → logprob: -17.125001907348633

Token 133: 'output' (ID: 6130)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6064594388008118
    2. 'd' → logprob: -2.231459379196167
    3. 'count' → logprob: -2.231459379196167
    4. 'counts' → logprob: -2.481459379196167
    5. 'cnt' → logprob: -2.731459379196167
    6. 'dp' → logprob: -3.106459379196167
    7. 'freq' → logprob: -4.231459617614746
    8. 'c' → logprob: -4.481459617614746
    9. 'counter' → logprob: -4.856459617614746
    10. 'div' → logprob: -6.106459617614746

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31418201327323914
    2. ' =' → logprob: -1.3141820430755615
    3. '=[]' → logprob: -8.18918228149414
    4. '_' → logprob: -8.56418228149414
    5. 's' → logprob: -8.93918228149414
    6. '(' → logprob: -9.43918228149414
    7. ':' → logprob: -9.68918228149414
    8. '=[' → logprob: -10.31418228149414
    9. '[:]' → logprob: -10.43918228149414
    10. '_=' → logprob: -11.18918228149414

Token 135: ' [' (ID: 723)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.09029874205589294
    2. 'sum' → logprob: -3.965298652648926
    3. '[C' → logprob: -3.965298652648926
    4. ' C' → logprob: -4.465298652648926
    5. '1' → logprob: -4.465298652648926
    6. '0' → logprob: -5.090298652648926
    7. '[]' → logprob: -5.215298652648926
    8. 'reduce' → logprob: -5.340298652648926
    9. '[' → logprob: -5.965298652648926
    10. 'str' → logprob: -6.215298652648926

Token 136: '1' (ID: 16)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008230268955230713
    2. 'str' → logprob: -5.258230209350586
    3. '0' → logprob: -6.883230209350586
    4. '1' → logprob: -7.383230209350586
    5. ' C' → logprob: -7.758230209350586
    6. 'sum' → logprob: -8.633230209350586
    7. '[C' → logprob: -9.383230209350586
    8. '(' → logprob: -9.633230209350586
    9. '(C' → logprob: -9.633230209350586
    10. 'max' → logprob: -9.758230209350586

Token 137: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016946998657658696
    2. ',' → logprob: -6.501694679260254
    3. ' ]' → logprob: -9.001694679260254
    4. ']*' → logprob: -10.876694679260254
    5. ']+' → logprob: -11.251694679260254
    6. '*' → logprob: -11.876694679260254
    7. ']
' → logprob: -11.876694679260254
    8. ']

' → logprob: -12.001694679260254
    9. ',
' → logprob: -12.251694679260254
    10. 'for' → logprob: -13.251694679260254

Token 138: 'j' (ID: 73)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1084551215171814
    2. ' for' → logprob: -2.358455181121826
    3. '<|end|>' → logprob: -4.858455181121826
    4. ')' → logprob: -8.983454704284668
    5. '[' → logprob: -9.358454704284668
    6. '```' → logprob: -9.733454704284668
    7. ',' → logprob: -9.858454704284668
    8. ']' → logprob: -10.108454704284668
    9. '.' → logprob: -10.233454704284668
    10. '<|end|>' → logprob: -11.983454704284668

Token 139: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03947875276207924
    2. ' =' → logprob: -3.4144787788391113
    3. 'for' → logprob: -5.289478778839111
    4. '=i' → logprob: -8.039478302001953
    5. '=len' → logprob: -8.789478302001953
    6. 'i' → logprob: -9.539478302001953
    7. '=[]' → logprob: -9.914478302001953
    8. ' for' → logprob: -10.164478302001953
    9. ',' → logprob: -10.789478302001953
    10. 'f' → logprob: -11.414478302001953

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008433376788161695
    2. '1' → logprob: -7.125843524932861
    3. '-' → logprob: -10.625843048095703
    4. 'len' → logprob: -11.750843048095703
    5. ' ' → logprob: -12.375843048095703
    6. '2' → logprob: -13.250843048095703
    7. '[' → logprob: -15.563343048095703
    8. '```' → logprob: -16.000843048095703
    9. ' -' → logprob: -16.688343048095703
    10. '4' → logprob: -17.313343048095703

Token 141: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21362385153770447
    2. 'for' → logprob: -2.3386237621307373
    3. ' while' → logprob: -2.4636237621307373
    4. '<|end|>' → logprob: -5.088624000549316
    5. ' for' → logprob: -5.838624000549316
    6. '
' → logprob: -6.463624000549316
    7. ',' → logprob: -10.463624000549316
    8. ' ' → logprob: -11.338624000549316
    9. 'lst' → logprob: -11.713624000549316
    10. '<|end|>' → logprob: -11.838624000549316

Token 142: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14713828265666962
    2. 'for' → logprob: -2.5221383571624756
    3. ' while' → logprob: -3.1471383571624756
    4. '<|end|>' → logprob: -4.5221381187438965
    5. ' for' → logprob: -6.2721381187438965
    6. '
' → logprob: -7.2721381187438965
    7. '	while' → logprob: -10.772138595581055
    8. '+' → logprob: -11.147138595581055
    9. '<|end|>' → logprob: -11.522138595581055
    10. '```' → logprob: -11.647138595581055

Token 143: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029860293492674828
    2. ' j' → logprob: -3.529860258102417
    3. 'lst' → logprob: -9.404860496520996
    4. 'len' → logprob: -11.279860496520996
    5. ' lst' → logprob: -12.154860496520996
    6. ' ' → logprob: -13.029860496520996
    7. ' len' → logprob: -13.279860496520996
    8. 'M' → logprob: -13.529860496520996
    9. '	j' → logprob: -14.529860496520996
    10. 'output' → logprob: -14.779860496520996

Token 144: ' <' (ID: 464)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.7871567010879517
    2. ' <' → logprob: -1.0371567010879517
    3. '<' → logprob: -1.6621567010879517
    4. '<N' → logprob: -7.787156581878662
    5. '<n' → logprob: -9.16215705871582
    6. '<=' → logprob: -9.78715705871582
    7. '<size' → logprob: -9.78715705871582
    8. ' <=' → logprob: -11.28715705871582
    9. '<M' → logprob: -11.91215705871582
    10. 'len' → logprob: -12.91215705871582

Token 145: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00016635251813568175
    2. 'N' → logprob: -9.000165939331055
    3. ' len' → logprob: -10.125165939331055
    4. '(len' → logprob: -13.500165939331055
    5. '=len' → logprob: -14.125165939331055
    6. 'le' → logprob: -16.125165939331055
    7. 'M' → logprob: -16.125165939331055
    8. ' ' → logprob: -16.375165939331055
    9. 'l' → logprob: -16.750165939331055
    10. '[len' → logprob: -17.125165939331055

Token 146: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -7.743758760625497e-05
    2. '(output' → logprob: -9.750077247619629
    3. 'lst' → logprob: -11.125077247619629
    4. '(' → logprob: -12.625077247619629
    5. '(ls' → logprob: -14.750077247619629
    6. '(l' → logprob: -15.125077247619629
    7. 'output' → logprob: -15.875077247619629
    8. ' lst' → logprob: -16.125078201293945
    9. '(list' → logprob: -16.375078201293945
    10. ' (' → logprob: -17.250078201293945

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2892166078090668
    2. ')' → logprob: -1.7892166376113892
    3. '):
' → logprob: -2.5392165184020996
    4. ' and' → logprob: -5.5392165184021
    5. 'and' → logprob: -7.6642165184021
    6. ' ):' → logprob: -7.6642165184021
    7. ' )' → logprob: -9.164216995239258
    8. ':' → logprob: -9.914216995239258
    9. ' ):
' → logprob: -10.164216995239258
    10. '):

' → logprob: -10.414216995239258

Token 148: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6816900372505188
    2. '   ' → logprob: -0.9316900372505188
    3. 'count' → logprob: -2.681689977645874
    4. 'c' → logprob: -4.431690216064453
    5. 'cnt' → logprob: -4.681690216064453
    6. ' k' → logprob: -5.181690216064453
    7. ' count' → logprob: -6.931690216064453
    8. 'freq' → logprob: -7.181690216064453
    9. 'current' → logprob: -7.306690216064453
    10. 'i' → logprob: -7.806690216064453

Token 149: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -1.1329505443572998
    2. '   ' → logprob: -1.1329505443572998
    3. 'c' → logprob: -1.7579505443572998
    4. 'count' → logprob: -2.3829505443573
    5. 'cnt' → logprob: -2.6329505443573
    6. 'p' → logprob: -4.257950782775879
    7. 'e' → logprob: -7.007950782775879
    8. 'val' → logprob: -7.257950782775879
    9. ' c' → logprob: -8.132950782775879
    10. 'x' → logprob: -8.132950782775879

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05759304016828537
    2. '=j' → logprob: -3.4325931072235107
    3. ' =' → logprob: -3.8075931072235107
    4. '=len' → logprob: -7.307592868804932
    5. '=k' → logprob: -7.682592868804932
    6. '=l' → logprob: -8.30759334564209
    7. '=i' → logprob: -10.93259334564209
    8. '=count' → logprob: -10.93259334564209
    9. '+=' → logprob: -11.30759334564209
    10. 'j' → logprob: -11.80759334564209

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6210066676139832
    2. 'lst' → logprob: -1.121006727218628
    3. 'j' → logprob: -1.996006727218628
    4. 'output' → logprob: -7.746006488800049
    5. 'l' → logprob: -9.746006965637207
    6. 'k' → logprob: -9.871006965637207
    7. ' lst' → logprob: -10.371006965637207
    8. ' ' → logprob: -10.496006965637207
    9. '2' → logprob: -10.621006965637207
    10. 'jl' → logprob: -10.746006965637207

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8333402276039124
    2. 'j' → logprob: -0.9583402276039124
    3. 'lst' → logprob: -1.7083401679992676
    4. 'output' → logprob: -8.333340644836426
    5. 'f' → logprob: -8.958340644836426
    6. 'k' → logprob: -9.333340644836426
    7. 'l' → logprob: -10.208340644836426
    8. 'M' → logprob: -10.708340644836426
    9. 'len' → logprob: -10.833340644836426
    10. '2' → logprob: -10.833340644836426

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04024143144488335
    2. '<|end|>' → logprob: -3.4152414798736572
    3. 'while' → logprob: -5.665241241455078
    4. '<|end|>' → logprob: -7.040241241455078
    5. '   ' → logprob: -7.665241241455078
    6. 'j' → logprob: -7.665241241455078
    7. ' while' → logprob: -8.165241241455078
    8. '  
' → logprob: -8.540241241455078
    9. ' 
' → logprob: -8.790241241455078
    10. '    
' → logprob: -9.040241241455078

Token 154: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010305836796760559
    2. 'while' → logprob: -5.010305881500244
    3. '   ' → logprob: -5.760305881500244
    4. ' while' → logprob: -8.635305404663086
    5. '<|end|>' → logprob: -9.385305404663086
    6. '    
' → logprob: -9.760305404663086
    7. '
' → logprob: -10.510305404663086
    8. ' 
' → logprob: -11.385305404663086
    9. '	while' → logprob: -11.385305404663086
    10. 'j' → logprob: -11.510305404663086

Token 155: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0020809052512049675
    2. ' while' → logprob: -6.877080917358398
    3. 'j' → logprob: -7.627080917358398
    4. 'for' → logprob: -8.877080917358398
    5. 'output' → logprob: -8.877080917358398
    6. '   ' → logprob: -9.002080917358398
    7. 'count' → logprob: -9.627080917358398
    8. '
' → logprob: -9.877080917358398
    9. 'k' → logprob: -11.627080917358398
    10. '    
' → logprob: -12.127080917358398

Token 156: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5454251766204834
    2. 'j' → logprob: -1.1704251766204834
    3. 'M' → logprob: -2.7954251766204834
    4. 'lst' → logprob: -3.4204251766204834
    5. ' j' → logprob: -5.0454254150390625
    6. ' k' → logprob: -5.6704254150390625
    7. 'output' → logprob: -6.2954254150390625
    8. ' M' → logprob: -6.4204254150390625
    9. ' lst' → logprob: -6.7954254150390625
    10. 'N' → logprob: -7.0454254150390625

Token 157: '+k' (ID: 110434)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.6852748990058899
    2. ' <' → logprob: -1.4352748394012451
    3. '<' → logprob: -1.9352748394012451
    4. '+' → logprob: -2.185274839401245
    5. ' +' → logprob: -6.935275077819824
    6. '<count' → logprob: -9.685275077819824
    7. '<size' → logprob: -10.185275077819824
    8. '<n' → logprob: -10.685275077819824
    9. '<ll' → logprob: -11.685275077819824
    10. '+k' → logprob: -11.810275077819824

Token 158: ' <' (ID: 464)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.5035128593444824
    2. '<' → logprob: -1.5035128593444824
    3. ' <' → logprob: -1.7535128593444824
    4. '<=' → logprob: -9.62851333618164
    5. ' <=' → logprob: -11.62851333618164
    6. '<n' → logprob: -12.87851333618164
    7. '<size' → logprob: -13.37851333618164
    8. '<num' → logprob: -13.50351333618164
    9. '<ll' → logprob: -14.12851333618164
    10. 'len' → logprob: -14.37851333618164

Token 159: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003178071230649948
    2. ' len' → logprob: -5.753178119659424
    3. '(len' → logprob: -16.003177642822266
    4. '=len' → logprob: -16.378177642822266
    5. '[len' → logprob: -16.628177642822266
    6. '<len' → logprob: -17.003177642822266
    7. '	len' → logprob: -18.128177642822266
    8. ',len' → logprob: -18.628177642822266
    9. ' ' → logprob: -20.253177642822266
    10. '
' → logprob: -20.253177642822266

Token 160: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -2.7729658540920354e-05
    2. 'lst' → logprob: -10.500027656555176
    3. '(' → logprob: -16.125028610229492
    4. '(ls' → logprob: -17.375028610229492
    5. '_lst' → logprob: -18.250028610229492
    6. ' lst' → logprob: -18.375028610229492
    7. '(lista' → logprob: -19.250028610229492
    8. 'Lst' → logprob: -19.750028610229492
    9. '(list' → logprob: -19.750028610229492
    10. '.lst' → logprob: -20.250028610229492

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39497122168540955
    2. 'and' → logprob: -1.644971251487732
    3. ' and' → logprob: -2.0199711322784424
    4. ' )' → logprob: -7.3949713706970215
    5. ' ' → logprob: -12.269970893859863
    6. '）' → logprob: -13.644970893859863
    7. '	and' → logprob: -14.269970893859863
    8. ' и' → logprob: -14.519970893859863
    9. ']' → logprob: -15.144970893859863
    10. '):
' → logprob: -15.769970893859863

Token 162: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740781784057617
    2. 'and' → logprob: -0.9740781784057617
    3. ' ' → logprob: -14.224078178405762
    4. '<|end|>' → logprob: -15.099078178405762
    5. '   ' → logprob: -16.599079132080078
    6. '	and' → logprob: -16.974079132080078
    7. ' и' → logprob: -17.849079132080078
    8. '+' → logprob: -17.974079132080078
    9. '
' → logprob: -17.974079132080078
    10. '<|end|>' → logprob: -17.974079132080078

Token 163: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.005235767923295498
    2. ' lst' → logprob: -5.25523567199707
    3. '   ' → logprob: -13.50523567199707
    4. '(lst' → logprob: -15.00523567199707
    5. '.lst' → logprob: -16.13023567199707
    6. '_lst' → logprob: -16.88023567199707
    7. '    ' → logprob: -17.25523567199707
    8. ' ' → logprob: -17.25523567199707
    9. 'Lst' → logprob: -17.38023567199707
    10. 'l' → logprob: -17.50523567199707

Token 164: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.849109119386412e-06
    2. '[' → logprob: -12.000009536743164
    3. 'j' → logprob: -12.625009536743164
    4. '[i' → logprob: -15.500009536743164
    5. '[l' → logprob: -16.000009536743164
    6. '[
' → logprob: -16.875009536743164
    7. ' [' → logprob: -17.375009536743164
    8. '[k' → logprob: -17.500009536743164
    9. '```' → logprob: -17.500009536743164
    10. '==' → logprob: -18.125009536743164

Token 165: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.6230920553207397
    2. ']' → logprob: -1.1230920553207397
    3. '+k' → logprob: -1.9980920553207397
    4. '+' → logprob: -6.748092174530029
    5. '[k' → logprob: -7.498092174530029
    6. '[j' → logprob: -7.998092174530029
    7. '+j' → logprob: -8.248091697692871
    8. '==' → logprob: -8.248091697692871
    9. '[' → logprob: -8.748091697692871
    10. '```' → logprob: -9.748091697692871

Token 166: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00014799882774241269
    2. ' ==' → logprob: -9.375147819519043
    3. ']==' → logprob: -10.375147819519043
    4. '```' → logprob: -11.125147819519043
    5. '===' → logprob: -11.875147819519043
    6. '=' → logprob: -12.500147819519043
    7. '==
' → logprob: -12.500147819519043
    8. 'lst' → logprob: -13.500147819519043
    9. ')==' → logprob: -14.500147819519043
    10. '<=' → logprob: -15.125147819519043

Token 167: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0002036595979006961
    2. ' lst' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.12520408630371
    4. 'l' → logprob: -17.50020408630371
    5. '       ' → logprob: -17.50020408630371
    6. ' ' → logprob: -18.50020408630371
    7. 'ls' → logprob: -18.62520408630371
    8. '(lst' → logprob: -18.75020408630371
    9. 'list' → logprob: -18.87520408630371
    10. '    ' → logprob: -19.50020408630371

Token 168: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.7610454708337784e-05
    2. 'j' → logprob: -10.500027656555176
    3. '[' → logprob: -16.87502670288086
    4. '{' → logprob: -19.87502670288086
    5. '(j' → logprob: -20.25002670288086
    6. '   ' → logprob: -20.50002670288086
    7. '[i' → logprob: -20.62502670288086
    8. '```' → logprob: -20.62502670288086
    9. '[
' → logprob: -21.00002670288086
    10. '	j' → logprob: -21.37502670288086

Token 169: '+k' (ID: 110434)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.9522549510002136
    2. 'j' → logprob: -1.2022550106048584
    3. '+j' → logprob: -1.2022550106048584
    4. '+' → logprob: -4.452254772186279
    5. ']' → logprob: -6.952254772186279
    6. ']+' → logprob: -9.077255249023438
    7. '[' → logprob: -9.202255249023438
    8. ':j' → logprob: -9.577255249023438
    9. '+k' → logprob: -9.577255249023438
    10. '   ' → logprob: -10.327255249023438

Token 170: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.804942786693573
    2. ':' → logprob: -1.0549428462982178
    3. '):
' → logprob: -1.8049428462982178
    4. ']:
' → logprob: -3.4299428462982178
    5. ':j' → logprob: -5.929942607879639
    6. '):' → logprob: -6.179942607879639
    7. ']:' → logprob: -6.679942607879639
    8. ':k' → logprob: -7.304942607879639
    9. ' ):
' → logprob: -8.679943084716797
    10. '():
' → logprob: -8.929943084716797

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006882481975480914
    2. 'k' → logprob: -7.500688076019287
    3. '
' → logprob: -9.750688552856445
    4. '+k' → logprob: -11.125688552856445
    5. ',k' → logprob: -11.250688552856445
    6. '   ' → logprob: -11.375688552856445
    7. ':
' → logprob: -11.625688552856445
    8. ' k' → logprob: -11.750688552856445
    9. '           ' → logprob: -11.875688552856445
    10. '```' → logprob: -13.125688552856445

Token 172: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -7.755678961984813e-05
    2. ' k' → logprob: -9.500077247619629
    3. '           ' → logprob: -13.000077247619629
    4. '
' → logprob: -16.375078201293945
    5. '       ' → logprob: -16.375078201293945
    6. '	k' → logprob: -16.375078201293945
    7. '   ' → logprob: -16.750078201293945
    8. '+k' → logprob: -18.000078201293945
    9. ',k' → logprob: -18.750078201293945
    10. '++' → logprob: -19.375078201293945

Token 173: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0004237627435941249
    2. '+' → logprob: -8.375423431396484
    3. ' +=' → logprob: -8.625423431396484
    4. ']+=' → logprob: -11.375423431396484
    5. '++' → logprob: -13.500423431396484
    6. '+='' → logprob: -14.875423431396484
    7. '+k' → logprob: -16.000423431396484
    8. '+="' → logprob: -16.125423431396484
    9. '<|end|>' → logprob: -17.000423431396484
    10. '```' → logprob: -17.250423431396484

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -18.875
    4. '   ' → logprob: -20.25
    5. '<|end|>' → logprob: -20.8125
    6. '１' → logprob: -21.125
    7. '১' → logprob: -21.3125
    8. '१' → logprob: -21.5625
    9. 'k' → logprob: -21.5625
    10. '۱' → logprob: -21.75

Token 175: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004688034241553396
    2. '
' → logprob: -8.000469207763672
    3. 'j' → logprob: -9.375469207763672
    4. 'k' → logprob: -11.375469207763672
    5. ' j' → logprob: -11.500469207763672
    6. '       ' → logprob: -11.750469207763672
    7. '    
' → logprob: -12.250469207763672
    8. '```' → logprob: -12.500469207763672
    9. '<|end|>' → logprob: -13.000469207763672
    10. ',' → logprob: -13.125469207763672

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027006161399185658
    2. '
' → logprob: -6.0027008056640625
    3. '    
' → logprob: -8.877700805664062
    4. 'k' → logprob: -11.252700805664062
    5. 'output' → logprob: -11.252700805664062
    6. 'j' → logprob: -11.377700805664062
    7. 'count' → logprob: -11.502700805664062
    8. '#' → logprob: -12.627700805664062
    9. '        
' → logprob: -12.752700805664062
    10. '       ' → logprob: -12.752700805664062

Token 177: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.5997037887573242
    2. '   ' → logprob: -1.8497037887573242
    3. 'for' → logprob: -1.8497037887573242
    4. ' output' → logprob: -2.724703788757324
    5. ' for' → logprob: -4.099703788757324
    6. 'j' → logprob: -4.224703788757324
    7. 'count' → logprob: -4.349703788757324
    8. 'from' → logprob: -5.474703788757324
    9. 'e' → logprob: -5.724703788757324
    10. 'c' → logprob: -5.849703788757324

Token 178: '[' (ID: 58)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.15828420221805573
    2. '.extend' → logprob: -2.1582841873168945
    3. '.' → logprob: -3.5332841873168945
    4. '[-' → logprob: -7.0332841873168945
    5. '+=' → logprob: -7.7832841873168945
    6. '*=' → logprob: -8.908284187316895
    7. ' +=' → logprob: -9.283284187316895
    8. ' *=' → logprob: -10.408284187316895
    9. '=' → logprob: -10.533284187316895
    10. ' .' → logprob: -10.908284187316895

Token 179: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.908022285439074e-05
    2. '-k' → logprob: -10.625059127807617
    3. '0' → logprob: -11.375059127807617
    4. '-j' → logprob: -11.500059127807617
    5. ' -' → logprob: -12.250059127807617
    6. '-i' → logprob: -12.375059127807617
    7. '-
' → logprob: -13.750059127807617
    8. '-c' → logprob: -14.125059127807617
    9. '-l' → logprob: -14.500059127807617
    10. '-I' → logprob: -14.750059127807617

Token 180: ']' (ID: 60)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.06572280079126358
    2. ' *=' → logprob: -3.565722703933716
    3. '*' → logprob: -3.690722703933716
    4. ']*' → logprob: -5.190722942352295
    5. ']' → logprob: -5.440722942352295
    6. '=' → logprob: -8.065722465515137
    7. ']+=' → logprob: -10.190722465515137
    8. ' *' → logprob: -10.690722465515137
    9. ']=' → logprob: -10.815722465515137
    10. '   ' → logprob: -11.190722465515137

Token 181: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0006198656628839672
    2. '=' → logprob: -8.250619888305664
    3. ' *=' → logprob: -8.250619888305664
    4. '*' → logprob: -9.250619888305664
    5. '+=' → logprob: -14.125619888305664
    6. '```' → logprob: -15.375619888305664
    7. ' ' → logprob: -15.625619888305664
    8. '**' → logprob: -16.250619888305664
    9. '//=' → logprob: -16.250619888305664
    10. ' =' → logprob: -16.875619888305664

Token 182: ' C' (ID: 363)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.026492923498153687
    2. '(lst' → logprob: -4.151493072509766
    3. 'C' → logprob: -5.151493072509766
    4. '(' → logprob: -6.276493072509766
    5. '(C' → logprob: -6.276493072509766
    6. ' lst' → logprob: -7.651493072509766
    7. ' (' → logprob: -9.026493072509766
    8. 'pow' → logprob: -9.651493072509766
    9. '(l' → logprob: -10.151493072509766
    10. '1' → logprob: -11.276493072509766

Token 183: '(N' (ID: 10564)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.019277581945061684
    2. '(M' → logprob: -4.894277572631836
    3. '(N' → logprob: -5.019277572631836
    4. '(k' → logprob: -6.019277572631836
    5. '(' → logprob: -7.019277572631836
    6. '(output' → logprob: -7.019277572631836
    7. '(lst' → logprob: -7.644277572631836
    8. '(j' → logprob: -9.144277572631836
    9. '(n' → logprob: -9.644277572631836
    10. 'len' → logprob: -9.769277572631836

Token 184: '+k' (ID: 110434)
  Prédit: '+k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.34735602140426636
    2. 'k' → logprob: -1.8473560810089111
    3. '+' → logprob: -2.097356081008911
    4. ' +' → logprob: -4.597355842590332
    5. '(k' → logprob: -6.597355842590332
    6. '
' → logprob: -7.722355842590332
    7. '+j' → logprob: -8.972355842590332
    8. 'N' → logprob: -9.222355842590332
    9. 'lst' → logprob: -9.222355842590332
    10. '(' → logprob: -9.222355842590332

Token 185: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1130582094192505
    2. 'k' → logprob: -1.2380582094192505
    3. ',k' → logprob: -1.6130582094192505
    4. ',' → logprob: -1.8630582094192505
    5. '1' → logprob: -4.363058090209961
    6. 'j' → logprob: -5.613058090209961
    7. ',j' → logprob: -5.738058090209961
    8. ' -' → logprob: -6.113058090209961
    9. ',N' → logprob: -6.113058090209961
    10. 'N' → logprob: -7.363058090209961

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '
' → logprob: -13.75000286102295
    3. '2' → logprob: -14.00000286102295
    4. 'j' → logprob: -14.37500286102295
    5. ' ' → logprob: -15.37500286102295
    6. '

' → logprob: -16.000003814697266
    7. 'k' → logprob: -16.625003814697266
    8. '
' → logprob: -16.625003814697266
    9. '   ' → logprob: -16.812503814697266
    10. '-' → logprob: -16.937503814697266

Token 187: ',' (ID: 11)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.03589291870594025
    2. ',' → logprob: -3.410892963409424
    3. ',j' → logprob: -6.285892963409424
    4. ' ,' → logprob: -8.410892486572266
    5. ',N' → logprob: -9.035892486572266
    6. ',n' → logprob: -11.285892486572266
    7. 'k' → logprob: -11.660892486572266
    8. ',
' → logprob: -11.785892486572266
    9. ',len' → logprob: -12.785892486572266
    10. ',m' → logprob: -13.035892486572266

Token 188: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00023476807109545916
    2. ' k' → logprob: -8.375234603881836
    3. 'N' → logprob: -12.875234603881836
    4. 'j' → logprob: -14.375234603881836
    5. ' ' → logprob: -15.125234603881836
    6. '   ' → logprob: -15.250234603881836
    7. '
' → logprob: -16.125234603881836
    8. 'lst' → logprob: -16.125234603881836
    9. '	k' → logprob: -16.875234603881836
    10. '
' → logprob: -17.125234603881836

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062027063220739365
    2. ')
' → logprob: -2.8120269775390625
    3. ')
' → logprob: -9.812026977539062
    4. '   ' → logprob: -13.062026977539062
    5. ')

' → logprob: -14.062026977539062
    6. ' )' → logprob: -14.187026977539062
    7. '-' → logprob: -15.687026977539062
    8. ' )
' → logprob: -15.812026977539062
    9. ')`
' → logprob: -16.312026977539062
    10. ')\
' → logprob: -16.312026977539062

Token 190: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0254213809967041
    2. '   ' → logprob: -4.775421142578125
    3. '
' → logprob: -5.025421142578125
    4. ' j' → logprob: -5.775421142578125
    5. '```' → logprob: -5.775421142578125
    6. '	j' → logprob: -6.275421142578125
    7. '    
' → logprob: -7.275421142578125
    8. ',j' → logprob: -7.400421142578125
    9. ',' → logprob: -8.150421142578125
    10. ' 
' → logprob: -9.275421142578125

Token 191: ' output' (ID: 4733)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03161292523145676
    2. '   ' → logprob: -3.5316128730773926
    3. 'for' → logprob: -6.781612873077393
    4. 'output' (adapté à ' output') → logprob: -7.656612873077393
    5. ' j' → logprob: -8.78161334991455
    6. '```' → logprob: -10.03161334991455
    7. '
' → logprob: -11.15661334991455
    8. ' for' → logprob: -11.53161334991455
    9. '    
' → logprob: -11.90661334991455
    10. 'from' → logprob: -12.28161334991455

Token 192: '[' (ID: 58)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.24257425963878632
    2. '.' → logprob: -2.2425742149353027
    3. '[' → logprob: -2.9925742149353027
    4. '.pop' → logprob: -3.4925742149353027
    5. '=' → logprob: -4.367574214935303
    6. '[j' → logprob: -5.117574214935303
    7. '.extend' → logprob: -5.492574214935303
    8. '.clear' → logprob: -5.867574214935303
    9. '+=' → logprob: -7.742574214935303
    10. '[-' → logprob: -7.867574214935303

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017249188385903835
    2. '1' → logprob: -6.376724720001221
    3. '-' → logprob: -11.626725196838379
    4. ']' → logprob: -12.501725196838379
    5. ' ' → logprob: -13.001725196838379
    6. '[' → logprob: -13.251725196838379
    7. 'j' → logprob: -13.376725196838379
    8. '   ' → logprob: -14.376725196838379
    9. 'k' → logprob: -14.626725196838379
    10. '])' → logprob: -14.626725196838379

Token 194: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05113278329372406
    2. '-' → logprob: -4.301132678985596
    3. ']+=' → logprob: -4.426132678985596
    4. ']=' → logprob: -5.551132678985596
    5. '//' → logprob: -5.676132678985596
    6. '*=' → logprob: -5.801132678985596
    7. ']-' → logprob: -5.801132678985596
    8. '%' → logprob: -5.926132678985596
    9. '-=' → logprob: -6.301132678985596
    10. ']*' → logprob: -6.426132678985596

Token 195: ' %=' (ID: 117035)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.15339478850364685
    2. '*' → logprob: -3.2783946990966797
    3. '+=' → logprob: -3.4033946990966797
    4. '=' → logprob: -3.5283946990966797
    5. ' *=' → logprob: -4.90339469909668
    6. 'output' → logprob: -5.15339469909668
    7. 'j' → logprob: -5.27839469909668
    8. '//=' → logprob: -6.15339469909668
    9. ',' → logprob: -6.27839469909668
    10. '%=' → logprob: -6.40339469909668

Token 196: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08046998828649521
    2. '100' → logprob: -2.580470085144043
    3. '998' → logprob: -6.455470085144043
    4. '(' → logprob: -12.330470085144043
    5. '1' → logprob: -13.205470085144043
    6. ' ' → logprob: -14.830470085144043
    7. '１０' → logprob: -15.955470085144043
    8. '123' → logprob: -16.830469131469727
    9. '999' → logprob: -17.080469131469727
    10. '101' → logprob: -17.205469131469727

Token 197: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03932357206940651
    2. '100' → logprob: -3.289323568344116
    3. '998' → logprob: -6.664323806762695
    4. '(' → logprob: -12.289323806762695
    5. '1' → logprob: -14.539323806762695
    6. '１０' → logprob: -15.414323806762695
    7. '123' → logprob: -15.789323806762695
    8. ' ' → logprob: -16.914323806762695
    9. '
' → logprob: -17.164323806762695
    10. '１００' → logprob: -17.539323806762695

Token 198: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8232486844062805
    2. 'j' → logprob: -0.8232486844062805
    3. '%' → logprob: -2.3232486248016357
    4. '7' → logprob: -4.698248863220215
    5. '6' → logprob: -5.448248863220215
    6. '4' → logprob: -5.948248863220215
    7. '.' → logprob: -6.448248863220215
    8. '=' → logprob: -6.823248863220215
    9. '+' → logprob: -7.323248863220215
    10. ' ' → logprob: -7.448248863220215

Token 199: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.696889623621246e-06
    2. '+' → logprob: -14.25000286102295
    3. '
' → logprob: -14.50000286102295
    4. '10' → logprob: -14.87500286102295
    5. '18' → logprob: -15.12500286102295
    6. '09' → logprob: -15.25000286102295
    7. '8' → logprob: -16.250001907348633
    8. '99' → logprob: -16.500001907348633
    9. '15' → logprob: -16.500001907348633
    10. '

' → logprob: -16.875001907348633

Token 200: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01612105406820774
    2. '7' → logprob: -4.141120910644531
    3. '```' → logprob: -10.016120910644531
    4. ' +' → logprob: -10.891120910644531
    5. '9' → logprob: -11.016120910644531
    6. '＋' → logprob: -12.891120910644531
    7. '+
' → logprob: -13.016120910644531
    8. ' ' → logprob: -14.141120910644531
    9. '+=' → logprob: -15.016120910644531
    10. '``' → logprob: -15.141120910644531

Token 201: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -15.375
    3. '9' → logprob: -18.125
    4. '```' → logprob: -18.875
    5. '07' → logprob: -20.25
    6. ' ' → logprob: -21.125
    7. '   ' → logprob: -21.125
    8. '007' → logprob: -21.375
    9. '79' → logprob: -22.25
    10. '67' → logprob: -22.25

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001295000547543168
    2. 'j' → logprob: -6.87629508972168
    3. ' j' → logprob: -9.12629508972168
    4. '```' → logprob: -9.25129508972168
    5. '
' → logprob: -10.50129508972168
    6. '	j' → logprob: -11.25129508972168
    7. '    
' → logprob: -11.50129508972168
    8. ',j' → logprob: -13.12629508972168
    9. '``' → logprob: -13.75129508972168
    10. ',' → logprob: -13.87629508972168

Token 203: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.028004121035337448
    2. ' j' → logprob: -4.528004169464111
    3. '
' → logprob: -5.278004169464111
    4. '```' → logprob: -5.403004169464111
    5. '	j' → logprob: -5.528004169464111
    6. '   ' → logprob: -5.903004169464111
    7. ',j' → logprob: -8.778003692626953
    8. '<|end|>' → logprob: -9.153003692626953
    9. '[j' → logprob: -9.278003692626953
    10. '``' → logprob: -10.153003692626953

Token 204: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.011518841609358788
    2. ' j' → logprob: -4.761518955230713
    3. '   ' → logprob: -5.886518955230713
    4. '	j' → logprob: -9.261518478393555
    5. '```' → logprob: -11.011518478393555
    6. '
' → logprob: -12.011518478393555
    7. '[j' → logprob: -13.261518478393555
    8. ',j' → logprob: -13.386518478393555
    9. '    
' → logprob: -14.386518478393555
    10. '  ' → logprob: -14.386518478393555

Token 205: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0027863383293151855
    2. '=' → logprob: -6.002786159515381
    3. '+' → logprob: -8.627786636352539
    4. ' +=' → logprob: -9.002786636352539
    5. '+='' → logprob: -12.252786636352539
    6. '+="' → logprob: -13.502786636352539
    7. ']+=' → logprob: -13.502786636352539
    8. '+=(' → logprob: -15.127786636352539
    9. '```' → logprob: -15.252786636352539
    10. '+
' → logprob: -15.502786636352539

Token 206: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.054500666621607e-06
    2. ' k' → logprob: -13.25000286102295
    3. '<|end|>' → logprob: -14.37500286102295
    4. '	k' → logprob: -15.12500286102295
    5. '{k' → logprob: -15.87500286102295
    6. '*k' → logprob: -15.87500286102295
    7. '+k' → logprob: -16.125003814697266
    8. '[k' → logprob: -17.500003814697266
    9. '```' → logprob: -17.750003814697266
    10. 'kx' → logprob: -17.750003814697266

Token 207: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3376223146915436
    2. '<|end|>' → logprob: -1.7126222848892212
    3. ')' → logprob: -2.4626224040985107
    4. '
' → logprob: -4.212622165679932
    5. ']' → logprob: -6.462622165679932
    6. '+' → logprob: -6.837622165679932
    7. '```' → logprob: -6.837622165679932
    8. '[' → logprob: -7.587622165679932
    9. 'output' → logprob: -7.837622165679932
    10. '#' → logprob: -8.08762264251709

Token 208: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.737289309501648
    2. '[' → logprob: -1.612289309501648
    3. ' ' → logprob: -2.1122894287109375
    4. '<|end|>' → logprob: -2.1122894287109375
    5. ')' → logprob: -2.9872894287109375
    6. '#' → logprob: -4.9872894287109375
    7. '(' → logprob: -5.4872894287109375
    8. '
' → logprob: -5.8622894287109375
    9. ']' → logprob: -5.9872894287109375
    10. '```' → logprob: -6.4872894287109375

Token 209: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.014215926639735699
    2. '(' → logprob: -4.26421594619751
    3. '()' → logprob: -10.389215469360352
    4. '(print' → logprob: -12.389215469360352
    5. '(sum' → logprob: -12.389215469360352
    6. 'output' → logprob: -12.639215469360352
    7. '(*' → logprob: -13.139215469360352
    8. '((' → logprob: -13.389215469360352
    9. '(input' → logprob: -13.389215469360352
    10. '(len' → logprob: -13.639215469360352

Token 210: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.717296517104842e-05
    2. '0' → logprob: -10.000057220458984
    3. ')' → logprob: -11.375057220458984
    4. '```' → logprob: -15.750057220458984
    5. ')[' → logprob: -16.625057220458984
    6. ' [' → logprob: -17.500057220458984
    7. '(' → logprob: -17.875057220458984
    8. '\[' → logprob: -18.000057220458984
    9. ']' → logprob: -18.500057220458984
    10. '][' → logprob: -18.500057220458984

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '[' → logprob: -18.125
    4. '```' → logprob: -21.375
    5. '   ' → logprob: -21.75
    6. '-' → logprob: -21.75
    7. '۰' → logprob: -21.875
    8. '
' → logprob: -22.625
    9. ' ' → logprob: -22.75
    10. '00' → logprob: -22.875

Token 212: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.250000953674316
    3. ' )' → logprob: -15.750000953674316
    4. '+' → logprob: -17.0
    5. ')`' → logprob: -17.0
    6. ')
' → logprob: -17.5
    7. ')}' → logprob: -17.875
    8. '`)' → logprob: -19.0
    9. '})' → logprob: -19.25
    10. '）' → logprob: -19.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 210
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 180
Précision stricte (1ère position): 43.81%
Précision adaptée (1ère position): 47.62%
Précision (top 10): 85.71%
================================================================================
