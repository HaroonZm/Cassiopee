================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def hmm(*x,**y):
    [print((lambda z: (z-2)*180)(int(input())))] 
hmm("don't care")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' hmm' (ID: 186402)
  → Token d'amorce (pas de prédiction)

Token 2: '(*' (ID: 9000)
  → Token d'amorce (pas de prédiction)

Token 3: 'x' (ID: 87)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.026126692071557045
    2. ')' → logprob: -4.276126861572266
    3. '):' → logprob: -5.026126861572266
    4. ',' → logprob: -6.276126861572266
    5. '_args' → logprob: -6.901126861572266
    6. 'params' → logprob: -7.526126861572266
    7. 'self' → logprob: -7.776126861572266
    8. 'options' → logprob: -8.151126861572266
    9. 'a' → logprob: -8.401126861572266
    10. 'arguments' → logprob: -8.651126861572266

Token 4: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.818157970905304
    2. '):' → logprob: -1.0681579113006592
    3. 's' → logprob: -2.193157911300659
    4. ',' → logprob: -2.318157911300659
    5. '_' → logprob: -6.318158149719238
    6. ')s' → logprob: -7.318158149719238
    7. '**' → logprob: -7.693158149719238
    8. '*' → logprob: -8.318158149719238
    9. '[' → logprob: -8.443158149719238
    10. ')**' → logprob: -8.943158149719238

Token 5: '**' (ID: 410)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.135727047920227
    2. 'y' → logprob: -1.385727047920227
    3. ' y' → logprob: -1.635727047920227
    4. '):' → logprob: -1.635727047920227
    5. '*' → logprob: -4.7607269287109375
    6. '**' → logprob: -4.8857269287109375
    7. ' ' → logprob: -5.1357269287109375
    8. 'args' → logprob: -5.8857269287109375
    9. 'states' → logprob: -5.8857269287109375
    10. ',' → logprob: -6.5107269287109375

Token 6: 'y' (ID: 88)
  Prédit: 'kwargs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kwargs' → logprob: -0.16130606830120087
    2. 'k' → logprob: -2.161306142807007
    3. 'y' → logprob: -3.786306142807007
    4. 'w' → logprob: -5.036305904388428
    5. 'kw' → logprob: -6.161305904388428
    6. 'x' → logprob: -6.661305904388428
    7. ' kwargs' → logprob: -7.911305904388428
    8. '_kwargs' → logprob: -8.161306381225586
    9. 'args' → logprob: -8.786306381225586
    10. 'options' → logprob: -8.911306381225586

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25205370783805847
    2. ')' → logprob: -1.5020537376403809
    3. ':' → logprob: -9.877053260803223
    4. ',' → logprob: -10.002053260803223
    5. ')：' → logprob: -12.752053260803223
    6. '**' → logprob: -12.752053260803223
    7. '[' → logprob: -12.877053260803223
    8. ''):' → logprob: -12.877053260803223
    9. ')**' → logprob: -13.377053260803223
    10. '*' → logprob: -13.502053260803223

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03448021784424782
    2. '   ' → logprob: -3.659480333328247
    3. ':return' → logprob: -5.659480094909668
    4. '\n' → logprob: -6.159480094909668
    5. '```' → logprob: -6.784480094909668
    6. '\' → logprob: -8.159480094909668
    7. '    ' → logprob: -8.534480094909668
    8. '<|end|>' → logprob: -8.909480094909668
    9. ' :' → logprob: -9.034480094909668
    10. '():' → logprob: -9.284480094909668

Token 9: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2543359398841858
    2. 'r' → logprob: -2.629335880279541
    3. ' ' → logprob: -3.379335880279541
    4. 'return' → logprob: -3.504335880279541
    5. '\n' → logprob: -4.004335880279541
    6. '\' → logprob: -4.129335880279541
    7. 'pass' → logprob: -4.254335880279541
    8. '#' → logprob: -5.254335880279541
    9. '```' → logprob: -5.754335880279541
    10. '\r' → logprob: -5.754335880279541

Token 10: 'print' (ID: 1598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6203640103340149
    2. 'x' → logprob: -0.9953640103340149
    3. '_' → logprob: -3.49536395072937
    4. '[' → logprob: -4.370364189147949
    5. ')' → logprob: -4.495364189147949
    6. ' ' → logprob: -5.120364189147949
    7. 'n' → logprob: -5.245364189147949
    8. '(' → logprob: -5.370364189147949
    9. '*' → logprob: -5.620364189147949
    10. 'for' → logprob: -5.620364189147949

Token 11: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15334007143974304
    2. '(x' → logprob: -2.0283401012420654
    3. '('' → logprob: -5.278339862823486
    4. '(i' → logprob: -5.778339862823486
    5. '(*' → logprob: -6.528339862823486
    6. '(f' → logprob: -8.153340339660645
    7. '(
' → logprob: -8.903340339660645
    8. ']' → logprob: -9.153340339660645
    9. '(token' → logprob: -9.653340339660645
    10. '(item' → logprob: -9.903340339660645

Token 12: 'lambda' (ID: 35280)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5882924199104309
    2. 'i' → logprob: -0.9632924199104309
    3. '_' → logprob: -3.713292360305786
    4. 'a' → logprob: -5.088292598724365
    5. '_x' → logprob: -5.338292598724365
    6. 'z' → logprob: -5.838292598724365
    7. ' i' → logprob: -6.088292598724365
    8. ' x' → logprob: -6.338292598724365
    9. '_i' → logprob: -6.338292598724365
    10. '_)' → logprob: -6.338292598724365

Token 13: ' z' (ID: 579)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6387386322021484
    2. ' i' → logprob: -1.7637386322021484
    3. ' a' → logprob: -1.8887386322021484
    4. ' z' → logprob: -2.2637386322021484
    5. 'i' → logprob: -2.6387386322021484
    6. ' x' → logprob: -2.6387386322021484
    7. ' lambda' → logprob: -2.8887386322021484
    8. 'x' → logprob: -3.0137386322021484
    9. 'lambda' → logprob: -3.5137386322021484
    10. 'z' → logprob: -3.7637386322021484

Token 14: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0871327593922615
    2. 'z' → logprob: -3.087132692337036
    3. ':z' → logprob: -3.712132692337036
    4. ' z' → logprob: -5.337132930755615
    5. ' :' → logprob: -5.837132930755615
    6. ':i' → logprob: -6.587132930755615
    7. ':x' → logprob: -6.962132930755615
    8. 'x' → logprob: -7.837132930755615
    9. 'a' → logprob: -8.212132453918457
    10. 'i' → logprob: -8.337132453918457

Token 15: ' (' (ID: 350)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3817920684814453
    2. ' z' → logprob: -1.2567920684814453
    3. 'x' → logprob: -4.381792068481445
    4. ''' → logprob: -5.006792068481445
    5. ' x' → logprob: -6.256792068481445
    6. 'lambda' → logprob: -6.381792068481445
    7. ' (' → logprob: -6.631792068481445
    8. 'str' → logprob: -7.131792068481445
    9. 'f' → logprob: -7.256792068481445
    10. '(z' → logprob: -7.381792068481445

Token 16: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.14156031608581543
    2. 'x' → logprob: -3.0165603160858154
    3. ' z' → logprob: -3.1415603160858154
    4. 'lambda' → logprob: -4.8915605545043945
    5. ''' → logprob: -5.1415605545043945
    6. '''.' → logprob: -6.2665605545043945
    7. ' x' → logprob: -6.3915605545043945
    8. 'str' → logprob: -6.3915605545043945
    9. 'len' → logprob: -6.5165605545043945
    10. 'i' → logprob: -6.6415605545043945

Token 17: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4662432670593262
    2. '[' → logprob: -1.5912432670593262
    3. '**' → logprob: -1.7162432670593262
    4. ' and' → logprob: -2.341243267059326
    5. ',' → logprob: -2.716243267059326
    6. '))' → logprob: -3.091243267059326
    7. ' +' → logprob: -3.341243267059326
    8. '*' → logprob: -3.341243267059326
    9. ')))' → logprob: -3.966243267059326
    10. '))(' → logprob: -4.091243267059326

Token 18: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3722333014011383
    2. ' ' → logprob: -1.247233271598816
    3. '0' → logprob: -4.7472333908081055
    4. '2' → logprob: -5.4972333908081055
    5. 'z' → logprob: -6.4972333908081055
    6. ' z' → logprob: -6.4972333908081055
    7. ' y' → logprob: -6.6222333908081055
    8. 'x' → logprob: -6.6222333908081055
    9. 'y' → logprob: -7.3722333908081055
    10. '3' → logprob: -7.6222333908081055

Token 19: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2879902422428131
    2. ')**' → logprob: -2.1629903316497803
    3. ')(' → logprob: -2.9129903316497803
    4. ' )' → logprob: -3.7879903316497803
    5. ')))' → logprob: -4.037990093231201
    6. '))' → logprob: -4.162990093231201
    7. '))(' → logprob: -4.912990093231201
    8. ')+' → logprob: -5.787990093231201
    9. ')*' → logprob: -6.037990093231201
    10. '**' → logprob: -6.287990093231201

Token 20: '180' (ID: 7521)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8257908821105957
    2. ' ' → logprob: -1.3257908821105957
    3. ' z' → logprob: -2.2007908821105957
    4. 'z' → logprob: -2.3257908821105957
    5. '3' → logprob: -3.0757908821105957
    6. '1' → logprob: -4.075790882110596
    7. '4' → logprob: -5.075790882110596
    8. '10' → logprob: -5.325790882110596
    9. '7' → logprob: -6.075790882110596
    10. 'x' → logprob: -6.325790882110596

Token 21: ')(' (ID: 4898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5957838892936707
    2. '))' → logprob: -1.0957839488983154
    3. ')))' → logprob: -3.5957839488983154
    4. ' -' → logprob: -3.8457839488983154
    5. ' )' → logprob: -4.470783710479736
    6. '-' → logprob: -4.720783710479736
    7. '/z' → logprob: -4.720783710479736
    8. '/' → logprob: -5.095783710479736
    9. ' ))' → logprob: -5.345783710479736
    10. ')/' → logprob: -5.345783710479736

Token 22: 'int' (ID: 491)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1020062118768692
    2. ' x' → logprob: -2.352006196975708
    3. ' ' → logprob: -7.727006435394287
    4. ')' → logprob: -8.227005958557129
    5. ' )' → logprob: -8.727005958557129
    6. 'y' → logprob: -8.852005958557129
    7. ' y' → logprob: -8.852005958557129
    8. 'z' → logprob: -8.977005958557129
    9. ')x' → logprob: -8.977005958557129
    10. ' z' → logprob: -9.727005958557129

Token 23: '(input' (ID: 10054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1398249715566635
    2. '(' → logprob: -2.139824867248535
    3. '(y' → logprob: -4.889824867248535
    4. '(z' → logprob: -6.139824867248535
    5. ')' → logprob: -6.764824867248535
    6. 'x' → logprob: -7.139824867248535
    7. '('' → logprob: -8.264824867248535
    8. ' ' → logprob: -8.639824867248535
    9. '(
' → logprob: -9.014824867248535
    10. ' (' → logprob: -9.139824867248535

Token 24: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8775004148483276
    2. '('' → logprob: -1.7525004148483276
    3. ')' → logprob: -2.502500534057617
    4. '()))' → logprob: -2.627500534057617
    5. '())))' → logprob: -2.752500534057617
    6. '()' → logprob: -2.877500534057617
    7. ')))' → logprob: -2.877500534057617
    8. '(' → logprob: -3.127500534057617
    9. '("' → logprob: -4.752500534057617
    10. '))' → logprob: -4.752500534057617

Token 25: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06685283035039902
    2. '))' → logprob: -2.9418528079986572
    3. ')]' → logprob: -4.691853046417236
    4. ')])' → logprob: -6.066853046417236
    5. ')))' → logprob: -8.566852569580078
    6. ']' → logprob: -9.566852569580078
    7. '])' → logprob: -9.691852569580078
    8. ' )' → logprob: -10.816852569580078
    9. ')}' → logprob: -11.316852569580078
    10. ')
' → logprob: -11.441852569580078

Token 26: ' 
' (ID: 793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5944957137107849
    2. '<|end|>' → logprob: -0.9694957137107849
    3. '(' → logprob: -3.0944957733154297
    4. '\n' → logprob: -4.21949577331543
    5. '<|end|>' → logprob: -5.84449577331543
    6. '
' → logprob: -6.09449577331543
    7. '\' → logprob: -7.09449577331543
    8. '(
' → logprob: -7.09449577331543
    9. 'newline' → logprob: -7.59449577331543
    10. '#' → logprob: -8.34449577331543

Token 27: 'h' (ID: 71)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5200128555297852
    2. '<|end|>' → logprob: -1.3950128555297852
    3. '\n' → logprob: -2.145012855529785
    4. '(' → logprob: -4.020012855529785
    5. 'newline' → logprob: -5.020012855529785
    6. '
' → logprob: -5.770012855529785
    7. '<|end|>' → logprob: -5.770012855529785
    8. '\' → logprob: -5.895012855529785
    9. '```' → logprob: -6.520012855529785
    10. '#' → logprob: -6.645012855529785

Token 28: 'mm' (ID: 4538)
  Prédit: 'mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.018161648884415627
    2. 'm' → logprob: -4.018161773681641
    3. 'mmm' → logprob: -11.51816177368164
    4. 'мм' → logprob: -14.51816177368164
    5. '(m' → logprob: -15.14316177368164
    6. 'i' → logprob: -15.64316177368164
    7. 'ｍ' → logprob: -15.89316177368164
    8. 'e' → logprob: -16.26816177368164
    9. ' mm' → logprob: -16.26816177368164
    10. ' m' → logprob: -16.39316177368164

Token 29: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001860807416960597
    2. '()' → logprob: -6.501860618591309
    3. ')' → logprob: -9.126860618591309
    4. '```' → logprob: -9.876860618591309
    5. '(
' → logprob: -10.251860618591309
    6. '<|end|>' → logprob: -10.501860618591309
    7. '('' → logprob: -11.001860618591309
    8. '(**' → logprob: -11.126860618591309
    9. ''' → logprob: -11.126860618591309
    10. '#' → logprob: -11.626860618591309

Token 30: 'don't' (ID: 91418)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.816490113735199
    2. ')' → logprob: -1.8164901733398438
    3. '1' → logprob: -2.3164901733398438
    4. '3' → logprob: -2.6914901733398438
    5. '2' → logprob: -2.9414901733398438
    6. '0' → logprob: -3.0664901733398438
    7. '5' → logprob: -3.4414901733398438
    8. '4' → logprob: -3.5664901733398438
    9. '"' → logprob: -3.6914901733398438
    10. '10' → logprob: -4.316490173339844

Token 31: ' care' (ID: 2631)
  Prédit: 'stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stop' → logprob: -0.8508520126342773
    2. ')' → logprob: -1.2258520126342773
    3. '")' → logprob: -2.1008520126342773
    4. ' stop' → logprob: -2.9758520126342773
    5. 'forget' → logprob: -3.8508520126342773
    6. ' forget' → logprob: -4.600852012634277
    7. 'walk' → logprob: -5.100852012634277
    8. 'ask' → logprob: -5.475852012634277
    9. 'continue' → logprob: -5.475852012634277
    10. 's' → logprob: -5.475852012634277

Token 32: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08981025218963623
    2. '")' → logprob: -2.464810371398926
    3. ')")' → logprob: -7.964810371398926
    4. '"' → logprob: -8.714810371398926
    5. '\n' → logprob: -9.089810371398926
    6. ')
' → logprob: -9.589810371398926
    7. ' )' → logprob: -10.589810371398926
    8. ' ' → logprob: -10.714810371398926
    9. '```' → logprob: -11.089810371398926
    10. '')' → logprob: -11.214810371398926


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 30
Tokens correctement prédits (1ère position, stricte): 3
Tokens correctement prédits (1ère position, avec adaptation): 3
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 10.00%
Précision adaptée (1ère position): 10.00%
Précision (top 10): 46.67%
================================================================================
