================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    N, K = (int(i) for i in input().split())
    H = [0] + [int(i) for i in input().split()]
    if N == K:
        print(0)
        return
    elif K == 0:
        ans = 0
        for i in range(N):
            ans += max(H[i + 1] - H[i], 0)
        print(ans)
        return
    dp = [[10 ** 12] * (N - K + 1) for _ in range(N + 1)]
    for x in range(N + 1):
        dp[x][1] = H[x]
    for y in range(2, N - K + 1):
        for x in range(N + 1):
            for i in range(1, x):
                dp[x][y] = min(dp[x][y], dp[i][y - 1] + max(0, H[x] - H[i]))
    ans = dp[0][N - K]
    for i in range(1, N + 1):
        ans = min(ans, dp[i][N - K])
    print(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.14868979156017303
    2. '\n' → logprob: -2.7736897468566895
    3. '(' → logprob: -3.6486897468566895
    4. ' ' → logprob: -4.6486897468566895
    5. '   ' → logprob: -4.6486897468566895
    6. ' 
' → logprob: -4.6486897468566895
    7. '    ' → logprob: -5.3986897468566895
    8. '    
' → logprob: -5.5236897468566895
    9. ''' → logprob: -5.8986897468566895
    10. '```' → logprob: -6.2736897468566895

Token 4: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.741634726524353
    2. ' =' → logprob: -0.741634726524353
    3. ' ' → logprob: -3.9916348457336426
    4. '_' → logprob: -4.116634845733643
    5. ',' → logprob: -5.741634845733643
    6. '   ' → logprob: -5.991634845733643
    7. '  ' → logprob: -6.241634845733643
    8. '.' → logprob: -6.491634845733643
    9. ')' → logprob: -6.616634845733643
    10. '    ' → logprob: -7.991634845733643

Token 6: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5966768264770508
    2. ' K' → logprob: -0.8466768264770508
    3. ' M' → logprob: -5.346676826477051
    4. 'K' → logprob: -5.971676826477051
    5. ' k' → logprob: -5.971676826477051
    6. '  ' → logprob: -6.346676826477051
    7. ' N' → logprob: -6.596676826477051
    8. ' =' → logprob: -6.846676826477051
    9. ')' → logprob: -7.096676826477051
    10. '    ' → logprob: -7.221676826477051

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6328083872795105
    2. '=' → logprob: -0.7578083872795105
    3. ',' → logprob: -8.757808685302734
    4. ')' → logprob: -10.382808685302734
    5. ' ' → logprob: -12.007808685302734
    6. ' =
' → logprob: -13.007808685302734
    7. ' ,' → logprob: -13.007808685302734
    8. '  ' → logprob: -13.007808685302734
    9. '<|end|>' → logprob: -13.507808685302734
    10. '=
' → logprob: -13.882808685302734

Token 8: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0008889487362466753
    2. 'map' → logprob: -7.125888824462891
    3. ' input' → logprob: -9.50088882446289
    4. ' ' → logprob: -12.25088882446289
    5. ' list' → logprob: -12.50088882446289
    6. 'input' → logprob: -14.50088882446289
    7. ' int' → logprob: -14.87588882446289
    8. '0' → logprob: -16.00088882446289
    9. '	map' → logprob: -16.12588882446289
    10. ' [' → logprob: -16.25088882446289

Token 9: 'int' (ID: 491)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.29290372133255005
    2. 'int' → logprob: -2.1679036617279053
    3. ' map' → logprob: -2.4179036617279053
    4. 'input' → logprob: -3.2929036617279053
    5. ')' → logprob: -4.792903900146484
    6. ' int' → logprob: -6.667903900146484
    7. '10' → logprob: -6.792903900146484
    8. ' input' → logprob: -7.542903900146484
    9. '0' → logprob: -7.667903900146484
    10. '42' → logprob: -8.292903900146484

Token 10: '(i' (ID: 3649)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3470606803894043
    2. '(' → logprob: -1.5970606803894043
    3. '(input' → logprob: -2.9720606803894043
    4. '(x' → logprob: -3.9720606803894043
    5. '(i' → logprob: -4.597060680389404
    6. '(token' → logprob: -6.097060680389404
    7. '()' → logprob: -6.097060680389404
    8. 'input' → logprob: -6.222060680389404
    9. '(s' → logprob: -6.847060680389404
    10. ')(' → logprob: -7.847060680389404

Token 11: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05892018601298332
    2. '(input' → logprob: -3.18392014503479
    3. '(x' → logprob: -5.183920383453369
    4. '(i' → logprob: -5.308920383453369
    5. 'input' → logprob: -6.058920383453369
    6. '(' → logprob: -6.558920383453369
    7. '()' → logprob: -7.183920383453369
    8. 'for' → logprob: -8.308919906616211
    9. '())' → logprob: -9.058919906616211
    10. '(s' → logprob: -9.683919906616211

Token 12: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30294108390808105
    2. '(input' → logprob: -1.802941083908081
    3. 'for' → logprob: -2.802941083908081
    4. 'input' → logprob: -4.17794132232666
    5. ' for' → logprob: -4.55294132232666
    6. ',' → logprob: -5.67794132232666
    7. '),' → logprob: -6.05294132232666
    8. '(' → logprob: -6.55294132232666
    9. '<|end|>' → logprob: -6.92794132232666
    10. '(i' → logprob: -8.17794132232666

Token 13: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16992273926734924
    2. ' i' → logprob: -2.0449228286743164
    3. ' in' → logprob: -4.544922828674316
    4. ' range' → logprob: -5.544922828674316
    5. '_' → logprob: -5.669922828674316
    6. ' line' → logprob: -5.919922828674316
    7. 'input' → logprob: -6.419922828674316
    8. ' ' → logprob: -6.669922828674316
    9. ' s' → logprob: -7.044922828674316
    10. ' _' → logprob: -7.669922828674316

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018722362583503127
    2. 'in' → logprob: -6.5018720626831055
    3. ' input' → logprob: -8.126872062683105
    4. 'input' → logprob: -9.751872062683105
    5. ')' → logprob: -12.001872062683105
    6. '<|end|>' → logprob: -12.626872062683105
    7. ' ' → logprob: -13.376872062683105
    8. '_' → logprob: -13.626872062683105
    9. '<|end|>' → logprob: -14.001872062683105
    10. ' range' → logprob: -14.376872062683105

Token 15: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759573578834534
    2. 'input' → logprob: -0.8259573578834534
    3. 'range' → logprob: -12.075957298278809
    4. ' range' → logprob: -12.450957298278809
    5. ' ' → logprob: -13.075957298278809
    6. ')' → logprob: -13.200957298278809
    7. '(input' → logprob: -13.575957298278809
    8. '=input' → logprob: -13.825957298278809
    9. '	input' → logprob: -14.325957298278809
    10. 'raw' → logprob: -14.700957298278809

Token 16: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.323814332485199
    2. '()' → logprob: -1.3238143920898438
    3. '().' → logprob: -4.573814392089844
    4. ')' → logprob: -8.823814392089844
    5. '(' → logprob: -11.323814392089844
    6. ' ())' → logprob: -12.198814392089844
    7. '();)' → logprob: -12.448814392089844
    8. '());' → logprob: -12.948814392089844
    9. '()),' → logprob: -12.948814392089844
    10. '())
' → logprob: -13.948814392089844

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008420264348387718
    2. 'strip' → logprob: -7.125842094421387
    3. 'rstrip' → logprob: -10.500842094421387
    4. ' split' → logprob: -11.625842094421387
    5. ')' → logprob: -14.625842094421387
    6. '(split' → logprob: -15.000842094421387
    7. 'read' → logprob: -16.00084114074707
    8. 'spl' → logprob: -16.00084114074707
    9. '```' → logprob: -17.25084114074707
    10. '.split' → logprob: -18.12584114074707

Token 18: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0757264718413353
    2. ')' → logprob: -3.2007265090942383
    3. '()' → logprob: -3.4507265090942383
    4. '(' → logprob: -7.950726509094238
    5. '()))' → logprob: -10.200726509094238
    6. '))' → logprob: -10.575726509094238
    7. ' ())' → logprob: -10.700726509094238
    8. '('' → logprob: -11.825726509094238
    9. '())
' → logprob: -12.325726509094238
    10. '()]' → logprob: -12.825726509094238

Token 19: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9383368492126465
    2. ':' → logprob: -1.8133368492126465
    3. '\n' → logprob: -1.8133368492126465
    4. '
' → logprob: -2.0633368492126465
    5. ' ' → logprob: -3.3133368492126465
    6. '\' → logprob: -3.4383368492126465
    7. '   ' → logprob: -3.8133368492126465
    8. ' 
' → logprob: -4.8133368492126465
    9. '```' → logprob: -4.9383368492126465
    10. ',' → logprob: -5.0633368492126465

Token 20: ' H' (ID: 487)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36356455087661743
    2. ' for' → logprob: -2.1135644912719727
    3. '   ' → logprob: -3.2385644912719727
    4. ')' → logprob: -3.6135644912719727
    5. '\n' → logprob: -3.7385644912719727
    6. ' ' → logprob: -4.363564491271973
    7. '`' → logprob: -4.863564491271973
    8. '    
' → logprob: -4.988564491271973
    9. '\' → logprob: -5.238564491271973
    10. ' 
' → logprob: -5.363564491271973

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25424814224243164
    2. ' =' → logprob: -1.7542481422424316
    3. '=' → logprob: -4.004248142242432
    4. '[:]' → logprob: -4.629248142242432
    5. '.' → logprob: -4.754248142242432
    6. '[]' → logprob: -4.879248142242432
    7. '[i' → logprob: -6.129248142242432
    8. 's' → logprob: -6.754248142242432
    9. ')' → logprob: -6.879248142242432
    10. '_' → logprob: -7.504248142242432

Token 22: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12949810922145844
    2. '[int' → logprob: -2.37949800491333
    3. ' list' → logprob: -3.87949800491333
    4. 'list' → logprob: -5.25449800491333
    5. '[list' → logprob: -6.25449800491333
    6. '[' → logprob: -7.37949800491333
    7. '(list' → logprob: -9.129498481750488
    8. ' (' → logprob: -9.254498481750488
    9. ' ' → logprob: -9.379498481750488
    10. '[i' → logprob: -9.879498481750488

Token 23: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00043400691356509924
    2. ' int' → logprob: -7.750433921813965
    3. '(int' → logprob: -12.750433921813965
    4. ']int' → logprob: -15.375433921813965
    5. '<int' → logprob: -16.12543487548828
    6. '   ' → logprob: -16.75043487548828
    7. '[int' → logprob: -17.00043487548828
    8. '0' → logprob: -17.00043487548828
    9. ':int' → logprob: -18.12543487548828
    10. '	int' → logprob: -18.75043487548828

Token 24: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08620721846818924
    2. ',' → logprob: -2.836207151412964
    3. ' for' → logprob: -4.086207389831543
    4. ']*' → logprob: -5.961207389831543
    5. ' ]' → logprob: -6.461207389831543
    6. 'for' → logprob: -6.711207389831543
    7. '()]' → logprob: -7.211207389831543
    8. ']*(' → logprob: -7.836207389831543
    9. '(' → logprob: -8.586207389831543
    10. ')]' → logprob: -8.836207389831543

Token 25: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3714500069618225
    2. '+' → logprob: -2.6214499473571777
    3. ' ]' → logprob: -3.1214499473571777
    4. ')' → logprob: -3.4964499473571777
    5. '[' → logprob: -3.4964499473571777
    6. ']' → logprob: -3.6214499473571777
    7. ' ' → logprob: -3.6214499473571777
    8. ',' → logprob: -3.7464499473571777
    9. ' for' → logprob: -4.121449947357178
    10. ' *' → logprob: -4.246449947357178

Token 26: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.23137396574020386
    2. '[int' → logprob: -2.2313740253448486
    3. ' [' → logprob: -2.6063740253448486
    4. 'list' → logprob: -4.3563737869262695
    5. '[i' → logprob: -5.2313737869262695
    6. '[' → logprob: -5.4813737869262695
    7. ' list' → logprob: -5.9813737869262695
    8. '[List' → logprob: -8.23137378692627
    9. '[input' → logprob: -9.98137378692627
    10. '(list' → logprob: -10.35637378692627

Token 27: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0010496005415916443
    2. ' int' → logprob: -6.876049518585205
    3. '(int' → logprob: -11.251049995422363
    4. '*' → logprob: -13.626049995422363
    5. '<int' → logprob: -14.251049995422363
    6. '   ' → logprob: -14.876049995422363
    7. '[int' → logprob: -15.001049995422363
    8. ']int' → logprob: -15.001049995422363
    9. ' ' → logprob: -15.126049995422363
    10. '	int' → logprob: -15.501049995422363

Token 28: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5877423882484436
    2. '(i' → logprob: -0.8377423882484436
    3. '(h' → logprob: -4.837742328643799
    4. '(x' → logprob: -5.837742328643799
    5. '(input' → logprob: -7.212742328643799
    6. '(s' → logprob: -9.837742805480957
    7. '(height' → logprob: -10.462742805480957
    8. '(a' → logprob: -10.587742805480957
    9. '(H' → logprob: -11.337742805480957
    10. '()' → logprob: -11.837742805480957

Token 29: ')' (ID: 8)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20276111364364624
    2. ')' → logprob: -2.202761173248291
    3. 'for' → logprob: -3.327761173248291
    4. ' for' → logprob: -3.702761173248291
    5. '(i' → logprob: -4.827761173248291
    6. '(x' → logprob: -6.452761173248291
    7. '(' → logprob: -6.577761173248291
    8. '()' → logprob: -6.952761173248291
    9. 'input' → logprob: -8.452760696411133
    10. '(in' → logprob: -9.077760696411133

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3269752860069275
    2. 'for' → logprob: -1.3269753456115723
    3. '(input' → logprob: -5.326975345611572
    4. '(' → logprob: -5.451975345611572
    5. '(i' → logprob: -6.576975345611572
    6. ')' → logprob: -6.826975345611572
    7. '(x' → logprob: -6.951975345611572
    8. '()' → logprob: -7.201975345611572
    9. '	for' → logprob: -9.326974868774414
    10. '(in' → logprob: -9.576974868774414

Token 31: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0013989296276122332
    2. 'input' → logprob: -6.751399040222168
    3. '(input' → logprob: -9.001399040222168
    4. ' in' → logprob: -9.626399040222168
    5. ' ' → logprob: -11.501399040222168
    6. '(' → logprob: -12.001399040222168
    7. '_' → logprob: -12.126399040222168
    8. '_input' → logprob: -12.626399040222168
    9. ' range' → logprob: -12.626399040222168
    10. ' i' → logprob: -12.626399040222168

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002719045151025057
    2. 'in' → logprob: -6.627718925476074
    3. 'input' → logprob: -7.127718925476074
    4. '(input' → logprob: -8.252718925476074
    5. ' input' → logprob: -8.502718925476074
    6. '(' → logprob: -9.252718925476074
    7. ' ' → logprob: -11.252718925476074
    8. ')' → logprob: -12.627718925476074
    9. ' (' → logprob: -12.752718925476074
    10. ']' → logprob: -12.877718925476074

Token 33: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03367002308368683
    2. 'input' → logprob: -3.408669948577881
    3. ' range' → logprob: -11.033670425415039
    4. ' ' → logprob: -12.033670425415039
    5. 'range' → logprob: -13.783670425415039
    6. ' ' → logprob: -14.658670425415039
    7. '	input' → logprob: -15.533670425415039
    8. '(input' → logprob: -15.783670425415039
    9. ' output' → logprob: -16.65867042541504
    10. '<input' → logprob: -16.65867042541504

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7968066206085496e-05
    2. '()' → logprob: -10.500027656555176
    3. ' ().' → logprob: -15.750027656555176
    4. '()].' → logprob: -15.750027656555176
    5. '()]' → logprob: -16.500028610229492
    6. '(' → logprob: -17.875028610229492
    7. '.split' → logprob: -19.625028610229492
    8. '())' → logprob: -20.000028610229492
    9. '()>' → logprob: -20.375028610229492
    10. '()
' → logprob: -20.625028610229492

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.41866585687967e-06
    2. 'strip' → logprob: -12.000008583068848
    3. 'rstrip' → logprob: -13.375008583068848
    4. ' split' → logprob: -14.625008583068848
    5. 'spl' → logprob: -16.12500762939453
    6. '(split' → logprob: -19.00000762939453
    7. '.split' → logprob: -20.37500762939453
    8. 'plit' → logprob: -21.37500762939453
    9. 'sp' → logprob: -21.87500762939453
    10. '_split' → logprob: -22.12500762939453

Token 36: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -4.787507714354433e-05
    2. '()' → logprob: -10.25004768371582
    3. '())' → logprob: -11.50004768371582
    4. ']' → logprob: -13.37504768371582
    5. '(' → logprob: -15.12504768371582
    6. ')]' → logprob: -15.62504768371582
    7. '()]
' → logprob: -16.00004768371582
    8. '()][' → logprob: -16.87504768371582
    9. '()],' → logprob: -17.50004768371582
    10. '()}' → logprob: -17.87504768371582

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.867781937122345
    2. '   ' → logprob: -0.992781937122345
    3. 'dp' → logprob: -1.9927818775177002
    4. '```' → logprob: -3.8677818775177
    5. '    
' → logprob: -3.9927818775177
    6. 'd' → logprob: -4.367782115936279
    7. '\n' → logprob: -5.117782115936279
    8. ' dp' → logprob: -5.492782115936279
    9. 'DP' → logprob: -6.242782115936279
    10. '\' → logprob: -6.867782115936279

Token 38: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.809685468673706
    2. 'd' → logprob: -0.934685468673706
    3. '   ' → logprob: -2.559685468673706
    4. 'D' → logprob: -3.684685468673706
    5. ' dp' → logprob: -3.684685468673706
    6. '
' → logprob: -4.309685707092285
    7. 'DP' → logprob: -5.184685707092285
    8. '    
' → logprob: -5.934685707092285
    9. ' ' → logprob: -6.059685707092285
    10. ' 
' → logprob: -6.559685707092285

Token 39: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.3765222430229187
    2. ' K' → logprob: -1.2515223026275635
    3. ' ' → logprob: -4.001522064208984
    4. 'N' → logprob: -5.126522064208984
    5. 'K' → logprob: -6.251522064208984
    6. ' abs' → logprob: -7.501522064208984
    7. ' H' → logprob: -7.626522064208984
    8. 'abs' → logprob: -9.001522064208984
    9. ' len' → logprob: -9.251522064208984
    10. ' ' → logprob: -9.376522064208984

Token 40: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7712554335594177
    2. ' <=' → logprob: -1.0212554931640625
    3. ' >' → logprob: -2.1462554931640625
    4. ' ==' → logprob: -3.7712554931640625
    5. '<' → logprob: -4.3962554931640625
    6. '>' → logprob: -4.7712554931640625
    7. ' ' → logprob: -5.0212554931640625
    8. ' >=' → logprob: -5.6462554931640625
    9. '<=' → logprob: -5.8962554931640625
    10. '   ' → logprob: -6.8962554931640625

Token 41: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22897011041641235
    2. '1' → logprob: -1.6039700508117676
    3. '0' → logprob: -6.228970050811768
    4. ' K' → logprob: -6.603970050811768
    5. 'K' → logprob: -9.228970527648926
    6. '2' → logprob: -9.353970527648926
    7. '=' → logprob: -10.978970527648926
    8. '   ' → logprob: -11.978970527648926
    9. '3' → logprob: -12.728970527648926
    10. ' ' → logprob: -12.978970527648926

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00040695868665352464
    2. ' :' → logprob: -7.875406742095947
    3. ':return' → logprob: -10.875407218933105
    4. ':
' → logprob: -12.750407218933105
    5. ' or' → logprob: -13.625407218933105
    6. ':**' → logprob: -14.375407218933105
    7. '>' → logprob: -14.625407218933105
    8. '>:' → logprob: -14.625407218933105
    9. '+:' → logprob: -14.750407218933105
    10. '   ' → logprob: -15.125407218933105

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09624368697404861
    2. ':' → logprob: -3.0962436199188232
    3. '       ' → logprob: -3.0962436199188232
    4. '\n' → logprob: -7.846243858337402
    5. ' return' → logprob: -8.096243858337402
    6. ':
' → logprob: -8.846243858337402
    7. ':return' → logprob: -8.846243858337402
    8. ' print' → logprob: -9.971243858337402
    9. '\' → logprob: -10.346243858337402
    10. '
' → logprob: -10.346243858337402

Token 44: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.35054707527160645
    2. 'print' (adapté à ' print') → logprob: -1.3505470752716064
    3. '   ' → logprob: -3.3505470752716064
    4. '0' → logprob: -6.850546836853027
    5. ' ' → logprob: -8.850546836853027
    6. '    ' → logprob: -8.975546836853027
    7. ' return' → logprob: -9.475546836853027
    8. '\n' → logprob: -10.225546836853027
    9. '	print' → logprob: -10.850546836853027
    10. '```' → logprob: -11.100546836853027

Token 45: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05013813450932503
    2. '(N' → logprob: -3.425138235092163
    3. '(K' → logprob: -4.425137996673584
    4. '(H' → logprob: -6.050137996673584
    5. '()' → logprob: -6.675137996673584
    6. '(len' → logprob: -8.550138473510742
    7. '(sum' → logprob: -8.800138473510742
    8. '(max' → logprob: -9.175138473510742
    9. '("' → logprob: -9.300138473510742
    10. '((' → logprob: -9.550138473510742

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023965786676853895
    2. 'max' → logprob: -6.877396583557129
    3. 'min' → logprob: -7.627396583557129
    4. 'H' → logprob: -7.627396583557129
    5. '1' → logprob: -8.877396583557129
    6. 'sum' → logprob: -8.877396583557129
    7. 'N' → logprob: -9.877396583557129
    8. '(' → logprob: -11.127396583557129
    9. ' ' → logprob: -11.502396583557129
    10. 'K' → logprob: -11.877396583557129

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00073197390884161
    2. ')
' → logprob: -7.250731945037842
    3. '   ' → logprob: -11.500732421875
    4. ' )' → logprob: -12.000732421875
    5. ')return' → logprob: -13.000732421875
    6. '()' → logprob: -13.250732421875
    7. ')
' → logprob: -14.750732421875
    8. '))' → logprob: -14.750732421875
    9. '`)' → logprob: -16.250732421875
    10. ')

' → logprob: -16.250732421875

Token 48: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02157025970518589
    2. '    
' → logprob: -4.271570205688477
    3. '       ' → logprob: -6.021570205688477
    4. '
' → logprob: -6.771570205688477
    5. '<|end|>' → logprob: -7.146570205688477
    6. '\n' → logprob: -7.271570205688477
    7. '	return' → logprob: -7.396570205688477
    8. ')' → logprob: -8.146570205688477
    9. '```' → logprob: -8.521570205688477
    10. 'return' → logprob: -8.521570205688477

Token 49: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5064431428909302
    2. '   ' → logprob: -1.1314431428909302
    3. ' return' → logprob: -3.1314430236816406
    4. '
' → logprob: -4.006443023681641
    5. '    
' → logprob: -5.506443023681641
    6. '\n' → logprob: -6.131443023681641
    7. '	return' → logprob: -6.256443023681641
    8. 'else' → logprob: -6.756443023681641
    9. '```' → logprob: -6.756443023681641
    10. ')' → logprob: -7.756443023681641

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18896152079105377
    2. '    
' → logprob: -3.1889615058898926
    3. 'dp' → logprob: -3.3139615058898926
    4. ' 
' → logprob: -3.6889615058898926
    5. ' dp' → logprob: -3.6889615058898926
    6. '   ' → logprob: -3.9389615058898926
    7. ' DP' → logprob: -5.563961505889893
    8. '\n' → logprob: -5.813961505889893
    9. '' → logprob: -5.813961505889893
    10. '   
' → logprob: -5.813961505889893

Token 51: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04956652596592903
    2. ' 
' → logprob: -3.4245665073394775
    3. '    
' → logprob: -5.049566745758057
    4. '  
' → logprob: -5.799566745758057
    5. '

' → logprob: -6.049566745758057
    6. '
' → logprob: -7.049566745758057
    7. '   ' → logprob: -7.174566745758057
    8. '   
' → logprob: -7.549566745758057
    9. '```' → logprob: -8.049566268920898
    10. ' 

' → logprob: -8.174566268920898

Token 52: ' elif' (ID: 9497)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28602704405784607
    2. ' dp' → logprob: -2.411026954650879
    3. '
' → logprob: -2.661026954650879
    4. '   ' → logprob: -3.536026954650879
    5. ' 
' → logprob: -3.786026954650879
    6. 'd' → logprob: -3.911026954650879
    7. '    
' → logprob: -4.536026954650879
    8. 'dist' → logprob: -6.786026954650879
    9. 'DP' → logprob: -6.911026954650879
    10. ' DP' → logprob: -7.411026954650879

Token 53: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.32477954030036926
    2. ' N' → logprob: -1.3247795104980469
    3. 'K' → logprob: -4.824779510498047
    4. 'N' → logprob: -5.949779510498047
    5. ' ' → logprob: -7.449779510498047
    6. '    ' → logprob: -10.324779510498047
    7. ' abs' → logprob: -10.449779510498047
    8. ' ' → logprob: -10.449779510498047
    9. ' len' → logprob: -10.449779510498047
    10. ' not' → logprob: -10.574779510498047

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04416210204362869
    2. ' <' → logprob: -3.9191620349884033
    3. ' >=' → logprob: -4.169162273406982
    4. '==' → logprob: -5.669162273406982
    5. ' >' → logprob: -5.919162273406982
    6. ' ' → logprob: -6.919162273406982
    7. ' <=' → logprob: -7.544162273406982
    8. '<' → logprob: -10.044161796569824
    9. '   ' → logprob: -10.294161796569824
    10. '>' → logprob: -10.419161796569824

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024351163301616907
    2. ' ' → logprob: -6.627435207366943
    3. '0' → logprob: -7.002435207366943
    4. '2' → logprob: -8.752434730529785
    5. '   ' → logprob: -10.752434730529785
    6. '=' → logprob: -12.752434730529785
    7. 'N' → logprob: -12.877434730529785
    8. ' ' → logprob: -13.252434730529785
    9. '3' → logprob: -13.439934730529785
    10. '```' → logprob: -13.877434730529785

Token 56: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033009357284754515
    2. '0' → logprob: -6.00330114364624
    3. ' ' → logprob: -7.37830114364624
    4. '2' → logprob: -8.878300666809082
    5. 'N' → logprob: -10.378300666809082
    6. '   ' → logprob: -11.128300666809082
    7. '=' → logprob: -12.878300666809082
    8. '3' → logprob: -13.190800666809082
    9. '  ' → logprob: -14.315800666809082
    10. '```' → logprob: -14.440800666809082

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00408528558909893
    2. ':
' → logprob: -5.504085063934326
    3. ':return' → logprob: -12.879085540771484
    4. '   ' → logprob: -13.629085540771484
    5. ' :' → logprob: -13.754085540771484
    6. ':
' → logprob: -14.004085540771484
    7. ':

' → logprob: -14.879085540771484
    8. '       ' → logprob: -15.004085540771484
    9. '):' → logprob: -16.379085540771484
    10. ',' → logprob: -16.379085540771484

Token 58: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20860978960990906
    2. '       ' → logprob: -2.2086098194122314
    3. ':
' → logprob: -2.7086098194122314
    4. '   ' → logprob: -4.583609580993652
    5. ':return' → logprob: -7.458609580993652
    6. '
' → logprob: -8.333609580993652
    7. '<|end|>' → logprob: -8.333609580993652
    8. ' :' → logprob: -9.708609580993652
    9. ' :
' → logprob: -10.083609580993652
    10. '.' → logprob: -10.333609580993652

Token 59: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40281248092651367
    2. ' print' → logprob: -1.1528124809265137
    3. '   ' → logprob: -4.277812480926514
    4. 'return' → logprob: -7.152812480926514
    5. ' return' → logprob: -7.402812480926514
    6. 'pass' → logprob: -8.777812957763672
    7. ' pass' → logprob: -9.652812957763672
    8. ' for' → logprob: -9.652812957763672
    9. '    ' → logprob: -9.777812957763672
    10. ' ' → logprob: -9.902812957763672

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048821840435266495
    2. '=' → logprob: -3.0488219261169434
    3. ' ' → logprob: -9.173821449279785
    4. ' +=' → logprob: -9.423821449279785
    5. ')' → logprob: -11.048821449279785
    6. ' ==' → logprob: -11.548821449279785
    7. '.' → logprob: -12.298821449279785
    8. '+=' → logprob: -13.173821449279785
    9. '()' → logprob: -13.298821449279785
    10. ':' → logprob: -13.423821449279785

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8273568749427795
    2. 'max' → logprob: -1.3273568153381348
    3. 'sum' → logprob: -1.8273568153381348
    4. 'min' → logprob: -2.9523568153381348
    5. 'float' → logprob: -3.4523568153381348
    6. 'H' → logprob: -3.4523568153381348
    7. ' max' → logprob: -5.202356815338135
    8. ' sum' → logprob: -5.327356815338135
    9. ' ' → logprob: -5.702356815338135
    10. '10' → logprob: -6.577356815338135

Token 62: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6520093083381653
    2. 'min' → logprob: -1.5270092487335205
    3. 'sum' → logprob: -1.9020092487335205
    4. '0' → logprob: -2.6520092487335205
    5. 'H' → logprob: -3.4020092487335205
    6. 'float' → logprob: -5.0270094871521
    7. '10' → logprob: -7.1520094871521
    8. '-' → logprob: -7.7770094871521
    9. '100' → logprob: -8.777009010314941
    10. '1' → logprob: -9.527009010314941

Token 63: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28108006715774536
    2. '<|end|>' → logprob: -1.5310800075531006
    3. ' else' → logprob: -5.03108024597168
    4. 'else' → logprob: -5.15608024597168
    5. '
' → logprob: -5.53108024597168
    6. ' ' → logprob: -6.03108024597168
    7. '<|end|>' → logprob: -6.03108024597168
    8. '    
' → logprob: -6.15608024597168
    9. '       ' → logprob: -7.03108024597168
    10. '  ' → logprob: -7.15608024597168

Token 65: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08376599103212357
    2. ' for' → logprob: -2.958765983581543
    3. 'else' → logprob: -3.958765983581543
    4. '   ' → logprob: -4.958765983581543
    5. ' else' → logprob: -7.208765983581543
    6. ' ' → logprob: -7.958765983581543
    7. 'print' → logprob: -8.208765983581543
    8. 'i' → logprob: -8.833765983581543
    9. 'return' → logprob: -9.083765983581543
    10. 'prev' → logprob: -9.083765983581543

Token 66: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.707380473613739
    2. ' i' → logprob: -0.707380473613739
    3. '_' → logprob: -4.457380294799805
    4. ' _' → logprob: -6.707380294799805
    5. '_i' → logprob: -7.707380294799805
    6. ' ' → logprob: -7.832380294799805
    7. '   ' → logprob: -9.332380294799805
    8. 'h' → logprob: -9.457380294799805
    9. '	i' → logprob: -9.707380294799805
    10. ' h' → logprob: -10.769880294799805

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013059990480542183
    2. 'in' → logprob: -4.388060092926025
    3. ' ' → logprob: -7.763060092926025
    4. ',' → logprob: -10.138059616088867
    5. '_' → logprob: -11.388059616088867
    6. '  ' → logprob: -11.638059616088867
    7. 'n' → logprob: -11.825559616088867
    8. '   ' → logprob: -11.888059616088867
    9. '	in' → logprob: -12.075559616088867
    10. 'range' → logprob: -12.263059616088867

Token 68: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05492177605628967
    2. 'range' → logprob: -2.929921865463257
    3. ' H' → logprob: -11.554922103881836
    4. ' ' → logprob: -11.929922103881836
    5. ' xrange' → logprob: -12.429922103881836
    6. '	range' → logprob: -12.554922103881836
    7. 'H' → logprob: -12.679922103881836
    8. ' ran' → logprob: -13.054922103881836
    9. '  ' → logprob: -13.242422103881836
    10. '   ' → logprob: -13.492422103881836

Token 69: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00881440844386816
    2. '(N' → logprob: -4.758814334869385
    3. '(K' → logprob: -8.633814811706543
    4. '(
' → logprob: -12.008814811706543
    5. '(n' → logprob: -12.133814811706543
    6. ' (' → logprob: -12.633814811706543
    7. '()' → logprob: -13.008814811706543
    8. '(len' → logprob: -13.383814811706543
    9. '(

' → logprob: -13.383814811706543
    10. '(i' → logprob: -14.758814811706543

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9175330400466919
    2. '-' → logprob: -1.042533040046692
    3. ' -' → logprob: -2.0425329208374023
    4. '):
' → logprob: -2.9175329208374023
    5. ' ):' → logprob: -3.9175329208374023
    6. '+' → logprob: -4.167532920837402
    7. ')' → logprob: -4.542532920837402
    8. '   ' → logprob: -4.792532920837402
    9. ' ' → logprob: -5.667532920837402
    10. ' ):
' → logprob: -5.792532920837402

Token 71: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20705610513687134
    2. '       ' → logprob: -2.2070560455322266
    3. '   ' → logprob: -3.3320560455322266
    4. ' ' → logprob: -4.332056045532227
    5. '<|end|>' → logprob: -5.207056045532227
    6. '    ' → logprob: -5.957056045532227
    7. '+' → logprob: -6.082056045532227
    8. ' if' → logprob: -6.082056045532227
    9. '	       ' → logprob: -6.332056045532227
    10. ',' → logprob: -6.332056045532227

Token 72: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.603568971157074
    2. '   ' → logprob: -1.4785690307617188
    3. ' print' → logprob: -1.9785690307617188
    4. 'print' → logprob: -3.6035690307617188
    5. ' if' → logprob: -3.8535690307617188
    6. 'ans' (adapté à ' ans') → logprob: -3.8535690307617188
    7. '	ans' → logprob: -5.228569030761719
    8. ' for' → logprob: -5.853569030761719
    9. '       ' → logprob: -5.853569030761719
    10. 'if' → logprob: -6.228569030761719

Token 73: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09090282022953033
    2. '+=' → logprob: -2.465902805328369
    3. ' =' → logprob: -6.465902805328369
    4. ' -=' → logprob: -8.840903282165527
    5. '=' → logprob: -8.965903282165527
    6. '+' → logprob: -9.840903282165527
    7. ' +' → logprob: -10.090903282165527
    8. ' ' → logprob: -11.465903282165527
    9. ']+=' → logprob: -12.215903282165527
    10. '+=(' → logprob: -12.215903282165527

Token 74: ' max' (ID: 2999)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7091696262359619
    2. ' abs' → logprob: -1.334169626235962
    3. ' H' → logprob: -1.709169626235962
    4. 'H' → logprob: -2.959169626235962
    5. ' max' → logprob: -5.084169387817383
    6. 'max' → logprob: -6.084169387817383
    7. ' ' → logprob: -6.584169387817383
    8. '0' → logprob: -7.459169387817383
    9. '   ' → logprob: -8.084169387817383
    10. '1' → logprob: -8.584169387817383

Token 75: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10216948390007019
    2. '(H' → logprob: -2.4771695137023926
    3. '(abs' → logprob: -4.477169513702393
    4. '0' → logprob: -6.977169513702393
    5. 'abs' → logprob: -7.852169513702393
    6. '(max' → logprob: -8.227169036865234
    7. '((' → logprob: -9.477169036865234
    8. '(
' → logprob: -10.477169036865234
    9. '([' → logprob: -10.852169036865234
    10. ' (' → logprob: -11.352169036865234

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018937719287350774
    2. ')' → logprob: -7.001893997192383
    3. '[' → logprob: -7.001893997192383
    4. ' [' → logprob: -10.626893997192383
    5. ' )' → logprob: -11.501893997192383
    6. '[j' → logprob: -11.751893997192383
    7. '[:' → logprob: -12.251893997192383
    8. ')-' → logprob: -12.376893997192383
    9. '[N' → logprob: -12.876893997192383
    10. '[
' → logprob: -13.001893997192383

Token 77: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3005599081516266
    2. ']' → logprob: -1.4255598783493042
    3. ' +' → logprob: -4.425559997558594
    4. '],' → logprob: -5.675559997558594
    5. ']-' → logprob: -5.675559997558594
    6. ' ]' → logprob: -9.175559997558594
    7. '-' → logprob: -9.300559997558594
    8. '   ' → logprob: -9.675559997558594
    9. ' ' → logprob: -9.800559997558594
    10. '1' → logprob: -10.675559997558594

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024979764595627785
    2. ']' → logprob: -3.899979829788208
    3. '-' → logprob: -6.149979591369629
    4. '+' → logprob: -7.149979591369629
    5. ' ' → logprob: -7.149979591369629
    6. ' -' → logprob: -7.899979591369629
    7. '   ' → logprob: -9.149979591369629
    8. ']-' → logprob: -9.774979591369629
    9. '```' → logprob: -10.399979591369629
    10. ' ]' → logprob: -10.399979591369629

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001895935565698892
    2. ' ' → logprob: -9.250189781188965
    3. '0' → logprob: -10.375189781188965
    4. '-' → logprob: -10.625189781188965
    5. '2' → logprob: -10.875189781188965
    6. '   ' → logprob: -12.062689781188965
    7. '```' → logprob: -12.750189781188965
    8. '  ' → logprob: -12.937689781188965
    9. 'i' → logprob: -13.937689781188965
    10. '' → logprob: -14.437689781188965

Token 80: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5296787023544312
    2. ' -' → logprob: -0.9046787023544312
    3. ' ' → logprob: -6.029678821563721
    4. ')' → logprob: -6.029678821563721
    5. ']' → logprob: -7.279678821563721
    6. '   ' → logprob: -7.529678821563721
    7. ',' → logprob: -8.654678344726562
    8. '	' → logprob: -9.654678344726562
    9. '  ' → logprob: -10.154678344726562
    10. ')-' → logprob: -10.154678344726562

Token 81: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10119174420833588
    2. '-' → logprob: -2.351191759109497
    3. ' ' → logprob: -7.101191520690918
    4. '-H' → logprob: -9.351191520690918
    5. ',' → logprob: -10.726191520690918
    6. ' ' → logprob: -10.851191520690918
    7. ')' → logprob: -11.601191520690918
    8. '   ' → logprob: -12.101191520690918
    9. ' ,' → logprob: -12.351191520690918
    10. '  ' → logprob: -13.288691520690918

Token 82: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005338589660823345
    2. ' H' → logprob: -5.255338668823242
    3. '0' → logprob: -9.880338668823242
    4. '1' → logprob: -10.630338668823242
    5. ' ' → logprob: -11.380338668823242
    6. '   ' → logprob: -11.630338668823242
    7. '	H' → logprob: -13.005338668823242
    8. '  ' → logprob: -13.130338668823242
    9. '2' → logprob: -14.255338668823242
    10. '100' → logprob: -14.755338668823242

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002067588793579489
    2. '[' → logprob: -8.50020694732666
    3. 'i' → logprob: -12.87520694732666
    4. ' [' → logprob: -15.75020694732666
    5. ' ' → logprob: -16.125205993652344
    6. ')' → logprob: -16.750205993652344
    7. '[
' → logprob: -16.875205993652344
    8. ' i' → logprob: -17.000205993652344
    9. '   ' → logprob: -17.375205993652344
    10. '```' → logprob: -17.500205993652344

Token 84: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7433128952980042
    2. '],' → logprob: -0.7433128952980042
    3. '),' → logprob: -3.3683128356933594
    4. ' ,' → logprob: -4.993312835693359
    5. '},' → logprob: -5.743312835693359
    6. '0' → logprob: -6.743312835693359
    7. '>,' → logprob: -6.743312835693359
    8. ' ' → logprob: -7.743312835693359
    9. '1' → logprob: -7.868312835693359
    10. ']' → logprob: -8.36831283569336

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10022338479757309
    2. ' ' → logprob: -2.3502233028411865
    3. ')' → logprob: -11.600223541259766
    4. '<|end|>' → logprob: -12.600223541259766
    5. '   ' → logprob: -13.787723541259766
    6. '  ' → logprob: -14.162723541259766
    7. ' )' → logprob: -14.475223541259766
    8. '    ' → logprob: -14.725223541259766
    9. '1' → logprob: -15.350223541259766
    10. ' ' → logprob: -15.725223541259766

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052384985610842705
    2. ' ' → logprob: -5.2552385330200195
    3. '   ' → logprob: -13.25523853302002
    4. '  ' → logprob: -14.00523853302002
    5. ')' → logprob: -14.00523853302002
    6. '1' → logprob: -14.50523853302002
    7. '    ' → logprob: -15.69273853302002
    8. '00' → logprob: -16.755237579345703
    9. '       ' → logprob: -16.817737579345703
    10. '     ' → logprob: -17.005237579345703

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03476821258664131
    2. ')
' → logprob: -3.4097681045532227
    3. '   ' → logprob: -7.159768104553223
    4. ')
' → logprob: -9.034768104553223
    5. '       ' → logprob: -9.284768104553223
    6. ' )' → logprob: -9.659768104553223
    7. ')

' → logprob: -10.159768104553223
    8. ' )
' → logprob: -11.909768104553223
    9. ')return' → logprob: -12.159768104553223
    10. '))' → logprob: -12.784768104553223

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13842371106147766
    2. '<|end|>' → logprob: -2.7634236812591553
    3. '
' → logprob: -3.5134236812591553
    4. '    
' → logprob: -4.388423919677734
    5. '       ' → logprob: -5.138423919677734
    6. '' → logprob: -5.763423919677734
    7. '\n' → logprob: -6.013423919677734
    8. '  
' → logprob: -6.138423919677734
    9. ' 
' → logprob: -6.138423919677734
    10. ')' → logprob: -6.138423919677734

Token 89: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12144482880830765
    2. 'print' (adapté à ' print') → logprob: -2.3714449405670166
    3. ' print' → logprob: -3.9964449405670166
    4. '       ' → logprob: -6.7464447021484375
    5. '
' → logprob: -8.246444702148438
    6. '	print' → logprob: -8.371444702148438
    7. ' ' → logprob: -8.496444702148438
    8. ')' → logprob: -8.996444702148438
    9. '    
' → logprob: -9.121444702148438
    10. '```' → logprob: -9.496444702148438

Token 90: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0011830847943201661
    2. '(' → logprob: -6.751183032989502
    3. '()' → logprob: -11.75118350982666
    4. '(an' → logprob: -13.50118350982666
    5. 'ans' → logprob: -13.62618350982666
    6. '(answer' → logprob: -14.37618350982666
    7. '(abs' → logprob: -14.37618350982666
    8. ' (' → logprob: -14.37618350982666
    9. '(
' → logprob: -15.12618350982666
    10. '(a' → logprob: -16.001182556152344

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.957014556974173e-05
    2. ')
' → logprob: -10.250069618225098
    3. '   ' → logprob: -11.125069618225098
    4. ' )' → logprob: -11.250069618225098
    5. ')return' → logprob: -13.375069618225098
    6. '       ' → logprob: -13.500069618225098
    7. '))' → logprob: -14.125069618225098
    8. ')}' → logprob: -14.750069618225098
    9. '<|end|>' → logprob: -15.250069618225098
    10. '+' → logprob: -15.500069618225098

Token 92: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028236504644155502
    2. 'else' → logprob: -4.403236389160156
    3. ' else' → logprob: -5.153236389160156
    4. '<|end|>' → logprob: -5.153236389160156
    5. '    
' → logprob: -6.653236389160156
    6. '	else' → logprob: -6.778236389160156
    7. '
' → logprob: -7.778236389160156
    8. '```' → logprob: -8.278236389160156
    9. 'elif' → logprob: -8.528236389160156
    10. '<|end|>' → logprob: -9.153236389160156

Token 93: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4283643960952759
    2. 'else' → logprob: -1.3033643960952759
    3. ' else' → logprob: -3.0533642768859863
    4. 'return' (adapté à ' return') → logprob: -3.9283642768859863
    5. '       ' → logprob: -5.053364276885986
    6. ' return' → logprob: -6.178364276885986
    7. 'elif' → logprob: -7.303364276885986
    8. '	return' → logprob: -8.803364753723145
    9. '```' → logprob: -8.928364753723145
    10. ' ' → logprob: -9.053364753723145

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5088316798210144
    2. '   ' → logprob: -1.2588317394256592
    3. '    
' → logprob: -2.758831739425659
    4. 'else' → logprob: -3.383831739425659
    5. ' 
' → logprob: -5.63383150100708
    6. ' else' → logprob: -5.75883150100708
    7. '  
' → logprob: -6.13383150100708
    8. 'elif' → logprob: -6.38383150100708
    9. '```' → logprob: -6.50883150100708
    10. 'for' → logprob: -7.25883150100708

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13154236972332
    2. 'else' → logprob: -2.631542444229126
    3. '    
' → logprob: -3.756542444229126
    4. ' else' → logprob: -4.506542205810547
    5. 'for' → logprob: -5.631542205810547
    6. ' for' → logprob: -5.881542205810547
    7. ' 
' → logprob: -5.881542205810547
    8. '
' → logprob: -6.506542205810547
    9. 'elif' → logprob: -6.631542205810547
    10. ' ' → logprob: -6.881542205810547

Token 96: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.3258001506328583
    2. '   ' → logprob: -1.7008001804351807
    3. ' dp' → logprob: -3.7008001804351807
    4. 'ans' → logprob: -3.7008001804351807
    5. 'diff' → logprob: -4.200799942016602
    6. 'd' → logprob: -4.575799942016602
    7. '    
' → logprob: -5.325799942016602
    8. ' ans' → logprob: -5.450799942016602
    9. 'else' → logprob: -5.825799942016602
    10. 'cost' → logprob: -6.325799942016602

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020465287379920483
    2. '=' → logprob: -6.877046585083008
    3. '[' → logprob: -7.252046585083008
    4. ' ' → logprob: -8.627046585083008
    5. ' =[' → logprob: -9.752046585083008
    6. '_' → logprob: -10.252046585083008
    7. '=[' → logprob: -11.502046585083008
    8. '1' → logprob: -12.002046585083008
    9. ' [' → logprob: -12.877046585083008
    10. '[]' → logprob: -13.002046585083008

Token 98: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06603632122278214
    2. ' [' → logprob: -2.8160362243652344
    3. '[[' → logprob: -5.691036224365234
    4. ' [[' → logprob: -8.441036224365234
    5. '[N' → logprob: -8.691036224365234
    6. '[-' → logprob: -8.941036224365234
    7. '[n' → logprob: -9.316036224365234
    8. '[int' → logprob: -11.441036224365234
    9. '[i' → logprob: -11.566036224365234
    10. '[len' → logprob: -11.941036224365234

Token 99: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.15276497602462769
    2. '10' → logprob: -2.2777650356292725
    3. '0' → logprob: -3.2777650356292725
    4. '-' → logprob: -7.652764797210693
    5. 'int' → logprob: -7.902764797210693
    6. 'None' → logprob: -8.777765274047852
    7. '100' → logprob: -8.777765274047852
    8. ' float' → logprob: -9.277765274047852
    9. '1' → logprob: -9.527765274047852
    10. '999' → logprob: -10.527765274047852

Token 100: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.31315135955810547
    2. '**' → logprob: -1.5631513595581055
    3. '10' → logprob: -3.0631513595581055
    4. '18' → logprob: -4.9381513595581055
    5. '15' → logprob: -5.8131513595581055
    6. '12' → logprob: -6.8131513595581055
    7. '7' → logprob: -7.5631513595581055
    8. '8' → logprob: -8.188151359558105
    9. '11' → logprob: -9.063151359558105
    10. '16' → logprob: -9.313151359558105

Token 101: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5415828227996826
    2. '15' → logprob: -1.4165828227996826
    3. '10' → logprob: -1.9165828227996826
    4. '18' → logprob: -4.291583061218262
    5. '12' → logprob: -4.916583061218262
    6. '11' → logprob: -6.041583061218262
    7. '16' → logprob: -6.791583061218262
    8. '14' → logprob: -6.916583061218262
    9. '8' → logprob: -7.166583061218262
    10. '7' → logprob: -7.416583061218262

Token 102: '12' (ID: 899)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.545735239982605
    2. '15' → logprob: -1.420735239982605
    3. '10' → logprob: -2.0457353591918945
    4. '18' → logprob: -3.5457353591918945
    5. '12' → logprob: -4.5457353591918945
    6. '14' → logprob: -6.2957353591918945
    7. '11' → logprob: -6.2957353591918945
    8. '8' → logprob: -6.6707353591918945
    9. '16' → logprob: -6.6707353591918945
    10. '7' → logprob: -6.9207353591918945

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2714419960975647
    2. ' for' → logprob: -1.52144193649292
    3. ' ]' → logprob: -4.14644193649292
    4. 'for' → logprob: -6.39644193649292
    5. ']*' → logprob: -6.89644193649292
    6. ' ' → logprob: -7.77144193649292
    7. '   ' → logprob: -9.021442413330078
    8. ',' → logprob: -9.771442413330078
    9. ']*(' → logprob: -10.021442413330078
    10. '    ' → logprob: -10.271442413330078

Token 104: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0319385752081871
    2. 'for' → logprob: -3.9069385528564453
    3. ']' → logprob: -4.531938552856445
    4. '   ' → logprob: -8.156938552856445
    5. '	for' → logprob: -9.031938552856445
    6. ']*' → logprob: -9.406938552856445
    7. ' ' → logprob: -10.531938552856445
    8. ' ]' → logprob: -10.781938552856445
    9. ']*(' → logprob: -11.156938552856445
    10. '    ' → logprob: -11.531938552856445

Token 105: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10254944860935211
    2. '(K' → logprob: -2.6025495529174805
    3. ' (' → logprob: -4.1025495529174805
    4. '(n' → logprob: -6.3525495529174805
    5. '501' → logprob: -6.3525495529174805
    6. '(' → logprob: -6.6025495529174805
    7. '(k' → logprob: -7.1025495529174805
    8. '101' → logprob: -8.35254955291748
    9. '401' → logprob: -8.97754955291748
    10. 'N' → logprob: -9.35254955291748

Token 106: 'N' (ID: 45)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.029211584478616714
    2. 'N' → logprob: -4.029211521148682
    3. '(K' → logprob: -4.904211521148682
    4. '(N' → logprob: -6.404211521148682
    5. ' K' → logprob: -6.904211521148682
    6. '   ' → logprob: -7.654211521148682
    7. ' (' → logprob: -8.90421199798584
    8. '101' → logprob: -9.65421199798584
    9. ' ' → logprob: -9.65421199798584
    10. '(' → logprob: -9.90421199798584

Token 107: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3497220575809479
    2. ' +' → logprob: -1.2247220277786255
    3. ')' → logprob: -6.724721908569336
    4. ' ' → logprob: -10.849721908569336
    5. '   ' → logprob: -11.099721908569336
    6. ' )' → logprob: -11.474721908569336
    7. ')]' → logprob: -11.974721908569336
    8. ' for' → logprob: -12.724721908569336
    9. '+
' → logprob: -12.849721908569336
    10. ' +
' → logprob: -12.974721908569336

Token 108: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.032725583761930466
    2. ' K' → logprob: -3.5327255725860596
    3. '1' → logprob: -6.032725811004639
    4. ' ' → logprob: -8.15772533416748
    5. '   ' → logprob: -9.28272533416748
    6. 'k' → logprob: -10.03272533416748
    7. '    ' → logprob: -10.28272533416748
    8. '  ' → logprob: -10.78272533416748
    9. 'N' → logprob: -11.47022533416748
    10. '2' → logprob: -11.47022533416748

Token 109: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4418606758117676
    2. '+' → logprob: -1.0668606758117676
    3. ')' → logprob: -4.441860675811768
    4. ' -' → logprob: -7.691860675811768
    5. ' ' → logprob: -7.941860675811768
    6. ' )' → logprob: -8.44186019897461
    7. '-' → logprob: -8.81686019897461
    8. '   ' → logprob: -9.56686019897461
    9. '1' → logprob: -11.56686019897461
    10. ')]' → logprob: -11.81686019897461

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033956330735236406
    2. '2' → logprob: -6.0033955574035645
    3. ' ' → logprob: -7.0033955574035645
    4. '   ' → logprob: -12.003396034240723
    5. '3' → logprob: -13.440896034240723
    6. '  ' → logprob: -13.940896034240723
    7. '
' → logprob: -14.690896034240723
    8. '```' → logprob: -14.690896034240723
    9. '7' → logprob: -15.378396034240723
    10. '    ' → logprob: -15.815896034240723

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036687215324491262
    2. '2' → logprob: -5.628668785095215
    3. ' ' → logprob: -9.753668785095215
    4. '3' → logprob: -11.878668785095215
    5. '   ' → logprob: -13.378668785095215
    6. '7' → logprob: -14.566168785095215
    7. '5' → logprob: -15.003668785095215
    8. '  ' → logprob: -15.566168785095215
    9. '4' → logprob: -15.816168785095215
    10. '6' → logprob: -15.941168785095215

Token 112: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2766324281692505
    2. ')' → logprob: -1.5266324281692505
    3. 'for' → logprob: -4.151632308959961
    4. ']' → logprob: -5.401632308959961
    5. '   ' → logprob: -6.276632308959961
    6. ' )' → logprob: -6.651632308959961
    7. ' ' → logprob: -7.651632308959961
    8. ' ]' → logprob: -8.276632308959961
    9. ')]' → logprob: -9.151632308959961
    10. '    ' → logprob: -10.151632308959961

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006174909416586161
    2. 'for' → logprob: -5.2561750411987305
    3. ']' → logprob: -7.3811750411987305
    4. '   ' → logprob: -8.63117504119873
    5. '	for' → logprob: -9.88117504119873
    6. ' ]' → logprob: -10.25617504119873
    7. ' ' → logprob: -10.38117504119873
    8. '
' → logprob: -11.75617504119873
    9. ')' → logprob: -12.25617504119873
    10. '    ' → logprob: -13.25617504119873

Token 114: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.47688770294189453
    2. '_' → logprob: -0.9768877029418945
    3. ' i' → logprob: -6.4768877029418945
    4. ' range' → logprob: -6.8518877029418945
    5. '_i' → logprob: -9.226887702941895
    6. '_range' → logprob: -9.851887702941895
    7. ' ' → logprob: -10.101887702941895
    8. 'range' → logprob: -11.601887702941895
    9. ' in' → logprob: -12.226887702941895
    10. '_j' → logprob: -13.476887702941895

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4358353614807129
    2. 'in' → logprob: -1.060835361480713
    3. 'range' → logprob: -5.060835361480713
    4. ' range' → logprob: -7.935835361480713
    5. ' ' → logprob: -8.185834884643555
    6. '_' → logprob: -9.810834884643555
    7. ' i' → logprob: -10.810834884643555
    8. '(range' → logprob: -10.935834884643555
    9. 'i' → logprob: -11.560834884643555
    10. '  ' → logprob: -11.810834884643555

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519332468509674
    2. ' range' → logprob: -1.501933217048645
    3. ' ' → logprob: -12.751933097839355
    4. '	range' → logprob: -14.876933097839355
    5. '(range' → logprob: -15.376933097839355
    6. '   ' → logprob: -15.751933097839355
    7. '  ' → logprob: -15.751933097839355
    8. '[' → logprob: -16.001934051513672
    9. ' xrange' → logprob: -17.251934051513672
    10. 'ran' → logprob: -17.501934051513672

Token 117: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.025358259677886963
    2. '(' → logprob: -3.775358200073242
    3. ' (' → logprob: -6.525358200073242
    4. '(K' → logprob: -7.775358200073242
    5. '((' → logprob: -9.400358200073242
    6. '(range' → logprob: -9.650358200073242
    7. ' range' → logprob: -10.650358200073242
    8. '(n' → logprob: -11.150358200073242
    9. 'range' → logprob: -11.525358200073242
    10. ' ' → logprob: -11.650358200073242

Token 118: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27078768610954285
    2. ' +' → logprob: -2.0207877159118652
    3. ')]' → logprob: -2.2707877159118652
    4. ')' → logprob: -7.020787715911865
    5. ' )' → logprob: -8.145787239074707
    6. '   ' → logprob: -9.145787239074707
    7. ')]
' → logprob: -10.145787239074707
    8. ')][' → logprob: -11.020787239074707
    9. ')])' → logprob: -11.020787239074707
    10. '):' → logprob: -11.145787239074707

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013748762430623174
    2. ' ' → logprob: -7.1263747215271
    3. '2' → logprob: -7.5013747215271
    4. '   ' → logprob: -11.376375198364258
    5. '```' → logprob: -13.126375198364258
    6. ')' → logprob: -13.563875198364258
    7. '0' → logprob: -15.126375198364258
    8. ' )' → logprob: -15.126375198364258
    9. '  ' → logprob: -15.313875198364258
    10. '`' → logprob: -15.313875198364258

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001991298486245796
    2. '0' → logprob: -9.375199317932129
    3. ' ' → logprob: -9.375199317932129
    4. '2' → logprob: -10.500199317932129
    5. '   ' → logprob: -14.125199317932129
    6. '3' → logprob: -15.125199317932129
    7. 'K' → logprob: -16.000198364257812
    8. '  ' → logprob: -16.125198364257812
    9. '10' → logprob: -16.187698364257812
    10. '```' → logprob: -16.437698364257812

Token 121: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.25201237201690674
    2. ']' → logprob: -1.5020123720169067
    3. ')' → logprob: -10.127012252807617
    4. '   ' → logprob: -11.252012252807617
    5. ' ]' → logprob: -11.252012252807617
    6. ']
' → logprob: -12.127012252807617
    7. '])]' → logprob: -12.252012252807617
    8. '])' → logprob: -12.502012252807617
    9. ')]
' → logprob: -13.627012252807617
    10. '}]' → logprob: -14.627012252807617

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04439578205347061
    2. '
' → logprob: -4.044395923614502
    3. 'dp' → logprob: -4.294395923614502
    4. '	dp' → logprob: -5.419395923614502
    5. '    
' → logprob: -5.669395923614502
    6. ' dp' → logprob: -6.544395923614502
    7. '<|end|>' → logprob: -7.294395923614502
    8. '  
' → logprob: -7.919395923614502
    9. '\n' → logprob: -7.919395923614502
    10. '[' → logprob: -8.044395446777344

Token 123: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06004711613059044
    2. '   ' → logprob: -3.810047149658203
    3. ' dp' → logprob: -4.185047149658203
    4. ' for' → logprob: -4.310047149658203
    5. 'for' (adapté à ' for') → logprob: -4.935047149658203
    6. '	dp' → logprob: -8.810047149658203
    7. '
' → logprob: -9.935047149658203
    8. '    
' → logprob: -10.935047149658203
    9. ' 
' → logprob: -11.435047149658203
    10. 'def' → logprob: -11.435047149658203

Token 124: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6334279179573059
    2. ' i' → logprob: -0.7584279179573059
    3. 'k' → logprob: -8.258427619934082
    4. 'j' → logprob: -8.883427619934082
    5. ' j' → logprob: -9.258427619934082
    6. ' k' → logprob: -9.633427619934082
    7. 'd' → logprob: -9.883427619934082
    8. 'v' → logprob: -10.383427619934082
    9. 'x' → logprob: -10.633427619934082
    10. ' v' → logprob: -10.883427619934082

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20171229541301727
    2. 'in' → logprob: -1.7017122507095337
    3. ' ' → logprob: -8.576712608337402
    4. 'x' → logprob: -10.076712608337402
    5. 'n' → logprob: -11.326712608337402
    6. '[' → logprob: -11.451712608337402
    7. '_' → logprob: -11.576712608337402
    8. '   ' → logprob: -11.826712608337402
    9. 'i' → logprob: -11.951712608337402
    10. '	in' → logprob: -12.326712608337402

Token 126: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03368189558386803
    2. ' range' → logprob: -3.408681869506836
    3. '[' → logprob: -10.408681869506836
    4. '(range' → logprob: -13.033681869506836
    5. '(' → logprob: -13.908681869506836
    6. '0' → logprob: -14.783681869506836
    7. 'dp' → logprob: -14.908681869506836
    8. '	range' → logprob: -15.033681869506836
    9. ' ' → logprob: -15.533681869506836
    10. 'x' → logprob: -15.658681869506836

Token 127: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.620966911315918
    2. '(K' → logprob: -1.245966911315918
    3. '(' → logprob: -1.745966911315918
    4. '(len' → logprob: -8.120966911315918
    5. '(n' → logprob: -10.120966911315918
    6. '(min' → logprob: -10.370966911315918
    7. '(k' → logprob: -10.745966911315918
    8. '((' → logprob: -11.995966911315918
    9. '(x' → logprob: -12.245966911315918
    10. '(i' → logprob: -12.245966911315918

Token 128: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3871779441833496
    2. ' +' → logprob: -1.1371779441833496
    3. ' -' → logprob: -9.012178421020508
    4. '   ' → logprob: -9.762178421020508
    5. '-' → logprob: -9.887178421020508
    6. '):' → logprob: -10.137178421020508
    7. '):
' → logprob: -11.012178421020508
    8. '-K' → logprob: -11.387178421020508
    9. '+k' → logprob: -12.887178421020508
    10. ' ' → logprob: -13.387178421020508

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017167085316032171
    2. ' ' → logprob: -6.376716613769531
    3. '2' → logprob: -12.126716613769531
    4. 'K' → logprob: -12.876716613769531
    5. '   ' → logprob: -13.376716613769531
    6. ' K' → logprob: -13.626716613769531
    7. '0' → logprob: -13.876716613769531
    8. 'N' → logprob: -14.439216613769531
    9. ' N' → logprob: -15.064216613769531
    10. '  ' → logprob: -15.439216613769531

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001858982432167977
    2. '2' → logprob: -9.0001859664917
    3. 'K' → logprob: -10.1251859664917
    4. ' ' → logprob: -11.1251859664917
    5. '0' → logprob: -12.5001859664917
    6. 'N' → logprob: -13.6251859664917
    7. '-' → logprob: -14.1251859664917
    8. '3' → logprob: -15.5001859664917
    9. '7' → logprob: -15.6251859664917
    10. '(' → logprob: -15.6251859664917

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14285993576049805
    2. '):
' → logprob: -2.017859935760498
    3. ' ):' → logprob: -9.267860412597656
    4. ')' → logprob: -9.767860412597656
    5. ':' → logprob: -11.517860412597656
    6. ' ):
' → logprob: -11.892860412597656
    7. '):
' → logprob: -12.267860412597656
    8. '   ' → logprob: -12.392860412597656
    9. ' ' → logprob: -12.642860412597656
    10. '):

' → logprob: -13.517860412597656

Token 132: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7132164835929871
    2. ' dp' → logprob: -0.8382164835929871
    3. '       ' → logprob: -3.088216543197632
    4. 'dp' → logprob: -3.713216543197632
    5. '	dp' → logprob: -5.338216304779053
    6. ':' → logprob: -6.838216304779053
    7. '[' → logprob: -7.963216304779053
    8. ' for' → logprob: -7.963216304779053
    9. ' ' → logprob: -8.213216781616211
    10. '(dp' → logprob: -8.338216781616211

Token 133: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.16187381744384766
    2. 'dp' (adapté à ' dp') → logprob: -2.1618738174438477
    3. '   ' → logprob: -3.6618738174438477
    4. ' for' → logprob: -5.161873817443848
    5. 'for' → logprob: -6.661873817443848
    6. '       ' → logprob: -7.036873817443848
    7. ' ' → logprob: -7.786873817443848
    8. '	dp' → logprob: -8.536873817443848
    9. ' if' → logprob: -10.536873817443848
    10. '    ' → logprob: -10.536873817443848

Token 134: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0033433556091040373
    2. '[' → logprob: -5.75334358215332
    3. '][' → logprob: -9.00334358215332
    4. ' [' → logprob: -10.62834358215332
    5. '```' → logprob: -13.12834358215332
    6. '[t' → logprob: -13.25334358215332
    7. ')[' → logprob: -13.37834358215332
    8. '[s' → logprob: -13.50334358215332
    9. '[
' → logprob: -13.62834358215332
    10. '}[' → logprob: -13.75334358215332

Token 135: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014353510923683643
    2. '[' → logprob: -6.626435279846191
    3. ']' → logprob: -9.626435279846191
    4. ' ][' → logprob: -10.376435279846191
    5. '0' → logprob: -12.376435279846191
    6. '
' → logprob: -13.251435279846191
    7. '][-' → logprob: -13.251435279846191
    8. ' ' → logprob: -13.876435279846191
    9. '   ' → logprob: -14.626435279846191
    10. 's' → logprob: -14.876435279846191

Token 136: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -11.500016212463379
    3. 'x' → logprob: -12.750016212463379
    4. '1' → logprob: -12.875016212463379
    5. 'min' → logprob: -16.375015258789062
    6. '   ' → logprob: -16.750015258789062
    7. 'max' → logprob: -16.937515258789062
    8. '(' → logprob: -17.437515258789062
    9. ']' → logprob: -17.750015258789062
    10. '۰' → logprob: -17.937515258789062

Token 137: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.5107177862082608e-05
    2. ' ]' → logprob: -11.000024795532227
    3. ']=' → logprob: -11.750024795532227
    4. '=' → logprob: -15.625024795532227
    5. ')' → logprob: -16.375024795532227
    6. '])' → logprob: -17.375024795532227
    7. '[' → logprob: -17.625024795532227
    8. '0' → logprob: -17.750024795532227
    9. 'x' → logprob: -18.375024795532227
    10. '   ' → logprob: -18.500024795532227

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519339919090271
    2. ' =' → logprob: -1.5019340515136719
    3. '=x' → logprob: -12.876934051513672
    4. 'x' → logprob: -14.626934051513672
    5. '=int' → logprob: -14.626934051513672
    6. '=min' → logprob: -14.626934051513672
    7. '0' → logprob: -15.001934051513672
    8. '=

' → logprob: -15.626934051513672
    9. ']' → logprob: -15.876934051513672
    10. '=max' → logprob: -16.376934051513672

Token 139: ' H' (ID: 487)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00501564797013998
    2. 'H' → logprob: -5.880015850067139
    3. 'abs' → logprob: -6.505015850067139
    4. ' ' → logprob: -8.00501537322998
    5. '10' → logprob: -8.75501537322998
    6. 'max' → logprob: -8.88001537322998
    7. 'x' → logprob: -10.00501537322998
    8. ' H' → logprob: -11.00501537322998
    9. ' abs' → logprob: -11.88001537322998
    10. '100' → logprob: -12.88001537322998

Token 140: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0001830410328693688
    2. '[' → logprob: -8.75018310546875
    3. 'x' → logprob: -10.75018310546875
    4. ' [' → logprob: -13.25018310546875
    5. '0' → logprob: -14.87518310546875
    6. '[
' → logprob: -16.00018310546875
    7. '```' → logprob: -16.00018310546875
    8. '\[' → logprob: -16.50018310546875
    9. '(x' → logprob: -16.75018310546875
    10. ' ' → logprob: -16.87518310546875

Token 141: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017768036341294646
    2. '])' → logprob: -6.876776695251465
    3. ']*' → logprob: -7.876776695251465
    4. ' ]' → logprob: -9.126776695251465
    5. ']-' → logprob: -9.251776695251465
    6. '-' → logprob: -9.376776695251465
    7. ']
' → logprob: -10.376776695251465
    8. ']+' → logprob: -11.126776695251465
    9. 'x' → logprob: -12.251776695251465
    10. ')' → logprob: -12.626776695251465

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3693607747554779
    2. ' for' → logprob: -1.9943608045578003
    3. '
' → logprob: -2.3693606853485107
    4. '<|end|>' → logprob: -2.9943606853485107
    5. '	for' → logprob: -4.24436092376709
    6. '\n' → logprob: -4.99436092376709
    7. 'for' → logprob: -6.11936092376709
    8. '    
' → logprob: -6.74436092376709
    9. ' ' → logprob: -6.86936092376709
    10. ' 
' → logprob: -6.99436092376709

Token 143: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27891379594802856
    2. '   ' → logprob: -1.7789137363433838
    3. 'for' (adapté à ' for') → logprob: -3.028913736343384
    4. '
' → logprob: -4.778913974761963
    5. '\n' → logprob: -5.278913974761963
    6. ' ' → logprob: -5.278913974761963
    7. '	for' → logprob: -6.028913974761963
    8. ')' → logprob: -6.528913974761963
    9. '<|end|>' → logprob: -6.778913974761963
    10. ' 
' → logprob: -6.778913974761963

Token 144: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22607626020908356
    2. 'i' → logprob: -2.101076364517212
    3. ' x' → logprob: -2.851076364517212
    4. 'x' → logprob: -4.351076126098633
    5. ' j' → logprob: -6.101076126098633
    6. ' k' → logprob: -6.351076126098633
    7. ' length' → logprob: -7.226076126098633
    8. ' d' → logprob: -7.351076126098633
    9. 'k' → logprob: -7.601076126098633
    10. ' _' → logprob: -7.913576126098633

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006751970387995243
    2. 'in' → logprob: -5.006752014160156
    3. ' ' → logprob: -10.881752014160156
    4. 'y' → logprob: -12.131752014160156
    5. '1' → logprob: -13.256752014160156
    6. 'space' → logprob: -13.256752014160156
    7. '_' → logprob: -13.506752014160156
    8. 'n' → logprob: -13.631752014160156
    9. 'In' → logprob: -14.256752014160156
    10. ',' → logprob: -14.506752014160156

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22542765736579895
    2. ' range' → logprob: -1.6004276275634766
    3. '(range' → logprob: -11.600427627563477
    4. ' in' → logprob: -13.100427627563477
    5. 'in' → logprob: -13.475427627563477
    6. ' ' → logprob: -14.600427627563477
    7. '(' → logprob: -15.100427627563477
    8. '[' → logprob: -15.475427627563477
    9. ')' → logprob: -15.725427627563477
    10. '	range' → logprob: -15.725427627563477

Token 147: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011220654472708702
    2. '2' → logprob: -4.511220455169678
    3. ' ' → logprob: -9.136220932006836
    4. '1' → logprob: -9.886220932006836
    5. '   ' → logprob: -12.261220932006836
    6. ' (' → logprob: -13.011220932006836
    7. 'range' → logprob: -13.386220932006836
    8. '3' → logprob: -13.761220932006836
    9. '(N' → logprob: -14.011220932006836
    10. ')' → logprob: -14.261220932006836

Token 148: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006886577233672142
    2. '1' → logprob: -5.0068864822387695
    3. 'N' → logprob: -9.38188648223877
    4. ' ' → logprob: -9.50688648223877
    5. '3' → logprob: -12.50688648223877
    6. 'K' → logprob: -13.25688648223877
    7. '0' → logprob: -13.38188648223877
    8. '(' → logprob: -13.38188648223877
    9. '   ' → logprob: -13.63188648223877
    10. '
' → logprob: -14.50688648223877

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03714904934167862
    2. ',N' → logprob: -3.412148952484131
    3. ' ,' → logprob: -5.787148952484131
    4. '(N' → logprob: -8.412149429321289
    5. ',y' → logprob: -9.912149429321289
    6. '   ' → logprob: -10.412149429321289
    7. 'in' → logprob: -10.787149429321289
    8. ' in' → logprob: -11.037149429321289
    9. 'N' → logprob: -11.037149429321289
    10. ',n' → logprob: -11.162149429321289

Token 150: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0076147946529090405
    2. ' N' → logprob: -4.882614612579346
    3. '(N' → logprob: -12.507615089416504
    4. '   ' → logprob: -13.132615089416504
    5. ' ' → logprob: -13.507615089416504
    6. 'K' → logprob: -14.257615089416504
    7. '  ' → logprob: -15.382615089416504
    8. ' (' → logprob: -15.632615089416504
    9. '    ' → logprob: -16.007614135742188
    10. '(' → logprob: -16.007614135742188

Token 151: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15785734355449677
    2. ' +' → logprob: -2.5328574180603027
    3. ' -' → logprob: -2.9078574180603027
    4. '-K' → logprob: -4.907857418060303
    5. '-' → logprob: -5.407857418060303
    6. '-N' → logprob: -10.157856941223145
    7. '-k' → logprob: -10.282856941223145
    8. ' ' → logprob: -11.032856941223145
    9. 'K' → logprob: -11.532856941223145
    10. '   ' → logprob: -11.782856941223145

Token 152: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0031944699585437775
    2. ' K' → logprob: -5.753194332122803
    3. '   ' → logprob: -11.878194808959961
    4. ' ' → logprob: -11.878194808959961
    5. '  ' → logprob: -14.003194808959961
    6. '    ' → logprob: -15.253194808959961
    7. '	K' → logprob: -15.503194808959961
    8. '
' → logprob: -15.565694808959961
    9. '           ' → logprob: -15.878194808959961
    10. '<K' → logprob: -16.00319480895996

Token 153: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519353926181793
    2. ' +' → logprob: -1.501935362815857
    3. ' ' → logprob: -13.751935005187988
    4. '   ' → logprob: -13.876935005187988
    5. '):
' → logprob: -14.126935005187988
    6. ')' → logprob: -14.126935005187988
    7. '+
' → logprob: -14.251935005187988
    8. '
' → logprob: -15.126935005187988
    9. ' +
' → logprob: -15.376935005187988
    10. '):' → logprob: -15.501935005187988

Token 154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0432874821126461
    2. '2' → logprob: -3.168287515640259
    3. ' ' → logprob: -8.16828727722168
    4. '   ' → logprob: -12.66828727722168
    5. '  ' → logprob: -15.41828727722168
    6. '
' → logprob: -15.48078727722168
    7. '3' → logprob: -15.48078727722168
    8. '```' → logprob: -15.73078727722168
    9. '+' → logprob: -15.85578727722168
    10. '    ' → logprob: -16.29328727722168

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007183883571997285
    2. '2' → logprob: -7.250718593597412
    3. ' ' → logprob: -11.750718116760254
    4. '   ' → logprob: -15.188218116760254
    5. '3' → logprob: -15.750718116760254
    6. '
' → logprob: -16.87571907043457
    7. '```' → logprob: -16.93821907043457
    8. '0' → logprob: -17.56321907043457
    9. '１' → logprob: -17.81321907043457
    10. '  ' → logprob: -18.18821907043457

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010031001642346382
    2. '):
' → logprob: -4.760031223297119
    3. ':' → logprob: -6.635031223297119
    4. ' ):' → logprob: -9.635030746459961
    5. ')' → logprob: -10.385030746459961
    6. ':
' → logprob: -13.135030746459961
    7. ' ):
' → logprob: -13.885030746459961
    8. '):
' → logprob: -14.260030746459961
    9. '():' → logprob: -14.385030746459961
    10. ' :' → logprob: -14.885030746459961

Token 157: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3245929777622223
    2. '       ' → logprob: -1.3245929479599
    3. '   ' → logprob: -4.8245930671691895
    4. '    ' → logprob: -6.8245930671691895
    5. ' ' → logprob: -7.1995930671691895
    6. '	for' → logprob: -7.5745930671691895
    7. '	' → logprob: -8.324592590332031
    8. '	   ' → logprob: -8.949592590332031
    9. ' x' → logprob: -9.199592590332031
    10. ' i' → logprob: -9.199592590332031

Token 158: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5231797695159912
    2. 'for' (adapté à ' for') → logprob: -0.8981797695159912
    3. '   ' → logprob: -10.02318000793457
    4. 'x' → logprob: -12.52318000793457
    5. ' i' → logprob: -13.27318000793457
    6. ' x' → logprob: -13.77318000793457
    7. ' ' → logprob: -13.77318000793457
    8. ' y' → logprob: -13.77318000793457
    9. 'i' → logprob: -13.89818000793457
    10. '	for' → logprob: -13.89818000793457

Token 159: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07910359650850296
    2. ' x' → logprob: -2.579103708267212
    3. 'i' → logprob: -9.579103469848633
    4. 'z' → logprob: -10.329103469848633
    5. ' i' → logprob: -10.704103469848633
    6. 'y' → logprob: -10.829103469848633
    7. 'j' → logprob: -11.454103469848633
    8. ' y' → logprob: -11.704103469848633
    9. '_x' → logprob: -11.954103469848633
    10. ' z' → logprob: -12.391603469848633

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03812938928604126
    2. 'in' → logprob: -3.2881293296813965
    3. ' ' → logprob: -10.413129806518555
    4. 'In' → logprob: -11.913129806518555
    5. '1' → logprob: -12.038129806518555
    6. '	in' → logprob: -12.038129806518555
    7. 'import' → logprob: -12.163129806518555
    8. 'n' → logprob: -12.288129806518555
    9. ')' → logprob: -12.663129806518555
    10. '   ' → logprob: -12.913129806518555

Token 161: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.142695814371109
    2. 'range' → logprob: -2.017695903778076
    3. ' y' → logprob: -12.017695426940918
    4. '(range' → logprob: -12.017695426940918
    5. '   ' → logprob: -13.267695426940918
    6. ' ' → logprob: -13.767695426940918
    7. 'y' → logprob: -14.017695426940918
    8. '(' → logprob: -14.267695426940918
    9. ' in' → logprob: -14.642695426940918
    10. '1' → logprob: -14.642695426940918

Token 162: '(N' (ID: 10564)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.12742410600185394
    2. '(' → logprob: -2.1274240016937256
    3. '(N' → logprob: -8.252424240112305
    4. '(x' → logprob: -8.877424240112305
    5. '(range' → logprob: -9.752424240112305
    6. '(K' → logprob: -11.127424240112305
    7. '((' → logprob: -12.252424240112305
    8. 'y' → logprob: -12.502424240112305
    9. '1' → logprob: -12.752424240112305
    10. 'range' → logprob: -13.252424240112305

Token 163: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2629903256893158
    2. '):
' → logprob: -2.5129902362823486
    3. '+' → logprob: -3.3879902362823486
    4. '-' → logprob: -3.6379902362823486
    5. ' -' → logprob: -3.6379902362823486
    6. ' +' → logprob: -4.137990474700928
    7. '(y' → logprob: -4.512990474700928
    8. ' ):' → logprob: -4.512990474700928
    9. '(' → logprob: -5.262990474700928
    10. '1' → logprob: -5.637990474700928

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004694629926234484
    2. ' ' → logprob: -6.00469446182251
    3. 'y' → logprob: -6.37969446182251
    4. '0' → logprob: -8.379694938659668
    5. ' y' → logprob: -9.254694938659668
    6. ')' → logprob: -9.754694938659668
    7. '(' → logprob: -10.254694938659668
    8. '   ' → logprob: -10.504694938659668
    9. '):' → logprob: -10.879694938659668
    10. '(y' → logprob: -10.879694938659668

Token 165: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.35134875774383545
    2. '1' → logprob: -1.2263487577438354
    3. '+' → logprob: -6.476348876953125
    4. 'x' → logprob: -7.226348876953125
    5. ' y' → logprob: -9.101348876953125
    6. '(y' → logprob: -9.101348876953125
    7. '+y' → logprob: -9.226348876953125
    8. ')' → logprob: -9.601348876953125
    9. '):' → logprob: -9.726348876953125
    10. '):
' → logprob: -9.976348876953125

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010136376367881894
    2. ' ):' → logprob: -7.37601375579834
    3. '):
' → logprob: -8.12601375579834
    4. ')' → logprob: -10.50101375579834
    5. ':' → logprob: -10.62601375579834
    6. '   ' → logprob: -10.87601375579834
    7. '+' → logprob: -11.75101375579834
    8. '-' → logprob: -12.00101375579834
    9. '       ' → logprob: -13.50101375579834
    10. '():' → logprob: -14.25101375579834

Token 167: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21638892590999603
    2. '       ' → logprob: -2.0913889408111572
    3. ' if' → logprob: -3.0913889408111572
    4. ' :' → logprob: -4.841388702392578
    5. 'if' → logprob: -5.466388702392578
    6. '):' → logprob: -5.716388702392578
    7. '<|end|>' → logprob: -6.091388702392578
    8. ' ' → logprob: -6.466388702392578
    9. ')' → logprob: -6.591388702392578
    10. '   ' → logprob: -6.716388702392578

Token 168: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6558369994163513
    2. 'for' (adapté à ' for') → logprob: -1.530837059020996
    3. ' if' → logprob: -2.280837059020996
    4. 'dp' → logprob: -2.655837059020996
    5. 'if' → logprob: -3.030837059020996
    6. ' dp' → logprob: -3.405837059020996
    7. ' min' → logprob: -5.655837059020996
    8. 'min' → logprob: -6.030837059020996
    9. '   ' → logprob: -6.280837059020996
    10. 'j' → logprob: -6.905837059020996

Token 169: ' i' (ID: 575)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.15036755800247192
    2. ' z' → logprob: -2.650367498397827
    3. 'p' → logprob: -4.150367736816406
    4. 'i' → logprob: -5.025367736816406
    5. 'x' → logprob: -5.025367736816406
    6. 'k' → logprob: -5.275367736816406
    7. 'j' → logprob: -5.400367736816406
    8. 'prev' → logprob: -5.525367736816406
    9. 'nx' → logprob: -6.025367736816406
    10. ' prev' → logprob: -6.150367736816406

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22573445737361908
    2. 'in' → logprob: -1.6007344722747803
    3. 'x' → logprob: -8.47573471069336
    4. ' ' → logprob: -10.47573471069336
    5. 'range' → logprob: -10.60073471069336
    6. 'import' → logprob: -11.97573471069336
    7. 'y' → logprob: -12.22573471069336
    8. ')' → logprob: -12.35073471069336
    9. 'n' → logprob: -12.35073471069336
    10. ' x' → logprob: -12.47573471069336

Token 171: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018151231110095978
    2. 'range' → logprob: -4.01815128326416
    3. '(range' → logprob: -14.51815128326416
    4. '	range' → logprob: -15.01815128326416
    5. ' xrange' → logprob: -15.39315128326416
    6. ' ' → logprob: -16.018150329589844
    7. '   ' → logprob: -16.018150329589844
    8. ' x' → logprob: -18.018150329589844
    9. ' ran' → logprob: -18.518150329589844
    10. 'x' → logprob: -18.643150329589844

Token 172: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.000530871853698045
    2. '(' → logprob: -7.87553071975708
    3. '(y' → logprob: -9.625531196594238
    4. 'x' → logprob: -9.875531196594238
    5. '(max' → logprob: -10.500531196594238
    6. '(N' → logprob: -13.250531196594238
    7. '(i' → logprob: -13.500531196594238
    8. '(
' → logprob: -14.625531196594238
    9. '((' → logprob: -15.000531196594238
    10. '1' → logprob: -15.375531196594238

Token 173: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019776455592364073
    2. '1' → logprob: -6.876977443695068
    3. ' x' → logprob: -7.876977443695068
    4. 'max' → logprob: -8.376977920532227
    5. 'y' → logprob: -8.626977920532227
    6. '(x' → logprob: -9.251977920532227
    7. '0' → logprob: -10.876977920532227
    8. 'N' → logprob: -11.376977920532227
    9. ' max' → logprob: -11.626977920532227
    10. 'K' → logprob: -11.751977920532227

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011951236985623837
    2. ',x' → logprob: -5.011951446533203
    3. ' ,' → logprob: -5.261951446533203
    4. 'x' → logprob: -10.386951446533203
    5. ' x' → logprob: -12.761951446533203
    6. '(x' → logprob: -13.761951446533203
    7. '1' → logprob: -14.011951446533203
    8. ',
' → logprob: -15.011951446533203
    9. ',y' → logprob: -15.511951446533203
    10. '0' → logprob: -15.761951446533203

Token 175: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.5027299822540954e-05
    2. ' x' → logprob: -9.875055313110352
    3. 'N' → logprob: -13.500055313110352
    4. 'K' → logprob: -13.750055313110352
    5. 'y' → logprob: -14.500055313110352
    6. 'min' → logprob: -15.500055313110352
    7. '   ' → logprob: -15.875055313110352
    8. '(x' → logprob: -16.25005531311035
    9. '	x' → logprob: -18.50005531311035
    10. ')' → logprob: -19.12505531311035

Token 176: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06030493229627609
    2. '):' → logprob: -3.310304880142212
    3. ' ):
' → logprob: -4.310305118560791
    4. '+' → logprob: -5.185305118560791
    5. ' ):' → logprob: -6.435305118560791
    6. '+x' → logprob: -7.310305118560791
    7. ' +' → logprob: -8.560304641723633
    8. '       ' → logprob: -8.560304641723633
    9. ')' → logprob: -8.935304641723633
    10. '   ' → logprob: -9.685304641723633

Token 177: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01334315538406372
    2. '           ' → logprob: -5.638343334197998
    3. ' dp' → logprob: -5.638343334197998
    4. ' ' → logprob: -6.263343334197998
    5. '<|end|>' → logprob: -7.013343334197998
    6. ' if' → logprob: -7.263343334197998
    7. '                               ' → logprob: -7.638343334197998
    8. ' 
' → logprob: -7.888343334197998
    9. '                ' → logprob: -8.26334285736084
    10. '       ' → logprob: -8.76334285736084

Token 178: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1038970872759819
    2. ' dp' → logprob: -2.3538970947265625
    3. 'cost' → logprob: -6.6038970947265625
    4. ' if' → logprob: -6.9788970947265625
    5. 'if' → logprob: -7.1038970947265625
    6. ' cost' → logprob: -8.478897094726562
    7. '               ' → logprob: -8.853897094726562
    8. '                   ' → logprob: -9.228897094726562
    9. '           ' → logprob: -9.978897094726562
    10. '	dp' → logprob: -11.103897094726562

Token 179: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.723352049040841e-06
    2. '][' → logprob: -13.125004768371582
    3. '[' → logprob: -13.875004768371582
    4. 'dp' → logprob: -14.625004768371582
    5. '[i' → logprob: -15.250004768371582
    6. '\[' → logprob: -15.500004768371582
    7. '}[' → logprob: -15.875004768371582
    8. 'x' → logprob: -16.000003814697266
    9. ' [' → logprob: -16.500003814697266
    10. '```' → logprob: -16.500003814697266

Token 180: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006189837586134672
    2. '[y' → logprob: -5.131189823150635
    3. '[' → logprob: -9.006190299987793
    4. ']' → logprob: -10.381190299987793
    5. ' ][' → logprob: -10.756190299987793
    6. ' [' → logprob: -11.131190299987793
    7. '[i' → logprob: -11.256190299987793
    8. '[x' → logprob: -11.506190299987793
    9. '"][' → logprob: -11.756190299987793
    10. 'y' → logprob: -12.131190299987793

Token 181: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00011641718447208405
    2. ' y' → logprob: -9.125116348266602
    3. '[y' → logprob: -12.000116348266602
    4. '	y' → logprob: -14.625116348266602
    5. '   ' → logprob: -15.625116348266602
    6. '(y' → logprob: -16.1251163482666
    7. ')y' → logprob: -16.7501163482666
    8. '][' → logprob: -16.8751163482666
    9. ' ' → logprob: -17.0001163482666
    10. ']' → logprob: -17.0001163482666

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006414268864318728
    2. ']=' → logprob: -7.375641345977783
    3. '[min' → logprob: -12.250641822814941
    4. ' ]' → logprob: -12.500641822814941
    5. '[' → logprob: -12.500641822814941
    6. 'min' → logprob: -13.625641822814941
    7. ']
' → logprob: -14.500641822814941
    8. '[j' → logprob: -15.125641822814941
    9. '=min' → logprob: -15.250641822814941
    10. ' =' → logprob: -16.000640869140625

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018773827701807022
    2. ' =' → logprob: -4.018774032592773
    3. '=min' → logprob: -7.393774032592773
    4. 'min' → logprob: -12.143774032592773
    5. '=
' → logprob: -13.143774032592773
    6. '[min' → logprob: -14.643774032592773
    7. '=max' → logprob: -15.143774032592773
    8. '=

' → logprob: -15.143774032592773
    9. ']=' → logprob: -15.518774032592773
    10. '[' → logprob: -15.643774032592773

Token 184: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.061967913061380386
    2. ' min' → logprob: -2.8119678497314453
    3. '   ' → logprob: -15.686967849731445
    4. '	min' → logprob: -15.936967849731445
    5. 'max' → logprob: -17.186967849731445
    6. '(min' → logprob: -18.686967849731445
    7. '[min' → logprob: -18.936967849731445
    8. ' ' → logprob: -19.436967849731445
    9. '           ' → logprob: -19.811967849731445
    10. '=min' → logprob: -19.811967849731445

Token 185: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00043233807082287967
    2. '(' → logprob: -7.75043249130249
    3. '(
' → logprob: -13.375432014465332
    4. 'dp' → logprob: -17.25043296813965
    5. '(

' → logprob: -17.37543296813965
    6. '(d' → logprob: -18.75043296813965
    7. '	dp' → logprob: -18.75043296813965
    8. ' dp' → logprob: -19.87543296813965
    9. ' (' → logprob: -20.00043296813965
    10. '([' → logprob: -21.37543296813965

Token 186: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -11.875009536743164
    3. '[i' → logprob: -14.625009536743164
    4. '][' → logprob: -14.625009536743164
    5. ' [' → logprob: -14.875009536743164
    6. '```' → logprob: -15.125009536743164
    7. 'x' → logprob: -15.250009536743164
    8. '[
' → logprob: -15.500009536743164
    9. '(x' → logprob: -16.000009536743164
    10. '{x' → logprob: -16.125009536743164

Token 187: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004902417422272265
    2. '-' → logprob: -8.375490188598633
    3. '[y' → logprob: -9.500490188598633
    4. ' ][' → logprob: -10.125490188598633
    5. '[i' → logprob: -10.250490188598633
    6. 'y' → logprob: -10.500490188598633
    7. ']' → logprob: -10.500490188598633
    8. ' -' → logprob: -10.625490188598633
    9. '[' → logprob: -11.500490188598633
    10. '   ' → logprob: -12.375490188598633

Token 188: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2819214463233948
    2. 'i' → logprob: -1.40692138671875
    3. 'x' → logprob: -7.78192138671875
    4. '-' → logprob: -9.03192138671875
    5. '1' → logprob: -9.53192138671875
    6. ' y' → logprob: -10.15692138671875
    7. '[i' → logprob: -10.65692138671875
    8. ']' → logprob: -10.90692138671875
    9. '(i' → logprob: -11.15692138671875
    10. '   ' → logprob: -11.28192138671875

Token 189: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017491238191723824
    2. '],' → logprob: -4.142491340637207
    3. ' ,' → logprob: -6.642491340637207
    4. 'dp' → logprob: -9.017491340637207
    5. ']' → logprob: -11.892491340637207
    6. ' ],' → logprob: -12.392491340637207
    7. ',i' → logprob: -12.517491340637207
    8. ',
' → logprob: -12.767491340637207
    9. ' dp' → logprob: -12.892491340637207
    10. ',min' → logprob: -12.892491340637207

Token 190: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015738124027848244
    2. ' dp' → logprob: -4.265738010406494
    3. 'max' → logprob: -6.890738010406494
    4. 'abs' → logprob: -8.640738487243652
    5. ' max' → logprob: -9.015738487243652
    6. '   ' → logprob: -9.390738487243652
    7. '               ' → logprob: -10.140738487243652
    8. ' ' → logprob: -10.640738487243652
    9. '	dp' → logprob: -10.765738487243652
    10. '                   ' → logprob: -11.015738487243652

Token 191: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006731167086400092
    2. '[x' → logprob: -7.750673294067383
    3. 'i' → logprob: -8.375673294067383
    4. '```' → logprob: -12.375673294067383
    5. 'x' → logprob: -12.625673294067383
    6. '
' → logprob: -13.750673294067383
    7. ' [' → logprob: -13.750673294067383
    8. '[' → logprob: -14.375673294067383
    9. '`' → logprob: -14.875673294067383
    10. '[
' → logprob: -15.000673294067383

Token 192: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008909408934414387
    2. '[y' → logprob: -4.758909225463867
    3. 'y' → logprob: -8.383909225463867
    4. '[x' → logprob: -11.258909225463867
    5. ' ][' → logprob: -11.258909225463867
    6. ']' → logprob: -11.258909225463867
    7. '[' → logprob: -11.758909225463867
    8. '(y' → logprob: -12.133909225463867
    9. ',y' → logprob: -12.883909225463867
    10. ' y' → logprob: -13.133909225463867

Token 193: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.277553620748222e-05
    2. ' y' → logprob: -10.375062942504883
    3. '(y' → logprob: -10.500062942504883
    4. '[y' → logprob: -12.750062942504883
    5. '   ' → logprob: -15.000062942504883
    6. ')y' → logprob: -15.125062942504883
    7. '	y' → logprob: -15.500062942504883
    8. ''y' → logprob: -15.750062942504883
    9. '‘y' → logprob: -17.875062942504883
    10. '][' → logprob: -17.875062942504883

Token 194: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.578184497309849e-05
    2. ' -' → logprob: -9.375085830688477
    3. '1' → logprob: -14.375085830688477
    4. '[' → logprob: -15.625085830688477
    5. '   ' → logprob: -16.500085830688477
    6. '```' → logprob: -16.500085830688477
    7. '-
' → logprob: -16.750085830688477
    8. 'y' → logprob: -17.000085830688477
    9. ' ' → logprob: -17.250085830688477
    10. '−' → logprob: -17.375085830688477

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.625012397766113
    4. '```' → logprob: -16.062511444091797
    5. '2' → logprob: -16.625011444091797
    6. '  ' → logprob: -16.625011444091797
    7. '       ' → logprob: -16.875011444091797
    8. '           ' → logprob: -16.875011444091797
    9. '    ' → logprob: -16.937511444091797
    10. ')' → logprob: -17.312511444091797

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.75001049041748
    3. '   ' → logprob: -14.56251049041748
    4. '
' → logprob: -15.06251049041748
    5. '2' → logprob: -15.68751049041748
    6. '```' → logprob: -15.75001049041748
    7. '11' → logprob: -15.81251049041748
    8. ']' → logprob: -16.000009536743164
    9. ')' → logprob: -16.187509536743164
    10. '0' → logprob: -16.625009536743164

Token 197: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002940144157037139
    2. ']+' → logprob: -5.8779401779174805
    3. '+' → logprob: -9.12794017791748
    4. ' ]' → logprob: -11.12794017791748
    5. ')' → logprob: -12.75294017791748
    6. ' +' → logprob: -13.37794017791748
    7. '[' → logprob: -13.75294017791748
    8. ']
' → logprob: -13.75294017791748
    9. '+]' → logprob: -13.75294017791748
    10. '])' → logprob: -14.37794017791748

Token 198: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18016552925109863
    2. ' +' → logprob: -1.8051655292510986
    3. ')' → logprob: -8.18016529083252
    4. ']' → logprob: -10.30516529083252
    5. ')+' → logprob: -10.30516529083252
    6. ']+' → logprob: -10.93016529083252
    7. ' ' → logprob: -11.18016529083252
    8. '-' → logprob: -11.18016529083252
    9. '+
' → logprob: -12.55516529083252
    10. '
' → logprob: -12.68016529083252

Token 199: ' max' (ID: 2999)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8347133994102478
    2. 'H' → logprob: -0.9597133994102478
    3. 'max' → logprob: -1.9597134590148926
    4. ' abs' → logprob: -3.9597134590148926
    5. ' H' → logprob: -4.584713459014893
    6. ' max' → logprob: -4.834713459014893
    7. '(H' → logprob: -5.834713459014893
    8. '(abs' → logprob: -7.334713459014893
    9. '(max' → logprob: -7.834713459014893
    10. 'x' → logprob: -8.084712982177734

Token 200: '(' (ID: 7)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.04301128908991814
    2. '(' → logprob: -3.16801118850708
    3. '(
' → logprob: -12.543011665344238
    4. '0' → logprob: -12.668011665344238
    5. '(abs' → logprob: -13.043011665344238
    6. ' (' → logprob: -13.668011665344238
    7. '((' → logprob: -13.793011665344238
    8. 'H' → logprob: -14.543011665344238
    9. '(

' → logprob: -15.668011665344238
    10. '(h' → logprob: -16.793010711669922

Token 201: '0' (ID: 15)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.02091226913034916
    2. 'H' → logprob: -4.270912170410156
    3. '(' → logprob: -5.395912170410156
    4. '0' → logprob: -6.145912170410156
    5. ' H' → logprob: -10.395912170410156
    6. ' ' → logprob: -12.270912170410156
    7. ' (' → logprob: -12.520912170410156
    8. '	H' → logprob: -13.395912170410156
    9. '(
' → logprob: -13.895912170410156
    10. '((' → logprob: -13.958412170410156

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03659410774707794
    2. '(H' → logprob: -3.7865941524505615
    3. ',H' → logprob: -4.536593914031982
    4. 'H' → logprob: -6.911593914031982
    5. ' ,' → logprob: -7.411593914031982
    6. '   ' → logprob: -7.411593914031982
    7. ' H' → logprob: -9.16159439086914
    8. '       ' → logprob: -10.53659439086914
    9. '	H' → logprob: -10.53659439086914
    10. ' (' → logprob: -10.66159439086914

Token 203: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.009797761216759682
    2. ' H' → logprob: -4.6347975730896
    3. '   ' → logprob: -10.884798049926758
    4. '(H' → logprob: -11.009798049926758
    5. '	H' → logprob: -13.134798049926758
    6. '           ' → logprob: -13.259798049926758
    7. '       ' → logprob: -14.259798049926758
    8. ' ' → logprob: -14.509798049926758
    9. '  ' → logprob: -14.759798049926758
    10. '    ' → logprob: -15.509798049926758

Token 204: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1041145626222715e-05
    2. 'x' → logprob: -11.500011444091797
    3. '```' → logprob: -15.125011444091797
    4. '[' → logprob: -15.250011444091797
    5. '[i' → logprob: -16.250011444091797
    6. '   ' → logprob: -16.625011444091797
    7. ' [' → logprob: -16.625011444091797
    8. '(x' → logprob: -17.000011444091797
    9. '[
' → logprob: -17.250011444091797
    10. '][' → logprob: -17.500011444091797

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006025138311088085
    2. ']-' → logprob: -5.256025314331055
    3. ' ]' → logprob: -7.506025314331055
    4. '-' → logprob: -9.006025314331055
    5. ' -' → logprob: -9.256025314331055
    6. '[' → logprob: -11.506025314331055
    7. '[i' → logprob: -11.756025314331055
    8. '"]' → logprob: -13.631025314331055
    9. '']' → logprob: -14.631025314331055
    10. ']+' → logprob: -14.756025314331055

Token 206: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3144288957118988
    2. '-' → logprob: -1.3144289255142212
    3. '-H' → logprob: -6.939428806304932
    4. ' ' → logprob: -8.93942928314209
    5. ']' → logprob: -9.93942928314209
    6. '   ' → logprob: -12.56442928314209
    7. ']-' → logprob: -12.81442928314209
    8. ')' → logprob: -12.93942928314209
    9. '[' → logprob: -13.18942928314209
    10. '  ' → logprob: -13.43942928314209

Token 207: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.014177493751049042
    2. ' H' → logprob: -4.264177322387695
    3. ' ' → logprob: -11.514177322387695
    4. '   ' → logprob: -13.139177322387695
    5. '	H' → logprob: -14.514177322387695
    6. ' ' → logprob: -14.764177322387695
    7. '  ' → logprob: -14.889177322387695
    8. ')' → logprob: -14.889177322387695
    9. '```' → logprob: -16.639177322387695
    10. '[' → logprob: -16.701677322387695

Token 208: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9027791495318525e-05
    2. 'i' → logprob: -11.000019073486328
    3. '[' → logprob: -13.375019073486328
    4. '[x' → logprob: -15.875019073486328
    5. ' [' → logprob: -15.875019073486328
    6. '```' → logprob: -16.750019073486328
    7. ' i' → logprob: -17.000019073486328
    8. ']' → logprob: -17.125019073486328
    9. '[s' → logprob: -17.250019073486328
    10. '[I' → logprob: -17.250019073486328

Token 209: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.010390195064246655
    2. '])' → logprob: -4.760390281677246
    3. ')])' → logprob: -7.260390281677246
    4. ']' → logprob: -8.385390281677246
    5. ')]' → logprob: -8.510390281677246
    6. ')' → logprob: -8.510390281677246
    7. '))' → logprob: -8.510390281677246
    8. ')))' → logprob: -9.260390281677246
    9. '])))' → logprob: -9.635390281677246
    10. ']))
' → logprob: -9.885390281677246

Token 210: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03383057191967964
    2. 'for' → logprob: -3.6588306427001953
    3. '   ' → logprob: -5.783830642700195
    4. ' for' → logprob: -6.033830642700195
    5. ' print' → logprob: -6.283830642700195
    6. '
' → logprob: -10.033830642700195
    7. '```' → logprob: -10.283830642700195
    8. 'ans' (adapté à ' ans') → logprob: -10.658830642700195
    9. '    
' → logprob: -11.158830642700195
    10. '#print' → logprob: -11.783830642700195

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021914218086749315
    2. '=' → logprob: -6.127191543579102
    3. ' ' → logprob: -13.127191543579102
    4. ',' → logprob: -13.127191543579102
    5. ' =
' → logprob: -13.752191543579102
    6. ' ' → logprob: -15.002191543579102
    7. ')' → logprob: -15.127191543579102
    8. ' =[' → logprob: -15.127191543579102
    9. '[' → logprob: -16.0021915435791
    10. ' =)' → logprob: -16.5021915435791

Token 213: ' dp' (ID: 21546)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04943719878792763
    2. 'dp' → logprob: -3.5494372844696045
    3. '10' → logprob: -4.049437046051025
    4. ' min' → logprob: -6.424437046051025
    5. 'float' → logprob: -7.924437046051025
    6. ' dp' → logprob: -10.174437522888184
    7. 'max' → logprob: -11.174437522888184
    8. ' ' → logprob: -11.924437522888184
    9. 'int' → logprob: -12.549437522888184
    10. '1' → logprob: -13.174437522888184

Token 214: '[' (ID: 58)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.0002141458389814943
    2. '[-' → logprob: -8.500214576721191
    3. '[max' → logprob: -12.000214576721191
    4. '[' → logprob: -12.625214576721191
    5. '[min' → logprob: -15.125214576721191
    6. '[n' → logprob: -15.625214576721191
    7. '   ' → logprob: -15.750214576721191
    8. ' [' → logprob: -15.750214576721191
    9. 'max' → logprob: -16.000213623046875
    10. 'N' → logprob: -16.125213623046875

Token 215: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.3856492842023727e-06
    2. ' N' → logprob: -14.375000953674316
    3. '   ' → logprob: -14.375000953674316
    4. '-N' → logprob: -17.125001907348633
    5. '[N' → logprob: -17.250001907348633
    6. '-' → logprob: -18.625001907348633
    7. '  ' → logprob: -19.125001907348633
    8. ' ' → logprob: -19.625001907348633
    9. '    ' → logprob: -19.750001907348633
    10. '0' → logprob: -19.875001907348633

Token 216: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014169036876410246
    2. '][-' → logprob: -6.6264166831970215
    3. ']' → logprob: -10.00141716003418
    4. '[N' → logprob: -10.25141716003418
    5. ' ][' → logprob: -12.12641716003418
    6. '[' → logprob: -13.50141716003418
    7. '[-' → logprob: -13.62641716003418
    8. '   ' → logprob: -14.50141716003418
    9. 'N' → logprob: -15.12641716003418
    10. '][_' → logprob: -15.12641716003418

Token 217: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03198440372943878
    2. '-' → logprob: -4.156984329223633
    3. '-N' → logprob: -4.156984329223633
    4. '1' → logprob: -9.656984329223633
    5. ' N' → logprob: -10.531984329223633
    6. '0' → logprob: -10.531984329223633
    7. '-(' → logprob: -10.906984329223633
    8. ' -' → logprob: -11.031984329223633
    9. '(N' → logprob: -11.656984329223633
    10. '(' → logprob: -13.031984329223633

Token 218: ' -' (ID: 533)
  Prédit: '-K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.05541939288377762
    2. ' -' → logprob: -2.930419445037842
    3. '-' → logprob: -7.555419445037842
    4. '+' → logprob: -12.305418968200684
    5. 'K' → logprob: -12.555418968200684
    6. ' ' → logprob: -13.555418968200684
    7. '−' → logprob: -13.805418968200684
    8. '][' → logprob: -14.055418968200684
    9. '-N' → logprob: -14.305418968200684
    10. '-k' → logprob: -14.680418968200684

Token 219: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.5716304410016164e-05
    2. ' K' → logprob: -10.250035285949707
    3. ' ' → logprob: -16.875036239624023
    4. '0' → logprob: -17.000036239624023
    5. '   ' → logprob: -17.250036239624023
    6. 'К' → logprob: -17.375036239624023
    7. '	K' → logprob: -17.750036239624023
    8. '>K' → logprob: -17.875036239624023
    9. '1' → logprob: -18.125036239624023
    10. '  ' → logprob: -18.375036239624023

Token 220: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.052268557250499725
    2. ']' → logprob: -3.0522685050964355
    3. ' +' → logprob: -5.8022685050964355
    4. '1' → logprob: -7.4272685050964355
    5. '+]' → logprob: -10.552268981933594
    6. '])' → logprob: -11.302268981933594
    7. ']+' → logprob: -11.927268981933594
    8. ')' → logprob: -12.677268981933594
    9. ' ]' → logprob: -12.927268981933594
    10. ' ' → logprob: -13.302268981933594

Token 221: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3477621078491211
    2. 'for' → logprob: -1.347762107849121
    3. '
' → logprob: -3.472762107849121
    4. ' for' → logprob: -6.722762107849121
    5. 'ans' → logprob: -6.972762107849121
    6. '+
' → logprob: -8.847762107849121
    7. ' print' → logprob: -9.097762107849121
    8. '+' → logprob: -9.222762107849121
    9. '   ' → logprob: -9.472762107849121
    10. '    
' → logprob: -9.597762107849121

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.000000953674316
    3. ' for' → logprob: -15.250000953674316
    4. 'print' → logprob: -18.0
    5. '
' → logprob: -20.0
    6. '```' → logprob: -20.625
    7. '	for' → logprob: -20.875
    8. '    
' → logprob: -22.5
    9. 'For' → logprob: -24.25
    10. '  ' → logprob: -24.25

Token 223: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16783007979393005
    2. ' x' → logprob: -2.167829990386963
    3. 'i' → logprob: -3.417829990386963
    4. ' i' → logprob: -5.042829990386963
    5. 'j' → logprob: -7.667829990386963
    6. 'k' → logprob: -9.417830467224121
    7. 'a' → logprob: -9.542830467224121
    8. ' j' → logprob: -9.542830467224121
    9. 'v' → logprob: -10.917830467224121
    10. 'y' → logprob: -11.042830467224121

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032154994551092386
    2. 'in' → logprob: -5.753215312957764
    3. 'range' → logprob: -10.253215789794922
    4. ' range' → logprob: -13.753215789794922
    5. ' ' → logprob: -14.378215789794922
    6. 'x' → logprob: -15.128215789794922
    7. '(' → logprob: -15.378215789794922
    8. '1' → logprob: -16.878215789794922
    9. 'd' → logprob: -17.003215789794922
    10. '(range' → logprob: -17.253215789794922

Token 225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750484973192215
    2. ' range' → logprob: -3.5297505855560303
    3. '(range' → logprob: -16.77975082397461
    4. ' ' → logprob: -17.27975082397461
    5. '   ' → logprob: -17.65475082397461
    6. '	range' → logprob: -18.15475082397461
    7. '  ' → logprob: -18.90475082397461
    8. 'r' → logprob: -20.40475082397461
    9. 'rang' → logprob: -20.40475082397461
    10. '[' → logprob: -21.15475082397461

Token 226: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002492779865860939
    2. '(N' → logprob: -6.002492904663086
    3. '1' → logprob: -11.002492904663086
    4. '(K' → logprob: -14.877492904663086
    5. '(n' → logprob: -16.252492904663086
    6. ' (' → logprob: -17.252492904663086
    7. '(
' → logprob: -17.752492904663086
    8. 'N' → logprob: -17.877492904663086
    9. '(len' → logprob: -17.877492904663086
    10. '   ' → logprob: -18.127492904663086

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023339930921792984
    2. 'N' → logprob: -3.7733399868011475
    3. '(N' → logprob: -10.273340225219727
    4. 'K' → logprob: -10.398340225219727
    5. '(' → logprob: -10.648340225219727
    6. '0' → logprob: -13.273340225219727
    7. ' ' → logprob: -13.273340225219727
    8. ' N' → logprob: -13.648340225219727
    9. 'len' → logprob: -14.523340225219727
    10. '   ' → logprob: -15.648340225219727

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005985204596072435
    2. ',N' → logprob: -5.755985260009766
    3. ' ,' → logprob: -6.380985260009766
    4. '(N' → logprob: -6.880985260009766
    5. ' N' → logprob: -10.255985260009766
    6. 'N' → logprob: -10.255985260009766
    7. ',
' → logprob: -12.130985260009766
    8. '(' → logprob: -13.005985260009766
    9. ' (' → logprob: -13.130985260009766
    10. ',n' → logprob: -13.755985260009766

Token 229: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.273621405242011e-05
    2. ' N' → logprob: -10.375032424926758
    3. '(N' → logprob: -13.875032424926758
    4. '   ' → logprob: -14.750032424926758
    5. 'len' → logprob: -15.750032424926758
    6. ' ' → logprob: -17.750032424926758
    7. '	N' → logprob: -18.625032424926758
    8. '  ' → logprob: -18.625032424926758
    9. '(' → logprob: -20.250032424926758
    10. 'n' → logprob: -20.625032424926758

Token 230: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008632414974272251
    2. ' +' → logprob: -4.758632183074951
    3. '-' → logprob: -11.50863265991211
    4. ' -' → logprob: -11.88363265991211
    5. '+
' → logprob: -14.50863265991211
    6. '-N' → logprob: -16.00863265991211
    7. ' ' → logprob: -16.38363265991211
    8. '1' → logprob: -16.50863265991211
    9. '
' → logprob: -16.88363265991211
    10. '   ' → logprob: -17.25863265991211

Token 231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -15.125036239624023
    4. ')' → logprob: -15.375036239624023
    5. '```' → logprob: -15.375036239624023
    6. '  ' → logprob: -17.625036239624023
    7. '１' → logprob: -18.000036239624023
    8. '):
' → logprob: -18.125036239624023
    9. '
' → logprob: -18.625036239624023
    10. '۱' → logprob: -18.937536239624023

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.500009536743164
    4. '１' → logprob: -19.250009536743164
    5. '```' → logprob: -19.312509536743164
    6. '0' → logprob: -19.625009536743164
    7. ')' → logprob: -19.750009536743164
    8. '2' → logprob: -20.000009536743164
    9. '۱' → logprob: -20.000009536743164
    10. '  ' → logprob: -20.500009536743164

Token 233: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6067108511924744
    2. ':' → logprob: -1.1067109107971191
    3. '):' → logprob: -2.231710910797119
    4. ':
' → logprob: -4.106710910797119
    5. '):
' → logprob: -8.981710433959961
    6. '():
' → logprob: -9.106710433959961
    7. '   ' → logprob: -9.481710433959961
    8. ']:
' → logprob: -10.731710433959961
    9. '}:' → logprob: -10.856710433959961
    10. ']:' → logprob: -10.981710433959961

Token 234: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020675718784332275
    2. ' ans' → logprob: -4.3956756591796875
    3. ' if' → logprob: -4.8956756591796875
    4. '	ans' → logprob: -8.395675659179688
    5. '<|end|>' → logprob: -8.520675659179688
    6. '(ans' → logprob: -9.520675659179688
    7. '       ' → logprob: -9.895675659179688
    8. '```' → logprob: -10.270675659179688
    9. 'ans' → logprob: -10.645675659179688
    10. '<|end|>' → logprob: -11.145675659179688

Token 235: ' ans' (ID: 3345)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5056390166282654
    2. '   ' → logprob: -1.6306390762329102
    3. ' ans' → logprob: -1.6306390762329102
    4. 'ans' (adapté à ' ans') → logprob: -5.75563907623291
    5. '	ans' → logprob: -6.63063907623291
    6. 'if' → logprob: -8.00563907623291
    7. '       ' → logprob: -9.00563907623291
    8. '(ans' → logprob: -9.25563907623291
    9. '<|end|>' → logprob: -9.38063907623291
    10. '```' → logprob: -10.50563907623291

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31341123580932617
    2. '=' → logprob: -1.3134112358093262
    3. '=min' → logprob: -8.813411712646484
    4. '=max' → logprob: -15.063411712646484
    5. 'min' → logprob: -15.438411712646484
    6. '=
' → logprob: -17.313411712646484
    7. '=

' → logprob: -17.563411712646484
    8. '.=' → logprob: -17.688411712646484
    9. '>' → logprob: -17.688411712646484
    10. ' min' → logprob: -18.063411712646484

Token 237: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.47407716512680054
    2. ' min' → logprob: -0.9740771651268005
    3. 'max' → logprob: -16.724077224731445
    4. '(min' → logprob: -17.724077224731445
    5. '	min' → logprob: -17.849077224731445
    6. '[min' → logprob: -18.849077224731445
    7. ' max' → logprob: -18.974077224731445
    8. '=min' → logprob: -19.849077224731445
    9. '_min' → logprob: -20.099077224731445
    10. '   ' → logprob: -20.474077224731445

Token 238: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00021140782337170094
    2. '(dp' → logprob: -8.500211715698242
    3. '(' → logprob: -11.750211715698242
    4. 'ans' → logprob: -17.750211715698242
    5. '(answer' → logprob: -18.500211715698242
    6. '	ans' → logprob: -19.500211715698242
    7. '(an' → logprob: -20.250211715698242
    8. '(err' → logprob: -20.625211715698242
    9. '(
' → logprob: -20.750211715698242
    10. '(min' → logprob: -20.875211715698242

Token 239: ',' (ID: 11)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.001261663855984807
    2. ',' → logprob: -6.7512617111206055
    3. '(ans' → logprob: -9.626261711120605
    4. '(' → logprob: -10.626261711120605
    5. ' dp' → logprob: -14.876261711120605
    6. 'dp' → logprob: -15.001261711120605
    7. ' ,' → logprob: -15.876261711120605
    8. '	dp' → logprob: -16.12626075744629
    9. ')' → logprob: -16.25126075744629
    10. ' (' → logprob: -16.37626075744629

Token 240: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018150296062231064
    2. ' dp' → logprob: -4.018150329589844
    3. '	dp' → logprob: -14.893150329589844
    4. '(dp' → logprob: -16.643150329589844
    5. '_dp' → logprob: -18.518150329589844
    6. '   ' → logprob: -18.768150329589844
    7. '.dp' → logprob: -19.143150329589844
    8. '       ' → logprob: -20.143150329589844
    9. '
' → logprob: -20.143150329589844
    10. ' ' → logprob: -20.518150329589844

Token 241: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004384174826554954
    2. 'i' → logprob: -7.750438213348389
    3. '[' → logprob: -12.000438690185547
    4. '[
' → logprob: -14.125438690185547
    5. '(i' → logprob: -14.750438690185547
    6. '```' → logprob: -15.375438690185547
    7. ' i' → logprob: -15.500438690185547
    8. '[I' → logprob: -16.750438690185547
    9. '[N' → logprob: -17.500438690185547
    10. '<|end|>' → logprob: -17.875438690185547

Token 242: '][' (ID: 2696)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.25295451283454895
    2. '][' → logprob: -1.5029544830322266
    3. ')[' → logprob: -7.377954483032227
    4. '}[' → logprob: -9.002954483032227
    5. ' [' → logprob: -9.252954483032227
    6. '[' → logprob: -9.752954483032227
    7. ',' → logprob: -10.627954483032227
    8. '>[' → logprob: -10.752954483032227
    9. '   ' → logprob: -11.127954483032227
    10. ' ][' → logprob: -11.252954483032227

Token 243: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.6656825866666622e-05
    2. ' N' → logprob: -10.62502670288086
    3. '[N' → logprob: -13.50002670288086
    4. ' ' → logprob: -15.00002670288086
    5. '(N' → logprob: -15.25002670288086
    6. '   ' → logprob: -15.87502670288086
    7. ',N' → logprob: -16.87502670288086
    8. '	N' → logprob: -16.87502670288086
    9. '
' → logprob: -17.50002670288086
    10. '-N' → logprob: -17.75002670288086

Token 244: ' -' (ID: 533)
  Prédit: '-K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.016333820298314095
    2. ' -' → logprob: -4.266334056854248
    3. '-' → logprob: -6.141334056854248
    4. '-К' → logprob: -12.01633358001709
    5. ' ' → logprob: -12.76633358001709
    6. 'K' → logprob: -12.76633358001709
    7. '<K' → logprob: -14.76633358001709
    8. '
' → logprob: -14.89133358001709
    9. '−' → logprob: -14.95383358001709
    10. '```' → logprob: -15.14133358001709

Token 245: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0002266622323077172
    2. ' K' → logprob: -8.500226974487305
    3. ' ' → logprob: -12.000226974487305
    4. '1' → logprob: -12.250226974487305
    5. '-K' → logprob: -12.250226974487305
    6. '   ' → logprob: -13.000226974487305
    7. '```' → logprob: -14.500226974487305
    8. '-' → logprob: -14.625226974487305
    9. '>K' → logprob: -14.750226974487305
    10. '
' → logprob: -14.750226974487305

Token 246: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005945033393800259
    2. '])
' → logprob: -5.130945205688477
    3. '])

' → logprob: -12.380945205688477
    4. ' ])' → logprob: -12.505945205688477
    5. '])
' → logprob: -12.630945205688477
    6. ')' → logprob: -12.755945205688477
    7. ']' → logprob: -14.630945205688477
    8. ')])' → logprob: -14.880945205688477
    9. ')]' → logprob: -15.005945205688477
    10. '))' → logprob: -15.130945205688477

Token 247: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007382170297205448
    2. '   ' → logprob: -5.007382392883301
    3. '
' → logprob: -7.882382392883301
    4. ' print' → logprob: -8.6323823928833
    5. '```' → logprob: -9.2573823928833
    6. '	print' → logprob: -11.7573823928833
    7. '    
' → logprob: -12.0073823928833
    8. '``' → logprob: -14.7573823928833
    9. '  
' → logprob: -15.1323823928833
    10. '(print' → logprob: -15.2573823928833

Token 248: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0018436823738738894
    2. '   ' → logprob: -6.501843452453613
    3. ' print' → logprob: -8.001843452453613
    4. '```' → logprob: -12.376843452453613
    5. '	print' → logprob: -13.626843452453613
    6. '
' → logprob: -13.876843452453613
    7. '    
' → logprob: -17.00184440612793
    8. '``' → logprob: -17.25184440612793
    9. ' ' → logprob: -17.50184440612793
    10. '#print' → logprob: -17.62684440612793

Token 249: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.006867044605314732
    2. '(' → logprob: -5.006866931915283
    3. '()' → logprob: -8.881867408752441
    4. ' (' → logprob: -11.381867408752441
    5. '(answer' → logprob: -14.881867408752441
    6. '(`' → logprob: -15.506867408752441
    7. '(
' → logprob: -15.756867408752441
    8. '(an' → logprob: -16.006866455078125
    9. '(abs' → logprob: -16.381866455078125
    10. '('' → logprob: -16.881866455078125

Token 250: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ' )' → logprob: -12.125008583068848
    3. ')
' → logprob: -12.750008583068848
    4. '())' → logprob: -15.375008583068848
    5. '()' → logprob: -16.750009536743164
    6. ')`' → logprob: -17.000009536743164
    7. '))' → logprob: -17.125009536743164
    8. ')#' → logprob: -17.375009536743164
    9. '`)' → logprob: -17.500009536743164
    10. '```' → logprob: -17.625009536743164

Token 251: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06197395175695419
    2. '__' → logprob: -2.811974048614502
    3. ' ' → logprob: -13.186973571777344
    4. '_name' → logprob: -13.561973571777344
    5. 'name' → logprob: -13.686973571777344
    6. '_' → logprob: -13.686973571777344
    7. '___' → logprob: -14.561973571777344
    8. ' ' → logprob: -15.686973571777344
    9. ' _' → logprob: -16.561973571777344
    10. ' ' → logprob: -16.686973571777344

Token 253: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02724236436188221
    2. ' __' → logprob: -4.402242183685303
    3. ' ==' → logprob: -4.402242183685303
    4. '==' → logprob: -6.152242183685303
    5. '.__' → logprob: -9.527242660522461
    6. 'name' → logprob: -9.777242660522461
    7. '__.__' → logprob: -11.027242660522461
    8. '=="' → logprob: -11.152242660522461
    9. '_name' → logprob: -11.402242660522461
    10. '_' → logprob: -11.527242660522461

Token 254: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.4987974029500037e-05
    2. '==' → logprob: -10.625024795532227
    3. ' ==' → logprob: -15.250024795532227
    4. '__.__' → logprob: -16.125024795532227
    5. '_' → logprob: -16.250024795532227
    6. '___' → logprob: -16.750024795532227
    7. '____' → logprob: -17.125024795532227
    8. ' __' → logprob: -17.750024795532227
    9. '__
' → logprob: -17.875024795532227
    10. '__.' → logprob: -17.875024795532227

Token 255: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10706692188978195
    2. '==' → logprob: -2.6070668697357178
    3. '__' → logprob: -3.6070668697357178
    4. '=="' → logprob: -7.482067108154297
    5. '_' → logprob: -9.982067108154297
    6. '=='' → logprob: -11.232067108154297
    7. '=' → logprob: -11.357067108154297
    8. ' =="' → logprob: -12.232067108154297
    9. ' =' → logprob: -12.357067108154297
    10. ' ' → logprob: -12.607067108154297

Token 256: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02996465191245079
    2. ''' → logprob: -3.5299646854400635
    3. ' "__' → logprob: -8.779964447021484
    4. '__' → logprob: -9.779964447021484
    5. ' '__' → logprob: -12.654964447021484
    6. ' "' → logprob: -16.029964447021484
    7. '"user' → logprob: -16.154964447021484
    8. '"name' → logprob: -17.279964447021484
    9. '"_' → logprob: -17.404964447021484
    10. ''"' → logprob: -17.529964447021484

Token 257: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01886916533112526
    2. '__' → logprob: -4.018869400024414
    3. 'name' → logprob: -7.268869400024414
    4. '__':
' → logprob: -11.643869400024414
    5. '_main' → logprob: -12.393869400024414
    6. '__
' → logprob: -13.143869400024414
    7. 'm' → logprob: -13.518869400024414
    8. '"' → logprob: -13.893869400024414
    9. ''' → logprob: -13.893869400024414
    10. '   ' → logprob: -14.268869400024414

Token 258: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.006723302416503429
    2. '__' → logprob: -5.006723403930664
    3. '__":
' → logprob: -11.881723403930664
    4. '__:' → logprob: -14.006723403930664
    5. '()' → logprob: -16.381723403930664
    6. '():
' → logprob: -16.756723403930664
    7. '__.' → logprob: -17.131723403930664
    8. '_' → logprob: -17.506723403930664
    9. '':' → logprob: -18.381723403930664
    10. '__('' → logprob: -18.506723403930664

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3039070963859558
    2. ' main' → logprob: -1.6789071559906006
    3. 'main' → logprob: -2.6789071559906006
    4. '	main' → logprob: -5.1789069175720215
    5. '    
' → logprob: -7.3039069175720215
    6. '(main' → logprob: -8.42890739440918
    7. '_main' → logprob: -8.80390739440918
    8. '<|end|>' → logprob: -10.05390739440918
    9. ' 
' → logprob: -10.67890739440918
    10. '
' → logprob: -10.67890739440918

Token 260: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.014164329506456852
    2. ' main' → logprob: -4.264164447784424
    3. '	main' → logprob: -14.014163970947266
    4. '_main' → logprob: -17.014163970947266
    5. '   ' → logprob: -18.014163970947266
    6. '.main' → logprob: -19.264163970947266
    7. '(main' → logprob: -19.389163970947266
    8. ' ' → logprob: -19.514163970947266
    9. 'Main' → logprob: -19.889163970947266
    10. ' ' → logprob: -20.514163970947266

Token 261: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5757769346237183
    2. '
' → logprob: -1.5757769346237183
    3. '(' → logprob: -1.9507769346237183
    4. '\n' → logprob: -3.200777053833008
    5. '<|end|>' → logprob: -3.450777053833008
    6. ')' → logprob: -5.325777053833008
    7. '(
' → logprob: -5.450777053833008
    8. '```' → logprob: -5.950777053833008
    9. '()
' → logprob: -6.075777053833008
    10. '#' → logprob: -7.450777053833008


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 259
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 114
Tokens correctement prédits (top 10): 238
Précision stricte (1ère position): 41.31%
Précision adaptée (1ère position): 44.02%
Précision (top 10): 91.89%
================================================================================
