================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
k_x = input().split()
K = int(k_x[0])
X = int(k_x[1])

if 500 * K >= X:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'k' (ID: 74)
  → Token d'amorce (pas de prédiction)

Token 1: '_x' (ID: 7054)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5393255949020386
    2. '1' → logprob: -1.6643255949020386
    3. ' ' → logprob: -1.6643255949020386
    4. '[' → logprob: -4.914325714111328
    5. 'x' → logprob: -4.914325714111328
    6. '2' → logprob: -5.289325714111328
    7. ' x' → logprob: -5.789325714111328
    8. '"' → logprob: -6.289325714111328
    9. '_' → logprob: -6.539325714111328
    10. '3' → logprob: -6.789325714111328

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012122140266001225
    2. ''' → logprob: -5.01212215423584
    3. '[' → logprob: -6.26212215423584
    4. '"' → logprob: -6.51212215423584
    5. '.' → logprob: -7.38712215423584
    6. '_' → logprob: -7.76212215423584
    7. '('' → logprob: -7.88712215423584
    8. '("("' → logprob: -9.01212215423584
    9. '(
' → logprob: -9.13712215423584
    10. '```' → logprob: -9.63712215423584

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31734487414360046
    2. '()' → logprob: -3.192344903945923
    3. '.strip' → logprob: -3.192344903945923
    4. '(' → logprob: -3.317344903945923
    5. '+' → logprob: -3.442344903945923
    6. '```' → logprob: -3.567344903945923
    7. '[' → logprob: -4.067344665527344
    8. '_' → logprob: -4.192344665527344
    9. ')' → logprob: -4.317344665527344
    10. '.lower' → logprob: -5.067344665527344

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0047222767025232315
    2. '()' → logprob: -5.3797221183776855
    3. '(
' → logprob: -10.504722595214844
    4. '("("' → logprob: -11.004722595214844
    5. '('' → logprob: -11.254722595214844
    6. '(

' → logprob: -11.379722595214844
    7. '```' → logprob: -11.754722595214844
    8. '((' → logprob: -12.379722595214844
    9. '(`' → logprob: -12.629722595214844
    10. '"' → logprob: -12.629722595214844

Token 7: 'K' (ID: 42)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3166935443878174
    2. 'k' → logprob: -2.1916935443878174
    3. '=' → logprob: -2.8166935443878174
    4. '[k' → logprob: -3.3166935443878174
    5. '_k' → logprob: -4.066693305969238
    6. 'x' → logprob: -4.566693305969238
    7. '_' → logprob: -5.191693305969238
    8. '#' → logprob: -5.316693305969238
    9. ' =' → logprob: -5.316693305969238
    10. '[:]' → logprob: -5.316693305969238

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4950399100780487
    2. '[' → logprob: -0.9950399398803711
    3. '_x' → logprob: -4.245039939880371
    4. '[:]' → logprob: -6.745039939880371
    5. '[k' → logprob: -7.495039939880371
    6. '[]' → logprob: -7.620039939880371
    7. '_[' → logprob: -7.620039939880371
    8. '[_' → logprob: -7.995039939880371
    9. '.' → logprob: -7.995039939880371
    10. ')' → logprob: -8.120039939880371

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6004067063331604
    2. '[int' → logprob: -1.3504066467285156
    3. 'list' → logprob: -2.2254066467285156
    4. '[k' → logprob: -3.4754066467285156
    5. 'k' → logprob: -3.8504066467285156
    6. ' int' → logprob: -4.225406646728516
    7. ' list' → logprob: -4.975406646728516
    8. ' k' → logprob: -4.975406646728516
    9. ' [' → logprob: -6.600406646728516
    10. '[' → logprob: -6.850406646728516

Token 10: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3880627751350403
    2. '(k' → logprob: -1.1380627155303955
    3. '('' → logprob: -7.013062953948975
    4. '("("' → logprob: -9.013062477111816
    5. '(K' → logprob: -9.263062477111816
    6. '("' → logprob: -10.763062477111816
    7. 'K' → logprob: -11.138062477111816
    8. 'k' → logprob: -11.763062477111816
    9. ''' → logprob: -12.138062477111816
    10. '(
' → logprob: -12.513062477111816

Token 11: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -9.591415437171236e-05
    2. '_' → logprob: -9.500096321105957
    3. 'x' → logprob: -12.625096321105957
    4. ')_' → logprob: -12.625096321105957
    5. '_)' → logprob: -12.625096321105957
    6. ' _' → logprob: -13.000096321105957
    7. ')' → logprob: -13.125096321105957
    8. '_k' → logprob: -13.375096321105957
    9. '[_' → logprob: -13.875096321105957
    10. ''_' → logprob: -14.000096321105957

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002523992152418941
    2. '[k' → logprob: -8.500252723693848
    3. ')' → logprob: -10.000252723693848
    4. '[len' → logprob: -14.000252723693848
    5. '[K' → logprob: -14.000252723693848
    6. '[
' → logprob: -14.375252723693848
    7. '[-' → logprob: -14.875252723693848
    8. '[])' → logprob: -15.375252723693848
    9. '\[' → logprob: -15.625252723693848
    10. '[x' → logprob: -15.625252723693848

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.662937372922897e-05
    2. '1' → logprob: -9.250096321105957
    3. ' ' → logprob: -14.875096321105957
    4. ''' → logprob: -17.375097274780273
    5. '-' → logprob: -17.625097274780273
    6. ')' → logprob: -18.187597274780273
    7. '2' → logprob: -18.250097274780273
    8. '```' → logprob: -18.812597274780273
    9. '])' → logprob: -18.875097274780273
    10. '۰' → logprob: -18.937597274780273

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0705738291144371
    2. ')' → logprob: -2.6955738067626953
    3. ')])' → logprob: -8.320573806762695
    4. ')]' → logprob: -8.570573806762695
    5. ']' → logprob: -8.695573806762695
    6. ''])' → logprob: -11.570573806762695
    7. ' ])' → logprob: -11.695573806762695
    8. '))' → logprob: -12.195573806762695
    9. '])
' → logprob: -12.695573806762695
    10. '])]' → logprob: -13.195573806762695

Token 15: 'X' (ID: 55)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33762896060943604
    2. 'X' → logprob: -1.337628960609436
    3. 'k' → logprob: -3.8376288414001465
    4. 'N' → logprob: -7.2126288414001465
    5. 'L' → logprob: -7.3376288414001465
    6. 'K' → logprob: -8.462629318237305
    7. 'M' → logprob: -8.587629318237305
    8. 'n' → logprob: -8.962629318237305
    9. 'D' → logprob: -9.087629318237305
    10. '```' → logprob: -9.462629318237305

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4272553026676178
    2. '=' → logprob: -1.9272552728652954
    3. '<|end|>' → logprob: -2.427255392074585
    4. ')' → logprob: -2.927255392074585
    5. ' ' → logprob: -3.052255392074585
    6. '_' → logprob: -5.677255153656006
    7. '<|end|>' → logprob: -5.677255153656006
    8. '  ' → logprob: -7.052255153656006
    9. ''' → logprob: -7.052255153656006
    10. '[' → logprob: -7.177255153656006

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31340286135673523
    2. 'int' → logprob: -1.3134028911590576
    3. ' k' → logprob: -9.063403129577637
    4. ' ' → logprob: -11.188403129577637
    5. 'k' → logprob: -12.438403129577637
    6. '(int' → logprob: -13.188403129577637
    7. '=int' → logprob: -13.438403129577637
    8. ' K' → logprob: -13.688403129577637
    9. '<int' → logprob: -13.938403129577637
    10. ' ' → logprob: -14.063403129577637

Token 18: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05509261414408684
    2. '(k' → logprob: -2.9300925731658936
    3. '()' → logprob: -9.180092811584473
    4. '('' → logprob: -10.305092811584473
    5. ' (' → logprob: -10.555092811584473
    6. '(K' → logprob: -11.430092811584473
    7. '(

' → logprob: -11.805092811584473
    8. '(x' → logprob: -12.055092811584473
    9. '(
' → logprob: -12.305092811584473
    10. '(X' → logprob: -13.180092811584473

Token 19: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.2948405128554441e-05
    2. '_' → logprob: -11.50001335144043
    3. '[' → logprob: -13.75001335144043
    4. 'x' → logprob: -14.75001335144043
    5. ' _' → logprob: -15.00001335144043
    6. ')' → logprob: -15.62501335144043
    7. '_X' → logprob: -15.62501335144043
    8. '_)' → logprob: -15.62501335144043
    9. '_user' → logprob: -16.25001335144043
    10. '_[' → logprob: -16.62501335144043

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.125000953674316
    3. ')' → logprob: -17.0
    4. '```' → logprob: -17.125
    5. ')[' → logprob: -17.25
    6. '][' → logprob: -17.875
    7. '[
' → logprob: -18.0
    8. '\[' → logprob: -18.375
    9. '1' → logprob: -18.75
    10. '	' → logprob: -19.25

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -15.625000953674316
    4. '```' → logprob: -16.500001907348633
    5. '])' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.937501907348633
    7. '2' → logprob: -17.062501907348633
    8. ')' → logprob: -17.125001907348633
    9. ']' → logprob: -17.250001907348633
    10. '１' → logprob: -17.562501907348633

Token 22: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019914438016712666
    2. '])' → logprob: -6.251991271972656
    3. '))' → logprob: -10.501991271972656
    4. ')])' → logprob: -11.126991271972656
    5. '）' → logprob: -12.376991271972656
    6. ')>' → logprob: -12.626991271972656
    7. '>)' → logprob: -12.751991271972656
    8. ']' → logprob: -13.126991271972656
    9. ''])' → logprob: -13.126991271972656
    10. ')]' → logprob: -13.126991271972656

Token 23: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2456953227519989
    2. 'if' → logprob: -1.6206953525543213
    3. 'print' → logprob: -4.745695114135742
    4. 'i' → logprob: -5.120695114135742
    5. ' for' → logprob: -5.995695114135742
    6. '```' → logprob: -6.620695114135742
    7. 'n' → logprob: -7.370695114135742
    8. ' if' → logprob: -8.370695114135742
    9. 'while' → logprob: -8.495695114135742
    10. 'f' → logprob: -9.620695114135742

Token 24: ' ' (ID: 220)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.281652569770813
    2. ' X' → logprob: -1.656652569770813
    3. 'X' → logprob: -3.5316524505615234
    4. 'K' → logprob: -3.7816524505615234
    5. ' ' → logprob: -6.031652450561523
    6. ' abs' → logprob: -9.406652450561523
    7. ' ' → logprob: -9.906652450561523
    8. 'abs' → logprob: -10.281652450561523
    9. ' (' → logprob: -10.906652450561523
    10. '   ' → logprob: -11.656652450561523

Token 25: '500' (ID: 3234)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.38851842284202576
    2. 'K' → logprob: -1.1385184526443481
    3. ' K' → logprob: -7.388518333435059
    4. ' X' → logprob: -7.388518333435059
    5. 'abs' → logprob: -8.513518333435059
    6. 'k' → logprob: -9.138518333435059
    7. 'x' → logprob: -10.138518333435059
    8. '(X' → logprob: -10.888518333435059
    9. '(K' → logprob: -12.138518333435059
    10. ' ' → logprob: -12.138518333435059

Token 26: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0164144039154053
    2. ' >=' → logprob: -1.7664144039154053
    3. '0' → logprob: -1.8914144039154053
    4. '<=' → logprob: -1.8914144039154053
    5. '>=' → logprob: -2.2664144039154053
    6. '*' → logprob: -3.8914144039154053
    7. ' <' → logprob: -4.641414642333984
    8. '00' → logprob: -4.891414642333984
    9. '>' → logprob: -5.141414642333984
    10. ' *' → logprob: -5.141414642333984

Token 27: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0004947714623995125
    2. ' K' → logprob: -7.625494956970215
    3. 'X' → logprob: -12.750494956970215
    4. 'k' → logprob: -13.500494956970215
    5. '(K' → logprob: -14.750494956970215
    6. '<=' → logprob: -14.875494956970215
    7. '*K' → logprob: -14.875494956970215
    8. ' ' → logprob: -15.125494956970215
    9. '>K' → logprob: -15.375494956970215
    10. '0' → logprob: -15.625494956970215

Token 28: ' >=' (ID: 5064)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4794224500656128
    2. '>=' → logprob: -1.7294224500656128
    3. ' <=' → logprob: -1.9794224500656128
    4. ' >=' → logprob: -2.9794225692749023
    5. '<' → logprob: -4.729422569274902
    6. '>' → logprob: -5.479422569274902
    7. ' >' → logprob: -7.104422569274902
    8. ' <' → logprob: -7.479422569274902
    9. ' ' → logprob: -9.354422569274902
    10. '==' → logprob: -11.979422569274902

Token 29: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.029754308983683586
    2. ' X' → logprob: -3.529754400253296
    3. ' ' → logprob: -13.029754638671875
    4. '100' → logprob: -14.654754638671875
    5. '>X' → logprob: -14.654754638671875
    6. '	X' → logprob: -14.904754638671875
    7. 'x' → logprob: -16.154754638671875
    8. '500' → logprob: -16.154754638671875
    9. '  ' → logprob: -16.654754638671875
    10. '   ' → logprob: -16.904754638671875

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000712670327629894
    2. ' :' → logprob: -7.250712871551514
    3. ':
' → logprob: -13.375712394714355
    4. ':**' → logprob: -14.250712394714355
    5. '):' → logprob: -15.750712394714355
    6. '>:' → logprob: -16.375713348388672
    7. ' and' → logprob: -17.500713348388672
    8. '：' → logprob: -17.500713348388672
    9. '+:' → logprob: -17.500713348388672
    10. ',' → logprob: -17.500713348388672

Token 31: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03919611871242523
    2. ' print' → logprob: -3.289196014404297
    3. '   ' → logprob: -6.789196014404297
    4. ':' → logprob: -12.039196014404297
    5. ' ' → logprob: -12.039196014404297
    6. '	print' → logprob: -12.289196014404297
    7. '    ' → logprob: -12.539196014404297
    8. '```' → logprob: -12.914196014404297
    9. '`' → logprob: -13.539196014404297
    10. '"' → logprob: -14.414196014404297

Token 32: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.061988186091184616
    2. ' print' → logprob: -2.811988115310669
    3. '   ' → logprob: -11.43698787689209
    4. 'pr' → logprob: -12.43698787689209
    5. '    ' → logprob: -13.18698787689209
    6. ' ' → logprob: -13.56198787689209
    7. ' prin' → logprob: -13.81198787689209
    8. 'prin' → logprob: -14.31198787689209
    9. '`' → logprob: -15.56198787689209
    10. '	print' → logprob: -15.56198787689209

Token 33: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35396286845207214
    2. '("' → logprob: -1.2289628982543945
    3. '('' → logprob: -5.4789628982543945
    4. '(K' → logprob: -7.3539628982543945
    5. '("("' → logprob: -7.8539628982543945
    6. '(k' → logprob: -9.478962898254395
    7. '()' → logprob: -9.728962898254395
    8. '("")' → logprob: -10.103962898254395
    9. '(":' → logprob: -10.603962898254395
    10. '(X' → logprob: -10.603962898254395

Token 34: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.006739169359207153
    2. '"' → logprob: -5.506739139556885
    3. 'YES' → logprob: -6.381739139556885
    4. 'Hello' → logprob: -8.256739616394043
    5. ' Yes' → logprob: -8.756739616394043
    6. 'Y' → logprob: -9.131739616394043
    7. '200' → logprob: -9.506739616394043
    8. 'Safe' → logprob: -10.256739616394043
    9. 'OK' → logprob: -10.756739616394043
    10. '_yes' → logprob: -10.881739616394043

Token 35: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0004413975402712822
    2. ')' → logprob: -7.750441551208496
    3. ')")' → logprob: -11.500441551208496
    4. '")
' → logprob: -14.750441551208496
    5. '”)' → logprob: -16.62544059753418
    6. '!")' → logprob: -17.12544059753418
    7. ' ")' → logprob: -17.25044059753418
    8. '"' → logprob: -17.75044059753418
    9. '')' → logprob: -17.87544059753418
    10. '»)' → logprob: -18.12544059753418

Token 36: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.014175849966704845
    2. ' else' → logprob: -4.264175891876221
    3. '<|end|>' → logprob: -11.889175415039062
    4. '	else' → logprob: -13.389175415039062
    5. '_else' → logprob: -13.889175415039062
    6. 'e' → logprob: -14.389175415039062
    7. '#else' → logprob: -15.014175415039062
    8. '```' → logprob: -15.139175415039062
    9. 'elser' → logprob: -15.264175415039062
    10. ' ' → logprob: -15.389175415039062

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001347615267150104
    2. ':
' → logprob: -6.626347541809082
    3. ' :' → logprob: -11.001347541809082
    4. '   ' → logprob: -12.751347541809082
    5. ' :
' → logprob: -13.251347541809082
    6. '):' → logprob: -16.3763484954834
    7. ':
' → logprob: -16.5013484954834
    8. '():' → logprob: -17.1263484954834
    9. ':

' → logprob: -17.5013484954834
    10. '：' → logprob: -17.7513484954834

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021360935643315315
    2. ' print' → logprob: -4.146360874176025
    3. 'print' → logprob: -5.271360874176025
    4. '    ' → logprob: -9.021361351013184
    5. ' ' → logprob: -10.646361351013184
    6. '  ' → logprob: -11.896361351013184
    7. '       ' → logprob: -12.271361351013184
    8. '	print' → logprob: -12.271361351013184
    9. '```' → logprob: -12.396361351013184
    10. ' ' → logprob: -12.896361351013184

Token 39: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2014775574207306
    2. ' print' → logprob: -1.7014775276184082
    3. '   ' → logprob: -9.701478004455566
    4. '.print' → logprob: -13.826478004455566
    5. '	print' → logprob: -13.951478004455566
    6. '(print' → logprob: -14.076478004455566
    7. '    ' → logprob: -14.826478004455566
    8. ' ' → logprob: -16.82647705078125
    9. 'pr' → logprob: -17.70147705078125
    10. 'Print' → logprob: -17.70147705078125

Token 40: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0019305398454889655
    2. '(' → logprob: -6.2519307136535645
    3. '("")' → logprob: -14.001930236816406
    4. '()' → logprob: -14.501930236816406
    5. '('' → logprob: -15.126930236816406
    6. '("("' → logprob: -16.501930236816406
    7. '(
' → logprob: -16.876930236816406
    8. '("""' → logprob: -17.126930236816406
    9. '(("' → logprob: -17.501930236816406
    10. '(""' → logprob: -17.751930236816406

Token 41: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.02325037121772766
    2. '"No' → logprob: -3.7732503414154053
    3. '"' → logprob: -12.523250579833984
    4. 'N' → logprob: -14.148250579833984
    5. '"N' → logprob: -14.898250579833984
    6. '“No' → logprob: -15.898250579833984
    7. ' No' → logprob: -16.398250579833984
    8. '")' → logprob: -16.523250579833984
    9. '>No' → logprob: -18.148250579833984
    10. '(No' → logprob: -18.148250579833984

Token 42: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.8550976164988242e-05
    2. ')' → logprob: -11.000018119812012
    3. ')")' → logprob: -13.625018119812012
    4. '")
' → logprob: -14.500018119812012
    5. '"' → logprob: -17.375019073486328
    6. '\")' → logprob: -18.875019073486328
    7. '')' → logprob: -19.000019073486328
    8. '")

' → logprob: -19.000019073486328
    9. '”)' → logprob: -19.125019073486328
    10. '}")' → logprob: -19.125019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 40
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 35.00%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 80.00%
================================================================================
