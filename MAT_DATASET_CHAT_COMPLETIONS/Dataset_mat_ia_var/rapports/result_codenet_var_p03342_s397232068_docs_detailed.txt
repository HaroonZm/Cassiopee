================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import queue
import math
import copy
import itertools
from fractions import gcd

# Augmente la limite de récursion pour permettre les appels récursifs profonds
sys.setrecursionlimit(10**7)

# Définit une valeur représentant l'infini pour le problème
INF = 10**18

# Définit la constante du modulo si besoin d'opérations sous un large modulo
MOD = 10**9 + 7

# Fonction utilitaire pour lire une ligne d'entiers depuis l'entrée standard
LI = lambda: [int(x) for x in sys.stdin.readline().split()]

# Fonction utilitaire pour lire une ligne d'entiers et décrémenter chacun de 1 depuis l'entrée standard
_LI = lambda: [int(x) - 1 for x in sys.stdin.readline().split()]

def main():
    """
    Fonction principale qui lit les entrées, traite le problème et affiche la solution.

    Le problème : Compter le nombre de sous-tableaux dans un tableau où le XOR de tous les éléments dans la fenêtre
    est unique (aucun bits partagés). Cela s'effectue grâce à une approche à deux pointeurs (sliding window).
    """

    # Lecture de la taille du tableau
    N = int(input())

    # Lecture du tableau d'entrée suivi d'un ajout d'une valeur sentinelle (-1) pour éviter les dépassements d'indice
    A = LI() + [-1]

    # Initialise le total des sous-tableaux valides
    ans = 0

    # Initialise les deux pointeurs et le XOR cumulatif de la fenêtre courante
    l = 0  # bord gauche de la fenêtre
    r = 0  # bord droit de la fenêtre
    xor = 0  # XOR cumulatif des éléments entre l et r
    s = 0  # stockage temporaire utilisé lors de la réduction de la fenêtre

    # Balaye le tableau avec deux pointeurs pour maintenir la propriété du XOR unique
    while r < N:
        if xor & A[r] == 0:
            # Si l'ajout de A[r] ne partage aucun bit avec le XOR courant (aucune superposition), on étend la fenêtre
            xor ^= A[r]
            r += 1
            # On ajoute le nombre de sous-tableaux se terminant en r-1 et commençant entre l et r-1
            ans += (r - l)
        else:
            # S'il y a partage de bits, il faut réduire la fenêtre depuis la gauche jusqu'à ce qu'on puisse rajouter A[r]
            s = xor & A[r]
            while s:
                # On enlève les bits superposés en retirant le terme de gauche et en avançant l
                s -= s & A[l]
                xor ^= A[l]
                l += 1
                # Si nécessaire, on pourrait interrompre ici (cas particulier, non utilisé ici)

    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' queue' (ID: 13661)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32938459515571594
    2. '
' → logprob: -1.9543845653533936
    3. '<|end|>' → logprob: -3.3293845653533936
    4. '

' → logprob: -3.5793845653533936
    5. '\n' → logprob: -3.7043845653533936
    6. '<|end|>' → logprob: -3.9543845653533936
    7. '.Queue' → logprob: -4.079384803771973
    8. 'import' → logprob: -5.454384803771973
    9. '\' → logprob: -6.204384803771973
    10. 'newline' → logprob: -6.829384803771973

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1720702350139618
    2. '
' → logprob: -3.047070264816284
    3. 'import' → logprob: -3.422070264816284
    4. '\n' → logprob: -3.547070264816284
    5. '```' → logprob: -4.672070026397705
    6. '

' → logprob: -4.797070026397705
    7. ',' → logprob: -4.797070026397705
    8. '\' → logprob: -5.297070026397705
    9. ' as' → logprob: -5.297070026397705
    10. '#' → logprob: -5.922070026397705

Token 7: ' math' (ID: 13324)
  Prédit: ' threading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threading' → logprob: -0.0033063970040529966
    2. 'thread' → logprob: -6.5033063888549805
    3. ' os' → logprob: -7.1283063888549805
    4. ' collections' → logprob: -7.3783063888549805
    5. ' multiprocessing' → logprob: -9.00330638885498
    6. ' time' → logprob: -9.62830638885498
    7. 'collections' → logprob: -10.00330638885498
    8. ' socket' → logprob: -10.12830638885498
    9. 'os' → logprob: -10.50330638885498
    10. ' asyncio' → logprob: -10.50330638885498

Token 8: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6251047849655151
    2. '.' → logprob: -1.7501047849655151
    3. '<|end|>' → logprob: -2.2501049041748047
    4. '

' → logprob: -2.8751049041748047
    5. 'import' → logprob: -3.1251049041748047
    6. '```' → logprob: -3.6251049041748047
    7. '\n' → logprob: -3.7501049041748047
    8. ',' → logprob: -4.375104904174805
    9. '\' → logprob: -4.750104904174805
    10. '<|end|>' → logprob: -5.250104904174805

Token 9: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0184085369110107
    2. '
' → logprob: -1.1434085369110107
    3. '\n' → logprob: -2.2684085369110107
    4. '.' → logprob: -2.7684085369110107
    5. '```' → logprob: -2.8934085369110107
    6. '

' → logprob: -3.3934085369110107
    7. '\' → logprob: -3.5184085369110107
    8. '<|end|>' → logprob: -4.64340877532959
    9. ',' → logprob: -4.89340877532959
    10. 'from' → logprob: -5.76840877532959

Token 10: ' copy' (ID: 5150)
  Prédit: ' threading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threading' → logprob: -0.449423223733902
    2. ' os' → logprob: -2.199423313140869
    3. ' random' → logprob: -2.824423313140869
    4. 'random' → logprob: -3.199423313140869
    5. ' collections' → logprob: -3.199423313140869
    6. ' heap' → logprob: -3.324423313140869
    7. ' time' → logprob: -3.699423313140869
    8. 'time' → logprob: -4.199423313140869
    9. 'collections' → logprob: -4.449423313140869
    10. 'os' → logprob: -4.574423313140869

Token 11: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5364558696746826
    2. '

' → logprob: -1.7864558696746826
    3. '.' → logprob: -2.6614558696746826
    4. 'import' → logprob: -2.9114558696746826
    5. '```' → logprob: -3.1614558696746826
    6. '\n' → logprob: -3.2864558696746826
    7. '<|end|>' → logprob: -4.036456108093262
    8. '\' → logprob: -4.536456108093262
    9. '' → logprob: -5.661456108093262
    10. 'newline' → logprob: -6.286456108093262

Token 12: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1586339473724365
    2. '
' → logprob: -1.4086339473724365
    3. '```' → logprob: -1.9086339473724365
    4. '

' → logprob: -2.1586339473724365
    5. '\n' → logprob: -2.4086339473724365
    6. '\' → logprob: -3.9086339473724365
    7. 'class' → logprob: -4.033634185791016
    8. '#' → logprob: -4.783634185791016
    9. '<|end|>' → logprob: -5.033634185791016
    10. '.' → logprob: -5.033634185791016

Token 13: ' itertools' (ID: 103178)
  Prédit: ' threading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threading' → logprob: -0.3766143321990967
    2. 'collections' → logprob: -2.2516143321990967
    3. ' collections' → logprob: -2.5016143321990967
    4. ' heap' → logprob: -3.6266143321990967
    5. ' itertools' → logprob: -3.6266143321990967
    6. 'heap' → logprob: -3.8766143321990967
    7. 'random' → logprob: -4.126614570617676
    8. 'thread' → logprob: -4.376614570617676
    9. 'time' → logprob: -4.751614570617676
    10. ' random' → logprob: -5.251614570617676

Token 14: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5170606970787048
    2. '
' → logprob: -2.1420607566833496
    3. 'import' → logprob: -2.2670607566833496
    4. '```' → logprob: -2.6420607566833496
    5. '\n' → logprob: -3.3920607566833496
    6. '

' → logprob: -3.6420607566833496
    7. '<|end|>' → logprob: -3.7670607566833496
    8. '\' → logprob: -4.39206075668335
    9. '<|end|>' → logprob: -5.51706075668335
    10. ',' → logprob: -5.89206075668335

Token 15: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0548255443572998
    2. '
' → logprob: -1.5548255443572998
    3. 'import' → logprob: -1.8048255443572998
    4. '\n' → logprob: -2.3048255443573
    5. '

' → logprob: -2.6798255443573
    6. '```' → logprob: -2.9298255443573
    7. '<|end|>' → logprob: -4.054825782775879
    8. '\' → logprob: -5.054825782775879
    9. ',' → logprob: -5.054825782775879
    10. '#' → logprob: -5.679825782775879

Token 16: ' fractions' (ID: 110523)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.04697393625974655
    2. 'collections' → logprob: -3.171973943710327
    3. ' typing' → logprob: -6.546973705291748
    4. ' math' → logprob: -7.296973705291748
    5. ' functools' → logprob: -7.296973705291748
    6. ' sys' → logprob: -8.046974182128906
    7. ' enum' → logprob: -8.546974182128906
    8. ' heap' → logprob: -8.546974182128906
    9. ' operator' → logprob: -9.046974182128906
    10. ' queue' → logprob: -9.546974182128906

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03031812608242035
    2. 'import' → logprob: -3.530318021774292
    3. '.' → logprob: -7.780318260192871
    4. '<|end|>' → logprob: -9.405318260192871
    5. '	import' → logprob: -10.655318260192871
    6. ' ' → logprob: -11.405318260192871
    7. '<|end|>' → logprob: -11.530318260192871
    8. '_import' → logprob: -11.780318260192871
    9. '.import' → logprob: -13.530318260192871
    10. 'from' → logprob: -13.655318260192871

Token 18: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.16029967367649078
    2. 'Fraction' → logprob: -1.9102996587753296
    3. ' gcd' → logprob: -9.785299301147461
    4. ' fractions' → logprob: -12.035299301147461
    5. ' ' → logprob: -12.910299301147461
    6. 'Fra' → logprob: -13.160299301147461
    7. '```' → logprob: -13.160299301147461
    8. 'fra' → logprob: -13.410299301147461
    9. ' F' → logprob: -13.910299301147461
    10. 'F' → logprob: -14.160299301147461

Token 19: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9411064386367798
    2. '
' → logprob: -2.1911063194274902
    3. 'def' → logprob: -2.1911063194274902
    4. 'as' → logprob: -2.3161063194274902
    5. '<|end|>' → logprob: -2.3161063194274902
    6. 'import' → logprob: -2.9411063194274902
    7. '

' → logprob: -3.0661063194274902
    8. 's' → logprob: -3.4411063194274902
    9. '(' → logprob: -3.4411063194274902
    10. ' as' → logprob: -3.5661063194274902

Token 21: ' Aug' (ID: 6025)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7151662111282349
    2. ' ' → logprob: -1.8401662111282349
    3. ' def' → logprob: -2.4651660919189453
    4. 'class' → logprob: -2.7151660919189453
    5. '#' → logprob: -2.8401660919189453
    6. 'from' → logprob: -3.4651660919189453
    7. ' class' → logprob: -3.5901660919189453
    8. 'import' → logprob: -3.9651660919189453
    9. '_' → logprob: -4.715166091918945
    10. ' #' → logprob: -4.840166091918945

Token 22: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.045198213309049606
    2. 'mented' → logprob: -3.2951982021331787
    3. 'mentation' → logprob: -5.170198440551758
    4. 'mentor' → logprob: -7.670198440551758
    5. 'ument' → logprob: -8.045198440551758
    6. 'ement' → logprob: -8.420198440551758
    7. '#' → logprob: -8.545198440551758
    8. 'm' → logprob: -8.920198440551758
    9. 'men' → logprob: -9.670198440551758
    10. 'mente' → logprob: -11.420198440551758

Token 23: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004972593393176794
    2. 'r' → logprob: -5.754972457885742
    3. 'nt' → logprob: -6.629972457885742
    4. 's' → logprob: -8.254972457885742
    5. 'ment' → logprob: -9.629972457885742
    6. 'm' → logprob: -10.504972457885742
    7. '_' → logprob: -10.754972457885742
    8. 'ments' → logprob: -10.754972457885742
    9. 'def' → logprob: -10.879972457885742
    10. ' d' → logprob: -11.379972457885742

Token 24: ' limite' (ID: 48939)
  Prédit: 'performance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'performance' → logprob: -0.7575041651725769
    2. 'tail' → logprob: -1.8825042247772217
    3. 'v' → logprob: -2.3825042247772217
    4. ' ' → logprob: -3.8825042247772217
    5. ' performance' → logprob: -3.8825042247772217
    6. 't' → logprob: -3.8825042247772217
    7. 'val' → logprob: -4.007503986358643
    8. ' taille' → logprob: -4.132503986358643
    9. 'distance' → logprob: -4.257503986358643
    10. 'rapid' → logprob: -4.382503986358643

Token 25: ' de' (ID: 334)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.8995963931083679
    2. 'd' → logprob: -1.1495964527130127
    3. 's' → logprob: -2.5245964527130127
    4. 'import' → logprob: -2.8995964527130127
    5. '_sys' → logprob: -3.1495964527130127
    6. '_' → logprob: -3.5245964527130127
    7. '(sys' → logprob: -3.8995964527130127
    8. ' sys' → logprob: -4.399596214294434
    9. '=sys' → logprob: -4.524596214294434
    10. ' d' → logprob: -4.774596214294434

Token 26: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.04194454848766327
    2. 're' → logprob: -3.6669445037841797
    3. ' recursion' → logprob: -4.91694450378418
    4. ' réc' → logprob: -6.04194450378418
    5. '_rec' → logprob: -6.29194450378418
    6. 'la' → logprob: -6.91694450378418
    7. 'l' → logprob: -7.16694450378418
    8. 'r' → logprob: -7.29194450378418
    9. 'recursive' → logprob: -7.91694450378418
    10. ' la' → logprob: -8.16694450378418

Token 27: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.019182391464710236
    2. 'urs' → logprob: -4.144182205200195
    3. 'ur' → logprob: -5.894182205200195
    4. 'ursive' → logprob: -8.394182205200195
    5. 'u' → logprob: -9.894182205200195
    6. '```' → logprob: -10.644182205200195
    7. '**' → logprob: -10.894182205200195
    8. 'usr' → logprob: -11.144182205200195
    9. 'usion' → logprob: -11.644182205200195
    10. '##' → logprob: -12.269182205200195

Token 28: ' pour' (ID: 1930)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16141866147518158
    2. ' sys' → logprob: -2.4114186763763428
    3. 'import' → logprob: -3.6614186763763428
    4. '_sys' → logprob: -4.536418437957764
    5. '(sys' → logprob: -5.036418437957764
    6. 's' → logprob: -5.661418437957764
    7. '_' → logprob: -5.786418437957764
    8. ' ' → logprob: -5.911418437957764
    9. '_s' → logprob: -6.161418437957764
    10. ' import' → logprob: -6.911418437957764

Token 29: ' permettre' (ID: 55483)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.026640575379133224
    2. 'sys' → logprob: -4.90164041519165
    3. ' permettre' → logprob: -5.27664041519165
    4. ' les' → logprob: -5.65164041519165
    5. ' python' → logprob: -6.52664041519165
    6. ' la' → logprob: -6.77664041519165
    7. ' éviter' → logprob: -6.77664041519165
    8. ' ' → logprob: -6.90164041519165
    9. ' l' → logprob: -7.02664041519165
    10. ' le' → logprob: -7.27664041519165

Token 30: ' les' (ID: 1341)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08515623956918716
    2. 'd' → logprob: -4.085156440734863
    3. ' l' → logprob: -4.085156440734863
    4. ' de' → logprob: -4.335156440734863
    5. ' des' → logprob: -4.460156440734863
    6. ' la' → logprob: -4.585156440734863
    7. ' les' → logprob: -5.335156440734863
    8. ' sys' → logprob: -6.085156440734863
    9. ' ' → logprob: -6.585156440734863
    10. '    ' → logprob: -7.335156440734863

Token 31: ' appels' (ID: 133870)
  Prédit: ' appels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appels' → logprob: -0.10325797647237778
    2. 'app' → logprob: -2.478257894515991
    3. 'appel' → logprob: -5.35325813293457
    4. 'tests' → logprob: -6.72825813293457
    5. 'r' → logprob: -6.97825813293457
    6. 'dfs' → logprob: -7.10325813293457
    7. 'calcul' → logprob: -7.22825813293457
    8. 'import' → logprob: -7.22825813293457
    9. 'program' → logprob: -7.85325813293457
    10. 'calls' → logprob: -7.85325813293457

Token 32: ' réc' (ID: 36254)
  Prédit: ' réc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réc' → logprob: -1.3560731410980225
    2. '_' → logprob: -1.4810731410980225
    3. ' sys' → logprob: -1.8560731410980225
    4. ' de' → logprob: -2.8560731410980225
    5. ' ' → logprob: -2.9810731410980225
    6. ' profond' → logprob: -3.1060731410980225
    7. 's' → logprob: -3.3560731410980225
    8. ' à' → logprob: -3.7310731410980225
    9. '  ' → logprob: -3.7310731410980225
    10. 'sys' → logprob: -3.9810731410980225

Token 33: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.01259111799299717
    2. 'ursion' → logprob: -4.5125908851623535
    3. 'ursive' → logprob: -7.2625908851623535
    4. 'ur' → logprob: -7.5125908851623535
    5. '_' → logprob: -9.012591361999512
    6. '#' → logprob: -10.262591361999512
    7. 'u' → logprob: -10.512591361999512
    8. '```' → logprob: -10.762591361999512
    9. '##' → logprob: -11.012591361999512
    10. 'urrent' → logprob: -11.262591361999512

Token 34: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.10320056229829788
    2. 's' → logprob: -2.853200674057007
    3. 'ves' → logprob: -3.853200674057007
    4. 'ons' → logprob: -5.478200435638428
    5. 'urs' → logprob: -5.603200435638428
    6. '##' → logprob: -6.103200435638428
    7. 'if' → logprob: -6.103200435638428
    8. '#' → logprob: -6.478200435638428
    9. 'fs' → logprob: -6.978200435638428
    10. 'f' → logprob: -7.103200435638428

Token 35: ' prof' (ID: 1915)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004424659069627523
    2. ' sys' → logprob: -6.004424571990967
    3. 'import' → logprob: -6.879424571990967
    4. '(sys' → logprob: -7.504424571990967
    5. '_sys' → logprob: -8.504425048828125
    6. '\' → logprob: -9.879425048828125
    7. '.sys' → logprob: -10.129425048828125
    8. '=sys' → logprob: -10.879425048828125
    9. '.' → logprob: -11.004425048828125
    10. '```' → logprob: -11.504425048828125

Token 36: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.037809304893016815
    2. 'ondes' → logprob: -3.412809371948242
    3. 'onde' → logprob: -5.662809371948242
    4. 'ond' → logprob: -7.662809371948242
    5. '_' → logprob: -9.537809371948242
    6. 'ons' → logprob: -10.912809371948242
    7. 'on' → logprob: -11.037809371948242
    8. '#' → logprob: -11.412809371948242
    9. '\' → logprob: -11.787809371948242
    10. '```' → logprob: -11.912809371948242

Token 37: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005751491524279118
    2. 'import' → logprob: -5.380751609802246
    3. '(sys' → logprob: -7.505751609802246
    4. ' sys' → logprob: -8.005751609802246
    5. '=sys' → logprob: -9.130751609802246
    6. '_sys' → logprob: -9.630751609802246
    7. '\' → logprob: -10.880751609802246
    8. '.sys' → logprob: -11.005751609802246
    9. '	sys' → logprob: -11.755751609802246
    10. '```' → logprob: -12.130751609802246

Token 38: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0014282134361565113
    2. 'import' → logprob: -6.751428127288818
    3. ' sys' → logprob: -9.001428604125977
    4. '(sys' → logprob: -9.251428604125977
    5. '=sys' → logprob: -10.626428604125977
    6. '_sys' → logprob: -12.376428604125977
    7. '	sys' → logprob: -13.001428604125977
    8. '.sys' → logprob: -13.251428604125977
    9. 'rec' → logprob: -13.751428604125977
    10. '```' → logprob: -13.751428604125977

Token 39: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5466708540916443
    2. '.set' → logprob: -1.296670913696289
    3. '.setdefault' → logprob: -1.921670913696289
    4. '.exit' → logprob: -7.796670913696289
    5. ' .' → logprob: -7.921670913696289
    6. '.argv' → logprob: -9.296670913696289
    7. '.stdout' → logprob: -9.546670913696289
    8. '.stdin' → logprob: -9.671670913696289
    9. '.stderr' → logprob: -9.796670913696289
    10. '.append' → logprob: -10.046670913696289

Token 40: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0012548730010166764
    2. '_rec' → logprob: -6.751255035400391
    3. '_' → logprob: -9.50125503540039
    4. 'limit' → logprob: -12.37625503540039
    5. ' recursion' → logprob: -13.00125503540039
    6. '_limit' → logprob: -14.50125503540039
    7. '_recursive' → logprob: -14.50125503540039
    8. '_r' → logprob: -15.00125503540039
    9. 'trace' → logprob: -15.75125503540039
    10. '_max' → logprob: -15.87625503540039

Token 41: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.0564331205387134e-05
    2. 'ur' → logprob: -11.75001049041748
    3. 'urs' → logprob: -13.25001049041748
    4. 'ursive' → logprob: -14.25001049041748
    5. 'usion' → logprob: -17.000011444091797
    6. 'limit' → logprob: -17.000011444091797
    7. 'ursor' → logprob: -17.750011444091797
    8. '_' → logprob: -18.000011444091797
    9. '_limit' → logprob: -18.000011444091797
    10. 'urst' → logprob: -18.000011444091797

Token 42: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.07977348566055298
    2. '_limit' → logprob: -2.579773426055908
    3. 'lim' → logprob: -7.704773426055908
    4. 'ault' → logprob: -9.079773902893066
    5. 'ursion' → logprob: -9.204773902893066
    6. '_' → logprob: -9.329773902893066
    7. '_depth' → logprob: -10.829773902893066
    8. 'e' → logprob: -10.829773902893066
    9. 'l' → logprob: -11.079773902893066
    10. 'depth' → logprob: -11.579773902893066

Token 43: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.4849443838757e-06
    2. ' (' → logprob: -13.125004768371582
    3. '(

' → logprob: -13.750004768371582
    4. '(
' → logprob: -14.000004768371582
    5. '((' → logprob: -14.875004768371582
    6. '()' → logprob: -16.500003814697266
    7. '("("' → logprob: -18.000003814697266
    8. '```' → logprob: -18.125003814697266
    9. '40' → logprob: -18.750003814697266
    10. '(int' → logprob: -18.875003814697266

Token 44: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16067789494991302
    2. '10' → logprob: -1.9106779098510742
    3. '300' → logprob: -8.535677909851074
    4. ' ' → logprob: -8.785677909851074
    5. '500' → logprob: -9.785677909851074
    6. '200' → logprob: -10.410677909851074
    7. '150' → logprob: -11.535677909851074
    8. '250' → logprob: -12.160677909851074
    9. '(' → logprob: -13.785677909851074
    10. '999' → logprob: -14.160677909851074

Token 45: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.010364233516156673
    2. '0' → logprob: -5.510364055633545
    3. '00' → logprob: -5.510364055633545
    4. '**' → logprob: -6.135364055633545
    5. ' ' → logprob: -10.885364532470703
    6. '6' → logprob: -11.260364532470703
    7. ')' → logprob: -11.635364532470703
    8. '(' → logprob: -12.385364532470703
    9. '_' → logprob: -13.135364532470703
    10. ' **' → logprob: -13.135364532470703

Token 46: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.02175877057015896
    2. '6' → logprob: -4.021758556365967
    3. '9' → logprob: -5.646758556365967
    4. '8' → logprob: -9.521759033203125
    5. '**' → logprob: -16.771759033203125
    6. '```' → logprob: -18.896759033203125
    7. '5' → logprob: -19.396759033203125
    8. '4' → logprob: -19.521759033203125
    9. '+' → logprob: -21.021759033203125
    10. ' ' → logprob: -21.209259033203125

Token 47: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -12.87500286102295
    3. '))' → logprob: -15.12500286102295
    4. ')
' → logprob: -15.37500286102295
    5. '),' → logprob: -17.500003814697266
    6. ')

' → logprob: -18.750003814697266
    7. ')))' → logprob: -18.875003814697266
    8. ')#' → logprob: -18.875003814697266
    9. ')
' → logprob: -19.125003814697266
    10. '）' → logprob: -19.250003814697266

Token 48: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1989544779062271
    2. '
' → logprob: -1.823954463005066
    3. '#' → logprob: -4.4489545822143555
    4. 'def' → logprob: -5.8239545822143555
    5. 'class' → logprob: -5.9489545822143555
    6. '
' → logprob: -7.1989545822143555
    7. '


' → logprob: -7.9489545822143555
    8. '

' → logprob: -8.948954582214355
    9. 'import' → logprob: -9.073954582214355
    10. '```' → logprob: -9.323954582214355

Token 49: ' Déf' (ID: 180635)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1485362946987152
    2. 'class' → logprob: -2.523536205291748
    3. '#' → logprob: -3.023536205291748
    4. ' class' → logprob: -5.773536205291748
    5. 'input' → logprob: -6.023536205291748
    6. ' def' → logprob: -6.148536205291748
    7. 'INF' → logprob: -7.648536205291748
    8. 'MAX' → logprob: -8.148536682128906
    9. ' input' → logprob: -8.898536682128906
    10. 'MOD' → logprob: -9.148536682128906

Token 50: 'init' (ID: 3287)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.6186675429344177
    2. 'inir' → logprob: -1.8686676025390625
    3. 'init' → logprob: -2.6186676025390625
    4. 'ine' → logprob: -2.6186676025390625
    5. 'ini' → logprob: -3.1186676025390625
    6. 'ault' → logprob: -3.4936676025390625
    7. 'in' → logprob: -3.4936676025390625
    8. 'inie' → logprob: -4.3686676025390625
    9. 'inis' → logprob: -4.6186676025390625
    10. 'initions' → logprob: -4.7436676025390625

Token 51: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15517199039459229
    2. ' une' → logprob: -2.1551718711853027
    3. ' l' → logprob: -4.780171871185303
    4. 'def' → logprob: -5.155171871185303
    5. ' a' → logprob: -5.905171871185303
    6. 'une' → logprob: -5.905171871185303
    7. ' un' → logprob: -6.530171871185303
    8. 'la' → logprob: -6.655171871185303
    9. ' le' → logprob: -6.780171871185303
    10. ' les' → logprob: -7.030171871185303

Token 52: ' valeur' (ID: 41664)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.14299747347831726
    2. 'class' → logprob: -2.5179975032806396
    3. 'classe' → logprob: -4.1429972648620605
    4. 'function' → logprob: -4.2679972648620605
    5. ' fonction' → logprob: -4.3929972648620605
    6. 'f' → logprob: -5.7679972648620605
    7. 'def' → logprob: -6.3929972648620605
    8. 'fon' → logprob: -6.5179972648620605
    9. ' function' → logprob: -6.6429972648620605
    10. 'const' → logprob: -7.8929972648620605

Token 53: ' représentant' (ID: 136122)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06820443272590637
    2. '_max' → logprob: -3.318204402923584
    3. '_inf' → logprob: -4.693204402923584
    4. ' maximale' → logprob: -4.818204402923584
    5. 'MAX' → logprob: -5.193204402923584
    6. 'inf' → logprob: -6.193204402923584
    7. 'maximum' → logprob: -6.568204402923584
    8. 'INF' → logprob: -7.568204402923584
    9. '_MAX' → logprob: -7.693204402923584
    10. 'de' → logprob: -7.693204402923584

Token 54: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.44233009219169617
    2. ' l' → logprob: -1.0673301219940186
    3. 'le' → logprob: -4.8173298835754395
    4. ' une' → logprob: -6.6923298835754395
    5. 'inf' → logprob: -6.6923298835754395
    6. 'in' → logprob: -7.1923298835754395
    7. ' ' → logprob: -7.9423298835754395
    8. ' ' → logprob: -8.192330360412598
    9. '```' → logprob: -8.192330360412598
    10. ' infinity' → logprob: -8.317330360412598

Token 55: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7434358596801758
    2. ''in' → logprob: -0.8684358596801758
    3. 'e' → logprob: -2.618435859680176
    4. 'inf' → logprob: -4.243435859680176
    5. ''' → logprob: -4.493435859680176
    6. 'in' → logprob: -6.743435859680176
    7. ''é' → logprob: -7.618435859680176
    8. ''ensemble' → logprob: -7.868435859680176
    9. ''état' → logprob: -7.993435859680176
    10. ''énergie' → logprob: -7.993435859680176

Token 56: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0036623103078454733
    2. 'fin' → logprob: -6.503662109375
    3. 'finity' → logprob: -7.128662109375
    4. 't' → logprob: -7.878662109375
    5. 'finite' → logprob: -8.003662109375
    6. 'fi' → logprob: -8.753662109375
    7. 'float' → logprob: -9.878662109375
    8. 'if' → logprob: -10.128662109375
    9. '```' → logprob: -10.128662109375
    10. '[' → logprob: -10.253662109375

Token 57: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.017660383135080338
    2. 'inity' → logprob: -4.767660617828369
    3. 'i' → logprob: -5.142660617828369
    4. 'init' → logprob: -6.892660617828369
    5. 'ity' → logprob: -7.642660617828369
    6. 'inite' → logprob: -7.767660617828369
    7. 'in' → logprob: -8.142660140991211
    8. 'inie' → logprob: -8.267660140991211
    9. 'iny' → logprob: -8.392660140991211
    10. 'inty' → logprob: -8.892660140991211

Token 58: ' pour' (ID: 1930)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.5573292970657349
    2. 'inf' → logprob: -1.4323292970657349
    3. '_inf' → logprob: -3.0573291778564453
    4. ' =' → logprob: -3.1823291778564453
    5. 'float' → logprob: -3.6823291778564453
    6. '=float' → logprob: -3.8073291778564453
    7. '_INF' → logprob: -3.9323291778564453
    8. '=' → logprob: -4.432329177856445
    9. '_INFINITY' → logprob: -4.807329177856445
    10. 'in' → logprob: -5.932329177856445

Token 59: ' le' (ID: 505)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.29389145970344543
    2. ' math' → logprob: -1.668891429901123
    3. ' les' → logprob: -3.543891429901123
    4. 'float' → logprob: -4.043891429901123
    5. ' la' → logprob: -4.918891429901123
    6. ' l' → logprob: -5.293891429901123
    7. 'math' → logprob: -6.293891429901123
    8. '_float' → logprob: -6.418891429901123
    9. ' le' → logprob: -6.668891429901123
    10. ' ' → logprob: -7.418891429901123

Token 60: ' problème' (ID: 35630)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.7811880111694336
    2. ' float' → logprob: -0.9061880111694336
    3. 'ent' → logprob: -3.2811880111694336
    4. ' calcul' → logprob: -3.7811880111694336
    5. 'sys' → logprob: -4.656188011169434
    6. ' sys' → logprob: -4.781188011169434
    7. 'nombre' → logprob: -5.156188011169434
    8. 'calcul' → logprob: -5.156188011169434
    9. ' code' → logprob: -5.281188011169434
    10. ' nombre' → logprob: -5.656188011169434

Token 61: '
' (ID: 198)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.15361419320106506
    2. 'inf' → logprob: -2.0286142826080322
    3. 'float' → logprob: -5.278614044189453
    4. 'IN' → logprob: -6.403614044189453
    5. '_inf' → logprob: -6.653614044189453
    6. '_INF' → logprob: -6.778614044189453
    7. 'in' → logprob: -7.903614044189453
    8. '=float' → logprob: -8.278614044189453
    9. '_INFINITY' → logprob: -8.278614044189453
    10. 'math' → logprob: -8.403614044189453

Token 62: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.05896233394742012
    2. 'inf' → logprob: -2.933962345123291
    3. 'IN' → logprob: -6.058962345123291
    4. ' INF' → logprob: -6.558962345123291
    5. 'float' → logprob: -9.183961868286133
    6. 'in' → logprob: -9.183961868286133
    7. ' inf' → logprob: -10.308961868286133
    8. '_INF' → logprob: -10.558961868286133
    9. 'Inf' → logprob: -11.808961868286133
    10. ' infinity' → logprob: -11.933961868286133

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328243017196655
    2. '=' → logprob: -1.3132824897766113
    3. '=int' → logprob: -11.938282012939453
    4. '=float' → logprob: -12.688282012939453
    5. '=

' → logprob: -12.938282012939453
    6. '＝' → logprob: -13.438282012939453
    7. '_' → logprob: -13.563282012939453
    8. '  ' → logprob: -13.813282012939453
    9. ')' → logprob: -14.063282012939453
    10. '=np' → logprob: -14.563282012939453

Token 64: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.2920752465724945
    2. 'float' → logprob: -1.417075276374817
    3. ' ' → logprob: -5.542075157165527
    4. '10' → logprob: -5.542075157165527
    5. ' math' → logprob: -6.292075157165527
    6. 'math' → logprob: -6.792075157165527
    7. '1' → logprob: -10.917075157165527
    8. 'int' → logprob: -11.167075157165527
    9. '	float' → logprob: -11.417075157165527
    10. ' int' → logprob: -12.542075157165527

Token 65: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.053570061922073364
    2. '10' → logprob: -3.303570032119751
    3. 'math' → logprob: -4.17857027053833
    4. ' float' → logprob: -9.803569793701172
    5. 'int' → logprob: -10.928569793701172
    6. '1' → logprob: -11.303569793701172
    7. ' ' → logprob: -14.678569793701172
    8. '	float' → logprob: -14.803569793701172
    9. '100' → logprob: -14.928569793701172
    10. 'sys' → logprob: -15.053569793701172

Token 66: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11006290465593338
    2. '18' → logprob: -2.985062837600708
    3. '10' → logprob: -3.360062837600708
    4. '12' → logprob: -4.235063076019287
    5. '15' → logprob: -5.985063076019287
    6. '8' → logprob: -7.610063076019287
    7. '7' → logprob: -7.860063076019287
    8. '20' → logprob: -8.110062599182129
    9. '**' → logprob: -8.110062599182129
    10. '16' → logprob: -8.985062599182129

Token 67: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.014605674892663956
    2. '18' → logprob: -5.139605522155762
    3. '15' → logprob: -5.264605522155762
    4. '10' → logprob: -5.764605522155762
    5. '12' → logprob: -8.264605522155762
    6. '16' → logprob: -10.889605522155762
    7. '1' → logprob: -11.014605522155762
    8. '14' → logprob: -11.389605522155762
    9. '8' → logprob: -11.639605522155762
    10. '7' → logprob: -12.139605522155762

Token 68: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7832801938056946
    2. '
' → logprob: -0.9082801938056946
    3. '#' → logprob: -2.15828013420105
    4. '<|end|>' → logprob: -4.533280372619629
    5. '\n' → logprob: -5.783280372619629
    6. 'def' → logprob: -6.283280372619629
    7. 'class' → logprob: -6.283280372619629
    8. '
' → logprob: -6.408280372619629
    9. '```' → logprob: -6.783280372619629
    10. ')' → logprob: -7.033280372619629

Token 69: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.687355101108551
    2. '
' → logprob: -1.3123550415039062
    3. 'def' → logprob: -1.9373550415039062
    4. 'class' → logprob: -2.6873550415039062
    5. '#' → logprob: -4.312355041503906
    6. '
' → logprob: -6.687355041503906
    7. '<|end|>' → logprob: -8.437355041503906
    8. '```' → logprob: -8.562355041503906
    9. '<|end|>' → logprob: -8.562355041503906
    10. ' class' → logprob: -9.562355041503906

Token 70: ' Déf' (ID: 180635)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01151048019528389
    2. ' def' → logprob: -5.386510372161865
    3. 'class' → logprob: -5.636510372161865
    4. '#' → logprob: -5.886510372161865
    5. 'from' → logprob: -8.386510848999023
    6. ' class' → logprob: -8.386510848999023
    7. 'input' → logprob: -11.761510848999023
    8. 'import' → logprob: -11.761510848999023
    9. 'de' → logprob: -11.886510848999023
    10. 'MOD' → logprob: -12.261510848999023

Token 71: 'init' (ID: 3287)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03661181032657623
    2. 'fine' → logprob: -4.661612033843994
    3. 'ini' → logprob: -5.036612033843994
    4. 'fin' → logprob: -5.161612033843994
    5. 'init' → logprob: -5.286612033843994
    6. '#' → logprob: -5.911612033843994
    7. 'ine' → logprob: -6.786612033843994
    8. 'def' → logprob: -6.911612033843994
    9. 'fi' → logprob: -7.161612033843994
    10. 'inir' → logprob: -7.286612033843994

Token 72: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5531360507011414
    2. ' la' → logprob: -1.3031361103057861
    3. 'une' → logprob: -2.678136110305786
    4. ' a' → logprob: -3.428136110305786
    5. 'a' → logprob: -4.178135871887207
    6. 'class' → logprob: -4.678135871887207
    7. 'def' → logprob: -4.678135871887207
    8. 'la' → logprob: -5.553135871887207
    9. 'le' → logprob: -6.303135871887207
    10. ' un' → logprob: -6.303135871887207

Token 73: ' constante' (ID: 49652)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.7564663290977478
    2. ' fonction' → logprob: -1.3814663887023926
    3. 'class' → logprob: -2.5064663887023926
    4. 'tail' → logprob: -2.8814663887023926
    5. 'classe' → logprob: -3.2564663887023926
    6. 'distance' → logprob: -3.3814663887023926
    7. ' structure' → logprob: -4.756466388702393
    8. 'function' → logprob: -4.756466388702393
    9. ' taille' → logprob: -4.881466388702393
    10. ' classe' → logprob: -5.006466388702393

Token 74: ' du' (ID: 1462)
  Prédit: 'PI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PI' → logprob: -0.40127235651016235
    2. 'MOD' → logprob: -1.4012722969055176
    3. 'pi' → logprob: -3.1512722969055176
    4. 'mod' → logprob: -4.276272296905518
    5. 'EPS' → logprob: -4.776272296905518
    6. ' PI' → logprob: -5.526272296905518
    7. ' MOD' → logprob: -5.776272296905518
    8. 'M' → logprob: -5.901272296905518
    9. '_PI' → logprob: -6.401272296905518
    10. '_pi' → logprob: -6.776272296905518

Token 75: ' modulo' (ID: 112372)
  Prédit: ' problème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.9818328619003296
    2. ' modulo' → logprob: -0.9818328619003296
    3. ' nombre' → logprob: -1.7318328619003296
    4. ' mod' → logprob: -3.981832981109619
    5. ' module' → logprob: -4.606832981109619
    6. '```' → logprob: -4.731832981109619
    7. ' code' → logprob: -5.231832981109619
    8. ' problem' → logprob: -5.356832981109619
    9. ' facteur' → logprob: -5.731832981109619
    10. 'mod' → logprob: -6.106832981109619

Token 76: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021201051771640778
    2. 'MOD' → logprob: -4.896201133728027
    3. '_' → logprob: -5.521201133728027
    4. ',' → logprob: -5.771201133728027
    5. ' =' → logprob: -6.521201133728027
    6. ' MOD' → logprob: -6.646201133728027
    7. ' ,' → logprob: -6.771201133728027
    8. 'mod' → logprob: -7.396201133728027
    9. '=' → logprob: -7.896201133728027
    10. ' mod' → logprob: -8.771201133728027

Token 77: ' besoin' (ID: 27703)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3667946755886078
    2. ' '' → logprob: -2.6167945861816406
    3. '  ' → logprob: -2.9917945861816406
    4. ''' → logprob: -3.7417945861816406
    5. ' vous' → logprob: -4.116794586181641
    6. '_' → logprob: -4.366794586181641
    7. ' not' → logprob: -4.491794586181641
    8. 'not' → logprob: -4.866794586181641
    9. ' you' → logprob: -4.991794586181641
    10. ' l' → logprob: -4.991794586181641

Token 78: ' d' (ID: 272)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.6004102826118469
    2. '_' → logprob: -1.9754102230072021
    3. ' ' → logprob: -1.9754102230072021
    4. '%' → logprob: -3.225410223007202
    5. '_MOD' → logprob: -3.225410223007202
    6. '_mod' → logprob: -3.475410223007202
    7. 'mod' → logprob: -4.100410461425781
    8. ' MOD' → logprob: -4.475410461425781
    9. ',' → logprob: -4.600410461425781
    10. '=' → logprob: -4.975410461425781

Token 79: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7346615195274353
    2. ''' → logprob: -0.8596615195274353
    3. ''un' → logprob: -3.60966157913208
    4. 'a' → logprob: -3.98466157913208
    5. ''espace' → logprob: -4.23466157913208
    6. 'u' → logprob: -4.73466157913208
    7. '_' → logprob: -4.98466157913208
    8. ' '' → logprob: -5.23466157913208
    9. ''une' → logprob: -6.10966157913208
    10. ''e' → logprob: -6.35966157913208

Token 80: 'érations' (ID: 152860)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.205384612083435
    2. 'e' → logprob: -1.580384612083435
    3. 'r' → logprob: -2.7053847312927246
    4. '%' → logprob: -2.9553847312927246
    5. 'd' → logprob: -2.9553847312927246
    6. 'ération' → logprob: -3.0803847312927246
    7. 'er' → logprob: -3.3303847312927246
    8. 'u' → logprob: -3.3303847312927246
    9. 'érateur' → logprob: -3.3303847312927246
    10. '=' → logprob: -3.4553847312927246

Token 81: ' sous' (ID: 14487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32135865092277527
    2. '_' → logprob: -1.3213586807250977
    3. ' _' → logprob: -5.946358680725098
    4. '_mod' → logprob: -7.196358680725098
    5. ',' → logprob: -7.696358680725098
    6. 'mod' → logprob: -7.696358680725098
    7. ' modulo' → logprob: -7.696358680725098
    8. ' (' → logprob: -7.946358680725098
    9. '.' → logprob: -7.946358680725098
    10. '  ' → logprob: -8.446358680725098

Token 82: ' un' (ID: 537)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.02643684484064579
    2. 'mod' → logprob: -4.401436805725098
    3. '_' → logprob: -5.401436805725098
    4. ' mod' → logprob: -5.526436805725098
    5. ' modulus' → logprob: -6.276436805725098
    6. ' ' → logprob: -6.776436805725098
    7. '_mod' → logprob: -7.151436805725098
    8. ' modular' → logprob: -7.401436805725098
    9. ''' → logprob: -8.651436805725098
    10. ' '' → logprob: -9.276436805725098

Token 83: ' large' (ID: 4410)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.14069126546382904
    2. '_' → logprob: -2.7656912803649902
    3. 'mod' → logprob: -3.7656912803649902
    4. ' ' → logprob: -3.8906912803649902
    5. ' modulus' → logprob: -4.89069128036499
    6. ' mod' → logprob: -5.39069128036499
    7. ' espace' → logprob: -6.39069128036499
    8. ' _' → logprob: -6.76569128036499
    9. '.' → logprob: -6.89069128036499
    10. ',' → logprob: -7.26569128036499

Token 84: ' modulo' (ID: 112372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5608527660369873
    2. ' espace' → logprob: -1.3108527660369873
    3. ' ' → logprob: -2.3108527660369873
    4. ' modulo' → logprob: -4.060853004455566
    5. ' space' → logprob: -4.310853004455566
    6. ' _' → logprob: -4.560853004455566
    7. '```' → logprob: -5.560853004455566
    8. ' modulus' → logprob: -5.685853004455566
    9. 'space' → logprob: -6.185853004455566
    10. ' nombre' → logprob: -6.560853004455566

Token 85: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06668256223201752
    2. ' ' → logprob: -3.1916825771331787
    3. '_mod' → logprob: -5.3166823387146
    4. 'MOD' → logprob: -5.3166823387146
    5. ',' → logprob: -5.5666823387146
    6. '_MOD' → logprob: -5.9416823387146
    7. 'mod' → logprob: -6.8166823387146
    8. 's' → logprob: -7.0666823387146
    9. ':' → logprob: -7.0666823387146
    10. ' _' → logprob: -7.3166823387146

Token 86: 'MOD' (ID: 52135)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3974343240261078
    2. 'MOD' → logprob: -1.3974343538284302
    3. ' MOD' → logprob: -2.8974342346191406
    4. '_' → logprob: -5.147434234619141
    5. 'M' → logprob: -5.647434234619141
    6. ' M' → logprob: -5.647434234619141
    7. ',' → logprob: -5.897434234619141
    8. ' ,' → logprob: -6.397434234619141
    9. '_MOD' → logprob: -6.522434234619141
    10. ' :' → logprob: -6.897434234619141

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031855558045208454
    2. '=' → logprob: -5.753185749053955
    3. ' =
' → logprob: -12.128185272216797
    4. ' ' → logprob: -13.253185272216797
    5. ' =
' → logprob: -16.003185272216797
    6. ' ' → logprob: -16.253185272216797
    7. ' =)' → logprob: -16.253185272216797
    8. ' ,' → logprob: -16.503185272216797
    9. ',' → logprob: -16.753185272216797
    10. '<|end|>' → logprob: -16.878185272216797

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0009280181839130819
    2. '10' → logprob: -7.000927925109863
    3. '1' → logprob: -12.125927925109863
    4. '32' → logprob: -12.750927925109863
    5. ' )' → logprob: -13.125927925109863
    6. '0' → logprob: -13.250927925109863
    7. ' 
' → logprob: -13.750927925109863
    8. '20' → logprob: -14.500927925109863
    9. ' ' → logprob: -14.750927925109863
    10. ' space' → logprob: -15.250927925109863

Token 89: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001805377542041242
    2. '100' → logprob: -8.7501802444458
    3. ' ' → logprob: -10.8751802444458
    4. '1' → logprob: -13.0001802444458
    5. '998' → logprob: -14.1251802444458
    6. 'None' → logprob: -17.250181198120117
    7. '(' → logprob: -17.500181198120117
    8. 'int' → logprob: -17.625181198120117
    9. '１０' → logprob: -18.375181198120117
    10. '```' → logprob: -19.125181198120117

Token 90: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6934278011322021
    2. '**' → logprob: -0.6934278011322021
    3. '+' → logprob: -8.443428039550781
    4. '09' → logprob: -10.693428039550781
    5. '*' → logprob: -10.943428039550781
    6. '```' → logprob: -11.443428039550781
    7. ' ' → logprob: -12.193428039550781
    8. '^' → logprob: -12.318428039550781
    9. '18' → logprob: -13.318428039550781
    10. '19' → logprob: -13.943428039550781

Token 91: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '18' → logprob: -18.0
    3. '09' → logprob: -19.25
    4. ' ' → logprob: -19.875
    5. '19' → logprob: -20.875
    6. '```' → logprob: -21.0
    7. '９' → logprob: -21.25
    8. '+' → logprob: -21.25
    9. '8' → logprob: -21.375
    10. '1' → logprob: -21.5

Token 92: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010385256027802825
    2. ' +' → logprob: -6.876038551330566
    3. '7' → logprob: -12.376038551330566
    4. ' ' → logprob: -14.501038551330566
    5. '＋' → logprob: -14.626038551330566
    6. '+
' → logprob: -15.251038551330566
    7. '+</' → logprob: -15.876038551330566
    8. '+

' → logprob: -16.25103759765625
    9. ' +
' → logprob: -17.25103759765625
    10. ' plus' → logprob: -17.50103759765625

Token 93: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '+' → logprob: -17.625001907348633
    4. '```' → logprob: -19.625001907348633
    5. '9' → logprob: -20.750001907348633
    6. '07' → logprob: -20.875001907348633
    7. '７' → logprob: -21.500001907348633
    8. '  ' → logprob: -21.562501907348633
    9. '   ' → logprob: -21.687501907348633
    10. '' → logprob: -21.750001907348633

Token 94: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '+' → logprob: -20.625
    4. '７' → logprob: -20.625
    5. '```' → logprob: -20.875
    6. '۷' → logprob: -21.5
    7. '07' → logprob: -21.625
    8. '   ' → logprob: -22.0
    9. '' → logprob: -22.125
    10. '७' → logprob: -22.125

Token 95: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.20461571216583252
    2. '
' → logprob: -1.7046157121658325
    3. '#' → logprob: -6.829615592956543
    4. '


' → logprob: -7.329615592956543
    5. 'def' → logprob: -7.704615592956543
    6. '
' → logprob: -8.204615592956543
    7. '<|end|>' → logprob: -8.329615592956543
    8. '' → logprob: -8.579615592956543
    9. ' 

' → logprob: -9.454615592956543
    10. '
 
' → logprob: -10.204615592956543

Token 96: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14666876196861267
    2. '

' → logprob: -2.1466686725616455
    3. 'def' → logprob: -4.271668910980225
    4. '#' → logprob: -5.771668910980225
    5. 'class' → logprob: -7.521668910980225
    6. '
' → logprob: -7.521668910980225
    7. '<|end|>' → logprob: -7.646668910980225
    8. '<|end|>' → logprob: -8.271668434143066
    9. '


' → logprob: -8.521668434143066
    10. '' → logprob: -8.896668434143066

Token 97: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09485380351543427
    2. '#' → logprob: -3.5948538780212402
    3. ' ' → logprob: -3.8448538780212402
    4. 'class' → logprob: -3.9698538780212402
    5. ' def' → logprob: -4.09485387802124
    6. ' class' → logprob: -6.34485387802124
    7. ' 
' → logprob: -6.46985387802124
    8. 'd' → logprob: -7.09485387802124
    9. '
' → logprob: -7.46985387802124
    10. 'de' → logprob: -7.84485387802124

Token 98: ' util' (ID: 3667)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9271640777587891
    2. ' def' → logprob: -1.052164077758789
    3. 'def' → logprob: -1.427164077758789
    4. 'de' → logprob: -5.302164077758789
    5. ' ' → logprob: -5.552164077758789
    6. '_de' → logprob: -5.927164077758789
    7. 's' → logprob: -6.677164077758789
    8. '_' → logprob: -6.802164077758789
    9. ' d' → logprob: -8.677164077758789
    10. '<|end|>' → logprob: -8.677164077758789

Token 99: 'itaire' (ID: 28335)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20528119802474976
    2. 'ité' → logprob: -2.2052812576293945
    3. 'itaire' → logprob: -3.0802812576293945
    4. 's' → logprob: -4.9552812576293945
    5. 'isateur' → logprob: -4.9552812576293945
    6. 'e' → logprob: -5.5802812576293945
    7. 'ités' → logprob: -5.7052812576293945
    8. 'ity' → logprob: -6.4552812576293945
    9. '_' → logprob: -6.8302812576293945
    10. 'de' → logprob: -6.9552812576293945

Token 100: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5529305934906006
    2. ' de' → logprob: -1.9279305934906006
    3. ' def' → logprob: -2.0529305934906006
    4. ' ' → logprob: -2.9279305934906006
    5. ':' → logprob: -3.0529305934906006
    6. '_' → logprob: -3.8029305934906006
    7. 's' → logprob: -4.67793083190918
    8. 'de' → logprob: -5.05293083190918
    9. '(' → logprob: -5.42793083190918
    10. ' d' → logprob: -6.55293083190918

Token 101: ' lire' (ID: 46082)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.031978290528059006
    2. ' le' → logprob: -4.531978130340576
    3. ' gcd' → logprob: -5.156978130340576
    4. 'calcul' → logprob: -5.781978130340576
    5. ' calc' → logprob: -6.031978130340576
    6. ' lire' → logprob: -6.156978130340576
    7. 'g' → logprob: -6.656978130340576
    8. ' la' → logprob: -6.781978130340576
    9. ' l' → logprob: -7.281978130340576
    10. ' calcular' → logprob: -7.406978130340576

Token 102: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020997028332203627
    2. 'l' → logprob: -7.877099514007568
    3. '_input' → logprob: -8.252099990844727
    4. 'les' → logprob: -8.377099990844727
    5. '_' → logprob: -8.377099990844727
    6. 'le' → logprob: -8.627099990844727
    7. 'input' → logprob: -8.877099990844727
    8. '(' → logprob: -9.002099990844727
    9. 'la' → logprob: -9.377099990844727
    10. 's' → logprob: -10.127099990844727

Token 103: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.477716863155365
    2. '()' → logprob: -2.3527169227600098
    3. 'ligne' → logprob: -2.3527169227600098
    4. ' input' → logprob: -2.9777169227600098
    5. 'entrée' → logprob: -3.2277169227600098
    6. 'int' → logprob: -3.7277169227600098
    7. 'l' → logprob: -3.9777169227600098
    8. 'input' → logprob: -4.35271692276001
    9. 'line' → logprob: -4.72771692276001
    10. ' line' → logprob: -4.85271692276001

Token 104: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006299942615441978
    2. '()
' → logprob: -8.250630378723145
    3. '().' → logprob: -9.250630378723145
    4. '()\' → logprob: -9.500630378723145
    5. '(' → logprob: -9.875630378723145
    6. 'input' → logprob: -10.500630378723145
    7. '()

' → logprob: -10.625630378723145
    8. 's' → logprob: -10.750630378723145
    9. ' =' → logprob: -11.375630378723145
    10. '=' → logprob: -11.750630378723145

Token 105: ''ent' (ID: 53422)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.854651927947998
    2. 'entrée' → logprob: -1.354651927947998
    3. ' input' → logprob: -1.854651927947998
    4. 'e' → logprob: -2.104651927947998
    5. 'input' → logprob: -3.604651927947998
    6. ' entrée' → logprob: -5.854651927947998
    7. '’entrée' → logprob: -5.979651927947998
    8. ''' → logprob: -6.604651927947998
    9. ''ent' → logprob: -6.979651927947998
    10. 'es' → logprob: -7.604651927947998

Token 106: 'iers' (ID: 11012)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.04667111486196518
    2. 'ree' → logprob: -3.796671152114868
    3. 'r' → logprob: -4.046670913696289
    4. 'rees' → logprob: -5.421670913696289
    5. 'ée' → logprob: -7.421670913696289
    6. 'er' → logprob: -7.796670913696289
    7. 'ré' → logprob: -9.296670913696289
    8. 're' → logprob: -9.921670913696289
    9. 't' → logprob: -10.546670913696289
    10. 'ées' → logprob: -11.046670913696289

Token 107: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24489369988441467
    2. 'def' → logprob: -1.6198936700820923
    3. '(' → logprob: -4.994893550872803
    4. 's' → logprob: -5.744893550872803
    5. '()
' → logprob: -5.869893550872803
    6. '(
' → logprob: -6.369893550872803
    7. '():' → logprob: -6.619893550872803
    8. '()\' → logprob: -7.244893550872803
    9. '=' → logprob: -7.869893550872803
    10. '_' → logprob: -8.119894027709961

Token 108: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3585452139377594
    2. ' l' → logprob: -1.983545184135437
    3. 'input' → logprob: -2.6085453033447266
    4. ' input' → logprob: -2.7335453033447266
    5. 'stdin' → logprob: -4.483545303344727
    6. ' stdin' → logprob: -4.608545303344727
    7. 'sys' → logprob: -7.233545303344727
    8. 'la' → logprob: -7.358545303344727
    9. 's' → logprob: -7.733545303344727
    10. ' la' → logprob: -7.858545303344727

Token 109: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.7062586545944214
    2. 'a' → logprob: -1.2062586545944214
    3. 'input' → logprob: -1.9562586545944214
    4. ''' → logprob: -3.831258773803711
    5. 'e' → logprob: -4.081258773803711
    6. 'entrée' → logprob: -4.581258773803711
    7. ' input' → logprob: -4.956258773803711
    8. ''utilisateur' → logprob: -5.956258773803711
    9. 'es' → logprob: -6.581258773803711
    10. 'stdin' → logprob: -7.206258773803711

Token 110: ' standard' (ID: 7024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3176727294921875
    2. '()' → logprob: -1.4426727294921875
    3. '
' → logprob: -4.5676727294921875
    4. '()
' → logprob: -4.8176727294921875
    5. 'input' → logprob: -5.4426727294921875
    6. 's' → logprob: -5.8176727294921875
    7. '(
' → logprob: -6.3176727294921875
    8. '()\' → logprob: -6.9426727294921875
    9. '(' → logprob: -7.0676727294921875
    10. ' =' → logprob: -7.1926727294921875

Token 111: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007311395602300763
    2. '(
' → logprob: -8.250731468200684
    3. '
' → logprob: -8.750731468200684
    4. '()' → logprob: -9.750731468200684
    5. ' def' → logprob: -9.875731468200684
    6. 'de' → logprob: -10.125731468200684
    7. 'input' → logprob: -10.375731468200684
    8. '()
' → logprob: -10.875731468200684
    9. ':' → logprob: -10.875731468200684
    10. '(' → logprob: -11.000731468200684

Token 112: 'LI' (ID: 14313)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006821724819019437
    2. 'input' → logprob: -7.375682353973389
    3. ' def' → logprob: -10.75068187713623
    4. 'data' → logprob: -11.00068187713623
    5. 'd' → logprob: -11.62568187713623
    6. 'int' → logprob: -12.37568187713623
    7. 'de' → logprob: -13.12568187713623
    8. 'n' → logprob: -15.25068187713623
    9. ' input' → logprob: -15.50068187713623
    10. '```' → logprob: -15.50068187713623

Token 113: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0503113679587841
    2. ' =' → logprob: -3.800311326980591
    3. 'ST' → logprob: -4.42531156539917
    4. '=' → logprob: -5.42531156539917
    5. '()' → logprob: -5.67531156539917
    6. 'n' → logprob: -5.80031156539917
    7. 'ne' → logprob: -6.80031156539917
    8. 's' → logprob: -6.92531156539917
    9. 'sts' → logprob: -8.050311088562012
    10. '   ' → logprob: -8.425311088562012

Token 114: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4582815170288086
    2. ' lambda' → logprob: -1.9582815170288086
    3. 'm' → logprob: -2.7082815170288086
    4. 'list' → logprob: -2.8332815170288086
    5. 'mb' → logprob: -2.8332815170288086
    6. 'st' → logprob: -3.5832815170288086
    7. '(lambda' → logprob: -4.708281517028809
    8. ' list' → logprob: -6.083281517028809
    9. 'ambda' → logprob: -6.958281517028809
    10. 'map' → logprob: -7.208281517028809

Token 115: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15160039067268372
    2. ':list' → logprob: -2.1516003608703613
    3. ' list' → logprob: -4.026600360870361
    4. ' :' → logprob: -5.151600360870361
    5. 'list' → logprob: -7.276600360870361
    6. '[:]' → logprob: -11.77660083770752
    7. '():' → logprob: -11.90160083770752
    8. ' map' → logprob: -12.02660083770752
    9. ' ' → logprob: -12.15160083770752
    10. ':int' → logprob: -12.27660083770752

Token 116: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1269463747739792
    2. ' list' → logprob: -2.126946449279785
    3. 'map' → logprob: -11.001946449279785
    4. '	list' → logprob: -14.751946449279785
    5. ' map' → logprob: -14.751946449279785
    6. '[' → logprob: -15.251946449279785
    7. '[list' → logprob: -15.376946449279785
    8. 'List' → logprob: -16.25194549560547
    9. 'sys' → logprob: -17.00194549560547
    10. ' ' → logprob: -17.25194549560547

Token 117: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.4974866644479334e-05
    2. ' int' → logprob: -11.125015258789062
    3. '	int' → logprob: -16.875015258789062
    4. 'map' → logprob: -17.125015258789062
    5. ']int' → logprob: -17.500015258789062
    6. '```' → logprob: -18.125015258789062
    7. '(int' → logprob: -18.500015258789062
    8. ' ' → logprob: -18.625015258789062
    9. '*' → logprob: -18.750015258789062
    10. '
' → logprob: -19.250015258789062

Token 118: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.010248486883938313
    2. '(i' → logprob: -4.76024866104126
    3. '(' → logprob: -6.63524866104126
    4. '()]' → logprob: -8.510248184204102
    5. '(s' → logprob: -9.760248184204102
    6. ']' → logprob: -10.260248184204102
    7. '(n' → logprob: -12.635248184204102
    8. '()' → logprob: -12.760248184204102
    9. '(v' → logprob: -13.010248184204102
    10. '(a' → logprob: -13.135248184204102

Token 119: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006666820030659437
    2. 'for' → logprob: -5.131666660308838
    3. ' for' → logprob: -7.381666660308838
    4. '()' → logprob: -9.881667137145996
    5. ' )' → logprob: -11.006667137145996
    6. 'input' → logprob: -11.006667137145996
    7. '())' → logprob: -11.131667137145996
    8. 'in' → logprob: -12.006667137145996
    9. '(x' → logprob: -12.631667137145996
    10. ')x' → logprob: -13.006667137145996

Token 120: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.429589182138443
    2. ' for' → logprob: -1.0545891523361206
    3. 'input' → logprob: -8.05458927154541
    4. '()' → logprob: -8.30458927154541
    5. ')' → logprob: -8.80458927154541
    6. 'in' → logprob: -9.17958927154541
    7. 'sys' → logprob: -10.55458927154541
    8. ' in' → logprob: -11.55458927154541
    9. '()]' → logprob: -11.55458927154541
    10. ']' → logprob: -12.42958927154541

Token 121: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1817503720521927
    2. 'input' → logprob: -2.0567502975463867
    3. ' sys' → logprob: -3.3067502975463867
    4. 'sys' → logprob: -6.431750297546387
    5. ' x' → logprob: -10.056750297546387
    6. '=sys' → logprob: -11.681750297546387
    7. 'x' → logprob: -12.056750297546387
    8. '	input' → logprob: -12.806750297546387
    9. '	sys' → logprob: -12.931750297546387
    10. ' ' → logprob: -13.181750297546387

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.049833886325359344
    2. 'input' → logprob: -3.5498337745666504
    3. 'in' → logprob: -4.79983377456665
    4. ' sys' → logprob: -5.04983377456665
    5. ' input' → logprob: -6.29983377456665
    6. 'sys' → logprob: -6.29983377456665
    7. '=sys' → logprob: -7.04983377456665
    8. '.' → logprob: -8.549834251403809
    9. '(sys' → logprob: -9.049834251403809
    10. 'import' → logprob: -9.424834251403809

Token 123: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09383172541856766
    2. 'sys' → logprob: -3.093831777572632
    3. ' input' → logprob: -3.343831777572632
    4. ' sys' → logprob: -4.718831539154053
    5. ' ' → logprob: -12.843832015991211
    6. 'stdin' → logprob: -13.343832015991211
    7. '=sys' → logprob: -13.468832015991211
    8. 'raw' → logprob: -14.343832015991211
    9. '
' → logprob: -14.468832015991211
    10. '(sys' → logprob: -14.593832015991211

Token 124: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.2246291337069124e-05
    2. '.' → logprob: -10.875021934509277
    3. '.argv' → logprob: -13.500021934509277
    4. '.stdout' → logprob: -14.000021934509277
    5. '.readline' → logprob: -14.625021934509277
    6. '.std' → logprob: -14.875021934509277
    7. 'stdin' → logprob: -15.875021934509277
    8. '.input' → logprob: -17.000022888183594
    9. '(stdin' → logprob: -17.000022888183594
    10. ' .' → logprob: -18.000022888183594

Token 125: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.625001907348633
    3. '.read' → logprob: -14.750001907348633
    4. '.stdin' → logprob: -15.250001907348633
    5. ' readline' → logprob: -16.875001907348633
    6. '.readlines' → logprob: -17.500001907348633
    7. ' .' → logprob: -17.750001907348633
    8. '().' → logprob: -18.625001907348633
    9. '.buffer' → logprob: -19.500001907348633
    10. 'read' → logprob: -20.375001907348633

Token 126: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023739055905025452
    2. '()' → logprob: -8.500237464904785
    3. '()]' → logprob: -10.375237464904785
    4. ' ().' → logprob: -13.250237464904785
    5. '()].' → logprob: -14.125237464904785
    6. '())' → logprob: -16.62523651123047
    7. '(' → logprob: -17.25023651123047
    8. ' ()' → logprob: -17.37523651123047
    9. '()][' → logprob: -18.25023651123047
    10. '().__' → logprob: -19.12523651123047

Token 127: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023302195593714714
    2. 'rstrip' → logprob: -4.02330207824707
    3. 'split' → logprob: -5.27330207824707
    4. ' strip' → logprob: -11.39830207824707
    5. '(strip' → logprob: -14.14830207824707
    6. 'read' → logprob: -15.89830207824707
    7. 'decode' → logprob: -16.39830207824707
    8. '()' → logprob: -16.52330207824707
    9. '().' → logprob: -16.77330207824707
    10. '.strip' → logprob: -16.89830207824707

Token 128: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00017016702622640878
    2. '()' → logprob: -8.75016975402832
    3. '(' → logprob: -11.87516975402832
    4. ']' → logprob: -12.50016975402832
    5. '())' → logprob: -15.12516975402832
    6. ']()' → logprob: -15.25016975402832
    7. '()]
' → logprob: -15.25016975402832
    8. ' ()' → logprob: -16.50016975402832
    9. ')]' → logprob: -16.87516975402832
    10. '()],' → logprob: -17.25016975402832

Token 129: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010734505951404572
    2. '()]' → logprob: -4.635734558105469
    3. ')]' → logprob: -7.135734558105469
    4. '])' → logprob: -9.385734558105469
    5. ']()' → logprob: -9.385734558105469
    6. ' ]' → logprob: -11.760734558105469
    7. '()' → logprob: -12.760734558105469
    8. ']
' → logprob: -13.760734558105469
    9. ')' → logprob: -13.760734558105469
    10. ']

' → logprob: -15.510734558105469

Token 130: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5461684465408325
    2. 'def' → logprob: -1.0461684465408325
    3. '
' → logprob: -3.171168327331543
    4. '\' → logprob: -4.046168327331543
    5. '\n' → logprob: -5.546168327331543
    6. 'd' → logprob: -6.546168327331543
    7. 'n' → logprob: -7.171168327331543
    8. '

' → logprob: -7.296168327331543
    9. ' ' → logprob: -7.421168327331543
    10. '' → logprob: -7.671168327331543

Token 131: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04628057777881622
    2. '#' → logprob: -3.5462806224823
    3. 'class' → logprob: -4.546280384063721
    4. 'DI' → logprob: -6.296280384063721
    5. 'D' → logprob: -6.921280384063721
    6. 'I' → logprob: -7.171280384063721
    7. 'N' → logprob: -8.296280860900879
    8. 'L' → logprob: -8.421280860900879
    9. 'DP' → logprob: -8.546280860900879
    10. 'S' → logprob: -8.671280860900879

Token 132: ' util' (ID: 3667)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022475413978099823
    2. ':' → logprob: -4.647475242614746
    3. '=' → logprob: -5.147475242614746
    4. ' def' → logprob: -6.397475242614746
    5. '()' → logprob: -6.647475242614746
    6. 's' → logprob: -6.772475242614746
    7. ' to' → logprob: -7.522475242614746
    8. ' =' → logprob: -7.647475242614746
    9. 'to' → logprob: -8.022475242614746
    10. '(' → logprob: -8.272475242614746

Token 133: 'itaire' (ID: 28335)
  Prédit: 'ility'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ility' → logprob: -0.6537637114524841
    2. 'def' → logprob: -0.9037637114524841
    3. 'it' → logprob: -4.528763771057129
    4. 'ti' → logprob: -4.653763771057129
    5. '```' → logprob: -4.778763771057129
    6. 'ity' → logprob: -4.903763771057129
    7. 'ilities' → logprob: -5.528763771057129
    8. 'util' → logprob: -5.778763771057129
    9. 'itaire' → logprob: -5.903763771057129
    10. 'tion' → logprob: -6.028763771057129

Token 134: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5966719388961792
    2. '=' → logprob: -0.9716719388961792
    3. 'def' → logprob: -3.2216720581054688
    4. ' =' → logprob: -3.7216720581054688
    5. '()' → logprob: -6.471672058105469
    6. '=lambda' → logprob: -6.471672058105469
    7. ' for' → logprob: -7.096672058105469
    8. 'for' → logprob: -7.471672058105469
    9. '():' → logprob: -7.596672058105469
    10. '(' → logprob: -7.846672058105469

Token 135: ' lire' (ID: 46082)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7117740511894226
    2. 'l' → logprob: -1.7117741107940674
    3. ' lire' → logprob: -1.9617741107940674
    4. 'read' → logprob: -2.8367741107940674
    5. 'sys' → logprob: -3.3367741107940674
    6. 'input' → logprob: -3.5867741107940674
    7. 'print' → logprob: -4.461773872375488
    8. 'r' → logprob: -4.961773872375488
    9. ' le' → logprob: -5.336773872375488
    10. ' read' → logprob: -5.586773872375488

Token 136: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.040676239877939224
    2. ' un' → logprob: -3.5406763553619385
    3. ' une' → logprob: -5.165676116943359
    4. '<|end|>' → logprob: -6.290676116943359
    5. 'un' → logprob: -7.165676116943359
    6. 'int' → logprob: -7.415676116943359
    7. 'une' → logprob: -8.16567611694336
    8. ' a' → logprob: -8.29067611694336
    9. ' la' → logprob: -8.54067611694336
    10. 'a' → logprob: -8.66567611694336

Token 137: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6223657131195068
    2. 'l' → logprob: -1.9973657131195068
    3. 'line' → logprob: -1.9973657131195068
    4. 'int' → logprob: -2.872365713119507
    5. 'single' → logprob: -2.997365713119507
    6. 'ingle' → logprob: -4.247365951538086
    7. 'ent' → logprob: -4.247365951538086
    8. '()' → logprob: -4.622365951538086
    9. 'liste' → logprob: -4.622365951538086
    10. ' ligne' → logprob: -4.997365951538086

Token 138: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001021736185066402
    2. '().' → logprob: -7.751021862030029
    3. '=' → logprob: -9.251021385192871
    4. '<|end|>' → logprob: -9.501021385192871
    5. ' ()' → logprob: -10.001021385192871
    6. '()
' → logprob: -10.126021385192871
    7. '():' → logprob: -10.251021385192871
    8. ' =' → logprob: -10.376021385192871
    9. '();' → logprob: -10.751021385192871
    10. ':' → logprob: -10.876021385192871

Token 139: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.29540926218032837
    2. 'ent' → logprob: -1.4204092025756836
    3. '<|end|>' → logprob: -5.920409202575684
    4. 'ents' → logprob: -6.045409202575684
    5. '_ent' → logprob: -6.420409202575684
    6. ' ent' → logprob: -6.545409202575684
    7. '’ent' → logprob: -6.545409202575684
    8. 'int' → logprob: -6.795409202575684
    9. 'inte' → logprob: -7.420409202575684
    10. 'ints' → logprob: -7.795409202575684

Token 140: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.002621551277115941
    2. 't' → logprob: -6.627621650695801
    3. 'ières' → logprob: -6.877621650695801
    4. 'i' → logprob: -8.6276216506958
    5. 'ier' → logprob: -10.3776216506958
    6. 'ti' → logprob: -10.5026216506958
    7. 'tiers' → logprob: -11.6276216506958
    8. 'ers' → logprob: -13.2526216506958
    9. '```' → logprob: -13.2526216506958
    10. 'gers' → logprob: -13.6276216506958

Token 141: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012390372576192021
    2. 's' → logprob: -7.626238822937012
    3. '().' → logprob: -8.626238822937012
    4. '<|end|>' → logprob: -9.126238822937012
    5. '()
' → logprob: -9.376238822937012
    6. '(' → logprob: -10.251238822937012
    7. 'from' → logprob: -10.251238822937012
    8. '()*' → logprob: -10.626238822937012
    9. ' ()' → logprob: -10.626238822937012
    10. '()<' → logprob: -10.751238822937012

Token 142: ' décr' (ID: 123041)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -1.6118347644805908
    2. 'map' → logprob: -1.7368347644805908
    3. 'return' → logprob: -2.361834764480591
    4. ' retourner' → logprob: -2.486834764480591
    5. ' map' → logprob: -2.611834764480591
    6. 'assign' → logprob: -3.611834764480591
    7. 'mapper' → logprob: -3.861834764480591
    8. 'convert' → logprob: -3.986834764480591
    9. 'mettre' → logprob: -3.986834764480591
    10. 'int' → logprob: -4.111834526062012

Token 143: 'ément' (ID: 17645)
  Prédit: 'ire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.4242324233055115
    2. 'ivre' → logprob: -1.5492324829101562
    3. 'crire' → logprob: -2.7992324829101562
    4. 'uire' → logprob: -4.299232482910156
    5. 'iver' → logprob: -5.299232482910156
    6. 'ir' → logprob: -5.299232482910156
    7. 'iv' → logprob: -5.424232482910156
    8. 'ive' → logprob: -5.549232482910156
    9. 'ivant' → logprob: -5.549232482910156
    10. 'endre' → logprob: -5.674232482910156

Token 144: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.004288522992283106
    2. 'e' → logprob: -5.504288673400879
    3. 'ent' → logprob: -9.379288673400879
    4. 'r' → logprob: -9.379288673400879
    5. 'é' → logprob: -10.629288673400879
    6. 'a' → logprob: -13.254288673400879
    7. 'eer' → logprob: -13.254288673400879
    8. '```' → logprob: -13.254288673400879
    9. 'ant' → logprob: -13.379288673400879
    10. ' er' → logprob: -13.629288673400879

Token 145: ' chacun' (ID: 52136)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8920738697052002
    2. '()' → logprob: -1.1420738697052002
    3. ' ' → logprob: -1.8920738697052002
    4. '<|end|>' → logprob: -2.8920738697052
    5. '1' → logprob: -3.2670738697052
    6. 'each' → logprob: -5.267073631286621
    7. ' them' → logprob: -5.517073631286621
    8. ' les' → logprob: -5.517073631286621
    9. ' each' → logprob: -5.767073631286621
    10. 'les' → logprob: -7.017073631286621

Token 146: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35533732175827026
    2. '()' → logprob: -1.355337381362915
    3. ' de' → logprob: -4.730337142944336
    4. ' ' → logprob: -4.730337142944336
    5. '<|end|>' → logprob: -4.980337142944336
    6. ' (' → logprob: -5.605337142944336
    7. '()]' → logprob: -6.355337142944336
    8. '
' → logprob: -6.605337142944336
    9. ' d' → logprob: -6.730337142944336
    10. 'd' → logprob: -7.105337142944336

Token 147: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024805311113595963
    2. ' ' → logprob: -6.002480506896973
    3. 'un' → logprob: -12.877480506896973
    4. '-' → logprob: -14.877480506896973
    5. ' ' → logprob: -14.877480506896973
    6. '```' → logprob: -15.127480506896973
    7. '<|end|>' → logprob: -15.627480506896973
    8. '.' → logprob: -15.752480506896973
    9. ' un' → logprob: -16.00248146057129
    10. '_' → logprob: -16.12748146057129

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.350386295001954e-05
    2. ' ' → logprob: -9.750073432922363
    3. 'un' → logprob: -11.125073432922363
    4. '```' → logprob: -16.00007438659668
    5. '-' → logprob: -16.75007438659668
    6. ' un' → logprob: -17.12507438659668
    7. '１' → logprob: -17.12507438659668
    8. '.' → logprob: -17.37507438659668
    9. 'one' → logprob: -17.75007438659668
    10. ' ' → logprob: -17.87507438659668

Token 149: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10273060202598572
    2. '()]' → logprob: -2.7277305126190186
    3. ']' → logprob: -3.9777305126190186
    4. ')' → logprob: -4.977730751037598
    5. '(' → logprob: -5.852730751037598
    6. ',' → logprob: -6.977730751037598
    7. ']()' → logprob: -7.352730751037598
    8. ' ()' → logprob: -7.602730751037598
    9. '.' → logprob: -8.102730751037598
    10. '<|end|>' → logprob: -8.352730751037598

Token 150: ' l' (ID: 305)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ''entrée' (ID: 115820)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.579373836517334
    2. ' sys' → logprob: -1.204373836517334
    3. '=sys' → logprob: -3.704373836517334
    4. 'range' → logprob: -3.829373836517334
    5. 'input' → logprob: -3.954373836517334
    6. ' input' → logprob: -4.204373836517334
    7. ' range' → logprob: -4.454373836517334
    8. 'l' → logprob: -4.829373836517334
    9. '(sys' → logprob: -4.829373836517334
    10. 'x' → logprob: -5.329373836517334

Token 152: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.07912617921829224
    2. 'standard' → logprob: -2.5791261196136475
    3. '()' → logprob: -9.329126358032227
    4. '_standard' → logprob: -9.329126358032227
    5. ' estándar' → logprob: -11.329126358032227
    6. ' стандарт' → logprob: -11.704126358032227
    7. ')' → logprob: -12.079126358032227
    8. 'def' → logprob: -12.579126358032227
    9. ' ()' → logprob: -12.704126358032227
    10. ' ' → logprob: -12.829126358032227

Token 153: '
' (ID: 198)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.28119444847106934
    2. ' =' → logprob: -2.0311944484710693
    3. '()' → logprob: -2.9061944484710693
    4. '=' → logprob: -3.7811944484710693
    5. 'DI' → logprob: -4.906194686889648
    6. ':' → logprob: -5.156194686889648
    7. 'def' → logprob: -5.781194686889648
    8. 'CI' → logprob: -6.031194686889648
    9. 'I' → logprob: -6.156194686889648
    10. '_' → logprob: -6.156194686889648

Token 154: '_L' (ID: 4258)
  Prédit: 'DI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DI' → logprob: -0.4064364433288574
    2. ' DI' → logprob: -2.2814364433288574
    3. 'D' → logprob: -2.4064364433288574
    4. 'LI' → logprob: -2.5314364433288574
    5. 'DL' → logprob: -4.031436443328857
    6. 'L' → logprob: -4.531436443328857
    7. ' LI' → logprob: -4.656436443328857
    8. 'LD' → logprob: -5.656436443328857
    9. ' DL' → logprob: -5.781436443328857
    10. 'ID' → logprob: -6.031436443328857

Token 155: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.2233183042553719e-05
    2. '=' → logprob: -12.500012397766113
    3. ' =' → logprob: -12.750012397766113
    4. 'def' → logprob: -12.875012397766113
    5. 'LI' → logprob: -14.250012397766113
    6. 'i' → logprob: -15.000012397766113
    7. 'L' → logprob: -15.250012397766113
    8. ' I' → logprob: -15.250012397766113
    9. '```' → logprob: -15.250012397766113
    10. 'IL' → logprob: -15.375012397766113

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0960192084312439
    2. ' =' → logprob: -2.5960192680358887
    3. '=lambda' → logprob: -4.096019268035889
    4. '()' → logprob: -8.22101879119873
    5. ')' → logprob: -10.22101879119873
    6. 'lambda' → logprob: -11.84601879119873
    7. '(lambda' → logprob: -12.09601879119873
    8. '(' → logprob: -12.47101879119873
    9. '=[]' → logprob: -12.47101879119873
    10. ' ' → logprob: -12.84601879119873

Token 157: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.20228730142116547
    2. ' lambda' → logprob: -1.7022873163223267
    3. 'ambda' → logprob: -7.702287197113037
    4. '(lambda' → logprob: -8.077287673950195
    5. '=lambda' → logprob: -10.077287673950195
    6. '()' → logprob: -10.327287673950195
    7. '[' → logprob: -11.452287673950195
    8. ')' → logprob: -12.327287673950195
    9. 'lam' → logprob: -12.327287673950195
    10. ' ' → logprob: -12.452287673950195

Token 158: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003575484035536647
    2. ' :' → logprob: -6.128575325012207
    3. '():' → logprob: -6.753575325012207
    4. '()' → logprob: -9.628575325012207
    5. ':[' → logprob: -9.628575325012207
    6. ':list' → logprob: -9.753575325012207
    7. '[' → logprob: -11.503575325012207
    8. 'lambda' → logprob: -11.628575325012207
    9. ' lambda' → logprob: -12.628575325012207
    10. '[]' → logprob: -13.128575325012207

Token 159: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.38854673504829407
    2. ' [' → logprob: -1.1385467052459717
    3. '[i' → logprob: -7.013546943664551
    4. '[x' → logprob: -7.388546943664551
    5. '[' → logprob: -9.26354694366455
    6. ' ' → logprob: -11.26354694366455
    7. '[list' → logprob: -11.26354694366455
    8. '[Int' → logprob: -11.88854694366455
    9. '[str' → logprob: -11.88854694366455
    10. '[len' → logprob: -12.38854694366455

Token 160: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.319370302458992e-06
    2. 'a' → logprob: -13.750005722045898
    3. ' int' → logprob: -13.750005722045898
    4. 'x' → logprob: -13.750005722045898
    5. 'i' → logprob: -14.125005722045898
    6. '(int' → logprob: -14.125005722045898
    7. '[int' → logprob: -15.125005722045898
    8. '	int' → logprob: -16.8750057220459
    9. '<int' → logprob: -17.0000057220459
    10. '
' → logprob: -17.0000057220459

Token 161: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -16.3750057220459
    4. 'x' → logprob: -17.6250057220459
    5. '(
' → logprob: -18.5000057220459
    6. '
' → logprob: -18.8750057220459
    7. '(s' → logprob: -19.0000057220459
    8. ' ' → logprob: -19.2500057220459
    9. '	x' → logprob: -19.2500057220459
    10. '```' → logprob: -19.3750057220459

Token 162: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5470991730690002
    2. '()' → logprob: -1.0470991134643555
    3. '(sys' → logprob: -3.4220991134643555
    4. '()-' → logprob: -3.7970991134643555
    5. ')' → logprob: -4.4220991134643555
    6. '(' → logprob: -6.6720991134643555
    7. ')-' → logprob: -6.9220991134643555
    8. '())' → logprob: -8.172099113464355
    9. '-' → logprob: -8.547099113464355
    10. '(system' → logprob: -8.672099113464355

Token 163: ' -' (ID: 533)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.460820734500885
    2. ' for' → logprob: -2.2108206748962402
    3. '()' → logprob: -2.2108206748962402
    4. 'for' → logprob: -2.3358206748962402
    5. '-' → logprob: -3.4608206748962402
    6. '()-' → logprob: -4.21082067489624
    7. '(x' → logprob: -5.46082067489624
    8. ')' → logprob: -7.33582067489624
    9. 'sys' → logprob: -7.33582067489624
    10. '(' → logprob: -8.335821151733398

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019307781476527452
    2. ' ' → logprob: -6.2519307136535645
    3. ' for' → logprob: -13.251931190490723
    4. 'for' → logprob: -15.001931190490723
    5. '
' → logprob: -16.876930236816406
    6. ' ' → logprob: -17.001930236816406
    7. '```' → logprob: -17.376930236816406
    8. '１' → logprob: -18.251930236816406
    9. ')' → logprob: -18.376930236816406
    10. '<|end|>' → logprob: -18.501930236816406

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. 'for' → logprob: -15.375109672546387
    4. ' for' → logprob: -15.625109672546387
    5. '
' → logprob: -17.87510871887207
    6. '```' → logprob: -18.00010871887207
    7. '<|end|>' → logprob: -18.25010871887207
    8. 'x' → logprob: -18.37510871887207
    9. '１' → logprob: -18.50010871887207
    10. 'sys' → logprob: -18.50010871887207

Token 166: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.313265860080719
    2. 'for' → logprob: -1.3132658004760742
    3. '	for' → logprob: -13.188265800476074
    4. ')' → logprob: -13.438265800476074
    5. ' ' → logprob: -14.188265800476074
    6. ' in' → logprob: -16.31326675415039
    7. ']' → logprob: -17.68826675415039
    8. 'x' → logprob: -18.68826675415039
    9. ' ' → logprob: -18.68826675415039
    10. '   ' → logprob: -18.93826675415039

Token 167: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5479639768600464
    2. ' sys' → logprob: -1.2979639768600464
    3. 'x' → logprob: -2.047964096069336
    4. 'sys' → logprob: -3.922964096069336
    5. ' ' → logprob: -12.047964096069336
    6. '=sys' → logprob: -15.422964096069336
    7. '(sys' → logprob: -15.422964096069336
    8. ' ' → logprob: -15.547964096069336
    9. '(x' → logprob: -15.547964096069336
    10. 's' → logprob: -16.047964096069336

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.093895323574543
    2. 'in' → logprob: -2.468895435333252
    3. 'sys' → logprob: -5.468895435333252
    4. ' sys' → logprob: -7.343895435333252
    5. 'x' → logprob: -9.843894958496094
    6. '=sys' → logprob: -11.093894958496094
    7. ' x' → logprob: -11.718894958496094
    8. '(sys' → logprob: -13.468894958496094
    9. ' ' → logprob: -13.843894958496094
    10. 's' → logprob: -14.218894958496094

Token 169: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01251177117228508
    2. ' sys' → logprob: -4.387511730194092
    3. '(sys' → logprob: -14.26251220703125
    4. '	sys' → logprob: -14.26251220703125
    5. ' ' → logprob: -15.26251220703125
    6. 'system' → logprob: -15.51251220703125
    7. '=sys' → logprob: -15.51251220703125
    8. '
' → logprob: -17.26251220703125
    9. '_sys' → logprob: -17.26251220703125
    10. 'range' → logprob: -17.26251220703125

Token 170: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.281485836254433e-05
    2. 'stdin' → logprob: -9.375092506408691
    3. '(stdin' → logprob: -12.875092506408691
    4. 'sys' → logprob: -13.500092506408691
    5. '.readline' → logprob: -13.625092506408691
    6. '=sys' → logprob: -13.625092506408691
    7. '.stdout' → logprob: -14.250092506408691
    8. '.' → logprob: -15.125092506408691
    9. '.sys' → logprob: -15.500092506408691
    10. '(sys' → logprob: -16.125093460083008

Token 171: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.36574100604048e-06
    2. '().' → logprob: -12.500004768371582
    3. '.' → logprob: -14.875004768371582
    4. ' readline' → logprob: -16.000003814697266
    5. '.stdin' → logprob: -16.375003814697266
    6. '.readlines' → logprob: -16.750003814697266
    7. '```' → logprob: -18.500003814697266
    8. ' .' → logprob: -18.500003814697266
    9. '()' → logprob: -18.625003814697266
    10. 'stdin' → logprob: -19.000003814697266

Token 172: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.500000953674316
    3. ' ().' → logprob: -15.375000953674316
    4. '.split' → logprob: -16.125
    5. '.readline' → logprob: -17.25
    6. '.' → logprob: -17.75
    7. ' .' → logprob: -18.25
    8. '(' → logprob: -18.25
    9. '()].' → logprob: -19.125
    10. '()).' → logprob: -19.375

Token 173: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.7610454708337784e-05
    2. 'strip' → logprob: -10.750027656555176
    3. 'read' → logprob: -12.125027656555176
    4. ' split' → logprob: -15.000027656555176
    5. 'rstrip' → logprob: -15.000027656555176
    6. 'decode' → logprob: -16.75002670288086
    7. 'spl' → logprob: -19.25002670288086
    8. '.split' → logprob: -19.75002670288086
    9. '(split' → logprob: -20.62502670288086
    10. ')' → logprob: -21.12502670288086

Token 174: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -6.408677290892228e-05
    2. '()' → logprob: -9.8750638961792
    3. ']' → logprob: -11.3750638961792
    4. ']()' → logprob: -14.2500638961792
    5. '(' → logprob: -15.2500638961792
    6. '()]
' → logprob: -16.250064849853516
    7. ' ()' → logprob: -16.625064849853516
    8. '())' → logprob: -18.125064849853516
    9. ')]' → logprob: -18.250064849853516
    10. '()],' → logprob: -18.875064849853516

Token 175: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003564383659977466
    2. ')]' → logprob: -8.000356674194336
    3. ')' → logprob: -11.125356674194336
    4. '()]' → logprob: -13.000356674194336
    5. '])' → logprob: -13.125356674194336
    6. ' ]' → logprob: -13.750356674194336
    7. ']
' → logprob: -14.375356674194336
    8. ']

' → logprob: -15.875356674194336
    9. ']()' → logprob: -16.250356674194336
    10. '']' → logprob: -17.000356674194336

Token 176: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0705869272351265
    2. '
' → logprob: -3.070586919784546
    3. '#' → logprob: -4.070587158203125
    4. 'class' → logprob: -5.945587158203125
    5. 'n' → logprob: -7.445587158203125
    6. '\' → logprob: -7.445587158203125
    7. '

' → logprob: -8.070587158203125
    8. '' → logprob: -8.695587158203125
    9. '\n' → logprob: -9.445587158203125
    10. ' 
' → logprob: -9.570587158203125

Token 177: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.013713735155761242
    2. ' solve' → logprob: -4.888713836669922
    3. ' factorial' → logprob: -5.888713836669922
    4. ' dfs' → logprob: -6.763713836669922
    5. ' bfs' → logprob: -7.263713836669922
    6. ' factor' → logprob: -7.638713836669922
    7. 'main' → logprob: -8.763713836669922
    8. '_main' → logprob: -9.138713836669922
    9. ' calculate' → logprob: -9.513713836669922
    10. ' gcd' → logprob: -9.638713836669922

Token 178: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.8444881536415778e-05
    2. ' ():' → logprob: -10.625028610229492
    3. '()' → logprob: -12.875028610229492
    4. '(' → logprob: -13.625028610229492
    5. '():
' → logprob: -15.125028610229492
    6. '(:' → logprob: -17.375028610229492
    7. '(":' → logprob: -18.250028610229492
    8. '_' → logprob: -19.250028610229492
    9. ':' → logprob: -19.250028610229492
    10. ' ()' → logprob: -19.750028610229492

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008266556076705456
    2. '    
' → logprob: -5.758266448974609
    3. '    ' → logprob: -6.008266448974609
    4. '<|end|>' → logprob: -6.883266448974609
    5. 'n' → logprob: -7.758266448974609
    6. '
' → logprob: -8.38326644897461
    7. '<|end|>' → logprob: -8.50826644897461
    8. ':' → logprob: -9.63326644897461
    9. ' ' → logprob: -9.75826644897461
    10. '#' → logprob: -9.88326644897461

Token 180: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4652946889400482
    2. ' n' → logprob: -1.0902947187423706
    3. '   ' → logprob: -3.715294599533081
    4. 'N' → logprob: -5.34029483795166
    5. ' N' → logprob: -5.71529483795166
    6. '    ' → logprob: -5.84029483795166
    7. ' ' → logprob: -8.34029483795166
    8. ' #' → logprob: -9.21529483795166
    9. '	n' → logprob: -9.34029483795166
    10. '#' → logprob: -9.59029483795166

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3561570644378662
    2. '#' → logprob: -1.3561570644378662
    3. ' #' → logprob: -4.106157302856445
    4. ')' → logprob: -4.981157302856445
    5. 'n' → logprob: -5.731157302856445
    6. ' pass' → logprob: -6.106157302856445
    7. ' ' → logprob: -6.231157302856445
    8. '    ' → logprob: -6.481157302856445
    9. ' """' → logprob: -6.606157302856445
    10. ' )' → logprob: -6.981157302856445

Token 182: ' Fonction' (ID: 189149)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7966053485870361
    2. '   ' → logprob: -1.0466053485870361
    3. ' pass' → logprob: -2.046605348587036
    4. 'Pass' → logprob: -3.796605348587036
    5. ' #' → logprob: -3.921605348587036
    6. 'pass' → logprob: -5.546605110168457
    7. ' """' → logprob: -5.671605110168457
    8. 'def' → logprob: -5.921605110168457
    9. '"""' → logprob: -5.921605110168457
    10. ' Pass' → logprob: -6.671605110168457

Token 183: ' principale' (ID: 68926)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.101728081703186
    2. '   ' → logprob: -1.851728081703186
    3. ' principale' → logprob: -2.2267279624938965
    4. ' pour' → logprob: -2.8517279624938965
    5. ' complète' → logprob: -3.1017279624938965
    6. 'def' → logprob: -3.3517279624938965
    7. ':' → logprob: -3.6017279624938965
    8. '():' → logprob: -3.6017279624938965
    9. ' à' → logprob: -3.8517279624938965
    10. '()' → logprob: -3.8517279624938965

Token 184: ' qui' (ID: 2780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7867435216903687
    2. '   ' → logprob: -0.7867435216903687
    3. ' :' → logprob: -2.661743640899658
    4. 'def' → logprob: -4.661743640899658
    5. ' pour' → logprob: -5.786743640899658
    6. '():' → logprob: -6.286743640899658
    7. ',' → logprob: -7.286743640899658
    8. ' de' → logprob: -7.411743640899658
    9. '.' → logprob: -7.536743640899658
    10. '  ' → logprob: -8.2867431640625

Token 185: ' lit' (ID: 11980)
  Prédit: ' lit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.5851233005523682
    2. ' traite' → logprob: -2.335123300552368
    3. '   ' → logprob: -2.710123300552368
    4. ' réalise' → logprob: -2.835123300552368
    5. ' g' → logprob: -3.085123300552368
    6. ' continue' → logprob: -3.835123300552368
    7. ' lance' → logprob: -4.210123062133789
    8. ':' → logprob: -4.335123062133789
    9. ' récup' → logprob: -4.585123062133789
    10. ' permet' → logprob: -4.585123062133789

Token 186: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.19612771272659302
    2. '()' → logprob: -2.6961276531219482
    3. ' la' → logprob: -2.9461276531219482
    4. ' l' → logprob: -3.5711276531219482
    5. '   ' → logprob: -4.321127891540527
    6. ' le' → logprob: -4.571127891540527
    7. ' ' → logprob: -6.571127891540527
    8. 'les' → logprob: -6.821127891540527
    9. ' des' → logprob: -7.071127891540527
    10. 'l' → logprob: -7.446127891540527

Token 187: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.49650871753692627
    2. ' données' → logprob: -1.1215087175369263
    3. 'param' → logprob: -3.8715085983276367
    4. 'don' → logprob: -4.246508598327637
    5. ' paramètres' → logprob: -4.621508598327637
    6. 'entr' → logprob: -5.246508598327637
    7. 'ent' → logprob: -6.246508598327637
    8. 'inputs' → logprob: -6.246508598327637
    9. ' entr' → logprob: -6.246508598327637
    10. 'n' → logprob: -6.371508598327637

Token 188: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.007443701382726431
    2. 'ée' → logprob: -5.382443904876709
    3. 'ees' → logprob: -6.257443904876709
    4. '   ' → logprob: -7.257443904876709
    5. 'es' → logprob: -9.13244342803955
    6. 'e' → logprob: -10.50744342803955
    7. 'é' → logprob: -11.25744342803955
    8. 'rees' → logprob: -11.75744342803955
    9. '```' → logprob: -11.75744342803955
    10. 'ies' → logprob: -11.88244342803955

Token 189: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008212411776185036
    2. ',' → logprob: -5.258212566375732
    3. ' et' → logprob: -6.008212566375732
    4. '    ' → logprob: -9.508212089538574
    5. ' ,' → logprob: -9.633212089538574
    6. ':' → logprob: -9.883212089538574
    7. '()' → logprob: -10.008212089538574
    8. 'et' → logprob: -10.258212089538574
    9. '.' → logprob: -10.383212089538574
    10. ' ' → logprob: -10.508212089538574

Token 190: ' traite' (ID: 180696)
  Prédit: ' traite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traite' → logprob: -0.3610181510448456
    2. '   ' → logprob: -1.236018180847168
    3. ' ex' → logprob: -5.861018180847168
    4. ' effect' → logprob: -6.236018180847168
    5. 'trait' → logprob: -6.486018180847168
    6. ' calc' → logprob: -6.611018180847168
    7. '    ' → logprob: -7.236018180847168
    8. ' process' → logprob: -7.361018180847168
    9. 'tra' → logprob: -7.361018180847168
    10. 'process' → logprob: -7.736018180847168

Token 191: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36065351963043213
    2. ' les' → logprob: -1.2356535196304321
    3. ' ' → logprob: -5.610653400421143
    4. ' le' → logprob: -6.110653400421143
    5. ' la' → logprob: -6.235653400421143
    6. 'les' → logprob: -7.360653400421143
    7. ' des' → logprob: -7.360653400421143
    8. '    ' → logprob: -7.610653400421143
    9. ' l' → logprob: -7.610653400421143
    10. '()' → logprob: -7.985653400421143

Token 192: ' problème' (ID: 35630)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.16095386445522308
    2. 'd' → logprob: -1.9109538793563843
    3. ' data' → logprob: -8.035953521728516
    4. 'data' → logprob: -9.285953521728516
    5. 'don' → logprob: -9.535953521728516
    6. ' donn' → logprob: -9.660953521728516
    7. ' graph' → logprob: -10.535953521728516
    8. '_d' → logprob: -10.910953521728516
    9. ' donnée' → logprob: -11.035953521728516
    10. 'graph' → logprob: -11.160953521728516

Token 193: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3738974928855896
    2. '   ' → logprob: -1.4988975524902344
    3. ' et' → logprob: -2.4988975524902344
    4. 'et' → logprob: -6.248897552490234
    5. ' ' → logprob: -6.498897552490234
    6. ' ,' → logprob: -6.748897552490234
    7. '.' → logprob: -7.498897552490234
    8. '    ' → logprob: -8.123897552490234
    9. ' and' → logprob: -8.748897552490234
    10. ')' → logprob: -8.873897552490234

Token 194: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.3110731542110443
    2. '   ' → logprob: -2.561073064804077
    3. ' imprime' → logprob: -2.811073064804077
    4. ' print' → logprob: -3.061073064804077
    5. 'print' → logprob: -3.186073064804077
    6. 'aff' → logprob: -3.686073064804077
    7. ' produit' → logprob: -4.811073303222656
    8. ' produce' → logprob: -5.936073303222656
    9. 'produ' → logprob: -6.686073303222656
    10. ' output' → logprob: -6.936073303222656

Token 195: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3849904537200928
    2. ' les' → logprob: -2.0099904537200928
    3. ' la' → logprob: -2.3849904537200928
    4. '(' → logprob: -2.8849904537200928
    5. ' le' → logprob: -4.009990692138672
    6. ' ' → logprob: -5.384990692138672
    7. '   ' → logprob: -5.509990692138672
    8. '("")' → logprob: -6.134990692138672
    9. 'les' → logprob: -6.634990692138672
    10. '<|end|>' → logprob: -7.259990692138672

Token 196: ' solution' (ID: 7578)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.039588186889886856
    2. ' résultat' → logprob: -3.664588212966919
    3. 'ré' → logprob: -5.28958797454834
    4. ' solution' → logprob: -6.16458797454834
    5. ' réponse' → logprob: -6.41458797454834
    6. 'result' → logprob: -6.41458797454834
    7. 'solution' → logprob: -6.53958797454834
    8. 'r' → logprob: -7.78958797454834
    9. ' résultats' → logprob: -8.03958797454834
    10. ' result' → logprob: -9.16458797454834

Token 197: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6401090025901794
    2. '.' → logprob: -0.7651090025901794
    3. '<|end|>' → logprob: -6.140109062194824
    4. ':' → logprob: -6.640109062194824
    5. '```' → logprob: -6.890109062194824
    6. '"""' → logprob: -7.390109062194824
    7. '<|end|>' → logprob: -7.765109062194824
    8. 'def' → logprob: -7.765109062194824
    9. '
' → logprob: -8.140109062194824
    10. '    
' → logprob: -8.515109062194824

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003754999197553843
    2. '    
' → logprob: -9.000375747680664
    3. '    ' → logprob: -9.375375747680664
    4. '#' → logprob: -9.625375747680664
    5. ')' → logprob: -10.375375747680664
    6. '<|end|>' → logprob: -11.125375747680664
    7. '
' → logprob: -11.250375747680664
    8. '"""' → logprob: -12.125375747680664
    9. '```' → logprob: -12.250375747680664
    10. 'n' → logprob: -12.250375747680664

Token 199: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3211652338504791
    2. 'n' → logprob: -1.5711652040481567
    3. '#' → logprob: -3.0711653232574463
    4. 'input' → logprob: -5.321165084838867
    5. 'pass' → logprob: -5.446165084838867
    6. ' n' → logprob: -5.446165084838867
    7. 'import' → logprob: -6.446165084838867
    8. ' pass' → logprob: -7.071165084838867
    9. 'inputs' → logprob: -7.071165084838867
    10. 'N' → logprob: -7.446165084838867

Token 200: ' problème' (ID: 35630)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5356056094169617
    2. ' nombre' → logprob: -1.6606056690216064
    3. 's' → logprob: -2.9106056690216064
    4. ' problème' → logprob: -3.4106056690216064
    5. '#' → logprob: -3.5356056690216064
    6. ' #' → logprob: -4.160605430603027
    7. ' input' → logprob: -4.410605430603027
    8. ' n' → logprob: -4.535605430603027
    9. ' reste' → logprob: -4.535605430603027
    10. 'n' → logprob: -4.660605430603027

Token 201: ' :' (ID: 712)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8446033000946045
    2. ' des' → logprob: -1.8446033000946045
    3. ' consiste' → logprob: -2.0946033000946045
    4. ':' → logprob: -3.0946033000946045
    5. 'est' → logprob: -3.0946033000946045
    6. '   ' → logprob: -3.2196033000946045
    7. ' is' → logprob: -3.7196033000946045
    8. ' ' → logprob: -3.7196033000946045
    9. 's' → logprob: -4.219603538513184
    10. ' de' → logprob: -4.344603538513184

Token 202: ' Comp' (ID: 5211)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2542760372161865
    2. ' """' → logprob: -2.3792760372161865
    3. '"""' → logprob: -2.7542760372161865
    4. ' """
' → logprob: -4.504276275634766
    5. '    ' → logprob: -5.004276275634766
    6. ' n' → logprob: -5.004276275634766
    7. '"""
' → logprob: -5.129276275634766
    8. ' ' → logprob: -5.129276275634766
    9. '#' → logprob: -5.254276275634766
    10. ' #' → logprob: -6.004276275634766

Token 203: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.6605818271636963
    2. 'uter' → logprob: -1.7855818271636963
    3. 'te' → logprob: -2.6605818271636963
    4. 'ute' → logprob: -2.7855818271636963
    5. 't' → logprob: -3.0355818271636963
    6. 'té' → logprob: -3.2855818271636963
    7. 'l' → logprob: -3.6605818271636963
    8. 'lete' → logprob: -4.035581588745117
    9. 'éter' → logprob: -4.785581588745117
    10. 'le' → logprob: -4.910581588745117

Token 204: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3419754207134247
    2. ' les' → logprob: -1.841975450515747
    3. 'le' → logprob: -2.716975450515747
    4. ' l' → logprob: -3.591975450515747
    5. '<|end|>' → logprob: -4.216975212097168
    6. 'les' → logprob: -4.966975212097168
    7. ' la' → logprob: -5.716975212097168
    8. ',' → logprob: -6.091975212097168
    9. ' ' → logprob: -6.216975212097168
    10. '_le' → logprob: -6.591975212097168

Token 205: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.02144167572259903
    2. 'nombre' → logprob: -3.896441698074341
    3. ' nombres' → logprob: -7.271441459655762
    4. 's' → logprob: -9.146441459655762
    5. '_nombre' → logprob: -10.271441459655762
    6. '_' → logprob: -11.521441459655762
    7. ' number' → logprob: -11.521441459655762
    8. 'n' → logprob: -11.771441459655762
    9. 'Nombre' → logprob: -11.896441459655762
    10. ' nomb' → logprob: -12.271441459655762

Token 206: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2152561992406845
    2. 'de' → logprob: -3.3402562141418457
    3. '_de' → logprob: -3.4652562141418457
    4. '   ' → logprob: -3.4652562141418457
    5. ' des' → logprob: -3.5902562141418457
    6. '_' → logprob: -4.340256214141846
    7. ' ' → logprob: -4.340256214141846
    8. ' d' → logprob: -4.715256214141846
    9. ' total' → logprob: -5.090256214141846
    10. '  ' → logprob: -5.215256214141846

Token 207: ' sous' (ID: 14487)
  Prédit: ' chemins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemins' → logprob: -0.6510394215583801
    2. ' façons' → logprob: -1.5260393619537354
    3. ' sous' → logprob: -1.7760393619537354
    4. 's' → logprob: -3.6510393619537354
    5. ' subse' → logprob: -4.0260396003723145
    6. ' sequences' → logprob: -4.5260396003723145
    7. ' chaînes' → logprob: -4.9010396003723145
    8. ' man' → logprob: -5.1510396003723145
    9. ' ways' → logprob: -5.7760396003723145
    10. ' chemin' → logprob: -6.0260396003723145

Token 208: '-table' (ID: 35909)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09532684832811356
    2. 'ense' → logprob: -3.7203269004821777
    3. '_' → logprob: -3.9703269004821777
    4. 'sé' → logprob: -4.345326900482178
    5. '-s' → logprob: -4.345326900482178
    6. 's' → logprob: -4.595326900482178
    7. '-se' → logprob: -6.095326900482178
    8. '_s' → logprob: -6.095326900482178
    9. '_sequences' → logprob: -6.470326900482178
    10. '-cha' → logprob: -6.595326900482178

Token 209: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.005337166599929333
    2. 'urs' → logprob: -6.380337238311768
    3. 's' → logprob: -6.880337238311768
    4. 'uvres' → logprob: -7.255337238311768
    5. 'au' → logprob: -7.505337238311768
    6. 'ttes' → logprob: -7.755337238311768
    7. 'ur' → logprob: -8.38033676147461
    8. 'x' → logprob: -9.13033676147461
    9. 'bles' → logprob: -9.50533676147461
    10. 'ux' → logprob: -9.75533676147461

Token 210: ' dans' (ID: 2671)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -1.5875139236450195
    2. ' cont' → logprob: -2.2125139236450195
    3. 'cont' → logprob: -2.2125139236450195
    4. 's' → logprob: -2.5875139236450195
    5. ' de' → logprob: -2.5875139236450195
    6. ' qui' → logprob: -2.7125139236450195
    7. ' strict' → logprob: -2.7125139236450195
    8. 'de' → logprob: -3.3375139236450195
    9. ' non' → logprob: -3.4625139236450195
    10. ' strictly' → logprob: -3.8375139236450195

Token 211: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.6967120170593262
    2. ' la' → logprob: -2.196712017059326
    3. 'la' → logprob: -2.321712017059326
    4. ' une' → logprob: -2.321712017059326
    5. ' le' → logprob: -2.446712017059326
    6. 'une' → logprob: -2.696712017059326
    7. '[]' → logprob: -2.946712017059326
    8. 'a' → logprob: -2.946712017059326
    9. 'le' → logprob: -3.071712017059326
    10. 'l' → logprob: -3.071712017059326

Token 212: ' tableau' (ID: 67053)
  Prédit: ' tableau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.09726611524820328
    2. 'table' → logprob: -2.59726619720459
    3. 'array' → logprob: -4.47226619720459
    4. 'e' → logprob: -6.47226619720459
    5. ' table' → logprob: -6.59726619720459
    6. ' array' → logprob: -6.97226619720459
    7. 'liste' → logprob: -7.72226619720459
    8. 'es' → logprob: -7.97226619720459
    9. ' tableaux' → logprob: -8.09726619720459
    10. '_' → logprob: -8.22226619720459

Token 213: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7759201526641846
    2. ' donné' → logprob: -1.2759201526641846
    3. '[]' → logprob: -1.7759201526641846
    4. 'a' → logprob: -4.0259199142456055
    5. ' A' → logprob: -4.1509199142456055
    6. 'arr' → logprob: -4.5259199142456055
    7. 'A' → logprob: -5.1509199142456055
    8. ' donnée' → logprob: -5.2759199142456055
    9. 'don' → logprob: -5.5259199142456055
    10. ',' → logprob: -5.6509199142456055

Token 214: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0511394739151
    2. 'la' → logprob: -1.0511394739151
    3. 'l' → logprob: -2.8011393547058105
    4. ' la' → logprob: -2.9261393547058105
    5. ' les' → logprob: -3.1761393547058105
    6. ' tous' → logprob: -3.3011393547058105
    7. 't' → logprob: -3.4261393547058105
    8. 'le' → logprob: -4.0511393547058105
    9. ' chaque' → logprob: -4.4261393547058105
    10. 'a' → logprob: -4.6761393547058105

Token 215: ' XOR' (ID: 147209)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -1.4415088891983032
    2. ' maximum' → logprob: -1.8165088891983032
    3. ' produit' → logprob: -1.9415088891983032
    4. 's' → logprob: -1.9415088891983032
    5. 'élé' → logprob: -2.4415087699890137
    6. 'produ' → logprob: -2.6915087699890137
    7. 'max' → logprob: -2.6915087699890137
    8. 'nombre' → logprob: -4.441508769989014
    9. 'diff' → logprob: -4.691508769989014
    10. 'minimum' → logprob: -4.941508769989014

Token 216: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3269161581993103
    2. ' est' → logprob: -2.201916217803955
    3. ' ' → logprob: -2.576916217803955
    4. ' de' → logprob: -2.826916217803955
    5. '   ' → logprob: -4.326916217803955
    6. 'des' → logprob: -5.701916217803955
    7. 'de' → logprob: -6.326916217803955
    8. ' ^=' → logprob: -6.451916217803955
    9. 's' → logprob: -6.701916217803955
    10. '_' → logprob: -6.701916217803955

Token 217: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17225781083106995
    2. ' tous' → logprob: -2.297257900238037
    3. 'tout' → logprob: -3.797257900238037
    4. 'l' → logprob: -4.797257900238037
    5. ' chaque' → logprob: -5.297257900238037
    6. 'la' → logprob: -5.547257900238037
    7. 's' → logprob: -5.797257900238037
    8. 'ces' → logprob: -6.047257900238037
    9. ' l' → logprob: -6.047257900238037
    10. ' tout' → logprob: -6.297257900238037

Token 218: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.25970011949539185
    2. 'les' → logprob: -2.009700059890747
    3. '<|end|>' → logprob: -2.759700059890747
    4. 'élé' → logprob: -4.009700298309326
    5. ' ' → logprob: -5.759700298309326
    6. ')' → logprob: -6.009700298309326
    7. 'elements' → logprob: -6.384700298309326
    8. 's' → logprob: -6.509700298309326
    9. ' éléments' → logprob: -7.009700298309326
    10. ' des' → logprob: -7.759700298309326

Token 219: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07029229402542114
    2. ' éléments' → logprob: -2.6952922344207764
    3. 'é' → logprob: -8.945292472839355
    4. 'elements' → logprob: -9.070292472839355
    5. ' elements' → logprob: -9.695292472839355
    6. 'él' → logprob: -10.570292472839355
    7. ' é' → logprob: -12.195292472839355
    8. ' élément' → logprob: -12.695292472839355
    9. ' él' → logprob: -13.195292472839355
    10. '```' → logprob: -13.445292472839355

Token 220: ' dans' (ID: 2671)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.011378959752619267
    2. '   ' → logprob: -4.886378765106201
    3. 's' → logprob: -6.636378765106201
    4. 'est' → logprob: -6.761378765106201
    5. ' du' → logprob: -7.886378765106201
    6. ' vaut' → logprob: -8.01137924194336
    7. ' ' → logprob: -9.38637924194336
    8. ' is' → logprob: -9.38637924194336
    9. ' de' → logprob: -9.76137924194336
    10. ''est' → logprob: -10.26137924194336

Token 221: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3221832513809204
    2. 'le' → logprob: -1.4471832513809204
    3. ' le' → logprob: -1.6971832513809204
    4. ' un' → logprob: -2.447183132171631
    5. 'la' → logprob: -2.697183132171631
    6. 'un' → logprob: -3.197183132171631
    7. '#' → logprob: -3.947183132171631
    8. 'les' → logprob: -4.072183132171631
    9. ' la' → logprob: -4.072183132171631
    10. ' ce' → logprob: -4.197183132171631

Token 222: ' fenêtre' (ID: 109648)
  Prédit: ' sous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.32906579971313477
    2. 's' → logprob: -1.3290657997131348
    3. 'sub' → logprob: -5.579065799713135
    4. '   ' → logprob: -5.704065799713135
    5. ' sub' → logprob: -6.579065799713135
    6. ' under' → logprob: -6.704065799713135
    7. 'interval' → logprob: -6.954065799713135
    8. '#' → logprob: -7.329065799713135
    9. 'sou' → logprob: -7.954065799713135
    10. ' tableau' → logprob: -8.079065322875977

Token 223: '
' (ID: 198)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.012187965214252472
    2. '   ' → logprob: -5.137187957763672
    3. 's' → logprob: -6.387187957763672
    4. ' ' → logprob: -7.137187957763672
    5. ' is' → logprob: -7.137187957763672
    6. ' de' → logprob: -7.262187957763672
    7. '[]' → logprob: -7.887187957763672
    8. 'est' → logprob: -8.137187957763672
    9. ' du' → logprob: -9.012187957763672
    10. '_' → logprob: -9.012187957763672

Token 224: '   ' (ID: 271)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2283567488193512
    2. '   ' → logprob: -1.9783567190170288
    3. ' de' → logprob: -2.9783568382263184
    4. '_' → logprob: -5.103356838226318
    5. ' du' → logprob: -6.228356838226318
    6. 'de' → logprob: -6.603356838226318
    7. '    ' → logprob: -6.728356838226318
    8. ' _' → logprob: -6.978356838226318
    9. ' is' → logprob: -7.478356838226318
    10. 's' → logprob: -7.728356838226318

Token 225: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.02218770794570446
    2. '   ' → logprob: -4.77218770980835
    3. ' de' → logprob: -5.27218770980835
    4. ' ' → logprob: -5.64718770980835
    5. ' du' → logprob: -7.02218770980835
    6. 's' → logprob: -7.02218770980835
    7. '_' → logprob: -7.52218770980835
    8. ' is' → logprob: -8.022187232971191
    9. 'est' (adapté à ' est') → logprob: -8.022187232971191
    10. ' n' → logprob: -8.272187232971191

Token 226: ' unique' (ID: 5746)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0459572896361351
    2. ' ' → logprob: -3.920957326889038
    3. 'égal' → logprob: -4.545957088470459
    4. ' égal' → logprob: -4.920957088470459
    5. '   ' → logprob: -6.420957088470459
    6. 'z' → logprob: -6.545957088470459
    7. 'exact' → logprob: -6.920957088470459
    8. ' zéro' → logprob: -6.920957088470459
    9. ' ég' → logprob: -8.045957565307617
    10. '  ' → logprob: -8.045957565307617

Token 227: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6732480525970459
    2. '   ' → logprob: -0.7982480525970459
    3. ',' → logprob: -4.048248291015625
    4. '.
' → logprob: -4.798248291015625
    5. ' et' → logprob: -5.923248291015625
    6. '"""
' → logprob: -6.298248291015625
    7. ')' → logprob: -6.423248291015625
    8. ' parmi' → logprob: -6.923248291015625
    9. 'def' → logprob: -7.048248291015625
    10. '"""' → logprob: -7.298248291015625

Token 228: 'auc' (ID: 11816)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044286999851465225
    2. ').' → logprob: -3.2942869663238525
    3. ' )' → logprob: -5.169287204742432
    4. ' ).' → logprob: -9.294286727905273
    5. '.' → logprob: -9.794286727905273
    6. 'et' → logprob: -10.044286727905273
    7. ' et' → logprob: -10.169286727905273
    8. ',' → logprob: -10.294286727905273
    9. '),' → logprob: -10.294286727905273
    10. '"""' → logprob: -10.544286727905273

Token 229: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.4623883366584778
    2. 'une' → logprob: -1.462388277053833
    3. 'u' → logprob: -2.837388277053833
    4. 'e' → logprob: -3.462388277053833
    5. 'n' → logprob: -3.837388277053833
    6. ''un' → logprob: -4.337388515472412
    7. ')' → logprob: -4.962388515472412
    8. 'unes' → logprob: -6.962388515472412
    9. 'que' → logprob: -7.337388515472412
    10. '```' → logprob: -7.462388515472412

Token 230: ' bits' (ID: 18189)
  Prédit: ' autre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' autre' → logprob: -0.8475585579872131
    2. ' élément' → logprob: -0.8475585579872131
    3. ' doubl' → logprob: -3.2225584983825684
    4. 'élé' → logprob: -3.5975584983825684
    5. '_' → logprob: -4.472558498382568
    6. 'e' → logprob: -4.722558498382568
    7. ' duplic' → logprob: -5.097558498382568
    8. ' duplicate' → logprob: -5.222558498382568
    9. ' element' → logprob: -5.722558498382568
    10. ' duplication' → logprob: -5.722558498382568

Token 231: ' part' (ID: 997)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.8927587866783142
    2. ' n' → logprob: -2.017758846282959
    3. ' ' → logprob: -2.392758846282959
    4. '   ' → logprob: -2.642758846282959
    5. ' à' → logprob: -2.767758846282959
    6. ')' → logprob: -2.892758846282959
    7. ' de' → logprob: -3.017758846282959
    8. '1' → logprob: -3.267758846282959
    9. '```' → logprob: -3.767758846282959
    10. ' des' → logprob: -4.642758846282959

Token 232: 'agés' (ID: 175875)
  Prédit: 'agé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agé' → logprob: -0.4422585964202881
    2. 'agés' → logprob: -1.067258596420288
    3. 'age' → logprob: -4.567258834838867
    4. 'ag' → logprob: -6.317258834838867
    5. 'agée' → logprob: -6.692258834838867
    6. 'ages' → logprob: -11.442258834838867
    7. 'ager' → logprob: -12.067258834838867
    8. '#' → logprob: -12.942258834838867
    9. 'agent' → logprob: -13.192258834838867
    10. 'a' → logprob: -13.317258834838867

Token 233: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11715854704380035
    2. ' entre' → logprob: -2.6171586513519287
    3. ' )' → logprob: -3.7421586513519287
    4. ' avec' → logprob: -5.61715841293335
    5. ' ' → logprob: -6.24215841293335
    6. ').' → logprob: -6.61715841293335
    7. '1' → logprob: -6.61715841293335
    8. ' dans' → logprob: -6.74215841293335
    9. ' set' → logprob: -7.36715841293335
    10. 's' → logprob: -7.49215841293335

Token 234: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004589622840285301
    2. '
' → logprob: -6.629589557647705
    3. '    
' → logprob: -6.754589557647705
    4. ')' → logprob: -6.754589557647705
    5. 'def' → logprob: -7.379589557647705
    6. '"""' → logprob: -9.254590034484863
    7. ')
' → logprob: -10.504590034484863
    8. '    ' → logprob: -10.629590034484863
    9. '   
' → logprob: -11.004590034484863
    10. '"' → logprob: -11.004590034484863

Token 235: ' s' (ID: 265)
  Prédit: ' signifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.763363242149353
    2. '   ' → logprob: -1.013363242149353
    3. 'def' → logprob: -3.3883633613586426
    4. ' def' → logprob: -3.5133633613586426
    5. ' implique' → logprob: -4.013363361358643
    6. ' est' → logprob: -4.388363361358643
    7. ' semble' → logprob: -4.513363361358643
    8. 'n' → logprob: -4.638363361358643
    9. ' revient' → logprob: -5.138363361358643
    10. ' n' → logprob: -5.263363361358643

Token 236: ''effect' (ID: 198544)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0090032815933228
    2. 'ur' → logprob: -2.134003162384033
    3. 'atisf' → logprob: -2.259003162384033
    4. ''agit' → logprob: -2.509003162384033
    5. 't' → logprob: -2.884003162384033
    6. ''' → logprob: -3.009003162384033
    7. ''a' → logprob: -3.509003162384033
    8. ''ap' → logprob: -3.884003162384033
    9. ''app' → logprob: -3.884003162384033
    10. 'et' → logprob: -4.134003162384033

Token 237: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0008971701608970761
    2. 'u' → logprob: -7.375897407531738
    3. 'uer' → logprob: -9.625897407531738
    4. 'ué' → logprob: -9.625897407531738
    5. 'ure' → logprob: -9.875897407531738
    6. 'uera' → logprob: -10.250897407531738
    7. 'uate' → logprob: -11.250897407531738
    8. 'uant' → logprob: -11.375897407531738
    9. 'uent' → logprob: -11.500897407531738
    10. 'uez' → logprob: -11.875897407531738

Token 238: ' grâce' (ID: 31589)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7258275747299194
    2. ' par' → logprob: -0.7258275747299194
    3. '   ' → logprob: -4.850827693939209
    4. ' ' → logprob: -5.225827693939209
    5. ' sur' → logprob: -5.600827693939209
    6. ' avec' → logprob: -5.725827693939209
    7. ' via' → logprob: -6.225827693939209
    8. ',' → logprob: -6.725827693939209
    9. ' grâce' → logprob: -6.725827693939209
    10. ' )' → logprob: -6.975827693939209

Token 239: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06643907725811005
    2. ' au' → logprob: -2.941439151763916
    3. ' aux' → logprob: -4.941439151763916
    4. 'à' → logprob: -5.816439151763916
    5. 'au' → logprob: -7.316439151763916
    6. 'aux' → logprob: -8.191438674926758
    7. '   ' → logprob: -8.316438674926758
    8. ' ' → logprob: -10.066438674926758
    9. ''à' → logprob: -10.691438674926758
    10. ' a' → logprob: -10.816438674926758

Token 240: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.22475150227546692
    2. ' deux' → logprob: -2.8497514724731445
    3. ' un' → logprob: -3.0997514724731445
    4. ' l' → logprob: -3.2247514724731445
    5. ' la' → logprob: -3.4747514724731445
    6. 'une' → logprob: -3.9747514724731445
    7. 'de' → logprob: -5.4747514724731445
    8. 'l' → logprob: -6.4747514724731445
    9. ' two' → logprob: -6.9747514724731445
    10. 'la' → logprob: -7.2247514724731445

Token 241: ' approche' (ID: 102373)
  Prédit: ' approche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approche' → logprob: -0.49364709854125977
    2. ' technique' → logprob: -2.2436470985412598
    3. ' fenêtre' → logprob: -2.6186470985412598
    4. 'fen' → logprob: -3.2436470985412598
    5. 'appro' → logprob: -3.2436470985412598
    6. '   ' → logprob: -3.9936470985412598
    7. 'de' → logprob: -4.24364709854126
    8. ' structure' → logprob: -4.61864709854126
    9. ' méthode' → logprob: -4.74364709854126
    10. ' double' → logprob: -4.86864709854126

Token 242: ' à' (ID: 1221)
  Prédit: ' gl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gl' → logprob: -0.25441378355026245
    2. 'de' → logprob: -2.2544138431549072
    3. ' de' → logprob: -3.6294138431549072
    4. ' sliding' → logprob: -3.8794138431549072
    5. ' par' → logprob: -4.004413604736328
    6. 'gl' → logprob: -4.254413604736328
    7. ' two' → logprob: -4.504413604736328
    8. ' deux' → logprob: -4.504413604736328
    9. 'par' → logprob: -5.504413604736328
    10. ' à' → logprob: -6.004413604736328

Token 243: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.08615800738334656
    2. ' deux' → logprob: -2.961158037185669
    3. 'double' → logprob: -3.961158037185669
    4. ' double' → logprob: -4.96115779876709
    5. '2' → logprob: -7.46115779876709
    6. 'gl' → logprob: -7.46115779876709
    7. ' fenêtre' → logprob: -7.58615779876709
    8. '```' → logprob: -7.71115779876709
    9. 'fen' → logprob: -7.96115779876709
    10. ' ' → logprob: -8.21115779876709

Token 244: ' poin' (ID: 37259)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.11853846162557602
    2. '_' → logprob: -2.6185383796691895
    3. '_pointer' → logprob: -3.9935383796691895
    4. 'p' → logprob: -4.3685383796691895
    5. '-p' → logprob: -6.4935383796691895
    6. 'pointer' → logprob: -6.9935383796691895
    7. ' pointers' → logprob: -7.1185383796691895
    8. '_ptr' → logprob: -7.1185383796691895
    9. ' _' → logprob: -7.2435383796691895
    10. '-pointer' → logprob: -7.2435383796691895

Token 245: 'teurs' (ID: 77729)
  Prédit: 'teurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teurs' → logprob: -0.9223302602767944
    2. 'ters' → logprob: -1.0473302602767944
    3. 't' → logprob: -1.7973302602767944
    4. 'ter' → logprob: -2.797330379486084
    5. 'teur' → logprob: -4.172330379486084
    6. 'tr' → logprob: -5.547330379486084
    7. 'trs' → logprob: -6.047330379486084
    8. '   ' → logprob: -6.797330379486084
    9. '```' → logprob: -7.922330379486084
    10. '``' → logprob: -8.672329902648926

Token 246: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5257669687271118
    2. '   ' → logprob: -1.7757669687271118
    3. '.' → logprob: -2.0257668495178223
    4. ').' → logprob: -3.2757668495178223
    5. ',' → logprob: -3.9007668495178223
    6. '
' → logprob: -4.650766849517822
    7. ' )' → logprob: -5.150766849517822
    8. ')
' → logprob: -5.150766849517822
    9. '"""
' → logprob: -5.150766849517822
    10. ' ' → logprob: -5.650766849517822

Token 247: 'sl' (ID: 4500)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028844980522990227
    2. ' )' → logprob: -4.278844833374023
    3. 'de' → logprob: -5.528844833374023
    4. ').' → logprob: -5.653844833374023
    5. ' deux' → logprob: -6.778844833374023
    6. ' la' → logprob: -6.778844833374023
    7. '),' → logprob: -7.278844833374023
    8. '   ' → logprob: -7.278844833374023
    9. ',' → logprob: -8.028844833374023
    10. 'sl' → logprob: -8.528844833374023

Token 248: 'iding' (ID: 7069)
  Prédit: 'iding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iding' → logprob: -0.01644182577729225
    2. 'ide' → logprob: -4.766441822052002
    3. 'ice' → logprob: -5.141441822052002
    4. 'id' → logprob: -7.266441822052002
    5. 'ider' → logprob: -8.01644229888916
    6. 'icing' → logprob: -8.39144229888916
    7. 'i' → logprob: -9.26644229888916
    8. ')' → logprob: -10.26644229888916
    9. ']' → logprob: -10.45394229888916
    10. 'idings' → logprob: -10.45394229888916

Token 249: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.5761257410049438
    2. ' window' → logprob: -1.0761257410049438
    3. '_window' → logprob: -2.4511256217956543
    4. ')' → logprob: -5.576125621795654
    5. '_' → logprob: -5.701125621795654
    6. '-window' → logprob: -5.951125621795654
    7. ' windows' → logprob: -8.451126098632812
    8. 'windows' → logprob: -8.576126098632812
    9. ' )' → logprob: -8.951126098632812
    10. '_windows' → logprob: -9.201126098632812

Token 250: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0814300999045372
    2. ').' → logprob: -3.206430196762085
    3. ' )' → logprob: -3.706430196762085
    4. '):' → logprob: -4.831429958343506
    5. '):
' → logprob: -6.581429958343506
    6. ' technique' → logprob: -6.706429958343506
    7. ' ).' → logprob: -7.331429958343506
    8. '   ' → logprob: -7.456429958343506
    9. ')
' → logprob: -7.581429958343506
    10. '),' → logprob: -8.956430435180664

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001564853941090405
    2. '    
' → logprob: -7.501564979553223
    3. '"""' → logprob: -7.501564979553223
    4. '
' → logprob: -8.001564979553223
    5. ')' → logprob: -9.876564979553223
    6. 'def' → logprob: -10.126564979553223
    7. '"""
' → logprob: -11.376564979553223
    8. '```' → logprob: -12.126564979553223
    9. '"' → logprob: -12.251564979553223
    10. '    ' → logprob: -12.626564979553223

Token 252: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00934471096843481
    2. '
' → logprob: -5.134344577789307
    3. '"""' → logprob: -6.509344577789307
    4. '    
' → logprob: -6.884344577789307
    5. ')' → logprob: -7.509344577789307
    6. 'def' → logprob: -8.759345054626465
    7. '```' → logprob: -10.009345054626465
    8. '"""
' → logprob: -10.259345054626465
    9. '    ' → logprob: -10.259345054626465
    10. '"' → logprob: -11.384345054626465

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024989593657664955
    2. 'n' → logprob: -8.375249862670898
    3. '    ' → logprob: -11.875249862670898
    4. '    
' → logprob: -12.500249862670898
    5. 'def' → logprob: -12.625249862670898
    6. ' n' → logprob: -13.250249862670898
    7. 's' → logprob: -13.625249862670898
    8. '
' → logprob: -14.250249862670898
    9. 'a' → logprob: -14.875249862670898
    10. 'import' → logprob: -15.125249862670898

Token 254: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39357954263687134
    2. 'N' → logprob: -1.1435794830322266
    3. '   ' → logprob: -5.018579483032227
    4. '#' (adapté à ' #') → logprob: -9.893579483032227
    5. ' n' → logprob: -11.768579483032227
    6. ' N' → logprob: -12.893579483032227
    7. '	n' → logprob: -12.893579483032227
    8. '
' → logprob: -13.018579483032227
    9. '    
' → logprob: -13.768579483032227
    10. ' ' → logprob: -14.143579483032227

Token 255: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3744504153728485
    2. 'N' → logprob: -1.249450445175171
    3. '   ' → logprob: -3.749450445175171
    4. ' n' → logprob: -6.499450206756592
    5. ' N' → logprob: -8.24945068359375
    6. '
' → logprob: -9.62445068359375
    7. 'input' → logprob: -9.62445068359375
    8. 'def' → logprob: -9.87445068359375
    9. '#' → logprob: -10.12445068359375
    10. 'import' → logprob: -10.37445068359375

Token 256: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3964669406414032
    2. 'n' → logprob: -1.1464669704437256
    3. '()' → logprob: -5.3964667320251465
    4. ' n' → logprob: -5.6464667320251465
    5. '(n' → logprob: -7.0214667320251465
    6. 'N' → logprob: -8.146467208862305
    7. ' N' → logprob: -9.271467208862305
    8. '	n' → logprob: -9.771467208862305
    9. ' =' → logprob: -10.896467208862305
    10. '  ' → logprob: -11.146467208862305

Token 257: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.022274678573012352
    2. ' n' → logprob: -4.022274494171143
    3. '()' → logprob: -6.022274494171143
    4. 'N' → logprob: -7.022274494171143
    5. ' la' → logprob: -8.1472749710083
    6. ' N' → logprob: -9.1472749710083
    7. '   ' → logprob: -9.3972749710083
    8. 'l' → logprob: -9.5222749710083
    9. 't' → logprob: -9.6472749710083
    10. '(n' → logprob: -10.0222749710083

Token 258: ' taille' (ID: 41644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005142203997820616
    2. 'nombre' → logprob: -5.5051422119140625
    3. ' n' → logprob: -7.1301422119140625
    4. 'N' → logprob: -10.130142211914062
    5. '_n' → logprob: -10.255142211914062
    6. ' nombre' → logprob: -10.380142211914062
    7. 'int' → logprob: -10.380142211914062
    8. 'nb' → logprob: -10.880142211914062
    9. 'ent' → logprob: -10.880142211914062
    10. '   ' → logprob: -11.380142211914062

Token 259: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33771637082099915
    2. '   ' → logprob: -1.7127163410186768
    3. '()' → logprob: -2.5877163410186768
    4. '(n' → logprob: -4.462716579437256
    5. ' =' → logprob: -4.962716579437256
    6. ' n' → logprob: -4.962716579437256
    7. 'N' → logprob: -6.337716579437256
    8. 'de' → logprob: -6.962716579437256
    9. ',' → logprob: -7.212716579437256
    10. '_n' → logprob: -8.212716102600098

Token 260: ' tableau' (ID: 67053)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.45884305238723755
    2. ' tableau' → logprob: -1.3338429927825928
    3. 'n' → logprob: -2.4588429927825928
    4. 't' → logprob: -4.458843231201172
    5. 'array' → logprob: -5.333843231201172
    6. ' table' → logprob: -7.208843231201172
    7. 'tab' → logprob: -7.833843231201172
    8. ' n' → logprob: -8.083843231201172
    9. 'N' → logprob: -8.083843231201172
    10. ' array' → logprob: -8.208843231201172

Token 261: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35499462485313416
    2. '   ' → logprob: -1.3549946546554565
    3. '(n' → logprob: -4.354994773864746
    4. ' =' → logprob: -4.729994773864746
    5. '()' → logprob: -5.354994773864746
    6. ',' → logprob: -5.479994773864746
    7. '
' → logprob: -5.604994773864746
    8. ' n' → logprob: -5.604994773864746
    9. 'N' → logprob: -7.229994773864746
    10. ':' → logprob: -8.229994773864746

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16290029883384705
    2. 'n' → logprob: -1.9129003286361694
    3. '(n' → logprob: -6.287900447845459
    4. ' =' → logprob: -8.5378999710083
    5. ' n' → logprob: -8.5378999710083
    6. '  ' → logprob: -9.5378999710083
    7. '    
' → logprob: -9.7878999710083
    8. ',' → logprob: -9.9128999710083
    9. '    ' → logprob: -9.9128999710083
    10. '[n' → logprob: -10.4128999710083

Token 263: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11410363763570786
    2. 'N' (adapté à ' N') → logprob: -2.9891035556793213
    3. '   ' → logprob: -2.9891035556793213
    4. ' n' → logprob: -4.9891037940979
    5. ' N' → logprob: -8.114103317260742
    6. '	n' → logprob: -10.114103317260742
    7. ' ' → logprob: -12.239103317260742
    8. '
' → logprob: -12.614103317260742
    9. '    
' → logprob: -12.989103317260742
    10. '_n' → logprob: -13.364103317260742

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013154229149222374
    2. ' =' → logprob: -4.388154029846191
    3. ',' → logprob: -7.388154029846191
    4. '=int' → logprob: -10.638154029846191
    5. '=sys' → logprob: -14.888154029846191
    6. ')' → logprob: -15.013154029846191
    7. '=input' → logprob: -15.138154029846191
    8. '=N' → logprob: -15.513154029846191
    9. '=

' → logprob: -16.013154983520508
    10. ')=' → logprob: -16.138154983520508

Token 265: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3933594822883606
    2. ' int' → logprob: -1.2683594226837158
    3. 'LI' → logprob: -3.268359422683716
    4. ' LI' → logprob: -5.143359661102295
    5. 'INT' → logprob: -11.893359184265137
    6. 'L' → logprob: -13.393359184265137
    7. ' ' → logprob: -13.393359184265137
    8. ' L' → logprob: -14.143359184265137
    9. '	int' → logprob: -14.143359184265137
    10. '(int' → logprob: -14.768359184265137

Token 266: '(input' (ID: 10054)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0004815545107703656
    2. '(' → logprob: -8.250481605529785
    3. 'sys' → logprob: -8.500481605529785
    4. '(input' → logprob: -11.500481605529785
    5. '()' → logprob: -12.500481605529785
    6. '=sys' → logprob: -13.500481605529785
    7. ' sys' → logprob: -14.125481605529785
    8. 'input' → logprob: -14.375481605529785
    9. '	sys' → logprob: -16.25048065185547
    10. '(Sys' → logprob: -16.50048065185547

Token 267: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002509070560336113
    2. '()' → logprob: -6.002509117126465
    3. '().' → logprob: -11.127509117126465
    4. ')' → logprob: -11.127509117126465
    5. ' ())' → logprob: -13.377509117126465
    6. '())
' → logprob: -13.627509117126465
    7. '();)' → logprob: -14.752509117126465
    8. '(' → logprob: -14.752509117126465
    9. '()),' → logprob: -16.62750816345215
    10. '()
' → logprob: -16.62750816345215

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013295523822307587
    2. '    
' → logprob: -4.638295650482178
    3. 'array' → logprob: -6.263295650482178
    4. '    ' → logprob: -7.888295650482178
    5. 'a' → logprob: -8.13829517364502
    6. ')' → logprob: -8.63829517364502
    7. 'arr' → logprob: -8.76329517364502
    8. '<|end|>' → logprob: -9.01329517364502
    9. ' array' → logprob: -9.51329517364502
    10. 'A' → logprob: -9.76329517364502

Token 269: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.057935092598199844
    2. 'arr' → logprob: -3.1829349994659424
    3. 'a' → logprob: -4.6829352378845215
    4. ' A' → logprob: -5.9329352378845215
    5. '   ' → logprob: -6.0579352378845215
    6. '#' (adapté à ' #') → logprob: -8.682934761047363
    7. 'data' → logprob: -8.807934761047363
    8. ' arr' → logprob: -9.057934761047363
    9. 'S' → logprob: -10.057934761047363
    10. 'lst' → logprob: -10.432934761047363

Token 270: ' Lecture' (ID: 106534)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1888764351606369
    2. 'arr' → logprob: -1.9388763904571533
    3. 'a' → logprob: -3.8138763904571533
    4. ' A' → logprob: -5.313876628875732
    5. ' arr' → logprob: -7.688876628875732
    6. 'data' → logprob: -8.188876152038574
    7. 'lst' → logprob: -8.938876152038574
    8. '#' → logprob: -9.688876152038574
    9. ' a' → logprob: -9.688876152038574
    10. '   ' → logprob: -9.938876152038574

Token 271: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4120038151741028
    2. '   ' → logprob: -1.162003755569458
    3. ' des' → logprob: -4.912003993988037
    4. '[]' → logprob: -5.037003993988037
    5. ' de' → logprob: -5.662003993988037
    6. ' du' → logprob: -6.662003993988037
    7. '(' → logprob: -7.287003993988037
    8. '[' → logprob: -7.412003993988037
    9. 'des' → logprob: -7.412003993988037
    10. ' of' → logprob: -7.912003993988037

Token 272: ' tableau' (ID: 67053)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8241219520568848
    2. 'array' → logprob: -1.4491219520568848
    3. ' tableau' → logprob: -2.0741219520568848
    4. 'a' → logprob: -2.5741219520568848
    5. 'A' → logprob: -3.0741219520568848
    6. 'table' → logprob: -3.4491219520568848
    7. 't' → logprob: -3.6991219520568848
    8. ' array' → logprob: -5.449121952056885
    9. 'tab' → logprob: -5.449121952056885
    10. 'lst' → logprob: -5.699121952056885

Token 273: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46626898646354675
    2. 'A' → logprob: -1.4662690162658691
    3. 'arr' → logprob: -2.716269016265869
    4. 'a' → logprob: -3.341269016265869
    5. ' A' → logprob: -4.091269016265869
    6. ' =' → logprob: -4.841269016265869
    7. 'data' → logprob: -5.716269016265869
    8. 's' → logprob: -5.716269016265869
    9. '    
' → logprob: -5.841269016265869
    10. 't' → logprob: -6.966269016265869

Token 274: ''entrée' (ID: 115820)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.1321650743484497
    2. 'e' → logprob: -1.2571650743484497
    3. 'onnées' → logprob: -1.8821650743484497
    4. ''ent' → logprob: -2.25716495513916
    5. ''entrée' → logprob: -2.63216495513916
    6. 'ent' → logprob: -4.25716495513916
    7. 'élé' → logprob: -4.63216495513916
    8. ''' → logprob: -4.88216495513916
    9. 'a' → logprob: -5.13216495513916
    10. 'ans' → logprob: -5.75716495513916

Token 275: ' suivi' (ID: 60370)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011096746660768986
    2. 'A' → logprob: -5.136096954345703
    3. 'a' → logprob: -5.886096954345703
    4. 'arr' → logprob: -6.761096954345703
    5. ' A' → logprob: -7.386096954345703
    6. 'data' → logprob: -9.261096954345703
    7. ',' → logprob: -9.511096954345703
    8. '    
' → logprob: -9.511096954345703
    9. 'array' → logprob: -9.761096954345703
    10. 's' → logprob: -9.761096954345703

Token 276: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32644596695899963
    2. '   ' → logprob: -2.326446056365967
    3. 'de' → logprob: -2.701446056365967
    4. ' =' → logprob: -3.451446056365967
    5. 'd' → logprob: -3.576446056365967
    6. ' de' → logprob: -4.701446056365967
    7. '()' → logprob: -5.326446056365967
    8. 'du' → logprob: -5.451446056365967
    9. ')' → logprob: -5.576446056365967
    10. 's' → logprob: -5.701446056365967

Token 277: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14305627346038818
    2. 'une' → logprob: -3.6430563926696777
    3. ''une' → logprob: -3.8930563926696777
    4. 'es' → logprob: -4.018056392669678
    5. '_' → logprob: -4.643056392669678
    6. ' une' → logprob: -4.768056392669678
    7. 'a' → logprob: -4.893056392669678
    8. ' la' → logprob: -4.893056392669678
    9. '[' → logprob: -5.018056392669678
    10. '[]' → logprob: -5.893056392669678

Token 278: ' ajout' (ID: 64605)
  Prédit: ' LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' LI' → logprob: -1.416121006011963
    2. '_' → logprob: -1.541121006011963
    3. 'LI' → logprob: -1.666121006011963
    4. '[' → logprob: -3.041121006011963
    5. ' tableau' → logprob: -3.291121006011963
    6. ':' → logprob: -3.541121006011963
    7. '_L' → logprob: -3.541121006011963
    8. 'e' → logprob: -4.166121006011963
    9. ' espace' → logprob: -4.416121006011963
    10. '=' → logprob: -4.416121006011963

Token 279: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3437345623970032
    2. '(' → logprob: -1.9687345027923584
    3. 'd' → logprob: -3.0937345027923584
    4. ' de' → logprob: -3.2187345027923584
    5. '[' → logprob: -4.4687347412109375
    6. '()' → logprob: -4.4687347412109375
    7. '[:]' → logprob: -4.8437347412109375
    8. 'de' → logprob: -4.9687347412109375
    9. '_' → logprob: -4.9687347412109375
    10. '   ' → logprob: -5.3437347412109375

Token 280: ''une' (ID: 13337)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6542791128158569
    2. ' [' → logprob: -1.029279112815857
    3. 'e' → logprob: -3.6542792320251465
    4. ' ' → logprob: -4.0292792320251465
    5. 'une' → logprob: -4.5292792320251465
    6. 'a' → logprob: -4.5292792320251465
    7. ' une' → logprob: -4.6542792320251465
    8. ' un' → logprob: -4.6542792320251465
    9. '0' → logprob: -5.0292792320251465
    10. '[]' → logprob: -5.1542792320251465

Token 281: ' valeur' (ID: 41664)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24254722893238068
    2. '0' → logprob: -2.7425472736358643
    3. ' [' → logprob: -3.1175472736358643
    4. 'space' → logprob: -3.7425472736358643
    5. ' ligne' → logprob: -3.9925472736358643
    6. 'ligne' → logprob: -4.117547035217285
    7. ' ' → logprob: -4.492547035217285
    8. ' espace' → logprob: -5.117547035217285
    9. '_' → logprob: -5.492547035217285
    10. ' space' → logprob: -5.492547035217285

Token 282: ' sent' (ID: 3860)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07739272713661194
    2. '_' → logprob: -3.202392816543579
    3. '[' → logprob: -4.202392578125
    4. '0' → logprob: -5.452392578125
    5. '()' → logprob: -5.952392578125
    6. 'de' → logprob: -6.077392578125
    7. '(
' → logprob: -6.327392578125
    8. ' de' → logprob: -6.577392578125
    9. '([' → logprob: -6.827392578125
    10. '=' → logprob: -7.077392578125

Token 283: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.29855111241340637
    2. 'inel' → logprob: -1.423551082611084
    3. 'ry' → logprob: -5.298551082611084
    4. '```' → logprob: -5.673551082611084
    5. '

' → logprob: -6.423551082611084
    6. '"' → logprob: -6.798551082611084
    7. '``' → logprob: -7.048551082611084
    8. 'nel' → logprob: -7.173551082611084
    9. '
' → logprob: -7.423551082611084
    10. 'inal' → logprob: -7.548551082611084

Token 284: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.3136087656021118
    2. 'elle' → logprob: -1.4386087656021118
    3. 'ele' → logprob: -4.063608646392822
    4. 'in' → logprob: -5.313608646392822
    5. 'e' → logprob: -5.563608646392822
    6. 'nel' → logprob: -6.438608646392822
    7. '```' → logprob: -6.688608646392822
    8. 'nelle' → logprob: -7.313608646392822
    9. 'iel' → logprob: -7.313608646392822
    10. 'le' → logprob: -8.06360912322998

Token 285: ' (-' (ID: 21382)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28829142451286316
    2. '()' → logprob: -2.1632914543151855
    3. '   ' → logprob: -2.4132914543151855
    4. '(
' → logprob: -4.5382914543151855
    5. ' =' → logprob: -4.6632914543151855
    6. ',' → logprob: -4.7882914543151855
    7. 'a' → logprob: -5.2882914543151855
    8. ' (' → logprob: -5.7882914543151855
    9. '(arr' → logprob: -6.4132914543151855
    10. '([' → logprob: -6.6632914543151855

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.375538163818419e-05
    2. 'INF' → logprob: -9.875083923339844
    3. ' ' → logprob: -10.500083923339844
    4. ')' → logprob: -13.250083923339844
    5. 'inf' → logprob: -13.500083923339844
    6. '2' → logprob: -14.625083923339844
    7. '   ' → logprob: -15.375083923339844
    8. '=' → logprob: -15.500083923339844
    9. ' INF' → logprob: -16.250083923339844
    10. 'Inf' → logprob: -16.500083923339844

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011176910251379013
    2. ' )' → logprob: -4.636177062988281
    3. '   ' → logprob: -6.886177062988281
    4. ')
' → logprob: -8.511177062988281
    5. ',' → logprob: -9.136177062988281
    6. '])' → logprob: -11.261177062988281
    7. '`)' → logprob: -11.386177062988281
    8. '))' → logprob: -11.886177062988281
    9. ')])' → logprob: -12.136177062988281
    10. ' )
' → logprob: -12.386177062988281

Token 288: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6789810657501221
    2. ',' → logprob: -0.8039810657501221
    3. ' =' → logprob: -4.178980827331543
    4. 'a' → logprob: -4.928980827331543
    5. 'arr' → logprob: -5.303980827331543
    6. ')' → logprob: -5.428980827331543
    7. 's' → logprob: -5.803980827331543
    8. ' ,' → logprob: -6.428980827331543
    9. '    
' → logprob: -6.678980827331543
    10. ',
' → logprob: -6.803980827331543

Token 289: ' éviter' (ID: 64013)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.026159552857279778
    2. 'simpl' → logprob: -3.9011595249176025
    3. ' simpl' → logprob: -6.401159763336182
    4. 'fac' → logprob: -6.401159763336182
    5. ' mar' → logprob: -7.401159763336182
    6. ' facil' → logprob: -8.026159286499023
    7. ' éviter' → logprob: -8.151159286499023
    8. 'mar' → logprob: -8.651159286499023
    9. ' gérer' → logprob: -8.901159286499023
    10. ' garantir' → logprob: -9.276159286499023

Token 290: ' les' (ID: 1341)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -1.0188137292861938
    2. 'index' → logprob: -1.2688137292861938
    3. ' une' → logprob: -3.0188136100769043
    4. '   ' → logprob: -3.2688136100769043
    5. ' des' → logprob: -3.3938136100769043
    6. ' un' → logprob: -3.3938136100769043
    7. ' l' → logprob: -3.3938136100769043
    8. ' les' → logprob: -3.3938136100769043
    9. ' ' → logprob: -3.3938136100769043
    10. ' ' → logprob: -4.268813610076904

Token 291: ' dépasse' (ID: 165701)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6377105116844177
    2. 'Index' → logprob: -1.6377105712890625
    3. ' index' → logprob: -1.7627105712890625
    4. ' erreurs' → logprob: -2.8877105712890625
    5. ' Index' → logprob: -4.2627105712890625
    6. ' problèmes' → logprob: -4.6377105712890625
    7. ' conflits' → logprob: -5.1377105712890625
    8. 'ind' → logprob: -5.8877105712890625
    9. 'conf' → logprob: -6.1377105712890625
    10. 'out' → logprob: -6.2627105712890625

Token 292: 'ments' (ID: 1626)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.028091398999094963
    2. 'ments' → logprob: -3.6530914306640625
    3. 'm' → logprob: -6.5280914306640625
    4. 'mentation' → logprob: -8.778091430664062
    5. '```' → logprob: -10.403091430664062
    6. '_' → logprob: -10.528091430664062
    7. 'r' → logprob: -10.653091430664062
    8. 'nt' → logprob: -11.278091430664062
    9. 'd' → logprob: -11.403091430664062
    10. '   ' → logprob: -11.653091430664062

Token 293: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1640787273645401
    2. ',' → logprob: -2.914078712463379
    3. ' de' → logprob: -3.664078712463379
    4. '<|end|>' → logprob: -4.164078712463379
    5. ' ' → logprob: -4.414078712463379
    6. ')' → logprob: -4.539078712463379
    7. 's' → logprob: -5.289078712463379
    8. '.' → logprob: -5.289078712463379
    9. '    
' → logprob: -5.664078712463379
    10. ' ,' → logprob: -5.664078712463379

Token 294: ''ind' (ID: 82245)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.17831705510616302
    2. 'indice' → logprob: -2.178317070007324
    3. ' index' → logprob: -3.678317070007324
    4. 'l' → logprob: -4.303317070007324
    5. 'range' → logprob: -6.553317070007324
    6. 'indices' → logprob: -6.553317070007324
    7. ' l' → logprob: -7.053317070007324
    8. 'ind' → logprob: -7.053317070007324
    9. 'liste' → logprob: -7.178317070007324
    10. ' ' → logprob: -7.178317070007324

Token 295: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07912430167198181
    2. 'ice' → logprob: -2.5791242122650146
    3. 'ices' → logprob: -9.329124450683594
    4. 'dex' → logprob: -9.454124450683594
    5. 'exe' → logprob: -10.454124450683594
    6. 'ent' → logprob: -11.829124450683594
    7. 'é' → logprob: -12.454124450683594
    8. 'exion' → logprob: -12.454124450683594
    9. 'exp' → logprob: -12.704124450683594
    10. 'index' → logprob: -13.204124450683594

Token 296: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015722867101430893
    2. ',' → logprob: -5.015722751617432
    3. ')' → logprob: -5.765722751617432
    4. 'a' → logprob: -6.015722751617432
    5. '    
' → logprob: -7.140722751617432
    6. 's' → logprob: -8.26572322845459
    7. 'input' → logprob: -8.51572322845459
    8. 'arr' → logprob: -8.51572322845459
    9. '    ' → logprob: -8.64072322845459
    10. 'array' → logprob: -8.64072322845459

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01758974976837635
    2. 'arr' → logprob: -4.392589569091797
    3. 'A' → logprob: -6.017589569091797
    4. 'a' → logprob: -6.392589569091797
    5. '    
' → logprob: -7.517589569091797
    6. ' arr' → logprob: -9.142589569091797
    7. ' A' → logprob: -9.142589569091797
    8. 'array' → logprob: -9.767589569091797
    9. '    ' → logprob: -10.142589569091797
    10. '	arr' → logprob: -10.642589569091797

Token 298: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.1587051898241043
    2. ' A' → logprob: -2.033705234527588
    3. 'arr' → logprob: -5.033705234527588
    4. 'a' → logprob: -5.283705234527588
    5. '   ' → logprob: -6.033705234527588
    6. ' arr' → logprob: -7.283705234527588
    7. ' a' → logprob: -7.283705234527588
    8. 'data' → logprob: -8.28370475769043
    9. ' data' → logprob: -8.90870475769043
    10. 'lst' → logprob: -10.15870475769043

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25195789337158203
    2. '=' → logprob: -1.501957893371582
    3. ',' → logprob: -11.251957893371582
    4. ' =[' → logprob: -11.876957893371582
    5. ' ' → logprob: -12.376957893371582
    6. ')' → logprob: -14.001957893371582
    7. ' ' → logprob: -14.251957893371582
    8. '=[' → logprob: -14.626957893371582
    9. '=input' → logprob: -14.626957893371582
    10. '[' → logprob: -14.876957893371582

Token 300: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.4476098120212555
    2. ' list' → logprob: -1.947609782218933
    3. 'list' → logprob: -2.0726099014282227
    4. ' LI' → logprob: -2.4476099014282227
    5. '[' → logprob: -5.697609901428223
    6. ' [' → logprob: -6.447609901428223
    7. '[L' → logprob: -7.947609901428223
    8. '_list' → logprob: -8.697609901428223
    9. 'li' → logprob: -9.572609901428223
    10. 'List' → logprob: -9.697609901428223

Token 301: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014877199428156018
    2. '()+' → logprob: -6.626487731933594
    3. '()
' → logprob: -9.001487731933594
    4. ' ()' → logprob: -10.626487731933594
    5. '+' → logprob: -12.376487731933594
    6. '()

' → logprob: -13.251487731933594
    7. '(' → logprob: -13.376487731933594
    8. '())' → logprob: -13.876487731933594
    9. '()+"' → logprob: -14.001487731933594
    10. '()
' → logprob: -14.126487731933594

Token 302: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15161165595054626
    2. '
' → logprob: -2.901611566543579
    3. '    
' → logprob: -3.776611566543579
    4. ' +' → logprob: -4.151611804962158
    5. '+' → logprob: -4.401611804962158
    6. ')' → logprob: -4.776611804962158
    7. 'A' → logprob: -5.026611804962158
    8. '[' → logprob: -5.276611804962158
    9. ' 
' → logprob: -5.776611804962158
    10. '<|end|>' → logprob: -6.651611804962158

Token 303: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.001083302078768611
    2. ' [-' → logprob: -6.8760833740234375
    3. '[' → logprob: -10.001083374023438
    4. ' ' → logprob: -13.251083374023438
    5. '([-' → logprob: -13.251083374023438
    6. '[:-' → logprob: -14.126083374023438
    7. ' ' → logprob: -15.251083374023438
    8. '   ' → logprob: -15.876083374023438
    9. '  ' → logprob: -16.001083374023438
    10. '[_' → logprob: -16.251083374023438

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.625011444091797
    3. '2' → logprob: -13.125011444091797
    4. '<|end|>' → logprob: -17.062511444091797
    5. 'inf' → logprob: -17.562511444091797
    6. ')' → logprob: -17.687511444091797
    7. 'INF' → logprob: -18.000011444091797
    8. ']' → logprob: -18.125011444091797
    9. '```' → logprob: -18.187511444091797
    10. '۱' → logprob: -18.187511444091797

Token 305: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008266602526418865
    2. ' ]' → logprob: -7.125826835632324
    3. ')' → logprob: -11.125826835632324
    4. '])' → logprob: -13.000826835632324
    5. '   ' → logprob: -13.500826835632324
    6. ')]' → logprob: -13.500826835632324
    7. ']
' → logprob: -14.000826835632324
    8. ']

' → logprob: -14.750826835632324
    9. ',' → logprob: -16.000825881958008
    10. '[' → logprob: -16.125825881958008

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39104971289634705
    2. '
' → logprob: -1.3910497426986694
    3. '    
' → logprob: -2.64104962348938
    4. '  
' → logprob: -7.266049861907959
    5. '   
' → logprob: -7.266049861907959
    6. ' 
' → logprob: -7.891049861907959
    7. '  ' → logprob: -8.2660493850708
    8. ',' → logprob: -8.7660493850708
    9. '<|end|>' → logprob: -8.8910493850708
    10. 's' → logprob: -8.8910493850708

Token 307: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2269056737422943
    2. 'xor' → logprob: -1.9769057035446167
    3. 'X' → logprob: -4.351905822753906
    4. 'bit' → logprob: -4.476905822753906
    5. '
' → logprob: -4.726905822753906
    6. 'x' → logprob: -4.976905822753906
    7. 'freq' → logprob: -5.851905822753906
    8. 'used' → logprob: -6.101905822753906
    9. ' xor' → logprob: -6.226905822753906
    10. 'bits' → logprob: -6.351905822753906

Token 308: ' Initialise' (ID: 179601)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.2982071042060852
    2. 'bit' → logprob: -2.9232070446014404
    3. '   ' → logprob: -3.6732070446014404
    4. '#' → logprob: -3.7982070446014404
    5. 'left' → logprob: -4.0482072830200195
    6. 'j' → logprob: -4.0482072830200195
    7. 'x' → logprob: -4.5482072830200195
    8. 'X' → logprob: -4.6732072830200195
    9. 'freq' → logprob: -4.9232072830200195
    10. 'ans' → logprob: -4.9232072830200195

Token 309: ' le' (ID: 505)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.9052292108535767
    2. ' xor' → logprob: -2.030229091644287
    3. 'l' → logprob: -2.530229091644287
    4. 'left' → logprob: -2.530229091644287
    5. ' left' → logprob: -2.530229091644287
    6. ' l' → logprob: -2.655229091644287
    7. 'j' → logprob: -3.905229091644287
    8. 'bit' → logprob: -3.905229091644287
    9. 'freq' → logprob: -4.530229091644287
    10. ' a' → logprob: -4.655229091644287

Token 310: ' total' (ID: 3609)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5174862146377563
    2. 'ans' → logprob: -2.267486095428467
    3. 'res' → logprob: -2.642486095428467
    4. 'left' → logprob: -3.392486095428467
    5. 'bit' → logprob: -3.392486095428467
    6. 'count' → logprob: -3.892486095428467
    7. 'cnt' → logprob: -3.892486095428467
    8. 'result' → logprob: -4.017486095428467
    9. 'freq' → logprob: -4.267486095428467
    10. 'answer' → logprob: -4.517486095428467

Token 311: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1334221214056015
    2. '=' → logprob: -2.7584221363067627
    3. '_ans' → logprob: -3.7584221363067627
    4. '_' → logprob: -4.633421897888184
    5. 'count' → logprob: -4.758421897888184
    6. '_count' → logprob: -4.758421897888184
    7. '_total' → logprob: -5.883421897888184
    8. '_answer' → logprob: -6.508421897888184
    9. ',' → logprob: -6.883421897888184
    10. '_result' → logprob: -7.008421897888184

Token 312: ' sous' (ID: 14487)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8798980712890625
    2. 'ans' → logprob: -1.6298980712890625
    3. 'res' → logprob: -1.8798980712890625
    4. 'count' → logprob: -2.1298980712890625
    5. ' ans' → logprob: -3.8798980712890625
    6. 'rés' → logprob: -3.8798980712890625
    7. ' result' → logprob: -4.0048980712890625
    8. 's' → logprob: -4.0048980712890625
    9. ' résultats' → logprob: -5.0048980712890625
    10. '_ans' → logprob: -5.0048980712890625

Token 313: '-table' (ID: 35909)
  Prédit: 'arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -1.26656174659729
    2. 'array' → logprob: -1.76656174659729
    3. '   ' → logprob: -2.51656174659729
    4. '_array' → logprob: -2.64156174659729
    5. '_arrays' → logprob: -2.64156174659729
    6. '_' → logprob: -2.64156174659729
    7. 't' → logprob: -3.01656174659729
    8. '_arr' → logprob: -3.26656174659729
    9. '_t' → logprob: -3.39156174659729
    10. '=' → logprob: -3.51656174659729

Token 314: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.00010354319238103926
    2. 'urs' → logprob: -10.500103950500488
    3. 'ux' → logprob: -10.750103950500488
    4. 'ats' → logprob: -10.750103950500488
    5. 'au' → logprob: -11.500103950500488
    6. 'ay' → logprob: -12.250103950500488
    7. 'auts' → logprob: -12.750103950500488
    8. 'x' → logprob: -13.125103950500488
    9. 'ments' → logprob: -13.250103950500488
    10. '   ' → logprob: -13.625103950500488

Token 315: ' val' (ID: 1459)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18741007149219513
    2. '=' → logprob: -2.1874101161956787
    3. 'count' → logprob: -3.8124101161956787
    4. '_count' → logprob: -3.8124101161956787
    5. '_total' → logprob: -5.9374098777771
    6. '_' → logprob: -6.0624098777771
    7. 's' → logprob: -6.3124098777771
    8. '_ans' → logprob: -6.6874098777771
    9. '   ' → logprob: -6.8124098777771
    10. 'total' → logprob: -7.0624098777771

Token 316: 'ides' (ID: 4105)
  Prédit: 'eurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.28165310621261597
    2. 'eur' → logprob: -1.6566531658172607
    3. 'id' → logprob: -3.6566531658172607
    4. 'ues' → logprob: -5.156652927398682
    5. '#' → logprob: -5.281652927398682
    6. 'ue' → logprob: -5.406652927398682
    7. 'ides' → logprob: -5.906652927398682
    8. 'ide' → logprob: -6.031652927398682
    9. '__' → logprob: -6.156652927398682
    10. '=' → logprob: -6.406652927398682

Token 317: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7921898365020752
    2. ' =' → logprob: -1.9171898365020752
    3. 'total' → logprob: -1.9171898365020752
    4. '   ' → logprob: -2.667189836502075
    5. 'count' → logprob: -2.667189836502075
    6. 'ans' → logprob: -2.792189836502075
    7. 'res' → logprob: -3.667189836502075
    8. 'result' → logprob: -5.042189598083496
    9. 'cnt' → logprob: -5.042189598083496
    10. 'answer' → logprob: -5.417189598083496

Token 318: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.13428795337677
    2. 'res' → logprob: -2.0092878341674805
    3. 'ans' → logprob: -2.0092878341674805
    4. ' ans' → logprob: -2.1342878341674805
    5. ' total' → logprob: -2.3842878341674805
    6. 'result' → logprob: -2.6342878341674805
    7. 'count' → logprob: -3.2592878341674805
    8. 'answer' → logprob: -3.7592878341674805
    9. '   ' → logprob: -3.8842878341674805
    10. ' res' → logprob: -4.0092878341674805

Token 319: ' ans' (ID: 3345)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.45583274960517883
    2. 'ans' (adapté à ' ans') → logprob: -1.7058327198028564
    3. 'res' → logprob: -2.3308327198028564
    4. 'result' → logprob: -2.5808327198028564
    5. 'answer' → logprob: -4.8308329582214355
    6. 'count' → logprob: -5.7058329582214355
    7. 'tot' → logprob: -9.080832481384277
    8. ' total' → logprob: -10.455832481384277
    9. ' ans' → logprob: -10.580832481384277
    10. 'ret' → logprob: -10.955832481384277

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693148672580719
    2. ' =' → logprob: -0.693148672580719
    3. ' ' → logprob: -13.568148612976074
    4. ',' → logprob: -16.69314956665039
    5. '＝' → logprob: -16.69314956665039
    6. '=int' → logprob: -17.69314956665039
    7. '   ' → logprob: -17.81814956665039
    8. ' ' → logprob: -18.06814956665039
    9. '_' → logprob: -18.19314956665039
    10. ')' → logprob: -18.31814956665039

Token 321: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620949272066355
    2. ' ' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.254620552062988
    4. '  ' → logprob: -16.504621505737305
    5. '1' → logprob: -17.754621505737305
    6. '    ' → logprob: -18.192121505737305
    7. '=' → logprob: -18.442121505737305
    8. '	' → logprob: -18.442121505737305
    9. '０' → logprob: -18.504621505737305
    10. ' ' → logprob: -18.567121505737305

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.625017166137695
    4. '０' → logprob: -18.875017166137695
    5. '۰' → logprob: -19.000017166137695
    6. 'int' → logprob: -20.000017166137695
    7. '=' → logprob: -20.125017166137695
    8. '  ' → logprob: -20.500017166137695
    9. '1' → logprob: -21.062517166137695
    10. '০' → logprob: -21.625017166137695

Token 323: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006777542643249035
    2. 'xor' → logprob: -6.631777763366699
    3. '
' → logprob: -6.756777763366699
    4. '    
' → logprob: -6.881777763366699
    5. 'current' → logprob: -7.506777763366699
    6. ',' → logprob: -7.631777763366699
    7. 'mask' → logprob: -8.0067777633667
    8. ' xor' → logprob: -8.0067777633667
    9. 'bit' → logprob: -9.0067777633667
    10. 'x' → logprob: -9.0067777633667

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1357431262731552
    2. 'j' → logprob: -2.6357431411743164
    3. 'r' → logprob: -4.135743141174316
    4. ' j' → logprob: -4.260743141174316
    5. 'right' → logprob: -4.885743141174316
    6. 'l' → logprob: -5.510743141174316
    7. ' r' → logprob: -5.760743141174316
    8. 'xor' → logprob: -5.760743141174316
    9. 'left' → logprob: -6.885743141174316
    10. 'bit' → logprob: -6.885743141174316

Token 325: ' #' (ID: 1069)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5789044499397278
    2. 'j' → logprob: -1.703904390335083
    3. 'bit' → logprob: -1.953904390335083
    4. 'x' → logprob: -4.453904628753662
    5. 'X' → logprob: -4.578904628753662
    6. 'seen' → logprob: -4.828904628753662
    7. 'r' → logprob: -4.953904628753662
    8. 'right' → logprob: -5.078904628753662
    9. 'left' → logprob: -5.078904628753662
    10. 'cur' → logprob: -5.328904628753662

Token 326: ' Initialise' (ID: 179601)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.6974422931671143
    2. 'j' → logprob: -1.1974422931671143
    3. 'bit' → logprob: -2.1974422931671143
    4. 'right' → logprob: -4.197442054748535
    5. 'r' → logprob: -4.447442054748535
    6. 'left' → logprob: -4.822442054748535
    7. 'x' → logprob: -4.822442054748535
    8. 'freq' → logprob: -5.447442054748535
    9. 'from' → logprob: -5.447442054748535
    10. 'seen' → logprob: -5.697442054748535

Token 327: ' les' (ID: 1341)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6644599437713623
    2. 'j' → logprob: -0.9144599437713623
    3. ' l' → logprob: -4.164460182189941
    4. ' r' → logprob: -4.289460182189941
    5. 'r' → logprob: -4.789460182189941
    6. ' la' → logprob: -4.914460182189941
    7. 'l' → logprob: -5.039460182189941
    8. ' left' → logprob: -5.164460182189941
    9. 'left' → logprob: -5.539460182189941
    10. ' i' → logprob: -5.664460182189941

Token 328: ' deux' (ID: 10301)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3639359176158905
    2. ' j' → logprob: -2.613935947418213
    3. 'bit' → logprob: -3.113935947418213
    4. 'xor' → logprob: -3.363935947418213
    5. 'left' → logprob: -3.613935947418213
    6. 'i' → logprob: -3.863935947418213
    7. 'l' → logprob: -3.988935947418213
    8. ' left' → logprob: -4.488935947418213
    9. 'start' → logprob: -4.863935947418213
    10. 'b' → logprob: -4.863935947418213

Token 329: ' poin' (ID: 37259)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006990921101532876
    2. 'i' → logprob: -7.625699043273926
    3. 'j' → logprob: -9.875699043273926
    4. ' poin' → logprob: -10.125699043273926
    5. 'pt' → logprob: -10.875699043273926
    6. 'ptr' → logprob: -11.000699043273926
    7. 'indices' → logprob: -11.250699043273926
    8. 'po' → logprob: -12.000699043273926
    9. ' pointers' → logprob: -12.250699043273926
    10. 't' → logprob: -12.250699043273926

Token 330: 'teurs' (ID: 77729)
  Prédit: 'teurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teurs' → logprob: -0.5357692241668701
    2. 'ters' → logprob: -0.9107692241668701
    3. 't' → logprob: -4.910769462585449
    4. 'ts' → logprob: -6.160769462585449
    5. 'trs' → logprob: -6.785769462585449
    6. 'ter' → logprob: -7.410769462585449
    7. 'te' → logprob: -8.03576946258545
    8. 'teur' → logprob: -8.28576946258545
    9. '```' → logprob: -9.16076946258545
    10. 's' → logprob: -9.53576946258545

Token 331: ' et' (ID: 859)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5248010754585266
    2. 'i' → logprob: -1.6498010158538818
    3. ' l' → logprob: -2.149801015853882
    4. ' i' → logprob: -2.774801015853882
    5. 'left' → logprob: -4.274801254272461
    6. ',' → logprob: -5.024801254272461
    7. ' left' → logprob: -5.399801254272461
    8. ' =' → logprob: -5.399801254272461
    9. '   ' → logprob: -6.524801254272461
    10. 'L' → logprob: -6.649801254272461

Token 332: ' le' (ID: 505)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.084060549736023
    2. ' xor' → logprob: -1.334060549736023
    3. ' j' → logprob: -2.2090606689453125
    4. ' bit' → logprob: -2.3340606689453125
    5. 'j' → logprob: -2.4590606689453125
    6. 'bit' → logprob: -3.5840606689453125
    7. ' mask' → logprob: -4.2090606689453125
    8. ' x' → logprob: -4.7090606689453125
    9. ' la' → logprob: -4.9590606689453125
    10. 'x' → logprob: -5.4590606689453125

Token 333: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.24605880677700043
    2. 'bit' → logprob: -2.746058702468872
    3. ' xor' → logprob: -2.996058702468872
    4. 'mask' → logprob: -3.496058702468872
    5. ' mask' → logprob: -4.496058940887451
    6. 'j' → logprob: -4.621058940887451
    7. ' bit' → logprob: -4.746058940887451
    8. 'current' → logprob: -4.996058940887451
    9. ' current' → logprob: -5.246058940887451
    10. 'x' → logprob: -5.496058940887451

Token 334: ' cumul' (ID: 163119)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40754562616348267
    2. 'l' → logprob: -2.532545566558838
    3. 'x' → logprob: -3.032545566558838
    4. 'cur' → logprob: -3.532545566558838
    5. ',' → logprob: -3.657545566558838
    6. 'xor' → logprob: -3.657545566558838
    7. ' i' → logprob: -3.782545566558838
    8. ' l' → logprob: -3.907545566558838
    9. 'i' → logprob: -4.157545566558838
    10. '=' → logprob: -4.407545566558838

Token 335: 'atif' (ID: 23984)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8205891847610474
    2. 'xor' → logprob: -1.4455891847610474
    3. 'x' → logprob: -2.445589065551758
    4. ' ^=' → logprob: -3.195589065551758
    5. '_x' → logprob: -3.445589065551758
    6. '=' → logprob: -3.570589065551758
    7. 'val' → logprob: -3.945589065551758
    8. '^' → logprob: -4.070589065551758
    9. '_val' → logprob: -4.320589065551758
    10. ' =' → logprob: -4.945589065551758

Token 336: ' de' (ID: 334)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23914735019207
    2. 'i' → logprob: -2.239147424697876
    3. ' l' → logprob: -3.239147424697876
    4. 'left' → logprob: -3.864147424697876
    5. 'x' → logprob: -4.114147186279297
    6. 'L' → logprob: -5.114147186279297
    7. ' i' → logprob: -5.114147186279297
    8. ' =' → logprob: -5.364147186279297
    9. 'xor' → logprob: -5.864147186279297
    10. ',' → logprob: -6.114147186279297

Token 337: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5881319642066956
    2. 'la' → logprob: -1.2131319046020508
    3. ' la' → logprob: -2.713131904602051
    4. 'fen' → logprob: -3.213131904602051
    5. 'A' → logprob: -3.713131904602051
    6. 'window' → logprob: -5.338131904602051
    7. 'l' → logprob: -5.838131904602051
    8. ' fen' → logprob: -5.963131904602051
    9. ' ' → logprob: -6.213131904602051
    10. ' A' → logprob: -6.713131904602051

Token 338: ' fenêtre' (ID: 109648)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02736903727054596
    2. 'window' → logprob: -4.777369022369385
    3. 'A' → logprob: -4.902369022369385
    4. 'fen' → logprob: -5.277369022369385
    5. 's' → logprob: -6.152369022369385
    6. 'current' → logprob: -6.277369022369385
    7. ' ' → logprob: -7.902369022369385
    8. 'segment' → logprob: -8.402369499206543
    9. 'prefix' → logprob: -8.527369499206543
    10. 'ensemble' → logprob: -8.527369499206543

Token 339: ' cour' (ID: 2871)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3342765271663666
    2. 'i' → logprob: -2.3342764377593994
    3. 'left' → logprob: -2.4592764377593994
    4. ' l' → logprob: -3.7092764377593994
    5. '   ' → logprob: -4.0842766761779785
    6. ',' → logprob: -4.3342766761779785
    7. ' =' → logprob: -4.4592766761779785
    8. ' i' → logprob: -4.5842766761779785
    9. ' left' → logprob: -4.9592766761779785
    10. 'L' → logprob: -4.9592766761779785

Token 340: 'ante' (ID: 2116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6251525282859802
    2. 'ente' → logprob: -1.500152587890625
    3. 'ante' → logprob: -2.250152587890625
    4. 'ent' → logprob: -2.625152587890625
    5. 'rent' → logprob: -4.125152587890625
    6. 'r' → logprob: -4.125152587890625
    7. '[]' → logprob: -4.500152587890625
    8. '[' → logprob: -5.500152587890625
    9. '       ' → logprob: -5.625152587890625
    10. ' ' → logprob: -6.250152587890625

Token 341: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6943455338478088
    2. 'l' → logprob: -0.8193455338478088
    3. 'left' → logprob: -3.694345474243164
    4. ' i' → logprob: -4.319345474243164
    5. ' l' → logprob: -4.444345474243164
    6. 'L' → logprob: -5.819345474243164
    7. ' left' → logprob: -6.444345474243164
    8. '   ' → logprob: -6.444345474243164
    9. 'x' → logprob: -6.694345474243164
    10. 'j' → logprob: -6.944345474243164

Token 342: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.21444246172904968
    2. 'i' → logprob: -2.214442491531372
    3. 'left' → logprob: -2.964442491531372
    4. ' l' → logprob: -4.339442253112793
    5. 'L' → logprob: -5.464442253112793
    6. 'x' → logprob: -5.839442253112793
    7. ' i' → logprob: -5.964442253112793
    8. ' left' → logprob: -5.964442253112793
    9. '   ' → logprob: -5.964442253112793
    10. 'j' → logprob: -6.214442253112793

Token 343: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.4372808039188385
    2. 'left' → logprob: -1.3122807741165161
    3. 'i' → logprob: -3.1872808933258057
    4. 'j' → logprob: -3.8122808933258057
    5. 'xor' → logprob: -4.812280654907227
    6. 'x' → logprob: -5.562280654907227
    7. 'start' → logprob: -6.437280654907227
    8. 'r' → logprob: -6.437280654907227
    9. ' left' → logprob: -6.562280654907227
    10. 'L' → logprob: -6.687280654907227

Token 344: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07633178681135178
    2. ' =' → logprob: -2.701331853866577
    3. ' ,' → logprob: -5.451331615447998
    4. '=' → logprob: -6.326331615447998
    5. ',r' → logprob: -8.576332092285156
    6. ' ' → logprob: -9.826332092285156
    7. ',right' → logprob: -11.326332092285156
    8. ',
' → logprob: -12.201332092285156
    9. ' =
' → logprob: -12.326332092285156
    10. 't' → logprob: -12.826332092285156

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015181333583313972
    2. 'r' → logprob: -9.375151634216309
    3. ' ' → logprob: -9.625151634216309
    4. ' r' → logprob: -14.875151634216309
    5. '   ' → logprob: -15.750151634216309
    6. 's' → logprob: -16.625152587890625
    7. '=' → logprob: -16.875152587890625
    8. 't' → logprob: -17.375152587890625
    9. '  ' → logprob: -17.625152587890625
    10. 'j' → logprob: -17.750152587890625

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.167648876318708e-05
    2. ' ' → logprob: -10.125041961669922
    3. 'r' → logprob: -13.500041961669922
    4. '   ' → logprob: -16.375041961669922
    5. '1' → logprob: -16.875041961669922
    6. '=' → logprob: -17.937541961669922
    7. '  ' → logprob: -18.187541961669922
    8. '-' → logprob: -18.500041961669922
    9. '０' → logprob: -18.562541961669922
    10. 'd' → logprob: -19.000041961669922

Token 347: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.714691698551178
    2. '
' → logprob: -0.839691698551178
    3. 'r' → logprob: -2.839691638946533
    4. ',' → logprob: -5.089691638946533
    5. '    
' → logprob: -5.589691638946533
    6. '<|end|>' → logprob: -5.964691638946533
    7. 'x' → logprob: -6.839691638946533
    8. '  
' → logprob: -6.839691638946533
    9. ',r' → logprob: -7.089691638946533
    10. ' ' → logprob: -7.089691638946533

Token 348: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09777660667896271
    2. '
' → logprob: -2.9727766513824463
    3. 'xor' → logprob: -3.5977766513824463
    4. '^' → logprob: -4.847776412963867
    5. '   ' → logprob: -5.347776412963867
    6. 'x' → logprob: -7.472776412963867
    7. ',r' → logprob: -7.972776412963867
    8. ',' → logprob: -8.722776412963867
    9. 'for' → logprob: -8.722776412963867
    10. 'j' → logprob: -8.847776412963867

Token 349: ' bord' (ID: 26431)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06279771029949188
    2. ' r' → logprob: -2.937797784805298
    3. '0' → logprob: -5.312797546386719
    4. ' ' → logprob: -6.562797546386719
    5. '
' → logprob: -7.312797546386719
    6. 'xor' → logprob: -8.312797546386719
    7. 'x' → logprob: -8.937797546386719
    8. ' xor' → logprob: -9.562797546386719
    9. '1' → logprob: -9.812797546386719
    10. 'for' → logprob: -10.187797546386719

Token 350: ' gauche' (ID: 58367)
  Prédit: ' droit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' droit' → logprob: -1.6998627185821533
    2. 'right' → logprob: -2.0748627185821533
    3. '   ' → logprob: -2.3248627185821533
    4. '  ' → logprob: -2.6998627185821533
    5. ' droite' → logprob: -2.8248627185821533
    6. 'd' → logprob: -2.8248627185821533
    7. ')' → logprob: -2.9498627185821533
    8. '<|end|>' → logprob: -2.9498627185821533
    9. '=' → logprob: -3.1998627185821533
    10. ' right' → logprob: -3.3248627185821533

Token 351: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.45245733857154846
    2. '   ' → logprob: -1.827457308769226
    3. '<|end|>' → logprob: -2.4524574279785156
    4. ',' → logprob: -3.2024574279785156
    5. ')' → logprob: -3.4524574279785156
    6. '
' → logprob: -3.8274574279785156
    7. '<|end|>' → logprob: -4.702457427978516
    8. ' r' → logprob: -6.077457427978516
    9. ' ' → logprob: -6.452457427978516
    10. 'n' → logprob: -6.577457427978516

Token 352: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.31622958183288574
    2. ' la' → logprob: -1.3162295818328857
    3. 'l' → logprob: -6.566229820251465
    4. 'fen' → logprob: -6.941229820251465
    5. 'window' → logprob: -9.441229820251465
    6. 'le' → logprob: -9.691229820251465
    7. 'the' → logprob: -9.816229820251465
    8. ' fenêtre' → logprob: -9.816229820251465
    9. 'a' → logprob: -9.941229820251465
    10. ' fen' → logprob: -10.191229820251465

Token 353: ' fenêtre' (ID: 109648)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.013016687706112862
    2. 'window' → logprob: -4.638016700744629
    3. ' fenêtre' → logprob: -6.013016700744629
    4. 'f' → logprob: -8.013016700744629
    5. ' fen' → logprob: -8.138016700744629
    6. 'interval' → logprob: -10.138016700744629
    7. '```' → logprob: -10.763016700744629
    8. ' window' → logprob: -11.138016700744629
    9. 'range' → logprob: -11.263016700744629
    10. 'Fen' → logprob: -11.513016700744629

Token 354: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.19335685670375824
    2. '
' → logprob: -1.9433568716049194
    3. '   ' → logprob: -3.94335675239563
    4. ' r' → logprob: -5.693356990814209
    5. '<|end|>' → logprob: -5.818356990814209
    6. ')' → logprob: -6.193356990814209
    7. ',' → logprob: -6.568356990814209
    8. '    
' → logprob: -6.818356990814209
    9. ',r' → logprob: -7.443356990814209
    10. ')
' → logprob: -7.818356990814209

Token 355: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0031578729394823313
    2. ' r' → logprob: -6.003158092498779
    3. '   ' → logprob: -7.628158092498779
    4. '
' → logprob: -9.253157615661621
    5. ',' → logprob: -10.378157615661621
    6. ' ' → logprob: -11.003157615661621
    7. ')' → logprob: -11.503157615661621
    8. '_r' → logprob: -11.878157615661621
    9. ' 
' → logprob: -12.128157615661621
    10. ',r' → logprob: -12.628157615661621

Token 356: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0032332094851881266
    2. 'xor' → logprob: -6.253233432769775
    3. ' r' → logprob: -7.128233432769775
    4. 'x' → logprob: -8.503232955932617
    5. 'xr' → logprob: -8.503232955932617
    6. 'cur' → logprob: -10.878232955932617
    7. '   ' → logprob: -11.003232955932617
    8. ' ' → logprob: -11.378232955932617
    9. ' xor' → logprob: -11.753232955932617
    10. 'current' → logprob: -12.003232955932617

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575945258140564
    2. ' =' → logprob: -0.825945258140564
    3. ' ' → logprob: -12.575944900512695
    4. '   ' → logprob: -14.075944900512695
    5. ')' → logprob: -14.700944900512695
    6. '0' → logprob: -15.700944900512695
    7. ',' → logprob: -15.700944900512695
    8. '＝' → logprob: -15.825944900512695
    9. '  ' → logprob: -15.950944900512695
    10. ' =
' → logprob: -15.950944900512695

Token 358: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001801438513211906
    2. ' ' → logprob: -6.376801490783691
    3. '-' → logprob: -9.751801490783691
    4. '1' → logprob: -11.126801490783691
    5. ' -' → logprob: -11.251801490783691
    6. '   ' → logprob: -11.501801490783691
    7. '  ' → logprob: -14.064301490783691
    8. '=' → logprob: -14.439301490783691
    9. 'l' → logprob: -14.876801490783691
    10. '    ' → logprob: -16.064300537109375

Token 359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021299216896295547
    2. '-' → logprob: -6.252130031585693
    3. ' ' → logprob: -8.627129554748535
    4. ' -' → logprob: -11.002129554748535
    5. '1' → logprob: -13.189629554748535
    6. '   ' → logprob: -13.939629554748535
    7. '-l' → logprob: -14.564629554748535
    8. 'l' → logprob: -14.689629554748535
    9. '  ' → logprob: -15.627129554748535
    10. '−' → logprob: -15.939629554748535

Token 360: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23750895261764526
    2. '<|end|>' → logprob: -2.23750901222229
    3. '
' → logprob: -2.61250901222229
    4. '    
' → logprob: -4.737508773803711
    5. ')' → logprob: -4.862508773803711
    6. '<|end|>' → logprob: -5.362508773803711
    7. '  
' → logprob: -6.112508773803711
    8. ' ' → logprob: -6.487508773803711
    9. '  ' → logprob: -6.612508773803711
    10. ',' → logprob: -6.612508773803711

Token 361: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32724297046661377
    2. '   ' → logprob: -1.9522429704666138
    3. 'while' → logprob: -2.952242851257324
    4. ')' → logprob: -3.702242851257324
    5. '#' → logprob: -3.702242851257324
    6. '<|end|>' → logprob: -4.702242851257324
    7. 'x' → logprob: -5.077242851257324
    8. '    
' → logprob: -5.327242851257324
    9. ' ' → logprob: -5.827242851257324
    10. 'xor' → logprob: -6.202242851257324

Token 362: ' bord' (ID: 26431)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20560869574546814
    2. ' #' → logprob: -1.9556087255477905
    3. '#' → logprob: -3.580608606338501
    4. '  ' → logprob: -5.20560884475708
    5. '   ' → logprob: -5.45560884475708
    6. ')' → logprob: -6.33060884475708
    7. '
' → logprob: -6.33060884475708
    8. 'while' → logprob: -6.70560884475708
    9. ' while' → logprob: -7.33060884475708
    10. 'r' → logprob: -8.830608367919922

Token 363: ' droit' (ID: 29964)
  Prédit: ' droit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droit' → logprob: -0.6525246500968933
    2. '<|end|>' → logprob: -1.402524709701538
    3. ' droite' → logprob: -3.027524709701538
    4. ' ' → logprob: -3.152524709701538
    5. ' de' → logprob: -3.277524709701538
    6. ' droits' → logprob: -3.777524709701538
    7. ')' → logprob: -4.152524471282959
    8. 'right' → logprob: -4.402524471282959
    9. ' right' → logprob: -4.652524471282959
    10. ' gauche' → logprob: -5.027524471282959

Token 364: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4329276978969574
    2. ' la' → logprob: -1.8079277276992798
    3. 'l' → logprob: -2.0579276084899902
    4. 'A' → logprob: -3.6829276084899902
    5. 'the' → logprob: -4.30792760848999
    6. 'r' → logprob: -5.05792760848999
    7. ' ' → logprob: -5.18292760848999
    8. ' A' → logprob: -5.93292760848999
    9. ' l' → logprob: -6.05792760848999
    10. '0' → logprob: -6.43292760848999

Token 366: ' fenêtre' (ID: 109648)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.11348062753677368
    2. 'window' → logprob: -2.363480567932129
    3. ' fenêtre' → logprob: -5.113480567932129
    4. ' fen' → logprob: -5.738480567932129
    5. 'Fen' → logprob: -6.613480567932129
    6. 'f' → logprob: -6.738480567932129
    7. ' window' → logprob: -6.863480567932129
    8. ')' → logprob: -9.363480567932129
    9. ' ' → logprob: -9.613480567932129
    10. ' Fen' → logprob: -9.738480567932129

Token 367: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10654100775718689
    2. '
' → logprob: -3.4815409183502197
    3. '<|end|>' → logprob: -3.6065409183502197
    4. '    
' → logprob: -4.606541156768799
    5. ',' → logprob: -4.731541156768799
    6. ')' → logprob: -5.106541156768799
    7. 'while' → logprob: -5.356541156768799
    8. ' 
' → logprob: -5.856541156768799
    9. '  
' → logprob: -6.106541156768799
    10. ' while' → logprob: -6.231541156768799

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09709801524877548
    2. ')' → logprob: -4.097097873687744
    3. ' ' → logprob: -4.097097873687744
    4. ',' → logprob: -4.222097873687744
    5. '<|end|>' → logprob: -4.847097873687744
    6. '    
' → logprob: -4.972097873687744
    7. ' 
' → logprob: -4.972097873687744
    8. '
' → logprob: -5.722097873687744
    9. ' while' → logprob: -6.097097873687744
    10. '  ' → logprob: -6.222097873687744

Token 369: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -0.37325990200042725
    2. 'cur' → logprob: -2.248260021209717
    3. 'current' → logprob: -2.623260021209717
    4. 'x' → logprob: -2.998260021209717
    5. 'curr' → logprob: -3.623260021209717
    6. ' xor' → logprob: -4.373260021209717
    7. 'bit' → logprob: -5.123260021209717
    8. '   ' → logprob: -5.248260021209717
    9. ' current' → logprob: -5.248260021209717
    10. 'X' → logprob: -5.373260021209717

Token 370: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.06220799311995506
    2. ' =' → logprob: -3.4372079372406006
    3. '_' → logprob: -4.18720817565918
    4. '=' → logprob: -5.43720817565918
    5. '_value' → logprob: -5.56220817565918
    6. 'val' → logprob: -6.31220817565918
    7. '_window' → logprob: -7.18720817565918
    8. '_mask' → logprob: -7.43720817565918
    9. 's' → logprob: -7.68720817565918
    10. 'Val' → logprob: -7.93720817565918

Token 371: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.125019073486328
    4. '  ' → logprob: -17.062519073486328
    5. '۰' → logprob: -17.937519073486328
    6. '<|end|>' → logprob: -18.312519073486328
    7. '[' → logprob: -18.375019073486328
    8. '
' → logprob: -18.562519073486328
    9. '=' → logprob: -18.687519073486328
    10. ',' → logprob: -18.812519073486328

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.750003814697266
    4. '۰' → logprob: -17.687503814697266
    5. 's' → logprob: -17.750003814697266
    6. '000' → logprob: -17.875003814697266
    7. '=' → logprob: -17.875003814697266
    8. 'A' → logprob: -18.750003814697266
    9. '[' → logprob: -18.875003814697266
    10. '  ' → logprob: -18.875003814697266

Token 373: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23051664233207703
    2. '<|end|>' → logprob: -1.7305166721343994
    3. '   ' → logprob: -3.8555166721343994
    4. '  
' → logprob: -6.23051643371582
    5. '    
' → logprob: -6.60551643371582
    6. '<|end|>' → logprob: -6.73051643371582
    7. 'while' → logprob: -7.10551643371582
    8. '

' → logprob: -7.48051643371582
    9. '   
' → logprob: -8.23051643371582
    10. ')' → logprob: -8.35551643371582

Token 375: ' XOR' (ID: 147209)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: ' cumul' (ID: 163119)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.10246123373508453
    2. 'ulative' → logprob: -3.352461338043213
    3. 'ative' → logprob: -4.102461338043213
    4. '=' → logprob: -4.352461338043213
    5. '   ' → logprob: -4.602461338043213
    6. ' =' → logprob: -4.602461338043213
    7. ')' → logprob: -5.977461338043213
    8. ' ' → logprob: -6.227461338043213
    9. ' ^=' → logprob: -6.227461338043213
    10. '_' → logprob: -6.727461338043213

Token 378: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: ' éléments' (ID: 57375)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07830243557691574
    2. 'élé' → logprob: -2.7033023834228516
    3. ' A' → logprob: -5.453302383422852
    4. 'elements' → logprob: -5.953302383422852
    5. '0' → logprob: -7.828302383422852
    6. ')' → logprob: -8.328302383422852
    7. 'val' → logprob: -8.578302383422852
    8. 'fen' → logprob: -9.078302383422852
    9. ' elements' → logprob: -9.203302383422852
    10. ' éléments' → logprob: -9.328302383422852

Token 380: ' entre' (ID: 3853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00023095356300473213
    2. ' l' → logprob: -8.50023078918457
    3. 'r' → logprob: -10.75023078918457
    4. '_l' → logprob: -12.75023078918457
    5. '[l' → logprob: -13.87523078918457
    6. '   ' → logprob: -14.25023078918457
    7. '	l' → logprob: -14.50023078918457
    8. ' ' → logprob: -15.25023078918457
    9. 'la' → logprob: -15.87523078918457
    10. 'A' → logprob: -15.87523078918457

Token 382: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7381076812744141
    2. 'et' → logprob: -1.363107681274414
    3. ',' → logprob: -1.863107681274414
    4. ' and' → logprob: -2.863107681274414
    5. 'and' → logprob: -3.863107681274414
    6. ' ' → logprob: -4.113107681274414
    7. '+' → logprob: -4.988107681274414
    8. 'r' → logprob: -5.738107681274414
    9. ' +' → logprob: -6.613107681274414
    10. 'l' → logprob: -6.613107681274414

Token 383: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.34869077801704407
    2. ' r' → logprob: -1.2236907482147217
    3. ' ' → logprob: -8.3486909866333
    4. 'l' → logprob: -12.9736909866333
    5. ' l' → logprob: -13.8486909866333
    6. ' ' → logprob: -13.9736909866333
    7. '
' → logprob: -14.2236909866333
    8. '' → logprob: -14.5986909866333
    9. 's' → logprob: -14.7236909866333
    10. '_r' → logprob: -14.8486909866333

Token 384: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5482974648475647
    2. '
' → logprob: -1.17329740524292
    3. '<|end|>' → logprob: -2.54829740524292
    4. '    
' → logprob: -4.67329740524292
    5. ')' → logprob: -4.79829740524292
    6. '  
' → logprob: -5.29829740524292
    7. ':' → logprob: -5.29829740524292
    8. '<|end|>' → logprob: -5.92329740524292
    9. '   
' → logprob: -7.04829740524292
    10. ',' → logprob: -7.17329740524292

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48687589168548584
    2. '
' → logprob: -1.3618758916854858
    3. '  
' → logprob: -3.4868760108947754
    4. ' 
' → logprob: -3.6118760108947754
    5. '    
' → logprob: -3.6118760108947754
    6. 'while' → logprob: -3.9868760108947754
    7. ' while' → logprob: -4.111876010894775
    8. '   
' → logprob: -5.486876010894775
    9. '<|end|>' → logprob: -6.736876010894775
    10. ' ' → logprob: -6.736876010894775

Token 386: ' s' (ID: 265)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.45791178941726685
    2. '   ' → logprob: -1.457911729812622
    3. ' while' → logprob: -2.832911729812622
    4. 'used' → logprob: -3.082911729812622
    5. 'bits' → logprob: -5.332911968231201
    6. 'bit' → logprob: -5.582911968231201
    7. ' used' → logprob: -5.707911968231201
    8. 'seen' → logprob: -6.207911968231201
    9. '
' → logprob: -6.332911968231201
    10. ')' → logprob: -6.457911968231201

Token 387: ' =' (ID: 314)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.21682743728160858
    2. ' =' → logprob: -1.966827392578125
    3. '=set' → logprob: -3.466827392578125
    4. '=' → logprob: -3.841827392578125
    5. 'ets' → logprob: -6.341827392578125
    6. 'set' → logprob: -8.466827392578125
    7. 'e' → logprob: -8.841827392578125
    8. 't' → logprob: -9.716827392578125
    9. 'etse' → logprob: -10.591827392578125
    10. 'ett' → logprob: -10.716827392578125

Token 388: ' ' (ID: 220)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.35281163454055786
    2. '0' → logprob: -1.227811574935913
    3. '[]' → logprob: -5.977811813354492
    4. ' set' → logprob: -7.102811813354492
    5. '[' → logprob: -7.477811813354492
    6. '{}' → logprob: -8.727811813354492
    7. '{' → logprob: -8.852811813354492
    8. ' ' → logprob: -10.102811813354492
    9. '(set' → logprob: -10.477811813354492
    10. '=set' → logprob: -11.352811813354492

Token 389: '0' (ID: 15)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.17647086083889008
    2. '0' → logprob: -1.9264708757400513
    3. '[]' → logprob: -4.176470756530762
    4. '{}' → logprob: -8.176470756530762
    5. '[' → logprob: -8.426470756530762
    6. '{' → logprob: -8.801470756530762
    7. ' set' → logprob: -9.676470756530762
    8. 'dict' → logprob: -11.676470756530762
    9. '(set' → logprob: -11.801470756530762
    10. ' ' → logprob: -12.176470756530762

Token 390: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: ' stockage' (ID: 101149)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7074057459831238
    2. '<|end|>' → logprob: -0.8324057459831238
    3. 'A' → logprob: -3.0824058055877686
    4. ' ' → logprob: -4.3324055671691895
    5. 's' → logprob: -5.3324055671691895
    6. '1' → logprob: -6.3324055671691895
    7. 'xor' → logprob: -6.4574055671691895
    8. ' A' → logprob: -6.7074055671691895
    9. ')' → logprob: -7.3324055671691895
    10. 'r' → logprob: -7.4574055671691895

Token 393: ' tempora' (ID: 117509)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: 'ire' (ID: 594)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: ' utilisé' (ID: 53138)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' lors' (ID: 15456)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8417589664459229
    2. 'de' → logprob: -1.3417589664459229
    3. ' du' → logprob: -1.5917589664459229
    4. ' des' → logprob: -3.716758966445923
    5. 'que' → logprob: -3.841758966445923
    6. 'du' → logprob: -4.216758728027344
    7. 'd' → logprob: -4.466758728027344
    8. 'des' → logprob: -4.966758728027344
    9. ' la' → logprob: -5.341758728027344
    10. ' ' → logprob: -5.591758728027344

Token 398: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.025268305093050003
    2. 'xor' → logprob: -4.525268077850342
    3. 'l' → logprob: -4.775268077850342
    4. 'A' → logprob: -6.025268077850342
    5. ' r' → logprob: -6.900268077850342
    6. 's' → logprob: -7.650268077850342
    7. 'la' → logprob: -7.900268077850342
    8. ' xor' → logprob: -8.1502685546875
    9. '0' → logprob: -8.6502685546875
    10. 'x' → logprob: -9.1502685546875

Token 399: ' réduction' (ID: 89072)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5950478911399841
    2. 'lecture' → logprob: -1.220047950744629
    3. ' lecture' → logprob: -3.220047950744629
    4. 'r' → logprob: -4.095047950744629
    5. ' while' → logprob: -4.095047950744629
    6. '   ' → logprob: -4.470047950744629
    7. ' ' → logprob: -4.470047950744629
    8. 'bit' → logprob: -5.095047950744629
    9. 'main' → logprob: -5.095047950744629
    10. 'for' → logprob: -5.470047950744629

Token 400: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23742978274822235
    2. 'while' → logprob: -2.2374298572540283
    3. '<|end|>' → logprob: -2.8624298572540283
    4. ' while' → logprob: -3.6124298572540283
    5. ')' → logprob: -5.487429618835449
    6. '    
' → logprob: -5.862429618835449
    7. ' ' → logprob: -5.987429618835449
    8. '  ' → logprob: -6.112429618835449
    9. '
' → logprob: -6.362429618835449
    10. '	while' → logprob: -6.612429618835449

Token 401: ' la' (ID: 557)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.029878340661525726
    2. 'r' → logprob: -4.15487813949585
    3. ' xor' → logprob: -5.02987813949585
    4. 'l' → logprob: -6.52987813949585
    5. '1' → logprob: -6.65487813949585
    6. 'A' → logprob: -6.77987813949585
    7. 'x' → logprob: -7.40487813949585
    8. 'bits' → logprob: -7.90487813949585
    9. 'bit' → logprob: -7.90487813949585
    10. ' ' → logprob: -8.029878616333008

Token 402: ' fenêtre' (ID: 109648)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.045609891414642334
    2. 'xor' → logprob: -4.295609951019287
    3. 'tail' → logprob: -4.420609951019287
    4. 'val' → logprob: -5.170609951019287
    5. 'window' → logprob: -5.295609951019287
    6. ' fenêtre' → logprob: -5.795609951019287
    7. 'r' → logprob: -6.920609951019287
    8. 'bit' → logprob: -7.795609951019287
    9. 'f' → logprob: -7.920609951019287
    10. 'Fen' → logprob: -7.920609951019287

Token 403: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.833780825138092
    2. '   ' → logprob: -0.958780825138092
    3. 'while' → logprob: -2.4587807655334473
    4. ' while' → logprob: -3.4587807655334473
    5. '  
' → logprob: -4.208780765533447
    6. ' 
' → logprob: -4.333780765533447
    7. '    
' → logprob: -4.333780765533447
    8. ')' → logprob: -5.208780765533447
    9. '<|end|>' → logprob: -5.833780765533447
    10. ',' → logprob: -5.958780765533447

Token 404: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5766518115997314
    2. ' while' → logprob: -1.4516518115997314
    3. '   ' → logprob: -2.4516518115997314
    4. ' ' → logprob: -2.5766518115997314
    5. ' 
' → logprob: -4.701651573181152
    6. '
' → logprob: -4.951651573181152
    7. ')' → logprob: -5.076651573181152
    8. ',' → logprob: -5.326651573181152
    9. '  
' → logprob: -5.951651573181152
    10. '  ' → logprob: -6.326651573181152

Token 405: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18383899331092834
    2. ' while' → logprob: -2.1838390827178955
    3. '   ' → logprob: -2.9338390827178955
    4. 'for' → logprob: -7.433838844299316
    5. ')' → logprob: -8.058838844299316
    6. 'mask' → logprob: -8.933838844299316
    7. '    
' → logprob: -9.183838844299316
    8. '  ' → logprob: -9.183838844299316
    9. ' for' → logprob: -9.183838844299316
    10. ',' → logprob: -9.308838844299316

Token 406: ' Bal' (ID: 21272)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08040586113929749
    2. 'bit' → logprob: -3.0804059505462646
    3. 'used' → logprob: -4.9554057121276855
    4. 'freq' → logprob: -5.2054057121276855
    5. 'bits' → logprob: -5.4554057121276855
    6. 'seen' → logprob: -5.5804057121276855
    7. 'count' → logprob: -5.9554057121276855
    8. 'counts' → logprob: -6.2054057121276855
    9. 'cnt' → logprob: -6.8304057121276855
    10. 'for' → logprob: -6.8304057121276855

Token 407: 'aye' (ID: 13916)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.803265392780304
    2. 'ancer' → logprob: -1.5532653331756592
    3. 'ances' → logprob: -1.5532653331756592
    4. 'ise' → logprob: -3.803265333175659
    5. 'a' → logprob: -3.928265333175659
    6. 'ancier' → logprob: -4.178265571594238
    7. 'anced' → logprob: -4.553265571594238
    8. '=' → logprob: -4.928265571594238
    9. 'aise' → logprob: -5.303265571594238
    10. 'anc' → logprob: -5.428265571594238

Token 408: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7061409950256348
    2. ' ' → logprob: -1.7061409950256348
    3. ' le' → logprob: -1.9561409950256348
    4. ' la' → logprob: -3.0811409950256348
    5. 'range' → logprob: -3.5811409950256348
    6. '   ' → logprob: -3.9561409950256348
    7. '_' → logprob: -4.081140995025635
    8. ' range' → logprob: -4.581140995025635
    9. ':' → logprob: -4.831140995025635
    10. ')' → logprob: -4.831140995025635

Token 409: ' tableau' (ID: 67053)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8044794201850891
    2. 'while' → logprob: -1.1794793605804443
    3. 'A' → logprob: -2.5544793605804443
    4. 'N' → logprob: -2.6794793605804443
    5. 'table' → logprob: -3.4294793605804443
    6. 'range' → logprob: -3.5544793605804443
    7. 'for' → logprob: -4.804479598999023
    8. ' tableau' → logprob: -5.054479598999023
    9. '```' → logprob: -5.304479598999023
    10. 'array' → logprob: -5.554479598999023

Token 410: ' avec' (ID: 3937)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.39354607462882996
    2. '   ' → logprob: -1.3935461044311523
    3. ' while' → logprob: -3.1435461044311523
    4. 'for' → logprob: -3.6435461044311523
    5. ' for' → logprob: -4.893546104431152
    6. '	while' → logprob: -9.018546104431152
    7. 'r' → logprob: -9.518546104431152
    8. ',' → logprob: -10.143546104431152
    9. 'with' → logprob: -10.768546104431152
    10. '
' → logprob: -11.268546104431152

Token 411: ' deux' (ID: 10301)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2806842625141144
    2. 'range' → logprob: -1.905684232711792
    3. 'while' → logprob: -2.405684232711792
    4. 'for' → logprob: -5.655684471130371
    5. 'l' → logprob: -7.030684471130371
    6. ' while' → logprob: -7.655684471130371
    7. 'la' → logprob: -8.155684471130371
    8. ' range' → logprob: -8.780684471130371
    9. 'une' → logprob: -9.405684471130371
    10. ' r' → logprob: -9.530684471130371

Token 412: ' poin' (ID: 37259)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6475476026535034
    2. 'r' → logprob: -1.8975476026535034
    3. ' poin' → logprob: -2.022547721862793
    4. 'for' → logprob: -3.022547721862793
    5. ' pointers' → logprob: -3.397547721862793
    6. ' ' → logprob: -4.147547721862793
    7. ' for' → logprob: -4.272547721862793
    8. 'points' → logprob: -4.772547721862793
    9. 'while' → logprob: -4.772547721862793
    10. 'pointer' → logprob: -4.772547721862793

Token 413: 'teurs' (ID: 77729)
  Prédit: 'ters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ters' → logprob: -0.008830592967569828
    2. 't' → logprob: -5.758830547332764
    3. 'teurs' → logprob: -6.133830547332764
    4. 'trs' → logprob: -7.133830547332764
    5. '```' → logprob: -7.133830547332764
    6. '   ' → logprob: -7.258830547332764
    7. 'ts' → logprob: -8.133831024169922
    8. 'ter' → logprob: -8.633831024169922
    9. '       ' → logprob: -9.633831024169922
    10. 'in' → logprob: -10.008831024169922

Token 414: ' pour' (ID: 1930)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6027324199676514
    2. '   ' → logprob: -1.6027324199676514
    3. ' while' → logprob: -2.2277324199676514
    4. '
' → logprob: -2.2277324199676514
    5. '<|end|>' → logprob: -3.8527324199676514
    6. ':' → logprob: -5.3527326583862305
    7. '	while' → logprob: -5.9777326583862305
    8. '    
' → logprob: -6.2277326583862305
    9. '  
' → logprob: -6.9777326583862305
    10. ' 
' → logprob: -6.9777326583862305

Token 415: ' maintenir' (ID: 105693)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06647800654172897
    2. ' r' → logprob: -3.6914780139923096
    3. 'while' → logprob: -4.1914777755737305
    4. 'l' → logprob: -4.3164777755737305
    5. ' while' → logprob: -5.3164777755737305
    6. ' l' → logprob: -6.1914777755737305
    7. 'tr' → logprob: -7.1914777755737305
    8. 'ét' → logprob: -7.6914777755737305
    9. ' trouver' → logprob: -8.19147777557373
    10. 't' → logprob: -8.31647777557373

Token 416: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9558947086334229
    2. ' une' → logprob: -1.9558947086334229
    3. ' un' → logprob: -2.205894708633423
    4. '   ' → logprob: -2.455894708633423
    5. ' la' → logprob: -2.580894708633423
    6. 'r' → logprob: -2.955894708633423
    7. 'la' → logprob: -3.205894708633423
    8. 'l' → logprob: -3.455894708633423
    9. 'le' → logprob: -3.705894708633423
    10. 'un' → logprob: -3.830894708633423

Token 417: ' propriété' (ID: 87730)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.7807599306106567
    2. 'in' → logprob: -1.4057599306106567
    3. 'condition' → logprob: -1.4057599306106567
    4. 'fen' → logprob: -3.655759811401367
    5. 'window' → logprob: -5.155759811401367
    6. ' propriété' → logprob: -5.155759811401367
    7. 'valid' → logprob: -5.530759811401367
    8. 'property' → logprob: -6.405759811401367
    9. ' invariant' → logprob: -6.530759811401367
    10. 'contr' → logprob: -6.905759811401367

Token 418: ' du' (ID: 1462)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7998061180114746
    2. ' d' → logprob: -1.6748061180114746
    3. 'unique' → logprob: -2.6748061180114746
    4. ' de' → logprob: -2.9248061180114746
    5. 'de' → logprob: -3.1748061180114746
    6. ' que' → logprob: -3.1748061180114746
    7. '   ' → logprob: -3.1748061180114746
    8. 'while' → logprob: -3.4248061180114746
    9. ' unique' → logprob: -3.7998061180114746
    10. 'xor' → logprob: -4.174806118011475

Token 419: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.16192390024662018
    2. 'X' → logprob: -2.911923885345459
    3. 'while' → logprob: -3.786923885345459
    4. ' xor' → logprob: -4.036923885345459
    5. 'window' → logprob: -4.161923885345459
    6. 'bit' → logprob: -5.036923885345459
    7. ' XOR' → logprob: -5.661923885345459
    8. 'x' → logprob: -5.786923885345459
    9. ' while' → logprob: -6.161923885345459
    10. 'car' → logprob: -6.411923885345459

Token 420: ' unique' (ID: 5746)
  Prédit: ' unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -1.029128074645996
    2. 'while' → logprob: -2.279128074645996
    3. '   ' → logprob: -2.404128074645996
    4. '<|end|>' → logprob: -2.404128074645996
    5. 'unique' → logprob: -2.779128074645996
    6. ':' → logprob: -2.779128074645996
    7. ' while' → logprob: -2.904128074645996
    8. 'distinct' → logprob: -3.279128074645996
    9. ',' → logprob: -4.029128074645996
    10. '.' → logprob: -4.279128074645996

Token 421: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5954117774963379
    2. 'while' → logprob: -1.345411777496338
    3. ':' → logprob: -2.720411777496338
    4. ' while' → logprob: -2.845411777496338
    5. '
' → logprob: -3.470411777496338
    6. ',' → logprob: -4.845411777496338
    7. '    
' → logprob: -4.845411777496338
    8. ':
' → logprob: -5.345411777496338
    9. '  
' → logprob: -6.470411777496338
    10. '.' → logprob: -6.595411777496338

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.669170081615448
    2. 'while' → logprob: -1.1691701412200928
    3. ' while' → logprob: -1.9191701412200928
    4. ':' → logprob: -3.6691701412200928
    5. ':
' → logprob: -6.794169902801514
    6. '
' → logprob: -7.294169902801514
    7. '    
' → logprob: -7.419169902801514
    8. ')' → logprob: -7.794169902801514
    9. 'r' → logprob: -7.919169902801514
    10. ',' → logprob: -8.044170379638672

Token 423: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2753794193267822
    2. ' while' → logprob: -1.5253794193267822
    3. '   ' → logprob: -3.7753794193267822
    4. '	while' → logprob: -9.025379180908203
    5. 'for' → logprob: -10.150379180908203
    6. '
' → logprob: -11.150379180908203
    7. ' ' → logprob: -11.275379180908203
    8. '    
' → logprob: -11.525379180908203
    9. 'While' → logprob: -11.525379180908203
    10. ' for' → logprob: -11.775379180908203

Token 424: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0014610696816816926
    2. ' r' → logprob: -6.751461029052734
    3. 'l' → logprob: -8.251461029052734
    4. 'A' → logprob: -11.001461029052734
    5. '   ' → logprob: -12.376461029052734
    6. '(r' → logprob: -12.876461029052734
    7. ' l' → logprob: -13.126461029052734
    8. '	r' → logprob: -14.001461029052734
    9. ' ' → logprob: -14.126461029052734
    10. '_r' → logprob: -14.376461029052734

Token 425: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10374174267053604
    2. '<' → logprob: -2.3537416458129883
    3. '<len' → logprob: -5.978741645812988
    4. '<n' → logprob: -7.728741645812988
    5. '<N' → logprob: -8.103741645812988
    6. ' <=' → logprob: -9.228741645812988
    7. '<=' → logprob: -10.353741645812988
    8. ' ' → logprob: -10.728741645812988
    9. '<size' → logprob: -11.103741645812988
    10. '<src' → logprob: -11.478741645812988

Token 426: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.849109119386412e-06
    2. ' N' → logprob: -12.375009536743164
    3. '   ' → logprob: -12.875009536743164
    4. 'len' → logprob: -13.000009536743164
    5. 'n' → logprob: -15.375009536743164
    6. '10' → logprob: -15.625009536743164
    7. ' ' → logprob: -15.875009536743164
    8. '  ' → logprob: -16.875009536743164
    9. '	N' → logprob: -17.000009536743164
    10. '
' → logprob: -17.375009536743164

Token 427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2793557345867157
    2. ' and' → logprob: -1.529355764389038
    3. ':
' → logprob: -3.779355764389038
    4. 'and' → logprob: -5.654355525970459
    5. '   ' → logprob: -7.779355525970459
    6. ' :' → logprob: -8.404356002807617
    7. ' ' → logprob: -11.029356002807617
    8. ' :
' → logprob: -11.279356002807617
    9. ')' → logprob: -11.404356002807617
    10. '):' → logprob: -11.904356002807617

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029851382598280907
    2. ' if' → logprob: -4.40485143661499
    3. ':' → logprob: -4.52985143661499
    4. '   ' → logprob: -5.90485143661499
    5. 'if' → logprob: -6.65485143661499
    6. ':
' → logprob: -7.02985143661499
    7. ' and' → logprob: -8.029850959777832
    8. '<|end|>' → logprob: -8.154850959777832
    9. '        
' → logprob: -8.654850959777832
    10. '    ' → logprob: -9.279850959777832

Token 429: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6339477896690369
    2. 'if' (adapté à ' if') → logprob: -1.0089478492736816
    3. ' if' → logprob: -3.2589478492736816
    4. ' and' → logprob: -3.8839478492736816
    5. ':' → logprob: -4.258947849273682
    6. 'and' → logprob: -4.383947849273682
    7. '           ' → logprob: -5.133947849273682
    8. ':
' → logprob: -5.508947849273682
    9. '#' → logprob: -6.508947849273682
    10. 'while' → logprob: -6.758947849273682

Token 430: ' xor' (ID: 106402)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5188987255096436
    2. ' (' → logprob: -1.3938987255096436
    3. ' xor' → logprob: -2.5188987255096436
    4. 'xor' → logprob: -2.7688987255096436
    5. '(A' → logprob: -5.143898963928223
    6. '(r' → logprob: -5.643898963928223
    7. 'A' → logprob: -7.143898963928223
    8. ' A' → logprob: -7.518898963928223
    9. '((' → logprob: -7.768898963928223
    10. 'x' → logprob: -8.018898963928223

Token 431: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.021578658372163773
    2. '&' → logprob: -3.896578550338745
    3. '&A' → logprob: -7.521578788757324
    4. ' |' → logprob: -8.896578788757324
    5. '|' → logprob: -9.146578788757324
    6. ' ^' → logprob: -9.771578788757324
    7. '&r' → logprob: -10.021578788757324
    8. '^' → logprob: -10.521578788757324
    9. ' ' → logprob: -10.771578788757324
    10. '&a' → logprob: -11.021578788757324

Token 432: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.201441690325737
    2. ' A' → logprob: -1.7014416456222534
    3. '(A' → logprob: -11.951441764831543
    4. '<|end|>' → logprob: -12.576441764831543
    5. ' (' → logprob: -12.701441764831543
    6. '   ' → logprob: -12.701441764831543
    7. ' ' → logprob: -12.951441764831543
    8. '[A' → logprob: -12.951441764831543
    9. '	A' → logprob: -12.951441764831543
    10. '=A' → logprob: -13.201441764831543

Token 433: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0002371521550230682
    2. '[' → logprob: -8.375237464904785
    3. '[
' → logprob: -12.750237464904785
    4. 'r' → logprob: -13.250237464904785
    5. ' [' → logprob: -13.750237464904785
    6. '[s' → logprob: -15.750237464904785
    7. '
' → logprob: -16.50023651123047
    8. '```' → logprob: -16.50023651123047
    9. '[a' → logprob: -17.00023651123047
    10. '[t' → logprob: -17.12523651123047

Token 434: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009746171534061432
    2. ']==' → logprob: -4.759746074676514
    3. ']:' → logprob: -7.759746074676514
    4. ')' → logprob: -8.759746551513672
    5. '[' → logprob: -8.884746551513672
    6. '==' → logprob: -9.259746551513672
    7. ' ]' → logprob: -9.259746551513672
    8. ' ==' → logprob: -9.259746551513672
    9. ')==' → logprob: -10.384746551513672
    10. ']:
' → logprob: -10.634746551513672

Token 435: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010777556337416172
    2. ' ==' → logprob: -4.635777473449707
    3. ':' → logprob: -7.510777473449707
    4. ')==' → logprob: -8.635777473449707
    5. ')' → logprob: -9.135777473449707
    6. '!=' → logprob: -9.760777473449707
    7. '=' → logprob: -10.135777473449707
    8. '==
' → logprob: -10.260777473449707
    9. ':
' → logprob: -11.135777473449707
    10. ']==' → logprob: -11.385777473449707

Token 436: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '０' → logprob: -18.875295639038086
    4. '۰' → logprob: -18.875295639038086
    5. '٠' → logprob: -19.750295639038086
    6. ' ' → logprob: -20.375295639038086
    7. '=' → logprob: -20.625295639038086
    8. 's' → logprob: -20.875295639038086
    9. '  ' → logprob: -20.875295639038086
    10. '   ' → logprob: -21.000295639038086

Token 437: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -18.37502098083496
    4. '０' → logprob: -18.50002098083496
    5. '   ' → logprob: -19.00002098083496
    6. '٠' → logprob: -19.87502098083496
    7. '  ' → logprob: -20.25002098083496
    8. '                   ' → logprob: -20.50002098083496
    9. '```' → logprob: -20.50002098083496
    10. '=' → logprob: -20.87502098083496

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12860362231731415
    2. ':
' → logprob: -2.12860369682312
    3. ' and' → logprob: -7.003603458404541
    4. '       ' → logprob: -7.378603458404541
    5. ' :' → logprob: -9.7536039352417
    6. ' :
' → logprob: -10.8786039352417
    7. '           ' → logprob: -11.2536039352417
    8. ':
' → logprob: -11.3786039352417
    9. '):
' → logprob: -12.0036039352417
    10. '<|end|>' → logprob: -12.0036039352417

Token 439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4530123472213745
    2. ':' → logprob: -1.3280123472213745
    3. ':
' → logprob: -2.578012466430664
    4. '       ' → logprob: -4.203012466430664
    5. ' xor' → logprob: -5.703012466430664
    6. 'xor' → logprob: -6.703012466430664
    7. ' :' → logprob: -7.203012466430664
    8. ' :
' → logprob: -7.453012466430664
    9. '        ' → logprob: -7.953012466430664
    10. '=' → logprob: -8.203012466430664

Token 440: ' #' (ID: 1069)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.2707785964012146
    2. '           ' → logprob: -1.6457786560058594
    3. ' xor' → logprob: -3.3957786560058594
    4. '       ' → logprob: -4.645778656005859
    5. '               ' → logprob: -7.770778656005859
    6. '
' → logprob: -8.27077865600586
    7. 'x' → logprob: -8.89577865600586
    8. '   ' → logprob: -9.02077865600586
    9. '#' (adapté à ' #') → logprob: -10.27077865600586
    10. '```' → logprob: -10.27077865600586

Token 441: ' Si' (ID: 7832)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.0170025285333395
    2. '           ' → logprob: -4.642002582550049
    3. '       ' → logprob: -5.392002582550049
    4. ' xor' → logprob: -6.267002582550049
    5. '   ' → logprob: -7.267002582550049
    6. '               ' → logprob: -11.14200210571289
    7. 'x' → logprob: -11.39200210571289
    8. ' ' → logprob: -12.39200210571289
    9. '
' → logprob: -12.39200210571289
    10. '      ' → logprob: -12.76700210571289

Token 442: ' l' (ID: 305)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.24499467015266418
    2. ' xor' → logprob: -2.119994640350342
    3. '           ' → logprob: -2.744994640350342
    4. '   ' → logprob: -4.869994640350342
    5. '       ' → logprob: -5.119994640350342
    6. 'not' → logprob: -5.869994640350342
    7. ' not' → logprob: -5.869994640350342
    8. 'r' → logprob: -6.369994640350342
    9. ' le' → logprob: -6.494994640350342
    10. ' ' → logprob: -6.494994640350342

Token 443: ''aj' (ID: 116735)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.059482283890247345
    2. ' xor' → logprob: -4.434482097625732
    3. '   ' → logprob: -4.559482097625732
    4. 'A' → logprob: -5.059482097625732
    5. '#' → logprob: -5.184482097625732
    6. 'r' → logprob: -5.559482097625732
    7. ''' → logprob: -6.184482097625732
    8. '^' → logprob: -6.309482097625732
    9. ''aj' → logprob: -6.434482097625732
    10. 'a' → logprob: -6.684482097625732

Token 444: 'out' (ID: 468)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5139743685722351
    2. 'out' → logprob: -1.0139744281768799
    3. 'outer' → logprob: -3.63897442817688
    4. 'r' → logprob: -5.513974189758301
    5. 'oute' → logprob: -5.638974189758301
    6. 'our' → logprob: -5.888974189758301
    7. ' xor' → logprob: -7.888974189758301
    8. 'x' → logprob: -8.2639741897583
    9. '^' → logprob: -8.5139741897583
    10. 'ex' → logprob: -8.6389741897583

Token 445: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5687341690063477
    2. '           ' → logprob: -1.5687341690063477
    3. '=' → logprob: -2.4437341690063477
    4. 'A' → logprob: -3.5687341690063477
    5. ' of' → logprob: -3.8187341690063477
    6. '       ' → logprob: -4.068734169006348
    7. ' d' → logprob: -4.443734169006348
    8. ')' → logprob: -4.693734169006348
    9. ' =' → logprob: -4.693734169006348
    10. '   ' → logprob: -4.943734169006348

Token 446: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07919501513242722
    2. ' A' → logprob: -2.579195022583008
    3. ' l' → logprob: -9.454195022583008
    4. 'l' → logprob: -9.704195022583008
    5. ' the' → logprob: -9.704195022583008
    6. ' la' → logprob: -10.579195022583008
    7. 'the' → logprob: -10.704195022583008
    8. '(A' → logprob: -10.704195022583008
    9. ' ' → logprob: -11.079195022583008
    10. ' (' → logprob: -12.079195022583008

Token 447: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -7.338466093642637e-05
    2. 'r' → logprob: -10.125073432922363
    3. '[' → logprob: -10.375073432922363
    4. ' [' → logprob: -14.375073432922363
    5. '[
' → logprob: -14.750073432922363
    6. '	r' → logprob: -15.375073432922363
    7. ' r' → logprob: -15.375073432922363
    8. '(r' → logprob: -16.000072479248047
    9. '```' → logprob: -16.250072479248047
    10. '[right' → logprob: -16.500072479248047

Token 448: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023157147224992514
    2. ')' → logprob: -6.502315521240234
    3. ' ]' → logprob: -9.002315521240234
    4. 'au' → logprob: -9.252315521240234
    5. ' à' → logprob: -9.502315521240234
    6. '}' → logprob: -10.127315521240234
    7. 'r' → logprob: -10.502315521240234
    8. '],' → logprob: -10.627315521240234
    9. 'à' → logprob: -10.814815521240234
    10. '])' → logprob: -10.814815521240234

Token 449: ' ne' (ID: 453)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6021856665611267
    2. '&' → logprob: -2.4771857261657715
    3. ']' → logprob: -2.7271857261657715
    4. ':' → logprob: -3.6021857261657715
    5. '   ' → logprob: -3.6021857261657715
    6. ' ' → logprob: -3.8521857261657715
    7. 's' → logprob: -3.9771857261657715
    8. '=' → logprob: -4.1021857261657715
    9. '|' → logprob: -4.3521857261657715
    10. '       ' → logprob: -4.6021857261657715

Token 450: ' partage' (ID: 70806)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cr' → logprob: -1.0619852542877197
    2. 'b' → logprob: -1.5619852542877197
    3. 'cause' → logprob: -2.0619852542877197
    4. ' crée' → logprob: -2.8119852542877197
    5. 'mod' → logprob: -2.9369852542877197
    6. 'introdu' → logprob: -3.6869852542877197
    7. 'a' → logprob: -3.6869852542877197
    8. 'change' → logprob: -3.9369852542877197
    9. 'br' → logprob: -4.186985015869141
    10. 'c' → logprob: -4.311985015869141

Token 451: ' aucun' (ID: 41678)
  Prédit: ' aucun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aucun' → logprob: -0.08085247129201889
    2. ' pas' → logprob: -3.080852508544922
    3. 'auc' → logprob: -4.580852508544922
    4. ' auc' → logprob: -4.705852508544922
    5. ' les' → logprob: -6.205852508544922
    6. ' aucune' → logprob: -6.455852508544922
    7. 's' → logprob: -6.455852508544922
    8. 'pas' → logprob: -6.830852508544922
    9. ' des' → logprob: -7.080852508544922
    10. '&' → logprob: -7.330852508544922

Token 452: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.18095508217811584
    2. ' bit' → logprob: -1.8059550523757935
    3. '1' → logprob: -8.055954933166504
    4. 'bits' → logprob: -8.055954933166504
    5. 'b' → logprob: -8.180954933166504
    6. ' ' → logprob: -9.555954933166504
    7. '```' → logprob: -9.930954933166504
    8. 'de' → logprob: -10.305954933166504
    9. ' de' → logprob: -10.555954933166504
    10. ' bits' → logprob: -10.805954933166504

Token 453: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.5834447741508484
    2. ',' → logprob: -2.333444833755493
    3. '           ' → logprob: -2.333444833755493
    4. ' with' → logprob: -2.583444833755493
    5. 's' → logprob: -2.708444833755493
    6. ' ' → logprob: -3.208444833755493
    7. '1' → logprob: -4.458444595336914
    8. '   ' → logprob: -4.583444595336914
    9. '       ' → logprob: -4.958444595336914
    10. ':' → logprob: -5.208444595336914

Token 454: ' le' (ID: 505)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4562155306339264
    2. ' xor' → logprob: -1.081215500831604
    3. ' le' → logprob: -3.8312156200408936
    4. 'le' → logprob: -5.7062153816223145
    5. 'l' → logprob: -7.4562153816223145
    6. ' l' → logprob: -7.9562153816223145
    7. ' ' → logprob: -8.081215858459473
    8. ' ' → logprob: -8.206215858459473
    9. ' la' → logprob: -8.331215858459473
    10. '```' → logprob: -9.456215858459473

Token 455: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.011278292164206505
    2. ' xor' → logprob: -4.51127815246582
    3. 'current' → logprob: -9.51127815246582
    4. ' current' → logprob: -9.63627815246582
    5. 'X' → logprob: -10.26127815246582
    6. 'x' → logprob: -10.76127815246582
    7. ' XOR' → logprob: -11.76127815246582
    8. ' ' → logprob: -12.26127815246582
    9. '```' → logprob: -12.26127815246582
    10. ' ' → logprob: -12.51127815246582

Token 456: ' courant' (ID: 74694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26039767265319824
    2. ':' → logprob: -2.0103976726531982
    3. '           ' → logprob: -3.2603976726531982
    4. ':
' → logprob: -3.5103976726531982
    5. ' ,' → logprob: -4.885397911071777
    6. '       ' → logprob: -5.760397911071777
    7. '=' → logprob: -5.885397911071777
    8. '               ' → logprob: -6.010397911071777
    9. ' ^=' → logprob: -6.135397911071777
    10. '^' → logprob: -6.510397911071777

Token 457: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8024414777755737
    2. ':
' → logprob: -0.9274414777755737
    3. ',' → logprob: -2.3024415969848633
    4. '           ' → logprob: -3.3024415969848633
    5. '               ' → logprob: -4.802441596984863
    6. ' :
' → logprob: -5.427441596984863
    7. ' :' → logprob: -5.802441596984863
    8. ',
' → logprob: -6.427441596984863
    9. '       ' → logprob: -7.552441596984863
    10. '=' → logprob: -8.052441596984863

Token 458: 'auc' (ID: 11816)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6153581738471985
    2. ')' → logprob: -2.1153581142425537
    3. '):
' → logprob: -2.2403581142425537
    4. ' ),' → logprob: -2.3653581142425537
    5. '):' → logprob: -3.4903581142425537
    6. ' ):
' → logprob: -3.8653581142425537
    7. 'xor' → logprob: -3.9903581142425537
    8. '           ' → logprob: -4.115358352661133
    9. ' )' → logprob: -4.240358352661133
    10. ' xor' → logprob: -4.240358352661133

Token 459: 'une' (ID: 2561)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.04298526048660278
    2. ' &' → logprob: -3.792985200881958
    3. ' bit' → logprob: -4.792985439300537
    4. ')' → logprob: -5.167985439300537
    5. ' ' → logprob: -6.292985439300537
    6. '|' → logprob: -7.292985439300537
    7. 'x' → logprob: -7.667985439300537
    8. '=' → logprob: -7.667985439300537
    9. ' des' → logprob: -8.667984962463379
    10. '   ' → logprob: -8.792984962463379

Token 460: ' super' (ID: 2539)
  Prédit: 'collision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collision' → logprob: -0.1384393870830536
    2. ' collision' → logprob: -2.388439416885376
    3. 'conf' → logprob: -4.138439178466797
    4. 'con' → logprob: -4.888439178466797
    5. 'intersection' → logprob: -5.888439178466797
    6. ' overlap' → logprob: -6.138439178466797
    7. ')' → logprob: -6.388439178466797
    8. 'op' → logprob: -6.513439178466797
    9. 'inter' → logprob: -7.013439178466797
    10. '```' → logprob: -7.638439178466797

Token 461: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.03439372405409813
    2. 'pos' → logprob: -3.659393787384033
    3. 'set' → logprob: -5.909393787384033
    4. 'xor' → logprob: -6.159393787384033
    5. '&' → logprob: -7.034393787384033
    6. 'po' → logprob: -7.659393787384033
    7. 'posé' → logprob: -7.784393787384033
    8. 'pose' → logprob: -8.409393310546875
    9. '```' → logprob: -8.784393310546875
    10. 'im' → logprob: -8.784393310546875

Token 462: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.16779711842536926
    2. ' des' → logprob: -3.292797088623047
    3. ')' → logprob: -3.792797088623047
    4. '):
' → logprob: -3.792797088623047
    5. '           ' → logprob: -3.917797088623047
    6. ' de' → logprob: -3.917797088623047
    7. '):' → logprob: -4.542797088623047
    8. ',' → logprob: -4.667797088623047
    9. '),
' → logprob: -5.542797088623047
    10. '               ' → logprob: -6.542797088623047

Token 463: ' on' (ID: 402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.8636158108711243
    2. '           ' → logprob: -0.9886158108711243
    3. ' xor' → logprob: -1.9886157512664795
    4. '               ' → logprob: -2.7386157512664795
    5. '       ' → logprob: -6.863615989685059
    6. '		' → logprob: -7.113615989685059
    7. '			' → logprob: -7.488615989685059
    8. '	       ' → logprob: -7.613615989685059
    9. '   ' → logprob: -7.863615989685059
    10. '            ' → logprob: -9.238615989685059

Token 464: ' ét' (ID: 4976)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.120665431022644
    2. 'xor' → logprob: -1.120665431022644
    3. ' xor' → logprob: -1.245665431022644
    4. '       ' → logprob: -3.6206655502319336
    5. '   ' → logprob: -4.495665550231934
    6. ':' → logprob: -4.870665550231934
    7. '               ' → logprob: -5.870665550231934
    8. ':
' → logprob: -6.495665550231934
    9. '^' → logprob: -6.870665550231934
    10. ' ^=' → logprob: -6.995665550231934

Token 465: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3259645402431488
    2. 'ends' → logprob: -1.7009645700454712
    3. 'endre' → logprob: -2.5759644508361816
    4. 'r' → logprob: -4.450964450836182
    5. 'ire' → logprob: -5.325964450836182
    6. 'endra' → logprob: -7.825964450836182
    7. 'and' → logprob: -8.20096492767334
    8. 'e' → logprob: -8.57596492767334
    9. 'nd' → logprob: -8.70096492767334
    10. 'ale' → logprob: -8.70096492767334

Token 466: ' la' (ID: 557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.670457661151886
    2. 'r' → logprob: -0.795457661151886
    3. 'xor' → logprob: -4.79545783996582
    4. ' xor' → logprob: -5.04545783996582
    5. '               ' → logprob: -5.29545783996582
    6. ' r' → logprob: -5.29545783996582
    7. '   ' → logprob: -5.79545783996582
    8. ' la' → logprob: -6.42045783996582
    9. '       ' → logprob: -6.42045783996582
    10. ' le' → logprob: -6.67045783996582

Token 467: ' fenêtre' (ID: 109648)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.39412567019462585
    2. 'r' → logprob: -1.6441256999969482
    3. 'window' → logprob: -2.6441256999969482
    4. ' xor' → logprob: -3.0191256999969482
    5. ' window' → logprob: -4.894125461578369
    6. '   ' → logprob: -6.394125461578369
    7. ' ' → logprob: -7.269125461578369
    8. 'x' → logprob: -7.894125461578369
    9. 'fen' → logprob: -8.019125938415527
    10. ' r' → logprob: -8.394125938415527

Token 468: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.236454039812088
    2. ':' → logprob: -1.9864540100097656
    3. ':
' → logprob: -2.8614540100097656
    4. '               ' → logprob: -5.736454010009766
    5. '       ' → logprob: -5.986454010009766
    6. ',' → logprob: -6.111454010009766
    7. ' :' → logprob: -6.361454010009766
    8. ' :
' → logprob: -6.611454010009766
    9. '            
' → logprob: -6.861454010009766
    10. ' xor' → logprob: -7.611454010009766

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06760107725858688
    2. ':
' → logprob: -3.567600965499878
    3. ':' → logprob: -3.942600965499878
    4. 'xor' → logprob: -5.067601203918457
    5. ' xor' → logprob: -5.692601203918457
    6. '       ' → logprob: -5.817601203918457
    7. '            
' → logprob: -7.067601203918457
    8. '):
' → logprob: -7.567601203918457
    9. ' :
' → logprob: -7.567601203918457
    10. '):' → logprob: -7.567601203918457

Token 470: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -0.018268052488565445
    2. '           ' → logprob: -5.01826810836792
    3. '   ' → logprob: -5.14326810836792
    4. ' xor' → logprob: -5.64326810836792
    5. '       ' → logprob: -6.26826810836792
    6. 'x' → logprob: -9.143267631530762
    7. '               ' → logprob: -10.768267631530762
    8. ' ' → logprob: -11.143267631530762
    9. '  ' → logprob: -11.143267631530762
    10. '
' → logprob: -11.268267631530762

Token 471: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.020707247778773308
    2. '^' → logprob: -3.895707130432129
    3. ' |=' → logprob: -9.520707130432129
    4. ' ' → logprob: -10.270707130432129
    5. '=' → logprob: -10.520707130432129
    6. ' ^' → logprob: -11.145707130432129
    7. '|' → logprob: -11.395707130432129
    8. ' =' → logprob: -13.145707130432129
    9. '```' → logprob: -13.895707130432129
    10. '	' → logprob: -15.020707130432129

Token 472: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04858839511871338
    2. ' A' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.673588752746582
    4. ' ' → logprob: -14.923588752746582
    5. '	A' → logprob: -16.048587799072266
    6. '  ' → logprob: -16.923587799072266
    7. '_A' → logprob: -17.548587799072266
    8. ' ' → logprob: -18.548587799072266
    9. '    ' → logprob: -18.798587799072266
    10. '```' → logprob: -18.798587799072266

Token 473: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.085517113911919e-05
    2. 'r' → logprob: -10.25005054473877
    3. '[' → logprob: -11.12505054473877
    4. '[
' → logprob: -15.50005054473877
    5. '	r' → logprob: -15.87505054473877
    6. '```' → logprob: -16.125051498413086
    7. ' [' → logprob: -16.375051498413086
    8. '   ' → logprob: -16.875051498413086
    9. '(r' → logprob: -17.000051498413086
    10. '[R' → logprob: -17.250051498413086

Token 474: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003572388319298625
    2. ' ]' → logprob: -6.003572463989258
    3. '[r' → logprob: -7.503572463989258
    4. ']
' → logprob: -8.003572463989258
    5. '<|end|>' → logprob: -9.628572463989258
    6. '       ' → logprob: -9.628572463989258
    7. ')' → logprob: -10.628572463989258
    8. '   ' → logprob: -11.253572463989258
    9. 'r' → logprob: -12.128572463989258
    10. ')]' → logprob: -12.253572463989258

Token 475: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009115917608141899
    2. 'r' → logprob: -4.759115695953369
    3. '		' → logprob: -8.384116172790527
    4. '       ' → logprob: -8.759116172790527
    5. ' r' → logprob: -10.634116172790527
    6. '            
' → logprob: -10.634116172790527
    7. '	       ' → logprob: -11.259116172790527
    8. ',' → logprob: -11.634116172790527
    9. '<|end|>' → logprob: -11.884116172790527
    10. '
' → logprob: -12.384116172790527

Token 476: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00032747918157838285
    2. '           ' → logprob: -8.250327110290527
    3. ' r' → logprob: -9.875327110290527
    4. '       ' → logprob: -11.250327110290527
    5. '   ' → logprob: -13.625327110290527
    6. '               ' → logprob: -15.250327110290527
    7. '_r' → logprob: -16.000328063964844
    8. '          ' → logprob: -17.250328063964844
    9. '	r' → logprob: -17.375328063964844
    10. '<|end|>' → logprob: -17.375328063964844

Token 477: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.016136420890688896
    2. ' +=' → logprob: -4.141136646270752
    3. '+' → logprob: -9.266136169433594
    4. ']+=' → logprob: -12.391136169433594
    5. '=' → logprob: -13.391136169433594
    6. '<|end|>' → logprob: -14.016136169433594
    7. '++' → logprob: -14.891136169433594
    8. '+='' → logprob: -14.891136169433594
    9. '+="' → logprob: -15.891136169433594
    10. '```' → logprob: -16.266136169433594

Token 478: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '<|end|>' → logprob: -18.12507438659668
    4. '```' → logprob: -18.25007438659668
    5. '   ' → logprob: -18.37507438659668
    6. '0' → logprob: -21.50007438659668
    7. '  ' → logprob: -21.50007438659668
    8. '۱' → logprob: -21.75007438659668
    9. '１' → logprob: -21.87507438659668
    10. '	' → logprob: -22.25007438659668

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.000003814697266
    4. '```' → logprob: -19.000003814697266
    5. '<|end|>' → logprob: -20.250003814697266
    6. '１' → logprob: -22.375003814697266
    7. '  ' → logprob: -22.375003814697266
    8. '[' → logprob: -22.500003814697266
    9. '۱' → logprob: -22.625003814697266
    10. '#' → logprob: -23.062503814697266

Token 480: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20285573601722717
    2. '       ' → logprob: -1.7028557062149048
    3. '<|end|>' → logprob: -7.077855587005615
    4. ',' → logprob: -8.702856063842773
    5. '   ' → logprob: -8.827856063842773
    6. '
' → logprob: -9.202856063842773
    7. ')' → logprob: -10.327856063842773
    8. '<|end|>' → logprob: -10.452856063842773
    9. '               ' → logprob: -10.827856063842773
    10. '		' → logprob: -11.202856063842773

Token 481: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5763156414031982
    2. '           ' → logprob: -0.8263156414031982
    3. 'else' → logprob: -8.451315879821777
    4. '   ' → logprob: -9.076315879821777
    5. '```' → logprob: -10.826315879821777
    6. 'ans' → logprob: -11.076315879821777
    7. 'elif' → logprob: -12.451315879821777
    8. '               ' → logprob: -13.701315879821777
    9. '<|end|>' → logprob: -13.826315879821777
    10. '		' → logprob: -14.201315879821777

Token 482: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0010534112807363272
    2. '           ' → logprob: -7.001053333282471
    3. ' ans' → logprob: -9.626053810119629
    4. '       ' → logprob: -10.626053810119629
    5. '   ' → logprob: -10.751053810119629
    6. '
' → logprob: -10.876053810119629
    7. '	ans' → logprob: -11.626053810119629
    8. '(ans' → logprob: -13.376053810119629
    9. '
' → logprob: -15.876053810119629
    10. '            
' → logprob: -15.876053810119629

Token 483: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.0590548703912646e-05
    2. '           ' → logprob: -10.625030517578125
    3. ' ans' → logprob: -13.000030517578125
    4. '#' → logprob: -13.250030517578125
    5. '       ' → logprob: -13.875030517578125
    6. '   ' → logprob: -13.875030517578125
    7. '	ans' → logprob: -15.500030517578125
    8. '
' → logprob: -16.375030517578125
    9. '(ans' → logprob: -17.250030517578125
    10. 'answer' → logprob: -18.125030517578125

Token 484: ' ajoute' (ID: 91611)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.7994282795116305e-05
    2. ' ans' → logprob: -10.87504768371582
    3. 'continue' → logprob: -11.62504768371582
    4. 'aj' → logprob: -12.12504768371582
    5. '(ans' → logprob: -12.75004768371582
    6. '	ans' → logprob: -12.87504768371582
    7. '
' → logprob: -13.12504768371582
    8. '#' → logprob: -13.50004768371582
    9. '   ' → logprob: -13.50004768371582
    10. '+=' → logprob: -13.75004768371582

Token 485: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.015951551496982574
    2. '(r' → logprob: -4.390951633453369
    3. 'ans' → logprob: -6.265951633453369
    4. ' r' → logprob: -6.765951633453369
    5. '(ans' → logprob: -8.515951156616211
    6. ' ans' → logprob: -9.265951156616211
    7. ' (' → logprob: -10.390951156616211
    8. '   ' → logprob: -11.515951156616211
    9. 'rans' → logprob: -11.515951156616211
    10. '[r' → logprob: -11.640951156616211

Token 486: ' nombre' (ID: 9733)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002817954868078232
    2. '(r' → logprob: -6.0028181076049805
    3. ' r' → logprob: -8.25281810760498
    4. 'ans' → logprob: -11.12781810760498
    5. '[r' → logprob: -11.25281810760498
    6. '   ' → logprob: -11.50281810760498
    7. ' (' → logprob: -12.12781810760498
    8. '
' → logprob: -12.37781810760498
    9. '```' → logprob: -12.50281810760498
    10. ' ' → logprob: -12.62781810760498

Token 487: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.618128776550293
    2. 'r' → logprob: -2.493128776550293
    3. '(r' → logprob: -2.493128776550293
    4. ' +=' → logprob: -2.493128776550293
    5. '+=' → logprob: -2.618128776550293
    6. ' of' → logprob: -3.118128776550293
    7. 'of' → logprob: -3.243128776550293
    8. ' de' → logprob: -3.618128776550293
    9. 'de' → logprob: -4.993128776550293
    10. '       ' → logprob: -5.493128776550293

Token 488: ' sous' (ID: 14487)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.6733596920967102
    2. 'r' → logprob: -1.5483596324920654
    3. 's' → logprob: -1.5483596324920654
    4. 'fen' → logprob: -3.1733596324920654
    5. '[r' → logprob: -5.0483598709106445
    6. ' sous' → logprob: -5.6733598709106445
    7. 'sub' → logprob: -5.6733598709106445
    8. '(s' → logprob: -5.9233598709106445
    9. '```' → logprob: -6.2983598709106445
    10. 'élé' → logprob: -7.4233598709106445

Token 489: '-table' (ID: 35909)
  Prédit: 'arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.4930957555770874
    2. 'windows' → logprob: -1.8680957555770874
    3. 'array' → logprob: -3.118095874786377
    4. '_windows' → logprob: -3.368095874786377
    5. '   ' → logprob: -3.493095874786377
    6. '_arrays' → logprob: -3.493095874786377
    7. '_' → logprob: -3.868095874786377
    8. 'window' → logprob: -5.118095874786377
    9. '       ' → logprob: -5.118095874786377
    10. '+=' → logprob: -5.368095874786377

Token 490: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0019829985685646534
    2. 'xes' → logprob: -6.751983165740967
    3. 'au' → logprob: -8.251982688903809
    4. 'x' → logprob: -8.251982688903809
    5. 'cules' → logprob: -10.251982688903809
    6. '   ' → logprob: -10.876982688903809
    7. 'arrays' → logprob: -11.001982688903809
    8. '```' → logprob: -11.001982688903809
    9. 'naires' → logprob: -11.376982688903809
    10. 'bles' → logprob: -11.376982688903809

Token 491: ' se' (ID: 458)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.22194474935531616
    2. '+=' → logprob: -2.971944808959961
    3. '       ' → logprob: -3.471944808959961
    4. '   ' → logprob: -3.721944808959961
    5. '+=(' → logprob: -4.096944808959961
    6. '           ' → logprob: -4.471944808959961
    7. '(r' → logprob: -4.721944808959961
    8. ' (' → logprob: -5.096944808959961
    9. '(ans' → logprob: -5.346944808959961
    10. ' +' → logprob: -5.346944808959961

Token 492: ' termin' (ID: 18412)
  Prédit: 'termin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'termin' → logprob: -0.35635530948638916
    2. 'nt' → logprob: -3.1063551902770996
    3. 'fin' → logprob: -3.1063551902770996
    4. 'comm' → logprob: -3.2313551902770996
    5. 't' → logprob: -3.8563551902770996
    6. 'r' → logprob: -4.3563551902771
    7. 'val' → logprob: -4.6063551902771
    8. 'rv' → logprob: -4.7313551902771
    9. 'tt' → logprob: -4.9813551902771
    10. 'gment' → logprob: -5.1063551902771

Token 493: 'ant' (ID: 493)
  Prédit: 'nant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nant' → logprob: -0.5556852221488953
    2. 'ant' → logprob: -1.55568528175354
    3. 'nt' → logprob: -1.80568528175354
    4. 'r' → logprob: -4.180685043334961
    5. 'rant' → logprob: -4.305685043334961
    6. 'çant' → logprob: -4.680685043334961
    7. 'int' → logprob: -5.180685043334961
    8. 'à' → logprob: -6.055685043334961
    9. 'vant' → logprob: -6.805685043334961
    10. 'par' → logprob: -7.930685043334961

Token 494: ' en' (ID: 469)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.1309629678726196
    2. 'en' → logprob: -1.5059629678726196
    3. ' à' → logprob: -2.00596284866333
    4. 'r' → logprob: -2.38096284866333
    5. 'par' → logprob: -2.75596284866333
    6. 'at' → logprob: -3.25596284866333
    7. ' ici' → logprob: -3.25596284866333
    8. ' at' → logprob: -3.38096284866333
    9. ' par' → logprob: -4.00596284866333
    10. ' en' → logprob: -4.50596284866333

Token 495: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.055707842111587524
    2. ' r' → logprob: -2.9307079315185547
    3. ' ' → logprob: -7.305707931518555
    4. '`' → logprob: -9.930707931518555
    5. '[r' → logprob: -10.555707931518555
    6. '   ' → logprob: -10.680707931518555
    7. '_r' → logprob: -11.555707931518555
    8. '```' → logprob: -11.805707931518555
    9. ' ' → logprob: -12.180707931518555
    10. ' ce' → logprob: -12.180707931518555

Token 496: '-' (ID: 12)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5192570090293884
    2. '+=' → logprob: -1.0192570686340332
    3. '   ' → logprob: -4.269257068634033
    4. '+' → logprob: -5.144257068634033
    5. ' +' → logprob: -5.144257068634033
    6. '       ' → logprob: -5.394257068634033
    7. ' -' → logprob: -5.769257068634033
    8. '-' → logprob: -6.394257068634033
    9. '+=(' → logprob: -6.519257068634033
    10. '           ' → logprob: -6.644257068634033

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '   ' → logprob: -13.000005722045898
    3. ' ' → logprob: -13.500005722045898
    4. '```' → logprob: -14.000005722045898
    5. '`' → logprob: -14.750005722045898
    6. 'r' → logprob: -15.000005722045898
    7. '-' → logprob: -15.125005722045898
    8. '       ' → logprob: -15.500005722045898
    9. '           ' → logprob: -15.875005722045898
    10. '2' → logprob: -17.0000057220459

Token 498: ' et' (ID: 859)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.29678764939308167
    2. '           ' → logprob: -1.7967876195907593
    3. '+=' → logprob: -2.796787738800049
    4. ' ans' → logprob: -4.421787738800049
    5. '       ' → logprob: -4.921787738800049
    6. ' +' → logprob: -5.671787738800049
    7. '   ' → logprob: -6.296787738800049
    8. '
' → logprob: -6.671787738800049
    9. '+' → logprob: -7.296787738800049
    10. '(ans' → logprob: -7.671787738800049

Token 499: ' comm' (ID: 1394)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comm' → logprob: -0.01185558456927538
    2. 'part' → logprob: -5.011855602264404
    3. 'com' → logprob: -5.886855602264404
    4. '   ' → logprob: -7.136855602264404
    5. 'dé' → logprob: -7.761855602264404
    6. 'd' → logprob: -8.761855125427246
    7. ' ' → logprob: -8.761855125427246
    8. 's' → logprob: -8.761855125427246
    9. '```' → logprob: -8.886855125427246
    10. 'ét' → logprob: -9.636855125427246

Token 500: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.05385340377688408
    2. 'enc' → logprob: -3.6788535118103027
    3. 'enant' → logprob: -4.803853511810303
    4. 'anç' → logprob: -5.178853511810303
    5. 'encent' → logprob: -5.428853511810303
    6. 'enç' → logprob: -5.428853511810303
    7. 'e' → logprob: -6.553853511810303
    8. 'ent' → logprob: -7.053853511810303
    9. '   ' → logprob: -7.803853511810303
    10. '[' → logprob: -8.803853034973145

Token 501: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.006453997455537319
    2. '```' → logprob: -6.631453990936279
    3. 'anç' → logprob: -7.006453990936279
    4. 'cant' → logprob: -7.006453990936279
    5. 'ç' → logprob: -7.131453990936279
    6. 'nc' → logprob: -7.881453990936279
    7. '}' → logprob: -8.381454467773438
    8. 'c' → logprob: -8.631454467773438
    9. 'n' → logprob: -8.631454467773438
    10. '_' → logprob: -9.506454467773438

Token 502: ' entre' (ID: 3853)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.090355396270752
    2. 'à' → logprob: -1.590355396270752
    3. 'at' → logprob: -1.965355396270752
    4. '           ' → logprob: -2.090355396270752
    5. ' at' → logprob: -2.215355396270752
    6. 'au' → logprob: -4.340355396270752
    7. 'en' → logprob: -4.465355396270752
    8. ' par' → logprob: -4.590355396270752
    9. 'par' → logprob: -4.840355396270752
    10. ' en' → logprob: -5.340355396270752

Token 503: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002486715093255043
    2. ' l' → logprob: -6.002486705780029
    3. '   ' → logprob: -11.877487182617188
    4. '	l' → logprob: -13.002487182617188
    5. '[l' → logprob: -14.502487182617188
    6. '_l' → logprob: -14.877487182617188
    7. '```' → logprob: -15.002487182617188
    8. ' ' → logprob: -15.377487182617188
    9. '0' → logprob: -16.002487182617188
    10. '  ' → logprob: -16.377487182617188

Token 504: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.020066920667886734
    2. ' et' → logprob: -4.395066738128662
    3. 'and' → logprob: -5.020066738128662
    4. ' and' → logprob: -7.645066738128662
    5. 'r' → logprob: -8.27006721496582
    6. 'l' → logprob: -8.89506721496582
    7. ',' → logprob: -10.77006721496582
    8. '```' → logprob: -11.89506721496582
    9. '<|end|>' → logprob: -12.39506721496582
    10. 'etl' → logprob: -13.14506721496582

Token 505: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0336541123688221
    2. ' r' → logprob: -3.40865421295166
    3. ' ' → logprob: -12.65865421295166
    4. '   ' → logprob: -12.90865421295166
    5. ' ' → logprob: -14.03365421295166
    6. 'l' → logprob: -14.28365421295166
    7. '_r' → logprob: -14.90865421295166
    8. '	r' → logprob: -15.03365421295166
    9. '
' → logprob: -16.033653259277344
    10. '(r' → logprob: -16.408653259277344

Token 506: '-' (ID: 12)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6045414209365845
    2. '+' → logprob: -0.9795414209365845
    3. ' +=' → logprob: -3.229541301727295
    4. '+=' → logprob: -3.979541301727295
    5. '   ' → logprob: -4.979541301727295
    6. '       ' → logprob: -5.354541301727295
    7. '+l' → logprob: -5.979541301727295
    8. '           ' → logprob: -6.104541301727295
    9. ' ' → logprob: -7.854541301727295
    10. '-' → logprob: -8.229541778564453

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. '0' → logprob: -12.500011444091797
    3. '2' → logprob: -12.500011444091797
    4. ' ' → logprob: -13.125011444091797
    5. '   ' → logprob: -14.000011444091797
    6. 'r' → logprob: -14.375011444091797
    7. 'l' → logprob: -15.875011444091797
    8. '```' → logprob: -16.250011444091797
    9. '           ' → logprob: -16.750011444091797
    10. '       ' → logprob: -16.937511444091797

Token 508: '
' (ID: 198)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16637791693210602
    2. '           ' → logprob: -2.0413780212402344
    3. '+=' → logprob: -4.416378021240234
    4. '       ' → logprob: -5.541378021240234
    5. ' ans' → logprob: -5.791378021240234
    6. ' +' → logprob: -6.291378021240234
    7. '(ans' → logprob: -6.791378021240234
    8. '
' → logprob: -7.541378021240234
    9. '+' → logprob: -8.291378021240234
    10. 'ans' → logprob: -8.541378021240234

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01004740595817566
    2. 'ans' → logprob: -5.010047435760498
    3. ' ans' → logprob: -6.260047435760498
    4. '       ' → logprob: -6.760047435760498
    5. '   ' → logprob: -8.76004695892334
    6. '(ans' → logprob: -9.88504695892334
    7. '	ans' → logprob: -11.01004695892334
    8. '```' → logprob: -11.88504695892334
    9. '
' → logprob: -12.13504695892334
    10. ',' → logprob: -12.51004695892334

Token 510: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.047524042427539825
    2. '           ' → logprob: -3.2975239753723145
    3. ' ans' → logprob: -4.7975239753723145
    4. '   ' → logprob: -7.4225239753723145
    5. '       ' → logprob: -7.6725239753723145
    6. '	ans' → logprob: -9.797524452209473
    7. '(ans' → logprob: -9.797524452209473
    8. 'answer' → logprob: -12.422524452209473
    9. '
' → logprob: -12.422524452209473
    10. '               ' → logprob: -13.797524452209473

Token 511: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5760742425918579
    2. '+=' → logprob: -0.8260742425918579
    3. '+=(' → logprob: -9.201074600219727
    4. ']+=' → logprob: -11.076074600219727
    5. '+' → logprob: -11.326074600219727
    6. '   ' → logprob: -12.951074600219727
    7. '	' → logprob: -13.701074600219727
    8. '    ' → logprob: -13.826074600219727
    9. '=' → logprob: -14.701074600219727
    10. '+='' → logprob: -14.826074600219727

Token 512: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12752558290958405
    2. '(r' → logprob: -2.127525568008423
    3. ' r' → logprob: -7.752525806427002
    4. ' (' → logprob: -8.752525329589844
    5. '(' → logprob: -12.502525329589844
    6. '   ' → logprob: -13.377525329589844
    7. '[r' → logprob: -13.627525329589844
    8. '_r' → logprob: -13.877525329589844
    9. ' ' → logprob: -14.002525329589844
    10. '	r' → logprob: -15.127525329589844

Token 513: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004804495722055435
    2. ' r' → logprob: -5.629804611206055
    3. '(r' → logprob: -6.754804611206055
    4. '   ' → logprob: -10.879804611206055
    5. ' (' → logprob: -11.254804611206055
    6. ')' → logprob: -13.254804611206055
    7. ' ' → logprob: -13.379804611206055
    8. '	r' → logprob: -13.754804611206055
    9. '_r' → logprob: -14.004804611206055
    10. '[r' → logprob: -14.129804611206055

Token 514: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.033658839762210846
    2. '-' → logprob: -3.408658742904663
    3. '   ' → logprob: -11.908658981323242
    4. ' ' → logprob: -12.533658981323242
    5. ')' → logprob: -13.908658981323242
    6. '-l' → logprob: -14.283658981323242
    7. '<|end|>' → logprob: -14.908658981323242
    8. '  ' → logprob: -15.158658981323242
    9. '	' → logprob: -16.033658981323242
    10. '    ' → logprob: -16.783658981323242

Token 515: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.822646693966817e-06
    2. '1' → logprob: -12.250007629394531
    3. ' l' → logprob: -12.875007629394531
    4. '   ' → logprob: -15.375007629394531
    5. '	l' → logprob: -16.37500762939453
    6. ' ' → logprob: -17.37500762939453
    7. '  ' → logprob: -17.62500762939453
    8. '    ' → logprob: -18.12500762939453
    9. '_l' → logprob: -19.50000762939453
    10. '(l' → logprob: -19.87500762939453

Token 516: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.2576454335358e-05
    2. ' )' → logprob: -9.375092506408691
    3. ')
' → logprob: -12.250092506408691
    4. ')*' → logprob: -13.750092506408691
    5. ')#' → logprob: -15.250092506408691
    6. ')**' → logprob: -15.375092506408691
    7. '))' → logprob: -15.875092506408691
    8. '```' → logprob: -15.875092506408691
    9. ' ' → logprob: -16.000093460083008
    10. ')

' → logprob: -16.125093460083008

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014636212959885597
    2. '<|end|>' → logprob: -4.514636039733887
    3. '
' → logprob: -6.014636039733887
    4. '   ' → logprob: -8.389636039733887
    5. 'else' → logprob: -8.389636039733887
    6. ')' → logprob: -8.514636039733887
    7. '\n' → logprob: -9.264636039733887
    8. ' else' → logprob: -9.389636039733887
    9. '<|end|>' → logprob: -9.389636039733887
    10. '        
' → logprob: -10.264636039733887

Token 518: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07929985225200653
    2. 'else' (adapté à ' else') → logprob: -2.5792999267578125
    3. ' else' → logprob: -7.9542999267578125
    4. '   ' → logprob: -10.204299926757812
    5. 'elif' → logprob: -10.954299926757812
    6. '           ' → logprob: -13.204299926757812
    7. '	else' → logprob: -13.829299926757812
    8. '```' → logprob: -14.704299926757812
    9. '	' → logprob: -15.829299926757812
    10. '}else' → logprob: -16.079299926757812

Token 519: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1643199771642685
    2. ':
' → logprob: -2.0393199920654297
    3. '           ' → logprob: -3.9143199920654297
    4. '       ' → logprob: -7.03931999206543
    5. '   ' → logprob: -7.53931999206543
    6. 's' → logprob: -11.41431999206543
    7. ',' → logprob: -12.16431999206543
    8. ' :' → logprob: -12.16431999206543
    9. ' :
' → logprob: -12.16431999206543
    10. '```' → logprob: -12.66431999206543

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009893421083688736
    2. 's' → logprob: -7.3759894371032715
    3. '       ' → logprob: -8.500988960266113
    4. '   ' → logprob: -9.625988960266113
    5. 'while' → logprob: -9.750988960266113
    6. 'l' → logprob: -11.500988960266113
    7. '#' → logprob: -11.625988960266113
    8. '	       ' → logprob: -13.000988960266113
    9. ' s' → logprob: -13.125988960266113
    10. ' while' → logprob: -13.375988960266113

Token 521: ' #' (ID: 1069)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.25668925046920776
    2. 's' → logprob: -1.7566893100738525
    3. '           ' → logprob: -3.0066893100738525
    4. '   ' → logprob: -6.631689071655273
    5. ' xor' → logprob: -6.756689071655273
    6. '       ' → logprob: -6.756689071655273
    7. 'x' → logprob: -7.756689071655273
    8. ' s' → logprob: -9.756689071655273
    9. '
' → logprob: -10.131689071655273
    10. '               ' → logprob: -10.256689071655273

Token 522: ' S' (ID: 336)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4901292026042938
    2. 's' → logprob: -0.9901292324066162
    3. ' xor' → logprob: -5.115128993988037
    4. '           ' → logprob: -5.365128993988037
    5. '   ' → logprob: -5.990128993988037
    6. ' s' → logprob: -6.865128993988037
    7. '       ' → logprob: -7.615128993988037
    8. '#' → logprob: -7.865128993988037
    9. 'while' → logprob: -8.490129470825195
    10. 'x' → logprob: -8.740129470825195

Token 523: ''il' (ID: 14683)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1130907535552979
    2. 'xor' → logprob: -1.1130907535552979
    3. '   ' → logprob: -1.4880907535552979
    4. '#' → logprob: -3.488090753555298
    5. ' =' → logprob: -4.363090515136719
    6. '       ' → logprob: -4.738090515136719
    7. ' xor' → logprob: -4.863090515136719
    8. 'x' → logprob: -4.863090515136719
    9. '    ' → logprob: -4.988090515136719
    10. '=s' → logprob: -4.988090515136719

Token 524: ' y' (ID: 342)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5689733624458313
    2. 's' → logprob: -1.6939733028411865
    3. '   ' → logprob: -2.0689733028411865
    4. 'else' → logprob: -3.5689733028411865
    5. ' xor' → logprob: -3.8189733028411865
    6. 'l' → logprob: -4.443973541259766
    7. ' s' → logprob: -4.443973541259766
    8. ' ^=' → logprob: -5.068973541259766
    9. '           ' → logprob: -5.318973541259766
    10. 'elif' → logprob: -5.568973541259766

Token 525: ' a' (ID: 261)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.11631283164024353
    2. 's' → logprob: -3.2413127422332764
    3. 'a' → logprob: -3.6163127422332764
    4. 'e' → logprob: -3.7413127422332764
    5. ' xor' → logprob: -5.2413129806518555
    6. 't' → logprob: -6.2413129806518555
    7. '=' → logprob: -6.6163129806518555
    8. '   ' → logprob: -6.6163129806518555
    9. '!=' → logprob: -6.9913129806518555
    10. '>' → logprob: -6.9913129806518555

Token 526: ' partage' (ID: 70806)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.10013991594314575
    2. ' xor' → logprob: -2.600139856338501
    3. '   ' → logprob: -4.85014009475708
    4. 'A' → logprob: -5.47514009475708
    5. 's' → logprob: -5.85014009475708
    6. ' ' → logprob: -6.72514009475708
    7. 'l' → logprob: -6.85014009475708
    8. ' s' → logprob: -7.22514009475708
    9. ' A' → logprob: -7.60014009475708
    10. 'not' → logprob: -7.60014009475708

Token 527: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2530330419540405
    2. 'd' → logprob: -1.7530330419540405
    3. ' d' → logprob: -1.7530330419540405
    4. '   ' → logprob: -2.50303316116333
    5. ' de' → logprob: -2.62803316116333
    6. '               ' → logprob: -2.87803316116333
    7. '            ' → logprob: -3.50303316116333
    8. ' des' → logprob: -3.50303316116333
    9. ' bit' → logprob: -3.62803316116333
    10. '    ' → logprob: -4.87803316116333

Token 528: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.1577933132648468
    2. 'bit' → logprob: -2.0327932834625244
    3. 'A' → logprob: -5.1577935218811035
    4. ' bits' → logprob: -5.7827935218811035
    5. 's' → logprob: -6.0327935218811035
    6. 'xor' → logprob: -6.0327935218811035
    7. 'b' → logprob: -7.6577935218811035
    8. ' bit' → logprob: -8.157793045043945
    9. ' A' → logprob: -8.282793045043945
    10. ' ' → logprob: -9.032793045043945

Token 529: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13237299025058746
    2. ',' → logprob: -2.757373094558716
    3. '               ' → logprob: -4.257372856140137
    4. '   ' → logprob: -4.632372856140137
    5. ':
' → logprob: -4.632372856140137
    6. ':' → logprob: -4.757372856140137
    7. 'xor' → logprob: -5.007372856140137
    8. 's' → logprob: -5.757372856140137
    9. '       ' → logprob: -6.507372856140137
    10. ' avec' → logprob: -7.132372856140137

Token 530: ' il' (ID: 1793)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.04812895879149437
    2. '           ' → logprob: -3.298128843307495
    3. 's' → logprob: -5.173129081726074
    4. ' xor' → logprob: -5.923129081726074
    5. '   ' → logprob: -6.673129081726074
    6. '       ' → logprob: -8.923129081726074
    7. 'x' → logprob: -9.048129081726074
    8. '               ' → logprob: -9.673129081726074
    9. '#' → logprob: -10.173129081726074
    10. 'while' → logprob: -11.298129081726074

Token 531: ' faut' (ID: 17821)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4861904978752136
    2. '           ' → logprob: -2.1111905574798584
    3. 's' → logprob: -2.4861905574798584
    4. '       ' → logprob: -2.7361905574798584
    5. ' s' → logprob: -3.1111905574798584
    6. 'xor' → logprob: -3.3611905574798584
    7. ' xor' → logprob: -4.111190319061279
    8. ' faut' → logprob: -5.361190319061279
    9. '#' → logprob: -5.611190319061279
    10. ' #' → logprob: -6.236190319061279

Token 532: ' réduire' (ID: 78295)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.5758882761001587
    2. 'ré' → logprob: -0.9508882761001587
    3. '   ' → logprob: -4.200888156890869
    4. 'sup' → logprob: -4.325888156890869
    5. 're' → logprob: -4.950888156890869
    6. ' retirer' → logprob: -5.700888156890869
    7. '#' → logprob: -5.825888156890869
    8. 'redu' → logprob: -5.825888156890869
    9. 'en' → logprob: -6.575888156890869
    10. ' réduire' → logprob: -6.950888156890869

Token 533: ' la' (ID: 557)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.05208864435553551
    2. 'l' → logprob: -3.552088737487793
    3. '   ' → logprob: -4.177088737487793
    4. '           ' → logprob: -5.677088737487793
    5. ' xor' → logprob: -6.427088737487793
    6. 'la' → logprob: -7.802088737487793
    7. 's' → logprob: -8.052088737487793
    8. '       ' → logprob: -8.552088737487793
    9. 'le' → logprob: -8.927088737487793
    10. '  ' → logprob: -9.052088737487793

Token 534: ' fenêtre' (ID: 109648)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.0017712120898067951
    2. 'window' → logprob: -6.501771450042725
    3. ' fenêtre' → logprob: -8.626770973205566
    4. '
' → logprob: -10.751770973205566
    5. 'f' → logprob: -11.251770973205566
    6. '```' → logprob: -11.251770973205566
    7. 'xor' → logprob: -11.251770973205566
    8. '   ' → logprob: -11.876770973205566
    9. '#' → logprob: -12.376770973205566
    10. 'while' → logprob: -12.626770973205566

Token 535: ' depuis' (ID: 16277)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035687077324837446
    2. ':
' → logprob: -6.878568649291992
    3. ',' → logprob: -7.753568649291992
    4. '   ' → logprob: -7.753568649291992
    5. '       ' → logprob: -8.128568649291992
    6. 'xor' → logprob: -8.128568649291992
    7. ':' → logprob: -8.378568649291992
    8. '            
' → logprob: -8.628568649291992
    9. '
' → logprob: -9.003568649291992
    10. ' xor' → logprob: -9.378568649291992

Token 536: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3934604227542877
    2. 'la' → logprob: -1.1434603929519653
    3. 'le' → logprob: -6.018460273742676
    4. ' la' → logprob: -6.143460273742676
    5. '   ' → logprob: -7.018460273742676
    6. 'g' → logprob: -7.893460273742676
    7. ' l' → logprob: -8.018460273742676
    8. '           ' → logprob: -8.268460273742676
    9. 'the' → logprob: -10.143460273742676
    10. '```' → logprob: -11.018460273742676

Token 537: ' gauche' (ID: 58367)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0028809530194848776
    2. 'left' → logprob: -6.002881050109863
    3. ' gauche' → logprob: -8.502881050109863
    4. 'g' → logprob: -8.752881050109863
    5. ' l' → logprob: -10.752881050109863
    6. '   ' → logprob: -11.502881050109863
    7. '```' → logprob: -12.627881050109863
    8. ' left' → logprob: -13.127881050109863
    9. 'lef' → logprob: -13.752881050109863
    10. 'c' → logprob: -14.002881050109863

Token 538: ' jusqu' (ID: 21961)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002118619391694665
    2. '       ' → logprob: -6.8771185874938965
    3. ',' → logprob: -8.252119064331055
    4. ':
' → logprob: -8.627119064331055
    5. '   ' → logprob: -9.252119064331055
    6. '
' → logprob: -9.377119064331055
    7. '            
' → logprob: -9.377119064331055
    8. '               ' → logprob: -9.502119064331055
    9. ':' → logprob: -9.502119064331055
    10. '          ' → logprob: -10.377119064331055

Token 539: ''à' (ID: 33688)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6416425704956055
    2. 'à' → logprob: -0.8916425704956055
    3. '           ' → logprob: -3.1416425704956055
    4. ''à' → logprob: -4.8916425704956055
    5. '```' → logprob: -5.6416425704956055
    6. '            ' → logprob: -6.1416425704956055
    7. '   ' → logprob: -6.3916425704956055
    8. ' à' → logprob: -6.7666425704956055
    9. 'a' → logprob: -7.0166425704956055
    10. '       ' → logprob: -7.6416425704956055

Token 540: ' ce' (ID: 2357)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.6413744688034058
    2. 'ce' → logprob: -0.8913744688034058
    3. 'l' → logprob: -3.3913745880126953
    4. ' ce' → logprob: -4.891374588012695
    5. '```' → logprob: -5.391374588012695
    6. 'not' → logprob: -5.516374588012695
    7. 'r' → logprob: -5.641374588012695
    8. '(r' → logprob: -5.766374588012695
    9. 'que' → logprob: -7.016374588012695
    10. ' xor' → logprob: -7.266374588012695

Token 541: ' qu' (ID: 474)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.004554254002869129
    2. 'l' → logprob: -6.254554271697998
    3. '```' → logprob: -7.254554271697998
    4. ' xor' → logprob: -7.254554271697998
    5. 'que' → logprob: -7.504554271697998
    6. '   ' → logprob: -8.12955379486084
    7. ' que' → logprob: -9.12955379486084
    8. ' ' → logprob: -10.25455379486084
    9. 'r' → logprob: -10.25455379486084
    10. 'x' → logprob: -10.62955379486084

Token 542: ''on' (ID: 25812)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.2802916467189789
    2. '(x' → logprob: -2.6552915573120117
    3. 'not' → logprob: -3.2802915573120117
    4. ' xor' → logprob: -3.4052915573120117
    5. '   ' → logprob: -3.6552915573120117
    6. 'que' → logprob: -4.155291557312012
    7. 'le' → logprob: -4.405291557312012
    8. ' que' → logprob: -4.530291557312012
    9. 'x' → logprob: -5.280291557312012
    10. '(not' → logprob: -5.405291557312012

Token 543: ' puisse' (ID: 77890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.863231360912323
    2. 'xor' → logprob: -1.4882314205169678
    3. ' puisse' → logprob: -1.7382314205169678
    4. '       ' → logprob: -2.8632314205169678
    5. 'p' → logprob: -3.7382314205169678
    6. '           ' → logprob: -3.9882314205169678
    7. '```' → logprob: -4.613231182098389
    8. ' xor' → logprob: -4.863231182098389
    9. '  ' → logprob: -5.113231182098389
    10. 'n' → logprob: -5.113231182098389

Token 544: ' raj' (ID: 46358)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.8336069583892822
    2. '   ' → logprob: -1.7086069583892822
    3. 'l' → logprob: -2.0836069583892822
    4. 'xor' → logprob: -2.4586069583892822
    5. '       ' → logprob: -3.2086069583892822
    6. 'sup' → logprob: -3.4586069583892822
    7. '           ' → logprob: -3.8336069583892822
    8. '```' → logprob: -3.9586069583892822
    9. 'ret' → logprob: -4.333606719970703
    10. '        ' → logprob: -5.208606719970703

Token 545: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -3.440506407059729e-05
    2. 'oute' → logprob: -11.62503433227539
    3. '_outer' → logprob: -12.25003433227539
    4. 'out' → logprob: -12.50003433227539
    5. 'outez' → logprob: -12.62503433227539
    6. 'o' → logprob: -12.62503433227539
    7. 'ou' → logprob: -13.50003433227539
    8. '```' → logprob: -13.62503433227539
    9. '#' → logprob: -13.87503433227539
    10. '>' → logprob: -14.00003433227539

Token 546: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.038846205919981
    2. '           ' → logprob: -3.663846254348755
    3. ' A' → logprob: -5.288846015930176
    4. 'l' → logprob: -5.913846015930176
    5. '   ' → logprob: -7.163846015930176
    6. 'le' → logprob: -7.288846015930176
    7. 'un' → logprob: -8.163846015930176
    8. 'la' → logprob: -8.288846015930176
    9. '       ' → logprob: -8.413846015930176
    10. '```' → logprob: -8.413846015930176

Token 547: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.05041848495602608
    2. '[l' → logprob: -3.0504183769226074
    3. '[' → logprob: -6.550418376922607
    4. 'r' → logprob: -8.050418853759766
    5. 'l' → logprob: -10.050418853759766
    6. '[
' → logprob: -11.675418853759766
    7. ' [' → logprob: -11.925418853759766
    8. '```' → logprob: -11.925418853759766
    9. ']' → logprob: -13.050418853759766
    10. '   ' → logprob: -13.175418853759766

Token 548: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031300801783800125
    2. ']:' → logprob: -4.406301021575928
    3. ')' → logprob: -5.281301021575928
    4. ']):' → logprob: -5.281301021575928
    5. '])' → logprob: -5.906301021575928
    6. '):' → logprob: -6.031301021575928
    7. ']:
' → logprob: -6.906301021575928
    8. '].' → logprob: -7.906301021575928
    9. '   ' → logprob: -7.906301021575928
    10. ']):
' → logprob: -8.53130054473877

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07358478009700775
    2. '       ' → logprob: -2.823584794998169
    3. 'xor' → logprob: -5.32358455657959
    4. 's' → logprob: -5.69858455657959
    5. '
' → logprob: -6.82358455657959
    6. '   ' → logprob: -7.32358455657959
    7. ' xor' → logprob: -7.32358455657959
    8. ' s' → logprob: -8.07358455657959
    9. '        
' → logprob: -9.07358455657959
    10. '            
' → logprob: -9.32358455657959

Token 550: ' s' (ID: 265)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.04731190204620361
    2. '           ' → logprob: -4.422311782836914
    3. ' xor' → logprob: -4.547311782836914
    4. '       ' → logprob: -4.547311782836914
    5. 's' (adapté à ' s') → logprob: -4.672311782836914
    6. '   ' → logprob: -5.797311782836914
    7. 'x' → logprob: -8.297311782836914
    8. '
' → logprob: -9.047311782836914
    9. '               ' → logprob: -9.922311782836914
    10. ' s' → logprob: -10.047311782836914

Token 551: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1088293045759201
    2. ' =' → logprob: -2.6088292598724365
    3. ' ^=' → logprob: -3.7338292598724365
    4. '^' → logprob: -5.233829498291016
    5. '   ' → logprob: -9.733829498291016
    6. '=x' → logprob: -9.983829498291016
    7. 'xor' → logprob: -10.233829498291016
    8. '=A' → logprob: -10.483829498291016
    9. ' ^' → logprob: -10.733829498291016
    10. '_=' → logprob: -11.233829498291016

Token 552: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.2817973494529724
    2. 'A' → logprob: -1.4067974090576172
    3. ' xor' → logprob: -7.906797409057617
    4. ' A' → logprob: -9.031797409057617
    5. 's' → logprob: -9.781797409057617
    6. 'x' → logprob: -10.031797409057617
    7. '   ' → logprob: -11.156797409057617
    8. 'X' → logprob: -11.781797409057617
    9. '=A' → logprob: -12.156797409057617
    10. 'a' → logprob: -12.281797409057617

Token 553: ' &' (ID: 827)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.0016138888895511627
    2. ' ^' → logprob: -6.751614093780518
    3. ' ^=' → logprob: -7.751614093780518
    4. '^{' → logprob: -12.87661361694336
    5. 'xor' → logprob: -13.00161361694336
    6. '
' → logprob: -13.50161361694336
    7. '_^' → logprob: -13.75161361694336
    8. '^\' → logprob: -13.87661361694336
    9. '           ' → logprob: -14.00161361694336
    10. '^^' → logprob: -14.12661361694336

Token 554: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.007641770876944065
    2. ' A' → logprob: -4.882641792297363
    3. '(' → logprob: -11.132641792297363
    4. '(A' → logprob: -11.507641792297363
    5. ' (' → logprob: -12.257641792297363
    6. '   ' → logprob: -13.257641792297363
    7. '	A' → logprob: -13.632641792297363
    8. ' ' → logprob: -14.007641792297363
    9. '_A' → logprob: -15.257641792297363
    10. 'a' → logprob: -15.257641792297363

Token 555: '[r' (ID: 33265)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00043400691356509924
    2. 'l' → logprob: -7.750433921813965
    3. '[' → logprob: -13.625433921813965
    4. '	l' → logprob: -14.125433921813965
    5. '[
' → logprob: -14.875433921813965
    6. '(l' → logprob: -15.125433921813965
    7. ' [' → logprob: -15.125433921813965
    8. '[left' → logprob: -15.750433921813965
    9. '[s' → logprob: -15.875433921813965
    10. '```' → logprob: -16.87543487548828

Token 556: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.14573781192302704
    2. ']' → logprob: -2.020737886428833
    3. '           ' → logprob: -6.770737648010254
    4. ')
' → logprob: -6.895737648010254
    5. ')' → logprob: -8.020737648010254
    6. ']
' → logprob: -8.520737648010254
    7. ']()
' → logprob: -8.895737648010254
    8. ']

' → logprob: -9.895737648010254
    9. '<|end|>' → logprob: -9.895737648010254
    10. '               ' → logprob: -10.145737648010254

Token 557: '           ' (ID: 352)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5935632586479187
    2. '           ' → logprob: -1.2185633182525635
    3. '       ' → logprob: -1.9685633182525635
    4. ' xor' → logprob: -5.843563079833984
    5. '^' → logprob: -6.093563079833984
    6. 'l' → logprob: -6.468563079833984
    7. '		' → logprob: -6.843563079833984
    8. '   ' → logprob: -6.968563079833984
    9. '        
' → logprob: -7.218563079833984
    10. '```' → logprob: -8.093563079833984

Token 558: ' while' (ID: 2049)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.18409913778305054
    2. '           ' → logprob: -2.0590991973876953
    3. 'l' → logprob: -3.6840991973876953
    4. 'while' (adapté à ' while') → logprob: -5.059099197387695
    5. ' xor' → logprob: -5.059099197387695
    6. '       ' → logprob: -6.559099197387695
    7. '   ' → logprob: -7.809099197387695
    8. '
' → logprob: -8.434099197387695
    9. 'x' → logprob: -8.934099197387695
    10. ' l' → logprob: -9.059099197387695

Token 559: ' s' (ID: 265)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5827967524528503
    2. 's' → logprob: -1.4577968120574951
    3. 'xor' → logprob: -1.8327968120574951
    4. '(s' → logprob: -3.832796812057495
    5. '(l' → logprob: -4.332796573638916
    6. ' xor' → logprob: -5.207796573638916
    7. ' l' → logprob: -5.332796573638916
    8. ' s' → logprob: -6.457796573638916
    9. '(x' → logprob: -6.707796573638916
    10. ' (' → logprob: -7.582796573638916

Token 560: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.01059639174491167
    2. ' !=' → logprob: -4.76059627532959
    3. '>' → logprob: -6.76059627532959
    4. ':' → logprob: -7.76059627532959
    5. '==' → logprob: -8.63559627532959
    6. 'and' → logprob: -9.13559627532959
    7. ':
' → logprob: -9.26059627532959
    8. '!==' → logprob: -12.26059627532959
    9. ' and' → logprob: -13.38559627532959
    10. 's' → logprob: -13.63559627532959

Token 561: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0325908660888672
    2. ':
' → logprob: -1.2825908660888672
    3. '               ' → logprob: -1.2825908660888672
    4. ' and' → logprob: -3.532590866088867
    5. '           ' → logprob: -3.657590866088867
    6. '       ' → logprob: -4.282590866088867
    7. '<|end|>' → logprob: -4.782590866088867
    8. 'and' → logprob: -5.282590866088867
    9. '   ' → logprob: -6.157590866088867
    10. ',' → logprob: -7.032590866088867

Token 562: ' #' (ID: 1069)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.05810899659991264
    2. 'l' → logprob: -4.058108806610107
    3. 'x' → logprob: -4.808108806610107
    4. '                   ' → logprob: -4.933108806610107
    5. 'bit' → logprob: -4.933108806610107
    6. 's' → logprob: -5.308108806610107
    7. '   ' → logprob: -6.058108806610107
    8. 'left' → logprob: -6.308108806610107
    9. '               ' → logprob: -6.308108806610107
    10. 't' → logprob: -7.058108806610107

Token 563: ' On' (ID: 2160)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.06847386807203293
    2. 's' → logprob: -3.3184738159179688
    3. ' xor' → logprob: -4.318473815917969
    4. 'l' → logprob: -4.568473815917969
    5. 'x' → logprob: -6.693473815917969
    6. ' s' → logprob: -7.068473815917969
    7. '   ' → logprob: -7.318473815917969
    8. '               ' → logprob: -7.318473815917969
    9. '           ' → logprob: -7.318473815917969
    10. 'bit' → logprob: -7.693473815917969

Token 564: ' enl' (ID: 116494)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4257158041000366
    2. '&' → logprob: -2.300715923309326
    3. ' ^=' → logprob: -2.925715923309326
    4. '=' → logprob: -3.050715923309326
    5. 'and' → logprob: -3.175715923309326
    6. '   ' → logprob: -3.675715923309326
    7. ' xor' → logprob: -4.175715923309326
    8. ' &=' → logprob: -4.175715923309326
    9. ' >>=' → logprob: -4.550715923309326
    10. '>>' → logprob: -5.175715923309326

Token 565: 'ève' (ID: 41151)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.6546034812927246
    2. 'ève' → logprob: -1.2796034812927246
    3. 'e' → logprob: -2.0296034812927246
    4. 'x' → logprob: -2.9046034812927246
    5. 't' → logprob: -4.654603481292725
    6. '   ' → logprob: -7.029603481292725
    7. 'eve' → logprob: -7.279603481292725
    8. 'eux' → logprob: -7.404603481292725
    9. 'l' → logprob: -7.529603481292725
    10. ' xor' → logprob: -7.529603481292725

Token 566: ' les' (ID: 1341)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.03755616024136543
    2. 's' → logprob: -3.6625561714172363
    3. ' xor' → logprob: -5.662556171417236
    4. 'A' → logprob: -6.037556171417236
    5. '               ' → logprob: -6.412556171417236
    6. '                   ' → logprob: -6.912556171417236
    7. 'x' → logprob: -7.162556171417236
    8. 'l' → logprob: -7.412556171417236
    9. '(x' → logprob: -8.287555694580078
    10. '   ' → logprob: -8.787555694580078

Token 567: ' bits' (ID: 18189)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5812712907791138
    2. 'lowest' → logprob: -1.7062712907791138
    3. 'bits' → logprob: -2.331271171569824
    4. 'l' → logprob: -2.456271171569824
    5. 'left' → logprob: -2.956271171569824
    6. 's' → logprob: -5.081271171569824
    7. 'bit' → logprob: -5.206271171569824
    8. '```' → logprob: -6.206271171569824
    9. 'ls' → logprob: -6.706271171569824
    10. 'low' → logprob: -6.706271171569824

Token 568: ' super' (ID: 2539)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.7399965524673462
    2. 's' → logprob: -1.8649965524673462
    3. 'de' → logprob: -2.4899964332580566
    4. '&' → logprob: -2.7399964332580566
    5. 'xor' → logprob: -2.7399964332580566
    6. '               ' → logprob: -2.8649964332580566
    7. 'd' → logprob: -3.2399964332580566
    8. ' =' → logprob: -3.4899964332580566
    9. '=' → logprob: -3.4899964332580566
    10. ' ' → logprob: -3.7399964332580566

Token 569: 'pos' (ID: 1103)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.042234960943460464
    2. 's' → logprob: -3.9172348976135254
    3. '&' → logprob: -4.042234897613525
    4. '&s' → logprob: -7.042234897613525
    5. 'and' → logprob: -7.167234897613525
    6. '```' → logprob: -7.292234897613525
    7. '^' → logprob: -7.792234897613525
    8. 'r' → logprob: -8.792235374450684
    9. ' xor' → logprob: -8.917235374450684
    10. 'pos' → logprob: -9.167235374450684

Token 570: 'és' (ID: 1756)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0727330893278122
    2. 's' → logprob: -3.572733163833618
    3. 'étés' → logprob: -4.322732925415039
    4. 'os' → logprob: -4.447732925415039
    5. 'posed' → logprob: -6.072732925415039
    6. 'lus' → logprob: -6.447732925415039
    7. 'és' → logprob: -6.447732925415039
    8. 'posé' → logprob: -6.447732925415039
    9. 'qués' → logprob: -6.947732925415039
    10. 'érés' → logprob: -6.947732925415039

Token 571: ' en' (ID: 469)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8990079760551453
    2. '                   ' → logprob: -1.89900803565979
    3. '=' → logprob: -2.52400803565979
    4. 'xor' → logprob: -2.64900803565979
    5. ' ^=' → logprob: -2.64900803565979
    6. ' xor' → logprob: -2.89900803565979
    7. ' =' → logprob: -3.64900803565979
    8. 'from' → logprob: -4.024007797241211
    9. '           ' → logprob: -4.024007797241211
    10. ' and' → logprob: -4.774007797241211

Token 572: ' retir' (ID: 35638)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.06657728552818298
    2. 'A' → logprob: -3.691577196121216
    3. ' xor' → logprob: -4.441577434539795
    4. '   ' → logprob: -4.816577434539795
    5. '(x' → logprob: -5.566577434539795
    6. '^' → logprob: -5.566577434539795
    7. 'x' → logprob: -6.066577434539795
    8. 'and' → logprob: -6.316577434539795
    9. '       ' → logprob: -7.066577434539795
    10. 'l' → logprob: -7.316577434539795

Token 573: 'ant' (ID: 493)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.1609659343957901
    2. '           ' → logprob: -3.160965919494629
    3. '   ' → logprob: -3.535965919494629
    4. ' xor' → logprob: -4.160965919494629
    5. 'ant' → logprob: -4.285965919494629
    6. '       ' → logprob: -4.410965919494629
    7. '               ' → logprob: -4.410965919494629
    8. 'vant' → logprob: -5.785965919494629
    9. 's' → logprob: -5.785965919494629
    10. '^' → logprob: -6.035965919494629

Token 574: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06737864762544632
    2. 'xor' → logprob: -3.1923787593841553
    3. 'l' → logprob: -4.442378520965576
    4. ' A' → logprob: -4.817378520965576
    5. ' xor' → logprob: -6.692378520965576
    6. ' (' → logprob: -7.317378520965576
    7. '(A' → logprob: -7.567378520965576
    8. '                   ' → logprob: -8.067378997802734
    9. '               ' → logprob: -8.192378997802734
    10. ' l' → logprob: -8.442378997802734

Token 575: ' terme' (ID: 42959)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23580129444599152
    2. 'l' → logprob: -1.735801339149475
    3. 'xor' → logprob: -4.2358012199401855
    4. ' A' → logprob: -4.7358012199401855
    5. ' l' → logprob: -5.9858012199401855
    6. '   ' → logprob: -5.9858012199401855
    7. 'left' → logprob: -6.4858012199401855
    8. ' xor' → logprob: -7.3608012199401855
    9. ' ' → logprob: -8.110801696777344
    10. 'L' → logprob: -8.485801696777344

Token 576: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1916678547859192
    2. 'l' → logprob: -2.3166677951812744
    3. ' A' → logprob: -3.6916677951812744
    4. 'xor' → logprob: -3.9416677951812744
    5. '   ' → logprob: -4.4416680335998535
    6. ' l' → logprob: -5.5666680335998535
    7. '[l' → logprob: -5.9416680335998535
    8. '           ' → logprob: -5.9416680335998535
    9. '               ' → logprob: -6.4416680335998535
    10. ' xor' → logprob: -6.9416680335998535

Token 577: ' gauche' (ID: 58367)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.640580415725708
    2. 'A' → logprob: -0.890580415725708
    3. 'xor' → logprob: -3.640580415725708
    4. ' l' → logprob: -4.265580177307129
    5. ' A' → logprob: -4.640580177307129
    6. ' gauche' → logprob: -5.265580177307129
    7. 'la' → logprob: -5.515580177307129
    8. ' xor' → logprob: -7.140580177307129
    9. 'g' → logprob: -7.390580177307129
    10. ' la' → logprob: -7.765580177307129

Token 578: ' et' (ID: 859)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4199405312538147
    2. '           ' → logprob: -1.91994047164917
    3. ' xor' → logprob: -1.91994047164917
    4. '^' → logprob: -4.66994047164917
    5. '       ' → logprob: -4.79494047164917
    6. '   ' → logprob: -4.91994047164917
    7. '               ' → logprob: -4.91994047164917
    8. 'A' → logprob: -5.16994047164917
    9. 'l' → logprob: -5.79494047164917
    10. ' ^=' → logprob: -6.79494047164917

Token 579: ' en' (ID: 469)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.088568925857544
    2. 'xor' → logprob: -1.088568925857544
    3. ' xor' → logprob: -2.213568925857544
    4. ' l' → logprob: -2.463568925857544
    5. '1' → logprob: -3.213568925857544
    6. '   ' → logprob: -3.338568925857544
    7. '       ' → logprob: -4.713568687438965
    8. 'A' → logprob: -4.838568687438965
    9. '           ' → logprob: -4.963568687438965
    10. 's' → logprob: -4.963568687438965

Token 580: ' avanç' (ID: 70203)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.03811148926615715
    2. '   ' → logprob: -4.538111686706543
    3. 'x' → logprob: -4.788111686706543
    4. 'l' → logprob: -5.038111686706543
    5. ' xor' → logprob: -5.788111686706543
    6. 'X' → logprob: -6.663111686706543
    7. 'ré' → logprob: -7.413111686706543
    8. '```' → logprob: -7.413111686706543
    9. 're' → logprob: -7.538111686706543
    10. ' mettant' → logprob: -7.663111686706543

Token 581: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0002326224057469517
    2. 'l' → logprob: -9.375232696533203
    3. 'çant' → logprob: -10.125232696533203
    4. 'er' → logprob: -10.500232696533203
    5. 'a' → logprob: -11.000232696533203
    6. 'e' → logprob: -11.125232696533203
    7. 'd' → logprob: -11.625232696533203
    8. 'lant' → logprob: -11.625232696533203
    9. '```' → logprob: -11.875232696533203
    10. 'r' → logprob: -12.625232696533203

Token 582: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01240804698318243
    2. ' l' → logprob: -4.512408256530762
    3. '	l' → logprob: -7.262408256530762
    4. '   ' → logprob: -7.387408256530762
    5. '       ' → logprob: -11.762408256530762
    6. '           ' → logprob: -12.137408256530762
    7. ' ' → logprob: -12.262408256530762
    8. 'xor' → logprob: -12.637408256530762
    9. '_l' → logprob: -12.887408256530762
    10. '	' → logprob: -13.137408256530762

Token 583: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21429315209388733
    2. ' +=' → logprob: -3.3392932415008545
    3. '+=' → logprob: -3.4642932415008545
    4. '                   ' → logprob: -3.7142932415008545
    5. '   ' → logprob: -3.8392932415008545
    6. '       ' → logprob: -4.089293003082275
    7. '           ' → logprob: -4.339293003082275
    8. 'l' → logprob: -4.339293003082275
    9. '<|end|>' → logprob: -5.089293003082275
    10. ' l' → logprob: -5.339293003082275

Token 584: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.035770781338214874
    2. 'xor' → logprob: -3.910770893096924
    3. ' xor' → logprob: -4.785770893096924
    4. '           ' → logprob: -5.410770893096924
    5. '       ' → logprob: -6.535770893096924
    6. '```' → logprob: -8.785770416259766
    7. ',' → logprob: -8.910770416259766
    8. '   ' → logprob: -9.285770416259766
    9. '                   ' → logprob: -9.410770416259766
    10. '              ' → logprob: -9.535770416259766

Token 585: ' s' (ID: 265)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.0011957057286053896
    2. ' xor' → logprob: -6.876195907592773
    3. '   ' → logprob: -9.876195907592773
    4. '           ' → logprob: -9.876195907592773
    5. 'x' → logprob: -10.501195907592773
    6. '               ' → logprob: -10.626195907592773
    7. '       ' → logprob: -13.126195907592773
    8. '                   ' → logprob: -13.251195907592773
    9. ' ' → logprob: -13.626195907592773
    10. 's' (adapté à ' s') → logprob: -14.376195907592773

Token 586: ' -=' (ID: 12583)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.30786243081092834
    2. ' &=' → logprob: -2.3078625202178955
    3. ' ^=' → logprob: -2.8078625202178955
    4. '^' → logprob: -2.9328625202178955
    5. '=' → logprob: -3.0578625202178955
    6. ' =' → logprob: -6.557862281799316
    7. '   ' → logprob: -6.682862281799316
    8. '|' → logprob: -7.557862281799316
    9. ' &' → logprob: -8.307862281799316
    10. ' >>=' → logprob: -8.432862281799316

Token 587: ' s' (ID: 265)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8411945104598999
    2. 'xor' → logprob: -1.0911945104599
    3. 'A' → logprob: -2.2161946296691895
    4. '(' → logprob: -2.9661946296691895
    5. '(x' → logprob: -3.0911946296691895
    6. 'x' → logprob: -5.2161946296691895
    7. ' xor' → logprob: -5.3411946296691895
    8. '(A' → logprob: -5.4661946296691895
    9. ' (' → logprob: -5.4661946296691895
    10. ' ' → logprob: -5.7161946296691895

Token 588: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.02365514263510704
    2. '&s' → logprob: -4.023654937744141
    3. ' &' → logprob: -6.148654937744141
    4. '&amp' → logprob: -6.398654937744141
    5. '&t' → logprob: -6.898654937744141
    6. '&a' → logprob: -8.27365493774414
    7. '&r' → logprob: -9.14865493774414
    8. 's' → logprob: -9.27365493774414
    9. '&A' → logprob: -9.39865493774414
    10. '&p' → logprob: -9.52365493774414

Token 589: ' A' (ID: 355)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6814836263656616
    2. '-s' → logprob: -1.1814836263656616
    3. '(-' → logprob: -1.9314836263656616
    4. '-l' → logprob: -3.181483745574951
    5. '-n' → logprob: -8.056483268737793
    6. ' -' → logprob: -8.681483268737793
    7. '-x' → logprob: -9.181483268737793
    8. '(' → logprob: -10.056483268737793
    9. '-L' → logprob: -10.181483268737793
    10. '-lfs' → logprob: -10.556483268737793

Token 590: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -6.153795766294934e-06
    2. 'l' → logprob: -12.375005722045898
    3. '[' → logprob: -13.500005722045898
    4. '	l' → logprob: -16.1250057220459
    5. '[s' → logprob: -16.3750057220459
    6. '```' → logprob: -16.5000057220459
    7. '(l' → logprob: -16.7500057220459
    8. '[left' → logprob: -17.3750057220459
    9. ' [' → logprob: -17.5000057220459
    10. 's' → logprob: -17.8750057220459

Token 591: ']
' (ID: 1592)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.001053530490025878
    2. ']' → logprob: -7.751053333282471
    3. '[' → logprob: -8.501053810119629
    4. 'l' → logprob: -8.626053810119629
    5. '[r' → logprob: -8.626053810119629
    6. ')' → logprob: -11.001053810119629
    7. '(l' → logprob: -11.751053810119629
    8. '])' → logprob: -11.876053810119629
    9. '	l' → logprob: -12.501053810119629
    10. 'r' → logprob: -12.501053810119629

Token 592: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7002245783805847
    2. 'xor' → logprob: -1.3252246379852295
    3. '           ' → logprob: -2.4502246379852295
    4. '               ' → logprob: -2.7002246379852295
    5. 'l' → logprob: -3.5752246379852295
    6. '       ' → logprob: -3.8252246379852295
    7. ' xor' → logprob: -4.20022439956665
    8. '0' → logprob: -6.20022439956665
    9. '```' → logprob: -6.20022439956665
    10. '^' → logprob: -6.32522439956665

Token 593: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -0.13532140851020813
    2. 'l' → logprob: -2.8853213787078857
    3. ' xor' → logprob: -3.0103213787078857
    4. '0' → logprob: -5.385321617126465
    5. 'A' → logprob: -5.510321617126465
    6. ' l' → logprob: -5.510321617126465
    7. 's' → logprob: -6.510321617126465
    8. '           ' → logprob: -6.885321617126465
    9. '1' → logprob: -7.135321617126465
    10. ' ' → logprob: -7.385321617126465

Token 594: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.021248329430818558
    2. ' ^=' → logprob: -3.8962483406066895
    3. '=' → logprob: -7.2712483406066895
    4. '_^' → logprob: -12.646247863769531
    5. '^^' → logprob: -13.021247863769531
    6. ''^' → logprob: -13.771247863769531
    7. ' ^' → logprob: -14.146247863769531
    8. '^)' → logprob: -14.146247863769531
    9. ')^' → logprob: -14.396247863769531
    10. '^{' → logprob: -14.896247863769531

Token 595: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00033546582562848926
    2. ' A' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.250335693359375
    4. '	A' → logprob: -19.125335693359375
    5. '=A' → logprob: -19.875335693359375
    6. ' ' → logprob: -20.125335693359375
    7. '_A' → logprob: -20.125335693359375
    8. '[A' → logprob: -20.500335693359375
    9. 'a' → logprob: -20.875335693359375
    10. '(A' → logprob: -21.125335693359375

Token 596: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00015908108616713434
    2. 'l' → logprob: -8.75015926361084
    3. '[' → logprob: -14.87515926361084
    4. '	l' → logprob: -15.75015926361084
    5. ' [' → logprob: -16.625158309936523
    6. '[
' → logprob: -17.875158309936523
    7. '   ' → logprob: -18.000158309936523
    8. '```' → logprob: -18.000158309936523
    9. '(l' → logprob: -18.875158309936523
    10. ' l' → logprob: -19.250158309936523

Token 597: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31518200039863586
    2. ']
' → logprob: -1.3151819705963135
    3. '[l' → logprob: -6.440182209014893
    4. 'l' → logprob: -8.565181732177734
    5. '   ' → logprob: -9.940181732177734
    6. ']
' → logprob: -10.565181732177734
    7. ' ]' → logprob: -11.315181732177734
    8. '[' → logprob: -11.440181732177734
    9. ' ]
' → logprob: -12.065181732177734
    10. ')' → logprob: -12.190181732177734

Token 598: '               ' (ID: 506)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009163170121610165
    2. ' l' → logprob: -5.1341633796691895
    3. '   ' → logprob: -6.2591633796691895
    4. '	l' → logprob: -6.8841633796691895
    5. '       ' → logprob: -9.259162902832031
    6. '           ' → logprob: -9.384162902832031
    7. ',l' → logprob: -9.759162902832031
    8. '```' → logprob: -10.634162902832031
    9. ' ' → logprob: -11.759162902832031
    10. '_l' → logprob: -11.884162902832031

Token 599: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -4.4849443838757e-06
    2. ' l' → logprob: -12.875004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '	l' → logprob: -14.125004768371582
    5. '           ' → logprob: -16.750003814697266
    6. '       ' → logprob: -17.125003814697266
    7. '                   ' → logprob: -17.250003814697266
    8. '               ' → logprob: -17.500003814697266
    9. '```' → logprob: -18.000003814697266
    10. '[l' → logprob: -18.375003814697266

Token 600: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01683562807738781
    2. ' +=' → logprob: -4.141835689544678
    3. '+' → logprob: -7.141835689544678
    4. '++' → logprob: -13.01683521270752
    5. '=' → logprob: -13.14183521270752
    6. '<|end|>' → logprob: -13.39183521270752
    7. '```' → logprob: -13.64183521270752
    8. '1' → logprob: -13.89183521270752
    9. ']+=' → logprob: -14.64183521270752
    10. ' +' → logprob: -14.89183521270752

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.5
    4. '   ' → logprob: -19.625
    5. '<|end|>' → logprob: -22.75
    6. '0' → logprob: -23.125
    7. '۱' → logprob: -23.25
    8. '１' → logprob: -23.375
    9. '
' → logprob: -23.375
    10. '	' → logprob: -24.125

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -19.375
    5. '１' → logprob: -22.75
    6. '       ' → logprob: -23.0
    7. '<|end|>' → logprob: -23.375
    8. '0' → logprob: -23.375
    9. '  ' → logprob: -23.5
    10. '१' → logprob: -23.875

Token 603: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: ' Si' (ID: 7832)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22331836819648743
    2. 'if' → logprob: -2.723318338394165
    3. '<|end|>' → logprob: -2.973318338394165
    4. 'continue' → logprob: -3.473318338394165
    5. 'return' → logprob: -3.973318338394165
    6. '```' → logprob: -4.723318576812744
    7. '#' → logprob: -5.598318576812744
    8. ' ' → logprob: -5.973318576812744
    9. '<|end|>' → logprob: -6.098318576812744
    10. ' if' → logprob: -6.348318576812744

Token 607: ' nécessaire' (ID: 43098)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.22484564781188965
    2. 's' → logprob: -2.5998456478118896
    3. 'not' → logprob: -2.7248456478118896
    4. '(s' → logprob: -3.3498456478118896
    5. '(x' → logprob: -3.9748456478118896
    6. '(not' → logprob: -5.724845886230469
    7. ' xor' → logprob: -6.974845886230469
    8. '(l' → logprob: -7.099845886230469
    9. ' not' → logprob: -7.599845886230469
    10. 'l' → logprob: -7.724845886230469

Token 608: ',' (ID: 11)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8230353593826294
    2. 's' → logprob: -1.0730353593826294
    3. ' not' → logprob: -1.9480353593826294
    4. 'not' → logprob: -3.44803524017334
    5. 'xor' → logprob: -4.19803524017334
    6. '               ' → logprob: -4.44803524017334
    7. ' xor' → logprob: -4.82303524017334
    8. ' if' → logprob: -5.94803524017334
    9. 'if' → logprob: -6.44803524017334
    10. '           ' → logprob: -6.69803524017334

Token 609: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34170112013816833
    2. ' s' → logprob: -1.7167011499404907
    3. 'xor' → logprob: -3.091701030731201
    4. 'break' → logprob: -3.841701030731201
    5. ' break' → logprob: -4.341701030731201
    6. ' xor' → logprob: -4.591701030731201
    7. '               ' → logprob: -5.091701030731201
    8. '           ' → logprob: -5.591701030731201
    9. '   ' → logprob: -6.466701030731201
    10. 'if' → logprob: -6.716701030731201

Token 610: ' pourrait' (ID: 39622)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.9189755916595459
    2. 's' → logprob: -1.668975591659546
    3. 'continue' → logprob: -2.668975591659546
    4. 'rem' → logprob: -2.918975591659546
    5. 'ré' → logprob: -2.918975591659546
    6. 'met' → logprob: -2.918975591659546
    7. 'update' → logprob: -3.043975591659546
    8. '   ' → logprob: -4.043975830078125
    9. 'break' → logprob: -4.168975830078125
    10. 'ref' → logprob: -4.293975830078125

Token 611: ' interrom' (ID: 126788)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4035806357860565
    2. 're' → logprob: -3.028580665588379
    3. ' break' → logprob: -3.028580665588379
    4. ' recal' → logprob: -3.028580665588379
    5. '           ' → logprob: -3.153580665588379
    6. 'ré' → logprob: -3.653580665588379
    7. 's' → logprob: -3.653580665588379
    8. ' continuer' → logprob: -3.903580665588379
    9. 'contin' → logprob: -4.153580665588379
    10. 'mettre' → logprob: -4.653580665588379

Token 612: 'pre' (ID: 2235)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01870724931359291
    2. 're' → logprob: -5.143707275390625
    3. 'tre' → logprob: -5.268707275390625
    4. 'r' → logprob: -6.643707275390625
    5. 'pre' → logprob: -6.643707275390625
    6. 'p' → logprob: -6.893707275390625
    7. 'ter' → logprob: -7.143707275390625
    8. 'break' → logprob: -7.768707275390625
    9. 'pt' → logprob: -7.893707275390625
    10. '```' → logprob: -8.018707275390625

Token 613: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 615: 'cas' (ID: 14617)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0993576049804688
    2. 'if' → logprob: -1.5993576049804688
    3. '               ' → logprob: -1.5993576049804688
    4. 's' → logprob: -2.3493576049804688
    5. '<|end|>' → logprob: -3.7243576049804688
    6. '           ' → logprob: -3.8493576049804688
    7. '#' → logprob: -3.8493576049804688
    8. 'break' → logprob: -3.9743576049804688
    9. ' if' → logprob: -4.099357604980469
    10. 'continue' → logprob: -4.599357604980469

Token 616: ' particulier' (ID: 47842)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6753492951393127
    2. ' s' → logprob: -1.050349235534668
    3. '               ' → logprob: -3.300349235534668
    4. 'if' → logprob: -4.175349235534668
    5. 'not' → logprob: -4.550349235534668
    6. ' where' → logprob: -4.550349235534668
    7. ')' → logprob: -4.675349235534668
    8. 'où' → logprob: -4.675349235534668
    9. ' if' → logprob: -4.925349235534668
    10. 'r' → logprob: -5.175349235534668

Token 617: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06491529941558838
    2. '<|end|>' → logprob: -3.689915180206299
    3. '               ' → logprob: -4.064915180206299
    4. ' if' → logprob: -4.439915180206299
    5. '),' → logprob: -5.689915180206299
    6. ').' → logprob: -6.939915180206299
    7. '           ' → logprob: -6.939915180206299
    8. ')
' → logprob: -7.064915180206299
    9. ',' → logprob: -7.439915180206299
    10. 'if' → logprob: -7.439915180206299

Token 618: ' non' (ID: 2893)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8381943106651306
    2. ')' → logprob: -1.3381943702697754
    3. '#' → logprob: -1.8381943702697754
    4. 's' → logprob: -3.3381943702697754
    5. 'break' → logprob: -4.213194370269775
    6. ' mais' → logprob: -4.463194370269775
    7. '```' → logprob: -4.713194370269775
    8. '                ' → logprob: -4.838194370269775
    9. ' but' → logprob: -4.963194370269775
    10. ' s' → logprob: -4.963194370269775

Token 619: ' utilisé' (ID: 53138)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.6894820928573608
    2. '```' → logprob: -2.3144822120666504
    3. 'trait' → logprob: -2.4394822120666504
    4. ' g' → logprob: -2.5644822120666504
    5. ' prévu' → logprob: -2.5644822120666504
    6. 'impl' → logprob: -3.3144822120666504
    7. 'handled' → logprob: -3.3144822120666504
    8. ')' → logprob: -3.3144822120666504
    9. 'explicit' → logprob: -3.4394822120666504
    10. '#' → logprob: -3.6894822120666504

Token 620: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001201658509671688
    2. ').' → logprob: -8.126201629638672
    3. '),' → logprob: -8.376201629638672
    4. ' )' → logprob: -8.501201629638672
    5. '           ' → logprob: -9.126201629638672
    6. '               ' → logprob: -9.501201629638672
    7. ')
' → logprob: -9.876201629638672
    8. 'dans' → logprob: -10.126201629638672
    9. ' dans' → logprob: -10.501201629638672
    10. '   ' → logprob: -10.751201629638672

Token 621: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003667413955554366
    2. '<|end|>' → logprob: -6.25366735458374
    3. ')
' → logprob: -7.12866735458374
    4. '),' → logprob: -7.87866735458374
    5. ').' → logprob: -8.128667831420898
    6. ' )' → logprob: -9.503667831420898
    7. '<|end|>' → logprob: -10.628667831420898
    8. '           ' → logprob: -10.628667831420898
    9. '               ' → logprob: -10.878667831420898
    10. '
' → logprob: -11.128667831420898

Token 622: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 623: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.029777921736240387
    2. '(' → logprob: -3.529778003692627
    3. '()' → logprob: -10.654777526855469
    4. ' (' → logprob: -13.029777526855469
    5. '(answer' → logprob: -14.654777526855469
    6. '(
' → logprob: -14.779777526855469
    7. '((' → logprob: -16.15477752685547
    8. '('' → logprob: -16.27977752685547
    9. '(abs' → logprob: -16.27977752685547
    10. 'ans' → logprob: -16.40477752685547

Token 625: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8550976164988242e-05
    2. ')
' → logprob: -11.250018119812012
    3. ' )' → logprob: -12.750018119812012
    4. '())' → logprob: -13.875018119812012
    5. '()' → logprob: -14.750018119812012
    6. ')`' → logprob: -14.875018119812012
    7. '   ' → logprob: -15.375018119812012
    8. '`)' → logprob: -15.875018119812012
    9. ')#' → logprob: -15.875018119812012
    10. ')}' → logprob: -15.875018119812012

Token 626: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 627: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04318976029753685
    2. '__' → logprob: -3.168189764022827
    3. ' ' → logprob: -8.918190002441406
    4. '_' → logprob: -11.043190002441406
    5. '_name' → logprob: -11.168190002441406
    6. ' ' → logprob: -11.418190002441406
    7. 'name' → logprob: -11.918190002441406
    8. '___' → logprob: -13.543190002441406
    9. ' True' → logprob: -13.668190002441406
    10. '  ' → logprob: -13.793190002441406

Token 628: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16487006843090057
    2. '__' → logprob: -2.039870023727417
    3. '==' → logprob: -4.414870262145996
    4. '.__' → logprob: -5.289870262145996
    5. ' __' → logprob: -6.289870262145996
    6. '.' → logprob: -6.539870262145996
    7. 'name' → logprob: -7.914870262145996
    8. '[' → logprob: -8.414870262145996
    9. '.name' → logprob: -8.414870262145996
    10. ' .' → logprob: -8.789870262145996

Token 629: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001955537445610389
    2. '==' → logprob: -8.625195503234863
    3. ' ==' → logprob: -11.750195503234863
    4. '__.__' → logprob: -12.500195503234863
    5. '=="' → logprob: -12.625195503234863
    6. '__["' → logprob: -15.625195503234863
    7. '__('' → logprob: -15.875195503234863
    8. '____' → logprob: -16.00019645690918
    9. '__":
' → logprob: -16.12519645690918
    10. '___' → logprob: -16.12519645690918

Token 630: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7929136157035828
    2. '__' → logprob: -0.9179136157035828
    3. ' ==' → logprob: -2.1679136753082275
    4. '=="' → logprob: -3.4179136753082275
    5. '=='' → logprob: -7.167913436889648
    6. '=' → logprob: -10.292913436889648
    7. '__.__' → logprob: -10.667913436889648
    8. '_' → logprob: -10.792913436889648
    9. '==
' → logprob: -11.042913436889648
    10. '.__' → logprob: -11.667913436889648

Token 631: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04872077703475952
    2. ''' → logprob: -3.0487208366394043
    3. ' "__' → logprob: -9.298720359802246
    4. '__' → logprob: -10.173720359802246
    5. ' '__' → logprob: -13.548720359802246
    6. '"user' → logprob: -14.423720359802246
    7. '   ' → logprob: -14.548720359802246
    8. '"name' → logprob: -14.798720359802246
    9. '("__' → logprob: -15.673720359802246
    10. '"_' → logprob: -16.673721313476562

Token 632: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00020818933262489736
    2. '"' → logprob: -9.375207901000977
    3. 'name' → logprob: -9.750207901000977
    4. '__' → logprob: -10.250207901000977
    5. ''' → logprob: -10.500207901000977
    6. ' main' → logprob: -14.250207901000977
    7. '_main' → logprob: -14.250207901000977
    8. ''name' → logprob: -15.000207901000977
    9. '"name' → logprob: -16.000207901000977
    10. '==' → logprob: -16.375207901000977

Token 633: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.25274574756622314
    2. '__' → logprob: -1.5027457475662231
    3. '__':
' → logprob: -7.127745628356934
    4. '__["' → logprob: -12.252745628356934
    5. '__:' → logprob: -12.877745628356934
    6. '__("' → logprob: -13.502745628356934
    7. '__.__' → logprob: -13.502745628356934
    8. '__.' → logprob: -14.002745628356934
    9. '__",' → logprob: -14.127745628356934
    10. '__
' → logprob: -14.502745628356934

Token 634: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.13704222440719604
    2. '   ' → logprob: -2.137042284011841
    3. '	main' → logprob: -4.762042045593262
    4. ' main' → logprob: -6.512042045593262
    5. '  ' → logprob: -11.637042045593262
    6. '_main' → logprob: -11.762042045593262
    7. ' ' → logprob: -12.137042045593262
    8. '    
' → logprob: -12.387042045593262
    9. '   ' → logprob: -13.762042045593262
    10. '(main' → logprob: -14.262042045593262

Token 635: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -16.75
    4. '   ' → logprob: -17.375
    5. '_main' → logprob: -20.625
    6. '.main' → logprob: -22.875
    7. '(main' → logprob: -23.5
    8. 'Main' → logprob: -24.375
    9. '```' → logprob: -25.5
    10. '  ' → logprob: -25.625

Token 636: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 634
Tokens correctement prédits (1ère position, stricte): 156
Tokens correctement prédits (1ère position, avec adaptation): 167
Tokens correctement prédits (top 10): 392
Précision stricte (1ère position): 24.61%
Précision adaptée (1ère position): 26.34%
Précision (top 10): 61.83%
================================================================================
