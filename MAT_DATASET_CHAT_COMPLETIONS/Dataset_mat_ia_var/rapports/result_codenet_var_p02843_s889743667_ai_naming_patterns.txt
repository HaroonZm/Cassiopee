================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
target_value = int(input())

reachable_flags = [0 for _ in range(target_value + 1)]
reachable_flags[0] = 1

for current_sum in range(target_value):
    if reachable_flags[current_sum] == 1:
        for add_value in range(100, 106):
            next_sum = current_sum + add_value
            if next_sum <= target_value:
                reachable_flags[next_sum] = 1

print(reachable_flags[target_value])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'target' (ID: 10857)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017131440341472626
    2. '0' → logprob: -4.517131328582764
    3. '10' → logprob: -6.517131328582764
    4. '100' → logprob: -6.517131328582764
    5. '42' → logprob: -6.642131328582764
    6. ' "' → logprob: -7.892131328582764
    7. '"' → logprob: -8.267131805419922
    8. '1' → logprob: -8.392131805419922
    9. '50' → logprob: -8.517131805419922
    10. '5' → logprob: -9.017131805419922

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00074959039920941
    2. ''' → logprob: -7.625749588012695
    3. '('' → logprob: -9.125749588012695
    4. '[' → logprob: -10.125749588012695
    5. '```' → logprob: -10.875749588012695
    6. '_' → logprob: -11.250749588012695
    7. '`' → logprob: -11.375749588012695
    8. '"' → logprob: -11.375749588012695
    9. ' (' → logprob: -11.500749588012695
    10. '("("' → logprob: -11.750749588012695

Token 5: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5343180298805237
    2. ')' → logprob: -1.034317970275879
    3. '()' → logprob: -3.659317970275879
    4. '('' → logprob: -4.034317970275879
    5. '())' → logprob: -4.659317970275879
    6. '(
' → logprob: -7.034317970275879
    7. '("("' → logprob: -7.034317970275879
    8. '(""))' → logprob: -7.409317970275879
    9. '```' → logprob: -7.409317970275879
    10. '")' → logprob: -8.034317970275879

Token 6: 'reachable' (ID: 101900)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05127502977848053
    2. '*' → logprob: -3.9262750148773193
    3. '+' → logprob: -4.051275253295898
    4. '%' → logprob: -5.176275253295898
    5. ' if' → logprob: -5.801275253295898
    6. 'i' → logprob: -6.051275253295898
    7. '=' → logprob: -8.301275253295898
    8. '#' → logprob: -8.301275253295898
    9. '>' → logprob: -8.301275253295898
    10. 'for' → logprob: -8.676275253295898

Token 7: '_flags' (ID: 33898)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33490946888923645
    2. '_values' → logprob: -2.959909439086914
    3. '_nodes' → logprob: -3.084909439086914
    4. '_positions' → logprob: -3.084909439086914
    5. '[' → logprob: -3.334909439086914
    6. ' =' → logprob: -4.209909439086914
    7. '_targets' → logprob: -4.209909439086914
    8. '_states' → logprob: -4.334909439086914
    9. '.' → logprob: -4.459909439086914
    10. '_points' → logprob: -4.959909439086914

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5153159499168396
    2. '[' → logprob: -1.2653160095214844
    3. '_' → logprob: -2.8903160095214844
    4. '=' → logprob: -3.0153160095214844
    5. '.' → logprob: -4.640316009521484
    6. '```' → logprob: -7.015316009521484
    7. '[:]' → logprob: -7.140316009521484
    8. '[]' → logprob: -7.140316009521484
    9. ' ' → logprob: -7.265316009521484
    10. ')' → logprob: -7.390316009521484

Token 9: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9896097183227539
    2. ' set' → logprob: -1.239609718322754
    3. ' []' → logprob: -1.739609718322754
    4. 'set' → logprob: -2.489609718322754
    5. '[' → logprob: -3.364609718322754
    6. '[]' → logprob: -3.989609718322754
    7. ' {' → logprob: -4.114609718322754
    8. ' ' → logprob: -5.614609718322754
    9. ' {}' → logprob: -5.739609718322754
    10. '{}' → logprob: -6.614609718322754

Token 10: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0034501494374126196
    2. ' False' → logprob: -5.7534499168396
    3. 'True' → logprob: -8.253450393676758
    4. '   ' → logprob: -12.003450393676758
    5. '0' → logprob: -12.628450393676758
    6. ' True' → logprob: -13.003450393676758
    7. '(False' → logprob: -15.128450393676758
    8. ']' → logprob: -17.128450393676758
    9. ' ' → logprob: -18.003450393676758
    10. '    ' → logprob: -18.628450393676758

Token 11: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002512047067284584
    2. ',' → logprob: -6.502511978149414
    3. ' ]' → logprob: -7.252511978149414
    4. ' for' → logprob: -8.377511978149414
    5. ']*' → logprob: -9.877511978149414
    6. ')' → logprob: -11.377511978149414
    7. 'for' → logprob: -13.127511978149414
    8. ')]' → logprob: -13.377511978149414
    9. ' ,' → logprob: -14.252511978149414
    10. ']+' → logprob: -14.377511978149414

Token 12: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.15592920780181885
    2. ' ' → logprob: -2.2809290885925293
    3. ' range' → logprob: -3.7809290885925293
    4. '_' → logprob: -4.155929088592529
    5. ' i' → logprob: -5.655929088592529
    6. 'range' → logprob: -9.030929565429688
    7. '_range' → logprob: -9.530929565429688
    8. ' in' → logprob: -11.280929565429688
    9. '  ' → logprob: -12.655929565429688
    10. '	range' → logprob: -12.780929565429688

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09044336527585983
    2. 'in' → logprob: -2.8404433727264404
    3. 'range' → logprob: -3.5904433727264404
    4. ' range' → logprob: -7.840443134307861
    5. ' ' → logprob: -9.34044361114502
    6. '_' → logprob: -13.71544361114502
    7. '(range' → logprob: -13.84044361114502
    8. ' _' → logprob: -13.96544361114502
    9. 'i' → logprob: -13.96544361114502
    10. '  ' → logprob: -14.34044361114502

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008614926598966122
    2. ' range' → logprob: -4.758615016937256
    3. '(range' → logprob: -16.633615493774414
    4. 'target' → logprob: -16.633615493774414
    5. 'reach' → logprob: -16.758615493774414
    6. 'reachable' → logprob: -17.008615493774414
    7. ' ' → logprob: -17.633615493774414
    8. '	range' → logprob: -17.758615493774414
    9. '_' → logprob: -18.508615493774414
    10. 'rang' → logprob: -19.008615493774414

Token 15: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.0070050861686468124
    2. '(' → logprob: -5.007005214691162
    3. '(range' → logprob: -8.257004737854004
    4. ' (' → logprob: -10.757004737854004
    5. 'target' → logprob: -12.257004737854004
    6. '(len' → logprob: -12.882004737854004
    7. '(t' → logprob: -14.382004737854004
    8. '((' → logprob: -15.257004737854004
    9. ' target' → logprob: -15.632004737854004
    10. '(Target' → logprob: -15.757004737854004

Token 16: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.5690089639974758e-05
    2. '_val' → logprob: -11.625015258789062
    3. '_' → logprob: -12.125015258789062
    4. ' _' → logprob: -14.500015258789062
    5. '_v' → logprob: -15.500015258789062
    6. '_values' → logprob: -15.625015258789062
    7. 'value' → logprob: -16.625015258789062
    8. ')' → logprob: -16.875015258789062
    9. ')_' → logprob: -17.125015258789062
    10. '_VALUE' → logprob: -17.750015258789062

Token 17: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004863342270255089
    2. '+' → logprob: -5.379863262176514
    3. ')])' → logprob: -8.629863739013672
    4. ' +' → logprob: -10.754863739013672
    5. ' )' → logprob: -10.879863739013672
    6. ')' → logprob: -11.504863739013672
    7. '])]' → logprob: -12.004863739013672
    8. '-' → logprob: -12.754863739013672
    9. ')],' → logprob: -13.754863739013672
    10. ']' → logprob: -13.754863739013672

Token 18: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014165629632771015
    2. ' ' → logprob: -4.26416540145874
    3. '2' → logprob: -13.264165878295898
    4. '   ' → logprob: -16.2641658782959
    5. '```' → logprob: -16.3891658782959
    6. ')' → logprob: -17.0141658782959
    7. '  ' → logprob: -17.3891658782959
    8. '+' → logprob: -17.5766658782959
    9. '`' → logprob: -18.0766658782959
    10. ' ' → logprob: -18.3891658782959

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002636006975080818
    2. ' ' → logprob: -8.250263214111328
    3. '2' → logprob: -13.125263214111328
    4. '10' → logprob: -16.750263214111328
    5. 'target' → logprob: -17.375263214111328
    6. '   ' → logprob: -17.812763214111328
    7. '100' → logprob: -17.937763214111328
    8. '5' → logprob: -18.187763214111328
    9. '3' → logprob: -18.562763214111328
    10. '  ' → logprob: -18.625263214111328

Token 20: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00018768629524856806
    2. ']' → logprob: -9.125187873840332
    3. '])]' → logprob: -9.750187873840332
    4. '])' → logprob: -11.500187873840332
    5. ')])' → logprob: -12.125187873840332
    6. ')' → logprob: -12.625187873840332
    7. '')]' → logprob: -14.750187873840332
    8. ')],' → logprob: -15.000187873840332
    9. ' ]' → logprob: -15.250187873840332
    10. ' )' → logprob: -15.500187873840332

Token 21: 'reachable' (ID: 101900)
  Prédit: 'reachable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.05785049498081207
    2. 'for' → logprob: -3.0578505992889404
    3. ' for' → logprob: -5.932850360870361
    4. '
' → logprob: -6.057850360870361
    5. ' reachable' → logprob: -6.057850360870361
    6. 'if' → logprob: -6.807850360870361
    7. '```' → logprob: -8.93285083770752
    8. ' 
' → logprob: -9.30785083770752
    9. '0' → logprob: -9.43285083770752
    10. 'target' → logprob: -9.55785083770752

Token 22: '_flags' (ID: 33898)
  Prédit: '_flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -3.070975071750581e-05
    2. '```' → logprob: -11.500030517578125
    3. '[_' → logprob: -12.000030517578125
    4. '_' → logprob: -12.500030517578125
    5. '[' → logprob: -12.625030517578125
    6. '_tags' → logprob: -13.125030517578125
    7. '_FLAGS' → logprob: -13.500030517578125
    8. '_f' → logprob: -13.875030517578125
    9. '_masks' → logprob: -14.750030517578125
    10. '_s' → logprob: -14.875030517578125

Token 23: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'target' → logprob: -17.875015258789062
    4. ')' → logprob: -18.250015258789062
    5. '```' → logprob: -19.000015258789062
    6. ']' → logprob: -19.125015258789062
    7. '1' → logprob: -19.500015258789062
    8. '۰' → logprob: -19.625015258789062
    9. '   ' → logprob: -20.187515258789062
    10. '[' → logprob: -20.937515258789062

Token 25: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011152983643114567
    2. ' ]' → logprob: -9.25011157989502
    3. ']=' → logprob: -11.37511157989502
    4. '=' → logprob: -12.50011157989502
    5. ' =' → logprob: -15.62511157989502
    6. ')' → logprob: -17.750110626220703
    7. '`]' → logprob: -18.125110626220703
    8. '']' → logprob: -18.500110626220703
    9. ']+=' → logprob: -18.875110626220703
    10. ']==' → logprob: -18.875110626220703

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141558349132538
    2. '=' → logprob: -1.7014155387878418
    3. '=True' → logprob: -13.951416015625
    4. ' ' → logprob: -14.701416015625
    5. ']' → logprob: -14.701416015625
    6. '<|end|>' → logprob: -16.201416015625
    7. ' |=' → logprob: -16.451416015625
    8. ' +=' → logprob: -16.576416015625
    9. ' ' → logprob: -16.701416015625
    10. '```' → logprob: -16.951416015625

Token 27: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. 'True' → logprob: -14.250066757202148
    4. ' True' → logprob: -16.25006675720215
    5. '0' → logprob: -19.25006675720215
    6. '   ' → logprob: -20.75006675720215
    7. '１' → logprob: -21.37506675720215
    8. ' ' → logprob: -21.50006675720215
    9. '  ' → logprob: -22.12506675720215
    10. '```' → logprob: -22.25006675720215

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. 'True' → logprob: -12.500003814697266
    3. ' ' → logprob: -16.000003814697266
    4. '0' → logprob: -16.875003814697266
    5. ' True' → logprob: -18.750003814697266
    6. '-' → logprob: -21.125003814697266
    7. '１' → logprob: -21.750003814697266
    8. '2' → logprob: -22.000003814697266
    9. '[' → logprob: -22.750003814697266
    10. '(True' → logprob: -22.750003814697266

Token 29: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34577566385269165
    2. ' for' → logprob: -2.220775604248047
    3. 'for' → logprob: -2.845775604248047
    4. '\n' → logprob: -2.970775604248047
    5. '' → logprob: -3.470775604248047
    6. ' ' → logprob: -4.220775604248047
    7. ' 
' → logprob: -4.595775604248047
    8. '+' → logprob: -5.470775604248047
    9. '\' → logprob: -6.220775604248047
    10. '.' → logprob: -6.595775604248047

Token 30: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1079079881310463
    2. ' for' → logprob: -2.732908010482788
    3. '
' → logprob: -3.982908010482788
    4. '\n' → logprob: -5.107907772064209
    5. 'f' → logprob: -5.982907772064209
    6. '=' → logprob: -6.107907772064209
    7. ':' → logprob: -6.607907772064209
    8. 'i' → logprob: -6.982907772064209
    9. '+' → logprob: -6.982907772064209
    10. '' → logprob: -7.357907772064209

Token 31: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.061012495309114456
    2. ' ' → logprob: -2.9360125064849854
    3. ' _' → logprob: -5.311012268066406
    4. ' value' → logprob: -7.436012268066406
    5. 'i' → logprob: -8.061012268066406
    6. '_' → logprob: -9.311012268066406
    7. ' num' → logprob: -9.436012268066406
    8. ' number' → logprob: -10.186012268066406
    9. ' target' → logprob: -11.186012268066406
    10. '  ' → logprob: -11.311012268066406

Token 32: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21803538501262665
    2. ' in' → logprob: -1.718035340309143
    3. ' _' → logprob: -4.7180352210998535
    4. '_value' → logprob: -5.2180352210998535
    5. ' ' → logprob: -6.8430352210998535
    6. 'in' → logprob: -7.2180352210998535
    7. '_in' → logprob: -8.843035697937012
    8. ' i' → logprob: -9.093035697937012
    9. '_val' → logprob: -11.468035697937012
    10. '_target' → logprob: -11.468035697937012

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023441247642040253
    2. 'in' → logprob: -3.7734413146972656
    3. ' ' → logprob: -8.648441314697266
    4. '	in' → logprob: -12.273441314697266
    5. '  ' → logprob: -13.023441314697266
    6. ' i' → logprob: -13.148441314697266
    7. '_in' → logprob: -13.398441314697266
    8. '_' → logprob: -13.398441314697266
    9. ',' → logprob: -13.773441314697266
    10. '<|end|>' → logprob: -14.023441314697266

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001974311424419284
    2. 'range' → logprob: -6.251974105834961
    3. ' ' → logprob: -10.001974105834961
    4. '	range' → logprob: -15.251974105834961
    5. '(range' → logprob: -16.00197410583496
    6. ' space' → logprob: -17.87697410583496
    7. ' ' → logprob: -18.12697410583496
    8. ' ranges' → logprob: -18.37697410583496
    9. ' xrange' → logprob: -18.50197410583496
    10. '_range' → logprob: -18.62697410583496

Token 35: '(target' (ID: 16247)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10031125694513321
    2. '(target' → logprob: -2.350311279296875
    3. '(current' → logprob: -9.600311279296875
    4. '(len' → logprob: -10.725311279296875
    5. ' (' → logprob: -11.225311279296875
    6. 'target' → logprob: -14.225311279296875
    7. '(
' → logprob: -15.850311279296875
    8. '(start' → logprob: -16.100311279296875
    9. '1' → logprob: -16.475311279296875
    10. '(re' → logprob: -16.725311279296875

Token 36: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.001036383560858667
    2. '_' → logprob: -7.001036167144775
    3. '_val' → logprob: -9.001036643981934
    4. '__' → logprob: -14.626036643981934
    5. '_v' → logprob: -14.751036643981934
    6. '_va' → logprob: -15.001036643981934
    7. ' _' → logprob: -15.876036643981934
    8. '_Value' → logprob: -16.001035690307617
    9. '_values' → logprob: -16.376035690307617
    10. '_VALUE' → logprob: -16.751035690307617

Token 37: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759415626525879
    2. ' +' → logprob: -0.8259415626525879
    3. ')' → logprob: -13.57594108581543
    4. ' +
' → logprob: -15.20094108581543
    5. ' ' → logprob: -15.57594108581543
    6. '1' → logprob: -16.32594108581543
    7. '+)' → logprob: -16.32594108581543
    8. '+
' → logprob: -16.95094108581543
    9. '):' → logprob: -17.32594108581543
    10. ' )' → logprob: -17.45094108581543

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12058211863040924
    2. ' if' → logprob: -2.995582103729248
    3. ' ' → logprob: -3.370582103729248
    4. ':' → logprob: -3.620582103729248
    5. ' :' → logprob: -7.620582103729248
    6. '    ' → logprob: -7.870582103729248
    7. '  ' → logprob: -8.120582580566406
    8. 'if' → logprob: -8.245582580566406
    9. '    
' → logprob: -8.370582580566406
    10. ',' → logprob: -8.745582580566406

Token 39: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18827670812606812
    2. '   ' → logprob: -1.938276767730713
    3. ' for' → logprob: -4.313276767730713
    4. ' ' → logprob: -4.438276767730713
    5. '    ' → logprob: -6.688276767730713
    6. 'if' (adapté à ' if') → logprob: -7.438276767730713
    7. '	if' → logprob: -8.563276290893555
    8. '  ' → logprob: -9.188276290893555
    9. '```' → logprob: -9.563276290893555
    10. 'for' → logprob: -9.813276290893555

Token 40: ' reachable' (ID: 143580)
  Prédit: ' reachable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reachable' → logprob: -0.033723849803209305
    2. 'reachable' → logprob: -3.408723831176758
    3. ' ' → logprob: -9.658723831176758
    4. ' reach' → logprob: -12.283723831176758
    5. ' ' → logprob: -12.658723831176758
    6. ' reached' → logprob: -13.033723831176758
    7. ' not' → logprob: -13.408723831176758
    8. 'reach' → logprob: -14.033723831176758
    9. ' space' → logprob: -14.783723831176758
    10. '  ' → logprob: -15.283723831176758

Token 41: '_flags' (ID: 33898)
  Prédit: '_flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -5.512236498361744e-07
    2. '_f' → logprob: -16.0
    3. '```' → logprob: -16.25
    4. 's' → logprob: -16.5
    5. '_' → logprob: -16.625
    6. '_FLAGS' → logprob: -16.75
    7. ' _' → logprob: -17.625
    8. '[_' → logprob: -18.375
    9. '_flag' → logprob: -18.625
    10. '_fl' → logprob: -18.75

Token 42: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.009765769354999065
    2. '[' → logprob: -4.634765625
    3. '[cur' → logprob: -12.384765625
    4. '[curr' → logprob: -13.259765625
    5. ' [' → logprob: -14.009765625
    6. '   ' → logprob: -14.259765625
    7. '[target' → logprob: -14.759765625
    8. '[next' → logprob: -14.759765625
    9. '[
' → logprob: -14.884765625
    10. '```' → logprob: -15.509765625

Token 43: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.007993297651410103
    2. '_s' → logprob: -4.882993221282959
    3. '_' → logprob: -8.007993698120117
    4. '_flags' → logprob: -10.882993698120117
    5. ' _' → logprob: -11.382993698120117
    6. '_value' → logprob: -11.757993698120117
    7. '```' → logprob: -12.257993698120117
    8. '__' → logprob: -13.007993698120117
    9. ']_' → logprob: -13.257993698120117
    10. 's' → logprob: -13.257993698120117

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8621155023574829
    2. '):' → logprob: -1.362115502357483
    3. '==' → logprob: -2.1121153831481934
    4. ']:' → logprob: -2.6121153831481934
    5. ')' → logprob: -2.9871153831481934
    6. ']==' → logprob: -3.3621153831481934
    7. ' ==' → logprob: -3.6121153831481934
    8. ' ]' → logprob: -5.237115383148193
    9. ':' → logprob: -5.487115383148193
    10. ' ):' → logprob: -5.987115383148193

Token 45: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2821311354637146
    2. ' ==' → logprob: -1.6571311950683594
    3. ':' → logprob: -2.9071311950683594
    4. '=' → logprob: -8.65713119506836
    5. ' ' → logprob: -9.28213119506836
    6. '>' → logprob: -10.28213119506836
    7. ' :' → logprob: -10.40713119506836
    8. ']==' → logprob: -10.40713119506836
    9. '   ' → logprob: -10.53213119506836
    10. '[' → logprob: -10.65713119506836

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47464635968208313
    2. ' ' → logprob: -0.9746463298797607
    3. '0' → logprob: -7.47464656829834
    4. ' ' → logprob: -13.59964656829834
    5. '  ' → logprob: -15.72464656829834
    6. '=' → logprob: -16.162145614624023
    7. '	' → logprob: -17.162145614624023
    8. '​' → logprob: -17.224645614624023
    9. ')' → logprob: -17.349645614624023
    10. '۱' → logprob: -17.412145614624023

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013409859500825405
    2. '0' → logprob: -4.3884100914001465
    3. ' ' → logprob: -7.0134100914001465
    4. ' ' → logprob: -17.138410568237305
    5. '１' → logprob: -17.700910568237305
    6. '  ' → logprob: -18.263410568237305
    7. '   ' → logprob: -18.638410568237305
    8. '```' → logprob: -18.638410568237305
    9. '	' → logprob: -18.763410568237305
    10. '=' → logprob: -18.763410568237305

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012324919225648046
    2. ' and' → logprob: -6.751232624053955
    3. '   ' → logprob: -10.626232147216797
    4. 'and' → logprob: -11.376232147216797
    5. ' :' → logprob: -11.501232147216797
    6. ':
' → logprob: -12.376232147216797
    7. ',' → logprob: -12.626232147216797
    8. ':**' → logprob: -12.751232147216797
    9. '):' → logprob: -13.001232147216797
    10. '       ' → logprob: -13.751232147216797

Token 49: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8975512981414795
    2. '       ' → logprob: -1.2725512981414795
    3. ':' → logprob: -1.7725512981414795
    4. ' ' → logprob: -2.7725512981414795
    5. '    ' → logprob: -3.2725512981414795
    6. ' :' → logprob: -3.6475512981414795
    7. '\' → logprob: -6.147551536560059
    8. '\t' → logprob: -6.147551536560059
    9. ' for' → logprob: -6.272551536560059
    10. '\n' → logprob: -6.272551536560059

Token 50: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08803363144397736
    2. '    ' → logprob: -3.338033676147461
    3. 'for' (adapté à ' for') → logprob: -3.838033676147461
    4. ' ' → logprob: -4.213033676147461
    5. '   ' → logprob: -4.463033676147461
    6. '       ' → logprob: -8.338033676147461
    7. '    
' → logprob: -9.588033676147461
    8. '	for' → logprob: -9.713033676147461
    9. ' ' → logprob: -9.963033676147461
    10. '     
' → logprob: -9.963033676147461

Token 51: ' add' (ID: 1147)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.0867589712142944
    2. 'next' → logprob: -1.2117589712142944
    3. 'num' → logprob: -2.461759090423584
    4. ' num' → logprob: -3.086759090423584
    5. ' number' → logprob: -3.336759090423584
    6. ' coin' → logprob: -3.586759090423584
    7. 'number' → logprob: -3.711759090423584
    8. 'step' → logprob: -3.711759090423584
    9. ' step' → logprob: -3.961759090423584
    10. 'value' → logprob: -4.211759090423584

Token 52: '_value' (ID: 6734)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.9888148903846741
    2. 'ed' → logprob: -1.3638148307800293
    3. '_value' → logprob: -1.7388148307800293
    4. '_' → logprob: -2.6138148307800293
    5. '_val' → logprob: -2.7388148307800293
    6. 'ing' → logprob: -3.6138148307800293
    7. '_num' → logprob: -4.863814830780029
    8. ' in' → logprob: -4.863814830780029
    9. 'itional' → logprob: -5.113814830780029
    10. 'ition' → logprob: -5.488814830780029

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01822451315820217
    2. 'in' → logprob: -4.018224716186523
    3. ' ' → logprob: -9.893224716186523
    4. '	in' → logprob: -11.893224716186523
    5. 's' → logprob: -12.018224716186523
    6. '  ' → logprob: -13.518224716186523
    7. '_in' → logprob: -13.643224716186523
    8. '```' → logprob: -13.768224716186523
    9. 'range' → logprob: -14.143224716186523
    10. '   ' → logprob: -14.268224716186523

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6449951529502869
    2. ' range' → logprob: -0.8949951529502869
    3. '[' → logprob: -2.7699952125549316
    4. ' [' → logprob: -5.644995212554932
    5. ' ' → logprob: -8.519994735717773
    6. '1' → logprob: -8.894994735717773
    7. '(range' → logprob: -9.269994735717773
    8. '(' → logprob: -10.269994735717773
    9. '	range' → logprob: -10.894994735717773
    10. ' (' → logprob: -12.019994735717773

Token 55: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000536232371814549
    2. '1' → logprob: -8.00053596496582
    3. '(current' → logprob: -8.87553596496582
    4. '(target' → logprob: -9.75053596496582
    5. ' (' → logprob: -13.37553596496582
    6. 'target' → logprob: -15.00053596496582
    7. ' ' → logprob: -15.75053596496582
    8. 'current' → logprob: -16.00053596496582
    9. '10' → logprob: -16.12553596496582
    10. '2' → logprob: -16.50053596496582

Token 56: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015522534027695656
    2. '(' → logprob: -4.515522480010986
    3. '6' → logprob: -6.515522480010986
    4. '10' → logprob: -6.765522480010986
    5. ' ' → logprob: -7.390522480010986
    6. 'target' → logprob: -8.015522956848145
    7. '3' → logprob: -8.890522956848145
    8. ')' → logprob: -9.015522956848145
    9. 'current' → logprob: -9.140522956848145
    10. '7' → logprob: -9.140522956848145

Token 57: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9295263886451721
    2. ',' → logprob: -1.4295263290405273
    3. '0' → logprob: -1.5545263290405273
    4. '1' → logprob: -2.9295263290405273
    5. ' +' → logprob: -3.1795263290405273
    6. '+' → logprob: -4.179526329040527
    7. ' ,' → logprob: -4.304526329040527
    8. '000' → logprob: -4.554526329040527
    9. '00' → logprob: -5.179526329040527
    10. '01' → logprob: -5.179526329040527

Token 58: ' ' (ID: 220)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.1322447508573532
    2. '100' → logprob: -3.007244825363159
    3. ' target' → logprob: -3.257244825363159
    4. ' ' → logprob: -4.63224458694458
    5. '101' → logprob: -5.38224458694458
    6. 'current' → logprob: -5.50724458694458
    7. '201' → logprob: -5.88224458694458
    8. '110' → logprob: -5.88224458694458
    9. '105' → logprob: -5.88224458694458
    10. '501' → logprob: -6.75724458694458

Token 59: '106' (ID: 13365)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.29191458225250244
    2. '100' → logprob: -2.166914463043213
    3. '0' → logprob: -3.541914463043213
    4. '201' → logprob: -3.791914463043213
    5. '101' → logprob: -4.166914463043213
    6. 'current' → logprob: -4.291914463043213
    7. '301' → logprob: -4.541914463043213
    8. 'min' → logprob: -4.791914463043213
    9. '501' → logprob: -4.916914463043213
    10. '105' → logprob: -5.291914463043213

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002032134449109435
    2. '+' → logprob: -7.502032279968262
    3. '):
' → logprob: -7.752032279968262
    4. ',' → logprob: -7.877032279968262
    5. ':' → logprob: -8.502032279968262
    6. ')' → logprob: -8.877032279968262
    7. '1' → logprob: -9.252032279968262
    8. '0' → logprob: -9.377032279968262
    9. '7' → logprob: -9.502032279968262
    10. ' ):' → logprob: -10.752032279968262

Token 61: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1524440348148346
    2. '       ' → logprob: -2.0274441242218018
    3. '        ' → logprob: -6.277443885803223
    4. '+' → logprob: -6.402443885803223
    5. ' ' → logprob: -6.402443885803223
    6. '               ' → logprob: -7.527443885803223
    7. ',' → logprob: -7.527443885803223
    8. '            
' → logprob: -7.527443885803223
    9. ' 
' → logprob: -7.652443885803223
    10. '<|end|>' → logprob: -7.902443885803223

Token 62: ' next' (ID: 2613)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24839283525943756
    2. '               ' → logprob: -1.8733928203582764
    3. '           ' → logprob: -2.9983928203582764
    4. ' ' → logprob: -5.2483930587768555
    5. '   ' → logprob: -5.7483930587768555
    6. 'if' → logprob: -5.8733930587768555
    7. ' new' → logprob: -6.7483930587768555
    8. '            ' → logprob: -6.7483930587768555
    9. ' ' → logprob: -7.4983930587768555
    10. '       ' → logprob: -7.6233930587768555

Token 63: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0038003118243068457
    2. '_value' → logprob: -5.753800392150879
    3. '_' → logprob: -7.753800392150879
    4. '_s' → logprob: -8.878800392150879
    5. '_val' → logprob: -10.503800392150879
    6. ' _' → logprob: -11.128800392150879
    7. '_step' → logprob: -12.628800392150879
    8. '_amount' → logprob: -13.503800392150879
    9. '_total' → logprob: -13.503800392150879
    10. '_add' → logprob: -13.878800392150879

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519303858280182
    2. '=' → logprob: -1.5019303560256958
    3. 's' → logprob: -14.126930236816406
    4. '>' → logprob: -15.876930236816406
    5. ' =
' → logprob: -15.876930236816406
    6. ']' → logprob: -16.501930236816406
    7. ')' → logprob: -16.751930236816406
    8. '```' → logprob: -16.876930236816406
    9. ' ' → logprob: -17.251930236816406
    10. '＝' → logprob: -17.376930236816406

Token 65: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3868769407272339
    2. 'current' → logprob: -1.1368769407272339
    3. '   ' → logprob: -12.761877059936523
    4. '	current' → logprob: -13.386877059936523
    5. ' ' → logprob: -14.636877059936523
    6. ' ' → logprob: -15.011877059936523
    7. '(current' → logprob: -15.636877059936523
    8. '           ' → logprob: -15.886877059936523
    9. 'urrent' → logprob: -16.136877059936523
    10. '```' → logprob: -16.636877059936523

Token 66: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.692145012086257e-05
    2. '_s' → logprob: -10.875046730041504
    3. '_' → logprob: -11.000046730041504
    4. '_value' → logprob: -11.625046730041504
    5. 'sum' → logprob: -14.375046730041504
    6. '_val' → logprob: -15.000046730041504
    7. ' _' → logprob: -15.000046730041504
    8. '+' → logprob: -15.000046730041504
    9. '__' → logprob: -15.625046730041504
    10. 's' → logprob: -15.750046730041504

Token 67: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693031132221222
    2. '+' → logprob: -2.1269302368164062
    3. ' plus' → logprob: -13.251930236816406
    4. ' ' → logprob: -15.251930236816406
    5. '＋' → logprob: -16.001930236816406
    6. ' +
' → logprob: -16.376930236816406
    7. ' ' → logprob: -17.626930236816406
    8. '<|end|>' → logprob: -18.501930236816406
    9. ' +
' → logprob: -18.626930236816406
    10. '    ' → logprob: -18.626930236816406

Token 68: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.008614808320999146
    2. ' add' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.758614540100098
    4. '           ' → logprob: -17.133615493774414
    5. ' ' → logprob: -17.633615493774414
    6. '	add' → logprob: -18.133615493774414
    7. 'ad' → logprob: -18.633615493774414
    8. '```' → logprob: -18.758615493774414
    9. '  ' → logprob: -19.508615493774414
    10. '(add' → logprob: -19.633615493774414

Token 69: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -12.250004768371582
    3. '_val' → logprob: -15.500004768371582
    4. '_Value' → logprob: -16.6250057220459
    5. '_VALUE' → logprob: -17.5000057220459
    6. '_values' → logprob: -17.8750057220459
    7. ' _' → logprob: -18.2500057220459
    8. 'value' → logprob: -18.8750057220459
    9. '_v' → logprob: -19.7500057220459
    10. 'alue' → logprob: -19.8750057220459

Token 70: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0044798469170928
    2. '<|end|>' → logprob: -5.754479885101318
    3. ' if' → logprob: -8.00447940826416
    4. '
' → logprob: -8.25447940826416
    5. '   ' → logprob: -8.75447940826416
    6. '               ' → logprob: -9.25447940826416
    7. '       ' → logprob: -9.25447940826416
    8. '            
' → logprob: -9.37947940826416
    9. '<|end|>' → logprob: -9.37947940826416
    10. '```' → logprob: -10.25447940826416

Token 72: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6631293892860413
    2. '           ' → logprob: -0.7881293892860413
    3. 'if' (adapté à ' if') → logprob: -3.5381293296813965
    4. '   ' → logprob: -8.413129806518555
    5. '               ' → logprob: -8.663129806518555
    6. '            
' → logprob: -8.788129806518555
    7. ' ' → logprob: -9.163129806518555
    8. '            ' → logprob: -9.288129806518555
    9. '       ' → logprob: -9.413129806518555
    10. ' 
' → logprob: -10.163129806518555

Token 73: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -7.97024549683556e-05
    2. 'next' → logprob: -9.500080108642578
    3. '(next' → logprob: -13.250080108642578
    4. ' ' → logprob: -14.125080108642578
    5. ' nex' → logprob: -14.125080108642578
    6. '	next' → logprob: -14.500080108642578
    7. '[next' → logprob: -14.500080108642578
    8. ' ' → logprob: -15.000080108642578
    9. '<|end|>' → logprob: -16.250080108642578
    10. '```' → logprob: -17.250080108642578

Token 74: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.906711546937004e-05
    2. '_s' → logprob: -10.500048637390137
    3. '_' → logprob: -10.875048637390137
    4. '__' → logprob: -13.875048637390137
    5. ' _' → logprob: -15.000048637390137
    6. '```' → logprob: -15.000048637390137
    7. 'sum' → logprob: -15.250048637390137
    8. '_next' → logprob: -16.500049591064453
    9. '_value' → logprob: -16.500049591064453
    10. '_SUM' → logprob: -16.750049591064453

Token 75: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0002205828350270167
    2. '<=' → logprob: -8.50022029876709
    3. ' ' → logprob: -11.62522029876709
    4. ' <' → logprob: -12.00022029876709
    5. '<|end|>' → logprob: -13.62522029876709
    6. ' ≤' → logprob: -15.87522029876709
    7. ' >' → logprob: -16.125221252441406
    8. ' ' → logprob: -16.125221252441406
    9. ' >=' → logprob: -16.250221252441406
    10. ')' → logprob: -16.500221252441406

Token 76: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.5759426951408386
    2. 'target' → logprob: -0.8259426951408386
    3. ' ' → logprob: -13.450942993164062
    4. '	target' → logprob: -14.075942993164062
    5. '   ' → logprob: -14.575942993164062
    6. '(target' → logprob: -15.950942993164062
    7. '[target' → logprob: -16.200942993164062
    8. ' ' → logprob: -16.200942993164062
    9. 't' → logprob: -16.700942993164062
    10. '<|end|>' → logprob: -16.700942993164062

Token 77: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.250000953674316
    3. '_val' → logprob: -17.0
    4. 'value' → logprob: -18.0
    5. 'alue' → logprob: -18.25
    6. '_VALUE' → logprob: -19.5
    7. '_Value' → logprob: -20.0
    8. '_values' → logprob: -20.25
    9. ' _' → logprob: -20.5
    10. '_va' → logprob: -20.75

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00173158326651901
    2. ':
' → logprob: -6.3767313957214355
    3. ' and' → logprob: -11.626731872558594
    4. '               ' → logprob: -12.001731872558594
    5. '           ' → logprob: -12.126731872558594
    6. '):' → logprob: -12.501731872558594
    7. ' :' → logprob: -13.751731872558594
    8. ':
' → logprob: -14.001731872558594
    9. ':

' → logprob: -14.251731872558594
    10. ',' → logprob: -14.251731872558594

Token 79: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005961624556221068
    2. '                
' → logprob: -8.250596046447754
    3. '           ' → logprob: -9.250596046447754
    4. '<|end|>' → logprob: -9.250596046447754
    5. '```' → logprob: -10.500596046447754
    6. '            
' → logprob: -10.625596046447754
    7. '                   ' → logprob: -11.000596046447754
    8. 'reachable' → logprob: -11.625596046447754
    9. ',' → logprob: -11.750596046447754
    10. '                ' → logprob: -11.750596046447754

Token 80: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' (adapté à ' reachable') → logprob: -0.015384236350655556
    2. '                   ' → logprob: -4.515384197235107
    3. ' reachable' → logprob: -5.515384197235107
    4. '               ' → logprob: -8.390384674072266
    5. '                       ' → logprob: -10.015384674072266
    6. '           ' → logprob: -11.515384674072266
    7. '   ' → logprob: -11.640384674072266
    8. 'reach' → logprob: -12.640384674072266
    9. '                    
' → logprob: -13.265384674072266
    10. '                           ' → logprob: -13.515384674072266

Token 81: '_flags' (ID: 33898)
  Prédit: '_flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.375000953674316
    3. '_FLAGS' → logprob: -16.5
    4. ' _' → logprob: -17.0
    5. '_tags' → logprob: -17.0
    6. '_' → logprob: -17.0
    7. '_f' → logprob: -17.375
    8. '_filters' → logprob: -18.25
    9. '_bits' → logprob: -18.5
    10. '\' → logprob: -18.625

Token 82: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -2.7729658540920354e-05
    2. '[' → logprob: -10.500027656555176
    3. ' [' → logprob: -17.250028610229492
    4. '```' → logprob: -17.375028610229492
    5. '[current' → logprob: -17.625028610229492
    6. '\[' → logprob: -18.125028610229492
    7. '[new' → logprob: -18.875028610229492
    8. '   ' → logprob: -19.125028610229492
    9. '[now' → logprob: -19.125028610229492
    10. '[n' → logprob: -19.750028610229492

Token 83: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.001919479575008154
    2. '_flags' → logprob: -6.376919269561768
    3. 'sum' → logprob: -8.751919746398926
    4. 'next' → logprob: -11.626919746398926
    5. '_value' → logprob: -11.626919746398926
    6. '```' → logprob: -12.001919746398926
    7. '[next' → logprob: -12.126919746398926
    8. '[' → logprob: -12.501919746398926
    9. 'flags' → logprob: -12.626919746398926
    10. '_s' → logprob: -12.876919746398926

Token 84: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006910379976034164
    2. '=' → logprob: -5.88191032409668
    3. ']=' → logprob: -6.38191032409668
    4. ' ]' → logprob: -6.50691032409668
    5. ' =' → logprob: -7.00691032409668
    6. '[' → logprob: -12.63191032409668
    7. ']==' → logprob: -13.63191032409668
    8. ')' → logprob: -13.75691032409668
    9. '               ' → logprob: -15.88191032409668
    10. '           ' → logprob: -15.88191032409668

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519305646419525
    2. ' =' → logprob: -1.501930594444275
    3. '[' → logprob: -14.126930236816406
    4. '=True' → logprob: -15.626930236816406
    5. ']' → logprob: -15.751930236816406
    6. ' ' → logprob: -16.626930236816406
    7. ']=' → logprob: -16.626930236816406
    8. '```' → logprob: -17.001930236816406
    9. '<|end|>' → logprob: -17.126930236816406
    10. '＝' → logprob: -17.251930236816406

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.625045776367188
    4. '１' → logprob: -18.875045776367188
    5. '۱' → logprob: -19.750045776367188
    6. '  ' → logprob: -19.875045776367188
    7. '```' → logprob: -20.125045776367188
    8. '' → logprob: -20.187545776367188
    9. ' ' → logprob: -20.312545776367188
    10. '१' → logprob: -20.750045776367188

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -21.125
    4. '１' → logprob: -22.0
    5. '  ' → logprob: -22.875
    6. '```' → logprob: -23.25
    7. '۱' → logprob: -23.25
    8. '१' → logprob: -24.0
    9. 'True' → logprob: -24.25
    10. '' → logprob: -24.375

Token 88: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4181789457798004
    2. 'if' → logprob: -1.918178915977478
    3. 'print' → logprob: -2.7931790351867676
    4. '<|end|>' → logprob: -2.9181790351867676
    5. '\n' → logprob: -3.2931790351867676
    6. '#' → logprob: -3.9181790351867676
    7. 'for' → logprob: -5.418179035186768
    8. ' if' → logprob: -5.918179035186768
    9. '' → logprob: -6.043179035186768
    10. '\' → logprob: -6.293179035186768

Token 89: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3876262307167053
    2. 'if' → logprob: -1.1376261711120605
    3. 'for' → logprob: -7.6376261711120605
    4. 'result' → logprob: -9.262626647949219
    5. ' if' → logprob: -9.637626647949219
    6. '```' → logprob: -10.012626647949219
    7. '
' → logprob: -11.387626647949219
    8. ' print' → logprob: -11.387626647949219
    9. '                
' → logprob: -11.762626647949219
    10. '#' → logprob: -11.887626647949219

Token 90: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10227333754301071
    2. '(re' → logprob: -2.3522732257843018
    3. '("("' → logprob: -6.977273464202881
    4. '('' → logprob: -7.227273464202881
    5. '(target' → logprob: -7.977273464202881
    6. '(sum' → logprob: -10.227272987365723
    7. '((' → logprob: -11.727272987365723
    8. '()' → logprob: -12.852272987365723
    9. '(range' → logprob: -13.227272987365723
    10. '(`' → logprob: -13.602272987365723

Token 91: 'achable' (ID: 82461)
  Prédit: 'achable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achable' → logprob: -0.0008093867218121886
    2. 'ach' → logprob: -7.125809192657471
    3. 'reachable' → logprob: -12.625809669494629
    4. 'acha' → logprob: -14.750809669494629
    5. 'nable' → logprob: -14.875809669494629
    6. 'ache' → logprob: -15.000809669494629
    7. 'actable' → logprob: -15.875809669494629
    8. 'ad' → logprob: -16.000808715820312
    9. 'ac' → logprob: -16.000808715820312
    10. 'able' → logprob: -16.125808715820312

Token 92: '_flags' (ID: 33898)
  Prédit: '_flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -0.000283265660982579
    2. '_' → logprob: -8.750283241271973
    3. '_f' → logprob: -10.000283241271973
    4. 'able' → logprob: -10.125283241271973
    5. '_value' → logprob: -11.250283241271973
    6. '_values' → logprob: -11.750283241271973
    7. '_flag' → logprob: -12.375283241271973
    8. 's' → logprob: -12.875283241271973
    9. '```' → logprob: -13.375283241271973
    10. '_s' → logprob: -13.750283241271973

Token 93: '[target' (ID: 123448)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026401029899716377
    2. '[target' → logprob: -6.002640247344971
    3. '[' → logprob: -9.127639770507812
    4. '])' → logprob: -11.127639770507812
    5. ')`' → logprob: -11.627639770507812
    6. '))' → logprob: -11.752639770507812
    7. '[-' → logprob: -11.752639770507812
    8. '`)' → logprob: -12.377639770507812
    9. ' )' → logprob: -12.877639770507812
    10. ')
' → logprob: -13.002639770507812

Token 94: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.512236498361744e-07
    2. '_val' → logprob: -14.875000953674316
    3. '_' → logprob: -15.625000953674316
    4. ' _' → logprob: -18.375
    5. '_v' → logprob: -18.875
    6. '_va' → logprob: -18.875
    7. '_values' → logprob: -21.25
    8. 'value' → logprob: -21.5
    9. '_VALUE' → logprob: -21.75
    10. '\' → logprob: -22.0

Token 95: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005268145352602005
    2. '])' → logprob: -5.255268096923828
    3. '))' → logprob: -10.505268096923828
    4. '})' → logprob: -13.130268096923828
    5. ']' → logprob: -13.255268096923828
    6. ' )' → logprob: -13.380268096923828
    7. ')]' → logprob: -14.005268096923828
    8. '）' → logprob: -15.130268096923828
    9. ')])' → logprob: -15.380268096923828
    10. '>)' → logprob: -15.880268096923828


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 93
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 55.91%
Précision adaptée (1ère position): 56.99%
Précision (top 10): 81.72%
================================================================================
